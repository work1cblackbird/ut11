
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбработатьПереданныеПараметры(Отказ);
	УправлениеЭлементамиФормы();
	СтандартныеПодсистемыСервер.СброситьРазмерыИПоложениеОкна(ЭтотОбъект);
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИнформацияСостояниеЗагрузкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПартию" Тогда
		ПоказатьЗначение(, Партия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПАТОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПАТ" Тогда
		
		ПоказатьЗначение(, ПАТ);
	
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЗагрузитьПАТ" Тогда
		
		ОповещениеПослеВопроса = Новый ОписаниеОповещения("ПослеЗагрузкиПАТ", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Загрузить владельца партии?'");
		
		ПоказатьВопрос(ОповещениеПослеВопроса, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеРодительскойПартииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьРодительскуюПартию" Тогда
		
		ПараметрыРодительскойПартии = СтатусЗагрузкиИдентификаторПартии(РодительскаяПартия);
		
		Если ПараметрыРодительскойПартии.Загружена Тогда
			ПоказатьЗначение(, РодительскаяПартия);
		Иначе
			
			ПараметрыОткрытия = Новый Структура("Идентификатор", ПараметрыРодительскойПартии.Идентификатор);
			ОткрытьФорму("Справочник.ПартииСАТУРН.Форма.ДанныеКлассификатора", ПараметрыОткрытия, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		КонецЕсли;
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЗагрузитьРодительскуюПартию" Тогда
		
		ОповещениеПослеВопроса = Новый ОписаниеОповещения("ПослеЗагрузкиРодительскойПартии", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Загрузить родительскую партию?'");
		
		ПоказатьВопрос(ОповещениеПослеВопроса, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
	Иначе
		Возврат;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Загрузить(Команда)
	
	ЗагрузкаПартии();
	
	Если ЗначениеЗаполнено(Партия) Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Загрузка из классификатора'");
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Выполнена загрузка партии %1.'"), Партия);
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32ГосИС);
		
		ПараметрОповещения = Партия;
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(Партия, ПараметрОповещения);
		
		Закрыть(Партия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьРодительскуюПартию(Команда)
	
	ЗагрузитьРодительскуюПартиюНаСервере();
	
	Если ЗначениеЗаполнено(РодительскаяПартия) Тогда
		
		ПараметрОповещения = РодительскаяПартия;
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(РодительскаяПартия, ПараметрОповещения);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузкаПартии()
	
	Если ЗначениеЗаполнено(АдресХраненияПараметрыОбмена) Тогда
		ПараметрыОбмена = ПолучитьИзВременногоХранилища(АдресХраненияПараметрыОбмена);
	Иначе
		ПараметрыОбмена = Неопределено;
	КонецЕсли;
	
	Партия = ИнтеграцияСАТУРН.ЗагрузитьПартию(ДанныеПартии,, ПараметрыОбмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗагрузкиПАТ(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьПАТНаСервере();
	
	Если ЗначениеЗаполнено(ПАТ) Тогда
		
		ПараметрОповещения = ПАТ;
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(ПАТ, ПараметрОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗагрузкиРодительскойПартии(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьРодительскуюПартиюНаСервере();
	
	Если ЗначениеЗаполнено(РодительскаяПартия) Тогда
		
		ПараметрОповещения = РодительскаяПартия;
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(РодительскаяПартия, ПараметрОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПАТНаСервере()
	
	Если ДанныеПАТ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПАТ = ИнтеграцияСАТУРН.ЗагрузитьПАТ(ДанныеПАТ);
	
	УстановитьОтображениеПАТ();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРодительскуюПартиюНаСервере()
	
	Результат = ИнтерфейсСАТУРНВызовСервера.ПартияПоИдентификатору(ИдентификаторРодительскойПартии);
	
	Если Не ПустаяСтрока(Результат.ТекстОшибки) Тогда
		
		ЕстьОшибка  = Истина;
		ТекстОшибки = ТекстОшибкиПолученияДанных(Результат.ТекстОшибки);
		
	Иначе
	
		ДанныеРодительскойПартии = ИнтерфейсСАТУРН.ДанныеПартии(Результат.Элемент);
		РодительскаяПартия = ИнтеграцияСАТУРН.ЗагрузитьПартию(ДанныеРодительскойПартии);
	
	КонецЕсли;
	
	УстановитьОтображениеРодительскойПартии();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры(Отказ)

	Если Не ЗначениеЗаполнено(Параметры.Идентификатор) Тогда
		ВызватьИсключение НСтр("ru = 'Форма не предназначена для открытия без передачи в неё идентификатора партии.'");
	Иначе
		
		Идентификатор = Параметры.Идентификатор;
		НеПоказыватьСостояниеЗагрузки = Параметры.НеПоказыватьСостояниеЗагрузки;
		Результат = ИнтерфейсСАТУРНВызовСервера.ПартияПоИдентификатору(Идентификатор);
		
		Если Не ПустаяСтрока(Результат.ТекстОшибки) Тогда
			
			ЕстьОшибка  = Истина;
			
			Строки = Новый Массив;
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
				НСтр("ru = 'Ошибка:'")));
			Строки.Добавить(" ");
			Строки.Добавить(Новый ФорматированнаяСтрока(Результат.ТекстОшибки,, ЦветаСтиля.ЦветТекстаПроблемаГосИС));

			ТекстОшибки = Новый ФорматированнаяСтрока(Строки);
			Элементы.ФормаЗагрузить.Доступность = Ложь;
			
		Иначе
			
			ЕстьОшибка  = Ложь;
			ДанныеПартии = ИнтерфейсСАТУРН.ДанныеПартии(Результат.Элемент);
			АдресХраненияПараметрыОбмена = ПоместитьВоВременноеХранилище(Результат.ПараметрыОбмена, УникальныйИдентификатор);
			
			ЗаполнитьДанныеПартии(ДанныеПартии);
			Элементы.ФормаЗагрузить.Доступность = Истина;
			
			Если ДанныеПартии.Свойство("ДанныеПАТ")
				И ТипЗнч(ДанныеПартии.ДанныеПАТ) = Тип("Структура") Тогда
				
				ДанныеПАТ = ИнтерфейсСАТУРН.ДанныеПАТ(ДанныеПартии.ДанныеПАТ);
				
			КонецЕсли;
			
			Если ДанныеПартии.Свойство("ДанныеРодительскойПартии")
				И ТипЗнч(ДанныеПартии.ДанныеРодительскойПартии) = Тип("Структура") Тогда
				
				ДанныеРодительскойПартии = ИнтерфейсСАТУРН.ДанныеПартии(ДанныеПартии.ДанныеРодительскойПартии);
				
			КонецЕсли;
			
			ОпределитьНаличиеВИБ();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьНаличиеВИБ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Партия.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПартииСАТУРН КАК Партия
	|ГДЕ
	|	Партия.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Партия = Выборка.Ссылка;
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru = 'Партия уже загружена'"));
		Строки.Добавить(" (");
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'открыть'"),, ЦветаСтиля.ЦветГиперссылкиГосИС,, "ОткрытьПартию"));
		Строки.Добавить(").");
		
		ИнформацияСостояниеЗагрузки = Новый ФорматированнаяСтрока(Строки);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторПАТСАТУРН.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторПАТСАТУРН КАК КлассификаторПАТСАТУРН
	|ГДЕ
	|	КлассификаторПАТСАТУРН.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", ИдентификаторПАТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		ПАТ = Выборка.Ссылка;

	КонецЕсли;
	
	УстановитьОтображениеПАТ();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Партия.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПартииСАТУРН КАК Партия
	|ГДЕ
	|	Партия.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", ИдентификаторРодительскойПартии);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		РодительскаяПартия = Выборка.Ссылка;

	КонецЕсли;
	
	УстановитьОтображениеРодительскойПартии();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПартии(ДанныеПартии)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеПартии);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтатусЗагрузкиИдентификаторПартии(Партия)
	
	СтруктураВозврата = Новый Структура("Загружена, Идентификатор", Ложь, "");
	РеквизитыПартии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Партия, "ТребуетсяЗагрузка, Идентификатор");
	
	СтруктураВозврата.Загружена     = Не РеквизитыПартии.ТребуетсяЗагрузка;
	СтруктураВозврата.Идентификатор = РеквизитыПартии.Идентификатор;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Процедура УстановитьОтображениеПАТ()
	
	Если ЗначениеЗаполнено(ПАТ) Тогда
		
		ОписаниеПАТ = Новый ФорматированнаяСтрока(
			Строка(ПАТ),,,,
			"ОткрытьПАТ");
		
	ИначеЕсли ЗначениеЗаполнено(ИдентификаторПАТ)
		И (ДанныеПАТ = Неопределено Или
			Не ЗначениеЗаполнено(ДанныеПАТ.Наименование)) Тогда
		
		ОписаниеПАТ = Новый ФорматированнаяСтрока(
			НСтр("ru = '<не загружено>'"),,
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"ЗагрузитьПАТ");
			
	ИначеЕсли ЗначениеЗаполнено(ИдентификаторПАТ)
		И ЗначениеЗаполнено(ДанныеПАТ.Наименование) Тогда
		
		ОписаниеПАТ = Новый ФорматированнаяСтрока(
			ДанныеПАТ.Наименование,,
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"ЗагрузитьПАТ");
		
	Иначе
		
		ОписаниеПАТ = Новый ФорматированнаяСтрока(
			НСтр("ru = '<не указан>'"),,
			ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеРодительскойПартии()
	
	Если ЗначениеЗаполнено(РодительскаяПартия) Тогда
		
		ОписаниеРодительскойПартии = Новый ФорматированнаяСтрока(
			Строка(РодительскаяПартия),,,,
			"ОткрытьРодительскуюПартию");
		
	ИначеЕсли ЗначениеЗаполнено(ИдентификаторРодительскойПартии)
		И (ДанныеРодительскойПартии = Неопределено Или
			Не ЗначениеЗаполнено(ДанныеРодительскойПартии.Наименование)) Тогда
		
		ОписаниеРодительскойПартии = Новый ФорматированнаяСтрока(
			НСтр("ru = '<не загружено>'"),,
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"ЗагрузитьРодительскуюПартию");
			
	ИначеЕсли ЗначениеЗаполнено(ИдентификаторРодительскойПартии)
		И ЗначениеЗаполнено(ДанныеРодительскойПартии.Наименование) Тогда
		
		ОписаниеРодительскойПартии = Новый ФорматированнаяСтрока(
			ДанныеРодительскойПартии.Наименование,,
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"ЗагрузитьРодительскуюПартию");
		
	Иначе
		
		ОписаниеРодительскойПартии = Новый ФорматированнаяСтрока(
			НСтр("ru = '<не указан>'"),,
			ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если ЕстьОшибка Тогда
		
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОшибка;
		Элементы.ФормаОтмена.Видимость         = Ложь;
		Элементы.ФормаЗакрыть.Видимость        = Истина;
		Элементы.ФормаЗагрузить.Видимость      = Истина;
		
	Иначе

		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаДанныеКлассификатора;
		
		Если ЗначениеЗаполнено(Партия) Тогда
			
			Если НеПоказыватьСостояниеЗагрузки Тогда
				Элементы.ИнформацияСостояниеЗагрузки.Видимость = Ложь;
			КонецЕсли;
			
			Элементы.ФормаОтмена.Видимость    = Ложь;
			Элементы.ФормаЗакрыть.Видимость   = Истина;
			Элементы.ФормаЗагрузить.Видимость = Ложь;
			
		Иначе
			
			Элементы.ИнформацияСостояниеЗагрузки.Видимость = Ложь;
			
			Элементы.ФормаОтмена.Видимость    = Истина;
			Элементы.ФормаЗакрыть.Видимость   = Ложь;
			Элементы.ФормаЗагрузить.Видимость = Истина;
			
		КонецЕсли;
		
		Элементы.ЗагрузитьРодительскуюПартию.Видимость = ЗначениеЗаполнено(ИдентификаторРодительскойПартии);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ТекстОшибкиПолученияДанных(ТекстОшибки)
	
	Строки = Новый Массив;
	Строки.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'Ошибка:'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(ТекстОшибки,, ЦветаСтиля.ЦветТекстаПроблемаГосИС));
	
	Возврат Новый ФорматированнаяСтрока(Строки);
	
КонецФункции

#КонецОбласти
