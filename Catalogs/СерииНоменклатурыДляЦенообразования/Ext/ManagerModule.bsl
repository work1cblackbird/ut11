
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает серию для ценообразования
// 
// Параметры:
//  РеквизитыДляПоиска - Структура - Данные для поиска
//  НастройкиИспользованияСерий - Структура - Настройки использования серий:
// * Ошибка - Булево -
// * ОписаниеОшибки - Строка -
// * УказыватьПриПоступлении - Булево -
// * УказыватьПриОтгрузке - Булево -
// * УказыватьПриПланированииОтгрузки - Булево -// 
// Возвращаемое значение:
//  СправочникСсылка.СерииНоменклатурыДляЦенообразования - Ссылка на Серию для ценообразования
Функция ПолучитьСериюНоменклатурыДляЦенообразования(РеквизитыДляПоиска) Экспорт

	Если РеквизитыДляПоиска.ПроизвестиПоискХСО Тогда
		СерияЦенообразования = НайтиСериюЦОПоНаборуРеквизитов(РеквизитыДляПоиска);
		
		Если СерияЦенообразования <> Неопределено Тогда
			Если Не РеквизитыДляПоиска.СсылкаОдинКОдному 
				Или РеквизитыДляПоиска.ТекущаяСерияЦО.Пустая() Тогда
			
				Возврат СерияЦенообразования;
				
			КонецЕсли;
		Иначе
			СерияЦенообразования = ПустаяСсылка();
		КонецЕсли;
	Иначе
		СерияЦенообразования = РеквизитыДляПоиска.ТекущаяСерияЦО;
	КонецЕсли;

	ОбновитьРеквизиты(СерияЦенообразования, РеквизитыДляПоиска);
	
	Возврат СерияЦенообразования;

КонецФункции

// Функция возвращает наименования реквизитов по которым возможен контроль
// 
// Возвращаемое значение:
// 	Массив - Наименования реквизитов по которым возможен контроль
Функция ПолучитьНаборРеквизитовДляКонтроля() Экспорт

	МассивНаименованийРеквизитов  = Новый Массив();
	МассивНаименованийРеквизитов.Добавить("ГоденДо");
	МассивНаименованийРеквизитов.Добавить("ВидНоменклатуры");
	МассивНаименованийРеквизитов.Добавить("Номер");
	МассивНаименованийРеквизитов.Добавить("ДатаПроизводства");
	МассивНаименованийРеквизитов.Добавить("НомерКиЗГИСМ");
	МассивНаименованийРеквизитов.Добавить("ПроизводительЕГАИС");
	МассивНаименованийРеквизитов.Добавить("Справка2ЕГАИС");
	МассивНаименованийРеквизитов.Добавить("ПроизводительВЕТИС");
	МассивНаименованийРеквизитов.Добавить("ЗаписьСкладскогоЖурналаВЕТИС");
	МассивНаименованийРеквизитов.Добавить("ИдентификаторПартииВЕТИС");
	МассивНаименованийРеквизитов.Добавить("МаксимальнаяРозничнаяЦенаМОТП");
	
	Возврат МассивНаименованийРеквизитов;
	
КонецФункции

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Функция НайтиСериюЦОПоНаборуРеквизитов(РеквизитыДляПоиска)

	Если РеквизитыДляПоиска.СсылкаОдинКОдному И Не РеквизитыДляПоиска.ТекущаяСерияЦО.Пустая() Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		|	СерииНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.СерияНоменклатурыДляЦенообразования = &ТекущаяСерияЦО
		|	И СерииНоменклатуры.Ссылка <> &ТекущаяСерия";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		
		Запрос.УстановитьПараметр("ТекущаяСерияЦО", РеквизитыДляПоиска.ТекущаяСерияЦО);
		Запрос.УстановитьПараметр("ТекущаяСерия", РеквизитыДляПоиска.ТекущаяСерия);
		
		РезультатПроверки = Запрос.Выполнить();
		Если РезультатПроверки.Пустой() Тогда
			Возврат РеквизитыДляПоиска.ТекущаяСерияЦО;
		КонецЕсли;
	КонецЕсли;
	
	РеквизитыДляКлючаЦен = РеквизитыДляПоиска.РеквизитыДляКлючаЦен;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидНоменклатуры", РеквизитыДляПоиска.ВидНоменклатуры);
	
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	СерииНоменклатурыЦО.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СерииНоменклатурыЦО
	|ИЗ
	|	Справочник.СерииНоменклатурыДляЦенообразования КАК СерииНоменклатурыЦО
	|	,&УсловиеОдинКОдному
	|ГДЕ
	|	СерииНоменклатурыЦО.ВидНоменклатуры = &ВидНоменклатуры
	|	И СерииНоменклатурыЦО.КоличествоРеквизитов = &КоличествоРеквизитов
	|	И &УсловияПоРеквизитамХСО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыЦО.Ссылка КАК СерияНоменклатурыЦО
	|ИЗ
	|	СерииНоменклатурыЦО КАК СерииНоменклатурыЦО
	|	,&СоединенияПоДопРеквизитамХСО
	|ГДЕ
	|	&УсловияПоДопРеквизитамХСО
	|";
	
	ИмяТаблицы = "ТаблицаСерийЦО";
	
	СчетчикУсловийПоРеквизитам = 0;
	СчетчикУсловийПоДопРеквизитам = 0;
	
	УсловияПоРеквизитамХСО = Новый Массив();
	УсловияПоДопРеквизитамХСО = Новый Массив();
	СоединенияПоДопРеквизитамХСО = Новый Массив();
	// Генерируем текст условия запроса по дополнительным реквизитам, устанавливаем параметры.
	Для Каждого СтрокаУсловия Из РеквизитыДляКлючаЦен Цикл
		
		Если СтрокаУсловия.ЭтоДопРеквизит Тогда
			СтрокаСчетчикУсловийПоДопРеквизитам = Формат(СчетчикУсловийПоДопРеквизитам,"ЧГ=0");
	
			ИмяТаблицыСУсловием = ИмяТаблицы + "СУсловиемПоДопРеквизиту_" + СтрокаСчетчикУсловийПоДопРеквизитам;
			
			ТекстЗамены = "
			|" + ИмяТаблицыСУсловием + ".Свойство = &СвойствоДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам;
			УсловияПоДопРеквизитамХСО.Добавить(ТекстЗамены);

			ТекстЗамены = "
			|" + ИмяТаблицыСУсловием + ".Значение = &ЗначениеДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам;
			УсловияПоДопРеквизитамХСО.Добавить(ТекстЗамены);

			Запрос.УстановитьПараметр("СвойствоДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам, СтрокаУсловия.Свойство);
			Запрос.УстановитьПараметр("ЗначениеДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам, СтрокаУсловия.Значение);
			
			ТекстЗамены = "
			| ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатурыДляЦенообразования.ДополнительныеРеквизитыЦенообразования КАК " + ИмяТаблицыСУсловием + "
			| ПО СерииНоменклатурыЦО.Ссылка = " + ИмяТаблицыСУсловием + ".Ссылка";
			
			СоединенияПоДопРеквизитамХСО.Добавить(ТекстЗамены);
			
			СчетчикУсловийПоДопРеквизитам = СчетчикУсловийПоДопРеквизитам + 1;
		Иначе
			
			УсловияПоРеквизитамХСО.Добавить(СтрШаблон("СерииНоменклатурыЦО.%1 = &Значение_%1", СтрокаУсловия.ИмяРеквизита));
			Запрос.УстановитьПараметр("Значение_" + СтрокаУсловия.ИмяРеквизита, СтрокаУсловия.Значение);
			СчетчикУсловийПоРеквизитам = СчетчикУсловийПоРеквизитам + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РеквизитыДляПоиска.СсылкаОдинКОдному Тогда
		ТекстЗамены = "
		|ПРАВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|	ПО СерииНоменклатурыЦО.Ссылка = СерииНоменклатуры.СерияНоменклатурыДляЦенообразования";

		УсловияПоРеквизитамХСО.Добавить("СерииНоменклатуры.Ссылка ЕСТЬ NULL");
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, ",&УсловиеОдинКОдному", ТекстЗамены);
	Иначе
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, ",&УсловиеОдинКОдному", "");
	КонецЕсли;

	Если УсловияПоРеквизитамХСО.Количество() > 0 Тогда
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&УсловияПоРеквизитамХСО", 
															СтрСоединить(УсловияПоРеквизитамХСО, " И " + Символы.ПС));
	Иначе
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&УсловияПоРеквизитамХСО", "Истина");
	КонецЕсли;
	
	Если СчетчикУсловийПоДопРеквизитам > 0 Тогда
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, ",&СоединенияПоДопРеквизитамХСО", 
															СтрСоединить(СоединенияПоДопРеквизитамХСО));
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&УсловияПоДопРеквизитамХСО", 
															СтрСоединить(УсловияПоДопРеквизитамХСО, " И "));
	Иначе
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, ",&СоединенияПоДопРеквизитамХСО", "");
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&УсловияПоДопРеквизитамХСО", "ИСТИНА");
	КонецЕсли;
	
	Если СчетчикУсловийПоРеквизитам = 0
		И СчетчикУсловийПоДопРеквизитам  = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос.Текст = ШаблонЗапроса;
	
	Запрос.УстановитьПараметр("КоличествоРеквизитов", (СчетчикУсловийПоРеквизитам + СчетчикУсловийПоДопРеквизитам));
	
	СерииЦО = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СерияНоменклатурыЦО");
	
	Если СерииЦО.Количество() > 0 Тогда
		Возврат СерииЦО[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Обновить реквизиты.
// 
// Параметры:
//  СерияЦенообразования - СправочникСсылка.СерииНоменклатурыДляЦенообразования - Серия ценообразования
//  РеквизитыДляПоиска - Структура - Реквизиты для поиска
Функция ОбновитьРеквизиты(СерияЦенообразования, РеквизитыДляПоиска)

	ОперацияВыполнена = Истина;

	УстановитьПривилегированныйРежим(Истина);

	МассивДляФормированияНаименования = Новый Массив();
	
	Если СерияЦенообразования.Пустая() Тогда
		СпрОбъект = СоздатьЭлемент();
	Иначе
		СпрОбъект = СерияЦенообразования.ПолучитьОбъект();
		СпрОбъект.ДополнительныеРеквизитыЦенообразования.Очистить();
	КонецЕсли;

	СпрОбъект.ВидНоменклатуры = РеквизитыДляПоиска.ВидНоменклатуры;

	Для Каждого Строка Из РеквизитыДляПоиска.РеквизитыДляКлючаЦен Цикл
		Если Строка.ЭтоДопРеквизит Тогда
			НоваяСтрокаДополнительныхРеквизитов = СпрОбъект.ДополнительныеРеквизитыЦенообразования.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДополнительныхРеквизитов, Строка);
		Иначе
			СпрОбъект[Строка.ИмяРеквизита] = Строка.Значение;
		КонецЕсли;
		
		МассивДляФормированияНаименования.Добавить(Строка.Значение);
	КонецЦикла;
	
	Если ПустаяСтрока(СпрОбъект.Наименование) Тогда
		СпрОбъект.Наименование = СтрСоединить(МассивДляФормированияНаименования, ", ");
	КонецЕсли;
	
	СпрОбъект.КоличествоРеквизитов = РеквизитыДляПоиска.РеквизитыДляКлючаЦен.Количество();
	
	Попытка
		СпрОбъект.Записать();
	Исключение
		ОперацияВыполнена = Ложь;
	КонецПопытки;
	
	СерияЦенообразования = СпрОбъект.Ссылка;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ОперацияВыполнена;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли