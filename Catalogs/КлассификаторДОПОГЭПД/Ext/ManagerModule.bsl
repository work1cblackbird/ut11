#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Функция ТаблицаКлассификатораДОПОГ() Экспорт
	
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	
	Макет = Справочники.КлассификаторДОПОГЭПД.ПолучитьМакет("КлассификаторДОПОГ");
	Список = Макет.Области.Найти("Строки");
	
	Если Список.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
		// Заполнение дерева данными списка.
		ВерхОбласти = Список.Верх;
		НизОбласти = Список.Низ;
		
		НомерКолонки = 1;
		Область = Макет.Область(ВерхОбласти - 1, НомерКолонки);
		ИмяКолонки = Область.Текст;
		
		Пока ЗначениеЗаполнено(ИмяКолонки) Цикл
			
			Если ИмяКолонки = "Код" Тогда
				ТаблицаПоказателей.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(12)));
			ИначеЕсли ИмяКолонки = "НаименованиеИНаписание" Тогда
				ТаблицаПоказателей.Колонки.Добавить("НаименованиеИНаписание", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(250)));
				
			ИначеЕсли ИмяКолонки = "Класс" Тогда
				ТаблицаПоказателей.Колонки.Добавить("Класс", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
			ИначеЕсли ИмяКолонки = "КлассификационныйКод" Тогда
				ТаблицаПоказателей.Колонки.Добавить("КлассификационныйКод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "ГруппаУпаковки" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ГруппаУпаковки", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "ЗнакОпасности" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ЗнакОпасности", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "СпециальныеПоложения" Тогда
				ТаблицаПоказателей.Колонки.Добавить("СпециальныеПоложения", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
			ИначеЕсли ИмяКолонки = "ОграниченноеКоличество" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ОграниченноеКоличество", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "ОграниченноеКоличествоКод" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ОграниченноеКоличествоКод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "ИнструкцияПоУпаковке" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ИнструкцияПоУпаковке", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
			ИначеЕсли ИмяКолонки = "СпециальныеПоложенияПоУпаковке" Тогда
				ТаблицаПоказателей.Колонки.Добавить("СпециальныеПоложенияПоУпаковке", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
			ИначеЕсли ИмяКолонки = "ПоложенияПоСовместнойУпаковке" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ПоложенияПоСовместнойУпаковке", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
			ИначеЕсли ИмяКолонки = "ПереноснаяЦистернаИнструкции" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ПереноснаяЦистернаИнструкции", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
			ИначеЕсли ИмяКолонки = "ПереноснаяЦистернаСпециальныеПоложения" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ПереноснаяЦистернаСпециальныеПоложения", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
			ИначеЕсли ИмяКолонки = "ЦистернаДОПОГКод" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ЦистернаДОПОГКод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "ЦистернаДОПОГСпециальныеПоложения" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ЦистернаДОПОГСпециальныеПоложения", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
			ИначеЕсли ИмяКолонки = "ТранспортноеСредствоДляПеревозкиВЦистернах" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ТранспортноеСредствоДляПеревозкиВЦистернах", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "КодОграниченияПроездаЧерезТуннели" Тогда
				ТаблицаПоказателей.Колонки.Добавить("КодОграниченияПроездаЧерезТуннели", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "СпециальныеПоложенияПоПеревозкеУпаковки" Тогда
				ТаблицаПоказателей.Колонки.Добавить("СпециальныеПоложенияПоПеревозкеУпаковки", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "СпециальныеПоложенияПоПеревозкеНавалом" Тогда
				ТаблицаПоказателей.Колонки.Добавить("СпециальныеПоложенияПоПеревозкеНавалом", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "СпециальныеПоложенияПоПогрузкеРазгрузке" Тогда
				ТаблицаПоказателей.Колонки.Добавить("СпециальныеПоложенияПоПогрузкеРазгрузке", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "СпециальныеПоложенияПоЭксплуатации" Тогда
				ТаблицаПоказателей.Колонки.Добавить("СпециальныеПоложенияПоЭксплуатации", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
			ИначеЕсли ИмяКолонки = "ИдентификационныйНомерОпасности" Тогда
				ТаблицаПоказателей.Колонки.Добавить("ИдентификационныйНомерОпасности", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
				
			КонецЕсли;
			
			НомерКолонки = НомерКолонки + 1;
			Область = Макет.Область(ВерхОбласти - 1, НомерКолонки);
			ИмяКолонки = Область.Текст;
			
		КонецЦикла;
		
		Для НомСтр = ВерхОбласти По НизОбласти Цикл
			// Отображаем только элементы
			
			Код = СокрП(Макет.Область(НомСтр, 1).Текст);
			Если ЗначениеЗаполнено(Код) = Ложь Тогда
				Продолжить;
			КонецЕсли;
			СтрокаСписка = ТаблицаПоказателей.Добавить();
			
			Для Каждого Колонка Из ТаблицаПоказателей.Колонки Цикл
				
				ЗначениеКолонки = СокрП(Макет.Область(НомСтр, ТаблицаПоказателей.Колонки.Индекс(Колонка) + 1).Текст);
				СтрокаСписка[Колонка.Имя] = ЗначениеКолонки;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаПоказателей.Сортировать(ТаблицаПоказателей.Колонки[0].Имя + " Возр");
	
	Возврат ТаблицаПоказателей;
	
КонецФункции

#КонецЕсли