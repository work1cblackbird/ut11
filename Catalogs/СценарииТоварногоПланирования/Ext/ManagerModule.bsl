#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП
//	Возвращаемое значение:
//		Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("Валюта");
	Результат.Добавить("Периодичность");
	Результат.Добавить("ПланЗакупокПланироватьПоСумме;ПланЗакупокПланировать");
	Результат.Добавить("ПланПродажПланироватьПоСумме;ПланПродажПланировать");
	Результат.Добавить("ПланированиеПоНазначениям");
	Результат.Добавить("ИспользоватьРасчетПоСкоростиПродаж");
	Результат.Добавить("ИспользоватьДляПланированияМатериалов");
	Результат.Добавить("Календарь");
	Результат.Добавить("СпособРасчетаПотребностейВМатериалах");
	Результат.Добавить("УправлениеПроцессомПланирования");
	
	
	Возврат Результат;

КонецФункции

// Список статусов планов по сценарию
//
// Параметры:
//  Сценарий - СправочникСсылка.СценарииТоварногоПланирования	 - Сценарий по которому необходимо получать данные.
// 
// Возвращаемое значение:
//  СписокЗначений - Список статусов планов, которые разрешено получать.
//
Функция СписокСтатусовПланов(Сценарий) Экспорт 
	
	СписокСтатусов = Новый СписокЗначений;
	СписокСтатусов.Добавить(Перечисления.СтатусыПланов.НаУтверждении);
	СписокСтатусов.Добавить(Перечисления.СтатусыПланов.Утвержден);
	
	Возврат СписокСтатусов;

КонецФункции 

// Возвращает календарь работы, используемый для расчета дат запуска продукции и полуфабрикатов, а так же сроков потребностей в  материалах, видах РЦ и трудовых ресурсах
//
// Параметры:
//  Сценарий - СправочникСсылка.СценарииТоварногоПланирования	 - Сценарий по которому необходимо получать данные.
// 
// Возвращаемое значение:
//  СправочникСсылка.Календари - календарь
//
Функция Календарь(Сценарий) Экспорт
	
	Если ЗначениеЗаполнено(Сценарий) Тогда
		Календарь = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сценарий, "Календарь");
		Если Не ЗначениеЗаполнено(Календарь) Тогда
			Календарь = Константы.ОсновнойКалендарьПредприятия.Получить();
		КонецЕсли;
	Иначе
		Календарь = Константы.ОсновнойКалендарьПредприятия.Получить();
	КонецЕсли;
	
	Возврат Календарь;
	
КонецФункции

// Проверяет, используется ли расчет потребности в материалах, видах РЦ и трудовых ресурсах для выбранного сценария
//
// Параметры:
//  Сценарий - СправочникСсылка.СценарииТоварногоПланирования	 - Сценарий по которому необходимо получать данные.
// 
// Возвращаемое значение:
//  Булево - Истина, если используется расчет потребностей в материалах, видах РЦ и трудовых ресурсах
//
Функция ИспользоватьДляПланированияМатериалов(Сценарий) Экспорт
	
	Если Не ЗначениеЗаполнено(Сценарий) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	Справочник.СценарииТоварногоПланирования КАК СценарииТоварногоПланирования
	|ГДЕ
	|	СценарииТоварногоПланирования.Ссылка = &Сценарий
	|	И СценарииТоварногоПланирования.ИспользоватьДляПланированияМатериалов
	|");
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


#КонецОбласти

#КонецОбласти

#КонецЕсли
