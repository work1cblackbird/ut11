#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Организация");
	Поля.Добавить("Подразделение");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеПредставления = Новый Массив();
	
	Если ЗначениеЗаполнено(Данные.Организация) Тогда
		ДанныеПредставления.Добавить(Строка(Данные.Организация));
	Иначе
		ДанныеПредставления.Добавить(НСтр("ru = '<для всех организаций>'"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Данные.Подразделение) Тогда
		ДанныеПредставления.Добавить(Строка(Данные.Подразделение));
	КонецЕсли;
	
	Представление = СтрСоединить(ДанныеПредставления, ", ");
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает настройки текущего пользователя для подписания сообщений.
// 
// Возвращаемое значение:
//  см. ИнтеграцияЗЕРНОСлужебныйКлиентСервер.НастройкиОтветственногоЗаПодписаниеСообщений
//
Функция НастройкиОтветственногоЗаПодписаниеСообщений() Экспорт
	
	Настройки                 = ИнтеграцияЗЕРНОСлужебныйКлиентСервер.НастройкиОтветственногоЗаПодписаниеСообщений();
	ИспользоватьПодразделение = ОбщегоНазначенияИС.ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ответственный", Пользователи.АвторизованныйПользователь());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Ответственные.Ссылка.Организация       КАК Организация,
	|	Ответственные.Ссылка.Подразделение     КАК Подразделение,
	|	МИНИМУМ(Ответственные.ВремяВСекундах)  КАК ВремяВСекундах
	|ИЗ
	|	Справочник.ОтветственныеЗаПодписаниеСообщенийЗЕРНО.Ответственные КАК Ответственные
	|ГДЕ
	|	Ответственные.Ответственный = &Ответственный
	|	И НЕ Ответственные.Ссылка.ПометкаУдаления
	|СГРУППИРОВАТЬ ПО
	|	Ответственные.Ссылка.Организация,
	|	Ответственные.Ссылка.Подразделение";
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ТаблицаДанных.Количество() = 0 Тогда
		Возврат Настройки;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		
		Настройки.ЯвляетсяОтветственным = Истина;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Организация) Тогда
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.Подразделение) И ИспользоватьПодразделение Тогда
				
				ДанныеПодразделений = Настройки.ОрганизацииИПодразделения[СтрокаТаблицы.Организация];
				Если ДанныеПодразделений = Неопределено Тогда
					ДанныеПодразделений = Новый Соответствие();
					Настройки.ОрганизацииИПодразделения[СтрокаТаблицы.Организация] = ДанныеПодразделений;
				КонецЕсли;
				
				ДанныеПодразделений[СтрокаТаблицы.Подразделение] = СтрокаТаблицы.ВремяВСекундах;
				
			Иначе
				
				Настройки.ОрганизацииПоВсемПодразделениям[СтрокаТаблицы.Организация] = СтрокаТаблицы.ВремяВСекундах;
				
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(СтрокаТаблицы.Подразделение) И ИспользоватьПодразделение Тогда
			
			Настройки.ПодразделенияПоВсемОрганизациям[СтрокаТаблицы.Подразделение] = СтрокаТаблицы.ВремяВСекундах;
			
		Иначе
			
			Настройки.ВсеОрганизацииВсеПодразделения = СтрокаТаблицы.ВремяВСекундах;
			
		КонецЕсли;
		
	КонецЦикла;

	Возврат Настройки;
	
КонецФункции

#КонецОбласти

#КонецЕсли
