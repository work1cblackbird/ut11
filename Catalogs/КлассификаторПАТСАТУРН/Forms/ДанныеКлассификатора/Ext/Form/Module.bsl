
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбработатьПереданныеПараметры(Отказ);
	УправлениеЭлементамиФормы();
	СтандартныеПодсистемыСервер.СброситьРазмерыИПоложениеОкна(ЭтотОбъект);
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИнформацияСостояниеЗагрузкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПАТ" Тогда
		ПоказатьЗначение(, ПАТ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводительОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПроизводителяПАТ" Тогда
		ПоказатьЗначение(, Производитель);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЗагрузитьПроизводителяПАТ" Тогда
		
		ОповещениеПослеВопроса = Новый ОписаниеОповещения("ПослеЗагрузкиПроизводителяПАТ", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Загрузить производителя ПАТ?'");
		
		ПоказатьВопрос(ОповещениеПослеВопроса, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоставТукосмеси

&НаКлиенте
Процедура СоставТукосмесиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СоставТукосмеси.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ПА) Тогда
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("ИдентификаторСтроки", ТекущиеДанные.ПолучитьИдентификатор());
		ДополнительныеПараметры.Вставить("ИмяРеквизита",        "СоставТукосмеси");
		ОповещениеПослеВопроса  = Новый ОписаниеОповещения("ПослеЗагрузкиСоставляющихПАТ", ЭтотОбъект, ДополнительныеПараметры);
		
		ТекстВопроса = НСтр("ru = 'Загрузить элемент состава тукосмеси?'");
		
		ПоказатьВопрос(ОповещениеПослеВопроса, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		
		ПоказатьЗначение(, ТекущиеДанные.ПА);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоставКомбипака

&НаКлиенте
Процедура СоставКомбипакаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СоставКомбипака.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ПА) Тогда
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("ИдентификаторСтроки", ТекущиеДанные.ПолучитьИдентификатор());
		ДополнительныеПараметры.Вставить("ИмяРеквизита",        "СоставКомбипака");
		ОповещениеПослеВопроса  = Новый ОписаниеОповещения("ПослеЗагрузкиСоставляющихПАТ", ЭтотОбъект, ДополнительныеПараметры);
		
		ТекстВопроса = НСтр("ru = 'Загрузить элемент состава комбипака?'");
		
		ПоказатьВопрос(ОповещениеПослеВопроса, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		
		ПоказатьЗначение(, ТекущиеДанные.ПА);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Загрузить(Команда)
	
	ЗагрузкаПАТ();
	
	Если ЗначениеЗаполнено(ПАТ) Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Загрузка из классификатора'");
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Выполнена загрузка ПАТ %1.'"), ПАТ);
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32ГосИС);
		
		ПараметрОповещения = ПАТ;
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(ПАТ, ПараметрОповещения);

		Закрыть(ПАТ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузкаПАТ()
	
	Если ЗначениеЗаполнено(АдресХраненияПараметрыОбмена) Тогда
		ПараметрыОбмена = ПолучитьИзВременногоХранилища(АдресХраненияПараметрыОбмена);
	Иначе
		ПараметрыОбмена = Неопределено;
	КонецЕсли;
	
	ПАТ = ИнтеграцияСАТУРН.ЗагрузитьПАТ(ДанныеПАТ,, ПараметрыОбмена);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры(Отказ)

	Если Не ЗначениеЗаполнено(Параметры.Идентификатор) Тогда
		ВызватьИсключение НСтр("ru = 'Форма не предназначена для открытия без передачи в неё идентификатора ПАТ.'");
	Иначе
		
		Идентификатор = Параметры.Идентификатор;
		НеПоказыватьСостояниеЗагрузки = Параметры.НеПоказыватьСостояниеЗагрузки;
		РезультатВыполненияЗапроса = ИнтерфейсСАТУРНВызовСервера.ПАТПоИдентификатору(Идентификатор);
		
		Если Не ПустаяСтрока(РезультатВыполненияЗапроса.ТекстОшибки) Тогда
			
			ЕстьОшибка  = Истина;
			Строки = Новый Массив;
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
				НСтр("ru = 'Ошибка:'")));
			Строки.Добавить(" ");
			Строки.Добавить(Новый ФорматированнаяСтрока(РезультатВыполненияЗапроса.ТекстОшибки,, ЦветаСтиля.ЦветТекстаПроблемаГосИС));

			ТекстОшибки = Новый ФорматированнаяСтрока(Строки);
			Элементы.ФормаЗагрузить.Доступность = Ложь;
			
		Иначе
			
			ЕстьОшибка  = Ложь;
			ДанныеПАТ = ИнтерфейсСАТУРН.ДанныеПАТ(РезультатВыполненияЗапроса.Элемент);
			АдресХраненияПараметрыОбмена = ПоместитьВоВременноеХранилище(РезультатВыполненияЗапроса.ПараметрыОбмена, УникальныйИдентификатор);
			
			ЗаполнитьДанныеПАТ(ДанныеПАТ);
			Элементы.ФормаЗагрузить.Доступность = Истина;
			
			Если ДанныеПАТ.Свойство("ДанныеПроизводителя")
				И ТипЗнч(ДанныеПАТ.ДанныеПроизводителя) = Тип("Структура") Тогда
				
				ДанныеПроизводителя = ИнтерфейсСАТУРН.ДанныеОрганизации(ДанныеПАТ.ДанныеПроизводителя);
				
			КонецЕсли;
			
			ОпределитьНаличиеВИБ();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьНаличиеВИБ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторПАТСАТУРН.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторПАТСАТУРН КАК КлассификаторПАТСАТУРН
	|ГДЕ
	|	КлассификаторПАТСАТУРН.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ПАТ = Выборка.Ссылка;
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru = 'ПАТ уже загружен'"));
		Строки.Добавить(" (");
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'открыть'"),, ЦветаСтиля.ЦветГиперссылкиГосИС,, "ОткрытьПАТ"));
		Строки.Добавить(").");
		
		ИнформацияСостояниеЗагрузки = Новый ФорматированнаяСтрока(Строки);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторОрганизацийСАТУРН.Ссылка       КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийСАТУРН КАК КлассификаторОрганизацийСАТУРН
	|ГДЕ
	|	КлассификаторОрганизацийСАТУРН.Идентификатор = &Идентификатор
	|	И КлассификаторОрганизацийСАТУРН.Идентификатор <> """"";
	
	Запрос.УстановитьПараметр("Идентификатор", ИдентификаторПроизводителя);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Производитель = Выборка.Ссылка;
	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторПАТСАТУРН.Ссылка        КАК Ссылка,
	|	КлассификаторПАТСАТУРН.Идентификатор КАК Идентификатор,
	|	КлассификаторПАТСАТУРН.Наименование  КАК Наименование
	|ИЗ
	|	Справочник.КлассификаторПАТСАТУРН КАК КлассификаторПАТСАТУРН
	|ГДЕ
	|	КлассификаторПАТСАТУРН.Идентификатор В (&МассивИдентификаторов)
	|	И КлассификаторПАТСАТУРН.Идентификатор <> """"";
	
	МассивИдентификаторов          = ОбщегоНазначения.ВыгрузитьКолонку(СоставТукосмеси, "ИдентификаторПА", Истина);
	МассивИдентификаторовКомбипака = ОбщегоНазначения.ВыгрузитьКолонку(СоставКомбипака, "ИдентификаторПА", Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивИдентификаторов, МассивИдентификаторовКомбипака);
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("ИдентификаторПА", Выборка.Идентификатор);
		СтрокиВСоставе = СоставТукосмеси.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаВСоставе Из СтрокиВСоставе Цикл
			
			СтрокаВСоставе.ПА               = Выборка.Ссылка;
			СтрокаВСоставе.ПредставлениеПА  = Выборка.Наименование;
			СтрокаВСоставе.ИндексКартинки   = 1;
			
		КонецЦикла;
		
		СтрокиВСоставе = СоставКомбипака.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаВСоставе Из СтрокиВСоставе Цикл
			
			СтрокаВСоставе.ПА               = Выборка.Ссылка;
			СтрокаВСоставе.ПредставлениеПА  = Выборка.Наименование;
			СтрокаВСоставе.ИндексКартинки   = 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	СтруктураПоиска = Новый Структура("ПА", ПредопределенноеЗначение("Справочник.КлассификаторПАТСАТУРН.ПустаяСсылка"));
	СтрокиСНезаполненнымиПА = СоставТукосмеси.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрокаСНезаполненнымиПА Из СтрокиСНезаполненнымиПА Цикл
		
		СтрокаСНезаполненнымиПА.ПредставлениеПА = НСтр("ru = '<не загружено>'");
		
	КонецЦикла;
	
	СтрокиСНезаполненнымиПА = СоставКомбипака.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрокаСНезаполненнымиПА Из СтрокиСНезаполненнымиПА Цикл
		
		СтрокаСНезаполненнымиПА.ПредставлениеПА = НСтр("ru = '<не загружено>'");
		
	КонецЦикла;
	
	УстановитьОтображениеПроизводителя();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПАТ(ДанныеПАТ)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеПАТ,, "СоставТукосмеси,СоставКомбипака");
	СоставТукосмеси.Очистить();
	
	Для Каждого ЭлементСоставаТукосмеси Из ДанныеПАТ.СоставТукосмеси Цикл
		
		НоваяСтрокаСостава = СоставТукосмеси.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСостава, ЭлементСоставаТукосмеси);
		
	КонецЦикла;
	
	Для Каждого ЭлементСоставаТукосмеси Из ДанныеПАТ.СоставКомбипака Цикл
		
		НоваяСтрокаСостава = СоставКомбипака.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСостава, ЭлементСоставаТукосмеси);
		
	КонецЦикла;
	
	Если ВидПродукции = Перечисления.ВидыПродукцииСАТУРН.Тукосмесь
		Или ВидПродукции = Перечисления.ВидыПродукцииСАТУРН.Комбипак Тогда
		
		Элементы.СтраницыПоВидуПродукции.ТекущаяСтраница = Элементы.СтраницаТукосмесь;
	
	Иначе
		
		Элементы.СтраницыПоВидуПродукции.ТекущаяСтраница = Элементы.СтраницаАгрохимикатПестицид;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗагрузкиПроизводителяПАТ(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьПроизводителяПАТНаСервере();
	
	Если ЗначениеЗаполнено(Производитель) Тогда
		
		ПараметрОповещения = Производитель;
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(Производитель, ПараметрОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗагрузкиСоставляющихПАТ(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		Или Не ДополнительныеПараметры.Свойство("ИдентификаторСтроки") Тогда
		Возврат;
	КонецЕсли;
	
	ПА = ЗагрузитьПАТИзСостава(ДополнительныеПараметры.ИдентификаторСтроки, ДополнительныеПараметры.ИмяРеквизита);
	
	Если ЗначениеЗаполнено(ПА) Тогда
		
		ПараметрОповещения = ПА;
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(ПА, ПараметрОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеПроизводителя()
	
	Если ЗначениеЗаполнено(Производитель) Тогда
		
		ОписаниеПроизводителя = Новый ФорматированнаяСтрока(
			Строка(Производитель),,,,
			"ОткрытьПроизводителяПАТ");
		
	ИначеЕсли ЗначениеЗаполнено(ИдентификаторПроизводителя)
		И (ДанныеПроизводителя = Неопределено Или
			Не ЗначениеЗаполнено(ДанныеПроизводителя.Наименование)) Тогда
		
		ОписаниеПроизводителя = Новый ФорматированнаяСтрока(
			НСтр("ru = '<не загружено>'"),,
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"ЗагрузитьПроизводителяПАТ");
			
	ИначеЕсли ЗначениеЗаполнено(ИдентификаторПроизводителя)
		И ЗначениеЗаполнено(ДанныеПроизводителя.Наименование) Тогда
		
		ОписаниеПроизводителя = Новый ФорматированнаяСтрока(
			ДанныеПроизводителя.Наименование,,
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"ЗагрузитьПроизводителяПАТ");
		
	Иначе
		
		ОписаниеПроизводителя = Новый ФорматированнаяСтрока(
			НСтр("ru = '<не указан>'"),,
			ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПроизводителяПАТНаСервере()
	
	Если ДанныеПроизводителя = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Производитель = ИнтеграцияСАТУРН.ЗагрузитьОрганизацию(ДанныеПроизводителя);
	
	УстановитьОтображениеПроизводителя();
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьПАТИзСостава(ИдентификаторСтроки, ИмяРеквизита)
	
	ДанныеСтроки = ЭтотОбъект[ИмяРеквизита].Получить(ИдентификаторСтроки);
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеПА = Справочники.КлассификаторПАТСАТУРН.ДанныеОбъекта(ДанныеСтроки.ДанныеПА);
	ПА       = ИнтеграцияСАТУРН.ЗагрузитьПАТ(ДанныеПА);
	
	ДанныеСтроки.ПА              = ПА;
	ДанныеСтроки.ПредставлениеПА = Строка(ПА);
	ДанныеСтроки.ИндексКартинки  = 1;
	
	Возврат ПА;
	
КонецФункции

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если ЕстьОшибка Тогда
		
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОшибка;
		Элементы.ФормаОтмена.Видимость         = Ложь;
		Элементы.ФормаЗакрыть.Видимость        = Истина;
		Элементы.ФормаЗагрузить.Видимость      = Истина;
		
	Иначе
		
		ЭтоКомбипак = (ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииСАТУРН.Комбипак"));
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаДанныеКлассификатора;
		
		Если ЗначениеЗаполнено(ПАТ) Тогда
			
			Если НеПоказыватьСостояниеЗагрузки Тогда
				Элементы.ИнформацияСостояниеЗагрузки.Видимость = Ложь;
			КонецЕсли;
			
			Элементы.ФормаОтмена.Видимость    = Ложь;
			Элементы.ФормаЗакрыть.Видимость   = Истина;
			Элементы.ФормаЗагрузить.Видимость = Ложь;
			
		Иначе
			
			Элементы.ИнформацияСостояниеЗагрузки.Видимость = Ложь;
			
			Элементы.ФормаОтмена.Видимость    = Истина;
			Элементы.ФормаЗакрыть.Видимость   = Ложь;
			Элементы.ФормаЗагрузить.Видимость = Истина;
			
		КонецЕсли;
		
		Элементы.СоставКомбипака.Видимость = ЭтоКомбипак;
		Элементы.Производитель.Видимость   = (Не ЭтоКомбипак);
		Элементы.СоставТукосмеси.Видимость = (Не ЭтоКомбипак);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
