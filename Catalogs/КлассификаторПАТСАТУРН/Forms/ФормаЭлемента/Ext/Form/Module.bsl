
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

	УправлениеЭлементамиФормы(ЭтотОбъект);
	СтандартныеПодсистемыСервер.СброситьРазмерыИПоложениеОкна(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьИнформациюОСопоставлении();
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_КлассификаторПАТСАТУРН"
		И Параметр = Объект.Ссылка Тогда
		
		Прочитать();
		
	ИначеЕсли ИмяСобытия = "Запись_СоответствиеНомеклатурыСАТУРН"
		И ТипЗнч(Параметр) = Тип("Структура")
		И Параметр.Свойство("ПАТ")
		И Параметр.ПАТ = Объект.Ссылка Тогда
		
		ОбновитьИнформациюОСопоставлении();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрОповещения = Объект.Ссылка;
	ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(Объект.Ссылка, ПараметрОповещения);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидПродукцииПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОКПД2ПриИзменении(Элемент)
	
	СобытияФормСАТУРНКлиент.ПриИзмененииОКПД2(ЭтотОбъект, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ОКПД2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СобытияФормСАТУРНКлиент.ПриНачалеВыбораОКПД2(ЭтотОбъект, Элемент, ДанныеВыбора, Объект.ОКПД2, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОКПД2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СобытияФормСАТУРНКлиент.ПриОбработкеВыбораОКПД2(ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОКПД2АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СобытияФормСАТУРНКлиент.ПриАвтоподбореОКПД2(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылкиФормы(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьСоответствиеНоменклатурыСАТУРН" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтруктураОтбора = Новый Структура("ПАТ", Объект.Ссылка);
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
		
		ОткрытьФорму("РегистрСведений.СоответствиеНоменклатурыСАТУРН.Форма.ФормаСписка", ПараметрыФормы, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоставТукосмеси

&НаКлиенте
Процедура СоставТукосмесиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СоставТукосмеси.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ПА) Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.ПА);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоставКомбипака

&НаКлиенте
Процедура СоставКомбипакаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СоставКомбипака.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ПА) Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.ПА);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьИзСервиса(Команда)
	
	ПараметрОповещения = ЗагрузитьПАТНаСервере();
	
	Если ЗначениеЗаполнено(ПараметрОповещения) Тогда
		
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(Объект.Ссылка, ПараметрОповещения);
		Закрыть();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	
	ПараметрыФормыИзменения = Новый Структура;
	ПараметрыФормыИзменения.Вставить("ПАТ", Объект.Ссылка);
	
	ОткрытьФорму("Справочник.КлассификаторПАТСАТУРН.Форма.ПомощникСоздания", ПараметрыФормыИзменения);

КонецПроцедуры

&НаКлиенте
Процедура ДанныеСАТУРН(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Идентификатор",                 Объект.Идентификатор);
	ПараметрыФормы.Вставить("НеПоказыватьСостояниеЗагрузки", Истина);
	
	ОткрытьФорму(
		"Справочник.КлассификаторПАТСАТУРН.Форма.ДанныеКлассификатора",
		ПараметрыФормы, ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьИнформациюОСопоставлении()
	
	Запрос = Новый Запрос();
	Запрос.Текст = Справочники.КлассификаторПАТСАТУРН.ТекстЗапросаИнформацияОСопоставлении();
	Запрос.УстановитьПараметр("ПАТ", Объект.Ссылка);
	
	ШрифтВажнойНадписи = Новый Шрифт(,,,,Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Если Выборка.Количество = 1 И ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			
			Сопоставлено = Новый ФорматированнаяСтрока(
				ОбщегоНазначенияИС.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
				ШрифтВажнойНадписи,
				ЦветаСтиля.ЦветГиперссылкиГосИС,,
				"ОткрытьСоответствиеНоменклатурыСАТУРН");
			
		ИначеЕсли Выборка.Количество > 1 И ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			
			Сопоставлено = Новый ФорматированнаяСтрока(
				СтрШаблон(НСтр("ru = '%1 ( + еще %2...)'"), Выборка.НоменклатураПредставление, Выборка.Количество - 1),
				ШрифтВажнойНадписи,
				ЦветаСтиля.ЦветГиперссылкиГосИС,,
				"ОткрытьСоответствиеНоменклатурыСАТУРН");
			
		Иначе
			
			Сопоставлено = Новый ФорматированнаяСтрока(
				НСтр("ru = '<Не сопоставлено>'"),
				ШрифтВажнойНадписи,
				ЦветаСтиля.СтатусОбработкиОшибкаПередачиГосИС,,
				"ОткрытьСоответствиеНоменклатурыСАТУРН");
			
		КонецЕсли;
	Иначе
		Элементы.Сопоставлено.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьПАТНаСервере()
	
	Результат = ИнтерфейсСАТУРНВызовСервера.ПАТПоИдентификатору(Объект.Идентификатор);
		
	Если Не ПустаяСтрока(Результат.ТекстОшибки) Тогда
		
		ВызватьИсключение Результат.ТекстОшибки;
		
	Иначе
		
		ДанныеПАТ = ИнтерфейсСАТУРН.ДанныеПАТ(Результат.Элемент);
		ПАТ = ИнтеграцияСАТУРН.ЗагрузитьПАТ(ДанныеПАТ,, Результат.ПараметрыОбмена); 

	КонецЕсли;
	
	Возврат ПАТ;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиФормы(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ЭтоТукосмесь   = Объект.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииСАТУРН.Тукосмесь");
	ЭтоПестицид    = Объект.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииСАТУРН.Пестицид");
	ЭтоКомбипак    = Объект.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииСАТУРН.Комбипак");
	
	Если ЭтоТукосмесь Или ЭтоКомбипак Тогда
		Элементы.СтраницыПоВидуПродукции.ТекущаяСтраница = Элементы.СтраницаТукосмесь;
	Иначе
		Элементы.СтраницыПоВидуПродукции.ТекущаяСтраница = Элементы.СтраницаАгрохимикатПестицид;
		Элементы.КлассОпасности.Видимость                = ЭтоПестицид;
	КонецЕсли;
	
	Элементы.ФормаИзменить.Видимость          = ЗначениеЗаполнено(Объект.Идентификатор);
	Элементы.ФормаОбновитьИзСервиса.Видимость = ЗначениеЗаполнено(Объект.Идентификатор);
	Элементы.ФормаДанныеСАТУРН.Видимость      = ЗначениеЗаполнено(Объект.Идентификатор);
	
	Элементы.ТребуетсяЗагрузка.Видимость      = Объект.ТребуетсяЗагрузка;
	Элементы.СоставКомбипака.Видимость        = ЭтоКомбипак;
	Элементы.Производитель.Видимость          = (Не ЭтоКомбипак);
	Элементы.СоставТукосмеси.Видимость        = (Не ЭтоКомбипак);
	
КонецПроцедуры

#КонецОбласти