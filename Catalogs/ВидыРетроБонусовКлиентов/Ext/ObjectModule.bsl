//@strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Статус = Перечисления.СтатусыВидовРетроБонусов.Подготовлен;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НачалоДействия)
	   И ЗначениеЗаполнено(ОкончаниеДействия)
	   И ОкончаниеДействия < НачалоДействия Тогда
		
		ТекстСообщения = НСтр("ru = 'Дата окончания действия вида ретро-бонуса должна быть не меньше даты начала действия'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ОкончаниеДействия",, Отказ);
		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив; // Массив Из Строка
	
	Если ПоказательПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов.НеИспользуется Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПериодичностьУсловий");
		МассивНепроверяемыхРеквизитов.Добавить("ПорядокРаспределения");
	
	ИначеЕсли ПоказательПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов.КоличествоСовокупно Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПорядокРаспределения");
		
	КонецЕсли;
	
	Если БезРасчета Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПериодичностьУсловий");
		МассивНепроверяемыхРеквизитов.Добавить("ПорядокРаспределения");
		МассивНепроверяемыхРеквизитов.Добавить("БазаРасчетаПродаж");
		МассивНепроверяемыхРеквизитов.Добавить("СоставТоваров");
		МассивНепроверяемыхРеквизитов.Добавить("ОтборТоваров");
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	КонтрольИзмененийРеквизитов(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		
		ТекстСообщения = НСтр("ru = 'Запрещено изменение справочника в подчиненном узле обмена'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если (ПоказательПродаж <> ПоказателиПродаж.НеИспользуется
		  И ПоказательПродаж <> ПоказателиПродаж.Сумма) Тогда
		
		СоставТоваров = Перечисления.СоставыТоваровРетроБонусов.Номенклатура;
		ОтборТоваров = Перечисления.СоставыСписковРетроБонусов.Выбранные;
		
	КонецЕсли;
	
	Если ПоказательПродаж = ПоказателиПродаж.НеИспользуется Тогда
		
		ПериодичностьУсловий = Перечисления.ПериодичностиРетроБонусов.ПустаяСсылка();
		ПорядокРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов.ПустаяСсылка();
		
	ИначеЕсли ПоказательПродаж = ПоказателиПродаж.КоличествоСовокупно Тогда
		
		ПорядокРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов.ПустаяСсылка();
		
	КонецЕсли;
	
	Если БезРасчета Тогда
		
		ПорядокРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов.ПустаяСсылка();
		БазаРасчетаПродаж = Перечисления.БазыРасчетаПродажРетроБонусов.ПустаяСсылка();
		СоставТоваров = Перечисления.СоставыТоваровРетроБонусов.ПустаяСсылка();
		ОтборТоваров = Перечисления.СоставыСписковРетроБонусов.ПустаяСсылка();
		
	КонецЕсли;
	
	Если БазаРасчетаПродаж = Перечисления.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены Тогда
		
		УчитыватьНДС = Ложь;
		СоставТоваров = Перечисления.СоставыТоваровРетроБонусов.Номенклатура;
		ОтборТоваров = Перечисления.СоставыСписковРетроБонусов.Выбранные;
		
	КонецЕсли;
	
	КонтрольИзмененийРеквизитов(Отказ, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура КонтрольИзмененийРеквизитов(Отказ, ПроверятьСБлокировкой = Ложь)
	
	Если Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Справочники.ВидыРетроБонусовКлиентов.ВидРетроБонусаИспользуется(ЭтотОбъект, ПроверятьСБлокировкой) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыЗапрещенныеДляИзменения = Новый Массив; // Массив из Строка
	РеквизитыЗапрещенныеДляИзменения.Добавить("БезРасчета");
	РеквизитыЗапрещенныеДляИзменения.Добавить("ПоказательПродаж");
	РеквизитыЗапрещенныеДляИзменения.Добавить("БазаРасчетаПродаж");
	РеквизитыЗапрещенныеДляИзменения.Добавить("УчитыватьНДС");
	РеквизитыЗапрещенныеДляИзменения.Добавить("СоставУчастников");
	РеквизитыЗапрещенныеДляИзменения.Добавить("СоставТоваров");
	РеквизитыЗапрещенныеДляИзменения.Добавить("ПорядокРаспределения");
	
	Соответствие = Новый Соответствие;
	Для Каждого ТекРеквизит Из РеквизитыЗапрещенныеДляИзменения Цикл
		
		РеквизитСиноним = Метаданные.Справочники.ВидыРетроБонусовКлиентов.Реквизиты[ТекРеквизит].Синоним;
		Соответствие.Вставить(ТекРеквизит, РеквизитСиноним);
		
	КонецЦикла;
	
	СтарыеЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Ссылка, 
		РеквизитыЗапрещенныеДляИзменения);
	
	ШаблонСообщения = НСтр("ru = 'Реквизит ""%1"" изменять нельзя, так как вид ретро-бонуса ""%2"" уже используется в документах.'");
	
	Для Каждого ТекРеквизит Из РеквизитыЗапрещенныеДляИзменения Цикл
		
		Если СтарыеЗначенияРеквизитов[ТекРеквизит] <> ЭтотОбъект[ТекРеквизит] Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения, 
				Соответствие[ТекРеквизит],
				Строка(Ссылка));
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, ТекРеквизит, "Объект", Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли