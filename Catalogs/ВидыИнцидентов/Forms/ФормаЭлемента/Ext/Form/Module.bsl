#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
		ТолькоОбщие = Ложь;
		
		Если Параметры.Свойство("ЗначениеКопирования") Тогда
		
			ЗаполнитьСписокСвойствДопРеквизитовТаблицы(
				ТаблицаДопРеквизитовИнцидентов, 
				Параметры.ЗначениеКопирования.НаборСвойств, 
				УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Инциденты_Общие"),
				"Реквизиты",
				ТолькоОбщие);
				
		КонецЕсли;
		
	КонецЕсли;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборыДополнительныхРеквизитовИСведений"
		Или ИмяСобытия = "Запись_ДополнительныеРеквизитыИСведения" Тогда
		
		// При записи набора доп.реквизитов (сведений), например: 
		// открыли форму редактирования общих доп.реквизитов (сведений) и записали его.
		ПриЗаписиНабораДополнительныхРеквизитовИСведенийНаСервере();
		
	ИначеЕсли ИмяСобытия = "Запись_ВидыИнцидентов" Тогда
		
		Прочитать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ВидыИнцидентов");
	Прочитать();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьДопРеквизитыСведенияНабора(Отказ, ТекущийОбъект, "ДопРеквизит");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Параметры:
//  Элемент - ПолеФормы
//  СтандартнаяОбработка - Булево
&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область КомандыДопРеквизитовИСведений

&НаКлиенте
Процедура СоздатьНовыйРеквизитИнцидента(Команда)
	
	ДобавитьДопРеквизитСведение("ДопРеквизит");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОбщийРеквизитИнцидента(Команда)
	
	ДобавитьДопРеквизитСведение("ДопРеквизит", "Общее");
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоОбразцуРеквизитИнцидента(Команда)
	
	ДобавитьДопРеквизитСведение("ДопРеквизит", "ПоОбразцу");
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииДляРедактированияТаблицДопРеквизитовСведений

&НаКлиенте
Функция ТаблицаФормыДопРеквизитовСведений(ТипЭлемента)
	
	Если ТипЭлемента = "ДопРеквизит" Тогда
		Возврат Элементы.ТаблицаДопРеквизитовИнцидентов;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТаблицаДопРеквизитов(Форма, ТипЭлемента)
	
	Если ТипЭлемента = "ДопРеквизит" Тогда
		Возврат Форма.ТаблицаДопРеквизитовИнцидентов;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НаборДопРеквизитовСведенийОбъекта(Объект)
	
	Возврат Объект.НаборСвойств;

КонецФункции

&НаСервереБезКонтекста
Функция НаборДопРеквизитовСведенийОбщий()
	
	Возврат УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Инциденты_Общие");
	
КонецФункции

&НаКлиенте
Процедура ДобавитьДопРеквизитСведение(ТипЭлемента, Вид = "")
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
		|Добавление дополнительных свойств возможно только после записи элемента.
		|Записать элемент?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьДопРеквизитСведениеЗавершение", ЭтотОбъект, Новый Структура("Вид, ТипЭлемента", Вид, ТипЭлемента)), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ДобавитьДопРеквизитСведениеФрагмент(Вид, ТипЭлемента);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДопРеквизитСведениеФрагмент(Знач Вид, Знач ТипЭлемента)

	НаборДопРеквизитовСведений = НаборДопРеквизитовСведенийОбъекта(Объект); // СправочникСсылка.НаборыДополнительныхРеквизитовИСведений
	Если НЕ ЗначениеЗаполнено(НаборДопРеквизитовСведений) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	
	Если Вид = "Общее" Тогда
		НаборДопРеквизитовСведений = НаборДопРеквизитовСведенийОбщий();
	ИначеЕсли Вид = "ПоОбразцу" Тогда
		Если ТипЭлемента = "ДопРеквизит" Тогда 
			ПараметрыФормы.Вставить("ВыборВладельцаДополнительныхЗначений", Истина);
		Иначе
			ПараметрыФормы.Вставить("ВыборОбщегоСвойства", Истина);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("НаборСвойств", НаборДопРеквизитовСведений);
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", НаборДопРеквизитовСведений);
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", ТипЭлемента <> "ДопРеквизит");
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
					ПараметрыФормы,
					ТаблицаФормыДопРеквизитовСведений(ТипЭлемента),
					,
					,
					,
					,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Параметры:
//  РезультатВопроса - КодВозвратаДиалога -
//  ДополнительныеПараметры - Структура:
//		* Вид - Строка
//		* ТипЭлемента - Строка
&НаКлиенте
Процедура ДобавитьДопРеквизитСведениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Вид = ДополнительныеПараметры.Вид;
	ТипЭлемента = ДополнительныеПараметры.ТипЭлемента;

	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	Попытка
		ЭлементЗаписан = Записать();
	Исключение
		Возврат;
	КонецПопытки;

	Если Не ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;

	ДобавитьДопРеквизитСведениеФрагмент(Вид, ТипЭлемента);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ЗаполнитьСпискиДопРеквизитовСведений();
	
	НастроитьФорму();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиДопРеквизитовСведений()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокСвойствДопРеквизитовТаблицы(
		ТаблицаДопРеквизитовИнцидентов, 
		Объект.НаборСвойств, 
		УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Инциденты_Общие"),
		"Реквизиты",
		Ложь);
	
КонецПроцедуры
	
&НаСервере
Процедура НастроитьФорму()
	
	#Область ДопРеквизитыИДопСведения
	
	ИспользоватьДополнительныеРеквизитыИСведения = ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения");
	
	Элементы.ГруппаДопРеквизиты.Видимость = ИспользоватьДополнительныеРеквизитыИСведения;

	ЕстьПравоДобавленияРеквизитов = ПравоДоступа("Добавление", Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения);
	
	Элементы.ВидИнцидентовСоздатьРеквизиты.Видимость 	= ЕстьПравоДобавленияРеквизитов;
	
	#КонецОбласти

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСвойствДопРеквизитовТаблицы(Таблица, НаборСвойствДопРеквизитов, НаборОбщихСвойствДопРеквизитов, 
	ТипДанных, ТолькоОбщиеСвойства = Ложь)
	
	// Если нужно перезаполнить свойства, то проверить, что передана ссылка на набор свойств.
	Если Не ТолькоОбщиеСвойства Тогда
		Если Не ЗначениеЗаполнено(НаборСвойствДопРеквизитов) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		// Если нужно перезаполнить только ОБЩИЕ свойства, то проверить, что передана ссылка на набор ОБЩИХ свойств.
		Если Не ЗначениеЗаполнено(НаборОбщихСвойствДопРеквизитов) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ТолькоОбщиеСвойства Тогда
		
		// Удалить из таблицы только строки общих свойств.
		ВГраница = Таблица.Количество() - 1;
		
		Для Индекс = 0 По ВГраница Цикл
			
			СтрокаТаблицы = Таблица[ВГраница - Индекс];
			
			Если СтрокаТаблицы.ОбщееСвойство Тогда
				Таблица.Удалить(СтрокаТаблицы);
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Таблица.Очистить();
		
	КонецЕсли;
	
	// Получить список дополнительных реквизитов из набора свойств, и дополнительных реквизитов из набора общих свойств.
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НаборОбщихСвойств", НаборОбщихСвойствДопРеквизитов);
	
	Если ТолькоОбщиеСвойства Тогда
	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбщиеДопРеквизитыСведения.Свойство КАК Свойство,
		|	ОбщиеДопРеквизитыСведения.Свойство.Заголовок КАК ПредставлениеРеквизита,
		|	ИСТИНА КАК ОбщееСвойство,
		|	ОбщиеДопРеквизитыСведения.НомерСтроки КАК НомерСтрокиДляСортировки,
		|	ВЫБОР КОГДА ОбщиеДопРеквизитыСведения.ПометкаУдаления ТОГДА 4 ИНАЧЕ 1 КОНЕЦ КАК ИндексКартинки
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ОбщиеДопРеквизитыСведения
		|ГДЕ
		|	ОбщиеДопРеквизитыСведения.Ссылка = &НаборОбщихСвойств";
		
	Иначе
		
		Запрос.УстановитьПараметр("НаборСвойств", НаборСвойствДопРеквизитов);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДопРеквизитыСведения.Свойство КАК Свойство,
		|	ДопРеквизитыСведения.Свойство.Заголовок КАК ПредставлениеРеквизита,
		|	ЛОЖЬ КАК ОбщееСвойство,
		|	ДопРеквизитыСведения.НомерСтроки КАК НомерСтрокиДляСортировки,
		|	ВЫБОР КОГДА ДопРеквизитыСведения.ПометкаУдаления ТОГДА 4 ИНАЧЕ 1 КОНЕЦ КАК ИндексКартинки
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДопРеквизитыСведения
		|ГДЕ
		|	ДопРеквизитыСведения.Ссылка = &НаборСвойств
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбщиеДопРеквизитыСведения.Свойство,
		|	ОбщиеДопРеквизитыСведения.Свойство.Заголовок,
		|	ИСТИНА,
		|	ОбщиеДопРеквизитыСведения.НомерСтроки,
		|	ВЫБОР КОГДА ОбщиеДопРеквизитыСведения.ПометкаУдаления ТОГДА 4 ИНАЧЕ 1 КОНЕЦ
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ОбщиеДопРеквизитыСведения
		|ГДЕ
		|	ОбщиеДопРеквизитыСведения.Ссылка = &НаборОбщихСвойств";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДопРеквизитовСведений = РезультатЗапроса.Выгрузить();
	
	Если ТолькоОбщиеСвойства Тогда
		
		ТаблицаДопРеквизитовСведений.Сортировать("НомерСтрокиДляСортировки Возр");
		
		ТаблицаВсехДопРеквизитовСведений = Таблица.Выгрузить();
		ТаблицаВсехДопРеквизитовСведений.Очистить();
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаДопРеквизитовСведений, ТаблицаВсехДопРеквизитовСведений);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Таблица, ТаблицаВсехДопРеквизитовСведений);
		
		Таблица.Загрузить(ТаблицаВсехДопРеквизитовСведений);
		
	Иначе
		
		ТаблицаДопРеквизитовСведений.Сортировать("ОбщееСвойство Убыв, НомерСтрокиДляСортировки Возр");
		
		Таблица.Загрузить(ТаблицаДопРеквизитовСведений);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДопРеквизитыСведенияНабора(Отказ, ТекущийОбъект, ТипЭлемента)
	
	НаборСвойствДопРеквизитовСведений = НаборДопРеквизитовСведенийОбъекта(ТекущийОбъект);
	Если НЕ ЗначениеЗаполнено(НаборСвойствДопРеквизитовСведений) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектНаборСвойств = НаборСвойствДопРеквизитовСведений.ПолучитьОбъект();
	
	ТЧДополнительныеРеквизитыСведения = ОбъектНаборСвойств.ДополнительныеРеквизиты;
	
	ТаблицаДопРеквизитов = ТаблицаДопРеквизитов(ЭтаФорма, ТипЭлемента);
	ТЧДополнительныеРеквизитыСведения.Очистить();
	
	Для каждого ЭлементСтр Из ТаблицаДопРеквизитов Цикл
		Если Не ЭлементСтр.ОбщееСвойство Тогда
			НовСтр = ТЧДополнительныеРеквизитыСведения.Добавить();
			НовСтр.Свойство = ЭлементСтр.Свойство;
			НовСтр.ПометкаУдаления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементСтр.Свойство, "ПометкаУдаления");
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		
		ОбъектНаборСвойств.Записать();
		
	Исключение
		
		// Установить признак отказа записи.
		Отказ = Истина;
		
		// Добавить запись в журнал регистрации.
		
		КодЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
		
		ИмяСобытия = СтрШаблон("%1.%2",
								НСтр("ru = 'Дополнительные реквизиты инцидентов'", КодЯзыка),
								НСтр("ru = 'Не удалось обновить состав дополнительных реквизитов набора.'", КодЯзыка));
		
	
		КомментарийЖурнала  = НСтр("ru = 'При обновлении табличной части дополнительных реквизитов набора свойств ""%1"" произошла ошибка: ""%2""'");
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		КомментарийЖурнала  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			КомментарийЖурнала, 
			НаборСвойствДопРеквизитовСведений, 
			ПредставлениеОшибки);
		
		ЗаписьЖурналаРегистрации(
			ИмяСобытия, 
			УровеньЖурналаРегистрации.Ошибка, 
			, 
			НаборСвойствДопРеквизитовСведений, 
			КомментарийЖурнала, 
			РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
		
		// Вызвать исключение.
		ВыражениеИсключения = НСтр("ru = 'При записи дополнительных реквизитов инцидента произошла ошибка (см. журнал регистрации).'");
		
		ВызватьИсключение(ВыражениеИсключения);
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНабораДополнительныхРеквизитовИСведенийНаСервере()
	
	Если НЕ Модифицированность Тогда
		Прочитать();
	Иначе
		ЗаполнитьСпискиДопРеквизитовСведений();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти