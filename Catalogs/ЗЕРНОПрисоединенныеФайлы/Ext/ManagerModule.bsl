#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые разрешается редактировать
// с помощью обработки группового изменения объектов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Возврат РаботаСФайлами.РеквизитыРедактируемыеВГрупповойОбработке();
	
КонецФункции

// Возвращает краткое описание последнего сообщения обмена указанного типа (Передано, ВОчереди, СОшибкой, Любое)
//   по документу. Если такого сообщения нет, возвращает Неопределено.
//
// Параметры:
//   ДокументСсылка         - ОпределяемыйТип.ДокументыЗЕРНО - документ для получения описания
//   ТипПоследнегоСообщения - Строка                        - тип сообщения из фиксированного списка
// Возвращаемое значение:
//   Структура - реквизиты сообщения:
//   * ВладелецФайла - ОпределяемыйТип.ОбъектыСинхронизацииЗЕРНО - владелец файла
//   * Операция      - ПеречислениеСсылка.ВидыОперацийЗЕРНО      - операция обмена
//   * ТипСообщения  - ПеречислениеСсылка.ТипыЗапросовИС         - тип сообщения (исходящий, входящий)
//   * Сообщение     - СправочникСсылка.ЗЕРНОПрисоединенныеФайлы - ссылка на сообщение
//                   - Неопределено - сообщение не найдено
//
Функция ПоследнееСообщение(ДокументСсылка, ТипПоследнегоСообщения = "Передано") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗЕРНОПрисоединенныеФайлы.Ссылка                 КАК Сообщение,
	|	ЗЕРНОПрисоединенныеФайлы.СообщениеОснование     КАК СообщениеОснование,
	|	ЗЕРНОПрисоединенныеФайлы.ТипСообщения           КАК ТипСообщения,
	|	ЗЕРНОПрисоединенныеФайлы.Документ.Организация   КАК Организация,
	|	ЗЕРНОПрисоединенныеФайлы.Документ.Подразделение КАК Подразделение,
	|	ЗЕРНОПрисоединенныеФайлы.СтатусОбработки        КАК СтатусОбработки,
	|	ЗЕРНОПрисоединенныеФайлы.ВладелецФайла          КАК ВладелецФайла,
	|	ЗЕРНОПрисоединенныеФайлы.Операция               КАК Операция
	|ПОМЕСТИТЬ ЗЕРНОПрисоединенныеФайлы
	|ИЗ
	|	Справочник.ЗЕРНОПрисоединенныеФайлы КАК ЗЕРНОПрисоединенныеФайлы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередьСообщенийЗЕРНО КАК ОчередьСообщенийЗЕРНО
	|		ПО ОчередьСообщенийЗЕРНО.Сообщение = ЗЕРНОПрисоединенныеФайлы.Ссылка
	|ГДЕ
	|	ЗЕРНОПрисоединенныеФайлы.Документ = &Документ
	|	И &Условие1
	|УПОРЯДОЧИТЬ ПО
	|	ЗЕРНОПрисоединенныеФайлы.ДатаСоздания УБЫВ,
	|	ВЫБОР
	|		КОГДА ЗЕРНОПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Исходящий) ТОГДА
	|			0
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ УБЫВ
	|;
	|
	|//////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОчередьСообщенийЗЕРНО.Сообщение                 КАК Сообщение,
	|	ОчередьСообщенийЗЕРНО.СообщениеОснование        КАК СообщениеОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Исходящий) КАК ТипСообщения,
	|	ОчередьСообщенийЗЕРНО.Организация               КАК Организация,
	|	ОчередьСообщенийЗЕРНО.Подразделение             КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                    КАК СтатусОбработки,
	|	ОчередьСообщенийЗЕРНО.СсылкаНаОбъект            КАК ВладелецФайла,
	|	ОчередьСообщенийЗЕРНО.Операция                  КАК Операция
	|ПОМЕСТИТЬ ОчередьСообщенийЗЕРНО
	|ИЗ
	|	РегистрСведений.ОчередьСообщенийЗЕРНО КАК ОчередьСообщенийЗЕРНО
	|ГДЕ
	|	ОчередьСообщенийЗЕРНО.СсылкаНаОбъект = &Документ
	|	И ОчередьСообщенийЗЕРНО.СообщениеОснование = """"
	|	И &Условие2
	|УПОРЯДОЧИТЬ ПО
	|	ОчередьСообщенийЗЕРНО.ДатаСоздания УБЫВ
	|;
	|
	|//////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Сообщение          КАК Сообщение,
	|	Т.СообщениеОснование КАК СообщениеОснование,
	|	Т.ТипСообщения       КАК ТипСообщения,
	|	Т.Организация        КАК Организация,
	|	Т.Подразделение      КАК Подразделение,
	|	Т.СтатусОбработки    КАК СтатусОбработки,
	|	Т.ВладелецФайла      КАК ВладелецФайла,
	|	Т.Операция           КАК Операция,
	|	1                    КАК Приоритет
	|ПОМЕСТИТЬ Итог
	|ИЗ
	|	ЗЕРНОПрисоединенныеФайлы КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Сообщение          КАК Сообщение,
	|	Т.СообщениеОснование КАК СообщениеОснование,
	|	Т.ТипСообщения       КАК ТипСообщения,
	|	Т.Организация        КАК Организация,
	|	Т.Подразделение      КАК Подразделение,
	|	Т.СтатусОбработки    КАК СтатусОбработки,
	|	Т.ВладелецФайла      КАК ВладелецФайла,
	|	Т.Операция           КАК Операция,
	|	2                    КАК Приоритет
	|ИЗ
	|	ОчередьСообщенийЗЕРНО КАК Т
	|;
	|
	|//////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Т.Сообщение          КАК Сообщение,
	|	Т.СообщениеОснование КАК СообщениеОснование,
	|	Т.ТипСообщения       КАК ТипСообщения,
	|	Т.Организация        КАК Организация,
	|	Т.Подразделение      КАК Подразделение,
	|	Т.СтатусОбработки    КАК СтатусОбработки,
	|	Т.ВладелецФайла      КАК ВладелецФайла,
	|	Т.Операция           КАК Операция,
	|	Т.Приоритет          КАК Приоритет
	|ИЗ
	|	Итог КАК Т
	|УПОРЯДОЧИТЬ ПО
	|	Т.Приоритет УБЫВ
	|");
	
	Запрос.УстановитьПараметр("Документ", ДокументСсылка);
	
	Если ТипПоследнегоСообщения = "Передано" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие1", "ИСТИНА");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие2", "ЛОЖЬ");
	ИначеЕсли ТипПоследнегоСообщения = "ВОчереди" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие1", "ЛОЖЬ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие2", "ИСТИНА");
	ИначеЕсли ТипПоследнегоСообщения = "СОшибкой" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие1",
			"
			|ВЫБОР
			|	КОГДА ВЫРАЗИТЬ(ЗЕРНОПрисоединенныеФайлы.Описание КАК Строка(255)) = """"
			|		ТОГДА ЛОЖЬ
			|	ИНАЧЕ ИСТИНА
			|КОНЕЦ
			|");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие2", "ЛОЖЬ");
	ИначеЕсли ТипПоследнегоСообщения = "Любое" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие1", "ИСТИНА");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие2", "ИСТИНА");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Организация");
	ВозвращаемоеЗначение.Вставить("Подразделение");
	ВозвращаемоеЗначение.Вставить("Сообщение");
	ВозвращаемоеЗначение.Вставить("ТипСообщения");
	ВозвращаемоеЗначение.Вставить("ВладелецФайла");
	ВозвращаемоеЗначение.Вставить("Операция");
	ВозвращаемоеЗначение.Вставить("СтатусОбработки");
	ВозвращаемоеЗначение.Вставить("СообщениеОснование");
	
	ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Возвращает выборку последних сообщений протокола обмена, обработанных с ошибкой,
//   по документу. Если такого сообщения нет, возвращает Неопределено.
//
// Параметры:
//   ДокументСсылка         - ОпределяемыйТип.ОбъектыСинхронизацииЗЕРНО - документ для получения описания
//   ТипПоследнегоСообщения - Строка                        - тип сообщения из фиксированного списка
// Возвращаемое значение:
//   ВыборкаИзРезультатаЗапроса - элементы коллекции:
//   * ВладелецФайла - ОпределяемыйТип.ОбъектыСинхронизацииЗЕРНО            - владелец файла
//   * Операция      - ПеречислениеСсылка.ВидыОперацийЗЕРНО      - операция обмена
//   * ТипСообщения  - ПеречислениеСсылка.ТипыЗапросовИС        - тип сообщения (исходящий, входящий)
//   * Сообщение     - СправочникСсылка.ЗЕРНОПрисоединенныеФайлы - ссылка на сообщение
//                   - Неопределено - сообщение не найдено
//
Функция ПоследниеСообщенияСОшибкой(ДокументСсылка, ТипПоследнегоСообщения = "Передано") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗЕРНОПрисоединенныеФайлы.Версия   КАК Версия,
	|	ЗЕРНОПрисоединенныеФайлы.Документ КАК Документ,
	|	ЗЕРНОПрисоединенныеФайлы.Операция КАК Операция
	|ПОМЕСТИТЬ ЗЕРНОПрисоединенныеФайлыВерсии
	|ИЗ
	|	Справочник.ЗЕРНОПрисоединенныеФайлы КАК ЗЕРНОПрисоединенныеФайлы
	|ГДЕ
	|	ЗЕРНОПрисоединенныеФайлы.Документ = &Документ
	|	И ВЫБОР
	|	КОГДА ВЫРАЗИТЬ(ЗЕРНОПрисоединенныеФайлы.Описание КАК Строка(255)) = """"
	|		ТОГДА ЛОЖЬ
	|	ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|УПОРЯДОЧИТЬ ПО
	|	ЗЕРНОПрисоединенныеФайлы.ДатаСоздания УБЫВ,
	|	ВЫБОР
	|		КОГДА ЗЕРНОПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Исходящий) ТОГДА
	|			0
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ УБЫВ
	|;
	|
	|//////////////////////////////////
	|ВЫБРАТЬ
	|	ЗЕРНОПрисоединенныеФайлы.Ссылка               КАК Сообщение,
	|	ЗЕРНОПрисоединенныеФайлы.ТипСообщения         КАК ТипСообщения,
	|	ЗЕРНОПрисоединенныеФайлы.Документ.Организация КАК Организация,
	|	ЗЕРНОПрисоединенныеФайлы.СтатусОбработки      КАК СтатусОбработки,
	|	ЗЕРНОПрисоединенныеФайлы.ВладелецФайла        КАК ВладелецФайла,
	|	ЗЕРНОПрисоединенныеФайлы.Операция             КАК Операция
	|ИЗ
	|	ЗЕРНОПрисоединенныеФайлыВерсии КАК ЗЕРНОПрисоединенныеФайлыВерсии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗЕРНОПрисоединенныеФайлы КАК ЗЕРНОПрисоединенныеФайлы
	|		ПО ЗЕРНОПрисоединенныеФайлыВерсии.Документ = ЗЕРНОПрисоединенныеФайлы.Документ
	|		И ЗЕРНОПрисоединенныеФайлыВерсии.Операция = ЗЕРНОПрисоединенныеФайлы.Операция
	|		И ЗЕРНОПрисоединенныеФайлыВерсии.Версия = ЗЕРНОПрисоединенныеФайлы.Версия
	|ГДЕ
	|	ВЫБОР
	|	КОГДА ВЫРАЗИТЬ(ЗЕРНОПрисоединенныеФайлы.Описание КАК Строка(255)) = """"
	|		ТОГДА ЛОЖЬ
	|	ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|УПОРЯДОЧИТЬ ПО
	|	ЗЕРНОПрисоединенныеФайлы.ДатаСоздания УБЫВ,
	|	ВЫБОР
	|		КОГДА ЗЕРНОПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Исходящий) ТОГДА
	|			0
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ УБЫВ
	|");
	
	Запрос.УстановитьПараметр("Документ", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Результат.Выбрать();
	
КонецФункции

// Возвращает текст последней ошибки из протокола обмена
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - документ, по которому требуется показать ошибку обмена
//
// Возвращаемое значение:
//  Строка - текст ошибки обмена.
//
Функция ТекстОшибкиИзПротокола(ДокументСсылка) Экспорт
	
	ДанныеПоследнегоСообщения = ПоследниеСообщенияСОшибкой(ДокументСсылка);
	Если ДанныеПоследнегоСообщения = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	МассивОшибок = Новый Массив;
	Пока ДанныеПоследнегоСообщения.Следующий() Цикл
		МассивОшибок.Добавить(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеПоследнегоСообщения.Сообщение, "Описание"));
	КонецЦикла;
	
	Возврат СтрСоединить(МассивОшибок, Символы.ПС);
	
КонецФункции

#КонецОбласти

#КонецЕсли