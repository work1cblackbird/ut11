
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Статус") Тогда
		Статус = Параметры.Отбор.Статус;
		Параметры.Отбор.Удалить("Статус");
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
				"СтатусИзИсторииПодарочныхСертификатов",
				Статус,
				ВидСравненияКомпоновкиДанных.ВСписке);   		
	КонецЕсли;    
	
	Если Параметры.Отбор.Свойство("УчетПодарочныхСертификатов2_5") Тогда
		УчетПодарочныхСертификатов2_5 = Параметры.Отбор.УчетПодарочныхСертификатов2_5;
		Параметры.Отбор.Удалить("УчетПодарочныхСертификатов2_5");
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
				"УчетПодарочныхСертификатов2_5",
				УчетПодарочныхСертификатов2_5,
				ВидСравненияКомпоновкиДанных.Равно);   		
	КонецЕсли;    
	
	Если Параметры.Отбор.Свойство("Валюта") Тогда
		Валюта = Параметры.Отбор.Валюта;
		Параметры.Отбор.Удалить("Валюта");
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
				"Валюта",
				Валюта,
				ВидСравненияКомпоновкиДанных.ВСписке);   		
	КонецЕсли;    
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		Организация = Параметры.Отбор.Организация;
		Параметры.Отбор.Удалить("Организация");
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
				"Организация",
				Организация,
				ВидСравненияКомпоновкиДанных.ВСписке);   		
	КонецЕсли;    
	
	Если Параметры.Отбор.Свойство("ТолькоНеНулевыеОстатки") Тогда
		ТолькоНеНулевыеОстатки = Параметры.Отбор.ТолькоНеНулевыеОстатки;
		Параметры.Отбор.Удалить("ТолькоНеНулевыеОстатки");
		Если ТолькоНеНулевыеОстатки Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
					"Остаток",
					0,
					ВидСравненияКомпоновкиДанных.НеРавно);   		
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ТолькоБольшеНуляОстатки") Тогда
		ТолькоБольшеНуляОстатки = Параметры.Отбор.ТолькоБольшеНуляОстатки;
		Параметры.Отбор.Удалить("ТолькоБольшеНуляОстатки");
		Если ТолькоБольшеНуляОстатки Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
					"Остаток",
					0,
					ВидСравненияКомпоновкиДанных.Больше);
		КонецЕсли;
	КонецЕсли;

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.Остаток.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Остаток");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("ВыделятьОтрицательные", Истина);

КонецПроцедуры

#КонецОбласти
