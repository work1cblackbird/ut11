#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка);  
	
	ФорматФайла = "PDF";
	ОбъектУчета = Параметры.ОбъектУчета;
	ЗаполнитьСписокШаблоновДоговоров(ОбъектУчета);

	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами 
	Элементы.ФорматФайла.СписокВыбора.Добавить("XML", "XML"); 
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами

КонецПроцедуры  

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)  
	
	Шаблон = Элементы.ШаблоныДоговоров.ТекущиеДанные;
	
	Если Шаблон = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбрано ни одного шаблона!
			|Для настройки перейдите в раздел ""НСИ и администрирование""- 
			| - ""Администрирование"" - 
			| - ""Печатные формы, отчеты и обработки"" - 
			| - ""Макеты печатных форм"".'"));
		Возврат;
	КонецЕсли;
	
	Если ФорматФайла = "PDF" Тогда
				
		ДлительнаяОперация = НачатьСохранениеФайлаПоШаблонуPDF(Шаблон.Значение);
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПриЗавершенииСохраненияФайлаPDF", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания()); 	
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами	
	ИначеЕсли ФорматФайла = "XML" Тогда 
		
		ДлительнаяОперация = НачатьСохранениеФайлаПоШаблонуXML(Шаблон.Значение);
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПриЗавершенииСохраненияФайлаXML", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания());
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокШаблоновДоговоров(СсылкаНаДоговор) 
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		Возврат;
	КонецЕсли;
	
	МодульУправлениеПечатью = ОбщегоНазначения.ОбщийМодуль("УправлениеПечатью");
	
	СписокОбъектов = Новый Массив;
	СписокОбъектов.Добавить(ОбъектУчета.Метаданные());
	
	КомандыПечати = МодульУправлениеПечатью.КомандыПечатиФормы("Справочник.ДоговорыКонтрагентов.Форма.ФормаЭлемента", СписокОбъектов);
	
	Для Каждого ПечатнаяФорма Из КомандыПечати Цикл
		ШаблоныДоговоров.Добавить(ПечатнаяФорма.Идентификатор, ПечатнаяФорма.Представление);
	КонецЦикла; 
		
КонецПроцедуры 

// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
&НаСервере
Функция НачатьСохранениеФайлаПоШаблонуXML(Идентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	ПараметрКоманды = Новый Массив();
	ПараметрКоманды.Добавить(ОбъектУчета); 
	
	ПараметрыПечати = Новый Структура("ИмяМакета, ОбъектыПечати");
	ПараметрыПечати.Вставить("ИмяМакета", Идентификатор);
	ПараметрыПечати.Вставить("ОбъектыПечати", ПараметрКоманды);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "Обработки.ФорматДоговорнойДокумент101XML.СоздатьXMLВФоне", ПараметрыПечати);
	
КонецФункции
// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами

&НаСервере
Функция НачатьСохранениеФайлаПоШаблонуPDF(Идентификатор)
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	МодульУправлениеПечатью = ОбщегоНазначения.ОбщийМодуль("УправлениеПечатью");
	
	СписокОбъектов = Новый Массив;
	СписокОбъектов.Добавить(ОбъектУчета.Метаданные());
	
	КомандыПечати = МодульУправлениеПечатью.КомандыПечатиФормы("Справочник.ДоговорыКонтрагентов.Форма.ФормаЭлемента", СписокОбъектов);		
	КомандаШаблона = КомандыПечати.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	
	СписокОбъектов = Новый Массив;
	СписокОбъектов.Добавить(ОбъектУчета);	
   
	Результат = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(КомандаШаблона[0]);
	
	УникальныйИдентификаторХранилища = Новый УникальныйИдентификатор;
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификаторХранилища);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "УправлениеПечатью.НапечататьВФайл",
		Результат, СписокОбъектов, УправлениеПечатью.НастройкиСохранения());	
		
КонецФункции

&НаКлиенте
Функция ПараметрыОжидания()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтаФорма);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Подготовка печатных форм.'");
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.Интервал = 0;
	ПараметрыОжидания.ВыводитьСообщения = Ложь;
	Возврат ПараметрыОжидания;

КонецФункции

&НаКлиенте
Процедура ПриЗавершенииСохраненияФайлаPDF(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если Результат.Статус = "Ошибка" Тогда
			ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
		КонецЕсли;
		
		РезультатФоновойОперации = ПолучитьРезультатФоновогоЗаданияСохраненияФайлаPDF(Результат);
		
		ПараметрыФайла = ПолучитьПараметрыДобавленияФайла();
		ПараметрыФайла.ВладелецФайлов = ОбъектУчета;
		ПараметрыФайла.Автор = ПользователиКлиент.ТекущийПользователь();

		ПараметрыФайла.ИмяБезРасширения = РезультатФоновойОперации.ИмяФайла;
		Адрес = ПоместитьВоВременноеХранилище(РезультатФоновойОперации.ДвоичныеДанные);
						
		ФайлСсылка = ДобавитьФайлКДоговору(ПараметрыФайла, Адрес);
	КонецЕсли; 

	Оповестить("Запись_Файл");
	Закрыть();

КонецПроцедуры

// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
&НаКлиенте
Процедура ПриЗавершенииСохраненияФайлаXML(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если Результат.Статус = "Ошибка" Тогда
			ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
		КонецЕсли;
		
		Шаблон = Элементы.ШаблоныДоговоров.ТекущиеДанные;
			
		РезультатДобавленияФайла = ПолучитьРезультатФоновогоЗаданияСохраненияФайлаXML(Результат, Шаблон.Представление);
		
		Если РезультатДобавленияФайла <> Неопределено Тогда
			Если ТипЗнч(РезультатДобавленияФайла) = Тип("Структура") Тогда
				ОткрытьФорму("Обработка.ФорматДоговорнойДокумент101XML.Форма.ФормаРедактированияФайлаXMLЭД", РезультатДобавленияФайла); 
			Иначе
				Оповестить("Запись_Файл");
			КонецЕсли;
			Закрыть(); 
		КонецЕсли;

	КонецЕсли; 

КонецПроцедуры 
// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
&НаСервере
Функция ПолучитьРезультатФоновогоЗаданияСохраненияФайлаPDF(Результат)
	
	РезультатФоновойОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	СтруктураРезультата = Новый Структура("ИмяФайла, ДвоичныеДанные");
	СтруктураРезультата.ИмяФайла = РезультатФоновойОперации[0].ИмяФайла;
	СтруктураРезультата.ДвоичныеДанные = РезультатФоновойОперации[0].ДвоичныеДанные;
		
	Возврат СтруктураРезультата;
	
КонецФункции

// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
&НаСервере
Функция ПолучитьРезультатФоновогоЗаданияСохраненияФайлаXML(Результат, ПредставлениеМакета)
	
	РезультатФоновойОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	ТаблицаФрагментов = РезультатФоновойОперации.ТаблицаФрагментов;
	Ошибки = РезультатФоновойОперации.Ошибки;
	Предупреждения = РезультатФоновойОперации.Предупреждения;

	Если Ошибки <> Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'При формировании фрагментов произошли следующие ошибки:'"));
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
		Возврат Неопределено;
	КонецЕсли;
		
	ИдентификаторОсновногоФайла = ПолучитьИдентификаторОсновногоФайла();

	Если Ошибки = Неопределено Тогда
		Обработки.ФорматДоговорнойДокумент101XML.ЗаполнитьСсылкуНаНомерФрагмента(ТаблицаФрагментов);
		ДвоичныеДанныеXML = Обработки.ФорматДоговорнойДокумент101XML.СформироватьXMLПоДоговору(ОбъектУчета, ТаблицаФрагментов, ИдентификаторОсновногоФайла, Ошибки);
	КонецЕсли;
	
	Если Ошибки = Неопределено Тогда   
		
		Если Предупреждения <> Неопределено И Предупреждения.Количество() > 0 Тогда
			
			ПараметрыОткрытия = Новый Структура();
			ПараметрыОткрытия.Вставить("ОбъектУчета", ОбъектУчета);
			ПараметрыОткрытия.Вставить("ДобавленныйФайл", Неопределено);
			ПараметрыОткрытия.Вставить("ИдентификаторОсновногоФайла", ИдентификаторОсновногоФайла);
			ПараметрыОткрытия.Вставить("Предупреждения", Предупреждения);
			ПараметрыОткрытия.Вставить("АдресТаблицыФрагментов", ПоместитьВоВременноеХранилище(ТаблицаФрагментов));
			ПараметрыОткрытия.Вставить("АдресДанныхXML", ПоместитьВоВременноеХранилище(ДвоичныеДанныеXML));
			ПараметрыОткрытия.Вставить("Режим","РедактированиеXML");
			
			Возврат ПараметрыОткрытия;		
		КонецЕсли;
		
		ПараметрыФайла = ПолучитьПараметрыДобавленияФайла();
		ПараметрыФайла.ВладелецФайлов = ОбъектУчета;
		ПараметрыФайла.Автор = Пользователи.ТекущийПользователь();
		
		ПараметрыФайла.ИмяБезРасширения = ИдентификаторОсновногоФайла;
		ПараметрыФайла.РасширениеБезТочки = "xml";
		
		Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанныеXML);
		
		ДобавленныйФайл = РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, Адрес);
		
	Иначе
		
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'При формировании XML файла произошли следующие ошибки:'"));
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки); 

		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ДобавленныйФайл;
	
КонецФункции 

&НаСервере
Функция ПолучитьИдентификаторОсновногоФайла()
	
	ИдентификаторОсновногоФайла = Неопределено;
	
	ПараметрыОткрытия = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыОткрытияЭлектронногоДокумента();
	ПараметрыПросмотра = ИнтерфейсДокументовЭДОВызовСервера.ПараметрыПросмотраЭлектронногоДокументаПоОбъектуУчета(
		ОбъектУчета, ПараметрыОткрытия);
		
	Если ПараметрыПросмотра.ПредварительныйПросмотр <> Неопределено Тогда	
		РезультатПодготовкиДанных = ПараметрыПросмотра.ПредварительныйПросмотр.РезультатПодготовкиДанных;
		ИдентификаторОсновногоФайла = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатПодготовкиДанных, "ИдентификаторОсновногоФайла");
	КонецЕсли;

	Если ИдентификаторОсновногоФайла = Неопределено Тогда
		
		МассивЧастейИмени = Новый Массив();
		МассивЧастейИмени.Добавить("ON_SODSD");
		МассивЧастейИмени.Добавить("УИОЭДОУИПол");
		МассивЧастейИмени.Добавить("УИОЭДОУИОтпр");
		МассивЧастейИмени.Добавить(Формат(ТекущаяДатаСеанса(), "ДФ=yyyyMMdd"));
		МассивЧастейИмени.Добавить(Новый УникальныйИдентификатор); // признак обстоятельств формирования договорного документа
		МассивЧастейИмени.Добавить("1"); // признак обстоятельств формирования договорного документа
		МассивЧастейИмени.Добавить("00"); // номер дополнительных соглашений по порядку
		МассивЧастейИмени.Добавить("00"); // порядковый номер приложения к начальному договорному документу
		МассивЧастейИмени.Добавить("01"); // порядковый номер договорного документа в хронологии
		
		ИдентификаторОсновногоФайла = СтрСоединить(МассивЧастейИмени, "_");
		
	КонецЕсли;
	
	Возврат ИдентификаторОсновногоФайла;
	
КонецФункции
// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами

&НаСервере
Функция ПолучитьПараметрыДобавленияФайла()
	
	Возврат	РаботаСФайлами.ПараметрыДобавленияФайла();
	
КонецФункции

&НаСервере
Функция ДобавитьФайлКДоговору(ПараметрыФайла, Адрес)

	ФайлСсылка = РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, Адрес);

	Возврат ФайлСсылка;
	
КонецФункции

#КонецОбласти