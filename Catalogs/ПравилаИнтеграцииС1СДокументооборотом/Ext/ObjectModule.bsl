#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипФайловСохраненияПечатныхФорм =
		ИнтеграцияС1СДокументооборотБазоваяФункциональность.ТипФайлаСохраняемойПечатнойФормыПоУмолчанию();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	ПроверитьВозможностьЗаписиПравила();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВыгружатьИзменения = Ложь;
	ЗагружатьИзменения = Ложь;
	
	ОбновитьПредставление();
	
	// Установим флаги автообновления при необходимости.
	
	Если ЗначениеЗаполнено(ТипОбъектаИС) Тогда
		
		ОбъектПотребителя = Метаданные.НайтиПоПолномуИмени(ТипОбъектаИС);
		Если ОбъектПотребителя <> Неопределено Тогда
			
			Если Метаданные.ПланыОбмена.ИнтеграцияС1СДокументооборотомПереопределяемый.Состав.Содержит(ОбъектПотребителя) Тогда
				СтруктураПоиска = Новый Структура("Обновлять", Истина);
				ОбновляемыеРеквизиты = ПравилаЗаполненияРеквизитовДО.НайтиСтроки(СтруктураПоиска);
				ОбновляемыеПечатныеФормы = ПрисоединяемыеПечатныеФормы.НайтиСтроки(СтруктураПоиска);
				ВыгружатьИзменения = (ОбновляемыеРеквизиты.Количество() <> 0
					Или ОбновляемыеПечатныеФормы.Количество() <> 0);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипОбъектаДО) Тогда
		
		СтруктураПоиска = Новый Структура("Обновлять", Истина);
		ОбновляемыеРеквизиты = ПравилаЗаполненияРеквизитовИС.НайтиСтроки(СтруктураПоиска);
		ЗагружатьИзменения = (ОбновляемыеРеквизиты.Количество() <> 0);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обновляет представление правила согласно представлениям объектов и ключевых реквизитов.
//
Процедура ОбновитьПредставление()
	
	// Соберем представление объекта ИС.
	ПредставлениеОбъектаИС = "";
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьПереопределяемый.ПриОпределенииПредставленияОбъектаПотребителя(
		ЭтотОбъект,
		ПредставлениеОбъектаИС);
	
	Если ПредставлениеОбъектаИС = "" И ЗначениеЗаполнено(ТипОбъектаИС) Тогда
		
		ОбъектПотребителя = Метаданные.НайтиПоПолномуИмени(ТипОбъектаИС);
		Если ОбъектПотребителя <> Неопределено Тогда
			
			ПредставлениеОбъектаИС = ?(ОбъектПотребителя.Синоним = "",
				ОбъектПотребителя.Имя,
				ОбъектПотребителя.Синоним);
			
			// Дополним представление ключевыми реквизитами.
			СтруктураПоиска = Новый Структура("Ключевой", Истина);
			КлючевыеРеквизиты = ПравилаЗаполненияРеквизитовИС.НайтиСтроки(СтруктураПоиска);
			Для Каждого КлючевойРеквизит Из КлючевыеРеквизиты Цикл
				Если КлючевойРеквизит.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение Тогда
					ПредставлениеОбъектаИС = ПредставлениеОбъектаИС + ", " + Строка(КлючевойРеквизит.ЗначениеРеквизитаИС);
					
				ИначеЕсли КлючевойРеквизит.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.ПустаяСсылка() Тогда
					
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипОбъектаДО) Тогда
		
		// Выберем представление согласно типу.
		Если ТипОбъектаДО = "DMIncomingDocument" Тогда
			ПредставлениеОбъектаДО = НСтр("ru = 'Входящий документ'");
		ИначеЕсли ТипОбъектаДО = "DMInternalDocument" Тогда
			ПредставлениеОбъектаДО = НСтр("ru = 'Внутренний документ'");
		ИначеЕсли ТипОбъектаДО = "DMOutgoingDocument" Тогда
			ПредставлениеОбъектаДО = НСтр("ru = 'Исходящий документ'");
		ИначеЕсли ТипОбъектаДО = "DMCorrespondent" Тогда
			Если ИнтеграцияС1СДокументооборотПовтИсп.ИспользоватьТерминКорреспонденты() Тогда
				ПредставлениеОбъектаДО = НСтр("ru = 'Корреспондент'");
			Иначе
				ПредставлениеОбъектаДО = НСтр("ru = 'Контрагент'");
			КонецЕсли;
		Иначе
			ПредставлениеОбъектаДО = ТипОбъектаДО;
		КонецЕсли;
		
		// Дополним представление ключевыми реквизитами.
		СтруктураПоиска = Новый Структура("Ключевой", Истина);
		КлючевыеРеквизиты = ПравилаЗаполненияРеквизитовДО.НайтиСтроки(СтруктураПоиска);
		Для Каждого КлючевойРеквизит Из КлючевыеРеквизиты Цикл
			Если КлючевойРеквизит.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение Тогда
				ПредставлениеОбъектаДО = ПредставлениеОбъектаДО + ", " + Строка(КлючевойРеквизит.ЗначениеРеквизитаДО);
				
			ИначеЕсли КлючевойРеквизит.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.ИзШаблона Тогда
				ПредставлениеОбъектаДО = ПредставлениеОбъектаДО + ", " + Строка(КлючевойРеквизит.ШаблонЗначение);
				
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		ПредставлениеОбъектаДО = "";
		
	КонецЕсли;
	
	// Соберем наименование.
	Если ЗначениеЗаполнено(ПредставлениеОбъектаИС) И ЗначениеЗаполнено(ПредставлениеОбъектаДО) Тогда
		Наименование = ПредставлениеОбъектаИС + " - " + ПредставлениеОбъектаДО;
	Иначе
		Наименование = "";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВозможностьЗаписиПравила()
	
	Если Пользователи.ЭтоПолноправныйПользователь() Тогда
		Возврат;
	КонецЕсли;
	
	ШаблоныВыражений =
		ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.ШаблоныВыраженийНаВстроенномЯзыке();
	
	СписокВыраженийДляЗаполненияРеквизитовДО = Новый Соответствие;
	Для Каждого Строка Из ПравилаЗаполненияРеквизитовДО Цикл
		Если ЗначениеЗаполнено(Строка.ВычисляемоеВыражение) Тогда
			ЭтоШаблон = Ложь;
			Для Каждого ШаблонВыражения Из ШаблоныВыражений Цикл
				Если ШаблонВыражения.Значение = Строка.ВычисляемоеВыражение Тогда
					ЭтоШаблон = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЭтоШаблон Тогда
				Продолжить;
			КонецЕсли;
			Ключ = Новый Структура("ИмяРеквизитаОбъектаДО, ЭтоТаблица, Таблица");
			ЗаполнитьЗначенияСвойств(Ключ, Строка);
			СписокВыраженийДляЗаполненияРеквизитовДО.Вставить(Ключ, Строка.ВычисляемоеВыражение);
		КонецЕсли;
	КонецЦикла;
	
	СписокВыраженийДляЗаполненияРеквизитовИС = Новый Соответствие;
	Для Каждого Строка Из ПравилаЗаполненияРеквизитовИС Цикл
		Если ЗначениеЗаполнено(Строка.ВычисляемоеВыражение) Тогда
			ЭтоШаблон = Ложь;
			Для Каждого ШаблонВыражения Из ШаблоныВыражений Цикл
				Если ШаблонВыражения.Значение = Строка.ВычисляемоеВыражение Тогда
					ЭтоШаблон = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЭтоШаблон Тогда
				Продолжить;
			КонецЕсли;
			Ключ = Новый Структура("ИмяРеквизитаОбъектаИС, ЭтоТаблица, Таблица");
			ЗаполнитьЗначенияСвойств(Ключ, Строка);
			СписокВыраженийДляЗаполненияРеквизитовИС.Вставить(Ключ, Строка.ВычисляемоеВыражение);
		КонецЕсли;
	КонецЦикла;
	
	Если СписокВыраженийДляЗаполненияРеквизитовДО.Количество() = 0
			И СписокВыраженийДляЗаполненияРеквизитовИС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		ВызватьИсключение НСтр("ru = 'В правилах интеграции с 1С:Документооборотом запрещено изменять выражения на встроенном языке.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	СтарыеЗначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
		"ПравилаЗаполненияРеквизитовДО, ПравилаЗаполненияРеквизитовИС");
	СтарыеПравилаЗаполненияРеквизитовДО = СтарыеЗначения.ПравилаЗаполненияРеквизитовДО.Выгрузить();
	СтарыеПравилаЗаполненияРеквизитовИС = СтарыеЗначения.ПравилаЗаполненияРеквизитовИС.Выгрузить();
	
	Для Каждого ТекущееВыражение Из СписокВыраженийДляЗаполненияРеквизитовДО Цикл
		Строки = СтарыеПравилаЗаполненияРеквизитовДО.НайтиСтроки(ТекущееВыражение.Ключ);
		Если Строки.Количество() = 1 И Строки[0].ВычисляемоеВыражение = ТекущееВыражение.Значение Тогда
			Продолжить;
		КонецЕсли;
		ВызватьИсключение НСтр("ru = 'В правилах интеграции с 1С:Документооборотом запрещено изменять выражения на встроенном языке.
			|Обратитесь к администратору.'");
	КонецЦикла;
	
	Для Каждого ТекущееВыражение Из СписокВыраженийДляЗаполненияРеквизитовИС Цикл
		Строки = СтарыеПравилаЗаполненияРеквизитовИС.НайтиСтроки(ТекущееВыражение.Ключ);
		Если Строки.Количество() = 1 И Строки[0].ВычисляемоеВыражение = ТекущееВыражение.Значение Тогда
			Продолжить;
		КонецЕсли;
		ВызватьИсключение НСтр("ru = 'В правилах интеграции с 1С:Документооборотом запрещено изменять выражения на встроенном языке.
			|Обратитесь к администратору.'");
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли