#Область ОписаниеПеременных

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ФоновоеЗадание = Новый Структура("
		|ИмяЗадания,
		|ИдентификаторЗадания,
		|АдресХранилища");

	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыНакопления.ТоварыОрганизаций) Тогда
		Элементы.ФормаЗаменитьДублиВидовЗапасов.Доступность = Ложь;
		Элементы.ФормаОбновитьИнформациюОбУстаревшихВидахЗапасов.Доступность = Ложь;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаменитьДублиВидовЗапасов(Команда)
	
	ПараметрыЗадания = Новый Структура;
	
	ЗапуститьФоновоеЗадание("ЗаменитьДублиВидовЗапасов", ПараметрыЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюОбУстаревшихВидахЗапасов(Команда)
	ПараметрыЗадания = Новый Структура;
	
	ЗапуститьФоновоеЗадание("ОбновитьИнформациюОбУстаревшихВидахЗапасов", ПараметрыЗадания);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

#Область ФоновыеЗадания

&НаКлиенте
Процедура ЗапуститьФоновоеЗадание(ИмяЗадания, ПараметрыЗадания)
	
	ЗаданиеВыполнено = ЗапуститьФоновоеЗаданиеНаСервере(ИмяЗадания, ПараметрыЗадания);
	
	Если ЗаданиеВыполнено Тогда
		ОбработатьЗавершениеЗаданияНаКлиенте();
	Иначе
		ОткрытьФормуДлительнойОперации();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЗапуститьФоновоеЗаданиеНаСервере(Знач ИмяЗадания, Знач ПараметрыЗадания)
	
	Если ИмяЗадания = "ЗаменитьДублиВидовЗапасов" Тогда
		
		РезультатЗапускаЗадания = ЗапуститьЗаданиеЗаменитьДублиВидовЗапасовСервер(ПараметрыЗадания);
		
	ИначеЕсли ИмяЗадания = "ОбновитьИнформациюОбУстаревшихВидахЗапасов" Тогда	
		
		РезультатЗапускаЗадания = ЗапуститьЗаданиеОбновитьИнформациюОбУстаревшихВидахЗапасов(ПараметрыЗадания);
		
	Иначе
		
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Неизвестное задание ""%1""'"),
							ИмяЗадания);
	КонецЕсли;
	
	ФоновоеЗадание.ИмяЗадания           = ИмяЗадания;
	ФоновоеЗадание.ИдентификаторЗадания = РезультатЗапускаЗадания.ИдентификаторЗадания;
	ФоновоеЗадание.АдресХранилища       = РезультатЗапускаЗадания.АдресХранилища;
	
	Возврат РезультатЗапускаЗадания.ЗаданиеВыполнено;

КонецФункции

&НаКлиенте
Процедура ОбработатьЗавершениеЗаданияНаКлиенте()

	Если ФоновоеЗадание.ИмяЗадания = "ЗаменитьДублиВидовЗапасов" Тогда
		ЗавершениеЗаданияЗаменитьДублиВидовЗапасовСервер(ФоновоеЗадание.АдресХранилища);
	ИначеЕсли ФоновоеЗадание.ИмяЗадания = "ОбновитьИнформациюОбУстаревшихВидахЗапасов" Тогда
		ЗавершениеЗаданияОбновитьИнформациюОбУстаревшихВидахЗапасов(ФоновоеЗадание.АдресХранилища);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуДлительнойОперации()
	
	ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
	
	ПараметрыОбработчикаОжидания.КоэффициентУвеличенияИнтервала = 1.2;
	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	
	ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(
		ЭтаФорма, ФоновоеЗадание.ИдентификаторЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		
		Если ФормаДлительнойОперации.Открыта() Тогда
			
			Если ЗаданиеВыполнено(ФоновоеЗадание.ИдентификаторЗадания) Тогда
				ОбработатьЗавершениеЗаданияНаКлиенте();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания",
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
			КонецЕсли;
				
		КонецЕсли;
		
	Исключение
		
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

#Область ВыполнениеЗаданий

&НаСервере
Функция ЗапуститьЗаданиеЗаменитьДублиВидовЗапасовСервер(ПараметрыЗадания)
	
	НаименованиеЗадания = НСтр("ru = 'Замена дублей видов запасов'");
	
	РезультатЗапускаЗадания = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
									УникальныйИдентификатор,
									"Справочники.ВидыЗапасов.ЗаменитьДублиВидовЗапасов",
									ПараметрыЗадания,
									НаименованиеЗадания);
			
	Возврат РезультатЗапускаЗадания;
		
КонецФункции

&НаКлиенте
Процедура ЗавершениеЗаданияЗаменитьДублиВидовЗапасовСервер(АдресХранилища)
	
	Результат = ЗавершениеЗаданияНаСервере(АдресХранилища);
	
	Картинка = БиблиотекаКартинок.Информация32;
	ТекстЗаголовка = НСтр("ru='Дубли видов запасов заменены'");
	ТекстСообщения = НСтр("ru='Операция по замене дублирующихся элементов справочника ""Виды запасов"" завершена.'");
	
	ПоказатьОповещениеПользователя(ТекстЗаголовка, Неопределено, ТекстСообщения, Картинка);
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьЗаданиеОбновитьИнформациюОбУстаревшихВидахЗапасов(ПараметрыЗадания)
	
	НаименованиеЗадания = НСтр("ru = 'Обновление информации об устаревших видах запасов с остатками'");
	
	РезультатЗапускаЗадания = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
									УникальныйИдентификатор,
									"РегистрыСведений.УстаревшиеВидыЗапасовСОстатками.ОбновитьЗаписи",
									ПараметрыЗадания,
									НаименованиеЗадания);
			
	Возврат РезультатЗапускаЗадания;
		
КонецФункции

&НаКлиенте
Процедура ЗавершениеЗаданияОбновитьИнформациюОбУстаревшихВидахЗапасов(АдресХранилища)
	
	Результат = ЗавершениеЗаданияНаСервере(АдресХранилища);
	
	Картинка = БиблиотекаКартинок.Информация32;
	ТекстЗаголовка = НСтр("ru='Информация обновлена'");
	ТекстСообщения = НСтр("ru='Обновление информации об устаревших видах запасов с остатками завершено'");
	
	ПоказатьОповещениеПользователя(ТекстЗаголовка, Неопределено, ТекстСообщения, Картинка);
	
КонецПроцедуры

&НаСервере
Функция ЗавершениеЗаданияНаСервере(АдресХранилища)
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Элементы.Список.Обновить();
	Элементы.СписокИнтеркампани.Обновить();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти
