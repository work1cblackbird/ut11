#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Конструктор, который возвращает коллекцию реквизитов справочника, по которым определяется уникальность ключа.
//
// Возвращаемое значение:
//	Соответствие Из КлючИЗначение:
//		* Ключ - Строка - имя реквизита справочника.
//		* Значение - Произвольный - значение реквизита.
//
Функция КлючевыеРеквизиты() Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить("Организация");
	Результат.Вставить("ТипЗапасов");
	Результат.Вставить("НалогообложениеНДС");
	Результат.Вставить("ВладелецТовара");
	Результат.Вставить("Соглашение");
	Результат.Вставить("Валюта");
	Результат.Вставить("РеализацияЗапасовДругойОрганизации");
	Результат.Вставить("ВидЗапасовВладельца");
	Результат.Вставить("СпособПередачиТоваров");
	Результат.Вставить("УстарелоПоставщик");
	Результат.Вставить("УстарелоПредназначение");
	Результат.Вставить("УстарелоПодразделение");
	Результат.Вставить("УстарелоМенеджер");
	Результат.Вставить("УстарелоСделка");
	Результат.Вставить("ГруппаФинансовогоУчета");
	Результат.Вставить("Контрагент");
	Результат.Вставить("Договор");
	Результат.Вставить("УстарелоНазначение");
	Результат.Вставить("ГруппаПродукции");
	Результат.Вставить("ВидЦены");
	
	Возврат Результат;
	
КонецФункции

// Возвращает вид запасов для текущего документа.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Операция документа
//	РеквизитыДокумента - Структура, ВыборкаИзРезультатаЗапроса - Данные документа:
//      * Организация - СправочникСсылка.Организации
//      * ТипЗапасов - ПеречислениеСсылка.ТипыЗапасов
//      * ВладелецТовара - СправочникСсылка.Организации, СправочникСсылка.Партнеры -
//      * Контрагент - СправочникСсылка.Организации, СправочникСсылка.Контрагенты -
//      * Соглашение - СправочникСсылка.СоглашенияСПоставщиками
//      * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями -
//      * Валюта - СправочникСсылка.Валюты
//      * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС
//      * НалогообложениеОрганизации - ПеречислениеСсылка.СистемыНалогообложения
//      * ВидЗапасов - СправочникСсылка.ВидыЗапасов
//      * ГруппаФинансовогоУчета - СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры
//      * ГруппаПродукции - СправочникСсылка.Организации
//      * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации
//      * ВидЦены - СправочникСсылка.ВидыЦенПоставщиков
//      * СохраняемыйВидЗапасов - СправочникСсылка.ВидыЗапасов.
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - найденный вид запасов.
//
Функция ВидЗапасовДокумента(Организация, ХозяйственнаяОперация = Неопределено, РеквизитыДокумента = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(РеквизитыДокумента) Тогда
		ИменаРеквизитов = "
			|Организация,
			|ТипЗапасов,
			|ВладелецТовара,
			|Контрагент,
			|Соглашение,
			|Договор,
			|Валюта,
			|НалогообложениеНДС,
			|НалогообложениеОрганизации,
			|ВидЗапасов,
			|ГруппаФинансовогоУчета,
			|ГруппаПродукции,
			|ХозяйственнаяОперация,
			|ВидЦены,
			|СохраняемыйВидЗапасов
			|";
		Реквизиты = Новый Структура(ИменаРеквизитов);
		
		Реквизиты.Организация = Справочники.Организации.ПустаяСсылка();
		Реквизиты.ВладелецТовара = Неопределено;
		Реквизиты.Контрагент = Неопределено;
		Реквизиты.Договор = Неопределено;
		Реквизиты.Соглашение = Справочники.СоглашенияСПоставщиками.ПустаяСсылка();
		Реквизиты.Валюта = Справочники.Валюты.ПустаяСсылка();
		Реквизиты.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
		Реквизиты.ТипЗапасов = Перечисления.ТипыЗапасов.ПустаяСсылка();
		Реквизиты.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
		Реквизиты.ГруппаПродукции = Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка();
		Реквизиты.ВидЦены = Справочники.ВидыЦенПоставщиков.ПустаяСсылка();
		
		ЗаполнитьЗначенияСвойств(Реквизиты, РеквизитыДокумента);
	Иначе
		Реквизиты = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Реквизиты) И ЗначениеЗаполнено(Реквизиты.СохраняемыйВидЗапасов) Тогда
		// Вид запасов уже известен - не надо пытаться его переформировать
		Результат = Реквизиты.СохраняемыйВидЗапасов;
	Иначе
		СтруктураВидЗапасов = СтруктураВидаЗапасов(Организация, ХозяйственнаяОперация, Реквизиты);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = ВидЗапасовПоОтборамКэш(СтруктураВидЗапасов);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Возвращает вид запасов для передачи товаров между организациями.
//
// Параметры:
//	ВидЗапасовВладельца - СправочникСсылка.ВидыЗапасов - Вид запасов организации - владельца
//	ОрганизацияПродавец - СправочникСсылка.Организации - Организация - продавец
//	ПередачаПодДеятельность - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение деятельности
//	ДатаДокумента - Дата - Дата документа, для определения попадает ли документ под действие 150ФЗ
//	СырьевойТовар - Булево - Признак, указывающий на то, является ли данный товар сырьевым или нет.
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - созданный вид запасов.
//
Функция ВидЗапасовДляПередачиМеждуОрганизациями(ВидЗапасовВладельца,
												ОрганизацияПродавец,
												Знач ПередачаПодДеятельность,
												Знач ДатаДокумента = Неопределено,
												СырьевойТовар = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыЗапасовВладельца.Ссылка КАК ВидЗапасовВладельца,
	|	ВидыЗапасовПродавца.Ссылка КАК ВидЗапасов,
	|	Настройка.ОрганизацияПродавец КАК Организация,
	|	ВидыЗапасовВладельца.Организация КАК Комитент,
	|	ВидыЗапасовВладельца.Организация КАК Контрагент,
	|	Настройка.Валюта КАК Валюта,
	|	Настройка.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ИСТИНА КАК РеализацияЗапасовДругойОрганизации,
	|	&ПередачаПодДеятельность КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|			ТОГДА ВидыЗапасовВладельца.Организация
	|		ИНАЧЕ ВидыЗапасовВладельца.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВидыЗапасовВладельца.ТипЗапасов КАК ТипЗапасовВладельца,
	|	ВидыЗапасовВладельца.НалогообложениеНДС КАК НалогообложениеВладельца
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО ВидыЗапасовВладельца.Организация = Настройка.ОрганизацияВладелец
	|			И ВидыЗапасовВладельца.ТипЗапасов = Настройка.ТипЗапасов
	|			И (Настройка.ОрганизацияПродавец = &ОрганизацияПродавец)
	|			И (Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовПродавца
	|		ПО ВидыЗапасовВладельца.Ссылка = ВидыЗапасовПродавца.ВидЗапасовВладельца
	|			И (Настройка.ОрганизацияПродавец = ВидыЗапасовПродавца.Организация)
	|			И (Настройка.СпособПередачиТоваров = ВидыЗапасовПродавца.СпособПередачиТоваров)
	|			И (Настройка.Валюта = ВидыЗапасовПродавца.Валюта
	|				ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа))
	|			И (ВидыЗапасовПродавца.НалогообложениеНДС = &ПередачаПодДеятельность
	|				ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию))
	|ГДЕ
	|	ВидыЗапасовВладельца.Ссылка = &ВидЗапасовВладельца";
	
	ИспользоватьРаздельныйУчетПоНалогообложению =
		НастройкиНалоговУчетныхПолитикПовтИсп.РаздельныйУчетТоваровПоНалогообложениюНДС(ОрганизацияПродавец, ДатаДокумента);
	
	Запрос.УстановитьПараметр("ОрганизацияПродавец", ОрганизацияПродавец);
	Запрос.УстановитьПараметр("ВидЗапасовВладельца", ВидЗапасовВладельца);
	
	Если ИспользоватьРаздельныйУчетПоНалогообложению Тогда
		Запрос.УстановитьПараметр("ПередачаПодДеятельность", ПередачаПодДеятельность);
	Иначе
		Запрос.УстановитьПараметр("ПередачаПодДеятельность", Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	КонецЕсли;
	
	ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Выборка.Следующий() Тогда
		
		Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
			ВидЗапасов = Выборка.ВидЗапасов;
		Иначе
			ИменаПараметров = "
				|Организация,
				|СпособПередачиТоваров,
				|Комитент,
				|Контрагент,
				|Валюта,
				|ВидЗапасовВладельца,
				|РеализацияЗапасовДругойОрганизации,
				|ВладелецТовара,
				|НалогообложениеНДС
				|";
			ПараметрыЗаполнения = Новый Структура(ИменаПараметров);
			ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, Выборка);
			
			Если Выборка.СпособПередачиТоваров = Перечисления.СпособыПередачиТоваров.ПередачаНаКомиссию
				Или Выборка.СпособПередачиТоваров = Перечисления.СпособыПередачиТоваров.ПередачаНаКомиссиюВозврат Тогда
				
				Если ПередачаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
					И ДатаДокумента >= УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта Тогда
					
					Если СырьевойТовар Тогда
						НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг;
					Иначе
						НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;
					КонецЕсли;
					
				ИначеЕсли Выборка.ТипЗапасовВладельца = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
					НалогообложениеНДС = Выборка.НалогообложениеВладельца;
				Иначе
					УстановитьПривилегированныйРежим(Истина);
					ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
						Выборка.ВладелецТовара,
						ТекущаяДатаСеанса());
					НалогообложениеНДС = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
					УстановитьПривилегированныйРежим(Ложь);
				КонецЕсли;
				
			ИначеЕсли ИспользоватьРаздельныйУчетПоНалогообложению Тогда
				Если ПередачаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
					И ДатаДокумента >= УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта Тогда
					Если СырьевойТовар Тогда
						НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг;
					Иначе
						НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;
					КонецЕсли;
				Иначе
					НалогообложениеНДС = ПередачаПодДеятельность;
				КонецЕсли;
			Иначе
				НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
			КонецЕсли;
			
			СправочникОбъект = Справочники.ВидыЗапасов.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(СправочникОбъект, ПараметрыЗаполнения);
			СправочникОбъект.НалогообложениеНДС = НалогообложениеНДС;
			
			УстановитьПривилегированныйРежим(Истина);
			СправочникОбъект.Записать();
			УстановитьПривилегированныйРежим(Ложь);
			
			ВидЗапасов = СправочникОбъект.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ВидЗапасов;
	
КонецФункции

// Возвращает вид запасов для возврата товаров от клиента.
//
// Параметры:
//	ВидЗапасовОтгрузки - СправочникСсылка.ВидыЗапасов - Вид запасов реализованного товара.
//	Организация - СправочникСсылка.Организации - Организация в документе возврата товаров
//				- Неопределено - Организация берется из вида запасов отгрузки.
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - Созданный вид запасов.
//
Функция ВидЗапасовДляВозвратаТоваровОтКлиента(ВидЗапасовОтгрузки, Организация = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка					КАК ВидЗапасов,
	|	ВидыЗапасов.Организация				КАК Организация,
	|	ВидыЗапасов.ТипЗапасов				КАК ТипЗапасов,
	|	ВидыЗапасов.ВладелецТовара			КАК ВладелецТовара,
	|	ВидыЗапасов.Контрагент				КАК Контрагент,
	|	ВидыЗапасов.Договор					КАК Договор,
	|	ВидыЗапасов.Соглашение				КАК Соглашение,
	|	ВидыЗапасов.Валюта					КАК Валюта,
	|	ВидыЗапасов.ГруппаФинансовогоУчета	КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеОрганизации
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &ВидЗапасовОтгрузки";
	
	Запрос.УстановитьПараметр("ВидЗапасовОтгрузки", ВидЗапасовОтгрузки);
	
	ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Выборка.Следующий() Тогда
		ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
			?(Организация = Неопределено, Выборка.Организация, Организация),
			Выборка.ХозяйственнаяОперация,
			Выборка);
	КонецЕсли;
	
	Возврат ВидЗапасов;
	
КонецФункции

// Возвращает параметры отбора видов запасов.
//
// Возвращаемое значение:
//	Структура - содержит следующие ключи:
//		* Организация - СправочникСсылка.Организации, Массив из СправочникСсылка.Организации - организация, от имени которой будет оформляться реализация товаров.
//		* ОрганизацияДавалец - СправочникСсылка.Организации, Массив из СправочникСсылка.Организации - организация, для которой выполняется производство.
//		* ТипЗапасов - ПеречислениеСсылка.ТипыЗапасов, Массив из ПеречислениеСсылка.ТипыЗапасов - доступные типы запасов товаров.
//		* ВладелецТовара - СправочникСсылка.Организации, СправочникСсылка.Партнеры, Неопределено - владелец товаров.
//		* Контрагент - СправочникСсылка.Организации, СправочникСсылка.Контрагенты, Неопределено - контрагент, с которым заключается договор на реализацию товаров.
//		* Соглашение - СправочникСсылка.СоглашенияСПоставщиками - соглашение, в рамках которого оформляется поступление товаров.
//		* Договор - Неопределено, СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями, Массив из СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - договор, в рамках которого оформляется реализация товаров.
//		* Валюта - СправочникСсылка.Валюты - валюта, по которой осуществляются взаиморасчеты с владельцем товаров.
//		* НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - тип налогообложения реализации товаров, облагаемой налогом на добавленную стоимость.
//		* ГруппаФинансовогоУчета - СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры - группа финансового учета товаров.
//		* ГруппаПродукции - СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры - вид продукции.
//		* ВидЦены - СправочникСсылка.ВидыЦенПоставщиков - вид цены, по которой зафиксировано поступление товара.
//
Функция ПараметрыОтбораВидовЗапасов() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Параметры.Вставить("ВладелецТовара", Неопределено);
	Параметры.Вставить("Контрагент", Неопределено);
	Параметры.Вставить("Договор", Неопределено);
	Параметры.Вставить("Соглашение", Справочники.СоглашенияСПоставщиками.ПустаяСсылка());
	Параметры.Вставить("Валюта", Справочники.Валюты.ПустаяСсылка());
	Параметры.Вставить("НалогообложениеНДС", Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	Параметры.Вставить("ТипЗапасов", Перечисления.ТипыЗапасов.ПустаяСсылка());
	Параметры.Вставить("ГруппаФинансовогоУчета", Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка());
	Параметры.Вставить("ГруппаПродукции", Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка());
	Параметры.Вставить("ВидЦены", Справочники.ВидыЦенПоставщиков.ПустаяСсылка());
	
	Возврат Параметры;
	
КонецФункции

// Возращает значение справочника, по переданным параметрам отбора.
//
// Параметры:
//	ПоляОтбора - см. ПараметрыОтбораВидовЗапасов.
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - найденное значение справочника.
//	Неопределено - если не удалось найти значение справочника, по заданным параметрам отбора.
//
Функция ВидЗапасовПоОтборам(ПоляОтбора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ТипЗапасов = &ТипЗапасов
	|	И ВидыЗапасов.НалогообложениеНДС = &НалогообложениеНДС
	|	И ВидыЗапасов.ВладелецТовара = &ВладелецТовара
	|	И ВидыЗапасов.Соглашение = &Соглашение
	|	И ВидыЗапасов.Валюта = &Валюта
	|	И ВидыЗапасов.ГруппаФинансовогоУчета = &ГруппаФинансовогоУчета
	|	И ВидыЗапасов.Контрагент = &Контрагент
	|	И ВидыЗапасов.Договор = &Договор
	|	И ВидыЗапасов.ГруппаПродукции = &ГруппаПродукции
	|	И ВидыЗапасов.ВидЦены = &ВидЦены
	|	И НЕ ВидыЗапасов.ЭтоДубль
	|	И НЕ ВидыЗапасов.Устаревший";
	
	Запрос.УстановитьПараметр("Организация", ПоляОтбора.Организация);
	Запрос.УстановитьПараметр("ТипЗапасов", ПоляОтбора.ТипЗапасов);
	Запрос.УстановитьПараметр("ВладелецТовара", ПоляОтбора.ВладелецТовара);
	Запрос.УстановитьПараметр("Контрагент", ПоляОтбора.Контрагент);
	Запрос.УстановитьПараметр("Соглашение", ПоляОтбора.Соглашение);
	Запрос.УстановитьПараметр("Договор", ПоляОтбора.Договор);
	Запрос.УстановитьПараметр("Валюта", ПоляОтбора.Валюта);
	Запрос.УстановитьПараметр("НалогообложениеНДС", ПоляОтбора.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета", ПоляОтбора.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("ГруппаПродукции", ПоляОтбора.ГруппаПродукции);
	Запрос.УстановитьПараметр("ВидЦены", ПоляОтбора.ВидЦены);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ВидЗапасов = ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		ВидЗапасов = Неопределено;
	КонецЕсли;
	
	Возврат ВидЗапасов;
	
КонецФункции

#Область ЗаменаДублейВидовЗапасов

// Возвращает текст запроса, выполняющего поиск дублей справочника.
//
// Возвращаемое значение:
//	Строка - текст запроса.
//
Функция ТекстЗапросаНаличиеДублейВидовЗапасов() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ЭтоДубль";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Выполняет замену дублей справочника в информационной базе.
//
// Параметры:
//	Параметры - Структура - параметры, используемые при обработке данных.
//	АдресХранилищаРезультата - Строка - адрес результата обработки во временном хранилище.
//
Процедура ЗаменитьДублиВидовЗапасов(Параметры = Неопределено, АдресХранилищаРезультата = "") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаПоискаДублейВидовЗапасов() + 
	"ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.Наименование КАК Наименование,
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР ВидыЗапасов.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПоставщик В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ВидыЗапасов.ВладелецТовара В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.УстарелоПоставщик
	|	КОНЕЦ КАК УстарелоПоставщик,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.УстарелоПредназначение
	|	КОНЕЦ КАК УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР ВидыЗапасов.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР ВидыЗапасов.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Договор
	|	КОНЕЦ КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.ЭтоДубль КАК ЭтоДубль
	|ПОМЕСТИТЬ СпрВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВидыЗапасов.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВидыЗапасов.УстарелоПоставщик КАК УстарелоПоставщик,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.Контрагент КАК Контрагент,
	|	ВидыЗапасов.Договор КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КорректныеВидыЗапасов
	|ИЗ
	|	СпрВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыДублей КАК Отборы
	|		ПО ВидыЗапасов.Организация = Отборы.Организация
	|			И ВидыЗапасов.ТипЗапасов = Отборы.ТипЗапасов
	|			И ВидыЗапасов.ВладелецТовара = Отборы.ВладелецТовара
	|			И ВидыЗапасов.Соглашение = Отборы.Соглашение
	|			И ВидыЗапасов.Валюта = Отборы.Валюта
	|			И ВидыЗапасов.РеализацияЗапасовДругойОрганизации = Отборы.РеализацияЗапасовДругойОрганизации
	|			И ВидыЗапасов.ВидЗапасовВладельца = Отборы.ВидЗапасовВладельца
	|			И ВидыЗапасов.СпособПередачиТоваров = Отборы.СпособПередачиТоваров
	|			И ВидыЗапасов.УстарелоПоставщик = Отборы.УстарелоПоставщик
	|			И ВидыЗапасов.УстарелоПодразделение = Отборы.УстарелоПодразделение
	|			И ВидыЗапасов.УстарелоМенеджер = Отборы.УстарелоМенеджер
	|			И ВидыЗапасов.УстарелоСделка = Отборы.УстарелоСделка
	|			И ВидыЗапасов.Контрагент = Отборы.Контрагент
	|			И ВидыЗапасов.Договор = Отборы.Договор
	|			И ВидыЗапасов.УстарелоНазначение = Отборы.УстарелоНазначение
	|			И ВидыЗапасов.ГруппаПродукции = Отборы.ГруппаПродукции
	|			И ВидыЗапасов.ВидЦены = Отборы.ВидЦены
	|			И ВидыЗапасов.ГруппаФинансовогоУчета = Отборы.ГруппаФинансовогоУчета
	|			И ВидыЗапасов.НалогообложениеНДС = Отборы.НалогообложениеНДС
	|ГДЕ
	|	НЕ ВидыЗапасов.ЭтоДубль
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипЗапасов,
	|	ВладелецТовара,
	|	Соглашение,
	|	Валюта,
	|	РеализацияЗапасовДругойОрганизации,
	|	ВидЗапасовВладельца,
	|	СпособПередачиТоваров,
	|	УстарелоПоставщик,
	|	УстарелоПодразделение,
	|	УстарелоМенеджер,
	|	УстарелоСделка,
	|	Контрагент,
	|	Договор,
	|	УстарелоНазначение,
	|	ГруппаПродукции,
	|	ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВидыЗапасов.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВидыЗапасов.УстарелоПоставщик КАК УстарелоПоставщик,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.Контрагент КАК Контрагент,
	|	ВидыЗапасов.Договор КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДублиВидовЗапасов
	|ИЗ
	|	СпрВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыДублей КАК Отборы
	|		ПО ВидыЗапасов.Организация = Отборы.Организация
	|			И ВидыЗапасов.ТипЗапасов = Отборы.ТипЗапасов
	|			И ВидыЗапасов.ВладелецТовара = Отборы.ВладелецТовара
	|			И ВидыЗапасов.Соглашение = Отборы.Соглашение
	|			И ВидыЗапасов.Валюта = Отборы.Валюта
	|			И ВидыЗапасов.РеализацияЗапасовДругойОрганизации = Отборы.РеализацияЗапасовДругойОрганизации
	|			И ВидыЗапасов.ВидЗапасовВладельца = Отборы.ВидЗапасовВладельца
	|			И ВидыЗапасов.СпособПередачиТоваров = Отборы.СпособПередачиТоваров
	|			И ВидыЗапасов.УстарелоПоставщик = Отборы.УстарелоПоставщик
	|			И ВидыЗапасов.УстарелоПодразделение = Отборы.УстарелоПодразделение
	|			И ВидыЗапасов.УстарелоМенеджер = Отборы.УстарелоМенеджер
	|			И ВидыЗапасов.УстарелоСделка = Отборы.УстарелоСделка
	|			И ВидыЗапасов.Контрагент = Отборы.Контрагент
	|			И ВидыЗапасов.Договор = Отборы.Договор
	|			И ВидыЗапасов.УстарелоНазначение = Отборы.УстарелоНазначение
	|			И ВидыЗапасов.ГруппаПродукции = Отборы.ГруппаПродукции
	|			И ВидыЗапасов.ВидЦены = Отборы.ВидЦены
	|			И ВидыЗапасов.ГруппаФинансовогоУчета = Отборы.ГруппаФинансовогоУчета
	|			И ВидыЗапасов.НалогообложениеНДС = Отборы.НалогообложениеНДС
	|ГДЕ
	|	ВидыЗапасов.ЭтоДубль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Корректные.Ссылка, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)) КАК КорректныйВидЗапасов,
	|	Дубли.Ссылка КАК Дубль,
	|	Дубли.Ссылка.ПометкаУдаления КАК ПометкаУдаленияДубля
	|ИЗ
	|	ДублиВидовЗапасов КАК Дубли
	|		ЛЕВОЕ СОЕДИНЕНИЕ КорректныеВидыЗапасов КАК Корректные
	|		ПО Дубли.Организация = Корректные.Организация
	|			И Дубли.ТипЗапасов = Корректные.ТипЗапасов
	|			И Дубли.ВладелецТовара = Корректные.ВладелецТовара
	|			И Дубли.Соглашение = Корректные.Соглашение
	|			И Дубли.Валюта = Корректные.Валюта
	|			И Дубли.РеализацияЗапасовДругойОрганизации = Корректные.РеализацияЗапасовДругойОрганизации
	|			И Дубли.ВидЗапасовВладельца = Корректные.ВидЗапасовВладельца
	|			И Дубли.СпособПередачиТоваров = Корректные.СпособПередачиТоваров
	|			И Дубли.УстарелоПоставщик = Корректные.УстарелоПоставщик
	|			И Дубли.УстарелоПодразделение = Корректные.УстарелоПодразделение
	|			И Дубли.УстарелоМенеджер = Корректные.УстарелоМенеджер
	|			И Дубли.УстарелоСделка = Корректные.УстарелоСделка
	|			И Дубли.Контрагент = Корректные.Контрагент
	|			И Дубли.Договор = Корректные.Договор
	|			И Дубли.УстарелоНазначение = Корректные.УстарелоНазначение
	|			И Дубли.ГруппаПродукции = Корректные.ГруппаПродукции
	|			И Дубли.ВидЦены = Корректные.ВидЦены
	|			И Дубли.ГруппаФинансовогоУчета = Корректные.ГруппаФинансовогоУчета
	|			И Дубли.НалогообложениеНДС = Корректные.НалогообложениеНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОтборыДублей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КорректныеВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДублиВидовЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СпрВидыЗапасов";
	
	УстановитьПараметрыЗапросаПоискаДублей(Запрос);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	
	// Собственные виды запасов.
	ВсеДубли = Результат.Выгрузить();
	
	ОтборДублей = Новый Структура("КорректныйВидЗапасов", Справочники.ВидыЗапасов.ПустаяСсылка());
	ДублиБезКорректныхЗаписей = ВсеДубли.НайтиСтроки(ОтборДублей);
	
	Если ДублиБезКорректныхЗаписей.Количество() > 0 Тогда
		Для Каждого СтрМас Из ДублиБезКорректныхЗаписей Цикл
			НачатьТранзакцию();
			Попытка
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("Справочник.ВидыЗапасов");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", СтрМас.Дубль);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				Блокировка.Заблокировать();
				
				СправочникОбъект = СтрМас.Дубль.ПолучитьОбъект();
				СправочникОбъект.ЭтоДубль = Ложь;
				СправочникОбъект.ДополнительныеСвойства.Вставить("НеПроверятьДубли", Истина);
				СправочникОбъект.Записать();
				
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				
				ТекстСообщения = НСтр("ru = 'Не отменить отметку %ЭтоДубль%: %Ссылка% по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЭтоДубль%", "ЭтоДубль");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", СправочникОбъект.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.ВидыЗапасов,
					СправочникОбъект.Ссылка,
					ТекстСообщения);
			КонецПопытки;
		КонецЦикла;
		
		ПометитьДублиВидовЗапасов();
		
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	// Собственные виды запасов.
	Результат = Запрос.Выполнить();
	ВсеДубли = Результат.Выгрузить();
	
	ОтборДублей = Новый Структура("КорректныйВидЗапасов", Справочники.ВидыЗапасов.ПустаяСсылка());
	ДублиБезКорректныхЗаписей = ВсеДубли.НайтиСтроки(ОтборДублей);
	
	Если ДублиБезКорректныхЗаписей.Количество() > 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не для всех дублей видов запасов удается определить корректный вид запасов. Обратитесь к разработчикам.'");
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	// Сформируем соответствие элементов к замене.
	СоответствиеЗаписей = Новый Соответствие;
	
	Для Каждого СтрМас Из ВсеДубли Цикл
		СоответствиеЗаписей.Вставить(СтрМас.Дубль, СтрМас.КорректныйВидЗапасов);
		
		Если Не СтрМас.ПометкаУдаленияДубля Тогда
			СправочникОбъект = СтрМас.Дубль.ПолучитьОбъект();
			СправочникОбъект.ДополнительныеСвойства.Вставить("НеПроверятьДубли", Истина);
			СправочникОбъект.УстановитьПометкуУдаления(Истина, Ложь);
		КонецЕсли;
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	Если СоответствиеЗаписей.Количество() > 0 Тогда
		// Заменим дубли.
		Исключения = Новый Массив;
		Исключения.Добавить(Метаданные.РегистрыСведений.СтоимостьТоваров);
		Исключения.Добавить(Метаданные.РегистрыСведений.УстаревшиеВидыЗапасовСОстатками);
		
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначенияУТ.ЗаменитьСсылки(СоответствиеЗаписей, Исключения);
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗаменитьДублиВРегистреСтоимостьТоваров(СоответствиеЗаписей);
		
		УстановитьПривилегированныйРежим(Истина);
		РегистрыСведений.УстаревшиеВидыЗапасовСОстатками.ОбновитьЗаписи();
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
//
// Параметры:
//	Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	( ЗначениеРазрешено(Организация)
	|	ИЛИ(ВЫБОР КОГДА ТипЗначения(ВладелецТовара) = Тип(Справочник.Организации) ТОГДА ЗначениеРазрешено(ВладелецТовара)
	|	ИНАЧЕ ЛОЖЬ КОНЕЦ)) 
	|	И(ВЫБОР КОГДА ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА ЗначениеРазрешено(ВладелецТовара)
	|	ИНАЧЕ ИСТИНА КОНЕЦ) ";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаменаДублейВидовЗапасов

Функция ТекстЗапросаПоискаДублейВидовЗапасов(ЭтоОбработчикОбновления = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР ВидыЗапасов.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПоставщик В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ВидыЗапасов.ВладелецТовара В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.УстарелоПоставщик
	|	КОНЕЦ КАК УстарелоПоставщик,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.УстарелоПредназначение
	|	КОНЕЦ КАК УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР ВидыЗапасов.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР ВидыЗапасов.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Договор
	|	КОНЕЦ КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	СУММА(1) КАК КоличествоДублей
	|ПОМЕСТИТЬ ВтОтборыДублей
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	(&ПоВсемОрганизациям
	|			ИЛИ ВидыЗапасов.Организация В (&МассивОрганизаций))
	|	И (НЕ ВидыЗапасов.ПометкаУдаления
	|			ИЛИ НЕ &ПроверятьПометкуУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.Организация,
	|	ВидыЗапасов.ТипЗапасов,
	|	ВидыЗапасов.НалогообложениеНДС,
	|	ВЫБОР ВидыЗапасов.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.ВладелецТовара
	|	КОНЕЦ,
	|	ВидыЗапасов.Соглашение,
	|	ВидыЗапасов.Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПоставщик В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ВидыЗапасов.ВладелецТовара В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.УстарелоПоставщик
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.УстарелоПредназначение
	|	КОНЕЦ,
	|	ВидыЗапасов.УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета,
	|	ВЫБОР ВидыЗапасов.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Контрагент
	|	КОНЕЦ,
	|	ВЫБОР ВидыЗапасов.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Договор
	|	КОНЕЦ,
	|	ВидыЗапасов.УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипЗапасов,
	|	ВладелецТовара,
	|	Соглашение,
	|	Валюта,
	|	РеализацияЗапасовДругойОрганизации,
	|	ВидЗапасовВладельца,
	|	СпособПередачиТоваров,
	|	УстарелоПоставщик,
	|	УстарелоПодразделение,
	|	УстарелоМенеджер,
	|	УстарелоСделка,
	|	Контрагент,
	|	Договор,
	|	УстарелоНазначение,
	|	ГруппаПродукции,
	|	ВидЦены";
	
	ТекстЗапроса = ТекстЗапроса + 
	"
	|;
	|//////////////////////////////////////////
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЭтоОбработчикОбновления", ?(ЭтоОбработчикОбновления, "ИСТИНА", "ЛОЖЬ"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаПоискаДублей(Запрос, МассивОрганизаций = Неопределено, ПроверятьПометкуУдаления = Ложь)
	
	ЕстьОтборПоОрганизациям = ЗначениеЗаполнено(МассивОрганизаций);
	
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЕстьОтборПоОрганизациям);
	Запрос.УстановитьПараметр("МассивОрганизаций", ?(ЕстьОтборПоОрганизациям, МассивОрганизаций, Новый Массив));
	Запрос.УстановитьПараметр("ПроверятьПометкуУдаления", ПроверятьПометкуУдаления);
	
КонецПроцедуры

Процедура ЗаменитьДублиВРегистреСтоимостьТоваров(СоответствиеАналитик)
	
	ТаблицаАналитик = Новый ТаблицаЗначений;
	ТаблицаАналитик.Колонки.Добавить("ЗаменяемаяАналитика",	Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	ТаблицаАналитик.Колонки.Добавить("НоваяАналитика",		Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	
	Для Каждого КлючИЗначение Из СоответствиеАналитик Цикл
		НоваяСтрока = ТаблицаАналитик.Добавить();
		НоваяСтрока.ЗаменяемаяАналитика = КлючИЗначение.Ключ;
		НоваяСтрока.НоваяАналитика 		= КлючИЗначение.Значение;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаАналитик", ТаблицаАналитик);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.ЗаменяемаяАналитика КАК ЗаменяемаяАналитика,
	|	Т.НоваяАналитика КАК НоваяАналитика
	|ПОМЕСТИТЬ ВТАналитики
	|ИЗ
	|	&ТаблицаАналитик КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаменяемаяАналитика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтоимостьТоваров.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТАналитики КАК ВТАналитики
	|		ПО СтоимостьТоваров.ВидЗапасов = ВТАналитики.ЗаменяемаяАналитика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьТоваров.Регистратор КАК Регистратор,
	|	КОНЕЦПЕРИОДА(СтоимостьТоваров.Период, МЕСЯЦ) КАК Период,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.Организация КАК Организация,
	|	СтоимостьТоваров.РазделУчета КАК РазделУчета,
	|	ЕСТЬNULL(ВТАналитики.НоваяАналитика, СтоимостьТоваров.ВидЗапасов) КАК ВидЗапасов,
	|	СРЕДНЕЕ(СтоимостьТоваров.Стоимость) КАК Стоимость,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьДопРасходы) КАК СтоимостьДопРасходы,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьЗабалансовая) КАК СтоимостьЗабалансовая,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьДопРасходыБезНДС) КАК СтоимостьДопРасходыБезНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.Трудозатраты) КАК Трудозатраты,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПостоянныеСНДС) КАК ПостатейныеПостоянныеСНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПеременныеСНДС) КАК ПостатейныеПеременныеСНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьРегл) КАК СтоимостьРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ДопРасходыРегл) КАК ДопРасходыРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ТрудозатратыРегл) КАК ТрудозатратыРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СРЕДНЕЕ(СтоимостьТоваров.ВременнаяРазница) КАК ВременнаяРазница,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьУпр) КАК СтоимостьУпр,
	|	СРЕДНЕЕ(СтоимостьТоваров.ДопРасходыУпр) КАК ДопРасходыУпр,
	|	СРЕДНЕЕ(СтоимостьТоваров.ТрудозатратыУпр) КАК ТрудозатратыУпр,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторы КАК ВТРегистраторы
	|		ПО СтоимостьТоваров.Регистратор = ВТРегистраторы.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитики КАК ВТАналитики
	|		ПО СтоимостьТоваров.ВидЗапасов = ВТАналитики.ЗаменяемаяАналитика
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьТоваров.Регистратор,
	|	КОНЕЦПЕРИОДА(СтоимостьТоваров.Период, МЕСЯЦ),
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.Организация,
	|	СтоимостьТоваров.РазделУчета,
	|	ЕСТЬNULL(ВТАналитики.НоваяАналитика, СтоимостьТоваров.ВидЗапасов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	РазделУчета,
	|	ВидЗапасов
	|";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ТекущийРегистратор = Неопределено;
	НаборЗаписей = РегистрыСведений.СтоимостьТоваров.СоздатьНаборЗаписей();
	
	Пока Выборка.Следующий() Цикл
		
		Если ТекущийРегистратор <> Выборка.Регистратор Тогда
			
			Если ЗначениеЗаполнено(ТекущийРегистратор) Тогда
				НаборЗаписей.Записать(Истина);
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.СтоимостьТоваров.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			
			ТекущийРегистратор = Выборка.Регистратор;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекущийРегистратор) Тогда
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция СоздатьВидЗапасов(СтруктураПолей)
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных();
		
		ЭлементБлокировки = Блокировка.Добавить("Справочник.ВидыЗапасов");
		Если ЗначениеЗаполнено(СтруктураПолей.Организация) Тогда
			ЭлементБлокировки.УстановитьЗначение("Организация", СтруктураПолей.Организация);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ТипЗапасов) Тогда
			ЭлементБлокировки.УстановитьЗначение("ТипЗапасов", СтруктураПолей.ТипЗапасов);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ВладелецТовара) Тогда
			ЭлементБлокировки.УстановитьЗначение("ВладелецТовара", СтруктураПолей.ВладелецТовара);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.Контрагент) Тогда
			ЭлементБлокировки.УстановитьЗначение("Контрагент", СтруктураПолей.Контрагент);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.Соглашение) Тогда
			ЭлементБлокировки.УстановитьЗначение("Соглашение", СтруктураПолей.Соглашение);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.Договор) Тогда
			ЭлементБлокировки.УстановитьЗначение("Договор", СтруктураПолей.Договор);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.Валюта) Тогда
			ЭлементБлокировки.УстановитьЗначение("Валюта", СтруктураПолей.Валюта);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.НалогообложениеНДС) Тогда
			ЭлементБлокировки.УстановитьЗначение("НалогообложениеНДС", СтруктураПолей.НалогообложениеНДС);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ГруппаФинансовогоУчета) Тогда
			ЭлементБлокировки.УстановитьЗначение("ГруппаФинансовогоУчета", СтруктураПолей.ГруппаФинансовогоУчета);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ГруппаПродукции) Тогда
			ЭлементБлокировки.УстановитьЗначение("ГруппаПродукции", СтруктураПолей.ГруппаПродукции);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ВидЦены) Тогда
			ЭлементБлокировки.УстановитьЗначение("ВидЦены", СтруктураПолей.ВидЦены);
		КонецЕсли;
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		Блокировка.Заблокировать();
		
		ВидЗапасов = ВидЗапасовПоОтборам(СтруктураПолей); // производится ответственное чтение еще раз
		Если Не ЗначениеЗаполнено(ВидЗапасов) Тогда // вид запасов в ИБ гарантированно отсутствует
			СправочникОбъект = Справочники.ВидыЗапасов.СоздатьЭлемент(); // поэтому можем создать новый
			ЗаполнитьЗначенияСвойств(СправочникОбъект, СтруктураПолей);
			СправочникОбъект.Записать();
			
			ВидЗапасов = СправочникОбъект.Ссылка;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ОписаниеВидаЗапасов = ОбщегоНазначенияУТКлиентСервер.ПредставлениеСтруктуры(СтруктураПолей);
		
		ТекстСообщения = НСтр("ru = 'Не удалось записать новый вид запасов с параметрами: %ОписаниеВидаЗапасов% по причине: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеВидаЗапасов%", ОписаниеВидаЗапасов);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ВидыЗапасов,
			,
			ТекстСообщения);
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат ВидЗапасов;
	
КонецФункции

// Возвращает структуру с данными для поиска или создания нового элемента справочника ВидыЗапасов.
//
// Параметры:
//	Организация				 - СправочникСсылка.Организации				 - организация, для которой требуется получить структуру
//	ХозяйственнаяОперация	 - ПеречислениеСсылка.ХозяйственныеОперации	 - хоз. операция, для которой требуется получить структуру
//	РеквизитыДокумента		 - Структура, ВыборкаИзРезультатаЗапроса	 - структура или выборка со значениями.
//
// Возвращаемое значение:
//	см. ПараметрыОтбораВидовЗапасов.
//
Функция СтруктураВидаЗапасов(Организация, ХозяйственнаяОперация = Неопределено, РеквизитыДокумента = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ТекстИсключения = НСтр("ru = 'Попытка генерации вида запасов с незаполненной организацией.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	СтруктураВидЗапасов = ПараметрыОтбораВидовЗапасов(); 
	СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
	СтруктураВидЗапасов.Организация = Организация;
	
	Если РеквизитыДокумента <> Неопределено Тогда
		
		Если РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.Услуга
			Или РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.АгентскаяУслуга Тогда
			ТекстИсключения = НСтр("ru = 'Попытка генерации вида запасов для типа запасов ""%ТипЗапасов%"".
			|Для этого типа запасов виды запасов не используются.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипЗапасов%", РеквизитыДокумента.ТипЗапасов);
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию
			Или РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
		
			СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар;
			
			ТекстыИсключения = Новый Массив;
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.ВладелецТовара) Тогда
				ТекстыИсключения.Добавить(НСтр("ru = 'Не заполнен обязательный реквизит ""Владелец товара"".'"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.Валюта) Тогда
				ТекстыИсключения.Добавить(НСтр("ru = 'Не заполнен обязательный реквизит ""Валюта"".'"));
			КонецЕсли;
			Если ТекстыИсключения.Количество() Тогда
				ТекстИсключения = НСтр("ru = 'Попытка генерации вида запасов для типа запасов ""%ТипЗапасов%"".'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипЗапасов%", СтруктураВидЗапасов.ТипЗапасов);
				ВызватьИсключение ТекстИсключения + Символы.ПС + СтрСоединить(ТекстыИсключения, Символы.ПС);
			КонецЕсли;
			
			СтруктураВидЗапасов.ВладелецТовара = РеквизитыДокумента.ВладелецТовара;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Соглашение = ?(ЗначениеЗаполнено(РеквизитыДокумента.Соглашение), РеквизитыДокумента.Соглашение, Справочники.СоглашенияСПоставщиками.ПустаяСсылка());
			СтруктураВидЗапасов.Договор = ?(ЗначениеЗаполнено(РеквизитыДокумента.Договор), РеквизитыДокумента.Договор, Неопределено);
			СтруктураВидЗапасов.Валюта = РеквизитыДокумента.Валюта;
			СтруктураВидЗапасов.НалогообложениеНДС = РеквизитыДокумента.НалогообложениеНДС;
			
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи
			Или РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи Тогда
			
			СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи;
			
			ТекстыИсключения = Новый Массив;
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.ВладелецТовара) Тогда
				ТекстыИсключения.Добавить(НСтр("ru = 'Не заполнен обязательный реквизит ""Владелец товара"".'"));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.Договор) Тогда
				ТекстыИсключения.Добавить(НСтр("ru = 'Не заполнен обязательный реквизит ""Договор"".'"));
			КонецЕсли;
			
			Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров
				И ТекстыИсключения.Количество() = 1 И Не ЗначениеЗаполнено(РеквизитыДокумента.ВидЦены) Тогда
				ТекстИсключения = НСтр("ru = 'Недостаточно товаров для выкупа с хранения.
				|В текущем режиме работы отрицательный остаток товаров организаций не контролируется, но необходимо указать вид цены.'");
				ВызватьИсключение ТекстИсключения;
			ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтгрузкаПринятыхСПравомПродажиТоваровСХранения
				И ТекстыИсключения.Количество() > 0 Тогда
				ТекстИсключения = НСтр("ru = 'Недостаточно товаров для отгрузки с хранения.
				|Даже если контроль остатков отключен, программа не поддерживает отгрузку товаров с ответственного хранения ""в минус"".'");
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
			
			Если ТекстыИсключения.Количество() Тогда
				ТекстИсключения = НСтр("ru = 'Попытка генерации вида запасов для типа запасов ""%ТипЗапасов%"".'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипЗапасов%", СтруктураВидЗапасов.ТипЗапасов);
				ВызватьИсключение ТекстИсключения + Символы.ПС + СтрСоединить(ТекстыИсключения, Символы.ПС);
			КонецЕсли;
			
			СтруктураВидЗапасов.ВладелецТовара = РеквизитыДокумента.ВладелецТовара;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Договор = РеквизитыДокумента.Договор;
			СтруктураВидЗапасов.ВидЦены = РеквизитыДокумента.ВидЦены;
			
		ИначеЕсли РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.СобственныйТоварВПути
			ИЛИ РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке Тогда
			
			СтруктураВидЗапасов.ТипЗапасов = РеквизитыДокумента.ТипЗапасов;
			
		Иначе
			Если ЗначениеЗаполнено(РеквизитыДокумента.ТипЗапасов) Тогда
				СтруктураВидЗапасов.ТипЗапасов = РеквизитыДокумента.ТипЗапасов;
			Иначе
				СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
			КонецЕсли;
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета") Тогда
			СтруктураВидЗапасов.ГруппаФинансовогоУчета = РеквизитыДокумента.ГруппаФинансовогоУчета;
		КонецЕсли;
		
		
	КонецЕсли;
	
	ПараметрыОтбораВидовЗапасов = ПараметрыОтбораВидовЗапасов(); 
	
	Для Каждого КлючИЗначение Из ПараметрыОтбораВидовЗапасов Цикл
		Если Не ЗначениеЗаполнено(СтруктураВидЗапасов[КлючИЗначение.Ключ]) Тогда
			СтруктураВидЗапасов[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураВидЗапасов;
	
КонецФункции

Функция ВидЗапасовПоОтборамКэш(ПараметрыАналитики)
	
	СтруктураАналитики = ПараметрыОтбораВидовЗапасов();
	ЗаполнитьЗначенияСвойств(СтруктураАналитики, ПараметрыАналитики);
	
	Результат = ЗначениеНастроекПовтИсп.ВидЗапасовПоОтборам(СтруктураАналитики.Организация,
		СтруктураАналитики.ТипЗапасов,
		СтруктураАналитики.ВладелецТовара,
		СтруктураАналитики.Контрагент,
		СтруктураАналитики.Соглашение,
		СтруктураАналитики.Договор,
		СтруктураАналитики.Валюта,
		СтруктураАналитики.НалогообложениеНДС,
		СтруктураАналитики.ГруппаФинансовогоУчета,
		СтруктураАналитики.ГруппаПродукции,
		СтруктураАналитики.ВидЦены);
		
	Если ЗначениеЗаполнено(Результат)
			И Не ОбщегоНазначения.СсылкаСуществует(Результат) Тогда
		Результат = Неопределено;
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Результат = СоздатьВидЗапасов(СтруктураАналитики);
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ПометитьДублиВидовЗапасов() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаПоискаДублейВидовЗапасов(Истина) + 
	"ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.Наименование КАК Наименование,
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР ВидыЗапасов.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПоставщик В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ВидыЗапасов.ВладелецТовара В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.УстарелоПоставщик
	|	КОНЕЦ КАК УстарелоПоставщик,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.УстарелоПредназначение
	|	КОНЕЦ КАК УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР ВидыЗапасов.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР ВидыЗапасов.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Договор
	|	КОНЕЦ КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.ЭтоДубль КАК ЭтоДубль,
	|	ВидыЗапасов.ПометкаУдаления КАК ПометкаУдаления
	|ПОМЕСТИТЬ СпрВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВидыЗапасов.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВидыЗапасов.УстарелоПоставщик КАК УстарелоПоставщик,
	|	ВидыЗапасов.УстарелоПредназначение КАК УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасов.Контрагент КАК Контрагент,
	|	ВидыЗапасов.Договор КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.ПометкаУдаления КАК ПометкаУдаления,
	|	ВидыЗапасов.ЭтоДубль КАК ЭтоДубль,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыОрганизаций.Регистратор) КАК КоличествоСсылок
	|ИЗ
	|	СпрВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыДублей КАК Отборы
	|		ПО ВидыЗапасов.Организация = Отборы.Организация
	|			И ВидыЗапасов.ТипЗапасов = Отборы.ТипЗапасов
	|			И ВидыЗапасов.НалогообложениеНДС = Отборы.НалогообложениеНДС
	|			И ВидыЗапасов.ВладелецТовара = Отборы.ВладелецТовара
	|			И ВидыЗапасов.Соглашение = Отборы.Соглашение
	|			И ВидыЗапасов.Валюта = Отборы.Валюта
	|			И ВидыЗапасов.РеализацияЗапасовДругойОрганизации = Отборы.РеализацияЗапасовДругойОрганизации
	|			И ВидыЗапасов.ВидЗапасовВладельца = Отборы.ВидЗапасовВладельца
	|			И ВидыЗапасов.СпособПередачиТоваров = Отборы.СпособПередачиТоваров
	|			И ВидыЗапасов.УстарелоПоставщик = Отборы.УстарелоПоставщик
	|			И ВидыЗапасов.УстарелоПредназначение = Отборы.УстарелоПредназначение
	|			И ВидыЗапасов.УстарелоПодразделение = Отборы.УстарелоПодразделение
	|			И ВидыЗапасов.УстарелоМенеджер = Отборы.УстарелоМенеджер
	|			И ВидыЗапасов.УстарелоСделка = Отборы.УстарелоСделка
	|			И ВидыЗапасов.ГруппаФинансовогоУчета = Отборы.ГруппаФинансовогоУчета
	|			И ВидыЗапасов.Контрагент = Отборы.Контрагент
	|			И ВидыЗапасов.Договор = Отборы.Договор
	|			И ВидыЗапасов.УстарелоНазначение = Отборы.УстарелоНазначение
	|			И ВидыЗапасов.ГруппаПродукции = Отборы.ГруппаПродукции
	|			И ВидыЗапасов.ВидЦены = Отборы.ВидЦены
	|			И (НЕ ВидыЗапасов.ЭтоДубль)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ПО ВидыЗапасов.Ссылка = ТоварыОрганизаций.ВидЗапасов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.Контрагент,
	|	ВидыЗапасов.УстарелоНазначение,
	|	ВидыЗапасов.Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.УстарелоПоставщик,
	|	ВидыЗапасов.Соглашение,
	|	ВидыЗапасов.ЭтоДубль,
	|	ВидыЗапасов.ВладелецТовара,
	|	ВидыЗапасов.СпособПередачиТоваров,
	|	ВидыЗапасов.ВидЗапасовВладельца,
	|	ВидыЗапасов.Договор,
	|	ВидыЗапасов.ТипЗапасов,
	|	ВидыЗапасов.Ссылка,
	|	ВидыЗапасов.Организация,
	|	ВидыЗапасов.УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета,
	|	ВидыЗапасов.ПометкаУдаления,
	|	ВидыЗапасов.ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены,
	|	ВидыЗапасов.УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение,
	|	ВидыЗапасов.НалогообложениеНДС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ТипЗапасов,
	|	НалогообложениеНДС,
	|	ВладелецТовара,
	|	Соглашение,
	|	Валюта,
	|	РеализацияЗапасовДругойОрганизации,
	|	ВидЗапасовВладельца,
	|	СпособПередачиТоваров,
	|	УстарелоПоставщик,
	|	УстарелоПредназначение,
	|	УстарелоПодразделение,
	|	УстарелоМенеджер,
	|	УстарелоСделка,
	|	ГруппаФинансовогоУчета,
	|	Контрагент,
	|	Договор,
	|	УстарелоНазначение,
	|	ГруппаПродукции,
	|	ВидЦены,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыОрганизаций.Регистратор) УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОтборыДублей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СпрВидыЗапасов";
	
	УстановитьПараметрыЗапросаПоискаДублей(Запрос);
	
	ПоляОтбора = "
		|	Организация,
		|	ТипЗапасов,
		|	НалогообложениеНДС,
		|	ВладелецТовара,
		|	Соглашение,
		|	Валюта,
		|	РеализацияЗапасовДругойОрганизации,
		|	ВидЗапасовВладельца,
		|	СпособПередачиТоваров,
		|	УстарелоПоставщик,
		|	УстарелоПредназначение,
		|	УстарелоПодразделение,
		|	УстарелоМенеджер,
		|	УстарелоСделка,
		|	ГруппаФинансовогоУчета,
		|	Контрагент,
		|	Договор,
		|	УстарелоНазначение,
		|	ГруппаПродукции,
		|	ВидЦены
		|";
	
	ПоляДляСравнения	= Новый Структура(ПоляОтбора);
	ПоляВыборки			= Новый Структура(ПоляОтбора);
	ДублиОднойГруппы	= Новый Массив;
	
	Результат = Запрос.Выполнить();
	ВыборкаДублейВидовЗапасов = Результат.Выбрать();
	
	Если ВыборкаДублейВидовЗапасов.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПоляДляСравнения, ВыборкаДублейВидовЗапасов);
		
		ДублиОднойГруппы.Добавить(ВыборкаДублейВидовЗапасов.Ссылка);
		
		Пока ВыборкаДублейВидовЗапасов.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ПоляВыборки, ВыборкаДублейВидовЗапасов);
			
			Если Не ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ПоляДляСравнения, ПоляВыборки) Тогда
				ВыбратьИПометитьДубли(ДублиОднойГруппы);
			КонецЕсли;
			
			ДублиОднойГруппы.Добавить(ВыборкаДублейВидовЗапасов.Ссылка);
			
			ЗаполнитьЗначенияСвойств(ПоляДляСравнения, ВыборкаДублейВидовЗапасов);
		КонецЦикла;
		
		ВыбратьИПометитьДубли(ДублиОднойГруппы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьИПометитьДубли(ДублиОднойГруппы)
	
	Счетчик = 1;
	
	Пока Счетчик <= ДублиОднойГруппы.ВГраница() Цикл
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Справочник.ВидыЗапасов");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ДублиОднойГруппы[Счетчик]);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			СправочникОбъект = ДублиОднойГруппы[Счетчик].ПолучитьОбъект();
			СправочникОбъект.ЭтоДубль = Истина;
			СправочникОбъект.ДополнительныеСвойства.Вставить("НеПроверятьДубли", Истина);
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать справочник: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДублиОднойГруппы[Счетчик]);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.ВидыЗапасов,
				ДублиОднойГруппы[Счетчик],
				ТекстСообщения);
		КонецПопытки;
		
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	ДублиОднойГруппы.Очистить();
	
КонецПроцедуры

// Выполняет нормализацию значений реквизитов объекта справочника.
//
// Параметры:
//	ОбрабатываемыйОбъект - СправочникОбъект.ВидыЗапасов - объект справочника.
//
Процедура ОбработатьРеквизитыОбъекта(ОбрабатываемыйОбъект) Экспорт
	
	Если Не ЗначениеЗаполнено(ОбрабатываемыйОбъект.ВладелецТовара)
		И ОбрабатываемыйОбъект.ВладелецТовара <> Неопределено Тогда
		
		ОбрабатываемыйОбъект.ВладелецТовара = Неопределено;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОбрабатываемыйОбъект.Договор)
		И ОбрабатываемыйОбъект.Договор <> Неопределено Тогда
		
		ОбрабатываемыйОбъект.Договор = Неопределено;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОбрабатываемыйОбъект.Контрагент)
		И ОбрабатываемыйОбъект.Контрагент <> Неопределено Тогда
		
		ОбрабатываемыйОбъект.Контрагент = Неопределено;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОбрабатываемыйОбъект.УстарелоПоставщик)
		И ОбрабатываемыйОбъект.УстарелоПоставщик <> Неопределено Тогда
		
		ОбрабатываемыйОбъект.УстарелоПоставщик = Неопределено;
		
	ИначеЕсли ЗначениеЗаполнено(ОбрабатываемыйОбъект.ВладелецТовара)
		И ОбрабатываемыйОбъект.УстарелоПоставщик <> Неопределено Тогда
		
		ОбрабатываемыйОбъект.УстарелоПоставщик = Неопределено;
		
	КонецЕсли;
	
	Если ОбрабатываемыйОбъект.УстарелоПредназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено Тогда
		ОбрабатываемыйОбъект.УстарелоПредназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

// Возвращает коллекцию реквизитов справочника, заполненную по умолчанию.
//
// Возвращаемое значение:
//	Структура - содержит следующие ключи:
//		* Организация - СправочникСсылка.Организации, Массив из СправочникСсылка.Организации - организация, от имени которой будет оформляться реализация товаров.
//		* ТипЗапасов - ПеречислениеСсылка.ТипыЗапасов, Массив из ПеречислениеСсылка.ТипыЗапасов - доступные типы запасов товаров.
//		* ВладелецТовара - СправочникСсылка.Организации, СправочникСсылка.Партнеры, Неопределено - владелец товаров.
//		* Контрагент - СправочникСсылка.Организации, СправочникСсылка.Контрагенты, Неопределено - контрагент, с которым заключается договор на реализацию товаров.
//		* Соглашение - СправочникСсылка.СоглашенияСПоставщиками - соглашение, в рамках которого оформляется поступление товаров.
//		* Договор - Неопределено, СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями, Массив из СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - договор, в рамках которого оформляется реализация товаров.
//		* Валюта - СправочникСсылка.Валюты - валюта, по которой осуществляются взаиморасчеты с владельцем товаров.
//		* НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - тип налогообложения реализации товаров, облагаемой налогом на добавленную стоимость.
//		* ГруппаФинансовогоУчета - СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры - группа финансового учета товаров.
//		* ГруппаПродукции - СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры - вид продукции.
//		* ВидЦены - СправочникСсылка.ВидыЦенПоставщиков - вид цены, по которой зафиксировано поступление товара.
//		* РеализацияЗапасовДругойОрганизации - Булево - признак, использования вида запасов для внутрифирменной продажи.
//		* ВидЗапасовВладельца - СправочникСсылка.ВидыЗапасов - вид запасов организации - владельца товара.
//		* СпособПередачиТоваров - ПеречислениеСсылка.СпособыПередачиТоваров - способ передачи товаров от владельца к продавцу.
//		* УстарелоПоставщик - СправочникСсылка.Организации, СправочникСсылка.Партнеры, Неопределено - поставщик, если ведется обособленный учет себестоимости товаров по поставщикам.
//		* УстарелоПодразделение - СправочникСсылка.СтруктураПредприятия - подразделение обособленного учета товаров
//		* УстарелоМенеджер - СправочникСсылка.Пользователи - менеджер обособленного учета товаров.
//		* УстарелоСделка - СправочникСсылка.СделкиСКлиентами - сделка обособленного учета товаров.
//		* УстарелоНазначение - СправочникСсылка.Назначения - назначение обособленной потребности, обеспечиваемой поступлением.
//		* УстарелоПредназначение - ПеречислениеСсылка.ТипыПредназначенияВидовЗапасов - предназначение товара.
//
Функция ПустойВидЗапасовСтруктура() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Параметры.Вставить("ВладелецТовара", Неопределено);
	Параметры.Вставить("Контрагент", Неопределено);
	Параметры.Вставить("Договор", Неопределено);
	Параметры.Вставить("Соглашение", Справочники.СоглашенияСПоставщиками.ПустаяСсылка());
	Параметры.Вставить("Валюта", Справочники.Валюты.ПустаяСсылка());
	Параметры.Вставить("НалогообложениеНДС", Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	Параметры.Вставить("ТипЗапасов", Перечисления.ТипыЗапасов.ПустаяСсылка());
	Параметры.Вставить("ГруппаФинансовогоУчета", Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка());
	Параметры.Вставить("ГруппаПродукции", Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка());
	Параметры.Вставить("ВидЦены", Справочники.ВидыЦенПоставщиков.ПустаяСсылка());
	Параметры.Вставить("РеализацияЗапасовДругойОрганизации", Ложь);
	Параметры.Вставить("ВидЗапасовВладельца", Справочники.ВидыЗапасов.ПустаяСсылка());
	Параметры.Вставить("СпособПередачиТоваров", Перечисления.СпособыПередачиТоваров.ПустаяСсылка());
	Параметры.Вставить("УстарелоПоставщик", Неопределено);
	Параметры.Вставить("УстарелоПодразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	Параметры.Вставить("УстарелоМенеджер", Справочники.Пользователи.ПустаяСсылка());
	Параметры.Вставить("УстарелоСделка", Справочники.СделкиСКлиентами.ПустаяСсылка());
	Параметры.Вставить("УстарелоНазначение", Справочники.Назначения.ПустаяСсылка());
	Параметры.Вставить("УстарелоПредназначение", Перечисления.ТипыПредназначенияВидовЗапасов.ПустаяСсылка());
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
