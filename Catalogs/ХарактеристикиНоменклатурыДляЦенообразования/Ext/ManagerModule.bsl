#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получить характеристику номенклатуры для ценообразования.
// 
// Параметры:
//  РеквизитыДляПоиска - Структура - Реквизиты для поиска
// 
// Возвращаемое значение:
//  СправочникСсылка.ХарактеристикиНоменклатурыДляЦенообразования - Получить характеристику номенклатуры для ценообразования
Функция ПолучитьХарактеристикуНоменклатурыДляЦенообразования(РеквизитыДляПоиска) Экспорт

	Если РеквизитыДляПоиска.ПроизвестиПоискХЦО Тогда
		ХарактеристикаЦенообразования = НайтиХарактеристикуЦОПоНаборуРеквизитов(РеквизитыДляПоиска);
		
		Если ХарактеристикаЦенообразования <> Неопределено Тогда
			Если Не РеквизитыДляПоиска.СсылкаОдинКОдному 
				Или РеквизитыДляПоиска.ТекущаяХарактеристикаЦО.Пустая() Тогда
			
				Возврат ХарактеристикаЦенообразования;
				
			КонецЕсли;
		Иначе
			ХарактеристикаЦенообразования = ПустаяСсылка();
		КонецЕсли;
	Иначе
		ХарактеристикаЦенообразования = РеквизитыДляПоиска.ТекущаяХарактеристикаЦО;
	КонецЕсли;

	ОбновитьРеквизиты(ХарактеристикаЦенообразования, РеквизитыДляПоиска);
	
	Возврат ХарактеристикаЦенообразования;
	
КонецФункции

// Синхронизировать пометку удаления.
// 
// Параметры:
//  ПараметрыСинхронизации - Структура - Параметры синхронизации
// 
// Возвращаемое значение:
//  Булево - Синхронизировать пометку удаления
Функция СинхронизироватьПометкуУдаления(ПараметрыСинхронизации) Экспорт

	ОперацияВыполнена = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатурыДляЦенообразования КАК
	|			ХарактеристикиНоменклатурыДляЦенообразования
	|		ПО ХарактеристикиНоменклатуры.ХарактеристикаНоменклатурыДляЦенообразования = ХарактеристикиНоменклатурыДляЦенообразования.Ссылка
	|ГДЕ
	|	ХарактеристикиНоменклатурыДляЦенообразования.Ссылка = &Ссылка
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И НЕ ХарактеристикиНоменклатуры.Ссылка = &ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыДляЦенообразования.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатурыДляЦенообразования КАК ХарактеристикиНоменклатурыДляЦенообразования
	|ГДЕ
	|	ХарактеристикиНоменклатурыДляЦенообразования.Ссылка = &Ссылка
	|	И НЕ ХарактеристикиНоменклатурыДляЦенообразования.ПометкаУдаления = &ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ПараметрыСинхронизации.ХарактеристикаНоменклатуры);
	Запрос.УстановитьПараметр("Ссылка", ПараметрыСинхронизации.ХарактеристикаНоменклатурыДляЦенообразования);
	Запрос.УстановитьПараметр("ПометкаУдаления",  ПараметрыСинхронизации.ПометкаУдаления);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	// если пометки на удаление не отличаются
	Если Результаты[1].Выгрузить().Количество() = 0 Тогда
		Возврат ОперацияВыполнена;
	КонецЕсли;
	
	// если нет больше ссылок на характеристику ценообразования, изменяем пометку
	Если Результаты[0].Выгрузить().Количество() = 0 Тогда
		Попытка
			СпрОбъект = ПараметрыСинхронизации.ХарактеристикаНоменклатурыДляЦенообразования.ПолучитьОбъект();
			СпрОбъект.ПометкаУдаления = ПараметрыСинхронизации.ПометкаУдаления;
			СпрОбъект.Записать();
		Исключение
			ОперацияВыполнена = Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Возврат ОперацияВыполнена;

КонецФункции

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Функция НайтиХарактеристикуЦОПоНаборуРеквизитов(РеквизитыДляПоиска)
	
	Если РеквизитыДляПоиска.СсылкаОдинКОдному И Не РеквизитыДляПоиска.ТекущаяХарактеристикаЦО.Пустая() Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|ГДЕ
		|	ХарактеристикиНоменклатуры.ХарактеристикаНоменклатурыДляЦенообразования = &ТекущаяХарактеристикаЦО
		|	И ХарактеристикиНоменклатуры.Ссылка <> &ТекущаяХарактеристика";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		
		Запрос.УстановитьПараметр("ТекущаяХарактеристикаЦО", РеквизитыДляПоиска.ТекущаяХарактеристикаЦО);
		Запрос.УстановитьПараметр("ТекущаяХарактеристика", РеквизитыДляПоиска.ТекущаяХарактеристика);
		
		РезультатПроверки = Запрос.Выполнить();
		Если РезультатПроверки.Пустой() Тогда
			Возврат РеквизитыДляПоиска.ТекущаяХарактеристикаЦО;
		КонецЕсли;
	КонецЕсли;
	
	РеквизитыДляКлючаЦен = РеквизитыДляПоиска.РеквизитыДляКлючаЦен;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидНоменклатуры", РеквизитыДляПоиска.ВидНоменклатуры);
	
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыЦО.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ХарактеристикиНоменклатурыЦО
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатурыДляЦенообразования КАК ХарактеристикиНоменклатурыЦО
	|	,&УсловиеОдинКОдному
	|ГДЕ
	|	ХарактеристикиНоменклатурыЦО.ВидНоменклатуры = &ВидНоменклатуры
	|	И ХарактеристикиНоменклатурыЦО.КоличествоРеквизитов = &КоличествоРеквизитов
	|	И &УсловияПоРеквизитамХЦО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыЦО.Ссылка КАК ХарактеристикаНоменклатурыЦО
	|ИЗ
	|	ХарактеристикиНоменклатурыЦО КАК ХарактеристикиНоменклатурыЦО
	|	,&СоединенияПоДопРеквизитамХЦО
	|ГДЕ
	|	&УсловияПоДопРеквизитамХЦО
	|";
	
	ИмяТаблицы = "ТаблицаХарактеристикЦО";
	
	СчетчикУсловийПоРеквизитам = 0;
	СчетчикУсловийПоДопРеквизитам = 0;
	
	УсловияПоРеквизитамХЦО = Новый Массив();
	УсловияПоДопРеквизитамХЦО = Новый Массив();
	СоединенияПоДопРеквизитамХЦО = Новый Массив();
	// Генерируем текст условия запроса по дополнительным реквизитам, устанавливаем параметры.
	Для Каждого СтрокаУсловия Из РеквизитыДляКлючаЦен Цикл
		
		Если СтрокаУсловия.ЭтоДопРеквизит Тогда
			СтрокаСчетчикУсловийПоДопРеквизитам = Формат(СчетчикУсловийПоДопРеквизитам,"ЧГ=0");
	
			ИмяТаблицыСУсловием = ИмяТаблицы + "СУсловиемПоДопРеквизиту_" + СтрокаСчетчикУсловийПоДопРеквизитам;
			
			ТекстЗамены = "
			|" + ИмяТаблицыСУсловием + ".Свойство = &СвойствоДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам;
			УсловияПоДопРеквизитамХЦО.Добавить(ТекстЗамены);

			ТекстЗамены = "
			|" + ИмяТаблицыСУсловием + ".Значение = &ЗначениеДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам;
			УсловияПоДопРеквизитамХЦО.Добавить(ТекстЗамены);

			Запрос.УстановитьПараметр("СвойствоДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам, СтрокаУсловия.Свойство);
			Запрос.УстановитьПараметр("ЗначениеДоп_" + СтрокаСчетчикУсловийПоДопРеквизитам, СтрокаУсловия.Значение);
			
			ТекстЗамены = "
			| ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ДополнительныеРеквизитыЦенообразования КАК " + ИмяТаблицыСУсловием + "
			| ПО ХарактеристикиНоменклатурыЦО.Ссылка = " + ИмяТаблицыСУсловием + ".Ссылка";
			
			СоединенияПоДопРеквизитамХЦО.Добавить(ТекстЗамены);
			
			СчетчикУсловийПоДопРеквизитам = СчетчикУсловийПоДопРеквизитам + 1;
		Иначе
			
			УсловияПоРеквизитамХЦО.Добавить(СтрШаблон("ХарактеристикиНоменклатурыЦО.%1 = &Значение_%1", СтрокаУсловия.ИмяРеквизита));
			Запрос.УстановитьПараметр("Значение_" + СтрокаУсловия.ИмяРеквизита, СтрокаУсловия.Значение);
			СчетчикУсловийПоРеквизитам = СчетчикУсловийПоРеквизитам + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РеквизитыДляПоиска.СсылкаОдинКОдному Тогда
		ТекстЗамены = "
		|ПРАВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|	ПО ХарактеристикиНоменклатурыЦО.Ссылка = ХарактеристикиНоменклатуры.ХарактеристикаНоменклатурыДляЦенообразования";

		УсловияПоРеквизитамХЦО.Добавить("ХарактеристикиНоменклатуры.Ссылка ЕСТЬ NULL");
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, ",&УсловиеОдинКОдному", ТекстЗамены);
	Иначе
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, ",&УсловиеОдинКОдному", "");
	КонецЕсли;

	Если УсловияПоРеквизитамХЦО.Количество() > 0 Тогда
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&УсловияПоРеквизитамХЦО", 
															СтрСоединить(УсловияПоРеквизитамХЦО, " И " + Символы.ПС));
	Иначе
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&УсловияПоРеквизитамХЦО", "Истина");
	КонецЕсли;
	
	Если СчетчикУсловийПоДопРеквизитам > 0 Тогда
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, ",&СоединенияПоДопРеквизитамХЦО", 
															СтрСоединить(СоединенияПоДопРеквизитамХЦО));
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&УсловияПоДопРеквизитамХЦО", 
															СтрСоединить(УсловияПоДопРеквизитамХЦО, " И "));
	Иначе
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, ",&СоединенияПоДопРеквизитамХЦО", "");
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&УсловияПоДопРеквизитамХЦО", "ИСТИНА");
	КонецЕсли;
	
	Если СчетчикУсловийПоРеквизитам = 0
		И СчетчикУсловийПоДопРеквизитам  = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос.Текст = ШаблонЗапроса;
	
	Запрос.УстановитьПараметр("КоличествоРеквизитов", (СчетчикУсловийПоРеквизитам + СчетчикУсловийПоДопРеквизитам));
	
	ХарактеристикиЦО = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ХарактеристикаНоменклатурыЦО");
	
	Если ХарактеристикиЦО.Количество() > 0 Тогда
		Возврат ХарактеристикиЦО[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Обновить реквизиты.
// 
// Параметры:
//  ХарактеристикаЦенообразования - СправочникСсылка.ХарактеристикиНоменклатурыДляЦенообразования - Характеристика ценообразования
//  РеквизитыДляПоиска - Структура - Реквизиты для поиска
Функция ОбновитьРеквизиты(ХарактеристикаЦенообразования, РеквизитыДляПоиска)

	ОперацияВыполнена = Истина;

	УстановитьПривилегированныйРежим(Истина);

	МассивДляФормированияНаименования = Новый Массив();
	
	Если ХарактеристикаЦенообразования.Пустая() Тогда
		СпрОбъект = Справочники.ХарактеристикиНоменклатурыДляЦенообразования.СоздатьЭлемент();
	Иначе
		СпрОбъект = ХарактеристикаЦенообразования.ПолучитьОбъект();
		СпрОбъект.ДополнительныеРеквизитыЦенообразования.Очистить();
	КонецЕсли;

	СпрОбъект.ВидНоменклатуры = РеквизитыДляПоиска.ВидНоменклатуры;

	Для Каждого Строка Из РеквизитыДляПоиска.РеквизитыДляКлючаЦен Цикл
		Если Строка.ЭтоДопРеквизит Тогда
			НоваяСтрокаДополнительныхРеквизитов = СпрОбъект.ДополнительныеРеквизитыЦенообразования.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДополнительныхРеквизитов, Строка);
		Иначе
			СпрОбъект[Строка.ИмяРеквизита] = Строка.Значение;
		КонецЕсли;
		
		МассивДляФормированияНаименования.Добавить(Строка.Значение);
	КонецЦикла;
	
	Если ПустаяСтрока(СпрОбъект.Наименование) Тогда
		СпрОбъект.Наименование = СтрСоединить(МассивДляФормированияНаименования, ", ");
	КонецЕсли;
	
	СпрОбъект.КоличествоРеквизитов = РеквизитыДляПоиска.РеквизитыДляКлючаЦен.Количество();
	
	Попытка
		СпрОбъект.Записать();
	Исключение
		ОперацияВыполнена = Ложь;
	КонецПопытки;
	
	ХарактеристикаЦенообразования = СпрОбъект.Ссылка;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ОперацияВыполнена;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли