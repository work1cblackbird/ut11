#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Действия = Параметры.Действия;
	
	Для Каждого Элемент Из Параметры.НастройкиОбъектов Цикл
		
		Если Элемент.Значение.Результат = "ТребуетсяНастройкаОбмена" Тогда
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Организация", Элемент.Значение.ПараметрыОбмена.Организация);
			ПараметрыОтбора.Вставить("Банк", Элемент.Значение.ПараметрыОбмена.Банк);
			Строки = ТаблицаОбработки.НайтиСтроки(ПараметрыОтбора);
			Если Строки.Количество() Тогда
				СтрокаТаблицы = Строки.Получить(0);
				СтрокаТаблицы.КоличествоДокументов = СтрокаТаблицы.КоличествоДокументов + 1;
			Иначе
				СтрокаТаблицы = ТаблицаОбработки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Элемент.Значение.ПараметрыОбмена);
				СтрокаТаблицы.КоличествоДокументов = 1;
				СтрокаТаблицы.Действие = НСтр("ru = 'Подключить'");
			КонецЕсли;
			НовДокумент = СтрокаТаблицы.Документы.Добавить();
			НовДокумент.Значение = Элемент.Ключ
		Иначе
			НовДокумент = ДокументыСНастройками.Добавить();
			НовДокумент.Значение = Элемент.Ключ
		КонецЕсли;
	КонецЦикла;
	
	Элементы.Шапка.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаНастройкаОбменСБанками" Тогда
		РеквизитыНастройкиОбмена = РеквизитыНастройкиОбмена(Параметр);
		Если НЕ РеквизитыНастройкиОбмена.Недействительна И Не РеквизитыНастройкиОбмена.ПометкаУдаления Тогда
			ПараметрыОтбора = Новый Структура("Организация, Банк");
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора, РеквизитыНастройкиОбмена);
			НайденныеСтроки = ТаблицаОбработки.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() Тогда
				ТекущаяСтрока = НайденныеСтроки.Получить(0);
				ТекущаяСтрока.Подключен = Истина;
				ТекущаяСтрока.НастройкаОбмена = Параметр;
				ТекущаяСтрока.Действие = НСтр("ru = 'Подключено'");
			КонецЕсли;
			
			ПараметрыОтбора = Новый Структура("Подключен", Ложь);
			Если ТаблицаОбработки.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда
				Элементы.Шапка.ТекущаяСтраница = Элементы.ГруппаУспех;
				Заголовок = Нстр("ru = 'Подключение обмена с банком выполнено успешно'");
				Элементы.ФормаПродолжить.КнопкаПоУмолчанию = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаОбработки

&НаКлиенте
Процедура ТаблицаОбработкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущиеДанные.Подключен Тогда
		ПоказатьЗначение(Новый ОписаниеОповещения, Элемент.ТекущиеДанные.НастройкаОбмена);
	Иначе
		ОбменСБанкамиКлиент.ОткрытьСоздатьНастройкуОбмена(
			Элемент.ТекущиеДанные.Организация, Элемент.ТекущиеДанные.Банк);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПродолжитьОтправку(Команда)

	Закрыть();

	Для Каждого Элемент Из ТаблицаОбработки Цикл
		Если Элемент.Подключен Тогда
			Для Каждого Документ Из Элемент.Документы Цикл
				ДокументыСНастройками.Добавить(Документ.Значение);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	МассивДокументов = ДокументыСНастройками.ВыгрузитьЗначения();
	ОбменСБанкамиСлужебныйКлиент.ОбработатьЭД(МассивДокументов, Действия);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция РеквизитыНастройкиОбмена(Знач НастройкаОбмена)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		НастройкаОбмена, "Организация, Банк, Недействительна, ПометкаУдаления");
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Раскрашивание гиперссылки
	// Синий
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаОбработкиДействие.Имя);
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаОбработки.Подключен");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Метаданные.ЭлементыСтиля.ЦветГиперссылкиБЭД.Значение);

	// Зеленый
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаОбработкиДействие.Имя);
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаОбработки.Подключен");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Метаданные.ЭлементыСтиля.РезультатУспехЦвет.Значение);
	
КонецПроцедуры

#КонецОбласти
