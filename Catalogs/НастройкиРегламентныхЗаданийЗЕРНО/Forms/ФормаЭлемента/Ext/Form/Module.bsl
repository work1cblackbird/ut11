#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		УстановитьНаименование = Ложь;
		Если Параметры.ЗначенияЗаполнения.Свойство("Организация") Тогда
			Объект.Организация = Параметры.ЗначенияЗаполнения.Организация;
			УстановитьНаименование = Истина;
		КонецЕсли;
		
		Объект.ВидНастройкиОбмена = Перечисления.ВидыНастроекОбменаЗЕРНО.ОбменДанными;
		
		ПриСозданииЧтенииНаСервере();
		
		Если УстановитьНаименование Тогда
			УстановитьНаименование(ЭтотОбъект);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ЕстьОшибкиПараметровНастройкиОбмена = Ложь;
		
	Если (Объект.ВидНастройкиОбмена = Перечисления.ВидыНастроекОбменаЗЕРНО.ЗагрузкаСДИЗ
		Или Объект.ВидНастройкиОбмена = Перечисления.ВидыНастроекОбменаЗЕРНО.ЗагрузкаПартий)
		И Не ЗначениеЗаполнено(ПараметрыНастройкиОбмена.ВидПродукции) Тогда
		ЕстьОшибкиПараметровНастройкиОбмена = Истина;
	ИначеЕсли Объект.ВидНастройкиОбмена = Перечисления.ВидыНастроекОбменаЗЕРНО.ЗагрузкаПартий
		И ПараметрыНастройкиОбмена.ВидПродукции = Перечисления.ВидыПродукцииИС.Зерно
		И Не ЗначениеЗаполнено(ПараметрыНастройкиОбмена.Операция) Тогда
		ЕстьОшибкиПараметровНастройкиОбмена = Истина;
	КонецЕсли;
	
	Если ЕстьОшибкиПараметровНастройкиОбмена Тогда
		ТекстСообщения = Нстр("ru = 'Требуется заполнить параметры настройки обмена'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,, "ПараметрыНастройкиОбменаСтрокой", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Расписание",    Расписание);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Использование", РегламентноеЗаданиеИспользуется);
	
	Если Объект.ВидНастройкиОбмена = Перечисления.ВидыНастроекОбменаЗЕРНО.ОбменДанными
		Или Объект.ВидНастройкиОбмена = Перечисления.ВидыНастроекОбменаЗЕРНО.ЗагрузкаОстатковПартий Тогда
		ТекущийОбъект.ПараметрыНастройкиОбмена = Новый ХранилищеЗначения(Неопределено);
	Иначе
		ТекущийОбъект.ПараметрыНастройкиОбмена = Новый ХранилищеЗначения(ПараметрыНастройкиОбмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Объект.ВидНастройкиОбмена = ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ОбменДанными") Тогда
		ПараметрыОповещения = Новый Структура();
		ПараметрыОповещения.Вставить("ВидНастройкиОбмена", Объект.ВидНастройкиОбмена);
		ПараметрыОповещения.Вставить("Организация",        Объект.Организация);
		Оповестить(
			СобытияФормЗЕРНОКлиент.ИмяСобытияИзмененаНастройкаАвтоматическогоОбмена(),
			ПараметрыОповещения,
			ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьНаименование(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	УстановитьНаименование(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНастройкиОбменаПриИзменении(Элемент)
	
	ПолучитьПараметрыНастройкиОбмена(ЭтотОбъект);
	ОбновитьПараметрыНастройкиОбменаСтрокой(ЭтотОбъект);
	ОбновитьВидимостьДоступностьЭлементовФормы(ЭтотОбъект);
	УстановитьНаименование(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыНастройкиОбменаСтрокойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВидНастройкиОбмена",       Объект.ВидНастройкиОбмена);
	ПараметрыОткрытия.Вставить("ПараметрыНастройкиОбмена", ПараметрыНастройкиОбмена);
	
	ОткрытьФорму("Справочник.НастройкиРегламентныхЗаданийЗЕРНО.Форма.ПараметрыНастройкиОбмена",
		ПараметрыОткрытия,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ЗавершениеРедактированияНастройкиОбмена", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ДиалогРасписания.Показать(Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ЦветГиперссылки                = ЦветаСтиля.ЦветГиперссылкиГосИС;
	ЦветТекстаТребуетВниманияГосИС = ЦветаСтиля.ЦветТекстаТребуетВниманияГосИС;
	ИспользоватьПодразделения      = ОбщегоНазначенияИС.ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс();
	
	ПолучитьРасписаниеРегламентногоЗадания();
	ПолучитьПараметрыНастройкиОбмена(ЭтотОбъект);
	ОбновитьПараметрыНастройкиОбменаСтрокой(ЭтотОбъект);
	ОбновитьВидимостьДоступностьЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьВидимостьДоступностьЭлементовФормы(Форма)
	
	Форма.Элементы.ПараметрыНастройкиОбменаСтрокой.Видимость =
		ЗначениеЗаполнено(Форма.Объект.ВидНастройкиОбмена)
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ОбменДанными")
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ЗагрузкаОстатковПартий");
	
	Форма.Элементы.Подразделение.Видимость = Форма.ИспользоватьПодразделения;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьРасписаниеРегламентногоЗадания()
	
	Расписание = Новый РасписаниеРегламентногоЗадания;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Расписание.ВремяНачала = '00010101220000';
		Расписание.ПериодПовтораДней = 1;
		
	Иначе
		
		УстановитьПривилегированныйРежим(Истина);
		Задание = РегламентныеЗаданияСервер.Задание(Объект.РегламентноеЗадание);
		Если Задание <> Неопределено Тогда
			Расписание = Задание.Расписание;
			РегламентноеЗаданиеИспользуется = Задание.Использование;
		КонецЕсли;
		
	КонецЕсли;
	
	РасписаниеСтрокой = Строка(Расписание);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(НовоеРасписание, ДополнительныеПараметры) Экспорт
	
	Если НовоеРасписание <> Неопределено Тогда
		Расписание = НовоеРасписание;
		РасписаниеСтрокой = Строка(Расписание);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПолучитьПараметрыНастройкиОбмена(Форма)
	
	Форма.ПараметрыНастройкиОбмена = ИнициализироватьПараметрыНастройкиОбмена(Форма.Объект.ВидНастройкиОбмена);
	
	Если Не Форма.Объект.Ссылка.Пустая() Тогда
		ЗаполнитьЗначенияСвойств(Форма.ПараметрыНастройкиОбмена, ПараметрыНастройкиОбмена(Форма.Объект.Ссылка));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИнициализироватьПараметрыНастройкиОбмена(ВидНастройкиОбмена)
	Возврат ИнтеграцияЗЕРНОКлиентСервер.ИнициализироватьПараметрыНастройкиОбмена(ВидНастройкиОбмена);
КонецФункции

&НаСервереБезКонтекста
Функция ПараметрыНастройкиОбмена(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиРегламентныхЗаданий.ПараметрыНастройкиОбмена
	|ИЗ
	|	Справочник.НастройкиРегламентныхЗаданийЗЕРНО КАК НастройкиРегламентныхЗаданий
	|ГДЕ
	|	НастройкиРегламентныхЗаданий.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Данные = Выборка.ПараметрыНастройкиОбмена.Получить();
		Если ТипЗнч(Данные) = Тип("Структура") Тогда
			Возврат Данные;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый Структура;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПараметрыНастройкиОбменаСтрокой(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ВидНастройкиОбмена)
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ОбменДанными")
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ЗагрузкаОстатковПартий") Тогда
		
		Массив = Новый Массив;
		
		ТекстОшибки = НСтр("ru = 'Требуется заполнить параметры настройки обмена'");
				
		Если Форма.Объект.ВидНастройкиОбмена = ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ЗагрузкаСДИЗ") Тогда
			
			Если ЗначениеЗаполнено(Форма.ПараметрыНастройкиОбмена.ВидПродукции) Тогда
				Массив.Добавить(Строка(Форма.ПараметрыНастройкиОбмена.ВидПродукции));
				Если Форма.ПараметрыНастройкиОбмена.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Зерно") Тогда
					Если Форма.ПараметрыНастройкиОбмена.ТипОрганизации = 0 Тогда
						Массив.Добавить(НСтр("ru = 'СХТП'"));
					Иначе
						Массив.Добавить(НСтр("ru = 'Элеватор'"));
					КонецЕсли;
				КонецЕсли;
				Если Форма.ПараметрыНастройкиОбмена.ЗапрашиватьПогашенияСДИЗ Тогда
					Массив.Добавить(НСтр("ru = 'Погашения'"));
				КонецЕсли;
				Если Форма.ПараметрыНастройкиОбмена.ЗапрашиватьОтказыПогашенийСДИЗ Тогда
					Массив.Добавить(НСтр("ru = 'Отказы от погашений'"));
				КонецЕсли;
			Иначе
				Форма.ПараметрыНастройкиОбменаСтрокой = ТекстОшибки;
				Форма.Элементы.ПараметрыНастройкиОбменаСтрокой.ЦветТекста = Форма.ЦветТекстаТребуетВниманияГосИС;
				Возврат;
			КонецЕсли;
			
		ИначеЕсли Форма.Объект.ВидНастройкиОбмена = ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ЗагрузкаРезультатовИсследований") Тогда
			
		ИначеЕсли Форма.Объект.ВидНастройкиОбмена = ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ЗагрузкаАктовОтбораПроб") Тогда
			
		ИначеЕсли Форма.Объект.ВидНастройкиОбмена = ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ЗагрузкаПартий") Тогда
			
			Если ЗначениеЗаполнено(Форма.ПараметрыНастройкиОбмена.ВидПродукции)
				И ЗначениеЗаполнено(Форма.ПараметрыНастройкиОбмена.Операция) Тогда
				Массив.Добавить(Строка(Форма.ПараметрыНастройкиОбмена.ВидПродукции));
				Если Форма.ПараметрыНастройкиОбмена.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Зерно") Тогда
					Массив.Добавить(Строка(Форма.ПараметрыНастройкиОбмена.Операция));
				КонецЕсли;
			Иначе
				Форма.ПараметрыНастройкиОбменаСтрокой = ТекстОшибки;
				Форма.Элементы.ПараметрыНастройкиОбменаСтрокой.ЦветТекста = Форма.ЦветТекстаТребуетВниманияГосИС;
				Возврат;
			КонецЕсли;
		
		ИначеЕсли Форма.Объект.ВидНастройкиОбмена = ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ЗагрузкаМестФормированияПартий") Тогда
			
		Иначе
			
			ВызватьИсключение СтрШаблон(
				НСтр("ru = 'Работа с видом настройки обмена %1 не поддерживается'"),
				Форма.Объект.ВидНастройкиОбмена);
		
		КонецЕсли;
		
		Массив.Добавить(СтрШаблон(НСтр("ru = 'Загружать за %1'"),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 день;;%1 дня;%1 дней;%1 дня'"),
				Форма.ПараметрыНастройкиОбмена.ДнейЗагрузки)));
		
		Форма.ПараметрыНастройкиОбменаСтрокой = СтрСоединить(Массив, "; ");
		Форма.Элементы.ПараметрыНастройкиОбменаСтрокой.ЦветТекста = Форма.ЦветГиперссылки;
		
	Иначе
		Форма.ПараметрыНастройкиОбменаСтрокой = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеРедактированияНастройкиОбмена(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПараметрыНастройкиОбмена, Результат);
	
	ОбновитьПараметрыНастройкиОбменаСтрокой(ЭтотОбъект);
	УстановитьНаименование(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНаименование(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.Организация) Тогда
		
		Если Форма.Объект.ВидНастройкиОбмена = ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ЗагрузкаСДИЗ")
			И ЗначениеЗаполнено(Форма.ПараметрыНастройкиОбмена.ВидПродукции) Тогда
			
			Массив = Новый Массив;
			Массив.Добавить(Строка(Форма.ПараметрыНастройкиОбмена.ВидПродукции));
			Если Форма.ПараметрыНастройкиОбмена.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Зерно") Тогда
				Если Форма.ПараметрыНастройкиОбмена.ТипОрганизации = 0 Тогда
					Массив.Добавить(НСтр("ru = 'СХТП'"));
				Иначе
					Массив.Добавить(НСтр("ru = 'Элеватор'"));
				КонецЕсли;
			КонецЕсли;
			ПредставлениеВидаНастройкиОбмена = СтрШаблон("%1 (%2)",
				Строка(Форма.Объект.ВидНастройкиОбмена),
				СтрСоединить(Массив, "; "));
			
		ИначеЕсли Форма.Объект.ВидНастройкиОбмена = ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаЗЕРНО.ЗагрузкаПартий")
			И ЗначениеЗаполнено(Форма.ПараметрыНастройкиОбмена.ВидПродукции)
			И ЗначениеЗаполнено(Форма.ПараметрыНастройкиОбмена.Операция) Тогда
			
			Массив = Новый Массив;
			Массив.Добавить(Строка(Форма.ПараметрыНастройкиОбмена.ВидПродукции));
			Если Форма.ПараметрыНастройкиОбмена.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Зерно") Тогда 
				Массив.Добавить(Строка(Форма.ПараметрыНастройкиОбмена.Операция));
			КонецЕсли;
			ПредставлениеВидаНастройкиОбмена = СтрШаблон("%1 (%2)",
				Строка(Форма.Объект.ВидНастройкиОбмена),
				СтрСоединить(Массив, "; "));
			
		Иначе
			ПредставлениеВидаНастройкиОбмена = Строка(Форма.Объект.ВидНастройкиОбмена);
		КонецЕсли;
		
		Если Форма.ИспользоватьПодразделения
			И ЗначениеЗаполнено(Форма.Объект.Подразделение) Тогда
			ПредставлениеОрганизации = СтрШаблон("%1 / %2",
				Строка(Форма.Объект.Организация),
				Строка(Форма.Объект.Подразделение));
		Иначе
			ПредставлениеОрганизации = Строка(Форма.Объект.Организация);
		КонецЕсли;
		
		Форма.Объект.Наименование = СтрШаблон("%1: %2",
			ПредставлениеОрганизации,
			ПредставлениеВидаНастройкиОбмена);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
