
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОпределитьПоведениеВМобильномКлиенте();
	
	УстановитьУсловноеОформление();
	
	ЗаполнитьВариантыАнализа();
	
	Если ВариантыАнализа.ПолучитьЭлементы().Количество() = 0 Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСообщения;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНастроекВариантовАнализа;
	КонецЕсли;
	
	ВариантОтображенияДеталей = "ПоказыватьТекущееЗначениеИДетали";
	
	Если Не ЭтоМобильныйКлиент Тогда
		Элементы.СтраницыВариантовАнализа.ТекущаяСтраница = Элементы.СтраницаВариантовАнализаПоЦелям;
	КонецЕсли;
	
	// Кэшируем варианты отображения и тип анализа, так как потребуется сравнение с ними на клиенте.
	ВариантОтображенияКратко = Перечисления.ВариантыОтображенияВариантовАнализа.Кратко;
	ВариантОтображенияДиаграмма = Перечисления.ВариантыОтображенияВариантовАнализа.Диаграмма;
	ВариантОтображенияТаблица = Перечисления.ВариантыОтображенияВариантовАнализа.Таблица;
	ТипАнализаПокомпонентноеСравнение = Перечисления.ТипыАнализаПоказателей.ПокомпонентноеСравнение;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если ЭтоМобильныйКлиент Тогда
		ЗаполнитьСписокВариантовАнализа();
		ВариантыАнализаСписок.Сортировать("ВариантАнализа");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	ПриЧтенииСозданииНаСервере();
	
	Иконка = ТекущийОбъект.Иконка.Получить();
	Если Иконка <> Неопределено Тогда
		АдресКартинки = ПоместитьВоВременноеХранилище(Иконка, УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если Не ЭтоМобильныйКлиент Тогда
		ВариантыАнализаСписок.Очистить();
		ЗаполнитьСписокВариантовАнализа();
		ВариантыАнализаСписок.Сортировать("ВариантАнализа");
	КонецЕсли;
	Если ВариантыАнализаСписок.Количество() = 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбрано ни одного варианта анализа'"), , , , Отказ);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если ТекущийОбъект.ЭтоНовый() Тогда
		ТекущийОбъект.Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	ТекущийОбъект.ВариантыАнализа.Очистить();
	
	Для Каждого ВариантАнализа Из ВариантыАнализаСписок Цикл
		НоваяСтрока = ТекущийОбъект.ВариантыАнализа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВариантАнализа);
	КонецЦикла;
	
	Если Не ПустаяСтрока(АдресКартинки) Тогда
		ТекущийОбъект.Иконка = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресКартинки));
	Иначе
		ТекущийОбъект.Иконка = Неопределено;
	КонецЕсли;
	
	Если Не ПустаяСтрока(АдресКартинки) Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("АдресКартинки", АдресКартинки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("Запись_ДашбордМЦП", ПараметрыЗаписи, Объект.Ссылка);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если Не Объект.ТолькоДляАвтора И Объект.ПользователиДашборда.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не назначены пользователи дашборда'"), ,
			"ПользователиДашборда", "Объект", Отказ);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантДоступностиПриИзменении(Элемент)

	Объект.ТолькоДляАвтора = (ВариантДоступности = "ТолькоАвтору");
	
	Если Объект.ТолькоДляАвтора Тогда
		Объект.ПользователиДашборда.Очистить();
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура КоличествоКолонокМонитораПоказателейНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ЭтоМобильныйКлиент Тогда
		ПоказатьВыборИзСписка(Новый ОписаниеОповещения("КоличествоКолонокМонитораПоказателейВыборИзСпискаЗавершение",
			ЭтотОбъект), Элемент.СписокВыбора);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоличествоКолонокМонитораПоказателейОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = "Другое" Тогда
		Объект.КоличествоКолонок = 5;
	Иначе
		Объект.КоличествоКолонок = ВыбранноеЗначение;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура РазмерТаблицДиаграммНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ЭтоМобильныйКлиент Тогда
		ПоказатьВыборИзСписка(Новый ОписаниеОповещения("РазмерТаблицДиаграммВыборИзСпискаЗавершение", ЭтотОбъект),
			Элемент.СписокВыбора);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РазмерТаблицДиаграммРегулирование(Элемент, Направление, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если Направление > 0 Тогда
		Объект.Масштаб = Мин(500, Объект.Масштаб + 25);
	Иначе
		Объект.Масштаб = Макс(50, Объект.Масштаб - 25);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РазмерТаблицДиаграммОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = "произвольный" Тогда
		Объект.Масштаб = 225;
	Иначе
		Объект.Масштаб = ВыбранноеЗначение;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ВыбратьФайлИконки();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВариантыАнализа

&НаКлиенте
Процедура ВариантыАнализаДоступностьПоЦелиПриИзменении(Элемент)

	Если Элементы.ВариантыАнализа.ТекущиеДанные <> Неопределено Тогда
		ОбновитьСоставДоступностиВниз(Элементы.ВариантыАнализа.ТекущаяСтрока,
			Элементы.ВариантыАнализа.ТекущиеДанные.ДоступностьПоЦели);
		ОбновитьСоставДоступностиВверх(Элементы.ВариантыАнализа.ТекущаяСтрока);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВариантыАнализаДоступностьПриИзменении(Элемент)

	Если Элементы.ВариантыАнализа.ТекущиеДанные <> Неопределено Тогда
		ОбновитьСоставДоступностиВверх(Элементы.ВариантыАнализа.ТекущаяСтрока);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВариантыАнализаПередНачаломИзменения(Элемент, Отказ)

	СписокВыбора = Элементы.ВариантыАнализаВариантОтображения.СписокВыбора;

	ЗаполнитьСписокВариантовОтображения(СписокВыбора, Элемент.ТекущиеДанные.ТипАнализа);

КонецПроцедуры

&НаКлиенте
Процедура ВариантыАнализаПриИзменении(Элемент)

	Модифицированность = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВариантыАнализаСписок

&НаКлиенте
Процедура ВариантыАнализаСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Если ЭтоМобильныйКлиент Тогда

		Отказ = Истина;
		СтрокаПараметров  = "ВариантОтображенияДиаграмма,ВариантОтображенияКратко,ВариантОтображенияТаблица,ТипАнализаПокомпонентноеСравнение";
		СтруктураДанныхСтроки = Новый Структура(СтрокаПараметров);
		ЗаполнитьЗначенияСвойств(СтруктураДанныхСтроки, ЭтотОбъект);
		СтруктураДанныхСтроки.Вставить("СтрокаПараметров", СтрокаПараметров);
		ОткрытьФорму("Справочник.ДашбордыМЦП.Форма.ФормаРедактированияСтроки",
			СтруктураДанныхСтроки, ЭтотОбъект, УникальныйИдентификатор, , ,
			Новый ОписаниеОповещения("ВариантыАнализаСписокРедактированиеСтрокиЗавершение", ЭтотОбъект,
			Новый Структура("НоваяСтрока", Истина)));

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВариантыАнализаСписокПередНачаломИзменения(Элемент, Отказ)

	Если ЭтоМобильныйКлиент Тогда

		Отказ = Истина;
		СтрокаПараметров = "ВариантОтображенияДиаграмма,ВариантОтображенияКратко,ВариантОтображенияТаблица,ТипАнализаПокомпонентноеСравнение,ВариантАнализа,ВариантОтображения,Детали,ИтогТаблицы,ТипАнализа";
		СтруктураДанныхСтроки = Новый Структура(СтрокаПараметров);
		ЗаполнитьЗначенияСвойств(СтруктураДанныхСтроки, ЭтотОбъект);
		ЗаполнитьЗначенияСвойств(СтруктураДанныхСтроки, Элемент.ТекущиеДанные);
		СтруктураДанныхСтроки.Вставить("СтрокаПараметров", СтрокаПараметров);
		ОткрытьФорму("Справочник.ДашбордыМЦП.Форма.ФормаРедактированияСтроки",
			СтруктураДанныхСтроки, ЭтотОбъект, УникальныйИдентификатор, , ,
			Новый ОписаниеОповещения("ВариантыАнализаСписокРедактированиеСтрокиЗавершение", ЭтотОбъект,
			Новый Структура("НоваяСтрока", Ложь)), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	Иначе

		СписокВыбора = Элементы.ВариантыАнализаСписокВариантОтображения.СписокВыбора;

		ЗаполнитьСписокВариантовОтображения(СписокВыбора, Элемент.ТекущиеДанные.ТипАнализа);
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВариантыАнализаСписокПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	Если Не ОтменаРедактирования Тогда
		ТекущиеДанные = Элементы.ВариантыАнализаСписок.ТекущиеДанные;
		Если Не ЗначениеЗаполнено(ТекущиеДанные.ВариантАнализа) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не указан вариант анализа'"), , , , Отказ);
		Иначе
			СовпадающиеСтроки = ВариантыАнализаСписок.НайтиСтроки(Новый Структура("ВариантАнализа",
				ТекущиеДанные.ВариантАнализа));
			Если СовпадающиеСтроки.Количество() > 1 Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выбранный вариант анализа уже используется'"),
					, , , Отказ);
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТекущиеДанные.ВариантОтображения) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не указан вариант отображения'"), , , , Отказ);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПользователиДашборда

&НаКлиенте
Процедура ПользователиДашбордаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Объект.ПользователиДашборда.Очистить();
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для каждого Значение Из ВыбранноеЗначение Цикл
			ОбработкаВыбораПользователя(Значение);
		КонецЦикла;
	Иначе
		ОбработкаВыбораПользователя(ВыбранноеЗначение);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьОтметки(Команда)

	ОбновитьСоставДоступностиВниз(Неопределено, Истина);
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)

	ОбновитьСоставДоступностиВниз(Неопределено, Ложь);
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьПользователей(Команда)

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("РасширенныйПодбор", Истина);
	ПараметрыФормы.Вставить("ПараметрыРасширеннойФормыПодбора", ПараметрыРасширеннойФормыПодбора());
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, Элементы.ПользователиДашборда);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)

	ВыбратьФайлИконки();

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)

	АдресКартинки = "";

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзображение(Команда)

	ВыбратьФайлИконки();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.ПользователиДашборда.Видимость = Не Объект.ТолькоДляАвтора;
	Элементы.КоличествоКолонокМонитораПоказателей.КнопкаРегулирования = (Объект.КоличествоКолонок > 4);
	Элементы.РазмерТаблицДиаграмм.КнопкаРегулирования = (Объект.Масштаб > 200);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	ЗаполнитьСписокВыбораКоличестваКолонокМонитораПоказателей(ЭтотОбъект);
	ЗаполнитьСписокВыбораРазмераТаблицДиаграмм(ЭтотОбъект);
	
	УправлениеФормой(ЭтотОбъект);
	
	Если Объект.ТолькоДляАвтора Тогда
		ВариантДоступности = "ТолькоАвтору";
	Иначе
		ВариантДоступности = "УказаннымПользователям";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВариантовОтображения(СписокВыбора, ТипАнализа)

	СписокВыбора.Очистить();

	СписокВыбора.Добавить(ВариантОтображенияКратко);
	СписокВыбора.Добавить(ВариантОтображенияДиаграмма);

	Если ТипАнализа = ТипАнализаПокомпонентноеСравнение Тогда
		СписокВыбора.Добавить(ВариантОтображенияТаблица);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлИконки()

	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.Заголовок = НСтр("ru = 'Выберите файл для картинки дашборда'");
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр(
		"ru='Файл картинки (*.gif;*.jpg;*.jpeg;*.bmp;*.png)|*.gif;*.jpg;*.jpeg;*.bmp;*.png'");
	ПараметрыЗагрузки.Диалог.ПредварительныйПросмотр = Ложь;
	ПараметрыЗагрузки.Диалог.ИндексФильтра = 0;
	ПараметрыЗагрузки.Диалог.ПроверятьСуществованиеФайла = Истина;

	Оповещение = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект);
	ФайловаяСистемаКлиент.ЗагрузитьФайл(Оповещение, ПараметрыЗагрузки);

КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ДанныеФайла, ДополнительныеПараметры) Экспорт

	Если ДанныеФайла <> Неопределено Тогда
		
		АдресКартинки = ДанныеФайла.Хранение;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОпределитьПоведениеВМобильномКлиенте()

	ЭтоМобильныйКлиент = ОбщегоНазначения.ЭтоМобильныйКлиент();
	Если Не ЭтоМобильныйКлиент Тогда 
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницыВариантовАнализа.ТекущаяСтраница = Элементы.СтраницаВариантовАнализаСписок;
	
	Элементы.ГруппаИконка.Видимость = Ложь;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораКоличестваКолонокМонитораПоказателей(Форма)

	Элементы = Форма.Элементы;
	
	СписокВыбораКоличестваКолонок = Элементы.КоличествоКолонокМонитораПоказателей.СписокВыбора;
	СписокВыбораКоличестваКолонок.Очистить();
	СписокВыбораКоличестваКолонок.Добавить(0, НСтр("ru = 'Авто'"));
	СписокВыбораКоличестваКолонок.Добавить(1);
	СписокВыбораКоличестваКолонок.Добавить(2);
	СписокВыбораКоличестваКолонок.Добавить(3);
	СписокВыбораКоличестваКолонок.Добавить(4);
	СписокВыбораКоличестваКолонок.Добавить(НСтр("ru = 'Другое'"), НСтр("ru = 'Другое...'"));
	
	Элементы.КоличествоКолонокМонитораПоказателей.КнопкаВыпадающегоСписка = Истина;
	Элементы.КоличествоКолонокМонитораПоказателей.РедактированиеТекста = Истина;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораРазмераТаблицДиаграмм(Форма)

	Элементы = Форма.Элементы;
	
	СписокВыбораРазмера = Элементы.РазмерТаблицДиаграмм.СписокВыбора;
	СписокВыбораРазмера.Очистить();
	СписокВыбораРазмера.Добавить(50, НСтр("ru = 'Авто'"));
	СписокВыбораРазмера.Добавить(75, "75%");
	СписокВыбораРазмера.Добавить(100, НСтр("ru = '100% (стандартно)'"));
	СписокВыбораРазмера.Добавить(125, "125%");
	СписокВыбораРазмера.Добавить(150, "150%");
	СписокВыбораРазмера.Добавить(175, "175%");
	СписокВыбораРазмера.Добавить(200, НСтр("ru = '200% (крупный)'"));
	СписокВыбораРазмера.Добавить(225, НСтр("ru = 'произвольный'"));
	
	Элементы.КоличествоКолонокМонитораПоказателей.КнопкаВыпадающегоСписка = Истина;
	Элементы.КоличествоКолонокМонитораПоказателей.РедактированиеТекста = Истина;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализа.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыАнализа.ТипСтроки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ReportGroup1BackColor);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаДоступностьПоЦели.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаЦель.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыАнализа.ТипСтроки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 1;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаДоступность.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаВариантАнализа.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыАнализа.ТипСтроки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаДетали.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаИтогТаблицы.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыАнализа.ТипСтроки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаИтогТаблицы.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыАнализа.ВариантОтображения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Перечисления.ВариантыОтображенияВариантовАнализа.Кратко);
	СписокЗначений.Добавить(Перечисления.ВариантыОтображенияВариантовАнализа.Диаграмма);
	ОтборЭлемента.ПравоеЗначение = СписокЗначений;

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаСписокИтогТаблицы.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыАнализаСписок.ВариантОтображения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Перечисления.ВариантыОтображенияВариантовАнализа.Кратко);
	СписокЗначений.Добавить(Перечисления.ВариантыОтображенияВариантовАнализа.Диаграмма);
	ОтборЭлемента.ПравоеЗначение = СписокЗначений;

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаДетали.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыАнализа.ВариантОтображения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВариантыОтображенияВариантовАнализа.Кратко;

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыАнализаСписокДетали.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыАнализаСписок.ВариантОтображения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВариантыОтображенияВариантовАнализа.Кратко;

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСоставДоступностиВверх(ИдентификаторСтроки)

	ТекущиеДанные = ВариантыАнализа.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	ТекущиеДанныеРодитель = ТекущиеДанные.ПолучитьРодителя();
	
	Если НЕ ТекущиеДанныеРодитель = Неопределено Тогда
		ЭлементыРодителя = ТекущиеДанныеРодитель.ПолучитьЭлементы();
		
		КоличествоНулей = 0;
		КоличествоЕдиниц = 0;
		КоличествоДвоек = 0;
		Для Каждого ЭлементРодителя Из ЭлементыРодителя Цикл 
			Если ЭлементРодителя.ТипСтроки = 0 Тогда 
				ЗначениеДоступности = ЭлементРодителя.ДоступностьПоЦели;
				
			ИначеЕсли ЭлементРодителя.ТипСтроки = 1 Тогда 
				ЗначениеДоступности = ЭлементРодителя.Доступность;
				
			КонецЕсли;
			
			Если ЗначениеДоступности = 0 Тогда
				КоличествоНулей = КоличествоНулей + 1;
				
			ИначеЕсли ЗначениеДоступности = 1 Тогда
				КоличествоЕдиниц = КоличествоЕдиниц + 1;
				
			ИначеЕсли ЗначениеДоступности = 2 Тогда
				КоличествоДвоек = КоличествоДвоек + 1;
				
			КонецЕсли;
			
		КонецЦикла;
		
		КоличествоЭлементов = ЭлементыРодителя.Количество();
		
		Если КоличествоНулей = 0 Тогда
			Если КоличествоЕдиниц = КоличествоЭлементов Тогда
				ТекущиеДанныеРодитель.ДоступностьПоЦели = 1;
				
			Иначе
				ТекущиеДанныеРодитель.ДоступностьПоЦели = 2;
				
			КонецЕсли;
		Иначе
			Если КоличествоНулей = КоличествоЭлементов Тогда
				ТекущиеДанныеРодитель.ДоступностьПоЦели = 0;
				
			Иначе
				ТекущиеДанныеРодитель.ДоступностьПоЦели = 2;
				
			КонецЕсли;
		КонецЕсли;
		
		ОбновитьСоставДоступностиВверх(ТекущиеДанныеРодитель.ПолучитьИдентификатор());
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСоставДоступностиВниз(ИдентификаторСтроки, Состояние)

	Если ИдентификаторСтроки = Неопределено Тогда
		КоллекцияВариантовАнализа = ВариантыАнализа.ПолучитьЭлементы();
		
	Иначе
		ТекущиеДанные = ВариантыАнализа.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		Состояние = ?(Состояние = 2, 0, Состояние);
		
		Если ТекущиеДанные.ТипСтроки = 0 Тогда
			ТекущиеДанные.ДоступностьПоЦели = Состояние;
			
		ИначеЕсли ТекущиеДанные.ТипСтроки = 1 Тогда
			ТекущиеДанные.Доступность = Состояние;
			
		КонецЕсли;
		
		КоллекцияВариантовАнализа = ТекущиеДанные.ПолучитьЭлементы();
		
	КонецЕсли;
	
	Для каждого ЭлементКоллекцииВариантовАнализа Из КоллекцияВариантовАнализа Цикл
		Если ЭлементКоллекцииВариантовАнализа.ТипСтроки = 0 Тогда
			ЭлементКоллекцииВариантовАнализа.ДоступностьПоЦели = Состояние;
		
			ОбновитьСоставДоступностиВниз(ЭлементКоллекцииВариантовАнализа.ПолучитьИдентификатор(), Состояние);
		
		ИначеЕсли ЭлементКоллекцииВариантовАнализа.ТипСтроки = 1 Тогда
			ЭлементКоллекцииВариантовАнализа.Доступность = Состояние;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВариантовАнализа(ИдентификаторСтроки = Неопределено)

	Если ИдентификаторСтроки = Неопределено Тогда
		// Обработка всех
		КоллекцияВариантовАнализа = ВариантыАнализа.ПолучитьЭлементы();
		
	Иначе
		ТекущиеДанные = ВариантыАнализа.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		КоллекцияВариантовАнализа = ТекущиеДанные.ПолучитьЭлементы();
		
	КонецЕсли;
	
	Для каждого ЭлементКоллекцииВариантовАнализа Из КоллекцияВариантовАнализа Цикл
		
		ИдентификаторЭлемента = ЭлементКоллекцииВариантовАнализа.ПолучитьИдентификатор();
		
		Если ЭлементКоллекцииВариантовАнализа.ТипСтроки = 0 Тогда
			
			ЗаполнитьСписокВариантовАнализа(ИдентификаторЭлемента);
			
		ИначеЕсли ЭлементКоллекцииВариантовАнализа.ТипСтроки = 1
			И ЭлементКоллекцииВариантовАнализа.Доступность Тогда
			
			НовыйВыбранныйВариантАнализа = ВариантыАнализаСписок.Добавить();
			НовыйВыбранныйВариантАнализа.ВариантАнализа = ЭлементКоллекцииВариантовАнализа.ВариантАнализа;
			НовыйВыбранныйВариантАнализа.ВариантОтображения = ЭлементКоллекцииВариантовАнализа.ВариантОтображения;
			НовыйВыбранныйВариантАнализа.Детали = ЭлементКоллекцииВариантовАнализа.Детали;
			НовыйВыбранныйВариантАнализа.ИтогТаблицы = ЭлементКоллекцииВариантовАнализа.ИтогТаблицы;
			НовыйВыбранныйВариантАнализа.ТипАнализа = ЭлементКоллекцииВариантовАнализа.ТипАнализа;
			
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВариантыАнализа()

	Запрос = Новый Запрос;
	Если Параметры.Свойство("ЗначениеКопирования")
		И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Запрос.УстановитьПараметр("Ссылка", Параметры.ЗначениеКопирования);
	Иначе
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	КонецЕсли;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВариантыАнализаЦелевыхПоказателей.Владелец КАК Цель,
	|	ЛОЖЬ КАК ДоступностьПоЦели,
	|	ВариантыАнализаЦелевыхПоказателей.Ссылка КАК ВариантАнализа,
	|	ВЫБОР
	|		КОГДА ДашбордыМЦПВариантыАнализа.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Доступность,
	|	ВЫБОР
	|		КОГДА ДашбордыМЦПВариантыАнализа.ВариантОтображения ЕСТЬ NULL
	|			ТОГДА ВариантыАнализаЦелевыхПоказателей.ВариантОтображенияПоУмолчанию
	|		ИНАЧЕ ДашбордыМЦПВариантыАнализа.ВариантОтображения
	|	КОНЕЦ КАК ВариантОтображения,
	|	ВЫБОР
	|		КОГДА ДашбордыМЦПВариантыАнализа.Детали ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ДашбордыМЦПВариантыАнализа.Детали
	|	КОНЕЦ КАК Детали,
	|	ВЫБОР
	|		КОГДА ДашбордыМЦПВариантыАнализа.ИтогТаблицы ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ДашбордыМЦПВариантыАнализа.ИтогТаблицы
	|	КОНЕЦ КАК ИтогТаблицы,
	|	1 КАК ТипСтроки,
	|	ВариантыАнализаЦелевыхПоказателей.ТипАнализа КАК ТипАнализа
	|ИЗ
	|	Справочник.ВариантыАнализаЦелевыхПоказателей КАК ВариантыАнализаЦелевыхПоказателей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДашбордыМЦП.ВариантыАнализа КАК ДашбордыМЦПВариантыАнализа
	|		ПО ВариантыАнализаЦелевыхПоказателей.Ссылка = ДашбордыМЦПВариантыАнализа.ВариантАнализа
	|			И (ДашбордыМЦПВариантыАнализа.Ссылка = &Ссылка)
	|ГДЕ
	|	НЕ ВариантыАнализаЦелевыхПоказателей.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВариантыАнализаЦелевыхПоказателей.Владелец.РеквизитДопУпорядочиванияИерархического,
	|	ВариантыАнализаЦелевыхПоказателей.РеквизитДопУпорядочивания
	|ИТОГИ
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(Доступность) = ИСТИНА
	|				И МИНИМУМ(Доступность) = ИСТИНА
	|			ТОГДА 1
	|		КОГДА МАКСИМУМ(Доступность) = ЛОЖЬ
	|				И МИНИМУМ(Доступность) = ЛОЖЬ
	|			ТОГДА 0
	|		КОГДА МАКСИМУМ(Доступность) = ИСТИНА
	|				И МИНИМУМ(Доступность) = ЛОЖЬ
	|			ТОГДА 2
	|	КОНЕЦ КАК ДоступностьПоЦели,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА Цель ЕСТЬ NULL
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ТипСтроки
	|ПО
	|	Цель ИЕРАРХИЯ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВариантыАнализаЗначение = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		ПодготовитьДеревоВариантовАнализа(ВариантыАнализаЗначение);
		
		УдалитьСтрокиБезПодчиненных(ВариантыАнализаЗначение);
		
		ЗначениеВДанныеФормы(ВариантыАнализаЗначение, ВариантыАнализа);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПодготовитьДеревоВариантовАнализа(ДеревоВариантовАнализа, НачальнаяСтрокаПроверки = Неопределено)

	Если НачальнаяСтрокаПроверки = Неопределено Тогда
		СтрокиДерева = ДеревоВариантовАнализа.Строки;
	Иначе
		СтрокиДерева = НачальнаяСтрокаПроверки.Строки;
	КонецЕсли;
	
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если СтрокаДерева.Строки.Количество() Тогда
			ПодготовитьДеревоВариантовАнализа(ДеревоВариантовАнализа, СтрокаДерева);
		КонецЕсли;
		
		Если НЕ СтрокаДерева.Родитель = Неопределено И СтрокаДерева.Цель = СтрокаДерева.Родитель.Цель Тогда
			СтрокиТекущейСтрокиДерева = СтрокаДерева.Строки;
			
			ПозицияВставки = СтрокиДерева.Индекс(СтрокаДерева);
			Для Каждого СтрокаТекущейСтрокиДерева Из СтрокиТекущейСтрокиДерева Цикл
				ПеренесеннаяСтрока = СтрокаДерева.Родитель.Строки.Вставить(ПозицияВставки);
				ЗаполнитьЗначенияСвойств(ПеренесеннаяСтрока, СтрокаТекущейСтрокиДерева);
				
				ПозицияВставки = ПозицияВставки + 1;
				
			КонецЦикла;
			
			СтрокаДерева.Строки.Очистить();
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокиБезПодчиненных(ДеревоВариантовАнализа, НачальнаяСтрокаПроверки = Неопределено)

	Если НачальнаяСтрокаПроверки = Неопределено Тогда
		СтрокиДерева = ДеревоВариантовАнализа.Строки;
	Иначе
		СтрокиДерева = НачальнаяСтрокаПроверки.Строки;
	КонецЕсли;
	
	ИндексСтроки = СтрокиДерева.Количество() - 1;
	Пока ИндексСтроки >= 0 Цикл 
		ПроверяемаяСтрока = СтрокиДерева[ИндексСтроки];
		
		Если ПроверяемаяСтрока.ТипСтроки = 1 Тогда
			ИндексСтроки = ИндексСтроки - 1;
			Продолжить;
		КонецЕсли;
		
		Если ПроверяемаяСтрока.Строки.Количество() Тогда
			УдалитьСтрокиБезПодчиненных(ДеревоВариантовАнализа, ПроверяемаяСтрока);
		Иначе
			СтрокиДерева.Удалить(ПроверяемаяСтрока);
		КонецЕсли;
		
		ИндексСтроки = ИндексСтроки - 1;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПользователя(ВыбранноеЗначение)

	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи") Тогда
		Объект.ПользователиДашборда.Добавить().Пользователь = ВыбранноеЗначение;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПараметрыРасширеннойФормыПодбора()

	ВыбранныеПользователи = Новый ТаблицаЗначений;
	ВыбранныеПользователи.Колонки.Добавить("Пользователь");
	ВыбранныеПользователи.Колонки.Добавить("НомерКартинки");
	
	УчастникиГруппы = Объект.ПользователиДашборда.Выгрузить(, "Пользователь");
	
	Для каждого Элемент Из УчастникиГруппы Цикл
		
		СтрокаВыбранныеПользователи = ВыбранныеПользователи.Добавить();
		СтрокаВыбранныеПользователи.Пользователь = Элемент.Пользователь;
	
	КонецЦикла;
	
	ЗаголовокФормыПодбора = НСтр("ru = 'Подбор пользователей для дашборда МЦП'");
	ПараметрыРасширеннойФормыПодбора = 
		Новый Структура("ЗаголовокФормыПодбора, ВыбранныеПользователи, ПодборГруппНевозможен",
		ЗаголовокФормыПодбора, ВыбранныеПользователи, Истина);
	АдресХранилища = ПоместитьВоВременноеХранилище(ПараметрыРасширеннойФормыПодбора);
	Возврат АдресХранилища;

КонецФункции

&НаКлиенте
Процедура РазмерТаблицДиаграммВыборИзСпискаЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		Если Результат.Значение = "произвольный" Тогда
			Объект.Масштаб = 225;
		Иначе
			Объект.Масштаб = Результат.Значение;
		КонецЕсли;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоличествоКолонокМонитораПоказателейВыборИзСпискаЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		Если Результат.Значение = "Другое" Тогда
			Объект.КоличествоКолонок = 5;
		Иначе
			Объект.КоличествоКолонок = Результат.Значение;
		КонецЕсли;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВариантыАнализаСписокРедактированиеСтрокиЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если ДополнительныеПараметры.НоваяСтрока Тогда
			СтрокаТаблицы = ВариантыАнализаСписок.Добавить();
		Иначе
			СтрокаТаблицы = Элементы.ВариантыАнализаСписок.ТекущиеДанные;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Результат);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
