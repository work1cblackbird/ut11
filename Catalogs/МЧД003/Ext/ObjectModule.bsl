// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Наименование = МашиночитаемыеДоверенности.ПредставлениеОбъекта(ЭтотОбъект);

	Если Не ЗначениеЗаполнено(ХешФайла) Тогда
		ДанныеФайла = ФайлМЧД.Получить();
		Если ТипЗнч(ДанныеФайла) = Тип("ДвоичныеДанные") Тогда
			ХешФайла = ОбщегоНазначения.КонтрольнаяСуммаСтрокой(ДанныеФайла, ХешФункция.SHA256);
		КонецЕсли;
	КонецЕсли;
	
	Если СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отозвано И Не ЗначениеЗаполнено(
		ДатаПрекращения) Тогда
		ДатаПрекращения = ТекущаяДатаСеанса();
	КонецЕсли;

	ПараметрыЗаписиВЖурналМЧД = МашиночитаемыеДоверенности.НовыеПараметрыЗаписиВЖурналМЧД();
	ДополнительныеСвойства.Вставить("ПараметрыЗаписиВЖурналМЧД", ПараметрыЗаписиВЖурналМЧД);
	Если Не ЭтоНовый() Тогда
		ПредыдущиеЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ХешФайла");
		Если ПредыдущиеЗначенияРеквизитов.ХешФайла <> ХешФайла Тогда
			ПараметрыЗаписиВЖурналМЧД.ИзменилсяХеш = Истина;
			ПараметрыЗаписиВЖурналМЧД.ПредыдущееЗначениеХеша = ПредыдущиеЗначенияРеквизитов.ХешФайла;
		КонецЕсли;
	КонецЕсли;

	Если ВариантЗаполненияПолномочий = Перечисления.ВариантыЗаполненияПолномочийМЧД.Текст Тогда
		Полномочия.Очистить();
	ИначеЕсли ВариантЗаполненияПолномочий = Перечисления.ВариантыЗаполненияПолномочийМЧД.Классификатор Тогда
		ТекстовоеПолномочие = "";
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоСозданиеНового", ЭтоНовый());
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.ЭтоСозданиеНового Тогда
		Справочники.ПравилаПроверкиПолномочийМЧД.СоздатьТиповыеПравилаПриЗагрузкеМЧД(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область События

// Добавляет или обновляет запись в журнале МЧД. Возникает в подписке ПриЗаписи.
// См. МашиночитаемыеДоверенности.ЗаписатьМашиночитаемуюДоверенностьВЖурнал
// 
// Параметры:
//  Отказ - Булево
Процедура ЗаписатьВЖурнал(Отказ) Экспорт
	ДанныеДоверенности = ФайлМЧД.Получить(); // ДвоичныеДанные
	Если Не ЗначениеЗаполнено(ХешФайла) Или ДанныеДоверенности = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Запись = РегистрыСведений.ЖурналМашиночитаемыхДоверенностей.НоваяЗаписьЖурнала();
	Запись.Хеш = ХешФайла;
	Запись.Номер = НомерДоверенности;
	Если Подписана Тогда
		СведенияФайла = МашиночитаемыеДоверенности.ДанныеИзФайлаОбмена(ДанныеДоверенности).ДанныеДоверенности; // См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.Доверенность
	Иначе
		СведенияФайла = Справочники.МЧД003.ОбъектXDTOМЧДИзДвоичныхДанных(ДанныеДоверенности).Доверенность; // См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.Доверенность
	КонецЕсли;
	ЗаполнитьДоверителейВЗаписиЖурнала(СведенияФайла, Запись);
	ЗаполнитьДоверителейПередоверияВЗаписиЖурнала(СведенияФайла, Запись);
	ЗаполнитьПредставителейВЗаписиЖурнала(СведенияФайла, Запись);
	Запись.ДатаВыдачи = ДатаВыдачи;
	Запись.Доверенность = Ссылка;
	Запись.ДатаОкончанияДействия = ДатаОкончанияДействия();
	Запись.Верна = Верна;
	Запись.Действует = Действует();
	Запись.ПометкаУдаления = ПометкаУдаления;
	РегистрыСведений.ЖурналМашиночитаемыхДоверенностей.ДобавитьЗапись(Запись);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Перечисления

// Классификатор типов доверителей
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура :
// * ЮридическоеЛицо - Строка
// * ИностраннаяОрганизация - Строка
// * ИндивидуальныйПредприниматель - Строка 
// * ФизическоеЛицо - Строка
Функция ТипыДоверителей()
	ТипыДоверителей = Новый Структура;
	ТипыДоверителей.Вставить("ЮридическоеЛицо", "1");
	ТипыДоверителей.Вставить("ИностраннаяОрганизация", "2");
	ТипыДоверителей.Вставить("ИндивидуальныйПредприниматель", "3");
	ТипыДоверителей.Вставить("ФизическоеЛицо", "4");
	Возврат Новый ФиксированнаяСтруктура(ТипыДоверителей);
КонецФункции

// Классификатор типов представителей и передоверителей (передающих полномочия)
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура:
// * ЮридическоеЛицо - Строка
// * ИндивидуальныйПредприниматель - Строка
// * ФизическоеЛицо - Строка
// * ФилиалЮридическогоЛица - Строка
// * ФилиалИностраннойОрганизации - Строка
Функция ТипыПредставителейИПередоверителей()
	ТипыСубъектовПередоверия = Новый Структура;
	ТипыСубъектовПередоверия.Вставить("ЮридическоеЛицо", "1");
	ТипыСубъектовПередоверия.Вставить("ИндивидуальныйПредприниматель", "2");
	ТипыСубъектовПередоверия.Вставить("ФизическоеЛицо", "3");
	ТипыСубъектовПередоверия.Вставить("ФилиалЮридическогоЛица", "4");
	ТипыСубъектовПередоверия.Вставить("ФилиалИностраннойОрганизации", "5");
	Возврат Новый ФиксированнаяСтруктура(ТипыСубъектовПередоверия);
КонецФункции

#КонецОбласти

#Область ЗаполнениеЖурнала

// Заполняет доверителей в журнал записей
//
// Параметры:
//  СведенияФайла - См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.Доверенность
//  Запись - РегистрСведенийЗапись.ЖурналМашиночитаемыхДоверенностей
Процедура ЗаполнитьДоверителейВЗаписиЖурнала(СведенияФайла, Запись)
	
	Если СведенияФайла.Документ.Довер = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Журнал = РегистрыСведений.ЖурналМашиночитаемыхДоверенностей;
	КлассификаторЖурнала = Журнал.ТипыДоверителей();
	КлассификаторФормата = ТипыДоверителей();
	
	СписокДоверителей = СведенияФайла.Документ.Довер.СвДоверит; // СписокXDTO Из См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвДоверитТип
	Для Каждого СведенияОДоверителе Из СписокДоверителей Цикл
		Если СведенияОДоверителе.ТипДоверит = КлассификаторФормата.ЮридическоеЛицо Тогда
			
			Доверитель = Журнал.НовыйДоверитель(КлассификаторЖурнала.ЮридическоеЛицо);
			СведенияОбОрганизации = СведенияОДоверителе.Доверит.РосОргДовер.СвРосОрг; // См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвОргТип
			Доверитель.ДанныеЮридическогоЛица.Наименование = Строка(СведенияОбОрганизации.НаимОрг);
			Доверитель.ДанныеЮридическогоЛица.ИНН = Строка(СведенияОбОрганизации.ИННЮЛ);
			Доверитель.ДанныеЮридическогоЛица.КПП = Строка(СведенияОбОрганизации.КПП);
			Доверитель.ДанныеЮридическогоЛица.ОГРН = Строка(СведенияОбОрганизации.ОГРН);
			
			СписокЛицБезДоверенности = СведенияОДоверителе.Доверит.РосОргДовер.ЛицоБезДов; // СписокXDTO Из См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.ЛицоБезДовТип
			Для Каждого ЛицоБезДоверенности Из СписокЛицБезДоверенности Цикл
				
				Если ЛицоБезДоверенности.СВЮЛ <> Неопределено Тогда
					УправляющаяКомпания = Журнал.НовоеЮридическоеЛицо();
					Доверитель.ДанныеЮридическогоЛица.ЛицаБезДоверенности.Добавить(УправляющаяКомпания);
					УправляющаяКомпания.Наименование = Строка(ЛицоБезДоверенности.СВЮЛ.СвЮЛЕИО.НаимОрг);
					УправляющаяКомпания.ИНН = Строка(ЛицоБезДоверенности.СВЮЛ.СвЮЛЕИО.ИННЮЛ);
					УправляющаяКомпания.КПП = Строка(ЛицоБезДоверенности.СВЮЛ.СвЮЛЕИО.КПП);
					УправляющаяКомпания.ОГРН = Строка(ЛицоБезДоверенности.СВЮЛ.СвЮЛЕИО.ОГРН);
					СписокФизЛицБезДоверенности = ЛицоБезДоверенности.СВЮЛ.СвФЛ; // СписокXDTO Из См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвФЛТип
					Для Каждого ФизЛицоБезДоверенности Из СписокФизЛицБезДоверенности Цикл
						ФизЛицо = Журнал.НовоеФизическоеЛицо();
						УправляющаяКомпания.ЛицаБезДоверенности.Добавить(ФизЛицо);
						ФизЛицо.ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(ФизЛицоБезДоверенности.СведФЛ.ФИО);
						ФизЛицо.ИНН = Строка(ФизЛицоБезДоверенности.ИННФЛ);
						ФизЛицо.СНИЛС = Строка(ФизЛицоБезДоверенности.СНИЛС);
					КонецЦикла;
				КонецЕсли;
				
				Если ЛицоБезДоверенности.СвИП <> Неопределено Тогда
					Предприниматель = Журнал.НовыйИндивидуальныйПредприниматель();
					Доверитель.ДанныеЮридическогоЛица.ЛицаБезДоверенности.Добавить(Предприниматель);
					Предприниматель.Наименование = Строка(ЛицоБезДоверенности.СвИП.НаимИП);
					Если Предприниматель.Наименование = ""
						И ЛицоБезДоверенности.СвИП.СведФЛ <> Неопределено Тогда
						Предприниматель.Наименование = 
						ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(ЛицоБезДоверенности.СвИП.СведФЛ.ФИО);
					КонецЕсли;
					Предприниматель.ИНН  = Строка(ЛицоБезДоверенности.СвИП.ИННФЛ);
					Предприниматель.СНИЛС = Строка(ЛицоБезДоверенности.СвИП.СНИЛС);
					Предприниматель.ОГРН = Строка(ЛицоБезДоверенности.СвИП.ОГРНИП);
				КонецЕсли;
				
				Если ЛицоБезДоверенности.СвФЛ <> Неопределено Тогда
					ФизЛицо = Журнал.НовоеФизическоеЛицо();
					Доверитель.ДанныеЮридическогоЛица.ЛицаБезДоверенности.Добавить(ФизЛицо);
					ФизЛицо.ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(ЛицоБезДоверенности.СвФЛ.СведФЛ.ФИО);
					ФизЛицо.ИНН = Строка(ЛицоБезДоверенности.СвФЛ.ИННФЛ);
					ФизЛицо.СНИЛС = Строка(ЛицоБезДоверенности.СвФЛ.СНИЛС);
				КонецЕсли;
				
			КонецЦикла;
			
		ИначеЕсли СведенияОДоверителе.ТипДоверит = КлассификаторФормата.ИностраннаяОрганизация Тогда
			
			Доверитель = Журнал.НовыйДоверитель(КлассификаторЖурнала.ИностраннаяОрганизация);
			СведенияОбОрганизации = СведенияОДоверителе.Доверит.ИнОргДовер.СвИнОрг; // См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвИнОргТип
			Доверитель.ДанныеИностраннойОрганизации.Наименование = Строка(СведенияОбОрганизации.НаимИО);
			Доверитель.ДанныеИностраннойОрганизации.ИНН = Строка(СведенияОбОрганизации.ИННЮЛ);
			Доверитель.ДанныеИностраннойОрганизации.КПП = Строка(СведенияОбОрганизации.КПП);
			
			СписокРуководителей = СведенияОДоверителе.Доверит.ИнОргДовер.СвРукОП; // СписокXDTO Из См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвФЛТип
			Для Каждого Руководитель Из СписокРуководителей Цикл
				ФизЛицо = Журнал.НовоеФизическоеЛицо();
				Доверитель.ДанныеИностраннойОрганизации.Руководители.Добавить(ФизЛицо);
				ФизЛицо.ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(Руководитель.СведФЛ.ФИО);
				ФизЛицо.ИНН = Строка(Руководитель.ИННФЛ);
				ФизЛицо.СНИЛС = Строка(Руководитель.СНИЛС);
			КонецЦикла;
			
		ИначеЕсли СведенияОДоверителе.ТипДоверит = КлассификаторФормата.ИндивидуальныйПредприниматель Тогда
			
			Доверитель = Журнал.НовыйДоверитель(КлассификаторЖурнала.ИндивидуальныйПредприниматель);
			СведенияОПредпринимателей = СведенияОДоверителе.Доверит.ИПДовер;
			Доверитель.ДанныеИндивидуальногоПредпринимателя.Наименование = Строка(СведенияОПредпринимателей.НаимИП);
			Если Доверитель.ДанныеИндивидуальногоПредпринимателя.Наименование = "" 
				И СведенияОПредпринимателей.СведФЛ <> Неопределено Тогда
				Доверитель.ДанныеИндивидуальногоПредпринимателя.Наименование = 
				ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(СведенияОПредпринимателей.СведФЛ.ФИО);
			КонецЕсли;
			Доверитель.ДанныеИндивидуальногоПредпринимателя.ИНН = Строка(СведенияОПредпринимателей.ИННФЛ);
			Доверитель.ДанныеИндивидуальногоПредпринимателя.СНИЛС = Строка(СведенияОПредпринимателей.СНИЛС);
			Доверитель.ДанныеИндивидуальногоПредпринимателя.ОГРН = Строка(СведенияОПредпринимателей.ОГРНИП);
			
		ИначеЕсли СведенияОДоверителе.ТипДоверит = КлассификаторФормата.ФизическоеЛицо Тогда
			
			Доверитель = Журнал.НовыйДоверитель(КлассификаторЖурнала.ФизическоеЛицо);
			СведенияОФизЛице = СведенияОДоверителе.Доверит.ФЛДовер; // См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвФЛТип
			Доверитель.ДанныеФизическогоЛица.ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(
			СведенияОФизЛице.СведФЛ.ФИО);
			Доверитель.ДанныеФизическогоЛица.ИНН = Строка(СведенияОФизЛице.ИННФЛ);
			Доверитель.ДанныеФизическогоЛица.СНИЛС = Строка(СведенияОФизЛице.СНИЛС);
			
		Иначе
			ШаблонОшибки = НСтр("ru='Не удалось заполнить доверителя, недопустимое значение поля %1: %2';");
			ВызватьИсключение СтрШаблон(ШаблонОшибки, "ТипДоверит", СведенияОДоверителе.ТипДоверит);
		КонецЕсли;
		
		Запись.Доверители.Добавить(Доверитель);
		
	КонецЦикла;
		
КонецПроцедуры

// Заполняет доверителей в журнал записей
//
// Параметры:
//  СведенияФайла - См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.Доверенность
//  Запись - РегистрСведенийЗапись.ЖурналМашиночитаемыхДоверенностей
Процедура ЗаполнитьДоверителейПередоверияВЗаписиЖурнала(СведенияФайла, Запись)
	
	Если СведенияФайла.Документ.Передов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Журнал = РегистрыСведений.ЖурналМашиночитаемыхДоверенностей;
		
	КлассификаторЖурнала = Журнал.ТипыДоверителей();
	КлассификаторФормата = ТипыПредставителейИПередоверителей();
	
	СписокДоверителей = СведенияФайла.Документ.Передов.СвПередПолн; // СписокXDTO Из См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвДоверитТип
	Для Каждого СведенияОДоверителе Из СписокДоверителей Цикл
		Если СведенияОДоверителе.ТипПерПолн = КлассификаторФормата.ЮридическоеЛицо Тогда
			
			Доверитель = Журнал.НовыйДоверитель(КлассификаторЖурнала.ЮридическоеЛицо);
			СведенияОбОрганизации = СведенияОДоверителе.ПередПолн.РосОргПерПолн.СвРосОрг; // См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвОргТип
			Доверитель.ДанныеЮридическогоЛица.Наименование = Строка(СведенияОбОрганизации.НаимОрг);
			Доверитель.ДанныеЮридическогоЛица.ИНН = Строка(СведенияОбОрганизации.ИННЮЛ);
			Доверитель.ДанныеЮридическогоЛица.КПП = Строка(СведенияОбОрганизации.КПП);
			Доверитель.ДанныеЮридическогоЛица.ОГРН = Строка(СведенияОбОрганизации.ОГРН);
			СписокЛицБезДоверенности = СведенияОДоверителе.ПередПолн.РосОргПерПолн.ЛицоБезДов; // СписокXDTO Из См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.ЛицоБезДовТип
			
			Для Каждого ЛицоБезДоверенности Из СписокЛицБезДоверенности Цикл
				
				Если ЛицоБезДоверенности.СВЮЛ <> Неопределено Тогда
					УправляющаяКомпания = Журнал.НовоеЮридическоеЛицо();
					Доверитель.ДанныеЮридическогоЛица.ЛицаБезДоверенности.Добавить(УправляющаяКомпания);
					УправляющаяКомпания.Наименование = Строка(ЛицоБезДоверенности.СВЮЛ.СвЮЛЕИО.НаимОрг);
					УправляющаяКомпания.ИНН = Строка(ЛицоБезДоверенности.СВЮЛ.СвЮЛЕИО.ИННЮЛ);
					УправляющаяКомпания.КПП = Строка(ЛицоБезДоверенности.СВЮЛ.СвЮЛЕИО.КПП);
					УправляющаяКомпания.ОГРН = Строка(ЛицоБезДоверенности.СВЮЛ.СвЮЛЕИО.ОГРН);
					
					СписокФизЛицБезДоверенности = ЛицоБезДоверенности.СВЮЛ.СвФЛ; // СписокXDTO Из См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвФЛТип
					Для Каждого ФизЛицоБезДоверенности Из СписокФизЛицБезДоверенности Цикл
						ФизЛицо = Журнал.НовоеФизическоеЛицо();
						УправляющаяКомпания.ЛицаБезДоверенности.Добавить(ФизЛицо);
						ФизЛицо.ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(ФизЛицоБезДоверенности.СведФЛ.ФИО);
						ФизЛицо.ИНН = Строка(ФизЛицоБезДоверенности.ИННФЛ);
						ФизЛицо.СНИЛС = Строка(ФизЛицоБезДоверенности.СНИЛС);
					КонецЦикла;
					
				КонецЕсли;
				
				Если ЛицоБезДоверенности.СвИП <> Неопределено Тогда
					Предприниматель = Журнал.НовыйИндивидуальныйПредприниматель();
					Доверитель.ДанныеЮридическогоЛица.ЛицаБезДоверенности.Добавить(Предприниматель);
					Предприниматель.Наименование = Строка(ЛицоБезДоверенности.СвИП.НаимИП);
					Если Предприниматель.Наименование = ""
						И ЛицоБезДоверенности.СвИП.СведФЛ <> Неопределено Тогда
						Предприниматель.Наименование = 
						ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(ЛицоБезДоверенности.СвИП.СведФЛ.ФИО);
					КонецЕсли;
					Предприниматель.ИНН  = Строка(ЛицоБезДоверенности.СвИП.ИННФЛ);
					Предприниматель.СНИЛС = Строка(ЛицоБезДоверенности.СвИП.СНИЛС);
					Предприниматель.ОГРН = Строка(ЛицоБезДоверенности.СвИП.ОГРНИП);
				КонецЕсли;
				
				Если ЛицоБезДоверенности.СвФЛ <> Неопределено Тогда
					ФизЛицо = Журнал.НовоеФизическоеЛицо();
					Доверитель.ДанныеЮридическогоЛица.ЛицаБезДоверенности.Добавить(ФизЛицо);
					ФизЛицо.ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(ЛицоБезДоверенности.СвФЛ.СведФЛ.ФИО);
					ФизЛицо.ИНН = Строка(ЛицоБезДоверенности.СвФЛ.ИННФЛ);
					ФизЛицо.СНИЛС = Строка(ЛицоБезДоверенности.СвФЛ.СНИЛС);
				КонецЕсли;
				
			КонецЦикла;
		ИначеЕсли СведенияОДоверителе.ТипПерПолн = КлассификаторФормата.ФилиалИностраннойОрганизации Тогда
			
			Доверитель = Журнал.НовыйДоверитель(КлассификаторЖурнала.ФилиалИностраннойОрганизации);
			СведенияОбОрганизации = СведенияОДоверителе.ПередПолн.ИнПерПолн.СвИнОрг; // См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвИнОргТип
			Доверитель.ДанныеИностраннойОрганизации.Наименование = Строка(СведенияОбОрганизации.НаимИО);
			Доверитель.ДанныеИностраннойОрганизации.ИНН = Строка(СведенияОбОрганизации.ИННЮЛ);
			Доверитель.ДанныеИностраннойОрганизации.КПП = Строка(СведенияОбОрганизации.КПП);
			СписокРуководителей = СведенияОДоверителе.ПередПолн.ИнПерПолн.СвРукОП; // СписокXDTO Из См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвФЛТип
			
			Для Каждого Руководитель Из СписокРуководителей Цикл
				ФизЛицо = Журнал.НовоеФизическоеЛицо();
				Доверитель.ДанныеИностраннойОрганизации.Руководители.Добавить(ФизЛицо);
				ФизЛицо.ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(Руководитель.СведФЛ.ФИО);
				ФизЛицо.ИНН = Строка(Руководитель.ИННФЛ);
				ФизЛицо.СНИЛС = Строка(Руководитель.СНИЛС);
			КонецЦикла;
			
		ИначеЕсли СведенияОДоверителе.ТипПерПолн = КлассификаторФормата.ИндивидуальныйПредприниматель Тогда
			
			Доверитель = Журнал.НовыйДоверитель(КлассификаторЖурнала.ИндивидуальныйПредприниматель);
			СведенияОПредпринимателей = СведенияОДоверителе.ПередПолн.ИППерПолн;
			Доверитель.ДанныеИндивидуальногоПредпринимателя.Наименование = Строка(СведенияОПредпринимателей.НаимИП);
			
			Если Доверитель.ДанныеИндивидуальногоПредпринимателя.Наименование = "" 
				И СведенияОПредпринимателей.СведФЛ <> Неопределено Тогда
				Доверитель.ДанныеИндивидуальногоПредпринимателя.Наименование = 
				ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(СведенияОПредпринимателей.СведФЛ.ФИО);
			КонецЕсли;
			
			Доверитель.ДанныеИндивидуальногоПредпринимателя.ИНН = Строка(СведенияОПредпринимателей.ИННФЛ);
			Доверитель.ДанныеИндивидуальногоПредпринимателя.СНИЛС = Строка(СведенияОПредпринимателей.СНИЛС);
			Доверитель.ДанныеИндивидуальногоПредпринимателя.ОГРН = Строка(СведенияОПредпринимателей.ОГРНИП);
			
		ИначеЕсли СведенияОДоверителе.ТипПерПолн = КлассификаторФормата.ФизическоеЛицо Тогда
			
			Доверитель = Журнал.НовыйДоверитель(КлассификаторЖурнала.ФизическоеЛицо);
			СведенияОФизЛице = СведенияОДоверителе.ПередПолн.ФЛПерПолн; // См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвФЛТип
			Доверитель.ДанныеФизическогоЛица.ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(
			СведенияОФизЛице.СведФЛ.ФИО);
			Доверитель.ДанныеФизическогоЛица.ИНН = Строка(СведенияОФизЛице.ИННФЛ);
			Доверитель.ДанныеФизическогоЛица.СНИЛС = Строка(СведенияОФизЛице.СНИЛС);
			
		Иначе
			ШаблонОшибки = НСтр("ru='Не удалось заполнить доверителя, недопустимое значение поля %1: %2';");
			ВызватьИсключение СтрШаблон(ШаблонОшибки, "ТипПерПолн", СведенияОДоверителе.ТипПерПолн);
		КонецЕсли;
		
		Запись.Доверители.Добавить(Доверитель);
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет представителей в журнал записей
//
// Параметры:
//  СведенияФайла - См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.Доверенность
//  Запись - РегистрСведенийЗапись.ЖурналМашиночитаемыхДоверенностей
Процедура ЗаполнитьПредставителейВЗаписиЖурнала(СведенияФайла, Запись)
	
	Журнал = РегистрыСведений.ЖурналМашиночитаемыхДоверенностей;
	
	КлассификаторЖурнала = Журнал.ТипыПредставителей();
	КлассификаторФормата = ТипыПредставителейИПередоверителей();
	
	Если СведенияФайла.Документ.Довер <> Неопределено Тогда
		СписокПредставителей = СведенияФайла.Документ.Довер.СвУпПред; // СписокXDTO Из См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвУпПредТип
	Иначе
		СписокПредставителей = СведенияФайла.Документ.Передов.СвПолучПолн;
	КонецЕсли;
	
	Для Каждого СведенияПредставителя Из СписокПредставителей Цикл
		Если СведенияПредставителя.ТипПред = КлассификаторФормата.ЮридическоеЛицо Тогда
			Представитель = Журнал.НовыйПредставитель(КлассификаторЖурнала.ЮридическоеЛицо);
			СведенияОбОрганизации = СведенияПредставителя.Пред.СведОрг;
			Представитель.ДанныеЮридическогоЛица.Наименование = Строка(СведенияОбОрганизации.НаимОрг);
			Представитель.ДанныеЮридическогоЛица.ИНН = Строка(СведенияОбОрганизации.ИННЮЛ);
			Представитель.ДанныеЮридическогоЛица.КПП = Строка(СведенияОбОрганизации.КПП);
			Представитель.ДанныеЮридическогоЛица.ОГРН = Строка(СведенияОбОрганизации.ОГРН);
		ИначеЕсли СведенияПредставителя.ТипПред = КлассификаторФормата.ИндивидуальныйПредприниматель Тогда
			Представитель = Журнал.НовыйПредставитель(КлассификаторЖурнала.ИндивидуальныйПредприниматель);
			СведенияОПредпринимателе = СведенияПредставителя.Пред.СведИП;
			Представитель.ДанныеИндивидуальногоПредпринимателя.Наименование = Строка(СведенияОПредпринимателе.НаимИП);
			Если Представитель.ДанныеИндивидуальногоПредпринимателя.Наименование = ""
				И СведенияОПредпринимателе.СведФЛ <> Неопределено Тогда
				Представитель.ДанныеИндивидуальногоПредпринимателя.Наименование = 
				ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(СведенияОПредпринимателе.СведФЛ.ФИО);
			КонецЕсли;
			Представитель.ДанныеИндивидуальногоПредпринимателя.ИНН = Строка(СведенияОПредпринимателе.ИННФЛ);
			Представитель.ДанныеИндивидуальногоПредпринимателя.ОГРН = Строка(СведенияОПредпринимателе.ОГРНИП);
			Представитель.ДанныеИндивидуальногоПредпринимателя.СНИЛС = Строка(СведенияОПредпринимателе.СНИЛС);
		ИначеЕсли СведенияПредставителя.ТипПред = КлассификаторФормата.ФизическоеЛицо Тогда
			Представитель = Журнал.НовыйПредставитель(КлассификаторЖурнала.ФизическоеЛицо);
			СведенияОФизЛице = СведенияПредставителя.Пред.СведФизЛ; // См. XDTOПакет.ON_EMCHD_1_928_00_01_01_01.СвФЛТип
			Представитель.ДанныеФизическогоЛица.ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(
			СведенияОФизЛице.СведФЛ.ФИО);
			Представитель.ДанныеФизическогоЛица.ИНН = Строка(СведенияОФизЛице.ИННФЛ);
			Представитель.ДанныеФизическогоЛица.СНИЛС = Строка(СведенияОФизЛице.СНИЛС);
		ИначеЕсли СведенияПредставителя.ТипПред = КлассификаторФормата.ФилиалЮридическогоЛица Тогда
			Представитель = Журнал.НовыйПредставитель(КлассификаторЖурнала.ФилиалЮридическогоЛица);
			СведенияОбОрганизации = СведенияПредставителя.Пред.СведФилиал;
			Представитель.ДанныеФилиалаЮридическогоЛица.Наименование = Строка(СведенияОбОрганизации.НаимОрг);
			Представитель.ДанныеФилиалаЮридическогоЛица.ИНН = Строка(СведенияОбОрганизации.ИННЮЛ);
			Представитель.ДанныеФилиалаЮридическогоЛица.КПП = Строка(СведенияОбОрганизации.КПП);
			Представитель.ДанныеФилиалаЮридическогоЛица.ОГРН = Строка(СведенияОбОрганизации.ОГРН);
		ИначеЕсли СведенияПредставителя.ТипПред = КлассификаторФормата.ФилиалИностраннойОрганизации Тогда
			Представитель = Журнал.НовыйПредставитель(КлассификаторЖурнала.ФилиалИностраннойОрганизации);
			СведенияОбОрганизации = СведенияПредставителя.Пред.СведИО;
			Представитель.ДанныеФилиалаИностраннойОрганизации.Наименование = Строка(СведенияОбОрганизации.НаимИО);
			Представитель.ДанныеФилиалаИностраннойОрганизации.ИНН = Строка(СведенияОбОрганизации.ИННЮЛ);
			Представитель.ДанныеФилиалаИностраннойОрганизации.КПП = Строка(СведенияОбОрганизации.КПП);
		Иначе
			ШаблонОшибки = НСтр("ru='Не удалось заполнить представителя, недопустимое значение поля %1: %2';");
			ВызватьИсключение СтрШаблон(ШаблонОшибки, "ТипПред", СведенияПредставителя.ТипПред);
		КонецЕсли;
		Запись.Представители.Добавить(Представитель);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ДатаОкончанияДействия()
	Если ЗначениеЗаполнено(СрокДействия) И Не ЗначениеЗаполнено(ДатаПрекращения) Тогда
		Возврат СрокДействия;
	ИначеЕсли ЗначениеЗаполнено(ДатаПрекращения) И Не ЗначениеЗаполнено(СрокДействия) Тогда
		Возврат ДатаПрекращения;
	Иначе
		Возврат Мин(СрокДействия, ДатаПрекращения);
	КонецЕсли;
КонецФункции

Функция Действует()
	СвойстваДоверенности = МашиночитаемыеДоверенности.НовыеСвойстваДоверенности();
	ЗаполнитьЗначенияСвойств(СвойстваДоверенности, ЭтотОбъект);
	СвойстваДоверенности.ДатаОкончания = СрокДействия;
	СвойстваДоверенности.Отозвана = ЗначениеЗаполнено(ДатаПрекращения);
	Возврат МашиночитаемыеДоверенности.ДоверенностьДействительнаПоСвойствам(СвойстваДоверенности, ТекущаяДатаСеанса());
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли