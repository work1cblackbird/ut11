#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбработатьПереданныеПараметры(Отказ);
	УправлениеЭлементамиФормы();
	СтандартныеПодсистемыСервер.СброситьРазмерыИПоложениеОкна(ЭтотОбъект);
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИнформацияСостояниеЗагрузкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьМестоПрименения" Тогда
		ПоказатьЗначение(, МестоПрименения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьОрганизацию" Тогда
		ПоказатьЗначение(, ОрганизацияСАТУРН);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЗагрузитьОрганизацию" Тогда
		
		ОповещениеПослеВопроса = Новый ОписаниеОповещения("ПослеЗагрузкиОрганизации", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Загрузить владельца места применения?'");
		
		ПоказатьВопрос(ОповещениеПослеВопроса, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Загрузить(Команда)
	
	ЗагрузкаМестаПрименения();
	
	Если ЗначениеЗаполнено(МестоПрименения) Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Загрузка из классификатора'");
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Выполнена загрузка места применения %1.'"), МестоПрименения);
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32ГосИС);
		
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(МестоПрименения);
		
		Закрыть(МестоПрименения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузкаМестаПрименения()
	
	Если ЗначениеЗаполнено(АдресХраненияПараметрыОбмена) Тогда
		ПараметрыОбмена = ПолучитьИзВременногоХранилища(АдресХраненияПараметрыОбмена);
	Иначе
		ПараметрыОбмена = Неопределено;
	КонецЕсли;
	
	МестоПрименения = ИнтеграцияСАТУРН.ЗагрузитьМестоПрименения(ДанныеМестаПрименения,, ПараметрыОбмена);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗагрузкиОрганизации(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьОрганизациюНаСервере();
	
	Если ЗначениеЗаполнено(ОрганизацияСАТУРН) Тогда
		
		ПараметрОповещения = ОрганизацияСАТУРН;
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(ОрганизацияСАТУРН, ПараметрОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОрганизациюНаСервере()
	
	Если ДанныеОрганизации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОрганизацияСАТУРН = ИнтеграцияСАТУРН.ЗагрузитьОрганизацию(ДанныеОрганизации);
	
	УстановитьОтображениеОрганизации();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры(Отказ)

	Если Не ЗначениеЗаполнено(Параметры.Идентификатор) Тогда
		ВызватьИсключение НСтр("ru = 'Форма не предназначена для открытия без передачи в неё идентификатора места применения.'");
	Иначе
		
		Идентификатор = Параметры.Идентификатор;
		НеПоказыватьСостояниеЗагрузки = Параметры.НеПоказыватьСостояниеЗагрузки;
		Результат = ИнтерфейсСАТУРНВызовСервера.МестоПримененияПоИдентификатору(Идентификатор);
		
		Если Не ПустаяСтрока(Результат.ТекстОшибки) Тогда
			
			ЕстьОшибка  = Истина;
			
			Строки = Новый Массив;
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
				НСтр("ru = 'Ошибка:'")));
			Строки.Добавить(" ");
			Строки.Добавить(Новый ФорматированнаяСтрока(Результат.ТекстОшибки,, ЦветаСтиля.ЦветТекстаПроблемаГосИС));

			ТекстОшибки = Новый ФорматированнаяСтрока(Строки);
			Элементы.ФормаЗагрузить.Доступность = Ложь;
			
		Иначе
			
			ЕстьОшибка  = Ложь;
			ДанныеМестаПрименения = ИнтерфейсСАТУРН.ДанныеМестаПрименения(Результат.Элемент);
			АдресХраненияПараметрыОбмена = ПоместитьВоВременноеХранилище(Результат.ПараметрыОбмена, УникальныйИдентификатор);
			
			ЗаполнитьДанныеМестаПрименения(ДанныеМестаПрименения);
			Элементы.ФормаЗагрузить.Доступность = Истина;
			
			Если ДанныеМестаПрименения.Свойство("ДанныеОрганизации")
				И ТипЗнч(ДанныеМестаПрименения.ДанныеОрганизации) = Тип("Структура") Тогда
				
				ДанныеОрганизации = ИнтерфейсСАТУРН.ДанныеОрганизации(ДанныеМестаПрименения.ДанныеОрганизации);
				
			КонецЕсли;
			
			ОпределитьНаличиеВИБ();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьНаличиеВИБ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	МестаПримененияСАТУРН.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.МестаПримененияСАТУРН КАК МестаПримененияСАТУРН
	|ГДЕ
	|	МестаПримененияСАТУРН.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		МестоПрименения = Выборка.Ссылка;
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru = 'Место применения уже загружено'"));
		Строки.Добавить(" (");
		Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'открыть'"),, ЦветаСтиля.ЦветГиперссылкиГосИС,, "ОткрытьМестоПрименения"));
		Строки.Добавить(").");
		
		ИнформацияСостояниеЗагрузки = Новый ФорматированнаяСтрока(Строки);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторОрганизацийСАТУРН.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийСАТУРН КАК КлассификаторОрганизацийСАТУРН
	|ГДЕ
	|	КлассификаторОрганизацийСАТУРН.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", ИдентификаторОрганизации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		ОрганизацияСАТУРН = Выборка.Ссылка;

	КонецЕсли;
	
	УстановитьОтображениеОрганизации();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеМестаПрименения(ДанныеМестаПрименения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеМестаПрименения);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеОрганизации()
	
	Если ЗначениеЗаполнено(ОрганизацияСАТУРН) Тогда
		
		ОписаниеОрганизации = Новый ФорматированнаяСтрока(
			Строка(ОрганизацияСАТУРН),,,,
			"ОткрытьОрганизацию");
		
	ИначеЕсли ЗначениеЗаполнено(ИдентификаторОрганизации)
		И (ДанныеОрганизации = Неопределено Или
			Не ЗначениеЗаполнено(ДанныеОрганизации.Наименование)) Тогда
		
		ОписаниеОрганизации = Новый ФорматированнаяСтрока(
			НСтр("ru = '<не загружено>'"),,
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"ЗагрузитьОрганизацию");
			
	ИначеЕсли ЗначениеЗаполнено(ИдентификаторОрганизации)
		И ЗначениеЗаполнено(ДанныеОрганизации.Наименование) Тогда
		
		ОписаниеОрганизации = Новый ФорматированнаяСтрока(
			ДанныеОрганизации.Наименование,,
			ЦветаСтиля.ЦветГиперссылкиГосИС,,
			"ЗагрузитьОрганизацию");
		
	Иначе
		
		ОписаниеОрганизации = Новый ФорматированнаяСтрока(
			НСтр("ru = '<не указан>'"),,
			ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если ЕстьОшибка Тогда
		
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОшибка;
		Элементы.ФормаОтмена.Видимость         = Ложь;
		Элементы.ФормаЗакрыть.Видимость        = Истина;
		Элементы.ФормаЗагрузить.Видимость      = Истина;
		
	Иначе

		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаДанныеКлассификатора;
		
		Если ЗначениеЗаполнено(МестоПрименения) Тогда
			
			Если НеПоказыватьСостояниеЗагрузки Тогда
				Элементы.ИнформацияСостояниеЗагрузки.Видимость = Ложь;
			КонецЕсли;
			
			Элементы.ФормаОтмена.Видимость    = Ложь;
			Элементы.ФормаЗакрыть.Видимость   = Истина;
			Элементы.ФормаЗагрузить.Видимость = Ложь;
			
		Иначе
			
			Элементы.ИнформацияСостояниеЗагрузки.Видимость = Ложь;
			
			Элементы.ФормаОтмена.Видимость    = Истина;
			Элементы.ФормаЗакрыть.Видимость   = Ложь;
			Элементы.ФормаЗагрузить.Видимость = Истина;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры


#КонецОбласти
