#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПоддерживаемыеТипыПодключаемогоОборудования = "СканерШтрихкода";
	
	Если ОбщегоНазначенияЕГАИС.ЭтоРасширеннаяВерсияГосИС() Тогда
		МодульИнтеграцияИС = ОбщегоНазначения.ОбщийМодуль("ИнтеграцияИС");
		МодульИнтеграцияИС.НастроитьПодключаемоеОборудование(ЭтотОбъект, ПоддерживаемыеТипыПодключаемогоОборудования);
	КонецЕсли;
	
	Поля = Новый Массив;
	Поля.Добавить("Сопоставлено");
	
	Список.УстановитьОграниченияИспользованияВГруппировке(Поля);
	Список.УстановитьОграниченияИспользованияВОтборе(Поля);
	Список.УстановитьОграниченияИспользованияВПорядке(Поля);
	
	Если ОбщегоНазначенияЕГАИС.ЭтоРасширеннаяВерсияГосИС() Тогда
		МодульШтрихкодированиеИС = ОбщегоНазначения.ОбщийМодуль("ШтрихкодированиеИС");
		МодульШтрихкодированиеИС.ИнициализироватьКэшМаркируемойПродукции(ЭтотОбъект);
	КонецЕсли;
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, ПоддерживаемыеТипыПодключаемогоОборудования);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияСобытияФормИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "ИзменениеСопоставленияАлкогольнойПродукцииЕГАИС" Тогда
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ОбщегоНазначенияЕГАИСКлиент.ЭтоРасширеннаяВерсияГосИС() Тогда
		МодульСобытияФормИСКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("СобытияФормИСКлиент");
		МодульСобытияФормИСКлиент.ВнешнееСобытиеПолученыШтрихкоды(
			"ПоискПоШтрихкодуЗавершение", ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.Сопоставлено Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
		Если ОбщегоНазначенияЕГАИСКлиент.ЭтоРасширеннаяВерсияГосИС() Тогда
			МодульИнтеграцияЕГАИСКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнтеграцияЕГАИСКлиент");
			МодульИнтеграцияЕГАИСКлиент.ОткрытьФормуСопоставленияАлкогольнойПродукции(
				ТекущиеДанные.Ссылка, ЭтотОбъект);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	Запрос = Новый Запрос();
	Запрос.Текст = Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ТекстЗапросаИнформацияОСопоставлении();
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", Строки.ПолучитьКлючи());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаСписка = Строки[Выборка.Ссылка];
		ЗначениеПоля   = "";
		ОформлениеПоля = СтрокаСписка.Оформление["Сопоставлено"];
		Если Выборка.Количество = 1 Тогда
			ЗначениеПоля = ОбщегоНазначенияИС.ПредставлениеНоменклатуры(
				Выборка.Номенклатура,
				Выборка.Характеристика);
			ОформлениеПоля.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветГиперссылкиГосИС);
		ИначеЕсли Выборка.Количество > 1 Тогда
			Если СтрДлина(Выборка.НоменклатураНаименование) > 45 Тогда 
				СтрокаКоличество = СтрШаблон(НСтр("ru = '( + еще %1)'"), Выборка.Количество - 1);
				ДлинаНаименования = 45 - СтрДлина(СтрокаКоличество);
				ЗначениеПоля = Лев(Выборка.НоменклатураНаименование, ДлинаНаименования) + "... " + СтрокаКоличество;
			Иначе
				ЗначениеПоля = СтрШаблон(НСтр("ru = '%1 ( + еще %2...)'"), Выборка.НоменклатураНаименование, Выборка.Количество - 1);
			КонецЕсли;
			ОформлениеПоля.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветГиперссылкиГосИС);
		Иначе
			ЗначениеПоля = НСтр("ru = '<Не сопоставлено>'");
			ОформлениеПоля.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.СтатусОбработкиОшибкаПередачиГосИС);
		КонецЕсли;
		СтрокаСписка.Данные["Сопоставлено"] = ЗначениеПоля;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоискПоШтрихкодуВыполнить(Команда)
	
	ОчиститьСообщения();
	
	Если ОбщегоНазначенияЕГАИСКлиент.ЭтоРасширеннаяВерсияГосИС() Тогда
		МодульШтрихкодированиеИСКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ШтрихкодированиеИСКлиент");
		МодульШтрихкодированиеИСКлиент.ПоказатьВводШтрихкода(
			Новый ОписаниеОповещения("ОбработатьВводШтрихкода", ЭтотОбъект));
	КонецЕсли;
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормИСКлиентПереопределяемый.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОткрытьФормуУточненияДанных()
	
	Если ОбщегоНазначенияЕГАИСКлиент.ЭтоРасширеннаяВерсияГосИС() Тогда
		МодульШтрихкодированиеИСКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ШтрихкодированиеИСКлиент");
		МодульШтрихкодированиеИСКлиент.Подключаемый_ОткрытьФормуУточненияДанных(ЭтотОбъект,
			Новый ОписаниеОповещения("ОбработатьВводШтрихкода", ЭтотОбъект));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВводШтрихкода(ДанныеШтрихкода, ДополнительныеПараметры) Экспорт
	
	ПараметрыСканирования = ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования(ЭтотОбъект);
	ПараметрыСканирования.ЗапрашиватьНоменклатуру = Ложь;
	
	ШтрихкодированиеОбщегоНазначенияИСКлиент.ОбработатьДанныеШтрихкода(
		"ПоискПоШтрихкодуЗавершение", ЭтотОбъект, ДанныеШтрихкода, ПараметрыСканирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(ДанныеШтрихкода, ДополнительныеПараметры) Экспорт
	
	Если ДанныеШтрихкода = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеШтрихкода.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.PDF417") Тогда
		
		Если Не ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция)
			И ЗначениеЗаполнено(ДанныеШтрихкода.КодАлкогольнойПродукции) Тогда
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Операция",          ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросАлкогольнойПродукции"));
			ПараметрыФормы.Вставить("ИмяПараметра",      "КОД");
			ПараметрыФормы.Вставить("ЗначениеПараметра", ДанныеШтрихкода.КодАлкогольнойПродукции);
			
			ОткрытьФорму(
				"ОбщаяФорма.ФормированиеИсходящегоЗапросаЕГАИС",
				ПараметрыФормы,
				ЭтотОбъект,,,,,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		ИначеЕсли ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция) Тогда
			
			Элементы.Список.ТекущаяСтрока = ДанныеШтрихкода.АлкогольнаяПродукция;
			
		Иначе
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'По коду акцизной марки %1 не удалось определить код алкогольной продукции'"),
					ДанныеШтрихкода.Штрихкод));
			
		КонецЕсли;
		
	ИначеЕсли ДанныеШтрихкода.ТипУпаковки = ПредопределенноеЗначение("Перечисление.ТипыУпаковок.МаркированныйТовар") Тогда
		
		Если ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция) Тогда
			
			Элементы.Список.ТекущаяСтрока = ДанныеШтрихкода.АлкогольнаяПродукция;
			
		Иначе
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Марке по штрихкоду %1 не сопоставлена алкогольная продукция'"),
					ДанныеШтрихкода.Штрихкод));
			
		КонецЕсли;
		
	ИначеЕсли ДанныеШтрихкода.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.DataMatrix") Тогда
		
		Если ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция) Тогда
			
			Элементы.Список.ТекущаяСтрока = ДанныеШтрихкода.АлкогольнаяПродукция;
			
		ИначеЕсли ДанныеШтрихкода.Справки2.Количество() > 0 Тогда
			
			СписокСсылок = Новый СписокЗначений;
			Для Каждого ДанныеСправки2 Из ДанныеШтрихкода.Справки2 Цикл
				СписокСсылок.Добавить(ДанныеСправки2.АлкогольнаяПродукция);
			КонецЦикла;
			
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Ссылка");
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список,
				"Ссылка",
				СписокСсылок,
				ВидСравненияКомпоновкиДанных.ВСписке,,
				Истина,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
				
		Иначе
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'По штрихкоду %1 не удалось найти справку 2'"),
					ДанныеШтрихкода.Штрихкод));
			
		КонецЕсли;
		
	Иначе
		
		РезультатПоиска = ПолучитьДанныеПоШтрихкоду(ДанныеШтрихкода.Штрихкод);
		Если РезультатПоиска <> Неопределено Тогда
			Элементы.Список.ТекущаяСтрока = РезультатПоиска.АлкогольнаяПродукция;
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'По штрихкоду %1 не удалось найти алкогольную продукцию'"),
					ДанныеШтрихкода.Штрихкод));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоШтрихкоду(Штрихкод)
	
	ДанныеСопоставления = Неопределено;
	
	Если ОбщегоНазначенияЕГАИС.ЭтоРасширеннаяВерсияГосИС() Тогда
		МодульШтрихкодированиеНоменклатуры = ОбщегоНазначения.ОбщийМодуль(
			"ШтрихкодированиеНоменклатурыЕГАИСПереопределяемый");
		МодульШтрихкодированиеНоменклатуры.НайтиПоШтрихкоду(ДанныеСопоставления, Штрихкод);
	КонецЕсли;
	
	Возврат ДанныеСопоставления;
	
КонецФункции

#КонецОбласти