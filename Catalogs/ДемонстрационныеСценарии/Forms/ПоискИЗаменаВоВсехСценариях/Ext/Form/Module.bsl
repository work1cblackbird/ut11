
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьФорму();
	
	СпискиВыбораКлиентСервер.Загрузить("ИсторияГлобальныйЧтоМеняемДемонстрационныеСценарии", Элементы.ТекстПоиска.СписокВыбора);
	СпискиВыбораКлиентСервер.Загрузить("ИсторияГлобальныйНаЧтоМеняемДемонстрационныеСценарии", Элементы.ТекстЗамены.СписокВыбора);
	
	ПроверитьАктуальностьПоиска(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекстПоискаПриИзменении(Элемент)
	
	ПроверитьАктуальностьПоиска(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗаменыПриИзменении(Элемент)
	
	ПроверитьАктуальностьПоиска(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьСловоЦеликомПриИзменении(Элемент)
	
	ПроверитьАктуальностьПоиска(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПоискаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СпискиВыбораКлиентСервер.АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗаменыАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СпискиВыбораКлиентСервер.АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРезультаты

&НаКлиенте
Процедура РезультатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Результаты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "РезультатыСценарий" Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Сценарий) Тогда
			
			ПараметрыПоиска = ПараметрыПоиска();
			
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("Ключ",            ТекущиеДанные.Сценарий);
			ПараметрыОткрытия.Вставить("ВыполнитьПоиск",  Истина); 
			ПараметрыОткрытия.Вставить("ПараметрыПоиска", ПараметрыПоиска);
			ПараметрыОткрытия.Вставить("ЯзыкСценария",    КодЯзыкаНайденногоСценария(ТекущиеДанные));
			
			ОткрытьФорму("Справочник.ДемонстрационныеСценарии.ФормаОбъекта", ПараметрыОткрытия,
			             ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.Независимый);;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьПоиск(Команда)
	
	ПараметрыПоиска = ПараметрыПоиска();
	
	ТекстПоискаНайденное        = ТекстПоиска;
	УчитыватьРегистрНайденное   = УчитыватьРегистр;
	ИскатьСловоЦеликомНайденное = ИскатьСловоЦеликом;
	
	ВыполнитьПоискПоНастройкам(ПараметрыПоиска);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	ИзменитьЗначениеЗаменять(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	
	ИзменитьЗначениеЗаменять(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Заменить(Команда)
	
	ОчиститьСообщения();
	
	ПараметрыЗамены = ПараметрыЗамены();
	
	Если ПараметрыЗамены.Сценарии.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран ни один сценарий для выполнения замены'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "Результаты");
		Возврат;
	КонецЕсли; 
	
	ВыполнитьЗаменуПоНастройкам(ПараметрыЗамены);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИзменитьЗначениеЗаменять(НовоеЗначение)

	Для Каждого СтрокаТаблицы Из Результаты Цикл
		СтрокаТаблицы.Заменять = НовоеЗначение;
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Функция КодЯзыкаНайденногоСценария(ТекущиеДанные)
	
	Если ТекущиеДанные.ДанныеФайлов.Количество() > 0 Тогда
		Возврат ТекущиеДанные.ДанныеФайлов[0].Значение.КодЯзыка;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьФорму()
	
	ОтображениеСостояния = Элементы.ТабличныйДокумент.ОтображениеСостояния;
	
	ОтображениеСостояния.Видимость                      = Истина;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	ОтображениеСостояния.Картинка                       = Новый Картинка;
	ОтображениеСостояния.Текст                          = НСтр("ru = 'Результаты поиска не актуальны. Выполните поиск'");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма)

	Если Форма.РезультатыПоискаАктуальны Тогда
		Форма.Элементы.СтраницыНайденоАктуально.ТекущаяСтраница = Форма.Элементы.СтраницаНайдено;
	Иначе
		Форма.Элементы.СтраницыНайденоАктуально.ТекущаяСтраница = Форма.Элементы.СтраницаНеАктуально;
	КонецЕсли;
	
	ЕстьАктуальныеРезультатыПоиска = Форма.РезультатыПоискаАктуальны 
	                                 И Форма.Результаты.Количество() > 0;
	
	Форма.Элементы.Заменить.Доступность          = ЕстьАктуальныеРезультатыПоиска;
	Форма.Элементы.УстановитьПометки.Доступность = ЕстьАктуальныеРезультатыПоиска;
	Форма.Элементы.СнятьПометки.Доступность      = ЕстьАктуальныеРезультатыПоиска;
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьАктуальностьПоиска(Форма)

	ПоискАктуален = Истина;
	
	Если Форма.ТекстПоискаНайденное <> Форма.ТекстПоиска Тогда
		ПоискАктуален = Ложь;
	КонецЕсли;
	
	Если Форма.УчитыватьРегистрНайденное <> Форма.УчитыватьРегистр Тогда
		ПоискАктуален = Ложь;
	КонецЕсли;
	
	Если Форма.ИскатьСловоЦеликомНайденное <> Форма.ИскатьСловоЦеликом Тогда
		ПоискАктуален = Ложь;
	КонецЕсли;
	
	Форма.РезультатыПоискаАктуальны = ПоискАктуален;
	УправлениеДоступностью(Форма);
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыЗамены()
	
	ПараметрыЗамены = ПараметрыПоиска();
	ПараметрыЗамены.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	ПараметрыЗамены.Вставить("Сценарии",                СценарииВКоторыхВыполняетсяЗамена());
	
	Возврат ПараметрыЗамены;
	
КонецФункции

&НаКлиенте
Функция СценарииВКоторыхВыполняетсяЗамена()
	
	Сценарии = Новый Массив;
	
	Для Каждого СтрокаРезультат Из Результаты Цикл
		
		Если СтрокаРезультат.Заменять Тогда
			
			ДанныеСценария = Новый Структура;
			ДанныеСценария.Вставить("Сценарий",     СтрокаРезультат.Сценарий);
			ДанныеСценария.Вставить("ДанныеФайлов", СтрокаРезультат.ДанныеФайлов);
			
			Сценарии.Добавить(ДанныеСценария);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Сценарии;
	
КонецФункции

#Область Замена

&НаКлиенте
Процедура ВыполнитьЗаменуПоНастройкам(НастройкиЗамены)
	
	ДлительнаяОперация = ВыполнитьЗаменуПоНастройкамДлительнаяОперация(НастройкиЗамены,
	                                                                  УникальныйИдентификатор);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ЗаменаПоНастройкамЗавершение(ДлительнаяОперация, Неопределено);
		
	ИначеЕсли ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗаменаПоНастройкамЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗаменуПоНастройкамДлительнаяОперация(НастройкиЗамены, УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Глобальная замена в демонстрационных сценариях'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("ДемонстрационныеСценарии.ВыполнитьЗаменуВДемонстрационныхСценариях",
	                                                       НастройкиЗамены, ПараметрыВыполнения);
	Возврат ДлительнаяОперация;
	
КонецФункции 

&НаКлиенте
Процедура ЗаменаПоНастройкамЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда 
		ОбработатьЗавершениеЗаменыПоНастройкам(Результат.АдресРезультата, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗавершениеЗаменыПоНастройкам(АдресРезультата, ДополнительныеПараметры)
	
	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		РезультатЗамены = ПолучитьИзВременногоХранилища(АдресРезультата)
	КонецЕсли;
	
	Если РезультатЗамены = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не РезультатЗамены.Успешно Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатЗамены.СообщениеПользователю);
		Возврат;
		
	Иначе
		
		ОповеститьПользователяОбРезультатахЗамены(РезультатЗамены);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьПользователяОбРезультатахЗамены(РезультатЗамены)

	Для Каждого ДанныеОшибки Из РезультатЗамены.Ошибки Цикл
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ДанныеОшибки.ТекстОшибки, ДанныеОшибки.Сценарий);
		
	КонецЦикла;
	
	Если РезультатЗамены.Обработано = 0 Тогда
		
		ТекстОповещения = НСтр("ru = 'Замена ни в одном демонстрационном сценарии не выполнена'");
		
	Иначе
		
		РезультатыПоискаАктуальны = Ложь;
		ТекстПоискаНайденное      = "";
		
		ТекстОповещения = СтрШаблон(НСтр("ru = 'Выполнена замена в демонстрационных сценариях - %1 из %2'"), 
		                            РезультатЗамены.Обработано, 
		                            РезультатЗамены.КОбработке);
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Замена в сценариях'") ,, ТекстОповещения, БиблиотекаКартинок.Информация32);
	
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область Поиск

&НаКлиенте
Процедура ВыполнитьПоискПоНастройкам(НастройкиПоиска)
	
	СпискиВыбораКлиентСервер.ОбновитьСписокВыбора(Элементы.ТекстПоиска.СписокВыбора, ТекстПоиска, 1000);
	СпискиВыбораКлиентСервер.ОбновитьСписокВыбора(Элементы.ТекстЗамены.СписокВыбора, ТекстЗамены, 1000);
	
	СпискиВыбораКлиентСервер.Сохранить("ИсторияГлобальныйЧтоМеняемДемонстрационныеСценарии", Элементы.ТекстПоиска.СписокВыбора);
	СпискиВыбораКлиентСервер.Сохранить("ИсторияГлобальныйНаЧтоМеняемДемонстрационныеСценарии", Элементы.ТекстЗамены.СписокВыбора);  
	
	Результаты.Очистить();
	
	ДлительнаяОперация = ВыполнитьПоискПоНастройкамДлительнаяОперация(НастройкиПоиска,
	                                                                  УникальныйИдентификатор);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ПоискПоНастройкамЗавершение(ДлительнаяОперация, Неопределено);
		
	ИначеЕсли ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПоискПоНастройкамЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПоискПоНастройкамДлительнаяОперация(НастройкиПоиска, УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Глобальный поиск в демонстрационных сценариях'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("ДемонстрационныеСценарии.ВыполнитьПоискВДемонстрационныхСценариях",
	                                                       НастройкиПоиска, ПараметрыВыполнения);
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ПоискПоНастройкамЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда 
		ОбработатьЗавершениеПоискаПоНастройкам(Результат.АдресРезультата, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗавершениеПоискаПоНастройкам(АдресРезультата, ДополнительныеПараметры)
	
	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		РезультатПоиска = ПолучитьИзВременногоХранилища(АдресРезультата)
	КонецЕсли;
	
	Если РезультатПоиска = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не РезультатПоиска.Успешно Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатПоиска.СообщениеПользователю);
		Возврат;
		
	Иначе
		
		ОбновитьТаблицуРезультатовПоиска(РезультатПоиска.Результаты);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуРезультатовПоиска(РезультатыПоиска)
	
	Для Каждого РезультатПоСценарию Из РезультатыПоиска Цикл
		
		НоваяСтрока = Результаты.Добавить();
		НоваяСтрока.Сценарий            = РезультатПоСценарию.Сценарий;
		НоваяСтрока.КоличествоВхождений = РезультатПоСценарию.КоличествоВхождений;
		НоваяСтрока.Заменять            = Истина;
		НоваяСтрока.ДанныеФайлов.ЗагрузитьЗначения(РезультатПоСценарию.ДанныеФайлов);
		
	КонецЦикла;
	
	Если Результаты.Количество() = 0 Тогда
		
		ТекстОповещения = НСтр("ru = 'Текст не найден ни в одном из сценариев'");
		
	Иначе
		
		ТекстОповещения = СтрШаблон(НСтр("ru = 'Текст найден в демонстрационных сценариях - %1'"), 
		                            Результаты.Количество());
		
	КонецЕсли; 
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Поиск в сценариях'") ,, ТекстОповещения, БиблиотекаКартинок.Информация32);
	
	ПроверитьАктуальностьПоиска(ЭтотОбъект);

КонецПроцедуры 

&НаКлиенте
Функция ПараметрыПоиска()

	ПараметрыПоиска = Новый Структура;
	
	ПараметрыПоиска.Вставить("ЧтоМеняем",              ТекстПоиска);
	ПараметрыПоиска.Вставить("НаЧтоМеняем",            ТекстЗамены);
	ПараметрыПоиска.Вставить("УчитыватьРегистр",       УчитыватьРегистр);
	ПараметрыПоиска.Вставить("ИскатьСловоЦеликом",     ИскатьСловоЦеликом); 
	ПараметрыПоиска.Вставить("КакИскатьВГиперссылках", ?(ИскатьВЧастяхСсылок, "Любой", "ТолькоСсылкаЦеликом"));
	
	Возврат ПараметрыПоиска;

КонецФункции

#КонецОбласти

#КонецОбласти 


