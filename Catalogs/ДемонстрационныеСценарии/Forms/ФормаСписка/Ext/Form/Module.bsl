#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, ,"Список");
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
	Элементы.ФормаВыгрузитьОписанияПроцессов.Видимость = ПравоДоступа("Использование", Метаданные.Обработки.ВыгрузкаОписанийПроцессов);
	Элементы.ФормаЗагрузитьОписанияПроцессов.Видимость = ПравоДоступа("Использование", Метаданные.Обработки.ЗагрузкаОписанийПроцессов);
		
	ДемонстрационныеСценарии.ЗагрузитьНастройкуПоВариантуОтображенияФормы(
		ЭтотОбъект,
		ДемонстрационныеСценарии.ДоступныеВариантыОтображения(Ложь),
		Метаданные.Справочники.ДемонстрационныеСценарии);
		
	УправлениеВидимостью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ВариантОтображенияФормы = "Просмотр" Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьЭлемент(ТекущиеДанные.Ссылка, ТекущиеДанные.Родитель, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьЭлемент(ТекущиеДанные.Ссылка, ТекущиеДанные.Родитель, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревестиВыделенныеЭлементы(Команда)
	
	ВыделенныеСценарии = ВыбранныеДляПереводаСценарии();
	Если ВыделенныеСценарии.Количество() > 0 Тогда 
		
		ОповещениеПослеЗакрытияФормыПеревода = Новый ОписаниеОповещения("ПослеЗакрытияФормыПеревода", ЭтотОбъект);
		
		ПараметрыФормы  = Новый Структура;
		ПараметрыФормы.Вставить("ПереводимыеОбъекты", ВыделенныеСценарии);
		ОткрытьФорму("Справочник.ДемонстрационныеСценарии.Форма.ПереводНесколькихСценариев", ПараметрыФормы,
		             ЭтотОбъект,,,, ОповещениеПослеЗакрытияФормыПеревода);
		
	Иначе
		
		ПоказатьПредупреждение(,НСтр("ru = 'Для выполнения перевода необходимо выбрать один или несколько сценариев'"), 20);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АльбомПроцессов(Команда)
	
	ВыбранныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	СценарииОтчета = Новый Массив;
	
	Для Каждого ВыбраннаяСтрока Из ВыбранныеСтроки Цикл
		
		Если ТипЗнч(ВыбраннаяСтрока) = Тип("СправочникСсылка.ДемонстрационныеСценарии") 
			И ЗначениеЗаполнено(ВыбраннаяСтрока) Тогда
			
			СценарииОтчета.Добавить(ВыбраннаяСтрока);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если СценарииОтчета.Количество() = 0 Тогда
		
		ТекстПредупреждения = ДемонстрационныеСценарииКлиентСервер.ТекстСообщенияНекорректныеПараметрыАльбомПроцессов();
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени(
	"Справочник.ДемонстрационныеСценарии.Форма.ФормаСписка.ФормированиеАльбомПроцессов");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СценарииОтчета",          СценарииОтчета);
	ПараметрыФормы.Вставить("НеВызыватьКомандуПечати", Истина);
	
	ОткрытьФорму("Справочник.ДемонстрационныеСценарии.Форма.АльбомПроцессов",
	             ПараметрыФормы, 
	             ЭтотОбъект,
	             Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискИЗаменаВСценариях(Команда)
	
	ОткрытьФорму("Справочник.ДемонстрационныеСценарии.Форма.ПоискИЗаменаВоВсехСценариях",, 
	             ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#Область ИзменениеРежимаОтображения

&НаКлиенте
Процедура УстановитьВариантПросмотр(Команда)
	
	ПереключитьВариантОтображения(ЭтотОбъект, "Просмотр");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантРедактирование(Команда)
	
	ПереключитьВариантОтображения(ЭтотОбъект, "Редактирование");
	
КонецПроцедуры

#КонецОбласти 

#Область ЗагрузкаИВыгрузка

&НаКлиенте
Процедура ВыгрузитьОписанияПроцессов(Команда)
	
	ОткрытьФорму("Обработка.ВыгрузкаОписанийПроцессов.Форма.Основная",, ЭтотОбъект, ,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОписанияПроцессов(Команда)
	
	ОткрытьФорму("Обработка.ЗагрузкаОписанийПроцессов.Форма.Основная",, ЭтотОбъект, ,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПереместитьЭлемент(Ссылка, Родитель, Вверх = Истина)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДемонстрационныеСценарии.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДемонстрационныеСценарии КАК ДемонстрационныеСценарии
	|ГДЕ
	|	ДемонстрационныеСценарии.Родитель = &Родитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДемонстрационныеСценарии.Код";
	
	Запрос.Параметры.Вставить("Родитель", Родитель);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	КоличествоСтрок = Таблица.Количество();
	
	Если КоличествоСтрок < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийИндекс = Таблица.Индекс(Таблица.Найти(Ссылка, "Ссылка"));
	
	Если Вверх Тогда
		НовыйИндекс = ТекущийИндекс - 1;
	Иначе
		НовыйИндекс = ТекущийИндекс + 1;
	КонецЕсли;
	
	Если НовыйИндекс < 0 ИЛИ НовыйИндекс > КоличествоСтрок - 1 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		ПервыйЭлемент = Таблица[ТекущийИндекс].Ссылка.ПолучитьОбъект();
		ПервыйЭлемент.Заблокировать();
		
		ВторойЭлемент = Таблица[НовыйИндекс].Ссылка.ПолучитьОбъект();
		ВторойЭлемент.Заблокировать();

		ПервыйКод = ПервыйЭлемент.Код;
		ПервыйЭлемент.Код = ВторойЭлемент.Код;
		ВторойЭлемент.Код = ПервыйКод;
		
		ПервыйЭлемент.Записать();
		ПервыйЭлемент.Разблокировать();
		ВторойЭлемент.Записать();
		ВторойЭлемент.Разблокировать();
	
	ЗафиксироватьТранзакцию();
	
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстСообщения = НСтр("ru = 'Перемещение не выполнено. Не удалось заблокировать сценарий'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
		
	КонецПопытки;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПереключитьВариантОтображения(Форма, НовыйВариант)
	
	ПараметрыПереключения = ДемонстрационныеСценарииКлиентСервер.НовыйПараметрыПереключенияВариантаОтображения();
	ПараметрыПереключения.Форма                          = Форма;
	ПараметрыПереключения.НовыйВариант                   = НовыйВариант;
	
	ДемонстрационныеСценарииКлиентСервер.ПереключитьВариантОтображения(ПараметрыПереключения);
	
	УправлениеВидимостью(Форма);
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
	
	Элементы = Форма.Элементы;
	
	ЭтоРежимРедактирования = (Форма.ВариантОтображенияФормы = "Редактирование");
	ЭтоРежимПросмотр       = (Форма.ВариантОтображенияФормы = "Просмотр"); 
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаСоздать",             "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаСоздатьГруппу",       "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаСкопировать",         "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаПереместитьВверх",    "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаПереместитьВниз",     "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаПоискИЗаменаСсылок",  "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаПеревестиВыделенные", "Видимость", ЭтоРежимРедактирования);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Статус",      "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Комментарий", "Видимость", ЭтоРежимРедактирования);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюПеренестиЭлемент",                       "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюСкопировать",                            "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюСоздать",                                "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюУровеньВверх",                           "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюУровеньВниз",                            "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюУстановитьПометкуУдаления",              "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюПоискИЗаменаСсылок",                     "Видимость", ЭтоРежимРедактирования);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСправочникДемонстрационныеСценарииПеревестиВыделенные", "Видимость", ЭтоРежимРедактирования);
	
	ДемонстрационныеСценарииКлиентСервер.УстановитьПометкуКомандПереключенияВариантаОтображенияФормы(Форма);
	
КонецПроцедуры

#Область Перевод

&НаКлиенте
Функция ВыбранныеДляПереводаСценарии()
	
	ВыделенныеСценарии = Новый СписокЗначений;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Если ТипЗнч(ВыделеннаяСтрока) = Тип("СправочникСсылка.ДемонстрационныеСценарии") Тогда
			
			ВыделенныеСценарии.Добавить(ВыделеннаяСтрока);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВыделенныеСценарии;

КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияФормыПеревода(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено 
		Или Результат = КодВозвратаДиалога.Отмена Тогда
		
		Возврат; 
		
	КонецЕсли;
	
	Результат.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	
	ВыполнитьПереводСценариев(Результат);

КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьПереводСценариев(НастройкиПоиска)
	
	ОчиститьСообщения();
	
	ДлительнаяОперация = ВыполнитьПереводПоНастройкамДлительнаяОперация(НастройкиПоиска,
	                                                                    УникальныйИдентификатор);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ПереводПоНастройкамЗавершение(ДлительнаяОперация, Неопределено);
		
	ИначеЕсли ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПереводПоНастройкамЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПереводПоНастройкамДлительнаяОперация(НастройкиПоиска, УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Перевод демонстрационных сценариев'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("ДемонстрационныеСценарии.ВыполнитьПереводДемонстрационныхСценариев",
	                                                       НастройкиПоиска, ПараметрыВыполнения);
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ПереводПоНастройкамЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда 
		ОбработатьЗавершениеПереводаПоНастройкам(Результат.АдресРезультата, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗавершениеПереводаПоНастройкам(Результат, ДополнительныеПараметры)

	Результат = ПолучитьИзВременногоХранилища(Результат);
	
	ТекстОповещения = НСтр("ru = 'Перевод демонстрационных сценариев'"); 
	
	Если Результат.Переведено = 0 Тогда
		
		ТекстПояснения = НСтр("ru = 'Ни один сценарий не переведен'");
		
	Иначе
		
		ТекстПояснения = СтрШаблон(НСтр("ru = 'Переведено сценариев %1 из %2'"), Результат.Переведено, Результат.ВсегоОбъектов);
		
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(ТекстОповещения, , ТекстПояснения, БиблиотекаКартинок.Информация32);
	
	Для Каждого ДанныеОшибки Из Результат.Ошибки Цикл
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ДанныеОшибки.ТекстОшибки, ДанныеОшибки.Сценарий);
		
	КонецЦикла;
	
КонецПроцедуры 


#КонецОбласти

#КонецОбласти