
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ДемонстрационныеСценарии.ЗаполнитьОписанияСценариевВФормеСценариямиДругогоОбъекта(Параметры.ЗначениеКопирования, ОписанияСценария);
		Объект.Статус = Перечисления.СтатусыДемонстрационныхСценариев.ВРаботе;
		ПриСозданииЧтенииНаСервере();
		
	КонецЕсли;
	
	ДемонстрационныеСценарии.ОбработатьПереданныеВФормуОбъектаПараметрыПоиска(ЭтотОбъект, Параметры);
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект) 
	
	ДемонстрационныеСценарии.ЗаполнитьОписанияСценариев(ТекущийОбъект, ОписанияСценария);
	
	ПриСозданииЧтенииНаСервере();
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ДемонстрационныеСценарии.ЗаписатьНовыеОписанияСценариевИзФормыОбъекта(ЭтотОбъект, ТекущийОбъект, Отказ);
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ДемонстрационныеСценарии_ПоискИЗамена" Тогда
		
		 ДемонстрационныеСценарииКлиент.ОбработатьСобытиеПоискаИЗамены(Параметр, ЭтотОбъект);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСценарияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ДемонстрационныеСценарииКлиент.ПриНажатииВПолеHTMLДокумента(ЭтотОбъект, Элемент, ДанныеСобытия, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСценарияЧтениеПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ДемонстрационныеСценарииКлиент.ПриНажатииВПолеHTMLДокумента(ЭтотОбъект, Элемент, ДанныеСобытия, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСценарияДокументСформирован(Элемент)
	
	Если ПараметрыПоискаПриОткрытии <> Неопределено Тогда
		
		ДемонстрационныеСценарииКлиент.ОткрытьФормуПоиска(ЭтотОбъект);
		ПараметрыПоискаПриОткрытии = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеревестиСЯзыкаПросмотра(Команда)
	
	ОчиститьСообщения();
	
	ДемонстрационныеСценарииКлиент.ПеревестиСЯзыкаПросмотра(
		ЭтотОбъект, ТекстСценарияЧтение, ТекстСценария, ЯзыкСценарияЧтение, ЯзыкСценария, "ТекстСценария");
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиИЗаменить(Команда)
	
	ДемонстрационныеСценарииКлиент.ОткрытьФормуПоиска(ЭтотОбъект);
	
КонецПроцедуры

#Область РедактированиеСценариев

&НаКлиенте
Процедура ЗакончитьРедактирование(Команда)
	
	ПрисоединенныйФайлСценария = ДемонстрационныеСценарииКлиентСервер.ПрисоединенныйФайлСценария(ЭтотОбъект, ЯзыкСценария);
	
	Если ПрисоединенныйФайлСценария = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ПослеЗавершенияРедактированияФайла", ЭтотОбъект);
	
	ПараметрыОбновленияФайла = РаботаСФайламиСлужебныйКлиент.ПараметрыОбновленияФайла(ОбработчикОповещения, ПрисоединенныйФайлСценария, УникальныйИдентификатор);
	
	РаботаСФайламиСлужебныйКлиент.ЗакончитьРедактированиеСОповещением(ПараметрыОбновленияФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	
	ОчиститьСообщения();
	
	Если Модифицированность
		Или Не ДемонстрационныеСценарииКлиентСервер.ПрисоединенныйФайлПоСценариюСоздан(ЭтотОбъект, ЯзыкСценария) Тогда
		
		ОповещениеПослеВопросаОЗаписи = Новый ОписаниеОповещения("ПослеВопросаЗаписатьНачалоРедактирования", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Перед началом редактирования текста сценария, его необходимо записать. Продолжить?'");
		
		ПоказатьВопрос(ОповещениеПослеВопросаОЗаписи, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		
	Иначе
		
		НачатьРедактированиеСценарияНаКлиенте();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРедактирование(Команда)
	
	ПрисоединенныйФайлСценария = ДемонстрационныеСценарииКлиентСервер.ПрисоединенныйФайлСценария(ЭтотОбъект, ЯзыкСценария);
	
	Если ПрисоединенныйФайлСценария = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивФайлов = Новый Массив;
	МассивФайлов.Добавить(ПрисоединенныйФайлСценария);
	
	РаботаСФайламиСлужебныйВызовСервера.ОсвободитьФайлы(МассивФайлов);
	
	ОбновитьДанныеПрисоединенныхФайловСценариев();
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеРежимаОтображения

&НаКлиенте
Процедура УстановитьВариантПросмотр(Команда)
	
	ПереключитьВариантОтображения(ЭтотОбъект, "Просмотр");
	НастроитьОтображениеИнформацииРежимПросмотра();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантРедактирование(Команда)
	
	ПереключитьВариантОтображения(ЭтотОбъект, "Редактирование");
	
КонецПроцедуры 

&НаКлиенте
Процедура УстановитьВариантПеревод(Команда)
	
	ПереключитьВариантОтображения(ЭтотОбъект, "Перевод");
	НастроитьОтображениеИнформацииРежимПросмотра();
	
КонецПроцедуры 

#КонецОбласти

#Область ИзменениеСтатуса

&НаКлиенте
Процедура УстановитьСтатусВРаботе(Команда)
	
	ИзменитьСтатус(ПредопределенноеЗначение("Перечисление.СтатусыДемонстрационныхСценариев.ВРаботе"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусЕстьЗамечания(Команда)
	
	ИзменитьСтатус(ПредопределенноеЗначение("Перечисление.СтатусыДемонстрационныхСценариев.ЕстьЗамечания"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусНаПроверке(Команда)
	
	ИзменитьСтатус(ПредопределенноеЗначение("Перечисление.СтатусыДемонстрационныхСценариев.НаПроверке"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусПроверено(Команда)
	
	ИзменитьСтатус(ПредопределенноеЗначение("Перечисление.СтатусыДемонстрационныхСценариев.Проверено"));
	
КонецПроцедуры

#КонецОбласти

#Область ОтчетДемонстрационныеСценарии

&НаКлиенте
Процедура ДемонстрационныеСценарииПросмотрОбъекты(Команда)
	
	ТекущиеДанные = Элементы.ОбъектыКонфигурацииНаименования.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено
		Или Не ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для текущего объекта'"));
		Возврат
	КонецЕсли;
	
	ОткрытьОтчетДемонстрационныеСценарии(ТекущиеДанные.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДемонстрационныеСценарииПросмотрПрофили(Команда)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено
		Или Не ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для текущего объекта'"));
		Возврат
	КонецЕсли;
	
	ОткрытьОтчетДемонстрационныеСценарии(ТекущиеДанные.Значение);

КонецПроцедуры

&НаКлиенте
Процедура ДемонстрационныеСценарииРедактированиеОбъекты(Команда)
	
	ТекущиеДанные = Элементы.ОбъектыКонфигурации.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено
		Или Не ЗначениеЗаполнено(ТекущиеДанные.ОбъектКонфигурации) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для текущего объекта'"));
		Возврат
	КонецЕсли;
	
	ОткрытьОтчетДемонстрационныеСценарии(ТекущиеДанные.ОбъектКонфигурации);
	
КонецПроцедуры

&НаКлиенте
Процедура ДемонстрационныеСценарииРедактированиеПрофили(Команда)
	
	ТекущиеДанные = Элементы.ПрофилиГруппДоступа.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено
		Или Не ЗначениеЗаполнено(ТекущиеДанные.Профиль) Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для текущего объекта'")); 
		Возврат;
		
	КонецЕсли;
	
	ОткрытьОтчетДемонстрационныеСценарии(ТекущиеДанные.Профиль);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетДемонстрационныеСценарии(ПараметрОткрытия)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ПараметрКоманды", ПараметрОткрытия);
	
	ОткрытьФорму("Отчет.ДемонстрационныеСценарииОбъекта.ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект,
	             ,,,, РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеЯзыка

&НаКлиенте
Процедура Подключаемый_ИзменитьЯзыкРедактирования(Команда)

	ИмяКоманды = Команда.Имя;
	
	КодЯзыка     = ДемонстрационныеСценарииКлиентСервер.КодЯзыкаИзИмениКоманды(ИмяКоманды, "ПереключитьНаЯзыкРедактирования_");

	ПереключитьЯзыкСценария(ЭтотОбъект, КодЯзыка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИзменитьЯзыкПросмотра(Команда)

	ИмяКоманды = Команда.Имя;
	
	КодЯзыка = ДемонстрационныеСценарииКлиентСервер.КодЯзыкаИзИмениКоманды(ИмяКоманды, "ПереключитьНаЯзыкПросмотра_");
	
	ПереключитьЯзыкСценарияЧтение(ЭтотОбъект, КодЯзыка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииЧтенииНаСервере() 
	
	ЭтоНеБазоваяВерсия = ПолучитьФункциональнуюОпцию("НеБазоваяВерсия");
	Элементы.ГруппаПрофилиГруппДоступа.Видимость = ЭтоНеБазоваяВерсия;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ЦветЗахваченТекущимПользователем = ЦветаСтиля.ФайлЗанятыйТекущимПользователем;
	ЦветЗахваченДругимПользователем  = ЦветаСтиля.ФайлЗанятыйДругимПользователем;
	ЕстьПравоРедактирования          = ПравоДоступа("Изменение", Метаданные.Справочники.ДемонстрационныеСценарии);
	
	ДемонстрационныеСценарии.УстановитьЯзыкиКонфигурацииВФорме(ЭтотОбъект);
	ДемонстрационныеСценарии.СоздатьЭлементыФормыЯзыкиКонфигурации(ЭтотОбъект);
	ДемонстрационныеСценарии.УстановитьНастройкуПоЯзыкамВФорме(ЭтотОбъект, "ЯзыкСценарияЧтение", "ЯзыкСценария");
	
	УстановитьДанныеОтображаемыхСценариев(ЭтотОбъект);
	
	ДемонстрационныеСценарииКлиентСервер.ОтразитьТекущийСтатусНаФорме(ЭтотОбъект); 
	
	ДемонстрационныеСценарии.ЗагрузитьНастройкуПоВариантуОтображенияФормы(
		ЭтотОбъект,
		ДемонстрационныеСценарии.ДоступныеВариантыОтображения(Истина),
		Метаданные.Справочники.ДемонстрационныеСценарии);
	
	ДемонстрационныеСценарииКлиентСервер.ОтразитьТекущиеЯзыкиНаФорме(ЭтотОбъект, "ЯзыкСценарияЧтение", "ЯзыкСценария" );
	ДемонстрационныеСценарииКлиентСервер.СформироватьЗаголовокКомандыПеревода(ЯзыкСценарияЧтение, ЯзыкСценария, Элементы.Перевести);
	
	НастроитьОтображениеИнформацииРежимПросмотра();
	УправлениеВидимостью(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДанныеОтображаемыхСценариев(Форма)

	УстановитьДанныеСценарияНаЯзыке(Форма, Форма.ЯзыкСценария);
	Форма.ТекстСценарияЧтение = ПолучитьОписаниеНаЯзыке(Форма, Форма.ЯзыкСценарияЧтение);

КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДанныеСценарияНаЯзыке(Форма, КодЯзыка)

	ДанныеСценария = ДемонстрационныеСценарииКлиентСервер.ДанныеСценарияНаЯзыке(Форма, КодЯзыка, "ОписанияСценария");
	
	Форма.ТекстСценария = ДанныеСценария.ТекстHTML;
	Форма.ТекущийСценарийДоступенДляРедактирования            = ДанныеСценария.ТекущийСценарийДоступенДляРедактирования;
	Форма.ТекущийСценарийРедактируетсяТекущимПользователем    = ДанныеСценария.ТекущийСценарийРедактируетсяТекущимПользователем;
	Форма.Элементы.ДекорацияСостояниеРедактирования.Заголовок = ДанныеСценария.ПредставлениеСостоянияРедактирования;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьОписаниеНаЯзыке(Форма, КодЯзыка)
	
	Возврат ДемонстрационныеСценарииКлиентСервер.ТекстHTMLПоКодуЯзыка(Форма, КодЯзыка, "ОписанияСценария", "ТекстHTML");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПереключитьЯзыкСценарияЧтение(Форма, КодЯзыка)

	Форма.ЯзыкСценарияЧтение  = КодЯзыка;
	Форма.ТекстСценарияЧтение = ПолучитьОписаниеНаЯзыке(Форма, Форма.ЯзыкСценарияЧтение);
	ДемонстрационныеСценарииКлиентСервер.ОтразитьТекущиеЯзыкиНаФорме(Форма, "ЯзыкСценарияЧтение", "ЯзыкСценария");
	ДемонстрационныеСценарииКлиентСервер.СформироватьЗаголовокКомандыПеревода(Форма.ЯзыкСценарияЧтение, Форма.ЯзыкСценария, Форма.Элементы.Перевести);
	
	УправлениеВидимостью(Форма);

КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура ПереключитьЯзыкСценария(Форма, КодЯзыка)
	
	Форма.ЯзыкСценария = КодЯзыка;
	УстановитьДанныеСценарияНаЯзыке(Форма, Форма.ЯзыкСценария);
	ДемонстрационныеСценарииКлиентСервер.ОтразитьТекущиеЯзыкиНаФорме(Форма, "ЯзыкСценарияЧтение", "ЯзыкСценария");
	ДемонстрационныеСценарииКлиентСервер.СформироватьЗаголовокКомандыПеревода(Форма.ЯзыкСценарияЧтение, Форма.ЯзыкСценария, Форма.Элементы.Перевести);
	
	УправлениеВидимостью(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
	
	Элементы = Форма.Элементы;
	
	ЭтоРежимРедактирования = (Форма.ВариантОтображенияФормы = "Редактирование");
	ЭтоРежимПеревод        = (Форма.ВариантОтображенияФормы = "Перевод");
	ЭтоРежимПросмотр       = (Форма.ВариантОтображенияФормы = "Просмотр");
	
	Элементы.СтраницыШапкаВариантыОтображения.ТекущаяСтраница = 
		?(ЭтоРежимРедактирования, Элементы.СтраницаВариантОтображенияРедактирование, Элементы.СтраницаВариантОтображенияПросмотр);
	
	Элементы.ПодменюРежимПросмотраРедактирования.Видимость = Форма.ЕстьПравоРедактирования;
	
	Элементы.ГруппаДополнительно.Видимость       = ЭтоРежимРедактирования; 
	Элементы.Комментарий.Видимость               = ЭтоРежимРедактирования;
	Элементы.ГруппаСвязанныеОбъекты.Видимость    = ЭтоРежимРедактирования;
	Элементы.ГруппаПрофилиГруппДоступа.Видимость = ЭтоРежимРедактирования; 
	Элементы.ГруппаРедактирование.Видимость      = ЭтоРежимРедактирования Или ЭтоРежимПеревод;
	Элементы.ПодменюСтатус.Видимость             = ЭтоРежимРедактирования Или ЭтоРежимПеревод;
	
	Элементы.Перевести.Видимость = ЭтоРежимПеревод
	                               И Форма.ТекущийСценарийДоступенДляРедактирования
	                               И Не Форма.ТекущийСценарийРедактируетсяТекущимПользователем
	                               И Не Форма.Объект.Ссылка.Пустая(); 
	
	Элементы.ПодменюЯзыкПросмотра.Видимость = ЭтоРежимПросмотр Или ЭтоРежимПеревод;
	Элементы.ГруппаЧтение.Видимость         = ЭтоРежимПросмотр Или ЭтоРежимПеревод;
	
	Элементы.ТекстСценарияРедактировать.Видимость           = Форма.ТекущийСценарийДоступенДляРедактирования И Не Форма.ОБъект.ПометкаУдаления;
	Элементы.ТекстСценарияЗакончитьРедактирование.Видимость = Форма.ТекущийСценарийРедактируетсяТекущимПользователем;
	Элементы.ТекстСценарияОтменитьРедактирование.Видимость  = Форма.ТекущийСценарийРедактируетсяТекущимПользователем;
	
	Элементы.ТекстСценарияНайтиИЗаменить.Видимость          = Форма.ТекущийСценарийДоступенДляРедактирования
	                                                          И Не Форма.ТекущийСценарийРедактируетсяТекущимПользователем
	                                                          И Не Форма.Объект.Ссылка.Пустая();
	
	Если Форма.ТекущийСценарийДоступенДляРедактирования
		И Форма.ЕстьПравоРедактирования Тогда
		Элементы.ГруппаКомандыСЯзыком.Группировка                                = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ДекорацияСостояниеРедактирования.ГоризонтальноеПоложение        = ГоризонтальноеПоложениеЭлемента.Лево;
		Элементы.ДекорацияСостояниеРедактирования.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
	Иначе
		Элементы.ГруппаКомандыСЯзыком.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Элементы.ДекорацияСостояниеРедактирования.ГоризонтальноеПоложение        = ГоризонтальноеПоложениеЭлемента.Право;
		Элементы.ДекорацияСостояниеРедактирования.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	КонецЕсли;
	
	Элементы.ДекорацияСостояниеРедактирования.Видимость = Не ПустаяСтрока(Элементы.ДекорацияСостояниеРедактирования.Заголовок);
	
	ДемонстрационныеСценарииКлиентСервер.УстановитьПометкуКомандПереключенияВариантаОтображенияФормы(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПереключитьВариантОтображения(Форма, НовыйВариант)
	
	ПараметрыПереключения = ДемонстрационныеСценарииКлиентСервер.НовыйПараметрыПереключенияВариантаОтображения();
	ПараметрыПереключения.Форма                          = Форма;
	ПараметрыПереключения.НовыйВариант                   = НовыйВариант;
	ПараметрыПереключения.ИмяРеквизитаЯзыкЧтение         = "ЯзыкСценарияЧтение";
	ПараметрыПереключения.ИмяРеквизитаЯзыкРедактирование = "ЯзыкСценария";
	ПараметрыПереключения.ЯзыкиКонфигурации              = Форма.ЯзыкиКонфигурации;
	
	ДемонстрационныеСценарииКлиентСервер.ПереключитьВариантОтображения(ПараметрыПереключения); 
	
	Если ПараметрыПереключения.ВыполненоПереключениеЯзыка Тогда
		
		Если ПараметрыПереключения.ИмяРеквизитаПереключенЯзык = "ЯзыкСценарияЧтение" Тогда
			ПереключитьЯзыкСценарияЧтение(Форма, ПараметрыПереключения.ПереключеноНаЯзык);
		ИначеЕсли ПараметрыПереключения.ИмяРеквизитаПереключенЯзык = "ЯзыкСценария" Тогда
			ПереключитьЯзыкСценария(Форма, ПараметрыПереключения.ПереключеноНаЯзык);
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеВидимостью(Форма);
	
КонецПроцедуры

#Область ИзменениеСтатуса

&НаКлиенте
Процедура ИзменитьСтатус(НовыйСтатус)

	Если НовыйСтатус = Объект.Статус
		Или Не ЗначениеЗаполнено(НовыйСтатус) Тогда
		Возврат;
	КонецЕсли; 
	
	Объект.Статус = НовыйСтатус;
	
	ДемонстрационныеСценарииКлиентСервер.ОтразитьТекущийСтатусНаФорме(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ПредставленияДляРежимаПросмотра

&НаСервере
Функция ПредставлениеОбъектовМетаданных()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Представление",          "");
	СтруктураВозврата.Вставить("Количество",              0);
	СтруктураВозврата.Вставить("ПредставленияМетаданных", Новый СписокЗначений);

	УстановитьПривилегированныйРежим(Истина);
	
	Если Объект.ОбъектыКонфигурации.Количество() = 0 Тогда
		СтруктураВозврата.Представление = НСтр("ru = 'Использование в объетках конфигурации не указано'");
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовМетаданных.Ссылка       КАК Ссылка,
	|	ИдентификаторыОбъектовМетаданных.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
	|ГДЕ
	|	ИдентификаторыОбъектовМетаданных.Ссылка В(&ОбъектыМетаданных)";
	
	Запрос.УстановитьПараметр("ОбъектыМетаданных", Объект.ОбъектыКонфигурации.Выгрузить().ВыгрузитьКолонку("ОбъектКонфигурации"));
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Пока Выборка.Следующий() Цикл
		 СтруктураВозврата.ПредставленияМетаданных.Добавить(Выборка.Ссылка, Выборка.Наименование);
	КонецЦикла;
	
	СтруктураВозврата.Количество = СтруктураВозврата.ПредставленияМетаданных.Количество();
	СтруктураВозврата.Представление = ДемонстрационныеСценарии.СтрокаПредставлениеСЕще(НСтр("ru = 'Объекты конфигурации:'"),
	                                                                                   СтруктураВозврата.ПредставленияМетаданных, 80);
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Процедура НастроитьОтображениеИнформацииРежимПросмотра()

	ПредставлениеОбъектовМетаданных = ПредставлениеОбъектовМетаданных();
	
	ОбъектыКонфигурацииНаименования = ПредставлениеОбъектовМетаданных.ПредставленияМетаданных;
	Элементы.ГруппаПредставлениеОбъектыКонфигурации.Заголовок = ПредставлениеОбъектовМетаданных.Представление;
	
	Если ЭтоНеБазоваяВерсия Тогда
		
		ПредставлениеИсполнителей = ПредставлениеИсполнителей(); 
		
		Исполнители = ПредставлениеИсполнителей.ПредставленияМетаданных;
		Элементы.ГруппаПредставлениеИсполнителей.Заголовок = ПредставлениеИсполнителей.Представление;
		Элементы.ГруппаПредставлениеИсполнителей.Видимость = Истина;
		
	Иначе
		
		Элементы.ГруппаПредставлениеИсполнителей.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Функция ПредставлениеИсполнителей()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Представление",           "");
	СтруктураВозврата.Вставить("Количество",              0);
	СтруктураВозврата.Вставить("ПредставленияМетаданных", Новый СписокЗначений);

	УстановитьПривилегированныйРежим(Истина);
	
	Если Объект.ПрофилиГруппДоступа.Количество() = 0 Тогда
		СтруктураВозврата.Представление = НСтр("ru = 'Исполнители не указаны'");
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПрофилиГруппДоступа.Ссылка       КАК Ссылка,
	|	ПрофилиГруппДоступа.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ПрофилиГруппДоступа КАК ПрофилиГруппДоступа
	|ГДЕ
	|	ПрофилиГруппДоступа.Ссылка В(&Исполнители)";
	
	Запрос.УстановитьПараметр("Исполнители", Объект.ПрофилиГруппДоступа.Выгрузить().ВыгрузитьКолонку("Профиль"));
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Пока Выборка.Следующий() Цикл
		 СтруктураВозврата.ПредставленияМетаданных.Добавить(Выборка.Ссылка, Выборка.Наименование);
	КонецЦикла;
	
	СтруктураВозврата.Количество = СтруктураВозврата.ПредставленияМетаданных.Количество();
	СтруктураВозврата.Представление = ДемонстрационныеСценарии.СтрокаПредставлениеСЕще(НСтр("ru = 'Исполнители:'"), СтруктураВозврата.ПредставленияМетаданных, 80);
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти 

#Область РедактированиеСценария

&НаКлиенте
Процедура ПослеВопросаЗаписатьНачалоРедактирования(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		РезультатЗаписи = Записать();
		Если РезультатЗаписи Тогда
			НачатьРедактированиеСценарияНаКлиенте();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьРедактированиеСценарияНаКлиенте()
	
	ПрисоединенныйФайлСценария = ДемонстрационныеСценарииКлиентСервер.ПрисоединенныйФайлСценария(ЭтотОбъект, ЯзыкСценария);
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ПослеНачалаРедактированияФайла", ЭтотОбъект);
	
	РаботаСФайламиСлужебныйКлиент.РедактироватьСОповещением(ОбработчикОповещения, ПрисоединенныйФайлСценария, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиОкончанияСобытийПрисоединенныхФайлов

&НаКлиенте
Процедура ПослеНачалаРедактированияФайла(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		ОбновитьДанныеПрисоединенныхФайловСценариев();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗавершенияРедактированияФайла(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Истина Тогда
		ОбновитьДанныеПрисоединенныхФайловСценариев();
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ОбновитьДанныеПрисоединенныхФайловСценариев()

	ДемонстрационныеСценарии.ЗаполнитьОписанияСценариев(Объект, ОписанияСценария);
	УстановитьДанныеОтображаемыхСценариев(ЭтотОбъект);
	УправлениеВидимостью(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПослеЗакрытияФормыПоискаИЗамены(Результат, ДополнительныеПараметры) Экспорт

	ДемонстрационныеСценарииКлиент.ПослеЗакрытияФормыПоискаИЗамены(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросПослеПеревода(Результат, ДополнительныеПараметры) Экспорт
	
	ДемонстрационныеСценарииКлиент.ПослеПринятияРезультатовПеревода(ЭтотОбъект, Результат, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти
