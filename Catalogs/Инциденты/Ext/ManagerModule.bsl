#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс 

#Область Прочее

// Возвращает дубли инцидента
// 
// Параметры:
//  Ссылка - СправочникСсылка.Инциденты - Проверяемый на дубли инцидент.
//  ПройденныеИнциденты - Массив из СправочникСсылка.Инциденты - Помещаются пройденные инциденты по цепочки дублей.
// 
// Возвращаемое значение:
//  Массив из СправочникСсылка.Инциденты
Функция ДублиИнцидента(Ссылка, ПройденныеИнциденты) Экспорт
	
	ДублиИнцидентов = Новый Массив;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Инциденты.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК Основной
	|ИЗ
	|	Справочник.Инциденты КАК Инциденты
	|ГДЕ
	|	Инциденты.Дубль = &Ссылка
	|	И Инциденты.ПометкаУдаления = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Инциденты.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Справочник.Инциденты КАК Инциденты
	|ГДЕ
	|	Инциденты.Ссылка = &Ссылка
	|	И Инциденты.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Основной Тогда
			ДублиИнцидентов.Добавить(Выборка.Ссылка);
			ПройденныеИнциденты.Добавить(Выборка.Ссылка);
			Дубль = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Ссылка, "Дубль");
			ВеткаПройдена = ПройденныеИнциденты.Найти(Дубль) <> Неопределено;
			Если ЗначениеЗаполнено(Дубль) И НЕ ВеткаПройдена Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДублиИнцидентов, ДублиИнцидента(Дубль, ПройденныеИнциденты));
			КонецЕсли;
		Иначе
			ВеткаПройдена = ПройденныеИнциденты.Найти(Выборка.Ссылка) <> Неопределено;
			Если Не ВеткаПройдена Тогда
				ПройденныеИнциденты.Добавить(Выборка.Ссылка);
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДублиИнцидентов, ДублиИнцидента(Выборка.Ссылка, ПройденныеИнциденты));
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДублиИнцидентов;
	
КонецФункции

// Ограничение выбора нового вида инцидентов. Используются как для ограничения списка выбора, так и для проверки смены вида.
//
// Параметры:
//  НаборСвойствДопРеквизитов - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений - Набор свойств вида инцидента
// Возвращаемое значение:
//   - Булево - Истина
//
Функция ОграничениеВыбораНовогоВидаИнцидентов(НаборСвойствДопРеквизитов) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НаборСвойств", НаборСвойствДопРеквизитов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДопРеквизиты.Свойство КАК Свойство
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДопРеквизиты
	|ГДЕ
	|	ДопРеквизиты.Ссылка = &НаборСвойств";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru='%1 %2 от %3'"),
	Данные.Наименование,
	Данные.Код,
	Данные.ДатаРегистрации);
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Код");
	Поля.Добавить("Наименование");
	Поля.Добавить("ДатаРегистрации");
	
КонецПроцедуры

#КонецОбласти