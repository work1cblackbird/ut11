#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Ключи реквизитов организаций ЗЕРНО.
// Если требуется получать ключи организации по всем подразделениям, то параметром передавать организацию или массив организаций.
// Если требуется получить ключи по организация + подразделение, то параметром передавать подготовленную таблицу для поиска.
// 
// Параметры:
//  ОрганизацияКонтрагент - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - организация / контрагент, по которым нужно получить реквизиты. 
//                        - Массив из ОпределяемыйТип.ОрганизацияКонтрагентГосИС - организации / контрагенты, по которым нужно получить реквизиты.
//                        - ТаблицаЗначений - см. ИнтеграцияЗЕРНО.НоваяТаблицаОрганизацияКонтрагентПодразделение.
// 
// Возвращаемое значение:
//  Массив из СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО - Ключи реквизитов организаций.
Функция КлючиПоОрганизациямКонтрагентам(ОрганизацияКонтрагент) Экспорт
	
	Результат = СформироватьТаблицуКлючейОрганизацийПоОрганизациямКонтрагентам(ОрганизацияКонтрагент);
	Если Результат = Неопределено Или Результат.Пустой() Тогда
		Возврат Новый Массив;
	Иначе
		Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	
КонецФункции

// Получает соответствие организаций/контрагентов ключам реквизитов организаций ЗЕРНО.
// Если требуется получать ключи организации по всем подразделениям, то параметром передавать организацию или массив организаций.
// Если требуется получить ключи по организация + подразделение, то параметром передавать подготовленную таблицу для поиска.
// 
// Параметры:
//  ОрганизацияКонтрагент - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - организация / контрагент, по которым нужно получить реквизиты. 
//                        - Массив из ОпределяемыйТип.ОрганизацияКонтрагентГосИС - организации / контрагенты, по которым нужно получить реквизиты.
//                        - ТаблицаЗначений - см. ИнтеграцияЗЕРНО.НоваяТаблицаОрганизацияКонтрагентПодразделение.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
//   Ключ - ОпределяемыйТип.ОрганизацияКонтрагентГосИС
//   Значение - Массив из СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО - Ключи реквизитов организаций.
Функция СоответствиеКлючейПоОрганизациямКонтрагентам(ОрганизацияКонтрагент) Экспорт
	
	СоответствиеКлючей = Новый Соответствие;
	
	Результат = СформироватьТаблицуКлючейОрганизацийПоОрганизациямКонтрагентам(ОрганизацияКонтрагент);
	
	Если Результат = Неопределено Тогда
		Возврат СоответствиеКлючей;
	КонецЕсли;
	
	Если Результат.Пустой() Тогда
		Возврат СоответствиеКлючей;
	Иначе
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ДанныеПоКлючу = СоответствиеКлючей.Получить(Выборка.ОрганизацияКонтрагент);
			
			Если ДанныеПоКлючу = Неопределено Тогда
				ДанныеПоКлючу = Новый Массив;
			КонецЕсли;
			
			ДанныеПоКлючу.Добавить(Выборка.Ссылка);
			СоответствиеКлючей.Вставить(Выборка.ОрганизацияКонтрагент, ДанныеПоКлючу);
			
		КонецЦикла;
		
		Возврат СоответствиеКлючей;
		
	КонецЕсли;
	
КонецФункции

// Организации контрагенты по ключам.
// 
// Параметры:
//  КлючиРеквизитовОрганизаций - Массив из см. Справочник.КлючиРеквизитовОрганизацийЗЕРНО
//                             - см. Справочник.КлючиРеквизитовОрганизацийЗЕРНО
//                             
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
//  * Ключ - см. Справочник.КлючиРеквизитовОрганизацийЗЕРНО
//  * Значение - СтрокаТаблицыЗначений: см. НоваяТаблицаРеквизитовКлючейРеквизитовОрганизаций
Функция ОрганизацииКонтрагентыПоКлючам(КлючиРеквизитовОрганизаций) Экспорт
	
	ВозвращаемоеЗначение = Новый Соответствие();
	СсылкиНаКлючи        = Новый Массив;
	
	ТаблицаДанных = НоваяТаблицаРеквизитовКлючейРеквизитовОрганизаций();
	
	ТаблицаДанных.Индексы.Добавить("КлючРеквизитов");
	
	Если ТипЗнч(КлючиРеквизитовОрганизаций) = Тип("Массив") Тогда
		СсылкиНаКлючи = КлючиРеквизитовОрганизаций;
	Иначе
		СсылкиНаКлючи = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КлючиРеквизитовОрганизаций);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка                КАК КлючРеквизитов,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ОрганизацияКонтрагент КАК ОрганизацияКонтрагент,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Подразделение         КАК Подразделение,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ТипОрганизации        КАК ТипОрганизации,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ИНН                   КАК ИНН,
		|	КлючиРеквизитовОрганизацийЗЕРНО.КПП                   КАК КПП,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ОГРН                  КАК ОГРН,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Наименование          КАК Наименование
		|ИЗ
		|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
		|ГДЕ
		|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка В (&Ссылки)";
	
	Запрос.УстановитьПараметр("Ссылки", СсылкиНаКлючи);
	
	РезультатЗапроса       = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТипЗначенияПустойОрганизации = ТипЗнч(ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("Организация"));
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ЗначениеПоКлючу = Новый Структура("Организация, Подразделение, Контрагент");
		ВозвращаемоеЗначение.Вставить(ВыборкаДетальныеЗаписи.КлючРеквизитов, ЗначениеПоКлючу);
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ОрганизацияКонтрагент) Тогда
			
			Если ТипЗнч(ВыборкаДетальныеЗаписи.ОрганизацияКонтрагент) = ТипЗначенияПустойОрганизации Тогда
				ЗначениеПоКлючу.Организация   = ВыборкаДетальныеЗаписи.ОрганизацияКонтрагент;
				ЗначениеПоКлючу.Подразделение = ВыборкаДетальныеЗаписи.Подразделение;
			Иначе
				ЗначениеПоКлючу.Контрагент = ВыборкаДетальныеЗаписи.ОрганизацияКонтрагент;
			КонецЕсли;
		
		Иначе
			НоваяСтрока = ТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаДанных.Количество() Тогда
		ИнтеграцияЗЕРНОПереопределяемый.ПриОпределенииКонтрагентовОрганизацийПоРеквизитам(ТаблицаДанных);
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение[СтрокаТаблицы.КлючРеквизитов], СтрокаТаблицы);
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Записывает в справочник "Ключи реквизитов организаций ЗЕРНО" соответствие прикладных реквизитов
//   * Не изменяет существующие сопоставления (поле ОрганизацияКонтрагент)
//
// Параметры:
//   Ключ                  - СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО - данные классификатора ЗЕРНО
//   ОрганизацияКонтрагент - ОпределяемыйТип.ОрганизацияКонтрагентГосИС       - прикладной справочник
//
Процедура СопоставитьСПрикладнымиРеквизитами(Ключ, ОрганизацияКонтрагент) Экспорт
	
	Если Не ЗначениеЗаполнено(Ключ)
		Или Не ЗначениеЗаполнено(ОрганизацияКонтрагент)
		Или ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ключ, "ОрганизацияКонтрагент")) Тогда
		Возврат;
	КонецЕсли;
	
	КлючОбъект = Ключ.ПолучитьОбъект();
	КлючОбъект.ОрганизацияКонтрагент = ОрганизацияКонтрагент;
	
	УстановитьПривилегированныйРежим(Истина);
	КлючОбъект.Записать();
	
КонецПроцедуры

// Ключи реквизитов по ссылке ЗЕРНО.
// 
// Параметры:
//  КлючиРеквизитовОрганизаций - Массив из см. Справочник.КлючиРеквизитовОрганизацийЗЕРНО
//                             - см. Справочник.КлючиРеквизитовОрганизацийЗЕРНО
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
//  * Ключ - см. Справочник.КлючиРеквизитовОрганизацийЗЕРНО
//  * Значение - см. ИнтеграцияЗЕРНО.ИнициализироватьСтруктуруРеквизитовОрганизацииКонтрагента
Функция КлючиРеквизитовПоСсылкеЗЕРНО(КлючиРеквизитовОрганизаций) Экспорт
	
	ВозвращаемоеЗначение = Новый Соответствие();
	
	Если ТипЗнч(КлючиРеквизитовОрганизаций) = Тип("Массив") Тогда
		СсылкиНаКлючи = КлючиРеквизитовОрганизаций;
	Иначе
		СсылкиНаКлючи = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КлючиРеквизитовОрганизаций);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка                КАК КлючРеквизитов,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ОрганизацияКонтрагент КАК ОрганизацияКонтрагент,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ТипОрганизации        КАК ТипОрганизации,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ИНН                   КАК ИНН,
		|	КлючиРеквизитовОрганизацийЗЕРНО.КПП                   КАК КПП,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ОГРН                  КАК ОГРН,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Фамилия               КАК Фамилия,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Имя                   КАК Имя,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Отчество              КАК Отчество,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Наименование          КАК Наименование,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Подразделение         КАК Подразделение,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ЮридическийАдрес      КАК ЮридическийАдрес,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Индекс                КАК ЮридическийАдресИндекс,
		|	КлючиРеквизитовОрганизацийЗЕРНО.КодАльфа3             КАК КодАльфа3,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ИдентификаторАдреса   КАК ИдентификаторАдреса,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ОКТМО                 КАК ОКТМО
		|ИЗ
		|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
		|ГДЕ
		|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка В (&Ссылки)";
	
	Запрос.УстановитьПараметр("Ссылки", СсылкиНаКлючи);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаИсточникиРеквизитов = ИнтеграцияЗЕРНО.НоваяТаблицаОрганизацияКонтрагентПодразделение();
	
	ТаблицаОтбораКлючиРеквизитов = Новый ТаблицаЗначений();
	ТаблицаОтбораКлючиРеквизитов.Колонки.Добавить("КлючРеквизитов", Новый ОписаниеТипов("СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО"));
	ТаблицаОтбораКлючиРеквизитов.Колонки.Добавить("ОрганизацияКонтрагент", Метаданные.ОпределяемыеТипы.ОрганизацияКонтрагентГосИС.Тип);
	ТаблицаОтбораКлючиРеквизитов.Колонки.Добавить("Подразделение",         Метаданные.ОпределяемыеТипы.Подразделение.Тип);
	ТаблицаОтбораКлючиРеквизитов.Колонки.Добавить("КодРАФП",               ОбщегоНазначения.ОписаниеТипаСтрока(11));
	
	КешСопоставленныхКлючейОрганизаций = Новый Соответствие();
	
	// 1. Заполнить по данным справочника КлючиРеквизитов.
	Для Каждого СтрокаТаблицы Из РезультатЗапроса Цикл
		
		ЗначениеПоКлючу = ИнтеграцияЗЕРНО.ИнициализироватьСтруктуруРеквизитовОрганизацииКонтрагента();
		ЗаполнитьЗначенияСвойств(ЗначениеПоКлючу, СтрокаТаблицы);
		ВозвращаемоеЗначение.Вставить(СтрокаТаблицы.КлючРеквизитов, ЗначениеПоКлючу);
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ОрганизацияКонтрагент) Тогда
			КешСопоставленныхКлючейОрганизаций.Вставить(
				СтрокаТаблицы.КлючРеквизитов,
				Новый Структура("ОрганизацияКонтрагент, Подразделение",
					СтрокаТаблицы.ОрганизацияКонтрагент,
					СтрокаТаблицы.Подразделение));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ЮридическийАдрес) Тогда
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.ОрганизацияКонтрагент) Тогда
				
				ИнтеграцияЗЕРНО.ДобавитьВТаблицуОтбораОрганизациюПодразделение(
					ТаблицаИсточникиРеквизитов, СтрокаТаблицы.ОрганизацияКонтрагент, СтрокаТаблицы.Подразделение);
				
				СтрокаОтбора = ТаблицаОтбораКлючиРеквизитов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаОтбора, СтрокаТаблицы);
				
			ИначеЕсли Не (СтрокаТаблицы.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ
				Или СтрокаТаблицы.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация) Тогда
				
				ВозвращаемоеЗначение[СтрокаТаблицы.КлючРеквизитов].Вставить(
					"ТекстОшибки",
					ТекстОшибкиНеЗаполненЮридическийАдресКлючаРеквизитовОрганизации(СтрокаТаблицы.КлючРеквизитов));
				
			КонецЕсли;
			
		ИначеЕсли Не (СтрокаТаблицы.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ
			Или СтрокаТаблицы.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация)
			И (Не ЗначениеЗаполнено(ЗначениеПоКлючу.ИдентификаторАдреса)
				И Не ЗначениеЗаполнено(ЗначениеПоКлючу.ОКТМО)) Тогда
			
			АдресСтрокойJSON = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
				СтрокаТаблицы.ЮридическийАдрес, Перечисления.ТипыКонтактнойИнформации.Адрес);
			Если УправлениеКонтактнойИнформациейСлужебный.АдресВведенВСвободнойФорме(АдресСтрокойJSON) Тогда
				
				Если ЗначениеЗаполнено(СтрокаТаблицы.ОрганизацияКонтрагент) Тогда
					
					ИнтеграцияЗЕРНО.ДобавитьВТаблицуОтбораОрганизациюПодразделение(
						ТаблицаИсточникиРеквизитов, СтрокаТаблицы.ОрганизацияКонтрагент, СтрокаТаблицы.Подразделение);
					
					СтрокаОтбора = ТаблицаОтбораКлючиРеквизитов.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаОтбора, СтрокаТаблицы);
					
					ЗначениеПоКлючу.ЮридическийАдрес = "";
					ЗначениеПоКлючу.ЮридическийАдресИндекс = "";
					
				Иначе
					
					ВозвращаемоеЗначение[СтрокаТаблицы.КлючРеквизитов].Вставить(
						"ТекстОшибки",
						ТекстОшибкиЮридическийАдресКлючаРеквизитовОрганизацииАдресВСвободнойФорме(СтрокаТаблицы.ЮридическийАдрес));
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыОтбора = Новый Структура("ОрганизацияКонтрагент, Подразделение");
	
	// 2. Заполнить реквизиты по данным прикладных справочников.
	Если ТаблицаИсточникиРеквизитов.Количество() Тогда
		
		ИнтеграцияЗЕРНОВызовСервера.РеквизитыОрганизацийКонтрагентов(ТаблицаИсточникиРеквизитов);
		ТаблицаОтбораКлючиРеквизитов.Индексы.Добавить("ОрганизацияКонтрагент, Подразделение");
		
		Для Каждого СтрокаТаблицы Из ТаблицаИсточникиРеквизитов Цикл
			
			РеквизитыПоКлючу = ИнтеграцияЗЕРНО.РеквизитыОрганизацииКонтрагента(
				ТаблицаИсточникиРеквизитов, СтрокаТаблицы.ОрганизацияКонтрагент, СтрокаТаблицы.Подразделение);
			
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СтрокаТаблицы);
			СтрокиКлючей = ТаблицаОтбораКлючиРеквизитов.НайтиСтроки(ПараметрыОтбора);
			
			Для Каждого СтрокаКлюча Из СтрокиКлючей Цикл
				
				ЗначениеПоКлючу = ВозвращаемоеЗначение[СтрокаКлюча.КлючРеквизитов];
				СвойстваДляЗаполения = Новый Массив;
				// Дополнить пустые значения данными ИБ
				Для Каждого КлючЗначение Из ЗначениеПоКлючу Цикл
					Если Не ЗначениеЗаполнено(КлючЗначение.Значение)
						И ЗначениеЗаполнено(
							ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РеквизитыПоКлючу, КлючЗначение.Ключ, "")) Тогда
						СвойстваДляЗаполения.Добавить(КлючЗначение.Ключ);
					КонецЕсли;
				КонецЦикла;
				Если СвойстваДляЗаполения.Количество() Тогда
					ЗаполнитьЗначенияСвойств(ЗначениеПоКлючу, РеквизитыПоКлючу, СтрСоединить(СвойстваДляЗаполения, ","));
				КонецЕсли;
				
			КонецЦикла;
			
			Если Не ЗначениеЗаполнено(ЗначениеПоКлючу.ЮридическийАдрес)
				И Не (СтрокаТаблицы.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ
				Или СтрокаТаблицы.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация) Тогда
				ВозвращаемоеЗначение[СтрокаКлюча.КлючРеквизитов].Вставить(
					"ТекстОшибки",
					ТекстОшибкиНеЗаполненЮридическийАдресКлючаРеквизитовОрганизации(СтрокаКлюча.КлючРеквизитов));
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаОтбораКлючиРеквизитов.Очистить();
	КешКлючейИностранныхОрганизаций = Новый Соответствие();
	
	// 3. Заполнить код РАФП для иностранных организаций.
	Для Каждого КлючИЗначение Из ВозвращаемоеЗначение Цикл
		
		ЗначениеПоКлючу = КлючИЗначение.Значение;
		Если ЗначениеПоКлючу.Свойство("ТекстОшибки") Тогда
			Продолжить;
		КонецЕсли;
		
		Если (ЗначениеПоКлючу.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация
			Или ЗначениеПоКлючу.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ)
			И ЗначениеЗаполнено(ЗначениеПоКлючу.ИНН)
			И Не ЗначениеЗаполнено(ЗначениеПоКлючу.КодРАФП) Тогда
			
			Если КешСопоставленныхКлючейОрганизаций[КлючИЗначение.Ключ] <> Неопределено Тогда
				СтрокаДляЗаполнения = ТаблицаОтбораКлючиРеквизитов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДляЗаполнения, КешСопоставленныхКлючейОрганизаций[КлючИЗначение.Ключ]);
				СтрокаДляЗаполнения.КлючРеквизитов = КлючИЗначение.Ключ;
			КонецЕсли;
			КешКлючейИностранныхОрганизаций.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			
		КонецЕсли;
		
	КонецЦикла;
	
	КодыРАФП = РегистрыСведений.КодыРАФПЗЕРНО.КодыРАФППоВладельцу(ТаблицаОтбораКлючиРеквизитов);
	Для Каждого ЭлементКоллекции Из КодыРАФП Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, ЭлементКоллекции);
		СтрокиТаблицы = ТаблицаОтбораКлючиРеквизитов.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрокаТаблицыОтбора Из СтрокиТаблицы Цикл
			ВозвращаемоеЗначение[СтрокаТаблицыОтбора.КлючРеквизитов].КодРАФП = ЭлементКоллекции.КодРАФП;
			КешКлючейИностранныхОрганизаций.Удалить(СтрокаТаблицыОтбора.КлючРеквизитов);
		КонецЦикла;
		
	КонецЦикла;
	
	Если КешКлючейИностранныхОрганизаций.Количество() Тогда
		ИнтеграцияЗЕРНОВызовСервера.ЗаполнитьКодыРАФППоДаннымСервиса(КешКлючейИностранныхОрганизаций, Ложь);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Таблица реквизитов ключей реквизитов организаций.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица реквизитов ключей реквизитов организаций:
// * КлючРеквизитов - СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО - Ссылка на ключ реквизитов
// * ИНН            - Строка                                           - ИНН
// * КПП            - Строка                                           - КПП
// * ОГРН           - Строка                                           - ОГРН
// * Наименование   - Строка                                           - Наименование
// * Фамилия        - Строка                                           - Фамилия
// * Имя            - Строка                                           - Имя
// * Отчество       - Строка                                           - Отчество
// * ТипОрганизации - ПеречислениеСсылка.ТипыОрганизацийЗЕРНО          -
// * Организация    - ОпределяемыйТип.Организация                      - Организация
// * Контрагент     - ОпределяемыйТип.КонтрагентГосИС                  - Контрагент
Функция НоваяТаблицаРеквизитовКлючейРеквизитовОрганизаций() Экспорт
	
	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("КлючРеквизитов", Новый ОписаниеТипов("СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО"));
	ТаблицаДанных.Колонки.Добавить("ИНН",            ОбщегоНазначения.ОписаниеТипаСтрока(50));
	ТаблицаДанных.Колонки.Добавить("КПП",            ОбщегоНазначения.ОписаниеТипаСтрока(50));
	ТаблицаДанных.Колонки.Добавить("ОГРН",           ОбщегоНазначения.ОписаниеТипаСтрока(50));
	ТаблицаДанных.Колонки.Добавить("Наименование",   ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаДанных.Колонки.Добавить("Фамилия",        ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаДанных.Колонки.Добавить("Имя",            ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаДанных.Колонки.Добавить("Отчество",       ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаДанных.Колонки.Добавить("ТипОрганизации", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыОрганизацийЗЕРНО"));
	ТаблицаДанных.Колонки.Добавить("Организация",    Метаданные.ОпределяемыеТипы.Организация.Тип);
	ТаблицаДанных.Колонки.Добавить("Контрагент",     Метаданные.ОпределяемыеТипы.КонтрагентГосИС.Тип);
	
	ТаблицаДанных.Колонки.Добавить("ОрганизацияКонтрагент", Метаданные.ОпределяемыеТипы.ОрганизацияКонтрагентГосИС.Тип);
	ТаблицаДанных.Колонки.Добавить("Подразделение",         Метаданные.ОпределяемыеТипы.Подразделение.Тип);
	
	Возврат ТаблицаДанных;
	
КонецФункции

Функция СформироватьТаблицуКлючейОрганизацийПоОрганизациямКонтрагентам(ОрганизацияКонтрагент)
	
	Если ТипЗнч(ОрганизацияКонтрагент) = Тип("ТаблицаЗначений") Тогда
		
		ТаблицаИсточникиРеквизитов = ОрганизацияКонтрагент;
		ТаблицаИсточникиРеквизитов.Индексы.Добавить("ОрганизацияКонтрагент, Подразделение");
		
	Иначе
	
		Если ТипЗнч(ОрганизацияКонтрагент) = Тип("Массив") Тогда
			КоллекцияОрганизаций = ОрганизацияКонтрагент;
		ИначеЕсли ЗначениеЗаполнено(ОрганизацияКонтрагент) Тогда
			КоллекцияОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОрганизацияКонтрагент);
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
		ТаблицаИсточникиРеквизитов = ИнтеграцияЗЕРНО.НоваяТаблицаОрганизацияКонтрагентПодразделение();
		
		Если ОбщегоНазначенияИС.ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс()  Тогда
			ИнтеграцияЗЕРНОПереопределяемый.ПриОпределенииОбособленныхПодразделенийОрганизации(КоллекцияОрганизаций, ТаблицаИсточникиРеквизитов);
		КонецЕсли;
		
		ТаблицаИсточникиРеквизитов.Индексы.Добавить("ОрганизацияКонтрагент, Подразделение");
		
		Отбор = Новый Структура("ОрганизацияКонтрагент, Подразделение");
		Отбор.Подразделение = ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("Подразделение");
		
		Для Каждого ЭлементКоллекции Из КоллекцияОрганизаций Цикл
			
			Отбор.ОрганизацияКонтрагент = ЭлементКоллекции;
			Если ТаблицаИсточникиРеквизитов.НайтиСтроки(Отбор).Количество() = 0 Тогда
				
				ТаблицаИсточникиРеквизитов.Добавить().ОрганизацияКонтрагент = ЭлементКоллекции;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИнтеграцияЗЕРНОВызовСервера.РеквизитыОрганизацийКонтрагентов(ТаблицаИсточникиРеквизитов, Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст  = "ВЫБРАТЬ
	|	ТаблицаОтбора.ИНН            КАК ИНН,
	|	ТаблицаОтбора.КПП            КАК КПП,
	|	ТаблицаОтбора.ОГРН           КАК ОГРН,
	|	ТаблицаОтбора.ТипОрганизации КАК ТипОрганизации,
	|	ТаблицаОтбора.Наименование   КАК Наименование,
	|
	|	ТаблицаОтбора.ОрганизацияКонтрагент КАК ОрганизацияКонтрагент,
	|	ТаблицаОтбора.Подразделение         КАК Подразделение
	|
	|ПОМЕСТИТЬ ТаблицаОтбора
	|ИЗ
	|	&ТаблицаОтбора КАК ТаблицаОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка КАК Ссылка,
	|	ТаблицаОтбора.ОрганизацияКонтрагент    КАК ОрганизацияКонтрагент
	|ИЗ
	|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОтбора КАК ТаблицаОтбора
	|		ПО КлючиРеквизитовОрганизацийЗЕРНО.ОрганизацияКонтрагент = ТаблицаОтбора.ОрганизацияКонтрагент
	|		И КлючиРеквизитовОрганизацийЗЕРНО.Подразделение = ТаблицаОтбора.Подразделение
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка КАК Ссылка,
	|	ТаблицаОтбора.ОрганизацияКонтрагент    КАК ОрганизацияКонтрагент
	|ИЗ
	|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОтбора КАК ТаблицаОтбора
	|		ПО КлючиРеквизитовОрганизацийЗЕРНО.ИНН = ТаблицаОтбора.ИНН
	|		И КлючиРеквизитовОрганизацийЗЕРНО.КПП = ТаблицаОтбора.КПП
	|		И ТаблицаОтбора.ТипОрганизации = ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЗЕРНО.ЮридическоеЛицо)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка КАК Ссылка,
	|	ТаблицаОтбора.ОрганизацияКонтрагент    КАК ОрганизацияКонтрагент
	|ИЗ
	|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОтбора КАК ТаблицаОтбора
	|		ПО КлючиРеквизитовОрганизацийЗЕРНО.ИНН = ТаблицаОтбора.ИНН
	|		И КлючиРеквизитовОрганизацийЗЕРНО.КПП = ТаблицаОтбора.КПП
	|		И ТаблицаОтбора.ТипОрганизации = ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка КАК Ссылка,
	|	ТаблицаОтбора.ОрганизацияКонтрагент    КАК ОрганизацияКонтрагент
	|ИЗ
	|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОтбора КАК ТаблицаОтбора
	|		ПО КлючиРеквизитовОрганизацийЗЕРНО.ИНН = ТаблицаОтбора.ИНН
	|		И КлючиРеквизитовОрганизацийЗЕРНО.ОГРН = ТаблицаОтбора.ОГРН
	|		И ТаблицаОтбора.ТипОрганизации = ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЗЕРНО.ИндивидуальныйПредприниматель)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка КАК Ссылка,
	|	ТаблицаОтбора.ОрганизацияКонтрагент    КАК ОрганизацияКонтрагент
	|ИЗ
	|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОтбора КАК ТаблицаОтбора
	|		ПО КлючиРеквизитовОрганизацийЗЕРНО.Наименование = ТаблицаОтбора.Наименование
	|		И ТаблицаОтбора.ТипОрганизации = ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ)
	|";
	
	Запрос.УстановитьПараметр("ТаблицаОтбора", ТаблицаИсточникиРеквизитов);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

#Область ПоискСсылок

Функция КлючОрганизации(ДанныеОрганизации, ПараметрыОбмена, Сопоставление = Неопределено) Экспорт
	
	Если ДанныеОрганизации = Неопределено Тогда
		Возврат ПустаяСсылка();
	КонецЕсли;
	
	ИмяТаблицы = Метаданные.Справочники.КлючиРеквизитовОрганизацийЗЕРНО.ПолноеИмя();
	
	ДанныеПоСвойству = ДанныеОрганизацииПоЗаполенномуСвойству(ДанныеОрганизации, ПараметрыОбмена, Сопоставление);
	Если Не ЗначениеЗаполнено(ДанныеПоСвойству.Идентификатор) Тогда
		Возврат ПустаяСсылка();
	КонецЕсли;
	
	СправочникСсылка = ИнтеграцияЗЕРНОСлужебный.СсылкаПоИдентификатору(
		ПараметрыОбмена, ИмяТаблицы, ДанныеПоСвойству.Идентификатор);
	
	Если Не ЗначениеЗаполнено(СправочникСсылка) Тогда
		
		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить(ИмяТаблицы);
		ЭлементБлокировки.УстановитьЗначение("Идентификатор", ДанныеПоСвойству.Идентификатор);
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка.Заблокировать();
			
			СправочникСсылка = ИнтеграцияЗЕРНОСлужебный.СсылкаПоИдентификатору(ПараметрыОбмена, ИмяТаблицы, ДанныеПоСвойству.Идентификатор);
			
			Если Не ЗначениеЗаполнено(СправочникСсылка) Тогда
				СправочникСсылка = ЗагрузитьКлючОрганизации(ДанныеПоСвойству, ПараметрыОбмена,, Ложь);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтрШаблон(
				НСтр("ru = 'Ошибка при создании справочника %1 с идентификатором %2:
				           |%3'"),
				Метаданные.Справочники.КлючиАдресовЗЕРНО.Синоним,
				ДанныеПоСвойству.Идентификатор,
				ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ТекстОшибкиПодробно = СтрШаблон(
				НСтр("ru = 'Ошибка при создании справочника %1 с идентификатором %2:
				           |%3'"),
				Метаданные.Справочники.КлючиРеквизитовОрганизацийЗЕРНО.Синоним,
				ДанныеПоСвойству.Идентификатор,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
				ТекстОшибкиПодробно,
				НСтр("ru = 'Работа с ключами организаций'", ОбщегоНазначения.КодОсновногоЯзыка()));
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат СправочникСсылка;
	
КонецФункции

Функция ЗагрузитьКлючОрганизации(ДанныеПоСвойству, ПараметрыОбмена, СуществующийОбъект = Неопределено, ТребуетсяПоиск = Истина) Экспорт
	
	ЗаписьНового       = Ложь;
	МетаданныеЭлемента = Метаданные.Справочники.КлючиРеквизитовОрганизацийЗЕРНО;
	Идентификатор      = ДанныеПоСвойству.Идентификатор;
	
	Если СуществующийОбъект = Неопределено Тогда
		
		СуществующийЭлемент = Неопределено;
		Если ТребуетсяПоиск Тогда
			СуществующийЭлемент = ИнтеграцияЗЕРНОСлужебный.СсылкаПоИдентификатору(
				ПараметрыОбмена,
				МетаданныеЭлемента.ПолноеИмя(),
				Идентификатор);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СуществующийЭлемент) Тогда
			СуществующийОбъект = СоздатьЭлемент();
			СуществующийОбъект.Идентификатор  = Идентификатор;
			СуществующийОбъект.ТипОрганизации = ДанныеПоСвойству.ТипОрганизации;
			ЗаписьНового = Истина;
		Иначе
			СуществующийОбъект = СуществующийЭлемент.ПолучитьОбъект();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗаписьНового Тогда
		СуществующийОбъект.ОрганизацияКонтрагент = ДанныеПоСвойству.Сопоставление;
	Иначе
		СуществующийОбъект.Заблокировать();
	КонецЕсли;
	
	ЭлементДанных = ДанныеПоСвойству.Данные;
	
	Если СуществующийОбъект.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ЮридическоеЛицо Тогда
		СуществующийОбъект.Наименование = ЭлементДанных.Name;
		СуществующийОбъект.ИНН          = ЭлементДанных.INN;
		СуществующийОбъект.КПП          = ЭлементДанных.KPP;
		СуществующийОбъект.ОГРН         = ЭлементДанных.OGRN;
		Если ЭлементДанных.Address <> Неопределено
			И ЗначениеЗаполнено(ЭлементДанных.Address.Address) Тогда
			СуществующийОбъект.ЮридическийАдрес = ЭлементДанных.Address.Address;
			СуществующийОбъект.Индекс           = ЭлементДанных.Address.PostalCode;
			Если ЭлементДанных.Address.Свойство("OBJECTGUID") Тогда
				СуществующийОбъект.ИдентификаторАдреса = ЭлементДанных.Address.OBJECTGUID;
			КонецЕсли;
			Если ЭлементДанных.Address.Свойство("ОКТМО") Тогда
				СуществующийОбъект.ОКТМО = ЭлементДанных.Address.ОКТМО;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли СуществующийОбъект.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИндивидуальныйПредприниматель Тогда
		СуществующийОбъект.ИНН      = ЭлементДанных.INN;
		СуществующийОбъект.ОГРН     = ЭлементДанных.OGRN;
		СуществующийОбъект.Фамилия  = ЭлементДанных.FamilyName;
		СуществующийОбъект.Имя      = ЭлементДанных.FirstName;
		СуществующийОбъект.Отчество = ЭлементДанных.Patronymic;
		Если ЭлементДанных.Address <> Неопределено
			И ЗначениеЗаполнено(ЭлементДанных.Address.Address) Тогда
			СуществующийОбъект.ЮридическийАдрес = ЭлементДанных.Address.Address;
			СуществующийОбъект.Индекс           = ЭлементДанных.Address.PostalCode;
			Если ЭлементДанных.Address.Свойство("OBJECTGUID") Тогда
				СуществующийОбъект.ИдентификаторАдреса = ЭлементДанных.Address.OBJECTGUID;
			КонецЕсли;
			Если ЭлементДанных.Address.Свойство("ОКТМО") Тогда
				СуществующийОбъект.ОКТМО = ЭлементДанных.Address.ОКТМО;
			КонецЕсли;
		КонецЕсли;
		ДанныеНазвания = Новый Массив();
		ДанныеНазвания.Добавить(СуществующийОбъект.Фамилия);
		ДанныеНазвания.Добавить(СуществующийОбъект.Имя);
		Если ЗначениеЗаполнено(СуществующийОбъект.Отчество) Тогда
			ДанныеНазвания.Добавить(СуществующийОбъект.Отчество);
		КонецЕсли;
		СуществующийОбъект.Наименование = СтрСоединить(ДанныеНазвания, " ");
	ИначеЕсли СуществующийОбъект.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация Тогда
		СуществующийОбъект.Наименование = ЭлементДанных.Name;
		СуществующийОбъект.ИНН          = ЭлементДанных.INN;
		СуществующийОбъект.КПП          = ЭлементДанных.KPP;
		СуществующийОбъект.КодАльфа3 = ИнтеграцияЗЕРНОСлужебный.КодАльфа3ПоСтранеXDTO(ЭлементДанных);
		Если ЭлементДанных.Address <> Неопределено
			И ЗначениеЗаполнено(ЭлементДанных.Address.Address) Тогда
			СуществующийОбъект.ЮридическийАдрес = ЭлементДанных.Address.Address;
			СуществующийОбъект.Индекс           = ЭлементДанных.Address.PostalCode;
		КонецЕсли;
	ИначеЕсли СуществующийОбъект.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ Тогда
		СуществующийОбъект.Наименование = ЭлементДанных.Name;
		СуществующийОбъект.КодАльфа3 = ИнтеграцияЗЕРНОСлужебный.КодАльфа3ПоСтранеXDTO(ЭлементДанных);
		Если ЭлементДанных.Address <> Неопределено
			И ЗначениеЗаполнено(ЭлементДанных.Address.Address) Тогда
			СуществующийОбъект.ЮридическийАдрес = ЭлементДанных.Address.Address;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СуществующийОбъект.Наименование) Тогда
		СуществующийОбъект.Наименование = НСтр("ru = '<Не указано>'");
	КонецЕсли;
	
	СуществующийОбъект.Записать();
	
	ИнтеграцияЗЕРНОСлужебный.ОбновитьСсылку(ПараметрыОбмена, МетаданныеЭлемента.ПолноеИмя(), Идентификатор, СуществующийОбъект.Ссылка);
	
	Возврат СуществующийОбъект.Ссылка;
	
КонецФункции

Функция ДанныеОрганизацииПоЗаполенномуСвойству(ДанныеОрганизации, ПараметрыОбмена, Сопоставление = Неопределено) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ТипОрганизации", Неопределено);
	ВозвращаемоеЗначение.Вставить("Данные",         Неопределено);
	ВозвращаемоеЗначение.Вставить("Идентификатор",  Неопределено);
	ВозвращаемоеЗначение.Вставить("Сопоставление",  Сопоставление);
	
	Для Каждого КлючИЗначение Из ПараметрыОбмена.ПараметрыПреобразования.ТипыОрганизацийПоИменамСвойств Цикл
		ПараметрыТипа = КлючИЗначение.Значение;
		Если ДанныеОрганизации.Свойство(ПараметрыТипа.ИмяПоля, ВозвращаемоеЗначение.Данные)
			И ЗначениеЗаполнено(ВозвращаемоеЗначение.Данные) Тогда
			ВозвращаемоеЗначение.ТипОрганизации = ПараметрыТипа.ТипОрганизации;
			ПоляКлюча                           = ПоляСоставногоКлючаПоТипуОрганизации(ВозвращаемоеЗначение.ТипОрганизации);
			ВозвращаемоеЗначение.Данные         = ДанныеОрганизации[ПараметрыТипа.ИмяПоля];
			ВозвращаемоеЗначение.Идентификатор  = ИнтеграцияЗЕРНОСлужебный.СоставнойКлючОбъекта(
				ВозвращаемоеЗначение.Данные, ПоляКлюча);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ПоляСоставногоКлючаПоТипуОрганизации(ТипОрганизации) Экспорт
	
	ВозвращаемоеЗначение = Новый Массив();
	
	Если ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ЮридическоеЛицо Тогда
		ВозвращаемоеЗначение.Добавить("INN");
		ВозвращаемоеЗначение.Добавить("KPP");
		ВозвращаемоеЗначение.Добавить("OGRN");
		ВозвращаемоеЗначение.Добавить("Name");
	ИначеЕсли ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИндивидуальныйПредприниматель Тогда
		ВозвращаемоеЗначение.Добавить("INN");
		ВозвращаемоеЗначение.Добавить("OGRN");
		ВозвращаемоеЗначение.Добавить("FamilyName");
		ВозвращаемоеЗначение.Добавить("FirstName");
		ВозвращаемоеЗначение.Добавить("Patronymic");
	ИначеЕсли ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация Тогда
		ВозвращаемоеЗначение.Добавить("INN");
		ВозвращаемоеЗначение.Добавить("KPP");
		ВозвращаемоеЗначение.Добавить("Name");
	ИначеЕсли ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ Тогда
		ВозвращаемоеЗначение.Добавить("Name");
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

Функция ТекстОшибкиНеЗаполненЮридическийАдресКлючаРеквизитовОрганизации(КлючРеквизитов)
	
	Возврат СтрШаблон(
		НСтр("ru = 'не удалось определить юридический адрес  %1.
		           |Для обновления данных ключей организаций выполните загрузку остатков.'"),
		Строка(КлючРеквизитов))
	
КонецФункции

Функция ТекстОшибкиЮридическийАдресКлючаРеквизитовОрганизацииАдресВСвободнойФорме(КлючРеквизитов)
	
	Возврат СтрШаблон(
		НСтр("ru = 'не удалось получить OBJECTGUID или OKTMO при разборе адреса %1.
		           |Проверьте, что в карточке партии у производителя есть сопоставленный контрагент с юридическим адресом, заполненным по классификатору адресов.'"),
		Строка(КлючРеквизитов));
	
КонецФункции

#КонецОбласти

#КонецЕсли
