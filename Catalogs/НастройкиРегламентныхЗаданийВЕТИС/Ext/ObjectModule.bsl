#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьДубли(Отказ);
	
	Если Не Отказ Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Если ЗначениеЗаполнено(РегламентноеЗадание) Тогда
			Задание = РегламентныеЗаданияСервер.Задание(РегламентноеЗадание);
		Иначе
			Задание = Неопределено;
		КонецЕсли;
		
		Если Задание = Неопределено Тогда
			ПараметрыЗадания = Новый Структура;
			ПараметрыЗадания.Вставить("Метаданные",    Метаданные.РегламентныеЗадания.ОтправкаПолучениеДанныхВЕТИС);
			ПараметрыЗадания.Вставить("Использование", Ложь);
			ПараметрыЗадания.Вставить("Наименование",  Наименование);
			ПараметрыЗадания.Вставить("Ключ",          Строка(Новый УникальныйИдентификатор));
			
			Если ЗначениеЗаполнено(Ссылка) Тогда
				ЭтаСсылка = Ссылка;
			Иначе
				ЭтаСсылка = Справочники.НастройкиРегламентныхЗаданийВЕТИС.ПолучитьСсылку();
				УстановитьСсылкуНового(ЭтаСсылка);
			КонецЕсли;
			
			Параметры = Новый Массив;
			Параметры.Добавить(ЭтаСсылка);
			ПараметрыЗадания.Вставить("Параметры", Параметры);
			
			Задание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
			
			РегламентноеЗадание = РегламентныеЗаданияСервер.УникальныйИдентификатор(Задание);
		КонецЕсли;
		
		ДополнительныеСвойства.Вставить("Задание", Задание);
		
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Если ДополнительныеСвойства.Свойство("Задание") Тогда
			
			ПараметрыЗадания = Новый Структура;
			
			Если ДополнительныеСвойства.Свойство("Расписание") 
				И ТипЗнч(ДополнительныеСвойства.Расписание) = Тип("РасписаниеРегламентногоЗадания") Тогда
				ПараметрыЗадания.Вставить("Расписание", ДополнительныеСвойства.Расписание);
			КонецЕсли;
			
			Если ПометкаУдаления Тогда
				ПараметрыЗадания.Вставить("Использование", Ложь);
			ИначеЕсли ДополнительныеСвойства.Свойство("Использование") Тогда
				ПараметрыЗадания.Вставить("Использование", ДополнительныеСвойства.Использование);
			КонецЕсли;
			
			ПараметрыЗадания.Вставить("Наименование", Наименование);
			
			Параметры = Новый Массив;
			Параметры.Добавить(Ссылка);
			ПараметрыЗадания.Вставить("Параметры", Параметры);
			
			УстановитьПривилегированныйРежим(Истина);
			РегламентныеЗаданияСервер.ИзменитьЗадание(РегламентноеЗадание, ПараметрыЗадания);
			
		КонецЕсли;
	
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И ЗначениеЗаполнено(РегламентноеЗадание) Тогда
		УстановитьПривилегированныйРежим(Истина);
		РегламентныеЗаданияСервер.УдалитьЗадание(РегламентноеЗадание);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РегламентноеЗадание = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДубли(Отказ)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",               Ссылка);
	Запрос.УстановитьПараметр("ХозяйствующийСубъект", ХозяйствующийСубъект);
	
	Если Предприятия.Количество() = 0 Тогда
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиОбменаВЕТИС.Представление КАК НастройкаОбменаПредставление,
		|	НастройкиОбменаВЕТИС.ХозяйствующийСубъект.Представление КАК ХозяйствующийСубъектПредставление
		|ИЗ
		|	Справочник.НастройкиРегламентныхЗаданийВЕТИС КАК НастройкиОбменаВЕТИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиРегламентныхЗаданийВЕТИС.Предприятия КАК НастройкиОбменаВЕТИСПредприятия
		|		ПО НастройкиОбменаВЕТИС.Ссылка = НастройкиОбменаВЕТИСПредприятия.Ссылка
		|ГДЕ
		|	НастройкиОбменаВЕТИС.Ссылка <> &Ссылка
		|	И НЕ НастройкиОбменаВЕТИС.ПометкаУдаления
		|	И НастройкиОбменаВЕТИС.ХозяйствующийСубъект = &ХозяйствующийСубъект
		|	И НастройкиОбменаВЕТИСПредприятия.Ссылка ЕСТЬ NULL";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр
				("ru = 'По хозяйствующему субъекту %1 уже существует настройка обмена %2'"),
				Выборка.ХозяйствующийСубъектПредставление,
				Выборка.НастройкаОбменаПредставление));
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("Предприятия", Предприятия.ВыгрузитьКолонку("Предприятие"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиОбменаВЕТИСПредприятия.Ссылка.Представление КАК НастройкаОбменаПредставление,
		|	НастройкиОбменаВЕТИСПредприятия.Предприятие.Представление КАК ПредприятиеПредставление
		|ИЗ
		|	Справочник.НастройкиРегламентныхЗаданийВЕТИС.Предприятия КАК НастройкиОбменаВЕТИСПредприятия
		|ГДЕ
		|	НастройкиОбменаВЕТИСПредприятия.Ссылка <> &Ссылка
		|	И НЕ НастройкиОбменаВЕТИСПредприятия.Ссылка.ПометкаУдаления
		|	И НастройкиОбменаВЕТИСПредприятия.Ссылка.ХозяйствующийСубъект = &ХозяйствующийСубъект
		|	И НастройкиОбменаВЕТИСПредприятия.Предприятие В (&Предприятия)";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
			Отказ = Истина;
			Пока Выборка.Следующий() Цикл
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр
					("ru = 'По предприятию %1 уже существует настройка обмена %2'"),
					Выборка.ПредприятиеПредставление,
					Выборка.НастройкаОбменаПредставление));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли