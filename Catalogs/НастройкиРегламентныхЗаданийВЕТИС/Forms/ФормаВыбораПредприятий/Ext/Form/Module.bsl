#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ХозяйствующийСубъект   = Параметры.ХозяйствующийСубъект;
	ТекущаяНастройкаОбмена = Параметры.ТекущаяНастройкаОбмена;
	ВыбранныеПредприятия.ЗагрузитьЗначения(Параметры.ВыбранныеПредприятия);
	
	Если ВыбранныеПредприятия.Количество() = 0 Тогда
		РежимОтбора = 1;
	КонецЕсли;
	
	ЗаполнитьТаблицуПредприятий();
	УстановитьДоступностьВидимость(ЭтотОбъект);
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимОтбораПриИзменении(Элемент)
	
	ЗаполнитьТаблицуПредприятий();
	УстановитьДоступностьВидимость(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПредприятия

&НаКлиенте
Процедура ПредприятияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.НастройкаОбмена) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Элемент.ТекущиеДанные.НастройкаОбмена);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьТаблицуПредприятий(Команда)
	
	ЗаполнитьТаблицуПредприятий();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВыбор(Команда)
	
	Результат = Новый Массив;
	Для Каждого Строка Из Предприятия Цикл
		Если Строка.Пометка Тогда
			Результат.Добавить(Строка.Предприятие);
		КонецЕсли;
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Предприятия.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ПредприятияНастройкаОбмена.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьВидимость(Форма)
	
	Форма.Элементы.ПредприятияНастройкаОбмена.Видимость = Форма.РежимОтбора = 2;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПредприятий()
	
	Предприятия.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ХозяйствующийСубъект",   ХозяйствующийСубъект);
	Запрос.УстановитьПараметр("ТекущаяНастройкаОбмена", ТекущаяНастройкаОбмена);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозяйствующиеСубъектыВЕТИСПредприятия.Предприятие КАК Предприятие,
	|	НастройкиРегламентныхЗаданийВЕТИСПредприятия.Ссылка КАК НастройкаОбмена,
	|	ХозяйствующиеСубъектыВЕТИСПредприятия.Предприятие.Наименование КАК ПредприятиеНаименование,
	|	ХозяйствующиеСубъектыВЕТИСПредприятия.Предприятие.АдресПредставление КАК ПредприятиеАдрес,
	|	0 КАК Порядок
	|ИЗ
	|	Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ХозяйствующиеСубъектыВЕТИСПредприятия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиРегламентныхЗаданийВЕТИС.Предприятия КАК
	|			НастройкиРегламентныхЗаданийВЕТИСПредприятия
	|		ПО ХозяйствующиеСубъектыВЕТИСПредприятия.Ссылка = НастройкиРегламентныхЗаданийВЕТИСПредприятия.Ссылка.ХозяйствующийСубъект
	|		И ХозяйствующиеСубъектыВЕТИСПредприятия.Предприятие = НастройкиРегламентныхЗаданийВЕТИСПредприятия.Предприятие
	|		И НастройкиРегламентныхЗаданийВЕТИСПредприятия.Ссылка <> &ТекущаяНастройкаОбмена
	|		И НЕ НастройкиРегламентныхЗаданийВЕТИСПредприятия.Ссылка.ПометкаУдаления
	|ГДЕ
	|	ХозяйствующиеСубъектыВЕТИСПредприятия.Ссылка = &ХозяйствующийСубъект
	|	И НЕ ХозяйствующиеСубъектыВЕТИСПредприятия.НеИспользовать
	|	И &УсловиеОтбора1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка) КАК Предприятие,
	|	НастройкиРегламентныхЗаданийВЕТИСПредприятия.Ссылка КАК НастройкаОбмена,
	|	"""",
	|	"""",
	|	1
	|Из
	|	Справочник.ХозяйствующиеСубъектыВЕТИС КАК ХозяйствующиеСубъектыВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиРегламентныхЗаданийВЕТИС.Предприятия КАК
	|			НастройкиРегламентныхЗаданийВЕТИСПредприятия
	|		ПО ХозяйствующиеСубъектыВЕТИС.Ссылка = НастройкиРегламентныхЗаданийВЕТИСПредприятия.Ссылка.ХозяйствующийСубъект
	|		И НастройкиРегламентныхЗаданийВЕТИСПредприятия.Предприятие = ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка)
	|		И НастройкиРегламентныхЗаданийВЕТИСПредприятия.Ссылка <> &ТекущаяНастройкаОбмена
	|		И НЕ НастройкиРегламентныхЗаданийВЕТИСПредприятия.Ссылка.ПометкаУдаления
	|ГДЕ
	|	ХозяйствующиеСубъектыВЕТИС.Ссылка = &ХозяйствующийСубъект
	|	И &УсловиеОтбора2
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	ПредприятиеНаименование";
	
	Если РежимОтбора = 0 Тогда
		Запрос.УстановитьПараметр("Предприятия", ВыбранныеПредприятия);
		УсловиеОтбора1 = "ХозяйствующиеСубъектыВЕТИСПредприятия.Предприятие В (&Предприятия)";
		УсловиеОтбора2 = "ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка) В (&Предприятия)";
	ИначеЕсли РежимОтбора = 1 Тогда
		УсловиеОтбора1 = "НастройкиРегламентныхЗаданийВЕТИСПредприятия.Ссылка ЕСТЬ NULL";
		УсловиеОтбора2 = УсловиеОтбора1;
	Иначе
		УсловиеОтбора1 = "ИСТИНА";
		УсловиеОтбора2 = УсловиеОтбора1;
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбора1", УсловиеОтбора1);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбора2", УсловиеОтбора2);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Строка = Предприятия.Добавить();
		Строка.Предприятие = Выборка.Предприятие;
		Строка.НастройкаОбмена = Выборка.НастройкаОбмена;
		Строка.Пометка = Не ЗначениеЗаполнено(Строка.НастройкаОбмена)
			И ВыбранныеПредприятия.НайтиПоЗначению(Строка.Предприятие) <> Неопределено;
		Если ЗначениеЗаполнено(Строка.Предприятие) Тогда
			Представление = СтрШаблон("%1 (%2)",
						Выборка.ПредприятиеНаименование,
						Выборка.ПредприятиеАдрес);
		Иначе
			Представление = НСтр("ru = '<Без предприятия>'");
		КонецЕсли;
		Строка.Представление = Представление;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
