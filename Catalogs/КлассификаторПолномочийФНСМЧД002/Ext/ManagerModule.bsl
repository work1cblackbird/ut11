#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ОбновлениеВерсииИБ

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбработкаЗавершена = Ложь;
	
	НачатьТранзакцию();
	Попытка
		
		ДвоичныеДанныеКлассификатора = ПолучитьМакет("ДвоичныеДанныеКлассификатора");
		
		ДанныеКэша = СервисНастроекЭДО.ОбработкаРезультатаКлассификаторПолномочийФНС_МЧД002(ДвоичныеДанныеКлассификатора);
		Если ДанныеКэша <> Неопределено Тогда
			МашиночитаемыеДоверенности.ОбновитьКлассификаторПолномочийФНС_МЧД002(ДанныеКэша);
		КонецЕсли;
		
		ОбработкаЗавершена = Истина;
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		
		ТекстСообщения = НСтр("ru = 'Не удалось заполнить классификатор полномочий ФНС (МЧД 002) по причине:'") + Символы.ПС 
			+ ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,,, ТекстСообщения);
	КонецПопытки;
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюНачальноеЗаполнение(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК ЕстьЗаписи
		|ИЗ
		|	Справочник.КлассификаторПолномочийФНСМЧД002 КАК КлассификаторПолномочийФНСМЧД002";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ОбновлениеВерсииИБ

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
// Читает таблицу упрощенных настроек правила проверки полномочий.
// 
// Параметры:
//  ЭлементКлассификатора - СправочникСсылка.КлассификаторПолномочийФНСМЧД002
// 
// Возвращаемое значение:
//  ТаблицаЗначений - если настройки присутствуют, то содержит колонки:
//  * ИмяПоляДанных     - Строка
//  * НачальноеЗначение - Булево
//                      - Число
//  * КонечноеЗначение  - Булево
//                      - Число
//  * Список            - ХранилищеЗначения
Функция ТаблицаНастроекОтбора(ЭлементКлассификатора) Экспорт
	
	Результат = Новый ТаблицаЗначений();
	
	Если ЗначениеЗаполнено(ЭлементКлассификатора) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	КлассификаторПолномочийФНС.ИмяПоляДанных,
			|	КлассификаторПолномочийФНС.НачальноеЗначение,
			|	КлассификаторПолномочийФНС.КонечноеЗначение,
			|	КлассификаторПолномочийФНС.Список
			|ИЗ
			|	Справочник.КлассификаторПолномочийФНСМЧД002.НастройкиПроверки КАК КлассификаторПолномочийФНС
			|ГДЕ
			|	КлассификаторПолномочийФНС.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ЭлементКлассификатора);
		Результат = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Найти полномочие по коду.
// 
// Параметры:
//  КодКлассификатора - Строка
// 
// Возвращаемое значение:
//  СправочникСсылка.КлассификаторПолномочийФНСМЧД002 - ссылка на элемент справочника
Функция НайтиПолномочиеПоКоду(КодКлассификатора) Экспорт
	
	Если СтрДлина(КодКлассификатора) = 1
		И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодКлассификатора) Тогда
		КодКлассификатора = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(КодКлассификатора, 2);
	КонецЕсли;
		
	Если ЗначениеЗаполнено(КодКлассификатора) Тогда
		
		Возврат НайтиПоРеквизиту("КодКлассификатора", КодКлассификатора);
		
	Иначе
		
		Возврат ПустаяСсылка();
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли