#Область ОбработчикиСобытийФормы

// Код процедур и функций
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивНесопоставленныхКлючей = Новый Массив;
	Если Параметры.Свойство("КлючиАдресовКСопоставлению") Тогда
		МассивНесопоставленныхКлючей = Параметры.КлючиАдресовКСопоставлению;
	КонецЕсли;
	
	Если МассивНесопоставленныхКлючей.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Отсутствуют данные для сопоставления'"),,,,
			Отказ);
		Возврат;
	КонецЕсли;
	
	Для Каждого НесопоставленныйКлюч Из МассивНесопоставленныхКлючей Цикл
		ТаблицаСопоставлений.Добавить().КлючАдреса = НесопоставленныйКлюч;
	КонецЦикла;
	
	// РаботаСПолямимСоставногоТипа
	СобытияФормИС.ПоляСоставногоТипаИнициализация(ЭтотОбъект, ИменаЭлементовПолейСоставногоТипа());
	// Конец РаботаСПолямимСоставногоТипа
	
	УстановитьУсловноеОформление();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ВРег(Лев(ИмяСобытия, 6)) = "ЗАПИСЬ" Тогда
		
		// РаботаСПолямимСоставногоТипа
		СобытияФормИСКлиент.ПолеСоставногоТипаОбработатьИзменениеДанных(ЭтотОбъект, Источник);
		// Конец РаботаСПолямимСоставногоТипа
		
		Если ИмяСобытия = "Запись_КлючиАдресовИСМП" Тогда
			
			СтруктураОтбора = Новый Структура("КлючАдреса", Источник);
			СтрокиПоКлючу = ТаблицаСопоставлений.НайтиСтроки(СтруктураОтбора);
			
			Если СтрокиПоКлючу.Количество() = 0 Тогда
				Возврат;
			КонецЕсли;
			
			ОформитьСтрокуПодсказкиУстановкиСоответствияКлючейАдресов(СтрокиПоКлючу[0].ПолучитьИдентификатор());
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияСобытияФормИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСопоставлений

&НаКлиенте
Процедура ТаблицаСопоставленийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаСопоставлений.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Поле = Элементы.ТаблицаСопоставленийКлючАдреса Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.КлючАдреса);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСопоставленийПредставлениеСопоставленияПриИзменении(Элемент)
	ПолеСоставногоТипаПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСопоставленийПредставлениеСопоставленияОткрытие(Элемент, СтандартнаяОбработка)
	ПолеСоставногоТипаОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСопоставленийПредставлениеСопоставленияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ПолеСоставногоТипаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСопоставленийПредставлениеСопоставленияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ПолеСоставногоТипаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСопоставленийПредставлениеСопоставленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПолеСоставногоТипаАвтоПодбор(Элемент, Элемент.ТекстРедактирования, ДанныеВыбора, Неопределено, 0, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаСПолямиСоставногоТипа

&НаКлиенте
Процедура ПолеСоставногоТипаПриИзменении(Элемент)	
	
	СобытияФормИСКлиент.ПолеСоставногоТипаПриИзменении(ЭтотОбъект, Элемент);
	
	ТекущиеДанные = Элементы.ТаблицаСопоставлений.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаСопоставленияДляКлюча(ТекущиеДанные.ТорговыйОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеСоставногоТипаОткрытие(Элемент, СтандартнаяОбработка)
	СобытияФормИСКлиент.ПолеСоставногоТипаОткрытие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПолеСоставногоТипаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СобытияФормИСКлиент.ПолеСоставногоТипаОбработкаВыбора(ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ВыбранноеЗначение, "Ссылка") Тогда
			ОбработкаСопоставленияДляКлюча(ВыбранноеЗначение.Ссылка);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ОбработкаСопоставленияДляКлюча(ВыбранноеЗначение);
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеСоставногоТипаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СобытияФормИСКлиент.ПолеСоставногоТипаАвтоПодбор(ЭтотОбъект,
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИменаЭлементовПолейСоставногоТипа()
	Возврат "ТаблицаСопоставленийПредставлениеСопоставления";
КонецФункции

&НаКлиенте
Процедура ПолеСоставногоТипаОкончаниеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	СобытияФормИСКлиент.ПолеСоставногоТипаОкончаниеВыбора(ЭтотОбъект, Результат, ДополнительныеПараметры);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Результат, "Ссылка") Тогда
			ОбработкаСопоставленияДляКлюча(Результат.Ссылка);
		КонецЕсли;
 	ИначеЕсли ЗначениеЗаполнено(Результат) Тогда
		ОбработкаСопоставленияДляКлюча(Результат);
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОформитьСтрокуПодсказкиУстановкиСоответствияКлючейАдресов(ИдентификаторСтрокиТаблицы)
	
	СтрокаПредставления = "";
	СтрокаТаблицы       = ТаблицаСопоставлений.НайтиПоИдентификатору(ИдентификаторСтрокиТаблицы);
	
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивОператоровАдреса               = СформироватьОператоровАдресаПоКлючу(СтрокаТаблицы.КлючАдреса);
	СтрокаПредставления                  = СтрСоединить(МассивОператоровАдреса, ", ");
	СтрокаТаблицы.ТорговыйОбъектСтрокой = СтрокаПредставления; 
	
	Если МассивОператоровАдреса.Количество() = 1 Тогда
		СтрокаТаблицы.ТорговыйОбъект    = МассивОператоровАдреса[0];
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьОператоровАдресаПоКлючу(КлючАдреса)
	
	МассивВозврата = Новый Массив; // Массив из ОпределяемыйТип.ТорговыйОбъектИСМП
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КлючиАдресовИСМПОператорыАдреса.ТорговыйОбъект КАК ТорговыйОбъект
		|ИЗ
		|	Справочник.КлючиАдресовИСМП.ОператорыАдреса КАК КлючиАдресовИСМПОператорыАдреса
		|ГДЕ
		|	КлючиАдресовИСМПОператорыАдреса.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", КлючАдреса);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивВозврата.Добавить(ВыборкаДетальныеЗаписи.ТорговыйОбъект);
	КонецЦикла;
	
	Возврат МассивВозврата;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаСопоставленияДляКлюча(ВыбранноеЗначениеСопоставления)
	
	ТекущиеДанные = Элементы.ТаблицаСопоставлений.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РезультатВыполнения = ОбновитьСопоставлениеКлючаАдреса(ТекущиеДанные.КлючАдреса, ВыбранноеЗначениеСопоставления);
	
	Если ЗначениеЗаполнено(РезультатВыполнения) Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Операция не может быть выполнена по причине:'") + Символы.ПС + РезультатВыполнения);
		
		ТекущиеДанные.ТорговыйОбъект        = Неопределено;
		ТекущиеДанные.ТорговыйОбъектСтрокой = "";
	
	Иначе
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Изменение'"), 
			ПолучитьНавигационнуюСсылку(ТекущиеДанные.КлючАдреса), 
			Строка(ТекущиеДанные.КлючАдреса),
			БиблиотекаКартинок.Информация32);
			
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьСопоставлениеКлючаАдреса(КлючАдреса, ЗначениеСопоставления)
	
	ОписаниеОшибки   = "";
	ОбъектКлючАдреса = КлючАдреса.ПолучитьОбъект();
	
	Если ОбъектКлючАдреса.ОператорыАдреса.Количество() Тогда
		ОбъектКлючАдреса.ОператорыАдреса.Очистить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначениеСопоставления) Тогда
		
		НоваяСтрока                 = ОбъектКлючАдреса.ОператорыАдреса.Добавить();
		НоваяСтрока.ТорговыйОбъект = ЗначениеСопоставления;
	
	КонецЕсли;
	
	Попытка
		ОбъектКлючАдреса.Записать();
	Исключение
		
		ДанныеОбОшибке = ИнформацияОбОшибке();
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Выполнение операции'"),
			УровеньЖурналаРегистрации.Ошибка,,,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ДанныеОбОшибке));
		
		ОписаниеОшибки = ОбработкаОшибок.КраткоеПредставлениеОшибки(ДанныеОбОшибке);
		
	КонецПопытки;
	
	Возврат ОписаниеОшибки;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Использование = Истина;
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаСопоставлений.ТорговыйОбъектСтрокой");
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСопоставленийПредставлениеСопоставления.Имя);
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаТребуетВниманияГосИС);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не сопоставлено>'"));
	
КонецПроцедуры

#КонецОбласти