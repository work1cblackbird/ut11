#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПравоДобавления = ПравоДоступа("Добавление", Метаданные.Справочники.КлассификаторОрганизацийСАТУРН);
	ЦветГиперссылки = ЦветаСтиля.ЦветГиперссылкиГосИС;
	
	ОбработатьПереданныеПараметры(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьЭлементыФормыПриСоздании();
	УстановитьЗаголовокФормы();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_КлассификаторОрганизацийСАТУРН"
		И ТипЗнч(Параметр) = Тип("СправочникСсылка.КлассификаторОрганизацийСАТУРН") Тогда
		
		Элементы.Список.Обновить();
		Элементы.Список.ТекущаяСтрока = Источник;
		
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагруженные;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеПараметровПоискаВКлассификатореОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьФормуПараметрыПоиска" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ПараметрыПоиска", ПараметрыПоиска);
		
		ОткрытьФорму(
			"Справочник.КлассификаторОрганизацийСАТУРН.Форма.ПараметрыПоиска",
			ПараметрыОткрытия,
			ЭтотОбъект,,,,
			Новый ОписаниеОповещения("ОбработатьПараметрыПоискаВКлассификаторе", ЭтотОбъект));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыФормыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если РежимВыбора Тогда
		
		Если ТекущаяСтраница  = Элементы.СтраницаЗагруженные Тогда
			
			Элементы.СписокВыбрать.КнопкаПоУмолчанию = Истина;
			
		Иначе
			
			Элементы.ВыбратьИзКлассификатора.КнопкаПоУмолчанию = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ПереключениеМеждуСтраницамиВыполнялось
		И РежимВыбора
		И (ЗначениеЗаполнено(ИНН) Или ЗначениеЗаполнено(КПП)) Тогда
		
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("Тип", ТипОрганизации); 
		
		Если Не ПустаяСтрока(ИНН) Тогда
			ПараметрыПоиска.Вставить("ИНН", ИНН);
		КонецЕсли;
		
		Если Не ПустаяСтрока(КПП) Тогда
			ПараметрыПоиска.Вставить("КПП", КПП);
		КонецЕсли;
		
		ОбработатьНайденныеОрганизации(1);
		
	КонецЕсли;
	
	ПереключениеМеждуСтраницамиВыполнялось = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНеСопоставленоПриИзменении(Элемент)
	
	ПриИзмененииОтбораСопоставление(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНеСопоставленоОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСоответствуетПриИзменении(Элемент)
	
	ПриИзмененииОтбораЧемуСоответствует();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСоответствуетОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИННОтборПриИзменении(Элемент)
	
	ПриИзмененииОтбораИНН(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КППОтборПриИзменении(Элемент)
	
	ПриИзмененииОтбораКПП(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПриВыбореИзЗагруженных();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ДанныеДляПоиска = Новый Массив();
	Для Каждого Строка Из Строки Цикл
		Если Не ЗначениеЗаполнено(Строка.Значение.Данные.Контрагент) Тогда
			Если ДанныеДляПоиска.Найти(Строка.Ключ) = Неопределено Тогда
				ДанныеДляПоиска.Добавить(Строка.Ключ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеДляПоиска.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОрганизацииКонтрагенты = Справочники.КлассификаторОрганизацийСАТУРН.ОрганизацииКонтрагентыПоКлассификаторамСАТУРН(ДанныеДляПоиска);
	
	ЦветТребуетВнимания = ЦветаСтиля.ЦветТекстаТребуетВниманияГосИС;
	
	Для Каждого Строка Из Строки Цикл
		
		Если ЗначениеЗаполнено(Строка.Значение.Данные.Контрагент) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеПоСсылке = ОрганизацииКонтрагенты[Строка.Ключ];
		
		Оформление = Строка.Значение.Оформление["Контрагент"];
		Если Оформление = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗначениеПоСсылке.Организация) Тогда
			
			Оформление.УстановитьЗначениеПараметра("Текст",      Строка(ЗначениеПоСсылке.Организация));
			Оформление.УстановитьЗначениеПараметра("ЦветТекста", Неопределено);
			
		ИначеЕсли ЗначениеЗаполнено(ЗначениеПоСсылке.Контрагент) Тогда
			
			Оформление.УстановитьЗначениеПараметра("Текст",      Строка(ЗначениеПоСсылке.Контрагент));
			Оформление.УстановитьЗначениеПараметра("ЦветТекста", Неопределено);
			
		Иначе
			
			Оформление.УстановитьЗначениеПараметра("Текст",      НСтр("ru = '<не сопоставлено>'"));
			Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветТребуетВнимания);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОрганизацииСАТУРН

&НаКлиенте
Процедура ОрганизацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПриВыбореИзДанныхКлассификатора();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ЗначенияЗаполнения",     ПараметрыПоиска);
	
	ОповещениеПослеСоздания = Новый ОписаниеОповещения("ОрганизацияПослеСоздания", ЭтотОбъект);
	ОткрытьФорму("Справочник.КлассификаторОрганизацийСАТУРН.Форма.ПомощникСоздания", ПараметрыОткрытияФормы, ЭтотОбъект,,,,ОповещениеПослеСоздания);
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКлассификатора(Команда)
	
	ТекущиеДанные = Элементы.ОрганизацииСАТУРН.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, ОбщегоНазначенияИСКлиентСервер.ТекстКомандаНеМожетБытьВыполнена());
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуДанныхКлассификатора(ТекущиеДанные.Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзКлассификатора(Команда)
	
	ПриВыбореИзДанныхКлассификатора();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзЗагруженных(Команда)
	
	ПриВыбореИзЗагруженных();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Отборы

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииОтбораСопоставление(Форма)
	
	ГруппаЭлементовОтбора = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Форма.Список.Отбор.Элементы,
	                                                                                  НСтр("ru = 'Отбор по сопоставлению'"),
	                                                                                  ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	Если Форма.ОтборНеСопоставлено = "ОрганизацияНесопоставлена" Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаЭлементовОтбора,
		                                                     "Контрагент", 
		                                                      , 
		                                                      ВидСравненияКомпоновкиДанных.НеЗаполнено,, 
		                                                      Истина);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОтбораЧемуСоответствует()
	
	ТекстЗапросаДляУсловия = "";
	
	Если ОтборСоответствует = "Организации" Тогда
		ИнтеграцияСАТУРНПереопределяемый.ТекстЗапросаСобственныхОрганизацийПоРеквизитам(ТекстЗапросаДляУсловия);
	ИначеЕсли ОтборСоответствует = "Контрагенты" Тогда
		ИнтеграцияСАТУРНПереопределяемый.ТекстЗапросаСтороннихОрганизацийПоРеквизитам(ТекстЗапросаДляУсловия);
	КонецЕсли;
	
	Если ТекстЗапросаДляУсловия = "" Тогда
		ТекстЗапросаДляУсловия = "ИСТИНА";
	Иначе
		ТекстЗапросаДляУсловия = СтрШаблон("КонтрагентыСАТУРН.Ссылка В (%1)", ТекстЗапросаДляУсловия);
	КонецЕсли;
	
	ЗаголовокТега = "//ОтборПоОрганизацияКонтрагент";
	ПозицияНачало = СтрНайти(Список.ТекстЗапроса, СтрШаблон("%1{", ЗаголовокТега));
	ПозицияКонец  = СтрНайти(Список.ТекстЗапроса, СтрШаблон("%1}", ЗаголовокТега));
	
	Если ПозицияНачало > 0 И ПозицияКонец > 0 И ПозицияНачало < ПозицияКонец Тогда
		Список.ТекстЗапроса = СтрШаблон(
			"%1
			|%2
			|%3",
			Лев(Список.ТекстЗапроса, ПозицияНачало + СтрДлина(ЗаголовокТега)),
			ТекстЗапросаДляУсловия,
			Сред(Список.ТекстЗапроса, ПозицияКонец));
	КонецЕсли;
	
	ОтборНеСопоставлено = "Все";
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииОтбораИНН(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список,
	                                                                        "ИНН", 
	                                                                        Форма.ИНН, 
	                                                                        ВидСравненияКомпоновкиДанных.Равно,, 
	                                                                        ЗначениеЗаполнено(Форма.ИНН));
	
	Если Не ЗначениеЗаполнено(Форма.ИНН) Тогда
		
		Форма.КПП = "";
		ПриИзмененииОтбораКПП(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииОтбораКПП(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список,
	                                                                        "КПП", 
	                                                                        Форма.КПП, 
	                                                                        ВидСравненияКомпоновкиДанных.Равно,, 
	                                                                        ЗначениеЗаполнено(Форма.КПП));

КонецПроцедуры

#КонецОбласти

#Область ИнициализацияФормыИУправлениеЭлементами

&НаСервере
Процедура ОбработатьПереданныеПараметры(Отказ)
	
	РежимВыбора          = Параметры.РежимВыбора;
	ВыборИдентификаторов = Параметры.ВыборИдентификаторов;
	Контрагент           = Параметры.Контрагент;
	
	Если ТипЗнч(Параметры.ПараметрыПоиска) = Тип("Структура") Тогда

		ПараметрыПоиска = Параметры.ПараметрыПоиска;
		ОбработатьНайденныеОрганизации(1);
		
	ИначеЕсли ЗначениеЗаполнено(Контрагент)
		И Метаданные.ОпределяемыеТипы.ОрганизацияКонтрагентГосИС.Тип.Типы().Найти(ТипЗнч(Параметры.Контрагент)) <> Неопределено Тогда
		
		ДанныеКонтрагента = ИнтеграцияСАТУРН.ДанныеКонтрагентаДляПоискаОрганизацииСАТУРН(Параметры.Контрагент);
		
		ИНН            = ДанныеКонтрагента.ИНН;
		КПП            = ДанныеКонтрагента.КПП;
		ТипОрганизации = ?(ЗначениеЗаполнено(ДанныеКонтрагента.Тип), ДанныеКонтрагента.Тип, Перечисления.ТипыОрганизацийСАТУРН.ЮридическоеЛицо);
		
		ПриИзмененииОтбораИНН(ЭтотОбъект);
		ПриИзмененииОтбораКПП(ЭтотОбъект);
		
	Иначе
		
		ПараметрыПоиска = Новый Структура;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.НеСопоставлено) Тогда
		ОтборНеСопоставлено = Параметры.НеСопоставлено;
	Иначе
		ОтборНеСопоставлено = "Все";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Соответствует) Тогда
		ОтборСоответствует = Параметры.Соответствует;
	Иначе
		ОтборСоответствует = "Все";
	КонецЕсли;
	
	ПриИзмененииОтбораСопоставление(ЭтотОбъект);
	ПриИзмененииОтбораЧемуСоответствует();

КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормыПриСоздании()
	
	СформироватьПредставлениеПараметровПоиска(ПараметрыПоиска, Истина);
	
	Элементы.ПоискНеНастроен.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	Элементы.ПоискНеНастроен.ОтображениеСостояния.Текст = НСтр("ru = 'Элементы классификатора не выведены. Настройте отбор и выполните поиск.'");
	Элементы.ПоискНеНастроен.ОтображениеСостояния.Видимость = Истина;
	
	Если РежимВыбора Тогда
		
		Элементы.СписокВыбрать.Видимость                = Истина;
		Элементы.СписокКонтекстноеМенюВыбрать.Видимость = Истина;
		
		Элементы.ОтборСоответствует.ТолькоПросмотр      = ОтборСоответствует <> "Все";
		Элементы.ОтборНеСопоставлено.Видимость          = ОтборНеСопоставлено <> "Все";
		
		Элементы.КППОтбор.Видимость = ЗначениеЗаполнено(Контрагент);
		Элементы.ИННОтбор.Видимость = ЗначениеЗаполнено(Контрагент);
		
	Иначе
		
		Элементы.СписокВыбрать.Видимость                = Ложь;
		Элементы.СписокКонтекстноеМенюВыбрать.Видимость = Ложь;
		
		Элементы.ОтборСоответствует.Видимость  = Истина;
		Элементы.ОтборНеСопоставлено.Видимость = Истина;
		
		Элементы.КППОтбор.Видимость = Ложь;
		Элементы.ИННОтбор.Видимость = Ложь;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
	                                                                  "ЕстьНесопоставленные",
	                                                                   НСтр("ru = 'есть несопоставленные'"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
	                                                                  "ВсеСопоставлено",
	                                                                   НСтр("ru = 'все сопоставлено'"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()

	ТекстЗаголовка = "";
	
	Если РежимВыбора Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Выбор организации САТУРН'");
		
	Иначе
		
		ТекстЗаголовка = НСтр("ru = 'Классификатор организаций САТУРН'");
		
	КонецЕсли;
	
	Заголовок = ТекстЗаголовка;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Загруженные. Отображение неактивными элементы со статусами кроме Актуально
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Статус");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыОбъектовСАТУРН.Актуально;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);
	
	// Классификатор. Отображение неактивными элементы со статусами кроме Актуально
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОрганизацииСАТУРН.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОрганизацииСАТУРН.Статус");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыОбъектовСАТУРН.Актуально;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);

КонецПроцедуры

#КонецОбласти

#Область Поиск

&НаКлиенте
Процедура ОбработатьПараметрыПоискаВКлассификаторе(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПоиска = Результат;
	ОбработатьНайденныеОрганизации(1);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьНайденныеОрганизации(НомерСтраницы)
	
	ОрганизацииСАТУРН.Очистить();
	
	Если ПараметрыПоиска.Свойство("Идентификатор") Тогда
		
		Результат = ИнтерфейсСАТУРНВызовСервера.ОрганизацияПоИдентификатору(ПараметрыПоиска.Идентификатор);
		ДобавитьВСписокНайденнуюОрганизацию(Результат);
		
	ИначеЕсли ПараметрыПоиска.Количество() > 0 Тогда
		
		КоличествоЭлементовНаСтранице = 100;
		Результат = ИнтерфейсСАТУРНВызовСервера.СписокОрганизаций(ПараметрыПоиска, НомерСтраницы, КоличествоЭлементовНаСтранице);
		
		Если Не ЗначениеЗаполнено(Результат.ТекстОшибки)
			И ПараметрыПоиска.Свойство("КПП")
			И Результат.Список <> Неопределено
			И Результат.Список.Количество() = 0 Тогда
			
			ПараметрыПоиска.Удалить("КПП");
			Результат = ИнтерфейсСАТУРНВызовСервера.СписокОрганизаций(ПараметрыПоиска, НомерСтраницы, КоличествоЭлементовНаСтранице);
			
		КонецЕсли;
		
		ЗаполнитьСписокОрганизаций(Результат, НомерСтраницы);
		
	КонецЕсли;
	
	СформироватьПредставлениеПараметровПоиска(ПараметрыПоиска);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуСОрганизацией(ДанныеОрганизации)
	
	ДанныеОрганизации = Справочники.КлассификаторОрганизацийСАТУРН.ДанныеОбъекта(ДанныеОрганизации);
	
	НоваяСтрока = ОрганизацииСАТУРН.Добавить();
	НоваяСтрока.Идентификатор       = ДанныеОрганизации.Идентификатор;
	НоваяСтрока.Статус              = ДанныеОрганизации.Статус;
	НоваяСтрока.ДатаСоздания        = ДанныеОрганизации.ДатаСоздания;
	НоваяСтрока.ДатаИзменения       = ДанныеОрганизации.ДатаИзменения;
	
	НоваяСтрока.Тип                 = ДанныеОрганизации.Тип;
	НоваяСтрока.ИНН                 = ДанныеОрганизации.ИНН;
	НоваяСтрока.КПП                 = ДанныеОрганизации.КПП;
	НоваяСтрока.ОГРН                = ДанныеОрганизации.ОГРН;
	
	НоваяСтрока.ОтветственноеЛицо   = ДанныеОрганизации.ОтветственноеЛицо;
	НоваяСтрока.Телефон             = ДанныеОрганизации.Телефон;
	НоваяСтрока.Email               = ДанныеОрганизации.Email;
	НоваяСтрока.ЮридическийАдрес    = ДанныеОрганизации.ЮридическийАдрес;
	НоваяСтрока.ФактическийАдрес    = ДанныеОрганизации.ФактическийАдрес;
	НоваяСтрока.Наименование        = ДанныеОрганизации.Наименование;
	НоваяСтрока.ЭтоВладелецСклада   = ДанныеОрганизации.ЭтоВладелецСклада;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокОрганизаций(Результат, НомерСтраницы)
	
	Если ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		ОбщегоНазначения.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;

	Для Каждого СтрокаТЧ Из Результат.Список Цикл
		
		ДобавитьСтрокуСОрганизацией(СтрокаТЧ);
		
	КонецЦикла;
	
	ОпределитьНаличиеОрганизацииВИБ();
	
	ОбщееКоличество = Результат.Список.Количество();
	
	Если ОбщееКоличество >= 100 Тогда
		КоличествоСтраниц = 2;
	Иначе
		КоличествоСтраниц = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВСписокНайденнуюОрганизацию(Результат)
	
	Если ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		ОбщегоНазначения.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	Если Результат.Элемент <> Неопределено Тогда
		
		ДобавитьСтрокуСОрганизацией(Результат.Элемент);
		
	КонецЕсли;
	
	ОпределитьНаличиеОрганизацииВИБ();
	
	КоличествоСтраниц = 1;
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаПоискВКлассификаторе;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьНаличиеОрганизацииВИБ()
	
	Если ОрганизацииСАТУРН.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОбмена = ИнтеграцияСАТУРН.ПараметрыОбмена();
	ИмяТаблицы      = Метаданные.Справочники.КлассификаторОрганизацийСАТУРН.ПолноеИмя();
	
	Для Каждого СтрокаТаблицы Из ОрганизацииСАТУРН Цикл
		ИнтеграцияСАТУРНСлужебный.ОбновитьСсылку(ПараметрыОбмена, ИмяТаблицы, СтрокаТаблицы.Идентификатор, Неопределено);
	КонецЦикла;
	
	ИнтеграцияСАТУРНСлужебный.СсылкиПоИдентификаторам(ПараметрыОбмена);
	
	Для Каждого СтрокаТаблицы Из ОрганизацииСАТУРН Цикл
		
		НайденнаяСсылка = ИнтеграцияСАТУРНСлужебный.СсылкаПоИдентификатору(ПараметрыОбмена, ИмяТаблицы, СтрокаТаблицы.Идентификатор);
		Если ЗначениеЗаполнено(НайденнаяСсылка) Тогда
			СтрокаТаблицы.ИндексКартинкиЕстьВБазе = 1;
			СтрокаТаблицы.ОрганизацияСАТУРН       = НайденнаяСсылка;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораНомераСтраницыХозяйствующиеСубъекты(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьНайденныеОрганизации(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область ПредставлениеОтбора

&НаСервере
Процедура СформироватьПредставлениеПараметровПоиска(ПараметрыОтбора, ПриСоздании = Ложь)
	
	СтрокаОтбор = "";
	
	КоличествоПараметровОтбора = 0;
	
	Если ПараметрыОтбора <> Неопределено Тогда
		
		ДобавитьВПредставление(СтрокаОтбор, ПараметрыОтбора, НСтр("ru = 'Тип'"),                  "Тип",                    КоличествоПараметровОтбора);
		ДобавитьВПредставление(СтрокаОтбор, ПараметрыОтбора, НСтр("ru = 'ИНН'"),                  "ИНН",                    КоличествоПараметровОтбора);
		ДобавитьВПредставление(СтрокаОтбор, ПараметрыОтбора, НСтр("ru = 'КПП'"),                  "КПП",                    КоличествоПараметровОтбора);
		ДобавитьВПредставление(СтрокаОтбор, ПараметрыОтбора, НСтр("ru = 'ОГРН'"),                 "ОГРН",                   КоличествоПараметровОтбора);
		ДобавитьВПредставление(СтрокаОтбор, ПараметрыОтбора, НСтр("ru = 'Наименование полное'"),  "НаименованиеПолное",     КоличествоПараметровОтбора);
		ДобавитьВПредставление(СтрокаОтбор, ПараметрыОтбора, НСтр("ru = 'ФИО'"),                  "ФИО",                    КоличествоПараметровОтбора);
		ДобавитьВПредставление(СтрокаОтбор, ПараметрыОтбора, НСтр("ru = 'Тип адреса'"),           "ВидАдресаПредставление", КоличествоПараметровОтбора);
		ДобавитьВПредставление(СтрокаОтбор, ПараметрыОтбора, НСтр("ru = 'Адрес'"),                "ДанныеАдреса",           КоличествоПараметровОтбора);
		ДобавитьВПредставление(СтрокаОтбор, ПараметрыОтбора, НСтр("ru = 'Идентификатор'"),        "Идентификатор",          КоличествоПараметровОтбора);
		
	КонецЕсли;
	
	Если КоличествоПараметровОтбора = 0 Тогда
		
		ПредставлениеОтбора = ПредставлениеПустогоОтбора(ЭтотОбъект, ПриСоздании);
		
	Иначе
		
		ПредставлениеОтбора = ПредставлениеНеПустогоОтбора(СтрокаОтбор, ЭтотОбъект, ПриСоздании);
		
	КонецЕсли;
	
	КоличествоСтраницНесколько = КоличествоСтраниц > 1;
	НулевойРезультат           = ОрганизацииСАТУРН.Количество() = 0;
	
	Элементы.ГруппаИнформацияОНеКорректномЗапросе.Видимость = КоличествоСтраницНесколько И Не НулевойРезультат;
	
	Если ПриСоздании Или КоличествоСтраницНесколько И НулевойРезультат Тогда
		
		Элементы.КартинкаИнформацияНеНастроенПоиск.Видимость = Истина;
		Элементы.Создать.Видимость                           = Ложь;
		Элементы.ВыбратьИзКлассификатора.Видимость           = Ложь;
		
		Элементы.СтраницыКонтрагентыСАТУРН.ТекущаяСтраница = Элементы.СтраницаКонтрагентыСАТУРНПоискНеВыполнен;
		
		Если КоличествоСтраницНесколько Тогда
			Элементы.КартинкаИнформацияНеНастроенПоиск.Видимость = Ложь;
			Элементы.ПоискНеНастроен.ОтображениеСостояния.Текст  =
				НСтр("ru = 'Заданные условия поиска дали слишком много результатов. Уточните реквизиты отбора и выполните поиск.'");
		КонецЕсли;
		
	Иначе
		
		Элементы.КартинкаИнформацияНеНастроенПоиск.Видимость                           = Ложь;
		Элементы.Создать.Видимость                                                     = Не РежимВыбора И КоличествоПараметровОтбора > 0 И ПравоДобавления;
		Элементы.ВыбратьИзКлассификатора.Видимость                                     = РежимВыбора;
		Элементы.ХозяйствующиеСубъектыКонтекстноеМенюВыбратьИзКлассификатора.Видимость = РежимВыбора;
		
		Элементы.СтраницыКонтрагентыСАТУРН.ТекущаяСтраница = Элементы.СтраницаКонтрагентыСАТУРНЭлементы;
		
	КонецЕсли;
	
	ПредставлениеПараметровПоиска = ПредставлениеОтбора;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВПредставление(Представление, ПараметрыОтбора, ПредставлениеПоля, ИмяПоля, КоличествоПараметров)
	
	Если ПараметрыОтбора.Свойство(ИмяПоля) Тогда
		
		Если ТипЗнч(ПараметрыОтбора[ИмяПоля]) = Тип("Структура")
			И ПараметрыОтбора[ИмяПоля].Свойство("Представление") Тогда
			Значение = ПараметрыОтбора[ИмяПоля].Представление;
		Иначе
			Значение = ПараметрыОтбора[ИмяПоля];
		КонецЕсли;
		
		КоличествоПараметров = КоличествоПараметров + 1;
		
	Иначе
		
		Значение = Неопределено;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Значение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяПоля = "ФИО" 
		Или ИмяПоля = "НаименованиеПолное"
		Или ИмяПоля = "Наименование" Тогда
		
		Разделитель = " " + НСтр("ru = 'содержит'") + " ";
		
	Иначе
		
		Разделитель = " = ";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Представление) Тогда
		Представление = Представление + " " + НСтр("ru = 'и'") + " " + ПредставлениеПоля + Разделитель + """" + Значение + """";
	Иначе
		Представление = ПредставлениеПоля + Разделитель + """" + Значение + """";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеПустогоОтбора(Форма, ПриСоздании = Ложь)
	
	Если ПриСоздании Тогда
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru = 'Для вывода организаций САТУРН'"));
		Строки.Добавить(" ");
		Строки.Добавить(
			Новый ФорматированнаяСтрока(
				НСтр("ru = 'настройте отбор'"),,
				Форма.ЦветГиперссылки,,
				"ОткрытьФормуПараметрыПоиска"));
		Строки.Добавить(" ");
		Строки.Добавить(НСтр("ru = 'и выполните поиск'"));
		
	Иначе
		
		СтрокаПредставлениеОтбора = НСтр("ru = 'Отбор не настроен'");
		
		МассивСтрокИзменить = Новый Массив;
		
		МассивСтрокИзменить.Добавить(" (");
		МассивСтрокИзменить.Добавить(
			Новый ФорматированнаяСтрока(
				НСтр("ru = 'настроить отбор'"),,
				Форма.ЦветГиперссылки,,
				"ОткрытьФормуПараметрыПоиска"));
		МассивСтрокИзменить.Добавить(")");
		
		Строки = Новый Массив;
		Строки.Добавить(СтрокаПредставлениеОтбора);
		Строки.Добавить(Новый ФорматированнаяСтрока(МассивСтрокИзменить));
		
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(Строки);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеНеПустогоОтбора(СтрокаОтбор, Форма, ПриСоздании = Ложь)
	
	СтрокаПредставлениеОтбора = СтрШаблон(НСтр("ru = 'Установлен отбор по %1'"), СтрокаОтбор);
	
	МассивСтрокИзменить = Новый Массив;
	
	МассивСтрокИзменить.Добавить(" (");
	МассивСтрокИзменить.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'изменить'"),,
			Форма.ЦветГиперссылки,,
			"ОткрытьФормуПараметрыПоиска"));
	МассивСтрокИзменить.Добавить(")");
	
	Строки = Новый Массив;
	Строки.Добавить(СтрокаПредставлениеОтбора);
	Строки.Добавить(Новый ФорматированнаяСтрока(МассивСтрокИзменить));
	
	Возврат Новый ФорматированнаяСтрока(Строки);
	
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура ОрганизацияПослеСоздания(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимВыбора
		И ЗначениеЗаполнено(Результат)
		И ТипЗнч(Результат) = Тип("СправочникСсылка.КлассификаторОрганизацийСАТУРН") Тогда
		
		ОповеститьОВыборе(Результат);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуДанныхКлассификатора(Идентификатор)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Идентификатор", Идентификатор); 
	
	ОповещениеОЗакрытииФормыДанныхКлассификатора = Новый ОписаниеОповещения("ДанныеКлассификатораПослеЗакрытия", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.КлассификаторОрганизацийСАТУРН.Форма.ДанныеКлассификатора",
		ПараметрыФормы, ЭтотОбъект,,,,
		ОповещениеОЗакрытииФормыДанныхКлассификатора, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКлассификатораПослеЗакрытия(Результат, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат)
		И ТипЗнч(Результат) = Тип("СправочникСсылка.КлассификаторОрганизацийСАТУРН") Тогда
		
		Если РежимВыбора Тогда
			
			ОповеститьОВыборе(Результат);
			
		Иначе
			
			ОпределитьНаличиеОрганизацииВИБ();
			Элементы.Список.ТекущаяСтрока = Результат;
			Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагруженные;
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореИзДанныхКлассификатора()

	ТекущиеДанные = Элементы.ОрганизацииСАТУРН.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		Возврат;
	КонецЕсли;
	
	Если РежимВыбора Тогда
		
		Если ВыборИдентификаторов Тогда
			
			ДанныеВыбора = ПустаяСтруктураВозвратаВыборИдентификаторов();
			ДанныеВыбора.Ссылка        = ТекущиеДанные.ОрганизацияСАТУРН;
			ДанныеВыбора.Наименование  = ТекущиеДанные.Представление;
			ДанныеВыбора.Идентификатор = ТекущиеДанные.GUID;
			
			ОповеститьОВыборе(ДанныеВыбора);
			
		ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.ОрганизацияСАТУРН) Тогда
		
			ОповеститьОВыборе(ТекущиеДанные.ОрганизацияСАТУРН);
			
		Иначе
			
			ОткрытьФормуДанныхКлассификатора(ТекущиеДанные.Идентификатор);
			
		КонецЕсли;
		
	Иначе
		
		ОткрытьФормуДанныхКлассификатора(ТекущиеДанные.Идентификатор);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореИзЗагруженных()
	
	ОчиститьСообщения();
	
	Если Не ИнтеграцияИСКлиент.ВыборСтрокиСпискаКорректен(Элементы.Список, Истина, Ложь) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если РежимВыбора Тогда
		Если ВыборИдентификаторов Тогда
			
			ДанныеВыбора = ПустаяСтруктураВозвратаВыборИдентификаторов();
			ДанныеВыбора.Ссылка        = ТекущиеДанные.Ссылка;
			ДанныеВыбора.Наименование  = ТекущиеДанные.Наименование;
			ДанныеВыбора.Идентификатор = ТекущиеДанные.Идентификатор;
			
			ОповеститьОВыборе(ДанныеВыбора);
			
		Иначе
			ОповеститьОВыборе(ТекущиеДанные.Ссылка);
		КонецЕсли;
	Иначе
		ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ПустаяСтруктураВозвратаВыборИдентификаторов()

	ПустаяСтруктура = Новый Структура;
	ПустаяСтруктура.Вставить("Ссылка",        ПредопределенноеЗначение("Справочник.КлассификаторОрганизацийСАТУРН.ПустаяСсылка"));
	ПустаяСтруктура.Вставить("Наименование",  "");
	ПустаяСтруктура.Вставить("Идентификатор", "");
	
	Возврат ПустаяСтруктура;

КонецФункции

#КонецОбласти