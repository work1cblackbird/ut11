
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ИспользуетсяРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	ЛокализацияРФ = ПолучитьФункциональнуюОпцию("ЛокализацияРФ");
	ЭтоУТ = ПолучитьФункциональнуюОпцию("УправлениеТорговлей");

	Элементы.КорреспондирующийСчет.Видимость = Ложь;
	Если ЭтоУТ Или НЕ ЛокализацияРФ Или НЕ ИспользуетсяРеглУчет Тогда
		Элементы.КорреспондирующийСчет.Видимость = Истина;
		Элементы.КорреспондирующийСчет.КнопкаВыпадающегоСписка = Ложь;
		Элементы.НеУчитываетсяВНалоговойБазеАУСН.Видимость = Ложь;
		Если ЛокализацияРФ Тогда
			
			//++ Локализация
			
			ЗаполнитьСписокВыбораКоррСчета();
			
			//-- Локализация
			
			Элементы.КорреспондирующийСчет.КнопкаВыпадающегоСписка = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.СтатьиДвиженияДенежныхСредств) Тогда
		Элементы.РедактироватьСписокХозяйственныхОпераций.Доступность = Ложь;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ХозяйственныеОперацииНаименование = СформироватьЗаголовокРедактированияСпискаОпераций();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Объект.ХозяйственныеОперации.Очистить();
		
		Для Каждого ЭлементСписка Из ВыбранноеЗначение Цикл
			Объект.ХозяйственныеОперации.Добавить().ХозяйственнаяОперация = ЭлементСписка.Значение;
		КонецЦикла;
		
		ХозяйственныеОперацииНаименование = СформироватьЗаголовокРедактированияСпискаОпераций();
		
		ПриИзмененииСпискаХозОпераций();
		
		Модифицированность = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ХозяйственныеОперацииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокХозяйственныхОпераций", Новый СписокЗначений);
	Для Каждого СтрокаХозОперации Из Объект.ХозяйственныеОперации Цикл
		ПараметрыФормы.СписокХозяйственныхОпераций.Добавить(СтрокаХозОперации.ХозяйственнаяОперация);
	КонецЦикла;
	
	ОткрытьФорму("Справочник.СтатьиДвиженияДенежныхСредств.Форма.ФормаРедактированияСпискаХозяйственныхОпераций",
		ПараметрыФормы, ЭтаФорма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Функция СформироватьЗаголовокРедактированияСпискаОпераций()

	Результат = "";
	Для Каждого СтрокаХозОперации Из Объект.ХозяйственныеОперации Цикл
		Результат = Результат + ?(Результат="","","; ") + СокрЛП(СтрокаХозОперации.ХозяйственнаяОперация);
	КонецЦикла;
	
	Если ПустаяСтрока(Результат) Тогда
		Результат = НСтр("ru='<Указать хозяйственные операции>'");
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервере
Процедура ПриИзмененииСпискаХозОпераций()
	
	ЗаполнитьВидДвиженияДенежныхСредств();
	
	Если (ЭтоУТ Или НЕ ИспользуетсяРеглУчет) И ЛокализацияРФ Тогда
		Объект.КорреспондирующийСчет = "";
		
		//++ Локализация
		
		ЗаполнитьСписокВыбораКоррСчета();
		
		//-- Локализация
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидДвиженияДенежныхСредств()
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.ХозяйственныеОперации Цикл
		
		ВидДвиженияДДС = Неопределено;
		
		Если (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты) Тогда
			ВидДвиженияДДС = Перечисления.ВидыДвиженийДенежныхСредств.ОплатаТруда;
			
		ИначеЕсли (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам)
			ИЛИ (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам)
			ИЛИ (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
			ИЛИ (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходы) Тогда
			ВидДвиженияДДС = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоТекущейДеятельности;
			
		ИначеЕсли (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
			ИЛИ (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиентаПоПлатежнойКарте) Тогда
			ВидДвиженияДДС = Перечисления.ВидыДвиженийДенежныхСредств.СредстваПолученныеОтПокупателейИЗаказчиков; 
			
		ИначеЕсли (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы) Тогда
			ВидДвиженияДДС = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности;
			
		КонецЕсли;
		
		Если ВидДвиженияДДС <> Неопределено Тогда
			Если НЕ Объект.ВидДвиженияДенежныхСредств.Пустая()  Тогда
				Если ВидДвиженияДДС <> Объект.ВидДвиженияДенежныхСредств Тогда
					Объект.ВидДвиженияДенежныхСредств = Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка();
					Прервать;
				КонецЕсли;
			Иначе
				Объект.ВидДвиженияДенежныхСредств = ВидДвиженияДДС;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//++ Локализация

&НаСервере
Процедура ЗаполнитьСписокВыбораКоррСчета()
	
	СписокСчетов = Элементы.КорреспондирующийСчет.СписокВыбора;
	СписокСчетов.Очистить();
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.ХозяйственныеОперации Цикл
		Если СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходы Тогда
			
			СписокСчетов.Добавить("91.01", "Прочие доходы (91.01)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы Тогда
			
			СписокСчетов.Добавить("25", "Общепроизводственные расходы (25)");
			СписокСчетов.Добавить("26", "Общехозяйственные расходы (26)");
			СписокСчетов.Добавить("44.01", "Издержки обращения (44.01)");
			СписокСчетов.Добавить("44.02", "Коммерческие расходы (44.02)");
			СписокСчетов.Добавить("70", "Расчеты с персоналом по оплате труда (70)");
			СписокСчетов.Добавить("91.02", "Прочие расходы (91.02)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств Тогда
			
			СписокСчетов.Добавить("57.02", "Приобретение иностранной валюты (57.02)");
			СписокСчетов.Добавить("57.22", "Реализация иностранной валюты (57.22)");
			СписокСчетов.Добавить("66.01", "Краткосрочные кредиты (66.01)");
			СписокСчетов.Добавить("67.01", "Долгосрочные кредиты (67.01)");
			СписокСчетов.Добавить("76.09", "Прочие расчеты с разными дебиторами и кредиторами (76.09)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
			
			СписокСчетов.Добавить("57.02", "Приобретение иностранной валюты (57.02)");
			СписокСчетов.Добавить("57.22", "Реализация иностранной валюты (57.22)");
			СписокСчетов.Добавить("66.01", "Краткосрочные кредиты (66.01)");
			СписокСчетов.Добавить("67.01", "Долгосрочные кредиты (67.01)");
			СписокСчетов.Добавить("76.09", "Прочие расчеты с разными дебиторами и кредиторами (76.09)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу Тогда
			
			СписокСчетов.Добавить("50.01", "Касса организации (50.01)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику Тогда
			
			СписокСчетов.Добавить("60.01", "Расчеты с поставщиками и подрядчиками (60.01)");
			СписокСчетов.Добавить("60.02", "Расчеты по авансам выданным (60.02)");
			СписокСчетов.Добавить("76.05", "Расчеты с прочими поставщиками и подрядчиками (76.05)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка
			Или СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет Тогда
			
			СписокСчетов.Добавить("51", "Расчетные счета (51)");
			СписокСчетов.Добавить("52", "Валютные счета (52)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента Тогда
			
			СписокСчетов.Добавить("62.01", "Расчеты с покупателями и заказчиками (62.01)");
			СписокСчетов.Добавить("62.02", "Расчеты по авансам полученным (62.02)");
			СписокСчетов.Добавить("76.06", "Расчеты с прочими покупателями и заказчиками (76.06)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк Тогда
			
			СписокСчетов.Добавить("51", "Расчетные счета (51)");
			СписокСчетов.Добавить("52", "Валютные счета (52)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
			
			СписокСчетов.Добавить("60.01", "Расчеты с поставщиками и подрядчиками (60.01)");
			СписокСчетов.Добавить("60.02", "Расчеты по авансам выданным (60.02)");
			СписокСчетов.Добавить("76.05", "Расчеты с прочими поставщиками и подрядчиками (76.05)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
			
			СписокСчетов.Добавить("62.01", "Расчеты с покупателями и заказчиками (62.01)");
			СписокСчетов.Добавить("62.02", "Расчеты по авансам полученным (62.02)");
			СписокСчетов.Добавить("76.06", "Расчеты с прочими покупателями и заказчиками (76.06)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации Тогда
			
			СписокСчетов.Добавить("62.01", "Расчеты с покупателями и заказчиками (62.01)");
			СписокСчетов.Добавить("62.02", "Расчеты по авансам полученным (62.02)");
			СписокСчетов.Добавить("76.06", "Расчеты с прочими покупателями и заказчиками (76.06)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации Тогда
			
			СписокСчетов.Добавить("60.01", "Расчеты с поставщиками и подрядчиками (60.01)");
			СписокСчетов.Добавить("60.02", "Расчеты по авансам выданным (60.02)");
			СписокСчетов.Добавить("76.05", "Расчеты с прочими поставщиками и подрядчиками (76.05)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ Тогда
			
			СписокСчетов.Добавить("50.01", "Касса организации (50.01)");
			СписокСчетов.Добавить("50.02", "Операционная касса (50.02)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ Тогда
			
			СписокСчетов.Добавить("50.01", "Касса организации (50.01)");
			СписокСчетов.Добавить("50.02", "Операционная касса (50.02)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника Тогда
			
			СписокСчетов.Добавить("71.01", "Расчеты с подотчетными лицами (71.01)");
			СписокСчетов.Добавить("71.21", "Расчеты с подотчетными лицами (в валюте) (71.21)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика Тогда
			
			СписокСчетов.Добавить("60.01", "Расчеты с поставщиками и подрядчиками (60.01)");
			СписокСчетов.Добавить("60.02", "Расчеты по авансам выданным (60.02)");
			СписокСчетов.Добавить("76.05", "Расчеты с прочими поставщиками и подрядчиками (76.05)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
			
			СписокСчетов.Добавить("62.01", "Расчеты с покупателями и заказчиками (62.01)");
			СписокСчетов.Добавить("62.02", "Расчеты по авансам полученным (62.02)");
			СписокСчетов.Добавить("76.06", "Расчеты с прочими покупателями и заказчиками (76.06)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
			
			СписокСчетов.Добавить("71.01", "Расчеты с подотчетными лицами (71.01)");
			СписокСчетов.Добавить("71.21", "Расчеты с подотчетными лицами (в валюте) (71.21)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы Тогда
			
			СписокСчетов.Добавить("50.01", "Касса организации (50.01)");
			СписокСчетов.Добавить("50.21", "Касса организации (в валюте) (50.21)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
			
			СписокСчетов.Добавить("79.02", "Расчеты по текущим операциям (79.02)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
			
			СписокСчетов.Добавить("57.02", "Приобретение иностранной валюты (57.02)");
			СписокСчетов.Добавить("57.22", "Реализация иностранной валюты (57.22)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
			
			СписокСчетов.Добавить("70", "Расчеты с персоналом по оплате труда (70)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
			
			СписокСчетов.Добавить("68", "Расчеты по налогам и сборам (68)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
			
			СписокСчетов.Добавить("76.09", "Прочие расчеты с разными дебиторами и кредиторами (76.09)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты Тогда
			
			СписокСчетов.Добавить("55.03", "Депозитные счета (55.03)");
			СписокСчетов.Добавить("55.23", "Депозитные счета в валюте (55.23)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов Тогда
			
			СписокСчетов.Добавить("58.03", "Предоставленные займы (58.03)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам Тогда
			
			// кредиты и займы краткосрочные
			СписокСчетов.Добавить("66.01", "Краткосрочные кредиты (66.01)");
			СписокСчетов.Добавить("66.02", "Проценты по краткосрочным кредитам (66.02)");
			СписокСчетов.Добавить("66.03", "Краткосрочные займы (66.03)");
			СписокСчетов.Добавить("66.04", "Проценты по краткосрочным займам (66.04)");
			СписокСчетов.Добавить("66.21", "Краткосрочные кредиты в валюте (66.21)");
			СписокСчетов.Добавить("66.22", "Проценты по краткосрочным кредитам в валюте (66.22)");
			СписокСчетов.Добавить("66.23", "Краткосрочные займы в валюте (66.23)");
			СписокСчетов.Добавить("66.24", "Проценты по краткосрочным займам в валюте (66.24)");
			
			// кредиты и займы долгосрочные
			СписокСчетов.Добавить("67.01", "Долгосрочные кредиты (67.01)");
			СписокСчетов.Добавить("67.02", "Проценты по долгосрочным кредитам (67.02)");
			СписокСчетов.Добавить("67.03", "Долгосрочные займы (67.03)");
			СписокСчетов.Добавить("67.04", "Проценты по долгосрочным займам (67.04)");
			СписокСчетов.Добавить("67.21", "Долгосрочные кредиты в валюте (67.21)");
			СписокСчетов.Добавить("67.22", "Проценты по долгосрочным кредитам в валюте (67.22)");
			СписокСчетов.Добавить("67.23", "Долгосрочные займы в валюте (67.23)");
			СписокСчетов.Добавить("67.24", "Проценты по долгосрочным займам в валюте (67.24)");
			
			// комиссия (и прочие платежи) по кредитам и займам
			СписокСчетов.Добавить("76.09", "Прочие расчеты с разными дебиторами и кредиторами (76.09)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам Тогда
			
			СписокСчетов.Добавить("55.03", "Депозитные счета (55.03)");
			СписокСчетов.Добавить("55.23", "Депозитные счета в валюте (55.23)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным Тогда
			
			СписокСчетов.Добавить("58.03", "Предоставленные займы (58.03)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам Тогда
			
			СписокСчетов.Добавить("51", "Расчетные счета (51)");
			СписокСчетов.Добавить("52", "Валютные счета (52)");
			СписокСчетов.Добавить("50.01", "Касса организации (50.01)");
			СписокСчетов.Добавить("50.21", "Касса организации в валюте (50.21)");
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСчетов.СортироватьПоЗначению(НаправлениеСортировки.Возр);
	
	Индекс = 0;
	ВГраницаСписка = СписокСчетов.Количество() - 1;
	
	Пока Индекс < ВГраницаСписка Цикл
		Если СписокСчетов[Индекс].Значение = СписокСчетов[Индекс + 1].Значение Тогда
			СписокСчетов.Удалить(СписокСчетов[Индекс + 1]);
			ВГраницаСписка = ВГраницаСписка - 1;
		Иначе
			Индекс = Индекс + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//-- Локализация

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВ"

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

