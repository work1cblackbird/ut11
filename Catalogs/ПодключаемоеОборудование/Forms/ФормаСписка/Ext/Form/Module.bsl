
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОтображатьДопЭлементы = НЕ ОбщегоНазначенияБПО.ЭтоМобильнаяПлатформа();
	
	ТипПодключенияОборудования = Перечисления.ТипыПодключенияОборудования.ЛокальноеПодключение;
	
	ОбновитьСписокТиповОборудования();
	УстановитьУсловноеОформление();
	
	Элементы.СписокУстройствСообщениеВТехническуюПоддержку.Видимость = ОбщегоНазначенияБПО.ИспользуетсяСообщенияВСлужбуТехническойПоддержки()
			И ОбщегоНазначенияБПОСлужебныйВызовСервера.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОбщегоНазначенияБПОКлиент.ИспользуетсяСообщенияВСлужбуТехническойПоддержки() Тогда
		МодульСообщенияВСлужбуТехническойПоддержкиБПОКлиент = ОбщегоНазначенияБПОКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиБПОКлиент");
		Элементы.СписокУстройствСообщениеВТехническуюПоддержку.Видимость
			= МодульСообщенияВСлужбуТехническойПоддержкиБПОКлиент.ОтправлятьСообщенияВТехПоддержку();
	КонецЕсли;
		
	МенеджерОборудованияКлиент.УстановитьРежимПодключенияРасширенияИнформацииОКомпьютере(Истина);
	МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента();
	Если Не ЗначениеЗаполнено(ТекущееРабочееМесто) Тогда
		ТекущееРабочееМесто = МенеджерОборудованияКлиент.РабочееМестоКлиента();
		ОбновитьПользовательскийИнтерфейс();
	КонецЕсли;
	ОбновитьОтображение();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокУстройств

&НаКлиенте
Асинх Процедура СписокУстройствПриИзменении(Элемент)
	
	ВыбранноеОборудование = Элементы.СписокУстройств.ТекущаяСтрока;
	Если ВыбранноеОборудование = Неопределено ИЛИ НЕ ТипЗнч(ВыбранноеОборудование) = Тип("СправочникСсылка.ПодключаемоеОборудование") Тогда
		Возврат;
	КонецЕсли;
	
	ВыдаватьПредупреждение = Истина;
	ТекстПредупреждения = НСтр("ru = 'Оборудование %1 используется в приложении.
							   |Пометка на удаление может привести к некорректной работе с этим оборудованием.
							   |Продолжить выполнение операции?'");
	ТекстПредупреждения = СтрШаблон(ТекстПредупреждения, ВыбранноеОборудование);
							   
	ОпределитьВозможностьПометкиНаУдалениеОборудования(ВыбранноеОборудование, ВыдаватьПредупреждение, ТекстПредупреждения);
	Если ВыдаватьПредупреждение Тогда
		Если Ждать ВопросАсинх(ТекстПредупреждения, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			СнятьПометкуУдаленияУОбъекта(ВыбранноеОборудование);
			ОповеститьОбИзменении(ВыбранноеОборудование);
			ОбновитьОтображениеДанных(Элементы.СписокУстройств);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокУстройствПриАктивизацииСтроки(Элемент)
	
	Элементы.СписокУстройствСообщениеВТехническуюПоддержку.Доступность = 
		ТипЗнч(Элементы.СписокУстройств.ТекущаяСтрока) = Тип("СправочникСсылка.ПодключаемоеОборудование");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ТипПодключенияОборудованияПриИзменении(Элемент)
	
	ОбновитьОтображение();
	
КонецПроцедуры

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)
	
	ОбновитьОтображение();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОборудованияПриИзменении(Элемент)
	
	ОбновитьОтображение();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборРабочегоМестаЗавершение(Результат, ПараметрыВыбора) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("РабочееМесто") Тогда 
		МенеджерОборудованияКлиент.УстановитьРабочееМесто(Результат.РабочееМесто);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборРабочегоМеста(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ВыборРабочегоМестаЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.ПредложитьВыборРабочегоМеста(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРабочихМест(Команда)
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	ОткрытьФорму("Справочник.РабочиеМеста.ФормаСписка",,,,,,, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура ДрайверыОборудования(Команда)
	
	ОткрытьФорму("Справочник.ДрайверыОборудования.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура СообщениеВТехническуюПоддержку(Команда)
	
	Если ТипЗнч(Элементы.СписокУстройств.ТекущаяСтрока) = Тип("СправочникСсылка.ПодключаемоеОборудование") Тогда
		МодульСообщенияВСлужбуТехническойПоддержкиБПОКлиент = ОбщегоНазначенияБПОКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиБПОКлиент");
		ПараметрыДляСообщения = МодульСообщенияВСлужбуТехническойПоддержкиБПОКлиент.ПараметрыОтправкиСообщенияОбОшибке();
		ПараметрыДляСообщения.ИдентификаторОборудования = Элементы.СписокУстройств.ТекущаяСтрока;
		ПараметрыДляСообщения.ТекстОшибки = НСтр("ru = 'Информация для тех.поддержки'");
		ОписаниеОповещения = Новый ОписаниеОповещения("СообщениеВТехническуюПоддержкуЗавершение", ЭтотОбъект);
		МодульСообщенияВСлужбуТехническойПоддержкиБПОКлиент.НачатьОтправкуСообщенияОбОшибке(ОписаниеОповещения, ПараметрыДляСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщениеВТехническуюПоддержкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ПустаяСтрока(Результат.КодОшибки) Тогда
		ОбщегоНазначенияБПОКлиент.СообщитьПользователю(Результат.СообщениеОбОшибке);
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	СписокУстройств.УсловноеОформление.Элементы.Очистить();
	
	ЭлементУсловногоОформления = СписокУстройств.УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("УстройствоИспользуется");       
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("TextColor", ЦветаСтиля.ЦветРамки);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПользовательскийИнтерфейс()
	
	ОбновитьСписокРабочихМест();
	
	РабочееМестоКлиента = МенеджерОборудованияВызовСервера.РабочееМестоКлиента();
	Если ТекущееРабочееМесто = Справочники.РабочиеМеста.ПустаяСсылка()
		Или ТекущееРабочееМесто <> РабочееМестоКлиента Тогда
		ТекущееРабочееМесто = РабочееМестоКлиента;
	КонецЕсли;
	КодТекущегоРабочегоМеста = ОбщегоНазначенияБПО.ЗначениеРеквизитаОбъекта(ТекущееРабочееМесто, "Код");
	РабочееМесто = КодТекущегоРабочегоМеста;
	
	СписокУстройств.Отбор.Элементы.Очистить();
	Если ОтображатьДопЭлементы Тогда
		// 0 - ТипПодключения
		ЭлементОтбора = СписокУстройств.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипПодключения");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Перечисления.ТипыПодключенияОборудования.ЛокальноеПодключение;
		ЭлементОтбора.Использование = Истина;
		// 1 - ТипОборудования
		ЭлементОтбора = СписокУстройств.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипОборудования");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Неопределено;
		ЭлементОтбора.Использование = Ложь;
		// 2 - РабочееМесто
		ЭлементОтбора = СписокУстройств.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РабочееМестоКод");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Строка(РабочееМесто);
		ЭлементОтбора.Использование = Ложь;
		
	КонецЕсли;
	
	СписокУстройств.Группировка.Элементы.Очистить();
	ЭлементГруппировки = СписокУстройств.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ЭлементГруппировки.Поле = Новый ПолеКомпоновкиДанных("ТипОборудования");
	ЭлементГруппировки.Использование = Истина;
	
	Элементы.СписокУстройств.Шапка = ОтображатьДопЭлементы;
	Элементы.Управление.Видимость = ОтображатьДопЭлементы;    
	Элементы.СписокУстройствДрайверОборудования.Видимость = ОтображатьДопЭлементы;  
	
	СетевоеОборудование = МенеджерОборудования.ДоступноСетевоеОборудование();
	Элементы.ТипПодключенияОборудования.Видимость = СетевоеОборудование;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыРабочегоМеста()
	
	Если ТекущееРабочееМесто = Справочники.РабочиеМеста.ПустаяСсылка()
		Или ТекущееРабочееМесто <> МенеджерОборудованияВызовСервера.РабочееМестоКлиента() Тогда
			ТекущееРабочееМесто = МенеджерОборудованияВызовСервера.РабочееМестоКлиента();
	КонецЕсли;
	
	Если СписокУстройств.Отбор.Элементы.Количество() > 0 Тогда
		СписокУстройств.Отбор.Элементы[1].ПравоеЗначение = ТекущееРабочееМесто;
	КонецЕсли;
	
	ОбновитьПользовательскийИнтерфейс();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображение()
	
	Элементы.СписокУстройствРабочееМесто.Видимость = Ложь; 
	
	Если ОтображатьДопЭлементы Тогда
	
		ЛокальноеПодключение = ТипПодключенияОборудования = ПредопределенноеЗначение("Перечисление.ТипыПодключенияОборудования.ЛокальноеПодключение");
		
		СписокУстройств.Отбор.Элементы[0].ПравоеЗначение = ТипПодключенияОборудования;
		Элементы.РабочееМесто.Видимость = ЛокальноеПодключение;
		Элементы.ТипОборудования.Видимость = ЛокальноеПодключение;

		Если ЛокальноеПодключение Тогда
			
			Если РабочееМесто = "0" Тогда // ВСЕ
				СписокУстройств.Отбор.Элементы[2].Использование = Ложь;
				Элементы.СписокУстройствРабочееМесто.Видимость  = ОтображатьДопЭлементы;
			Иначе 
				СписокУстройств.Отбор.Элементы[2].ПравоеЗначение = Строка(РабочееМесто);
				СписокУстройств.Отбор.Элементы[2].Использование  = Истина;
				Элементы.СписокУстройствРабочееМесто.Видимость   = Ложь;
			КонецЕсли;
			
		Иначе
			СписокУстройств.Отбор.Элементы[2].Использование = Ложь;
			Элементы.СписокУстройствРабочееМесто.Видимость  = Ложь;
		КонецЕсли;
		
		Если ПустаяСтрока(ТипОборудования) Или Не ЛокальноеПодключение Тогда
			СписокУстройств.Группировка.Элементы[0].Использование = Истина;
			СписокУстройств.Отбор.Элементы[1].Использование = Ложь;   // ТипОборудования
		Иначе
			СписокУстройств.Группировка.Элементы[0].Использование = Ложь;
			СписокУстройств.Отбор.Элементы[1].ПравоеЗначение = ТипОборудования;
			СписокУстройств.Отбор.Элементы[1].Использование = Истина;  // ТипОборудования
		КонецЕсли;
	КонецЕсли;      
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокТиповОборудования();
	
	СписокОборудования = МенеджерОборудования.ДоступныеТипыОборудования();
	
	Для Каждого ТипПО Из СписокОборудования Цикл
		Элементы.ТипОборудования.СписокВыбора.Добавить(ТипПО);
	КонецЦикла;
	ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ПустаяСсылка();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокРабочихМест();
	
	Элементы.РабочееМесто.СписокВыбора.Очистить();
	Элементы.РабочееМесто.СписокВыбора.Добавить("0",  НСтр("ru = '<ВСЕ>'"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РабочиеМеста.Ссылка КАК Ссылка,
		|	РабочиеМеста.Код КАК Код,
		|	РабочиеМеста.Наименование КАК Наименование
		|ИЗ
		|	Справочник.РабочиеМеста КАК РабочиеМеста
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование УБЫВ";
	      
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Элементы.РабочееМесто.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Код, ВыборкаДетальныеЗаписи.Наименование);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОборудование(Команда)
	
	ОчиститьСообщения();
	
	Если Элементы.СписокУстройств.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.СписокУстройств.ТекущиеДанные.Свойство("Ссылка") Тогда
		
		ТипКассы = ТипОборудования(Элементы.СписокУстройств.ТекущиеДанные.Ссылка);
		Если ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ОблачнаяККТ") Тогда
			МодульОблачныеКассы = ОбщегоНазначенияБПОКлиент.ОбщийМодуль("ОблачныеКассыКлиент");
			МодульОблачныеКассы.НастройкаПодключения(Элементы.СписокУстройств.ТекущиеДанные.Ссылка);
		Иначе
			МенеджерОборудованияКлиент.ВыполнитьНастройкуОборудования(Элементы.СписокУстройств.ТекущиеДанные.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененоРабочееМестоТекущегоСеанса" Тогда
		ОбновитьПараметрыРабочегоМеста();
	ИначеЕсли ИмяСобытия = "ИзмененыДоступныеТипыПодключаемогоОборудования" Тогда
		ОбновитьПользовательскийИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОпределитьВозможностьПометкиНаУдалениеОборудования(ПодключаемоеОборудование, ВыдаватьПредупреждение, ТекстПредупреждения)

	ПометкаУдаленияОбъекта = ОбщегоНазначенияБПО.ЗначениеРеквизитаОбъекта(ПодключаемоеОборудование, "ПометкаУдаления");
	ПометкаУдаленияОбъекта = (ПометкаУдаленияОбъекта = Истина); // Может быть Неопределено
	Если ПометкаУдаленияОбъекта Тогда
		СтандартнаяОбработка = Истина;
		МенеджерОборудованияВызовСервераПереопределяемый.ОпределитьВозможностьОтключенияОборудования(
			ПодключаемоеОборудование, ВыдаватьПредупреждение, ТекстПредупреждения, СтандартнаяОбработка);
		Если СтандартнаяОбработка Тогда
			ВыдаватьПредупреждение = Истина;
		КонецЕсли;
	Иначе
		ВыдаватьПредупреждение = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СнятьПометкуУдаленияУОбъекта(ВыбранноеОборудование);
	
	ВыбранноеОборудованиеОбъект = ВыбранноеОборудование.ПолучитьОбъект();
	ВыбранноеОборудованиеОбъект.ПометкаУдаления = Ложь;
	ВыбранноеОборудованиеОбъект.Записать();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТипОборудования(СсылкаОборудования)
	
	Возврат ОбщегоНазначенияБПО.ЗначениеРеквизитаОбъекта(СсылкаОборудования, "ТипОборудования");
	
КонецФункции

#КонецОбласти
