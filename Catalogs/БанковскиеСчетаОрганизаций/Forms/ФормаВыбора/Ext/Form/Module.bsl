#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоОрганизацииСФилиалами") И Параметры.ТолькоОрганизацииСФилиалами Тогда
		ТолькоОрганизацииСФилиалами = Истина;
	КонецЕсли;
	
	ОтображатьОтборПоОрганизации = Истина;
	
	Если Параметры.Свойство("Отбор") Тогда 
	
		Если Параметры.Отбор.Свойство("СписокОрганизаций") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец",
				Параметры.Отбор.СписокОрганизаций, ВидСравненияКомпоновкиДанных.ВСписке, , Истина,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
			ОтображатьОтборПоОрганизации = Ложь;
		КонецЕсли;
			
		Если Параметры.Отбор.Свойство("СписокБанков") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Банк",
				Параметры.Отбор.СписокБанков, ВидСравненияКомпоновкиДанных.ВСписке, , Истина,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		КонецЕсли;
		
		Если Параметры.Отбор.Свойство("Владелец") Тогда
			
			Если Параметры.Свойство("ВключатьСчетаФилиалов") И Параметры.ВключатьСчетаФилиалов Тогда
				ВключатьСчетаФилиалов = Истина;
				ОрганизацияОтбор = Параметры.Отбор.Владелец;
				УстановитьОтборСФилиалами();
				Параметры.Отбор.Удалить("Владелец");
			ИначеЕсли ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда
				ОтображатьОтборПоОрганизации = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ВидимостьОтбораПоОрганизации") Тогда
		ОтображатьОтборПоОрганизации = Параметры.ВидимостьОтбораПоОрганизации;
	КонецЕсли;
	
	НесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	Элементы.Организация.Видимость = НесколькоОрганизаций;
	Элементы.ОрганизацияОтбор.Видимость = ОтображатьОтборПоОрганизации
											И НесколькоОрганизаций;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

 &НаКлиенте
Процедура ОрганизацияОтборПриИзменении(Элемент)

	Если ВключатьСчетаФилиалов Тогда
		УстановитьОтборСФилиалами();
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Владелец", ОрганизацияОтбор, , , ЗначениеЗаполнено(ОрганизацияОтбор));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборСФилиалами()
	
	МассивСФилиалами = Справочники.Организации.МассивВзаимосвязанныхОрганизаций(ОрганизацияОтбор);
	МассивСФилиалами.Добавить(ОрганизацияОтбор);
	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.ЗагрузитьЗначения(МассивСФилиалами);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец",
		СписокОрганизаций, ВидСравненияКомпоновкиДанных.ВСписке, , 
		ЗначениеЗаполнено(ОрганизацияОтбор) Или ТолькоОрганизацииСФилиалами,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

#КонецОбласти
