
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	УстановитьОрганизацию();
	
	Если Параметры.Свойство("Отбор") Тогда
		
		Если Параметры.Отбор.Свойство("НаправлениеДеятельности") Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список,
				"НаправлениеДеятельности",
				Параметры.Отбор.НаправлениеДеятельности,
				ВидСравненияКомпоновкиДанных.Равно,
				,
				ЗначениеЗаполнено(Параметры.Отбор.НаправлениеДеятельности));
				
			Организация = ?(ЗначениеЗаполнено(Параметры.Отбор.НаправлениеДеятельности),
							Справочники.Организации.ПустаяСсылка(),
							Организация);
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список,
				"Владелец",
				Организация,
				ВидСравненияКомпоновкиДанных.Равно,
				,
				ЗначениеЗаполнено(Организация));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.Организация.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаГлобальныеКоманды);
	// Конец ИнтеграцияС1СДокументооборотом

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ОбновитьСписокБанковскихСчетов" Тогда
		
		Элементы.Список.Обновить();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Элементы.ОрганизацияОтбор.ТолькоПросмотр Тогда
		Настройки.Удалить("Организация");
	Иначе
		Организация = Настройки.Получить("Организация");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец", Организация, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Организация));
	КонецЕсли;
	
	ТолькоДействующие = Настройки.Получить("ТолькоДействующие");
	Элементы.ТолькоДействующие.Пометка = ТолькоДействующие;
	ТолькоДействующиеПриИзмененииСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияОтборПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец", Организация, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзBankFeeds(Команда)
	
	ПараметрыФормы = Новый Структура("Организация,КомандаФормыПодключения", 
									Организация, КомандаФормыПодключенияНаСервере().ДобавитьСчет);
	ОповещениеОЗакрытииФормыСпискаПрочитанныхВСервисеСчетов = 
		Новый ОписаниеОповещения("ЗавершениеДобавленияСчетовИзСервиса", ЭтотОбъект, Новый Структура());

	
	ОткрытьФорму("РегистрСведений.ПодключенияКБанкамBankFeeds.Форма.ФормаПодключения",ПараметрыФормы, 
								ЭтотОбъект,,,,ОповещениеОЗакрытииФормыСпискаПрочитанныхВСервисеСчетов
								,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)

	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область BankFeeds

 &НаКлиенте
Процедура ЗавершениеДобавленияСчетовИзСервиса(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	СписокДобавленныхСчетов = Результат.СписокДобавленныхСчетов;	
	
	КоличествоДобавленныхСчетов = СписокДобавленныхСчетов.Количество();
	
	Если КоличествоДобавленныхСчетов > 0 Тогда
	
		Если КоличествоДобавленныхСчетов = 1 Тогда
			ТекстСообщения = НСтр("ru = 'Счет добавлен'");  
			
		Иначе
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Добавлено %1 счета'"),
				КоличествоДобавленныхСчетов);
			
		КонецЕсли;

		ПоказатьОповещениеПользователя(ТекстСообщения,,,,СтатусОповещенияПользователя.Важное);
		
	КонецЕсли;		
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗакрытиеФормыАвторизацииВSaltEdge(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыЗаполнения = Результат.ПараметрыЗаполнения;
	
	ОбменССервисомBankFeedsКлиент.ПрочитатьСчетаОрганизацииВСервисе(ПараметрыЗаполнения, ЭтотОбъект);	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция КомандаФормыПодключенияНаСервере()
	
	Возврат СловарьBankFeedsСлужебный.КомандыОткрытияФормыПодключения();
	
КонецФункции

#КонецОбласти

#Область Прочее

&НаСервере
Процедура УстановитьОрганизацию()
	
	Если Параметры.Свойство("Отбор")
	   И Параметры.Отбор.Свойство("Владелец")
	Тогда
		Организация = Параметры.Отбор.Владелец;
		Элементы.ОрганизацияОтбор.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоДействующие(Команда)
	
	Элементы.ТолькоДействующие.Пометка = Не Элементы.ТолькоДействующие.Пометка;
	
	ТолькоДействующие = Элементы.ТолькоДействующие.Пометка;
	ТолькоДействующиеПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ТолькоДействующиеПриИзмененииСервер()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Закрыт",
		ТолькоДействующие,
		ВидСравненияКомпоновкиДанных.НеРавно,
		,
		ТолькоДействующие);
	
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
