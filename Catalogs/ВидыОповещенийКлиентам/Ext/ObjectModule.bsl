#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не ПредназначенаДляЭлектронныхПисем И Не ПредназначенаДляSMS Тогда
		
		ТекстОшибки = НСтр("ru = 'Не указан ни один вид доставки сообщений.'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			"ПредназначенаДляЭлектронныхПисем",
			,
			Отказ);
		
	КонецЕсли;
	
	Если Не ПредназначенаДляSMS Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ШаблонСообщенияSMS");
	КонецЕсли;
	
	Если НЕ ПредназначенаДляЭлектронныхПисем Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ШаблонЭлектронногоПисьма");
	КонецЕсли;
	
	Если Не ИспользуетсяУсловиеОтправки Тогда
		МассивНепроверяемыхРеквизитов.Добавить("УсловиеОтправки");
	КонецЕсли;
		

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РегламентныеЗаданияСервер.УдалитьЗадание(РегламентноеЗадание);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	// Создание регламентное задание (получение уникального идентификатора)
	УстановитьПривилегированныйРежим(Истина);
	
	Если ИспользуетсяУсловиеОтправки Тогда
		
		ЗаполнитьПараметрыУсловия(ПараметрыУсловия, УсловиеОтправки);
		
	Иначе
		
		УсловиеОтправки = "";
		ПараметрыУсловия.Очистить();
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Расписание") И ДополнительныеСвойства.Свойство("Использование") Тогда
		
		Задание = РегламентныеЗаданияСервер.Задание(РегламентноеЗадание);
		Если Задание = Неопределено  Тогда
			
			ПараметрыЗадания = Новый Структура;
			ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.АнализДанныхДляОповещенийКлиентам);
			ПараметрыЗадания.Вставить("Использование", Ложь);
			ПараметрыЗадания.Вставить("Наименование", НаименованиеРегламентногоЗадания());
			Задание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
			
			РегламентноеЗадание = РегламентныеЗаданияСервер.УникальныйИдентификатор(Задание);
			
		КонецЕсли;
		
		ДополнительныеСвойства.Вставить("Задание",Задание);
		
	ИначеЕсли ДополнительныеСвойства.Свойство("УдалениеРегламентногоЗадания") Тогда
		
		РегламентныеЗаданияСервер.УдалитьЗадание(РегламентноеЗадание);
		РегламентноеЗадание = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗаписьРегламентногоЗадания();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РегламентноеЗадание = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьЗаписьРегламентногоЗадания()

	Если НЕ ДополнительныеСвойства.Свойство("Задание") Тогда
		Возврат;
	КонецЕсли;
	
	Задание = ДополнительныеСвойства.Задание;
	Если Задание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗадания = Новый Структура;
	
	// Расписание устанавливается в форме элемента
	Если ДополнительныеСвойства.Свойство("Расписание") 
			И ТипЗнч(ДополнительныеСвойства.Расписание) = Тип("РасписаниеРегламентногоЗадания")
			И Строка(ДополнительныеСвойства.Расписание) <> Строка(Задание.Расписание) Тогда
			
		ПараметрыЗадания.Вставить("Расписание", ДополнительныеСвойства.Расписание);
		
	КонецЕсли;
	
	// Использование устанавливается в форме элемента
	Если ПометкаУдаления И Задание.Использование Тогда
		
		ПараметрыЗадания.Вставить("Использование", Ложь);
		
	ИначеЕсли ДополнительныеСвойства.Свойство("Использование") 
		И ДополнительныеСвойства.Использование <> Задание.Использование Тогда
		
		ПараметрыЗадания.Вставить("Использование", ДополнительныеСвойства.Использование);
		
	КонецЕсли;

	НаименованиеЗадания = НаименованиеРегламентногоЗадания();
	ПараметрыЗадания.Вставить("Наименование", НаименованиеЗадания);
	
	Параметры = Новый Массив;
	Параметры.Добавить(Ссылка);
	ПараметрыЗадания.Вставить("Параметры", Параметры);
	
	УстановитьПривилегированныйРежим(Истина);
	РегламентныеЗаданияСервер.ИзменитьЗадание(РегламентноеЗадание, ПараметрыЗадания);
	
КонецПроцедуры

Функция НаименованиеРегламентногоЗадания()

	Возврат НСтр("ru = 'Анализ данных для вида оповещений'") + ": " + СокрЛП(Наименование);

КонецФункции 

Процедура ЗаполнитьПараметрыУсловия(ПараметрыУсловия, УсловиеОтправки)
	
	ПараметрыУсловия.Очистить();
	
	ПараметрыУсловияОтправки = Новый Структура;
	ПараметрыУсловияОтправки.Вставить("ТипШаблона", "SMS");
	ПараметрыУсловияОтправки.Вставить("Текст", УсловиеОтправки);
	СоответствиеПараметровУсловия = ШаблоныСообщенийСлужебный.ПараметрыИзТекстаСообщения(ПараметрыУсловияОтправки);
	
	ПараметрыПредыдущегоСообщения = СоответствиеПараметровУсловия.Получить("ПредыдущееСообщение");
	Если ПараметрыПредыдущегоСообщения <> Неопределено Тогда
		Для Каждого Параметр Из ПараметрыПредыдущегоСообщения Цикл
			НоваяСтрока = ПараметрыУсловия.Добавить();
			НоваяСтрока.ЭтоПараметрПредыдущегоСообщения = Истина;
			НоваяСтрока.ИмяПараметра = Параметр.Ключ;
		КонецЦикла;
	КонецЕсли;
	ПараметрыПредыдущегоСообщения = СоответствиеПараметровУсловия.Получить("ТекущееСообщение");
	Если ПараметрыПредыдущегоСообщения <> Неопределено Тогда
		Для Каждого Параметр Из ПараметрыПредыдущегоСообщения Цикл
			НоваяСтрока = ПараметрыУсловия.Добавить();
			НоваяСтрока.ЭтоПараметрПредыдущегоСообщения = Ложь;
			НоваяСтрока.ИмяПараметра = Параметр.Ключ;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры;

#КонецОбласти

#КонецЕсли