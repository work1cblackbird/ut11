#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет реквизит "Партия" в табличной части.
// При необходимости создаются новые элементы справочника партий.
//
// Параметры:
//	Объект - ДокументОбъект.ВнутреннееПотребление, ДокументОбъект.ВводОстатков, ДокументОбъект.ВводОстатковТМЦВЭксплуатации - Документ, в котором заполняется партия.
//  РежимЗаписи - РежимЗаписиДокумента - Текущий режим записи документа.
//
Процедура ЗаполнитьПартии(Объект, РежимЗаписи) Экспорт
	
	Если РежимЗаписи <> РежимЗаписиДокумента.Проведение
		И РежимЗаписи <> РежимЗаписиДокумента.ОтменаПроведения Тогда
		Возврат;
	КонецЕсли;
	
	НачалоПримененияФСБУ5 = '000101010000';
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВнутреннееПотребление") Тогда
		
		ТабличнаяЧасть = Объект.Товары; // Документ.ВнутреннееПотребление.Товары
		ДанныеДокумента = ТабличнаяЧасть.Выгрузить();

		ДанныеДокумента.Колонки.Добавить("ДатаНачалаЭксплуатации", Новый ОписаниеТипов("Дата"));
		ДанныеДокумента.Колонки.Добавить("СрокЭксплуатации", ОбщегоНазначения.ОписаниеТипаЧисло(5));
		
		ДанныеДокумента.ЗаполнитьЗначения(НачалоМесяца(Объект.Дата), "ДатаНачалаЭксплуатации");
		
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатков") Тогда
		
		ТабличнаяЧасть = Объект.ТМЦВЭксплуатации;
		ДанныеДокумента = ТабличнаяЧасть.Выгрузить();

		ДанныеДокумента.Колонки.Добавить("СрокЭксплуатации", ОбщегоНазначения.ОписаниеТипаЧисло(5));

		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатковТМЦВЭксплуатации") Тогда
		
		ТабличнаяЧасть = Объект.ТМЦВЭксплуатации;
		ДанныеДокумента = ТабличнаяЧасть.Выгрузить();
		
		ДанныеДокумента.Колонки.Добавить("СрокЭксплуатации", ОбщегоНазначения.ОписаниеТипаЧисло(5));

	Иначе
		
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Для документа ""%1"" не предусмотрено заполнение партий'"), ТипЗнч(Объект));

		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	
	СписокПартий = Новый ТаблицаЗначений();
	СписокПартий.Колонки.Добавить("Партия", Новый ОписаниеТипов("СправочникСсылка.ПартииТМЦВЭксплуатации"));
	Для Каждого СтрокаТЧ Из ДанныеДокумента Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Партия) Тогда
			НоваяСтрока = СписокПартий.Добавить();
			НоваяСтрока.Партия = СтрокаТЧ.Партия;
		КонецЕсли;
	КонецЦикла;
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ПартииТМЦВЭксплуатации");
	ЭлементБлокировки.ИсточникДанных = ДанныеДокумента;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("КатегорияЭксплуатации", "КатегорияЭксплуатации");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ДатаНачалаЭксплуатации", "ДатаНачалаЭксплуатации");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ИнвентарныйНомер", "ИнвентарныйНомер");
	
	Если Объект.Дата < НачалоПримененияФСБУ5 Тогда
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтатьяРасходов", "СтатьяРасходов");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаРасходов", "АналитикаРасходов");
	КонецЕсли;
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ПартииТМЦВЭксплуатации");
	ЭлементБлокировки.ИсточникДанных = СписокПартий;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Партия");
	

	Блокировка.Заблокировать();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО) КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Таблица.ДатаНачалаЭксплуатации КАК ДАТА) КАК ДатаНачалаЭксплуатации,
	|	ВЫРАЗИТЬ(Таблица.КатегорияЭксплуатации КАК Справочник.КатегорииЭксплуатации) КАК КатегорияЭксплуатации,
	|	Таблица.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ВЫРАЗИТЬ(Таблица.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
	|	Таблица.АналитикаРасходов КАК АналитикаРасходов,
	|	Таблица.СрокЭксплуатации КАК СрокЭксплуатации,
	|	ВЫРАЗИТЬ(Таблица.Партия КАК Справочник.ПартииТМЦВЭксплуатации) КАК Партия
	|
	|ПОМЕСТИТЬ ДанныеДокумента
	|
	|ИЗ
	|	&ДанныеДокумента КАК Таблица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	НАЧАЛОПЕРИОДА(Таблица.ДатаНачалаЭксплуатации, МЕСЯЦ) КАК ДатаНачалаЭксплуатации,
	|
	|	ВЫБОР
	|		КОГДА Таблица.СрокЭксплуатации <> 0
	|			ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Таблица.ДатаНачалаЭксплуатации, МЕСЯЦ, Таблица.СрокЭксплуатации), МЕСЯЦ), ДЕНЬ)
	|		КОГДА ЕСТЬNULL(Таблица.КатегорияЭксплуатации.СрокЭксплуатации, 0) <> 0
	|			ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Таблица.ДатаНачалаЭксплуатации, МЕСЯЦ, Таблица.КатегорияЭксплуатации.СрокЭксплуатации), МЕСЯЦ), ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаЗавершенияЭксплуатации,
	|
	|	ВЫБОР
	|		КОГДА Таблица.СрокЭксплуатации <> 0
	|			ТОГДА Таблица.СрокЭксплуатации
	|		ИНАЧЕ Таблица.КатегорияЭксплуатации.СрокЭксплуатации
	|	КОНЕЦ КАК СрокЭксплуатации,
	|
	|	Таблица.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	Таблица.Партия КАК Партия
	|
	|ПОМЕСТИТЬ СтрокиНеТребующиеОбновления
	|
	|ИЗ
	|	ДанныеДокумента КАК Таблица
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПартииТМЦВЭксплуатации КАК СправочникПартий
	|		ПО СправочникПартий.Ссылка = Таблица.Партия
	|
	|ГДЕ
	|	&ЗаполнитьПартии
	|
	|	И НЕ СправочникПартий.ПометкаУдаления
	|	И СправочникПартий.Партия258
	|	И СправочникПартий.КатегорияЭксплуатации = Таблица.КатегорияЭксплуатации
	|
	|	И (СправочникПартий.СрокЭксплуатации = Таблица.СрокЭксплуатации
	|			И Таблица.СрокЭксплуатации <> 0
	|		ИЛИ СправочникПартий.СрокЭксплуатации = ЕСТЬNULL(Таблица.КатегорияЭксплуатации.СрокЭксплуатации, 0)
	|			И Таблица.СрокЭксплуатации = 0)
	|
	|	И СправочникПартий.ДатаНачалаЭксплуатации = Таблица.ДатаНачалаЭксплуатации
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	НАЧАЛОПЕРИОДА(Таблица.ДатаНачалаЭксплуатации, МЕСЯЦ) КАК ДатаНачалаЭксплуатации,
	|
	|	ВЫБОР
	|		КОГДА Таблица.СрокЭксплуатации <> 0
	|			ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Таблица.ДатаНачалаЭксплуатации, МЕСЯЦ, Таблица.СрокЭксплуатации), МЕСЯЦ), ДЕНЬ)
	|		КОГДА ЕСТЬNULL(Таблица.КатегорияЭксплуатации.СрокЭксплуатации, 0) <> 0
	|			ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Таблица.ДатаНачалаЭксплуатации, МЕСЯЦ, Таблица.КатегорияЭксплуатации.СрокЭксплуатации), МЕСЯЦ), ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаЗавершенияЭксплуатации,
	|
	|	ВЫБОР
	|		КОГДА Таблица.СрокЭксплуатации <> 0
	|			ТОГДА Таблица.СрокЭксплуатации
	|		ИНАЧЕ Таблица.КатегорияЭксплуатации.СрокЭксплуатации
	|	КОНЕЦ КАК СрокЭксплуатации,
	|
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА """"
	|	КОНЕЦ КАК ИнвентарныйНомер,
	|	Таблица.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	Таблица.Партия КАК Партия
	|
	|ПОМЕСТИТЬ СтрокиТребующиеОбновления
	|
	|ИЗ
	|	ДанныеДокумента КАК Таблица
	|
	|ГДЕ
	|	&ЗаполнитьПартии
	|	И НЕ Таблица.НомерСтроки В (
	|		ВЫБРАТЬ
	|			СтрокиНеТребующиеОбновления.НомерСтроки
	|		ИЗ
	|			СтрокиНеТребующиеОбновления)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникПартий.Ссылка КАК Ссылка,
	|	СправочникПартий.ПометкаУдаления КАК ПометкаУдаления,
	|	СправочникПартий.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	СправочникПартий.СрокЭксплуатации КАК СрокЭксплуатации,
	|	СправочникПартий.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СправочникПартий.ДатаНачалаЭксплуатации КАК ДатаНачалаЭксплуатации,
	|	СправочникПартий.ДатаЗавершенияЭксплуатации КАК ДатаЗавершенияЭксплуатации,
	|	ВЫБОР
	|		КОГДА &Дата < &НачалоПримененияФСБУ5
	|			ТОГДА СправочникПартий.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА &Дата < &НачалоПримененияФСБУ5
	|			ТОГДА СправочникПартий.АналитикаРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаРасходов
	|
	|ПОМЕСТИТЬ ВсеПодходящиеПартииБезУчетаОС
	|
	|ИЗ
	|	Справочник.ПартииТМЦВЭксплуатации КАК СправочникПартий
	|ГДЕ
	|	СправочникПартий.Партия258
	|
	|	И (СправочникПартий.КатегорияЭксплуатации, 
	|		СправочникПартий.СрокЭксплуатации, 
	|		СправочникПартий.ИнвентарныйНомер, 
	|		СправочникПартий.ДатаНачалаЭксплуатации, 
	|		СправочникПартий.ДатаЗавершенияЭксплуатации) В (
	|
	|		ВЫБРАТЬ
	|			СтрокиТребующиеОбновления.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|			СтрокиТребующиеОбновления.СрокЭксплуатации КАК СрокЭксплуатации,
	|			СтрокиТребующиеОбновления.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|			СтрокиТребующиеОбновления.ДатаНачалаЭксплуатации КАК ДатаНачалаЭксплуатации,
	|			СтрокиТребующиеОбновления.ДатаЗавершенияЭксплуатации КАК ДатаЗавершенияЭксплуатации
	|		ИЗ
	|			СтрокиТребующиеОбновления КАК СтрокиТребующиеОбновления)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВсеПодходящиеПартии.Ссылка) КАК Ссылка,
	|	ВсеПодходящиеПартии.ПометкаУдаления КАК ПометкаУдаления,
	|	ВсеПодходящиеПартии.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	ВсеПодходящиеПартии.СрокЭксплуатации КАК СрокЭксплуатации,
	|	ВсеПодходящиеПартии.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ВсеПодходящиеПартии.ДатаНачалаЭксплуатации КАК ДатаНачалаЭксплуатации,
	|	ВсеПодходящиеПартии.ДатаЗавершенияЭксплуатации КАК ДатаЗавершенияЭксплуатации,
	|	ВсеПодходящиеПартии.СтатьяРасходов КАК СтатьяРасходов,
	|	ВсеПодходящиеПартии.АналитикаРасходов КАК АналитикаРасходов
	|
	|ПОМЕСТИТЬ ПодходящиеПартииБезУчетаОС
	|	
	|ИЗ
	|	ВсеПодходящиеПартииБезУчетаОС КАК ВсеПодходящиеПартии
	|	
	|ГДЕ
	|	НЕ ВсеПодходящиеПартии.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеПодходящиеПартии.ПометкаУдаления,
	|	ВсеПодходящиеПартии.КатегорияЭксплуатации,
	|	ВсеПодходящиеПартии.СрокЭксплуатации,
	|	ВсеПодходящиеПартии.ИнвентарныйНомер,
	|	ВсеПодходящиеПартии.ДатаНачалаЭксплуатации,
	|	ВсеПодходящиеПартии.ДатаЗавершенияЭксплуатации,
	|	ВсеПодходящиеПартии.СтатьяРасходов,
	|	ВсеПодходящиеПартии.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВсеПодходящиеПартии.Ссылка) КАК Ссылка,
	|	ВсеПодходящиеПартии.ПометкаУдаления КАК ПометкаУдаления,
	|	ВсеПодходящиеПартии.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	ВсеПодходящиеПартии.СрокЭксплуатации КАК СрокЭксплуатации,
	|	ВсеПодходящиеПартии.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ВсеПодходящиеПартии.ДатаНачалаЭксплуатации КАК ДатаНачалаЭксплуатации,
	|	ВсеПодходящиеПартии.ДатаЗавершенияЭксплуатации КАК ДатаЗавершенияЭксплуатации,
	|	ВсеПодходящиеПартии.СтатьяРасходов КАК СтатьяРасходов,
	|	ВсеПодходящиеПартии.АналитикаРасходов КАК АналитикаРасходов
	|
	|ИЗ
	|	ВсеПодходящиеПартииБезУчетаОС КАК ВсеПодходящиеПартии
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеПодходящиеПартииБезУчетаОС КАК ВсеПодходящиеПартии2
	|		ПО ВсеПодходящиеПартии2.Ссылка <> ВсеПодходящиеПартии.Ссылка
	|			И НЕ ВсеПодходящиеПартии2.ПометкаУдаления
	|			И ВсеПодходящиеПартии2.КатегорияЭксплуатации = ВсеПодходящиеПартии.КатегорияЭксплуатации
	|			И ВсеПодходящиеПартии2.СрокЭксплуатации = ВсеПодходящиеПартии.СрокЭксплуатации
	|			И ВсеПодходящиеПартии2.ИнвентарныйНомер = ВсеПодходящиеПартии.ИнвентарныйНомер
	|			И ВсеПодходящиеПартии2.ДатаНачалаЭксплуатации = ВсеПодходящиеПартии.ДатаНачалаЭксплуатации
	|			И ВсеПодходящиеПартии2.ДатаЗавершенияЭксплуатации = ВсеПодходящиеПартии.ДатаЗавершенияЭксплуатации
	|			И ВсеПодходящиеПартии2.СтатьяРасходов = ВсеПодходящиеПартии.СтатьяРасходов
	|			И ВсеПодходящиеПартии2.АналитикаРасходов = ВсеПодходящиеПартии.АналитикаРасходов
	|
	|ГДЕ
	|	ВсеПодходящиеПартии.ПометкаУдаления
	|	И ВсеПодходящиеПартии2.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеПодходящиеПартии.ПометкаУдаления,
	|	ВсеПодходящиеПартии.КатегорияЭксплуатации,
	|	ВсеПодходящиеПартии.СрокЭксплуатации,
	|	ВсеПодходящиеПартии.ИнвентарныйНомер,
	|	ВсеПодходящиеПартии.ДатаНачалаЭксплуатации,
	|	ВсеПодходящиеПартии.ДатаЗавершенияЭксплуатации,
	|	ВсеПодходящиеПартии.СтатьяРасходов,
	|	ВсеПодходящиеПартии.АналитикаРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодходящиеПартии.Ссылка КАК Ссылка,
	|	ПодходящиеПартии.ПометкаУдаления КАК ПометкаУдаления,
	|	ПодходящиеПартии.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	ПодходящиеПартии.СрокЭксплуатации КАК СрокЭксплуатации,
	|	ПодходящиеПартии.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПодходящиеПартии.ДатаНачалаЭксплуатации КАК ДатаНачалаЭксплуатации,
	|	ПодходящиеПартии.ДатаЗавершенияЭксплуатации КАК ДатаЗавершенияЭксплуатации,
	|	ПодходящиеПартии.СтатьяРасходов КАК СтатьяРасходов,
	|	ПодходящиеПартии.АналитикаРасходов КАК АналитикаРасходов
	|ИЗ
	|	ПодходящиеПартииБезУчетаОС КАК ПодходящиеПартии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиТребующиеОбновления.НомерСтроки КАК НомерСтроки,
	|	СтрокиТребующиеОбновления.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	СтрокиТребующиеОбновления.КатегорияЭксплуатации.УчитыватьВВидеГрупповогоОС КАК УчитыватьВВидеГрупповогоОС,
	|	СтрокиТребующиеОбновления.КатегорияЭксплуатации.ГруппаОС КАК ГруппаОС,
	|	СтрокиТребующиеОбновления.СрокЭксплуатации КАК СрокЭксплуатации,
	|	СтрокиТребующиеОбновления.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СтрокиТребующиеОбновления.ДатаНачалаЭксплуатации КАК ДатаНачалаЭксплуатации,
	|	СтрокиТребующиеОбновления.ДатаЗавершенияЭксплуатации КАК ДатаЗавершенияЭксплуатации
	|ИЗ
	|	СтрокиТребующиеОбновления КАК СтрокиТребующиеОбновления";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("ДанныеДокумента", ДанныеДокумента);
	Запрос.УстановитьПараметр("ЗаполнитьПартии", РежимЗаписи = РежимЗаписиДокумента.Проведение);
	Запрос.УстановитьПараметр("НачалоПримененияФСБУ5", НачалоПримененияФСБУ5);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПартийБезУчетаОС = Результат[Результат.ВГраница()-1].Выгрузить();

	
	ИспользуемыеРеквизитыПартии = "КатегорияЭксплуатации,СрокЭксплуатации,ДатаНачалаЭксплуатации,ДатаЗавершенияЭксплуатации,ИнвентарныйНомер";
	СтруктураПоискаБезУчетаОС = Новый Структура(ИспользуемыеРеквизитыПартии);
	ТаблицаПартийБезУчетаОС.Индексы.Добавить(ИспользуемыеРеквизитыПартии);

	ПараметрыНаименования = Новый Структура("ДатаНачалаЭксплуатации,ДатаЗавершенияЭксплуатации,СрокЭксплуатации,КатегорияЭксплуатации");
	
	Выборка = Результат[Результат.ВГраница()].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = ТабличнаяЧасть[Выборка.НомерСтроки - 1];
		
		ТаблицаПартий = ТаблицаПартийБезУчетаОС;
		СтруктураПоиска = СтруктураПоискаБезУчетаОС;

		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		СписокСтрок = ТаблицаПартий.НайтиСтроки(СтруктураПоиска);
		
		Если СписокСтрок.Количество() = 0 Тогда
			
			// Нужной партии нет.
			// Сначала берется неиспользуемая партия, если ее нет, то создается новая партия.
			ОбъектПартии = Неопределено;

			
			Если ОбъектПартии = Неопределено Тогда
				ОбъектПартии = Справочники.ПартииТМЦВЭксплуатации.СоздатьЭлемент();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ОбъектПартии, СтруктураПоиска);
			ОбъектПартии.Наименование = СформироватьНаименование(ОбъектПартии);
			
			
			ОбъектПартии.Партия258 = Истина;
			ОбъектПартии.Записать();
			
			ДанныеПартии = ТаблицаПартий.Добавить();
			ЗаполнитьЗначенияСвойств(ДанныеПартии, СтруктураПоиска);
			ДанныеПартии.Ссылка = ОбъектПартии.Ссылка;
			ДанныеПартии.ПометкаУдаления = ОбъектПартии.ПометкаУдаления;
			
			
		Иначе
			
			// Есть нужная партия.
			ДанныеПартии = СписокСтрок[0];
			
		КонецЕсли;
		
		Если ДанныеПартии.ПометкаУдаления Тогда
			ОбъектПартии = ДанныеПартии.Ссылка.ПолучитьОбъект(); // СправочникОбъект.ПартииТМЦВЭксплуатации
			ОбъектПартии.Наименование = СформироватьНаименование(ОбъектПартии);
			ОбъектПартии.ПометкаУдаления = Ложь;
			ОбъектПартии.Записать();
		КонецЕсли;
		
		СтрокаТЧ.Партия = ДанныеПартии.Ссылка;
			
	КонецЦикла;
	
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	
	Возврат; // в УТ пустой обработчик
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Прочее

// Формирует наименование партии.
// 
// Параметры:
//  Объект - СправочникОбъект.ПартииТМЦВЭксплуатации - Объект
// 
// Возвращаемое значение:
//  Строка - Наименование
//
Функция СформироватьНаименование(Объект) Экспорт
	
	НаименованиеКатегории = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.КатегорияЭксплуатации, "Наименование");
	
	Если Объект.СрокЭксплуатации <> 0 Тогда
		
		Наименование = СтрШаблон(
					НСтр("ru='%1 (с %2 по %3)'"),
					СокрЛП(НаименованиеКатегории),
					Формат(Объект.ДатаНачалаЭксплуатации, НСтр("ru = 'ДФ=''МММ гггг ""г.""'''")),
					Формат(Объект.ДатаЗавершенияЭксплуатации, НСтр("ru = 'ДФ=''МММ гггг ""г.""'''")));
					
	Иначе
		
		Наименование = СтрШаблон(
					НСтр("ru='%1 (с %2)'"),
					СокрЛП(НаименованиеКатегории),
					Формат(Объект.ДатаНачалаЭксплуатации, НСтр("ru = 'ДФ=''МММ гггг ""г.""'''")));
					
	КонецЕсли;
	
	Возврат Наименование;
	
КонецФункции

// Формирует наименование группового ОС.
// 
// Параметры:
//  Параметры - Структура - Содержит:
//  	* ДатаНачалаЭксплуатации - Дата -
//  	* ДатаЗавершенияЭксплуатации - Дата -
//  	* СрокЭксплуатации - Число -
//  	* КатегорияЭксплуатации - СправочникСсылка.КатегорииЭксплуатации -
// 
// Возвращаемое значение:
//  Строка - Наименование группового ОС.
Функция СформироватьНаименованиеГрупповогоОС(Параметры) Экспорт

	НаименованиеКатегории = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.КатегорияЭксплуатации, "Наименование");
	
	Если Параметры.СрокЭксплуатации <> 0 Тогда
		
		Наименование = СтрШаблон(
					НСтр("ru='%1 (с %2 по %3)'"),
					СокрЛП(НаименованиеКатегории),
					Формат(Параметры.ДатаНачалаЭксплуатации, НСтр("ru = 'ДФ=''МММ гггг ""г.""'''")),
					Формат(Параметры.ДатаЗавершенияЭксплуатации, НСтр("ru = 'ДФ=''МММ гггг ""г.""'''")));
					
	Иначе
		
		Наименование = СтрШаблон(
					НСтр("ru='%1 (с %2)'"),
					СокрЛП(НаименованиеКатегории),
					Формат(Параметры.ДатаНачалаЭксплуатации, НСтр("ru = 'ДФ=''МММ гггг ""г.""'''")));
					
	КонецЕсли;
	
	Возврат Наименование;
	
КонецФункции


#КонецОбласти

#КонецОбласти

#КонецЕсли
