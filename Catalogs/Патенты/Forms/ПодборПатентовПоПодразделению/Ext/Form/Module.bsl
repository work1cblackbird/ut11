#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = Параметры.Организация;
	Подразделение = Параметры.Подразделение;
	
	ДействующиеПатентыОрганизации = Справочники.Патенты.ПолучитьПатентыПоОрганизации(Организация,Неопределено);
	ДатаПроверки = ТекущаяДатаСеанса();
	
	ТаблицаПатентов = РеквизитФормыВЗначение("Патенты");
	Для каждого ДействующийПатент Из ДействующиеПатентыОрганизации Цикл
		ПатентВышестоящегоПодразделения = Параметры.ПатентыВышестоящихПодразделений.НайтиПоЗначению(ДействующийПатент);
		ПатентПодразделения = Параметры.ПатентыПодразделения.НайтиПоЗначению(ДействующийПатент);
		ДатыДействия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДействующийПатент, "ДатаНачала, ДатаОкончания, НомерПатента");
		Если ПатентВышестоящегоПодразделения = Неопределено 
			И ПатентПодразделения = Неопределено Тогда
			СтрокаПатента = ТаблицаПатентов.Добавить();
			СтрокаПатента.Патент = ДействующийПатент;
			СтрокаПатента.Пометка = Ложь;
			СтрокаПатента.ИсходнаяПометка = Ложь;
			СтрокаПатента.ПометкаРодителя = Ложь;
			Если ДатыДействия.ДатаОкончания < ДатаПроверки Тогда
				СтрокаПатента.ТолькоПросмотр = Истина;
			Иначе
				СтрокаПатента.ТолькоПросмотр = Ложь;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(СтрокаПатента, ДатыДействия);
		Иначе
			СтрокаПатента = ТаблицаПатентов.Добавить();
			СтрокаПатента.Патент = ДействующийПатент;
			СтрокаПатента.Пометка = ?(ПатентПодразделения = Неопределено, Ложь, Истина);
			СтрокаПатента.ИсходнаяПометка = СтрокаПатента.Пометка;
			СтрокаПатента.ТолькоПросмотр = Ложь;
			СтрокаПатента.ПометкаРодителя = ?(ПатентВышестоящегоПодразделения = Неопределено, Ложь, Истина);
			ЗаполнитьЗначенияСвойств(СтрокаПатента, ДатыДействия);
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТаблицаПатентов, "Патенты");
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПринятьИзменения(Команда)
	Закрыть(ИзменитьПатентыПоПодразделениям());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПатентыПометка.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Патенты.ТолькоПросмотр");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПатентыНомерПатента.Имя);
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПатентыПатент.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Патенты.ПометкаРодителя");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.DarkGray);
	
	//
	
	ДатаПроверки = ТекущаяДатаСеанса();
	НачалоДняДокумента = НачалоДня(ДатаПроверки);
	КонецДняДокумента = КонецДня(ДатаПроверки);

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПатентыДатаНачала.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПатентыДатаОкончания.Имя);
	
	ГруппаОтбораИ = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Патенты.ДатаНачала");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = НачалоДняДокумента;
	
	ОтборЭлемента = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Патенты.ДатаОкончания");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = КонецДняДокумента;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Green);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПатентыДатаНачала.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Патенты.ДатаНачала");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = НачалоДняДокумента;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Blue);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПатентыДатаОкончания.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Патенты.ДатаОкончания");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = КонецДняДокумента;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Red);
	
КонецПроцедуры

&НаСервере
Функция ИзменитьПатентыПоПодразделениям()
	ТаблицаПатентов = РеквизитФормыВЗначение("Патенты");
	ЕстьИзменение = Ложь;
	Для каждого СтрокаПоПодразделению Из ТаблицаПатентов Цикл
		Если НЕ СтрокаПоПодразделению.ТолькоПросмотр 
			И НЕ СтрокаПоПодразделению.Пометка = СтрокаПоПодразделению.ИсходнаяПометка Тогда
			ЕстьИзменение = ЕстьИзменение ИЛИ ИзменитьПривязкуПатентаПодразделению(Подразделение, СтрокаПоПодразделению.Патент, СтрокаПоПодразделению.Пометка);
		КонецЕсли;
	КонецЦикла;
	Возврат ЕстьИзменение;
КонецФункции

&НаСервереБезКонтекста
Функция ИзменитьПривязкуПатентаПодразделению(Подразделение, Патент, ДобавитьПатент)
	
	ПатентОбъект = Патент.ПолучитьОбъект();
	
	СтрокаПодразделения = ПатентОбъект.ПрименениеПатента.Найти(Подразделение, "Подразделение");
	ЕстьИзменение = Ложь;
	
	Если НЕ СтрокаПодразделения = Неопределено Тогда
		Если НЕ ДобавитьПатент Тогда
			ПатентОбъект.ПрименениеПатента.Удалить(СтрокаПодразделения);
			ЕстьИзменение = Истина;
		КонецЕсли;
	ИначеЕсли ДобавитьПатент Тогда
		СтрокаПатента = ПатентОбъект.ПрименениеПатента.Добавить();
		СтрокаПатента.Подразделение = Подразделение;
		ЕстьИзменение = Истина;
	КонецЕсли;
	
	Если ЕстьИзменение Тогда
		Попытка
			ПатентОбъект.Записать();
		Исключение
			ТекстОшибки = 
				СтрШаблон(
					НСтр("ru = 'Не удалось записать патент по причине: %1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		КонецПопытки;
	КонецЕсли;
	
	Возврат ЕстьИзменение;
КонецФункции

#КонецОбласти
