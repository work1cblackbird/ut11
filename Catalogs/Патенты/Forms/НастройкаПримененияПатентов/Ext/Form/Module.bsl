#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	ЗаполнитьПатентыПодразделений();
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПерейтиВПатентыПоОрганизации(Команда)
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("Владелец", Организация);
	ПараметрыОткрытия.Вставить("Отбор", Новый Структура("Владелец", Организация));
	Оп = Новый ОписаниеОповещения("ВыполнитьПослеОкончания", ЭтотОбъект);
	ОткрытьФорму("Справочник.Патенты.Форма.ФормаСписка", ПараметрыОткрытия, ЭтотОбъект, Истина,,,Оп,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокПатентов

&НаКлиенте
Процедура СписокПатентовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыПодбора = Новый Структура();
	ПараметрыПодбора.Вставить("Организация", Организация);
	ПараметрыПодбора.Вставить("Подразделение", Элементы.СписокПатентов.ТекущиеДанные.Подразделение);
	ПараметрыПодбора.Вставить("ПатентыПодразделения", Элементы.СписокПатентов.ТекущиеДанные.Патент);
	ПараметрыПодбора.Вставить("ПатентыВышестоящихПодразделений", Элементы.СписокПатентов.ТекущиеДанные.ПатентВышестоящихПодразделений);
	
	Оп = Новый ОписаниеОповещения("ВыполнитьПослеОкончания", ЭтотОбъект);
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени("Справочник.Патенты.Форма.ПодборПатентовПоПодразделению");
		
	ОткрытьФорму("Справочник.Патенты.Форма.ПодборПатентовПоПодразделению", ПараметрыПодбора, ЭтотОбъект, Истина,,,Оп,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПатентовПатентСтрока.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПатентов.ПатентПодразделения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.DarkGray);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПатентыПодразделений()
	
	ВсегоПатентов = Справочники.Патенты.ПолучитьПатентыПоОрганизации(Организация, Неопределено).Количество();
	
	Элементы.ПерейтиВПатентыПоОрганизации.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Патенты организации (%1)'"), ВсегоПатентов);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ПатентыПрименениеПатента.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	Патенты.Ссылка КАК Патент,
	|	Патенты.ДатаНачала КАК ДатаНачала,
	|	Патенты.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Патенты.ПрименениеПатента КАК ПатентыПрименениеПатента
	|		ПО ПатентыПрименениеПатента.Ссылка = Патенты.Ссылка
	|ГДЕ
	|	Патенты.Владелец = &Организация
	|	И НЕ Патенты.ПометкаУдаления
	|;
	|
	|ВЫБРАТЬ
	|
	|	СтруктураПредприятия.Ссылка КАК Подразделение
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтруктураПредприятия.Ссылка ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	

	ДатаПроверки = ТекущаяДатаСеанса();
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ДанныеПоПатентам = РезультатЗапроса[0].Выгрузить();
	ДеревоПодразделений = РезультатЗапроса[1].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ЭлементыТаблицыПодразделений = СписокПатентов.ПолучитьЭлементы();
	
	ТипСписокПатентов = Новый СписокЗначений();
	ТипСписокПатентов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Патенты");
	ДеревоПодразделений.Колонки.Добавить("Патент", Новый ОписаниеТипов(ТипСписокПатентов));
	ДеревоПодразделений.Колонки.Добавить("ПатентВышестоящихПодразделений", Новый ОписаниеТипов(ТипСписокПатентов));
	ДеревоПодразделений.Колонки.Добавить("ПатентСтрока", Новый ОписаниеТипов("Строка"));
	ДеревоПодразделений.Колонки.Добавить("ПатентПодразделения", Новый ОписаниеТипов("Булево"));
	
	ОтборПоПодразделению = Новый Структура();
	ОтборПоПодразделению.Вставить("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	СписокПатентовОрганизации = ДанныеПоПатентам.НайтиСтроки(ОтборПоПодразделению);
	
	ПатентыПредков = Новый СписокЗначений();
	СтрокаПатентовПредков = "";
	
	Для каждого ПатентОрганизации Из СписокПатентовОрганизации Цикл
		
		ДанныеПоПатенту = ПолучитьПредставлениеПатентаИПризнакДействия(ПатентОрганизации.Патент, ПатентОрганизации.ДатаНачала,
				ПатентОрганизации.ДатаОкончания, ДатаПроверки);
		
		Если ДанныеПоПатенту.ДействиеПатента = 1 Тогда
			ПатентыПредков.Добавить(ПатентОрганизации.Патент);
			СтрокаПатентовПредков = СтрокаПатентовПредков + ДанныеПоПатенту.СтрокаПатента + "; ";
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокаПатентовПредков = Лев(СтрокаПатентовПредков, СтрДлина(СтрокаПатентовПредков)-2);
	
	ДобавитьПатентыВСтроку(ДеревоПодразделений.Строки, ДанныеПоПатентам, ДатаПроверки, ПатентыПредков, СтрокаПатентовПредков);
	
	Если ЭлементыТаблицыПодразделений.Количество() = 0 Тогда
		ЗначениеВРеквизитФормы(ДеревоПодразделений, "СписокПатентов");
	Иначе
		ОбновитьДанныеДереваПодразделений(ЭлементыТаблицыПодразделений, ДеревоПодразделений.Строки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеДереваПодразделений(ЭлементыТаблицыПодразделений, СтрокиПодразделений)
	
	Для каждого СтрокаПодразделенияТаблица Из ЭлементыТаблицыПодразделений Цикл
		СтрокаПатентаПодразделения = СтрокиПодразделений.Найти(СтрокаПодразделенияТаблица.Подразделение, "Подразделение");
		Если НЕ СтрокаПатентаПодразделения = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаПодразделенияТаблица, СтрокаПатентаПодразделения);
			ОбновитьДанныеДереваПодразделений(СтрокаПодразделенияТаблица.ПолучитьЭлементы(), СтрокаПатентаПодразделения.Строки);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПатентыВСтроку(СтрокиПодразделений, ДанныеПоПатентам, ДатаПроверки, Знач ПатентыПредков, Знач СтрокаПатентовПредков)
	
	Для каждого СтрокаПодразделения Из СтрокиПодразделений Цикл
		
		ОтборПоПодразделению = Новый Структура();
		ОтборПоПодразделению.Вставить("Подразделение", СтрокаПодразделения.Подразделение);
		СписокПатентовПодразделения = ДанныеПоПатентам.НайтиСтроки(ОтборПоПодразделению);
		ПатентСтрока = "";
		ПатентСтрокаДействующие = "";
		
		ВсеПатентыПодразделения = Новый Массив();
		ДействующиеПатентыПодразделения = Новый Массив();
		
		Для каждого ПатентПодразделения Из СписокПатентовПодразделения Цикл
			
			ДанныеПоПатенту = ПолучитьПредставлениеПатентаИПризнакДействия(ПатентПодразделения.Патент, ПатентПодразделения.ДатаНачала,
				ПатентПодразделения.ДатаОкончания, ДатаПроверки);
				
			ВсеПатентыПодразделения.Добавить(ПатентПодразделения.Патент);
			
			Если ДанныеПоПатенту.ДействиеПатента = 1 Тогда
				ДействующиеПатентыПодразделения.Добавить(ПатентПодразделения.Патент);
				ПатентСтрокаДействующие = ПатентСтрокаДействующие + ДанныеПоПатенту.СтрокаПатента + "; ";
			КонецЕсли;
			ПатентСтрока = ПатентСтрока + ДанныеПоПатенту.СтрокаПатента + "; ";
			
		КонецЦикла;
		
		ПатентыПредковНовый = Новый СписокЗначений();
		ПатентСтрока = Лев(ПатентСтрока, СтрДлина(ПатентСтрока)-2);
		СтрокаПатентовПредковНовый = "";
		
		Если ЗначениеЗаполнено(ДействующиеПатентыПодразделения) Тогда
			СтрокаПодразделения.ПатентСтрока = ПатентСтрока;
			СтрокаПодразделения.ПатентПодразделения = Истина;
			ПатентыПредковНовый.ЗагрузитьЗначения(ДействующиеПатентыПодразделения);
			СтрокаПатентовПредковНовый = Лев(ПатентСтрокаДействующие, СтрДлина(ПатентСтрокаДействующие)-2);
		ИначеЕсли НЕ ПатентыПредков = Неопределено Тогда
			СтрокаПодразделения.ПатентСтрока = "< " + СтрокаПатентовПредков + " > "+ ПатентСтрока;
			СтрокаПодразделения.ПатентВышестоящихПодразделений = ПатентыПредков;
			ПатентыПредковНовый.ЗагрузитьЗначения(ПатентыПредков.ВыгрузитьЗначения());
			СтрокаПатентовПредковНовый = СтрокаПатентовПредков;
			СтрокаПодразделения.ПатентПодразделения = Ложь;
		КонецЕсли;
		
		ПатентыПодразделенияСписок = Новый СписокЗначений();
		ПатентыПодразделенияСписок.ЗагрузитьЗначения(ВсеПатентыПодразделения);
		СтрокаПодразделения.Патент = ПатентыПодразделенияСписок;
		
		Если СтрокаПодразделения.Строки.Количество() > 0 Тогда
			ДобавитьПатентыВСтроку(СтрокаПодразделения.Строки, ДанныеПоПатентам, ДатаПроверки, ПатентыПредковНовый, СтрокаПатентовПредковНовый);
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПредставлениеПатентаИПризнакДействия(Патент, ДатаНачала, ДатаОкончания, ДатаПроверки)
	
	ШаблонТекстаДействующегоПатента = НСтр("ru ='%1 (до %2)'");
	ШаблонТекстаНовогоПатента = НСтр("ru ='%1 (с %2)'");
	ШаблонТекстаЗакончившегосяПатента = НСтр("ru ='%1 (не действует)'");
	
	СтруктураОтвета = Новый Структура();
	СтруктураОтвета.Вставить("СтрокаПатента", "");
	СтруктураОтвета.Вставить("ДействиеПатента", 0);
	
	Если ДатаНачала <= ДатаПроверки
		И ДатаОкончания >= ДатаПроверки Тогда
		
		СтруктураОтвета.СтрокаПатента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаДействующегоПатента, Патент,
			Формат(ДатаОкончания, "ДЛФ=D"));
		СтруктураОтвета.ДействиеПатента = 1;
		
	ИначеЕсли ДатаНачала >= ДатаПроверки Тогда
		
		СтруктураОтвета.СтрокаПатента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаНовогоПатента, Патент,
			Формат(ДатаНачала, "ДЛФ=D"));
		СтруктураОтвета.ДействиеПатента = 2;
		
	Иначе
		СтруктураОтвета.СтрокаПатента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаЗакончившегосяПатента, Патент);
	КонецЕсли;

	Возврат СтруктураОтвета;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПослеОкончания(Параметры, ДопПараметры) Экспорт
	
	ЗаполнитьПатентыПодразделений();
	
КонецПроцедуры

#КонецОбласти