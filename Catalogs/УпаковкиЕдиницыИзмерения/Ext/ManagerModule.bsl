#Если НЕ МобильныйАвтономныйСервер Тогда
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
	
// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	Результат = Новый Массив;
	Результат.Добавить("Числитель");
	Результат.Добавить("Знаменатель");
	Результат.Добавить("ЕдиницаИзмерения");
	Результат.Добавить("Родитель");
	Результат.Добавить("КоличествоУпаковок");
	Результат.Добавить("ТипУпаковки");
	Результат.Добавить("ТипИзмеряемойВеличины");
	Возврат Результат;
КонецФункции

// Ищет упаковку идентичную переданной упаковке, если не находит - создает упаковку для переданной номенклатуры.
//
// Параметры:
//  НоменклатураИсходногоКачества	 - СправочникСсылка.Номенклатура - номенклатура, среди упаковок производится поиск
//  Номенклатура					 - СправочникСсылка.Номенклатура - владелец новой упаковки
//  УпаковкаВДокументе				 - СправочникСсылка.УпаковкиЕдиницыИзмерения - упаковка качественного товара, по которой ищется идентичная упаковка
//  	некачественного товара.
// 
// Возвращаемое значение:
//  СправочникСсылка.УпаковкиЕдиницыИзмерения - ссылка на идентичную упаковку.
//
Функция ИдентичнаяУпаковка(НоменклатураИсходногоКачества, Номенклатура, УпаковкаВДокументе) Экспорт
	
	Если ЗначениеЗаполнено(УпаковкаВДокументе) Тогда
		ЗапросПоУпаковке = Новый Запрос;
		ЗапросПоУпаковке.УстановитьПараметр("Ссылка", УпаковкаВДокументе);
		ЗапросПоУпаковке.УстановитьПараметр("Номенклатура", Номенклатура);
		ЗапросПоУпаковке.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	УпаковкаНекачественногоТовара.Ссылка КАК УпаковкаНекачественногоТовара
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкаКачественногоТовара
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкаНекачественногоТовара
		|		ПО &ТекстЗапросаКоэффициентУпаковки1 = &ТекстЗапросаКоэффициентУпаковки2
		|			И УпаковкаКачественногоТовара.ЕдиницаИзмерения = УпаковкаНекачественногоТовара.ЕдиницаИзмерения
		|			И УпаковкаКачественногоТовара.СкладскаяГруппа = УпаковкаНекачественногоТовара.СкладскаяГруппа
		|ГДЕ
		|	УпаковкаКачественногоТовара.Ссылка = &Ссылка
		|	И УпаковкаНекачественногоТовара.Владелец = ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(&Номенклатура КАК Справочник.Номенклатура).НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
		|				ТОГДА &Номенклатура
		|			ИНАЧЕ ВЫРАЗИТЬ(&Номенклатура КАК Справочник.Номенклатура).НаборУпаковок
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	УпаковкаНекачественногоТовара.Наименование,
		|	УпаковкаНекачественногоТовара.Ссылка";
		
		ЗапросПоУпаковке.Текст = СтрЗаменить(ЗапросПоУпаковке.Текст,
			"&ТекстЗапросаКоэффициентУпаковки1",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкаКачественногоТовара", Неопределено));
			
		ЗапросПоУпаковке.Текст = СтрЗаменить(ЗапросПоУпаковке.Текст,
			"&ТекстЗапросаКоэффициентУпаковки2",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкаНекачественногоТовара", Неопределено));
			
		ВыборкаПоУпаковке = ЗапросПоУпаковке.Выполнить().Выбрать();
		Если ВыборкаПоУпаковке.Следующий() Тогда
			НайденнаяУпаковка = ВыборкаПоУпаковке.УпаковкаНекачественногоТовара;
		Иначе
			НайденнаяУпаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НайденнаяУпаковка)
			// Если у некачественной номенклатуры не индивидуальные упаковки, то создавать их автоматически мы не будем.
			Или ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура,"НаборУпаковок") <> Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры Тогда
			
			Возврат НайденнаяУпаковка;
		КонецЕсли;
	Иначе
		Возврат Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	НоваяУпаковка = УпаковкаВДокументе.Скопировать();
	
	// Упаковка может быть только индивидуальной
	НоваяУпаковка.Владелец = Номенклатура;
	НоваяУпаковка.Записать();
	
	Возврат НоваяУпаковка.Ссылка;
КонецФункции

// Заполняет список выбора упаковок по параметрам выбора, предварительно список очищается.
//  Пример вызова из обработчиков форм:
//  Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьСписокВыбора(Элементы.Упаковка.СписокВыбора,
//  Новый Структура("Номенклатура, ДобавлятьПустуюУпаковку", Объект.Номенклатура, Истина));
//
// Параметры:
//  СписокВыбора	 - СписокЗначений - список для заполнения
//  ПараметрыВыбора	 - Структура - параметры выбора.
//
Процедура ЗаполнитьСписокВыбора(СписокВыбора, ПараметрыВыбора) Экспорт
	СписокВыбора.Очистить();
	Для Каждого ЭлементВыбора Из Справочники.УпаковкиЕдиницыИзмерения.ПолучитьДанныеВыбора(ПараметрыВыбора) Цикл
		СписокВыбора.Добавить(ЭлементВыбора.Значение, ЭлементВыбора.Представление, ЭлементВыбора.Пометка, ЭлементВыбора.Картинка);
	КонецЦикла;
КонецПроцедуры

// Отображает единицу измерения номенклатуры как подсказку ввода в поле упаковки.
//
// Параметры:
//	Номенклатура      - СправочникСсылка.Номенклатура - ссылка номенклатуры,
//	ПолеВводаУпаковки - ПолеФормы - поле формы, содержащее информацию об упаковке / единице измерения номенклатуры.
//
Процедура ОтобразитьИнформациюОЕдиницеХранения(Номенклатура, ПолеВводаУпаковки) Экспорт
	
	ПолеВводаУпаковки.ПодсказкаВвода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЕдиницаИзмерения");
	
КонецПроцедуры

// Возвращает единицу хранения номенклатуры.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - ссылка номенклатуры.
//
// Возвращаемое значение:
//  СправочникСсылка.УпаковкиЕдиницыИзмерения - единица хранения номенклатуры.
//
Функция ЕдиницаХраненияНоменклатуры(Знач Номенклатура) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЕдиницаИзмерения");
	
КонецФункции

// Функция - Текст запроса коэффициента упаковки
//
// Параметры:
//  ИсточникУпаковки	 - 	Строка - Таблица с упаковкой. Например, "ВЫРАЗИТЬ(&Упаковка КАК Справочник.УпаковкаЕдиницаИзмерения)" или "ТаблицаТовары.Упаковка"
//  ИсточникНоменклатуры - 	Строка - Таблица с номенклатурой. Если этот параметр не заполнен, то ИсточникУпаковки 
//							должен гарантированно ссылаться на упаковку / единицу измерения типа "Упаковка".
//							Например, "ТаблицаТовары.Номенклатура" или "ВЫРАЗИТЬ(&Номенклатура КАК Справочник.Номенклатура)".
// 
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаКоэффициентаУпаковки(ИсточникУпаковки, ИсточникНоменклатуры = Неопределено) Экспорт 
	
	Если Не ЗначениеЗаполнено(ИсточникНоменклатуры)  Тогда 
		
		ТекстЗапроса = 
		"ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель,1) <> 0
		|			 И ЕСТЬNULL(ТаблицаТовары.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|	ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.Числитель, 1) / ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 1) КАК ЧИСЛО(27, 11))
		|	ИНАЧЕ NULL
		|КОНЕЦ";
		
	Иначе		
		
		ТекстЗапроса = 
		"ВЫБОР
		|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|				И ТаблицаТовары.Номенклатура.ВесИспользовать
		|				И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЧислитель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|					/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|					/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
		|				И ТаблицаТовары.Номенклатура.ОбъемИспользовать
		|				И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЧислитель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|					/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|					/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
		|				И ТаблицаТовары.Номенклатура.ПлощадьИспользовать
		|				И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЧислитель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|					/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|					/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
		|				И ТаблицаТовары.Номенклатура.ДлинаИспользовать
		|				И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЧислитель, 0) <> 0
		|				И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЗнаменатель, 0) <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|					/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|					/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЧислитель / ТаблицаТовары.Номенклатура.ДлинаЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|		КОГДА (ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Мощность)
		|					ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Энергия)
		|					ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ЭлектрическийЗаряд)
		|					ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Время))
		|				И ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины
		|				И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|			ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|					/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|				И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))
		|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|			ТОГДА 1
		|		ИНАЧЕ NULL
		|	КОНЕЦ";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Номенклатура", ИсточникНоменклатуры);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Упаковка", 	ИсточникУпаковки);
	
	Возврат ТекстЗапроса;	 
	
КонецФункции

// Функция - Текст запроса коэффициента упаковки для формы выбора
//
// Параметры:
//  ИсточникУпаковки	 - 	Строка - Таблица с упаковкой. Например, "ВЫРАЗИТЬ(&Упаковка КАК Справочник.УпаковкаЕдиницаИзмерения)" или "ТаблицаТовары.Упаковка"
//  ИсточникНоменклатуры - 	Строка - Таблица с номенклатурой. Если этот параметр не заполнен, то ИсточникУпаковки 
//							должен гарантированно ссылаться на упаковку / единицу измерения типа "Упаковка".
//							Например, "ТаблицаТовары.Номенклатура" или "ВЫРАЗИТЬ(&Номенклатура КАК Справочник.Номенклатура)".
// 
// Возвращаемое значение:
//  Строка - строка текста запроса.
//
Функция ТекстЗапросаКоэффициентаУпаковкиДляВыбора(ИсточникУпаковки, ИсточникНоменклатуры = Неопределено) Экспорт 
	
	Если Не ЗначениеЗаполнено(ИсточникНоменклатуры)  Тогда 
		
		ТекстЗапроса = 
		"ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель,1) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|	ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.Числитель, 1) / ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 1) КАК ЧИСЛО(27, 11))
		|	ИНАЧЕ NULL
		|КОНЕЦ";
		
	Иначе		
		
		ТекстЗапроса = 
		"ВЫБОР
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|		И ТаблицаТовары.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЧислитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|		ТОГДА 
		|			ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
		|		И ТаблицаТовары.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЧислитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|		ТОГДА
		|			ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
		|		И ТаблицаТовары.Номенклатура.ПлощадьИспользовать
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЧислитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|		ТОГДА
		|			ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
		|		И ТаблицаТовары.Номенклатура.ДлинаИспользовать
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЧислитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЗнаменатель, 0) <> 0
		|		ТОГДА
		|			ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЧислитель / ТаблицаТовары.Номенклатура.ДлинаЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|	КОГДА (ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Мощность)
		|         ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Энергия)
		|         ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ЭлектрическийЗаряд)
		|         ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Время))
		|		И ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		ТОГДА
		|			ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|		ТОГДА 1
		|	ИНАЧЕ NULL
		|КОНЕЦ";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Номенклатура", ИсточникНоменклатуры);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Упаковка", 	ИсточникУпаковки);
	
	Возврат ТекстЗапроса;	 
	
КонецФункции

// Функция - Текст запроса доступности коэффициента упаковки для формы выбора
//
// Параметры:
//  ИсточникУпаковки	 - 	Строка - Таблица с упаковкой. Например, "ВЫРАЗИТЬ(&Упаковка КАК Справочник.УпаковкаЕдиницаИзмерения)" или "ТаблицаТовары.Упаковка"
//  ИсточникНоменклатуры - 	Строка - Таблица с номенклатурой. Если этот параметр не заполнен, то ИсточникУпаковки 
//							должен гарантированно ссылаться на упаковку / единицу измерения типа "Упаковка".
//							Например, "ТаблицаТовары.Номенклатура" или "ВЫРАЗИТЬ(&Номенклатура КАК Справочник.Номенклатура)".
// 
// Возвращаемое значение:
//  Строка - строка текста запроса.
//
Функция ТекстЗапросаДоступностьКоэффициентаДляВыбораУпаковки(ИсточникУпаковки, ИсточникНоменклатуры = Неопределено) Экспорт 
	
	Если Не ЗначениеЗаполнено(ИсточникНоменклатуры)  Тогда 
		
		ТекстЗапроса = 
		"ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель,1) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|КОНЕЦ";
		
	Иначе		
		
		ТекстЗапроса = 
		"ВЫБОР
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|		И ТаблицаТовары.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЧислитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|		ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|			И ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
		|		И ТаблицаТовары.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЧислитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|		ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|			И ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
		|		И ТаблицаТовары.Номенклатура.ПлощадьИспользовать
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЧислитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|		ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|			И ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
		|		И ТаблицаТовары.Номенклатура.ДлинаИспользовать
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЧислитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЗнаменатель, 0) <> 0
		|		ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|			И ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЧислитель / ТаблицаТовары.Номенклатура.ДлинаЗнаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|	КОГДА (ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Мощность)
		|         ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Энергия)
		|         ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ЭлектрическийЗаряд)
		|         ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Время))
		|		И ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Числитель, 0) <> 0
		|		И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Знаменатель, 0) <> 0
		|		ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|			И ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|				/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))
		|			МЕЖДУ 0.0000001 И 99999999
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|		ТОГДА ИСТИНА
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Номенклатура", ИсточникНоменклатуры);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Упаковка", 	ИсточникУпаковки);
	
	Возврат ТекстЗапроса;	 
	
КонецФункции

// Функция - Текст запроса коэффициента упаковки
//
// Параметры:
//  ИсточникУпаковки	 - Строка	 - Таблица с упаковкой. Например, "ВЫРАЗИТЬ(&Упаковка КАК Справочник.УпаковкаЕдиницаИзмерения)"
//  ИсточникНоменклатуры - Строка	 - Таблица с номенклатурой. Если этот параметр не заполнен, то ИсточникУпаковки
//  	должен гарантированно ссылаться на упаковку / единицу измерения типа "Упаковка".
//  	Например, "ТаблицаТовары.Номенклатура"
//  ВесУпаковкиВЕдиницеКонстанты	 - 	Булево	- если ЛОЖЬ, то текст запроса вернет вес в кг, иначе - в константе - единице измерения веса . 
// 
// Возвращаемое значение:
//  Строка - строка текста запроса, которая вернет вес либо в единице константы, либо в кг (см. параметр ВесУпаковкиВЕдиницеКонстанты).
//
Функция ТекстЗапросаВесУпаковки(ИсточникУпаковки, ИсточникНоменклатуры, ВесУпаковкиВЕдиницеКонстанты = Истина) Экспорт 
	
	Если ИсточникНоменклатуры = Неопределено Тогда 
		
		ТекстЗапроса = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.Вес, 0) 
		|	* ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.ВесЕдиницаИзмерения.Числитель, 0) / ЕСТЬNULL(ТаблицаТовары.Упаковка.ВесЕдиницаИзмерения.Знаменатель, 1) КАК ЧИСЛО(27, 11)) 
		|	/ ВЫРАЗИТЬ(&КоличествоКгВЕдиницеИзмеренияВеса КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))";
		
	Иначе		
		
		ТекстЗапроса = 
		"ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|					И ТаблицаТовары.Номенклатура.ВесИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
		|					И ТаблицаТовары.Номенклатура.ВесИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
		|					И ТаблицаТовары.Номенклатура.ВесИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
		|					И ТаблицаТовары.Номенклатура.ВесИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЧислитель / ТаблицаТовары.Номенклатура.ДлинаЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Вес 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Упаковка.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА (ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|					ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
		|					ИЛИ ЕСТЬNULL(ТаблицаТовары.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|					И ТаблицаТовары.Номенклатура.ВесИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11))
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			ИНАЧЕ 0
		|		КОНЕЦ / (ВЫРАЗИТЬ(&КоличествоКгВЕдиницеИзмеренияВеса КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))";
				
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Номенклатура", ИсточникНоменклатуры);
		
	КонецЕсли;
	
	Если ВесУпаковкиВЕдиницеКонстанты Тогда
		ЕдиницаИзмеренияВеса = Константы.ЕдиницаИзмеренияВеса.Получить();
		Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
			ВызватьИсключение НСтр("ru = 'Не задано значение константы ""Единица измерения веса"". Обратитесь к администратору.'");
		КонецЕсли;
		СтруктураРезультат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЕдиницаИзмеренияВеса, "Числитель, Знаменатель");
		КоличествоКгВЕдиницеИзмеренияВеса = СтруктураРезультат.Числитель / СтруктураРезультат.Знаменатель;		
	Иначе
		КоличествоКгВЕдиницеИзмеренияВеса = 1; 		
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КоличествоКгВЕдиницеИзмеренияВеса", Формат(КоличествоКгВЕдиницеИзмеренияВеса, "ЧРД=.; ЧГ=0"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Упаковка", 	ИсточникУпаковки);
	
	Возврат ТекстЗапроса;	 
	
КонецФункции

// Функция - Текст запроса коэффициента упаковки
//
// Параметры:
//  ИсточникУпаковки	 - 	Строка - Таблица с упаковкой. Например, "ВЫРАЗИТЬ(&Упаковка КАК Справочник.УпаковкаЕдиницаИзмерения)"
//  ИсточникНоменклатуры - 	Строка - Таблица с номенклатурой. Если этот параметр не заполнен, то ИсточникУпаковки 
//							должен гарантированно ссылаться на упаковку / единицу измерения типа "Упаковка".
//							Например, "ТаблицаТовары.Номенклатура"
//  ОбъемУпаковкиВЕдиницеКонстанты	 - 	Булево	- если ЛОЖЬ, то текст запроса вернет объем в м3, иначе - в константе - единице измерения объема. 
// 
// Возвращаемое значение:
//  Строка - строка текста запроса, которая вернет объем либо в единице константы, либо в м3 (см. параметр ОбъемУпаковкиВЕдиницеКонстанты).
//
Функция ТекстЗапросаОбъемУпаковки(ИсточникУпаковки, ИсточникНоменклатуры, ОбъемУпаковкиВЕдиницеКонстанты = Истина) Экспорт 
	
	Если ИсточникНоменклатуры = Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.Объем, 0) 
		|	* ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.ОбъемЕдиницаИзмерения.Числитель, 0) / ЕСТЬNULL(ТаблицаТовары.Упаковка.ОбъемЕдиницаИзмерения.Знаменатель, 1) КАК ЧИСЛО(27, 11)) 
		|	/ ВЫРАЗИТЬ(&КоличествоКубометровВЕдиницеИзмеренияОбъема КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))";
		
	Иначе		
		
		ТекстЗапроса = 
		"ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
		|					И ТаблицаТовары.Номенклатура.ОбъемИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|					И ТаблицаТовары.Номенклатура.ОбъемИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
		|					И ТаблицаТовары.Номенклатура.ОбъемИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
		|					И ТаблицаТовары.Номенклатура.ОбъемИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЧислитель / ТаблицаТовары.Номенклатура.ДлинаЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Объем 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Упаковка.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА (ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|					ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
		|					ИЛИ ЕСТЬNULL(ТаблицаТовары.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|					И ТаблицаТовары.Номенклатура.ОбъемИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			ИНАЧЕ 0
		|		КОНЕЦ / (ВЫРАЗИТЬ(&КоличествоКубометровВЕдиницеИзмеренияОбъема КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))";
		
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Номенклатура", ИсточникНоменклатуры);
		
	КонецЕсли;
	
	Если ОбъемУпаковкиВЕдиницеКонстанты Тогда
		ЕдиницаИзмеренияОбъема = Константы.ЕдиницаИзмеренияОбъема.Получить();
		Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияОбъема) Тогда
			ВызватьИсключение НСтр("ru = 'Не задано значение константы ""Единица измерения объема"". Обратитесь к администратору.'");
		КонецЕсли;
		СтруктураРезультат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЕдиницаИзмеренияОбъема, "Числитель, Знаменатель");
		КоличествоКубометровВЕдиницеИзмеренияОбъема = СтруктураРезультат.Числитель / СтруктураРезультат.Знаменатель;	 
	Иначе
		КоличествоКубометровВЕдиницеИзмеренияОбъема = 1;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КоличествоКубометровВЕдиницеИзмеренияОбъема", Формат(КоличествоКубометровВЕдиницеИзмеренияОбъема, "ЧРД=.; ЧГ=0"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Упаковка", 	ИсточникУпаковки);
	
	Возврат ТекстЗапроса;	 
	
КонецФункции

// Функция - Текст запроса коэффициента упаковки
//
// Параметры:
//  ИсточникУпаковки	 - 	Строка - Таблица с упаковкой. Например, "ВЫРАЗИТЬ(&Упаковка КАК Справочник.УпаковкаЕдиницаИзмерения)"
//  ИсточникНоменклатуры - 	Строка - Таблица с номенклатурой. Если этот параметр не заполнен, то ИсточникУпаковки 
//							должен гарантированно ссылаться на упаковку / единицу измерения типа "Упаковка".
//							Например, "ТаблицаТовары.Номенклатура"
//  ПлощадьУпаковкиВЕдиницеКонстанты	 - 	Булево	- если ЛОЖЬ, то текст запроса вернет площадь в м2, иначе - в константе - единице измерения площади. 
// 
// Возвращаемое значение:
//  Строка - строка текста запроса, которая вернет площадь либо в единице константы, либо в м2 (см. параметр ПлощадьУпаковкиВЕдиницеКонстанты).
//
Функция ТекстЗапросаПлощадьУпаковки(ИсточникУпаковки, ИсточникНоменклатуры, ПлощадьУпаковкиВЕдиницеКонстанты = Истина) Экспорт 
	
	Если ИсточникНоменклатуры = Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.Площадь, 0) 
		|	* ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.ПлощадьЕдиницаИзмерения.Числитель, 0) / ЕСТЬNULL(ТаблицаТовары.Упаковка.ПлощадьЕдиницаИзмерения.Знаменатель,1) КАК ЧИСЛО(27, 11)) 
		|	/ ВЫРАЗИТЬ(&КоличествоМ2ВЕдиницеИзмеренияПлощади КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))";
		
	Иначе		
		
		ТекстЗапроса = 
		"ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
		|					И ТаблицаТовары.Номенклатура.ПлощадьИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|					И ТаблицаТовары.Номенклатура.ПлощадьИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
		|					И ТаблицаТовары.Номенклатура.ПлощадьИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
		|					И ТаблицаТовары.Номенклатура.ПлощадьИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЧислитель / ТаблицаТовары.Номенклатура.ДлинаЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА (ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|					ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
		|					ИЛИ ЕСТЬNULL(ТаблицаТовары.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|					И ТаблицаТовары.Номенклатура.ПлощадьИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель 
		|						* (ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель) КАК ЧИСЛО(27, 11))
		|			ИНАЧЕ 0
		|		КОНЕЦ / (ВЫРАЗИТЬ(&КоличествоМ2ВЕдиницеИзмеренияПлощади КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))";
		
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Номенклатура", ИсточникНоменклатуры);
		
	КонецЕсли;
	
	Если ПлощадьУпаковкиВЕдиницеКонстанты Тогда
		ЕдиницаИзмеренияПлощади = Константы.ЕдиницаИзмеренияПлощади.Получить();
		Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияПлощади) Тогда
			ВызватьИсключение НСтр("ru = 'Не задано значение константы ""Единица измерения площади"". Обратитесь к администратору.'");
		КонецЕсли;
		СтруктураРезультат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЕдиницаИзмеренияПлощади, "Числитель, Знаменатель");
		КоличествоМ2ВЕдиницеИзмеренияПлощади = СтруктураРезультат.Числитель / СтруктураРезультат.Знаменатель;	 
	Иначе
		КоличествоМ2ВЕдиницеИзмеренияПлощади = 1;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КоличествоМ2ВЕдиницеИзмеренияПлощади", Формат(КоличествоМ2ВЕдиницеИзмеренияПлощади, "ЧРД=.; ЧГ=0"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Упаковка", 	ИсточникУпаковки);
	
	Возврат ТекстЗапроса;	 
	
КонецФункции

// Функция - Текст запроса коэффициента упаковки
//
// Параметры:
//  ИсточникУпаковки	 - 	Строка - Таблица с упаковкой. Например, "ВЫРАЗИТЬ(&Упаковка КАК Справочник.УпаковкаЕдиницаИзмерения)"
//  ИсточникНоменклатуры - 	Строка - Таблица с номенклатурой. Если этот параметр не заполнен, то ИсточникУпаковки 
//							должен гарантированно ссылаться на упаковку / единицу измерения типа "Упаковка".
//							Например, "ТаблицаТовары.Номенклатура"
//  ДлинаУпаковкиВЕдиницеКонстанты	 - 	Булево	- если ЛОЖЬ, то текст запроса вернет объем в м, иначе - в константе - единице измерения длины. 
// 
// Возвращаемое значение:
//  Строка - строка текста запроса, которая вернет длину либо в единице константы, либо в м (см. параметр ДлинаУпаковкиВЕдиницеКонстанты).
//
Функция ТекстЗапросаДлинаУпаковки(ИсточникУпаковки, ИсточникНоменклатуры, ДлинаУпаковкиВЕдиницеКонстанты = Истина) Экспорт 
	
	Если ИсточникНоменклатуры = Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.Длина, 0) 
		|	* ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаТовары.Упаковка.ДлинаЕдиницаИзмерения.Числитель, 0) / ЕСТЬNULL(ТаблицаТовары.Упаковка.ДлинаЕдиницаИзмерения.Знаменатель, 1) КАК ЧИСЛО(27, 11)) 
		|	/ ВЫРАЗИТЬ(&КоличествоМетровВЕдиницеИзмеренияДлины КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))";
		
	Иначе		
		
		ТекстЗапроса = 
		"ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
		|					И ТаблицаТовары.Номенклатура.ДлинаИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|					И ТаблицаТовары.Номенклатура.ДлинаИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ВесЧислитель / ТаблицаТовары.Номенклатура.ВесЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЧислитель / ТаблицаТовары.Номенклатура.ДлинаЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
		|					И ТаблицаТовары.Номенклатура.ПлощадьИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ОбъемЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ОбъемЧислитель / ТаблицаТовары.Номенклатура.ОбъемЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
		|					И ТаблицаТовары.Номенклатура.ДлинаИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Упаковка.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЧислитель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТовары.Упаковка.Числитель / ТаблицаТовары.Упаковка.Знаменатель КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))) 
		|						/ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ПлощадьЧислитель / ТаблицаТовары.Номенклатура.ПлощадьЗнаменатель КАК ЧИСЛО(27, 11))) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЧислитель / ТаблицаТовары.Номенклатура.ДлинаЗнаменатель КАК ЧИСЛО(27, 11)) 
		|						* ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(27, 11)) КАК ЧИСЛО(27, 11))
		|			КОГДА (ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|					ИЛИ ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
		|					ИЛИ ЕСТЬNULL(ТаблицаТовары.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|					И ТаблицаТовары.Номенклатура.ДлинаИспользовать
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЗнаменатель, 0) <> 0
		|					И ЕСТЬNULL(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура.ДлинаЧислитель / ТаблицаТовары.Номенклатура.ДлинаЗнаменатель * 
		|						(ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / ТаблицаТовары.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель) КАК ЧИСЛО(27, 11))
		|			ИНАЧЕ 0
		|		КОНЕЦ / (ВЫРАЗИТЬ(&КоличествоМетровВЕдиницеИзмеренияДлины КАК ЧИСЛО(27, 11))) КАК ЧИСЛО(27, 11))";
		
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Номенклатура", ИсточникНоменклатуры);
		
	КонецЕсли;
	
	Если ДлинаУпаковкиВЕдиницеКонстанты Тогда
		ЕдиницаИзмеренияДлины = Константы.ЕдиницаИзмеренияДлины.Получить();
		Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияДлины) Тогда
			ВызватьИсключение НСтр("ru = 'Не задано значение константы ""Единица измерения Длины"". Обратитесь к администратору.'");
		КонецЕсли;
		СтруктураРезультат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЕдиницаИзмеренияДлины, "Числитель, Знаменатель");
		КоличествоМетровВЕдиницеИзмеренияДлины = СтруктураРезультат.Числитель / СтруктураРезультат.Знаменатель;	 
	Иначе
		КоличествоМетровВЕдиницеИзмеренияДлины = 1;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КоличествоМетровВЕдиницеИзмеренияДлины", Формат(КоличествоМетровВЕдиницеИзмеренияДлины, "ЧРД=.; ЧГ=0"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Упаковка", 	ИсточникУпаковки);
	
	Возврат ТекстЗапроса;	 
	
КонецФункции

// Функция - Текст запроса значение реквизита единицы измерения
//
// Параметры:
//	ИмяРеквизита		 -	Строка - Имя реквизита единицы измерения, значение которого необходимо получить.
//							Для получения ссылки на единицу измерения следует передать значение "Ссылка".
//  ИсточникУпаковки	 - 	Строка - Таблица с упаковкой. Например, "ТаблицаТовары.Упаковка"
//  ИсточникНоменклатуры - 	Строка - Таблица с номенклатурой. Если этот параметр не заполнен, то ИсточникУпаковки 
//							должен гарантированно ссылаться на упаковку / единицу измерения типа "Упаковка".
//							Например, "ТаблицаТовары.Номенклатура".
// 
// Возвращаемое значение:
//  Строка - текст для подстановки в запрос.
//
Функция ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(ИмяРеквизита, ИсточникУпаковки, ИсточникНоменклатуры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ИсточникНоменклатуры) Тогда
		
		ТекстЗапроса = 
		"ВЫБОР
		|	КОГДА ЕСТЬNULL(ТаблицаТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|		ТОГДА NULL
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА ТаблицаТовары.Упаковка.ЕдиницаИзмерения#ИмяРеквизита
		|	ИНАЧЕ ТаблицаТовары.Упаковка#ИмяРеквизита
		|КОНЕЦ";
		
	Иначе		
		
		ТекстЗапроса = 
		"ВЫБОР
		|	КОГДА ЕСТЬNULL(ТаблицаТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|		ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения#ИмяРеквизита
		|	КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА ТаблицаТовары.Упаковка.ЕдиницаИзмерения#ИмяРеквизита
		|	ИНАЧЕ ТаблицаТовары.Упаковка#ИмяРеквизита
		|КОНЕЦ";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Номенклатура", ИсточникНоменклатуры);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Упаковка", 	ИсточникУпаковки);
	
	Если ИмяРеквизита = "Ссылка" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяРеквизита", "");
	Иначе
		
		Реквизиты = РеквизитыЕдиницыИзмерения();
		Если Реквизиты.Найти(ИмяРеквизита) <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяРеквизита", "." + ИмяРеквизита);
		Иначе
			СтрокаЗамены = "Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения";
			СообщениеОшибка = СтрШаблон(НСтр("ru = 'Некорректное значение параметра [1] метода %1.'"), СтрокаЗамены);
			ВызватьИсключение СообщениеОшибка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция - Значения веса объема коэффициента прочих реквизитов упаковки
//
// Параметры:
//  Упаковка							 - СправочникСсылка.УпаковкиЕдиницыИзмерения - упаковка, реквизиты которой нужно получить
//  Номенклатура						 - СправочникСсылка.Номенклатура			 - обязательно для указания, если упаковка НЕ типа "Упаковка"
//  ПрочиеРеквизиты						 - Строка									 - названия других реквизитов через запятую. Не допускается вложенное обращение (например, "Родитель.Наименование" - нельзя).
//  ВесОбъемУпаковкиВЕдиницеКонстанты	 - Булево 									 - если ЛОЖЬ, то текст запроса вернет объем в м3 и вес в кг, иначе - в константе - единице измерения веса / объема.
// 
// Возвращаемое значение:
//  Структура - структура со значениями коэффициента, веса в константе - единице измерения веса, объема в константе -
//      единице измерения объема и прочих реквизитов упаковки.
//
Функция КоэффициентВесОбъемПрочиеРеквизитыУпаковки(Упаковка, Номенклатура, ПрочиеРеквизиты = "", ВесОбъемУпаковкиВЕдиницеКонстанты = Истина) Экспорт 
	
	Результат = Новый Структура("Вес, ВесНетто, Объем, Коэффициент" + ?(ЗначениеЗаполнено(ПрочиеРеквизиты), "," + ПрочиеРеквизиты, ""), 0, 0, 0, 0);
	СтрокаПрочихРеквизитов = "";
	
	Результат.Вставить("НужноОкруглятьКоличество", Ложь);
	Если Не ЗначениеЗаполнено(Упаковка) Тогда
		Если Не ЗначениеЗаполнено(Номенклатура) Тогда
			Результат.Коэффициент = 1;
			Возврат Результат;
		Иначе
			ТекстЗапроса = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	1 КАК Коэффициент,
			|	Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины КАК ТипИзмеряемойВеличиныДляПроверки,
			|	&ТекстЗапросаВесУпаковки КАК Вес,
			|	ВЫБОР
			|		КОГДА Номенклатура.ВесИспользовать
			|			ТОГДА ВЫБОР
			|				КОГДА Номенклатура.ВесЗнаменатель = 0
			|					ТОГДА 0
			|				ИНАЧЕ Номенклатура.ВесЧислитель / Номенклатура.ВесЗнаменатель
			|			КОНЕЦ * ВЫБОР
			|				КОГДА Номенклатура.ВесЕдиницаИзмерения.Знаменатель = 0
			|					ТОГДА 0
			|				ИНАЧЕ Номенклатура.ВесЕдиницаИзмерения.Числитель / Номенклатура.ВесЕдиницаИзмерения.Знаменатель
			|			КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ВесНетто,
			|	&ТекстЗапросаОбъемУпаковки КАК Объем
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Ссылка = &Номенклатура";
			ИсточникНоменклатуры = "Номенклатура";
			ИсточникУпаковки = "Номенклатура.ЕдиницаИзмерения"
		КонецЕсли;
	Иначе
		Реквизиты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПрочиеРеквизиты, ",",,Истина);
		
		Если Реквизиты.Найти("ТипИзмеряемойВеличины") = Неопределено Тогда
			Реквизиты.Добавить("ТипИзмеряемойВеличины");
		КонецЕсли;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			СтрокаПрочихРеквизитов = СтрокаПрочихРеквизитов + "Упаковка." + Реквизит + " КАК " + Реквизит;
			Если Реквизиты.Найти(Реквизит) <> Реквизиты.ВГраница() Тогда
				СтрокаПрочихРеквизитов = СтрокаПрочихРеквизитов + ",";
			КонецЕсли;
			СтрокаПрочихРеквизитов = СтрокаПрочихРеквизитов + Символы.ПС + Символы.Таб;
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(Номенклатура) Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Упаковка.ТипИзмеряемойВеличины КАК ТипИзмеряемойВеличиныДляПроверки,
			|	&ПрочиеРеквизиты,
			|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК Коэффициент,
			|	&ТекстЗапросаВесУпаковки КАК Вес,
			|	0 КАК ВесНетто,
			|	&ТекстЗапросаОбъемУпаковки КАК Объем
			|ИЗ
			|	Справочник.УпаковкиЕдиницыИзмерения КАК Упаковка
			|ГДЕ
			|	Упаковка.Ссылка = &УпаковкаЕдиницаИзмерения";
			
			ИсточникНоменклатуры = Неопределено;
			ИсточникУпаковки = "Упаковка";
		Иначе
			ТекстЗапроса = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Упаковка.ТипИзмеряемойВеличины КАК ТипИзмеряемойВеличиныДляПроверки,
			|	&ПрочиеРеквизиты,
			|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК Коэффициент,
			|	&ТекстЗапросаВесУпаковки КАК Вес,
			|	ВЫБОР
			|		КОГДА Номенклатура.ВесИспользовать
			|			ТОГДА ВЫБОР
			|				КОГДА Номенклатура.ВесЗнаменатель = 0
			|					ТОГДА 0
			|				ИНАЧЕ Номенклатура.ВесЧислитель / Номенклатура.ВесЗнаменатель
			|			КОНЕЦ * ВЫБОР
			|				КОГДА Номенклатура.ВесЕдиницаИзмерения.Знаменатель = 0
			|					ТОГДА 0
			|				ИНАЧЕ Номенклатура.ВесЕдиницаИзмерения.Числитель / Номенклатура.ВесЕдиницаИзмерения.Знаменатель
			|			КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК ВесНетто,
			|	&ТекстЗапросаОбъемУпаковки КАК Объем
			|ИЗ
			|	Справочник.УпаковкиЕдиницыИзмерения КАК Упаковка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
			|		ПО (Упаковка.Ссылка = &УпаковкаЕдиницаИзмерения)
			|		И (Номенклатура.Ссылка = &Номенклатура)";
			
			ИсточникНоменклатуры = "Номенклатура";
			ИсточникУпаковки = "Упаковка";
		КонецЕсли;
	КонецЕсли;
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаКоэффициентУпаковки",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(ИсточникУпаковки,
																										ИсточникНоменклатуры));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаВесУпаковки",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(ИсточникУпаковки,
																							ИсточникНоменклатуры, 
																							ВесОбъемУпаковкиВЕдиницеКонстанты));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаОбъемУпаковки",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(ИсточникУпаковки,
																								ИсточникНоменклатуры, 
																								ВесОбъемУпаковкиВЕдиницеКонстанты));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПрочиеРеквизиты", 		СтрокаПрочихРеквизитов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("УпаковкаЕдиницаИзмерения", Упаковка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		НужноОкруглять = ЗначениеЗаполнено(Номенклатура) 
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЕдиницаИзмерения.ТипИзмеряемойВеличины") = Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук
			И (Выборка.ТипИзмеряемойВеличиныДляПроверки = Перечисления.ТипыИзмеряемыхВеличин.Вес
			Или Выборка.ТипИзмеряемойВеличиныДляПроверки = Перечисления.ТипыИзмеряемыхВеличин.Длина
			Или Выборка.ТипИзмеряемойВеличиныДляПроверки = Перечисления.ТипыИзмеряемыхВеличин.Объем
			Или Выборка.ТипИзмеряемойВеличиныДляПроверки = Перечисления.ТипыИзмеряемыхВеличин.Площадь);
		Результат.НужноОкруглятьКоличество = НужноОкруглять;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Функция - Коэффициент упаковки
//
// Параметры:
//  Упаковка	 - 	СправочникСсылка.УпаковкиЕдиницыИзмерения - упаковка, коэффициент которой нужно получить
//  Номенклатура - 	СправочникСсылка.Номенклатура - обязательно для указания, если упаковка НЕ типа "Упаковка".
// 
// Возвращаемое значение:
//  Число - коэффициент упаковки
//
Функция КоэффициентУпаковки(Упаковка, Номенклатура) Экспорт 
	
	Если Не ЗначениеЗаполнено(Упаковка) Тогда
		Возврат 1;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК Коэффициент,
		|	Упаковка.ТипИзмеряемойВеличины КАК ТипИзмеряемойВеличины
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК Упаковка
		|ГДЕ
		|	Упаковка.Ссылка = &УпаковкаЕдиницаИзмерения";
		
		ИсточникНоменклатуры = Неопределено;
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК Коэффициент,
		|	Упаковка.ТипИзмеряемойВеличины КАК ТипИзмеряемойВеличины
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК Упаковка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО (Номенклатура.Ссылка = &Номенклатура)
		|			И (Упаковка.Ссылка = &УпаковкаЕдиницаИзмерения)";
		ИсточникНоменклатуры =  "Номенклатура";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаКоэффициентУпаковки",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("Упаковка",ИсточникНоменклатуры));

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("УпаковкаЕдиницаИзмерения", Упаковка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Выборка.ТипИзмеряемойВеличины <> Перечисления.ТипыИзмеряемыхВеличин.Упаковка
			И Номенклатура = Неопределено Тогда
			ТекстИсключения = НСтр("ru = 'Для расчета коэффициента упаковки нужно передать номенклатуру.'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		Коэффициент = Выборка.Коэффициент;
		
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции

// Возвращает коэффициенты нескольких упаковок
//
// Параметры:
//  ДанныеУпаковок	 - Массив - элементы массива должны содержать свойства Номенклатура и Упаковка.
// 
// Возвращаемое значение:
//   - Соответствие - ключ ссылка на номенклатуру, значение соответствие упаковка и ее коэффициент.
//
Функция КоэффициентыУпаковок(ДанныеУпаковок) Экспорт

	Если ДанныеУпаковок.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеУпаковокТаблица = Новый ТаблицаЗначений;
	ДанныеУпаковокТаблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ДанныеУпаковокТаблица.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(ДанныеУпаковокТаблица, ДанныеУпаковок);
	
	ТекстЗапроса =
	"ВЫБРАТЬ 
	|	ДанныеУпаковок.Номенклатура,
	|	ДанныеУпаковок.Упаковка
	|ПОМЕСТИТЬ ДанныеУпаковок
	|ИЗ
	|	&ДанныеУпаковок КАК ДанныеУпаковок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеУпаковок.Номенклатура,
	|	ДанныеУпаковок.Упаковка,
	|	&ТекстЗапросаКоэффициентУпаковки КАК Коэффициент
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаКоэффициентУпаковки",
								ТекстЗапросаКоэффициентаУпаковки("ДанныеУпаковок.Упаковка", "ДанныеУпаковок.Номенклатура"));
								
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДанныеУпаковок", ДанныеУпаковокТаблица);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	КоэффициентыУпаковок = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		
		КоэффициентыУпаковокНоменклатуры = КоэффициентыУпаковок.Получить(Выборка.Номенклатура);
		Если КоэффициентыУпаковокНоменклатуры = Неопределено Тогда
			КоэффициентыУпаковокНоменклатуры = Новый Соответствие;
		КонецЕсли;
		КоэффициентыУпаковокНоменклатуры.Вставить(Выборка.Упаковка, Выборка.Коэффициент);
		
		КоэффициентыУпаковок.Вставить(Выборка.Номенклатура, КоэффициентыУпаковокНоменклатуры);
	
	КонецЦикла;

	Возврат КоэффициентыУпаковок;
	
КонецФункции

// Функция - Это мерная упаковка
//
// Параметры:
//  ЕдиницаИзмерения -  СправочникСсылка.УпаковкиЕдиницыИзмерения
//  ВозвращаемыйПараметрТипИзмеряемойВеличины - Строка - возвращаемый параметр, тип измеряемой величины.
// 
// Возвращаемое значение:
//  Булево - признак того, является ли Упаковка - мерной.
//
Функция ЭтоМернаяЕдиница(ЕдиницаИзмерения, ВозвращаемыйПараметрТипИзмеряемойВеличины = "") Экспорт 
	
	Если Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		ТипЕдиницыЗначение = Неопределено;
	Иначе
		ТипЕдиницыЗначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЕдиницаИзмерения, "ТипИзмеряемойВеличины");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипЕдиницыЗначение) Тогда
		ВозвращаемыйПараметрТипИзмеряемойВеличины = ОбщегоНазначения.ИмяЗначенияПеречисления(ТипЕдиницыЗначение);
	Иначе
		ВозвращаемыйПараметрТипИзмеряемойВеличины = "";
	КонецЕсли;
	
	Если ВозвращаемыйПараметрТипИзмеряемойВеличины = "Вес"
		Или ВозвращаемыйПараметрТипИзмеряемойВеличины = "Объем"
		Или ВозвращаемыйПараметрТипИзмеряемойВеличины = "Площадь"
		Или ВозвращаемыйПараметрТипИзмеряемойВеличины = "Длина" Тогда
		
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Функция получает перечень кодов единиц измерения и по этим кодам ищет единицы в справочнике.
// Если их нет, то создает элементы справочника в соответствии с классификатором ОКЕИ.
//
// Параметры:
//	СтрокаКодов		 - Строка	 - Строка с кодами единиц измерения через запятую,
//	РежимОбновления	 - Булево	 - Истина - признак записи объекта через метод ОбновлениеИнформационнойБазы.ЗаписатьОбъект().
//
// Возвращаемое значение:
//	Соответствие из КлючИЗначение - список кодов единиц измерений и их ссылок:
//		* Ключ - Строка- Код единицы измерения по ОКЕИ.
//		* Значение - Неопределено, СправочникСсылка.УпаковкиЕдиницыИзмерения - ссылка на единицу измерения или Неопределено, если такого кода нет в ОКЕИ.
//
Функция ЗаполнитьЕдиницыИзмеренияИзКлассификатора(СтрокаКодов, РежимОбновления = Ложь) Экспорт
	
	Соответствие = Новый Соответствие;
	Дерево = ПолучитьДанныеКлассификатора();
	
	МассивКодов = СтрРазделить(СтрокаКодов, ",", Ложь);
	
	Для Каждого Код Из МассивКодов Цикл
		
		СуществующийЭлемент = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду(Код);
		Если Не ЗначениеЗаполнено(СуществующийЭлемент) Тогда
			
			СтруктураПоиска = Новый Структура("КодЧисловой", Код);
			СтрокаДерева = Дерево.Строки.НайтиСтроки(СтруктураПоиска, Истина);
			
			Если СтрокаДерева.Количество() > 0 Тогда
				СвойстваЕдИзмерения = СтрокаДерева[0];
				
				СправочникОбъект = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
				
				Если ЗначениеЗаполнено(СвойстваЕдИзмерения.УсловноеОбозначениеНациональное) Тогда
					Наименование = СвойстваЕдИзмерения.УсловноеОбозначениеНациональное;
				ИначеЕсли ЗначениеЗаполнено(СвойстваЕдИзмерения.УсловноеОбозначениеМеждународное) Тогда
					Наименование = СвойстваЕдИзмерения.УсловноеОбозначениеМеждународное;
				ИначеЕсли ЗначениеЗаполнено(СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеНациональное) Тогда
					Наименование = СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеНациональное;
				ИначеЕсли ЗначениеЗаполнено(СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеМеждународное) Тогда
					Наименование = СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеМеждународное;
				Иначе
					Наименование = СвойстваЕдИзмерения.Наименование;
				КонецЕсли;
				
				СправочникОбъект.Наименование            = СтрЗаменить(Наименование,Символы.ПС,"/");
				СправочникОбъект.МеждународноеСокращение = СтрЗаменить(СвойстваЕдИзмерения.КодовоеБуквенноеОбозначениеМеждународное,Символы.ПС,"/");
				СправочникОбъект.НаименованиеПолное      = СтрЗаменить(СвойстваЕдИзмерения.Наименование,Символы.ПС,"/");
				СправочникОбъект.Код                     = СвойстваЕдИзмерения.КодЧисловой;
				СправочникОбъект.Числитель               = СвойстваЕдИзмерения.Числитель;
				СправочникОбъект.Знаменатель             = СвойстваЕдИзмерения.Знаменатель;
				СправочникОбъект.Владелец				 = Справочники.НаборыУпаковок.БазовыеЕдиницыИзмерения;
				
				Если ЗначениеЗаполнено(СвойстваЕдИзмерения.ТипИзмеряемойВеличины) Тогда
					СправочникОбъект.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин[СвойстваЕдИзмерения.ТипИзмеряемойВеличины];
				КонецЕсли;
				Если РежимОбновления Тогда
					ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект);
				Иначе
					СправочникОбъект.Записать();
				КонецЕсли;
				
				Соответствие.Вставить(Код, СправочникОбъект.Ссылка);
			Иначе
				Соответствие.Вставить(Код, Неопределено);
			КонецЕсли;
		Иначе
			Соответствие.Вставить(Код, СуществующийЭлемент);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Соответствие;
	
КонецФункции

// Устанавливает значения реквизитов по умолчанию в зависимости от типа упаковки / ед. измерения и других параметров.
//
// Параметры:
//  Упаковка - ДанныеФормыСтруктура, СправочникОбъект.УпаковкиЕдиницыИзмерения - упаковка / единица измерения, в которой
//      нужно настроить значения реквизитов в зависимости от типа и прочих параметров.
//
Процедура ОтработатьЛогикуСвязиРеквизитов(Упаковка) Экспорт
	
	Если Упаковка.ТипИзмеряемойВеличины <> Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда
		Упаковка.Безразмерная  = Ложь;
		Упаковка.Высота  = 0;
		Упаковка.Ширина  = 0;
		Упаковка.Глубина = 0;
		Упаковка.Объем   = 0;
		Упаковка.ЛинейныеРазмерыПредставление = "";
		Упаковка.ВесЕдиницаИзмерения = Неопределено;
		Упаковка.ВысотаЕдиницаИзмерения = Неопределено;
		Упаковка.ГлубинаЕдиницаИзмерения = Неопределено;
		Упаковка.ЕдиницаИзмерения = Неопределено;
		Упаковка.ОбъемЕдиницаИзмерения = Неопределено;
		Упаковка.СкладскаяГруппа = Неопределено;
		Упаковка.СкладскаяГруппа = Неопределено;
		Упаковка.Типоразмер = Неопределено;
		Упаковка.ШиринаЕдиницаИзмерения = Неопределено;
		Упаковка.КоличествоУпаковок = 0;
		Упаковка.ПоставляетсяВМногооборотнойТаре = Ложь;
		Упаковка.НоменклатураМногооборотнаяТара = Неопределено;
		Упаковка.ХарактеристикаМногооборотнаяТара = Неопределено;
		Упаковка.МинимальноеКоличествоУпаковокМногооборотнойТары = 0;
		Упаковка.ТипУпаковки = Неопределено;
	Иначе	
		Упаковка.Код = "";
		Упаковка.НаименованиеПолное = "";
		Упаковка.МеждународноеСокращение = "";
		
		Если Упаковка.Безразмерная Тогда
			Упаковка.Высота  = 0;
			Упаковка.Ширина  = 0;
			Упаковка.Глубина = 0;
			Упаковка.Объем   = 0;
			
			Упаковка.ЛинейныеРазмерыПредставление = НСтр("ru='Безразмерная'");
		Иначе
			Упаковка.ЛинейныеРазмерыПредставление = Строка(Упаковка.Высота) + " X " + Строка(Упаковка.Ширина) + " X " + Строка(Упаковка.Глубина);
		КонецЕсли;
		
		Если Упаковка.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Составная Тогда
			Если ЗначениеЗаполнено(Упаковка.Родитель) Тогда 
				Результат   = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентВесОбъемПрочиеРеквизитыУпаковки(Упаковка.Родитель,
					Неопределено,
					"Числитель, ТипУпаковки");
				Упаковка.Числитель   = Результат.Числитель * Упаковка.КоличествоУпаковок;
				Упаковка.Знаменатель = 1;
			КонецЕсли;
		ИначеЕсли Упаковка.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Разупаковка Тогда
			Упаковка.Родитель           = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			Упаковка.КоличествоУпаковок = 0;
			Упаковка.Числитель          = 1;
			
			Упаковка.ПоставляетсяВМногооборотнойТаре   = Ложь;
			Упаковка.НоменклатураМногооборотнаяТара    = Неопределено;
			Упаковка.ХарактеристикаМногооборотнаяТара  = Неопределено;
		ИначеЕсли Упаковка.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Конечная Тогда
			Упаковка.Родитель           = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			Упаковка.КоличествоУпаковок = 0;
			Упаковка.Знаменатель        = 1;
		ИначеЕсли Упаковка.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.ТоварноеМесто Тогда
			Упаковка.Родитель           = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			Упаковка.Числитель 			= 1;
			Упаковка.Знаменатель        = Упаковка.КоличествоУпаковок;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает массив мерных типов единиц измеряемых величин.
// 
// Возвращаемое значение:
//	Массив Из ПеречислениеСсылка.ТипыИзмеряемыхВеличин - мерные типы единиц измеряемых величин.
//
Функция МерныеТипыЕдиницИзмерений() Экспорт
	
	МерныеТипы = Новый Массив;
	МерныеТипы.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Вес);
	МерныеТипы.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Длина);
	МерныеТипы.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Объем);
	МерныеТипы.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Площадь);
	
	Возврат МерныеТипы;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ ИСТИНА
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	НоменклатураСервер.УпаковкиЕдиницыИзмеренияОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	НоменклатураВызовСервера.УпаковкиЕдиницыИзмеренияОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецЕсли

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры
#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция СформироватьНаименование(ТипУпаковки, ЕдиницаИзмерения, Числитель, Знаменатель, ЕдиницаИзмеренияВладельца) Экспорт
	
	Если ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Конечная 
		И Числитель / Знаменатель = 1 Тогда
		Возврат СокрЛП(ЕдиницаИзмерения);
	ИначеЕсли ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Разупаковка Тогда
		Возврат СокрЛП(СокрЛП(ЕдиницаИзмерения) + " (" + Формат(Числитель, "ЧРД=.") + "/" + Формат(Знаменатель, "ЧРД=.") + " " + СокрЛП(ЕдиницаИзмеренияВладельца) + ")");
	ИначеЕсли ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.ТоварноеМесто Тогда
		Возврат "";		
	ИначеЕсли Числитель <> 0 И Знаменатель <> 0 Тогда 
		Возврат СокрЛП(СокрЛП(ЕдиницаИзмерения) + " (" + Формат(Числитель / Знаменатель,"ЧРД=.") + " " + СокрЛП(ЕдиницаИзмеренияВладельца) + ")");
	Иначе 
		Возврат "";
	КонецЕсли;

КонецФункции

Процедура СкопироватьИерархиюУпаковок(НовыйВладелец, СтарыйВладелец, СоответствияСкопированныхОбъектов) Экспорт
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Наименование,
	|	УпаковкиЕдиницыИзмерения.Безразмерная,
	|	УпаковкиЕдиницыИзмерения.Вес,
	|	УпаковкиЕдиницыИзмерения.ВесЕдиницаИзмерения,
	|	УпаковкиЕдиницыИзмерения.Высота,
	|	УпаковкиЕдиницыИзмерения.ВысотаЕдиницаИзмерения,
	|	УпаковкиЕдиницыИзмерения.Глубина,
	|	УпаковкиЕдиницыИзмерения.ГлубинаЕдиницаИзмерения,
	|	УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения,
	|	УпаковкиЕдиницыИзмерения.Числитель КАК Числитель,
	|	УпаковкиЕдиницыИзмерения.Знаменатель КАК Знаменатель,
	|	УпаковкиЕдиницыИзмерения.ЛинейныеРазмерыПредставление,
	|	УпаковкиЕдиницыИзмерения.Объем,
	|	УпаковкиЕдиницыИзмерения.ОбъемЕдиницаИзмерения,
	|	УпаковкиЕдиницыИзмерения.СкладскаяГруппа,
	|	УпаковкиЕдиницыИзмерения.Типоразмер,
	|	УпаковкиЕдиницыИзмерения.Ширина,
	|	УпаковкиЕдиницыИзмерения.ШиринаЕдиницаИзмерения,
	|	УпаковкиЕдиницыИзмерения.Представление,
	|	УпаковкиЕдиницыИзмерения.КоличествоУпаковок,
	|	УпаковкиЕдиницыИзмерения.ТипУпаковки КАК ТипУпаковки,
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК СсылкаДляКонтроля,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК СсылкаДляЛистовДерева,
	|	УпаковкиЕдиницыИзмерения.ПоставляетсяВМногооборотнойТаре,
	|	УпаковкиЕдиницыИзмерения.НоменклатураМногооборотнаяТара,
	|	УпаковкиЕдиницыИзмерения.ХарактеристикаМногооборотнаяТара,
	|	УпаковкиЕдиницыИзмерения.МинимальноеКоличествоУпаковокМногооборотнойТары,
	|	УпаковкиЕдиницыИзмерения.ТипИзмеряемойВеличины,
	|	УпаковкиЕдиницыИзмерения.НаименованиеПолное,
	|	УпаковкиЕдиницыИзмерения.МеждународноеСокращение
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Владелец = &Владелец
	|	И НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
	|ИТОГИ ПО
	|	СсылкаДляКонтроля ТОЛЬКО ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("Владелец", СтарыйВладелец);
	
	ДеревоУпаковок = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	СоответствиеУпаковок = Новый Соответствие;
	
	Для Каждого СтрДрв Из ДеревоУпаковок.Строки Цикл
		
		Если СтрДрв.НаименованиеПолное <> Null Тогда
			
			УпаковкаОбъект = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(УпаковкаОбъект, СтрДрв);
			
			УпаковкаОбъект.Владелец = НовыйВладелец;
			УпаковкаОбъект.Записать();
			
			СоответствиеУпаковок.Вставить(СтрДрв.СсылкаДляКонтроля, УпаковкаОбъект.Ссылка);
			
			СтрДрв.СсылкаДляЛистовДерева = УпаковкаОбъект.Ссылка;	
			
		КонецЕсли;
		
		ЗаписатьИерархиюУпаковок(СтрДрв.Строки, НовыйВладелец, СоответствиеУпаковок);

	КонецЦикла;
	
	СоответствияСкопированныхОбъектов.Вставить("Упаковки", СоответствиеУпаковок); 
	
КонецПроцедуры

Процедура ЗаписатьИерархиюУпаковок(СтрокиТекущегоУровня, ВладелецУпаковок, СоответствиеУпаковок)
	Для Каждого СтрДрв Из СтрокиТекущегоУровня Цикл
		
		Если СтрДрв.СсылкаДляКонтроля = СтрДрв.Родитель.СсылкаДляКонтроля Тогда
			Продолжить;
		КонецЕсли;
		
		УпаковкаОбъект = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(УпаковкаОбъект,СтрДрв);
		
		УпаковкаОбъект.Владелец = ВладелецУпаковок;
		
		Если СтрДрв.Родитель <> Неопределено Тогда
			УпаковкаОбъект.Родитель = СтрДрв.Родитель.СсылкаДляЛистовДерева;
		КонецЕсли;	
			
		УпаковкаОбъект.Записать();
		
		СоответствиеУпаковок.Вставить(СтрДрв.СсылкаДляКонтроля, УпаковкаОбъект.Ссылка);
		СтрДрв.СсылкаДляЛистовДерева = УпаковкаОбъект.Ссылка;
		
		ЗаписатьИерархиюУпаковок(СтрДрв.Строки, ВладелецУпаковок, СоответствиеУпаковок);
	КонецЦикла;	
КонецПроцедуры

Функция БазовыеЕдиницыИзмерения() Экспорт
	
	ЕдиницыИзмерения = Новый Структура;
	ЕдиницаИзмеренияДлины = Константы.ЕдиницаИзмеренияДлины.Получить();
	ЕдиницыИзмерения.Вставить("ВысотаЕдиницаИзмерения",  ЕдиницаИзмеренияДлины);
	ЕдиницыИзмерения.Вставить("ШиринаЕдиницаИзмерения",  ЕдиницаИзмеренияДлины);
	ЕдиницыИзмерения.Вставить("ГлубинаЕдиницаИзмерения", ЕдиницаИзмеренияДлины);
	ЕдиницыИзмерения.Вставить("ОбъемЕдиницаИзмерения",   Константы.ЕдиницаИзмеренияОбъема.Получить());
	ЕдиницыИзмерения.Вставить("ВесЕдиницаИзмерения",   Константы.ЕдиницаИзмеренияВеса.Получить());
	Возврат ЕдиницыИзмерения;
	
КонецФункции

Функция РеквизитыЕдиницыИзмерения()
	
	Результат = Новый Массив;
	
	Результат.Добавить("Код");
	Результат.Добавить("Наименование");
	Результат.Добавить("НаименованиеПолное");
	Результат.Добавить("МеждународноеСокращение");
	Результат.Добавить("Представление");
	Результат.Добавить("ТипИзмеряемойВеличины");
	Результат.Добавить("Знаменатель");
	Результат.Добавить("Числитель");
	
	Возврат Результат;
	
КонецФункции

// Возвращаемое значение:
// 	ТаблицаЗначений:
// 		* Источник - СправочникСсылка.УпаковкиЕдиницыИзмерения
// 		* Упаковка - СправочникСсылка.УпаковкиЕдиницыИзмерения
// 		* Количество - Число
// 		* МаксимальнаяУпаковкаВВетви - Число
//
Функция СформироватьТаблицуВариантовПереупаковкиНаСервере(Владелец) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Источник,
	|	УпаковкиЕдиницыИзмерения.Родитель КАК Упаковка,
	|	ВЫБОР
	|		КОГДА УпаковкиЕдиницыИзмерения.КоличествоУпаковок = 0
	|			ТОГДА УпаковкиЕдиницыИзмерения.Числитель / УпаковкиЕдиницыИзмерения.Знаменатель
	|		ИНАЧЕ УпаковкиЕдиницыИзмерения.КоличествоУпаковок
	|	КОНЕЦ КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК МаксимальнаяУпаковкаВВетви
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Владелец = &Владелец
	|	И НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	ТаблицаУпаковок = Запрос.Выполнить().Выгрузить();
	ТаблицаВариантовПереупаковки = ТаблицаУпаковок.СкопироватьКолонки();
	ТекущаяИерархия = ТаблицаУпаковок.СкопироватьКолонки();
	
	ЗаполнитьВариантыПереупаковки(ТаблицаУпаковок, ТаблицаВариантовПереупаковки, ТекущаяИерархия, Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	
	// Переупаковка в пустую упаковку используется только для мерных единиц хранения
	ТипИзмеряемойВеличиныВладельца = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец,"ЕдиницаИзмерения.ТипИзмеряемойВеличины");
	
	Если Не (ТипИзмеряемойВеличиныВладельца = Перечисления.ТипыИзмеряемыхВеличин.Вес
		Или ТипИзмеряемойВеличиныВладельца = Перечисления.ТипыИзмеряемыхВеличин.Объем
		Или ТипИзмеряемойВеличиныВладельца = Перечисления.ТипыИзмеряемыхВеличин.Площадь
		Или ТипИзмеряемойВеличиныВладельца = Перечисления.ТипыИзмеряемыхВеличин.Длина) Тогда
		
		Отбор = Новый Структура("Упаковка", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
		УдаляемыеСтроки = ТаблицаВариантовПереупаковки.НайтиСтроки(Отбор);
		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			ТаблицаВариантовПереупаковки.Удалить(УдаляемаяСтрока);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблицаВариантовПереупаковки;
	
КонецФункции

// Параметры:
// 	ТаблицаУпаковок 				- см. СформироватьТаблицуВариантовПереупаковкиНаСервере
// 	ТаблицаВариантовПереупаковки 	- см. СформироватьТаблицуВариантовПереупаковкиНаСервере
// 	ТекущаяИерархия 				- см. СформироватьТаблицуВариантовПереупаковкиНаСервере
// 	Упаковка 						- СправочникСсылка.УпаковкиЕдиницыИзмерения - см. СформироватьТаблицуВариантовПереупаковкиНаСервере
//
Процедура ЗаполнитьВариантыПереупаковки(ТаблицаУпаковок, ТаблицаВариантовПереупаковки, ТекущаяИерархия, Упаковка)
	
	Отбор = Новый Структура("Упаковка", Упаковка);
	Строки = ТаблицаУпаковок.НайтиСтроки(Отбор);
	Если Строки.Количество() = 0 Тогда
		Если Не ЗначениеЗаполнено(Упаковка) Тогда
			Возврат;
		КонецЕсли;
		
		// Конечный элемент в дереве, можно заполнять максимальную упаковку в ветви
		Для Каждого СтрокаИерархии Из ТекущаяИерархия Цикл
			НоваяСтрока = ТаблицаВариантовПереупаковки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаИерархии);
			НоваяСтрока.МаксимальнаяУпаковкаВВетви = Упаковка;
		КонецЦикла;
		
		НоваяСтрока = ТаблицаВариантовПереупаковки.Добавить();
		НоваяСтрока.Упаковка = Упаковка;
		НоваяСтрока.МаксимальнаяУпаковкаВВетви = Упаковка;
		НоваяСтрока.Количество = 1;
	Иначе
		Для Каждого Строка Из Строки Цикл
			
			ИерархияУпаковок = ТекущаяИерархия.Скопировать();
			
			Отбор = Новый Структура("Источник", Строка.Упаковка);
			СтрокиПереупаковки = ТекущаяИерархия.НайтиСтроки(Отбор);
			// Переупаковка из упаковки источника в меньшие упаковки
			Для Каждого СтрокаПереупаковки Из СтрокиПереупаковки Цикл
				НоваяСтрока = ИерархияУпаковок.Добавить();
				НоваяСтрока.Упаковка = СтрокаПереупаковки.Упаковка;
				НоваяСтрока.Источник = Строка.Источник;
				НоваяСтрока.Количество = СтрокаПереупаковки.Количество * Строка.Количество;
			КонецЦикла;
			
			// Переупаковка из упаковки источника в текущую упаковку
			НоваяСтрока = ИерархияУпаковок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
			
			// Переупаковка из упаковок больше источника
			ЗаполнитьВариантыПереупаковки(ТаблицаУпаковок, ТаблицаВариантовПереупаковки, ИерархияУпаковок, Строка.Источник);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Функция ПолучитьДанныеКлассификатора() Экспорт
	
	ЛокализацияРФ = ПолучитьФункциональнуюОпцию("ЛокализацияРФ");
	ДеревоЗначений = Новый ДеревоЗначений;
	ДеревоЗначений.Колонки.Добавить("КодЧисловой");
	ДеревоЗначений.Колонки.Добавить("Наименование");
	ДеревоЗначений.Колонки.Добавить("УсловноеОбозначениеНациональное");
	ДеревоЗначений.Колонки.Добавить("УсловноеОбозначениеМеждународное");
	ДеревоЗначений.Колонки.Добавить("КодовоеБуквенноеОбозначениеНациональное");
	ДеревоЗначений.Колонки.Добавить("КодовоеБуквенноеОбозначениеМеждународное");
	ДеревоЗначений.Колонки.Добавить("Числитель");
	ДеревоЗначений.Колонки.Добавить("Знаменатель");
	ДеревоЗначений.Колонки.Добавить("ТипИзмеряемойВеличины");
	Уровень1 = ДеревоЗначений.Строки.Добавить();
	Уровень1.КодЧисловой = "";
	Если ЛокализацияРФ Тогда
		Уровень1.Наименование = НСтр(
			"ru = 'Международные единицы измерения, включенные в ОКЕИ'", ОбщегоНазначения.КодОсновногоЯзыка());
	Иначе
		Уровень1.Наименование = НСтр(
			"ru = 'Основные международные единицы измерения'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	Уровень1.УсловноеОбозначениеНациональное = "";
	Уровень1.УсловноеОбозначениеМеждународное = "";
	Уровень1.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень1.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень1.Числитель = 0;
	Уровень1.Знаменатель = 0;
	Уровень1.ТипИзмеряемойВеличины = "";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Единицы длины'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "003";
	Уровень3.Наименование = НСтр("ru = 'Миллиметр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мм'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "mm"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ММ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MMT"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "004";
	Уровень3.Наименование = НСтр("ru = 'Сантиметр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'см'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "cm"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CMT"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 100;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "005";
	Уровень3.Наименование = НСтр("ru = 'Дециметр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дм'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "dm"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DMT"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 10;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "006";
	Уровень3.Наименование = НСтр("ru = 'Метр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "m"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MTR"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "008";
	Уровень3.Наименование = НСтр("ru = 'Километр (Тысяча метров)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НСтр("ru = 'км
		|1000 м'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеМеждународное = "km"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КМ (ТЫС М)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KMT"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "009";
	Уровень3.Наименование = НСтр("ru = 'Мегаметр (Миллион метров)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Мм (10^6 м)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Mm"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЕГАМ (МЛН М)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MAM"; //@NON-NLS-1
	Уровень3.Числитель = 1000000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "039";
	Уровень3.Наименование = НСтр("ru = 'Дюйм (25,4 мм)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дюйм'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "in"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЮЙМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "INH"; //@NON-NLS-1
	Уровень3.Числитель = 254;
	Уровень3.Знаменатель = 10000;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "041";
	Уровень3.Наименование = НСтр("ru = 'Фут (0,3048 м)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'фут'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "ft"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ФУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "FOT"; //@NON-NLS-1
	Уровень3.Числитель = 3048;
	Уровень3.Знаменатель = 10000;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "043";
	Уровень3.Наименование = НСтр("ru = 'Ярд (0,9144 м)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ярд'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "yd"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЯРД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "YRD"; //@NON-NLS-1
	Уровень3.Числитель = 9144;
	Уровень3.Знаменатель = 10000;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "047";
	Уровень3.Наименование = НСтр("ru = 'Морская миля (1852 м)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'миля'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "n mile"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МИЛЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NMI"; //@NON-NLS-1
	Уровень3.Числитель = 1852;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Единицы площади'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "050";
	Уровень3.Наименование = НСтр("ru = 'Квадратный миллиметр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мм2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "mm2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ММ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MMK"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "051";
	Уровень3.Наименование = НСтр("ru = 'Квадратный сантиметр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'см2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "cm2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СМ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CMK"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 10000;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "053";
	Уровень3.Наименование = НСтр("ru = 'Квадратный дециметр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дм2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "dm2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДМ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DMK"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 100;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "055";
	Уровень3.Наименование = НСтр("ru = 'Квадратный метр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "m2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MTK"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "058";
	Уровень3.Наименование = НСтр("ru = 'Тысяча квадратных метров'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 м2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "daa"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС М2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DAA"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "059";
	Уровень3.Наименование = НСтр("ru = 'Гектар'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'га'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "ha"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГА'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HAR"; //@NON-NLS-1
	Уровень3.Числитель = 10000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "061";
	Уровень3.Наименование = НСтр("ru = 'Квадратный километр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'км2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "km2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КМ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KMK"; //@NON-NLS-1
	Уровень3.Числитель = 1000000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "071";
	Уровень3.Наименование = НСтр("ru = 'Квадратный дюйм (645,16 мм2)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дюйм2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "in2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЮЙМ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "INK"; //@NON-NLS-1
	Уровень3.Числитель = 64.516;
	Уровень3.Знаменатель = 100000;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "073";
	Уровень3.Наименование = НСтр("ru = 'Квадратный фут (0,092903 м2)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'фут2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "ft2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ФУТ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "FTK"; //@NON-NLS-1
	Уровень3.Числитель = 929.03;
	Уровень3.Знаменатель = 10000;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "075";
	Уровень3.Наименование = НСтр("ru = 'Квадратный ярд (0,8361274 м2)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ярд2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "yd2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЯРД2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "YDK"; //@NON-NLS-1
	Уровень3.Числитель = 8361.274;
	Уровень3.Знаменатель = 10000;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "109";
	Уровень3.Наименование = НСтр("ru = 'Ар (100 м2)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'а'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "a"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'АР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "ARE"; //@NON-NLS-1
	Уровень3.Числитель = 100;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Единицы объема'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "110";
	Уровень3.Наименование = НСтр("ru = 'Кубический миллиметр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мм3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "mm3"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ММ3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MMQ"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "111";
	Уровень3.Наименование = НСтр("ru = 'Кубический сантиметр (Миллилитр)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'см3 (мл)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "cm3 (ml)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СМ3 (МЛ)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CMQ (MLT)"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "112";
	Уровень3.Наименование = НСтр("ru = 'Литр (Кубический дециметр)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'л (дм3)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "l (L)
		|dm3"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Л (ДМЗ)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "LTR (DMQ)"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "113";
	Уровень3.Наименование = НСтр("ru = 'Кубический метр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "m3"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MTQ"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "118";
	Уровень3.Наименование = НСтр("ru = 'Децилитр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дл'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "dl"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DLT"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 10000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "122";
	Уровень3.Наименование = НСтр("ru = 'Гектолитр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'гл'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "hl"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HLT"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 10;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "126";
	Уровень3.Наименование = НСтр("ru = 'Мегалитр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Мл'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Ml"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЕГАЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MAL"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "131";
	Уровень3.Наименование = НСтр("ru = 'Кубический дюйм (16387,1 мм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дюйм3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "in3"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЮЙМ3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "INQ"; //@NON-NLS-1
	Уровень3.Числитель = 163.871;
	Уровень3.Знаменатель = 10000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "132";
	Уровень3.Наименование = НСтр("ru = 'Кубический фут (0,02831685 м3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'фут3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "ft3"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ФУТ3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "FTQ"; //@NON-NLS-1
	Уровень3.Числитель = 2831.685;
	Уровень3.Знаменатель = 100000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "133";
	Уровень3.Наименование = НСтр("ru = 'Кубический ярд (0,764555 м3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ярд3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "yd3"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЯРДЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "YDQ"; //@NON-NLS-1
	Уровень3.Числитель = 764.555;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "159";
	Уровень3.Наименование = НСтр("ru = 'Миллион кубических метров'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 м3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "10^6 m3"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН МЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HMQ"; //@NON-NLS-1
	Уровень3.Числитель = 1000000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Единицы массы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "160";
	Уровень3.Наименование = НСтр("ru = 'Гектограмм'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'гг'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "hg"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГГ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HGM"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 10;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "161";
	Уровень3.Наименование = НСтр("ru = 'Миллиграмм'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мг'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "mg"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МГ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MGM"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "162";
	Уровень3.Наименование = НСтр("ru = 'Метрический карат (1 карат = 200 мг = 2*0,0001 кг)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кар'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "МС"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CTM"; //@NON-NLS-1
	Уровень3.Числитель = 2;
	Уровень3.Знаменатель = 10000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "163";
	Уровень3.Наименование = НСтр("ru = 'Грамм'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'г'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "g"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Г'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GRM"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "166";
	Уровень3.Наименование = НСтр("ru = 'Килограмм'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kg"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KGM"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "168";
	Уровень3.Наименование = НСтр("ru = 'Тонна (Метрическая тонна) (1000 кг)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "t"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "TNE"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "170";
	Уровень3.Наименование = НСтр("ru = 'Килотонна'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 т'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kt"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KTN"; //@NON-NLS-1
	Уровень3.Числитель = 1000000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "173";
	Уровень3.Наименование = НСтр("ru = 'Сантиграмм'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'сг'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "cg"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СГ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CGM"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 100000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "181";
	Уровень3.Наименование = НСтр("ru = 'Брутто - регистровая тонна (2,8316 м3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'БРТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'БРУТТ. РЕГИСТР Т'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GRT"; //@NON-NLS-1
	Уровень3.Числитель = 283.16;
	Уровень3.Знаменатель = 100;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "185";
	Уровень3.Наименование = НСтр("ru = 'Грузоподъемность в метрических тоннах'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т грп'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т ГРУЗОПОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CCT"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "206";
	Уровень3.Наименование = НСтр("ru = 'Центнер (метрический) (100 кг, Гектокилограмм, Квинтал (метрический), Децитонна)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ц'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "q (100 kg)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Ц'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DTN"; //@NON-NLS-1
	Уровень3.Числитель = 100;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Технические единицы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "212";
	Уровень3.Наименование = НСтр("ru = 'Ватт'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Вт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "W"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ВТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "WTT"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Мощность";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "214";
	Уровень3.Наименование = НСтр("ru = 'Киловатт'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кВт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kW"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KWT"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Мощность";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "215";
	Уровень3.Наименование = НСтр("ru = 'Мегаватт (Тысяча киловатт)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'МВт (1000 кВт)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "MW"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЕГАВТ (ТЫС КВТ)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MAW"; //@NON-NLS-1
	Уровень3.Числитель = 1000000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Мощность";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "222";
	Уровень3.Наименование = НСтр("ru = 'Вольт'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'В'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "V"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'В'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "VLT"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "223";
	Уровень3.Наименование = НСтр("ru = 'Киловольт'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кВ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kV"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KVT"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "227";
	Уровень3.Наименование = НСтр("ru = 'Киловольт - ампер'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кВ.А'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kV.A"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВ.А'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KVA"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Мощность";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "228";
	Уровень3.Наименование = НСтр("ru = 'Мегавольт - ампер (тысяча киловольт - ампер)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'МВ.А'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "MV.A"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЕГАВ.А'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MVA"; //@NON-NLS-1
	Уровень3.Числитель = 10000000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Мощность";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "230";
	Уровень3.Наименование = НСтр("ru = 'Киловар'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'квар'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kVAR"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KVR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "243";
	Уровень3.Наименование = НСтр("ru = 'Ватт - час'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Вт.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "W.h"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ВТ.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "WHR"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Энергия";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "245";
	Уровень3.Наименование = НСтр("ru = 'Киловатт - час'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кВт.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kW.h"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВТ.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KWH"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Энергия";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "246";
	Уровень3.Наименование = НСтр("ru = 'Мегаватт - час (1000 киловатт - часов)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'МВт.ч (1000 кВт.ч)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "МW.h"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЕГАВТ.Ч (ТЫС КВТ.Ч)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MWH"; //@NON-NLS-1
	Уровень3.Числитель = 1000000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Энергия";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "247";
	Уровень3.Наименование = НСтр("ru = 'Гигаватт - час (миллион киловатт - часов)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ГВт.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "GW.h"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГИГАВТ.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GWH"; //@NON-NLS-1
	Уровень3.Числитель = 1000000000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Энергия";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "260";
	Уровень3.Наименование = НСтр("ru = 'Ампер'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'А'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "A"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'А'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "AMP"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "263";
	Уровень3.Наименование = НСтр("ru = 'Ампер - час (3,6 кКл)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'А.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "A.h"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'А.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "AMH"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "ЭлектрическийЗаряд";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "264";
	Уровень3.Наименование = НСтр("ru = 'Тысяча ампер - часов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 А.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "1000 A.h"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС А.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "TAH"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "ЭлектрическийЗаряд";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "270";
	Уровень3.Наименование = НСтр("ru = 'Кулон'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Кл'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "C"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "COU"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "271";
	Уровень3.Наименование = НСтр("ru = 'Джоуль'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Дж'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "J"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЖ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "JOU"; //@NON-NLS-1
	Уровень3.Числитель = 3600;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Энергия";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "273";
	Уровень3.Наименование = НСтр("ru = 'Килоджоуль'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кДж'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kJ"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КДЖ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KJO"; //@NON-NLS-1
	Уровень3.Числитель = 3600000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Энергия";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "274";
	Уровень3.Наименование = НСтр("ru = 'Ом'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Ом'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Омега"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ОМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "OHM"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "280";
	Уровень3.Наименование = НСтр("ru = 'Градус Цельсия'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '°С'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "°С"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГРАД ЦЕЛЬС'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CEL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "281";
	Уровень3.Наименование = НСтр("ru = 'Градус Фаренгейта'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '°F'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "°F"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГРАД ФАРЕНГ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "FAN"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "282";
	Уровень3.Наименование = НСтр("ru = 'Кандела'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кд'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "cd"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CDL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "283";
	Уровень3.Наименование = НСтр("ru = 'Люкс'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'лк'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "lx"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЛК'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "LUX"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "284";
	Уровень3.Наименование = НСтр("ru = 'Люмен'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'лм'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "lm"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЛМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "LUM"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "288";
	Уровень3.Наименование = НСтр("ru = 'Кельвин'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'K'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "K"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'К'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KEL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "289";
	Уровень3.Наименование = НСтр("ru = 'Ньютон'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Н'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "N"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Н'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NEW"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "290";
	Уровень3.Наименование = НСтр("ru = 'Герц'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Гц'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Hz"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГЦ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HTZ"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "291";
	Уровень3.Наименование = НСтр("ru = 'Килогерц'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кГц'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kHz"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГЦ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KHZ"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "292";
	Уровень3.Наименование = НСтр("ru = 'Мегагерц'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'МГц'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "MHz"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЕГАГЦ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MHZ"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "294";
	Уровень3.Наименование = НСтр("ru = 'Паскаль'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Па'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Pa"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПА'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "PAL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "296";
	Уровень3.Наименование = НСтр("ru = 'Сименс'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'См'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "S"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СИ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "SIE"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "297";
	Уровень3.Наименование = НСтр("ru = 'Килопаскаль'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кПа'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kPa"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КПА'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KPA"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "298";
	Уровень3.Наименование = НСтр("ru = 'Мегапаскаль'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'МПа'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "MPa"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЕГАПА'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MPA"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "300";
	Уровень3.Наименование = НСтр("ru = 'Физическая атмосфера (101325 Па)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'атм'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "atm"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'АТМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "ATM"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "301";
	Уровень3.Наименование = НСтр("ru = 'Техническая атмосфера (98066,5 Па)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ат'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "at"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'АТТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "ATT"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "302";
	Уровень3.Наименование = НСтр("ru = 'Гигабеккерель'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ГБк'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "GBq"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГИГАБК'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GBQ"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "304";
	Уровень3.Наименование = НСтр("ru = 'Милликюри'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мКи'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "mCi"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МКИ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MCU"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "305";
	Уровень3.Наименование = НСтр("ru = 'Кюри'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Ки'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Ci"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КИ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CUR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "306";
	Уровень3.Наименование = НСтр("ru = 'Грамм делящихся изотопов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'г Д/И'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "g fissile isotopes"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Г ДЕЛЯЩ ИЗОТОП'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GFI"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "308";
	Уровень3.Наименование = НСтр("ru = 'Миллибар'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мб'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "mbar"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МБАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MBR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "309";
	Уровень3.Наименование = НСтр("ru = 'Бар'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'бар'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "bar"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'БАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "BAR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "310";
	Уровень3.Наименование = НСтр("ru = 'Гектобар'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'гб'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "hbar"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГБАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HBA"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "312";
	Уровень3.Наименование = НСтр("ru = 'Килобар'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кб'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kbar"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КБАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KBA"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "314";
	Уровень3.Наименование = НСтр("ru = 'Фарад'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Ф'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "F"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Ф'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "FAR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "316";
	Уровень3.Наименование = НСтр("ru = 'Килограмм на кубический метр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг/м3'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kg/m3"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ/МЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KMQ"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "323";
	Уровень3.Наименование = НСтр("ru = 'Беккерель'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Бк'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Bq"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'БК'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "BQL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "324";
	Уровень3.Наименование = НСтр("ru = 'Вебер'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Вб'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Wb"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ВБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "WEB"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "327";
	Уровень3.Наименование = НСтр("ru = 'Узел (миля/ч)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'уз'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "kn"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KNT"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "328";
	Уровень3.Наименование = НСтр("ru = 'Метр в секунду'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м/с'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "m/s"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М/С'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MTS"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "330";
	Уровень3.Наименование = НСтр("ru = 'Оборот в секунду'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'об/с'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "r/s"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ОБ/С'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "RPS"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "331";
	Уровень3.Наименование = НСтр("ru = 'Оборот в минуту'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'об/мин'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "r/min"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ОБ/МИН'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "RPM"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "333";
	Уровень3.Наименование = НСтр("ru = 'Километр в час'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'км/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "km/h"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КМ/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KMH"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "335";
	Уровень3.Наименование = НСтр("ru = 'Метр на секунду в квадрате'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м/с2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "m/s2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М/С2'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MSK"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "349";
	Уровень3.Наименование = НСтр("ru = 'Кулон на килограмм'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Кл/кг'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "C/kg"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КЛ/КГ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CKG"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Единицы времени'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "354";
	Уровень3.Наименование = НСтр("ru = 'Секунда'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'с'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "s"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'С'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "SEC"; //@NON-NLS-1
	Уровень3.Числитель = 1;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Время";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "355";
	Уровень3.Наименование = НСтр("ru = 'Минута'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мин'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "min"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МИН'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MIN"; //@NON-NLS-1
	Уровень3.Числитель = 60;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Время";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "356";
	Уровень3.Наименование = НСтр("ru = 'Час'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "h"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HUR"; //@NON-NLS-1
	Уровень3.Числитель = 3600;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Время";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "359";
	Уровень3.Наименование = НСтр("ru = 'Сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НСтр("ru = 'сут
		|дн'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеМеждународное = "d"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = НСтр("ru = 'СУТ
		|ДН'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DAY"; //@NON-NLS-1
	Уровень3.Числитель = 86400;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Время";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "360";
	Уровень3.Наименование = НСтр("ru = 'Неделя'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'нед'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'НЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "WEE"; //@NON-NLS-1
	Уровень3.Числитель = 604800;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Время";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "361";
	Уровень3.Наименование = НСтр("ru = 'Декада'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дек'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЕК'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DAD"; //@NON-NLS-1
	Уровень3.Числитель = 6048000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Время";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "362";
	Уровень3.Наименование = НСтр("ru = 'Месяц'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мес'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЕС'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MON"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "364";
	Уровень3.Наименование = НСтр("ru = 'Квартал'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кварт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВАРТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "QAN"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "365";
	Уровень3.Наименование = НСтр("ru = 'Полугодие'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'полгода'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПОЛГОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "SAN"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "366";
	Уровень3.Наименование = НСтр("ru = 'Год'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НСтр("ru = 'г
		|лет'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеМеждународное = "a"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = НСтр("ru = 'ГОД
		|ЛЕТ'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "ANN"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "368";
	Уровень3.Наименование = НСтр("ru = 'Десятилетие'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'деслет'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЕСЛЕТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DEC"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Экономические единицы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "499";
	Уровень3.Наименование = НСтр("ru = 'Килограмм в секунду'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг/с'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ/С'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KGS"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "533";
	Уровень3.Наименование = НСтр("ru = 'Тонна пара в час'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т пар/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т ПАР/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "TSH"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "596";
	Уровень3.Наименование = НСтр("ru = 'Кубический метр в секунду'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м3/с'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "m3/s"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М3/С'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MQS"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "598";
	Уровень3.Наименование = НСтр("ru = 'Кубический метр в час'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м3/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "m3/h"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М3/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MQH"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "599";
	Уровень3.Наименование = НСтр("ru = 'Тысяча кубических метров в сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 м3/сут'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС М3/СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "TQD"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "616";
	Уровень3.Наименование = НСтр("ru = 'Бобина'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'боб'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'БОБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NBB"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "625";
	Уровень3.Наименование = НСтр("ru = 'Лист'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'л.'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЛИСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "LEF"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "626";
	Уровень3.Наименование = НСтр("ru = 'Сто листов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '100 л.'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = '100 ЛИСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CLF"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "630";
	Уровень3.Наименование = НСтр("ru = 'Тысяча стандартных условных кирпичей'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'тыс станд. усл. кирп'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС СТАНД УСЛ КИРП'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MBE"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "641";
	Уровень3.Наименование = НСтр("ru = 'Дюжина (12 шт.)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дюжина'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Doz
		|12"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЮЖИНА'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DZN"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "657";
	Уровень3.Наименование = НСтр("ru = 'Изделие'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'изд'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ИЗД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NAR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "683";
	Уровень3.Наименование = НСтр("ru = 'Сто ящиков'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '100 ящ.'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "Hbx"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = '100 ЯЩ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HBX"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "704";
	Уровень3.Наименование = НСтр("ru = 'Набор'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'набор'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'НАБОР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "SET"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "715";
	Уровень3.Наименование = НСтр("ru = 'Пара (2 шт.)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'пар'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "pr
		|2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NPR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "730";
	Уровень3.Наименование = НСтр("ru = 'Два десятка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '20'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "20"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = '2 ДЕС'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "SCO"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "732";
	Уровень3.Наименование = НСтр("ru = 'Десять пар'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10 пар'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЕС ПАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "TPR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "733";
	Уровень3.Наименование = НСтр("ru = 'Дюжина пар'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дюжина пар'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЮЖИНА ПАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DPR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "734";
	Уровень3.Наименование = НСтр("ru = 'Посылка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'посыл'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПОСЫЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NPL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "735";
	Уровень3.Наименование = НСтр("ru = 'Часть'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'часть'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЧАСТЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NPT"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "736";
	Уровень3.Наименование = НСтр("ru = 'Рулон'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'рул'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'РУЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NRL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "737";
	Уровень3.Наименование = НСтр("ru = 'Дюжина рулонов'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дюжина рул'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЮЖИНА РУЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DRL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "740";
	Уровень3.Наименование = НСтр("ru = 'Дюжина штук'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дюжина шт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЮЖИНА ШТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DPC"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "745";
	Уровень3.Наименование = НСтр("ru = 'Элемент'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'элем'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "CI"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЭЛЕМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NCL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "778";
	Уровень3.Наименование = НСтр("ru = 'Упаковка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'упак'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УПАК'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NMP"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "780";
	Уровень3.Наименование = НСтр("ru = 'Дюжина упаковок'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дюжина упак'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЮЖИНА УПАК'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DZP"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "781";
	Уровень3.Наименование = НСтр("ru = 'Сто упаковок'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '100 упак'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = '100 УПАК'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CNP"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "796";
	Уровень3.Наименование = НСтр("ru = 'Штука'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'шт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "pc
		|1"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ШТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "PCE
		|NMB"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "797";
	Уровень3.Наименование = НСтр("ru = 'Сто штук'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '100 шт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "100"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = '100 ШТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CEN"; //@NON-NLS-1
	Уровень3.Числитель = 100;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "798";
	Уровень3.Наименование = НСтр("ru = 'Тысяча штук'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НСтр("ru = 'тыс. шт
		|1000 шт'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеМеждународное = "1000"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ШТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MIL"; //@NON-NLS-1
	Уровень3.Числитель = 1000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "799";
	Уровень3.Наименование = НСтр("ru = 'Миллион штук'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 шт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "10^6"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ШТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MIO"; //@NON-NLS-1
	Уровень3.Числитель = Pow(10, 6);
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "800";
	Уровень3.Наименование = НСтр("ru = 'Миллиард штук'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^9 шт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "10^9"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛРД ШТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MLD"; //@NON-NLS-1
	Уровень3.Числитель = Pow(10, 9);
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "801";
	Уровень3.Наименование = НСтр("ru = 'Биллион штук (Европа) (Триллион штук)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^12 шт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "10^12"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'БИЛЛ ШТ (ЕВР) (ТРИЛЛ ШТ)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "BIL"; //@NON-NLS-1
	Уровень3.Числитель = Pow(10, 12);
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "802";
	Уровень3.Наименование = НСтр("ru = 'Квинтильон штук (Европа)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^18 шт'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "10^18"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВИНТ ШТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "TRL"; //@NON-NLS-1
	Уровень3.Числитель = Pow(10, 18);
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "820";
	Уровень3.Наименование = НСтр("ru = 'Крепость спирта по массе'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'креп. спирта по массе'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "% mds"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КРЕП СПИРТ ПО МАСС'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "ASM"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "821";
	Уровень3.Наименование = НСтр("ru = 'Крепость спирта по объему'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'креп. спирта по объему'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "% vol"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КРЕП СПИРТ ПО ОБЪЕМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "ASV"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "831";
	Уровень3.Наименование = НСтр("ru = 'Литр чистого (100%) спирта'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'л 100% спирта'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Л ЧИСТ СПИРТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "LPA"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "833";
	Уровень3.Наименование = НСтр("ru = 'Гектолитр чистого (100%) спирта'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Гл 100% спирта'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГЛ ЧИСТ СПИРТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HPA"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "841";
	Уровень3.Наименование = НСтр("ru = 'Килограмм пероксида водорода'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг H(2)0(2)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ ПЕРОКСИД ВОДОРОДА'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "845";
	Уровень3.Наименование = НСтр("ru = 'Килограмм 90%-го сухого вещества'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг 90% с/в'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ 90 ПРОЦ СУХ ВЕЩ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KSD"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "847";
	Уровень3.Наименование = НСтр("ru = 'Тонна 90%-го сухого вещества'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т 90% с/в'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т 90 ПРОЦ СУХ ВЕЩ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "TSD"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "852";
	Уровень3.Наименование = НСтр("ru = 'Килограмм оксида калия'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг К(2)О'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ ОКСИД КАЛИЯ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KPO"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "859";
	Уровень3.Наименование = НСтр("ru = 'Килограмм гидроксида калия'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг КОН'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ ГИДРОКСИД КАЛИЯ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KPH"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "861";
	Уровень3.Наименование = НСтр("ru = 'Килограмм азота'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг N'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ АЗОТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KNI"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "863";
	Уровень3.Наименование = НСтр("ru = 'Килограмм гидроксида натрия'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг NaOH'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ ГИДРОКСИД НАТРИЯ'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KSH"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "865";
	Уровень3.Наименование = НСтр("ru = 'Килограмм пятиокиси фосфора'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг Р(2)О(5)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ ПЯТИОКИСЬ ФОСФОРА'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KPP"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "867";
	Уровень3.Наименование = НСтр("ru = 'Килограмм урана'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг U'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ УРАН'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "KUR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Если ЛокализацияРФ Тогда
		Уровень1 = ДеревоЗначений.Строки.Добавить();
		Уровень1.КодЧисловой = "";
		Уровень1.Наименование = НСтр("ru = 'Национальные единицы измерения, включенные в ОКЕИ'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень1.УсловноеОбозначениеНациональное = "";
		Уровень1.УсловноеОбозначениеМеждународное = "";
		Уровень1.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень1.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень1.Числитель = 0;
		Уровень1.Знаменатель = 0;
		Уровень1.ТипИзмеряемойВеличины = "";
		Уровень2 = Уровень1.Строки.Добавить();
		Уровень2.КодЧисловой = "";
		Уровень2.Наименование = НСтр("ru = 'Единицы длины'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень2.УсловноеОбозначениеНациональное = "";
		Уровень2.УсловноеОбозначениеМеждународное = "";
		Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень2.Числитель = 0;
		Уровень2.Знаменатель = 0;
		Уровень2.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "018";
		Уровень3.Наименование = НСтр("ru = 'Погонный метр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'пог. м'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПОГ М'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Длина";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "019";
		Уровень3.Наименование = НСтр("ru = 'Тысяча погонных метров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 пог. м'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПОГ М'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Длина";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "020";
		Уровень3.Наименование = НСтр("ru = 'Условный метр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. м'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ М'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Длина";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "048";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных метров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. м'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ М'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Длина";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "049";
		Уровень3.Наименование = НСтр("ru = 'Километр условных труб'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'км усл. труб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КМ УСЛ ТРУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень2 = Уровень1.Строки.Добавить();
		Уровень2.КодЧисловой = "";
		Уровень2.Наименование = НСтр("ru = 'Единицы площади'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень2.УсловноеОбозначениеНациональное = "";
		Уровень2.УсловноеОбозначениеМеждународное = "";
		Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень2.Числитель = 0;
		Уровень2.Знаменатель = 0;
		Уровень2.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "054";
		Уровень3.Наименование = НСтр("ru = 'Тысяча квадратных дециметров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 дм2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ДМ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 10;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "056";
		Уровень3.Наименование = НСтр("ru = 'Миллион квадратных дециметров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 дм2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ДМ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 10000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "057";
		Уровень3.Наименование = НСтр("ru = 'Миллион квадратных метров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 м2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН М2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "060";
		Уровень3.Наименование = НСтр("ru = 'Тысяча гектаров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 га'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ГА'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 10000000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "062";
		Уровень3.Наименование = НСтр("ru = 'Условный квадратный метр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. м2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ М2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "063";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных квадратных метров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. м2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ М2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "064";
		Уровень3.Наименование = НСтр("ru = 'Миллион условных квадратных метров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 усл. м2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН УСЛ М2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "081";
		Уровень3.Наименование = НСтр("ru = 'Квадратный метр общей площади'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м2 общ. пл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М2 ОБЩ ПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "082";
		Уровень3.Наименование = НСтр("ru = 'Тысяча квадратных метров общей площади'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 м2 общ. пл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС М2 ОБЩ ПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "083";
		Уровень3.Наименование = НСтр("ru = 'Миллион квадратных метров общей площади'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 м2 общ. пл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН М2. ОБЩ ПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "084";
		Уровень3.Наименование = НСтр("ru = 'Квадратный метр жилой площади'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м2 жил. пл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М2 ЖИЛ ПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "085";
		Уровень3.Наименование = НСтр("ru = 'Тысяча квадратных метров жилой площади'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 м2 жил. пл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС М2 ЖИЛ ПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "086";
		Уровень3.Наименование = НСтр("ru = 'Миллион квадратных метров жилой площади'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 м2 жил. пл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН М2 ЖИЛ ПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "087";
		Уровень3.Наименование = НСтр("ru = 'Квадратный метр учебно - лабораторных зданий'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м2 уч. лаб. здан'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М2 УЧ.ЛАБ ЗДАН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "088";
		Уровень3.Наименование = НСтр("ru = 'Тысяча квадратных метров учебно - лабораторных зданий'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 м2 уч. лаб. здан'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС М2 УЧ.ЛАБ ЗДАН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Площадь";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "089";
		Уровень3.Наименование = НСтр("ru = 'Миллион квадратных метров в двухмиллиметровом исчислении'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 м2 2 мм исч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН М2 2ММ ИСЧ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень2 = Уровень1.Строки.Добавить();
		Уровень2.КодЧисловой = "";
		Уровень2.Наименование = НСтр("ru = 'Единицы объема'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень2.УсловноеОбозначениеНациональное = "";
		Уровень2.УсловноеОбозначениеМеждународное = "";
		Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень2.Числитель = 0;
		Уровень2.Знаменатель = 0;
		Уровень2.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "114";
		Уровень3.Наименование = НСтр("ru = 'Тысяча кубических метров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 м3'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС МЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Объем";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "115";
		Уровень3.Наименование = НСтр("ru = 'Миллиард кубических метров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^9 м3'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛРД М3'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "116";
		Уровень3.Наименование = НСтр("ru = 'Декалитр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дкл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДКЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 100;
		Уровень3.ТипИзмеряемойВеличины = "Объем";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "119";
		Уровень3.Наименование = НСтр("ru = 'Тысяча декалитров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 дкл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ДКЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 10;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Объем";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "120";
		Уровень3.Наименование = НСтр("ru = 'Миллион декалитров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 дкл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ДКЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 10000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Объем";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "121";
		Уровень3.Наименование = НСтр("ru = 'Плотный кубический метр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'плотн. м3'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПЛОТН МЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "123";
		Уровень3.Наименование = НСтр("ru = 'Условный кубический метр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. м3'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ М3'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Объем";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "124";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных кубических метров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. м3'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ МЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Объем";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "125";
		Уровень3.Наименование = НСтр("ru = 'Миллион кубических метров переработки газа'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 м3 перераб. газа'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН МЗ ПЕРЕРАБ ГАЗА'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "127";
		Уровень3.Наименование = НСтр("ru = 'Тысяча плотных кубических метров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 плотн. м3'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПЛОТН МЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "128";
		Уровень3.Наименование = НСтр("ru = 'Тысяча полулитров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 пол. л'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПОЛ Л'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "129";
		Уровень3.Наименование = НСтр("ru = 'Миллион полулитров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 пол. л'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ПОЛ Л'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "130";
		Уровень3.Наименование = НСтр("ru = 'Тысяча литров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 л'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Л'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Объем";
		Уровень2 = Уровень1.Строки.Добавить();
		Уровень2.КодЧисловой = "";
		Уровень2.Наименование = НСтр("ru = 'Единицы массы'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень2.УсловноеОбозначениеНациональное = "";
		Уровень2.УсловноеОбозначениеМеждународное = "";
		Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень2.Числитель = 0;
		Уровень2.Знаменатель = 0;
		Уровень2.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "165";
		Уровень3.Наименование = НСтр("ru = 'Тысяча каратов метрических'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 кар'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС КАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 2;
		Уровень3.Знаменатель = 10;
		Уровень3.ТипИзмеряемойВеличины = "Вес";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "167";
		Уровень3.Наименование = НСтр("ru = 'Миллион каратов метрических'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 кар'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН КАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 200;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Вес";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "169";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонн'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Вес";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "171";
		Уровень3.Наименование = НСтр("ru = 'Миллион тонн'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН Т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "172";
		Уровень3.Наименование = НСтр("ru = 'Тонна условного топлива'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т усл. топл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т УСЛ ТОПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "175";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонн условного топлива'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 т усл. топл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т УСЛ ТОПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "176";
		Уровень3.Наименование = НСтр("ru = 'Миллион тонн условного топлива'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 т усл. топл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН Т УСЛ ТОПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "177";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонн единовременного хранения'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 т единовр. хран'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т ЕДИНОВР ХРАН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "178";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонн переработки'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 т перераб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т ПЕРЕРАБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "179";
		Уровень3.Наименование = НСтр("ru = 'Условная тонна Т'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ Т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Объем";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "207";
		Уровень3.Наименование = НСтр("ru = 'Тысяча центнеров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 ц'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Ц'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 100000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Вес";
		Уровень2 = Уровень1.Строки.Добавить();
		Уровень2.КодЧисловой = "";
		Уровень2.Наименование = НСтр("ru = 'Технические единицы'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень2.УсловноеОбозначениеНациональное = "";
		Уровень2.УсловноеОбозначениеМеждународное = "";
		Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень2.Числитель = 0;
		Уровень2.Знаменатель = 0;
		Уровень2.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "226";
		Уровень3.Наименование = НСтр("ru = 'Вольт - ампер'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'В.А'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'В.А'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Мощность";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "231";
		Уровень3.Наименование = НСтр("ru = 'Метр в час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'м/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'М/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "232";
		Уровень3.Наименование = НСтр("ru = 'Килокалория'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ккал'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ККАЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1.163;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Энергия";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "233";
		Уровень3.Наименование = НСтр("ru = 'Гигакалория'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Гкал'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГИГАКАЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1163000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Энергия";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "234";
		Уровень3.Наименование = НСтр("ru = 'Тысяча гигакалорий'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 Гкал'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ГИГАКАЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1163000000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Энергия";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "235";
		Уровень3.Наименование = НСтр("ru = 'Миллион гигакалорий'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 Гкал'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ГИГАКАЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1163000000;
		Уровень3.Знаменатель = 0.001;
		Уровень3.ТипИзмеряемойВеличины = "Энергия";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "236";
		Уровень3.Наименование = НСтр("ru = 'Калория в час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кал/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КАЛ/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "237";
		Уровень3.Наименование = НСтр("ru = 'Килокалория в час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ккал/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ККАЛ/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "238";
		Уровень3.Наименование = НСтр("ru = 'Гигакалория в час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Гкал/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГИГАКАЛ/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "239";
		Уровень3.Наименование = НСтр("ru = 'Тысяча гигакалорий в час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 Гкал/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ГИГАКАЛ/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "241";
		Уровень3.Наименование = НСтр("ru = 'Миллион ампер - часов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 А.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН А.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "242";
		Уровень3.Наименование = НСтр("ru = 'Миллион киловольт - ампер'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 кВ.А'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН КВ.А'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "248";
		Уровень3.Наименование = НСтр("ru = 'Киловольт - ампер реактивный'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кВ.А Р'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВ.А Р'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "249";
		Уровень3.Наименование = НСтр("ru = 'Миллиард киловатт - часов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^9 кВт.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛРД КВТ.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "250";
		Уровень3.Наименование = НСтр("ru = 'Тысяча киловольт - ампер реактивных'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 кВ.А Р'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС КВ.А Р'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "251";
		Уровень3.Наименование = НСтр("ru = 'Лошадиная сила'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'л. с'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЛС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "252";
		Уровень3.Наименование = НСтр("ru = 'Тысяча лошадиных сил'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 л. с'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ЛС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "253";
		Уровень3.Наименование = НСтр("ru = 'Миллион лошадиных сил'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 л. с'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ЛС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "254";
		Уровень3.Наименование = НСтр("ru = 'Бит'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'бит'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'БИТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "255";
		Уровень3.Наименование = НСтр("ru = 'Байт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'байт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'БАЙТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "256";
		Уровень3.Наименование = НСтр("ru = 'Килобайт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кбайт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КБАЙТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "257";
		Уровень3.Наименование = НСтр("ru = 'Мегабайт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Мбайт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МБАЙТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "258";
		Уровень3.Наименование = НСтр("ru = 'Бод'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'бод'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'БОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "287";
		Уровень3.Наименование = НСтр("ru = 'Генри'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Гн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "313";
		Уровень3.Наименование = НСтр("ru = 'Тесла'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Тл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "317";
		Уровень3.Наименование = НСтр("ru = 'Килограмм на квадратный сантиметр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг/см^2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ/СМ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "337";
		Уровень3.Наименование = НСтр("ru = 'Миллиметр водяного столба'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мм вод. ст'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ММ ВОД СТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "338";
		Уровень3.Наименование = НСтр("ru = 'Миллиметр ртутного столба'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мм рт. ст'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ММ РТ СТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "339";
		Уровень3.Наименование = НСтр("ru = 'Сантиметр водяного столба'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'см вод. ст'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СМ ВОД СТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень2 = Уровень1.Строки.Добавить();
		Уровень2.КодЧисловой = "";
		Уровень2.Наименование = НСтр("ru = 'Единицы времени'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень2.УсловноеОбозначениеНациональное = "";
		Уровень2.УсловноеОбозначениеМеждународное = "";
		Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень2.Числитель = 0;
		Уровень2.Знаменатель = 0;
		Уровень2.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "352";
		Уровень3.Наименование = НСтр("ru = 'Микросекунда'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мкс'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МКС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1000000;
		Уровень3.ТипИзмеряемойВеличины = "Время";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "353";
		Уровень3.Наименование = НСтр("ru = 'Миллисекунда Эк'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'млс'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 1;
		Уровень3.Знаменатель = 1000;
		Уровень3.ТипИзмеряемойВеличины = "Время";
		Уровень2 = Уровень1.Строки.Добавить();
		Уровень2.КодЧисловой = "";
		Уровень2.Наименование = НСтр("ru = 'Экономические единицы'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень2.УсловноеОбозначениеНациональное = "";
		Уровень2.УсловноеОбозначениеМеждународное = "";
		Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень2.Числитель = 0;
		Уровень2.Знаменатель = 0;
		Уровень2.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "383";
		Уровень3.Наименование = НСтр("ru = 'Рубль'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'руб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'РУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "384";
		Уровень3.Наименование = НСтр("ru = 'Тысяча рублей'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 руб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС РУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "385";
		Уровень3.Наименование = НСтр("ru = 'Миллион рублей'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 руб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН РУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "386";
		Уровень3.Наименование = НСтр("ru = 'Миллиард рублей'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^9 руб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛРД РУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "387";
		Уровень3.Наименование = НСтр("ru = 'Триллион рублей'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^12 руб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТРИЛЛ РУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "388";
		Уровень3.Наименование = НСтр("ru = 'Квадрильон рублей'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^15 руб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВАДР РУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "414";
		Уровень3.Наименование = НСтр("ru = 'Пассажиро - километр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'пасс. км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПАСС.КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "421";
		Уровень3.Наименование = НСтр("ru = 'Пассажирское место (пассажирских мест)'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'пасс. мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПАСС МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "423";
		Уровень3.Наименование = НСтр("ru = 'Тысяча пассажиро - километров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 пасс. км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПАСС.КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "424";
		Уровень3.Наименование = НСтр("ru = 'Миллион пассажиро - километров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 пасс. км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ПАСС.КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "427";
		Уровень3.Наименование = НСтр("ru = 'Пассажиропоток'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'пасс. поток'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПАСС. ПОТОК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "449";
		Уровень3.Наименование = НСтр("ru = 'Тонно - километр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т. км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т.КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "450";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонно - километров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 т. км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т.КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "451";
		Уровень3.Наименование = НСтр("ru = 'Миллион тонно - километров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 т. км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН Т.КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "479";
		Уровень3.Наименование = НСтр("ru = 'Тысяча наборов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 набор'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС НАБОР'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "510";
		Уровень3.Наименование = НСтр("ru = 'Грамм на киловатт - час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'г/кВт.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Г/КВТ.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "511";
		Уровень3.Наименование = НСтр("ru = 'Килограмм на гигакалорию'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кг/Гкал'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КГ/ГИГАКАЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "512";
		Уровень3.Наименование = НСтр("ru = 'Тонно - номер'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т. ном'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т.НОМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "513";
		Уровень3.Наименование = НСтр("ru = 'Автотонна'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'авто т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'АВТО Т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "514";
		Уровень3.Наименование = НСтр("ru = 'Тонна тяги'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т.тяги'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т ТЯГИ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "515";
		Уровень3.Наименование = НСтр("ru = 'Дедвейт-тонна'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дедвейт.т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЕДВЕЙТ.Т'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "516";
		Уровень3.Наименование = НСтр("ru = 'Тонно-танид'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т.танид'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'т.танид'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "521";
		Уровень3.Наименование = НСтр("ru = 'Человек на квадратный метр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'чел/м2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЧЕЛ/М2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "522";
		Уровень3.Наименование = НСтр("ru = 'Человек на квадратный километр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'чел/км2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЧЕЛ/КМ2'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "534";
		Уровень3.Наименование = НСтр("ru = 'Тонна в час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "535";
		Уровень3.Наименование = НСтр("ru = 'Тонна в сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т/сут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т/СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "536";
		Уровень3.Наименование = НСтр("ru = 'Тонна в смену'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т/смен'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т/СМЕН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "537";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонн в сезон'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 т/сез'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т/СЕЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "538";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонн в год'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 т/год'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т/ГОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "539";
		Уровень3.Наименование = НСтр("ru = 'Человеко - час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'чел. ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЧЕЛ.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "540";
		Уровень3.Наименование = НСтр("ru = 'Человеко - день'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'чел. дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЧЕЛ.ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "541";
		Уровень3.Наименование = НСтр("ru = 'Тысяча человеко - дней'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 чел. дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ЧЕЛ.ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "542";
		Уровень3.Наименование = НСтр("ru = 'Тысяча человеко - часов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 чел. ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ЧЕЛ.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "543";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных банок в смену'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. банк/смен'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ БАНК/СМЕН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "544";
		Уровень3.Наименование = НСтр("ru = 'Миллион единиц в год'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 ед/год'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ЕД/ГОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "545";
		Уровень3.Наименование = НСтр("ru = 'Посещение в смену'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'посещ/смен'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПОСЕЩ/СМЕН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "546";
		Уровень3.Наименование = НСтр("ru = 'Тысяча посещений в смену'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 посещ/смен'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПОСЕЩ/СМЕН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "547";
		Уровень3.Наименование = НСтр("ru = 'Пара в смену'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'пар/смен'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПАР/СМЕН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "548";
		Уровень3.Наименование = НСтр("ru = 'Тысяча пар в смену'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 пар/смен'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПАР/СМЕН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "550";
		Уровень3.Наименование = НСтр("ru = 'Миллион тонн в год'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 т/год'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН Т/ГОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "552";
		Уровень3.Наименование = НСтр("ru = 'Тонна переработки в сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'т перераб/сут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Т ПЕРЕРАБ/СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "553";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонн переработки в сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 т перераб/сут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т ПЕРЕРАБ/СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "554";
		Уровень3.Наименование = НСтр("ru = 'Центнер переработки в сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ц перераб/сут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Ц ПЕРЕРАБ/СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "555";
		Уровень3.Наименование = НСтр("ru = 'Тысяча центнеров переработки в сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 ц перераб/сут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Ц ПЕРЕРАБ/СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "556";
		Уровень3.Наименование = НСтр("ru = 'Тысяча голов в год'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 гол/год'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ГОЛ/ГОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "557";
		Уровень3.Наименование = НСтр("ru = 'Миллион голов в год'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 гол/год'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ГОЛ/ГОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "558";
		Уровень3.Наименование = НСтр("ru = 'Тысяча птицемест'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 птицемест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПТИЦЕМЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "559";
		Уровень3.Наименование = НСтр("ru = 'Тысяча кур - несушек'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 кур. несуш'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС КУР. НЕСУШ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "560";
		Уровень3.Наименование = НСтр("ru = 'Минимальная заработная плата'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мин. заработн. плат'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МИН ЗАРАБОТН ПЛАТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "561";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонн пара в час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 т пар/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т ПАР/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "562";
		Уровень3.Наименование = НСтр("ru = 'Тысяча прядильных веретен'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 пряд.верет'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПРЯД ВЕРЕТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "563";
		Уровень3.Наименование = НСтр("ru = 'Тысяча прядильных мест'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 пряд.мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПРЯД МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "639";
		Уровень3.Наименование = НСтр("ru = 'Доза'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'доз'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДОЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "640";
		Уровень3.Наименование = НСтр("ru = 'Тысяча доз'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 доз'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ДОЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "642";
		Уровень3.Наименование = НСтр("ru = 'Единица'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ед'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "643";
		Уровень3.Наименование = НСтр("ru = 'Тысяча единиц'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 ед'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "644";
		Уровень3.Наименование = НСтр("ru = 'Миллион единиц'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 ед'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "661";
		Уровень3.Наименование = НСтр("ru = 'Канал'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'канал'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КАНАЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "673";
		Уровень3.Наименование = НСтр("ru = 'Тысяча комплектов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 компл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС КОМПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "698";
		Уровень3.Наименование = НСтр("ru = 'Место'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "699";
		Уровень3.Наименование = НСтр("ru = 'Тысяча мест'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "709";
		Уровень3.Наименование = НСтр("ru = 'Тысяча номеров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 ном'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС НОМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "724";
		Уровень3.Наименование = НСтр("ru = 'Тысяча гектаров порций'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 га порц'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ГА ПОРЦ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "729";
		Уровень3.Наименование = НСтр("ru = 'Тысяча пачек'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 пач'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПАЧ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "744";
		Уровень3.Наименование = НСтр("ru = 'Процент'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '%'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПРОЦ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "746";
		Уровень3.Наименование = НСтр("ru = 'Промилле (0,1 процента)'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'промилле'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПРОМИЛЛЕ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "751";
		Уровень3.Наименование = НСтр("ru = 'Тысяча рулонов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 рул'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС РУЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "761";
		Уровень3.Наименование = НСтр("ru = 'Тысяча станов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 стан'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС СТАН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "762";
		Уровень3.Наименование = НСтр("ru = 'Станция'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'станц'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СТАНЦ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "775";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тюбиков'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 тюбик'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ТЮБИК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "776";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных тубов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 усл.туб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ ТУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "779";
		Уровень3.Наименование = НСтр("ru = 'Миллион упаковок'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 упак'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН УПАК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "782";
		Уровень3.Наименование = НСтр("ru = 'Тысяча упаковок'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 упак'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УПАК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "792";
		Уровень3.Наименование = НСтр("ru = 'Человек'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'чел'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЧЕЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "793";
		Уровень3.Наименование = НСтр("ru = 'Тысяча человек'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 чел'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ЧЕЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "794";
		Уровень3.Наименование = НСтр("ru = 'Миллион человек'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 чел'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ЧЕЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "808";
		Уровень3.Наименование = НСтр("ru = 'Миллион экземпляров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 экз'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ЭКЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "810";
		Уровень3.Наименование = НСтр("ru = 'Ячейка'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'яч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЯЧ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "812";
		Уровень3.Наименование = НСтр("ru = 'Ящик'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ящ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЯЩ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "836";
		Уровень3.Наименование = НСтр("ru = 'Голова'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'гол'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГОЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "837";
		Уровень3.Наименование = НСтр("ru = 'Тысяча пар'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 пар'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "838";
		Уровень3.Наименование = НСтр("ru = 'Миллион пар'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 пар'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ПАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "839";
		Уровень3.Наименование = НСтр("ru = 'Комплект'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'компл'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КОМПЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "840";
		Уровень3.Наименование = НСтр("ru = 'Секция'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'секц'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СЕКЦ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "868";
		Уровень3.Наименование = НСтр("ru = 'Бутылка'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'бут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'БУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "869";
		Уровень3.Наименование = НСтр("ru = 'Тысяча бутылок'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 бут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС БУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "870";
		Уровень3.Наименование = НСтр("ru = 'Ампула'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ампул'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'АМПУЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "871";
		Уровень3.Наименование = НСтр("ru = 'Тысяча ампул'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 ампул'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС АМПУЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "872";
		Уровень3.Наименование = НСтр("ru = 'Флакон'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'флак'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ФЛАК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "873";
		Уровень3.Наименование = НСтр("ru = 'Тысяча флаконов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 флак'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ФЛАК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "874";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тубов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 туб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ТУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "875";
		Уровень3.Наименование = НСтр("ru = 'Тысяча коробок'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 кор'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС КОР'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "876";
		Уровень3.Наименование = НСтр("ru = 'Условная единица'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. ед'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ ЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "877";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных единиц'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. ед'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ ЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "878";
		Уровень3.Наименование = НСтр("ru = 'Миллион условных единиц'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 усл. ед'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН УСЛ ЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "879";
		Уровень3.Наименование = НСтр("ru = 'Условная штука'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. шт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ ШТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "880";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных штук'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. шт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ ШТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "881";
		Уровень3.Наименование = НСтр("ru = 'Условная банка'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. банк'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ БАНК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "882";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных банок'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. банк'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ БАНК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "883";
		Уровень3.Наименование = НСтр("ru = 'Миллион условных банок'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 усл. банк'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН УСЛ БАНК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "884";
		Уровень3.Наименование = НСтр("ru = 'Условный кусок'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. кус'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ КУС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "885";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных кусков'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. кус'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ КУС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "886";
		Уровень3.Наименование = НСтр("ru = 'Миллион условных кусков'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 усл. кус'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН УСЛ КУС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "887";
		Уровень3.Наименование = НСтр("ru = 'Условный ящик'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. ящ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ ЯЩ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "888";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных ящиков'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. ящ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ ЯЩ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "889";
		Уровень3.Наименование = НСтр("ru = 'Условная катушка'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. кат'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ КАТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "890";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных катушек'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. кат'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ КАТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "891";
		Уровень3.Наименование = НСтр("ru = 'Условная плитка'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. плит'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ ПЛИТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "892";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных плиток'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. плит'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ ПЛИТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "893";
		Уровень3.Наименование = НСтр("ru = 'Условный кирпич'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. кирп'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ КИРП'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "894";
		Уровень3.Наименование = НСтр("ru = 'Тысяча условных кирпичей'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 усл. кирп'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УСЛ КИРП'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "895";
		Уровень3.Наименование = НСтр("ru = 'Миллион условных кирпичей'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 усл. кирп'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН УСЛ КИРП'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "896";
		Уровень3.Наименование = НСтр("ru = 'Семья'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'семей'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СЕМЕЙ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "897";
		Уровень3.Наименование = НСтр("ru = 'Тысяча семей'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 семей'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС СЕМЕЙ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "898";
		Уровень3.Наименование = НСтр("ru = 'Миллион семей'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 семей'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН СЕМЕЙ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "899";
		Уровень3.Наименование = НСтр("ru = 'Домохозяйство'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'домхоз'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДОМХОЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "900";
		Уровень3.Наименование = НСтр("ru = 'Тысяча домохозяйств'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 домхоз'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ДОМХОЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "901";
		Уровень3.Наименование = НСтр("ru = 'Миллион домохозяйств'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 домхоз'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ДОМХОЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "902";
		Уровень3.Наименование = НСтр("ru = 'Ученическое место'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'учен. мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УЧЕН МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "903";
		Уровень3.Наименование = НСтр("ru = 'Тысяча ученических мест'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 учен. мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС УЧЕН МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "904";
		Уровень3.Наименование = НСтр("ru = 'Рабочее место'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'раб. мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'РАБ МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "905";
		Уровень3.Наименование = НСтр("ru = 'Тысяча рабочих мест'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 раб. мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС РАБ МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "906";
		Уровень3.Наименование = НСтр("ru = 'Посадочное место'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'посад. мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПОСАД МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "907";
		Уровень3.Наименование = НСтр("ru = 'Тысяча посадочных мест'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 посад. мест'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПОСАД МЕСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "908";
		Уровень3.Наименование = НСтр("ru = 'Номер'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ном'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'НОМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "909";
		Уровень3.Наименование = НСтр("ru = 'Квартира'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кварт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КВАРТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "910";
		Уровень3.Наименование = НСтр("ru = 'Тысяча квартир'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 кварт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС КВАРТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "911";
		Уровень3.Наименование = НСтр("ru = 'Койка'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'коек'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КОЕК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "912";
		Уровень3.Наименование = НСтр("ru = 'Тысяча коек'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 коек'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС КОЕК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "913";
		Уровень3.Наименование = НСтр("ru = 'Том книжного фонда'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'том книжн. фонд'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТОМ КНИЖН ФОНД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "914";
		Уровень3.Наименование = НСтр("ru = 'Тысяча томов книжного фонда'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '1000 том. книжн. фонд'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ТОМ КНИЖН ФОНД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "915";
		Уровень3.Наименование = НСтр("ru = 'Условный ремонт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. рем'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ РЕМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "916";
		Уровень3.Наименование = НСтр("ru = 'Условный ремонт в год'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. рем/год'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ РЕМ/ГОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "917";
		Уровень3.Наименование = НСтр("ru = 'Смена'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'смен'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СМЕН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "918";
		Уровень3.Наименование = НСтр("ru = 'Лист авторский'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'л. авт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЛИСТ АВТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "920";
		Уровень3.Наименование = НСтр("ru = 'Лист печатный'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'л. печ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЛИСТ ПЕЧ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "921";
		Уровень3.Наименование = НСтр("ru = 'Лист учетно - издательский'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'л. уч.-изд'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЛИСТ УЧ.ИЗД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "922";
		Уровень3.Наименование = НСтр("ru = 'Знак'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'знак'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЗНАК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "923";
		Уровень3.Наименование = НСтр("ru = 'Слово'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'слово'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СЛОВО'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "924";
		Уровень3.Наименование = НСтр("ru = 'Символ'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'символ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СИМВОЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "925";
		Уровень3.Наименование = НСтр("ru = 'Условная труба'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'усл. труб'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'УСЛ ТРУБ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "930";
		Уровень3.Наименование = НСтр("ru = 'Тысяча пластин'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 пласт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПЛАСТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "937";
		Уровень3.Наименование = НСтр("ru = 'Миллион доз'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 доз'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ДОЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "949";
		Уровень3.Наименование = НСтр("ru = 'Миллион листов-оттисков'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 лист.оттиск'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ЛИСТ.ОТТИСК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "950";
		Уровень3.Наименование = НСтр("ru = 'Вагоно(машино)-день'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ваг (маш).дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ВАГ (МАШ).ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "951";
		Уровень3.Наименование = НСтр("ru = 'Тысяча вагоно-(машино)-часов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 ваг (маш).ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ВАГ (МАШ).Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "952";
		Уровень3.Наименование = НСтр("ru = 'Тысяча вагоно-(машино)-километров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 ваг (маш).км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ВАГ (МАШ).КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "953";
		Уровень3.Наименование = НСтр("ru = 'Тысяча место-километров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 мест.км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС МЕСТ.КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "954";
		Уровень3.Наименование = НСтр("ru = 'Вагоно-сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ваг.сут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ВАГ.СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "955";
		Уровень3.Наименование = НСтр("ru = 'Тысяча поездо-часов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 поезд.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПОЕЗД.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "956";
		Уровень3.Наименование = НСтр("ru = 'Тысяча поездо-километров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 поезд.км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПОЕЗД.КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "957";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонно-миль'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 т.миль'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т.МИЛЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "958";
		Уровень3.Наименование = НСтр("ru = 'Тысяча пассажиро-миль'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 пасс.миль'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ПАСС.МИЛЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "959";
		Уровень3.Наименование = НСтр("ru = 'Автомобиле-день'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'автомоб.дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'АВТОМОБ.ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "960";
		Уровень3.Наименование = НСтр("ru = 'Тысяча автомобиле-тонно-дней'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 автомоб.т.дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС АВТОМОБ.Т.ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "961";
		Уровень3.Наименование = НСтр("ru = 'Тысяча автомобиле-часов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 автомоб.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС АВТОМОБ.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "962";
		Уровень3.Наименование = НСтр("ru = 'Тысяча автомобиле-место-дней'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 автомоб.мест. дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС АВТОМОБ.МЕСТ. ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "963";
		Уровень3.Наименование = НСтр("ru = 'Приведенный час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'привед.ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПРИВЕД.Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 162000;
		Уровень3.Знаменатель = 1;
		Уровень3.ТипИзмеряемойВеличины = "Время";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "964";
		Уровень3.Наименование = НСтр("ru = 'Самолето-километр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'самолет.км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'САМОЛЕТ.КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "965";
		Уровень3.Наименование = НСтр("ru = 'Тысяча километров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "966";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тоннаже-рейсов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 тоннаж. рейс'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ТОННАЖ. РЕЙС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "967";
		Уровень3.Наименование = НСтр("ru = 'Миллион тонно-миль'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 т. миль'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН Т. МИЛЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "968";
		Уровень3.Наименование = НСтр("ru = 'Миллион пассажиро-миль'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 пасс. миль'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ПАСС. МИЛЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "969";
		Уровень3.Наименование = НСтр("ru = 'Миллион тоннаже-миль'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 тоннаж. миль'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ТОННАЖ. МИЛЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "970";
		Уровень3.Наименование = НСтр("ru = 'Миллион пассажиро-место-миль'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 пасс. мест. миль'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН ПАСС. МЕСТ. МИЛЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "971";
		Уровень3.Наименование = НСтр("ru = 'Кормо-день'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'корм. дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КОРМ. ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "972";
		Уровень3.Наименование = НСтр("ru = 'Центнер кормовых единиц'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ц корм ед'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Ц КОРМ ЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "973";
		Уровень3.Наименование = НСтр("ru = 'Тысяча автомобиле-километров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 автомоб. км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС АВТОМОБ. КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "974";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тоннаже-сут'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 тоннаж. сут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ТОННАЖ. СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "975";
		Уровень3.Наименование = НСтр("ru = 'Суго-сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'суго. сут.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СУГО. СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "976";
		Уровень3.Наименование = НСтр("ru = 'Штук в 20-футовом эквиваленте (ДФЭ)'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НСтр("ru = 'штук в 20-футовом
			|эквиваленте'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ШТ В 20 ФУТ ЭКВИВ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "977";
		Уровень3.Наименование = НСтр("ru = 'Канало-километр'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'канал. км'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КАНАЛ. КМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "978";
		Уровень3.Наименование = НСтр("ru = 'Канало-концы'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'канал. конц'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КАНАЛ. КОНЦ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "979";
		Уровень3.Наименование = НСтр("ru = 'Тысяча экземпляров'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 экз'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ЭКЗ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "980";
		Уровень3.Наименование = НСтр("ru = 'Тысяча долларов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 доллар'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ДОЛЛАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "981";
		Уровень3.Наименование = НСтр("ru = 'Тысяча тонн кормовых единиц'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 корм ед'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС Т КОРМ ЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "982";
		Уровень3.Наименование = НСтр("ru = 'Миллион тонн кормовых единиц'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 корм ед'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН Т КОРМ ЕД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "983";
		Уровень3.Наименование = НСтр("ru = 'Судо-сутки'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'суд.сут'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'СУД.СУТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "984";
		Уровень3.Наименование = НСтр("ru = 'Центнеров с гектара'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ц/га'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'Ц/ГА'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "985";
		Уровень3.Наименование = НСтр("ru = 'Тысяча голов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 гол'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ГОЛ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "986";
		Уровень3.Наименование = НСтр("ru = 'Тысяча краско-оттисков'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 краск. оттиск'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС КРАСК ОТТИСК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "987";
		Уровень3.Наименование = НСтр("ru = 'Миллион краско-оттисков'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 краск. оттиск'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН КРАСК ОТТИСК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "988";
		Уровень3.Наименование = НСтр("ru = 'Миллион условных плиток'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^6 усл. плит'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛН УСЛ ПЛИТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "989";
		Уровень3.Наименование = НСтр("ru = 'Человек в час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'чел/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЧЕЛ/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "990";
		Уровень3.Наименование = НСтр("ru = 'Пассажиров в час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'пасс/ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПАСС/Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "991";
		Уровень3.Наименование = НСтр("ru = 'Пассажиро-миля'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'пасс. миля'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПАСС МИЛЯ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень1 = ДеревоЗначений.Строки.Добавить();
		Уровень1.КодЧисловой = "";
		Уровень1.Наименование = НСтр("ru = 'Четырехзначные национальные единицы измерения, включенные в ОКЕИ'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень1.УсловноеОбозначениеНациональное = "";
		Уровень1.УсловноеОбозначениеМеждународное = "";
		Уровень1.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень1.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень1.Числитель = 0;
		Уровень1.Знаменатель = 0;
		Уровень1.ТипИзмеряемойВеличины = "";
		Уровень2 = Уровень1.Строки.Добавить();
		Уровень2.КодЧисловой = "";
		Уровень2.Наименование = НСтр("ru = 'Технические единицы'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень2.УсловноеОбозначениеНациональное = "";
		Уровень2.УсловноеОбозначениеМеждународное = "";
		Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень2.Числитель = 0;
		Уровень2.Знаменатель = 0;
		Уровень2.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "2553";
		Уровень3.Наименование = НСтр("ru = 'Гигабайт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Гбайт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ГБАЙТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "2554";
		Уровень3.Наименование = НСтр("ru = 'Терабайт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Тбайт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТБАЙТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "2555";
		Уровень3.Наименование = НСтр("ru = 'Петабайт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Пбайт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПБАЙТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "2556";
		Уровень3.Наименование = НСтр("ru = 'Эксабайт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Эбайт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЭБАЙТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "2557";
		Уровень3.Наименование = НСтр("ru = 'Зеттабайт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Збайт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЗБАЙТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "2558";
		Уровень3.Наименование = НСтр("ru = 'Йоттабайт'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'Йбайт'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЙБАЙТ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень2 = Уровень1.Строки.Добавить();
		Уровень2.КодЧисловой = "";
		Уровень2.Наименование = НСтр("ru = 'Экономические единицы'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень2.УсловноеОбозначениеНациональное = "";
		Уровень2.УсловноеОбозначениеМеждународное = "";
		Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
		Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень2.Числитель = 0;
		Уровень2.Знаменатель = 0;
		Уровень2.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "3831";
		Уровень3.Наименование = НСтр("ru = 'Рубль тонна'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'руб. тонна'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'РУБ ТОННА'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "5401";
		Уровень3.Наименование = НСтр("ru = 'Дето-день'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'дет. дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДЕТ ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "5423";
		Уровень3.Наименование = НСтр("ru = 'Человек в год'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'чел/год'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЧЕЛ/ГОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "5451";
		Уровень3.Наименование = НСтр("ru = 'Посещение'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'посещ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПОСЕЩ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "5562";
		Уровень3.Наименование = НСтр("ru = 'Тысяча гнезд'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^3 гнезд'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ТЫС ГНЕЗД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "6421";
		Уровень3.Наименование = НСтр("ru = 'Единиц в год'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ед/год'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЕД/ГОД'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "6422";
		Уровень3.Наименование = НСтр("ru = 'Вызов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'вызов'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ВЫЗОВ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "6424";
		Уровень3.Наименование = НСтр("ru = 'Штамм'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'штамм'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ШТАММ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "8361";
		Уровень3.Наименование = НСтр("ru = 'Особь'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ос'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ОСОБЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "8751";
		Уровень3.Наименование = НСтр("ru = 'Коробка'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'кор'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КОР'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "9111";
		Уровень3.Наименование = НСтр("ru = 'Койко-день'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'койк. дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'КОЙК ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "9113";
		Уровень3.Наименование = НСтр("ru = 'Пациенто-день'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'пациент. дн'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ПАЦИЕНТ ДН'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "9245";
		Уровень3.Наименование = НСтр("ru = 'Запись'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'запись'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЗАПИСЬ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "9246";
		Уровень3.Наименование = НСтр("ru = 'Документ'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'докум'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДОКУМ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "9491";
		Уровень3.Наименование = НСтр("ru = 'Лист-оттиск'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'лист. оттиск'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЛИСТ ОТТИСК'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "9501";
		Уровень3.Наименование = НСтр("ru = 'Вагоно (машино)-час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'ваг (маш) ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ВАГ (МАШ) Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "9641";
		Уровень3.Наименование = НСтр("ru = 'Летный час'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'летн. ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ЛЕТН Ч'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "9803";
		Уровень3.Наименование = НСтр("ru = 'Миллиард долларов'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = '10^9 доллар'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'МЛРД ДОЛЛАР'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
		Уровень3 = Уровень2.Строки.Добавить();
		Уровень3.КодЧисловой = "9805";
		Уровень3.Наименование = НСтр("ru = 'Доллар за тонну'", ОбщегоНазначения.КодОсновногоЯзыка());
		Уровень3.УсловноеОбозначениеНациональное = НРег(НСтр("ru = 'доллар за тонну'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.УсловноеОбозначениеМеждународное = "";
		Уровень3.КодовоеБуквенноеОбозначениеНациональное = ВРег(НСтр("ru = 'ДОЛЛАР ЗА ТОННУ'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "";
		Уровень3.Числитель = 0;
		Уровень3.Знаменатель = 0;
		Уровень3.ТипИзмеряемойВеличины = "";
	КонецЕсли;
	Уровень1 = ДеревоЗначений.Строки.Добавить();
	Уровень1.КодЧисловой = "";
	Если ЛокализацияРФ Тогда
		Уровень1.Наименование = НСтр(
			"ru = 'Международные единицы измерения, не включенные в ОКЕИ'", ОбщегоНазначения.КодОсновногоЯзыка());
	Иначе
		Уровень1.Наименование = НСтр(
			"ru = 'Прочие международные единицы измерения'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	Уровень1.УсловноеОбозначениеНациональное = "";
	Уровень1.УсловноеОбозначениеМеждународное = "";
	Уровень1.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень1.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень1.Числитель = 0;
	Уровень1.Знаменатель = 0;
	Уровень1.ТипИзмеряемойВеличины = "";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Единицы длины'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "017";
	Уровень3.Наименование = НСтр("ru = 'Гектометр'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "hm"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HMT"; //@NON-NLS-1
	Уровень3.Числитель = 100;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "045";
	Уровень3.Наименование = НСтр("ru = 'Миля (уставная) (1609,344 м)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "mile"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "SMI"; //@NON-NLS-1
	Уровень3.Числитель = 1609.344;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Длина";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Единицы площади'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "077";
	Уровень3.Наименование = НСтр("ru = 'Акр (4840 квадратных ярдов)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "acre"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "ACR"; //@NON-NLS-1
	Уровень3.Числитель = 4046.86;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "079";
	Уровень3.Наименование = НСтр("ru = 'Квадратная миля'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "mile2"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MIK"; //@NON-NLS-1
	Уровень3.Числитель = 2589988.11;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Площадь";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Единицы объема'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "135";
	Уровень3.Наименование = НСтр("ru = 'Жидкостная унция СК 3 (28,413 см3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "fl oz (UK)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "OZI"; //@NON-NLS-1
	Уровень3.Числитель = 28.413;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "136";
	Уровень3.Наименование = НСтр("ru = 'Джилл СК (0,142065 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "gill (UK)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GII"; //@NON-NLS-1
	Уровень3.Числитель = 142.065;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "137";
	Уровень3.Наименование = НСтр("ru = 'Пинта СК (0,568262 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "pt (UK)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "PTI"; //@NON-NLS-1
	Уровень3.Числитель = 568.262;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "138";
	Уровень3.Наименование = НСтр("ru = 'Кварта СК (1,136523 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "qt (UK)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "QTI"; //@NON-NLS-1
	Уровень3.Числитель = 1136.523;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "139";
	Уровень3.Наименование = НСтр("ru = 'Галлон СК (4,546092 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "gal (UK)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GLI"; //@NON-NLS-1
	Уровень3.Числитель = 4546.092;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "140";
	Уровень3.Наименование = НСтр("ru = 'Бушель СК (36,36874 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "bu (UK)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "BUI"; //@NON-NLS-1
	Уровень3.Числитель = 36368.74;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "141";
	Уровень3.Наименование = НСтр("ru = 'Жидкостная унция США (29,5735 см3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "fl oz (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "OZA"; //@NON-NLS-1
	Уровень3.Числитель = 295.735;
	Уровень3.Знаменатель = 10000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "142";
	Уровень3.Наименование = НСтр("ru = 'Джилл США (0,118294 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "gill (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GIA"; //@NON-NLS-1
	Уровень3.Числитель = 118.294;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "143";
	Уровень3.Наименование = НСтр("ru = 'Жидкостная пинта США (0,473176 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "liq pt (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "PTL"; //@NON-NLS-1
	Уровень3.Числитель = 473.176;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "144";
	Уровень3.Наименование = НСтр("ru = 'Жидкостная кварта США (0,946353 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "liq qt (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "QTL"; //@NON-NLS-1
	Уровень3.Числитель = 946.353;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "145";
	Уровень3.Наименование = НСтр("ru = 'Жидкостный галлон США (3,78541 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "gal (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GLL"; //@NON-NLS-1
	Уровень3.Числитель = 3785.41;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "146";
	Уровень3.Наименование = НСтр("ru = 'Баррель (нефтяной) США (158,987 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "barrel (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "BLL"; //@NON-NLS-1
	Уровень3.Числитель = 158.987;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "147";
	Уровень3.Наименование = НСтр("ru = 'Сухая пинта США (0,55061 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "dry pt (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "PTD"; //@NON-NLS-1
	Уровень3.Числитель = 550.61;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "148";
	Уровень3.Наименование = НСтр("ru = 'Сухая кварта США (1,101221 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "dry qt (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "QTD"; //@NON-NLS-1
	Уровень3.Числитель = 1101.221;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "149";
	Уровень3.Наименование = НСтр("ru = 'Сухой галлон США (4,404884 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "dry gal (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GLD"; //@NON-NLS-1
	Уровень3.Числитель = 4404.884;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "150";
	Уровень3.Наименование = НСтр("ru = 'Бушель США (35,2391 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "bu (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "BUA"; //@NON-NLS-1
	Уровень3.Числитель = 35239.1;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "151";
	Уровень3.Наименование = НСтр("ru = 'Сухой баррель США (115,627 дм3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "bbl (US)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "BLD"; //@NON-NLS-1
	Уровень3.Числитель = 115.627;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "152";
	Уровень3.Наименование = НСтр("ru = 'Стандарт'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "WSD"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "153";
	Уровень3.Наименование = НСтр("ru = 'Корд (3,63 м3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "WCD"; //@NON-NLS-1
	Уровень3.Числитель = 3.63;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "154";
	Уровень3.Наименование = НСтр("ru = 'Тысячи бордфутов (2,36 м3)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "MBF"; //@NON-NLS-1
	Уровень3.Числитель = 2.36;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Объем";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Единицы массы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "182";
	Уровень3.Наименование = НСтр("ru = 'Нетто - регистровая тонна'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NTT"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "183";
	Уровень3.Наименование = НСтр("ru = 'Обмерная (фрахтовая) тонна'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "SHT"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "184";
	Уровень3.Наименование = НСтр("ru = 'Водоизмещение'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DPT"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "186";
	Уровень3.Наименование = НСтр("ru = 'Фунт СК, США (0,45359237 кг)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "lb"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "LBR"; //@NON-NLS-1
	Уровень3.Числитель = 45359.237;
	Уровень3.Знаменатель = 100000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "187";
	Уровень3.Наименование = НСтр("ru = 'Унция СК, США (28,349523 г)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "oz"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "ONZ"; //@NON-NLS-1
	Уровень3.Числитель = 28349.523;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "188";
	Уровень3.Наименование = НСтр("ru = 'Драхма СК (1,771745 г)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "dr"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DRI"; //@NON-NLS-1
	Уровень3.Числитель = 1771.745;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "189";
	Уровень3.Наименование = НСтр("ru = 'Гран СК, США (64,798910 мг)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "gn"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GRN"; //@NON-NLS-1
	Уровень3.Числитель = 6479.891;
	Уровень3.Знаменатель = 100000000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "190";
	Уровень3.Наименование = НСтр("ru = 'Стоун СК (6,350293 кг)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "st"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "STI"; //@NON-NLS-1
	Уровень3.Числитель = 6350.293;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "191";
	Уровень3.Наименование = НСтр("ru = 'Квартер СК (12,700586 кг)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "qtr"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "QTR"; //@NON-NLS-1
	Уровень3.Числитель = 12700.586;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "192";
	Уровень3.Наименование = НСтр("ru = 'Центал СК (45,359237 кг)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CNT"; //@NON-NLS-1
	Уровень3.Числитель = 45359.237;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "193";
	Уровень3.Наименование = НСтр("ru = 'Центнер США (45,3592 кг)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "cwt"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CWA"; //@NON-NLS-1
	Уровень3.Числитель = 45359.2;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "194";
	Уровень3.Наименование = НСтр("ru = 'Длинный центнер СК (50,802345 кг)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "cwt (UK)"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "CWI"; //@NON-NLS-1
	Уровень3.Числитель = 50802.345;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "195";
	Уровень3.Наименование = НСтр("ru = 'Короткая тонна СК, США (0,90718474 т)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "sht"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "STN"; //@NON-NLS-1
	Уровень3.Числитель = 90718.474;
	Уровень3.Знаменатель = 100;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "196";
	Уровень3.Наименование = НСтр("ru = 'Длинная тонна СК, США (1,0160469 т)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "lt"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "LTN"; //@NON-NLS-1
	Уровень3.Числитель = 101604.69;
	Уровень3.Знаменатель = 100;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "197";
	Уровень3.Наименование = НСтр("ru = 'Скрупул СК, США (1,295982 г)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "scr"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "SCR"; //@NON-NLS-1
	Уровень3.Числитель = 1295.982;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "198";
	Уровень3.Наименование = НСтр("ru = 'Пеннивейт СК, США (1,555174 г)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "dwt"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DWT"; //@NON-NLS-1
	Уровень3.Числитель = 1555.174;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "199";
	Уровень3.Наименование = НСтр("ru = 'Драхма СК (3,887935 г)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "drm"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DRM"; //@NON-NLS-1
	Уровень3.Числитель = 3887.935;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "200";
	Уровень3.Наименование = НСтр("ru = 'Драхма США (3,887935 г)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "DRA"; //@NON-NLS-1
	Уровень3.Числитель = 3887.935;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "201";
	Уровень3.Наименование = НСтр("ru = 'Унция СК, США (31,10348 г)
		|Тройская унция'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "apoz"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "APZ"; //@NON-NLS-1
	Уровень3.Числитель = 31103.48;
	Уровень3.Знаменатель = 1000000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "202";
	Уровень3.Наименование = НСтр("ru = 'Тройский фунт США (373,242 г)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "LBT"; //@NON-NLS-1
	Уровень3.Числитель = 373.242;
	Уровень3.Знаменатель = 1000;
	Уровень3.ТипИзмеряемойВеличины = "Вес";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Технические единицы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "213";
	Уровень3.Наименование = НСтр("ru = 'Эффективная мощность (245,7 ватт)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "B.h.p."; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "BHP"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "275";
	Уровень3.Наименование = НСтр("ru = 'Британская тепловая единица (1,055 кДж)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "Btu"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "BTU"; //@NON-NLS-1
	Уровень3.Числитель = 3798000;
	Уровень3.Знаменатель = 1;
	Уровень3.ТипИзмеряемойВеличины = "Энергия";
	Уровень2 = Уровень1.Строки.Добавить();
	Уровень2.КодЧисловой = "";
	Уровень2.Наименование = НСтр("ru = 'Экономические единицы'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень2.УсловноеОбозначениеНациональное = "";
	Уровень2.УсловноеОбозначениеМеждународное = "";
	Уровень2.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень2.КодовоеБуквенноеОбозначениеМеждународное = "";
	Уровень2.Числитель = 0;
	Уровень2.Знаменатель = 0;
	Уровень2.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "638";
	Уровень3.Наименование = НСтр("ru = 'Гросс (144 шт.)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "gr
		|144"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GRO"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "731";
	Уровень3.Наименование = НСтр("ru = 'Большой гросс (12 гроссов)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "1728"; //@NON-NLS-1
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "GGR"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "738";
	Уровень3.Наименование = НСтр("ru = 'Короткий стандарт (7200 единиц)'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "SST"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "КоличествоШтук";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "835";
	Уровень3.Наименование = НСтр("ru = 'Галлон спирта установленной крепости'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "PGL"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "851";
	Уровень3.Наименование = НСтр("ru = 'Международная единица'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "NIU"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Уровень3 = Уровень2.Строки.Добавить();
	Уровень3.КодЧисловой = "853";
	Уровень3.Наименование = НСтр("ru = 'Сто международных единиц'", ОбщегоНазначения.КодОсновногоЯзыка());
	Уровень3.УсловноеОбозначениеНациональное = "";
	Уровень3.УсловноеОбозначениеМеждународное = "";
	Уровень3.КодовоеБуквенноеОбозначениеНациональное = "";
	Уровень3.КодовоеБуквенноеОбозначениеМеждународное = "HIU"; //@NON-NLS-1
	Уровень3.Числитель = 0;
	Уровень3.Знаменатель = 0;
	Уровень3.ТипИзмеряемойВеличины = "";
	Возврат ДеревоЗначений;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
#КонецЕсли
