#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

Функция ДанныеОбъекта(ЭлементДанных) Экспорт
	
	ДанныеПартии = Новый Структура;
	
	ДанныеПартии.Вставить("Идентификатор",        Неопределено);
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭлементДанных, "pu_kgWeight") Тогда
		ДанныеПартии.Вставить("КоличествоСАТУРН",     ЭлементДанных.pu_kgWeight);
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭлементДанных, "unitQuantity") Тогда
		ДанныеПартии.Вставить("КоличествоСАТУРН",     ЭлементДанных.unitQuantity);
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭлементДанных, "pu_title") Тогда
		ДанныеПартии.Вставить("НаименованиеУпаковки", ЭлементДанных.pu_title);
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭлементДанных, "unitName") Тогда
		ДанныеПартии.Вставить("НаименованиеУпаковки", ЭлементДанных.unitName);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПартии.КоличествоСАТУРН) Тогда
		
		ДанныеХэшСуммы = Новый Массив();
		ДанныеХэшСуммы.Добавить(СокрЛП(НРег(ДанныеПартии.НаименованиеУпаковки)));
		ДанныеХэшСуммы.Добавить(Формат(ДанныеПартии.КоличествоСАТУРН, "ЧН=0; ЧГ=0;"));
		ДанныеПартии.Идентификатор = ОбщегоНазначенияИС.ХэшСуммаСтроки(СтрСоединить(ДанныеХэшСуммы, "|"));
	
	КонецЕсли;
	
	Возврат ДанныеПартии;
	
КонецФункции

#Область ПоискСсылок

Функция КлючЕдиницы(Идентификатор, ПараметрыОбмена, ДанныеОбъекта) Экспорт
	
	Если Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат ПустаяСсылка();
	КонецЕсли;
	
	ИмяТаблицы       = Метаданные.Справочники.КлючиЕдиницИзмеренияСАТУРН.ПолноеИмя();
	СправочникСсылка = ИнтеграцияСАТУРНСлужебный.СсылкаПоИдентификатору(ПараметрыОбмена, ИмяТаблицы, Идентификатор);
	
	Если ЗначениеЗаполнено(СправочникСсылка) Тогда
		ИнтеграцияСАТУРНСлужебный.ОбновитьСсылку(ПараметрыОбмена, ИмяТаблицы, Идентификатор, СправочникСсылка);
	Иначе
		
		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить(ИмяТаблицы);
		ЭлементБлокировки.УстановитьЗначение("Идентификатор", Идентификатор);
		
		ТранзакцияЗафиксирована = Истина;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка.Заблокировать();
			
			СправочникСсылка = ИнтеграцияСАТУРНСлужебный.СсылкаПоИдентификатору(ПараметрыОбмена, ИмяТаблицы, Идентификатор);
			
			Если ДанныеОбъекта = Неопределено Тогда
				СправочникСсылка = СоздатьКлючЕдиницы(Идентификатор, ПараметрыОбмена);
			Иначе
				СправочникСсылка = ЗагрузитьОбъект(ДанныеОбъекта, ПараметрыОбмена,, Ложь);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТранзакцияЗафиксирована = Ложь;
			
			ТекстОшибки = СтрШаблон(
				НСтр("ru = 'Ошибка при создании Ключа единицы измерения с идентификатором %1:
				           |%2'"),
				Идентификатор,
				ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ТекстОшибкиПодробно = СтрШаблон(
				НСтр("ru = 'Ошибка при создании Ключа единицы измерения с идентификатором %1:
				           |%2'"),
				Идентификатор,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
				ТекстОшибкиПодробно,
				НСтр("ru = 'Работа с Ключами единиц измерения'", ОбщегоНазначения.КодОсновногоЯзыка()));
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
		Если ТранзакцияЗафиксирована Тогда
			ИнтеграцияСАТУРНСлужебный.ОбновитьСсылку(ПараметрыОбмена, ИмяТаблицы, Идентификатор, СправочникСсылка);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СправочникСсылка;
	
КонецФункции

Функция ЗагрузитьОбъект(ДанныеКлюча, ПараметрыОбмена, СуществующийОбъект = Неопределено, ТребуетсяПоиск = Истина, ОрганизацияСАТУРН = Неопределено) Экспорт
	
	ЗаписьНового       = Ложь;
	МетаданныеЭлемента = Метаданные.Справочники.КлючиЕдиницИзмеренияСАТУРН;
	
	Идентификатор = ДанныеКлюча.Идентификатор;
	
	Если Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат ПустаяСсылка();
	КонецЕсли;
	
	Если СуществующийОбъект = Неопределено Тогда
		
		СуществующийЭлемент = Неопределено;
		Если ТребуетсяПоиск Тогда
			СуществующийЭлемент = ИнтеграцияСАТУРНСлужебный.СсылкаПоИдентификатору(
				ПараметрыОбмена,
				МетаданныеЭлемента.ПолноеИмя(),
				Идентификатор);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СуществующийЭлемент) Тогда
			СуществующийОбъект = СоздатьЭлемент();
			СуществующийОбъект.Заполнить(Неопределено);
			СуществующийОбъект.Идентификатор = Идентификатор;
			ЗаписьНового = Истина;
		Иначе
			СуществующийОбъект = СуществующийЭлемент.ПолучитьОбъект();
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗаписьНового Тогда
		СуществующийОбъект.Заблокировать();
	КонецЕсли;
	
	СуществующийОбъект.КоличествоСАТУРН     = ДанныеКлюча.КоличествоСАТУРН;
	СуществующийОбъект.НаименованиеУпаковки = ДанныеКлюча.НаименованиеУпаковки;
	СуществующийОбъект.Наименование         = СтрШаблон(
		НСтр("ru = '%1 (%2 кг|л)'"),
		СуществующийОбъект.НаименованиеУпаковки,
		СуществующийОбъект.КоличествоСАТУРН);
	
	СуществующийОбъект.Записать();
	
	ИнтеграцияСАТУРНСлужебный.ОбновитьСсылку(
		ПараметрыОбмена,
		МетаданныеЭлемента.ПолноеИмя(),
		Идентификатор,
		СуществующийОбъект.Ссылка);
	
	Возврат СуществующийОбъект.Ссылка;
	
КонецФункции

Функция СоздатьКлючЕдиницы(Идентификатор, ПараметрыОбмена)
	
	СправочникОбъект = СоздатьЭлемент();
	СправочникОбъект.Идентификатор = Идентификатор;
	СправочникОбъект.Наименование  = НСтр("ru = '<Требуется загрузка>'");
	
	СправочникОбъект.Записать();
	
	Возврат СправочникОбъект.Ссылка;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли