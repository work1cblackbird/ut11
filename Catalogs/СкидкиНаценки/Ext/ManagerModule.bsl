
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Данные.ВариантСовместногоПрименения) И Не ЗначениеЗаполнено(Данные.Наименование) Тогда
		СтандартнаяОбработка = Ложь;
		Представление = Данные.ВариантСовместногоПрименения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("ЭтоГруппа");
	Поля.Добавить("ВариантСовместногоПрименения");
	Поля.Добавить("Наименование");
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Получает реквизиты объекта, которые необходимо блокировать от изменения.
//
// Возвращаемое значение:
//  Массив - блокируемые реквизиты объекта.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("ВалютаПредоставления");
	Результат.Добавить("ВариантСовместногоПрименения");
	Результат.Добавить("ВариантРасчетаРезультатаСовместногоПрименения");
	Результат.Добавить("ВидЦены");
	Результат.Добавить("ЗначениеСкидкиНаценки");
	Результат.Добавить("СегментПодарков");
	Результат.Добавить("СпособПредоставления;СпособПредоставленияСкидкиНаценки,СпособПредоставленияБонусныеБаллы,ПоказатьФормуНастроекВнешнейОбработкиБонусы,ПоказатьФормуНастроекВнешнейОбработки,УточнениеПоЦеновымГруппамПредставлениеСумма");
	Результат.Добавить("Управляемая;СпособНазначения");
	Результат.Добавить("УсловияПредоставления;УсловияПредоставленияПодобратьУсловияПредоставления,УсловияПредоставленияПодобратьУсловияПредоставленияБонусы,УсловияПредоставленияГруппаСоздать");
	Результат.Добавить("ЦеновыеГруппы");
	Результат.Добавить("Родитель");
	Результат.Добавить("ТекстСообщения");
	Результат.Добавить("ВидКартыЛояльности");
	Результат.Добавить("ИспользоватьКратность");
	Результат.Добавить("УсловиеДляСкидкиКоличеством");
	Результат.Добавить("ТочностьОкругления");
	Результат.Добавить("ПсихологическоеОкругление");
	Результат.Добавить("ВариантОкругления");
	Результат.Добавить("СпособПримененияСкидки");
	Результат.Добавить("СпособНазначения;СпособНазначенияВручную,СпособНазначенияАвтоматически");
	Результат.Добавить("БонуснаяПрограммаЛояльности");
	Результат.Добавить("ПериодДействия;ИспользоватьПериодДействия");
	Результат.Добавить("КоличествоПериодовДействия");
	Результат.Добавить("ПериодОтсрочкиНачалаДействия;ИспользоватьОтсрочкуНачалаДействия");
	Результат.Добавить("КоличествоПериодовОтсрочкиНачалаДействия");
	Результат.Добавить("ВариантОтбораНоменклатуры;ДополнительныйОтборПредставление,ОтборПредставление,СегментНоменклатуры,СписокНоменклатуры");
	Результат.Добавить("ПрименятьУмножениеВРамкахВышестоящейГруппы");
	Результат.Добавить("УчитыватьХарактеристики");
	Возврат Результат;
	
КонецФункции

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения:
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - Ключ - Имя табличной части объекта.
//                               Значение - Выгрузка в таблицу значений пустой табличной части.
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	#Область КорневаяГруппа
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КорневаяГруппа";
	Элемент.Наименование = НСтр("ru = 'Корневая группа'", ОбщегоНазначения.КодОсновногоЯзыка());
	#КонецОбласти

КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - СправочникОбъект.СкидкиНаценки - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет предопределенный элемент справочника "Скидки (наценки)".
//
Процедура ЗаполнитьПредопределенныеЭлементы() Экспорт
	
	СправочникОбъект = Справочники.СкидкиНаценки.КорневаяГруппа.ПолучитьОбъект();
	СправочникОбъект.ВариантСовместногоПрименения = Перечисления.ВариантыСовместногоПримененияСкидокНаценок.Максимум;
	СправочникОбъект.ВариантРасчетаРезультатаСовместногоПрименения = Перечисления.ВариантыРасчетаРезультатаСовместногоПрименения.ПоСтроке;
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
