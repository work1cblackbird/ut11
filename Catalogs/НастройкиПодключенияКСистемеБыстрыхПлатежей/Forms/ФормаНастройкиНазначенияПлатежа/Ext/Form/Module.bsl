///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Параметры.НастройкаПодключения) Тогда
		ВызватьИсключение НСтр("ru = 'Некорректные параметры формы.'");
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	НастройкаПодключения = Параметры.НастройкаПодключения;
	ИдентификаторыКоманд = Новый Структура;
	ИдентификаторыКоманд.Вставить("ИдентификаторовПараметров", Новый Соответствие);
	ИдентификаторыКоманд.Вставить("ПараметрыИдентификаторов", Новый Соответствие);
	
	НастройкаПодключения = Параметры.НастройкаПодключения;
	НастройкиПодключения = СистемаБыстрыхПлатежейСлужебный.НастройкиПодключенияПрограммы();
	СохраненныеШаблоны = РегистрыСведений.ШаблоныНазначенийПлатежейСБП.ШаблоныНазначенийПлатежей(
		НастройкаПодключения);
	
	Сч = 0;
	Для Каждого ДанныеШаблона Из НастройкиПодключения.c2b.ШаблоныНазначений Цикл
		
		НовыйШаблон = НастройкиШаблонов.Добавить();
		ЗаполнитьЗначенияСвойств(
			НовыйШаблон,
			ДанныеШаблона,
			"ОбъектМетаданных, Идентификатор, Наименование");
		НовыйШаблон.НазначениеПлатежа = СохраненныеШаблоны.Получить(
			ДанныеШаблона.Идентификатор);
		НовыйШаблон.Параметры.ЗагрузитьЗначения(
			ДанныеШаблона.Параметры);
		
		Для Каждого ДанныеПараметра Из ДанныеШаблона.Параметры Цикл
			
			ИдентификаторКоманды = "Параметр" + Сч;
			ИдентификаторыКоманд.ИдентификаторовПараметров.Вставить(
				ДанныеШаблона.Идентификатор + "_" + ДанныеПараметра.Идентификатор,
				ИдентификаторКоманды);
			ИдентификаторыКоманд.ПараметрыИдентификаторов.Вставить(
				ИдентификаторКоманды,
				ДанныеПараметра.Идентификатор);
			
			КомандаВставкиПараметра = ЭтотОбъект.Команды.Добавить(
				ИдентификаторКоманды);
			КомандаВставкиПараметра.Заголовок = ДанныеПараметра.Наименование;
			КомандаВставкиПараметра.Действие = "Подключаемый_ПриОбработкеВставкиПараметра";
			
			КнопкаВставкиПараметра = Элементы.Добавить(
				ИдентификаторКоманды,
				Тип("КнопкаФормы"),
				Элементы.ДобавитьВШаблон);
			КнопкаВставкиПараметра.Заголовок = ДанныеПараметра.Наименование;
			КнопкаВставкиПараметра.ИмяКоманды = ИдентификаторКоманды;
			
			Сч = Сч + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если НастройкиШаблонов.Количество() = 1 Тогда
		Элементы.ГруппаЛеваяКолонка.Видимость = Ложь;
		Элементы.ДекорацияПредставлениеШаблонаНазначения.Видимость = Истина;
		Элементы.ДекорацияПредставлениеШаблонаНазначения.Заголовок =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Назначение шаблона: %1'"),
				НастройкиШаблонов[0].Наименование);
	Иначе
		Элементы.ГруппаЛеваяКолонка.Видимость = Истина;
		Элементы.ДекорацияПредставлениеШаблонаНазначения.Видимость = Ложь;
	КонецЕсли;
	
	ТекущийИдентификатор = НастройкиШаблонов[0].Идентификатор;
	ГраницыВыделения = Новый Структура(
		"НачалоСтроки,
		|НачалоКолонки,
		|КонецСтроки,
		|КонецКолонки,
		|ТребуетсяОбновление",
		0,
		0,
		0,
		0,
		Ложь);
		
	ИзменениеШаблоновДоступно = ПравоДоступа(
		"Изменение",
		Метаданные.РегистрыСведений.ШаблоныНазначенийПлатежейСБП);
	
	Элементы.Сохранить.Видимость = ИзменениеШаблоновДоступно;
	Элементы.ДобавитьВШаблон.Видимость = ИзменениеШаблоновДоступно;
	Элементы.ШаблонНазначения.Доступность = ИзменениеШаблоновДоступно;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НастройкиШаблонов.Количество() = 1 Тогда
		ПриСменеНастройкиШаблонов(0);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ШаблонНазначенияОкончаниеВводаТекста(
		Элемент,
		Текст,
		ДанныеВыбора,
		ПараметрыПолученияДанных,
		СтандартнаяОбработка)
	
	ГраницыВыделения.ТребуетсяОбновление = Истина;
	
	ЗапрещенныеСимволы = СистемаБыстрыхПлатежейКлиентСервер.ЗапрещенныеСимволыНазначенияПлатежа(
		Текст);
	Если ЗапрещенныеСимволы.Количество() <> 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В назначении платежа присутствуют запрещенные символы: %1'"),
				СтрСоединить(ЗапрещенныеСимволы, ",")),
			,
			,
			"ТекущееНазначениеПлатежа");
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Идентификатор", ТекущийИдентификатор);
	НайденныеШаблоны = НастройкиШаблонов.НайтиСтроки(Отбор);
	Если НайденныеШаблоны.Количество() <> 0 И ОбновитьНазначение Тогда
		НайденныеШаблоны[0].НазначениеПлатежа = Текст;
	КонецЕсли;
	
	ТекущееНазначениеПлатежа = Текст;
	ОбновитьНазначение = Истина;
	
	ГраницыВыделения.ТребуетсяОбновление = Ложь;
	Элементы.ШаблонНазначения.ПолучитьГраницыВыделения(
		ГраницыВыделения.НачалоСтроки,
		ГраницыВыделения.НачалоКолонки,
		ГраницыВыделения.КонецСтроки,
		ГраницыВыделения.КонецКолонки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокШаблонов

&НаКлиенте
Процедура НастройкиШаблоновПриАктивизацииСтроки(Элемент)
	
	ПриСменеНастройкиШаблонов(Элементы.НастройкиШаблонов.ТекущаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Идентификатор", ТекущийИдентификатор);
	НайденныеШаблоны = НастройкиШаблонов.НайтиСтроки(Отбор);
	Если НайденныеШаблоны.Количество() <> 0 И ОбновитьНазначение Тогда
		НайденныеШаблоны[0].НазначениеПлатежа = ТекущееНазначениеПлатежа;
	КонецЕсли;
	
	Отказ = Ложь;
	КоличествоЗаполненных = 0;
	Для Каждого ДанныеШаблона Из НастройкиШаблонов Цикл
		
		Если Не ЗначениеЗаполнено(ДанныеШаблона.НазначениеПлатежа) Тогда
			Продолжить;
		КонецЕсли;
		КоличествоЗаполненных = КоличествоЗаполненных + 1;
		ЗапрещенныеСимволы = СистемаБыстрыхПлатежейКлиентСервер.ЗапрещенныеСимволыНазначенияПлатежа(
			ДанныеШаблона.НазначениеПлатежа);
		Если ЗапрещенныеСимволы.Количество() <> 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В назначении платежа шаблона %1 присутствуют запрещенные символы: %2'"),
					ДанныеШаблона.Наименование,
					СтрСоединить(ЗапрещенныеСимволы, ",")),
				,
				,
				"НастройкиШаблонов.НастройкиШаблоновНаименование",
				Отказ);
			
		КонецЕсли;
	
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаСервере();
	Закрыть(КоличествоЗаполненных);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриОбработкеВставкиПараметра(Команда)
	
	Если ГраницыВыделения.ТребуетсяОбновление Тогда
		Элементы.ШаблонНазначения.ПолучитьГраницыВыделения(
			ГраницыВыделения.НачалоСтроки,
			ГраницыВыделения.НачалоКолонки,
			ГраницыВыделения.КонецСтроки,
			ГраницыВыделения.КонецКолонки);
	КонецЕсли;
	ГраницыВыделения.ТребуетсяОбновление = Истина;
	
	Если (ГраницыВыделения.КонецКолонки = ГраницыВыделения.НачалоКолонки
		И ГраницыВыделения.НачалоСтроки = ГраницыВыделения.КонецСтроки
		И ГраницыВыделения.КонецКолонки = (СтрДлина(ТекущееНазначениеПлатежа) + 1))
		Или Не ЗначениеЗаполнено(ТекущееНазначениеПлатежа) Тогда
		ТекущееНазначениеПлатежа = ТекущееНазначениеПлатежа
			+ ИдентификаторыКоманд.ПараметрыИдентификаторов.Получить(Команда.Имя);
		Возврат;
	КонецЕсли;
	
	НомерСтроки = ГраницыВыделения.КонецСтроки - ГраницыВыделения.НачалоСтроки + 1;
	СчетчикСимволов = 1;
	СчетчикСтрок = 1;
	СчетчикКолонок = 0;
	Результат = "";
	
	Пока СчетчикСимволов <= СтрДлина(ТекущееНазначениеПлатежа) Цикл
		
		ТекущийСимвол = Сред(
			ТекущееНазначениеПлатежа,
			СчетчикСимволов,
			1);
		
		Если ТекущийСимвол = Символы.ПС Тогда
			СчетчикСтрок = СчетчикСтрок + 1;
			СчетчикКолонок = 0;
		КонецЕсли;
		
		СчетчикКолонок = СчетчикКолонок + 1;
		СчетчикСимволов = СчетчикСимволов + 1;
		
		Если НомерСтроки = СчетчикСтрок
			И ГраницыВыделения.НачалоКолонки = СчетчикКолонок Тогда
			
			Результат = Результат + ИдентификаторыКоманд.ПараметрыИдентификаторов.Получить(Команда.Имя);
			Если ГраницыВыделения.НачалоКолонки <> ГраницыВыделения.КонецКолонки Тогда
				СчетчикСимволов = СчетчикСимволов + ГраницыВыделения.КонецКолонки - ГраницыВыделения.НачалоКолонки - 1;
				Продолжить;
			КонецЕсли;
			
		ИначеЕсли ГраницыВыделения.НачалоКолонки = СчетчикКолонок
			И ГраницыВыделения.НачалоСтроки = СчетчикСтрок
			И ГраницыВыделения.КонецСтроки <> ГраницыВыделения.НачалоСтроки Тогда
			
			Результат = Результат + ИдентификаторыКоманд.ПараметрыИдентификаторов.Получить(Команда.Имя);
			Пока СчетчикСимволов <= СтрДлина(ТекущееНазначениеПлатежа) Цикл
				
				СчетчикСимволов = СчетчикСимволов + 1;
				СчетчикКолонок = СчетчикКолонок + 1;
				
				ТекущийСимвол = Сред(
					ТекущееНазначениеПлатежа,
					СчетчикСимволов,
					1);
				
				Если ГраницыВыделения.КонецСтроки = СчетчикСтрок
					И СчетчикКолонок = ГраницыВыделения.КонецКолонки Тогда
					Прервать;
				КонецЕсли;
				
				Если ТекущийСимвол = Символы.ПС Тогда
					СчетчикСтрок = СчетчикСтрок + 1;
					СчетчикКолонок = 0;
				КонецЕсли;
				
			КонецЦикла;
			
			Продолжить;
			
		КонецЕсли;
		
		Результат = Результат + ТекущийСимвол;
		
	КонецЦикла;
	
	ТекущееНазначениеПлатежа = Результат;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриСменеНастройкиШаблонов(ИдентификаторСтроки)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Идентификатор", ТекущийИдентификатор);
	
	НайденныеШаблоны = НастройкиШаблонов.НайтиСтроки(Отбор);
	Если НайденныеШаблоны.Количество() <> 0 И ОбновитьНазначение Тогда
		НайденныеШаблоны[0].НазначениеПлатежа = ТекущееНазначениеПлатежа;
	КонецЕсли;
	ОбновитьНазначение = Истина;
	
	ТекущаяСтрока = НастройкиШаблонов.НайтиПоИдентификатору(ИдентификаторСтроки);
	ТекущееНазначениеПлатежа = ТекущаяСтрока.НазначениеПлатежа;
	ТекущийИдентификатор = ТекущаяСтрока.Идентификатор;
	
	Для Каждого КомандаВставки Из Элементы.ДобавитьВШаблон.ПодчиненныеЭлементы Цикл
		КомандаВставки.Видимость = Ложь;
	КонецЦикла;
	
	Для Каждого ДанныеПараметра Из ТекущаяСтрока.Параметры Цикл
		ИмяКоманды = ИдентификаторыКоманд.ИдентификаторовПараметров.Получить(
			ТекущийИдентификатор + "_" + ДанныеПараметра.Значение.Идентификатор);
		Элементы[ИмяКоманды].Видимость = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НастройкиШаблонов.Имя);
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НастройкиШаблоновНаименование.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НастройкиШаблонов.НазначениеПлатежа");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра(
		"Шрифт",
		Метаданные.ЭлементыСтиля.ШрифтВажногоЗаголовкаБИП.Значение);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
	
	РегистрыСведений.ШаблоныНазначенийПлатежейСБП.ОбновитьШаблоныНазначений(
		НастройкаПодключения,
		НастройкиШаблонов);
	
КонецПроцедуры

#КонецОбласти
