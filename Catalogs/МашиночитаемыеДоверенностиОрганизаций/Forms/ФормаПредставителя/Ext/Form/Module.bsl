#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
 	ТипыОрганизацииПредставителяМЧД = Новый Массив(); 
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьТипыОрганизацииПредставителяМЧД(
		ТипыОрганизацииПредставителяМЧД);
	НашеОписание = Новый ОписаниеТипов(ТипыОрганизацииПредставителяМЧД);
	Элементы.Организация.ОграничениеТипа = НашеОписание; 
	Организация = НашеОписание.ПривестиЗначение(Организация); 
			
	ТипПредставителя = "ФЛ";
	
	Если Параметры.Свойство("СтруктураДанных") 
		И Параметры.СтруктураДанных <> Неопределено Тогда
		
		Элементы.Добавить.Видимость = Ложь;
		Элементы.Сохранить.Видимость = Истина;
		Элементы.Сохранить.КнопкаПоУмолчанию = Истина;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.СтруктураДанных, ,"ТипПредставителя");
		
		ФЛ_Удостоверение = ПолучитьПредставлениеУдостоверение(ЭтотОбъект);
		
		СведенияФизЛица = Новый Структура;
		СведенияФизЛица.Вставить("ИНН", ФЛ_ИНН);
		ФизическоеЛицо = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьФизЛицоМЧД(
			СведенияФизЛица);
		
		Если ЗначениеЗаполнено(Параметры.СтруктураДанных.ЮЛ_ИНН) Тогда
			
			ТипПредставителя = "ЮЛ";
			
			СведенияЮрЛица = Новый Структура;
			СведенияЮрЛица.Вставить("ИНН", ЮЛ_ИНН);
			СведенияЮрЛица.Вставить("КПП", ЮЛ_КПП);
			СведенияЮрЛица.Вставить("ОГРН", ЮЛ_ОГРН);
			Организация = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьОрганизациюМЧД(
				СведенияЮрЛица);
			
		ИначеЕсли ЗначениеЗаполнено(Параметры.СтруктураДанных.ФЛ_ОГРН) Тогда
			
			ТипПредставителя = "ИП";
			
		КонецЕсли;
		
	КонецЕсли;

	УправлениеВидимостью(ЭтотОбъект);
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивУдаляемыхРеквизитов = Новый Массив;
	МассивУдаляемыхРеквизитов.Добавить("ЮЛ_ИНН");
	МассивУдаляемыхРеквизитов.Добавить("ЮЛ_КПП");
	МассивУдаляемыхРеквизитов.Добавить("ЮЛ_ОГРН");
	МассивУдаляемыхРеквизитов.Добавить("ФЛ_ОГРН");
	МассивУдаляемыхРеквизитов.Добавить("Организация");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивУдаляемыхРеквизитов);
	
	Если ЗначениеЗаполнено(ТипПредставителя) И ТипПредставителя = "ЮЛ" Тогда
		ПроверяемыеРеквизиты.Добавить("ЮЛ_ИНН");
		ПроверяемыеРеквизиты.Добавить("ЮЛ_КПП");
		ПроверяемыеРеквизиты.Добавить("ЮЛ_ОГРН");
		ПроверяемыеРеквизиты.Добавить("Организация");
	ИначеЕсли ЗначениеЗаполнено(ТипПредставителя) И ТипПредставителя = "ИП" Тогда
		ПроверяемыеРеквизиты.Добавить("Организация");
		ПроверяемыеРеквизиты.Добавить("ФЛ_ОГРН");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипПредставителяПриИзменении(Элемент)
	УправлениеВидимостью(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ФЛ_УдостоверениеОчистка(Элемент, СтандартнаяОбработка)
	
	ДокументСерия = "";
	ДокументНомер = "";
	ДокументДатаВыдачи = "";
	ДокументВид	= "";
	ДокументКемВыдан = "";
	ДокументКодПодразделения = "";
	ФЛ_Удостоверение = "";
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ФЛ_УдостоверениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ДокументВид", ДокументВид);
	СтруктураДанных.Вставить("ДокументСерия", ДокументСерия);
	СтруктураДанных.Вставить("ДокументНомер", ДокументНомер);
	СтруктураДанных.Вставить("ДокументДатаВыдачи", ДокументДатаВыдачи);
	СтруктураДанных.Вставить("ДокументКемВыдан", ДокументКемВыдан);
	СтруктураДанных.Вставить("ДокументКодПодразделения", ДокументКодПодразделения);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредставительФЛ_УдостоверениеНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаВводаУдостоверения",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	ФизическоеЛицоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда) 
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СведенияОПредставителеМЧД = ЗаполнитьДанныеПредставителя();
	СведенияОПредставителеМЧД.Вставить("НомерСтроки", НомерСтроки);
	
	Закрыть(СведенияОПредставителеМЧД);
	
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ЗаполнитьДанныеПредставителя());

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ЗаполнитьДанныеПредставителя()
	
	СведенияОПредставителеМЧД = МашиночитаемыеДоверенностиКлиентСервер.НовыеСведенияОПредставителеМЧД();
	
	ЗаполнитьЗначенияСвойств(СведенияОПредставителеМЧД, ЭтотОбъект);
	
	ЭтоИП = ТипПредставителя = "ИП";
	СведенияОПредставителеМЧД.ФЛ_ОГРН = ?(ЭтоИП, ФЛ_ОГРН, ""); 
	
	ЭтоЮЛ = ТипПредставителя = "ЮЛ";
	СведенияОПредставителеМЧД.ЮЛ_Наименование = ?(ЭтоЮЛ, ЮЛ_Наименование, "");
	СведенияОПредставителеМЧД.ЮЛ_ИНН = ?(ЭтоЮЛ, ЮЛ_ИНН, "");
	СведенияОПредставителеМЧД.ЮЛ_КПП = ?(ЭтоЮЛ, ЮЛ_КПП, "");
	СведенияОПредставителеМЧД.ЮЛ_ОГРН = ?(ЭтоЮЛ, ЮЛ_ОГРН, "");
	
	Возврат СведенияОПредставителеМЧД;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСвойстваОрганизации(Организация)
	
	Результат = Новый Структура;
	Результат.Вставить("ЭтоЮридическоеЛицо", Истина);
	Результат.Вставить("ЭтоРоссийскаяОрганизация", Истина);
	Результат.Вставить("АдресXML", "");
	Результат.Вставить("ИНН", "");
	Результат.Вставить("КПП", "");
	Результат.Вставить("ОГРН", "");
	Результат.Вставить("Наименование", "");
	Результат.Вставить("Фамилия", "");
	Результат.Вставить("Имя", "");
	Результат.Вставить("Отчество", "");
	Результат.Вставить("Должность", "");
	Результат.Вставить("РуководительФизлицо", Неопределено);
	Результат.Вставить("СНИЛС", "");
	Результат.Вставить("РуководительОснованиеПолномочий", "");
	Результат.Вставить("РуководительИНН", "");
	Результат.Вставить("ДатаРождения", '00010101');
	Результат.Вставить("Гражданство", Справочники.СтраныМира.ПустаяСсылка());
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Результат.ЭтоЮридическоеЛицо = НЕ ИнтеграцияЭДО.ЭтоФизЛицо(Организация);
	
	СтруктураСведений = ОбщегоНазначенияБЭД.ДанныеЮрФизЛица(Организация);
	Если ИнтеграцияЭДО.ЭтоОрганизация(Организация) Тогда
		ДанныеОрганизации = ИнтеграцияЭДО.РегистрационныеДанныеОрганизации(Организация);
		Реквизиты = "ИНН, КПП, ОГРН, Наименование, Фамилия, Имя, Отчество, Должность, СНИЛС,
		| РуководительОснованиеПолномочий, РуководительИНН, ДатаРождения, Гражданство, РуководительФизлицо";
		ЗаполнитьЗначенияСвойств(Результат, ДанныеОрганизации, Реквизиты);
	Иначе
		Результат.Наименование = СтруктураСведений.ПолноеНаименование;
		Результат.ИНН = СтруктураСведений.ИНН;
		Результат.КПП = СтруктураСведений.КПП;
		Результат.ОГРН = СтруктураСведений.ОГРН;
	КонецЕсли;
	
	Результат.АдресXML = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(СтруктураСведений, "ЮридическийАдресXML", "");

	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЮЛ_ИНН = "";
	ЮЛ_КПП = "";
	ЮЛ_ОГРН = "";
	ФЛ_ОГРН = "";
	
	СвойстваОрганизации = Неопределено;
	Если ЗначениеЗаполнено(Организация) Тогда
		СвойстваОрганизации = ПолучитьСвойстваОрганизации(Организация);
	Иначе
		Возврат;
	КонецЕсли;
		
	Если Не СвойстваОрганизации.ЭтоЮридическоеЛицо Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Необходимо выбрать юридическое лицо.'"), , "РеквизитПредставительОрганизация");
		Организация = Неопределено;
		Возврат;
	КонецЕсли;
	
	ЮЛ_Наименование = СвойстваОрганизации.Наименование;
	ЮЛ_ИНН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.ИНН , "");
	ЮЛ_КПП = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.КПП , "");
	ЮЛ_ОГРН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.ОГРН , "");
	ФЛ_ОГРН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, "", СвойстваОрганизации.ОГРН);
		
	Модифицированность = Истина; 
	
КонецПроцедуры

&НаСервере
Процедура ФизическоеЛицоПриИзмененииНаСервере()
	
	ОчиститьФизическоеЛицо();
	ФЛ_Удостоверение = "";
	
	Если НЕ ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанныхФизЛица = МашиночитаемыеДоверенности.ДанныеФизЛица(ФизическоеЛицо);
	
	ФЛ_ИНН = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица), СтруктураДанныхФизЛица.ИНН, "");
	ФЛ_СНИЛС = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица),
		СтруктураДанныхФизЛица.СтраховойНомерПФР, "");
	ФЛ_Гражданство = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица),
		СтруктураДанныхФизЛица.Гражданство, ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));
	ФЛ_ДатаРождения = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица), 
		СтруктураДанныхФизЛица.ДатаРождения, Неопределено);
		
	ФЛ_ДатаРождения = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица), 
		СтруктураДанныхФизЛица.ДатаРождения, Неопределено);

	ФЛ_Фамилия 	= СтруктураДанныхФизЛица.Фамилия;
	ФЛ_Имя 		= СтруктураДанныхФизЛица.Имя;
	ФЛ_Отчество	= СтруктураДанныхФизЛица.Отчество;
	
	Представитель = ПолучитьПредставлениеФИО(СтруктураДанныхФизЛица);
		
	ДанныеУдостоверения = Новый Структура;	
	ДанныеУдостоверения.Вставить("ДокументВид", СтруктураДанныхФизЛица.КодФНС);
	ДанныеУдостоверения.Вставить("ДокументСерия", СтруктураДанныхФизЛица.Серия);
	ДанныеУдостоверения.Вставить("ДокументНомер", СтруктураДанныхФизЛица.Номер);
	ДанныеУдостоверения.Вставить("ДокументДатаВыдачи", СтруктураДанныхФизЛица.ДатаВыдачи);
	ДанныеУдостоверения.Вставить("ДокументКемВыдан", СтруктураДанныхФизЛица.КемВыдан);
	ДанныеУдостоверения.Вставить("ДокументКодПодразделения", СтруктураДанныхФизЛица.КодПодразделения);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеУдостоверения);
	
	ФЛ_Удостоверение = ПолучитьПредставлениеУдостоверение(ДанныеУдостоверения);

	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредставлениеФИО(СтрокаФИО)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(СтрокаФИО.Фамилия) Тогда
		Представление = СтрокаФИО.Фамилия;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаФИО.Имя) Тогда
		Представление = Представление + " " + СтрокаФИО.Имя;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаФИО.Отчество) Тогда
		Представление = Представление + " " + СтрокаФИО.Отчество;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредставлениеУдостоверение(СтруктураДанныхФизЛица)
	
	Представление = "";
	Если ЗначениеЗаполнено(СтруктураДанныхФизЛица.ДокументВид) Тогда
		
		// Меняем код ФНС на код, используемый реестром доверенностей
		Если СтруктураДанныхФизЛица.ДокументВид = "18" Тогда
			СтруктураДанныхФизЛица.ДокументВид = "19";
		КонецЕсли;
		
		ВидыДокументов = МашиночитаемыеДоверенностиКлиентСервер.ВидыДокументовФизическихЛиц();
		Представление = ВидыДокументов.Получить(СтруктураДанныхФизЛица.ДокументВид);
		
		Если Представление = Неопределено Тогда
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'У физического лица указан недопустимый для доверенности тип документа, удостоверяющего личность.'");
			Сообщение.Сообщить();
			Возврат "";
			
		КонецЕсли;
		
	КонецЕсли;

	Если ЗначениеЗаполнено(СтруктураДанныхФизЛица.ДокументСерия) Тогда
		Представление = Представление + " " + СтруктураДанныхФизЛица.ДокументСерия;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураДанныхФизЛица.ДокументНомер) Тогда
		Представление = Представление + " " + СтруктураДанныхФизЛица.ДокументНомер;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураДанныхФизЛица.ДокументДатаВыдачи) Тогда
		Представление =
			Представление + " " + НСтр("ru = 'выдан'") + " " + Формат(СтруктураДанныхФизЛица.ДокументДатаВыдачи, "ДЛФ=ДД");
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураДанныхФизЛица.ДокументКемВыдан) Тогда
		Представление = Представление + " " + СтруктураДанныхФизЛица.ДокументКемВыдан;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураДанныхФизЛица.ДокументКодПодразделения) Тогда
		Представление = Представление + ", " + НСтр("ru = 'код подразделения'") + ":" + СтруктураДанныхФизЛица.ДокументКодПодразделения;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

&НаСервере
Процедура ОчиститьФизическоеЛицо()
	
	Представитель = "";
	ФЛ_ИНН = "";
	ФЛ_СНИЛС = "";
	ФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	ФЛ_ДатаРождения = Неопределено;
			
КонецПроцедуры 

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	ФЛ_Удостоверение = ПолучитьПредставлениеУдостоверение(РезультатВыбора);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РезультатВыбора);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
		
	Форма.Элементы.ГруппаОргРеквизиты.Видимость = Форма.ТипПредставителя = "ЮЛ";	
	Форма.Элементы.ФЛ_ОГРН.Видимость = Форма.ТипПредставителя = "ИП";
	Форма.Элементы.Организация.Видимость = ЗначениеЗаполнено(Форма.ТипПредставителя) И Не Форма.ТипПредставителя = "ФЛ";
	
КонецПроцедуры

#КонецОбласти

