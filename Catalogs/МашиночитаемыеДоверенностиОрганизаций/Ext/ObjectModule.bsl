// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	МЧД = Справочники.МашиночитаемыеДоверенностиОрганизаций.НайтиПоРеквизиту("НомерДоверенности", НомерДоверенности);
	
	Если ЗначениеЗаполнено(МЧД) И Ссылка <> МЧД Тогда
		
		ДополнительныеСвойства.Вставить("МЧД", МЧД);
		ТекстСообщения = НСтр("ru = 'Доверенность с таким номером уже существует'") + ": " + НомерДоверенности;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Наименование = МашиночитаемыеДоверенности.ПредставлениеОбъекта(ЭтотОбъект);
	
	Если НЕ ЗначениеЗаполнено(СведенияОбИнформационнойСистеме) Тогда
		СведенияОбИнформационнойСистеме = МашиночитаемыеДоверенности.СведенияОбИнформационнойСистеме();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Отозвана И Не ЗначениеЗаполнено(ДатаОтзыва) Тогда
		ДатаОтзыва = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Не Отозвана И ЗначениеЗаполнено(ДатаОтзыва) Тогда
		ДатаОтзыва = Дата(1, 1, 1);	
	КонецЕсли;
	
	Если Верна И Не Подписана Тогда
		Верна = Ложь;	
	КонецЕсли;
	
	ДвоичныеДанные = XMLфайлМЧД.Получить(); // ДвоичныеДанные
	ВерсияФорматаМЧД = "";
	
	Если ДвоичныеДанные <> Неопределено Тогда
		РезультатЧтения = МашиночитаемыеДоверенности.ОбъектXDTOМЧД(ДвоичныеДанные);
		Если Не ЗначениеЗаполнено(РезультатЧтения.ТекстОшибки) Тогда
			ВерсияФорматаМЧД = МашиночитаемыеДоверенности.ВерсияФорматаОбъектаМЧД(РезультатЧтения.ОбъектМЧД);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РезультатЧтения.ТекстОшибки)
			И Не МашиночитаемыеДоверенности.ЭтоПередоверие(РезультатЧтения.ОбъектМЧД) Тогда
			НомерРодительскойДоверенности = "";
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ХешФайла) Тогда
			ХешФайла = ОбщегоНазначения.КонтрольнаяСуммаСтрокой(ДвоичныеДанные, ХешФункция.SHA256);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыЗаписиВЖурналМЧД = МашиночитаемыеДоверенности.НовыеПараметрыЗаписиВЖурналМЧД();
	ДополнительныеСвойства.Вставить("ПараметрыЗаписиВЖурналМЧД", ПараметрыЗаписиВЖурналМЧД);
	Если Не ЭтоНовый() Тогда
		ПредыдущиеЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ХешФайла");
		Если ПредыдущиеЗначенияРеквизитов.ХешФайла <> ХешФайла Тогда
			ПараметрыЗаписиВЖурналМЧД.ИзменилсяХеш = Истина;
			ПараметрыЗаписиВЖурналМЧД.ПредыдущееЗначениеХеша = ПредыдущиеЗначенияРеквизитов.ХешФайла;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВариантЗаполненияПолномочий) Тогда
		
		Если МашиночитаемыеДоверенности.ФорматМЧДПоддерживаетКлассификаторПолномочий(ВерсияФорматаМЧД)
			И Полномочия.Количество() > 0 Тогда
			
			ПолномочияКодифицированы = Истина;
			
			Для Каждого Полномочие Из Полномочия Цикл
				Если Не ЗначениеЗаполнено(Полномочие.Код) Тогда
					ПолномочияКодифицированы = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ПолномочияКодифицированы Тогда
				ВариантЗаполненияПолномочий = Перечисления.ВариантыЗаполненияПолномочийМЧД.Классификатор;
			Иначе
				ВариантЗаполненияПолномочий = Перечисления.ВариантыЗаполненияПолномочийМЧД.Текст;
			КонецЕсли;
		
		Иначе
			
			ВариантЗаполненияПолномочий = Перечисления.ВариантыЗаполненияПолномочийМЧД.Текст;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоСозданиеНового", ЭтоНовый());
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.ЭтоСозданиеНового Тогда
		Справочники.ПравилаПроверкиПолномочийМЧД.СоздатьТиповыеПравилаПриЗагрузкеМЧД(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Отозвана = Ложь;
	ДатаОтзыва = Дата(1, 1, 1);
	ДатаВыдачи = Дата(1, 1, 1);
	ДатаОкончания = Дата(1, 1, 1);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область События

// Добавляет или обновляет запись в журнале МЧД. Возникает в подписке ПриЗаписи.
// См. МашиночитаемыеДоверенности.ЗаписатьМашиночитаемуюДоверенностьВЖурнал
// 
// Параметры:
//  Отказ - Булево
Процедура ЗаписатьВЖурнал(Отказ) Экспорт
	ДанныеДоверенности = XMLфайлМЧД.Получить(); // ДвоичныеДанные
	Если Не ЗначениеЗаполнено(ХешФайла) Или Не Подписана Или ДанныеДоверенности = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Журнал = РегистрыСведений.ЖурналМашиночитаемыхДоверенностей;
	Запись = Журнал.НоваяЗаписьЖурнала();
	Запись.Хеш = ХешФайла;
	Запись.Номер = НомерДоверенности;
	СведенияФайла = МашиночитаемыеДоверенности.ДанныеИзФайлаОбмена(ДанныеДоверенности).ДанныеДоверенности;
	ТипыДоверителей = Журнал.ТипыДоверителей();
	Если ЗначениеЗаполнено(СведенияФайла.ДоверительФЛ_СНИЛС) Тогда
		СведенияДоверителя = Журнал.НовыйДоверитель(ТипыДоверителей.ИндивидуальныйПредприниматель);
		СведенияДоверителя.ДанныеИндивидуальногоПредпринимателя.Наименование = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(
			СведенияФайла.ФИО[0]);
		СведенияДоверителя.ДанныеИндивидуальногоПредпринимателя.ИНН = СведенияФайла.ДоверительФЛ_ИНН;
		СведенияДоверителя.ДанныеИндивидуальногоПредпринимателя.СНИЛС = СведенияФайла.ДоверительФЛ_СНИЛС;
	Иначе
		СведенияДоверителя = Журнал.НовыйДоверитель(ТипыДоверителей.ЮридическоеЛицо);
		СведенияДоверителя.ДанныеЮридическогоЛица.Наименование = СведенияФайла.ДоверительЮЛ_НаимОрг;
		СведенияДоверителя.ДанныеЮридическогоЛица.ИНН = СведенияФайла.ДоверительЮЛ_ИНН;
		СведенияДоверителя.ДанныеЮридическогоЛица.КПП = СведенияФайла.ДоверительЮЛ_КПП;
		СведенияДоверителя.ДанныеЮридическогоЛица.ОГРН = СведенияФайла.ДоверительЮЛ_ОГРН;
		ЛицоБезДоверенности = Журнал.НовоеФизическоеЛицо();
		ЛицоБезДоверенности.ФИО = Строка(СведенияФайла.ЛицоБезДовФЛ);
		ЛицоБезДоверенности.СНИЛС = СведенияФайла.ЛицоБезДовФЛ_СНИЛС;
		ЛицоБезДоверенности.ИНН = СведенияФайла.ЛицоБезДовФЛ_ИНН;
		СведенияДоверителя.ДанныеЮридическогоЛица.ЛицаБезДоверенности.Добавить(ЛицоБезДоверенности);
	КонецЕсли;
	Запись.Доверители.Добавить(СведенияДоверителя);
	ТипыПредставителей = Журнал.ТипыПредставителей();
	Для Каждого ПредставительОбъекта Из СведенияФайла.Представители Цикл
		Представитель_ФИО = ОбщегоНазначенияБЭДКлиентСервер.ФИОСтрокой(ПредставительОбъекта);
		Если ПредставительОбъекта.ТипУполномоченногоПредставителя = "ФЛ" Тогда
			Представитель = Журнал.НовыйПредставитель(ТипыПредставителей.ФизическоеЛицо);
			Представитель.ДанныеФизическогоЛица.ФИО = Представитель_ФИО;
			Представитель.ДанныеФизическогоЛица.ИНН = ПредставительОбъекта.ПредставительФЛ_ИНН;
			Представитель.ДанныеФизическогоЛица.СНИЛС = ПредставительОбъекта.ПредставительФЛ_СНИЛС;
		ИначеЕсли ПредставительОбъекта.ТипУполномоченногоПредставителя = "ЮЛ" Тогда
			Представитель = Журнал.НовыйПредставитель(ТипыПредставителей.ЮридическоеЛицо);
			Представитель.ДанныеЮридическогоЛица.Наименование = ПредставительОбъекта.ПредставительЮЛ_НаимОрг;
			Представитель.ДанныеЮридическогоЛица.ИНН = ПредставительОбъекта.ПредставительЮЛ_ИНН;
			Представитель.ДанныеЮридическогоЛица.КПП = ПредставительОбъекта.ПредставительЮЛ_КПП;
			Представитель.ДанныеЮридическогоЛица.ОГРН = ПредставительОбъекта.ПредставительЮЛ_ОГРН;
			ПредставительФЛ_СНИЛС = "";
			ПредставительФЛ_ИНН = "";
			Если ПредставительОбъекта.Свойство("ПредставительФЛ_СНИЛС", ПредставительФЛ_СНИЛС)
				Или ПредставительОбъекта.Свойство("ПредставительФЛ_ИНН", ПредставительФЛ_ИНН) Тогда
				ЛицоБезДоверенности = Журнал.НовоеФизическоеЛицо();
				ЛицоБезДоверенности.ФИО = Представитель_ФИО;
				ЛицоБезДоверенности.СНИЛС = ПредставительФЛ_СНИЛС;
				ЛицоБезДоверенности.ИНН = ПредставительФЛ_ИНН;
				Представитель.ДанныеЮридическогоЛица.ЛицаБезДоверенности.Добавить(ЛицоБезДоверенности);
			КонецЕсли;
		ИначеЕсли ПредставительОбъекта.ТипУполномоченногоПредставителя = "ИП" Тогда
			Представитель = Журнал.НовыйПредставитель(ТипыПредставителей.ИндивидуальныйПредприниматель);
			Представитель.ДанныеИндивидуальногоПредпринимателя.Наименование = ПредставительОбъекта.ПредставительЮЛ_НаимОрг;
			Представитель.ДанныеИндивидуальногоПредпринимателя.ИНН = ПредставительОбъекта.ПредставительЮЛ_ИНН;
			Представитель.ДанныеИндивидуальногоПредпринимателя.СНИЛС = ПредставительОбъекта.ПредставительФЛ_СНИЛС;
			Представитель.ДанныеИндивидуальногоПредпринимателя.ОГРН = ПредставительОбъекта.ПредставительЮЛ_ОГРН;
		Иначе
			Продолжить;
		КонецЕсли;
		Запись.Представители.Добавить(Представитель);
	КонецЦикла;
	Запись.ДатаВыдачи = ДатаВыдачи;
	Запись.Доверенность = Ссылка;
	Запись.ДатаОкончанияДействия = ДатаОкончанияДействия();
	Запись.Верна = Верна;
	Запись.Действует = Действует();
	Запись.ПометкаУдаления = ПометкаУдаления;
	Журнал.ДобавитьЗапись(Запись);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция Действует()
	СвойстваДоверенности = МашиночитаемыеДоверенности.НовыеСвойстваДоверенности();
	ЗаполнитьЗначенияСвойств(СвойстваДоверенности, ЭтотОбъект);
	Возврат МашиночитаемыеДоверенности.ДоверенностьДействительнаПоСвойствам(СвойстваДоверенности, ТекущаяДатаСеанса());
КонецФункции

Функция ДатаОкончанияДействия()
	Если ЗначениеЗаполнено(ДатаОкончания) И Не ЗначениеЗаполнено(ДатаОтзыва) Тогда
		Возврат ДатаОкончания;
	ИначеЕсли ЗначениеЗаполнено(ДатаОтзыва) И Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		Возврат ДатаОтзыва;
	Иначе
		Возврат Мин(ДатаОкончания, ДатаОтзыва);
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли