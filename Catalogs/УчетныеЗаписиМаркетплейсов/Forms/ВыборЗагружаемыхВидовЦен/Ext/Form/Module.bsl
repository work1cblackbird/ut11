
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьВидыЦен();

	ТолькоВыделенныеСтроки = Параметры.ТолькоВыделенные;
	ТолькоНезаполненные    = 0;

	Элементы.ОК.Заголовок                                = НСтр("ru = 'Загрузить'");
	Элементы.ВидыЦенПересчитать.Заголовок                = НСтр("ru = 'Загрузить'");
	Элементы.ТолькоВыделенныеСтроки.Заголовок            =НСтр("ru = 'Загрузить строки документа'");                       

	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыЦен

&НаКлиенте
Процедура ВидыЦенВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	МассивВидовЦен = Новый Массив();
	
	Для Каждого ВидЦены Из ВидыЦен Цикл
		
		Если ВидЦены.Пересчитать Тогда
			МассивВидовЦен.Добавить(ВидЦены.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Результат = Новый Структура();
	Результат.Вставить("ВидыЦен",                МассивВидовЦен);
	Результат.Вставить("ТолькоВыделенныеСтроки", ТолькоВыделенныеСтроки = 1);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыЦенВыбратьВсе(Команда)
	
	Для Каждого ВидЦены Из ВидыЦен Цикл
		Если Не ВидЦены.Пересчитать Тогда
			ВидЦены.Пересчитать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыЦенИсключитьВсе(Команда)
	
	Для Каждого ВидЦены Из ВидыЦен Цикл
		Если ВидЦены.Пересчитать Тогда
			ВидЦены.Пересчитать = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура загружает виды цен в таблицу ВидыЦен в порядке,
// соответствующем порядку в документе.
&НаСервере
Процедура ЗагрузитьВидыЦен()

	Запрос = Новый Запрос();
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЦен.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ЕСТЬNULL(Т.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаОбновленияЦены,
	|	1 КАК ИндексКартинки
	|ИЗ
	|	Справочник.ВидыЦен КАК ВидыЦен
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсточникЦенНоменклатуры КАК Т
	|		ПО ВидыЦен.Ссылка = Т.ВидЦены
	|ГДЕ
	|	ВидыЦен.Ссылка В(&МассивВидовЦен)
	|	И ВидыЦен.СпособЗаданияЦены = &СпособЗаданияЦены
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЦен.Ссылка";

	Если ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25() Тогда
		ТаблицаИсточник = "РегистрСведений.ЦеныНоменклатуры25.СрезПоследних";
	Иначе
		ТаблицаИсточник = "РегистрСведений.ЦеныНоменклатуры.СрезПоследних";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИсточникЦенНоменклатуры", ТаблицаИсточник);
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивВидовЦен", Параметры.РучныеВидыЦен);
	Запрос.УстановитьПараметр("СпособЗаданияЦены", Параметры.СпособЗаданияЦены);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	ТаблицаВидовЦен = Результат.Выгрузить();

	// Для того, чтобы виды цен в списке были в том же порядке, как и на форме документа,
	// загружаем их вручную.
	Для Каждого ВидЦены Из Параметры.РучныеВидыЦен Цикл

		НайденныйВидЦен = ТаблицаВидовЦен.Найти(ВидЦены, "Ссылка");

		Если НайденныйВидЦен <> Неопределено Тогда

			СтрокаВидаЦен                   = ВидыЦен.Добавить();
			СтрокаВидаЦен.Ссылка            = ВидЦены;
			СтрокаВидаЦен.ДатаОбновленияЦены = НайденныйВидЦен.ДатаОбновленияЦены;
			СтрокаВидаЦен.Пересчитать       = Истина;
			СтрокаВидаЦен.ИндексКартинки    = НайденныйВидЦен.ИндексКартинки;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти
