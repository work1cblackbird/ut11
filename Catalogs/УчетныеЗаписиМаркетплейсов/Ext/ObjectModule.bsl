#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью.
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсOzon Тогда
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("Организация", Организация);
		СтруктураНастроек.Вставить("ИдентификаторКлиента", ИдентификаторКлиента);
		СтруктураНастроек.Вставить("ИсточникКатегории", ИсточникКатегории);
		СтруктураНастроек.Вставить("ВалютаУчета", ВалютаУчета);
		СтруктураНастроек.Вставить("ВидыЦен", ВидыЦен.Выгрузить());
		
		ХешНастроек = Справочники.УчетныеЗаписиМаркетплейсов.ПолучитьХешНастроек(СтруктураНастроек);
	КонецЕсли;

	ИзменениеПометкиУдаления = 0;
	Если ПометкаУдаления = Истина И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") = Ложь Тогда // Помечается
		ИзменениеПометкиУдаления = 1;
	ИначеЕсли ПометкаУдаления = Ложь И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") = Истина Тогда // Снимается
		ИзменениеПометкиУдаления = -1;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ИзменениеПометкиУдаления", ИзменениеПометкиУдаления);
	ДополнительныеСвойства.Вставить("ПредставлениеСсылкиДоИзменения", Строка(Ссылка));

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если Отказ Или ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ИзменениеПометкиУдаления = 0;
	ДополнительныеСвойства.Свойство("ИзменениеПометкиУдаления", ИзменениеПометкиУдаления);

	Если ИзменениеПометкиУдаления = 1 Тогда	// Помечается
		Использование = Ложь;
	ИначеЕсли ИзменениеПометкиУдаления = -1 Тогда	// Снимается
		Использование = Истина;
	КонецЕсли;
	
	ПредставлениеСсылкиДоИзменения = "";
	ДополнительныеСвойства.Свойство("ПредставлениеСсылкиДоИзменения", ПредставлениеСсылкиДоИзменения);
	ИзмененоПредставление = (ПредставлениеСсылкиДоИзменения <> Строка(Ссылка));

	Идентификатор = Ссылка.УникальныйИдентификатор();
	МенеджерОбъекта = Справочники.УчетныеЗаписиМаркетплейсов;

	УстановитьПривилегированныйРежим(Истина);

	Если ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсOzon Тогда
		Префиксы = ИнтеграцияСМаркетплейсомOzonКлиентСервер.ПрефиксыСервиса(Истина);

		Если ЗначениеЗаполнено(ИзменениеПометкиУдаления) Тогда
			Для Каждого Префикс Из Префиксы Цикл
				МенеджерОбъекта.УстановитьИспользованиеРегламентногоЗадания(Префикс.Значение + Идентификатор, Использование);
			КонецЦикла;
		КонецЕсли;

		Если ИзменениеПометкиУдаления = -1 Или ИзмененоПредставление Тогда
			Для Каждого Префикс Из Префиксы Цикл
				ПредставлениеРегламентногоЗадания = ИнтеграцияСМаркетплейсомOzonКлиентСервер.НаименованиеРегламентногоЗадания(Префикс.Значение);
				МенеджерОбъекта.УстановитьНаименованиеРегламентногоЗадания(Префикс.Значение + Идентификатор, ПредставлениеРегламентногоЗадания, Наименование);
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсЯндексМаркет Тогда
		ДоступнаРаботаСОстатками = МенеджерОбъекта.ДоступнаРаботаСОстатками(ВидМаркетплейса, СхемаРаботы);
		Если НЕ ДоступнаРаботаСОстатками Тогда
			МенеджерОбъекта.УдалитьРегламентноеЗадание("ЯндексМаркет_ВыгрузкаОстатковТоваровЯндексМаркет_" + Идентификатор);
		КонецЕсли;

		Префиксы = ИнтеграцияСЯндексМаркетСервер.ПрефиксыРегламентныхЗаданий();

		Если ЗначениеЗаполнено(ИзменениеПометкиУдаления) Тогда
			Для Каждого Префикс Из Префиксы Цикл
				МенеджерОбъекта.УстановитьИспользованиеРегламентногоЗадания(Префикс.Значение + Идентификатор, Использование);
			КонецЦикла;
		КонецЕсли;

		Если ИзменениеПометкиУдаления = -1 Или ИзмененоПредставление Тогда
			Для Каждого Префикс Из Префиксы Цикл
				МенеджерОбъекта.УстановитьНаименованиеРегламентногоЗадания(Префикс.Значение + Идентификатор, Префикс.Представление, Строка(Ссылка));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура ПередУдалением(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Идентификатор = Ссылка.УникальныйИдентификатор();
	МенеджерОбъекта = Справочники.УчетныеЗаписиМаркетплейсов;

	Если ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсOzon Тогда
		Префиксы = ИнтеграцияСМаркетплейсомOzonКлиентСервер.ПрефиксыСервиса(Истина);
	ИначеЕсли ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсЯндексМаркет Тогда
		Префиксы = ИнтеграцияСЯндексМаркетСервер.ПрефиксыРегламентныхЗаданий();
	Иначе
		Префиксы = Неопределено;
	КонецЕсли;

	Если Префиксы = Неопределено Тогда
		Для Каждого Префикс Из Префиксы Цикл
			МенеджерОбъекта.УдалитьРегламентноеЗадание(Префикс.Значение + Идентификатор);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Изменяет значение дополнительной настройки для учетной записи торговой площадки.
//
// Параметры:
//   ИдентификаторНастройки - Строка - идентификатор настройки.
//   ЗначениеНастройки      - Произвольный - значение настройки.
//
Процедура ИзменитьДополнительнуюНастройку(ИдентификаторНастройки, ЗначениеНастройки) Экспорт
	
	СтрокаТабличнойЧасти = ДополнительныеНастройки.Найти(ИдентификаторНастройки, "ИдентификаторНастройки");
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		СтрокаТабличнойЧасти = ДополнительныеНастройки.Добавить();
		СтрокаТабличнойЧасти.ИдентификаторНастройки = ИдентификаторНастройки;
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеНастройки) = Тип("Булево") 
			Или ТипЗнч(ЗначениеНастройки) = Тип("Дата")
			Или ТипЗнч(ЗначениеНастройки) = Тип("Число") Тогда
		СтрокаТабличнойЧасти.ЗначениеНастройки = ЗначениеНастройки;
	
	ИначеЕсли ТипЗнч(ЗначениеНастройки) = Тип("Строка") Тогда
		СтрокаТабличнойЧасти.ЗначениеНастройкиСтрока = ЗначениеНастройки;
	
	Иначе
		СтрокаТабличнойЧасти.ЗначениеНастройкиСсылка = ЗначениеНастройки;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
