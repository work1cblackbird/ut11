#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Определяет, есть ли в программе настройки обмена с письмами
// 
// Параметры:
//   Владелец - СправочникСсылка.ИнтеграцияBankFeeds - ссылка на настройку
// 
// Возвращаемое значение:
//  Структура - набор данных для авторизации:
//		*AppID - строка - идентификатор приложения.
//		*Secret - строка -  секретный ключ.
//		*ТестовыйРежим - булево -  тестовый режим.
//		*ЗакрытыйКлюч - строка -  путь к закрытому ключу.
//
Функция НастройкиАвторизации(Владелец) Экспорт
	
	Результат = Новый Структура("AppID,Secret,ТестовыйРежим,ЗакрытыйКлюч", "", "", Ложь, "");
	Если НЕ ЗначениеЗаполнено(Владелец) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПараметрыАвторизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, "AppID,ТестовыйРежим,ПутьКСертификату,Секрет");
	Результат.AppID = ПараметрыАвторизации.AppID;
	Результат.Secret = ПараметрыАвторизации.Секрет;
	Результат.ТестовыйРежим = ПараметрыАвторизации.ТестовыйРежим;
	Результат.ЗакрытыйКлюч = ПараметрыАвторизации.ПутьКСертификату;
	
	Возврат Результат;
	
КонецФункции

// Функция Получает данные в сервисе для дальнейшей авторизации
//
// Параметры:
//	ПараметрыЗаполнения - Структура - параметры заполнения
//
// Возвращаемое значение:
//	Структура - Результат обработки:
//		* СтатусОтвета - Строка - Статус ответа
//		* ПараметрыЗаполнения - Структура - Параметры заполнения:
//			** Организация - СправочникСсылка.Организации 
//		* МассивОшибок - Массив из Строка - Массив ошибок
//
Функция ПроверкаПодключения(ПараметрыЗаполнения) Экспорт
	
	ПараметрыЗапроса = ОбменССервисомBankFeedsСервер.ПреобразоватьВПараметрыЗапросаДляПроверкиСоединения(ПараметрыЗаполнения);
	СтатусыОтвета = СловарьBankFeedsСлужебный.СтатусыОтвета();
	РезультатОбработки = Новый Структура;
	РезультатОбработки.Вставить("СтатусОтвета", СтатусыОтвета.ОтветНеПолучен);
	РезультатОбработки.Вставить("ПараметрыЗаполнения", ПараметрыЗаполнения);
	РезультатОбработки.Вставить("МассивОшибок", Новый Массив());
	
	ПараметрыОтветаОтСервиса = ОбменССервисомBankFeedsСервер.ПроверитьПодключение(ПараметрыЗапроса);
		
	ЗаполнитьЗначенияСвойств(РезультатОбработки, ПараметрыОтветаОтСервиса);
		
	Возврат РезультатОбработки;
	
КонецФункции	

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив из Строка
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("*");
	Возврат Результат;
	
КонецФункции

// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

// Возвращает реквизиты справочника, которые образуют естественный ключ
// для элементов справочника.
//
// Возвращаемое значение:
//  Массив из Строка - массив имен реквизитов, образующих естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив();
	
	Результат.Добавить("Код");
	
	Возврат Результат;
	
КонецФункции

// Конец ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

#КонецОбласти

#КонецОбласти

#КонецЕсли
