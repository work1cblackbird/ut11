	   
#Область ОбработчикиСобытийФормы
	   
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Константы.ИспользоватьСервисBankFeeds.Установить(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		
		Элементы.КаталогХраненияКлючей.Видимость = Истина; 
		Элементы.ЗагрузитьКлюч.Видимость = Истина;
		
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не Объект.ТестовыйРежим 
			И Не ЗначениеЗаполнено(Объект.ПутьКСертификату) Тогда
		
		Отказ = Истина;
		
		Текст = НСтр("ru = 'Поле ""Путь к закрытому ключу"" не заполнен.'");
		ОбщегоНазначения.СообщитьПользователю(
			Текст,,
			"ПутьКСертификату",,
			Отказ);
			
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТестовыйРежимПриИзменении(Элемент)

	УстановитьВидимость();
	Объект.ПутьКСертификату = "";
		
	#Если ВебКлиент Тогда
		
		Элементы.КаталогХраненияКлючей.Видимость = Истина; 
		Элементы.ЗагрузитьКлюч.Видимость = Истина;
		
	#КонецЕсли
		
КонецПроцедуры

&НаКлиенте
Процедура ПутьКСертификатуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Фильтр = НСтр("ru = 'Файл закрытого ключа (*.pem)|*.pem'");
	
	ДополнительныеПараметры = Новый Структура;
	
	ОповещениеВыбора = Новый ОписаниеОповещения("ВыбранФайл", ЭтотОбъект, ДополнительныеПараметры);
	
	ФайловаяСистемаКлиент.ПоказатьДиалогВыбора(ОповещениеВыбора, ДиалогОткрытияФайла);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьПодключение(Команда)

	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) 
		ИЛИ Модифицированность Тогда
		
		ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
							|Выполнение действия возможно только после записи данных.
							|Записать элемент?'");
			
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбъектНеЗаписанЗавершение", ЭтотОбъект),
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОтправитьЗапросНаПроверкуПодключения();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКлюч(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.КаталогХраненияКлючей) Тогда
		
		Текст = НСтр("ru = 'Поле ""Каталог хранения ключей на сервере"" не заполнен'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			Текст,,
			"КаталогХраненияКлючей",,
			);
		
		Возврат;
	КонецЕсли;	
	
	ДополнительныеПараметры = Новый Структура();      
	ИмяФайла = "private.pem";
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ВыбратьИПередатьФайлНаСерверПослеВыбораВДиалогеЗавершение", 
					ЭтотОбъект, ДополнительныеПараметры);

	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru = 'Закрытый ключ(*.pem;)|*.pem'");
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОповещениеЗавершения, ПараметрыЗагрузки, ИмяФайла);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьФайлНаСервере(Результат)
	Если Результат.Хранение = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
    ДвоичныйФайл = ПолучитьИзВременногоХранилища(Результат.Хранение);
	
	КаталогХраненияКлючей = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Объект.КаталогХраненияКлючей);
	ПараметрыПути = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(Результат.Имя, Ложь);
	ИмяФайла = ПараметрыПути.Имя;
	
	ДвоичныйФайл.Записать(КаталогХраненияКлючей + ИмяФайла);	
	
	Объект.ПутьКСертификату = КаталогХраненияКлючей + ИмяФайла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИПередатьФайлНаСерверПослеВыбораВДиалогеЗавершение(ПомещенныйФайл, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныйФайл = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат  = Новый Структура("Имя, Хранение");
	Результат.Имя      = ПомещенныйФайл.Имя;
	Результат.Хранение = ПомещенныйФайл.Хранение;
	
	//Сохраняем на сервере  
	СохранитьФайлНаСервере(Результат);   
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектНеЗаписанЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Записать();   
		ОтправитьЗапросНаПроверкуПодключения();
	КонецЕсли;
	
КонецПроцедуры   

&НаКлиенте
Процедура ОтправитьЗапросНаПроверкуПодключения()
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("НастройкиСервиса", Объект.Ссылка);

	ОбменССервисомBankFeedsКлиент.ПроверитьПодключениеСервиса(ПараметрыЗаполнения, ЭтотОбъект);	
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыбранФайл(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ВыбранныеФайлы) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПутьКСертификату = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()

	Элементы.ПутьКСертификату.Доступность = Не Объект.ТестовыйРежим;
	Элементы.ПутьКСертификату.АвтоОтметкаНезаполненного = Не Объект.ТестовыйРежим;	
	Элементы.ОписаниеТребованийКРаботеТестовогоРежима.Доступность = Не Объект.ТестовыйРежим;
	Элементы.КаталогХраненияКлючей.Доступность = Не Объект.ТестовыйРежим;
	Элементы.ЗагрузитьКлюч.Доступность = Не Объект.ТестовыйРежим;
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		Элементы.КаталогХраненияКлючей.Видимость = Ложь; 
		Элементы.ЗагрузитьКлюч.Видимость = Ложь;
		
	Иначе	
		Элементы.ПутьКСертификату.КнопкаВыбора = Ложь;
		
	КонецЕсли
	
КонецПроцедуры	

#КонецОбласти


