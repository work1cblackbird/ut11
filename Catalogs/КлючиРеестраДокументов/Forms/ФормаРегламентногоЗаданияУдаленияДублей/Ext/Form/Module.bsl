
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	РазделениеВключено = ОбщегоНазначения.РазделениеВключено();
	
	Параметры.Свойство("ИдентификаторРегламентногоЗадания", ИдентификаторРегламентногоЗадания);
	
	УстановитьПривилегированныйРежим(Истина);
	РегламентноеЗадание = ПолучитьДанныеРегламентногоЗадания(ИдентификаторРегламентногоЗадания);
	УстановитьПривилегированныйРежим(Ложь);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РегламентноеЗадание, ПараметрыРегламентногоЗадания());
	Наименование = Метаданные.РегламентныеЗадания.УдалениеДублейКлючейРеестраДокументов.Синоним;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОбработчикОповещения = Новый ОписаниеОповещения("КомандаЗаписатьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(ОбработчикОповещения, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	ЗаписатьРегламентноеЗадание();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Значение = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ЗаписатьРегламентноеЗадание();
	Закрыть(ИдентификаторРегламентногоЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	ОбработчикОповещения = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект);
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Диалог.Показать(ОбработчикОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьДанныеРегламентногоЗадания(ИдентификаторРегламентногоЗадания)
	
	ПараметрыПоиска = Новый Структура;
	
	Если ЗначениеЗаполнено(ИдентификаторРегламентногоЗадания) Тогда
		
		ПараметрыПоиска.Вставить("УникальныйИдентификатор",
			Новый УникальныйИдентификатор(ИдентификаторРегламентногоЗадания));
		
	Иначе
		
		ПараметрыПоиска.Вставить("Метаданные",
			Метаданные.РегламентныеЗадания.УдалениеДублейКлючейРеестраДокументов);
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ПоискЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(ПараметрыПоиска);
	УстановитьПривилегированныйРежим(Ложь);

	Если ПоискЗаданий.Количество() > 0 Тогда
		ИдентификаторРегламентногоЗадания = Строка(РегламентныеЗаданияСервер.УникальныйИдентификатор(ПоискЗаданий.Получить(0)));
	Иначе
		
		РегламентноеЗадание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыПоиска);
		ИдентификаторРегламентногоЗадания = РегламентныеЗаданияСервер.УникальныйИдентификатор(РегламентноеЗадание);
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Задание = РегламентныеЗаданияСервер.Задание(ИдентификаторРегламентногоЗадания);
	УстановитьПривилегированныйРежим(Ложь);
	
	Результат = Новый Структура(ПараметрыРегламентногоЗадания());
	ЗаполнитьЗначенияСвойств(Результат, Задание);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Если Значение <> Неопределено Тогда
		
		Расписание = Значение;
		Модифицированность = Истина;
		
		Если РазделениеВключено
			И Расписание.ПериодПовтораВТечениеДня > 0
			И Расписание.ПериодПовтораВТечениеДня < 3600 Тогда
			
			Расписание.ПериодПовтораВТечениеДня = 3600;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРегламентноеЗадание()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыИзменения = Новый Структура(ПараметрыРегламентногоЗадания());
	ЗаполнитьЗначенияСвойств(ПараметрыИзменения, ЭтотОбъект);
	
	РегламентныеЗаданияСервер.ИзменитьЗадание(ИдентификаторРегламентногоЗадания, ПараметрыИзменения);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыРегламентногоЗадания()
	
	Возврат "Использование, Расписание, ИнтервалПовтораПриАварийномЗавершении, КоличествоПовторовПриАварийномЗавершении";
	
КонецФункции

#КонецОбласти
