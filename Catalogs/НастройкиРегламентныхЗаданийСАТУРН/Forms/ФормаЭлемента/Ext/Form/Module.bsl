#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	СобытияФормСАТУРН.УстановитьПараметрыВыбораОрганизации(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		УстановитьНаименование = Ложь;
		Если Параметры.ЗначенияЗаполнения.Свойство("ОрганизацияСАТУРН") Тогда
			Объект.ОрганизацияСАТУРН = Параметры.ЗначенияЗаполнения.ОрганизацияСАТУРН;
			УстановитьНаименование = Истина;
		КонецЕсли;
		
		Объект.ВидНастройкиОбмена = Перечисления.ВидыНастроекОбменаСАТУРН.ОбменДанными;
		
		ПриСозданииЧтенииНаСервере();
		
		Если УстановитьНаименование Тогда
			УстановитьНаименование(ЭтотОбъект);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ЕстьОшибкиПараметровНастройкиОбмена = Ложь;
	
	Если ЕстьОшибкиПараметровНастройкиОбмена Тогда
		ТекстСообщения = Нстр("ru = 'Требуется заполнить параметры настройки обмена'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,, "ПараметрыНастройкиОбменаСтрокой", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Расписание",    Расписание);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Использование", РегламентноеЗаданиеИспользуется);
	
	Если Объект.ВидНастройкиОбмена = Перечисления.ВидыНастроекОбменаСАТУРН.ОбменДанными Тогда
		ТекущийОбъект.ПараметрыНастройкиОбмена = Новый ХранилищеЗначения(Неопределено);
	Иначе
		ТекущийОбъект.ПараметрыНастройкиОбмена = Новый ХранилищеЗначения(ПараметрыНастройкиОбмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Объект.ВидНастройкиОбмена = ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаСАТУРН.ОбменДанными") Тогда
		ПараметрыОповещения = Новый Структура();
		ПараметрыОповещения.Вставить("ВидНастройкиОбмена", Объект.ВидНастройкиОбмена);
		ПараметрыОповещения.Вставить("ОрганизацияСАТУРН",  Объект.ОрганизацияСАТУРН);
		Оповестить(
			СобытияФормСАТУРНКлиент.ИмяСобытияИзмененаНастройкаАвтоматическогоОбмена(),
			ПараметрыОповещения,
			ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьНаименование(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНастройкиОбменаПриИзменении(Элемент)
	
	ПолучитьПараметрыНастройкиОбмена(ЭтотОбъект);
	ОбновитьПараметрыНастройкиОбменаСтрокой(ЭтотОбъект);
	ОбновитьВидимостьДоступностьЭлементовФормы(ЭтотОбъект);
	УстановитьНаименование(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыНастройкиОбменаСтрокойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВидНастройкиОбмена",       Объект.ВидНастройкиОбмена);
	ПараметрыОткрытия.Вставить("ПараметрыНастройкиОбмена", ПараметрыНастройкиОбмена);
	
	ОткрытьФорму("Справочник.НастройкиРегламентныхЗаданийСАТУРН.Форма.ПараметрыНастройкиОбмена",
		ПараметрыОткрытия,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ЗавершениеРедактированияНастройкиОбмена", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ДиалогРасписания.Показать(Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ЦветГиперссылки                = ЦветаСтиля.ЦветГиперссылкиГосИС;
	ЦветТекстаТребуетВниманияГосИС = ЦветаСтиля.ЦветТекстаТребуетВниманияГосИС;
	
	ПолучитьРасписаниеРегламентногоЗадания();
	ПолучитьПараметрыНастройкиОбмена(ЭтотОбъект);
	ОбновитьПараметрыНастройкиОбменаСтрокой(ЭтотОбъект);
	ОбновитьВидимостьДоступностьЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьВидимостьДоступностьЭлементовФормы(Форма)
	
	Форма.Элементы.ПараметрыНастройкиОбменаСтрокой.Видимость =
		ЗначениеЗаполнено(Форма.Объект.ВидНастройкиОбмена)
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаСАТУРН.ОбменДанными")
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаСАТУРН.ЗагрузкаСтатусовНакладных")
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаСАТУРН.ЗагрузкаИмпортируемыхПартий");
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьРасписаниеРегламентногоЗадания()
	
	Расписание = Новый РасписаниеРегламентногоЗадания;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Расписание.ВремяНачала = '00010101220000';
		Расписание.ПериодПовтораДней = 1;
		
	Иначе
		
		УстановитьПривилегированныйРежим(Истина);
		Задание = РегламентныеЗаданияСервер.Задание(Объект.РегламентноеЗадание);
		Если Задание <> Неопределено Тогда
			Расписание = Задание.Расписание;
			РегламентноеЗаданиеИспользуется = Задание.Использование;
		КонецЕсли;
		
	КонецЕсли;
	
	РасписаниеСтрокой = Строка(Расписание);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(НовоеРасписание, ДополнительныеПараметры) Экспорт
	
	Если НовоеРасписание <> Неопределено Тогда
		Расписание = НовоеРасписание;
		РасписаниеСтрокой = Строка(Расписание);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПолучитьПараметрыНастройкиОбмена(Форма)
	
	Форма.ПараметрыНастройкиОбмена = ИнициализироватьПараметрыНастройкиОбмена(Форма.Объект.ВидНастройкиОбмена);
	
	Если Не Форма.Объект.Ссылка.Пустая()
		И Форма.ПараметрыНастройкиОбмена.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Форма.ПараметрыНастройкиОбмена, ПараметрыНастройкиОбмена(Форма.Объект.Ссылка));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИнициализироватьПараметрыНастройкиОбмена(ВидНастройкиОбмена)
	Возврат ИнтеграцияСАТУРНКлиентСервер.ИнициализироватьПараметрыНастройкиОбмена(ВидНастройкиОбмена);
КонецФункции

&НаСервереБезКонтекста
Функция ПараметрыНастройкиОбмена(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиРегламентныхЗаданий.ПараметрыНастройкиОбмена
	|ИЗ
	|	Справочник.НастройкиРегламентныхЗаданийСАТУРН КАК НастройкиРегламентныхЗаданий
	|ГДЕ
	|	НастройкиРегламентныхЗаданий.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Данные = Выборка.ПараметрыНастройкиОбмена.Получить();
		Если ТипЗнч(Данные) = Тип("Структура") Тогда
			Возврат Данные;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый Структура;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПараметрыНастройкиОбменаСтрокой(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ВидНастройкиОбмена)
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаСАТУРН.ОбменДанными")
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаСАТУРН.ЗагрузкаСтатусовНакладных")
		И Форма.Объект.ВидНастройкиОбмена <> ПредопределенноеЗначение("Перечисление.ВидыНастроекОбменаСАТУРН.ЗагрузкаИмпортируемыхПартий") Тогда
		
		Массив = Новый Массив;
		
		ТекстОшибки = НСтр("ru = 'Требуется заполнить параметры настройки обмена'");
		
		Массив.Добавить(ТекстОшибки);
		
		Форма.ПараметрыНастройкиОбменаСтрокой = СтрСоединить(Массив, "; ");
		Форма.Элементы.ПараметрыНастройкиОбменаСтрокой.ЦветТекста = Форма.ЦветГиперссылки;
		
	Иначе
		Форма.ПараметрыНастройкиОбменаСтрокой = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеРедактированияНастройкиОбмена(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПараметрыНастройкиОбмена, Результат);
	
	ОбновитьПараметрыНастройкиОбменаСтрокой(ЭтотОбъект);
	УстановитьНаименование(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНаименование(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ОрганизацияСАТУРН) Тогда
		
		ПредставлениеВидаНастройкиОбмена = Строка(Форма.Объект.ВидНастройкиОбмена);
		
		ПредставлениеОрганизации = Строка(Форма.Объект.ОрганизацияСАТУРН);
		
		Форма.Объект.Наименование = СтрШаблон("%1: %2",
			ПредставлениеОрганизации,
			ПредставлениеВидаНастройкиОбмена);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
