///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

//РаботаСВнешнимОборудованием
Перем глПодключаемоеОборудованиеСобытиеОбработано Экспорт; // для предотвращения повторной обработки события
Перем глПодключаемоеОборудованиеСобытиеОбработаноДанные Экспорт; // для предотвращения повторной обработки события
Перем глДоступныеТипыОборудования Экспорт;
//Конец РаботаСВнешнимОборудованием

// СтандартныеПодсистемы

// Хранилище глобальных переменных.
//
// ПараметрыПриложения - Соответствие из КлючИЗначение:
//   * Ключ - Строка - имя переменной в формате "ИмяБиблиотеки.ИмяПеременной";
//   * Значение - Произвольный - значение переменной.
//
// Пример инициализации:
//   ИмяПараметра = "СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации";
//   Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
//     ПараметрыПриложения.Вставить(ИмяПараметра, Новый СписокЗначений);
//   КонецЕсли;
//  
// Пример использования:
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"].Добавить(...);
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"] = ...;
Перем ПараметрыПриложения Экспорт;

// Конец СтандартныеПодсистемы

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередНачаломРаботыСистемы()
	
	#Если МобильныйКлиент Тогда
		Если ОсновнойСерверДоступен() = Ложь Тогда
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	// СтандартныеПодсистемы
	#Если МобильныйКлиент Тогда
		Выполнить("СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы()");
	#Иначе
		СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы();
	#КонецЕсли
	// Конец СтандартныеПодсистемы
	
КонецПроцедуры

Процедура ПриНачалеРаботыСистемы()
	
	// СтандартныеПодсистемы
	#Если МобильныйКлиент Тогда
		Выполнить("СтандартныеПодсистемыКлиент.ПриНачалеРаботыСистемы()");
	#Иначе
		СтандартныеПодсистемыКлиент.ПриНачалеРаботыСистемы();
	#КонецЕсли
	// Конец СтандартныеПодсистемы
	
КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения)
	
	// СтандартныеПодсистемы
	#Если МобильныйКлиент Тогда
		Выполнить("СтандартныеПодсистемыКлиент.ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения)");
	#Иначе
		СтандартныеПодсистемыКлиент.ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения);
	#КонецЕсли
	// Конец СтандартныеПодсистемы
	
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные)
	
	//++ НЕ ГОСИС
	Если Лев(Источник, 17) = "MobileApplication" Тогда
		#Если МобильныйКлиент Тогда
			Выполнить("МобильныеПриложенияКлиент.ОбработатьВнешнееСобытиеОтМобильногоПриложения(Источник, Событие, Данные)");
		#Иначе
			МобильныеПриложенияКлиент.ОбработатьВнешнееСобытиеОтМобильногоПриложения(Источник, Событие, Данные);
		#КонецЕсли
		Возврат;
	КонецЕсли;
	//-- НЕ ГОСИС
	
	Если глПодключаемоеОборудованиеСобытиеОбработаноДанные <> Неопределено
		И глПодключаемоеОборудованиеСобытиеОбработаноДанные[Данные] <> Неопределено Тогда
		глПодключаемоеОборудованиеСобытиеОбработаноДанные.Удалить(Данные);
		Возврат;
	КонецЕсли;
	
	глПодключаемоеОборудованиеСобытиеОбработано = Ложь;
	
	// ПодключаемоеОборудование
	#Если МобильныйКлиент Тогда
		Выполнить("ИнтеграцияПодсистемБПОКлиент.ОбработкаВнешнегоСобытия(Источник, Событие, Данные)");
	#Иначе
		ИнтеграцияПодсистемБПОКлиент.ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
	#КонецЕсли
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

Процедура ОбработкаПолученияФормыВыбораПользователейСистемыВзаимодействия(НазначениеВыбора,
			Форма, ИдентификаторОбсуждения, Параметры, ВыбраннаяФорма, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы
	#Если МобильныйКлиент Тогда
		Выполнить("СтандартныеПодсистемыКлиент.ОбработкаПолученияФормыВыбораПользователейСистемыВзаимодействия(НазначениеВыбора,
			|Форма, ИдентификаторОбсуждения, Параметры, ВыбраннаяФорма, СтандартнаяОбработка)");
	#Иначе
		СтандартныеПодсистемыКлиент.ОбработкаПолученияФормыВыбораПользователейСистемыВзаимодействия(НазначениеВыбора,
			Форма, ИдентификаторОбсуждения, Параметры, ВыбраннаяФорма, СтандартнаяОбработка);
	#КонецЕсли
	// Конец СтандартныеПодсистемы
	
КонецПроцедуры

Процедура ПриГлобальномПоиске(СтрокаПоиска, ПланГлобальногоПоиска)
	
	// ЭлектронноеВзаимодействие.СервисShare
	#Если МобильныйКлиент Тогда
		Выполнить("ИнтеграцияShareКлиент.ПриГлобальномПоиске(СтрокаПоиска, ПланГлобальногоПоиска)");
	#Иначе
		ИнтеграцияShareКлиент.ПриГлобальномПоиске(СтрокаПоиска, ПланГлобальногоПоиска);
	#КонецЕсли	
	// Конец ЭлектронноеВзаимодействие.СервисShare

КонецПроцедуры

Процедура ПриВыбореРезультатаГлобальногоПоиска(ЭлементРезультата, СтандартнаяОбработка)
	
	// ЭлектронноеВзаимодействие.СервисShare
	#Если МобильныйКлиент Тогда
		Выполнить("ИнтеграцияShareКлиент.ПриВыбореРезультатаГлобальногоПоиска(ЭлементРезультата, СтандартнаяОбработка)");
	#Иначе
		ИнтеграцияShareКлиент.ПриВыбореРезультатаГлобальногоПоиска(ЭлементРезультата, СтандартнаяОбработка);
	#КонецЕсли	
	// Конец ЭлектронноеВзаимодействие.СервисShare
	
КонецПроцедуры

#КонецОбласти

// Процедура осуществляет проверку на необходимость обмена данными с заданным интервалом
Процедура ПроверкаНеобходимостиСинхронизации() Экспорт

#Если МобильныйКлиент Тогда
	Если ОсновнойСерверДоступен() = Истина Тогда
		ОбменМобильныеАвтономныйКлиент.НачатьОбмен();
	КонецЕсли;
#КонецЕсли

КонецПроцедуры

#Если МобильныйКлиент Тогда
Процедура НаблюдениеЗаСинхронизацией() Экспорт
	
	ТекстОшибки = "";
	Если ОбменМобильныеАвтономныйСервер.ОбменДаннымиЗакончен(ПараметрыПриложения["СтандартныеПодсистемы.ОбъектыУТКАУП.ИдентификаторФоновогоЗадания"], ТекстОшибки) Тогда
		ОтключитьОбработчикОжидания("НаблюдениеЗаСинхронизацией");
		Если  ТекстОшибки <> "" Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстОшибки;
			Сообщение.Сообщить();
		Иначе
			Если ОсновнойСерверДоступен() = Истина Тогда
				ОбменМобильныеКлиент.ОповеститьОЗавершении();
			КонецЕсли
		КонецЕсли
	КонецЕсли
	
КонецПроцедуры
#КонецЕсли

Процедура ПриИзмененииДоступностиОсновногоСервера(НачалоСеансаОсновногоСервера)
#Если МобильныйКлиент Тогда
	Если НЕ НачалоСеансаОсновногоСервера Тогда
		ОбменМобильныеАвтономныйКлиент.ОтключитьОбработчикиОжидания();
	КонецЕсли;
#КонецЕсли
КонецПроцедуры

#Область Инициализация

глПодключаемоеОборудованиеСобытиеОбработано = Ложь;

#КонецОбласти