#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Возвращает текст подсказки по особенностям учета номенклатуры.
//
// Параметры:
//	ОсобенностьУчета - ПеречислениеСсылка.ОсобенностиУчетаНоменклатуры	 - особенность учета номенклатуры.
//
// Возвращаемое значение:
//	Строка - подсказка по особенности учета номенклатуры.
//
Функция ПодсказкаПоОсобенностиУчетаНоменклатуры(ОсобенностьУчета) Экспорт
	
	ТекстПодсказки = "";
	
	Если ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом Тогда
		ТекстПодсказки = НСтр("ru = 'Услуга выполняется собственной организацией, продается ей же.'");
	ИначеЕсли ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОрганизациейПоАгентскойСхеме Тогда
		ТекстПодсказки = НСтр("ru = 'Услуга выполняется собственной организацией (принципалом), продается по агентскому договору.'");
	ИначеЕсли ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.Партнером Тогда
		ТекстПодсказки = НСтр("ru = 'Услуга выполняется сторонним исполнителем (принципалом), продается по агентскому договору.'");
	КонецЕсли;
	
	НоменклатураЛокализация.ПодсказкаПоОсобенностиУчетаНоменклатуры(ТекстПодсказки, ОсобенностьУчета);
	
	Возврат ТекстПодсказки;
	
КонецФункции

// Связь особенностей учета и функциональных опций. Если связь не указана, то особенность учета по умолчанию скрывается.
//
// Возвращаемое значение:
//	Соответствие
//	 * Ключ - ПеречислениеСсылка.ОсобенностиУчетаНоменклатуры.
//	 * Значение - Строка - имена функциональных опций через запятую, значения опций объединяются по И.
//
Функция СвязьОсобенностейУчетаИФО() Экспорт
	
	СвязьОсобенностейУчетаИФО = Новый Соответствие;
	
	СвязьОсобенностейУчетаИФО.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом, "ИспользоватьПродажуАгентскихУслуг");
	СвязьОсобенностейУчетаИФО.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.ОрганизациейПоАгентскойСхеме, "ИспользоватьПродажуАгентскихУслуг,ИспользоватьНесколькоОрганизаций");
	СвязьОсобенностейУчетаИФО.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.Партнером, "ИспользоватьПродажуАгентскихУслуг");
	
	НоменклатураЛокализация.СвязьОсобенностейУчетаИФО(СвязьОсобенностейУчетаИФО);
	
	Возврат СвязьОсобенностейУчетаИФО;
	
КонецФункции

// Возвращает Истину если включены ФО особенностей учета номенклатуры
/// 
// Возвращаемое значение:
//   Булево - возвращает Истину ФО включены.
//
Функция ОднаИзОсобенностейВключена() Экспорт
	
	ОднаИзОсобенностейВключена = Ложь;
	
	СвязьОсобенностейУчетаИФО = СвязьОсобенностейУчетаИФО();
		
	Для Каждого ЗначениеПеречисления Из Перечисления.ОсобенностиУчетаНоменклатуры Цикл
		
		Если ЗначениеПеречисления = Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета Тогда
			Продолжить;
		КонецЕсли;
		
		ОсобенностьВключена = Истина;
		ИменаФО = СвязьОсобенностейУчетаИФО.Получить(ЗначениеПеречисления);
		
		Если ИменаФО <> Неопределено Тогда
			МассивИменФО = СтрРазделить(ИменаФО, ",");
			Для Каждого СтрМас Из МассивИменФО Цикл
				Если Не ПолучитьФункциональнуюОпцию(СтрМас) Тогда
					ОсобенностьВключена = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если ОсобенностьВключена Тогда
			ОднаИзОсобенностейВключена = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОднаИзОсобенностейВключена;
	
КонецФункции

#КонецОбласти

#КонецЕсли

