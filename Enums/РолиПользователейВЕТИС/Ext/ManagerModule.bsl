#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// см. РаботаСКлассификаторамиПереопределяемый.ПриЗагрузкеКлассификатора
Процедура ПриЗагрузкеКлассификатора(Идентификатор, Версия, Адрес, Обработан, ДополнительныеПараметры, ФайлыКлассификатора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторыКлассификаторов = ИнтеграцияВЕТИС.ИдентификаторыКлассификаторов();
	ОписаниеКлассификатора        = ИдентификаторыКлассификаторов[Идентификатор];
	
	НачатьТранзакцию();
	
	ДанныеУспешноЗагружены = Ложь;
	Блокировка             = Новый БлокировкаДанных();
	ЭлементБлокировки      = Блокировка.Добавить(Метаданные.РегистрыСведений.ДопустимыеЦелиПоГруппамВЕТИС.ПолноеИмя());
	ЭлементБлокировки      = Блокировка.Добавить(Метаданные.РегистрыСведений.ВидыПродукцииПоГруппамВЕТИС.ПолноеИмя());
	ЭлементБлокировки.УстановитьЗначение("РольПользователя", ОписаниеКлассификатора.ВидКлассификатора);
	
	Попытка
		
		Блокировка.Заблокировать();
		
		Для Каждого ИмяФайла Из ФайлыКлассификатора Цикл
			
			Чтение = Новый ЧтениеJSON;
			Чтение.ОткрытьФайл(ИмяФайла);
			
			Попытка
				ДанныеКлассификатора = ПрочитатьJSON(Чтение);
			Исключение
				ДанныеКлассификатора = Неопределено;
				ТекстОшибки = СтрШаблон(
					НСтр("ru = 'Внутренняя ошибка. Не удалось прочитать исходные данные классификатора %1
					           |%2'"),
					ОписаниеКлассификатора.ВидКлассификатора,
					ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
			Чтение.Закрыть();
			
			Если ДанныеКлассификатора = Неопределено Тогда
				ВызватьИсключение ТекстОшибки
			КонецЕсли;
			
			ДопустимыеЦелиВЕТИС.ЗаполнитьДанныеВРегистрахВидыПродукцииДопустимыеЦелиПоГруппамПриказаВЕТИС(
				ДанныеКлассификатора, ОписаниеКлассификатора.ВидКлассификатора);
			
		КонецЦикла;
		
		ДанныеУспешноЗагружены = Истина;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибкиПодробно = СтрШаблон(
			НСтр("ru = 'Ошибка при обновлении классификатора %1:
			           |%2'"),
			ОписаниеКлассификатора.ВидКлассификатора,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначенияИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
			ТекстОшибкиПодробно,
			НСтр("ru = 'Работа с классификаторами'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		ВызватьИсключение ТекстОшибкиПодробно;
		
	КонецПопытки;
	
	Если ДанныеУспешноЗагружены Тогда
		Обработан = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли