#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает коллекцию значений типов запасов, по которым не требуется контролировать остатки товаров организаций.
//
// Возвращаемое значение:
//	Массив Из ПеречислениеСсылка.ТипыЗапасов - типы запасов, по которым не требуется контролировать остатки
//												товаров организаций.
//
Функция НеконтролируемыеПоТоварамОрганизацииТипыЗапасов() Экспорт
	
	ТипыЗапасов = Новый Массив;
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Услуга);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.АгентскаяУслуга);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажиПереданный);
	
	Возврат ТипыЗапасов;
	
КонецФункции

// Возвращает коллекцию значений типов запасов, которые нужно контролировать на остатках организаций.
//
// Возвращаемое значение:
//	Массив Из ПеречислениеСсылка.ТипыЗапасов - типы запасов, которые нужно контролировать на остатках организаций.
//
Функция КонтролируемыеТипыЗапасов() Экспорт
	
	КонтролируемыеТипыЗапасов = Новый Массив;
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	КонтролируемыеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Работа);
	Возврат КонтролируемыеТипыЗапасов;
	
КонецФункции

// Возвращает коллекцию значений типов запасов, владельцы которых не содержатся в справочнике Организации.
//
// Возвращаемое значение:
//	Массив Из ПеречислениеСсылка.ТипыЗапасов - типы запасов, владельцы которых не содержатся в справочнике Организации.
//
Функция ТипыЗапасовВнешнийВладелец() Экспорт
	
	ТипыЗапасовВнешнийВладелец = Новый Массив;
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажиПереданный);
	ТипыЗапасовВнешнийВладелец.Добавить(Перечисления.ТипыЗапасов.АгентскаяУслуга);
	
	Возврат ТипыЗапасовВнешнийВладелец;
	
КонецФункции

// Возвращает коллекцию значений типов запасов, владельцем которых является наша организация.
//
// Возвращаемое значение:
//	Массив Из ПеречислениеСсылка.ТипыЗапасов - типы запасов, владельцем которых является наша организация.
//
Функция ТипыЗапасовСобственные() Экспорт
	
	ТипыЗапасовСобственные = Новый Массив();
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Услуга);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Работа);
	
	Возврат ТипыЗапасовСобственные;
	
КонецФункции

// Возвращает представление значения перечисления.
//
// Параметры:
//	Значение - ПеречислениеСсылка.ТипыЗапасов - значение, для которого возвращается представление.
//	КодЯзыка - Строка - код языка.
//
// Возвращаемое значение:
//	Строка - представление значения перечисления.
//
Функция ПредставлениеНаЯзыке(Значение, КодЯзыка = Неопределено) Экспорт
	
	Представление = "";
	
	Если Значение = Перечисления.ТипыЗапасов.Товар Тогда
		Представление = НСтр("ru='Собственный товар'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
		Представление = НСтр("ru='Комиссионный товар'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.Работа Тогда
		Представление = НСтр("ru='Работа'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.Услуга Тогда
		Представление = НСтр("ru='Работа (Услуга)'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.МатериалДавальца Тогда
		Представление = НСтр("ru='Материал давальца'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ПолуфабрикатДавальца Тогда
		Представление = НСтр("ru='Полуфабрикат давальца'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ПродукцияДавальца Тогда
		Представление = НСтр("ru='Продукция давальца'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.АгентскаяУслуга Тогда
		Представление = НСтр("ru='Агентская услуга'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи Тогда
		Представление = НСтр("ru='Товар на хранении с правом продажи'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.СобственныйТоварВПути Тогда
		Представление = НСтр("ru='Собственный товар в пути'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке Тогда
		Представление = НСтр("ru='Собственный товар по неотфактурованной поставке'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажиПереданный Тогда
		Представление = НСтр("ru='Товар на хранении с правом продажи переданный'", КодЯзыка);
	ИначеЕсли Значение = Перечисления.ТипыЗапасов.ПродукцияПереработчика Тогда
		Представление = НСтр("ru='Продукция переработчика'", КодЯзыка);
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#КонецЕсли
