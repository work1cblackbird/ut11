#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюAPI_1_0_7(Параметры) Экспорт
	Возврат;
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюAPI_1_0_7(Параметры) Экспорт
	
	Параметры.ПрогрессВыполнения.ВсегоОбъектов = 1;
	МетаданныеОбъекта                          = Метаданные.Константы.НастройкиОбменаЗЕРНО;
	ПолноеИмяОбъекта                           = МетаданныеОбъекта.ПолноеИмя();
	ПараметрыОтметкиВыполнения                 = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ОбработанныхОбъектов                       = 0;
	Менеджер                                   = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяОбъекта);
	ПараметрыОптимизации                       = ИнтеграцияЗЕРНО.ПараметрыОптимизации();
	Параметры.ОбработкаЗавершена               = Истина;
	
	Если Менеджер.Получить().Получить() <> Неопределено Тогда
		
		Параметры.ОбработкаЗавершена = Ложь;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ПараметрыОптимизации.ВерсияAPI = "1.0.7";
			ИнтеграцияЗЕРНОСлужебный.ЗаписатьПараметрыОптимизации(ПараметрыОптимизации);
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Менеджер, ПараметрыОтметкиВыполнения);
			
			ОбработанныхОбъектов = ОбработанныхОбъектов + 1;
			
			Параметры.ОбработкаЗавершена = Истина;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать константу ""Настройки обмена ФГИС ""Зерно"" по причине:'") 
				+ Символы.ПС + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				МетаданныеОбъекта,, ТекстСообщения);
			
		КонецПопытки;
		
		Если ОбработанныхОбъектов > 0 Тогда
			ТекстСообщения = НСтр("ru = 'Обработана константа ""Настройки обмена ФГИС ""Зерно"".'");
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
				МетаданныеОбъекта,, ТекстСообщения);
		КонецЕсли;
	
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработанныхОбъектов;
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюAPI_1_0_9(Параметры) Экспорт
	Возврат;
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюAPI_1_0_9(Параметры) Экспорт
	
	Параметры.ПрогрессВыполнения.ВсегоОбъектов = 1;
	МетаданныеОбъекта                          = Метаданные.Константы.НастройкиОбменаЗЕРНО;
	ПолноеИмяОбъекта                           = МетаданныеОбъекта.ПолноеИмя();
	ПараметрыОтметкиВыполнения                 = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ОбработанныхОбъектов                       = 0;
	Менеджер                                   = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяОбъекта);
	ПараметрыОптимизации                       = ИнтеграцияЗЕРНО.ПараметрыОптимизации();
	Параметры.ОбработкаЗавершена               = Истина;
	
	Если Менеджер.Получить().Получить() <> Неопределено Тогда
		
		Параметры.ОбработкаЗавершена = Ложь;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ПараметрыОптимизации.ВерсияAPI = "1.0.9";
			ИнтеграцияЗЕРНОСлужебный.ЗаписатьПараметрыОптимизации(ПараметрыОптимизации);
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Менеджер, ПараметрыОтметкиВыполнения);
			
			ОбработанныхОбъектов = ОбработанныхОбъектов + 1;
			
			Параметры.ОбработкаЗавершена = Истина;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать константу ""Настройки обмена ФГИС ""Зерно"" по причине:'") 
				+ Символы.ПС + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				МетаданныеОбъекта,, ТекстСообщения);
			
		КонецПопытки;
		
		Если ОбработанныхОбъектов > 0 Тогда
			ТекстСообщения = НСтр("ru = 'Обработана константа ""Настройки обмена ФГИС ""Зерно"".'");
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
				МетаданныеОбъекта,, ТекстСообщения);
		КонецЕсли;
	
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработанныхОбъектов;
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеУчитываемыеВидыПродукции(Параметры) Экспорт
	Возврат;
КонецПроцедуры

Процедура ЗаполнитьУчитываемыеВидыПродукции(Параметры) Экспорт
	
	Параметры.ПрогрессВыполнения.ВсегоОбъектов = 1;
	МетаданныеОбъекта                          = Метаданные.Константы.НастройкиОбменаЗЕРНО;
	ПолноеИмяОбъекта                           = МетаданныеОбъекта.ПолноеИмя();
	ПараметрыОтметкиВыполнения                 = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ОбработанныхОбъектов                       = 0;
	Менеджер                                   = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяОбъекта);
	ПараметрыОптимизации                       = ИнтеграцияЗЕРНО.ПараметрыОптимизации();
	Параметры.ОбработкаЗавершена               = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СоответствиеКлючейОрганизацийИОрганизаций.Организация КАК Организация,
		|	СоответствиеКлючейОрганизацийИОрганизаций.КлючОрганизации КАК КлючОрганизации
		|ПОМЕСТИТЬ СоответствиеКлючейОрганизацийИОрганизаций
		|ИЗ
		|	&СоответствиеКлючейОрганизацийИОрганизаций КАК СоответствиеКлючейОрганизацийИОрганизаций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеКлючейОрганизацийИОрганизаций.Организация КАК Организация
		|ПОМЕСТИТЬ ЭлеваторыОрганизации
		|ИЗ
		|	СоответствиеКлючейОрганизацийИОрганизаций КАК СоответствиеКлючейОрганизацийИОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
		|		ПО (КлючиРеквизитовОрганизацийЗЕРНО.Ссылка = СоответствиеКлючейОрганизацийИОрганизаций.КлючОрганизации)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РеестрЭлеваторовЗЕРНО КАК РеестрЭлеваторовЗЕРНО
		|		ПО (РеестрЭлеваторовЗЕРНО.ИНН = КлючиРеквизитовОрганизацийЗЕРНО.ИНН)
		|		И (РеестрЭлеваторовЗЕРНО.КПП = КлючиРеквизитовОрганизацийЗЕРНО.КПП)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеКлючейОрганизацийИОрганизаций.Организация КАК Организация,
		|	КлючиПартийЗЕРНО.ВидПродукции КАК ВидПродукции,
		|	СоответствиеКлючейОрганизацийИОрганизаций.КлючОрганизации КАК КлючОрганизации
		|ПОМЕСТИТЬ ВладельцыПартий
		|ИЗ
		|	РегистрНакопления.ОстаткиПартийЗЕРНО.Остатки КАК ОстаткиПартийЗЕРНООстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КлючиПартийЗЕРНО КАК КлючиПартийЗЕРНО
		|		ПО ОстаткиПартийЗЕРНООстатки.Партия = КлючиПартийЗЕРНО.Партия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СоответствиеКлючейОрганизацийИОрганизаций КАК СоответствиеКлючейОрганизацийИОрганизаций
		|		ПО (СоответствиеКлючейОрганизацийИОрганизаций.КлючОрганизации = КлючиПартийЗЕРНО.ВладелецПартии)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеКлючейОрганизацийИОрганизаций.Организация КАК Организация,
		|	МАКСИМУМ(ЕСТЬNULL(ВладельцыПартий.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Зерно), ЛОЖЬ)) КАК УчетЗерна,
		|	МАКСИМУМ(ЕСТЬNULL(ВладельцыПартий.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.ПродуктыПереработкиЗерна),
		|		ЛОЖЬ)) КАК УчетПродуктовПереработкиЗерна,
		|	МАКСИМУМ(НЕ ЭлеваторыОрганизации.Организация ЕСТЬ NULL) КАК ОрганизацияЯвляетсяЭлеватором
		|ИЗ
		|	СоответствиеКлючейОрганизацийИОрганизаций КАК СоответствиеКлючейОрганизацийИОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВладельцыПартий КАК ВладельцыПартий
		|		ПО (ВладельцыПартий.Организация = СоответствиеКлючейОрганизацийИОрганизаций.Организация)
		|		И (ВладельцыПартий.КлючОрганизации = СоответствиеКлючейОрганизацийИОрганизаций.КлючОрганизации)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЭлеваторыОрганизации КАК ЭлеваторыОрганизации
		|		ПО (ЭлеваторыОрганизации.Организация = СоответствиеКлючейОрганизацийИОрганизаций.Организация)
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеКлючейОрганизацийИОрганизаций.Организация";
	
	
	СоответствиеКлючейОрганизацийИОрганизаций = ИнтеграцияЗерно.СоответствиеКлючейОрганизацийИОрганизаций(Новый Массив);
	Запрос.УстановитьПараметр("СоответствиеКлючейОрганизацийИОрганизаций", СоответствиеКлючейОрганизацийИОрганизаций);
	
	УчитываемыеВидыПродукции = Запрос.Выполнить().Выгрузить();
	
	
	Если Менеджер.Получить().Получить() <> Неопределено Тогда
		
		Параметры.ОбработкаЗавершена = Ложь;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ПараметрыОптимизации.УчитываемыеВидыПродукции = УчитываемыеВидыПродукции;
			ПараметрыОптимизации.ВерсияAPI                = "1.0.8";
			ИнтеграцияЗЕРНОСлужебный.ЗаписатьПараметрыОптимизации(ПараметрыОптимизации);
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Менеджер, ПараметрыОтметкиВыполнения);
			
			ОбработанныхОбъектов = ОбработанныхОбъектов + 1;
			
			Параметры.ОбработкаЗавершена = Истина;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заполнить ""Учитываемые виды продукции"" в константе ""Настройки обмена ФГИС ""Зерно"" по причине:'") 
				+ Символы.ПС + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				МетаданныеОбъекта,, ТекстСообщения);
			
		КонецПопытки;
		
		Если ОбработанныхОбъектов > 0 Тогда
			ТекстСообщения = НСтр("ru = '""Учитываемые виды продукции"" заполнены.'");
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
				МетаданныеОбъекта,, ТекстСообщения);
		КонецЕсли;
	
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработанныхОбъектов;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
