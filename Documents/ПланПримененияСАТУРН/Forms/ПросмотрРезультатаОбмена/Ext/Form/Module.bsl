
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Документ) Тогда
		
		ТекстСообщения = НСтр("ru = 'Форма не предназначена для непосредственного использования.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат;
		
	КонецЕсли;
	
	Элементы.СтраницыРезультатовОбмена.ТекущаяСтраница = Элементы.СтраницаНеотправленные;
	УстановитьУсловноеОформление();
	
	ПланПрименения = Параметры.Документ;
	
	ЗаполнитьРезультатОбменаПоДокументу();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтправленныеНеОтправленныеПриИзменении(Элемент)
	
	Если ОтправленныеНеОтправленные Тогда
		
		Элементы.СтраницыРезультатовОбмена.ТекущаяСтраница = Элементы.СтраницаВсе;
		
	Иначе
		
		Элементы.СтраницыРезультатовОбмена.ТекущаяСтраница = Элементы.СтраницаНеотправленные;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРезультатОбмена

&НаКлиенте
Процедура РезультатОбменаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.РезультатОбмена.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.СтатусОбмена = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиПланаПримененияСАТУРН.Ошибка") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Документ",            ПланПрименения);
	ПараметрыОткрытияФормы.Вставить("ИдентификаторСтроки", ТекущиеДанные.ИдентификаторСтроки);
	
	ОткрытьФорму(
		"Справочник.САТУРНПрисоединенныеФайлы.Форма.ФормаОшибки",
		ПараметрыОткрытияФормы,
		ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНеотправленные

&НаКлиенте
Процедура НеотправленныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Неотправленные.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.СтатусОбмена = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиПланаПримененияСАТУРН.Ошибка") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Документ",            ПланПрименения);
	ПараметрыОткрытияФормы.Вставить("ИдентификаторСтроки", ТекущиеДанные.ИдентификаторСтроки);
	
	ОткрытьФорму(
		"Справочник.САТУРНПрисоединенныеФайлы.Форма.ФормаОшибки",
		ПараметрыОткрытияФормы,
		ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьРезультатОбменаПоДокументу();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Оформление поля Описание места применения
	ЦветТекстаНеТребуетВниманияГосИС = ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС;
	
	// Все: Отображение успешного обмена
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РезультатОбменаОписаниеОшибки.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("РезультатОбмена.СтатусОбмена");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыОбработкиПланаПримененияСАТУРН.Ошибка;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<нет ошибок>'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветТекстаНеТребуетВниманияГосИС);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРезультатОбменаПоДокументу()
	
	РезультатОбмена.Очистить();
	Неотправленные.Очистить();
	
	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПланПрименения, "ОрганизацияСАТУРН");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПланПримененияСАТУРНМестаПрименения.Ссылка                  КАК ДокументСсылка,
		|	ПланПримененияСАТУРНМестаПрименения.Идентификатор           КАК ИдентификаторМестаПрименения,
		|	ПланПримененияСАТУРНМестаПрименения.ТипМестаПрименения      КАК ТипМестаПрименения,
		|	ПланПримененияСАТУРНМестаПрименения.МестоПрименения         КАК МестоПрименения,
		|	ПланПримененияСАТУРНМестаПрименения.ОписаниеМестаПрименения КАК ОписаниеМестаПрименения,
		|	ПланПримененияСАТУРНТовары.Идентификатор                    КАК ИдентификаторТовара,
		|	ПланПримененияСАТУРНТовары.ПАТ                              КАК ПАТ,
		|	ПланПримененияСАТУРНТовары.Дозировка                        КАК Дозировка
		|ПОМЕСТИТЬ ВТ_ДанныеДокументаДляОбмена
		|ИЗ
		|	Документ.ПланПримененияСАТУРН.Товары КАК ПланПримененияСАТУРНТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланПримененияСАТУРН.МестаПрименения КАК ПланПримененияСАТУРНМестаПрименения
		|		ПО ПланПримененияСАТУРНМестаПрименения.Ссылка = ПланПримененияСАТУРНТовары.Ссылка
		|ГДЕ
		|	ПланПримененияСАТУРНМестаПрименения.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокументаДляОбмена.ДокументСсылка               КАК ДокументСсылка,
		|	ВТ_ДанныеДокументаДляОбмена.ИдентификаторМестаПрименения КАК ИдентификаторМестаПрименения,
		|	ВТ_ДанныеДокументаДляОбмена.ТипМестаПрименения           КАК ТипМестаПрименения,
		|	ВТ_ДанныеДокументаДляОбмена.МестоПрименения              КАК МестоПрименения,
		|	ВТ_ДанныеДокументаДляОбмена.ОписаниеМестаПрименения      КАК ОписаниеМестаПрименения,
		|	ВТ_ДанныеДокументаДляОбмена.ИдентификаторТовара          КАК ИдентификаторТовара,
		|	ВТ_ДанныеДокументаДляОбмена.ПАТ                          КАК ПАТ,
		|	ВТ_ДанныеДокументаДляОбмена.Дозировка                    КАК Дозировка,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(36))                            КАК ИдентификаторСтроки
		|ИЗ
		|	ВТ_ДанныеДокументаДляОбмена КАК ВТ_ДанныеДокументаДляОбмена";
	
	Запрос.УстановитьПараметр("Ссылка", ПланПрименения);
	
	РезультатЗапроса = Запрос.Выполнить();
	Идентификаторы = РезультатЗапроса.Выгрузить();
	
	Для Каждого СтрокаИдентификаторов Из Идентификаторы Цикл

		СтрокаИдентификаторов.ИдентификаторСтроки = Формат(СтрокаИдентификаторов.ИдентификаторМестаПрименения, "ЧГ=0;")
			+ "|" + Формат(СтрокаИдентификаторов.ИдентификаторТовара, "ЧГ=0;");
		
	КонецЦикла;

	СписокЗапросов = Новый СписокЗначений;
	СписокЗапросов.Добавить(
	"ВЫБРАТЬ
	|	&Ссылка КАК ДокументСсылка,
	|	ТаблицаИдентификаторов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаИдентификаторов.ИдентификаторМестаПрименения КАК ИдентификаторМестаПрименения,
	|	ТаблицаИдентификаторов.ТипМестаПрименения КАК ТипМестаПрименения,
	|	ТаблицаИдентификаторов.МестоПрименения КАК МестоПрименения,
	|	ТаблицаИдентификаторов.ОписаниеМестаПрименения КАК ОписаниеМестаПрименения,
	|	ТаблицаИдентификаторов.ИдентификаторТовара КАК ИдентификаторТовара,
	|	ТаблицаИдентификаторов.ПАТ КАК ПАТ,
	|	ТаблицаИдентификаторов.Дозировка КАК Дозировка
	|ПОМЕСТИТЬ ВТ_ТаблицаИдентификаторов
	|ИЗ
	|	&ТаблицаИдентификаторов КАК ТаблицаИдентификаторов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаИдентификаторов.ДокументСсылка КАК ДокументСсылка,
	|	ВТ_ТаблицаИдентификаторов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВТ_ТаблицаИдентификаторов.ТипМестаПрименения КАК ТипМестаПрименения,
	|	ВТ_ТаблицаИдентификаторов.МестоПрименения КАК МестоПрименения,
	|	ВТ_ТаблицаИдентификаторов.ОписаниеМестаПрименения КАК ОписаниеМестаПрименения,
	|	ВТ_ТаблицаИдентификаторов.ИдентификаторТовара КАК ИдентификаторТовара,
	|	ВТ_ТаблицаИдентификаторов.ПАТ КАК ПАТ,
	|	ВТ_ТаблицаИдентификаторов.Дозировка КАК Дозировка,
	|	ЕСТЬNULL(СтатусыДокументовСАТУРН.Статус,
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиПланаПримененияСАТУРН.ПустаяСсылка)) КАК СтатусОбмена
	|ПОМЕСТИТЬ ВТ_СтатусыОбработкиСтрок
	|ИЗ
	|	ВТ_ТаблицаИдентификаторов КАК ВТ_ТаблицаИдентификаторов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовСАТУРН КАК СтатусыДокументовСАТУРН
	|		ПО ВТ_ТаблицаИдентификаторов.ДокументСсылка = СтатусыДокументовСАТУРН.Документ
	|		И ВТ_ТаблицаИдентификаторов.ИдентификаторСтроки = СтатусыДокументовСАТУРН.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СтатусыОбработкиСтрок.ДокументСсылка КАК ДокументСсылка,
	|	ВТ_СтатусыОбработкиСтрок.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВТ_СтатусыОбработкиСтрок.ТипМестаПрименения КАК ТипМестаПрименения,
	|	ВТ_СтатусыОбработкиСтрок.МестоПрименения КАК МестоПрименения,
	|	Представление(ВТ_СтатусыОбработкиСтрок.МестоПрименения) КАК ПредставлениеМестоПрименения,
	|	ВТ_СтатусыОбработкиСтрок.ОписаниеМестаПрименения КАК ОписаниеМестаПрименения,
	|	ВТ_СтатусыОбработкиСтрок.ИдентификаторТовара КАК ИдентификаторТовара,
	|	ВТ_СтатусыОбработкиСтрок.ПАТ КАК ПАТ,
	|	Представление(ВТ_СтатусыОбработкиСтрок.ПАТ) КАК ПредставлениеПАТ,
	|	ВТ_СтатусыОбработкиСтрок.Дозировка КАК Дозировка,
	|	ВТ_СтатусыОбработкиСтрок.СтатусОбмена КАК СтатусОбмена,
	|	ВЫБОР
	|		КОГДА
	|			ВТ_СтатусыОбработкиСтрок.СтатусОбмена = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиПланаПримененияСАТУРН.ПроведенСАТУРН)
	|			ТОГДА 1
	|		КОГДА
	|			ВТ_СтатусыОбработкиСтрок.СтатусОбмена = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиПланаПримененияСАТУРН.Обрабатывается)
	|			ТОГДА 3
	|		КОГДА ВТ_СтатусыОбработкиСтрок.СтатусОбмена = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиПланаПримененияСАТУРН.Ошибка)
	|			ТОГДА 4
	|		КОГДА ВТ_СтатусыОбработкиСтрок.СтатусОбмена = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиПланаПримененияСАТУРН.Отменен)
	|			ТОГДА 6
	|		ИНАЧЕ 7
	|	КОНЕЦ КАК ИндексСтатусаОбмена
	|ИЗ
	|	ВТ_СтатусыОбработкиСтрок КАК ВТ_СтатусыОбработкиСтрок", "ДанныеОбмена");
	
	СписокЗапросов.Добавить(
	"ВЫБРАТЬ
	|	САТУРНПрисоединенныеФайлы.Документ КАК Документ,
	|	САТУРНПрисоединенныеФайлы.ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(САТУРНПрисоединенныеФайлы.Описание КАК СТРОКА(255)) КАК ТекстОшибки
	|ИЗ
	|	Справочник.САТУРНПрисоединенныеФайлы КАК САТУРНПрисоединенныеФайлы
	|ГДЕ
	|	САТУРНПрисоединенныеФайлы.Документ = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	САТУРНПрисоединенныеФайлы.ДатаСоздания УБЫВ", "ОшибкиОбмена");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаИдентификаторов", Идентификаторы);
	Запрос.УстановитьПараметр("Ссылка",                 ПланПрименения);
	
	РезультатЗапроса = ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	
	//@skip-warning
	ДанныеОбмена  = РезультатЗапроса["ДанныеОбмена"].Выбрать();
	//@skip-warning
	ОшибкиОбмена = РезультатЗапроса["ОшибкиОбмена"].Выгрузить();

	ШаблонСообщения = НСтр("ru = '%1 (%2)'");
	
	Пока ДанныеОбмена.Следующий() Цикл
		
		НоваяСтрокаТаблицы = РезультатОбмена.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, ДанныеОбмена);
		
		ОтображениеМестаПрименения = ?(ЗначениеЗаполнено(ДанныеОбмена.МестоПрименения),
			ДанныеОбмена.ПредставлениеМестоПрименения,
			ДанныеОбмена.ОписаниеМестаПрименения);
			
		НоваяСтрокаТаблицы.Сообщение = СтрШаблон(ШаблонСообщения,
			ДанныеОбмена.ПредставлениеПАТ,
			ОтображениеМестаПрименения);
		
		Если ДанныеОбмена.СтатусОбмена = Перечисления.СтатусыОбработкиПланаПримененияСАТУРН.Ошибка Тогда
			
			НоваяСтрокаНеотправленных = Неотправленные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаНеотправленных, НоваяСтрокаТаблицы);
			
			СтруктураПоиска = Новый Структура("Документ, ИдентификаторСтроки",
				ДанныеОбмена.ДокументСсылка, ДанныеОбмена.ИдентификаторСтроки);
				
			СтрокиОшибокОбмена = ОшибкиОбмена.НайтиСтроки(СтруктураПоиска);
			
			ОписаниеОшибки = "";
			
			Для Каждого СтрокаОшибок Из СтрокиОшибокОбмена Цикл
				
				ОписаниеОшибки = ОписаниеОшибки
					+ ?(ЗначениеЗаполнено(ОписаниеОшибки), Символы.ПС, "")
					+ СтрокаОшибок.ТекстОшибки;
					
			КонецЦикла;
			
			НоваяСтрокаНеотправленных.ОписаниеОшибки = ОписаниеОшибки;
			НоваяСтрокаТаблицы.ОписаниеОшибки        = ОписаниеОшибки;

		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти