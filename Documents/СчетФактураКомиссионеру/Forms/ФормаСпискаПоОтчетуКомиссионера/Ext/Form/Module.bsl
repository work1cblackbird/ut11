
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Параметры.Отбор.Свойство("ДокументОснование", ДокументОснование);
	Параметры.Отбор.Свойство("Организация",       Организация);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПродажи, "ДокументОснование", ДокументОснование, , , Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПродажи, "Организация", Организация, , , Истина);
	
	Если Параметры.Отбор.Свойство("КОформлению") И Параметры.Отбор.КОформлению Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПродажи;
	КонецЕсли;
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтаФорма, Элементы.СписокГруппаКоманднаяПанельГлобальныеКоманды);
	// Конец ИнтеграцияС1СДокументооборотом
	
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ПриСозданииНаСервереСписокДокументов(Список);
	
	Если ПроверкаКонтрагентовВызовСервера.ИспользованиеПроверкиВозможно() Тогда
		Элементы.СодержитНекорректныхКонтрагентов.Видимость = Истина;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, "СканерШтрихкода");

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОповеститьОВыборе(ДокументОснование);
	
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" И МенеджерОборудованияУТКлиент.ЕстьНеобработанноеСобытие() Тогда
			ОбработатьШтрихкоды(МенеджерОборудованияУТКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	// Подсистема "ЭлектронныеДокументы"
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаСписок Тогда
		Элементы.Список.Обновить();
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаПродажи Тогда
		Элементы.СписокПродажи.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьСчетаФактуры(Команда)
	
	СчетаФактурыКУдалению = СчетаФактурыКУдалению();
	
	Если СчетаФактурыКУдалению.Количество() > 0 Тогда
		Ответ = Неопределено;
		ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьСчетаФактурыЗавершение", ЭтотОбъект, Новый Структура("СчетаФактурыКУдалению", СчетаФактурыКУдалению)), НСтр("ru = 'Обнаружены счета-фактуры, не соответствующие строкам отчета комиссионера. Пометить на удаление?'"),
			РежимДиалогаВопрос.ДаНетОтмена,
			,
			КодВозвратаДиалога.Отмена);
		Возврат;
	КонецЕсли;
	
	СоздатьСчетаФактурыКлиент(СчетаФактурыКУдалению);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСчетаФактурыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	СчетаФактурыКУдалению = ДополнительныеПараметры.СчетаФактурыКУдалению;
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		СчетаФактурыКУдалению.Очистить()
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьСчетаФактурыКлиент(СчетаФактурыКУдалению);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСчетаФактурыКлиент(Знач СчетаФактурыКУдалению)
	    
	Результат = СоздатьСчетаФактурыСервер(СчетаФактурыКУдалению);
	Оповестить("Запись_СчетФактураКомиссионера", , Результат);
	
	Элементы.Список.Обновить();
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаСписок;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ШтрихкодыИТорговоеОборудование

&НаКлиенте
Функция СсылкаНаЭлементСпискаПоШтрихкоду(Штрихкод)
	
	Менеджеры = Новый Массив();
	Менеджеры.Добавить(ПредопределенноеЗначение("Документ.СчетФактураКомиссионеру.ПустаяСсылка"));
	Возврат ШтрихкодированиеПечатныхФормКлиент.ПолучитьСсылкуПоШтрихкодуТабличногоДокумента(Штрихкод, Менеджеры);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьШтрихкоды(Данные)
	
	Если Не ШтрихкодированиеНоменклатурыКлиент.ШтрихкодыВалидны(Данные) Тогда
		Возврат;
	КонецЕсли;
	
	МассивСсылок = СсылкаНаЭлементСпискаПоШтрихкоду(Данные.Штрихкод);
	Если МассивСсылок.Количество() > 0 Тогда
		Элементы.Список.ТекущаяСтрока = МассивСсылок[0];
		ПоказатьЗначение(,МассивСсылок[0]);
	Иначе
		ШтрихкодированиеПечатныхФормКлиент.ОбъектНеНайден(Данные.Штрихкод);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Функция СчетаФактурыКУдалению()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК ДокументОснование,
	|	ТаблицаТовары.Ссылка.Организация КАК Организация,
	|	ТаблицаТовары.Покупатель КАК Покупатель,
	|	ТаблицаТовары.ДатаСчетаФактурыКомиссионера КАК Дата,
	|	ТаблицаТовары.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера
	|	
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ОтчетКомиссионера.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Ссылка.Организация,
	|	ТаблицаТовары.Покупатель,
	|	ТаблицаТовары.ДатаСчетаФактурыКомиссионера,
	|	ТаблицаТовары.СчетФактураВыставленныйКомиссионера.Номер
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураВыданный.Ссылка КАК Ссылка
	|
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактураВыданный
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураКомиссионеру.Покупатели КАК ТаблицаПокупатели
	|	ПО
	|		СчетФактураВыданный.Ссылка = ТаблицаПокупатели.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаТовары КАК ТаблицаТовары
	|	ПО
	|		ТаблицаТовары.ДокументОснование = СчетФактураВыданный.ДокументОснование
	|		И ТаблицаТовары.Организация = СчетФактураВыданный.Организация
	|		И (ТаблицаТовары.Дата = НАЧАЛОПЕРИОДА(СчетФактураВыданный.Дата, ДЕНЬ)
	|			ИЛИ ТаблицаТовары.Дата = ДАТАВРЕМЯ(1, 1, 1))
	|		И ТаблицаТовары.НомерСчетаФактурыКомиссионера = ТаблицаПокупатели.НомерСчетаФактуры
	|		И ТаблицаТовары.Покупатель = ТаблицаПокупатели.Покупатель
	|
	|ГДЕ
	|	СчетФактураВыданный.ДокументОснование = &ДокументОснование
	|	И СчетФактураВыданный.Организация = &Организация
	|	И (НЕ СчетФактураВыданный.ПометкаУдаления)
	|	И ТаблицаТовары.ДокументОснование ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("Организация",       Организация);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Функция СоздатьСчетаФактурыСервер(СчетаФактурыКУдалению)
	
	Для Каждого ДокументКУдалению Из СчетаФактурыКУдалению Цикл
		ДокументОбъект = ДокументКУдалению.ПолучитьОбъект();
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
	Результат = Новый Массив;
	
	ФормироватьСводныеСФ = (ВариантФормированияСчетовФактур = 1);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ИсторияКППКонтрагентов.Период) КАК Период,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЗначенияКПП
	|ИЗ
	|	Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыКомиссионерамКОформлению КАК Покупатели
	|		ПО ИсторияКППКонтрагентов.Ссылка = Покупатели.Покупатель
	|			И ИсторияКППКонтрагентов.Период <= Покупатели.ДатаСчетаФактуры
	|ГДЕ
	|	Покупатели.ОтчетКомиссионера = &ДокументОснование
	|	И Покупатели.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияКППКонтрагентов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияКППКонтрагентов.КПП КАК КПП,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ИсторическоеЗначениеКПП
	|ИЗ
	|	ЗначенияКПП КАК ЗначенияКПП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|		ПО ЗначенияКПП.Ссылка = ИсторияКППКонтрагентов.Ссылка
	|			И ЗначенияКПП.Период = ИсторияКППКонтрагентов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.ОтчетКомиссионера КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетаФактуры.ДатаСчетаФактуры = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА СчетаФактуры.ОтчетКомиссионера.Дата
	|		ИНАЧЕ СчетаФактуры.ДатаСчетаФактуры
	|	КОНЕЦ КАК Дата,
	|	СчетаФактуры.Организация КАК Организация,
	|	СчетаФактуры.Комиссионер КАК Комиссионер,
	|	СчетаФактуры.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	СчетаФактуры.Валюта КАК Валюта,
	|	СчетаФактуры.Покупатель КАК Покупатель,
	|	СчетаФактуры.НомерСчетаФактуры КАК НомерСчетаФактуры
	|ПОМЕСТИТЬ СчетаФактурыКОформлению
	|ИЗ
	|	РегистрСведений.СчетаФактурыКомиссионерамКОформлению КАК СчетаФактуры
	|ГДЕ
	|	СчетаФактуры.ОтчетКомиссионера = &ДокументОснование
	|	И СчетаФактуры.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОтчета.СчетФактураВыставленныйКомиссионера КАК СчетФактура,
	|	ТоварыОтчета.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактуры,
	|	ТоварыОтчета.СчетФактураВыставленныйКомиссионера.Номер КАК НомерСчетаФактуры,
	|	ТоварыОтчета.СчетФактураВыставленныйКомиссионера.Исправление КАК ЭтоИсправительныйСчетФактура,
	|	ТоварыОтчета.СчетФактураВыставленныйКомиссионера.СчетФактураОснование КАК СчетФактураОснование
	|ПОМЕСТИТЬ СчетаФактурыОтчетаИнтеркампани
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТоварыОтчета
	|ГДЕ
	|	ТоварыОтчета.Ссылка В
	|			(ВЫБРАТЬ
	|				СчетаФактурыКОформлению.ДокументОснование
	|			ИЗ
	|				СчетаФактурыКОформлению)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактураКомиссионера,
	|	ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураКомиссионеру).Сводный КАК Сводный,
	|	СчетаФактурыОтчетаИнтеркампани.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ОснованияИсправительныхСчетФактур
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыКОформлению КАК СчетаФактурыКОформлению
	|		ПО ЖурналУчетаСчетовФактур.Организация = СчетаФактурыКОформлению.Комиссионер
	|			И ЖурналУчетаСчетовФактур.Контрагент = СчетаФактурыКОформлению.Организация
	|			И (ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураКомиссионеру)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОтчетаИнтеркампани КАК СчетаФактурыОтчетаИнтеркампани
	|		ПО ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю = СчетаФактурыОтчетаИнтеркампани.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыКОформлению.ДокументОснование КАК ДокументОснование,
	|	СчетаФактурыКОформлению.Дата КАК Дата,
	|	СчетаФактурыКОформлению.Организация КАК Организация,
	|	СчетаФактурыКОформлению.Комиссионер КАК Комиссионер,
	|	СчетаФактурыКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	СчетаФактурыКОформлению.Валюта КАК Валюта,
	|	СчетаФактурыКОформлению.Покупатель КАК Покупатель,
	|	СчетаФактурыКОформлению.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	СчетаФактурыОтчетаИнтеркампани.СчетФактура КАК СчетФактураВыданный,
	|	СчетаФактурыОтчетаИнтеркампани.ЭтоИсправительныйСчетФактура КАК ЭтоИсправительныйСчетФактура,
	|	СчетаФактурыОтчетаИнтеркампани.СчетФактураОснование КАК СчетФактураОснование,
	|	ЕСТЬNULL(ОснованияИсправительныхСчетФактур.СчетФактураКомиссионера, НЕОПРЕДЕЛЕНО) КАК СчетФактураКомиссионераОснование,
	|	ОснованияИсправительныхСчетФактур.Сводный КАК СчетФактураКомиссионераОснованиеСводный
	|ПОМЕСТИТЬ ИтоговаяТаблицаКОформлению
	|ИЗ
	|	СчетаФактурыОтчетаИнтеркампани КАК СчетаФактурыОтчетаИнтеркампани
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыКОформлению КАК СчетаФактурыКОформлению
	|		ПО СчетаФактурыОтчетаИнтеркампани.ДатаСчетаФактуры = СчетаФактурыКОформлению.ДатаСчетаФактуры
	|			И СчетаФактурыОтчетаИнтеркампани.НомерСчетаФактуры = СчетаФактурыКОформлению.НомерСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОснованияИсправительныхСчетФактур КАК ОснованияИсправительныхСчетФактур
	|		ПО СчетаФактурыОтчетаИнтеркампани.СчетФактураОснование = ОснованияИсправительныхСчетФактур.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаФактурыКОформлению.ДокументОснование,
	|	СчетаФактурыКОформлению.Дата,
	|	СчетаФактурыКОформлению.Организация,
	|	СчетаФактурыКОформлению.Комиссионер,
	|	СчетаФактурыКОформлению.ДатаСчетаФактуры,
	|	СчетаФактурыКОформлению.Валюта,
	|	СчетаФактурыКОформлению.Покупатель,
	|	СчетаФактурыКОформлению.НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ
	|ИЗ
	|	СчетаФактурыКОформлению КАК СчетаФактурыКОформлению
	|ГДЕ
	|	СчетаФактурыКОформлению.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыКОформлению.Покупатель КАК Покупатель,
	|	ЕСТЬNULL(ЕСТЬNULL(ИсторическоеЗначениеКПП.КПП, Контрагенты.КПП), """") КАК КПППокупателя,
	|	ЕСТЬNULL(Контрагенты.ИНН, """") КАК ИННПокупателя,
	|	СчетаФактурыКОформлению.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	СчетаФактурыКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(ИтоговаяТаблицаКОформлению.ЭтоИсправительныйСчетФактура, ЛОЖЬ) КАК ЭтоИсправительныйСчетФактура
	|ИЗ
	|	СчетаФактурыКОформлению КАК СчетаФактурыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО (Контрагенты.Ссылка = СчетаФактурыКОформлению.Покупатель)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсторическоеЗначениеКПП КАК ИсторическоеЗначениеКПП
	|		ПО (ИсторическоеЗначениеКПП.Ссылка = Контрагенты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтоговаяТаблицаКОформлению КАК ИтоговаяТаблицаКОформлению
	|		ПО (ИтоговаяТаблицаКОформлению.Покупатель = СчетаФактурыКОформлению.Покупатель)
	|			И (ИтоговаяТаблицаКОформлению.ДатаСчетаФактуры = СчетаФактурыКОформлению.ДатаСчетаФактуры)
	|			И (ИтоговаяТаблицаКОформлению.НомерСчетаФактуры = СчетаФактурыКОформлению.НомерСчетаФактуры)
	|ГДЕ
	|	СчетаФактурыКОформлению.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИтоговаяТаблицаКОформлению.ДокументОснование КАК ДокументОснование,
	|	ИтоговаяТаблицаКОформлению.Дата КАК Дата,
	|	ИтоговаяТаблицаКОформлению.Организация КАК Организация,
	|	ИтоговаяТаблицаКОформлению.Комиссионер КАК Комиссионер,
	|	ИтоговаяТаблицаКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ИтоговаяТаблицаКОформлению.Валюта КАК Валюта,
	|	ИтоговаяТаблицаКОформлению.Покупатель КАК Покупатель,
	|	ИтоговаяТаблицаКОформлению.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ИтоговаяТаблицаКОформлению.СчетФактураВыданный КАК СчетФактураВыданный,
	|	ИтоговаяТаблицаКОформлению.ЭтоИсправительныйСчетФактура КАК ЭтоИсправительныйСчетФактура,
	|	ИтоговаяТаблицаКОформлению.СчетФактураОснование КАК СчетФактураОснование,
	|	ИтоговаяТаблицаКОформлению.СчетФактураКомиссионераОснование КАК СчетФактураКомиссионераОснование,
	|	ИтоговаяТаблицаКОформлению.СчетФактураКомиссионераОснованиеСводный КАК СчетФактураКомиссионераОснованиеСводный
	|ИЗ
	|	ИтоговаяТаблицаКОформлению КАК ИтоговаяТаблицаКОформлению
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСчетаФактуры,
	|	ЭтоИсправительныйСчетФактура";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ГраницаРезультата = РезультатЗапроса.ВГраница(); 
	Покупатели = РезультатЗапроса[ГраницаРезультата - 1].Выгрузить();
	Покупатели.Колонки.Добавить("Обработано", Новый ОписаниеТипов("Булево"));
	Покупатели.Индексы.Добавить("Обработано, ДатаСчетаФактуры, Покупатель, НомерСчетаФактуры");
	
	Выборка = РезультатЗапроса[ГраницаРезультата].Выбрать();
	ДанныеЗаполнения = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса[ГраницаРезультата].Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;

	ТаблицаНовыхСФ = Новый ТаблицаЗначений;
	ТаблицаНовыхСФ.Колонки.Добавить("СчетФактураКомиссионеру", Новый ОписаниеТипов("ДокументСсылка.СчетФактураКомиссионеру"));
	ТаблицаНовыхСФ.Колонки.Добавить("СчетФактураВыданный",     Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));

	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
		
		НовыйСчетФактура = Документы.СчетФактураКомиссионеру.СоздатьДокумент();
		
		Отбор = Новый Структура;
		Отбор.Вставить("Обработано", Ложь);
		Отбор.Вставить("ЭтоИсправительныйСчетФактура");
		Отбор.Вставить("ДатаСчетаФактуры");
		Если НЕ ФормироватьСводныеСФ ИЛИ
			 Выборка.ЭтоИсправительныйСчетФактура Тогда
			Отбор.Вставить("Покупатель");
			Отбор.Вставить("НомерСчетаФактуры");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Отбор, Выборка);
		
		СтрокиПокупатели = Покупатели.НайтиСтроки(Отбор);
		Если СтрокиПокупатели.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ВыставляемыйСФ = Ложь;
		Для каждого Строка Из СтрокиПокупатели Цикл
			Строка.Обработано = Истина;
			
			НоваяСтрока = НовыйСчетФактура.Покупатели.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);

			Если НоваяСтрока.Покупатель <> Справочники.Контрагенты.РозничныйПокупатель ИЛИ НоваяСтрока.НомерСчетаФактуры <> "" Тогда
				ВыставляемыйСФ = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если ВыставляемыйСФ Тогда 
			ДанныеЗаполнения.Вставить("ДатаВыставления", ДанныеЗаполнения.Дата);
		КонецЕсли;
		
		НовыйСчетФактура.Заполнить(ДанныеЗаполнения);
		
		Если Выборка.ЭтоИсправительныйСчетФактура Тогда
		
			Если Выборка.СчетФактураКомиссионераОснование = Неопределено Тогда
			
				ШаблонОшибки = НСтр("ru = 'Нельзя сформировать исправленный счет-фактуру №%1 от %2, пока не сформирован исходный'");
				ТекстОшибки = СтрШаблон(ШаблонОшибки, Выборка.НомерСчетаФактуры, Выборка.ДатаСчетаФактуры);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
				Продолжить;
			
			КонецЕсли;
		
			ПоказатьОшибкуСводнойПартии = Ложь;
			ОснованиеИсправления = Неопределено;
			
			СтрокаНовойСФ = ТаблицаНовыхСФ.Найти(Выборка.СчетФактураОснование, "СчетФактураВыданный");
			
			Если СтрокаНовойСФ <> Неопределено Тогда
			
				ОснованиеИсправления = СтрокаНовойСФ.СчетФактураКомиссионеру;
				ПоказатьОшибкуСводнойПартии = ФормироватьСводныеСФ;
			
			ИначеЕсли Выборка.СчетФактураКомиссионераОснование <> Неопределено Тогда
			
				ОснованиеИсправления = Выборка.СчетФактураКомиссионераОснование;
				ПоказатьОшибкуСводнойПартии = Выборка.СчетФактураКомиссионераОснованиеСводный;
			
			КонецЕсли;
			
			Если ПоказатьОшибкуСводнойПартии Тогда
			
				ШаблонОшибки = НСтр("ru = 'Документ %1 является сводным. На основании него нельзя сформировать исправленный счет-фактуру №%2 от %3'");
				ТекстОшибки = СтрШаблон(ШаблонОшибки, ОснованиеИсправления, Выборка.НомерСчетаФактуры, Выборка.ДатаСчетаФактуры);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
				Продолжить;
			
			КонецЕсли;
			
			НовыйСчетФактура.Исправление = Истина;
			НовыйСчетФактура.СчетФактураОснование = ОснованиеИсправления;
		
		КонецЕсли;

		Попытка
			НовыйСчетФактура.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекстОшибки = НСтр("ru = 'Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       НовыйСчетФактура);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки, , ,);
		КонецПопытки;
		
		Если Не Выборка.ЭтоИсправительныйСчетФактура Тогда
		
			СтрокаНовойСФ = ТаблицаНовыхСФ.Добавить();
			СтрокаНовойСФ.СчетФактураКомиссионеру = НовыйСчетФактура.Ссылка;
			СтрокаНовойСФ.СчетФактураВыданный = Выборка.СчетФактураВыданный;
		
		КонецЕсли;
		
		Результат.Добавить(НовыйСчетФактура.Ссылка);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти
