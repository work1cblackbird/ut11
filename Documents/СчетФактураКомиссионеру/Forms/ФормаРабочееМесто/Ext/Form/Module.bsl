#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
		
	УстановитьЗначенияПоПараметрамФормы(Параметры);
	ОбновитьДанныеФормы();
	
	МассивМенеджеровРасчетаСмТакжеВРаботе = Новый Массив();
	МассивМенеджеровРасчетаСмТакжеВРаботе.Добавить("Обработка.ЖурналДокументовНДС");
	СмТакжеВРаботе = ОбщегоНазначенияУТ.СформироватьГиперссылкуСмТакжеВРаботе(МассивМенеджеровРасчетаСмТакжеВРаботе, Неопределено);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_СчетФактураКомиссионера" Тогда
		Элементы.КОформлению.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КОформлениюВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Значение = Неопределено;
	
	Если Поле = Элементы.КОформлениюОрганизация Тогда
		Значение = Элемент.ТекущиеДанные.Организация;
	ИначеЕсли Поле = Элементы.КОформлениюКомиссионер Тогда
		Значение = Элемент.ТекущиеДанные.Комиссионер;
	ИначеЕсли Поле = Элементы.КОформлениюОтчетКомиссионера Тогда
		Значение = Элемент.ТекущиеДанные.ОтчетКомиссионера;
	КонецЕсли; 
	
	Если Значение <> Неопределено Тогда
		ПоказатьЗначение(, Значение);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	Если НачалоПериода > КонецПериода И ЗначениеЗаполнено(КонецПериода) Тогда
		НачалоПериода = КонецПериода;
	КонецЕсли;

	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	Если НачалоПериода > КонецПериода И ЗначениеЗаполнено(КонецПериода) Тогда
		НачалоПериода = КонецПериода;
	КонецЕсли;

	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура КомиссионерПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода", НачалоПериода, КонецПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСчетаФактуры(Команда)
	
	Результат = СформироватьСчетаФактурыСервер();
	
	Оповестить("Запись_СчетФактураКомиссионера", , Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура СмТакжеВРаботеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	// &ЗамерПроизводительности
	ИмяКлючевойОперации = СтрШаблон("Обработка.СчетФактураКомиссионеру.Форма.ФормаРабочееМесто.СмТакже.%1",
									НавигационнаяСсылкаФорматированнойСтроки);
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, ИмяКлючевойОперации);
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	СтруктураБыстрогоОтбора = Новый Структура;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		СтруктураБыстрогоОтбора.Вставить("Организация", Организация);
		ПараметрыФормы.Вставить("Организация", Организация);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Комиссионер) Тогда
		СтруктураБыстрогоОтбора.Вставить("Контрагент", Комиссионер);
	КонецЕсли;
	
	ТекущаяДата = ОбщегоНазначенияКлиент.ДатаСеанса();
	Период = Новый СтандартныйПериод;
	Период.ДатаНачала = НачалоПериода;
	Период.ДатаОкончания = КонецПериода;
	СтруктураБыстрогоОтбора.Вставить("Период", Период);
	СтруктураБыстрогоОтбора.Вставить("НачалоПериода", ?(ЗначениеЗаполнено(Период.ДатаНачала), Период.ДатаНачала, НачалоКвартала(ТекущаяДата)));
	ПараметрыФормы.Вставить("НачалоПериода", СтруктураБыстрогоОтбора.НачалоПериода);
	СтруктураБыстрогоОтбора.Вставить("КонецПериода", ?(ЗначениеЗаполнено(Период.ДатаОкончания), Период.ДатаОкончания, КонецКвартала(ТекущаяДата)));
	ПараметрыФормы.Вставить("КонецПериода", СтруктураБыстрогоОтбора.КонецПериода);
	
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	ОткрытьФорму(НавигационнаяСсылкаФорматированнойСтроки, ПараметрыФормы,ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьСчетаФактурыСервер()
	
	Результат = Новый Массив;
	
	ФормироватьСводныеСФ = (ВариантФормированияСчетовФактур = 1);
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаФактуры.ОтчетКомиссионера КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетаФактуры.ДатаСчетаФактуры = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА СчетаФактуры.ОтчетКомиссионера.Дата
	|		ИНАЧЕ СчетаФактуры.ДатаСчетаФактуры
	|	КОНЕЦ КАК Дата,
	|	СчетаФактуры.Организация КАК Организация,
	|	СчетаФактуры.Комиссионер КАК Комиссионер,
	|	СчетаФактуры.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	СчетаФактуры.Валюта КАК Валюта,
	|	СчетаФактуры.Покупатель КАК Покупатель,
	|	СчетаФактуры.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ДокументОтчетКомиссионера.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионера)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РеализацияЧерезКомиссионера
	|ПОМЕСТИТЬ СчетаФактурыКОформлению
	|ИЗ
	|	РегистрСведений.СчетаФактурыКомиссионерамКОформлению КАК СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера КАК ДокументОтчетКомиссионера
	|			ПО СчетаФактуры.ОтчетКомиссионера = ДокументОтчетКомиссионера.Ссылка
	|ГДЕ
	|	(СчетаФактуры.ДатаСчетаФактуры >= &НачалоПериода
	|			ИЛИ &НачалоПериода = &ПустаяДата)
	|	И (СчетаФактуры.ДатаСчетаФактуры <= &КонецПериода
	|			ИЛИ &КонецПериода = &ПустаяДата)
	|	И (&ВсеОрганизации
	|			ИЛИ СчетаФактуры.Организация = &Организация)
	|	И (&ВсеКомиссионеры
	|			ИЛИ СчетаФактуры.Комиссионер = &Комиссионер)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ИсторияКППКонтрагентов.Период) КАК Период,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЗначенияКПП
	|ИЗ
	|	Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыКОформлению КАК Покупатели
	|		ПО ИсторияКППКонтрагентов.Ссылка = Покупатели.Покупатель
	|			И ИсторияКППКонтрагентов.Период <= Покупатели.ДатаСчетаФактуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияКППКонтрагентов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияКППКонтрагентов.КПП КАК КПП,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ИсторическоеЗначениеКПП
	|ИЗ
	|	ЗначенияКПП КАК ЗначенияКПП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|		ПО ЗначенияКПП.Ссылка = ИсторияКППКонтрагентов.Ссылка
	|			И ЗначенияКПП.Период = ИсторияКППКонтрагентов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОтчета.СчетФактураВыставленныйКомиссионера КАК СчетФактура,
	|	ТоварыОтчета.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактуры,
	|	ТоварыОтчета.СчетФактураВыставленныйКомиссионера.Номер КАК НомерСчетаФактуры,
	|	ТоварыОтчета.СчетФактураВыставленныйКомиссионера.Исправление КАК ЭтоИсправительныйСчетФактура,
	|	ТоварыОтчета.СчетФактураВыставленныйКомиссионера.СчетФактураОснование КАК СчетФактураОснование
	|ПОМЕСТИТЬ СчетаФактурыОтчетаИнтеркампани
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТоварыОтчета
	|ГДЕ
	|	ТоварыОтчета.Ссылка В
	|			(ВЫБРАТЬ
	|				СчетаФактурыКОформлению.ДокументОснование
	|			ИЗ
	|				СчетаФактурыКОформлению)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактураКомиссионера,
	|	ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураКомиссионеру).Сводный КАК Сводный,
	|	СчетаФактурыОтчетаИнтеркампани.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ОснованияИсправительныхСчетФактур
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыКОформлению КАК СчетаФактурыКОформлению
	|		ПО ЖурналУчетаСчетовФактур.Организация = СчетаФактурыКОформлению.Комиссионер
	|			И ЖурналУчетаСчетовФактур.Контрагент = СчетаФактурыКОформлению.Организация
	|			И (ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураКомиссионеру)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОтчетаИнтеркампани КАК СчетаФактурыОтчетаИнтеркампани
	|		ПО ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю = СчетаФактурыОтчетаИнтеркампани.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыКОформлению.ДокументОснование КАК ДокументОснование,
	|	СчетаФактурыКОформлению.Дата КАК Дата,
	|	СчетаФактурыКОформлению.Организация КАК Организация,
	|	СчетаФактурыКОформлению.Комиссионер КАК Комиссионер,
	|	СчетаФактурыКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	СчетаФактурыКОформлению.Валюта КАК Валюта,
	|	СчетаФактурыКОформлению.Покупатель КАК Покупатель,
	|	СчетаФактурыКОформлению.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	СчетаФактурыОтчетаИнтеркампани.СчетФактура КАК СчетФактураВыданный,
	|	СчетаФактурыОтчетаИнтеркампани.ЭтоИсправительныйСчетФактура КАК ЭтоИсправительныйСчетФактура,
	|	СчетаФактурыОтчетаИнтеркампани.СчетФактураОснование КАК СчетФактураОснование,
	|	ЕСТЬNULL(ОснованияИсправительныхСчетФактур.СчетФактураКомиссионера, НЕОПРЕДЕЛЕНО) КАК СчетФактураКомиссионераОснование,
	|	ОснованияИсправительныхСчетФактур.Сводный КАК СчетФактураКомиссионераОснованиеСводный,
	|	ЛОЖЬ КАК РеализацияЧерезКомиссионера
	|ПОМЕСТИТЬ ИтоговаяТаблицаКОформлению
	|ИЗ
	|	СчетаФактурыОтчетаИнтеркампани КАК СчетаФактурыОтчетаИнтеркампани
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыКОформлению КАК СчетаФактурыКОформлению
	|		ПО СчетаФактурыОтчетаИнтеркампани.ДатаСчетаФактуры = СчетаФактурыКОформлению.ДатаСчетаФактуры
	|			И СчетаФактурыОтчетаИнтеркампани.НомерСчетаФактуры = СчетаФактурыКОформлению.НомерСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОснованияИсправительныхСчетФактур КАК ОснованияИсправительныхСчетФактур
	|		ПО СчетаФактурыОтчетаИнтеркампани.СчетФактураОснование = ОснованияИсправительныхСчетФактур.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаФактурыКОформлению.ДокументОснование,
	|	СчетаФактурыКОформлению.Дата,
	|	СчетаФактурыКОформлению.Организация,
	|	СчетаФактурыКОформлению.Комиссионер,
	|	СчетаФактурыКОформлению.ДатаСчетаФактуры,
	|	СчетаФактурыКОформлению.Валюта,
	|	СчетаФактурыКОформлению.Покупатель,
	|	СчетаФактурыКОформлению.НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	СчетаФактурыКОформлению.РеализацияЧерезКомиссионера
	|ИЗ
	|	СчетаФактурыКОформлению КАК СчетаФактурыКОформлению
	|ГДЕ
	|	СчетаФактурыКОформлению.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыКОформлению.ДокументОснование КАК ДокументОснование,
	|	СчетаФактурыКОформлению.Организация КАК Организация,
	|	СчетаФактурыКОформлению.Покупатель КАК Покупатель,
	|	ЕСТЬNULL(ЕСТЬNULL(ИсторическоеЗначениеКПП.КПП, Контрагенты.КПП), """") КАК КПППокупателя,
	|	ЕСТЬNULL(Контрагенты.ИНН, """") КАК ИННПокупателя,
	|	СчетаФактурыКОформлению.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	СчетаФактурыКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(ИтоговаяТаблицаКОформлению.ЭтоИсправительныйСчетФактура, ЛОЖЬ) КАК ЭтоИсправительныйСчетФактура
	|ИЗ
	|	СчетаФактурыКОформлению КАК СчетаФактурыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО (Контрагенты.Ссылка = СчетаФактурыКОформлению.Покупатель)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсторическоеЗначениеКПП КАК ИсторическоеЗначениеКПП
	|		ПО (ИсторическоеЗначениеКПП.Ссылка = Контрагенты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтоговаяТаблицаКОформлению КАК ИтоговаяТаблицаКОформлению
	|		ПО (ИтоговаяТаблицаКОформлению.ДокументОснование = СчетаФактурыКОформлению.ДокументОснование)
	|			И (ИтоговаяТаблицаКОформлению.Организация = СчетаФактурыКОформлению.Организация)
	|			И (ИтоговаяТаблицаКОформлению.Покупатель = СчетаФактурыКОформлению.Покупатель)
	|			И (ИтоговаяТаблицаКОформлению.ДатаСчетаФактуры = СчетаФактурыКОформлению.ДатаСчетаФактуры)
	|			И (ИтоговаяТаблицаКОформлению.НомерСчетаФактуры = СчетаФактурыКОформлению.НомерСчетаФактуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТаблицаКОформлению.ДокументОснование КАК ДокументОснование,
	|	ИтоговаяТаблицаКОформлению.Дата КАК Дата,
	|	ИтоговаяТаблицаКОформлению.Организация КАК Организация,
	|	ИтоговаяТаблицаКОформлению.Комиссионер КАК Комиссионер,
	|	ИтоговаяТаблицаКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ИтоговаяТаблицаКОформлению.Валюта КАК Валюта,
	|	ИтоговаяТаблицаКОформлению.Покупатель КАК Покупатель,
	|	ИтоговаяТаблицаКОформлению.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ИтоговаяТаблицаКОформлению.СчетФактураВыданный КАК СчетФактураВыданный,
	|	ИтоговаяТаблицаКОформлению.ЭтоИсправительныйСчетФактура КАК ЭтоИсправительныйСчетФактура,
	|	ИтоговаяТаблицаКОформлению.СчетФактураОснование КАК СчетФактураОснование,
	|	ИтоговаяТаблицаКОформлению.СчетФактураКомиссионераОснование КАК СчетФактураКомиссионераОснование,
	|	ИтоговаяТаблицаКОформлению.СчетФактураКомиссионераОснованиеСводный КАК СчетФактураКомиссионераОснованиеСводный,
	|	ИтоговаяТаблицаКОформлению.РеализацияЧерезКомиссионера КАК РеализацияЧерезКомиссионера
	|ИЗ
	|	ИтоговаяТаблицаКОформлению КАК ИтоговаяТаблицаКОформлению
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСчетаФактуры,
	|	ЭтоИсправительныйСчетФактура";
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ФормироватьСводныеСФ", ФормироватьСводныеСФ);
	Запрос.УстановитьПараметр("Организация",          Организация);
	Запрос.УстановитьПараметр("ВсеОрганизации",       НЕ ЗначениеЗаполнено(Организация));
	Запрос.УстановитьПараметр("Комиссионер",          Комиссионер);
	Запрос.УстановитьПараметр("ВсеКомиссионеры",      НЕ ЗначениеЗаполнено(Комиссионер));
	Запрос.УстановитьПараметр("НачалоПериода",        НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",         КонецПериода);
	Запрос.УстановитьПараметр("ПустаяДата",           Дата(1,1,1));
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	Покупатели = РезультатЗапроса[6].Выгрузить();
	Покупатели.Колонки.Добавить("Обработано", Новый ОписаниеТипов("Булево"));
	Покупатели.Индексы.Добавить("Обработано, ДокументОснование, Организация, ДатаСчетаФактуры, Покупатель, НомерСчетаФактуры");
	
	Выборка = РезультатЗапроса[7].Выбрать();
	ДанныеЗаполнения = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса[7].Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;

	ТаблицаНовыхСФ = Новый ТаблицаЗначений;
	ТаблицаНовыхСФ.Колонки.Добавить("СчетФактураКомиссионеру", Новый ОписаниеТипов("ДокументСсылка.СчетФактураКомиссионеру"));
	ТаблицаНовыхСФ.Колонки.Добавить("СчетФактураВыданный",     Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));

	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
		
		Если Выборка.РеализацияЧерезКомиссионера Тогда
			НовыйСчетФактура = Документы.СчетФактураВыданный.СоздатьДокумент();
		Иначе
			НовыйСчетФактура = Документы.СчетФактураКомиссионеру.СоздатьДокумент();
		КонецЕсли;
		
		Отбор = Новый Структура;
		Отбор.Вставить("Обработано", Ложь);
		Отбор.Вставить("ДокументОснование");
		Отбор.Вставить("Организация");
		Отбор.Вставить("ЭтоИсправительныйСчетФактура");
		Отбор.Вставить("ДатаСчетаФактуры");
		Если НЕ ФормироватьСводныеСФ ИЛИ
			 Выборка.ЭтоИсправительныйСчетФактура Тогда
			Отбор.Вставить("Покупатель");
			Отбор.Вставить("НомерСчетаФактуры");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Отбор, Выборка);
		
		СтрокиПокупатели = Покупатели.НайтиСтроки(Отбор);
		Если СтрокиПокупатели.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ВыставляемыйСФ = Ложь;
		Для каждого Строка Из СтрокиПокупатели Цикл
			Строка.Обработано = Истина;
			
			НоваяСтрока = НовыйСчетФактура.Покупатели.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);

			Если НоваяСтрока.Покупатель <> Справочники.Контрагенты.РозничныйПокупатель ИЛИ НоваяСтрока.НомерСчетаФактуры <> "" Тогда
				ВыставляемыйСФ = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если ВыставляемыйСФ Тогда 
			ДанныеЗаполнения.Вставить("ДатаВыставления", ДанныеЗаполнения.Дата);
		КонецЕсли;

		НовыйСчетФактура.Заполнить(ДанныеЗаполнения);
		
		Если Выборка.ЭтоИсправительныйСчетФактура Тогда
		
			Если Выборка.СчетФактураКомиссионераОснование = Неопределено Тогда
			
				ШаблонОшибки = НСтр("ru = 'Нельзя сформировать исправленный счет-фактуру №%1 от %2, пока не сформирован исходный'");
				ТекстОшибки = СтрШаблон(ШаблонОшибки, Выборка.НомерСчетаФактуры, Выборка.ДатаСчетаФактуры);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
				Продолжить;
			
			КонецЕсли;
			
			ПоказатьОшибкуСводнойПартии = Ложь;
			ОснованиеИсправления = Неопределено;
			
			СтрокаНовойСФ = ТаблицаНовыхСФ.Найти(Выборка.СчетФактураОснование, "СчетФактураВыданный");
			
			Если СтрокаНовойСФ <> Неопределено Тогда
			
				ОснованиеИсправления = СтрокаНовойСФ.СчетФактураКомиссионеру;
				ПоказатьОшибкуСводнойПартии = ФормироватьСводныеСФ;
			
			ИначеЕсли Выборка.СчетФактураКомиссионераОснование <> Неопределено Тогда
			
				ОснованиеИсправления = Выборка.СчетФактураКомиссионераОснование;
				ПоказатьОшибкуСводнойПартии = Выборка.СчетФактураКомиссионераОснованиеСводный;
			
			КонецЕсли;
			
			Если ПоказатьОшибкуСводнойПартии Тогда
			
				ШаблонОшибки = НСтр("ru = 'Документ %1 является сводным. На основании него нельзя сформировать исправленный счет-фактуру №%2 от %3'");
				ТекстОшибки = СтрШаблон(ШаблонОшибки, ОснованиеИсправления, Выборка.НомерСчетаФактуры, Выборка.ДатаСчетаФактуры);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
				Продолжить;
			
			КонецЕсли;
			
			НовыйСчетФактура.Исправление = Истина;
			НовыйСчетФактура.СчетФактураОснование = ОснованиеИсправления;
		
		КонецЕсли;
		
		Попытка
			НовыйСчетФактура.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекстОшибки = НСтр("ru = 'Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       НовыйСчетФактура);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки, , ,);
		КонецПопытки;
		
		Если Не Выборка.ЭтоИсправительныйСчетФактура Тогда
		
			СтрокаНовойСФ = ТаблицаНовыхСФ.Добавить();
			СтрокаНовойСФ.СчетФактураКомиссионеру = НовыйСчетФактура.Ссылка;
			СтрокаНовойСФ.СчетФактураВыданный = Выборка.СчетФактураВыданный;
		
		КонецЕсли;
		
		Результат.Добавить(НовыйСчетФактура.Ссылка);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, РезультатВыбора, "НачалоПериода, КонецПериода");
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормы()
	
	ЭлементыОрганизация = Новый Массив;
	ЭлементыОрганизация.Добавить("СписокОрганизация");
	ЭлементыОрганизация.Добавить("КОформлениюОрганизация");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
		Элементы, ЭлементыОрганизация, "Видимость", НЕ ЗначениеЗаполнено(Организация));
		
	ЭлементыОрганизация = Новый Массив;
	ЭлементыОрганизация.Добавить("СписокКомиссионер");
	ЭлементыОрганизация.Добавить("КОформлениюКомиссионер");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
		Элементы, ЭлементыОрганизация, "Видимость", НЕ ЗначениеЗаполнено(Комиссионер));

	ЭлементыОтбора = ОбщегоНазначенияУТКлиентСервер.ПолучитьОтборДинамическогоСписка(КОформлению).Элементы;
	
	ГруппаОтбораПериода = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		ЭлементыОтбора, "ГруппаОтбораПериода", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		КОформлению, 
		"Комиссионер", 
		Комиссионер, 
		ВидСравненияКомпоновкиДанных.Равно
		,
		,
		ЗначениеЗаполнено(Комиссионер));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		КОформлению, 
		"Организация", 
		Организация, 
		ВидСравненияКомпоновкиДанных.Равно
		,
		,
		ЗначениеЗаполнено(Организация));
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		ГруппаОтбораПериода,
		"Дата", 
		ВидСравненияКомпоновкиДанных.БольшеИлиРавно, 
		НачалоДня(НачалоПериода),
		,
		ЗначениеЗаполнено(НачалоПериода));
		
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		ГруппаОтбораПериода,
		"Дата", 
		ВидСравненияКомпоновкиДанных.МеньшеИлиРавно, 
		КонецДня(КонецПериода),
		,
		ЗначениеЗаполнено(КонецПериода));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияПоПараметрамФормы(Параметры)
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Свойство("Организация", Организация);
		СтруктураБыстрогоОтбора.Свойство("НачалоПериода", НачалоПериода);
		СтруктураБыстрогоОтбора.Свойство("КонецПериода", КонецПериода);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
