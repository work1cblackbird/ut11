#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив из Строка - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетНДС");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.СчетФактураКомиссионеру") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.СчетФактураКомиссионеру.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура выданный комиссионеру (агенту)".
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
// Возвращаемое значение:
//  СтрокаТаблицыЗначений
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураКомиссионеру) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураКомиссионеру.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураКомиссионеру);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКомиссиюПриПродажах,ИспользоватьПередачиТоваровМеждуОрганизациями";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Функция формирует представление счет-фактуры.
//
// Параметры:
//  Номер - Строка - Номер счета-фактуры;
//  Дата - Дата - Дата счета-фактуры;
//  Проведен - Булево
//
// Возвращаемое значение:
//	Строка - Представление счета-фактуры.
//
Функция ПредставлениеСчетаФактуры(Номер, Дата, Проведен = Истина) Экспорт
	
	СтруктураШапки = Новый Структура;
	СтруктураШапки.Вставить("Дата", Дата);
	СтруктураШапки.Вставить("Номер", Номер);
	
	МассивПодстрок = Новый Массив;
	МассивПодстрок.Добавить(ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(СтруктураШапки, НСтр("ru='Счет-фактура'")));
	Если Не Проведен Тогда
		МассивПодстрок.Добавить(НСтр("ru='(не проведен)'"));
	КонецЕсли;
	Представление = СтрСоединить(МассивПодстрок, " ");
	
	Возврат Представление;
	
КонецФункции

// Функция находит счета-фактуры заданного документа.
//
// Параметры:
//	Основание - ДокументСсылка - Документ, для которого необходимо найти счет-фактуру
//	Организация - СправочникСсылка.Организации - Организация, для которой формируется счет-фактура.
//	Проведен - Булево - Если признак установлен в значение Истина, то будет произведен поиск только проведенных.
//
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица найденных счетов-фактур (Ссылка, Номер, Дата, Организация, Контрагент, Валюта).
//
Функция СчетаФактурыПоОснованию(Основание, Организация = Неопределено, Проведен = Ложь) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СчетФактураКомиссионеру.Ссылка КАК Ссылка,
	|	СчетФактураКомиссионеру.Номер КАК Номер,
	|	СчетФактураКомиссионеру.Дата КАК Дата,
	|	СчетФактураКомиссионеру.Организация КАК Организация,
	|	СчетФактураКомиссионеру.Комиссионер КАК Контрагент,
	|	СчетФактураКомиссионеру.Валюта КАК Валюта,
	|	СчетФактураКомиссионеру.Проведен КАК Проведен
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|ГДЕ
	|	СчетФактураКомиссионеру.ДокументОснование = &Основание
	|	И (НЕ СчетФактураКомиссионеру.ПометкаУдаления)
	|	И (СчетФактураКомиссионеру.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|");
	Запрос.УстановитьПараметр("Основание",   Основание);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если Проведен Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"(НЕ СчетФактураКомиссионеру.ПометкаУдаления)",
			"СчетФактураКомиссионеру.Проведен");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Приводит состояние проведения счетов-фактур в соответствие с документом-основанием.
//
// Параметры:
//	Основание				- ДокументСсылка - документ-основание счета-фактуры
//	Проведен 				- Булево - Состояние проведения документа-основания.
//
Процедура АктуализироватьСчетаФактуры(Основание, Проведен) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Проведен Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения
	КонецЕсли;
		
	ТаблицаСчетовФактур = СчетаФактурыПоОснованию(Основание);
	Если ТаблицаСчетовФактур.Количество() > 0 Тогда
		ТаблицаСчетовФактур.Сортировать("Дата Возр")
	КонецЕсли;
	
	Для Каждого РеквизитыСчетаФактуры Из ТаблицаСчетовФактур Цикл
		
		ДокументОбъект = РеквизитыСчетаФактуры.Ссылка.ПолучитьОбъект();
		Попытка
			ДокументОбъект.Записать(РежимЗаписи);
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       ДокументОбъект);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				,);
		КонецПопытки
	КонецЦикла
	
КонецПроцедуры

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - Структура:
//	* МассивОрганизаций - Массив из СправочникСсылка.Организации - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода",     Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      Параметры.КонецПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(1) КАК КоличествоДокументовКОформлению
	|ИЗ
	|	РегистрСведений.СчетаФактурыКомиссионерамКОформлению КАК КОформлению
	|ГДЕ
	|	КОформлению.ДатаСчетаФактуры МЕЖДУ &НачалоПериода И &КонецПериода
	|	И &УсловиеОтбора
	|";
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "КОформлению.Организация В(&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ТипЗначения(Комиссионер) = Тип(Справочник.Организации)
	|			ТОГДА ЗначениеРазрешено(Организация) ИЛИ ЗначениеРазрешено(Комиссионер)
	|		ИНАЧЕ ЗначениеРазрешено(Организация) И ЗначениеРазрешено(Комиссионер.Партнер)
	|	КОНЕЦ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.СчетФактураКомиссионеру";
	
	ВЗапросеЕстьИсточник = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("СуммаНДС",           	 0);
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	ПереопределениеРасчетаПараметров.Вставить("ВалютаСчетаФактуры",      "ДанныеДокумента.Ссылка.Валюта");
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ) КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0) КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Валюта, ДанныеДокумента.Организация.ВалютаРегламентированногоУчета) КАК ВалютаОснования,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СчетФактураОснование КАК СчетФактураОснование,
	|	ДанныеДокумента.СчетФактураОснование.Дата КАК ДатаСчетаФактурыОснования,
	|	ДанныеДокумента.Исправление КАК Исправление,
	|	ДанныеДокумента.НомерИсправления КАК НомерИсправления,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта КАК ВалютаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВыставленВЭлектронномВиде ТОГДА
	|			2
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ КАК ВыставленВЭлектронномВиде,
	|	ДанныеДокумента.ДатаВыставления КАК ДатаВыставления,
	|	ДанныеДокумента.КодВидаОперации КАК КодВидаОперации,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	0 КАК СуммаНДС,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Комиссионер КАК Комиссионер,
	|	ДанныеДокумента.РучнаяКорректировкаЖурналаСФ КАК РучнаяКорректировкаЖурналаСФ,
	|	ДанныеДокумента.СчетФактураОснование КАК СчетФактураПредыдущееИсправление
	|	
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Номер = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
			Реквизиты.Номер, 
			Истина,
			Реквизиты.ОбособленноеПодразделение, 
			Реквизиты.ЦифровойИндексОбособленногоПодразделения);
	
	Запрос.УстановитьПараметр("НомерНаПечать",						Номер);
	
	УчетНДСРФ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыВыставленного(Реквизиты, Запрос);
	
	ДатаКомиссионера = 
		?(ЗначениеЗаполнено(Реквизиты.ДатаСчетаФактурыОснования), 
			Реквизиты.ДатаСчетаФактурыОснования, Реквизиты.Период); 
	Запрос.УстановитьПараметр("ДатаКомиссионера",					ДатаКомиссионера);
	
	СчетФактураПредыдущееИсправление = Неопределено;
	Если Реквизиты.Исправление Тогда
		СчетФактураПредыдущееИсправление = СчетФактураПредыдущееИсправление(Реквизиты.СчетФактураОснование, Реквизиты.НомерИсправления);
	КонецЕсли;
	Запрос.УстановитьПараметр("СчетФактураПредыдущееИсправление", СчетФактураПредыдущееИсправление);
	
	Запрос.УстановитьПараметр("ИсправляемыйСчетФактура", ?(Запрос.Параметры.СчетФактураПредыдущееИсправление = Неопределено,
		Реквизиты.СчетФактураОснование,
		Запрос.Параметры.СчетФактураПредыдущееИсправление));

	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Реквизиты.ВалютаОснования,
		Реквизиты.ВалютаОснования,
		Реквизиты.Период,
		Реквизиты.Организация);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",	Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
	Если Реквизиты.Исправление Тогда
		ЗаписьДопЛиста = (НачалоКвартала(Реквизиты.ДатаСчетаФактурыОснования) < НачалоКвартала(Реквизиты.Период));
	Иначе
		ЗаписьДопЛиста = Ложь;
	КонецЕсли;
	Запрос.УстановитьПараметр("ЗаписьДопЛиста", ЗаписьДопЛиста);
	
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());

	ИнформацияПоИсправлению = "";
	Если Реквизиты.Исправление
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
			ШаблонСтроки = "ru='Исправление %1 от %2'"; // @НСтр
			ИнформацияПоИсправлению = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ШаблонСтроки,
										Реквизиты.НомерИсправления,
										Реквизиты.Период);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
	ПолныеИменаСчетовФактур = Новый Массив;
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураКомиссионеру");
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураКомитента");
	ИдентификаторыСчетовФактур = ОбщегоНазначения.ИдентификаторыОбъектовМетаданных(ПолныеИменаСчетовФактур);
	
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураКомиссионеру", ИдентификаторыСчетовФактур["Документ.СчетФактураКомиссионеру"]);
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураКомитента", ИдентификаторыСчетовФактур["Документ.СчетФактураКомитента"]);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураКомиссионеру"));

	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаВтДанныеИсправленийСчетовФактур(Запрос, ТекстыЗапроса) //++

	ИмяРегистра = "ВтТаблицаСуммДокументов";

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОснованийСчетовФактур.Регистратор КАК Регистратор,
	|	ДанныеОснованийСчетовФактур.ТипСчетаФактуры КАК ТипСчетаФактуры,
	|	ДанныеОснованийСчетовФактур.Организация КАК Организация,
	|	ДанныеОснованийСчетовФактур.Контрагент КАК Контрагент,
	|	ДанныеОснованийСчетовФактур.ВидЦенности КАК ВидЦенности,
	|	ДанныеОснованийСчетовФактур.ТипЗапасов КАК ТипЗапасов,
	|	ДанныеОснованийСчетовФактур.СтавкаНДС КАК СтавкаНДС,
	|	ДанныеОснованийСчетовФактур.НомерГТД КАК НомерГТД,
	|	ДанныеОснованийСчетовФактур.КодТНВЭД КАК КодТНВЭД,
	|	ДанныеОснованийСчетовФактур.Валюта КАК Валюта,
	|	ДанныеОснованийСчетовФактур.СуммаБезНДС КАК СуммаБезНДС,
	|	ДанныеОснованийСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ДанныеОснованийСчетовФактур.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	ДанныеОснованийСчетовФактур.БазаНДСРегл КАК БазаНДСРегл,
	|	ДанныеОснованийСчетовФактур.СуммаНДСРегл КАК СуммаНДСРегл,
	|	ДанныеОснованийСчетовФактур.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданныйКомиссионером,
	|	ДанныеОснованийСчетовФактур.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара
	|ПОМЕСТИТЬ ВтДанныеИсправленийСчетовФактур
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|ГДЕ
	|	ДанныеОснованийСчетовФактур.Регистратор = &ДокументОснование
	|	И ДанныеОснованийСчетовФактур.ИсправлениеОшибок";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТаблицаСуммДокументов";

	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеИсправленийСчетовФактур", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеИсправленийСчетовФактур(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОснованийСчетовФактур.ТипСчетаФактуры КАК ТипСчетаФактуры,
	|	ДанныеОснованийСчетовФактур.Организация КАК Организация,
	|	ДанныеОснованийСчетовФактур.Контрагент КАК Контрагент,
	|	ДанныеОснованийСчетовФактур.ВидЦенности КАК ВидЦенностиПродажи,
	|	ДанныеОснованийСчетовФактур.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ДанныеОснованийСчетовФактур.БазаНДСРегл) КАК СуммаБезНДС,
	|	СУММА(ДанныеОснованийСчетовФактур.СуммаНДСРегл) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА &ВалютаСчетаФактуры = ДанныеОснованийСчетовФактур.Валюта
	|				ТОГДА ДанныеОснованийСчетовФактур.СуммаБезНДС + ДанныеОснованийСчетовФактур.СуммаНДС
	|			ИНАЧЕ ДанныеОснованийСчетовФактур.БазаНДСРегл + ДанныеОснованийСчетовФактур.СуммаНДСРегл
	|		КОНЕЦ) КАК СуммаПоСчетуФактуреЖурнал,
	|	СУММА(ВЫБОР
	|			КОГДА &ВалютаСчетаФактуры = ДанныеОснованийСчетовФактур.Валюта
	|				ТОГДА ДанныеОснованийСчетовФактур.СуммаНДС
	|			ИНАЧЕ ДанныеОснованийСчетовФактур.СуммаНДСРегл
	|		КОНЕЦ) КАК СуммаНДСЖурнал,
	|	ДанныеОснованийСчетовФактур.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеОснованийСчетовФактур.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара КАК Покупатель,
	|	ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданныйКомиссионером,
	|	ДанныеОснованийСчетовФактур.ТипЗапасов КАК ТипЗапасов
	|ПОМЕСТИТЬ ВтТаблицаСуммДокументов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОснованийСчетовФактур.ТипСчетаФактуры КАК ТипСчетаФактуры,
	|		ДанныеОснованийСчетовФактур.Организация КАК Организация,
	|		ДанныеОснованийСчетовФактур.Контрагент КАК Контрагент,
	|		ДанныеОснованийСчетовФактур.ВидЦенности КАК ВидЦенности,
	|		ДанныеОснованийСчетовФактур.СтавкаНДС КАК СтавкаНДС,
	|		ДанныеОснованийСчетовФактур.Валюта КАК Валюта,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДС КАК СуммаБезНДС,
	|		ДанныеОснованийСчетовФактур.СуммаНДС КАК СуммаНДС,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|		ДанныеОснованийСчетовФактур.БазаНДСРегл КАК БазаНДСРегл,
	|		ДанныеОснованийСчетовФактур.СуммаНДСРегл КАК СуммаНДСРегл,
	|		ДанныеОснованийСчетовФактур.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ДанныеОснованийСчетовФактур.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|		ДанныеОснованийСчетовФактур.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|		ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданныйКомиссионером,
	|		ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|		ДанныеОснованийСчетовФактур.ТипЗапасов КАК ТипЗапасов
	|	ИЗ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.Регистратор = &ДокументОснование
	|		И ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторСчетФактураКомиссионеру
	|		И ДанныеОснованийСчетовФактур.Организация = &Организация
	|		И НЕ ДанныеОснованийСчетовФактур.ИсправлениеОшибок
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеОснованийСчетовФактур.ТипСчетаФактуры,
	|		ДанныеОснованийСчетовФактур.Организация,
	|		ДанныеОснованийСчетовФактур.Контрагент,
	|		ДанныеОснованийСчетовФактур.ВидЦенности,
	|		ДанныеОснованийСчетовФактур.СтавкаНДС,
	|		ДанныеОснованийСчетовФактур.Валюта,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДС,
	|		ДанныеОснованийСчетовФактур.СуммаНДС,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДСРегл,
	|		ДанныеОснованийСчетовФактур.БазаНДСРегл,
	|		ДанныеОснованийСчетовФактур.СуммаНДСРегл,
	|		ДанныеОснованийСчетовФактур.НалогообложениеНДС,
	|		ДанныеИсправленийСчетовФактур.ДатаСчетаФактурыКомиссионера,
	|		ДанныеИсправленийСчетовФактур.НомерСчетаФактурыКомиссионера,
	|		ДанныеИсправленийСчетовФактур.СчетФактураВыданныйКомиссионером,
	|		ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара,
	|		ДанныеОснованийСчетовФактур.ТипЗапасов
	|	ИЗ
	|		ВтДанныеИсправленийСчетовФактур КАК ДанныеИсправленийСчетовФактур
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|			ПО ДанныеИсправленийСчетовФактур.Регистратор = ДанныеОснованийСчетовФактур.Регистратор
	|				И ДанныеИсправленийСчетовФактур.ТипСчетаФактуры = ДанныеОснованийСчетовФактур.ТипСчетаФактуры
	|				И ДанныеИсправленийСчетовФактур.Организация = ДанныеОснованийСчетовФактур.Организация
	|				И ДанныеИсправленийСчетовФактур.Контрагент = ДанныеОснованийСчетовФактур.Контрагент
	|				И ДанныеИсправленийСчетовФактур.СтавкаНДС = ДанныеОснованийСчетовФактур.СтавкаНДС
	|				И ДанныеИсправленийСчетовФактур.НомерГТД = ДанныеОснованийСчетовФактур.НомерГТД
	|				И ДанныеИсправленийСчетовФактур.КодТНВЭД = ДанныеОснованийСчетовФактур.КодТНВЭД
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.Регистратор = &ДокументОснование
	|		И ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторСчетФактураКомиссионеру
	|		И ДанныеОснованийСчетовФактур.Организация = &Организация
	|		И НЕ ДанныеОснованийСчетовФактур.ИсправлениеОшибок
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтДанныеИсправленийСчетовФактур.ТипСчетаФактуры,
	|		ВтДанныеИсправленийСчетовФактур.Организация,
	|		ВтДанныеИсправленийСчетовФактур.Контрагент,
	|		ВтДанныеИсправленийСчетовФактур.ВидЦенности,
	|		ВтДанныеИсправленийСчетовФактур.СтавкаНДС,
	|		ВтДанныеИсправленийСчетовФактур.Валюта,
	|		ВтДанныеИсправленийСчетовФактур.СуммаБезНДС,
	|		ВтДанныеИсправленийСчетовФактур.СуммаНДС,
	|		ВтДанныеИсправленийСчетовФактур.СуммаБезНДСРегл,
	|		ВтДанныеИсправленийСчетовФактур.БазаНДСРегл,
	|		ВтДанныеИсправленийСчетовФактур.СуммаНДСРегл,
	|		ВтДанныеИсправленийСчетовФактур.НалогообложениеНДС,
	|		ВтДанныеИсправленийСчетовФактур.ДатаСчетаФактурыКомиссионера,
	|		ВтДанныеИсправленийСчетовФактур.НомерСчетаФактурыКомиссионера,
	|		ВтДанныеИсправленийСчетовФактур.СчетФактураВыданныйКомиссионером,
	|		ВтДанныеИсправленийСчетовФактур.ПокупательКомиссионногоТовара,
	|		ВтДанныеИсправленийСчетовФактур.ТипЗапасов
	|	ИЗ
	|		ВтДанныеИсправленийСчетовФактур КАК ВтДанныеИсправленийСчетовФактур
	|	ГДЕ
	|		ВтДанныеИсправленийСчетовФактур.ТипСчетаФактуры = &ИдентификаторСчетФактураКомиссионеру
	|		И ВтДанныеИсправленийСчетовФактур.Организация = &Организация) КАК ДанныеОснованийСчетовФактур
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснованийСчетовФактур.ТипСчетаФактуры,
	|	ДанныеОснованийСчетовФактур.Организация,
	|	ДанныеОснованийСчетовФактур.Контрагент,
	|	ДанныеОснованийСчетовФактур.ВидЦенности,
	|	ДанныеОснованийСчетовФактур.СтавкаНДС,
	|	ДанныеОснованийСчетовФактур.НалогообложениеНДС,
	|	ДанныеОснованийСчетовФактур.ДатаСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.НомерСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара,
	|	ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером,
	|	ДанныеОснованийСчетовФактур.ТипЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеОснованийСчетовФактур.ТипСчетаФактуры КАК ТипСчетаФактуры,
	|	ДанныеОснованийСчетовФактур.Организация КАК Организация,
	|	ДанныеОснованийСчетовФактур.Контрагент КАК Контрагент,
	|	ДанныеОснованийСчетовФактур.ВидЦенности КАК ВидЦенностиПродажи,
	|	ДанныеОснованийСчетовФактур.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ДанныеОснованийСчетовФактур.БазаНДСРегл) КАК СуммаБезНДС,
	|	СУММА(ДанныеОснованийСчетовФактур.СуммаНДСРегл) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА &ВалютаСчетаФактуры = ДанныеОснованийСчетовФактур.Валюта
	|				ТОГДА ДанныеОснованийСчетовФактур.СуммаБезНДС + ДанныеОснованийСчетовФактур.СуммаНДС
	|			ИНАЧЕ ДанныеОснованийСчетовФактур.БазаНДСРегл + ДанныеОснованийСчетовФактур.СуммаНДСРегл
	|		КОНЕЦ) КАК СуммаПоСчетуФактуреЖурнал,
	|	СУММА(ВЫБОР
	|			КОГДА &ВалютаСчетаФактуры = ДанныеОснованийСчетовФактур.Валюта
	|				ТОГДА ДанныеОснованийСчетовФактур.СуммаНДС
	|			ИНАЧЕ ДанныеОснованийСчетовФактур.СуммаНДСРегл
	|		КОНЕЦ) КАК СуммаНДСЖурнал,
	|	ДанныеОснованийСчетовФактур.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеОснованийСчетовФактур.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара КАК Покупатель,
	|	ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданныйКомиссионером,
	|	ДанныеОснованийСчетовФактур.ТипЗапасов КАК ТипЗапасов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОснованийСчетовФактур.ТипСчетаФактуры КАК ТипСчетаФактуры,
	|		ДанныеОснованийСчетовФактур.Организация КАК Организация,
	|		ДанныеОснованийСчетовФактур.Контрагент КАК Контрагент,
	|		ДанныеОснованийСчетовФактур.ВидЦенности КАК ВидЦенности,
	|		ДанныеОснованийСчетовФактур.СтавкаНДС КАК СтавкаНДС,
	|		ДанныеОснованийСчетовФактур.Валюта КАК Валюта,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДС КАК СуммаБезНДС,
	|		ДанныеОснованийСчетовФактур.СуммаНДС КАК СуммаНДС,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|		ДанныеОснованийСчетовФактур.БазаНДСРегл КАК БазаНДСРегл,
	|		ДанныеОснованийСчетовФактур.СуммаНДСРегл КАК СуммаНДСРегл,
	|		ДанныеОснованийСчетовФактур.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ДанныеОснованийСчетовФактур.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|		ДанныеОснованийСчетовФактур.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|		ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданныйКомиссионером,
	|		ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|		ДанныеОснованийСчетовФактур.ТипЗапасов КАК ТипЗапасов
	|	ИЗ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.Регистратор = &ДокументОснование
	|		И ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторСчетФактураКомитента
	|		И ДанныеОснованийСчетовФактур.Организация = &Комиссионер
	|		И НЕ ДанныеОснованийСчетовФактур.ИсправлениеОшибок
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеОснованийСчетовФактур.ТипСчетаФактуры,
	|		ДанныеОснованийСчетовФактур.Организация,
	|		ДанныеОснованийСчетовФактур.Контрагент,
	|		ДанныеОснованийСчетовФактур.ВидЦенности,
	|		ДанныеОснованийСчетовФактур.СтавкаНДС,
	|		ДанныеОснованийСчетовФактур.Валюта,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДС,
	|		ДанныеОснованийСчетовФактур.СуммаНДС,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДСРегл,
	|		ДанныеОснованийСчетовФактур.БазаНДСРегл,
	|		ДанныеОснованийСчетовФактур.СуммаНДСРегл,
	|		ДанныеОснованийСчетовФактур.НалогообложениеНДС,
	|		ДанныеИсправленийСчетовФактур.ДатаСчетаФактурыКомиссионера,
	|		ДанныеИсправленийСчетовФактур.НомерСчетаФактурыКомиссионера,
	|		ДанныеИсправленийСчетовФактур.СчетФактураВыданныйКомиссионером,
	|		ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара,
	|		ДанныеОснованийСчетовФактур.ТипЗапасов
	|	ИЗ
	|		ВтДанныеИсправленийСчетовФактур КАК ДанныеИсправленийСчетовФактур
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|			ПО ДанныеИсправленийСчетовФактур.Регистратор = ДанныеОснованийСчетовФактур.Регистратор
	|				И ДанныеИсправленийСчетовФактур.ТипСчетаФактуры = ДанныеОснованийСчетовФактур.ТипСчетаФактуры
	|				И ДанныеИсправленийСчетовФактур.Организация = ДанныеОснованийСчетовФактур.Организация
	|				И ДанныеИсправленийСчетовФактур.Контрагент = ДанныеОснованийСчетовФактур.Контрагент
	|				И ДанныеИсправленийСчетовФактур.СтавкаНДС = ДанныеОснованийСчетовФактур.СтавкаНДС
	|				И ДанныеИсправленийСчетовФактур.НомерГТД = ДанныеОснованийСчетовФактур.НомерГТД
	|				И ДанныеИсправленийСчетовФактур.КодТНВЭД = ДанныеОснованийСчетовФактур.КодТНВЭД
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.Регистратор = &ДокументОснование
	|		И ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторСчетФактураКомитента
	|		И ДанныеОснованийСчетовФактур.Организация = &Комиссионер
	|		И НЕ ДанныеОснованийСчетовФактур.ИсправлениеОшибок
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтДанныеИсправленийСчетовФактур.ТипСчетаФактуры,
	|		ВтДанныеИсправленийСчетовФактур.Организация,
	|		ВтДанныеИсправленийСчетовФактур.Контрагент,
	|		ВтДанныеИсправленийСчетовФактур.ВидЦенности,
	|		ВтДанныеИсправленийСчетовФактур.СтавкаНДС,
	|		ВтДанныеИсправленийСчетовФактур.Валюта,
	|		ВтДанныеИсправленийСчетовФактур.СуммаБезНДС,
	|		ВтДанныеИсправленийСчетовФактур.СуммаНДС,
	|		ВтДанныеИсправленийСчетовФактур.СуммаБезНДСРегл,
	|		ВтДанныеИсправленийСчетовФактур.БазаНДСРегл,
	|		ВтДанныеИсправленийСчетовФактур.СуммаНДСРегл,
	|		ВтДанныеИсправленийСчетовФактур.НалогообложениеНДС,
	|		ВтДанныеИсправленийСчетовФактур.ДатаСчетаФактурыКомиссионера,
	|		ВтДанныеИсправленийСчетовФактур.НомерСчетаФактурыКомиссионера,
	|		ВтДанныеИсправленийСчетовФактур.СчетФактураВыданныйКомиссионером,
	|		ВтДанныеИсправленийСчетовФактур.ПокупательКомиссионногоТовара,
	|		ВтДанныеИсправленийСчетовФактур.ТипЗапасов
	|	ИЗ
	|		ВтДанныеИсправленийСчетовФактур КАК ВтДанныеИсправленийСчетовФактур
	|	ГДЕ
	|		ВтДанныеИсправленийСчетовФактур.ТипСчетаФактуры = &ИдентификаторСчетФактураКомитента
	|		И ВтДанныеИсправленийСчетовФактур.Организация = &Комиссионер) КАК ДанныеОснованийСчетовФактур
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснованийСчетовФактур.ТипСчетаФактуры,
	|	ДанныеОснованийСчетовФактур.Организация,
	|	ДанныеОснованийСчетовФактур.Контрагент,
	|	ДанныеОснованийСчетовФактур.ВидЦенности,
	|	ДанныеОснованийСчетовФактур.СтавкаНДС,
	|	ДанныеОснованийСчетовФактур.НалогообложениеНДС,
	|	ДанныеОснованийСчетовФактур.ДатаСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.НомерСчетаФактурыКомиссионера,
	|	ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара,
	|	ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером,
	|	ДанныеОснованийСчетовФактур.ТипЗапасов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаСуммДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
#Область ТекстРучнаяКорректировка
	ТекстЗапросаРучнаяКорректировка = 
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Регистратор = &Ссылка
	|	И &РучнаяКорректировкаЖурналаСФ
	|";
#КонецОбласти
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &ИсправляемыйСчетФактура) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия > 0)
	|";
#КонецОбласти
	
#Область ТекстЗапросаВыставленныеСчетаФактурыВыставляемыйКомиссионеру
	ТекстЗапросаВыставленныеСчетаФактурыВыставляемыйКомиссионеру = "
	|ВЫБРАТЬ
	|	&Период                                                                       КАК Период,
	|	&Организация                                                                  КАК Организация,
	|	Покупатели.Покупатель                                                         КАК Контрагент,
	|	&Ссылка                                                                       КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления                                                              КАК ДатаВыставленияПолучения,
	|	&ВыставленВЭлектронномВиде                                                    КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                              КАК КодВидаОперации,
	|	&НомерНаПечать                                                                КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетаФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                                                         КАК ДатаСчетаФактуры,
	|	NULL                                                                          КАК НомерКорректировочногоСчетаФактуры,
	|	NULL                                                                          КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &НомерИсправления
	|	КОНЕЦ                                                                         КАК НомерИсправления,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &Период
	|	КОНЕЦ                                                                         КАК ДатаИсправления,
	|	NULL                                                                          КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL                                                                          КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	Покупатели.НомерСтроки                                                        КАК ИндексСтроки,
	|	&ВалютаСчетаФактуры                                                           КАК Валюта,
	|	СУММА(ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал)                        КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаСуммДокументов.СуммаНДСЖурнал)                                   КАК СуммаНДС,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                             КАК СуммаНДСРазницаУменьшение,
	|	0                                                                             КАК СуммаНДСРазницаУвеличение,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|														  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                         КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                                                          КАК СчетФактураНеВыставляется,
	|	Покупатели.КПППокупателя                                                      КАК КППКонтрагента,
	|	Покупатели.ИННПокупателя                                                      КАК ИННКонтрагента,
	|	&Комиссионер                                                                  КАК Посредник,
	|	NULL                                                                          КАК СчетФактураВыданныйПокупателю,
	|	
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал
	|		КОНЕЦ)                                                                    КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаНДСЖурнал
	|		КОНЕЦ)                                                                    КАК СуммаНДСКомиссия,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                                                             КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                                                             КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА """"
	|		ИНАЧЕ &КодВидаОперации
	|	КОНЕЦ)                                                                        КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	""""                                                                          КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|	
	|ИЗ
	|	Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	ПО
	|		Покупатели.Покупатель = ТаблицаСуммДокументов.Покупатель
	|		И (Покупатели.НомерСчетаФактуры = ТаблицаСуммДокументов.НомерСчетаФактурыКомиссионера)
	|		И (НАЧАЛОПЕРИОДА(ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаКомиссионера, ДЕНЬ)
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|				ИЛИ ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1,1,1))
	|		И ТаблицаСуммДокументов.ТипСчетаФактуры = &ИдентификаторСчетФактураКомиссионеру
	|ГДЕ
	|	Покупатели.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|														  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Покупатели.НомерСтроки,
	|	Покупатели.Покупатель,
	|	Покупатели.КПППокупателя,
	|	Покупатели.ИННПокупателя
	|";
#КонецОбласти
	
#Область ТекстЗапросаПолученныеСчетаФактуры
	ТекстЗапросаПолученныеСчетаФактуры = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаСуммДокументов.Организация КАК Организация,
	|	ТаблицаСуммДокументов.Контрагент КАК Контрагент,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления КАК ДатаВыставленияПолучения,
	|	&ВыставленВЭлектронномВиде КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации КАК КодВидаОперации,
	|	&НомерНаПечать КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетаФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	NULL КАК НомерКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &НомерИсправления
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &Период
	|	КОНЕЦ КАК ДатаИсправления,
	|	NULL КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	Покупатели.НомерСтроки КАК ИндексСтроки,
	|	&ВалютаСчетаФактуры,
	|	СУММА(ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал) КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаСуммДокументов.СуммаНДСЖурнал) КАК СуммаНДС,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0 КАК СуммаНДСРазницаУменьшение,
	|	0 КАК СуммаНДСРазницаУвеличение,
	|	МИНИМУМ(ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	"""" КАК КППКонтрагента,
	|	"""" КАК ИППКонтрагента,
	|	NULL КАК Посредник,
	|	ТаблицаСуммДокументов.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданныйПокупателю,
	|	
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал
	|		КОНЕЦ) КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаНДСЖурнал
	|		КОНЕЦ) КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА """"
	|		ИНАЧЕ &КодВидаОперации
	|	КОНЕЦ) КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	""2"" КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|	
	|ИЗ
	|	Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	ПО
	|		Покупатели.Покупатель = ТаблицаСуммДокументов.Покупатель
	|		И (Покупатели.НомерСчетаФактуры = ТаблицаСуммДокументов.НомерСчетаФактурыКомиссионера)
	|		И (НАЧАЛОПЕРИОДА(ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаКомиссионера, ДЕНЬ)
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|				ИЛИ ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1,1,1))
	|		И ТаблицаСуммДокументов.ТипСчетаФактуры = &ИдентификаторСчетФактураКомитента
	|ГДЕ
	|	Покупатели.Ссылка = &Ссылка
	|	И &ДатаВыставления <> ДАТАВРЕМЯ(1,1,1)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Покупатели.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ТаблицаСуммДокументов.СчетФактураВыданныйКомиссионером,
	|	ТаблицаСуммДокументов.Организация,
	|	ТаблицаСуммДокументов.Контрагент
	|";
#КонецОбласти
	
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(ТекстЗапросаРучнаяКорректировка);
	МассивТекстов.Добавить(ТекстЗапросаСторноИсправление);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыВыставляемыйКомиссионеру);
	МассивТекстов.Добавить(ТекстЗапросаПолученныеСчетаФактуры);
	ТекстЗапроса = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ИСТИНА КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДСОборот КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДСОборот КАК НДС,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|		,
	|		,
	|		Регистратор,
	|		Организация = &Организация
	|			И СчетФактура = &СчетФактураОснование
	|			И ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление
	|			И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	) КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПродаж.Регистратор <> &Ссылка
	|	И (НДСЗаписиКнигиПродаж.СуммаБезНДСОборот > 0
	|		ИЛИ НДСЗаписиКнигиПродаж.НДСОборот > 0)
	|
	|";
	
	ТекстЗапросаВыставляемыйКомиссионеру = "
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|		ИНАЧЕ &ДатаКомиссионера 
	|	КОНЕЦ КАК Период,
	|	&Организация КАК Организация,
	|	Покупатели.Покупатель КАК Покупатель,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &СчетФактураОснование
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК СчетФактура,
	|	ТаблицаСуммДокументов.ВидЦенностиПродажи КАК ВидЦенности,
	|	ТаблицаСуммДокументов.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	NULL КАК ДатаОплаты,
	|	NULL КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация) КАК Событие,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|		ИНАЧЕ &ДатаКомиссионера 
	|	КОНЕЦ КАК ДатаСобытия,
	|	&ЗаписьДопЛиста КАК ЗаписьДополнительногоЛиста, 
	|	ВЫБОР
	|		КОГДА &ЗаписьДопЛиста
	|			ТОГДА &ДатаКомиссионера
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	NULL КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	&Исправление КАК Исправление,
	|	ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера,
	|	СУММА(ТаблицаСуммДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаСуммДокументов.СуммаНДС) КАК НДС,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты
	|ИЗ
	|	Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	ПО
	|		Покупатели.Покупатель = ТаблицаСуммДокументов.Покупатель
	|		И (Покупатели.НомерСчетаФактуры = ТаблицаСуммДокументов.НомерСчетаФактурыКомиссионера)
	|		И (НАЧАЛОПЕРИОДА(ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаКомиссионера, ДЕНЬ)
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|				ИЛИ ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1,1,1))
	|		И ТаблицаСуммДокументов.ТипСчетаФактуры = &ИдентификаторСчетФактураКомиссионеру
	|ГДЕ
	|	Покупатели.Ссылка = &Ссылка
	|	И ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|												  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСуммДокументов.ВидЦенностиПродажи,
	|	Покупатели.Покупатель,
	|	ТаблицаСуммДокументов.СтавкаНДС.ПеречислениеСтавкаНДС,
	|	ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера";
	
	ТекстЗапроса = ТекстЗапросаСторноИсправление 
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаВыставляемыйКомиссионеру;
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция СчетФактураПредыдущееИсправление(СчетФактураОснование, НомерИсправления)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК ИсправленныйСчетФактура,
	|	СчетФактура.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактура
	|ГДЕ
	|	СчетФактура.СчетФактураОснование = &СчетФактураОснование
	|	И СчетФактура.Проведен
	|	И СчетФактура.Исправление
	|	И СчетФактура.НомерИсправления <> &НомерИсправления
	|";
	
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	Запрос.УстановитьПараметр("НомерИсправления", НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленныйСчетФактура = Неопределено;
	НомерИсправленияЧислом = ?(ЗначениеЗаполнено(НомерИсправления),Число(НомерИсправления),1);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленныйСчетФактура = Выборка.ИсправленныйСчетФактура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленныйСчетФактура
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Партнер                                КАК Партнер,
	|	&Договор                                КАК Договор,
	|	&Контрагент                             КАК Контрагент,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&ВалютаСчетаФактуры                     КАК Валюта,
	|	&СуммаНДС                               КАК Сумма,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК РазделительЗаписи,
	|	&ИнформацияПоИсправлению                КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	ЛОЖЬ                                    КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО                            КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО                            КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураКомиссионеру) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ комиссионерам'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры комиссионерам'");
	КонецЕсли;	
	
	Если ЕстьСчетаФактурыКОформлению(Параметры) Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураКомиссионеру());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураКомиссионеру());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураКомиссионеру() Экспорт
	
	Возврат "Документ.СчетФактураКомиссионеру.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	КомандаПечати.Порядок = 1;
	
	// Счет-фактура (в валюте)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактураВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)'");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
	КомандаПечати.Порядок = 2;
	
	// Универсальный передаточный документ (УПД)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 3;
	
КонецПроцедуры

// Функция формирует печатную форму Счета-фактуры.
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка - Массив ссылок на документы, по которым необходимо получить данные.
//	
// Возвращаемое значение:
//  - Неопределено
// 	- Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
// 		* РезультатПоКонтрагентам - РезультатЗапроса
// 		* ПрослеживаемыеКомплектующие -  см. УчетПрослеживаемыхТоваровЛокализация.ПрослеживаемыеКомплектующиеДляПечатиДанных
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеСчетаФактуры.Ссылка КАК Ссылка,
	|	ДанныеСчетаФактуры.ДокументОснование КАК ДокументОснование,
	|	ДанныеСчетаФактуры.Дата КАК Дата
	|ПОМЕСТИТЬ СчетаФактурыОснования
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК ДанныеСчетаФактуры
	|ГДЕ
	|	ДанныеСчетаФактуры.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	Покупатели.Покупатель КАК Покупатель,
	|	СчетаФактуры.Дата КАК Дата,
	|	Покупатели.НомерСчетаФактуры КАК Номер,
	|	СчетаФактуры.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеКонтрагента.ОбособленноеПодразделение, ЛОЖЬ)
	|			ТОГДА ДанныеКонтрагента.ГоловнойКонтрагент
	|		ИНАЧЕ Покупатели.Покупатель
	|	КОНЕЦ КАК Контрагент,
	|
	|	ВЫБОР
	|		КОГДА Покупатели.КПППокупателя ПОДОБНО """" ТОГДА
	|			ВЫБОР
	|				КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Контрагенты ТОГДА
	|					""""
	|				КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Организации ТОГДА
	|					ВЫБОР
	|						КОГДА ДанныеОрганизацийПокупатель.КрупнейшийНалогоплательщик ТОГДА
	|							ДанныеОрганизацийПокупатель.КрупнейшийНалогоплательщикКПП
	|						ИНАЧЕ
	|							ДанныеОрганизацийПокупатель.КПП
	|						КОНЕЦ
	|				ИНАЧЕ
	|					""""
	|				КОНЕЦ
	|		ИНАЧЕ
	|			Покупатели.КПППокупателя
	|		КОНЕЦ КАК КПППокупателя,
	|
	|	ВЫБОР
	|		КОГДА Покупатели.ИННПокупателя ПОДОБНО """" ТОГДА
	|			ВЫБОР
	|				КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Контрагенты ТОГДА
	|					ЕстьNULL(ДанныеКонтрагента.ИНН, """")
	|				КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Организации ТОГДА
	|					ЕстьNULL(ДанныеОрганизацийПокупатель.ИНН, """")
	|				ИНАЧЕ
	|					""""
	|				КОНЕЦ
	|		ИНАЧЕ 
	|			Покупатели.ИННПокупателя
	|		КОНЕЦ КАК ИННПокупателя
	|
	|ПОМЕСТИТЬ СчетаФактурыОснованияДанныеШапки
	|
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|		ПО СчетаФактуры.Ссылка = Покупатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
	|		ПО ДанныеКонтрагента.Ссылка = Покупатели.Покупатель
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПокупатель
	|		ПО ДанныеОрганизацийПокупатель.Ссылка = Покупатели.Покупатель
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номер,
	|	Дата,
	|	Покупатель,
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	СчетаФактурыОснования.ДокументОснование.Организация КАК Организация,
	|	СчетаФактурыОснования.ДокументОснование.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	СчетаФактурыОснования.Дата КАК Период
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса  = Запрос.Выполнить();
	
	// Получим КПП организации с учетом истории.
	Обработки.ПечатьОбщихФорм.ПоместитьВременнуюТаблицуДанныхПоставщика(МенеджерВременныхТаблиц);
	Запрос.Текст = "УНИЧТОЖИТЬ ТаблицаДанныхДокументов";
	Запрос.Выполнить();
	
	МассивОснований = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	
	ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований);
	
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",Константы.ВалютаУправленческогоУчета.Получить());
	
	// Актуализировать расчеты для получения сумм по товарам документа-основания
	Если Не ПараметрыПечати.ПечатьВВалюте Тогда
		
		Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаДанныхДокументов КАК ДанныеДокументов
			|ГДЕ 
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
			
		Иначе
			
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		ТаблицаДанныхДокументов КАК ДанныеДокументов
			|	ПО
			|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
			|
			|ГДЕ
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	И РасчетыСКлиентами.Активность
			|";
			
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
			
			Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
				КонецРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
				АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
				Попытка
					РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(КонецРасчета, АналитикиРасчета);
				Исключение
					ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
					|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	СформироватьВременнуюТаблицуТоваровДляПечати(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати);
	СформироватьВТПорядковыеНомераТаблицыТоваровИПредставления5а(МенеджерВременныхТаблиц, ПараметрыПечати);
	
	Запрос.Текст = ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры(ПараметрыПечати)
		+ ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры()
		+ ТекстЗапросаДанныхПрослеживаемыеКомплектующие();;
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("ПредставлениеСчетФактураКомиссионера", НСтр("ru='счет-фактура комиссионера'"));
	Запрос.УстановитьПараметр("ПредставлениеСчетФактураПосредника", НСтр("ru='счет-фактура посредника'"));
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	МассивОперацийПередачаНаКомиссию = Новый Массив;
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	Запрос.УстановитьПараметр("ХозяйственныеОперацииПередачаНаКомиссию", МассивОперацийПередачаНаКомиссию);
	
	МассивРезультатов			= Запрос.ВыполнитьПакет();
	КоличествоРезультатов		= МассивРезультатов.Количество();
	РезультатПоШапке			= МассивРезультатов[КоличествоРезультатов - 4];
	РезультатПоКонтрагентам		= МассивРезультатов[КоличествоРезультатов - 3];
	РезультатПоТабличнойЧасти	= МассивРезультатов[КоличествоРезультатов - 2];
	ПрослеживаемыеКомплектующие	= УчетПрослеживаемыхТоваровЛокализация.ПрослеживаемыеКомплектующиеДляПечатиДанных(
									МассивРезультатов[КоличествоРезультатов - 1]);
	
	СтруктураДанныхДляПечати  = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",				РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти",		РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоКонтрагентам",		РезультатПоКонтрагентам);
	СтруктураДанныхДляПечати.Вставить("ПрослеживаемыеКомплектующие",	ПрослеживаемыеКомплектующие);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыУПД(Знач ПараметрыПечати, МассивОбъектов) Экспорт
	
	ПараметрыПечати.Вставить("ДополнитьДаннымиУПД", Истина);
	ПараметрыПечати.Вставить("ПечатьВВалюте", Ложь);
	Возврат ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов);
	
КонецФункции

// Определяет счета-фактуры коммисионеру для печати по переданным документам-основаниям.
//
// Параметры:
//	МассивОбъектов - Массив из ДокументСсылка - Документ-основания, для которых необходимо найти счета-фактуры
//	ПечатьВВалюте - Булево - Признак печати счетов-фактуры в валюте.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* СчетаФактурыНаПечать - Массив из ДокументСсылка.СчетФактураКомиссионеру - Найденные счета-фактуры для печати.
//  * ТаблицаОшибок - ТаблицаЗначений - Документы-основания, по которым счет-фактура не может быть напечатан:
//     * ДокументОснование - ДокументСсылка
//     * НеТребуетсяСчетФактура - Булево
//     * НеТребуетсяПечатьВВалюте - Булево
//     * НеВыставленСчетФактура - Булево
//
Функция ПолучитьСчетаФактурыНаПечать(МассивОбъектов, ПечатьВВалюте = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "";
	ПервыйТип    = Истина;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		ИмяОбъекта = Сред(СтруктураОбъектов.Ключ, 10);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДокументОснование_" + ИмяОбъекта, СтруктураОбъектов.Значение);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	ЛОЖЬ КАК НеТребуетсяСчетФактура,
		|	ВЫБОР
		|		КОГДА &ПечатьВВалюте И ДанныеДокумента.Валюта = ДанныеДокумента.Ссылка.Организация.ВалютаРегламентированногоУчета ТОГДА
		|			ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК НеТребуетсяПечатьВВалюте
		|		
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	Документ.%ИмяОбъекта% КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка В (&ДокументОснование_%ИмяОбъекта%)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяОбъекта%", ИмяОбъекта);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаОснований", ""));
		
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка) КАК СчетФактура,
	|	ТаблицаОснований.Ссылка                 КАК ДокументОснование,
	|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
	|
	|ПОМЕСТИТЬ НомераИсправлений
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК ИсправленныйСчетФактура
	|		ПО СчетаФактуры.СчетФактураОснование = ИсправленныйСчетФактура.Ссылка
	|			И СчетаФактуры.Исправление
	|	ПО ТаблицаОснований.Ссылка = СчетаФактуры.ДокументОснование
	|		И НЕ ТаблицаОснований.НеТребуетсяСчетФактура
	|		И НЕ ТаблицаОснований.НеТребуетсяПечатьВВалюте
	|		И СчетаФактуры.Проведен
	|		И НЕ СчетаФактуры.ПометкаУдаления
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка),
	|	ТаблицаОснований.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования.ДокументОснование КАК Ссылка
	|
	|ПОМЕСТИТЬ ОснованияСоСчетФактурой
	|ИЗ
	|	НомераИсправлений КАК СчетаФактурыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураКомиссионеру.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НомераИсправлений КАК НомераИсправлений
	|	ПО
	|		НомераИсправлений.НомерИсправления = СчетФактураКомиссионеру.НомерИсправления
	|		И НомераИсправлений.СчетФактура    = ВЫБОР КОГДА СчетФактураКомиссионеру.Исправление ТОГДА
	|		                                         СчетФактураКомиссионеру.СчетФактураОснование
	|		                                     ИНАЧЕ
	|		                                         СчетФактураКомиссионеру.Ссылка
	|		                                     КОНЕЦ
	|		И СчетФактураКомиссионеру.Проведен
	|		И НЕ СчетФактураКомиссионеру.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка                   КАК ДокументОснование,
	|	ТаблицаОснований.НеТребуетсяСчетФактура   КАК НеТребуетсяСчетФактура,
	|	ТаблицаОснований.НеТребуетсяПечатьВВалюте КАК НеТребуетсяПечатьВВалюте,
	|	ВЫБОР
	|		КОГДА ОснованияСоСчетФактурой.Ссылка ЕСТЬ NULL ТОГДА
	|			ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                     КАК НеВыставленСчетФактура
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ОснованияСоСчетФактурой КАК ОснованияСоСчетФактурой
	|	ПО ТаблицаОснований.Ссылка = ОснованияСоСчетФактурой.Ссылка";
	
	Запрос.УстановитьПараметр("ПечатьВВалюте", ПечатьВВалюте);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	СчетаФактурыНаПечать = РезультатЗапроса[3].Выгрузить().ВыгрузитьКолонку("СчетФактура");
	ТаблицаОшибок        = РезультатЗапроса[4].Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("СчетаФактурыНаПечать", СчетаФактурыНаПечать);
	Структура.Вставить("ТаблицаОшибок",        ТаблицаОшибок);
	
	Возврат Структура;
	
КонецФункции

Процедура ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстЗапроса           = "";
	ТекстОтветственныеЛица = "";
	ПервыйТип              = Истина;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ОбъектыТипа = ТипОснования.Значение;
		ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
		
		Запрос.Параметры.Вставить("ДокументОснование_" + ИмяОбъекта, ОбъектыТипа);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекстОтветственныеЛица) Тогда
			ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = Документы[ИмяОбъекта];
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса +
			МенеджерОбъекта.ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура();
			
		ИмяВременнойТаблицы = ИмяОбъекта + "ОтветственныеЛица";
		
		Если ИмяОбъекта = "ОтчетПоКомиссииМеждуОрганизациями" Тогда
			
			РеквизитыОтветственныеЛица = Новый Структура(
				"Руководитель, ГлавныйБухгалтер",
				Перечисления.ОтветственныеЛицаОрганизаций.Руководитель,
				Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
			
			ПараметрыОтветственныхЛиц = ОтветственныеЛицаСервер.ПараметрыОтветственныхЛицПоУмолчанию();
			ПараметрыОтветственныхЛиц.ИмяРеквизитаОрганизация = "Организация";
			ПараметрыОтветственныхЛиц.РеквизитыОтветственныеЛица = РеквизитыОтветственныеЛица;
			ПараметрыОтветственныхЛиц.ИмяТаблицыОтветственныеЛица = ИмяВременнойТаблицы;
			
			ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
				ОбъектыТипа, МенеджерВременныхТаблиц, ПараметрыОтветственныхЛиц);
			
		Иначе
			
			ПараметрыОтветственныхЛиц = ОтветственныеЛицаСервер.ПараметрыОтветственныхЛицПоУмолчанию();
			ПараметрыОтветственныхЛиц.ИмяТаблицыОтветственныеЛица = ИмяВременнойТаблицы;
			
			ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
				ОбъектыТипа, МенеджерВременныхТаблиц, ПараметрыОтветственныхЛиц);
			
		КонецЕсли;
		
		ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                       КАК Ссылка,
		|	Таблица.РуководительНаименование     КАК РуководительНаименование,
		|	Таблица.РуководительДолжность        КАК РуководительДолжность,
		|	Таблица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтерНаименование
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	" + ИмяВременнойТаблицы + " КАК Таблица";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаДанныхДокументов", ""));
		ТекстОтветственныеЛица = СтрЗаменить(ТекстОтветственныеЛица,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаОтветственныеЛица", ""));
			
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = ТекстЗапроса + ТекстОтветственныеЛица;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВременнуюТаблицуТоваровДляПечати(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстОбщейТаблицыТовары = "";
	ПервыйТип               = Истина;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
		ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = НЕ ПараметрыПечати.ПечатьВВалюте;
		ПараметрыЗаполнения.АктуализироватьРасчеты = Ложь;
		
		ИмяОбъекта = Сред(ТипОснования.Ключ, 10);
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = Документы[ИмяОбъекта];
		КонецЕсли;
		МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		
		Если Не ПустаяСтрока(ТекстОбщейТаблицыТовары) Тогда
			ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                    КАК Ссылка,
		|	ТаблицаДокумента.НомерСтроки                               КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура                              КАК Номенклатура,
		|	ТаблицаДокумента.Характеристика                            КАК Характеристика,
		|	ТаблицаДокумента.Серия                                     КАК Серия,
		|	ТаблицаДокумента.Упаковка                                  КАК Упаковка,
		|	ТаблицаДокумента.НомерГТД                                  КАК НомерГТД,
		|	ТаблицаДокумента.Количество                                КАК Количество,
		|	ТаблицаДокумента.КоличествоУпаковок                        КАК КоличествоУпаковок,
		|	ТаблицаДокумента.КоличествоПоРНПТ                          КАК КоличествоПоРНПТ,
		|	ТаблицаДокумента.СуммаБезНДС                               КАК СуммаБезНДС,
		|	ТаблицаДокумента.СтавкаНДС                                 КАК СтавкаНДС,
		|	ТаблицаДокумента.СуммаНДС                                  КАК СуммаНДС,
		|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера              КАК ДатаСчетаФактурыКомиссионера,
		|	ТаблицаДокумента.НомерСчетаФактурыКомиссионера             КАК НомерСчетаФактурыКомиссионера,
		|	ТаблицаДокумента.Покупатель                                КАК Покупатель,
		|	ТаблицаДокумента.ЭтоТовар                                  КАК ЭтоТовар
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	" + ИмяОбъекта + "ТаблицаТоваров КАК ТаблицаДокумента";
		
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаТоваров", ""));
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстРезультирующейТаблицы = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                                    КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки                               КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура                              КАК Номенклатура,
	|	ДанныеНоменклатуры.НаименованиеПолное                    КАК НоменклатураНаименование,
	|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
	|		ДанныеНоменклатуры.Артикул
	|	ИНАЧЕ
	|		ДанныеНоменклатуры.Код
	|	КОНЕЦ                                                    КАК НоменклатураКод,
	|	ЛОЖЬ                                                     КАК ЭтоВозвратнаяТара,
	|	ВЫБОР 
	|		КОГДА НЕ ДанныеУпаковки.Ссылка ЕСТЬ NULL ТОГДА
	|			ДанныеУпаковки.ЕдиницаИзмерения
	|		КОГДА ДанныеНоменклатуры.Ссылка ЕСТЬ NULL ТОГДА
	|			ТаблицаТоваров.Упаковка
	|		ИНАЧЕ
	|			ДанныеНоменклатуры.ЕдиницаИзмерения
	|	КОНЕЦ                                                    КАК ЕдиницаИзмерения,
	|	ТаблицаТоваров.Характеристика                            КАК Характеристика,
	|	ТаблицаТоваров.Серия                                     КАК Серия,
	|	ТаблицаТоваров.НомерГТД                                  КАК НомерГТД,
	|	ТаблицаТоваров.СтавкаНДС                                 КАК СтавкаНДС,
	|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.Количество
	|	ИНАЧЕ
	|		ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ                                                    КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ                          КАК КоличествоПоРНПТ,
	|	ВЫБОР КОГДА ТаблицаТоваров.Количество = 0 ТОГДА
	|		0
	|	КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	ИНАЧЕ
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ                                                    КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС                               КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС                                  КАК СуммаНДС,
	|	ТаблицаТоваров.Покупатель                                КАК Покупатель,
	|	ТаблицаТоваров.ДатаСчетаФактурыКомиссионера              КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаТоваров.НомерСчетаФактурыКомиссионера             КАК НомерСчетаФактурыКомиссионера
	|
	|ПОМЕСТИТЬ ТаблицаТоваровДокументов
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеУпаковки
	|		ПО НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			И ТаблицаТоваров.Упаковка = ДанныеУпаковки.Ссылка";
	
	Запрос.Текст = ТекстОбщейТаблицыТовары + ТекстРезультирующейТаблицы;
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры(ПараметрыПечати)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаДокумента.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьПрослеживаемыеТовары
	|ПОМЕСТИТЬ
	|	НоменклатураДокументов
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ПО СчетаФактурыОснования.Ссылка = Покупатели.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровДокументов КАК ТаблицаДокумента
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаДокумента.Ссылка
	|		И Покупатели.Покупатель = ТаблицаДокумента.Покупатель
	|		И (ТаблицаДокумента.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ ТаблицаДокумента.ДатаСчетаФактурыКомиссионера = НАЧАЛОПЕРИОДА(СчетаФактурыОснования.Дата, ДЕНЬ))
	|		И (Покупатели.НомерСчетаФактуры = ТаблицаДокумента.НомерСчетаФактурыКомиссионера)
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыОснования.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеОснований.НалогообложениеНДС КАК НалогообложениеНДС,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеОрганизацийПоставщик.ГоловнаяОрганизация
	|	ИНАЧЕ
	|		ДанныеСчетаФактуры.Организация
	|	КОНЕЦ КАК Организация,
	|	
	|	ВЫБОР КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ДанныеСчетаФактуры.Организация
	|	ИНАЧЕ
	|		ДанныеОснований.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	ДанныеПоставщика.ИндексПодразделения КАК ЦифровойИндекс,
	|
	|	ДанныеПоставщика.КПППоставщика КАК КПППоставщика,
	|
	|	ДанныеОрганизацийПоставщик.Префикс КАК Префикс,
	|	ДанныеСчетаФактуры.Комиссионер КАК Комиссионер,
	|	ДанныеВалюты.Ссылка КАК Валюта,
	|	ДанныеВалюты.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеВалюты.Код КАК ВалютаКод,
	|//РеквизитыОснованийДляУПД
	|	ВЫБОР
	|		КОГДА НЕ ДанныеОснований.РасчетыЧерезОтдельногоКонтрагента
	|			ИЛИ ДанныеСчетаФактуры.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ПечататьСчетФактуру
	|
	|ПОМЕСТИТЬ ДанныеОснований
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК ДанныеСчетаФактуры
	|	ПО ДанныеСчетаФактуры.Ссылка = СчетаФактурыОснования.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеОснований
	|	ПО СчетаФактурыОснования.ДокументОснование = ДанныеОснований.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПоставщик
	|	ПО ДанныеСчетаФактуры.Организация = ДанныеОрганизацийПоставщик.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоставщика КАК ДанныеПоставщика
	|	ПО ДанныеПоставщика.Ссылка = СчетаФактурыОснования.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане.СрезПоследних КАК ДанныеПодразделений
	|	ПО ДанныеПодразделений.Организация = ДанныеСчетаФактуры.Организация
	|		И ДанныеПодразделений.Подразделение = ДанныеОснований.Подразделение
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
	|	ПО ДанныеОснований.Валюта = ДанныеВалюты.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.Организация <> ДанныеОснований.Комиссионер ТОГДА
	|			&ПредставлениеСчетФактураКомиссионера
	|		ИНАЧЕ &ПредставлениеСчетФактура
	|	КОНЕЦ                                                 КАК ПредставлениеДокумента,
	|	ДанныеДокумента.Номер                                 КАК Номер,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ЕСТЬNULL(ДанныеДокумента.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
	|	ИНАЧЕ 
	|		ДанныеДокумента.Дата
	|	КОНЕЦ                                                 КАК Дата,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.НомерИсправления 
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК НомерИсправления,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК ДатаИсправления,
	|	ДанныеДокумента.Исправление                           КАК Исправление,
	|	ЛОЖЬ                                                  КАК КорректировочныйСчетФактура,
	|	ДанныеДокумента.СтрокаПлатежноРасчетныеДокументы      КАК СтрокаПоДокументу,
	|	ДанныеДокумента.Валюта                                КАК ВалютаСчетаФактуры,
	|	ДанныеОснований.Организация                           КАК Организация,
	|	ДанныеОснований.НалогообложениеНДС                    КАК НалогообложениеНДС,
	|	ДанныеОснований.КПППоставщика                         КАК КПППоставщика,
	|	ДанныеОснований.Грузоотправитель                      КАК Грузоотправитель,
	|	ДанныеОснований.Префикс                               КАК Префикс,
	|	ДанныеОснований.ЦифровойИндекс                        КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование     КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность        КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ДанныеОснований.Валюта                                КАК Валюта,
	|	ДанныеОснований.ВалютаНаименованиеПолное              КАК ВалютаНаименованиеПолное,
	|	ДанныеОснований.ВалютаКод                             КАК ВалютаКод,
	|	ПредставленияСтрок5а.ПредставлениеСтроки5а            КАК ПредставлениеСтроки5а,
	|	//РеквизитыОснованийДляУПД
	|	//ДанныеУПДВыданного
	|	ЛОЖЬ                                                  КАК ТолькоУслуги,
	|	НоменклатураДокументов.ЕстьПрослеживаемыеТовары       КАК ЕстьПрослеживаемыеТовары,
	|	НЕОПРЕДЕЛЕНО                                          КАК ПредставлениеВыставленКомиссионеру
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО СчетаФактурыОснования.Ссылка = НоменклатураДокументов.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК ДанныеДокумента
	|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснований КАК ДанныеОснований
	|	ПО СчетаФактурыОснования.Ссылка = ДанныеОснований.Ссылка
	|		И ДанныеОснований.ПечататьСчетФактуру
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаОтветственныеЛица.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПредставленияСтрок5а КАК ПредставленияСтрок5а
	|	ПО ПредставленияСтрок5а.СчетФактура = СчетаФактурыОснования.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	СчетаФактурыДанныеШапки.Ссылка      	КАК Ссылка,
	|	СчетаФактурыДанныеШапки.Покупатель		КАК Грузополучатель,
	|	СчетаФактурыДанныеШапки.Контрагент 		КАК Контрагент,
	|	СчетаФактурыДанныеШапки.КПППокупателя 	КАК КПППокупателя,
	|	СчетаФактурыДанныеШапки.ИННПокупателя 	КАК ИННПокупателя
	|ИЗ
	|	СчетаФактурыОснованияДанныеШапки КАК СчетаФактурыДанныеШапки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ПараметрыПечати.Свойство("ДополнитьДаннымиУПД") И ПараметрыПечати.ДополнитьДаннымиУПД Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//РеквизитыОснованийДляУПД",
		"	ДанныеОснований.Основание           КАК Основание,
		|	ДанныеОснований.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
		|	ДанныеОснований.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
		|	ДанныеОснований.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
		|	ДанныеОснований.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
		|	ДанныеОснований.ДоверенностьНомер   КАК ДоверенностьНомер,
		|	ДанныеОснований.ДоверенностьДата    КАК ДоверенностьДата,
		|	ДанныеОснований.ДоверенностьВыдана  КАК ДоверенностьВыдана,
		|	ДанныеОснований.ДоверенностьЛицо    КАК ДоверенностьЛицо,
		|	ДанныеОснований.Кладовщик           КАК Кладовщик,
		|	ДанныеОснований.ДолжностьКладовщика КАК ДолжностьКладовщика,");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеУПДВыданного",
		"	ИСТИНА                              КАК ВыводитьКодНоменклатуры,
		|	ИСТИНА                              КАК ТребуетсяНаличиеСФ,
		|	ЛОЖЬ                                КАК ПечатьНеТребуется,
		|	1                                   КАК СтатусУПД,");
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка                                 КАК Ссылка,
	|	МИНИМУМ(ТаблицаДокумента.НомерСтроки)                        КАК НомерСтроки,
	|
	|	ТаблицаДокумента.Номенклатура                                КАК Номенклатура,
	|	ТаблицаДокумента.НоменклатураНаименование                    КАК НоменклатураНаименование,
	|	ТаблицаДокумента.НоменклатураКод                             КАК НоменклатураКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения                            КАК ЕдиницаИзмерения,
	|	ДанныеЕдиницыИзмерения.Представление                         КАК ЕдиницаИзмеренияНаименование,
	|	ДанныеЕдиницыИзмерения.Код                                   КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.НомерГТД.ЕдиницаИзмерения                   КАК ЕдиницаИзмеренияТНВЭД,
	|	ТаблицаДокумента.НомерГТД.ЕдиницаИзмерения.Представление     КАК ЕдиницаИзмеренияТНВЭДНаименование,
	|	ТаблицаДокумента.НомерГТД.ЕдиницаИзмерения.Код               КАК ЕдиницаИзмеренияТНВЭДКод,
	|	ТаблицаДокумента.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(ДанныеХарактеристики.НаименованиеПолное, """")      КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.Серия.Наименование                          КАК СерияНаименование,
	|	ТаблицаДокумента.НомерГТД                                    КАК НомерГТДСсылка,
	|	ЕСТЬNULL(ТаблицаДокумента.НомерГТД.ТипНомераГТД, НЕОПРЕДЕЛЕНО) КАК ТипНомераГТД,
	|	ТаблицаДокумента.НомерГТД                                    КАК НомерГТД,
	|	ДанныеСтраныПросхождения.Ссылка                              КАК СтранаПроисхождения,
	|	ДанныеСтраныПросхождения.Код                                 КАК СтранаПроисхожденияКод,
	|	СУММА(ТаблицаДокумента.Количество)                           КАК Количество,
	|	СУММА(ТаблицаДокумента.КоличествоПоРНПТ)                     КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.Цена                                        КАК Цена,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС)                          КАК СуммаБезНДС,
	|	СУММА(ТаблицаДокумента.СуммаНДС)                             КАК СуммаНДС,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС
	|		+ ТаблицаДокумента.СуммаНДС)                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС                                   КАК СтавкаНДС,
	|
	|	Покупатели.Покупатель                                        КАК Покупатель,
	|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера                КАК Дата,
	|	ЛОЖЬ                                                         КАК ЭтоВозвратнаяТара,
	|	НЕОПРЕДЕЛЕНО                                                 КАК КодТНВЭД
	|
	|ИЗ СчетаФактурыОснования КАК СчетаФактурыОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ПО СчетаФактурыОснования.Ссылка = Покупатели.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровДокументов КАК ТаблицаДокумента
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаДокумента.Ссылка
	|		И Покупатели.Покупатель = ТаблицаДокумента.Покупатель
	|		И (ТаблицаДокумента.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ ТаблицаДокумента.ДатаСчетаФактурыКомиссионера = НАЧАЛОПЕРИОДА(СчетаФактурыОснования.Дата, ДЕНЬ))
	|		И (Покупатели.НомерСчетаФактуры = ТаблицаДокумента.НомерСчетаФактурыКомиссионера)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|	ПО ТаблицаДокумента.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ДанныеХарактеристики
	|	ПО ТаблицаДокумента.Характеристика = ДанныеХарактеристики.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
	|	ПО ТаблицаДокумента.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка
	|
	|ГДЕ
	|	НЕ ТаблицаДокумента.ЭтоВозвратнаяТара
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыОснования.Ссылка,
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.НоменклатураНаименование,
	|	ТаблицаДокумента.НоменклатураКод,
	|	ТаблицаДокумента.НомерГТД.ЕдиницаИзмерения,
	|	ТаблицаДокумента.НомерГТД.ЕдиницаИзмерения.Представление,
	|	ТаблицаДокумента.НомерГТД.ЕдиницаИзмерения.Код,
	|	ТаблицаДокумента.ЕдиницаИзмерения,
	|	ДанныеЕдиницыИзмерения.Представление,
	|	ДанныеЕдиницыИзмерения.Код,
	|	ТаблицаДокумента.Характеристика,
	|	ДанныеХарактеристики.НаименованиеПолное,
	|	ТаблицаДокумента.Серия.Наименование,
	|	ТаблицаДокумента.НомерГТД,
	|	ЕСТЬNULL(ТаблицаДокумента.НомерГТД.ТипНомераГТД, НЕОПРЕДЕЛЕНО),
	|	ДанныеСтраныПросхождения.Ссылка,
	|	ТаблицаДокумента.Цена,
	|	ТаблицаДокумента.СтавкаНДС,
	|	Покупатели.Покупатель,
	|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныхПрослеживаемыеКомплектующие()
	
	ТекстЗапроса = "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка								КАК Ссылка,
	|	ТаблицаДокумента.НомерГТД							КАК НомерГТД,
	|	Комплектующие.НомерРНПТ								КАК НомерРНПТ,
	|	ВЫБОР
	|		КОГДА Комплектующие.НомерРНПТ.РегистрационныйНомер = """"
	|			ТОГДА Комплектующие.НомерРНПТ
	|		ИНАЧЕ Комплектующие.НомерРНПТ.РегистрационныйНомер
	|	КОНЕЦ												КАК НомерТовара,
	|	НомераГТД.СуммаПоРНПТ								КАК ОбщаяСуммаПоКомплекту,
	|	Комплектующие.СуммаПоРНПТ							КАК СуммаПоРНПТ,
	|	Комплектующие.КоличествоПоРНПТ						КАК Количество,
	|	Комплектующие.ЕдиницаИзмеренияТНВЭД					КАК ЕдиницаИзмерения,
	|	Комплектующие.ЕдиницаИзмеренияТНВЭД.Код				КАК ЕдиницаИзмеренияКод,
	|	Комплектующие.ЕдиницаИзмеренияТНВЭД.Представление	КАК ЕдиницаИзмеренияНаименование
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД.ПрослеживаемыеКомплектующие КАК Комплектующие
	|		ПО ТаблицаДокумента.НомерГТД = Комплектующие.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ТаблицаДокумента.НомерГТД = НомераГТД.Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьВТПорядковыеНомераТаблицыТоваровИПредставления5а(МенеджерВременныхТаблиц, ПараметрыПечати)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК СчетФактура,
	|	СчетаФактуры.ДокументОснование КАК ДокументОснование,
	|	Товары.НомерСтроки КАК НомерСтрокиСФ
	|ИЗ	ТаблицаТоваровДокументов КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОснованияДанныеШапки КАК СчетаФактуры
	|		ПО СчетаФактуры.ДокументОснование = Товары.Ссылка
	|		И СчетаФактуры.Дата = Товары.ДатаСчетаФактурыКомиссионера
	|		И СчетаФактуры.Номер = Товары.НомерСчетаФактурыКомиссионера
	|		И СчетаФактуры.Покупатель = Товары.Покупатель
	|";
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить(); // ТаблицаЗначений
	
	ПредставленияСтрок5а = Документы.СчетФактураВыданный.ПолучитьПредставленияСтроки5а(ТаблицаТоваров);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ПредставленияСтрок5а
	|ИЗ
	|	&ПредставленияСтрок5а КАК ПредставленияСтрок5а
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("ПредставленияСтрок5а", ПредставленияСтрок5а);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Контрагент";
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
