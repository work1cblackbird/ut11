#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Ответственный";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Ответственный";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"Организация, Банк", Параметры);
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Добавляет команду создания документа
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//  - Неопределено - если нет прав на создание документа Выбытие денежных документов.
//  - СтрокаТаблицыЗначений - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СправкаОПодтверждающихДокументах) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СправкаОПодтверждающихДокументах.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СправкаОПодтверждающихДокументах);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Определяет свойства полей формы в зависимости от данных
//
// Возвращаемое значение:
//    ТаблицаЗначений - таблица с колонками Поля, Условие, Свойства.
//
Функция НастройкиПолейФормы() Экспорт
	
	Финансы = ФинансоваяОтчетностьСервер;
	Настройки = ДенежныеСредстваСервер.ИнициализироватьНастройкиПолейФормы();
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодтверждающиеДокументыБезРазбиенияНомерДокумента");
	Элемент.Поля.Добавить("ПодтверждающиеДокументыБезРазбиенияДатаДокумента");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ПодтверждающийДокументЗаполнен", Истина);
	Элемент.Свойства.Вставить("Доступность", Ложь);
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодтверждающиеДокументыБезРазбиенияПервоначальнаяСПД");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.Корректировка", Ложь);
	Элемент.Свойства.Вставить("Доступность", Ложь);
	
	Возврат Настройки;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СправкаОПодтверждающихДокументах";
	КомандаПечати.Представление = НСтр("ru = 'Справка о подтверждающих документах'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаОПодтверждающихДокументах") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СправкаОПодтверждающихДокументах",
			НСтр("ru='Справка о подтверждающих документах'"),
			СформироватьСправкуОПодтверждающихДокументах(МассивОбъектов, ОбъектыПечати),,
			"Документ.СправкаОПодтверждающихДокументах.ПФ_MXL_СправкаОПодтверждающихДокументах");
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьСправкуОПодтверждающихДокументах(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СправкаОПодтверждающихДокументах_СправкаОПодтверждающихДокументах";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СправкаОПодтверждающихДокументах.ПФ_MXL_СправкаОПодтверждающихДокументах");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеДокумента.Ссылка                                   КАК Ссылка,
	|	ДанныеДокумента.Организация                              КАК Организация,
	|	ДанныеДокумента.Банк                                     КАК Банк,
	|	ДанныеДокумента.Договор.УникальныйНомерВалютногоКонтроля КАК НомерКонтракта,
	|	ДанныеДокумента.ДатаСправки                              КАК Дата
	|ИЗ
	|	Документ.СправкаОПодтверждающихДокументах КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Ссылка
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеДокумента.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПодтверждающийДокумент = Неопределено ТОГДА
	|			ДанныеДокумента.НомерДокумента
	|		ИНАЧЕ
	|			ДанныеДокумента.ПодтверждающийДокумент.Номер
	|	КОНЕЦ КАК НомерДокумента,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПодтверждающийДокумент = Неопределено ТОГДА
	|			ДанныеДокумента.ДатаДокумента
	|		ИНАЧЕ
	|			ДанныеДокумента.ПодтверждающийДокумент.Дата
	|	КОНЕЦ КАК ДатаДокумента,
	|	ДанныеДокумента.КодВидаДокумента          КАК КодВидаДокумента,
	|	ДанныеДокумента.СуммаДокумента            КАК СуммаДокумента,
	|	ДанныеДокумента.ВалютаДокумента.Код       КАК ВалютаДокумента,
	|	ДанныеДокумента.СуммаВВалютеДоговора      КАК СуммаВВалютеДоговора,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СуммаВВалютеДоговора = 0
	|			ТОГДА """"
	|		ИНАЧЕ ДанныеДокумента.ВалютаДоговора.Код
	|	КОНЕЦ КАК ВалютаДоговора,
	|	ДанныеДокумента.ПризнакПоставки           КАК ПризнакПоставки,
	|	ДанныеДокумента.ОжидаемыйСрок             КАК ОжидаемыйСрок,
	|	ДанныеДокумента.Страна.Код                КАК Страна,
	|	ЕСТЬNULL(ДанныеДокумента.ПервоначальнаяСПД.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Корректировка,
	|	ДанныеДокумента.Комментарий               КАК Примечание,
	|	ДанныеДокумента.Ссылка                    КАК Ссылка
	|ИЗ
	|	Документ.СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.НомерСтроки
	|ИТОГИ ПО
	|	ДанныеДокумента.Ссылка
	|";
	
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатЗапроса[0].Выбрать();
	ВыборкаПодтверждающиеДокументы = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДокументы);
		СтрокаВПараметрыМакета(ВыборкаДокументы.НомерКонтракта, "КонтрактНомер_", ОбластьМакета.Параметры, 22);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		МассивОбластейПримечание = Новый Массив;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодтверждающиеДокументы");
		
		ВыборкаПодтверждающиеДокументы.НайтиСледующий(Новый Структура("Ссылка", ВыборкаДокументы.Ссылка));
		ВыборкаПоСтрокам = ВыборкаПодтверждающиеДокументы.Выбрать();
		
		Пока ВыборкаПоСтрокам.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоСтрокам);
			Если ЗначениеЗаполнено(ВыборкаПоСтрокам.Примечание) Тогда
				ОбластьПримечание = Макет.ПолучитьОбласть("Примечание");
				ОбластьПримечание.Параметры.Заполнить(ВыборкаПоСтрокам);
				МассивОбластейПримечание.Добавить(ОбластьПримечание);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьМакета, ВыборкаПоСтрокам.Уровень());
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПримечаниеШапка");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		Для Каждого ТекОбластьПримечание Из МассивОбластейПримечание Цикл
			ТабличныйДокумент.Вывести(ТекОбластьПримечание)
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура СтрокаВПараметрыМакета(Строка, ПрефиксПараметра, ПараметрыМакета, ДлинаОбластиМакета)
	
	ДлинаСтроки = Мин(СтрДлина(Строка), ДлинаОбластиМакета);
	Индекс = 1;
	
	Пока Индекс <= ДлинаСтроки Цикл
		ИмяПараметра = ПрефиксПараметра + Индекс;
		ПараметрыМакета[ИмяПараметра] = Сред(Строка, Индекс, 1);
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли