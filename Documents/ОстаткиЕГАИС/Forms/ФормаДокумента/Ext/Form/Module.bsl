#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Элементы.ОстаткиПоДаннымЕГАИСХарактеристика.Видимость = ИнтеграцияИС.ХарактеристикиИспользуются();
	Элементы.ОстаткиПоДаннымЕГАИССерия.Видимость = ИнтеграцияИС.СерииИспользуются();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВерсионированиеОбъектов") Тогда
		МодульВерсионированиеОбъектов = ОбщегоНазначения.ОбщийМодуль("ВерсионированиеОбъектов");
		МодульВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФормИСКлиентСерверПереопределяемый.УстановитьПараметрыВыбораНоменклатуры(
		ЭтотОбъект,
		ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииЕГАИС(),
		"ОстаткиПоДаннымЕГАИСНоменклатура");
	
	СобытияФормИСПереопределяемый.УстановитьСвязиПараметровВыбораСНоменклатурой(ЭтотОбъект,   "ОстаткиПоДаннымЕГАИСХарактеристика", "Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные.Номенклатура");
	СобытияФормИСПереопределяемый.УстановитьСвязиПараметровВыбораСНоменклатурой(ЭтотОбъект,   "ОстаткиПоДаннымЕГАИССерия", "Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные.Номенклатура");
	СобытияФормИСПереопределяемый.УстановитьСвязиПараметровВыбораСХарактеристикой(ЭтотОбъект, "ОстаткиПоДаннымЕГАИССерия", "Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные.Характеристика");

	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСостоянияЕГАИС"
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		Если Параметр.Свойство("ОбъектИзменен")
			И Параметр.ОбъектИзменен Тогда
			Прочитать();
		Иначе
			ОбновитьСтатусЕГАИС();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = "ВыполненОбменЕГАИС"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусВФормахДокументов)) Тогда
		
		ОбновитьСтатусЕГАИС();
		
	КонецЕсли;
	
	ОбщегоНазначенияСобытияФормИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриСозданииЧтенииНаСервере();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияСобытияФормИСКлиентПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаписатьСоответствиеНоменклатурыЕГАИС();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	РазблокироватьДанныеФормыДляРедактирования();
	
	ИнтеграцияЕГАИС.ЗаполнитьСопоставленнуюПродукцию(Объект.ОстаткиПоДаннымЕГАИС);
	ИнтеграцияИСПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(ЭтотОбъект, Объект.ОстаткиПоДаннымЕГАИС);
	ЗаполнитьСлужебныеРеквизиты();
	
	ИнтеграцияИСПереопределяемый.ЗаполнитьПараметрыУказанияСерийФормы(Документы.ОстаткиЕГАИС, ЭтотОбъект);
	ИнтеграцияИСПереопределяемый.ЗаполнитьСтатусыУказанияСерийФормы(ЭтотОбъект);
	
	ОбновитьСтатусЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("Основание", Неопределено);
	Оповестить("Запись_ОстаткиЕГАИС", ПараметрыЗаписи, Объект.Ссылка);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораНоменклатуры(
		Новый ОписаниеОповещения("ПриВыбореНоменклатуры", ЭтотОбъект), ВыбранноеЗначение, ИсточникВыбора);
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораСерии(
		ЭтотОбъект, ВыбранноеЗначение, ИсточникВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораНоменклатуры(
		Новый ОписаниеОповещения("ПриВыбореНоменклатуры", ЭтотОбъект), НовыйОбъект, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПринудительноЗакрытьФорму И ДанныеТекущегоЗапроса <> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("ЗакрытьФорму",      НСтр("ru = 'Отменить запросы и закрыть форму'"));
		Кнопки.Добавить("ОжидатьЗавершения", НСтр("ru = 'Ожидать завершения'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ОбработатьОтветНаВопросПередЗакрытием", ЭтотОбъект),
			НСтр("ru = 'Запросы акцизных марок отработаны не по всем запрошенным справкам 2.
			           |Запросы отправляются раз в 32 минуты.'"),
			Кнопки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияЕГАИСПриИзменении(Элемент)
	
	Элементы.СтраницаКорректировкаОстатков.Видимость = ВидимостьКорректировкиОстатков(Объект.ОрганизацияЕГАИС, Объект.ВидДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыполнитьКомандуОбработатьНажатиеНавигационнойСсылкиПослеПроведения",
		ЭтотОбъект,
		НавигационнаяСсылкаФорматированнойСтроки);
	ВыполнитьДействиеТребующееПроведения(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	Элементы.СтраницаКорректировкаОстатков.Видимость = ВидимостьКорректировкиОстатков(Объект.ОрганизацияЕГАИС, Объект.ВидДокумента);
	
	ВидимостьСправки2 = Объект.ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре1");
	
	Элементы.ОстаткиПоДаннымЕГАИССправка2.Видимость = ВидимостьСправки2;
	Элементы.КорректировкаОстатковСправка2.Видимость = ВидимостьСправки2;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОстаткиПоДаннымЕГАИС

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ИнтеграцияИСКлиентПереопределяемый.ОбновитьКешированныеЗначенияДляУчетаСерий(Элемент, КэшированныеЗначения, ЭтотОбъект, Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ЗавершитьРедактированиеСтрокиТовары(Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент = Элементы.ОстаткиПоДаннымЕГАИСНоменклатура Тогда
		
		ЗаполнитьСпискиВыбораНоменклатуры(ТекущиеДанные);
		
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент = Элементы.ОстаткиПоДаннымЕГАИСХарактеристика Тогда
		
		ЗаполнитьСпискиВыбораХарактеристика(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	ИначеЕсли Поле = Элементы.ОстаткиПоДаннымЕГАИСКоличествоАкцизныхМарок
		И ЗначениеЗаполнено(ТекущиеДанные.ОтчетЕГАИС) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Отбор = Новый Структура;
		Отбор.Вставить("ОтчетЕГАИС", ТекущиеДанные.ОтчетЕГАИС);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Отбор);
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		
		ОткрытьФорму(
			"Отчет.ОстаткиАкцизныхМарокЕГАИС.Форма",
			ПараметрыФормы,,
			ТекущиеДанные.ОтчетЕГАИС);
	Иначе
		СобытияФормЕГАИСКлиент.ВыборЭлементаТабличнойЧастиОткрытьФормуЭлемента(ЭтотОбъект, Элемент, Поле);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСНоменклатураПриИзменении(Элемент)
	
	ПриИзмененииНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
	
	СобытияФормИСКлиентПереопределяемый.ПриНачалеВыбораНоменклатуры(
		ЭтотОбъект, ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииЕГАИС(), СтандартнаяОбработка,,
		ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(ТекущиеДанные.АлкогольнаяПродукция));
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСНоменклатураСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуСозданияНоменклатуры(
		ЭтотОбъект,
		ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(ТекущиеДанные.АлкогольнаяПродукция));
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) 
		И ((ТекущиеДанные.ХарактеристикиИспользуются И ЗначениеЗаполнено(ТекущиеДанные.Характеристика))
			ИЛИ НЕ ТекущиеДанные.ХарактеристикиИспользуются) Тогда
		ТекущиеДанные.Сопоставлено = Истина;
	Иначе
		ТекущиеДанные.Сопоставлено = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
	
	СобытияФормЕГАИСКлиентПереопределяемый.НачалоВыбораХарактеристики(ЭтотОбъект, ТекущаяСтрока, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИСХарактеристикаСоздание(Элемент, СтандартнаяОбработка)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ХарактеристикаСоздание(ЭтотОбъект, Элементы.ОстаткиПоДаннымЕГАИС.ТекущаяСтрока, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИССерияПриИзменении(Элемент)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ПриИзмененииСерии(ЭтотОбъект, Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоДаннымЕГАИССерияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьПодборСерий(Элемент.ТекстРедактирования, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКорректировкаОстатков

&НаКлиенте
Процедура КорректировкаОстатковПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не ЗначениеЗаполнено(Элементы.КорректировкаОстатков.ТекущиеДанные.АлкогольнаяПродукция) Тогда
		Элементы.КорректировкаОстатков.ТекущиеДанные.НеупакованнаяПродукция = Истина;
	КонецЕсли;
	
	СобытияФормЕГАИСКлиент.УстановитьФорматРедактированияПоляКоличество(ЭтотОбъект,
		Элементы.КорректировкаОстатков.ТекущиеДанные.НеупакованнаяПродукция,
		"КорректировкаОстатковКоличество");
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаОстатковАлкогольнаяПродукцияПриИзменении(Элемент)
	
	КорректировкаОстатковАлкогольнаяПродукцияПриИзмененииНаСервере(Элементы.КорректировкаОстатков.ТекущиеДанные.ПолучитьИдентификатор());
	
	СобытияФормЕГАИСКлиент.УстановитьФорматРедактированияПоляКоличество(ЭтотОбъект,
		Элементы.КорректировкаОстатков.ТекущиеДанные.НеупакованнаяПродукция,
		"КорректировкаОстатковКоличество");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("Документ.ОстаткиЕГАИС.Форма.ФормаДокумента.Записать");
	
	ОчиститьСообщения();
	Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРасхождениям(Команда)
	
	ОчиститьСообщения();
	ЗаполнитьПоРасхождениямНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АрхивироватьДокумент(Команда)
	
	ИнтеграцияИСКлиент.АрхивироватьДокументы(ЭтотОбъект, Объект.Ссылка, ИнтеграцияЕГАИСКлиент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда) Экспорт
	
	СобытияФормИСКлиентПереопределяемый.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("Документ.ОстаткиЕГАИС.Форма.ФормаДокумента.Провести");
	
	ОчиститьСообщения();
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("Документ.ОстаткиЕГАИС.Форма.ФормаДокумента.ПровестиИЗакрыть");
	
	ОчиститьСообщения();
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьМаркиПоВсемСправкам2(Команда)
	
	МассивСтрок = Новый Массив;

	Для Каждого СтрокаТаблицы Из Объект.ОстаткиПоДаннымЕГАИС Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
			Продолжить;
		ИначеЕсли НЕ СтрокаТаблицы.Маркируемый Тогда
			Продолжить;
		КонецЕсли;
		МассивСтрок.Добавить(СтрокаТаблицы);
		
	КонецЦикла;
	
	Если МассивСтрок.Количество() Тогда
		ПолучитьМаркиДействие = Новый ОписаниеОповещения(
			"ПолучитьМаркиДействие",
			ЭтотОбъект,
			МассивСтрок);
		ТекстВопроса = НСтр("ru = 'Будет выполнен запрос марок по всей сопоставленной маркируемой продукции.
			|Несопоставленные строки будут пропущены. Продолжить?'");
		ПоказатьВопрос(
			ПолучитьМаркиДействие,
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет,,,
			НСтр("ru = 'Запрос марок по документу'"));
		
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Укажите точное соответствие номенклатуры для заполнения соответствующих
			           |реквизитов акцизных марок в справочнике ""Штрихкоды упаковок и товаров""'"),,,
			"ОстаткиПоДаннымЕГАИСНоменклатура");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьМаркиПоВыделеннымСтрокам(Команда)
	
	ВыделенныеСтроки = Элементы.ОстаткиПоДаннымЕГАИС.ВыделенныеСтроки;
	МассивСтрок = Новый Массив;
	Отказ = Ложь;
	
	Для Каждого Идентификатор Из ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Объект.ОстаткиПоДаннымЕГАИС.НайтиПоИдентификатору(Идентификатор);
		Если Не ЗначениеЗаполнено(ДанныеСтроки.Номенклатура) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Укажите соответствие номенклатуры для заполнения соответствующих реквизитов
				           |акцизных марок в справочнике ""Штрихкоды упаковок и товаров""'"),,
				СтрШаблон("Объект.ОстаткиПоДаннымЕГАИС[%1].Номенклатура", Идентификатор),,
				Отказ);
		ИначеЕсли Не ДанныеСтроки.Маркируемый Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не требуется для немаркируемой продукции'"),,
				СтрШаблон("Объект.ОстаткиПоДаннымЕГАИС[%1].АлкогольнаяПродукция", Идентификатор),,
				Отказ);
		Иначе
			МассивСтрок.Добавить(ДанныеСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивСтрок.Количество() И Не Отказ Тогда
		ПодготовитьВыполнитьЗапросыМарокПоСправкам2(МассивСтрок);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	СобытияФормЕГАИСПереопределяемый.ДобавитьСлужебныеРеквизиты(ЭтотОбъект, "Объект.ОстаткиПоДаннымЕГАИС");
	
	ЗаполнитьСопоставленныеТовары();
	
	ИнтеграцияИСПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(ЭтотОбъект, Объект.ОстаткиПоДаннымЕГАИС);
	
	ЗаполнитьСлужебныеРеквизиты();
	
	ИнтеграцияИСПереопределяемый.ЗаполнитьПараметрыУказанияСерийФормы(Документы.ОстаткиЕГАИС, ЭтотОбъект);
	ИнтеграцияИСПереопределяемый.ЗаполнитьСтатусыУказанияСерийФормы(ЭтотОбъект);
	
	ОбновитьСтатусЕГАИС();
	
	УстановитьВидимостьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСопоставленныеТовары(АлкогольнаяПродукция = Неопределено)
	
	Колонки = "АлкогольнаяПродукция, Справка2, Номенклатура, Характеристика, Серия, НомерСтроки";
	Если ЗначениеЗаполнено(АлкогольнаяПродукция) Тогда
		ПараметрыОтбора = Новый Структура("АлкогольнаяПродукция", АлкогольнаяПродукция);
		Товары = Объект.ОстаткиПоДаннымЕГАИС.Выгрузить(ПараметрыОтбора, Колонки);
	Иначе
		Товары = Объект.ОстаткиПоДаннымЕГАИС.Выгрузить(,Колонки);
	КонецЕсли;
	
	ИнтеграцияЕГАИС.ЗаполнитьСопоставленнуюПродукцию(Товары);
	
	Для Каждого СтрокаПослеСопоставления Из Товары Цикл 
		
		СтрокаТЧ = Объект.ОстаткиПоДаннымЕГАИС.Получить(СтрокаПослеСопоставления.НомерСтроки - 1);
		
		СтрокаТЧ.СопоставленоКоличество = СтрокаПослеСопоставления.СопоставленоКоличество;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) 
			И ((СтрокаТЧ.ХарактеристикиИспользуются И ЗначениеЗаполнено(СтрокаТЧ.Характеристика))
				ИЛИ НЕ СтрокаТЧ.ХарактеристикиИспользуются) Тогда
			НоменклатураЗаполнена = Истина;
		Иначе
			НоменклатураЗаполнена = Ложь;
		КонецЕсли;
		
		Если СтрокаТЧ.СопоставленоКоличество = 1 Тогда
			СтрокаТЧ.Сопоставлено   = ЗначениеЗаполнено(СтрокаПослеСопоставления.Номенклатура);
			СтрокаТЧ.Номенклатура   = СтрокаПослеСопоставления.Номенклатура;
			СтрокаТЧ.Характеристика = СтрокаПослеСопоставления.Характеристика;
			СтрокаТЧ.Серия          = СтрокаПослеСопоставления.Серия;
		ИначеЕсли СтрокаТЧ.СопоставленоКоличество > 1 Тогда
			СтрокаТЧ.Сопоставлено = НоменклатураЗаполнена;
			СтрокаТЧ.СопоставлениеНоменклатура   = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), СтрокаТЧ.СопоставленоКоличество);
			СтрокаТЧ.СопоставлениеХарактеристика = НСтр("ru = '<Не сопоставлено>'");
		Иначе
			СтрокаТЧ.Сопоставлено = НоменклатураЗаполнена;
			СтрокаТЧ.СопоставлениеНоменклатура   = НСтр("ru = '<Не сопоставлено>'");
			СтрокаТЧ.СопоставлениеХарактеристика = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизиты()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиПоДаннымЕГАИС.АлкогольнаяПродукция КАК Ссылка,
	|	ОстаткиПоДаннымЕГАИС.АлкогольнаяПродукция.ВидПродукции.Маркируемый КАК Маркируемый,
	|	ОстаткиПоДаннымЕГАИС.АлкогольнаяПродукция.ТипПродукции КАК ТипПродукции
	|Из
	|	Документ.ОстаткиЕГАИС.ОстаткиПоДаннымЕГАИС КАК ОстаткиПоДаннымЕГАИС
	|ГДЕ
	|	ОстаткиПоДаннымЕГАИС.Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокиТЧ = Объект.ОстаткиПоДаннымЕГАИС.НайтиСтроки(
			Новый Структура("АлкогольнаяПродукция", Выборка.Ссылка));
		Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
			СтрокаТЧ.Маркируемый            = Выборка.Маркируемый;
			СтрокаТЧ.НеупакованнаяПродукция = Выборка.ТипПродукции = Перечисления.ТипыПродукцииЕГАИС.Неупакованная;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаОстатков.АлкогольнаяПродукция КАК Ссылка,
	|	КорректировкаОстатков.АлкогольнаяПродукция.ТипПродукции КАК ТипПродукции
	|Из
	|	Документ.ОстаткиЕГАИС.КорректировкаОстатков КАК КорректировкаОстатков
	|ГДЕ
	|	КорректировкаОстатков.Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокиТЧ = Объект.КорректировкаОстатков.НайтиСтроки(
			Новый Структура("АлкогольнаяПродукция", Выборка.Ссылка));
		Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
			СтрокаТЧ.НеупакованнаяПродукция = Выборка.ТипПродукции = Перечисления.ТипыПродукцииЕГАИС.Неупакованная;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОтчетыЕГАИС.Ссылка                         КАК ОтчетЕГАИС,
	|	ОтчетыЕГАИС.Справка2                       КАК Справка2,
	|	Количество(ТаблицаАкцизныеМарки.КодАкцизнойМарки) КАК КоличествоАкцизныхМарок
	|ИЗ
	|	Документ.ОстаткиЕГАИС.ОстаткиПоДаннымЕГАИС КАК ОстаткиПоДаннымЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетЕГАИС КАК ОтчетыЕГАИС
	|		ПО ОстаткиПоДаннымЕГАИС.Справка2 = ОтчетыЕГАИС.Справка2
	|		И ОтчетыЕГАИС.ДокументОснование = &Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетЕГАИС.АкцизныеМарки КАК ТаблицаАкцизныеМарки
	|		ПО ТаблицаАкцизныеМарки.Ссылка = ОтчетыЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ОтчетыЕГАИС.Ссылка)
	|ГДЕ
	|	ОстаткиПоДаннымЕГАИС.Ссылка = &Ссылка
	|	И СтатусыДокументовЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиОтчетаЕГАИС.ПолученОтчет)
	|СГРУППИРОВАТЬ ПО
	|	ОтчетыЕГАИС.Справка2,
	|	ОтчетыЕГАИС.Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	ОстаткиАкцизныхМарок = Запрос.Выполнить().Выгрузить();
	ОстаткиАкцизныхМарок.Индексы.Добавить("Справка2");
	
	ВидимостьКолонкиКоличествоАкцизныхМарок = Ложь;
	Для Каждого СтрокаТЧ Из Объект.ОстаткиПоДаннымЕГАИС Цикл
		
		Если СтрокаТЧ.ОжидаетВыполненияЗапросаМарок Тогда
			ВидимостьКолонкиКоличествоАкцизныхМарок = Истина;
		КонецЕсли;
		
		НайденнаяСтрока = ОстаткиАкцизныхМарок.Найти(СтрокаТЧ.Справка2, "Справка2");
		Если НайденнаяСтрока = Неопределено Тогда
			СтрокаТЧ.КоличествоАкцизныхМарок = 0;
			СтрокаТЧ.ОтчетЕГАИС              = Неопределено;
		Иначе
			СтрокаТЧ.КоличествоАкцизныхМарок = НайденнаяСтрока.КоличествоАкцизныхМарок;
			СтрокаТЧ.ОтчетЕГАИС              = НайденнаяСтрока.ОтчетЕГАИС;
			ВидимостьКолонкиКоличествоАкцизныхМарок = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ОстаткиПоДаннымЕГАИСКоличествоАкцизныхМарок.Видимость = ВидимостьКолонкиКоличествоАкцизныхМарок;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСоответствиеНоменклатурыЕГАИС()
	
	НастройкиСопоставления = ИнтеграцияЕГАИС.НастройкиСопоставленияАлкогольнойПродукцииСНоменклатуройВДокументе();
	НастройкиСопоставления.ИмяТабличнойЧасти = "ОстаткиПоДаннымЕГАИС";
	
	Если Объект.ВидДокумента <> Перечисления.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре1 Тогда
		НастройкиСопоставления.Колонки.Справка2 = Ложь;
	КонецЕсли;
	
	ИнтеграцияЕГАИС.СопоставитьАлкогольнуюПродукциюСНоменклатурой(Объект, НастройкиСопоставления);
	
КонецПроцедуры

#Область Серии

&НаКлиенте
Процедура ОткрытьПодборСерий(Текст, СтандартнаяОбработка)
	
	ИнтеграцияИСКлиент.ОткрытьПодборСерий(ЭтотОбъект,, Текст, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборСерийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормыУказанияСерий = ДополнительныеПараметры.ПараметрыФормыУказанияСерий;
	ЗначениеВозврата = Результат;
	
	Если ЗначениеВозврата <> Неопределено Тогда
		ОбработатьУказаниеСерийНаСервере(ПараметрыФормыУказанияСерий, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьУказаниеСерийНаСервере(ПараметрыФормыУказанияСерий, КэшированныеЗначения)
	
	ИнтеграцияИСПереопределяемый.ОбработатьУказаниеСерий(ЭтотОбъект, ПараметрыФормыУказанияСерий, КэшированныеЗначения);
	ИнтеграцияИСПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(ЭтотОбъект, Объект.ОстаткиПоДаннымЕГАИС);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(ТекущаяСтрокаИдентификатор, КэшированныеЗначения)
	
	ИнтеграцияИСПереопределяемый.ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(
		ЭтотОбъект,,
		ТекущаяСтрокаИдентификатор,
		КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактированиеСтрокиТовары(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
	
	Если ИнтеграцияИСКлиент.НеобходимоОбновитьСтатусыСерий(ЭтотОбъект, Элемент, Неопределено) Тогда
		ТекущаяСтрокаИдентификатор = ТекущиеДанные.ПолучитьИдентификатор();
		
		ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(ТекущаяСтрокаИдентификатор, КэшированныеЗначения);
		ИнтеграцияИСКлиентПереопределяемый.ОбновитьКешированныеЗначенияДляУчетаСерий(Элемент, КэшированныеЗначения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Статус

&НаСервере
Процедура ОбновитьСтатусЕГАИС()
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	
	СтатусЕГАИС        = МенеджерОбъекта.СтатусПоУмолчанию();
	ДальнейшееДействие = МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие1 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие1
		|	КОНЕЦ КАК ДальнейшееДействие1,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие2 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие2
		|	КОНЕЦ КАК ДальнейшееДействие2,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие3 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие3
		|	КОНЕЦ КАК ДальнейшееДействие3
		|ИЗ
		|	РегистрСведений.СтатусыДокументовЕГАИС КАК Статусы
		|ГДЕ
		|	Статусы.Документ = &Документ");
		
		Запрос.УстановитьПараметр("Документ", Объект.Ссылка);
		Запрос.УстановитьПараметр("МассивДальнейшиеДействия", ИнтеграцияЕГАИС.НеотображаемыеВДокументахДальнейшиеДействия());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			СтатусЕГАИС = Выборка.Статус;
			
			ДальнейшееДействие = Новый Массив;
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие1);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие2);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие3);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДопустимыеДействия = Новый Массив;
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ЗапроситеОстатки);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеОперацию);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеПередачуДанных);
	СтатусЕГАИСПредставление = ИнтеграцияЕГАИС.ПредставлениеСтатусаЕГАИС(
		СтатусЕГАИС,
		ДальнейшееДействие,
		ДопустимыеДействия);
	
	РедактированиеФормыНеДоступно = СтатусЕГАИС <> Перечисления.СтатусыОбработкиОстатковЕГАИС.Черновик
	                              И СтатусЕГАИС <> Перечисления.СтатусыОбработкиОстатковЕГАИС.ОшибкаПередачи;
	
	Элементы.ГруппаНередактируемыеПослеОтправкиРеквизитыОсновное.ТолькоПросмотр = РедактированиеФормыНеДоступно;
	
	Элементы.ОстаткиПоДаннымЕГАИСНомерСтроки.ТолькоПросмотр          = РедактированиеФормыНеДоступно;
	Элементы.ОстаткиПоДаннымЕГАИСАлкогольнаяПродукция.ТолькоПросмотр = РедактированиеФормыНеДоступно;
	Элементы.ОстаткиПоДаннымЕГАИССправка2.ТолькоПросмотр             = РедактированиеФормыНеДоступно;
	Элементы.ОстаткиПоДаннымЕГАИСКоличество.ТолькоПросмотр           = РедактированиеФормыНеДоступно;
	
	ПолученыОстатки = (СтатусЕГАИС = Перечисления.СтатусыОбработкиОстатковЕГАИС.ПолученыОстатки);
	
	Элементы.КорректировкаОстатков.ТолькоПросмотр                  = НЕ ПолученыОстатки;
	Элементы.КорректировкаОстатковЗаполнитьРасхождения.Доступность = ПолученыОстатки;
	
	Элементы.ФормаАрхивироватьДокумент.Видимость = ЗначениеЗаполнено(Объект.Ссылка)
		И МенеджерОбъекта.КонечныеСтатусы(Ложь).Найти(СтатусЕГАИС) = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ЗапроситьОстатки" Тогда
		
		ОбменДаннымиЕГАИСКлиент.ПодготовитьКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ЗапроситеОстатки"),
			УникальныйИдентификатор);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьПричинуОшибки" Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Документ", Объект.Ссылка);
		ОткрытьФорму("Справочник.ЕГАИСПрисоединенныеФайлы.Форма.ФормаОшибки", ПараметрыОткрытияФормы, ЭтотОбъект);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьОперацию" Тогда
		
		ОбменДаннымиЕГАИСКлиент.ОтменитьПоследнююОперацию(Объект.Ссылка);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьПередачу" Тогда
		
		ОбменДаннымиЕГАИСКлиент.ОтменитьПередачу(Объект.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеТребующееПроведенияПриЗакрытииВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
	Если Не Модифицированность И Объект.Проведен Тогда
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуОбработатьНажатиеНавигационнойСсылкиПослеПроведения(РезультатВопроса, НавигационнаяСсылкаФорматированнойСтроки) Экспорт
	
	ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФормы

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементовФормы()
	
	ХарактеристикиИспользуются = ИнтеграцияИС.ХарактеристикиИспользуются();
	СерииИспользуются = ИнтеграцияИС.СерииИспользуются();
	
	Элементы.СтраницаКорректировкаОстатков.Видимость = ВидимостьКорректировкиОстатков(Объект.ОрганизацияЕГАИС, Объект.ВидДокумента);
	
	ВидимостьСправки2 = Объект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре1;
	
	Элементы.ОстаткиПоДаннымЕГАИССправка2.Видимость  = ВидимостьСправки2;
	Элементы.КорректировкаОстатковСправка2.Видимость = ВидимостьСправки2;
	Элементы.ОстаткиПоДаннымЕГАИССерия.Видимость     = ВидимостьСправки2 И СерииИспользуются;
	Элементы.ОстаткиПоДаннымЕГАИСХарактеристика.Видимость = ХарактеристикиИспользуются;
	
	Элементы.ОстаткиПоДаннымЕГАИСКонтекстноеМенюЗапроситьМарки.Видимость = ВидимостьСправки2;
	Элементы.ОстаткиПоДаннымЕГАИСЗапроситьМаркиПоВсемСправкам2.Видимость = ВидимостьСправки2;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СобытияФормИСПереопределяемый.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(
		ЭтотОбъект,
		"ОстаткиПоДаннымЕГАИСХарактеристика",
		"Объект.ОстаткиПоДаннымЕГАИС.ХарактеристикиИспользуются");
	
	СобытияФормИСПереопределяемый.УстановитьУсловноеОформлениеСерийНоменклатуры(
		ЭтотОбъект, "ОстаткиПоДаннымЕГАИССерия");
	
	СобытияФормЕГАИС.УстановитьУсловноеОформлениеПоляКоличество(ЭтотОбъект,
		"Объект.ОстаткиПоДаннымЕГАИС.НеупакованнаяПродукция",
		"ОстаткиПоДаннымЕГАИСКоличество");
	СобытияФормЕГАИС.УстановитьУсловноеОформлениеПоляКоличество(ЭтотОбъект,
		"Объект.КорректировкаОстатков.НеупакованнаяПродукция",
		"КорректировкаОстатковКоличество");
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОстаткиПоДаннымЕГАИСНоменклатура.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст",      Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.СопоставлениеНоменклатура"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОстаткиПоДаннымЕГАИСХарактеристика.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.Характеристика");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.СопоставлениеХарактеристика"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОстаткиПоДаннымЕГАИСКоличествоАкцизныхМарок.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.ОтчетЕГАИС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.ОжидаетВыполненияЗапросаМарок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.Маркируемый");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Нет данных>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОстаткиПоДаннымЕГАИСКоличествоАкцизныхМарок.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.ОжидаетВыполненияЗапросаМарок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.Маркируемый");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Ожидайте...>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОстаткиПоДаннымЕГАИСКоличествоАкцизныхМарок.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОстаткиПоДаннымЕГАИС.Маркируемый");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<для маркируемой продукции>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура ПриВыбореНоменклатуры(Номенклатура, ДополнительныеПараметры) Экспорт
	
	Если Номенклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Номенклатура = Номенклатура;
	
	ПриИзмененииНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНоменклатуры()
	
	ТекущиеДанные = Элементы.ОстаткиПоДаннымЕГАИС.ТекущиеДанные;
	
	ПараметрыЗаполнения = ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти();
	ПараметрыЗаполнения.МаркируемаяПродукцияВТЧ        = Ложь;
	ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус = Истина;
	ПараметрыЗаполнения.ОбработатьУпаковки             = Ложь;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ПриИзмененииНоменклатуры(
		ЭтотОбъект,
		ТекущиеДанные,
		Неопределено,
		ПараметрыЗаполнения);
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		ТекущиеДанные.Характеристика = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) 
		И ((ТекущиеДанные.ХарактеристикиИспользуются И ЗначениеЗаполнено(ТекущиеДанные.Характеристика))
			ИЛИ НЕ ТекущиеДанные.ХарактеристикиИспользуются) Тогда
		ТекущиеДанные.Сопоставлено = Истина;
	Иначе
		ТекущиеДанные.Сопоставлено = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпискиВыбораНоменклатуры(ТекущаяСтрока)
	
	СписокВыбораНоменклатура = Элементы.ОстаткиПоДаннымЕГАИСНоменклатура.СписокВыбора;
	СписокВыбораНоменклатура.Очистить();
	
	НайденныеСтроки = НоменклатураДляВыбора.НайтиСтроки(
		Новый Структура("АлкогольнаяПродукция", ТекущаяСтрока.АлкогольнаяПродукция));
	НоменклатураКэш = Неопределено;
	Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
		Если СтрокаТЧ.Номенклатура <> НоменклатураКэш Тогда
			СписокВыбораНоменклатура.Добавить(СтрокаТЧ.Номенклатура);
			НоменклатураКэш = СтрокаТЧ.Номенклатура;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпискиВыбораХарактеристика(ТекущаяСтрока)
	
	СписокВыбораХарактеристика = Элементы.ОстаткиПоДаннымЕГАИСХарактеристика.СписокВыбора;
	СписокВыбораХарактеристика.Очистить();
	
	НайденныеСтроки = НоменклатураДляВыбора.НайтиСтроки(
		Новый Структура("АлкогольнаяПродукция, Номенклатура",
			ТекущаяСтрока.АлкогольнаяПродукция,
			ТекущаяСтрока.Номенклатура));
	Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
		СписокВыбораХарактеристика.Добавить(СтрокаТЧ.Характеристика);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеТребующееПроведения(ОповещениеПриЗавершении)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыполнитьДействиеТребующееПроведенияПриЗакрытииВопроса",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	Если (Не ЗначениеЗаполнено(Объект.Ссылка)) Или (Не Объект.Проведен) Тогда
		
		ТекстВопроса = НСтр("ru = 'Документ ""Остатки ЕГАИС"" не проведен. Провести?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Модифицированность Тогда
		
		ТекстВопроса = НСтр("ru = 'Документ ""Остатки ЕГАИС"" был изменен. Провести?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ВыполнитьОбработкуОповещения(ОповещениеПриЗавершении, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоРасхождениямНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	ТекущийОбъект.ЗаполнитьПоРасхождениям();
	
	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидимостьКорректировкиОстатков(ОрганизацияЕГАИС, ВидДокумента)
	
	Если НЕ ЗначениеЗаполнено(ОрганизацияЕГАИС) ИЛИ НЕ ЗначениеЗаполнено(ВидДокумента) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре1;
	
КонецФункции

#КонецОбласти

#Область ЗапросыМарок

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыЗапросаИЗагрузкиСправок()
	
	Результат = Новый Структура;
	Результат.Вставить("Ссылка",   Неопределено);
	Результат.Вставить("Справка2", Неопределено);
	
	Результат.Вставить("ЗапросОтправлен",         Ложь);
	Результат.Вставить("МинимальнаяДатаОтправки", '00010101');
	Результат.Вставить("ДатаЗапроса",             '00010101');
	Результат.Вставить("ДатаПроверкиМарок",       '00010101');
	Результат.Вставить("ВыполненОбменПриТаймауте", Ложь);
	
	Результат.Вставить("Таймер", 32);
	Результат.Вставить("Шаг",    2);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьМаркиДействие(Результат, МассивСтрок) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПодготовитьВыполнитьЗапросыМарокПоСправкам2(МассивСтрок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьВыполнитьЗапросыМарокПоСправкам2(СтрокиОстатков)
	
	МассивСправок2 = Новый Массив;
	Для Каждого СтрокаТаблицы Из СтрокиОстатков Цикл
		МассивСправок2.Добавить(СтрокаТаблицы.Справка2);
	КонецЦикла;
	
	Если ДанныеТекущегоЗапроса <> Неопределено Тогда
		ПроверитьСвязанныеЗапросы(МассивСправок2);
	КонецЕсли;
	
	ВсеВыполнено = Истина;
	Для Каждого СтрокаТаблицы Из СтрокиОстатков Цикл
		Если МассивСправок2.Найти(СтрокаТаблицы.Справка2) <> Неопределено Тогда
			СтрокаТаблицы.ОжидаетВыполненияЗапросаМарок = Истина;
			ВсеВыполнено = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ВсеВыполнено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Запросы марок по справкам №2 текущего документа уже обработаны'"));
	Иначе
		ВыполнитьОчереднойЗапрос();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОчереднойЗапрос()
	
	
	//@skip-warning проверка локального времени достаточна
	ТекущаяДата = ТекущаяДата();
	
	Если ДанныеТекущегоЗапроса <> Неопределено Тогда
		
		Если Не ДанныеТекущегоЗапроса.ЗапросОтправлен Тогда
			
			ОсталосьДоОтправкиЗапроса = ДанныеТекущегоЗапроса.МинимальнаяДатаОтправки - ТекущаяДата;
			Если ОсталосьДоОтправкиЗапроса > 0 Тогда
				СостояниеЗапросаМарок = Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос марок готовится к отправке'"));
				ПодключитьОбработчикОжидания("ВыполнитьОчереднойЗапрос", ОсталосьДоОтправкиЗапроса, Истина);
			Иначе
				// Сеанс обмена идет локально, подождем
				Если ПараметрыПриложения["ЕГАИС.ДанныеСеансаОбмена"] <> Неопределено Тогда
					ПодключитьОбработчикОжидания("ВыполнитьОчереднойЗапрос", 10, Истина);
				// Формирование и отправка запроса марок
				Иначе
					ДанныеТекущегоЗапроса = ДобавитьНовыйЗапрос();
					СостояниеЗапросаМарок = Новый ФорматированнаяСтрока(
						НСтр("ru = 'Запрос марок отправляется...'"));
					ОбменДаннымиЕГАИСКлиент.ВыполнитьОбмен(
						Объект.ОрганизацияЕГАИС,
						Новый ОписаниеОповещения("ПроверитьОтветНаЗапросМарок", ЭтотОбъект));
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			// Ожидали ответ 30 минут, он не пришел, необходимо выполнить обмен безусловно
			Если ДанныеТекущегоЗапроса.Ссылка <> Неопределено
				И ТекущаяДата - ДанныеТекущегоЗапроса.ДатаЗапроса >= 30*60
				И Не ДанныеТекущегоЗапроса.ВыполненОбменПриТаймауте Тогда
				
				// Сеанс обмена идет локально, подождем
				Если ПараметрыПриложения["ЕГАИС.ДанныеСеансаОбмена"] <> Неопределено Тогда
					ПодключитьОбработчикОжидания("ВыполнитьОчереднойЗапрос", 10, Истина);
				// Формирование и отправка запроса марок
				Иначе
					ДанныеТекущегоЗапроса.ВыполненОбменПриТаймауте = Истина;
					ОбменДаннымиЕГАИСКлиент.ВыполнитьОбмен(
						Объект.ОрганизацияЕГАИС,
						Новый ОписаниеОповещения("ПроверитьОтветНаЗапросМарок", ЭтотОбъект));
				КонецЕсли;
				
			// Ожидали ответ 32 минут, он не пришел (после контрольного сеанса обмена)
			ИначеЕсли ДанныеТекущегоЗапроса.Ссылка <> Неопределено
				И ТекущаяДата - ДанныеТекущегоЗапроса.ДатаЗапроса >= 32*60 Тогда
				
				ОтметитьОтветКакНепришедший(ДанныеТекущегоЗапроса.Ссылка);
				
				ДанныеТекущегоЗапроса = ПодготовитьНовыйЗапрос();
				Если ДанныеТекущегоЗапроса <> Неопределено Тогда
					СостояниеЗапросаМарок = Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос марок готовится к отправке'"));
					ПодключитьОбработчикОжидания("ВыполнитьОчереднойЗапрос", 1, Истина);
				Иначе
					СостояниеЗапросаМарок = "";
				КонецЕсли;
				
			// 32 минут с момента отправки запроса еще не прошло, ждем ответа (раз в минуту).
			ИначеЕсли ДанныеТекущегоЗапроса.Ссылка <> Неопределено Тогда
				
				Если ТекущаяДата - ДанныеТекущегоЗапроса.ДатаПроверкиМарок >= 60 Тогда
					// Настроен автоматический обмен, только проверяем ответ
					Если АвтоматическийОбменНастроен Тогда
						ПроверитьОтветНаЗапросМарок();
					// Обмен и проверка ответа
					Иначе
						ОбменДаннымиЕГАИСКлиент.ВыполнитьОбмен(
							Объект.ОрганизацияЕГАИС,
							Новый ОписаниеОповещения("ПроверитьОтветНаЗапросМарок", ЭтотОбъект));
					КонецЕсли;
				Иначе
					ПодключитьОбработчикОжидания("ВыполнитьОчереднойЗапрос", 60, Истина);
				КонецЕсли;
				
				СостояниеЗапросаМарок = Новый ФорматированнаяСтрока(
					НСтр("ru = 'Ожидается ответ на запрос марок...'"));
				
			// Ответ пришел, нужно делать новый запрос
			Иначе
				
				ДанныеТекущегоЗапроса = ПодготовитьНовыйЗапрос();
				Если ДанныеТекущегоЗапроса <> Неопределено Тогда
					СостояниеЗапросаМарок = Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос марок готовится к отправке'"));
					ПодключитьОбработчикОжидания("ВыполнитьОчереднойЗапрос", 1, Истина);
				Иначе
					СостояниеЗапросаМарок = "";
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ДанныеТекущегоЗапроса = ПодготовитьНовыйЗапрос();
		Если ДанныеТекущегоЗапроса <> Неопределено Тогда
			СостояниеЗапросаМарок = Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос марок готовится к отправке'"));
			ПодключитьОбработчикОжидания("ВыполнитьОчереднойЗапрос", 1, Истина);
		Иначе
			СостояниеЗапросаМарок = "";
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.СостояниеЗапросаМарок.Видимость = ЗначениеЗаполнено(СостояниеЗапросаМарок);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОтветНаЗапросМарок(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДанныеТекущегоЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеТекущегоЗапроса.ЗапросОтправлен = Истина;
	
	Если Не ЗначениеЗаполнено(ДанныеТекущегоЗапроса.ДатаЗапроса) Тогда
		ДанныеТекущегоЗапроса.ДатаЗапроса = ДатаОтправкиЗапросаОстатковАкцизныхМарок(ДанныеТекущегоЗапроса.Ссылка);
	КонецЕсли;
	
	ПроверитьОтветНаЗапросАкцизныхМарокНаСервере(ДанныеТекущегоЗапроса.Ссылка);
	//@skip-warning
	ДанныеТекущегоЗапроса.ДатаПроверкиМарок = ТекущаяДата();
	
	ПодключитьОбработчикОжидания("ВыполнитьОчереднойЗапрос", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросПередЗакрытием(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = "ЗакрытьФорму" Тогда
		ПринудительноЗакрытьФорму = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСвязанныеЗапросы(Справки2)
	
	АвтоматическийОбменНастроен = АвтоматическийОбменНастроен();
	
	ЗаписатьСоответствиеНоменклатурыЕГАИС();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОтчетЕГАИС.Ссылка,
	|	ОтчетЕГАИС.Справка2,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие1 В (&ВсеТребующиеОжидания) КАК ТекущийЗапрос
	|ИЗ
	|	Документ.ОтчетЕГАИС КАК ОтчетЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ОтчетЕГАИС.Ссылка)
	|ГДЕ
	|	ОтчетЕГАИС.ДокументОснование = &Ссылка
	|	И ОтчетЕГАИС.Справка2 В (&Справки2)
	|	И ОтчетЕГАИС.Проведен
	|	И СтатусыДокументовЕГАИС.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиОтчетаЕГАИС.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Неопределено,
	|	Ссылка,
	|	Ложь
	|ИЗ
	|	Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|ГДЕ
	|	Справки2ЕГАИС.Ссылка В (&Справки2)
	|	И
	|	НЕ Справки2ЕГАИС.АлкогольнаяПродукция.ВидПродукции.Маркируемый
	|");
	
	Запрос.УстановитьПараметр("Ссылка",               Объект.Ссылка);
	Запрос.УстановитьПараметр("Справки2",             Справки2);
	Запрос.УстановитьПараметр("ВсеТребующиеОжидания", Документы.ОтчетЕГАИС.ВсеТребующиеОжидания());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДанныеТекущегоЗапроса = Неопределено;
	
	МинимальнаяДатаОтправкиЗапросовОстатковАкцизныхМарок = МинимальнаяДатаОтправкиЗапросовОстатковАкцизныхМарок();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТекущийЗапрос Тогда
			ДанныеТекущегоЗапроса = ПараметрыЗапросаИЗагрузкиСправок();
			ДанныеТекущегоЗапроса.Справка2                = Выборка.Справка2;
			ДанныеТекущегоЗапроса.Ссылка                  = Выборка.Ссылка;
			ДанныеТекущегоЗапроса.МинимальнаяДатаОтправки = МинимальнаяДатаОтправкиЗапросовОстатковАкцизныхМарок;
		Иначе
			Индекс = Справки2.Найти(Выборка.Справка2);
			Если Индекс <> Неопределено Тогда
				Справки2.Удалить(Индекс);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция АвтоматическийОбменНастроен()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.ОрганизацияЕГАИС);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиОбменаЕГАИС.ОбменНаКлиентеПоРасписанию,
	|	НастройкиОбменаЕГАИС.ОбменНаСервере
	|ИЗ
	|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|		ПО НастройкиОбменаЕГАИС.ИдентификаторФСРАР = КлассификаторОрганизацийЕГАИС.Код
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ОбменНаСервере Или Выборка.ОбменНаКлиентеПоРасписанию;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ДобавитьНовыйЗапрос()
	
	СтрокаОстатки = Объект.ОстаткиПоДаннымЕГАИС.НайтиСтроки(Новый Структура("ОжидаетВыполненияЗапросаМарок", Истина))[0];
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументОснование",    Объект.Ссылка);
	ДанныеЗаполнения.Вставить("ОрганизацияЕГАИС",     Объект.ОрганизацияЕГАИС);
	ДанныеЗаполнения.Вставить("АлкогольнаяПродукция", СтрокаОстатки.АлкогольнаяПродукция);
	ДанныеЗаполнения.Вставить("Справка2",             СтрокаОстатки.Справка2);
	ДанныеЗаполнения.Вставить("ВидДокумента",         Перечисления.ВидыДокументовЕГАИС.ЗапросОтчетаОстаткиВРегистре3);
	
	ДокументЗапросМарок = Документы.ОтчетЕГАИС.СоздатьДокумент();
	ДокументЗапросМарок.Заполнить(ДанныеЗаполнения);
	ДокументЗапросМарок.Записать(РежимЗаписиДокумента.Проведение);
	
	ОбменДаннымиЕГАИСВызовСервера.ПодготовитьКПередаче(
		ДокументЗапросМарок.Ссылка,
		Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ЗапроситеОтчет);
	
	ДанныеТекущегоЗапроса = ПараметрыЗапросаИЗагрузкиСправок();
	ДанныеТекущегоЗапроса.Справка2                = СтрокаОстатки.Справка2;
	ДанныеТекущегоЗапроса.Ссылка                  = ДокументЗапросМарок.Ссылка;
	ДанныеТекущегоЗапроса.МинимальнаяДатаОтправки = ТекущаяДатаСеанса();
	
	Возврат ДанныеТекущегоЗапроса;
	
КонецФункции

&НаСервере
Функция ПодготовитьНовыйЗапрос()
	
	СтрокаОстатки = Объект.ОстаткиПоДаннымЕГАИС.НайтиСтроки(Новый Структура("ОжидаетВыполненияЗапросаМарок", Истина));
	Если СтрокаОстатки.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеТекущегоЗапроса = ПараметрыЗапросаИЗагрузкиСправок();
	ДанныеТекущегоЗапроса.МинимальнаяДатаОтправки = МинимальнаяДатаОтправкиЗапросовОстатковАкцизныхМарок();
	
	Возврат ДанныеТекущегоЗапроса;
	
КонецФункции

&НаСервереБезКонтекста
Функция МинимальнаяДатаОтправкиЗапросовОстатковАкцизныхМарок()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВтОтчетыЕГАИС
		|ИЗ
		|	Документ.ОтчетЕГАИС КАК Т
		|ГДЕ
		|	Т.Дата >= &НачалоПериода
		|;
		|
		|//////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(ЕГАИСПрисоединенныеФайлы.ДатаМодификацииУниверсальная), ДатаВремя(1,1,1)) КАК ДатаМодификацииУниверсальная
		|ИЗ
		|	Справочник.ЕГАИСПрисоединенныеФайлы КАК ЕГАИСПрисоединенныеФайлы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтчетыЕГАИС
		|		ПО ВтОтчетыЕГАИС.Ссылка = ЕГАИСПрисоединенныеФайлы.Документ
		|ГДЕ
		|	ЕГАИСПрисоединенныеФайлы.Операция = &ОперацияЗапросОстатков
		|	И ЕГАИСПрисоединенныеФайлы.ТипСообщения = &ТипСообщенияВходящий");
	
	Запрос.УстановитьПараметр("НачалоПериода",          ТекущаяДатаСеанса() - 24*60*60);
	Запрос.УстановитьПараметр("ОперацияЗапросОстатков", Перечисления.ВидыДокументовЕГАИС.ЗапросОтчетаОстаткиВРегистре3);
	Запрос.УстановитьПараметр("ТипСообщенияВходящий",   Перечисления.ТипыЗапросовИС.Входящий);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат МестноеВремя(Выборка.ДатаМодификацииУниверсальная, ЧасовойПоясСеанса()) + 32*60;
	КонецЦикла;
	
	Возврат ТекущаяДатаСеанса();
	
КонецФункции

&НаСервереБезКонтекста
Функция ДатаОтправкиЗапросаОстатковАкцизныхМарок(ОтчетЕГАИС)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЕГАИСПрисоединенныеФайлы.ДатаМодификацииУниверсальная) КАК ДатаМодификацииУниверсальная
		|ИЗ
		|	Справочник.ЕГАИСПрисоединенныеФайлы КАК ЕГАИСПрисоединенныеФайлы
		|ГДЕ
		|	ЕГАИСПрисоединенныеФайлы.Документ = &ДокументСсылка
		|	И ЕГАИСПрисоединенныеФайлы.Операция = &ОперацияЗапросОстатков
		|	И ЕГАИСПрисоединенныеФайлы.ТипСообщения = &ТипСообщенияВходящий");
		
	Запрос.УстановитьПараметр("ДокументСсылка",         ОтчетЕГАИС);
	Запрос.УстановитьПараметр("ОперацияЗапросОстатков", Перечисления.ВидыДокументовЕГАИС.ЗапросОтчетаОстаткиВРегистре3);
	Запрос.УстановитьПараметр("ТипСообщенияВходящий",   Перечисления.ТипыЗапросовИС.Входящий);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат МестноеВремя(Выборка.ДатаМодификацииУниверсальная, ЧасовойПоясСеанса());
	КонецЦикла;
	
	Возврат '00010101';
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтметитьОтветКакНепришедший(ОтчетЕГАИС)
	
	ПараметрыОбновленияСтатуса = Новый Структура;
	ПараметрыОбновленияСтатуса.Вставить("НовыйСтатус", Перечисления.СтатусыОбработкиОтчетаЕГАИС.ПустаяСсылка());
	ПараметрыОбновленияСтатуса.Вставить("ДальнейшееДействие1", Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется);
	ПараметрыОбновленияСтатуса.Вставить("ДальнейшееДействие2", Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется);
	ПараметрыОбновленияСтатуса.Вставить("ДальнейшееДействие3", Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется);
	ПараметрыОбновленияСтатуса.Вставить("Прочее");
	
	РегистрыСведений.СтатусыДокументовЕГАИС.ОбновитьСтатус(ОтчетЕГАИС, ПараметрыОбновленияСтатуса);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьОтветНаЗапросАкцизныхМарокНаСервере(ОтчетЕГАИС)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие1 = ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтработайтеРасхождения) КАК ЕстьРасхождения
	|ИЗ
	|	РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Документ = &ОтчетЕГАИС
	|	И СтатусыДокументовЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиОтчетаЕГАИС.ПолученОтчет)
	|");
	
	Запрос.УстановитьПараметр("ОтчетЕГАИС", ОтчетЕГАИС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		НайденныеСтроки = Объект.ОстаткиПоДаннымЕГАИС.НайтиСтроки(
			Новый Структура("Справка2", ДанныеТекущегоЗапроса.Справка2));
			
		Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
			СтрокаТЧ.ОжидаетВыполненияЗапросаМарок = Ложь;
		КонецЦикла;
		
		ЗаполнитьСлужебныеРеквизиты();
		
		ДанныеТекущегоЗапроса.Ссылка = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТаблицыФормыКорректировкаОстатковСлужебная

&НаСервере
Процедура КорректировкаОстатковАлкогольнаяПродукцияПриИзмененииНаСервере(Идентификатор)
	
	
	ТекущиеДанные = Объект.КорректировкаОстатков.НайтиПоИдентификатору(Идентификатор);
	Если (ТекущиеДанные = Неопределено) Тогда
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(ТекущиеДанные.АлкогольнаяПродукция) Тогда
		ТекущиеДанные.НеупакованнаяПродукция = Истина;
	Иначе
		ТекущиеДанные.НеупакованнаяПродукция = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.АлкогольнаяПродукция, "ТипПродукции") = Перечисления.ТипыПродукцииЕГАИС.Неупакованная;
	КонецЕсли;
	
	ИнтеграцияЕГАИСКлиентСервер.ОкруглитьКоличествоДляУпакованнойПродукции(Элементы.КорректировкаОстатков.ТекущиеДанные,
		"НеупакованнаяПродукция",
		"Количество");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти