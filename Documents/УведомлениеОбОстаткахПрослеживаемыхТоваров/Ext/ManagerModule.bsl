#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//	Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//	КомандыСозданияНаОсновании - См. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//	Параметры - См. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//	КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения. См. описание 1 параметра процедуры
//										ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//	Параметры - Структура - Вспомогательные параметры. Для чтения. См. описание 2 параметра процедуры
//							ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//	МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена регистрация в механизме 
//									проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("ОперативныйУчетТоваровОрганизаций");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов - таблиц значений - данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.УведомлениеОбОстаткахПрослеживаемыхТоваров") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//	ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике 
//										см. ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов.
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Организация");
	
КонецПроцедуры

#Область ФормированиеУведомлений

// Возвращает количество уведомлений к оформлению.
// 
// Параметры:
//	Организация - СправочникСсылка.Организации, Неопределено - отбор по организации
//
// Возвращаемое значение:
//  Число - количество уведомлений к оформлению
//
Функция КоличествоУведомленийКОформлению(Организация = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыОтбора = Новый Структура("Организация", Организация);
	
	ПодготовитьДанныеДляФормированияУведомлений(Запрос, ПараметрыОтбора);
	Результат = ПолучитьДанныеДляФормированияУведомлений(Запрос, Истина);
	
	Возврат Результат.КоличествоДанных;
		
КонецФункции

// Формирует текст запроса для формирования временных таблиц с данными для формирования уведомлений.
//
// Параметры:
//	Запрос - Запрос -
//	ПараметрыОтбора - Структура, Неопределено -
//
Процедура ПодготовитьДанныеДляФормированияУведомлений(Запрос, ПараметрыОтбора = Неопределено) Экспорт
	
	#Область ТекстЗапроса
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Ссылка
	|ПОМЕСТИТЬ ВТОтборАналитикиНоменклатуры
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК Т
	|ГДЕ
	|	ЕСТЬNULL(Т.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
	|	И ЕСТЬNULL(Т.Номенклатура.ВестиУчетПоГТД, ЛОЖЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Ссылка
	|ПОМЕСТИТЬ ВТОтборАналитикиНоменклатурыДляОстатков
	|ИЗ
	|	ВТОтборАналитикиНоменклатуры КАК Т
	|ГДЕ
	|	ИСТИНА
	|	И &ОтборМестоХранения
	|	И &ОтборКодТНВЭД
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Ссылка.Номенклатура.КодТНВЭД КАК КодТНВЭД
	|ПОМЕСТИТЬ ВТОтборКодыТНВЭД
	|ИЗ
	|	ВТОтборАналитикиНоменклатуры КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Т.Ссылка
	|ПОМЕСТИТЬ ВТОтборВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК Т
	|ГДЕ
	|	Т.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Ссылка
	|ПОМЕСТИТЬ ВТРНПТ
	|ИЗ
	|	Справочник.НомераГТД КАК Т
	|ГДЕ
	|	Т.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТДвиженияУведомлений
	|ВЫБРАТЬ
	|	Т.Ссылка КАК ДокументУведомлениеОбОстатках,
	|	Т.ОформленНаОснованииВозвратаТоваров,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.РНПТ КАК РНПТ,
	|	ВЫБОР КОГДА ВТРНПТ.Ссылка ЕСТЬ NULL
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьРНПТ,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ВТДвиженияУведомлений
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ВидыЗапасов КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК Т
	|		ПО ТаблицаТовары.Ссылка = Т.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРНПТ КАК ВТРНПТ
	|		ПО ТаблицаТовары.РНПТ = ВТРНПТ.Ссылка
	|ГДЕ
	|	Т.Проведен
	|	И НЕ Т.КорректировочноеУведомление
	|	И &ОтборОрганизация
	|	И ТаблицаТовары.АналитикаУчетаНоменклатуры В (ВЫБРАТЬ Отбор.Ссылка ИЗ ВТОтборАналитикиНоменклатуры КАК Отбор)
	|	И ТаблицаТовары.ВидЗапасов В (ВЫБРАТЬ Отбор.Ссылка ИЗ ВТОтборВидыЗапасов КАК Отбор)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТВсеКорректировки
	|ВЫБРАТЬ
	|	Т.ДокументУведомлениеОбОстатках КАК ДокументУведомлениеОбОстатках,
	|	Т.Организация КАК Организация,
	|	Т.КодТНВЭД КАК КодТНВЭД,
	|	Т.РНПТ КАК РНПТ,
	|	Т.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ ВТВсеКорректировки
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборКодыТНВЭД КАК Отбор
	|		ПО Т.КодТНВЭД = Отбор.КодТНВЭД
	|ГДЕ
	|	Т.Проведен
	|	И Т.КорректировочноеУведомление
	|	И &ОтборОрганизация
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТОстаткиПредварительная
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	ВЫБОР КОГДА ВТРНПТ.Ссылка ЕСТЬ NULL
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоРНПТ,
	|	Т.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ВТОстаткиПредварительная
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(&Период,
	|		АналитикаУчетаНоменклатуры В (ВЫБРАТЬ Отбор.Ссылка ИЗ ВТОтборАналитикиНоменклатурыДляОстатков КАК Отбор)
	|		И ВидЗапасов В (ВЫБРАТЬ Отбор.Ссылка ИЗ ВТОтборВидыЗапасов КАК Отбор)
	|		И &ОтборОрганизация
	|	) КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРНПТ КАК ВТРНПТ
	|		ПО Т.НомерГТД = ВТРНПТ.Ссылка
	|ГДЕ
	|	Т.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТВозвратыПредварительная
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	СУММА(ВЫБОР КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ТОГДА -Т.Количество
	|		ИНАЧЕ Т.Количество
	|	КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВТВозвратыПредварительная
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК Т
	|ГДЕ
	|	Т.Период >= &Период
	|	И &ОтборОрганизация
	|	И Т.АналитикаУчетаНоменклатуры В (ВЫБРАТЬ Отбор.Ссылка ИЗ ВТОтборАналитикиНоменклатуры КАК Отбор)
	|	И Т.ВидЗапасов В (ВЫБРАТЬ Отбор.Ссылка ИЗ ВТОтборВидыЗапасов КАК Отбор)
	|	И НЕ (Т.НомерГТД В (ВЫБРАТЬ Отбор.Ссылка ИЗ ВТРНПТ КАК Отбор))
	|	И НЕ Т.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.Организация,
	|	Т.ВидЗапасов,
	|	Т.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ТОГДА -Т.Количество
	|		ИНАЧЕ Т.Количество
	|	КОНЕЦ) > 0
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТОстатки
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	СУММА(Т.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|(ВЫБРАТЬ
	|	ИСТИНА КАК ЕстьОстатки,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	Т.Количество КАК Количество
	|ИЗ
	|	ВТОстаткиПредварительная КАК Т
	|ГДЕ
	|	НЕ Т.ЭтоРНПТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ КАК ЕстьОстатки,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	-Т.Количество КАК Количество
	|ИЗ
	|	ВТДвиженияУведомлений КАК Т
	|ГДЕ
	|	НЕ Т.ОформленНаОснованииВозвратаТоваров
	|	И НЕ Т.ЕстьРНПТ
	|
	|) КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.Организация,
	|	Т.ВидЗапасов,
	|	Т.НомерГТД
	|ИМЕЮЩИЕ
	|	СУММА(Т.Количество) > 0
	|	И МАКСИМУМ(Т.ЕстьОстатки) = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТВозвраты
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	СУММА(Т.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТВозвраты
	|ИЗ
	|(ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	Т.Количество КАК Количество
	|ИЗ
	|	ВТВозвратыПредварительная КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	-Т.Количество КАК Количество
	|ИЗ
	|	ВТДвиженияУведомлений КАК Т
	|ГДЕ
	|	Т.ОформленНаОснованииВозвратаТоваров
	|) КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.Организация,
	|	Т.ВидЗапасов,
	|	Т.НомерГТД
	|ИМЕЮЩИЕ
	|	СУММА(Т.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТПересортПредварительная
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(Т.ДокументУведомлениеОбОстатках) КАК ДокументУведомлениеОбОстатках,
	|	МАКСИМУМ(Т.РНПТ) КАК РНПТ,
	|	СУММА(Т.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТПересортПредварительная
	|ИЗ
	|(ВЫБРАТЬ
	|	ЛОЖЬ КАК ЕстьУведомление,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка) КАК ДокументУведомлениеОбОстатках,
	|	Т.НомерГТД КАК РНПТ,
	|	Т.Количество КАК Количество
	|ИЗ
	|	ВТОстаткиПредварительная КАК Т
	|ГДЕ
	|	Т.ЭтоРНПТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА КАК ЕстьУведомление,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Организация КАК Организация,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.РНПТ КАК НомерГТД,
	|	Т.ДокументУведомлениеОбОстатках,
	|	Т.РНПТ КАК РНПТ,
	|	0 КАК Количество
	|ИЗ
	|	ВТДвиженияУведомлений КАК Т
	|ГДЕ
	|	НЕ Т.ОформленНаОснованииВозвратаТоваров
	|	И Т.ЕстьРНПТ
	|) КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.Организация,
	|	Т.ВидЗапасов,
	|	Т.НомерГТД
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Т.ЕстьУведомление) = ИСТИНА
	|	И СУММА(Т.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТДокументыУведомлений
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ДокументУведомлениеОбОстатках
	|ПОМЕСТИТЬ ВТДокументыУведомлений
	|ИЗ
	|	ВТПересортПредварительная КАК Т
	|ГДЕ
	|	Т.ДокументУведомлениеОбОстатках <> ЗНАЧЕНИЕ(Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТНомераКорректировок
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.ДокументУведомлениеОбОстатках <> ЗНАЧЕНИЕ(Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка)
	|		ТОГДА Т.ДокументУведомлениеОбОстатках
	|		ИНАЧЕ Т.Ссылка
	|	КОНЕЦ КАК ДокументУведомлениеОбОстатках,
	|	МАКСИМУМ(Т.НомерКорректировки) КАК НомерКорректировки
	|ПОМЕСТИТЬ ВТНомераКорректировок
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК Т
	|ГДЕ
	|	Т.Проведен
	|	И &ОтборОрганизация
	|	И (Т.Ссылка В (ВЫБРАТЬ Отбор.ДокументУведомлениеОбОстатках ИЗ ВТДокументыУведомлений КАК Отбор)
	|		ИЛИ Т.ДокументУведомлениеОбОстатках В (ВЫБРАТЬ Отбор.ДокументУведомлениеОбОстатках ИЗ ВТДокументыУведомлений КАК Отбор))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА Т.ДокументУведомлениеОбОстатках <> ЗНАЧЕНИЕ(Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка)
	|		ТОГДА Т.ДокументУведомлениеОбОстатках
	|		ИНАЧЕ Т.Ссылка
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТДокументыПредыдущейКорректировки
	|ВЫБРАТЬ
	|	МАКСИМУМ(Т.Ссылка) КАК Ссылка,
	|	МАКСИМУМ(Т.Организация) КАК Организация,
	|	ВЫБОР КОГДА Т.ДокументУведомлениеОбОстатках <> ЗНАЧЕНИЕ(Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка)
	|		ТОГДА Т.ДокументУведомлениеОбОстатках
	|		ИНАЧЕ Т.Ссылка
	|	КОНЕЦ КАК ДокументУведомлениеОбОстатках,
	|	Т.НомерКорректировки
	|ПОМЕСТИТЬ ВТДокументыПредыдущейКорректировки
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК Т
	|ГДЕ
	|	Т.Проведен
	|	И &ОтборОрганизация
	|	И ((Т.Ссылка, Т.НомерКорректировки) 
	|			В (ВЫБРАТЬ Отбор.ДокументУведомлениеОбОстатках, Отбор.НомерКорректировки ИЗ ВТНомераКорректировок КАК Отбор)
	|		ИЛИ (Т.ДокументУведомлениеОбОстатках, Т.НомерКорректировки) 
	|			В (ВЫБРАТЬ Отбор.ДокументУведомлениеОбОстатках, Отбор.НомерКорректировки ИЗ ВТНомераКорректировок КАК Отбор))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА Т.ДокументУведомлениеОбОстатках <> ЗНАЧЕНИЕ(Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка)
	|		ТОГДА Т.ДокументУведомлениеОбОстатках
	|		ИНАЧЕ Т.Ссылка
	|	КОНЕЦ,
	|	Т.НомерКорректировки
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТТоварыПредыдущейКорректировки
	|ВЫБРАТЬ
	|	Корректировки.Ссылка КАК Ссылка,
	|	Корректировки.ДокументУведомлениеОбОстатках КАК ДокументУведомлениеОбОстатках,
	|	Корректировки.НомерКорректировки КАК НомерКорректировки,
	|	Корректировки.Организация КАК Организация,
	|
	|	ТаблицаТовары.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.РНПТ КАК РНПТ,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ВТТоварыПредыдущейКорректировки
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыПредыдущейКорректировки КАК Корректировки
	|		По ТаблицаТовары.Ссылка = Корректировки.Ссылка
	|ГДЕ
	|	Корректировки.Ссылка <> Корректировки.ДокументУведомлениеОбОстатках
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТТоварыДоКорректировки
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	Корректировки.ДокументУведомлениеОбОстатках КАК ДокументУведомлениеОбОстатках,
	|	Корректировки.НомерКорректировки КАК НомерКорректировки,
	|	Корректировки.Организация КАК Организация,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.РНПТ.РегистрационныйНомер КАК РНПТ,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТТоварыДоКорректировки
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ВидыЗапасов КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыПредыдущейКорректировки КАК Корректировки
	|		По ТаблицаТовары.Ссылка = Корректировки.ДокументУведомлениеОбОстатках
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	Корректировки.ДокументУведомлениеОбОстатках,
	|	Корректировки.НомерКорректировки,
	|	Корректировки.Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаТовары.РНПТ.РегистрационныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ВТПересорт
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.ДокументУведомлениеОбОстатках КАК ДокументУведомлениеОбОстатках,
	|	МАКСИМУМ(Т.НомерКорректировки) КАК НомерКорректировки,
	|	Т.КодТНВЭД КАК КодТНВЭД,
	|	Т.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Т.РНПТ КАК РНПТ,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	СУММА(Т.КоличествоИсходное) КАК КоличествоИсходное,
	|	СУММА(Т.КоличествоПересорт) КАК КоличествоПересорт,
	|	СУММА(Т.КоличествоРанее) КАК КоличествоРанее,
	|	ВЫБОР КОГДА МАКСИМУМ(Т.ЕстьКорректировки) = ЛОЖЬ
	|		ТОГДА СУММА(Т.КоличествоИсходное)
	|		ИНАЧЕ СУММА(Т.КоличествоРанее)
	|	КОНЕЦ КАК РанееУказано
	|ПОМЕСТИТЬ ВТПересорт
	|ИЗ
	|(ВЫБРАТЬ
	|	ЛОЖЬ КАК ЕстьУведомление,
	|	ЛОЖЬ КАК ЕстьКорректировки,
	|	Т.Организация КАК Организация,
	|	Т.ДокументУведомлениеОбОстатках КАК ДокументУведомлениеОбОстатках,
	|	0 КАК НомерКорректировки,
	|	Т.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Т.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Т.НомерГТД.РегистрационныйНомер КАК РНПТ,
	|	Т.Количество КАК КоличествоПересорт,
	|	0 КАК КоличествоРанее,
	|	0 КАК КоличествоИсходное
	|ИЗ
	|	ВТПересортПредварительная КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА КАК ЕстьУведомление,
	|	ИСТИНА КАК ЕстьКорректировки,
	|	Т.Организация КАК Организация,
	|	Т.ДокументУведомлениеОбОстатках КАК ДокументУведомлениеОбОстатках,
	|	Т.НомерКорректировки КАК НомерКорректировки,
	|	Т.КодТНВЭД КАК КодТНВЭД,
	|	Т.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Т.РНПТ КАК РНПТ,
	|	0 КАК КоличествоПересорт,
	|	Т.Количество КАК КоличествоРанее,
	|	0 КАК КоличествоИсходное
	|ИЗ
	|	ВТТоварыПредыдущейКорректировки КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА КАК ЕстьУведомление,
	|	ЛОЖЬ КАК ЕстьКорректировки,
	|	Т.Организация КАК Организация,
	|	Т.ДокументУведомлениеОбОстатках КАК ДокументУведомлениеОбОстатках,
	|	Т.НомерКорректировки КАК НомерКорректировки,
	|	Т.КодТНВЭД КАК КодТНВЭД,
	|	Т.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Т.РНПТ КАК РНПТ,
	|	0 КАК КоличествоПересорт,
	|	0 КАК КоличествоРанее,
	|	Т.Количество КАК КоличествоИсходное
	|ИЗ
	|	ВТТоварыДоКорректировки КАК Т
	|) КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.ДокументУведомлениеОбОстатках,
	|	Т.КодТНВЭД,
	|	Т.ЕдиницаИзмерения,
	|	Т.РНПТ
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Т.ЕстьУведомление) = ИСТИНА
	|	И СУММА(Т.КоличествоПересорт) <> 0
	|	И ВЫБОР КОГДА МАКСИМУМ(Т.ЕстьКорректировки) = ЛОЖЬ
	|		ТОГДА СУММА(Т.КоличествоИсходное)
	|		ИНАЧЕ СУММА(Т.КоличествоРанее)
	|	КОНЕЦ <> СУММА(Т.КоличествоПересорт)
	|";
	
	#КонецОбласти
	
	#Область Отборы
	
	Если ЗначениеЗаполнено(ПараметрыОтбора) И ПараметрыОтбора.Свойство("Организация")
	 И ЗначениеЗаполнено(ПараметрыОтбора.Организация) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборОрганизация", "Организация = &ОтборОрганизация");
		Запрос.УстановитьПараметр("ОтборОрганизация", ПараметрыОтбора.Организация);
		
 	Иначе
		Запрос.УстановитьПараметр("ОтборОрганизация", Истина);
 	КонецЕсли;
 
	Если ЗначениеЗаполнено(ПараметрыОтбора) И ПараметрыОтбора.Свойство("МестоХранения")
	 И ЗначениеЗаполнено(ПараметрыОтбора.МестоХранения) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборМестоХранения", "Т.Ссылка.МестоХранения = &ОтборМестоХранения");
		Запрос.УстановитьПараметр("ОтборМестоХранения", ПараметрыОтбора.МестоХранения);
		
 	Иначе
		Запрос.УстановитьПараметр("ОтборМестоХранения", Истина);
 	КонецЕсли;
 
	Если ЗначениеЗаполнено(ПараметрыОтбора) И ПараметрыОтбора.Свойство("КодТНВЭД")
	 И ЗначениеЗаполнено(ПараметрыОтбора.КодТНВЭД) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборКодТНВЭД", "Т.Ссылка.Номенклатура.КодТНВЭД = &ОтборКодТНВЭД");
		Запрос.УстановитьПараметр("ОтборКодТНВЭД", ПараметрыОтбора.КодТНВЭД);
		
 	Иначе
		Запрос.УстановитьПараметр("ОтборКодТНВЭД", Истина);
 	КонецЕсли;
 
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Константы.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров.Получить()));
	
	#КонецОбласти
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует текст запроса для формирования временных таблиц с данными для формирования уведомлений.
//
// Параметры:
//	Запрос - Запрос
//	ТолькоПодсчетКоличестваДанных - Булево
//	
// Возвращаемое значение:
//  Структура
//
Функция ПолучитьДанныеДляФормированияУведомлений(Запрос, ТолькоПодсчетКоличестваДанных = Ложь) Экспорт
	
	КоличествоДанных = 0;
	Результат = Новый Структура;
	
	ШаблонВыборкиКоличества =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	ТаблицаДанных";
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Т.АналитикаУчетаНоменклатуры.МестоХранения КАК МестоХранения
	|ИЗ
	|	ВТОстатки КАК Т";
	
	Если ТолькоПодсчетКоличестваДанных Тогда
		
		Запрос.Текст = СтрЗаменить(ШаблонВыборкиКоличества, "ТаблицаДанных", "(" + Запрос.Текст + ") КАК Т");
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			КоличествоДанных = КоличествоДанных + Выборка.Количество;
		КонецЕсли;
		
	Иначе
		
		Результат.Вставить("ТаблицаОстатки", Запрос.Выполнить().Выгрузить());
		КоличествоДанных = КоличествоДанных + Результат.ТаблицаОстатки.Количество();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД КАК КодТНВЭД
	|ИЗ
	|	ВТВозвраты КАК Т";
	
	Если ТолькоПодсчетКоличестваДанных Тогда
		
		Запрос.Текст = СтрЗаменить(ШаблонВыборкиКоличества, "ТаблицаДанных", "(" + Запрос.Текст + ") КАК Т");
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			КоличествоДанных = КоличествоДанных + Выборка.Количество;
		КонецЕсли;
		
	Иначе
		
		Результат.Вставить("ТаблицаВозвраты", Запрос.Выполнить().Выгрузить());
		КоличествоДанных = КоличествоДанных + Результат.ТаблицаВозвраты.Количество();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Организация,
	|	Т.РНПТ КАК РНПТ,
	|	Т.ДокументУведомлениеОбОстатках КАК ПервичноеУведомление,
	|	СУММА(Т.РанееУказано) КАК РанееУказано,
	|	СУММА(Т.КоличествоПересорт) КАК ТекущийОстаток
	|ИЗ
	|	ВТПересорт КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.РНПТ,
	|	Т.ДокументУведомлениеОбОстатках";
	
	Если ТолькоПодсчетКоличестваДанных Тогда
		
		Запрос.Текст = СтрЗаменить(ШаблонВыборкиКоличества, "ТаблицаДанных", "(" + Запрос.Текст + ") КАК Т");
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			КоличествоДанных = КоличествоДанных + Выборка.Количество;
		КонецЕсли;
		
	Иначе
		
		Результат.Вставить("ТаблицаПересортица", Запрос.Выполнить().Выгрузить());
		КоличествоДанных = КоличествоДанных + Результат.ТаблицаПересортица.Количество();
		
	КонецЕсли;
	
	Результат.Вставить("КоличествоДанных", КоличествоДанных);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Серии

// Имена реквизитов, от значений которых зависят параметры указания серий.
//
// Возвращаемое значение:
//	Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "Дата";
	
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//	Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = ПолноеИмяОбъекта();
	
	ПустаяСтруктура = Новый Структура();
	ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", ПустаяСтруктура)
										Или ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыПроизводство",
																		ПустаяСтруктура);
	УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", ПустаяСтруктура)
										Или ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямПроизводство",
																		ПустаяСтруктура);
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям	= УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры	= ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости		= Истина;
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ДвижениеВФинансовомУчете);
	
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("ТипМестаХранения");
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("Склад");
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("Подразделение");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий.
//
// Параметры:
//	ПараметрыУказанияСерий - Структура - состав полей задается в функции
//		НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
// Возвращаемое значение:
//	Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки			КАК НомерСтроки,
	|	Товары.Номенклатура			КАК Номенклатура,
	|	Товары.Характеристика		КАК Характеристика,
	|	Товары.Назначение			КАК Назначение,
	|	Товары.Серия				КАК Серия,
	|	Товары.Количество			КАК Количество,
	|	Товары.Склад				КАК Склад,
	|	Товары.Подразделение		КАК Подразделение,
	|	Товары.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	Товары.ТипМестаХранения		КАК ТипМестаХранения
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки			КАК НомерСтроки,
	|	Товары.ТипМестаХранения		КАК ТипМестаХранения,
	|	Товары.СтатусУказанияСерий	КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерийПоСкладам.ПолитикаУчетаСерий ЕСТЬ NULL
	|				И ПолитикиУчетаСерийПоПодразделениям.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерийПоСкладам.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|						ИЛИ ПолитикиУчетаСерийПоПодразделениям.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ						КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ВидНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВидНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА
	|						ВЫБОР
	|							КОГДА ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВПереданныхНаХранениеТоварах
	|									ИЛИ ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям
	|									ИЛИ ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров
	|								ТОГДА ВЫБОР
	|										КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|											ТОГДА 18
	|										ИНАЧЕ 17
	|									КОНЕЦ
	|								ИНАЧЕ 0
	|						КОНЕЦ
	|					ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ						КАК СтатусУказанияСерийТоварыУПартнеров
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПоСкладам
	|		ПО ПолитикиУчетаСерийПоСкладам.Склад = Товары.Склад
	|			И ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПоСкладам.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПоПодразделениям
	|		ПО ПолитикиУчетаСерийПоПодразделениям.Склад = Товары.Подразделение
	|			И ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПоПодразделениям.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидНоменклатуры
	|		ПО ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки	КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Статусы.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента) ТОГДА
	|			Статусы.СтатусУказанияСерийТоварыУПартнеров
	|		ИНАЧЕ
	|			Статусы.СтатусУказанияСерий
	|	КОНЕЦ				КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	ВЫБОР
	|		КОГДА Статусы.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента) ТОГДА
	|			Статусы.СтатусУказанияСерийТоварыУПартнеров
	|		ИНАЧЕ
	|			Статусы.СтатусУказанияСерий
	|	КОНЕЦ <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
// Возвращаемое значение:
//	См. Справочники.Назначения.МакетФормыВыбораНазначений
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.ДвиженияПоСкладскимРегистрам = "ИСТИНА";
	
	// В наличии на складе
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы,
																	"ОбеспечениеЗаказов",
																	Истина,
																	"Объект.Товары.Назначение",
																	"ОбеспечениеПоСкладу");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("ВНаличии").Пометка = Истина;
	ОписаниеКолонок.КолонкиПоУмолчанию.Добавить("ВНаличии");
	
	ОписаниеКолонок.УсловиеИспользования = "Объект.Товары.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура	= "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика	= "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад			= "Объект.Товары.Склад";
		
	// В наличии у хранителя
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы,
																	"ВсеНазначения",
																	Истина,
																	"Объект.Товары.Назначение",
																	"ОбеспечениеПоДоговору");
	
	ОписаниеКолонок.УсловиеИспользования = "Объект.Товары.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)";
	
	Возврат МакетФормы;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Возвращает сумму, рассчитанную по данным корректировочного уведомления.
//
// Параметры:
//	Количество - Число - Количество товара по данным документа
//	ПервичноеУведомление - ДокументСсылка.УведомлениеОбОстаткахПрослеживаемыхТоваров - первичное уведомление
//
// Возвращаемое значение:
//	Число - сумма.
//
Функция ПолучитьСуммуПоКорректировочномуУведомлению(Количество, ПервичноеУведомление) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Количество КАК КоличествоПоПервичномуУведомлению,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Сумма КАК СуммаПоПервичномуУведомлению
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ПервичноеУведомление);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.КоличествоПоПервичномуУведомлению = 0 Тогда
			Возврат 0;
		Иначе
			Возврат Выборка.СуммаПоПервичномуУведомлению / Выборка.КоличествоПоПервичномуУведомлению * Количество;
		КонецЕсли;
	Иначе
		Возврат 0;
		// Ошибочная ситуация, при которой признак "Корректировочное уведомление" установлен, а первичное уведомление не указано
	КонецЕсли;
	
КонецФункции

// Возвращает сумму, рассчитанную по данным уведомления.
//
// Параметры:
//	ПараметрыУведомления - ТаблицаЗначений - Данные из табличной части Товары
//	ДатаДокумента - Дата
//	Организация - СправочникСсылка.Организации - организация из уведомления
//
// Возвращаемое значение:
//	Число - сумма.
//
Функция ПолучитьСуммуПоУведомлению(ПараметрыУведомления, ДатаДокумента, Организация) Экспорт
	
	Если ПараметрыУведомления.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеУведомления.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ДанныеУведомления.ВидЗапасов КАК ВидЗапасов,
	|	ДанныеУведомления.Количество КАК Количество
	|ПОМЕСТИТЬ втДанныеУведомления
	|ИЗ
	|	&ДанныеУведомления КАК ДанныеУведомления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(втДанныеУведомления.Количество) КАК Количество,
	|	СУММА(ЕСТЬNULL(СебестоимостьТоваровОстатки.КоличествоОстаток, 0)) КАК КоличествоОстаток,
	|	СУММА(ЕСТЬNULL(СебестоимостьТоваровОстатки.СтоимостьРеглОстаток, 0) +
	|		ЕСТЬNULL(СебестоимостьТоваровОстатки.ДопРасходыРеглОстаток, 0) +
	|		ЕСТЬNULL(СебестоимостьТоваровОстатки.ТрудозатратыРеглОстаток, 0) +
	|		ЕСТЬNULL(СебестоимостьТоваровОстатки.ПостатейныеПостоянныеРеглОстаток, 0) +
	|		ЕСТЬNULL(СебестоимостьТоваровОстатки.ПостатейныеПеременныеРеглОстаток, 0)) КАК СтоимостьРеглОстаток
	|ИЗ
	|	втДанныеУведомления КАК втДанныеУведомления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(&Дата, Организация = &Организация
	|		И (АналитикаУчетаНоменклатуры, ВидЗапасов) В
	|			(ВЫБРАТЬ
	|				втДанныеУведомления.АналитикаУчетаНоменклатуры,
	|				втДанныеУведомления.ВидЗапасов
	|			ИЗ
	|				втДанныеУведомления)) КАК СебестоимостьТоваровОстатки
	|		ПО втДанныеУведомления.АналитикаУчетаНоменклатуры = СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры
	|		И втДанныеУведомления.ВидЗапасов = СебестоимостьТоваровОстатки.ВидЗапасов";
	Запрос.УстановитьПараметр("Дата", ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДанныеУведомления", ПараметрыУведомления);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.КоличествоОстаток = 0 Тогда
			Возврат 0;
		Иначе
			Возврат Выборка.СтоимостьРеглОстаток / Выборка.КоличествоОстаток * Выборка.Количество;
		КонецЕсли;	
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// Возвращает структуру с наименованием табличных частей документа, хранящих информацию о товарах.
//
// Возвращаемое значение:
//	Структура - коллекция, содержащая следующие наименования табличных частей:
//		* Товары - ТаблицаЗначений, ТабличнаяЧасть, Неопределено - данные о товарах документа.
//	
Функция КоллекцияТабличныхЧастейТоваров() Экспорт
	
	ТаблицыДокумента = Новый Структура("Товары");
	
	Возврат ТаблицыДокумента;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.КорректировочноеУведомление КАК КорректировочноеУведомление,
	|	ДанныеДокумента.РНПТ КАК РНПТ,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.КодТНВЭД КАК КодТНВЭД
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ИдентификаторМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяОбъекта());
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", ИдентификаторМетаданных);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период							КАК ДатаПоступления,
	|	Аналитика.Номенклатура			КАК Номенклатура,
	|	Аналитика.Характеристика		КАК Характеристика,
	|	Аналитика.Серия					КАК Серия,
	|	Аналитика.Назначение			КАК Назначение,
	|	ТаблицаВидыЗапасов.ВидЗапасов	КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.РНПТ			КАК НомерГТД
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|		ПО ТаблицаВидыЗапасов.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|			И Аналитика.Номенклатура = ПоступленияТоваров.Номенклатура
	|			И Аналитика.Характеристика = ПоступленияТоваров.Характеристика
	|			И Аналитика.Серия = ПоступленияТоваров.Серия
	|			И Аналитика.Назначение = ПоступленияТоваров.Назначение
	|			И ТаблицаВидыЗапасов.РНПТ = ПоступленияТоваров.НомерГТД
	|
	|ГДЕ
	|	&РНПТ <> """"
	|	И НЕ &КорректировочноеУведомление
	|	И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И (ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидЗапасов,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	НомерГТД
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)			КАК ВидДвижения,
	|	&Период											КАК Период,
	|	&Организация									КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	0												КАК КоличествоПоРНПТ,
	|	Аналитика.Номенклатура							КАК Номенклатура,
	|	Аналитика.Характеристика						КАК Характеристика,
	|	ЛОЖЬ											КАК Первичное
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И НЕ &КорректировочноеУведомление
	|	И &РНПТ <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)			КАК ВидДвижения,
	|	&Период											КАК Период,
	|	&Организация									КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.РНПТ							КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ				КАК КоличествоПоРНПТ,
	|	Аналитика.Номенклатура							КАК Номенклатура,
	|	Аналитика.Характеристика						КАК Характеристика,
	|	ЛОЖЬ											КАК Первичное
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И НЕ &КорректировочноеУведомление
	|	И &РНПТ <> """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТМЦВЭксплуатации";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТМЦВЭксплуатации.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТМЦВЭксплуатации.Подразделение КАК Подразделение,
	|	ТаблицаТМЦВЭксплуатации.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаТМЦВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ТаблицаТМЦВЭксплуатации.Характеристика КАК Характеристика,
	|	ТаблицаТМЦВЭксплуатации.Серия КАК Серия,
	|	ТаблицаТМЦВЭксплуатации.Партия КАК Партия,
	|	ТаблицаТМЦВЭксплуатации.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТМЦВЭксплуатации.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ТаблицаТМЦВЭксплуатации.НомерГТД КАК НомерГТД,
	|	ТаблицаТМЦВЭксплуатации.Количество КАК Количество,
	|	0 КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ТМЦВЭксплуатации КАК ТаблицаТМЦВЭксплуатации
	|ГДЕ
	|	ТаблицаТМЦВЭксплуатации.Ссылка = &Ссылка
	|	И НЕ &КорректировочноеУведомление
	|	И &РНПТ <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТМЦВЭксплуатации.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Организация,
	|	ТаблицаТМЦВЭксплуатации.Подразделение,
	|	ТаблицаТМЦВЭксплуатации.ФизическоеЛицо,
	|	ТаблицаТМЦВЭксплуатации.Номенклатура,
	|	ТаблицаТМЦВЭксплуатации.Характеристика,
	|	ТаблицаТМЦВЭксплуатации.Серия,
	|	ТаблицаТМЦВЭксплуатации.Партия,
	|	ТаблицаТМЦВЭксплуатации.НаправлениеДеятельности,
	|	ТаблицаТМЦВЭксплуатации.ИнвентарныйНомер,
	|	ТаблицаТМЦВЭксплуатации.РНПТ,
	|	ТаблицаТМЦВЭксплуатации.Количество,
	|	ТаблицаТМЦВЭксплуатации.КоличествоПоРНПТ
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ТМЦВЭксплуатации КАК ТаблицаТМЦВЭксплуатации
	|ГДЕ
	|	ТаблицаТМЦВЭксплуатации.Ссылка = &Ссылка
	|	И НЕ &КорректировочноеУведомление
	|	И &РНПТ <> """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрослеживаемыеТоварыВСоставеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ОсновныеСредства.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)			КАК ВидДвижения,
	|	&Период											КАК Период,
	|	&Организация									КАК Организация,
	|	ОсновныеСредства.НомерГТД						КАК РНПТ,
	|	ОсновныеСредства.ОсновноеСредство				КАК ОсновноеСредство,
	|	&КодТНВЭД										КАК КодТНВЭД,
	|	ОсновныеСредства.КоличествоПоРНПТ				КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Ссылка = &Ссылка
	|	И ОсновныеСредства.НомерГТД.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ)
	|	И НЕ &КорректировочноеУведомление
	|	И &РНПТ <> """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновныеСредства.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента					= ПолноеИмяОбъекта();
	СинонимТаблицыДокумента				= "";
	ПереопределениеРасчетаПараметров	= Новый Структура;
	ТекстыЗапросаВременныхТаблиц		= Новый Соответствие;
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
								ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	ЗначенияПараметров.Вставить("ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров",
								УчетПрослеживаемыхТоваровЛокализация.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров());
	
	Если ИмяРегистра = "ТоварыОрганизаций" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	Иначе
		
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", 	ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", 		ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;

	ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																						ПолноеИмяДокумента,
																						СинонимТаблицыДокумента,
																						ПереопределениеРасчетаПараметров,
																						ТекстыЗапросаВременныхТаблиц);
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПолноеИмяОбъекта()
	
	Возврат "Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров";
	
КонецФункции

#КонецОбласти

#КонецОбласти


#КонецЕсли