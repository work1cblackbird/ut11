#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	ЗаполнитьДеревоОтклонений();
	УстановитьОтметку(Параметры);
	
	СброситьРазмерыИПоложениеОкна();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоОтклонений

&НаКлиенте
Процедура ДеревоОтклоненийВыбранаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоОтклонений.ТекущиеДанные;
	
	УстановитьОтметкуРекурсивно(ТекущиеДанные, ТекущиеДанные.Выбрана);
	
	Если ТекущиеДанные.УровеньИерархии > 0 Тогда
		
		ТекущийУровень = ТекущиеДанные.УровеньИерархии;
		Пока ТекущийУровень > 0 Цикл
			СтрокаРодитель = ТекущиеДанные.ПолучитьРодителя();
			Если ТекущиеДанные.Выбрана Тогда
				СтрокаРодитель.Выбрана = Истина;
				ТекущийУровень = ТекущийУровень - 1;
				ТекущиеДанные = СтрокаРодитель;
			Иначе
				СтрокаРодитель.Выбрана = Ложь;
				Для Каждого СтрокаДерева Из СтрокаРодитель.ПолучитьЭлементы() Цикл 
					СтрокаРодитель.Выбрана = СтрокаРодитель.Выбрана Или СтрокаДерева.Выбрана;
					Если СтрокаРодитель.Выбрана Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				ТекущийУровень = ТекущийУровень - 1;
				ТекущиеДанные = СтрокаРодитель;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Для Каждого СтрокаДерева Из ДеревоОтклонений.ПолучитьЭлементы() Цикл
		УстановитьОтметкуРекурсивно(СтрокаДерева, Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсе(Команда)
	
	Для Каждого СтрокаДерева Из ДеревоОтклонений.ПолучитьЭлементы() Цикл
		УстановитьОтметкуРекурсивно(СтрокаДерева, Ложь);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Результат = Новый Структура;
	Результат.Вставить("КатегорииОтклонений", "");
	Результат.Вставить("ВидыОтклонений", "");
	Результат.Вставить("РезультатыВыявленияОтклонений", "");
	Результат.Вставить("Представление", "");
	
	КатегорииОтклонений = Новый Массив;
	ВидыОтклонений = Новый Массив;
	РезультатыВыявленияОтклонений = Новый Массив;
	
	Представление = "";
	Для Каждого СтрокаКатегории Из ДеревоОтклонений.ПолучитьЭлементы() Цикл
		
		Если СтрокаКатегории.Выбрана Тогда
			
			Если ПустаяСтрока(Представление) Тогда
				Представление = СтрокаКатегории.Наименование;
			КонецЕсли;
			
			КатегорииОтклонений.Добавить(СтрокаКатегории.КодОтбора);
			Для Каждого СтрокаВиды Из СтрокаКатегории.ПолучитьЭлементы() Цикл
				
				Если СтрокаВиды.Выбрана Тогда
					
					ВидыОтклонений.Добавить(СтрокаВиды.КодОтбора);
					Для Каждого СтрокаРезультаты Из СтрокаВиды.ПолучитьЭлементы() Цикл
						Если СтрокаРезультаты.Выбрана Тогда
							РезультатыВыявленияОтклонений.Добавить(СтрокаРезультаты.КодОтбора);
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если КатегорииОтклонений.Количество() > 1 Тогда
		Представление = СтрШаблон("%1 (+ еще %2)", Представление, КатегорииОтклонений.Количество() -1);
	КонецЕсли;
	
	Результат.КатегорииОтклонений           = СтрСоединить(КатегорииОтклонений, ",");
	Результат.ВидыОтклонений                = СтрСоединить(ВидыОтклонений, ",");
	Результат.РезультатыВыявленияОтклонений = СтрСоединить(РезультатыВыявленияОтклонений, ",");
	Результат.Представление                 = Представление;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить(
			"Документ.ОтчетИСМП.Форма.ХарактеристикиОтклонений", "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоОтклонений()
	
	Макет = Документы.ОтчетИСМП.ПолучитьМакет("ДеревоВидовОтклонений");
	ОбластьКатегорииОтклонений = Макет.Области.Найти("СтрокиКатегорииОтклонений");
	ОбластьВидыОтклонений = Макет.Области.Найти("СтрокиВидыОтклонений");
	ОбластьРезультатыВыявленияОтклонений = Макет.Области.Найти("СтрокиРезультатыВыявленияОтклонений");
	
	КешСтрокДереваКатегории = Новый Соответствие;
	КешСтрокДереваВидыОтклонений = Новый Соответствие;
	
	ЭлементыДерева = ДеревоОтклонений.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	Если ОбластьКатегорииОтклонений.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
		// Заполнение дерева данными списка.
		ВерхОбласти = ОбластьКатегорииОтклонений.Верх;
		НизОбласти = ОбластьКатегорииОтклонений.Низ;
		
		Для НомСтр = ВерхОбласти По НизОбласти Цикл
			
			Код = СокрП(Макет.Область(НомСтр, 1).Текст);
			Если Не ЗначениеЗаполнено(Код) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаДерева = ЭлементыДерева.Добавить();
			СтрокаДерева.КодОтбора = Код;
			СтрокаДерева.Наименование = СокрП(Макет.Область(НомСтр, 2).Текст);
			СтрокаДерева.УровеньИерархии = 0;
			
			КешСтрокДереваКатегории.Вставить(Код, СтрокаДерева);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ОбластьВидыОтклонений.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
		// Заполнение дерева данными списка.
		ВерхОбласти = ОбластьВидыОтклонений.Верх;
		НизОбласти = ОбластьВидыОтклонений.Низ;
		
		Для НомСтр = ВерхОбласти По НизОбласти Цикл
			
			КодКатегории = СокрП(Макет.Область(НомСтр, 3).Текст);
			Если Не ЗначениеЗаполнено(КодКатегории) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаДереваРодитель = КешСтрокДереваКатегории.Получить(КодКатегории);
			Если СтрокаДереваРодитель <> Неопределено Тогда
				СтрокаДерева = СтрокаДереваРодитель.ПолучитьЭлементы().Добавить();
				СтрокаДерева.КодОтбора = СокрП(Макет.Область(НомСтр, 1).Текст);
				СтрокаДерева.Наименование = СокрП(Макет.Область(НомСтр, 2).Текст);
				СтрокаДерева.УровеньИерархии = 1;
				КешСтрокДереваВидыОтклонений.Вставить(СтрокаДерева.КодОтбора, СтрокаДерева);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ОбластьРезультатыВыявленияОтклонений.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
		// Заполнение дерева данными списка.
		ВерхОбласти = ОбластьРезультатыВыявленияОтклонений.Верх;
		НизОбласти = ОбластьРезультатыВыявленияОтклонений.Низ;
		
		Для НомСтр = ВерхОбласти По НизОбласти Цикл
			
			КодВидаОтклонений = СокрП(Макет.Область(НомСтр, 3).Текст);
			Если Не ЗначениеЗаполнено(КодВидаОтклонений) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаДереваРодитель = КешСтрокДереваВидыОтклонений.Получить(КодВидаОтклонений);
			Если СтрокаДереваРодитель <> Неопределено Тогда
				СтрокаДерева = СтрокаДереваРодитель.ПолучитьЭлементы().Добавить();
				СтрокаДерева.КодОтбора = СокрП(Макет.Область(НомСтр, 1).Текст);
				СтрокаДерева.Наименование = СокрП(Макет.Область(НомСтр, 2).Текст);
				СтрокаДерева.УровеньИерархии = 2;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтметку(Параметры)
	
	ВыбраныКатегории = Ложь;
	ВыбраныВиды = Ложь;
	ВыбраныРезультаты = Ложь;
	
	Если ТипЗнч(Параметры.КатегорииОтклонений) = Тип("Строка") Тогда
		
		КатегорииОтклонений = СтрРазделить(Параметры.КатегорииОтклонений, ",");
		ВыбраныКатегории = Истина;
		Если ТипЗнч(Параметры.ВидыОтклонений) = Тип("Строка") Тогда
			ВидыОтклонений = СтрРазделить(Параметры.ВидыОтклонений, ",");
			ВыбраныВиды = Истина;
			Если ТипЗнч(Параметры.РезультатыВыявленияОтклонений) = Тип("Строка") Тогда
				РезультатыВыявленияОтклонений = СтрРазделить(Параметры.РезультатыВыявленияОтклонений, ",");
				ВыбраныРезультаты = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыбраныКатегории Тогда
		
		Для Каждого СтрокаКатегории Из ДеревоОтклонений.ПолучитьЭлементы() Цикл
			
			Если КатегорииОтклонений.Найти(СтрокаКатегории.КодОтбора) <> Неопределено Тогда
				
				Если ВыбраныВиды Тогда
					
					СтрокаКатегории.Выбрана = Истина;
					Для Каждого СтрокаВиды Из СтрокаКатегории.ПолучитьЭлементы() Цикл
						
						Если ВидыОтклонений.Найти(СтрокаВиды.КодОтбора) <> Неопределено Тогда
							
							Если ВыбраныРезультаты Тогда
								
								СтрокаВиды.Выбрана = Истина;
								Для Каждого СтрокаРезультаты Из СтрокаВиды.ПолучитьЭлементы() Цикл
									Если РезультатыВыявленияОтклонений.Найти(СтрокаРезультаты.КодОтбора) <> Неопределено Тогда
										СтрокаРезультаты.Выбрана = Истина;
									КонецЕсли;
								КонецЦикла;
								
							Иначе
								УстановитьОтметкуРекурсивно(СтрокаВиды, Истина);
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
				Иначе
					УстановитьОтметкуРекурсивно(СтрокаКатегории, Истина);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтметкуРекурсивно(СтрокаИсточник, Пометка)
	
	СтрокаИсточник.Выбрана = Пометка;
	
	Для Каждого СтрокаДерева Из СтрокаИсточник.ПолучитьЭлементы() Цикл
		УстановитьОтметкуРекурсивно(СтрокаДерева, Пометка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
