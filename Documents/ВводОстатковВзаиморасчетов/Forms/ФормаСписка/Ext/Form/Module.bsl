
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ИспользоватьРеглУчет              = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	
	//++ Локализация
	
	
	//-- Локализация
	
	#Область СтандартныеМеханизмы
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	#КонецОбласти

	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВводОстатковАвансовКлиентов(Команда)
	СоздатьВводОстатковВзаиморасчетов(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковАвансовКлиентов"));
КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковАвансовПоставщикам(Команда)
	СоздатьВводОстатковВзаиморасчетов(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковАвансовПоставщикам"));
КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковЗадолженностиКлиентов(Команда)
	СоздатьВводОстатковВзаиморасчетов(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковЗадолженностиКлиентов"));
КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковЗадолженностиПоставщикам(Команда)
	СоздатьВводОстатковВзаиморасчетов(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковЗадолженностиПоставщикам"));
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Если Не Копирование Тогда
		
		СписокОпераций = Новый СписокЗначений;
		СписокОпераций.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковАвансовКлиентов"));
		СписокОпераций.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковАвансовПоставщикам"));
		СписокОпераций.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковЗадолженностиКлиентов"));
		СписокОпераций.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковЗадолженностиПоставщикам"));
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОтборПоТипамОпераций", СписокОпераций);
		ПараметрыФормы.Вставить("ПараметрыЗаполнения", 
			Новый Структура("ОтражатьВОперативномУчете,ОтражатьВБУиНУ, ОтражатьВУУ", Истина, ИспользоватьРеглУчет, ВестиУУННаПланеСчетовХозрасчетный));
		
		ОткрытьФорму("Обработка.ЖурналДокументовВводаНачальныхОстатков.Форма.ВыборХозяйственнойОперации", ПараметрыФормы);
		
	Иначе
		ОбщегоНазначенияУТКлиент.СкопироватьЭлемент(Элементы.Список);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВводОстатковВзаиморасчетов(ХозяйственнаяОперация)
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	ПараметрыЗаполнения.Вставить("ОтражатьВОперативномУчете", Истина);
	ПараметрыЗаполнения.Вставить("ОтражатьВБУиНУ", ИспользоватьРеглУчет);
	ПараметрыЗаполнения.Вставить("ОтражатьВУУ", ВестиУУННаПланеСчетовХозрасчетный);
	
	ОткрытьФорму("Документ.ВводОстатковВзаиморасчетов.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения));
	
КонецПроцедуры

#КонецОбласти
