&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	                                                           
	ОбменСГИСЭПД.ПриСозданииНаСервереПодчиненнойФормы(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	Для Каждого СтрокаТаблицы Из ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузки Цикл
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеАдресПунктаПогрузки", ЭтотОбъект, СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтметитьОбязательныеНеЗаполненныеЭлементыФормы" Тогда
		Если УникальныйИдентификатор <> Параметр Тогда
			Возврат;
		КонецЕсли;
		ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(Параметр);
	ИначеЕсли ИмяСобытия = "ИзменитьОформлениеКнопокФормы" Тогда
		Если УникальныйИдентификатор <> Параметр.УникальныйИдентификаторОбновляемойФормы Тогда
			Возврат;
		КонецЕсли;
		ИзменитьОформлениеКнопок(Параметр);	 
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Сохранить(Команда)
		
	ОбменСГИСЭПДКлиент.СохранитьПараметрыПодчиненнойФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбменСГИСЭПДКлиент.ПриОткрытииПодчиненнойФормы(ЭтотОбъект);
																		
КонецПроцедуры
			
&НаКлиенте
Функция ОписаниеРеквизитовФормы() Экспорт
	
	Возврат ОписаниеРеквизитовФормыСервер();
	
КонецФункции

&НаСервере
Функция ОписаниеРеквизитовФормыСервер()
	
	Возврат ОбменСГИСЭПД.ОписаниеРеквизитовФормы(ЭтаФорма);
		
КонецФункции

&НаКлиенте
Процедура ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузкиПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИдентификаторСтроки = Неопределено;
		ТекущиеДанные.Свойство("ИдентификаторСтроки", ИдентификаторСтроки);
		ОбменСГИСЭПДКлиент.ОчиститьПодчиненныеТаблицы(ЭтотОбъект, Элемент.Имя, ИдентификаторСтроки, Отказ);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеАдресПунктаПогрузкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеАдресПунктаПогрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВводАдреса("ПредставлениеАдресПунктаПогрузки", ЭтотОбъект, , Элементы.ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузки.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеАдресПунктаПогрузкиОбработкаВыбора(Элемент, Результат, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(ЭтотОбъект, Результат, "ПредставлениеАдресПунктаПогрузки", Элементы.ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузки.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	ОбменСГИСЭПДКлиент.ТаблицаПриНачалеРедактирования(Элемент, ЭтотОбъект, НоваяСтрока, Копирование);

	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.НомерПп = ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузки.Количество();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПунктПодачи(Команда)
	
	НоваяСтрока = ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузки.Вставить(0);
	НоваяСтрока.Операция = "Погрузка";
	НоваяСтрока.ДатаИВремяПогрузкиВыгрузки = ТитулГрузоотправителяЗаявленныеДатаВремяПодачи;
	
	Если ЗначениеЗаполнено(ТитулГрузоотправителяГрузоотправительЮЛ_ИНН) Тогда
		НаименованиеВладельцаПункта = ТитулГрузоотправителяГрузоотправительЮЛНаименование;
		ИННВладельцаПункта = ТитулГрузоотправителяГрузоотправительЮЛ_ИНН;
	ИначеЕсли ЗначениеЗаполнено(ТитулГрузоотправителяГрузоотправительИП_ИНН) Тогда
		НаименованиеВладельцаПункта = СокрЛП(ТитулГрузоотправителяГрузоотправительИПФамилия 
										+ ТитулГрузоотправителяГрузоотправительИПИмя
										+ ТитулГрузоотправителяГрузоотправительИПОтчество);
		ИННВладельцаПункта = ТитулГрузоотправителяГрузоотправительИП_ИНН;
	ИначеЕсли ЗначениеЗаполнено(ТитулГрузоотправителяГрузоотправительФЛ_ИНН) Тогда
		НаименованиеВладельцаПункта = СокрЛП(ТитулГрузоотправителяГрузоотправительФЛФамилия 
										+ ТитулГрузоотправителяГрузоотправительФЛИмя
										+ ТитулГрузоотправителяГрузоотправительФЛОтчество);
		ИННВладельцаПункта = ТитулГрузоотправителяГрузоотправительФЛ_ИНН;
	КонецЕсли;
	
	НоваяСтрока.ВладелецПунктаПогрузкиНаименование = НаименованиеВладельцаПункта;
	НоваяСтрока.ВладелецПунктаПогрузкиИНН = ИННВладельцаПункта;
	
	НоваяСтрока.АдресПунктаПогрузкиИндекс = ТитулГрузоотправителяАдресПогрузкиИндекс;
	НоваяСтрока.АдресПунктаПогрузкиКодРегиона = ТитулГрузоотправителяАдресПогрузкиКодРегиона;
	НоваяСтрока.АдресПунктаПогрузкиРайон = ТитулГрузоотправителяАдресПогрузкиРайон;
	НоваяСтрока.АдресПунктаПогрузкиГород = ТитулГрузоотправителяАдресПогрузкиГород;
	НоваяСтрока.АдресПунктаПогрузкиНаселенныйПункт = ТитулГрузоотправителяАдресПогрузкиНаселенныйПункт;
	НоваяСтрока.АдресПунктаПогрузкиУлица = ТитулГрузоотправителяАдресПогрузкиУлица;
	НоваяСтрока.АдресПунктаПогрузкиДом = ТитулГрузоотправителяАдресПогрузкиДом;
	НоваяСтрока.АдресПунктаПогрузкиКорпус = ТитулГрузоотправителяАдресПогрузкиКорпус;
	НоваяСтрока.АдресПунктаПогрузкиКвартира = ТитулГрузоотправителяАдресПогрузкиКвартира;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеАдресПунктаПогрузки", ЭтотОбъект, НоваяСтрока);
	
	НомерПп = 0;
	Для Каждого ТекущаяСтрока Из ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузки Цикл
		НомерПп = НомерПп + 1;
		ТекущаяСтрока.НомерПп = НомерПп;	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузкиВладелецПунктаПогрузкиНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьВладельцаПунктаПогрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузкиВладелецПунктаПогрузкиИНННачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьВладельцаПунктаПогрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВладельцаПунктаПогрузки()
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("РежимВыбора",Истина);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПодборВладельцаПункта_Завершение", ЭтотОбъект, Элементы.ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузки.ТекущаяСтрока);

	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", ПараметрыВыбора,
	        ЭтотОбъект, , , , ОбработкаВыбора);
	        
КонецПроцедуры

&НаКлиенте
Процедура ПодборВладельцаПункта_Завершение(Значение, ТекущаяСтрока) Экспорт
	
	Если Значение <> Неопределено Тогда  
		РеквизитыКонтрагента = РеквизитыКонтрагента(Значение);
		СтрокаВвода = ТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузки.НайтиПоИдентификатору(ТекущаяСтрока);
		СтрокаВвода.ВладелецПунктаПогрузкиИНН = РеквизитыКонтрагента.ИНН;
		СтрокаВвода.ВладелецПунктаПогрузкиНаименование = РеквизитыКонтрагента.НаименованиеПолное;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РеквизитыКонтрагента(Контрагент)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, "ИНН, НаименованиеПолное");
	
КонецФункции




#Область ОбъектыОбязательныеДляЗаполнения

&НаКлиенте
Процедура ИзменитьОформлениеКнопок(Параметр) Экспорт

	Если Не ЭтотОбъект.НачальноеОформлениеВыполнено Тогда
		ЭтотОбъект.ТребуетсяДополнительноеОформлениеКнопок = Истина;
		Если ЭтотОбъект.СтруктураДополнительногоОформленияКнопок <> Неопределено Тогда
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = 
				Новый ФиксированнаяСтруктура("ИмяКнопки, ИдентификаторСтроки");
		Иначе
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = Параметр;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	СтруктураСТекущимиДаннымиРеквизитов = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	СтруктураДанныхОбъекта = ОбменСГИСЭПДКлиентСервер.ПолучитьСериализуемыйОбъектСДаннымиДокумента(ЭтотОбъект);
	СтруктураСДаннымиФормыДляОформленияКнопок = 
		ОбменСГИСЭПДКлиентСервер.СтруктураСДаннымиФормыДляОформленияКнопок(ЭтотОбъект);
	
	Результат = ИзменитьОформлениеКнопокНаСервере(СтруктураСТекущимиДаннымиРеквизитов,
		Параметр.ИмяКнопки,
		Параметр.ИдентификаторСтроки,
		СтруктураДанныхОбъекта,
		СтруктураСДаннымиФормыДляОформленияКнопок);
		
	Если Результат.Успешно Тогда
		ЭтотОбъект.АдресДереваСоответствийИтаблицыКнопок = Результат.НовыйАдресВХранилище;	
		МассивОформления = Результат.МассивОформления;
		ОбменСГИСЭПДКлиентСервер.ОформлениеКнопокНаФорме(ЭтотОбъект,
			СтруктураСТекущимиДаннымиРеквизитов, МассивОформления);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзменитьОформлениеКнопокНаСервере(Знач СтруктураСТекущимиДаннымиРеквизитов,
	ИмяКнопки = Неопределено,
	ИдентификаторСтроки = Неопределено,
	Знач СтруктураДанныхОбъекта,
	Знач СтруктураСДаннымиФормыДляОформленияКнопок)
	
	НовыйАдресВХранилище = ОбменСГИСЭПД.ЗапуститьИзменениеОформленияКнопок(СтруктураСДаннымиФормыДляОформленияКнопок,
		СтруктураСТекущимиДаннымиРеквизитов, ИмяКнопки, ИдентификаторСтроки, СтруктураДанныхОбъекта);

	Результат = ОбменСГИСЭПД.ОбработатьРезультатИзмененияОформленияКнопок(НовыйАдресВХранилище);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(Параметр)
	
	СтруктураСТекущимиДаннымиРеквизитов = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(СтруктураСТекущимиДаннымиРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(Знач СтруктураСТекущимиДанными)
	
	ОбменСГИСЭПД.ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(ЭтотОбъект, СтруктураСТекущимиДанными);
	
КонецПроцедуры

#КонецОбласти