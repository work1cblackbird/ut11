&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ЗначениеКопирования.Пустая() = Ложь 
		И Параметры.ЗначениеКопирования.ЭтоВходящий = Истина Тогда
        Отказ = Истина; 
        СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ФормаБезОбработки") Тогда
		
		// СтандартныеПодсистемы.ПодключаемыеКоманды
		ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
		
		ОбменСГИСЭПД.ПриСозданииНаСервереПодчиненнойФормы(ЭтотОбъект, Отказ, СтандартнаяОбработка);

		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			ОбменСГИСЭПД.ЗаполнитьТаблицуВерсийТитулов(Объект.Ссылка, Объект.Организация, ВерсииТитулов);
			ОбменСГИСЭПД.ЗаполнитьТаблицуЗначенийРеквизитов(Объект.Ссылка, Объект.Организация, СтруктураРеквизитов);
		Иначе
			ОбменСГИСЭПД.ЗаполнитьТаблицуЗначенийРеквизитовПоПараметрамФормы(Параметры, СтруктураРеквизитов);	
		КонецЕсли;
		
		ОрганизацияОписаниеТипов = Метаданные.ОпределяемыеТипы.Организация.Тип;
		КонтрагентОписаниеТипов = Метаданные.ОпределяемыеТипы.КонтрагентБЭД.Тип;

		ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭЗЗ(ЭтотОбъект);
		
		Если Объект.ЭтоВходящий = Ложь Тогда	
			Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяСоставитель) Тогда
				ВариантПоДоверенностиЗаГрузоотправителя = 1;
				Элементы.СсылкаТитулГрузоотправителяГрузоотправитель.ОграничениеТипа = КонтрагентОписаниеТипов;
				Элементы.СсылкаТитулГрузоотправителяСоставитель.ОграничениеТипа = ОрганизацияОписаниеТипов;
				Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяСоставитель) = Ложь Тогда
					Объект.СсылкаТитулГрузоотправителяСоставитель = ИнтеграцияЭДО.ОрганизацияПоУмолчанию();
				КонецЕсли;
			Иначе
				Элементы.СсылкаТитулГрузоотправителяГрузоотправитель.ОграничениеТипа = ОрганизацияОписаниеТипов;	
				Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяГрузоотправитель) = Ложь Тогда
					Объект.СсылкаТитулГрузоотправителяГрузоотправитель = ИнтеграцияЭДО.ОрганизацияПоУмолчанию();
					ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элементы.СсылкаТитулГрузоотправителяГрузоотправитель, ЭтотОбъект);
				КонецЕсли;
			КонецЕсли;		
			Элементы.СсылкаТитулГрузоотправителяПеревозчик.ОграничениеТипа = КонтрагентОписаниеТипов;			
			
			Элементы.ХранимыеДанныеТитулГрузоотправителяПараметрыТранспортногоСредства.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			
			МассивЭлементов = Новый Массив;
			МассивЭлементов.Добавить(Элементы.СсылкаТитулГрузоотправителяГрузоотправитель);
			Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяСоставитель) Тогда
				МассивЭлементов.Добавить(Элементы.СсылкаТитулГрузоотправителяСоставитель);
			КонецЕсли;
			МассивЭлементов.Добавить(Элементы.СсылкаТитулГрузоотправителяПеревозчик);
			ОбменСГИСЭПДКлиентСервер.ПоказатьОшибкиПоКонтрагентам(ЭтотОбъект, МассивЭлементов);
			
			Элементы.ГруппаРеквизитаТитулГрузоотправителяЗаказНомер.Видимость = Ложь;
			Элементы.ЗаголовокНомер.Заголовок = "Номер";
		Иначе
			Элементы.ГруппаРеквизитаНомер.Видимость = Ложь;
			
			ФизЛицоОписаниеТипов = Метаданные.ОпределяемыеТипы.ФизическоеЛицо.Тип;
			Элементы.СсылкаТитулПеревозчикаЛицоОтветственноеЗаПеревозку.ОграничениеТипа = ФизЛицоОписаниеТипов;
			Элементы.СсылкаТитулПеревозчикаСоставитель.ОграничениеТипа = ОрганизацияОписаниеТипов;
			
			Элементы.ХранимыеДанныеТитулПеревозчикаТранспортноеСредство.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
		КонецЕсли;
		
		ЦветВыделенияУчастника = ЦветаСтиля.ЦветВыделенияУчастникаЭПД;
		Если Объект.РольУчастника = 1 Тогда
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяПеревозчик.ЦветФона = ЦветВыделенияУчастника;
		ИначеЕсли Объект.РольУчастника = 3 Тогда
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяГрузоотправитель.ЦветФона = ЦветВыделенияУчастника;
		КонецЕсли;
		
		ИзмененСоставУчастников = ЗначениеЗаполнено(Объект.ИдентификаторГрузоотправителя) = Ложь
									Или ЗначениеЗаполнено(Объект.ИдентификаторПеревозчика) = Ложь;
		
		ЗаполнитьПредставленияАдресов();
		
		ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
		УстановитьТекущийШагПомощника();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Функция ИдентификаторОтправителя()

	Результат = Неопределено;
	
	ТипОрганизация = ОбменСГИСЭПДВызовСервера.ПолучитьТипОрганизация();
	Если ТипЗнч(Объект.СсылкаТитулГрузоотправителяГрузоотправитель) = ТипОрганизация Тогда
		Результат = Объект.ИдентификаторГрузоотправителя;
	Иначе
		Результат = Объект.ИдентификаторПеревозчика;	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("НеТребуетсяИдентификацияФайла") = Ложь Тогда
		ЗаполнитьУчастников();
		ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
		ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя());	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ТекущийТитул) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	Если ИнформацияПоПрефиксамТитула.ВПрограмме = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КонтейнерОтображаемойВерсии = Неопределено;
	
	ОбменСГИСЭПД.ЗаполнитьДополнительныеРеквизитыФормы(ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме, КонтейнерОтображаемойВерсии);
	
	НомерВерсии = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
		ИнформацияПоПрефиксамТитула.ВПрограмме + "НомерИсправления", 0, КонтейнерОтображаемойВерсии);
	
	Если ПараметрыЗаписи.Свойство("НеДобавлятьВерсию") = Ложь Тогда
		// Запишем версию при необходимости
		ТекущийОбъект.ДополнительныеСвойства.Вставить("НомерВерсии", НомерВерсии);
		
		ИдентификаторФайлаВерсии = Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла"];
		
		ДатаВерсии = Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ДатаФормированияФайла"]
						+ 60 * 60 * Час(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла"]) 
						+ 60 * Минута(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла"]) 
						+ Секунда(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла"]);
		
		ЭтоНоваяВерсия = Истина;
		Для Каждого СтрокаВерсии Из ВерсииТитулов Цикл
			Если СтрокаВерсии.Титул = ТекущийОбъект.ТекущийТитул 
			И СтрокаВерсии.НомерВерсии = НомерВерсии Тогда
				СтрокаВерсии.ИдентификаторФайла = ИдентификаторФайлаВерсии;	
				ЭтоНоваяВерсия = Ложь;
			КонецЕсли;	
		КонецЦикла;
	
		Если ЭтоНоваяВерсия = Истина Тогда
			НовСтрокаВерсии = ВерсииТитулов.Добавить();
			НовСтрокаВерсии.ДатаВерсии = ДатаВерсии;
			Если НовСтрокаВерсии.ДатаВерсии = Дата(1,1,1) Тогда
				НовСтрокаВерсии.ДатаВерсии = ТекущаяДатаСеанса();
			КонецЕсли;
			НовСтрокаВерсии.ИдентификаторФайла = ИдентификаторФайлаВерсии;
			НовСтрокаВерсии.НомерВерсии = НомерВерсии;
			НовСтрокаВерсии.Титул = ТекущийОбъект.ТекущийТитул;		
		КонецЕсли;
			
		ВерсияТитула = Новый Структура;
		ВерсияТитула.Вставить("НомерВерсии", НомерВерсии);
		ВерсияТитула.Вставить("ИдентификаторФайла", ИдентификаторФайлаВерсии);
		ВерсияТитула.Вставить("Титул", ТекущийОбъект.ТекущийТитул);
		ВерсияТитула.Вставить("ДатаВерсии", ДатаВерсии);
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ВерсияТитула", ВерсияТитула);
	КонецЕсли;
	
	МассивВерсийТитула = Неопределено;
	СтруктураРеквизитов.Свойство(ИнформацияПоПрефиксамТитула.ВПрограмме, МассивВерсийТитула);
	Если МассивВерсийТитула <> Неопределено Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("СтруктураРеквизитов", МассивВерсийТитула[Мин(НомерВерсии, МассивВерсийТитула.ВГраница())]);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("Запись_ДокументыЭПД", Объект.Ссылка);
	
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбменСГИСЭПДКлиент.ПриОткрытииПодчиненнойФормы(ЭтотОбъект);
	
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


&НаКлиенте
Процедура ОткрытьЭлектронныйДокумент(Команда)
	
	ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокументОбъектаУчета(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСтатусаОшибкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОписаниеОшибки" Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ОткрытьОписаниеОшибки(Объект.Ссылка, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСтатусаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ТекущиеДелаПоЭДО" Тогда
		СтандартнаяОбработка = Ложь;
		ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокументОбъектаУчета(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезЭДО(Команда)
	
	ЭтотОбъект.Доступность = Ложь;
		
	Если ИзмененСоставУчастников = Истина
		Или ЗначениеЗаполнено(Объект.ИдентификаторГрузоотправителя) = Ложь
		Или ЗначениеЗаполнено(Объект.ИдентификаторПеревозчика) = Ложь
		Тогда
		ЗаполнитьУчастников(Истина);
	Иначе
		ОтправитьЧерезЭДОПослеЗаписи();
  	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезЭДОПовторно(Команда)
	
	ЭтотОбъект.Доступность = Ложь;
	
	// Сейчас при повторной отправке происходит ошибка на стороне оператора,
	// у них это считается дубликатом (одинаковый титул в рамках одного документооборота)
	// Это не верно, т.к. повторная отправка возможна (после УОУ или ошибки от ГИС)
	ОтправитьЧерезЭДОПослеЗаписи(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) = Ложь Тогда
		Возврат;	
	КонецЕсли;
	
	ЗаполнитьУчастников();
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя());
	
КонецПроцедуры

&НаКлиенте
Процедура СледующаяОшибка(Команда)
	
	ОбменСГИСЭПДКлиент.НавигацияПоОшибкамЗаполнения(ЭтотОбъект, 
													ОшибкиЗаполнения, 
													Элементы.ОшибкиЗаполнения.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущаяОшибка(Команда)
	
	ОбменСГИСЭПДКлиент.НавигацияПоОшибкамЗаполнения(ЭтотОбъект, 
													ОшибкиЗаполнения, 
													Элементы.ОшибкиЗаполнения.ТекущаяСтрока,
													Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОшибкиЗаполненияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = ОшибкиЗаполнения.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭтотОбъект.ПереходыПоОшибкам = ТекущиеДанные.Описание.Переходы;
	ОбменСГИСЭПДКлиент.ПоказатьОшибкуЗаполнения(ЭтотОбъект, ТекущиеДанные, ИдентификаторОтправителя());

КонецПроцедуры

&НаКлиенте
Процедура НадписьОшибкиЗакрытьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ЗакрытьОшибки" Тогда
		СтандартнаяОбработка = Ложь;
		Элементы.ГруппаОшибки.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула()
	
	КонтейнерОтображаемойВерсии = Неопределено;
	
	Если (ЗначениеЗаполнено(Объект.Ссылка) = Ложь 
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1")) Тогда
				
		Если ЗначениеЗаполнено(Объект.ВидДокумента) = Ложь Тогда
			Объект.ВидДокумента = ЭлектронныеДокументыЭДО.ВидДокументаПоТипу(ПредопределенноеЗначение("Перечисление.ТипыДокументовЭДО.ЭЗЗ"));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ТитулГрузоотправителяЗаказДата) = Ложь Тогда
			Объект.ТитулГрузоотправителяЗаказДата = ТекущаяДатаСеанса();	
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулГрузоотправителяФункция", 
				"Заказ", Ложь,
				КонтейнерОтображаемойВерсии);	
		
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка)
		И Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2") Тогда
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			"ТитулПеревозчикаСодержаниеОперации",
			"1", Ложь,
			КонтейнерОтображаемойВерсии);
		
		СкопироватьИныхПолучателейИзТитулаГрузоотправителя();	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьИныхПолучателейИзТитулаГрузоотправителя()
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) Тогда
		ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);	
		ИтераторСтроки = 1;
		КлючОткуда = "ТитулГрузоотправителяИдентификаторыИныхПолучателейФайла__" + ИтераторСтроки + "__" + "ИдентификаторИногоПолучателя";
		ЗначениеОткуда = Неопределено;
		КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, КлючОткуда);
		СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
		КонтейнерОтображаемойВерсииКуда = Неопределено;
		Пока СтруктураВерсииТитула.Свойство(КлючОткуда, ЗначениеОткуда) Цикл
			Если ЗначениеОткуда <> Объект.ИдентификаторГрузоотправителя
			И ЗначениеОткуда <> Объект.ИдентификаторПеревозчика Тогда
				КлючКуда = ИнформацияПоПрефиксамТитула.ВПрограмме 
								+ "ИдентификаторыИныхПолучателейФайла__" + ИтераторСтроки + "__" + "ИдентификаторИногоПолучателя";
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, КлючКуда, ЗначениеОткуда, , КонтейнерОтображаемойВерсииКуда);	
				ИтераторСтроки = ИтераторСтроки + 1;
				КлючОткуда = "ТитулГрузоотправителяИдентификаторыИныхПолучателейФайла__" + ИтераторСтроки + "__" + "ИдентификаторИногоПолучателя";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредставленияАдресов(Знач Титул = Неопределено)
	
	Если Титул = Неопределено Тогда
		ПрефиксТитула = ОбменСГИСЭПДКлиентСервер.ПолучитьПрефиксТитулаПоСтраницеОсновнойФормы(Элементы.Страницы.ТекущаяСтраница.Имя, 
			ОбменСГИСЭПДКлиентСервер.ТипДокументаЗаказЗаявка());	
		Титул = ОбменСГИСЭПДКлиентСервер.ТитулПоПрефиксу("Документ.ЭлектронныйЗаказЗаявка", ПрефиксТитула);
	КонецЕсли;
	
	Если Титул = Неопределено Или Титул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеТитулГрузоотправителяАдресПогрузки", ЭтотОбъект);
	КонецЕсли;
	
	Если Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
						Объект.СсылкаТитулГрузоотправителяГрузоотправитель,
						Элементы.ПредставлениеТитулГрузоотправителяАдресПогрузки);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьУчастников(ЭтоНастройкаПередОтправкой = Ложь)
	
	КлючНастроекОтправки = НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки();
	КлючНастроекОтправки.ВидДокумента = Объект.ВидДокумента;
	
	Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяСоставитель) Тогда
		СоставительПервогоТитула = Объект.СсылкаТитулГрузоотправителяСоставитель;
	Иначе
		СоставительПервогоТитула = Объект.СсылкаТитулГрузоотправителяГрузоотправитель;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СсылкаТитулПеревозчикаСоставитель) Тогда
		СоставительВторогоТитула = Объект.СсылкаТитулПеревозчикаСоставитель;
	Иначе
		СоставительВторогоТитула = Объект.СсылкаТитулГрузоотправителяПеревозчик;	
	КонецЕсли;
	
	Если Объект.ЭтоВходящий = Истина Тогда
		КлючНастроекОтправки.Отправитель = СоставительВторогоТитула;
		КлючНастроекОтправки.Получатель = СоставительПервогоТитула;
	Иначе
		КлючНастроекОтправки.Отправитель = СоставительПервогоТитула;
		КлючНастроекОтправки.Получатель = СоставительВторогоТитула; 
	КонецЕсли;
	
	НастройкиОтправки = НастройкиОтправкиЭДОСлужебныйВызовСервера.НастройкиОтправки(КлючНастроекОтправки);
	
	ПараметрыНастройкиОбменаСКонтрагентом = НастройкиЭДОКлиент.НовыеПараметрыНастройкиОбменаСКонтрагентом();
	ПараметрыНастройкиОбменаСКонтрагентом.НастройкаОдногоДокумента = Истина;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("КлючНастроекОтправки", КлючНастроекОтправки);
	ДополнительныеПараметры.Вставить("ПараметрыНастройкиОбменаСКонтрагентом", ПараметрыНастройкиОбменаСКонтрагентом);
	ДополнительныеПараметры.Вставить("ПараметрыЗаписи", Новый Структура);
	ДополнительныеПараметры.Вставить("ЭтоНастройкаПередОтправкой", ЭтоНастройкаПередОтправкой);
	
	ОповещениеОкончаниеНастройки = Новый ОписаниеОповещения("ЗаполнитьУчастников_ПослеНастроек", ЭтотОбъект, ДополнительныеПараметры);
	Если НастройкиОтправки = Неопределено И ЭтоНастройкаПередОтправкой = Истина Тогда	
		НастройкиЭДОКлиент.НастроитьОбменСКонтрагентом(КлючНастроекОтправки, ОповещениеОкончаниеНастройки, ПараметрыНастройкиОбменаСКонтрагентом);
	Иначе
		ВыполнитьОбработкуОповещения(ОповещениеОкончаниеНастройки, НастройкиОтправки); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУчастников_ПослеНастроек(Настройка, ДополнительныеПараметры) Экспорт
	
	Если Настройка = Неопределено Тогда
		ЭтотОбъект.Доступность = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяСоставитель) Тогда
		СоставительПервогоТитула = Объект.СсылкаТитулГрузоотправителяСоставитель;
	Иначе
		СоставительПервогоТитула = Объект.СсылкаТитулГрузоотправителяГрузоотправитель;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СсылкаТитулПеревозчикаСоставитель) Тогда
		СоставительВторогоТитула = Объект.СсылкаТитулПеревозчикаСоставитель;
	Иначе
		СоставительВторогоТитула = Объект.СсылкаТитулГрузоотправителяПеревозчик;	
	КонецЕсли;
	
	Если Настройка.Отправитель = СоставительПервогоТитула Тогда
		Объект.ИдентификаторГрузоотправителя = Настройка.ИдентификаторОтправителя;
	КонецЕсли;
	
	Если Настройка.Отправитель = СоставительВторогоТитула Тогда
		Объект.ИдентификаторПеревозчика = Настройка.ИдентификаторОтправителя;
	КонецЕсли;
	
	Если Настройка.Получатель = СоставительПервогоТитула Тогда
		Объект.ИдентификаторГрузоотправителя = Настройка.ИдентификаторПолучателя;
	КонецЕсли;
	
	Если Настройка.Получатель = СоставительВторогоТитула Тогда
		Объект.ИдентификаторПеревозчика = Настройка.ИдентификаторПолучателя;
	КонецЕсли;	
																		
	ИзмененСоставУчастников = Ложь;
	
	ЭтоНастройкаПередОтправкой = Неопределено;
	ДополнительныеПараметры.Свойство("ЭтоНастройкаПередОтправкой", ЭтоНастройкаПередОтправкой);
	Если ЭтоНастройкаПередОтправкой = Истина
		И ЗначениеЗаполнено(Объект.ИдентификаторГрузоотправителя)
		И ЗначениеЗаполнено(Объект.ИдентификаторПеревозчика) Тогда
			ОтправитьЧерезЭДОПослеЗаписи();
	Иначе
		ЭтотОбъект.Доступность = Истина;
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИмяФайла(Шаблон, ИдГрузоотправителя, ИдПеревозчика, НаличиеДругихПолучателей = Ложь)
	
	#Если Сервер Тогда
		ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	#Иначе
		ТекущаяДатаСеанса = ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли
	
	Результат = Шаблон;
	Результат = СтрЗаменить(Результат, "ИдГО", ИдГрузоотправителя);
	Результат = СтрЗаменить(Результат, "ИдПЕР", ИдПеревозчика);
	Результат = СтрЗаменить(Результат, "GGGGMMDD", Формат(ТекущаяДатаСеанса, "ДФ=ггггММдд"));
	Результат = СтрЗаменить(Результат, "ГУИДФайла", Строка(Новый УникальныйИдентификатор()));
	Результат = СтрЗаменить(Результат, "НалДр", ?(НаличиеДругихПолучателей = Истина, "1", "0"));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция УстановитьНомерДокумента()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.УстановитьНовыйНомер();
	
	Возврат ДокументОбъект.Номер;
	
КонецФункции

&НаСервере
Функция ПолучитьПодписьТитулаBase64(ТипЭлементаРегламента) 
	
	ПодписьBase64 = "";
	
	СообщениеТитула = ОбменСГИСЭПД.ПолучитьСообщениеТитула(Объект.Ссылка, ТипЭлементаРегламента);
	
	Если ЗначениеЗаполнено(СообщениеТитула) Тогда
		УстановленныеПодписи = ЭлектронныеДокументыЭДО.УстановленныеПодписи(СообщениеТитула);
		Для Каждого ОписаниеПодписи Из УстановленныеПодписи Цикл
			ПодписьBase64 = Base64Строка(ОписаниеПодписи.Подпись);
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПодписьBase64;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя, Переформировать = Ложь, ОбработкаЗавершения = Неопределено)

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИнформацияПоПрефиксамТитула", ИнформацияПоПрефиксамТитула);
	ДополнительныеПараметры.Вставить("ИдентификаторОтправителя", ИдентификаторОтправителя);
	ДополнительныеПараметры.Вставить("Переформировать", Переформировать);
	ДополнительныеПараметры.Вставить("ОбработкаЗавершения", ОбработкаЗавершения);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьИдентификациюФайлаОбмена_ПослеПолученияУИД", ЭтотОбъект, ДополнительныеПараметры);
	
	Если ЗначениеЗаполнено(Объект.УИДМинтранс) Тогда
		ЗаполнитьИдентификациюФайлаОбмена_ПослеПолученияУИД(Объект.УИДМинтранс, ДополнительныеПараметры);
	Иначе
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1") Тогда
			ОбменСГИСЭПДКлиент.ПолучитьУИДМинтранса(ОписаниеОповещения, Объект.ИдентификаторГрузоотправителя);
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2") Тогда
			ОбменСГИСЭПДКлиент.ПолучитьУИДМинтранса(ОписаниеОповещения, Объект.ИдентификаторПеревозчика, Истина, Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИдентификациюФайлаОбмена_ПослеПолученияУИД(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Объект.УИДМинтранс) = Ложь Тогда
		Объект.УИДМинтранс = Результат;
	КонецЕсли;
	
	ИнформацияПоПрефиксамТитула = ДополнительныеПараметры.ИнформацияПоПрефиксамТитула;
	ИдентификаторОтправителя = ДополнительныеПараметры.ИдентификаторОтправителя;
	Переформировать = ДополнительныеПараметры.Переформировать;
	
	ТребуетсяЗаполнить = Переформировать = Истина
			Или ОбменСГИСЭПДКлиент.ТребуетсяИдентификацияФайлаТитула(Объект.Ссылка, Объект.ТекущийТитул, ВерсииТитулов);
	
	Если ТребуетсяЗаполнить = Истина Тогда
		КонтейнерОтображаемойВерсии = Неопределено;
		
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1") Тогда
			КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ТитулГрузоотправителя");
			
			Если ЗначениеЗаполнено(Объект.Ссылка) = Ложь Тогда
				Объект.Номер = УстановитьНомерДокумента();
			КонецЕсли;
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулГрузоотправителяЗаказДата",
				Объект.Дата, Ложь,
				КонтейнерОтображаемойВерсии);	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулГрузоотправителяЗаказНомер",
				Объект.Номер, Ложь,
				КонтейнерОтображаемойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулГрузоотправителяПредставительГрузоотправителя",
				Строка(Объект.СсылкаТитулГрузоотправителяГрузоотправитель), Ложь,
				КонтейнерОтображаемойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулГрузоотправителяСодержаниеОперации",
				"Предоставление заказа и заявки на перевозку груза автомобильным транспортом", ,
				КонтейнерОтображаемойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулГрузоотправителяУказанияВОтношенииВыполненияНормПеревозки",
				"Отсутствуют", Ложь,
				КонтейнерОтображаемойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулГрузоотправителяТребованияТранспортногоСредстваДляПищевыхПродуктов",
				"Отсутствуют", Ложь,
				КонтейнерОтображаемойВерсии);		
			
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2") Тогда
			КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ТитулПеревозчика");
			
			Если ВариантПодтверждения = 1 Тогда
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулПеревозчикаСодержаниеОперации",
				"2", ,
				КонтейнерОтображаемойВерсии);	
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулПеревозчикаСодержаниеОперации",
				"1", ,
				КонтейнерОтображаемойВерсии);	
			КонецЕсли;
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаПредставительПеревозчика",
					?(ЗначениеЗаполнено(Объект.СсылкаТитулПеревозчикаСоставитель), 
					Строка(Объект.СсылкаТитулПеревозчикаСоставитель), 
					Строка(Объект.СсылкаТитулГрузоотправителяПеревозчик)), , КонтейнерОтображаемойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФайлГрузоотправителяИдентификаторФайла",
					Объект.ТитулГрузоотправителяИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФайлГрузоотправителяДатаФормированияФайла", Объект.ТитулГрузоотправителяДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФайлГрузоотправителяВремяФормированияФайла", Объект.ТитулГрузоотправителяВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулПеревозчикаФайлГрузоотправителяЭлектроннаяПодпись",
				ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1")), ,
				КонтейнерОтображаемойВерсии);
		КонецЕсли;
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ПолеУИД, Объект.УИДМинтранс, , КонтейнерОтображаемойВерсии);
	
		ИтераторСтроки = 1;
		ИныеПолучатели = Новый Массив;
		КлючОткуда = ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторыИныхПолучателейФайла__" + ИтераторСтроки + "__" + "ИдентификаторИногоПолучателя";
		ЗначениеОткуда = Неопределено;
		СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
		Пока СтруктураВерсииТитула.Свойство(КлючОткуда, ЗначениеОткуда) Цикл
			ИныеПолучатели.Добавить(ЗначениеОткуда);	
			ИтераторСтроки = ИтераторСтроки + 1;
			КлючОткуда = ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторыИныхПолучателейФайла__" + ИтераторСтроки + "__" + "ИдентификаторИногоПолучателя";
		КонецЦикла;
		НаличиеИныхПолучателей = ИныеПолучатели.Количество() > 0;
		Объект.ИныеПолучателиСтрока = СтрСоединить(ИныеПолучатели, ",");
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла", ПолучитьИмяФайла(ИнформацияПоПрефиксамТитула.ШаблонИмениФайла, 
																			Объект.ИдентификаторГрузоотправителя,
																			Объект.ИдентификаторПеревозчика,
																			НаличиеИныхПолучателей), , КонтейнерОтображаемойВерсии);
																			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ВерсияПрограммы",
			ОбменСГИСЭПДКлиентСервер.ВерсияПрограммы(), ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ВерсияФормата",
			ОбменСГИСЭПДКлиентСервер.ВерсияФормата("ЭлектронныйЗаказЗаявка"), ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "КодДокументаПоКНД",
			ИнформацияПоПрефиксамТитула.КНД, ,
			КонтейнерОтображаемойВерсии);
		
		ДатаИВремяФормирования = ОбщегоНазначенияКлиент.ДатаСеанса();
		ДатаФормирования = НачалоДня(ДатаИВремяФормирования);
		ВремяФормирования = Дата('00010101') + (ДатаИВремяФормирования - ДатаФормирования); 
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ДатаФормированияФайла",
			ДатаФормирования, ,	
			КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла",
			ВремяФормирования, ,	
			КонтейнерОтображаемойВерсии);
		
		ДанныеСертификатаУчетнойЗаписиЭДО = ОбменСГИСЭПДКлиентСервер.ДанныеСертификатаУчетнойЗаписиЭДО(ИдентификаторОтправителя);
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантФамилия",
			ДанныеСертификатаУчетнойЗаписиЭДО.Фамилия, ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантИмя",
			ДанныеСертификатаУчетнойЗаписиЭДО.Имя, ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантОтчество",
			ДанныеСертификатаУчетнойЗаписиЭДО.Отчество, ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДолжность",
			ДанныеСертификатаУчетнойЗаписиЭДО.Должность, ,
			КонтейнерОтображаемойВерсии);
			
		Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности) Тогда
			Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.СведенияОбИнформационнойСистеме) Тогда
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектронная__1__Номер",
					ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности, ,
					КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектронная__1__Дата",
					ДанныеСертификатаУчетнойЗаписиЭДО.ДатаДоверенности, ,
					КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектронная__1__НомерВнутр",
					ДанныеСертификатаУчетнойЗаписиЭДО.ПорядковыйНомерДоверенности, ,
					КонтейнерОтображаемойВерсии);	
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектронная__1__ИнформационнаяСистема",
					ДанныеСертификатаУчетнойЗаписиЭДО.СведенияОбИнформационнойСистеме, ,
					КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСпособПодтвержденияПолномочий",
					"3", ,
					КонтейнерОтображаемойВерсии);
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСпособПодтвержденияПолномочий",
					"6", ,
					КонтейнерОтображаемойВерсии);	
			КонецЕсли;
		Иначе
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСпособПодтвержденияПолномочий",
				"1", ,
				КонтейнерОтображаемойВерсии);
		КонецЕсли;
	КонецЕсли;
	
	// Проверим заполнение
	Если ОбменСГИСЭПДКлиент.ЗаполнитьТаблицуОшибокЭПД(ЭтотОбъект, ОшибкиЗаполнения, Истина) = Истина Тогда	
		Элементы.ГруппаОшибки.Видимость = Истина;
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения (" + Строка(ОшибкиЗаполнения.Количество()) + ")";
		Если ТребуетсяЗаполнить = Истина Тогда
			ОчиститьИдФайлТекущегоТитула();
		КонецЕсли;
	Иначе
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения";
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("ОбработкаЗавершения") 
		И ДополнительныеПараметры.ОбработкаЗавершения <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОбработкаЗавершения);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезЭДОПослеЗаписи(Повторно = Ложь)
		
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	
	ЭтоИсправление = Ложь;
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется уточнение"
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется повторная отправка" Тогда
		ЭтоИсправление = Истина;
		Повторно = Истина;	
	КонецЕсли;
	
	Если Повторно = Истина Тогда
		ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка, Истина);
		ОбменСГИСЭПДКлиентСервер.УстановитьТекущийДоступныйТитулЭЗЗ(Объект, ТитулыПоДокументу, Истина);
	КонецЕсли;
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДанныеСостоянияЭДО", ДанныеСостоянияЭДО);
	ДополнительныеПараметры.Вставить("ЭтоИсправление", ЭтоИсправление);
	ДополнительныеПараметры.Вставить("Повторно", Повторно);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЧерезЭДОПослеЗаписи_Завершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя(), Повторно, ОписаниеОповещения);		
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезЭДОПослеЗаписи_Завершение(Результат, ДополнительныеПарамтеры) Экспорт
	
	ДанныеСостоянияЭДО = ДополнительныеПарамтеры.ДанныеСостоянияЭДО;
	Повторно = ДополнительныеПарамтеры.Повторно;
	ЭтоИсправление = ДополнительныеПарамтеры.ЭтоИсправление;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
	Записать(ПараметрыЗаписи);
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) = Ложь Тогда
		ЭтотОбъект.Доступность = Истина;
		Возврат;
	КонецЕсли;
	
	Если ОшибкиЗаполнения.Количество() > 0 Тогда	
		Элементы.ГруппаОшибки.Видимость = Истина;
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения (" + Строка(ОшибкиЗаполнения.Количество()) + ")";
		Доступность = Истина;
		ПоказатьПредупреждение(, НСтр("ru='Документ не отправлен, обнаружены ошибки заполнения. Исправьте ошибки и повторите попытку'"));
		Возврат;
	Иначе
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения";
	КонецЕсли;
	
	НаборДействий = Новый Соответствие;		
	
	Если Повторно = Истина 
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется повторная отправка" 
		Или ЗначениеЗаполнено(ОбменСГИСЭПДКлиентСервер.ПолучитьСообщениеТитула(Объект.Ссылка, Объект.ТекущийТитул)) = Ложь Тогда
			Если Объект.ЭтоВходящий = Ложь И ДанныеСостоянияЭДО.СуществуетАктуальныйДокумент = Ложь Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Сформировать"));	
			Иначе
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.СформироватьОтвет"));
			КонецЕсли;	   
			
			ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
			ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
				"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));  
	Иначе		
		Если ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется подготовка к отправке" 
			И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется отправка" Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
		КонецЕсли;
		
		Если ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется отправка" Тогда
			ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
				"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
		КонецЕсли;		
	КонецЕсли;
	
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отправить"));
	
	ПараметрыВыполненияДействийПоЭДО = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();	
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ОбъектыУчета.Добавить(Объект.Ссылка);
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	
	ДополнительныеПараметрыУспешногоЗавершения = Новый Структура;
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("НаборДействий", НаборДействий);
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("ЭтоИсправление", ЭтоИсправление);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоИсправление", ЭтоИсправление);
	ДополнительныеПараметры.Вставить("ОповещениеУспешногоЗавершения",
		Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, 
									ДополнительныеПараметрыУспешногоЗавершения, 
									"ПослеВыполненияДействийПоЭДО_ОбработкаОшибки", ЭтотОбъект));

	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ИнтерфейсДокументовЭДОКлиент, ДополнительныеПараметры);
	
	ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	ДействиеОтправить = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отправить");
	КоличествоОтправлено = Результат.ОбработаноПоДействиям.Получить(ДействиеОтправить);
	
	Если КоличествоОтправлено <> Неопределено И КоличествоОтправлено > 0 Тогда
		Если ДополнительныеПараметры.ЭтоИсправление Тогда
			ОбменСГИСЭПДВызовСервера.ОтметитьИсправлениеДокумента(Объект.Ссылка);	
		КонецЕсли;
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
		Записать(ПараметрыЗаписи);
		
		ОтображаемыеВерсииТитулов = Неопределено;
		
		ТекстОповещения = НСтр("ru = 'Титул """ + Объект.ТекущийТитул + """ отправлен'");		
		ЗаголовокОповещения = НСтр("ru = 'Электронные документы'");	
		ДействиеПриНажатии = Неопределено;
		КартинкаОповещения = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО48;
		
		ПодключитьОбработчикОжидания("ОбновлениеДоступностиЭлементов", 2, Истина);	
		
		#Если Не МобильноеПриложениеКлиент Тогда
		ПоказатьОповещениеПользователя(ЗаголовокОповещения, ДействиеПриНажатии, ТекстОповещения, КартинкаОповещения,
			СтатусОповещенияПользователя.Важное);
		#КонецЕсли
	Иначе
		ЭтотОбъект.Доступность = Истина;
	КонецЕсли;
	
	Если ДополнительныеПараметры.НаборДействий.Получить(ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.ОтправитьВАрхив")) = Истина Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО_ОбработкаОшибки(ИнформацияОбОшибке, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт
	
	ОчиститьИдФайлТекущегоТитула(Истина);
	
	ПодключитьОбработчикОжидания("ОбновлениеДоступностиЭлементов", 2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеДоступностиЭлементов()

	ЭтотОбъект.Доступность = Истина;
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭЗЗ(ЭтотОбъект);
	УстановитьТекущийШагПомощника();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИдФайлТекущегоТитула(Записать = Ложь)
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
		ЭтотОбъект, 
		ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла", 
		Неопределено);
	
	Если Записать = Истина Тогда
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииДанныхНаФорме(ИмяЭлемента)
	
	НомерВерсии = 0;
	Для Каждого СтрВерсия Из ВерсииТитулов Цикл
		Если СтрВерсия.Титул = Объект.ТекущийТитул И СтрВерсия.НомерВерсии > НомерВерсии Тогда
			НомерВерсии = СтрВерсия.НомерВерсии;
		КонецЕсли;	
	КонецЦикла;

	СтруктураРеквизитовФормы = Новый Структура(ЭтотОбъект.ОписаниеРеквизитовФормы.ПараметрыФормы);
	СтруктураРеквизитовОбъекта = Новый Структура(ЭтотОбъект.ОписаниеРеквизитовФормы.РеквизитыОбъекта);
	
	Если СтруктураРеквизитовФормы.Свойство(ИмяЭлемента) Тогда
		ЗначениеРеквизита = ЭтотОбъект[ИмяЭлемента];
	ИначеЕсли СтруктураРеквизитовОбъекта.Свойство(ИмяЭлемента) Тогда
		ЗначениеРеквизита = Объект[ИмяЭлемента];
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, ИмяЭлемента, ЗначениеРеквизита);
	
	Если ИмяЭлемента = "СсылкаТитулГрузоотправителяПеревозчик" Тогда
		ОбновитьДополнительныеРеквизитыОсновнойФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДополнительныеРеквизитыОсновнойФормы()
	
	ОбменСГИСЭПД.ДобавитьОписаниеДополнительныхРеквизитов(ЭтотОбъект, , "ОсновнаяФорма");
	ОбменСГИСЭПД.ПоказатьДополнительныеРеквизитыОсновнойФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ОписаниеРеквизитовФормы() Экспорт
	
	Возврат ОписаниеРеквизитовФормыСервер();
	
КонецФункции

&НаСервере
Функция ОписаниеРеквизитовФормыСервер()
	
	Возврат ОбменСГИСЭПД.ОписаниеРеквизитовФормы(ЭтаФорма);
		
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяСоставительДоверенность(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяОснованиеРасчетовИнымЛицом(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяДоговор(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяУказанияГрузоотправителя(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяУполномоченныеЛица(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяАдресаПунктовПогрузкиИВыгрузки(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяГрузы(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаДоверенность(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаВодители(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаСоставительДоверенность(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаРазмерПлатыИПорядокРасчетов(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулГрузоотправителяГрузоотправительПриИзменении(Элемент)


	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулГрузоотправителяПеревозчикПриИзменении(Элемент)


	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулГрузоотправителяАдресПогрузкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулГрузоотправителяАдресПогрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВводАдреса(Элемент.Имя, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулГрузоотправителяАдресПогрузкиОбработкаВыбора(Элемент, Результат, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(ЭтотОбъект, Результат, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулГрузоотправителяПараметрыТранспортногоСредства, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, ХранимыеДанныеТитулГрузоотправителяПараметрыТранспортногоСредства, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулПеревозчикаЛицоОтветственноеЗаПеревозкуПриИзменении(Элемент)


	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулПеревозчикаСоставительПриИзменении(Элемент)


	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулПеревозчикаТранспортноеСредствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулПеревозчикаТранспортноеСредствоОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулПеревозчикаТранспортноеСредство, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулПеревозчикаТранспортноеСредствоПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, ХранимыеДанныеТитулПеревозчикаТранспортноеСредство, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулПеревозчикаТранспортноеСредствоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяЗаявленныеДатаВремяПодачиПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяЗаказДатаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяЗаказНомерПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПоДоверенностиЗаПеревозчикаПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПодтвержденияПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяФункцияПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ИзменитьОформлениеКнопок(Новый ФиксированнаяСтруктура("ИмяКнопки, ИдентификаторСтроки"));
	
КонецПроцедуры


&НаКлиенте
Процедура ВариантПоДоверенностиЗаГрузоотправителяПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
	ВариантПоДоверенностиПриИзмененииСервер();

КонецПроцедуры

&НаСервере
Процедура ВариантПоДоверенностиПриИзмененииСервер()
	
	ОрганизацияОписаниеТипов = Метаданные.ОпределяемыеТипы.Организация.Тип;
	КонтрагентОписаниеТипов = Метаданные.ОпределяемыеТипы.КонтрагентБЭД.Тип;
	Если Объект.ЭтоВходящий = Ложь Тогда	
		Если ВариантПоДоверенностиЗаГрузоотправителя = 1 Тогда
			Элементы.СсылкаТитулГрузоотправителяГрузоотправитель.ОграничениеТипа = КонтрагентОписаниеТипов;
			Элементы.СсылкаТитулГрузоотправителяСоставитель.ОграничениеТипа = ОрганизацияОписаниеТипов;
		Иначе
			Элементы.СсылкаТитулГрузоотправителяГрузоотправитель.ОграничениеТипа = ОрганизацияОписаниеТипов;
			Элементы.СсылкаТитулГрузоотправителяСоставитель.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");	
			Объект.СсылкаТитулГрузоотправителяСоставитель = Неопределено;
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулГрузоотправителяПредставительГрузоотправителя");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СсылкаТитулГрузоотправителяСоставительПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ИзмененСоставУчастников = Истина;
	
	НаименованиеСоставителя = Строка(Объект.СсылкаТитулГрузоотправителяСоставитель);
	
	Если ЗначениеЗаполнено(НаименованиеСоставителя) Тогда
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулГрузоотправителяПредставительГрузоотправителя", НаименованиеСоставителя);
	Иначе
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулГрузоотправителяПредставительГрузоотправителя");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПричинаОтказаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры



&НаКлиенте
Процедура ИныеПолучатели(Команда)
	
	ТолькоПросмотрИныхПолучателей = Элементы.Страницы.ТекущаяСтраница.ТолькоПросмотр
										Или Элементы.Страницы.ТекущаяСтраница <> Элементы.СтраницаТитулГрузоотправителя;
		
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТитулГрузоотправителя Тогда
		ИмяТаблицы = "ТитулГрузоотправителяИдентификаторыИныхПолучателейФайла";	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТитулПеревозчика Тогда
		ИмяТаблицы = "ТитулПеревозчикаИдентификаторыИныхПолучателейФайла";
	КонецЕсли;
	
	Организация = Неопределено;
	ТипОрганизация = ОбменСГИСЭПДВызовСервера.ПолучитьТипОрганизация();
	Если ТипЗнч(Объект.СсылкаТитулПеревозчикаСоставитель) = ТипОрганизация Тогда
		Организация = Объект.СсылкаТитулПеревозчикаСоставитель;
	ИначеЕсли ТипЗнч(Объект.СсылкаТитулГрузоотправителяПеревозчик) = ТипОрганизация Тогда
		Организация = Объект.СсылкаТитулГрузоотправителяПеревозчик;
	ИначеЕсли ТипЗнч(Объект.СсылкаТитулГрузоотправителяСоставитель) = ТипОрганизация Тогда
		Организация = Объект.СсылкаТитулГрузоотправителяСоставитель;
	ИначеЕсли ТипЗнч(Объект.СсылкаТитулГрузоотправителяГрузоотправитель) = ТипОрганизация Тогда
		Организация = Объект.СсылкаТитулГрузоотправителяГрузоотправитель;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) = Ложь Тогда
		ПоказатьПредупреждение(, "Сначала нужно выбрать организацию, для которой настроена учетная запись 1С-ЭДО");	
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", Организация);
	
	МассивПолучателей = Новый Массив;
	ИтераторСтроки = 1;
	КлючСтруктуры = ИмяТаблицы + "__" + ИтераторСтроки + "__ИдентификаторИногоПолучателя";
	ЗначениеРеквизита = Неопределено;
	КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, ИмяТаблицы);
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	Пока СтруктураВерсииТитула.Свойство(КлючСтруктуры, ЗначениеРеквизита) Цикл
		Если ЗначениеРеквизита <> Объект.ИдентификаторГрузоотправителя
		И ЗначениеРеквизита <> Объект.ИдентификаторПеревозчика Тогда
			МассивПолучателей.Добавить(ЗначениеРеквизита);	
			ИтераторСтроки = ИтераторСтроки + 1;
			КлючСтруктуры = ИмяТаблицы + "__" + ИтераторСтроки + "__ИдентификаторИногоПолучателя";
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы.Вставить("ВидДокумента", Объект.ВидДокумента);
	ПараметрыФормы.Вставить("ИмяТаблицы", ИмяТаблицы);
	ПараметрыФормы.Вставить("МассивПолучателей", МассивПолучателей);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотрИныхПолучателей);
	
	ОписаниеИныеПолучатели_Закрытие = Новый ОписаниеОповещения("ИныеПолучатели_Закрытие", ЭтотОбъект, ПараметрыФормы);
	
	ОткрытьФорму("Документ.ЭлектронныйЗаказЗаявка.Форма.ИныеПолучатели", ПараметрыФормы, ЭтотОбъект, 
					УникальныйИдентификатор, , , ОписаниеИныеПолучатели_Закрытие, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
					
КонецПроцедуры

&НаКлиенте
Процедура ИныеПолучатели_Закрытие(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(ЭтотОбъект, ДополнительныеПараметры.ИмяТаблицы);
		ИтераторСтроки = 1;
		Для Каждого ИДПолучателя Из Результат Цикл
			Если ИДПолучателя <> Объект.ИдентификаторГрузоотправителя
			И ИДПолучателя <> Объект.ИдентификаторПеревозчика Тогда
				КлючКуда = ДополнительныеПараметры.ИмяТаблицы + "__" + ИтераторСтроки + "__ИдентификаторИногоПолучателя";
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, КлючКуда, ИДПолучателя);
				ИтераторСтроки = ИтераторСтроки + 1;
			КонецЕсли;
		КонецЦикла;	
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры




#Область Навигация

&НаКлиенте
Процедура Шаг1ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг1", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг2ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг2", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

#КонецОбласти


#Область НавигацияПоСтраницам

&НаКлиенте
Процедура ИнкрементироватьОтображаемуюВерсиюТитула(ТитулСтрока, Инкремент)
	
	Если Инкремент = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтображаемыеВерсииТитулов = Неопределено Тогда
		ОтображаемыеВерсииТитулов = Новый Структура;
	Иначе
		ТекущееЗначениеВерсии = Неопределено;
		ОтображаемыеВерсииТитулов.Свойство(ТитулСтрока, ТекущееЗначениеВерсии);
		Если ТекущееЗначениеВерсии <> Неопределено Тогда
			ОтображаемыеВерсииТитулов.Вставить(ТитулСтрока, ТекущееЗначениеВерсии + Инкремент);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницы(ОтображаемаяСтраница)
	
	ОтображаемаяСтраницаЦелевая = ПодменитьСтраницуДляТестированияФормы(ОтображаемаяСтраница);

	// Чтобы не отрастали лишние скролл-бары по высоте из-за разного числа элементов
	// на разных страницах, оставляем видимость только у одной - отображаемой страницы.
	
	Для каждого СтраницаЭЗЗ Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		СтраницаЭЗЗ.Видимость = (СтраницаЭЗЗ = ОтображаемаяСтраницаЦелевая);
	КонецЦикла;

	Элементы.Страницы.ТекущаяСтраница  = ОтображаемаяСтраницаЦелевая;
	
	
	ОбменСГИСЭПД.ПодготовитьФормуДляОтметкиОбязательныхПолей(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПодменитьСтраницуДляТестированияФормы(ОтображаемаяСтраница)
	
	Возврат ОтображаемаяСтраница;
	
КонецФункции

&НаСервере
Процедура УстановитьТекущийШагПомощника(ПредыдущийТекущийТитул = Неопределено)
	
	Если Параметры.Свойство("ТитулСтраницы") Тогда
		ТитулСтраницы = Параметры.ТитулСтраницы;
	Иначе
		ТитулСтраницы = ?(ЗначениеЗаполнено(Объект.ТекущийТитул), Объект.ТекущийТитул, ПредыдущийТекущийТитул);
	КонецЕсли;
	
	НачатьСПервойСтраницы = ТолькоПросмотр ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка);

	Если НачатьСПервойСтраницы Тогда		
		УстановитьВидимостьСтраницыНачало("Шаг1");		
	Иначе		
		Если ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2") Тогда			
			УстановитьВидимостьСтраницыТитулПеревозчика("Шаг2"); 						
		Иначе			
			УстановитьВидимостьСтраницыНачало("Шаг1");			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьТекущийШагПомощника()
	
	Если ТолькоПросмотр ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыНачало(ИмяШага)

	УстановитьВидимостьСтраницы(Элементы.СтраницаТитулГрузоотправителя);
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	РазместитьНавигацию(ИмяШагаПараметр);
	
	СохранитьТекущийШагПомощника();

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулПеревозчика(ИмяШага)

	УстановитьВидимостьСтраницы(Элементы.СтраницаТитулПеревозчика);
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	РазместитьНавигацию(ИмяШагаПараметр);
	
	СохранитьТекущийШагПомощника();

КонецПроцедуры


&НаСервере
Функция ИмяПомощника()

	Возврат "ЭлектронныйЗаказЗаявка";

КонецФункции


&НаСервере
Функция НавигацияПомощника()

	СтруктураНавигации = Новый Структура;
	
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(1), СтруктураШагаНачало(1));
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(2), СтруктураШагаПодтверждение(2));
	Для Каждого КиЗ Из СтруктураНавигации Цикл
		ШагВыполнен = Ложь;
		Для Каждого СтрВерсия Из ВерсииТитулов Цикл
			Если СтрВерсия.Титул = КиЗ.Значение.ТипЭлементаРегламента И СтрВерсия.ИдентификаторФайла <> "" Тогда
				ШагВыполнен = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		КиЗ.Значение.Выполнен = ШагВыполнен; 	
		КиЗ.Значение.Доступен = КиЗ.Значение.Доступен Или КиЗ.Значение.Выполнен;
	КонецЦикла;
	
	Возврат СтруктураНавигации;
	
КонецФункции

&НаСервере
Функция СтруктураШагаНачало(НомерШага)
	
	Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1");
	Отбор = Новый Структура("Титул", Титул);
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Оформление'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулГрузоотправителя";
	СтруктураШага.ТипЭлементаРегламента = Титул;
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулГрузоотправителяИдентификаторФайла); 
	СтруктураШага.Доступен = Истина;
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулГрузоотправителя");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаПодтверждение(НомерШага)
	
	Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2");
	Отбор = Новый Структура("Титул", Титул);
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Подтверждение'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулПеревозчика";
	СтруктураШага.ТипЭлементаРегламента = Титул;
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулПеревозчикаИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = Титул;
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулПеревозчика");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция ОтображаемаяВерсияТитула(СтрокиВерсий, ТитулСтрока)
	
	МаксВерсия = 0;
	Для Каждого СтрокаТЗ Из СтрокиВерсий Цикл
		Если СтрокаТЗ.НомерВерсии > МаксВерсия Тогда
			МаксВерсия = СтрокаТЗ.НомерВерсии;
		КонецЕсли;
	КонецЦикла;
	
	Если ОтображаемыеВерсииТитулов = Неопределено Тогда
		ОтображаемыеВерсииТитулов = Новый Структура;
		ОтображаемыеВерсииТитулов.Вставить(ТитулСтрока, МаксВерсия);
		Возврат МаксВерсия;
	КонецЕсли;
	
	ТекущееЗначениеВерсии = Неопределено;
	ОтображаемыеВерсииТитулов.Свойство(ТитулСтрока, ТекущееЗначениеВерсии);
	
	Если ТекущееЗначениеВерсии = Неопределено Тогда
		ОтображаемыеВерсииТитулов.Вставить(ТитулСтрока, МаксВерсия);
		Возврат МаксВерсия;
	Иначе
		Возврат ТекущееЗначениеВерсии;		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыОтображаемойВерсии(ВыбранныйТитулСтрока, ОтмечатьТекущий)
	
	ВыбранныйТитул = ОбменСГИСЭПДКлиентСервер.ТитулПоПрефиксу("Документ.ЭлектронныйЗаказЗаявка", ВыбранныйТитулСтрока); 
	
	Если ЗначениеЗаполнено(ВыбранныйТитул) Тогда
		Отбор = Новый Структура("Титул", ВыбранныйТитул);
		СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
		СтрокиВерсий.Сортировать("НомерВерсии");	
		НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, ВыбранныйТитулСтрока);
		
		РеквизитыТекущейВерсииТитула = ОбменСГИСЭПД.ПолучитьВерсиюТитулаДокумента(СтруктураРеквизитов, ВыбранныйТитул, НомерВерсии);
		ОбменСГИСЭПД.ЗаполнитьРеквизитыПоВерсии(ЭтотОбъект, ВыбранныйТитул, НомерВерсии, РеквизитыТекущейВерсииТитула);
		ЗаполнитьПредставленияАдресов(ВыбранныйТитул);
		Если ОтмечатьТекущий = Истина Тогда
			СтруктураСТекущимиДанными = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
			СтруктураДанныхОбъекта = ОбменСГИСЭПДКлиентСервер.ПолучитьСериализуемыйОбъектСДаннымиДокумента(ЭтотОбъект);
			СтруктураСДаннымиФормыДляОформленияКнопок = ОбменСГИСЭПДКлиентСервер.СтруктураСДаннымиФормыДляОформленияКнопок(ЭтотОбъект);
			
			Результат = ИзменитьОформлениеКнопокНаСервере(СтруктураСТекущимиДанными,
				Неопределено,
				Неопределено,
				СтруктураДанныхОбъекта,
				СтруктураСДаннымиФормыДляОформленияКнопок);
				
			Если Результат.Успешно Тогда
				ЭтотОбъект.АдресДереваСоответствийИтаблицыКнопок = Результат.НовыйАдресВХранилище;	
				МассивОформления = Результат.МассивОформления;
				ОбменСГИСЭПДКлиентСервер.ОформлениеКнопокНаФорме(ЭтотОбъект, СтруктураСТекущимиДанными, МассивОформления);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура РазместитьНавигацию(ВыбранныйТитулСтрока)

	НавигацияПараметрФормы = ВыбранныйТитулСтрока;
	
	ЗаполнитьРеквизитыОтображаемойВерсии(ВыбранныйТитулСтрока, Истина);

	СтруктураНавигацииПомощника = НавигацияПомощника();
	НавигацияПомощниковСВозвратомЭПД.РазместитьНавигацию(ЭтотОбъект, СтруктураНавигацииПомощника, Параметры);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеШага(ИмяШага, НавигационнаяСсылка)
	
	ИнкрементВерсии = 0;
	Если НавигационнаяСсылка = "Влево" Тогда
		ИнкрементВерсии = -1;
	ИначеЕсли НавигационнаяСсылка = "Вправо" Тогда
		ИнкрементВерсии = 1;
	КонецЕсли;
	
	Если ИмяШага = "Шаг1" Тогда
		ИнкрементироватьОтображаемуюВерсиюТитула("ТитулГрузоотправителя", ИнкрементВерсии);
		УстановитьВидимостьСтраницыНачало(ИмяШага);
	ИначеЕсли ИмяШага = "Шаг2" Тогда
		ИнкрементироватьОтображаемуюВерсиюТитула("ТитулПеревозчика", ИнкрементВерсии);
		УстановитьВидимостьСтраницыТитулПеревозчика(ИмяШага);	
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбъектыОбязательныеДляЗаполнения

&НаКлиенте
Процедура ИзменитьОформлениеКнопок(Параметр) Экспорт

	Если Не ЭтотОбъект.НачальноеОформлениеВыполнено Тогда
		ЭтотОбъект.ТребуетсяДополнительноеОформлениеКнопок = Истина;
		Если ЭтотОбъект.СтруктураДополнительногоОформленияКнопок <> Неопределено Тогда
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = 
				Новый ФиксированнаяСтруктура("ИмяКнопки, ИдентификаторСтроки");
		Иначе
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = Параметр;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	СтруктураСТекущимиДаннымиРеквизитов = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	СтруктураДанныхОбъекта = Неопределено;
	СтруктураСДаннымиФормыДляОформленияКнопок = 
		ОбменСГИСЭПДКлиентСервер.СтруктураСДаннымиФормыДляОформленияКнопок(ЭтотОбъект);
	
	Результат = ИзменитьОформлениеКнопокНаСервере(СтруктураСТекущимиДаннымиРеквизитов,
		Параметр.ИмяКнопки,
		Параметр.ИдентификаторСтроки,
		СтруктураДанныхОбъекта,
		СтруктураСДаннымиФормыДляОформленияКнопок);
		
	Если Результат.Успешно Тогда
		ЭтотОбъект.АдресДереваСоответствийИтаблицыКнопок = Результат.НовыйАдресВХранилище;	
		МассивОформления = Результат.МассивОформления;
		ОбменСГИСЭПДКлиентСервер.ОформлениеКнопокНаФорме(ЭтотОбъект,
			СтруктураСТекущимиДаннымиРеквизитов, МассивОформления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзменитьОформлениеКнопокНаСервере(Знач СтруктураСТекущимиДаннымиРеквизитов,
	ИмяКнопки = Неопределено,
	ИдентификаторСтроки = Неопределено,
	Знач СтруктураДанныхОбъекта,
	Знач СтруктураСДаннымиФормыДляОформленияКнопок)
	
	НовыйАдресВХранилище = ОбменСГИСЭПД.ЗапуститьИзменениеОформленияКнопок(СтруктураСДаннымиФормыДляОформленияКнопок,
		СтруктураСТекущимиДаннымиРеквизитов, ИмяКнопки, ИдентификаторСтроки, СтруктураДанныхОбъекта);

	Результат = ОбменСГИСЭПД.ОбработатьРезультатИзмененияОформленияКнопок(НовыйАдресВХранилище);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(Параметр)
	
	СтруктураСТекущимиДаннымиРеквизитов = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(СтруктураСТекущимиДаннымиРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(Знач СтруктураСТекущимиДанными)
	
	ОбменСГИСЭПД.ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(ЭтотОбъект, СтруктураСТекущимиДанными);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтметитьОбязательныеНеЗаполненныеЭлементыФормы" Тогда
		Если УникальныйИдентификатор <> Параметр Тогда
			Возврат;
		КонецЕсли;
		ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(Параметр);
	ИначеЕсли ИмяСобытия = "ИзменитьОформлениеКнопокФормы" Тогда
		Если УникальныйИдентификатор <> Параметр.УникальныйИдентификаторОбновляемойФормы Тогда
			Возврат;
		КонецЕсли;
		ИзменитьОформлениеКнопок(Параметр);	
	ИначеЕсли СтрНачинаетсяС(ИмяСобытия, "Запись_") И Источник <> Неопределено Тогда
		Если Источник = Объект.СсылкаТитулГрузоотправителяГрузоотправитель Тогда
			СсылкаТитулГрузоотправителяГрузоотправительПриИзменении(Элементы.СсылкаТитулГрузоотправителяГрузоотправитель);
		ИначеЕсли Источник = Объект.СсылкаТитулГрузоотправителяПеревозчик Тогда
			СсылкаТитулГрузоотправителяПеревозчикПриИзменении(Элементы.СсылкаТитулГрузоотправителяПеревозчик);
		ИначеЕсли Источник = ХранимыеДанныеТитулГрузоотправителяПараметрыТранспортногоСредства Тогда
			ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоПриИзменении(Элементы.ХранимыеДанныеТитулГрузоотправителяПараметрыТранспортногоСредства);
		ИначеЕсли Источник = ХранимыеДанныеТитулПеревозчикаТранспортноеСредство Тогда
			ХранимыеДанныеТитулПеревозчикаТранспортноеСредствоПриИзменении(Элементы.ХранимыеДанныеТитулПеревозчикаТранспортноеСредство);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
