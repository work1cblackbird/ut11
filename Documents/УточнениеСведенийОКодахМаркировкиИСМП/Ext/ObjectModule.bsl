#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		ДанныеОтчетаПроизводственнойЛинии.Очистить();
		ДокументыСертификации.Очистить();
		Товары.Очистить();
		ШтрихкодыУпаковок.Очистить();
	КонецЕсли;
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.МаркировкаТоваровИСМП") Тогда
		
		ЗаполнитьПоМаркировке(ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоПотребительскихУпаковок");
	
	Если ОтчетПроизводственнойЛинии Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары");
		МассивНепроверяемыхРеквизитов.Добавить("ШтрихкодыУпаковок");
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ДанныеОтчетаПроизводственнойЛинии");
	КонецЕсли;
	
	// Молочная продукция
	МассивНепроверяемыхРеквизитов.Добавить("Товары.ИдентификаторПроисхожденияВЕТИС");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.СрокГодности");
	МассивНепроверяемыхРеквизитов.Добавить("ИдентификаторПроисхожденияВЕТИССтрокой");
	МассивНепроверяемыхРеквизитов.Добавить("ИдентификаторПроисхожденияВЕТИС");
	МассивНепроверяемыхРеквизитов.Добавить("СрокГодности");
	
	ОбязательныеРеквизиты = Новый Массив;
	
	Если ОтчетПроизводственнойЛинии Тогда
		
		Если Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодностиВСД Тогда
			
			Если ИнтеграцияИСМПВЕТИС.ИспользуетсяПодсистемаВетИС() Тогда
				ОбязательныеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИС");
			Иначе
				ОбязательныеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИССтрокой");
			КонецЕсли;
			ОбязательныеРеквизиты.Добавить("СрокГодности");
			
		ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодности Тогда
			
			ОбязательныеРеквизиты.Добавить("СрокГодности");
			
		ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМ Тогда
			
			Если ЗначениеЗаполнено(КодТНВЭД) И ЗначениеЗаполнено(СпособВводаВОборот) Тогда
				
				ОбщегоНазначения.СообщитьПользователю(
					НСтр("ru = 'Невозможно передать сведения об уточнении данных ""Код ТН ВЭД"" и ""Способ ввода в оборот"" в одном документе.
								|""Способ ввода в оборот"" возможно уточнить для кодов в статусе ""Нанесён"",
								|""Код ТН ВЭД"" возможно уточнить для кодов в статусе ""В обороте""'"),
					ЭтотОбъект,
					"СпособВводаВОборот",,
					Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодностиВСД Тогда
			
			ОбязательныеРеквизиты.Добавить("Товары.ИдентификаторПроисхожденияВЕТИС");
			ОбязательныеРеквизиты.Добавить("Товары.СрокГодности");
			
		ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодности Тогда
			
			ОбязательныеРеквизиты.Добавить("Товары.СрокГодности");
			
		ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМ Тогда
			
			Если ЗначениеЗаполнено(СпособВводаВОборот) Тогда
				
				Для Каждого СтрокаТовары Из Товары Цикл
					
					Если ЗначениеЗаполнено(СтрокаТовары.КодТНВЭД) Тогда
						ОбщегоНазначения.СообщитьПользователю(
							СтрШаблон(
								НСтр("ru = 'Невозможно передать сведения об уточнении данных ""Код ТН ВЭД"" и ""Способ ввода в оборот"" в одном документе.
									|""Способ ввода в оборот"" возможно уточнить для кодов в статусе ""Нанесён"",
									|""Код ТН ВЭД"", указанный в строке %1, возможно уточнить для кодов в статусе ""В обороте""'"),
								СтрокаТовары.НомерСтроки),
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "КодТНВЭД"),,
							Отказ);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Операция = Перечисления.ВидыОперацийИСМП.СведенияОРазрешительнойДокументацииДляВводаВОборот Тогда
		
		Для Каждого СтрокаСертификации Из ДокументыСертификации Цикл
			
			РеквизитыСертификации = Новый Соответствие();
			Если Не ЗначениеЗаполнено(СтрокаСертификации.ВидДокументаСертификации) Тогда
				РеквизитыСертификации.Вставить("ВидДокументаСертификации", "Вид документа");
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаСертификации.НомерДокументаСертификации) Тогда
				РеквизитыСертификации.Вставить("НомерДокументаСертификации", "Номер документа");
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаСертификации.ДатаДокументаСертификации) Тогда
				РеквизитыСертификации.Вставить("ДатаДокументаСертификации", "Дата документа");
			КонецЕсли;
			
			Для Каждого КлючИЗначение Из РеквизитыСертификации Цикл
				
				ТекстСообщения = СтрШаблон(
					НСтр(
						"ru = 'В строке %1 табличной части Разрешительная документация не заполнено поле %2'"),
						СтрокаСертификации.НомерСтроки,
						КлючИЗначение.Значение);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"ДокументыСертификации", СтрокаСертификации.НомерСтроки, КлючИЗначение.Ключ),,
					Отказ);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Не ОтчетПроизводственнойЛинии Тогда
		ИнтеграцияИСМПСлужебный.ПроверитьЗаполнениеШтрихкодовУпаковок(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	МассивНепроверяемыхРеквизитов = ОбщегоНазначенияКлиентСервер.РазностьМассивов(МассивНепроверяемыхРеквизитов, ОбязательныеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ИнтеграцияИСМП.ПроверкаЗаполненияКоличестваПотребительскихУпаковок(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияИСМП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование   = Неопределено;
	ДанныеОтчетаПроизводственнойЛинии.Очистить();
	ДокументыСертификации.Очистить();
	ШтрихкодыУпаковок.Очистить();
	
	ИдентификаторПроисхожденияВЕТИС = ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("ИдентификаторПроисхожденияВЕТИС");
	
	СрокГодности                           = "";
	СкоропортящаясяПродукция               = Ложь;
	ИдентификаторПроисхожденияВЕТИССтрокой = "";
	
	ПроизводственнаяПлощадкаВЕТИС = ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("ПроизводственнаяПлощадкаВЕТИС");
	ИдентификаторПроизводственнойПлощадкиВЕТИС = "";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеИСМП.ДанныеЗаполненияУточненияСведенийОКодахМаркировкиИСМП(Организация);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеИСМП.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоМаркировке(ДанныеЗаполнения)
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДокументОснование,
			"Организация,
			|ВидПродукции");
		
		ДоступныеВидыПродукцииИС = Документы.УточнениеСведенийОКодахМаркировкиИСМП.ДоступныеВидыПродукцииУточненияСведенийОКодахМаркировки();
		
		Если ДоступныеВидыПродукцииИС.Найти(Реквизиты.ВидПродукции) = Неопределено Тогда
			ВызватьИсключение СтрШаблон(
				НСтр("ru = 'Вид продукции %1 не поддерживает уточнение сведений о кодах маркировки.'"),
				Реквизиты.ВидПродукции);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Реквизиты);
		
		ЭтоПродукцияПодконтрольнаяВЕТИС = ОбщегоНазначенияИСКлиентСервер.ЭтоПродукцияПодконтрольнаяВЕТИС(ВидПродукции);
		ЭтоМолочнаяПродукция            = ОбщегоНазначенияИСКлиентСервер.ЭтоМолочнаяПродукцияИСМП(ВидПродукции);

		Если ЭтоПродукцияПодконтрольнаяВЕТИС
				И Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодностиВСД
			Или Документы.УточнениеСведенийОКодахМаркировкиИСМП.ВидПродукцииИспользуетУточнениеСроковГодности(ВидПродукции)
				И Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодности
			Или ЭтоМолочнаяПродукция
				И Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМФактическийВес Тогда
		Иначе
			Операция = Перечисления.ВидыОперацийИСМП.КорректировкаСведенийКМ;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Основание", ДанныеЗаполнения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	Товары.Упаковка,
		|	СУММА(Товары.Количество) КАК Количество,
		|	СУММА(Товары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(Товары.КоличествоПотребительскихУпаковок) КАК КоличествоПотребительскихУпаковок
		|ИЗ
		|	Документ.МаркировкаТоваровИСМП.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Основание
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Серия,
		|	Товары.Упаковка";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Товары.Очистить();
		Пока Выборка.следующий() Цикл
			ЗаполнитьЗначенияСвойств(Товары.Добавить(), Выборка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли