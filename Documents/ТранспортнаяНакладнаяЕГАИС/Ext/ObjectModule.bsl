#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		ЗаполнитьНаОснованииТТНИсходящейЕГАИС(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		ЗаполнитьНаОснованииТТНВходящейЕГАИС(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	Иначе
		
		ИнтеграцияЕГАИСПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Идентификатор) Тогда
		Идентификатор = ИнтеграцияЕГАИС.НовыйИдентификаторДокумента();
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияЕГАИС.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЕГАИС.ЗаписатьСтатусДокументаЕГАИСПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование  = Неопределено;
	Идентификатор      = "";
	ИдентификаторЕГАИС = "";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииТТНИсходящейЕГАИС(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ДокументТТНИсходящаяЕГАИС.Ссылка                     КАК Ссылка,
		|	ДокументТТНИсходящаяЕГАИС.Грузоотправитель           КАК Грузоотправитель,
		|	ДокументТТНИсходящаяЕГАИС.ТипДоставки                КАК ТипДоставки,
		|	ДокументТТНИсходящаяЕГАИС.Перевозчик                 КАК Перевозчик,
		|	ДокументТТНИсходящаяЕГАИС.ТипТранспорта              КАК ТипТранспорта,
		|	ДокументТТНИсходящаяЕГАИС.ТоварВПутиПринадлежитГрузополучателю КАК ТоварВПутиПринадлежитГрузополучателю,
		|	ДокументТТНИсходящаяЕГАИС.НомерТранспортногоСредства КАК НомерТранспортногоСредства,
		|	ДокументТТНИсходящаяЕГАИС.Прицеп                     КАК Прицеп,
		|	ДокументТТНИсходящаяЕГАИС.Заказчик                   КАК Заказчик,
		|	ДокументТТНИсходящаяЕГАИС.Водитель                   КАК Водитель,
		|	ДокументТТНИсходящаяЕГАИС.ПунктПогрузки              КАК ПунктПогрузки,
		|	ДокументТТНИсходящаяЕГАИС.ПунктРазгрузки             КАК ПунктРазгрузки,
		|	ДокументТТНИсходящаяЕГАИС.Перенаправление            КАК Перенаправление,
		|	ДокументТТНИсходящаяЕГАИС.Экспедитор                 КАК Экспедитор,
		|	
		|	СтатусыДокументовЕГАИС.Статус              КАК СтатусЕГАИС,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие1 КАК ДальнейшееДействиеЕГАИС1,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие2 КАК ДальнейшееДействиеЕГАИС2,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие3 КАК ДальнейшееДействиеЕГАИС3
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС КАК ДокументТТНИсходящаяЕГАИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ДокументТТНИсходящаяЕГАИС.Ссылка)
		|ГДЕ
		|	ДокументТТНИсходящаяЕГАИС.Ссылка = &Ссылка",
		"ТТНИсходящаяЕГАИС");
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	СУММА(Товары.Количество) КАК Количество
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка",
		"ИтогПоКоличеству");
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ДокументТранспортнаяНакладнаяЕГАИС.Ссылка                               КАК Ссылка,
		|	ДокументТранспортнаяНакладнаяЕГАИС.НомерТН                              КАК НомерТН,
		|	ДокументТранспортнаяНакладнаяЕГАИС.ДатаТН                               КАК ДатаТН,
		|	ДокументТранспортнаяНакладнаяЕГАИС.ТоварВПутиПринадлежитГрузополучателю КАК ТоварВПутиПринадлежитГрузополучателю,
		|	ДокументТранспортнаяНакладнаяЕГАИС.ПунктРазгрузки                       КАК ПунктРазгрузки,
		|	ДокументТранспортнаяНакладнаяЕГАИС.Количество                           КАК Количество,
		|	
		|	СтатусыДокументовЕГАИС.Статус              КАК СтатусЕГАИС,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие1 КАК ДальнейшееДействиеЕГАИС1,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие2 КАК ДальнейшееДействиеЕГАИС2,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие3 КАК ДальнейшееДействиеЕГАИС3
		|ИЗ
		|	Документ.ТранспортнаяНакладнаяЕГАИС КАК ДокументТранспортнаяНакладнаяЕГАИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ДокументТранспортнаяНакладнаяЕГАИС.Ссылка)
		|ГДЕ
		|	ДокументТранспортнаяНакладнаяЕГАИС.ТоварноТранспортнаяНакладная = &Ссылка
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|	И НЕ ДокументТранспортнаяНакладнаяЕГАИС.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументТранспортнаяНакладнаяЕГАИС.ДатаТН ВОЗР,
		|	ДокументТранспортнаяНакладнаяЕГАИС.Дата ВОЗР
		|",
		"ТранспортныеНакладные");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.ТранспортнаяНакладнаяЕГАИС.КонечныеСтатусы());
	
	РезультатыЗапроса = ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
	
	//@skip-warning
	ВыборкаТТНИсходящаяЕГАИС = РезультатыЗапроса["ТТНИсходящаяЕГАИС"].Выбрать();
	//@skip-warning
	ВыборкаИтогПоКоличеству = РезультатыЗапроса["ИтогПоКоличеству"].Выбрать();
	//@skip-warning
	ТаблицаТранспортныеНакладные = РезультатыЗапроса["ТранспортныеНакладные"].Выгрузить();
	
	ВыборкаТТНИсходящаяЕГАИС.Следующий();
	ВыборкаИтогПоКоличеству.Следующий();
	
	Если ВыборкаТТНИсходящаяЕГАИС.ТоварВПутиПринадлежитГрузополучателю Тогда
		ВызватьИсключение НСтр("ru = 'Не требуется, транспортную накладную оформляет грузополучатель'");
	Иначе
		
		ТоварВПутиПринадлежитГрузополучателю = Ложь;
		Для Каждого Выборка Из ТаблицаТранспортныеНакладные Цикл
			Если Выборка.СтатусЕГАИС = Перечисления.СтатусыОбработкиТранспортныхНакладныхЕГАИС.ПроведенЕГАИС
				И Выборка.ТоварВПутиПринадлежитГрузополучателю Тогда
				ТоварВПутиПринадлежитГрузополучателю = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если ТоварВПутиПринадлежитГрузополучателю Тогда
			ВызватьИсключение НСтр("ru = 'Не требуется, транспортную накладную оформляет грузополучатель'");
		КонецЕсли;
		
		ОрганизацияЕГАИС             = ВыборкаТТНИсходящаяЕГАИС.Грузоотправитель;
		ТоварноТранспортнаяНакладная = ВыборкаТТНИсходящаяЕГАИС.Ссылка;
		Заказчик                     = ВыборкаТТНИсходящаяЕГАИС.Заказчик;
		
		Если ТаблицаТранспортныеНакладные.Количество() = 0 Тогда
			
			ПунктПогрузки              = ВыборкаТТНИсходящаяЕГАИС.ПунктРазгрузки;
			ПунктРазгрузки             = Неопределено;
			
			Перевозчик                 = Неопределено;
			Перенаправление            = Неопределено;
			ТипТранспорта              = Неопределено;
			НомерТранспортногоСредства = Неопределено;
			Прицеп                     = Неопределено;
			Водитель                   = Неопределено;
			Экспедитор                 = Неопределено;
			Количество                 = ВыборкаИтогПоКоличеству.Количество;
			
		Иначе
			
			ПоследняяТранспортнаяНакладная = ТаблицаТранспортныеНакладные[ТаблицаТранспортныеНакладные.Количество() - 1];
			
			ПунктПогрузки              = ПоследняяТранспортнаяНакладная.ПунктРазгрузки;
			ПунктРазгрузки             = Неопределено;
			
			Перевозчик                 = Неопределено;
			Перенаправление            = Неопределено;
			ТипТранспорта              = Неопределено;
			НомерТранспортногоСредства = Неопределено;
			Прицеп                     = Неопределено;
			Водитель                   = Неопределено;
			Экспедитор                 = Неопределено;
			Количество                 = ПоследняяТранспортнаяНакладная.Количество;
			
			НоваяСтрока = ТранспортныеНакладные.Добавить();
			НоваяСтрока.ДокументОснование = ПоследняяТранспортнаяНакладная.Ссылка;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииТТНВходящейЕГАИС(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ДокументТТНВходящаяЕГАИС.Ссылка                               КАК Ссылка,
		|	ДокументТТНВходящаяЕГАИС.Грузополучатель                      КАК Грузополучатель,
		|	ДокументТТНВходящаяЕГАИС.ТипДоставки                          КАК ТипДоставки,
		|	ДокументТТНВходящаяЕГАИС.Перевозчик                           КАК Перевозчик,
		|	ДокументТТНВходящаяЕГАИС.ТипТранспорта                        КАК ТипТранспорта,
		|	ДокументТТНВходящаяЕГАИС.ТоварВПутиПринадлежитГрузополучателю КАК ТоварВПутиПринадлежитГрузополучателю,
		|	ДокументТТНВходящаяЕГАИС.НомерТранспортногоСредства           КАК НомерТранспортногоСредства,
		|	ДокументТТНВходящаяЕГАИС.Прицеп                               КАК Прицеп,
		|	ДокументТТНВходящаяЕГАИС.Заказчик                             КАК Заказчик,
		|	ДокументТТНВходящаяЕГАИС.Водитель                             КАК Водитель,
		|	ДокументТТНВходящаяЕГАИС.ПунктПогрузки                        КАК ПунктПогрузки,
		|	ДокументТТНВходящаяЕГАИС.ПунктРазгрузки                       КАК ПунктРазгрузки,
		|	ДокументТТНВходящаяЕГАИС.Перенаправление                      КАК Перенаправление,
		|	ДокументТТНВходящаяЕГАИС.Экспедитор                           КАК Экспедитор,
		|	ДокументТТНВходящаяЕГАИС.НомерТранспортнойНакладной           КАК НомерТранспортнойНакладной,
		|	ДокументТТНВходящаяЕГАИС.ДатаТранспортнойНакладной            КАК ДатаТранспортнойНакладной,
		|
		|	СтатусыДокументовЕГАИС.Статус              КАК СтатусЕГАИС,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие1 КАК ДальнейшееДействиеЕГАИС1,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие2 КАК ДальнейшееДействиеЕГАИС2,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие3 КАК ДальнейшееДействиеЕГАИС3
		|ИЗ
		|	Документ.ТТНВходящаяЕГАИС КАК ДокументТТНВходящаяЕГАИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ДокументТТНВходящаяЕГАИС.Ссылка)
		|ГДЕ
		|	ДокументТТНВходящаяЕГАИС.Ссылка = &Ссылка",
		"ТТНВходящаяЕГАИС");
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	СУММА(Товары.Количество) КАК Количество
		|ИЗ
		|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка",
		"ИтогПоКоличеству");
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ДокументТранспортнаяНакладнаяЕГАИС.Ссылка                               КАК Ссылка,
		|	ДокументТранспортнаяНакладнаяЕГАИС.НомерТН                              КАК НомерТН,
		|	ДокументТранспортнаяНакладнаяЕГАИС.ДатаТН                               КАК ДатаТН,
		|	ДокументТранспортнаяНакладнаяЕГАИС.ТоварВПутиПринадлежитГрузополучателю КАК ТоварВПутиПринадлежитГрузополучателю,
		|	ДокументТранспортнаяНакладнаяЕГАИС.Заказчик                             КАК Заказчик,
		|	ДокументТранспортнаяНакладнаяЕГАИС.ПунктРазгрузки                       КАК ПунктРазгрузки,
		|	ДокументТранспортнаяНакладнаяЕГАИС.Количество                           КАК Количество,
		|	
		|	СтатусыДокументовЕГАИС.Статус              КАК СтатусЕГАИС,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие1 КАК ДальнейшееДействиеЕГАИС1,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие2 КАК ДальнейшееДействиеЕГАИС2,
		|	СтатусыДокументовЕГАИС.ДальнейшееДействие3 КАК ДальнейшееДействиеЕГАИС3
		|ИЗ
		|	Документ.ТранспортнаяНакладнаяЕГАИС КАК ДокументТранспортнаяНакладнаяЕГАИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ДокументТранспортнаяНакладнаяЕГАИС.Ссылка)
		|ГДЕ
		|	ДокументТранспортнаяНакладнаяЕГАИС.ТоварноТранспортнаяНакладная = &Ссылка
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|	И НЕ ДокументТранспортнаяНакладнаяЕГАИС.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументТранспортнаяНакладнаяЕГАИС.ДатаТН ВОЗР,
		|	ДокументТранспортнаяНакладнаяЕГАИС.Дата ВОЗР
		|",
		"ТранспортныеНакладные");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.ТранспортнаяНакладнаяЕГАИС.КонечныеСтатусы());
	
	РезультатыЗапроса = ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
	
	//@skip-warning
	ВыборкаТТНВходящаяЕГАИС = РезультатыЗапроса["ТТНВходящаяЕГАИС"].Выбрать();
	//@skip-warning
	ВыборкаИтогПоКоличеству = РезультатыЗапроса["ИтогПоКоличеству"].Выбрать();
	//@skip-warning
	ТаблицаТранспортныеНакладные = РезультатыЗапроса["ТранспортныеНакладные"].Выгрузить();
	
	ВыборкаТТНВходящаяЕГАИС.Следующий();
	ВыборкаИтогПоКоличеству.Следующий();
	
	Если Не ВыборкаТТНВходящаяЕГАИС.ТоварВПутиПринадлежитГрузополучателю
		И Не ЗначениеЗаполнено(ВыборкаТТНВходящаяЕГАИС.НомерТранспортнойНакладной) Тогда
		ВызватьИсключение НСтр("ru = 'Не требуется, транспортную накладную оформляет грузоотправитель'");
	Иначе
		
		ОрганизацияЕГАИС                     = ВыборкаТТНВходящаяЕГАИС.Грузополучатель;
		ТоварноТранспортнаяНакладная         = ВыборкаТТНВходящаяЕГАИС.Ссылка;
		ТоварВПутиПринадлежитГрузополучателю = Истина;
		
		Если ТаблицаТранспортныеНакладные.Количество() = 0 Тогда
			
			ПунктПогрузки              = Неопределено;
			ПунктРазгрузки             = Неопределено;
			
			Перевозчик                 = Неопределено;
			Перенаправление            = Неопределено;
			ТипТранспорта              = Неопределено;
			НомерТранспортногоСредства = Неопределено;
			Прицеп                     = Неопределено;
			Водитель                   = Неопределено;
			Экспедитор                 = Неопределено;
			Количество                 = ВыборкаИтогПоКоличеству.Количество;
			
		Иначе
			
			ПоследняяТранспортнаяНакладная = ТаблицаТранспортныеНакладные[ТаблицаТранспортныеНакладные.Количество() - 1];
			
			Заказчик                   = ПоследняяТранспортнаяНакладная.Заказчик;
			ПунктПогрузки              = ПоследняяТранспортнаяНакладная.ПунктРазгрузки;
			ПунктРазгрузки             = Неопределено;
			
			Перевозчик                 = Неопределено;
			Перенаправление            = Неопределено;
			ТипТранспорта              = Неопределено;
			НомерТранспортногоСредства = Неопределено;
			Прицеп                     = Неопределено;
			Водитель                   = Неопределено;
			Экспедитор                 = Неопределено;
			Количество                 = ПоследняяТранспортнаяНакладная.Количество;
			
			НоваяСтрока = ТранспортныеНакладные.Добавить();
			НоваяСтрока.ДокументОснование = ПоследняяТранспортнаяНакладная.Ссылка;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли