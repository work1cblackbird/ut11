//@strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив из Строка - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("РетроБонусы");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка.СписаниеРетроБонусовКлиента, ДокументОбъект.СписаниеРетроБонусовКлиента - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//	СписокЗначений Из Строка - список значений, содержащий тексты запросов и их имена.
//						Возвращается в случае, если свойство 'ПолучитьТекстыЗапроса' параметра ДопПараметры
//						имеет значение Истина.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.СписаниеРетроБонусовКлиента") Тогда
		
		ДокументОбъект = Документ;
		ДокументСсылка = Документ.Ссылка;
		
	Иначе
		
		ДокументОбъект = Документ.ПолучитьОбъект();
		ДокументСсылка = Документ;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений; // СписокЗначений из Строка
	
	ПолучитьДанныеДокумента(Запрос, ДокументСсылка);
	
	Если НЕ ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		ТекстЗапросаТаблицаРетроБонусыКлиентов(ТекстыЗапроса, Регистры, ДокументОбъект);
		
	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// Добавляет команду создания документа "Начисление ретро-бонусов клиентов".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
// Возвращаемое значение:
//  Неопределено, СтрокаТаблицыЗначений - Добавить команду создать на основании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Результат = Неопределено;
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеРетроБонусовКлиента) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СписаниеРетроБонусовКлиента.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = Метаданные.Документы.СписаниеРетроБонусовКлиента.Синоним;
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Результат = КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Описание логики ограничений прав доступа
//
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Возвращает имена реквизитов, которые не должны отображаться в списке реквизитов обработки ГрупповоеИзменениеОбъектов.
//
//	Возвращаемое значение:
//		Массив из Строка - массив имен реквизитов.
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив; // Массив из Строка
	
	НеРедактируемыеРеквизиты.Добавить("*");
		
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Реквизиты =	РеквизитыДокумента(Запрос);
	
	Запрос.УстановитьПараметр("Период", Реквизиты.Дата);
	Запрос.УстановитьПараметр("Статус", Реквизиты.Статус);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Валюта", Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	
КонецПроцедуры

// Реквизиты документа
// 
// Параметры:
//  Запрос - Запрос - Запрос
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - Реквизиты документа:
// * Дата - Дата -  
// * Номер - Строка -
// * Статус - ПеречислениеСсылка.СтатусыДокументовРетроБонусов - 
// * Организация - СправочникСсылка.Организации -
// * Валюта - СправочникСсылка.Валюты -
// * Контрагент - СправочникСсылка.Контрагенты -
//
Функция РеквизитыДокумента(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Статус КАК Статус,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Контрагент КАК Контрагент
	|ИЗ
	|	ДанныеДокументаШапка КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Возврат Реквизиты;
	
КонецФункции

Функция ТекстЗапросаТаблицаРетроБонусыКлиентов(ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "РетроБонусыКлиентов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры)
	 ИЛИ (ДокументОбъект.Статус <> Перечисления.СтатусыДокументовРетроБонусов.НаСогласовании
		  И ДокументОбъект.Статус <> Перечисления.СтатусыДокументовРетроБонусов.Согласован) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ДанныеТаблицы.Партнер КАК Партнер,
	|	ДанныеТаблицы.НачалоПериода КАК НачалоПериода,
	|	ДанныеТаблицы.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ДанныеТаблицы.ДокументУсловий КАК ДокументУсловий,
	|	&Валюта КАК Валюта,
	|	ДанныеТаблицы.Сумма КАК СуммаБонус,
	|	0 КАК КАктированию,
	|	0 КАК КПодписанию,
	|	0 КАК КСписанию
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаСписаний КАК ДанныеТаблицы
	|ГДЕ
	|	ДанныеТаблицы.Ссылка = &Ссылка
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДокументовРетроБонусов.Согласован)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ДанныеТаблицы.Партнер КАК Партнер,
	|	ДанныеТаблицы.НачалоПериода КАК НачалоПериода,
	|	ДанныеТаблицы.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ДанныеТаблицы.ДокументУсловий КАК ДокументУсловий,
	|	&Валюта КАК Валюта,
	|	0 КАК СуммаБонус,
	|	0 КАК КАктированию,
	|	0 КАК КПодписанию,
	|	ДанныеТаблицы.Сумма КАК КСписанию
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаСписаний КАК ДанныеТаблицы
	|ГДЕ
	|	ДанныеТаблицы.Ссылка = &Ссылка
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДокументовРетроБонусов.НаСогласовании)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ДанныеДокумента

Процедура ПолучитьДанныеДокумента(Запрос, ДокументСсылка)
	
	СписокЗапросов = Новый Массив; // Массив из Строка
	
	ТекстЗапросаДанныеДокументаШапка(СписокЗапросов);
	ТекстЗапросаДанныеТаблицаРасшифровкаСписаний(СписокЗапросов);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ТекстЗапросаДанныеДокументаШапка(СписокЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Статус КАК Статус,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ДанныеДокументаШапка
	|ИЗ
	|	Документ.СписаниеРетроБонусовКлиента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаДанныеТаблицаРасшифровкаСписаний(СписокЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДанных.Ссылка КАК Ссылка,
	|	ТаблицаДанных.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДанных.Партнер КАК Партнер,
	|	ТаблицаДанных.ДокументУсловий КАК ДокументУсловий,
	|	ТаблицаДанных.НачалоПериода КАК НачалоПериода,
	|	ТаблицаДанных.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ТаблицаДанных.Сумма КАК Сумма
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаРасшифровкаСписаний
	|ИЗ
	|	Документ.СписаниеРетроБонусовКлиента.РасшифровкаСписаний КАК ТаблицаДанных
	|ГДЕ
	|	ТаблицаДанных.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли