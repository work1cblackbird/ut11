//@strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.НачислениеРетроБонусовКлиента") Тогда
		
		ДокументНачисления = ДанныеЗаполнения; // ДокументСсылка.НачислениеРетроБонусовКлиента
		
		ДетализацияРасчетаУчастников = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			ДокументНачисления,
			"ДокументУсловий.ДетализацияРасчетаУчастников");
		
		Если ДетализацияРасчетаУчастников = Перечисления.ДетализацияРасчетаУчастниковРетроБонусов.ПоКлиенту Тогда
			
			ШаблонСообщения = НСтр("ru = 'Используется детализация расчета ""По клиенту"". Ввод документа ""%1"" не доступен.'");
			СинонимДокумента = Метаданные().Синоним;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, СинонимДокумента);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументНачисления, "ДокументУсловий");
			
			СтандартнаяОбработка = Ложь;
			
		Иначе
			
			ЗаполнитьПоДаннымДокументаНачислений(ДокументНачисления, СтандартнаяОбработка);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		
		ТекстСообщения = НСтр("ru = 'Запрещено изменение документа в подчиненном узле обмена'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	СуммаДокумента = РасшифровкаСписаний.Итог("Сумма");
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСогласованиеСписанийРетроБонусовКлиентов") Тогда
		
		Статус = Перечисления.СтатусыДокументовРетроБонусов.Черновик;
		
	Иначе
		
		Статус = Перечисления.СтатусыДокументовРетроБонусов.Согласован;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВводНаОсновании

// Параметры:
//  ДокументНачислений - ДокументСсылка.НачислениеРетроБонусовКлиента
//  СтандартнаяОбработка - Булево - 
//
Процедура ЗаполнитьПоДаннымДокументаНачислений(ДокументНачислений, СтандартнаяОбработка)
	
	ДанныеШапки = Документы.НачислениеРетроБонусовКлиента.ДанныеДокументаНачисления(ДокументНачислений);
	
	Если ДанныеШапки <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеШапки);
		
		Если ДанныеШапки.Сумма = 0 Тогда
			
			ТекстСообщения = НСтр("ru = 'По документу начислений нет начисленных бонусов с положительными суммами'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументНачислений);
			СтандартнаяОбработка = Ложь;
			
		Иначе
			
			ВыборкаДетальныеДанные = ДанныеШапки.Выбрать();
			ЗаполнитьРасшифровкуСписанийПоДокументуНачислений(ВыборкаДетальныеДанные);
			
		КонецЕсли;
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Не удалось получить данные документа начислений. Возможно, документ не проведен.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументНачислений);
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРасшифровкуСписанийПоДокументуНачислений(ДанныеСписаний)
	
	Пока ДанныеСписаний.Следующий() Цикл
		
		Если ДанныеСписаний.Сумма > 0 Тогда
			
			НоваяСтрока = РасшифровкаСписаний.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСписаний);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
#КонецОбласти

#КонецЕсли