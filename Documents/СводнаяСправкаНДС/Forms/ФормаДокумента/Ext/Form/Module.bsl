
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();
	
	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ОбновитьИнформациюПоСправкеОснованию();
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	НастроитьОтображениеИтогов(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_СводнаяСправкаНДС", ПараметрыЗаписи, Объект.Ссылка);
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтотОбъект, ПараметрыЗаписи);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.СводнаяСправкаОснование = Неопределено;
	ОрганизацияПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстИсправляемаяСводнаяСправкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ВыборСправкиОснования" Тогда
		СтандартнаяОбработка = Ложь;
		ВыборСправкиОснования();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСправкиПриИзменении(Элемент)
	
	Если ВидСправки = 0 Тогда
		Объект.Номер = "";
		Объект.Исправление = Ложь;
		Объект.СводнаяСправкаОснование = Неопределено;
		Объект.НомерИсправления = "";
		Объект.Корректировочная = Ложь;
		Объект.ПервичныйДокумент = Неопределено;
		Объект.ДатаПервичногоДокумента = '00010101';
		Объект.НомерПервичногоДокумента = "";
	ИначеЕсли ВидСправки = 1 Тогда
		Объект.Номер = "";
		Объект.Исправление = Истина;
		Объект.СводнаяСправкаОснование = Неопределено;
		Объект.НомерИсправления = "";
		Объект.Корректировочная = Ложь;
		Объект.ПервичныйДокумент = Неопределено;
		Объект.ДатаПервичногоДокумента = '00010101';
		Объект.НомерПервичногоДокумента = "";
	ИначеЕсли ВидСправки = 2 Тогда
		Объект.Номер = "";
		Объект.Исправление = Ложь;
		Объект.СводнаяСправкаОснование = Неопределено;
		Объект.НомерИсправления = "";
		Объект.Корректировочная = Истина;
		Объект.ПервичныйДокумент = Неопределено;
		Объект.ДатаПервичногоДокумента = '00010101';
		Объект.НомерПервичногоДокумента = "";
	КонецЕсли;
	
	ВидСправкиПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПервичныйДокументПриИзменении(Элемент)
	
	ПервичныйДокументПриИзмененииСервер();
	НастроитьОтображениеИтогов(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПродажи

&НаКлиенте
Процедура ПродажиНДСПриИзменении(Элемент)
	
	НастроитьОтображениеИтогов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиПриИзменении(Элемент)
	
	УстановитьФлагРучнойКорректировкиСуммДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиСуммаБезНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Продажи.ТекущиеДанные;
	СтавкаНДСПроцентом = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(ТекущаяСтрока.СтавкаНДС) / 100;
	ТекущаяСтрока.НДС = ТекущаяСтрока.СуммаБезНДС * СтавкаНДСПроцентом;
	
	НастроитьОтображениеИтогов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиСтавкаНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Продажи.ТекущиеДанные;
	СтавкаНДСПроцентом = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(ТекущаяСтрока.СтавкаНДС) / 100;
	ТекущаяСтрока.НДС = ТекущаяСтрока.СуммаБезНДС * СтавкаНДСПроцентом;
	
	НастроитьОтображениеИтогов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область КомандыОбъекта

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаполнитьТаблицуПродаж(Команда)
	
	ЗаполнитьТаблицуПродажСервер();
	НастроитьОтображениеИтогов(ЭтотОбъект);
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НомерИсправленияПриИсправлении.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Ссылка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры

&НаСервере
Процедура ПервичныйДокументПриИзмененииСервер()
	
	Если ЗначениеЗаполнено(Объект.ПервичныйДокумент) И ЗначениеЗаполнено(Объект.Организация) Тогда
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Документ", Объект.ПервичныйДокумент);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПервичныхДокументов.Номер КАК НомерПервичногоДокумента,
		|	ДанныеПервичныхДокументов.Дата КАК ДатаПервичногоДокумента,
		|	МАКСИМУМ(ДанныеОснованийСчетовФактур.РозничныйПокупатель) КАК РозничныйПокупатель
		|ИЗ
		|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
		|		ПО ДанныеПервичныхДокументов.Документ = ДанныеОснованийСчетовФактур.Регистратор
		|ГДЕ
		|	ДанныеПервичныхДокументов.Документ = &Документ
		|	И ДанныеПервичныхДокументов.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПервичныхДокументов.Номер,
		|	ДанныеПервичныхДокументов.Дата";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Объект, Выборка);
		КонецЕсли;
		
		ЗаполнитьТаблицуПродажСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииСервер()
	
	ОтветственныеЛицаСервер.ПриИзмененииСвязанныхРеквизитовДокумента(Объект);
	
	АктуализироватьСтавкуНДСВТЧПродажи();
	ОбновитьИнформациюПоСправкеОснованию();
	УстановитьПериодичность();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагРучнойКорректировкиСуммДокумента()
	
	Объект.РучнаяКорректировка = Истина;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	Если Объект.Исправление Тогда
		ВидСправки = 1;
	ИначеЕсли Объект.Корректировочная Тогда
		ВидСправки = 2;
	Иначе
		ВидСправки = 0;
	КонецЕсли;
	
	НастроитьОтображениеИтогов(ЭтотОбъект);
	УправлениеЭлементамиФормы();
	ОбновитьИнформациюПоСправкеОснованию();
	ЗаполнитьТекстПериодичность();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Элементы.ГруппаНомерДата.Видимость = НЕ Объект.Исправление;
	Элементы.ГруппаРеквизитыИсправления.Видимость = Объект.Исправление;
	Элементы.ГруппаСводнаяСправкаОснование.Видимость = Объект.Исправление;
	
	Элементы.ПервичныйДокумент.Видимость = Объект.Корректировочная;
	Элементы.РозничныйПокупатель.Видимость = Объект.Корректировочная;

	Элементы.ГруппаРучнаяКорректировкаСуммДокумента.Видимость = Объект.РучнаяКорректировка;
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииСервер()
	
	ОтветственныеЛицаСервер.ПриИзмененииСвязанныхРеквизитовДокумента(Объект);
	
	АктуализироватьСтавкуНДСВТЧПродажи();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПериодичность()
	
	ДатаОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СводнаяСправкаОснование, "Дата");
	Период = ?(Объект.Исправление, ДатаОснования, Объект.Дата);
	УчетнаяПолитикаОрганизации = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"НастройкиУчетаНДС", Объект.Организация, Период);
	Если УчетнаяПолитикаОрганизации <> Неопределено Тогда
		Объект.ПериодичностьОформления = УчетнаяПолитикаОрганизации.ПериодичностьОформленияСводныхСправок;
	КонецЕсли;
	ЗаполнитьТекстПериодичность();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстПериодичность()
	
	Если Объект.ПериодичностьОформления = Перечисления.Периодичность.Месяц Тогда
		ТекстПериодичность = НСтр("ru = 'Сводные справки составляются ежемесячно'");
	ИначеЕсли Объект.ПериодичностьОформления = Перечисления.Периодичность.Квартал Тогда
		ТекстПериодичность = НСтр("ru = 'Сводные справки составляются ежеквартально'");
	Иначе
		ТекстПериодичность = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВидСправкиПриИзмененииСервер()
	
	УправлениеЭлементамиФормы();
	ОбновитьИнформациюПоСправкеОснованию();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПродажСервер()
	
	ДатаОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СводнаяСправкаОснование, "Дата");
	
	СтруктураПолученияДанных = Новый Структура;
	СтруктураПолученияДанных.Вставить("ВидСправок",
		?(ВидСправки = 1, "Исправленные", ?(ВидСправки = 2, "Корректировочные", "Обычные")));
	СтруктураПолученияДанных.Вставить("Организация", Объект.Организация);
	СтруктураПолученияДанных.Вставить("Дата", Объект.Дата);
	СтруктураПолученияДанных.Вставить("ПериодичностьОформления", Объект.ПериодичностьОформления);
	СтруктураПолученияДанных.Вставить("ИсправляемыйПериод",
		?(ВидСправки = 1, КонецМесяца(ДатаОснования), Неопределено));
	СтруктураПолученияДанных.Вставить("ПервичныйДокумент", Объект.ПервичныйДокумент);
	СтруктураПолученияДанных.Вставить("СводнаяСправкаПредыдущееИсправление",
		Документы.СводнаяСправкаНДС.СводнаяСправкаПредыдущееИсправление(
			Объект.СводнаяСправкаОснование,
			?(Объект.НомерИсправления = 0, 1, Объект.НомерИсправления)));
	
	ТаблицаПродаж = Документы.СводнаяСправкаНДС.ПолучитьДанныеЗаполненияСводнойСправки(СтруктураПолученияДанных);
	ТаблицаПродаж.Свернуть("ВидЦенности,СтавкаНДС", "СуммаБезНДС,НДС");
		
	Объект.Продажи.Загрузить(ТаблицаПродаж);
	Если ВидСправки = 1 Тогда
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДокументОбъект.ДополнитьДаннымиПредыдущегоИсправления();
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	КонецЕсли;
	Объект.РучнаяКорректировка = Ложь;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтображениеИтогов(Форма)
	
	Для Каждого СтрокаТЧ  Из Форма.Объект.Продажи Цикл
		СтрокаТЧ.СуммаСНДС = СтрокаТЧ.СуммаБезНДС + СтрокаТЧ.НДС;
	КонецЦикла; 
	
	Форма.СуммаВсего = Форма.Объект.Продажи.Итог("СуммаСНДС");
	Форма.СуммаНДС = Форма.Объект.Продажи.Итог("НДС");
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеСправкиОснования(ВыбраннаяСправка)
	
	Модифицированность = Истина;
	
	Объект.СводнаяСправкаОснование = ВыбраннаяСправка;
	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбраннаяСправка, "Организация");
	Объект.Организация = Организация;
	
	ОбновитьИнформациюПоСправкеОснованию();
	УстановитьПериодичность();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
Процедура АктуализироватьСтавкуНДСВТЧПродажи()
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияСтавкиНДС(Объект));
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Продажи, СтруктураДействий, Неопределено);
	
	Для Каждого Строка Из Объект.Продажи Цикл
		СтавкаНДСПроцентом = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(Строка.СтавкаНДС) / 100;
		Строка.НДС = Строка.СуммаБезНДС * СтавкаНДСПроцентом;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюПоСправкеОснованию()
	
	Если Не Объект.Исправление Тогда
		ИсправляемаяСводнаяСправка = "";
	ИначеЕсли ЗначениеЗаполнено(Объект.СводнаяСправкаОснование) Тогда
		
		МассивСтрок = Новый Массив;
		
			РеквизитыСправки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.СводнаяСправкаОснование, "Номер, Дата");
		ПредставлениеСправки = Документы.СводнаяСправкаНДС.ПредставлениеСчетаФактуры(
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыСправки.Номер, Ложь,Истина),
			РеквизитыСправки.Дата);
		
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
			ПредставлениеСправки, ,
			ЦветаСтиля.ГиперссылкаЦвет, ,
			ПолучитьНавигационнуюСсылку(Объект.СводнаяСправкаОснование)));
			
		МассивСтрок.Добавить("   ");
		
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
			НСтр("ru = 'Изменить'"),,
			ЦветаСтиля.ГиперссылкаЦвет,,
			"ВыборСправкиОснования"));
			
		ИсправляемаяСводнаяСправка = Новый ФорматированнаяСтрока(МассивСтрок);
	Иначе
		ИсправляемаяСводнаяСправка = Новый ФорматированнаяСтрока(
			НСтр("ru = 'Выберите исправляемую сводную справку'"), ,
			ЦветаСтиля.ГиперссылкаЦвет,,
			"ВыборСправкиОснования");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборСправкиОснования()
	
	СтруктураПараметров = Новый Структура;
	
	ЗначениеОтбора = Новый Структура;
	ЗначениеОтбора.Вставить("Проведен", Истина);
	ЗначениеОтбора.Вставить("Исправление", Ложь);
	ЗначениеОтбора.Вставить("Корректировочная", Ложь);
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ЗначениеОтбора.Вставить("Организация", Объект.Организация)
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗначениеОтбора.Вставить("ИсключитьСправку", Объект.Ссылка);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("Отбор", ЗначениеОтбора);
	
	Оповещение = Новый ОписаниеОповещения("ВыборСправкиОснованияЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"Документ.СводнаяСправкаНДС.Форма.ФормаВыбора",
		СтруктураПараметров,
		ЭтотОбъект, , , ,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборСправкиОснованияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) И ТипЗнч(Результат) = Тип("ДокументСсылка.СводнаяСправкаНДС") Тогда
		ОчиститьСообщения();
		ОбработатьИзменениеСправкиОснования(Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
