#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетНДС");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.СводнаяСправкаНДС") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	ДанныеДокументаДляПроведения = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос,
																									ТекстыЗапроса,
																									ДопПараметры);
	
	Если ТипЗнч(ДанныеДокументаДляПроведения) = Тип("Структура")
		И ДанныеДокументаДляПроведения.Свойство("ТаблицаЖурналУчетаСчетовФактур") Тогда
		
		Для Каждого СтрокаТаблицы Из ДанныеДокументаДляПроведения.ТаблицаЖурналУчетаСчетовФактур Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.НомерКорректировочногоСчетаФактуры) Тогда
				СтрокаТаблицы.НомерСчетаФактуры = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
					СтрокаТаблицы.НомерСчетаФактуры,
					Истина,
					Запрос.Параметры.ОбособленноеПодразделение,
					Запрос.Параметры.ЦифровойИндексОбособленногоПодразделения);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеДокументаДляПроведения;
	
КонецФункции

#КонецОбласти

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Функция формирует представление счет-фактуры.
//
// Параметры:
//  Номер - Строка - Номер счета-фактуры;
//  Дата - Дата - Дата счета-фактуры;
//  Проведен - Булево - признак проведения
//
// Возвращаемое значение:
//	Строка - Представление счета-фактуры.
//
Функция ПредставлениеСчетаФактуры(Номер, Дата, Проведен = Истина) Экспорт
	
	СтруктураШапки = Новый Структура;
	СтруктураШапки.Вставить("Дата", Дата);
	СтруктураШапки.Вставить("Номер", Номер);
	
	МассивПодстрок = Новый Массив;
	МассивПодстрок.Добавить(ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(СтруктураШапки, НСтр("ru = 'Сводная справка'")));
	Если Не Проведен Тогда
		МассивПодстрок.Добавить(НСтр("ru = '(не проведен)'"));
	КонецЕсли;
	Представление = СтрСоединить(МассивПодстрок, " ");
	
	Возврат Представление;
	
КонецФункции

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - Структура - со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ТипСчетаФактуры", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СводнаяСправкаНДС"));
	Запрос.Параметры.Вставить("МассивОрганизаций", Параметры.МассивОрганизаций);
	Если Параметры.Свойство("БезОграниченияПериода") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоДокументовКОформлению
		|ИЗ
		|	РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяОформлениеСчетаФактуры
		|ГДЕ
		|	ТребуетсяОформлениеСчетаФактуры.ТипСчетаФактуры = &ТипСчетаФактуры
		|	И &УсловиеОтбора";
	Иначе
		Запрос.Параметры.Вставить("КонецПериода", КонецДня(Параметры.КонецПериода));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоДокументовКОформлению
		|ИЗ
		|	РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяОформлениеСчетаФактуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеОснования
		|		ПО ТребуетсяОформлениеСчетаФактуры.Организация = ДанныеОснования.Организация
		|			И ТребуетсяОформлениеСчетаФактуры.Основание = ДанныеОснования.Документ
		|ГДЕ
		|	ТребуетсяОформлениеСчетаФактуры.ТипСчетаФактуры = &ТипСчетаФактуры
		|	И ВЫБОР
		|			КОГДА ЕСТЬNULL(ДанныеОснования.Дата, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ЕСТЬNULL(ДанныеОснования.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1))
		|			ИНАЧЕ ДанныеОснования.Дата
		|		КОНЕЦ <= &КонецПериода
		|	И &УсловиеОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "ТребуетсяОформлениеСчетаФактуры.Организация В(&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// Выполняет обработку установки даты начала применения сводных справок:
// - начиная с даты начала применения удаляет движения документов "Отчет о розничных продажах" по регистру "НДС продажи"
// Параметры:
//	Параметры - Структура - см вызов в Обработки.ПанельАдминистрированияУТ.УчетНДСиВЭД.ЗапуститьОбработкуУстановкиДатыНачалаПримененияСводныхСправок
//	АдресХранилища - Строка - см вызов в Обработки.ПанельАдминистрированияУТ.УчетНДСиВЭД.ЗапуститьОбработкуУстановкиДатыНачалаПримененияСводныхСправок
//
Процедура ОбработкаУстановкиДатыНачалаПримененияСводныхСправок(Параметры, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Структура;
	Результат.Вставить("ОчищеноДвижений", 0);
	
	НачатьТранзакцию();
	Попытка
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСЗаписиКнигиПродаж.Регистратор КАК Регистратор,
		|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
		|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, МЕСЯЦ) КАК Месяц
		|ПОМЕСТИТЬ ОтчетыКОчисткеДвижений
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
		|ГДЕ
		|	НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|	И НДСЗаписиКнигиПродаж.Период >= &ДатаНачалаПримененияСводныхСправок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетыКОчисткеДвижений.Регистратор КАК Регистратор
		|ИЗ
		|	ОтчетыКОчисткеДвижений КАК ОтчетыКОчисткеДвижений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетыКОчисткеДвижений.Организация КАК Организация,
		|	ОтчетыКОчисткеДвижений.Месяц КАК Месяц,
		|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ФормированиеСводныхСправокНДС) КАК Операция
		|ИЗ
		|	ОтчетыКОчисткеДвижений КАК ОтчетыКОчисткеДвижений
		|";
		
		Запрос.УстановитьПараметр("ДатаНачалаПримененияСводныхСправок", Параметры.ДатаНачалаПримененияСводныхСправок);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		ВыборкаОтчеты = РезультатЗапроса[1].Выбрать();
		ВыборкаЗадания = РезультатЗапроса[2].Выбрать();

		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.НДСЗаписиКнигиПродаж.НаборЗаписей");
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[1];
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЗаданияКЗакрытиюМесяца");
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[2];
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Месяц",       "Месяц");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Операция",    "Операция");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
		
		Блокировка.Заблокировать();
		
		// Очистим движения по НДС продажи
		Пока ВыборкаОтчеты.Следующий() Цикл
			
			НаборЗаписей = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаОтчеты.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
		//создадим задания к закрытию месяца
		РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(ВыборкаЗадания);
		
		Результат.ОчищеноДвижений = ВыборкаОтчеты.Количество();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось очистить движения по регистру НДС продажи по причине: %1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Установка даты начала применения сводных справок.'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
				
		ВызватьИсключение ТекстСообщения;
		
	КонецПопытки;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует сводные справки (обычные, исправленные, корректировочные)
//
// Параметры:
// 	МассивОрганизаций - Организация, Массив - Организация или массив организаций для отбора.
// 	НачалоПериода - Дата - Начало периода, за который необходимо выполнить формирование.
//
Процедура СформироватьСводныеСправкиНДС(МассивОрганизаций, НачалоПериода) Экспорт
	
	ПараметрыРасчета = Новый Структура();
	ПараметрыРасчета.Вставить("НачалоПериода",    НачалоКвартала(НачалоПериода));
	ПараметрыРасчета.Вставить("КонецПериода",     КонецМесяца(НачалоПериода));
	ПараметрыРасчета.Вставить("МассивОрганизаций",МассивОрганизаций);
	
	Если ПараметрыРасчета.НачалоПериода < Константы.ДатаНачалаПримененияСводныхСправок.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СформироватьВТПериодыПродаж(Запрос, ПараметрыРасчета);

#Область ОбычныеСводныеСправки

	СформироватьТаблицуПродаж(Запрос, ПараметрыРасчета, "Обычные");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СводнаяСправкаНДС.Ссылка КАК Ссылка,
	|	СводнаяСправкаНДС.Организация КАК Организация,
	|	СводнаяСправкаНДС.ПериодичностьОформления КАК ПериодичностьОформления,
	|	СводнаяСправкаНДС.РучнаяКорректировка КАК РучнаяКорректировка
	|ПОМЕСТИТЬ ОформленныеСводныеСправки
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПродаж КАК ПериодыПродаж
	|		ПО ПериодыПродаж.Организация = СводнаяСправкаНДС.Организация
	|			И СводнаяСправкаНДС.Дата МЕЖДУ ПериодыПродаж.НачалоПериода И ПериодыПродаж.КонецПериода
	|			И НЕ СводнаяСправкаНДС.Исправление
	|			И НЕ СводнаяСправкаНДС.Корректировочная
	|			И НЕ СводнаяСправкаНДС.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|//сводные справки к перезаполнению
	|ВЫБРАТЬ
	|	ОформленныеСводныеСправки.Ссылка КАК Ссылка,
	|	ОформленныеСводныеСправки.Организация КАК Организация,
	|	ОформленныеСводныеСправки.ПериодичностьОформления КАК ПериодичностьОформления,
	|	ТаблицаПродаж.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаПродаж.НДС КАК НДС,
	|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
	|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ТаблицаПродаж КАК ТаблицаПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеСводныеСправки КАК ОформленныеСводныеСправки
	|		ПО ТаблицаПродаж.Организация = ОформленныеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ОформленныеСводныеСправки.ПериодичностьОформления
	|			И НЕ ОформленныеСводныеСправки.РучнаяКорректировка
	|ИТОГИ ПО
	|	ОформленныеСводныеСправки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|//сводные справки к оформлению
	|ВЫБРАТЬ
	|	ТаблицаПродаж.Организация КАК Организация,
	|	ТаблицаПродаж.ПериодичностьОформления КАК ПериодичностьОформления,
	|	ТаблицаПродаж.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаПродаж.НДС КАК НДС,
	|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
	|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ТаблицаПродаж КАК ТаблицаПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОформленныеСводныеСправки КАК ОформленныеСводныеСправки
	|		ПО ТаблицаПродаж.Организация = ОформленныеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ОформленныеСводныеСправки.ПериодичностьОформления
	|ГДЕ
	|	ОформленныеСводныеСправки.Ссылка ЕСТЬ NULL
	|ИТОГИ ПО
	|	ТаблицаПродаж.Организация,
	|	ТаблицаПродаж.ПериодичностьОформления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|//сводные справки к удалению
	|ВЫБРАТЬ
	|	ОформленныеСводныеСправки.Ссылка КАК Ссылка
	|ИЗ
	|	ОформленныеСводныеСправки КАК ОформленныеСводныеСправки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПродаж КАК ТаблицаПродаж
	|		ПО ТаблицаПродаж.Организация = ОформленныеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ОформленныеСводныеСправки.ПериодичностьОформления
	|ГДЕ
	|	ТаблицаПродаж.Организация ЕСТЬ NULL
	|	И НЕ ОформленныеСводныеСправки.РучнаяКорректировка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПродаж;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОформленныеСводныеСправки
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	
	//сводные справки к перезаполнению
	ВыборкаДокументов = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаДокументов.Количество() Тогда
		Пока ВыборкаДокументов.Следующий() Цикл
			
			СводнаяСправка = ВыборкаДокументов.Ссылка.ПолучитьОбъект();
			СводнаяСправка.Продажи.Очистить();
			Выборка = ВыборкаДокументов.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(СводнаяСправка.Продажи.Добавить(), Выборка);
			КонецЦикла;
			СводнаяСправка.Записать(РежимЗаписиДокумента.Проведение);
		
		КонецЦикла;
	КонецЕсли;
	
	//сводные справки к оформлению
	ВыборкаОрганизаций = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаОрганизаций.Количество() Тогда
		Пока ВыборкаОрганизаций.Следующий() Цикл
			ВыборкаПериодичности = ВыборкаОрганизаций.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПериодичности.Следующий() Цикл
				СводнаяСправка = Документы.СводнаяСправкаНДС.СоздатьДокумент();
				ЗаполнитьЗначенияСвойств(СводнаяСправка, ВыборкаПериодичности, "Организация, ПериодичностьОформления");
				СводнаяСправка.РозничныйПокупатель = Истина;
				СводнаяСправка.Дата = КонецМесяца(ПараметрыРасчета.КонецПериода);
				Выборка = ВыборкаПериодичности.Выбрать();
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(СводнаяСправка.Продажи.Добавить(), Выборка);
				КонецЦикла;
				СводнаяСправка.Записать(РежимЗаписиДокумента.Проведение);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	//сводные справки к удалению
	Выборка = Результат[3].Выбрать();
	Если Выборка.Количество() Тогда
		Пока Выборка.Следующий() Цикл
			
			СводнаяСправка = Выборка.Ссылка.ПолучитьОбъект();
			СводнаяСправка.УстановитьПометкуУдаления(Истина);
		
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти

#Область ИсправленныеСводныеСправки

	СформироватьТаблицуПродаж(Запрос, ПараметрыРасчета, "Исправленные");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СводнаяСправкаНДС.Ссылка КАК Ссылка,
	|	СводнаяСправкаНДС.Организация КАК Организация,
	|	СводнаяСправкаНДС.ПериодичностьОформления КАК ПериодичностьОформления,
	|	ТаблицаПродаж.ИсправляемыйПериод КАК ИсправляемыйПериод
	|ПОМЕСТИТЬ ИсправляемыеСводныеСправки
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПродаж КАК ТаблицаПродаж
	|		ПО ТаблицаПродаж.Организация = СводнаяСправкаНДС.Организация
	|			И СводнаяСправкаНДС.ПериодичностьОформления = ТаблицаПродаж.ПериодичностьОформления
	|			И СводнаяСправкаНДС.Дата = ТаблицаПродаж.ИсправляемыйПериод
	|			И НЕ СводнаяСправкаНДС.Исправление
	|			И НЕ СводнаяСправкаНДС.Корректировочная
	|			И НЕ СводнаяСправкаНДС.ПометкаУдаления
	|ИНДЕКСИРОВАТЬ ПО
	|	СводнаяСправкаНДС.Ссылка,
	|	СводнаяСправкаНДС.ПериодичностьОформления,
	|	ТаблицаПродаж.ИсправляемыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	СводнаяСправкаНДС.Ссылка КАК Ссылка,
	|	СводнаяСправкаНДС.Организация КАК Организация,
	|	СводнаяСправкаНДС.ПериодичностьОформления КАК ПериодичностьОформления,
	|	СводнаяСправкаНДС.СводнаяСправкаОснование КАК СводнаяСправкаОснование,
	|	НАЧАЛОПЕРИОДА(СводнаяСправкаНДС.СводнаяСправкаОснование.Дата, МЕСЯЦ) КАК ИсправляемыйПериод,
	|	СводнаяСправкаНДС.РучнаяКорректировка КАК РучнаяКорректировка
	|ПОМЕСТИТЬ ОформленныеСводныеСправки
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПродаж КАК ПериодыПродаж
	|		ПО ПериодыПродаж.Организация = СводнаяСправкаНДС.Организация
	|			И СводнаяСправкаНДС.Дата МЕЖДУ ПериодыПродаж.НачалоПериода И ПериодыПродаж.КонецПериода
	|			И СводнаяСправкаНДС.Исправление
	|			И НЕ СводнаяСправкаНДС.Корректировочная
	|			И НЕ СводнаяСправкаНДС.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|//сводные справки к перезаполнению
	|ВЫБРАТЬ
	|	ОформленныеСводныеСправки.Ссылка КАК Ссылка,
	|	ОформленныеСводныеСправки.Организация КАК Организация,
	|	ОформленныеСводныеСправки.ПериодичностьОформления КАК ПериодичностьОформления,
	|	ТаблицаПродаж.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаПродаж.НДС КАК НДС,
	|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
	|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ТаблицаПродаж КАК ТаблицаПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеСводныеСправки КАК ОформленныеСводныеСправки
	|		ПО ТаблицаПродаж.Организация = ОформленныеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ОформленныеСводныеСправки.ПериодичностьОформления
	|			И НЕ ОформленныеСводныеСправки.РучнаяКорректировка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправляемыеСводныеСправки КАК ИсправляемыеСводныеСправки
	|		ПО ТаблицаПродаж.Организация = ИсправляемыеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ИсправляемыеСводныеСправки.ПериодичностьОформления
	|			И ТаблицаПродаж.ИсправляемыйПериод = ИсправляемыеСводныеСправки.ИсправляемыйПериод
	|			И ИсправляемыеСводныеСправки.Ссылка = ОформленныеСводныеСправки.СводнаяСправкаОснование
	|ИТОГИ ПО
	|	ОформленныеСводныеСправки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|//сводные справки к оформлению
	|ВЫБРАТЬ
	|	ТаблицаПродаж.Организация КАК Организация,
	|	ИсправляемыеСводныеСправки.Ссылка КАК СводнаяСправкаОснование,
	|	ТаблицаПродаж.ПериодичностьОформления КАК ПериодичностьОформления,
	|	ТаблицаПродаж.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаПродаж.НДС КАК НДС,
	|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
	|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ТаблицаПродаж КАК ТаблицаПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправляемыеСводныеСправки КАК ИсправляемыеСводныеСправки
	|		ПО ТаблицаПродаж.Организация = ИсправляемыеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ИсправляемыеСводныеСправки.ПериодичностьОформления
	|			И ТаблицаПродаж.ИсправляемыйПериод = ИсправляемыеСводныеСправки.ИсправляемыйПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОформленныеСводныеСправки КАК ОформленныеСводныеСправки
	|		ПО ТаблицаПродаж.Организация = ОформленныеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ОформленныеСводныеСправки.ПериодичностьОформления
	|ГДЕ
	|	ОформленныеСводныеСправки.Ссылка ЕСТЬ NULL
	|ИТОГИ ПО
	|	ИсправляемыеСводныеСправки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|//сводные справки к удалению
	|ВЫБРАТЬ
	|	ОформленныеСводныеСправки.Ссылка КАК Ссылка
	|ИЗ
	|	ОформленныеСводныеСправки КАК ОформленныеСводныеСправки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПродаж КАК ТаблицаПродаж
	|		ПО ТаблицаПродаж.Организация = ОформленныеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ОформленныеСводныеСправки.ПериодичностьОформления
	|			И ТаблицаПродаж.ИсправляемыйПериод = ОформленныеСводныеСправки.ИсправляемыйПериод
	|ГДЕ
	|	ТаблицаПродаж.Организация ЕСТЬ NULL
	|	И НЕ ОформленныеСводныеСправки.РучнаяКорректировка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПродаж;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОформленныеСводныеСправки";
	
	Результат = Запрос.ВыполнитьПакет();
	
	//сводные справки к перезаполнению
	ВыборкаДокументов = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаДокументов.Количество() Тогда
		Пока ВыборкаДокументов.Следующий() Цикл
			
			СводнаяСправка = ВыборкаДокументов.Ссылка.ПолучитьОбъект();
			СводнаяСправка.Продажи.Очистить();
			Выборка = ВыборкаДокументов.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(СводнаяСправка.Продажи.Добавить(), Выборка);
			КонецЦикла;
			СводнаяСправка.ДополнитьДаннымиПредыдущегоИсправления();
			СводнаяСправка.Записать(РежимЗаписиДокумента.Проведение);
		
		КонецЦикла;
	КонецЕсли;
	
	//сводные справки к оформлению
	ВыборкаДокументов = Результат[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаДокументов.Количество() Тогда
		Пока ВыборкаДокументов.Следующий() Цикл
			
			СводнаяСправка = Документы.СводнаяСправкаНДС.СоздатьДокумент();
			ЗаполнитьЗначенияСвойств(СводнаяСправка, ВыборкаДокументов, "СводнаяСправкаОснование");
			СводнаяСправка.РозничныйПокупатель = Истина;
			СводнаяСправка.Исправление = Истина;
			СводнаяСправка.Дата = КонецМесяца(ПараметрыРасчета.КонецПериода);
			Выборка = ВыборкаДокументов.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(СводнаяСправка, Выборка, "Организация, ПериодичностьОформления");
				ЗаполнитьЗначенияСвойств(СводнаяСправка.Продажи.Добавить(), Выборка);
			КонецЦикла;
			СводнаяСправка.ДополнитьДаннымиПредыдущегоИсправления();
			СводнаяСправка.Записать(РежимЗаписиДокумента.Проведение);
		
		КонецЦикла;
	КонецЕсли;
	
	//сводные справки к удалению
	Выборка = Результат[4].Выбрать();
	Если Выборка.Количество() Тогда
		Пока Выборка.Следующий() Цикл
			
			СводнаяСправка = Выборка.Ссылка.ПолучитьОбъект();
			СводнаяСправка.УстановитьПометкуУдаления(Истина);
		
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти

#Область КорректировочныеСводныеСправки

	СформироватьТаблицуПродаж(Запрос, ПараметрыРасчета, "Корректировочные");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СводнаяСправкаНДС.Ссылка КАК Ссылка,
	|	СводнаяСправкаНДС.Организация КАК Организация,
	|	СводнаяСправкаНДС.ПериодичностьОформления КАК ПериодичностьОформления,
	|	СводнаяСправкаНДС.РозничныйПокупатель КАК РозничныйПокупатель,
	|	СводнаяСправкаНДС.ПервичныйДокумент КАК ПервичныйДокумент,
	|	СводнаяСправкаНДС.РучнаяКорректировка КАК РучнаяКорректировка
	|ПОМЕСТИТЬ ОформленныеСводныеСправки
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПродаж КАК ПериодыПродаж
	|		ПО ПериодыПродаж.Организация = СводнаяСправкаНДС.Организация
	|			И СводнаяСправкаНДС.Дата МЕЖДУ ПериодыПродаж.НачалоПериода И ПериодыПродаж.КонецПериода
	|			И НЕ СводнаяСправкаНДС.Исправление
	|			И СводнаяСправкаНДС.Корректировочная
	|			И НЕ СводнаяСправкаНДС.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|//сводные справки к перезаполнению
	|ВЫБРАТЬ
	|	ОформленныеСводныеСправки.Ссылка КАК Ссылка,
	|	ОформленныеСводныеСправки.Организация КАК Организация,
	|	ОформленныеСводныеСправки.ПериодичностьОформления КАК ПериодичностьОформления,
	|	ТаблицаПродаж.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаПродаж.НДС КАК НДС,
	|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
	|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ТаблицаПродаж КАК ТаблицаПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеСводныеСправки КАК ОформленныеСводныеСправки
	|		ПО ТаблицаПродаж.Организация = ОформленныеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ОформленныеСводныеСправки.ПериодичностьОформления
	|			И ТаблицаПродаж.ПервичныйДокумент = ОформленныеСводныеСправки.ПервичныйДокумент
	|			И НЕ ОформленныеСводныеСправки.РучнаяКорректировка
	|ИТОГИ ПО
	|	ОформленныеСводныеСправки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|//сводные справки к оформлению
	|ВЫБРАТЬ
	|	ТаблицаПродаж.Организация КАК Организация,
	|	ТаблицаПродаж.РозничныйПокупатель КАК РозничныйПокупатель,
	|	ТаблицаПродаж.ПервичныйДокумент КАК ПервичныйДокумент,
	|	ДанныеПервичныхДокументов.Номер КАК НомерПервичногоДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаПервичногоДокумента,
	|	ТаблицаПродаж.ПериодичностьОформления КАК ПериодичностьОформления,
	|	ТаблицаПродаж.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаПродаж.НДС КАК НДС,
	|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
	|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ТаблицаПродаж КАК ТаблицаПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОформленныеСводныеСправки КАК ОформленныеСводныеСправки
	|		ПО ТаблицаПродаж.Организация = ОформленныеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ОформленныеСводныеСправки.ПериодичностьОформления
	|			И ТаблицаПродаж.РозничныйПокупатель = ОформленныеСводныеСправки.РозничныйПокупатель
	|			И ТаблицаПродаж.ПервичныйДокумент = ОформленныеСводныеСправки.ПервичныйДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ТаблицаПродаж.Организация = ДанныеПервичныхДокументов.Организация
	|			И ТаблицаПродаж.ПервичныйДокумент = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ОформленныеСводныеСправки.Ссылка ЕСТЬ NULL
	|ИТОГИ ПО
	|	ТаблицаПродаж.ПервичныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|//сводные справки к удалению
	|ВЫБРАТЬ
	|	ОформленныеСводныеСправки.Ссылка КАК Ссылка
	|ИЗ
	|	ОформленныеСводныеСправки КАК ОформленныеСводныеСправки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПродаж КАК ТаблицаПродаж
	|		ПО ТаблицаПродаж.Организация = ОформленныеСводныеСправки.Организация
	|			И ТаблицаПродаж.ПериодичностьОформления = ОформленныеСводныеСправки.ПериодичностьОформления
	|			И ТаблицаПродаж.РозничныйПокупатель = ОформленныеСводныеСправки.РозничныйПокупатель
	|			И ТаблицаПродаж.ПервичныйДокумент = ОформленныеСводныеСправки.ПервичныйДокумент
	|ГДЕ
	|	ТаблицаПродаж.Организация ЕСТЬ NULL
	|	И НЕ ОформленныеСводныеСправки.РучнаяКорректировка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПродаж;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОформленныеСводныеСправки";
	
	Результат = Запрос.ВыполнитьПакет();
	
	//сводные справки к перезаполнению
	ВыборкаДокументов = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаДокументов.Количество() Тогда
		Пока ВыборкаДокументов.Следующий() Цикл
			
			СводнаяСправка = ВыборкаДокументов.Ссылка.ПолучитьОбъект();
			СводнаяСправка.Продажи.Очистить();
			Выборка = ВыборкаДокументов.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(СводнаяСправка.Продажи.Добавить(), Выборка);
			КонецЦикла;
			СводнаяСправка.Продажи.Свернуть("ВидЦенности,СтавкаНДС", "СуммаБезНДС,НДС");
			СводнаяСправка.Записать(РежимЗаписиДокумента.Проведение);
		
		КонецЦикла;
	КонецЕсли;
	
	//сводные справки к оформлению
	ВыборкаДокументов = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаДокументов.Количество() Тогда
		Пока ВыборкаДокументов.Следующий() Цикл
			
			СводнаяСправка = Документы.СводнаяСправкаНДС.СоздатьДокумент();
			ЗаполнитьЗначенияСвойств(СводнаяСправка, ВыборкаДокументов);
			СводнаяСправка.Корректировочная = Истина;
			СводнаяСправка.Дата = КонецМесяца(ПараметрыРасчета.КонецПериода);
			Выборка = ВыборкаДокументов.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(СводнаяСправка, Выборка);
				ЗаполнитьЗначенияСвойств(СводнаяСправка.Продажи.Добавить(), Выборка);
			КонецЦикла;
			СводнаяСправка.Продажи.Свернуть("ВидЦенности,СтавкаНДС", "СуммаБезНДС,НДС");
			СводнаяСправка.Записать(РежимЗаписиДокумента.Проведение);
		
		КонецЦикла;
	КонецЕсли;
	
	//сводные справки к удалению
	Выборка = Результат[3].Выбрать();
	Если Выборка.Количество() Тогда
		Пока Выборка.Следующий() Цикл
			
			СводнаяСправка = Выборка.Ссылка.ПолучитьОбъект();
			СводнаяСправка.УстановитьПометкуУдаления(Истина);
		
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти

КонецПроцедуры

Процедура СформироватьВТПериодыПродаж(Запрос, ПараметрыРасчета)

	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(ПараметрыРасчета.КонецПериода));
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицГоловнымиОрганизациями(Запрос.МенеджерВременныхТаблиц,
		ПараметрыРасчета.МассивОрганизаций);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Организация,
	|	НастройкиУчетаНДССрезПоследних.ПериодичностьОформленияСводныхСправок КАК ПериодичностьОформления,
	|	ВЫБОР
	|		КОГДА НастройкиУчетаНДССрезПоследних.ПериодичностьОформленияСводныхСправок = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&КонецПериода, КВАРТАЛ)
	|	КОНЕЦ КАК НачалоПериода,
	|	&КонецПериода КАК КонецПериода
	|ПОМЕСТИТЬ ПериодыПродаж
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(
	|				&НачалоПериода,
	|				Организация В
	|					(ВЫБРАТЬ
	|						ГоловныеОрганизации.Организация
	|					ИЗ
	|						ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиСистемыНалогообложенияСрезПоследних
	|		ПО ГоловныеОрганизации.Организация = НастройкиСистемыНалогообложенияСрезПоследних.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНДС.СрезПоследних(
	|				&НачалоПериода,
	|				Организация В
	|					(ВЫБРАТЬ
	|						ГоловныеОрганизации.Организация
	|					ИЗ
	|						ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиУчетаНДССрезПоследних
	|		ПО ГоловныеОрганизации.Организация = НастройкиУчетаНДССрезПоследних.Организация
	|ГДЕ
	|	НастройкиСистемыНалогообложенияСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|	И НЕ НастройкиУчетаНДССрезПоследних.ПериодичностьОформленияСводныхСправок ЕСТЬ NULL
	|	И ГоловныеОрганизации.ОбособленноеПодразделение <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (НастройкиУчетаНДССрезПоследних.ПериодичностьОформленияСводныхСправок = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|		ИЛИ &КонецПериода = КОНЕЦПЕРИОДА(&КонецПериода, КВАРТАЛ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";

	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуПродаж(Запрос, ПараметрыРасчета, ВидСправок)
	
	Если ВидСправок = "Обычные" Тогда
	
		ТаблицаПродаж = РозничныеПродажи.ПолучитьДанныеПродажЗаПериод(ПараметрыРасчета);
		
		Запрос.УстановитьПараметр("ТаблицаПродаж", ТаблицаПродаж);
		Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПродаж.Сумма КАК СуммаБезНДС,
		|	ТаблицаПродаж.СуммаНДС КАК НДС,
		|	ТаблицаПродаж.ТипНоменклатуры КАК ТипНоменклатуры,
		|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаПродаж.Период КАК Период,
		|	ТаблицаПродаж.Организация КАК Организация
		|ПОМЕСТИТЬ ТаблицаПродажПредварительная
		|ИЗ
		|	&ТаблицаПродаж КАК ТаблицаПродаж
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////1
		|ВЫБРАТЬ
		|	СУММА(ТаблицаПродаж.СуммаБезНДС) КАК СуммаБезНДС,
		|	СУММА(ТаблицаПродаж.НДС) КАК НДС,
		|	ВЫБОР
		|		КОГДА ТаблицаПродаж.ТипНоменклатуры В(&ТипыНоменклатурыТовар) 
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
		|	КОНЕЦ КАК ВидЦенности,
		|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаПродаж.Организация КАК Организация,
		|	ПериодыПродаж.ПериодичностьОформления КАК ПериодичностьОформления
		|ПОМЕСТИТЬ ТаблицаПродаж
		|ИЗ
		|	ТаблицаПродажПредварительная КАК ТаблицаПродаж
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПродаж КАК ПериодыПродаж
		|		ПО ПериодыПродаж.Организация = ТаблицаПродаж.Организация
		|			И ТаблицаПродаж.Период МЕЖДУ ПериодыПродаж.НачалоПериода И ПериодыПродаж.КонецПериода
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПродаж.Организация,
		|	ПериодыПродаж.ПериодичностьОформления,
		|	ТаблицаПродаж.СтавкаНДС,
		|	ТаблицаПродаж.ТипНоменклатуры
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	0 КАК СуммаБезНДС,
		|	0 КАК НДС,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
		|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) КАК СтавкаНДС,
		|	Организации.Ссылка КАК Организация,
		|	ПериодыПродаж.ПериодичностьОформления КАК ПериодичностьОформления
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПродаж КАК ПериодыПродаж
		|		ПО ПериодыПродаж.Организация = Организации.Ссылка
		|ГДЕ
		|	Организации.Ссылка В(&МассивОрганизаций)
		|	И НЕ Организации.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Организация
		|				ИЗ
		|					ТаблицаПродажПредварительная КАК Т
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПродаж КАК ПериодыПродаж
		|						ПО
		|							ПериодыПродаж.Организация = Т.Организация
		|								И (Т.Период МЕЖДУ ПериодыПродаж.НачалоПериода И ПериодыПродаж.КонецПериода))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПродажПредварительная
		|";
		
	ИначеЕсли ВидСправок = "Исправленные" Тогда

		ТаблицаПродаж = РозничныеПродажи.ПолучитьДанныеИсправленийПродажЗаПериод(ПараметрыРасчета);
		
		Запрос.УстановитьПараметр("ТаблицаПродаж", ТаблицаПродаж);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПродаж.Сумма КАК СуммаБезНДС,
		|	ТаблицаПродаж.СуммаНДС КАК НДС,
		|	ТаблицаПродаж.ТипНоменклатуры КАК ТипНоменклатуры,
		|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаПродаж.Период КАК Период,
		|	ТаблицаПродаж.ИсправляемыйПериод КАК ИсправляемыйПериод,
		|	ТаблицаПродаж.Организация КАК Организация
		|ПОМЕСТИТЬ ТаблицаПродажПредварительная
		|ИЗ
		|	&ТаблицаПродаж КАК ТаблицаПродаж
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////1
		|ВЫБРАТЬ
		|	СУММА(ТаблицаПродаж.СуммаБезНДС) КАК СуммаБезНДС,
		|	СУММА(ТаблицаПродаж.НДС) КАК НДС,
		|	ВЫБОР
		|		КОГДА ТаблицаПродаж.ТипНоменклатуры В(&ТипыНоменклатурыТовар) 
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
		|	КОНЕЦ КАК ВидЦенности,
		|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаПродаж.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ПериодыПродаж.ПериодичностьОформления = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
		|			ТОГДА КОНЕЦПЕРИОДА(ТаблицаПродаж.ИсправляемыйПериод, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ТаблицаПродаж.ИсправляемыйПериод, КВАРТАЛ)
		|	КОНЕЦ КАК ИсправляемыйПериод,
		|	ПериодыПродаж.ПериодичностьОформления КАК ПериодичностьОформления
		|ПОМЕСТИТЬ ТаблицаПродаж
		|ИЗ
		|	ТаблицаПродажПредварительная КАК ТаблицаПродаж
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПродаж КАК ПериодыПродаж
		|		ПО ПериодыПродаж.Организация = ТаблицаПродаж.Организация
		|			И ТаблицаПродаж.Период МЕЖДУ ПериодыПродаж.НачалоПериода И ПериодыПродаж.КонецПериода
		|			И ТаблицаПродаж.ИсправляемыйПериод < ПериодыПродаж.НачалоПериода
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПродаж.Организация,
		|	ВЫБОР
		|		КОГДА ПериодыПродаж.ПериодичностьОформления = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
		|			ТОГДА КОНЕЦПЕРИОДА(ТаблицаПродаж.ИсправляемыйПериод, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ТаблицаПродаж.ИсправляемыйПериод, КВАРТАЛ)
		|	КОНЕЦ,
		|	ПериодыПродаж.ПериодичностьОформления,
		|	ТаблицаПродаж.СтавкаНДС,
		|	ТаблицаПродаж.ТипНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПродажПредварительная
		|";

	ИначеЕсли ВидСправок = "Корректировочные" Тогда
	
		ТаблицаВозвратов = РозничныеПродажи.ПолучитьДанныеВозвратовЗаПериод(ПараметрыРасчета);
		
		Запрос.УстановитьПараметр("ИдентификаторСводнаяСправкаНДС", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СводнаяСправкаНДС"));
		Запрос.УстановитьПараметр("ТаблицаВозвратов", ТаблицаВозвратов);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаВозвратов.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ТаблицаВозвратов.ТипНоменклатуры В(&ТипыНоменклатурыТовар) 
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
		|	КОНЕЦ КАК ВидЦенности,
		|	ТаблицаВозвратов.Сумма КАК СуммаБезНДС,
		|	ТаблицаВозвратов.СуммаНДС КАК НДС,
		|	ТаблицаВозвратов.КорректируемыйДокумент КАК КорректируемыйДокумент,
		|	ТаблицаВозвратов.Организация КАК Организация,
		|	ИСТИНА КАК Партнер,
		|	ТаблицаВозвратов.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ОтчетОРозничныхВозвратах
		|ИЗ
		|	&ТаблицаВозвратов КАК ТаблицаВозвратов;
		|
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ДанныеОснованийСчетовФактур.Период, МЕСЯЦ) КАК Период,
		|	ДанныеОснованийСчетовФактур.ВидЦенности КАК ВидЦенности,
		|	СУММА(-ДанныеОснованийСчетовФактур.СуммаБезНДСРегл) КАК СуммаБезНДС,
		|	СУММА(-ДанныеОснованийСчетовФактур.СуммаНДСРегл) КАК НДС,
		|	ДанныеОснованийСчетовФактур.КорректируемыйДокумент КАК КорректируемыйДокумент,
		|	ДанныеОснованийСчетовФактур.Организация КАК Организация,
		|	ДанныеОснованийСчетовФактур.РозничныйПокупатель КАК РозничныйПокупатель,
		|	ДанныеОснованийСчетовФактур.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ТаблицаПродажИсходная
		|ИЗ
		|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПродаж КАК ПериодыПродаж
		|		ПО ПериодыПродаж.Организация = ДанныеОснованийСчетовФактур.Организация
		|			И ДанныеОснованийСчетовФактур.Период МЕЖДУ ПериодыПродаж.НачалоПериода И ПериодыПродаж.КонецПериода
		|ГДЕ
		|	ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторСводнаяСправкаНДС
		|	И ДанныеОснованийСчетовФактур.УменьшениеСуммы
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ДанныеОснованийСчетовФактур.Период, МЕСЯЦ),
		|	ДанныеОснованийСчетовФактур.КорректируемыйДокумент,
		|	ДанныеОснованийСчетовФактур.Организация,
		|	ДанныеОснованийСчетовФактур.ВидЦенности,
		|	ДанныеОснованийСчетовФактур.РозничныйПокупатель,
		|	ДанныеОснованийСчетовФактур.СтавкаНДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтчетОРозничныхВозвратах.Период,
		|	ОтчетОРозничныхВозвратах.ВидЦенности,
		|	ОтчетОРозничныхВозвратах.СуммаБезНДС,
		|	ОтчетОРозничныхВозвратах.НДС,
		|	ОтчетОРозничныхВозвратах.КорректируемыйДокумент,
		|	ОтчетОРозничныхВозвратах.Организация,
		|	ОтчетОРозничныхВозвратах.Партнер,
		|	ОтчетОРозничныхВозвратах.СтавкаНДС
		|ИЗ
		|	ОтчетОРозничныхВозвратах КАК ОтчетОРозничныхВозвратах;
		|
		|////////////////////////////////////////////////////////////////////////////////1
		|ВЫБРАТЬ
		|	СУММА(ТаблицаПродаж.СуммаБезНДС) КАК СуммаБезНДС,
		|	СУММА(ТаблицаПродаж.НДС) КАК НДС,
		|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
		|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаПродаж.Организация КАК Организация,
		|	ТаблицаПродаж.РозничныйПокупатель КАК РозничныйПокупатель,
		|	ТаблицаПродаж.КорректируемыйДокумент КАК КорректируемыйДокумент,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ТаблицаПродаж.Период) КАК КорректируемыйПериод,
		|	ПериодыПродаж.ПериодичностьОформления КАК ПериодичностьОформления
		|ПОМЕСТИТЬ ТаблицаПродажПредварительная
		|ИЗ
		|	ТаблицаПродажИсходная КАК ТаблицаПродаж
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПродаж КАК ПериодыПродаж
		|		ПО ПериодыПродаж.Организация = ТаблицаПродаж.Организация
		|			И ТаблицаПродаж.Период МЕЖДУ ПериодыПродаж.НачалоПериода И ПериодыПродаж.КонецПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ТаблицаПродаж.Организация = ДанныеПервичныхДокументов.Организация
		|			И ТаблицаПродаж.КорректируемыйДокумент = ДанныеПервичныхДокументов.Документ
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПродаж.Организация,
		|	ПериодыПродаж.ПериодичностьОформления,
		|	ТаблицаПродаж.РозничныйПокупатель,
		|	ТаблицаПродаж.СтавкаНДС,
		|	ТаблицаПродаж.КорректируемыйДокумент,
		|	ДанныеПервичныхДокументов.Дата,
		|	ТаблицаПродаж.Период,
		|	ТаблицаПродаж.ВидЦенности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////1
		|ВЫБРАТЬ
		|	РазрезыКОтражению.Организация               КАК Организация,
		|	РазрезыКОтражению.КорректируемыйПериод      КАК КорректируемыйПериод,
		|	МАКСИМУМ(НастройкиУчетаНДС.Период) КАК ПериодУчетнойПолитики
		|ПОМЕСТИТЬ ПериодыУчетнойПолитики
		|ИЗ
		|	ТаблицаПродажПредварительная КАК РазрезыКОтражению
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
		|	ПО
		|		РазрезыКОтражению.Организация = НастройкиУчетаНДС.Организация
		|		И РазрезыКОтражению.КорректируемыйПериод >= НастройкиУчетаНДС.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрезыКОтражению.Организация,
		|	РазрезыКОтражению.КорректируемыйПериод
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////1
		|ВЫБРАТЬ
		|	РазрезыКОтражению.Организация          КАК Организация,
		|	РазрезыКОтражению.КорректируемыйПериод КАК КорректируемыйПериод,
		|	ЕСТЬNULL(НастройкиУчетаНДС.ПериодичностьОформленияСводныхСправок,
		|		ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)) КАК ПериодичностьОформления,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкиУчетаНДС.ПериодичностьОформленияСводныхСправок,
		|			ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)) = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
		|			ТОГДА КОНЕЦПЕРИОДА(РазрезыКОтражению.КорректируемыйПериод, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(РазрезыКОтражению.КорректируемыйПериод, КВАРТАЛ)
		|	КОНЕЦ КАК ДатаОформленияСправки
		|ПОМЕСТИТЬ УчетнаяПолитикаКорректируемогоПериода
		|ИЗ
		|	ПериодыУчетнойПолитики КАК РазрезыКОтражению
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПериодыУчетнойПолитики КАК ПериодыУчетнойПолитики
		|	ПО
		|		РазрезыКОтражению.Организация = ПериодыУчетнойПолитики.Организация
		|		И РазрезыКОтражению.КорректируемыйПериод = ПериодыУчетнойПолитики.КорректируемыйПериод
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
		|	ПО
		|		ПериодыУчетнойПолитики.Организация = НастройкиУчетаНДС.Организация
		|		И ПериодыУчетнойПолитики.ПериодУчетнойПолитики = НастройкиУчетаНДС.Период
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////1
		|ВЫБРАТЬ
		|	ТаблицаПродаж.СуммаБезНДС КАК СуммаБезНДС,
		|	ТаблицаПродаж.НДС КАК НДС,
		|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
		|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаПродаж.Организация КАК Организация,
		|	ТаблицаПродаж.РозничныйПокупатель КАК РозничныйПокупатель,
		|	ЕСТЬNULL(СводнаяСправкаНДС.Ссылка, ТаблицаПродаж.КорректируемыйДокумент) КАК ПервичныйДокумент,
		|	ТаблицаПродаж.ПериодичностьОформления КАК ПериодичностьОформления
		|ПОМЕСТИТЬ ТаблицаПродаж
		|ИЗ
		|	ТаблицаПродажПредварительная КАК ТаблицаПродаж
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетнаяПолитикаКорректируемогоПериода КАК УчетнаяПолитика
		|		ПО УчетнаяПолитика.Организация = ТаблицаПродаж.Организация
		|			И УчетнаяПолитика.КорректируемыйПериод = ТаблицаПродаж.КорректируемыйПериод
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
		|		ПО ТаблицаПродаж.Организация = СводнаяСправкаНДС.Организация
		|			И СводнаяСправкаНДС.Дата = УчетнаяПолитика.ДатаОформленияСправки
		|			И СводнаяСправкаНДС.ПериодичностьОформления = УчетнаяПолитика.ПериодичностьОформления
		|			И ТаблицаПродаж.РозничныйПокупатель
		|			И (ТИПЗНАЧЕНИЯ(ТаблицаПродаж.КорректируемыйДокумент) = ТИП(Документ.ОтчетОРозничныхПродажах)
		|				ИЛИ ТаблицаПродаж.КорректируемыйДокумент = НЕОПРЕДЕЛЕНО)
		|			И СводнаяСправкаНДС.Проведен
		|			И НЕ СводнаяСправкаНДС.Исправление
		|			И НЕ СводнаяСправкаНДС.Корректировочная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПериодыУчетнойПолитики
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ УчетнаяПолитикаКорректируемогоПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПродажИсходная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаПродажПредварительная
		|";
		
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры


// Возвращает данные для заполнения ТЧ Продажи в сводной справке
//
// Параметры:
// 	СтруктураПолученияДанных - Структура:
//		* ВидСправок - Строка - Обычные/Исправленные/Корректировочные
//		* Организация - СправочникСсылка.Организации
//		* Дата - Дата справки
//		* ПериодичностьОформления - ПеречислениеСсылка.Периодичность
//		* ИсправляемыйПериод - Дата 
//		* ПервичныйДокумент - ДокументСсылка - корректируемый документ
//		* СводнаяСправкаПредыдущееИсправление - ДокументСсылка.СводнаяСправкаНДС
//
// Возвращаемое значение:
// 	ТаблицаЗначений - таблица с колонками:
//		* СуммаБезНДС - Число - Сумма продаж без НДС
//		* НДС - Число - Сумма НДС
//		* ВидЦенности - ПеречислениеСсылка.ВидыЦенностей
//		* СтавкаНДС - ПеречислениеСсылка.СтавкиНДС
//
Функция ПолучитьДанныеЗаполненияСводнойСправки(СтруктураПолученияДанных) Экспорт

	ПараметрыРасчета = Новый Структура();
	ПараметрыРасчета.Вставить("НачалоПериода", НачалоКвартала(СтруктураПолученияДанных.Дата));
	ПараметрыРасчета.Вставить("КонецПериода", КонецМесяца(СтруктураПолученияДанных.Дата));
	ПараметрыРасчета.Вставить("МассивОрганизаций", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СтруктураПолученияДанных.Организация));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СформироватьВТПериодыПродаж(Запрос, ПараметрыРасчета);
	СформироватьТаблицуПродаж(Запрос, ПараметрыРасчета, СтруктураПолученияДанных.ВидСправок);
	
	Запрос.УстановитьПараметр("Организация", СтруктураПолученияДанных.Организация);
	Запрос.УстановитьПараметр("ПериодичностьОформления", СтруктураПолученияДанных.ПериодичностьОформления);
	Запрос.УстановитьПараметр("ИсправляемыйПериод", СтруктураПолученияДанных.ИсправляемыйПериод);
	Запрос.УстановитьПараметр("ПервичныйДокумент", СтруктураПолученияДанных.ПервичныйДокумент);
	Запрос.УстановитьПараметр("СводнаяСправкаПредыдущееИсправление", СтруктураПолученияДанных.СводнаяСправкаПредыдущееИсправление);
	
	Если СтруктураПолученияДанных.ВидСправок = "Обычные" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПродаж.СуммаБезНДС КАК СуммаБезНДС,
		|	ТаблицаПродаж.НДС КАК НДС,
		|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
		|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	ТаблицаПродаж КАК ТаблицаПродаж
		|ГДЕ
		|	ТаблицаПродаж.Организация = &Организация
		|	И ТаблицаПродаж.ПериодичностьОформления = &ПериодичностьОформления";
		
	ИначеЕсли СтруктураПолученияДанных.ВидСправок = "Исправленные" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СводнаяСправкаНДСПродажи.СуммаБезНДС КАК СуммаБезНДС,
		|	СводнаяСправкаНДСПродажи.НДС КАК НДС,
		|	СводнаяСправкаНДСПродажи.ВидЦенности КАК ВидЦенности,
		|	СводнаяСправкаНДСПродажи.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	Документ.СводнаяСправкаНДС.Продажи КАК СводнаяСправкаНДСПродажи
		|ГДЕ
		|	СводнаяСправкаНДСПродажи.Ссылка = &СводнаяСправкаПредыдущееИсправление
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаПродаж.СуммаБезНДС,
		|	ТаблицаПродаж.НДС,
		|	ТаблицаПродаж.ВидЦенности,
		|	ТаблицаПродаж.СтавкаНДС
		|ИЗ
		|	ТаблицаПродаж КАК ТаблицаПродаж
		|ГДЕ
		|	ТаблицаПродаж.Организация = &Организация
		|	И ТаблицаПродаж.ИсправляемыйПериод = &ИсправляемыйПериод
		|	И ТаблицаПродаж.ПериодичностьОформления = &ПериодичностьОформления";
		
	ИначеЕсли СтруктураПолученияДанных.ВидСправок = "Корректировочные" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПродаж.СуммаБезНДС КАК СуммаБезНДС,
		|	ТаблицаПродаж.НДС КАК НДС,
		|	ТаблицаПродаж.ВидЦенности КАК ВидЦенности,
		|	ТаблицаПродаж.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	ТаблицаПродаж КАК ТаблицаПродаж
		|ГДЕ
		|	ТаблицаПродаж.Организация = &Организация
		|	И ТаблицаПродаж.ПервичныйДокумент = &ПервичныйДокумент
		|	И ТаблицаПродаж.ПериодичностьОформления = &ПериодичностьОформления";
		
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции


#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                                              КАК Период,
	|	ДанныеДокумента.Номер                                                             КАК Номер,
	|	ДанныеДокумента.Организация                                                       КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ)             КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0) КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.СводнаяСправкаОснование                                           КАК СводнаяСправкаОснование,
	|	ЕСТЬNULL(ДанныеДокумента.СводнаяСправкаОснование.Дата, ДАТАВРЕМЯ(1,1,1))          КАК ДатаСводнойСправкиОснования,
	|	ДанныеДокумента.СводнаяСправкаОснование.Номер                                     КАК НомерСводнойСправкиОснования,
	|	ДанныеДокумента.Исправление                                                       КАК Исправление,
	|	ДанныеДокумента.НомерИсправления                                                  КАК НомерИсправления,
	|	ДанныеДокумента.Корректировочная                                                  КАК Корректировочная,
	|	ДанныеДокумента.ПервичныйДокумент                                                 КАК ПервичныйДокумент,
	|	ДанныеДокумента.ДатаПервичногоДокумента                                           КАК ДатаПервичногоДокумента,
	|	ДанныеДокумента.НомерПервичногоДокумента                                          КАК НомерПервичногоДокумента,
	|	ДанныеДокумента.РозничныйПокупатель                                               КАК РозничныйПокупатель,
	|	ДанныеДокумента.РучнаяКорректировкаЖурналаСФ                                      КАК РучнаяКорректировкаЖурналаСФ,
	|	ДанныеДокумента.Проведен                                                          КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                                                   КАК ПометкаУдаления,
	|	ДанныеДокумента.Комментарий                                                       КАК Комментарий
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",						Реквизиты.Период);
	Запрос.УстановитьПараметр("ДатаВыставления",			Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",						Реквизиты.Номер);
	Запрос.УстановитьПараметр("Организация",				Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДатаСводнойСправкиОснования",Реквизиты.ДатаСводнойСправкиОснования);
	Запрос.УстановитьПараметр("Исправление",				Реквизиты.Исправление);
	Запрос.УстановитьПараметр("НомерИсправления",			Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("Корректировочная",			Реквизиты.Корректировочная);
	Запрос.УстановитьПараметр("СводнаяСправкаОснование",	Реквизиты.СводнаяСправкаОснование);
	Запрос.УстановитьПараметр("ПервичныйДокумент",			Реквизиты.ПервичныйДокумент);
	Запрос.УстановитьПараметр("ДатаПервичногоДокумента",	Реквизиты.ДатаПервичногоДокумента);
	Запрос.УстановитьПараметр("НомерПервичногоДокумента",	Реквизиты.НомерПервичногоДокумента);
	Запрос.УстановитьПараметр("Проведен",					Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",			Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",	ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка)));
	Запрос.УстановитьПараметр("КодВидаОперации",			"26");
	Запрос.УстановитьПараметр("КодВидаОперацииНаУменьшение",?(Реквизиты.РозничныйПокупатель, "17", "16"));
	Запрос.УстановитьПараметр("ОбособленноеПодразделение",	Реквизиты.ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("РучнаяКорректировкаЖурналаСФ", Реквизиты.РучнаяКорректировкаЖурналаСФ);
	Запрос.УстановитьПараметр("ЦифровойИндексОбособленногоПодразделения", Реквизиты.ЦифровойИндексОбособленногоПодразделения);
	Запрос.УстановитьПараметр("Комментарий",                Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Валюта",                     ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация));
	
	НомерНаПечать = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
				?(Реквизиты.Исправление, Реквизиты.НомерСводнойСправкиОснования, Реквизиты.Номер), 
				Ложь,
				Реквизиты.ОбособленноеПодразделение, 
				Реквизиты.ЦифровойИндексОбособленногоПодразделения);
	Запрос.УстановитьПараметр("НомерНаПечать",				НомерНаПечать);
	
	
	ИнформацияПоИсправлению = "";
	Если ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		Если Реквизиты.Исправление Тогда
			ШаблонСтроки = "ru = 'Исправление %1 от %2'"; // @НСтр
			ИнформацияПоИсправлению = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ШаблонСтроки,
										СокрЛП(Реквизиты.НомерИсправления),
										Формат(Реквизиты.Период,"ДЛФ=D"));
		КонецЕсли;
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СводнаяСправкаНДС"));

	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Процедура УстановитьПараметрЗапросаСводнаяСправкаПредыдущееИсправление(Запрос)
	
	Если Запрос.Параметры.Свойство("СводнаяСправкаПредыдущееИсправление") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СводнаяСправкаПредыдущееИсправление", ?(Запрос.Параметры.Исправление,
		СводнаяСправкаПредыдущееИсправление(Запрос.Параметры.СводнаяСправкаОснование, Запрос.Параметры.НомерИсправления),
		Неопределено));
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаСводнаяСправкаПредыдущееИсправление(Запрос);
	
#Область ТекстРучнаяКорректировка
	ТекстЗапросаРучнаяКорректировка = 
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Регистратор = &Ссылка
	|	И &РучнаяКорректировкаЖурналаСФ
	|";
#КонецОбласти
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &СводнаяСправкаПредыдущееИсправление) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия > 0)
	|";
#КонецОбласти
	
#Область ТекстВыставленныеСчетаФактурыНаРеализацию
	ТекстЗапросаВыставленныеСчетаФактурыНаРеализацию = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	NULL КАК Контрагент,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления КАК ДатаВыставленияПолучения,
	|	ЛОЖЬ КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации КАК КодВидаОперации,
	|	&НомерНаПечать КАК НомерСчетаФактуры,
	|	&Период КАК ДатаСчетаФактуры,
	|	NULL КАК НомерКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаКорректировочногоСчетаФактуры,
	|	NULL КАК НомерИсправления,
	|	NULL КАК ДатаИсправления,
	|	NULL КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	1 КАК ИндексСтроки,
	|	&Валюта КАК Валюта,
	|	СУММА(ТаблицаДанных.СуммаБезНДС + ТаблицаДанных.НДС) КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаДанных.НДС) КАК СуммаНДС,
	|	NULL КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	NULL КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	NULL КАК СуммаНДСРазницаУменьшение,
	|	NULL КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	NULL КАК КППКонтрагента,
	|	NULL КАК ИННКонтрагента,
	|	NULL КАК Посредник,
	|	NULL КАК СчетФактураВыданныйПокупателю,
	|	
	|	0 КАК СуммаПоСчетуФактуреКомиссия,
	|	0 КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	"""" КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|ИЗ
	|	Документ.СводнаяСправкаНДС.Продажи КАК ТаблицаДанных
	|
	|ГДЕ
	|	ТаблицаДанных.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И НЕ &Корректировочная
	|	И НЕ &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(ТаблицаДанных.НДС) <> 0
	|";
#КонецОбласти
	
#Область ТекстВыставленныеСчетаФактурыНаРеализациюИсправление
	ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюИсправление = "
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	NULL,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры),
	|	&ДатаВыставления,
	|	ЛОЖЬ,
	|	&КодВидаОперации,
	|	&НомерНаПечать,
	|	&ДатаСводнойСправкиОснования,
	|	NULL,
	|	NULL,
	|	&НомерИсправления,
	|	&Период,
	|	NULL,
	|	NULL,
	|	2,
	|	&Валюта,
	|	СУММА(ТаблицаДанных.СуммаБезНДС + ТаблицаДанных.НДС) КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаДанных.НДС) КАК СуммаНДС,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	
	|	0 КАК СуммаПоСчетуФактуреКомиссия,
	|	0 КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	"""" КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|ИЗ
	|	Документ.СводнаяСправкаНДС.Продажи КАК ТаблицаДанных
	|
	|ГДЕ
	|	ТаблицаДанных.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И НЕ &Корректировочная
	|	И &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(ТаблицаДанных.НДС) <> 0
	|";
#КонецОбласти
	
#Область ТекстВыставленныеСчетаФактурыНаРеализациюКорректировочный
	ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюКорректировочный = "
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	NULL,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры),
	|	&ДатаВыставления,
	|	ЛОЖЬ,
	|	&КодВидаОперацииНаУменьшение,
	|	&НомерПервичногоДокумента,
	|	&ДатаПервичногоДокумента,
	|	&НомерНаПечать,
	|	&Период,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	&Валюта,
	|	NULL,
	|	NULL,
	|	СУММА(ТаблицаДанных.СуммаБезНДС + ТаблицаДанных.НДС) КАК СуммаПоСчетуФактуреУменьшение,
	|	0,
	|	СУММА(ТаблицаДанных.НДС) КАК СуммаНДСУменьшение,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	
	|	0 КАК СуммаПоСчетуФактуреКомиссия,
	|	0 КАК СуммаНДСКомиссия,
	|	0,
	|	0,
	|	0,
	|	0,
	|	"""" КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|
	|ИЗ
	|	Документ.СводнаяСправкаНДС.Продажи КАК ТаблицаДанных
	|
	|ГДЕ
	|	ТаблицаДанных.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И &Корректировочная
	|	И НЕ &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(ТаблицаДанных.НДС) <> 0
	|";
#КонецОбласти

	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(ТекстЗапросаРучнаяКорректировка);
	МассивТекстов.Добавить(ТекстЗапросаСторноИсправление);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыНаРеализацию);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюИсправление);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюКорректировочный);
	ТекстЗапроса = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапросаКорректировка = "
	|
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&Организация                      КАК Организация,
	|	&Организация                      КАК Поставщик,
	|	&Ссылка                           КАК СчетФактура,
	|	ТаблицаДанных.ВидЦенности         КАК ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС.ПеречислениеСтавкаНДС                   КАК СтавкаНДС,
	|	NULL                                                            КАК СчетУчетаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	&Период                           КАК ДатаСобытия,
	|	ЛОЖЬ                              КАК ЗаписьДополнительногоЛиста,
	|	NULL                              КАК КорректируемыйПериод,
	|	ЛОЖЬ                              КАК Исправление,
	|	NULL                              КАК ИсправленныйСчетФактура,
	|	СУММА(ТаблицаДанных.СуммаБезНДС)  КАК СуммаБезНДС,
	|	СУММА(ТаблицаДанных.НДС)          КАК НДС,
	|	&КодВидаОперацииНаУменьшение      КАК КодВидаОперации
	|ИЗ
	|	Документ.СводнаяСправкаНДС.Продажи КАК ТаблицаДанных
	|
	|ГДЕ
	|	ТаблицаДанных.Ссылка = &Ссылка
	|	И &Корректировочная
	|	И НЕ &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС.ПеречислениеСтавкаНДС
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапросаКорректировка, ИмяРегистра);
	Возврат ТекстЗапросаКорректировка
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаСводнаяСправкаПредыдущееИсправление(Запрос);
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	&Исправление КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДСОборот КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДСОборот КАК НДС,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|		,
	|		,
	|		Регистратор,
	|		Организация = &Организация
	|			И СчетФактура = &СводнаяСправкаОснование
	|			И ИсправленныйСчетФактура = &СводнаяСправкаПредыдущееИсправление) КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПродаж.Регистратор <> &Ссылка
	|	И (НДСЗаписиКнигиПродаж.СуммаБезНДСОборот > 0
	|		ИЛИ НДСЗаписиКнигиПродаж.НДСОборот > 0)
	|";
#КонецОбласти
	
#Область ТекстПродажи
	ТекстЗапросаПродажи = "
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	&Ссылка,
	|	ТаблицаДанных.ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС.ПеречислениеСтавкаНДС,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация) КАК Событие,
	|	&Период,
	|	ЛОЖЬ,
	|	NULL,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL,
	|	ЛОЖЬ,
	|	NULL,
	|	СУММА(ТаблицаДанных.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДанных.НДС) КАК НДС,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.СводнаяСправкаНДС.Продажи КАК ТаблицаДанных
	|
	|ГДЕ
	|	ТаблицаДанных.Ссылка = &Ссылка
	|	И НЕ &Корректировочная
	|	И НЕ &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС.ПеречислениеСтавкаНДС
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(ТаблицаДанных.НДС) <> 0
	|";
#КонецОбласти

#Область ТекстПродажиИсправление
	ТекстПродажиИсправление = "
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	ТаблицаДанных.Ссылка.СводнаяСправкаОснование,
	|	ТаблицаДанных.ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС.ПеречислениеСтавкаНДС,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация) КАК Событие,
	|	&Период,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(&ДатаСводнойСправкиОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(&ДатаСводнойСправкиОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) ТОГДА
	|			&ДатаСводнойСправкиОснования
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	NULL,
	|	&Ссылка,
	|	ИСТИНА,
	|	NULL,
	|	СУММА(ТаблицаДанных.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДанных.НДС) КАК НДС,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.СводнаяСправкаНДС.Продажи КАК ТаблицаДанных
	|
	|ГДЕ
	|	ТаблицаДанных.Ссылка = &Ссылка
	|	И НЕ &Корректировочная
	|	И &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС.ПеречислениеСтавкаНДС,
	|	ТаблицаДанных.Ссылка.СводнаяСправкаОснование
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(ТаблицаДанных.НДС) <> 0
	|";
#КонецОбласти

	ТекстЗапроса = ТекстЗапросаСторноИсправление
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаПродажи
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПродажиИсправление;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса
	
КонецФункции

Функция СводнаяСправкаПредыдущееИсправление(СводнаяСправкаОснование, НомерИсправления) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СводнаяСправкаНДС.Ссылка КАК ИсправленнаяСводнаяСправка,
	|	СводнаяСправкаНДС.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|ГДЕ
	|	СводнаяСправкаНДС.СводнаяСправкаОснование = &СводнаяСправкаОснование
	|	И СводнаяСправкаНДС.Проведен
	|	И СводнаяСправкаНДС.Исправление
	|	И СводнаяСправкаНДС.НомерИсправления <> &НомерИсправления
	|";
	
	Запрос.УстановитьПараметр("СводнаяСправкаОснование", СводнаяСправкаОснование);
	Запрос.УстановитьПараметр("НомерИсправления", НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленнаяСводнаяСправка = Неопределено;
	НомерИсправленияЧислом = ?(ЗначениеЗаполнено(НомерИсправления),Число(НомерИсправления),1);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленнаяСводнаяСправка = Выборка.ИсправленнаяСводнаяСправка;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленнаяСводнаяСправка
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.СводнаяСправкаНДС";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		Запрос.Параметры.Вставить("НомерНаПечать","""""");
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                  КАК Ссылка,
	|	&Период                  КАК ДатаДокументаИБ,
	|	&Номер                   КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&Организация             КАК Организация,
	|	НЕОПРЕДЕЛЕНО             КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО             КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО             КАК Ответственный,
	|	&Комментарий             КАК Комментарий,
	|	НЕОПРЕДЕЛЕНО             КАК Валюта,
	|	0                        КАК Сумма,
	|	&Проведен                КАК Проведен,
	|	&ПометкаУдаления         КАК ПометкаУдаления,
	|	&ИнформацияПоИсправлению КАК Дополнительно,
	|	&Период                  КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать           КАК НомерПервичногоДокумента,
	|	НЕОПРЕДЕЛЕНО             КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО             КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО             КАК Партнер,
	|	НЕОПРЕДЕЛЕНО             КАК Договор,
	|	ЛОЖЬ                     КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО             КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО             КАК ИсправляемыйДокумент,
	|	&Период                  КАК ДатаОтраженияВУчете,
	|	ЛОЖЬ                     КАК ДополнительнаяЗапись,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВРозницу) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
