#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияЗЕРНОПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияЗЕРНО.ЗаписатьСоответствиеНоменклатуры(ЭтотОбъект, "ОстаткиПоДаннымЗЕРНО");
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ИнтеграцияЗЕРНО.ЗаписатьСтатусДокументаЗЕРНОПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если Операция = Перечисления.ВидыОперацийЗЕРНО.ЗагрузкаОстатковПартий Тогда
		Операция = Неопределено;
	КонецЕсли;
	
	ОстаткиПоДаннымЗЕРНО.Очистить();
	КорректировкаОстатков.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ЗапросОстатковПартийЗЕРНО.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиПартийЗЕРНО.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияИСПереопределяемый.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьПоРасхождениям() Экспорт
	
	КорректировкаОстатков.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	
	ТаблицаИсточникиРеквизитов = ИнтеграцияЗЕРНО.НоваяТаблицаОрганизацияКонтрагентПодразделение();
	ИнтеграцияЗЕРНО.ДобавитьВТаблицуОтбораОрганизациюПодразделение(
		ТаблицаИсточникиРеквизитов, Организация, Подразделение);
	ОрганизацияКлючи = Справочники.КлючиРеквизитовОрганизацийЗЕРНО.КлючиПоОрганизациямКонтрагентам(ТаблицаИсточникиРеквизитов);
	
	Запрос.УстановитьПараметр("ВсеПартииЭлеватора", Ложь);
	Запрос.УстановитьПараметр("ВсеЭлеваторы", Ложь);
	Если Операция = Перечисления.ВидыОперацийЗЕРНО.ЗапросПартий
		Или Операция = Перечисления.ВидыОперацийЗЕРНО.ЗагрузкаОстатковПартий Тогда
		Запрос.УстановитьПараметр("ВладелецПартии", ОрганизацияКлючи);
		Если ЗначениеЗаполнено(Элеватор) Тогда
			ТаблицаИсточникиРеквизитов = ИнтеграцияЗЕРНО.НоваяТаблицаОрганизацияКонтрагентПодразделение();
			ИнтеграцияЗЕРНО.ДобавитьВТаблицуОтбораОрганизациюПодразделение(
				ТаблицаИсточникиРеквизитов, Элеватор, ПодразделениеЭлеватора);
			ЭлеваторКлючи = Справочники.КлючиРеквизитовОрганизацийЗЕРНО.КлючиПоОрганизациямКонтрагентам(ТаблицаИсточникиРеквизитов);
			Запрос.УстановитьПараметр("Элеватор", ЭлеваторКлючи);
		Иначе
			Запрос.УстановитьПараметр("Элеватор", Справочники.КлючиРеквизитовОрганизацийЗЕРНО.ПустаяСсылка());
			Запрос.УстановитьПараметр("ВсеЭлеваторы", Истина);
		КонецЕсли;
	Иначе 
		Если ЗначениеЗаполнено(ВладелецПартии) Тогда
			ТаблицаИсточникиРеквизитов = ИнтеграцияЗЕРНО.НоваяТаблицаОрганизацияКонтрагентПодразделение();
			ИнтеграцияЗЕРНО.ДобавитьВТаблицуОтбораОрганизациюПодразделение(
				ТаблицаИсточникиРеквизитов, ВладелецПартии, ПодразделениеВладельцаПартии);
			ВладелецПартииКлючи = Справочники.КлючиРеквизитовОрганизацийЗЕРНО.КлючиПоОрганизациямКонтрагентам(ТаблицаИсточникиРеквизитов);
			Запрос.УстановитьПараметр("ВладелецПартии", ВладелецПартииКлючи);
		Иначе
			Запрос.УстановитьПараметр("ВладелецПартии", Справочники.КлючиРеквизитовОрганизацийЗЕРНО.ПустаяСсылка());
			Запрос.УстановитьПараметр("ВсеПартииЭлеватора", Истина);
		КонецЕсли;
		Запрос.УстановитьПараметр("Элеватор", ОрганизацияКлючи);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидПродукции", ВидПродукции);
	Запрос.УстановитьПараметр("ОстаткиПоДаннымЗЕРНО",
		ОстаткиПоДаннымЗЕРНО.Выгрузить(, "Партия,КоличествоЗЕРНО"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОстаткиПартийЗЕРНООстатки.Партия                 КАК Партия,
	|	ОстаткиПартийЗЕРНООстатки.КоличествоЗЕРНООстаток КАК КоличествоЗЕРНО,
	|	ОстаткиПартийЗЕРНООстатки.ВОбработкеЗЕРНООстаток КАК ВОбработкеЗЕРНО
	|ПОМЕСТИТЬ ОстаткиПоУчету
	|ИЗ
	|	РегистрНакопления.ОстаткиПартийЗЕРНО.Остатки(&Период) КАК ОстаткиПартийЗЕРНООстатки
	|ГДЕ
	|	(1 В (ВЫБРАТЬ 1 ИЗ РегистрСведений.КлючиПартийЗЕРНО КАК КлючиПартийЗЕРНО
	|		ГДЕ КлючиПартийЗЕРНО.ВидПродукции = &ВидПродукции
	|		И (КлючиПартийЗЕРНО.ВладелецПартии В(&ВладелецПартии) ИЛИ &ВсеПартииЭлеватора)
	|		И (КлючиПартийЗЕРНО.Элеватор В(&Элеватор) ИЛИ &ВсеЭлеваторы)
	|		И КлючиПартийЗЕРНО.Партия = ОстаткиПартийЗЕРНООстатки.Партия))
	|ИНДЕКСИРОВАТЬ ПО
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоДаннымЗЕРНО.Партия КАК Партия,
	|	ОстаткиПоДаннымЗЕРНО.КоличествоЗЕРНО КАК КоличествоЗЕРНО
	|ПОМЕСТИТЬ ОстаткиЗЕРНО
	|ИЗ
	|	&ОстаткиПоДаннымЗЕРНО КАК ОстаткиПоДаннымЗЕРНО
	|ИНДЕКСИРОВАТЬ ПО
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ОстаткиПоУчету.Партия, ОстаткиЗЕРНО.Партия)                                   КАК Партия,
	|	ЕСТЬNULL(ОстаткиЗЕРНО.КоличествоЗЕРНО, 0) - ЕСТЬNULL(ОстаткиПоУчету.КоличествоЗЕРНО,0) КАК КоличествоЗЕРНО,
	|	- ЕСТЬNULL(ОстаткиПоУчету.ВОбработкеЗЕРНО,0)                                           КАК ВОбработкеЗЕРНО
	|ИЗ
	|	ОстаткиПоУчету КАК ОстаткиПоУчету
	|		ПОЛНОЕ СОЕДИНЕНИЕ ОстаткиЗЕРНО КАК ОстаткиЗЕРНО
	|		ПО ОстаткиПоУчету.Партия = ОстаткиЗЕРНО.Партия
	|ГДЕ
	|	ЕСТЬNULL(ОстаткиЗЕРНО.КоличествоЗЕРНО, 0) <> ЕСТЬNULL(ОстаткиПоУчету.КоличествоЗЕРНО,0)
	|	ИЛИ ЕСТЬNULL(ОстаткиПоУчету.ВОбработкеЗЕРНО,0) <> 0
	|";
	
	КорректировкаОстатков.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеЗЕРНО.ДанныеЗаполненияЗапросаОстатковПартийЗЕРНО(Организация);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеЗЕРНО.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
