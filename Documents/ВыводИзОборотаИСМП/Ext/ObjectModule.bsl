#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Товары.Очистить();
		ШтрихкодыУпаковок.Очистить();
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
	Если ОбъемноСортовойУчет
		И Не ИнтеграцияИСМПСлужебныйКлиентСервер.ИспользованиеОбъемноСортовогоУчетаПриВыводеИзОборота(ВидПродукции) Тогда
		ОбъемноСортовойУчет = Ложь;
	КонецЕсли;
	
	Если ОбъемноСортовойУчет Тогда
		Документы.ВыводИзОборотаИСМП.ЗаполнитьДоступныеGTIN(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	НепроверяемыеРеквизиты.Добавить("Товары.КоличествоПотребительскихУпаковок");
	Если ВидПервичногоДокумента <> Перечисления.ВидыПервичныхДокументовИСМП.Прочее Тогда
		НепроверяемыеРеквизиты.Добавить("НаименованиеПервичногоДокумента");
	КонецЕсли;
	
	Если Не ИнтеграцияИСМПСлужебныйКлиентСервер.ИспользованиеЦеныПриВыводеИзОборота(Операция, Истина, ОбъемноСортовойУчет) Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Цена");
		НепроверяемыеРеквизиты.Добавить("Товары.Сумма");
		НепроверяемыеРеквизиты.Добавить("Товары.СтавкаНДС");
	КонецЕсли;
	
	Если Не ИнтеграцияИСМПСлужебныйКлиентСервер.ИспользованиеПервичногоДокументаПриВыводеИзОборота(Операция, Истина) Тогда
		НепроверяемыеРеквизиты.Добавить("ВидПервичногоДокумента");
		Если Не ЗначениеЗаполнено(ВидПервичногоДокумента) Тогда
			НепроверяемыеРеквизиты.Добавить("ДатаПервичногоДокумента");
			НепроверяемыеРеквизиты.Добавить("НомерПервичногоДокумента");
		КонецЕсли;
	КонецЕсли;
	
	Если ИнтеграцияИСМПСлужебныйКлиентСервер.ИспользованиеПервичногоДокументаПриВыводеИзОборота(Операция)
		И ДатаПервичногоДокумента > Дата Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Дата первичного документа не может быть больше даты вывода из оборота'"),
			ЭтотОбъект, "ДатаПервичногоДокумента",, Отказ);
	КонецЕсли;
	
	Если Не (Операция = Перечисления.ВидыОперацийИСМП.ВыводИзОборотаПродажаПоСделкеСоставляющейГосударственнуюТайну
		Или Операция = Перечисления.ВидыОперацийИСМП.ВыводИзОборотаПродажаПоГосударственномуКонтракту) Тогда
		НепроверяемыеРеквизиты.Добавить("ИдентификаторГосударственногоКонтракта");
	КонецЕсли;
	
	Если Операция <> Перечисления.ВидыОперацийИСМП.ВыводИзОборотаДругое Тогда
		НепроверяемыеРеквизиты.Добавить("ОписаниеПричины");
	КонецЕсли;
	
	Если Операция <> Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЭкспортВСтраныЕАЭС Тогда
		НепроверяемыеРеквизиты.Добавить("СтранаНазначения");
	КонецЕсли;
	
	ИспользованиеАдреса       = ИнтеграцияИСМПСлужебныйКлиентСервер.ИспользованиеАдресаПриВыводеИзОборота(Операция,ВидПродукции,, ОбъемноСортовойУчет);
	ИспользованиеАдресаВсегда = ИнтеграцияИСМПСлужебныйКлиентСервер.ИспользованиеАдресаПриВыводеИзОборота(Операция, ВидПродукции, Истина, ОбъемноСортовойУчет);
	НепроверяемыеРеквизиты.Добавить("АдресПлощадкиСтрокой");
	
	Если ИспользованиеАдресаВсегда
		Или ИспользованиеАдреса И ЗначениеЗаполнено(АдресПлощадки) Тогда
		ПроверитьЗаполнениеАдреса(Отказ)
	КонецЕсли;
	
	Если Не ОбъемноСортовойУчет Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.GTIN");
	КонецЕсли;
	
	Если Не ИнтеграцияИСМПСлужебныйКлиентСервер.ИспользованиеКонтрагентаПриВыводеИзОборота(Операция, Истина, ОбъемноСортовойУчет) Тогда
		НепроверяемыеРеквизиты.Добавить("Контрагент");
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	Если Не ОбъемноСортовойУчет Тогда
		ИнтеграцияИСМПСлужебный.ПроверитьЗаполнениеШтрихкодовУпаковок(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ИнтеграцияИСМП.ПроверкаЗаполненияКоличестваПотребительскихУпаковок(ЭтотОбъект, Отказ);
	
	Если Не Отказ И ОбъемноСортовойУчет Тогда
		ПроверитьЗаполнениеТоваровПриОСУ(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияИСМП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование   = Неопределено;
	ИдентификаторЗаявки = Неопределено;
	СтранаНазначения    = Неопределено;
	ШтрихкодыУпаковок.Очистить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеИСМП.ДанныеЗаполненияВыводаИзОборотаИСМП(Организация, ВидПродукции);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		Если КлючИЗначение.Ключ = Метаданные.Документы.ВыводИзОборотаИСМП.Реквизиты.ОбъемноСортовойУчет.Имя
			И ЗначениеЗаполнено(ДокументОснование) Тогда
			Продолжить; // Признак объемно-сорового учета заполняется в переопредении
		КонецЕсли;
		ЗаполнениеОбъектовПоСтатистикеИСМП.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаПроверкиЗаполнения

Процедура ПроверитьЗаполнениеАдреса(Отказ)
	
	Если ОбщегоНазначенияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда 
	
		ДанныеСтраны = УправлениеКонтактнойИнформацией.СтранаАдресаКонтактнойИнформации(АдресПлощадки);
		
		Если ДанныеСтраны.Ссылка = ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
			
			ДанныеКИ         = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВJSON(АдресПлощадки);
			СведенияОбАдресе = РаботаСАдресами.СведенияОбАдресе(ДанныеКИ);
			
			Если Не ЗначениеЗаполнено(СведенияОбАдресе.Индекс) Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнен Индекс в адресе'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "АдресПлощадкиСтрокой",, Отказ);
			ИначеЕсли Не ЗначениеЗаполнено(СведенияОбАдресе.КодРегиона) Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнен Код региона в адресе'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "АдресПлощадкиСтрокой",, Отказ);
			КонецЕсли;
			
		Иначе
			
			Если Не ЗначениеЗаполнено(ДанныеСтраны.Код) Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнен Код страны в адресе'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "АдресПлощадкиСтрокой",, Отказ);
			ИначеЕсли Не ЗначениеЗаполнено(АдресПлощадкиСтрокой) Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнен адрес'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "АдресПлощадкиСтрокой",, Отказ);
			КонецЕсли;
			
		КонецЕсли;
	
	ИначеЕсли Не ЗначениеЗаполнено(ИнтеграцияИСМП.ИдентификаторФИАСПоДаннымАдреса(АдресПлощадки).Идентификатор) Тогда
		ТекстСообщения = НСтр("ru = 'Не найден идентификатор ФИАС'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "АдресПлощадкиСтрокой",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеТоваровПриОСУ(Отказ)
	
	ПроверятьЦены = (ИнтеграцияИСМПСлужебныйКлиентСервер.ИспользованиеЦеныПриВыводеИзОборота(Операция)
		И Операция <> Перечисления.ВидыОперацийИСМП.ВыводИзОборотаБезвозмезднаяПередача);
	
	СтрокиБезКоличестваУпаковокПоGTIN = Новый Соответствие();
	GTINСКоличествомУпаковок          = Новый Соответствие();
	
	СтрокиБезЦенПоGTIN = Новый Соответствие();
	GTINСЦенами        = Новый Соответствие();
	
	Для Каждого СтрокаТовары Из Товары Цикл
		Если Не ЗначениеЗаполнено(СтрокаТовары.GTIN) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТовары.КоличествоПотребительскихУпаковок) Тогда
			GTINСКоличествомУпаковок.Вставить(СтрокаТовары.GTIN, Истина);
		Иначе
			СтрокиБезКоличества = СтрокиБезКоличестваУпаковокПоGTIN[СтрокаТовары.GTIN];
			Если СтрокиБезКоличества = Неопределено Тогда
				СтрокиБезКоличества = Новый Массив();
				СтрокиБезКоличестваУпаковокПоGTIN[СтрокаТовары.GTIN] = СтрокиБезКоличества;
			КонецЕсли;
			СтрокиБезКоличества.Добавить(СтрокаТовары);
		КонецЕсли;
		
		Если ПроверятьЦены Тогда
			Если ЗначениеЗаполнено(СтрокаТовары.Цена) Тогда
				GTINСЦенами.Вставить(СтрокаТовары.GTIN, Истина);
			Иначе
				СтрокиБезЦен = СтрокиБезЦенПоGTIN[СтрокаТовары.GTIN];
				Если СтрокиБезЦен = Неопределено Тогда
					СтрокиБезЦен = Новый Массив();
					СтрокиБезЦенПоGTIN[СтрокаТовары.GTIN] = СтрокиБезЦен;
				КонецЕсли;
				СтрокиБезЦен.Добавить(СтрокаТовары);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ШаблонСообщения = НСтр("ru = 'В строке № %1 списка ""Товары"" для GTIN ""%2"" не заполнено поле ""Коды маркировки""'");
	Для Каждого КлючИЗначение Из GTINСКоличествомУпаковок Цикл
		СтрокиБезКоличества = СтрокиБезКоличестваУпаковокПоGTIN[КлючИЗначение.Ключ];
		Если СтрокиБезКоличества <> Неопределено Тогда
			Для Каждого СтрокаТовары Из СтрокиБезКоличества Цикл
				ТекстСообщения  = СтрШаблон(ШаблонСообщения, СтрокаТовары.НомерСтроки, СтрокаТовары.GTIN);
				ОбщегоНазначения.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"Товары", СтрокаТовары.НомерСтроки, "КоличествоПотребительскихУпаковок"),,
					Отказ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ШаблонСообщения = НСтр("ru = 'В строке № %1 списка ""Товары"" для GTIN ""%2"" не заполнено поле ""Цена""'");
	Для Каждого КлючИЗначение Из GTINСЦенами Цикл
		СтрокиБезЦен = СтрокиБезЦенПоGTIN[КлючИЗначение.Ключ];
		Если СтрокиБезЦен <> Неопределено Тогда
			Для Каждого СтрокаТовары Из СтрокиБезЦен Цикл
				ТекстСообщения  = СтрШаблон(ШаблонСообщения, СтрокаТовары.НомерСтроки, СтрокаТовары.GTIN);
				ОбщегоНазначения.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"Товары", СтрокаТовары.НомерСтроки, "Цена"),,
					Отказ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли