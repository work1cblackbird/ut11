#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗначенияОткрытия = РеквизитыСоздаваемогоОбъекта(Параметры);
	
	Если ЗначенияОткрытия.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыСоздаваемогоОбъекта(ЗначенияОткрытия);
	
	Элементы.ГруппаЕстьСовпадения.Видимость = Ложь;
	
	СоздаваемыйОбъект = Параметры.СоздаваемыйОбъект;
	ИмяСправочника = СоздаваемыйОбъект.Метаданные().Имя;
	
	Если ИмяСправочника = "НомераГТД" Тогда
		Заголовок = "Номер ГТД " + НСтр("ru = '(Создание)'");
	Иначе
		Заголовок = Строка(ТипЗнч(СоздаваемыйОбъект)) + " " + НСтр("ru = '(Создание)'");
	КонецЕсли;
	
	ТекстЗапросаПроверки = ПолучитьТекстЗапросаПроверкиПоРеквизитам();
	НастроитьСписокСуществующих();
	ОтобразитьРеквизиты();
	
	Если Не Параметры.ЗапретОткрытияСозданныхЭлементов Тогда
		ОткрыватьНовыеЭлементыСправочниковПослеСоздания = РегистрыСведений.ОбщиеНастройкиРаспознаваниеДокументов.Получить().ОткрыватьНовыеЭлементыСправочниковПослеСоздания;
	КонецЕсли;
	
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		УстановитьЗначенияПараметраСписка(РеквизитСоздаваемогоОбъекта);
	КонецЦикла;
	
	ИзменитьОтображениеСпискаСуществующих();
	
	ПроверитьИННКПП(Истина, Истина);
	ПроверитьНомерСчетаБИК();
	
	УстановитьВидимостьЭлементов();
	
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если РеквизитыСоздаваемогоОбъекта.Количество() Тогда
		РеквизитСоздаваемогоОбъекта = РеквизитыСоздаваемогоОбъекта[0];
		Координаты = РеквизитСоздаваемогоОбъекта.Координаты.ВыгрузитьЗначения();
		ПараметрыОповещения = Новый Структура("Координаты, ВысотаКартинки", Координаты, РеквизитСоздаваемогоОбъекта.ВысотаКартинки);
		Оповестить("ВыбранРеквизитФормыСоздания", ПараметрыОповещения);
	КонецЕсли;
	
	ИмяПараметра = "РаспознаваниеДокументов.ИспользоватьСервис1СКонтрагент";
	Если ПараметрыПриложения[ИмяПараметра] <> Ложь Тогда
		// Неопределено или Истина
		Использовать1СКонтрагент = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "КартинкаОткрытия" Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ОповеститьОВыборе(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	
	ВидПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	ИНН = СокрП(ИНН);
	ИННПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КПППриИзменении(Элемент)
	
	КПП = СокрП(КПП);
	КПППриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	
	ПроверитьНомерСчетаБИК();
	
КонецПроцедуры

&НаКлиенте
Процедура БанкНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ДанныеВыбора <> Неопределено Тогда
		//РеквизитыБанка = БанковскиеСчетаФормыКлиент.ПолучитьДанныеБанка(ДанныеВыбора);
		//ДанныеВыбора = РеквизитыБанка.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БанкАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Подключаемый_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	ПроверитьНомерСчетаБИК();
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОтправитьОповещениеВОсновнуюФорму("ВидСтавкиНДС");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ИмяЭлемента = Элемент.Имя;
	Если СтрЗаканчиваетсяНа(ИмяЭлемента, "Наименование") Тогда
		ИмяЭлемента = "Наименование";
	КонецЕсли;
	
	ОтправитьОповещениеВОсновнуюФорму(ИмяЭлемента);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		
		Если РеквизитСоздаваемогоОбъекта.Имя = "Наименование" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = Наименование;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ИНН" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = ИНН;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "КПП" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = КПП;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ЮридическоеФизическоеЛицо" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = ?(ВидКонтрагента = "ФизическоеЛицо",
				ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"),
				ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Артикул" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = Артикул;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ЕдиницаИзмерения" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = ЕдиницаИзмерения;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "СтавкаНДС" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = СтавкаНДС;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ВидНоменклатуры" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = ВидНоменклатуры;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Владелец" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = Владелец;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Контрагент" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = Владелец;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "НомерСчета" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = НомерСчета;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Банк" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = Банк;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ВалютаДенежныхСредств" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = ВалютаДенежныхСредств;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Код" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = Код;
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ТипДоговора" Тогда
			РеквизитСоздаваемогоОбъекта.Значение = ТипДоговора;
		КонецЕсли;
		
	КонецЦикла;
		
	Отказ = Ложь;
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		Если РеквизитСоздаваемогоОбъекта.Обязательный И Не ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Значение) Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""%1"" не заполнено'");
			Поле = "РеквизитыСоздаваемогоОбъекта[" + РеквизитСоздаваемогоОбъекта.ПолучитьИдентификатор() + "].Значение";
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(ТекстСообщения, РеквизитСоздаваемогоОбъекта.Синоним);
			Сообщение.Поле = Поле;
			Сообщение.Сообщить();
			
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяСправочника = "Контрагенты"
		И ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.РаботаСКонтрагентами") Тогда
		
		ИмяПараметра = "РаспознаваниеДокументов.ИспользоватьСервис1СКонтрагент";
		ПараметрыПриложения.Вставить(ИмяПараметра, Использовать1СКонтрагент);
		Если Использовать1СКонтрагент Тогда
			ЗаполнитьКонтрагентаДаннымиИзЕГРЮЛ();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	РучноеСозданиеНовогоЭлемента();
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(Элементы.Список.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтобразитьРеквизиты()
	
	ВидимаяСтраница = Неопределено;
	Если ИмяСправочника = "Контрагенты" Тогда
		ВидимаяСтраница = Элементы.Контрагенты;
	ИначеЕсли ИмяСправочника = "Номенклатура" Тогда
		ВидимаяСтраница = Элементы.Номенклатура;
	ИначеЕсли ИмяСправочника = "БанковскиеСчетаКонтрагентов"
		Или ИмяСправочника = "БанковскиеСчетаОрганизаций" Тогда
		ВидимаяСтраница = Элементы.БанковскийСчет;
	ИначеЕсли ИмяСправочника = "ДоговорыКонтрагентов" Тогда
		ВидимаяСтраница = Элементы.ДоговорКонтрагента;
	ИначеЕсли ИмяСправочника = "НомераГТД" Тогда
		ВидимаяСтраница = Элементы.НомерГТД;
	ИначеЕсли ИмяСправочника = "СтраныМира" Тогда
		ВидимаяСтраница = Элементы.СтраныМира;
	КонецЕсли;
	
	Если ВидимаяСтраница = Неопределено Тогда
		Элементы.СтраницыСозданиеОбъектов.Видимость = Ложь;
	Иначе
		Элементы.СтраницыСозданиеОбъектов.ТекущаяСтраница = ВидимаяСтраница;
		Для Каждого ГруппаСтраница Из Элементы.СтраницыСозданиеОбъектов.ПодчиненныеЭлементы Цикл
			Если ГруппаСтраница <> ВидимаяСтраница Тогда
				ГруппаСтраница.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		
		Если ИмяСправочника = "Контрагенты"
			Или ИмяСправочника = "Номенклатура"
			Или ИмяСправочника = "БанковскиеСчетаКонтрагентов"
			Или ИмяСправочника = "БанковскиеСчетаОрганизаций"
			Или ИмяСправочника = "ДоговорыКонтрагентов"
			Или ИмяСправочника = "НомераГТД"
			Или ИмяСправочника = "СтраныМира" Тогда
			
			Если РеквизитСоздаваемогоОбъекта.Имя = "Наименование" Тогда
				
				Если ИмяСправочника = "Контрагенты" Тогда
					Элементы.ГруппаКонтрагентыНаименованиеКартинка.Видимость = РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0;
					Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 1 Тогда
						Элементы.КонтрагентыНаименованиеКартинка.Высота = Цел(РеквизитСоздаваемогоОбъекта.ВысотаКартинки / 2) + 1;
					КонецЕсли;
				ИначеЕсли ИмяСправочника = "Номенклатура" Тогда
					Элементы.ГруппаНоменклатураНаименованиеКартинка.Видимость = РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0;
					Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 1 Тогда
						Элементы.НоменклатураНаименованиеКартинка.Высота = Цел(РеквизитСоздаваемогоОбъекта.ВысотаКартинки / 2) + 1;
					КонецЕсли;
				ИначеЕсли ИмяСправочника = "ДоговорыКонтрагентов" Тогда
					Элементы.ГруппаДоговорКонтрагентаНаименованиеКартинка.Видимость = РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0;
					Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 1 Тогда
						Элементы.ГруппаДоговорКонтрагентаНаименованиеКартинка.Высота = Цел(РеквизитСоздаваемогоОбъекта.ВысотаКартинки / 2) + 1;
					КонецЕсли;
				КонецЕсли;
				
				Наименование = РеквизитСоздаваемогоОбъекта.Значение;
				
				Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
					И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
					
					ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
					НаименованиеКартинка = КартинкаКакТекстHTML(ДвоичныеДанные, "Сверху");
				КонецЕсли;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Код" Тогда
				
				Если ИмяСправочника = "НомераГТД" Тогда
					Код = РаспознаваниеДокументовСлужебный.ИзвлечьГТДИзСтроки(РеквизитСоздаваемогоОбъекта.Значение);
					
					Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
						И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
						
						ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
						КодКартинка = КартинкаКакТекстHTML(ДвоичныеДанные);
					КонецЕсли;
					
					Продолжить;
				КонецЕсли;
				
				Код = РеквизитСоздаваемогоОбъекта.Значение;
				
				Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
					И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
					
					ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
					КодКартинка = КартинкаКакТекстHTML(ДвоичныеДанные, "Сверху");
				КонецЕсли;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ИНН" Тогда
				ИНН = РаспознаваниеДокументовСлужебный.ИзвлечьЦифрыИзСтроки(РеквизитСоздаваемогоОбъекта.Значение);
				
				Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
					И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
					
					ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
					ИННКартинка = КартинкаКакТекстHTML(ДвоичныеДанные);
				КонецЕсли;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "КПП" Тогда
				КПП = РаспознаваниеДокументовСлужебный.ИзвлечьЦифрыИзСтроки(РеквизитСоздаваемогоОбъекта.Значение);
				
				Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
					И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
					
					ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
					КППКартинка = КартинкаКакТекстHTML(ДвоичныеДанные);
				КонецЕсли;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ЮридическоеФизическоеЛицо" Тогда
				Если РеквизитСоздаваемогоОбъекта.Значение = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
					ВидКонтрагента = "ФизическоеЛицо";
				Иначе
					ВидКонтрагента = "ЮридическоеЛицо";
				КонецЕсли;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Артикул" Тогда
				Артикул = РаспознаваниеДокументовСлужебный.ИзвлечьАртикулИзСтроки(РеквизитСоздаваемогоОбъекта.Значение);
				
				Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
					И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
					
					ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
					АртикулКартинка = КартинкаКакТекстHTML(ДвоичныеДанные);
				КонецЕсли;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ЕдиницаИзмерения" Тогда
				ЕдиницаИзмерения = РеквизитСоздаваемогоОбъекта.Значение;
				
				Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
					И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
					
					ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
					ЕдиницаИзмеренияКартинка = КартинкаКакТекстHTML(ДвоичныеДанные);
				КонецЕсли;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ВидСтавкиНДС" Тогда
				СтавкаНДС = РеквизитСоздаваемогоОбъекта.Значение;
				
				Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
					И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
					
					ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
					СтавкаНДСКартинка = КартинкаКакТекстHTML(ДвоичныеДанные);
				КонецЕсли;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ВидНоменклатуры" Тогда
				ВидНоменклатуры = РеквизитСоздаваемогоОбъекта.Значение;
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Владелец" Тогда
				Владелец = РеквизитСоздаваемогоОбъекта.Значение;
				
				Элементы.БанковскийСчетВладелец.Заголовок = РеквизитСоздаваемогоОбъекта.Синоним;
				Элементы.ДоговорКонтрагентаВладелец.Заголовок = РеквизитСоздаваемогоОбъекта.Синоним;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Родитель" Тогда
				Родитель = РеквизитСоздаваемогоОбъекта.Значение;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "НомерСчета" Тогда
				НомерСчета = РаспознаваниеДокументовСлужебный.ИзвлечьЦифрыИзСтроки(РеквизитСоздаваемогоОбъекта.Значение);
				
				Элементы.ГруппаНомерСчета.Видимость = РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0;
				
				Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
					И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
					
					ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
					НомерСчетаКартинка = КартинкаКакТекстHTML(ДвоичныеДанные);
				КонецЕсли;
				
				Продолжить;
				
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Банк" Тогда
				Банк = РеквизитСоздаваемогоОбъекта.Значение;
				БанкРаспознанныйТекст = РеквизитСоздаваемогоОбъекта.РаспознанныйТекст;
				
				Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки > 0
					И ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Картинка) Тогда
					
					ДвоичныеДанные = РеквизитСоздаваемогоОбъекта.Картинка;
					БанкКартинка = КартинкаКакТекстHTML(ДвоичныеДанные);
				КонецЕсли;
				
				Продолжить;
				
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ВалютаДенежныхСредств" Тогда
				ВалютаДенежныхСредств = РеквизитСоздаваемогоОбъекта.Значение;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Организация" Тогда
				Организация = РеквизитСоздаваемогоОбъекта.Значение;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "ВидДоговора" Тогда
				Если РеквизитСоздаваемогоОбъекта.Значение.Количество() > 0 Тогда
					ВидДоговора = РеквизитСоздаваемогоОбъекта.Значение[0];
					Элементы.ВидДоговора.СписокВыбора.ЗагрузитьЗначения(РеквизитСоздаваемогоОбъекта.Значение.ВыгрузитьЗначения());
				КонецЕсли;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Номер" Тогда
				Номер = РеквизитСоздаваемогоОбъекта.Значение;
				
				Продолжить;
			ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Дата" Тогда
				Дата = РеквизитСоздаваемогоОбъекта.Значение;
				
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		//
		
		ГруппаРеквизита = Элементы.Добавить("Группа" + РеквизитСоздаваемогоОбъекта.Имя, Тип("ГруппаФормы"), Элементы.ГруппаРеквизитов);
		ГруппаРеквизита.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаРеквизита.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно;
		ГруппаРеквизита.Объединенная = Ложь;
		ГруппаРеквизита.ОтображатьЗаголовок = Ложь;
		
		ЭлементРеквизита = Элементы.Добавить(РеквизитСоздаваемогоОбъекта.Имя, Тип("ПолеФормы"), ГруппаРеквизита);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементРеквизита.Заголовок = РеквизитСоздаваемогоОбъекта.Синоним;
		ЭлементРеквизита.ПутьКДанным = "РеквизитыСоздаваемогоОбъекта[" + РеквизитСоздаваемогоОбъекта.ПолучитьИдентификатор() + "].Значение";
		ЭлементРеквизита.ВыбиратьТип = Ложь;
		ЭлементРеквизита.АвтоМаксимальнаяШирина = Ложь;
		Если РеквизитСоздаваемогоОбъекта.Обязательный Тогда
			ЭлементРеквизита.АвтоОтметкаНезаполненного = Истина;
		КонецЕсли;
		Если РеквизитСоздаваемогоОбъекта.ВысотаКартинки <> 0 Тогда
			ЭлементРеквизита.БыстрыйВыбор = Ложь;
		КонецЕсли;
		
		Если РеквизитСоздаваемогоОбъекта.ВыборГруппИЭлементов <> Неопределено Тогда 
			ЭлементРеквизита.ВыборГруппИЭлементов = РеквизитСоздаваемогоОбъекта.ВыборГруппИЭлементов;
		КонецЕсли;
		
		Если РеквизитСоздаваемогоОбъекта.Имя = "Дата" Тогда
			ЭлементРеквизита.ФорматРедактирования = "ДЛФ=D";
		КонецЕсли;
		
		ЭлементРеквизита.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзменении");
		ЭлементРеквизита.УстановитьДействие("АвтоПодбор", "Подключаемый_АвтоПодбор");
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КартинкаКакТекстHTML(ДвоичныеДанные, Позиция = "Сбоку")
	
	DataImage = Base64Строка(ДвоичныеДанные);
	DataImage = СтрЗаменить(DataImage, Символы.ВК, "");
	DataImage = СтрЗаменить(DataImage, Символы.ПС, "");
	DataImage = "data:image/jpg;base64," + DataImage;
	
	ШаблонHTML = 
		"<html>
		|<head>
		|  <style type=""text/css"">
		|    html, body { width: 100%; height:100%; margin: 0; padding: 0; }
		|    body {
		|      background-image: url('{{ DataImage }}');
		|      background-size: contain;
		|      background-repeat: no-repeat;
		|      background-position: left {{ Position }};
		|      scrollbar-width: none;
		|    }
		|    ::-webkit-scrollbar { display: none; }
		|  </style>
		|</head>
		|<body>
		|</body>
		|<html>";
	
	Результат = СтрЗаменить(ШаблонHTML, "{{ DataImage }}", DataImage);
	Результат = СтрЗаменить(Результат, "{{ Position }}", ?(Позиция = "Сбоку", "center", "bottom"));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаПроверкиПоРеквизитам()
	
	СхемаЗапроса = Новый СхемаЗапроса();
	ПакетЗапроса = СхемаЗапроса.ПакетЗапросов.Добавить();
	ОператорыПакета = ПакетЗапроса.Операторы[0];
	
	МетаданныеТипа = СоздаваемыйОбъект.Метаданные();
	ЕстьНаименованиеПолное = (МетаданныеТипа.Реквизиты.Найти("НаименованиеПолное") <> Неопределено);
	ОператорыПакета.Источники.Добавить(МетаданныеТипа.ПолноеИмя());
	ОператорыПакета.ВыбираемыеПоля.Добавить("Ссылка");
	ПолеИндексаКартинки = ОператорыПакета.ВыбираемыеПоля.Добавить("Истина");
	КолонкаИндексКартинки = ПакетЗапроса.Колонки.Найти(ПолеИндексаКартинки);
	КолонкаИндексКартинки.Псевдоним = "ИндексКартинки";
	ТекстОтбора = "";
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		Если НЕ РеквизитСоздаваемогоОбъекта.ИскатьПодходящие Тогда
			Продолжить;
		КонецЕсли;
		
		ОператорыПакета.ВыбираемыеПоля.Добавить(РеквизитСоздаваемогоОбъекта.Имя);
		Если РеквизитСоздаваемогоОбъекта.ПодходящиеОбязательноеРавенство Тогда
			ОператорыПакета.Отбор.Добавить(РеквизитСоздаваемогоОбъекта.Имя + "=&" + РеквизитСоздаваемогоОбъекта.Имя);
		ИначеЕсли РеквизитСоздаваемогоОбъекта.Имя = "Наименование" Тогда
			ТекстОтбораНаименование = РеквизитСоздаваемогоОбъекта.Имя + " ПОДОБНО &" + РеквизитСоздаваемогоОбъекта.Имя;

			Если ЕстьНаименованиеПолное Тогда
				ТекстОтбораНаименование = ТекстОтбораНаименование + " ИЛИ НаименованиеПолное ПОДОБНО &" + РеквизитСоздаваемогоОбъекта.Имя;
			КонецЕсли;
			
			ТекстОтбора = ТекстОтбора + ?(ПустаяСтрока(ТекстОтбора), "", " И ") + "(" + ТекстОтбораНаименование + ")";
		ИначеЕсли ТипЗнч(РеквизитСоздаваемогоОбъекта.Значение) = Тип("СписокЗначений") Тогда
			ТекстОтбора = ТекстОтбора + ?(ПустаяСтрока(ТекстОтбора), "", " И ")
				+ РеквизитСоздаваемогоОбъекта.Имя + " В (&" + РеквизитСоздаваемогоОбъекта.Имя + ")";
		Иначе
			ТекстОтбора = ТекстОтбора + ?(ПустаяСтрока(ТекстОтбора), "", " И ")
				+ "ВЫБОР КОГДА &" + РеквизитСоздаваемогоОбъекта.Имя + " = Неопределено ТОГДА Ложь ИНАЧЕ "
				+ РеквизитСоздаваемогоОбъекта.Имя + "=&" + РеквизитСоздаваемогоОбъекта.Имя + " КОНЕЦ";
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстОтбора) Тогда // При отсутствии полей выбора, например не определилась табличная часть
		Возврат ТекстОтбора;
	КонецЕсли;
	
	ОператорыПакета.Отбор.Добавить(ТекстОтбора);
	
	Возврат СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецФункции

&НаСервере
Процедура ИзменитьОтображениеСпискаСуществующих()
	
	Если ПустаяСтрока(ТекстЗапросаПроверки) Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаПроверки);
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		Если ЗначениеЗаполнено(РеквизитСоздаваемогоОбъекта.Значение) Тогда
				Если РеквизитСоздаваемогоОбъекта.Имя = "Наименование" Тогда 
					ЗначениеРеквизита = РеквизитСоздаваемогоОбъекта.Значение + "%";
				Иначе
					ЗначениеРеквизита = РеквизитСоздаваемогоОбъекта.Значение;
				КонецЕсли;
				Запрос.УстановитьПараметр(РеквизитСоздаваемогоОбъекта.Имя, ЗначениеРеквизита);
			Иначе
				Если РеквизитСоздаваемогоОбъекта.Имя = "Наименование" Тогда
					Запрос.УстановитьПараметр("Наименование", Строка(УникальныйИдентификатор));
				Иначе
					Запрос.УстановитьПараметр(РеквизитСоздаваемогоОбъекта.Имя, Неопределено);
				КонецЕсли;
			КонецЕсли;
	КонецЦикла;
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Элементы.ГруппаЕстьСовпадения.Видимость = Истина;
		Элементы.Выбрать.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ФормаСоздать.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСписокСуществующих()
	
	Если ПустаяСтрока(ТекстЗапросаПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	Список.ТекстЗапроса = ТекстЗапросаПроверки;
	Для Каждого РеквизитСоздаваемогоОбъекта Из РеквизитыСоздаваемогоОбъекта Цикл
		Если НЕ РеквизитСоздаваемогоОбъекта.ИскатьПодходящие Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРеквизита = РеквизитСоздаваемогоОбъекта.Имя;
		ДобавитьКолонкуСпискаСуществующих(ИмяРеквизита);
	КонецЦикла;
	
	ОтключаемыеПоля = Новый Массив;
	ОтключаемыеПоля.Добавить("Список.ИндексКартинки");
	
	Список.УстановитьОграниченияИспользованияВПорядке(ОтключаемыеПоля);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКолонкуСпискаСуществующих(ИмяКолонки)
	
	ЭлементКолонка = Элементы.Добавить("Список" + ИмяКолонки, Тип("ПолеФормы"), Элементы.Список);
	ЭлементКолонка.ПутьКДанным = "Список." + ИмяКолонки;
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеСозданиеНовогоЭлемента()
	
	НовыйЭлемент = СоздатьНовыйЭлементСправочника();
	Если НовыйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеОповещения = Новый Структура("Ссылка, СозданВФормеБРД", НовыйЭлемент, Истина);
	ОповеститьОВыборе(ЗначениеОповещения);
	Если ОткрыватьНовыеЭлементыСправочниковПослеСоздания Тогда
		ПоказатьЗначение(, НовыйЭлемент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьНовыйЭлементСправочника()
	
	МенеджерСправочника = Справочники[ИмяСправочника];
	СохраняемыйОбъект = МенеджерСправочника.СоздатьЭлемент();
	
	ДанныеДляЗаполнения = Новый Структура;
	Для Каждого СохраняемыйРеквизит Из РеквизитыСоздаваемогоОбъекта Цикл
		ТипРеквизитаВОбъекте = ТипЗнч(СохраняемыйОбъект[СохраняемыйРеквизит.Имя]);
		ТипЭтогоЗначения = ТипЗнч(СохраняемыйРеквизит.Значение);
		Если ТипРеквизитаВОбъекте <> ТипЭтогоЗначения Тогда
			СохраняемыйОбъект[СохраняемыйРеквизит.Имя] =
				РаспознаваниеДокументовПереопределяемый.ПриПриведенииТипаРеквизитаВОбъекте(
					СохраняемыйОбъект.Метаданные(),
					СохраняемыйРеквизит.Значение,
					ТипЭтогоЗначения,
					ТипРеквизитаВОбъекте
				);
			ДанныеДляЗаполнения.Вставить(СохраняемыйРеквизит.Имя, СохраняемыйОбъект[СохраняемыйРеквизит.Имя]);
		Иначе
			СохраняемыйОбъект[СохраняемыйРеквизит.Имя] = СохраняемыйРеквизит.Значение;
			ДанныеДляЗаполнения.Вставить(СохраняемыйРеквизит.Имя, СохраняемыйОбъект[СохраняемыйРеквизит.Имя]);
			Если ЗначениеЗаполнено(СохраняемыйРеквизит.РеквизитыЗаполнения) Тогда
				МассивИмен = СтрРазделить(СохраняемыйРеквизит.РеквизитыЗаполнения, ",", Ложь);
				Для Каждого ТекущееИмя Из МассивИмен Цикл
					СохраняемыйОбъект[ТекущееИмя] = СохраняемыйРеквизит.Значение;
					ДанныеДляЗаполнения.Вставить(ТекущееИмя, СохраняемыйОбъект[ТекущееИмя]);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		РаспознаваниеДокументовПереопределяемый.ПриЗаполненииНовогоЭлементаСправочника(СохраняемыйОбъект, ДанныеДляЗаполнения);
		СохраняемыйОбъект.Записать();
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Описание ошибки:'") + Символы.ПС
			+ КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщение.Сообщить();
	КонецПопытки;
	
	// Избегаем Неопределено: если Объект записан, то ссылка реальная, если нет - то в ней ПустаяСсылка
	Возврат СохраняемыйОбъект.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПриИзменении(Элемент)
	
	Отбор = Новый Структура("Имя", Элемент.Имя);
	НайденныеСтроки = РеквизитыСоздаваемогоОбъекта.НайтиСтроки(Отбор);
	Если Не НайденныеСтроки.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	СвойстваРеквизита = НайденныеСтроки[0];
	УстановитьЗначенияПараметраСписка(СвойстваРеквизита);
	
	ИзменитьОтображениеСпискаСуществующих();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияПараметраСписка(СвойстваРеквизита)
	
	Если Не ЗначениеЗаполнено(ТекстЗапросаПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	Если СвойстваРеквизита.ИскатьПодходящие Тогда
		Если ЗначениеЗаполнено(СвойстваРеквизита.Значение) Тогда
			Если СвойстваРеквизита.Имя = "Наименование" Тогда 
				ЗначениеРеквизита = СвойстваРеквизита.Значение + "%";
			Иначе
				ЗначениеРеквизита = СвойстваРеквизита.Значение;
			КонецЕсли;
			Список.Параметры.УстановитьЗначениеПараметра(СвойстваРеквизита.Имя, ЗначениеРеквизита);
		Иначе
			Если СвойстваРеквизита.Имя = "Наименование" Тогда
				Список.Параметры.УстановитьЗначениеПараметра("Наименование", Строка(УникальныйИдентификатор));
			Иначе
				Список.Параметры.УстановитьЗначениеПараметра(СвойстваРеквизита.Имя, Неопределено);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОповещениеВОсновнуюФорму(ИмяЭлемента)
	
	Отбор = Новый Структура("Имя", ИмяЭлемента);
	НайденныеСтроки = РеквизитыСоздаваемогоОбъекта.НайтиСтроки(Отбор);
	
	СвойстваРеквизита = НайденныеСтроки[0];
	Координаты = СвойстваРеквизита.Координаты.ВыгрузитьЗначения();
	
	ПараметрыОповещения = Новый Структура("Координаты, ВысотаКартинки", Координаты, СвойстваРеквизита.ВысотаКартинки);
	Оповестить("ВыбранРеквизитФормыСоздания", ПараметрыОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКонтрагентаДаннымиИзЕГРЮЛ()
	
	НовыйКонтрагент = СоздатьНовогоКонтрагента();
	Если НовыйКонтрагент <> Неопределено Тогда
		ЗначениеОповещения = Новый Структура("Ссылка, СозданВФормеБРД", НовыйКонтрагент, Истина);
		ОповеститьОВыборе(ЗначениеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьНовогоКонтрагента()
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("ИНН", ИНН);
	Реквизиты.Вставить("КПП", КПП);
	Реквизиты.Вставить("Наименование", Наименование);
	
	НовыйКонтрагент = Неопределено;
//	РаспознаваниеДокументовПереопределяемый.СоздатьКонтрагентаПоРеквизитам(Реквизиты, НовыйКонтрагент);
	
	Возврат НовыйКонтрагент;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьХэшКартинкиПоАдресу(ДвоичныеДанные)
	
	Если ДвоичныеДанные = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Хеширование = Новый ХешированиеДанных(ХешФункция.MD5);
	Хеширование.Добавить(ДвоичныеДанные);
	
	Возврат Хеширование.ХешСумма;
	
КонецФункции

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()

	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ПолноеИмяФормы = Метаданные.Документы.РаспознанныйДокумент.Формы.СозданиеЭлементаСОтображениемКартинки.ПолноеИмя();
		ХранилищеСистемныхНастроек.Удалить(ПолноеИмяФормы, "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);

КонецПроцедуры

&НаСервере
Процедура ВидПриИзмененииНаСервере()
	
	ПроверитьИННКПП(Истина, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ИННПриИзмененииНаСервере()
	
	ПроверитьИННКПП(Истина, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура КПППриИзмененииНаСервере()
	
	ПроверитьИННКПП(Ложь, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИННКПП(ПроверитьИНН, ПроверитьКПП)
	
	Если ИмяСправочника <> "Контрагенты" Тогда
		Возврат;
	КонецЕсли;
	
	НадписьПоясненияНекорректногоИНН = "";
	НадписьПоясненияНекорректногоКПП = "";
	
	ЭтоЮрЛицо = (ВидКонтрагента <> "ФизическоеЛицо");
	ОбособленноеПодразделение = (ВидКонтрагента = "ОбособленноеПодразделение");
	
//	Если ПроверитьИНН Тогда
		
//		РезультатПроверки  = ИдентификационныеНомераНалогоплательщиковКлиентСервер.ПроверитьСоответствиеТребованиямИНН(ИНН, ЭтоЮрЛицо);
//		РезультатПроверкиИНН = Новый ФорматированнаяСтрока(РезультатПроверки.ОписаниеОшибки,, ЦветаСтиля.ЦветОшибкиОтправкиБРО);
		
//	КонецЕсли;
	
//	Если ПроверитьКПП Тогда
		
//		РезультатПроверки = ИдентификационныеНомераНалогоплательщиковКлиентСервер.ПроверитьСоответствиеТребованиямКПП(КПП, ЭтоЮрЛицо, Ложь);
	//	РезультатПроверкиКПП = Новый ФорматированнаяСтрока(РезультатПроверки.ОписаниеОшибки,, ЦветаСтиля.ЦветОшибкиОтправкиБРО);
		
	//КонецЕсли;
	
	//ОбщегоНазначенияБПКлиентСервер.ОтобразитьРезультатПроверкиКонтрагентовВФорме(ЭтотОбъект);
	//Элементы.ГруппаКПП.Видимость = (ВидКонтрагента <> "ФизическоеЛицо");
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНомерСчетаБИК()
	
	Если ИмяСправочника <> "БанковскиеСчета" Тогда
		Возврат;
	КонецЕсли;
	
	НадписьПоясненияНекорректногоБИК = "";
	
	ТекстОшибки = "";
	ЯвляетсяБанкомРФ = Истина;
	
	Если ЗначениеЗаполнено(Банк) Тогда
		БИКБанк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Банк, "Код");
	Иначе 
		БИКБанк = РаспознаваниеДокументовСлужебный.ИзвлечьЦифрыИзСтроки(БанкРаспознанныйТекст);
	КонецЕсли;
	
	//Если БанковскиеСчетаФормыКлиентСервер.НомерСчетаКорректен(НомерСчета, БИКБанк, ЯвляетсяБанкомРФ, ТекстОшибки) Тогда
	//	Если Не ЗначениеЗаполнено(Банк) Тогда
	//		СоздатьБанкПоБИК(БИКБанк);
	//	КонецЕсли;
	//КонецЕсли;
	
//	НадписьПоясненияНекорректногоБИК = Новый ФорматированнаяСтрока(ТекстОшибки,, ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);
	Элементы.НадписьПоясненияНекорректногоБИК.Видимость = НЕ ПустаяСтрока(ТекстОшибки);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.ИНН.ОграничениеТипа = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(12));
	Элементы.ЕдиницаИзмерения.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения");
	Элементы.СтавкаНДС.ОграничениеТипа = Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС");
	Элементы.ВидНоменклатуры.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ВидыНоменклатуры");
	Элементы.БанковскийСчетВладелец.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	Элементы.НоменклатураРодитель.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	Элементы.Банк.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.КлассификаторБанков");
	Элементы.ВалютаДенежныхСредств.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Валюты");
	Элементы.ВидДоговора.ОграничениеТипа = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДоговоровКонтрагентов");
	Элементы.НадписьПоясненияНекорректногоИНН.Видимость = Не ПустаяСтрока(РезультатПроверкиИНН);
	Элементы.НадписьПоясненияНекорректногоКПП.Видимость = Не ПустаяСтрока(РезультатПроверкиКПП);
	Элементы.НадписьПояснениеПроверкиДублейФНС.Видимость = Не ПустаяСтрока(РезультатПроверкиНаДубли);

	Если ИмяСправочника = "Контрагенты"
		И Не ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.РаботаСКонтрагентами") Тогда
		
		Элементы.Группа1СКонтрагент.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция РеквизитыСоздаваемогоОбъекта(ПараметрыОткрытия)
	
	ДополнительныеДанные = ПараметрыОткрытия.ДополнительныеДанные;
	ДокументОбъект = ДополнительныеДанные.РаспознанныйДокумент.ПолучитьОбъект();
	
	ИмяЭлемента = ПараметрыОткрытия.ИмяЭлемента;
	Если ПараметрыОткрытия.НаборДанных <> Неопределено Тогда // НаборДанных всегда есть, т.к. они есть в Параметрах формы
		НаборДанных = ПараметрыОткрытия.НаборДанных;
	Иначе
		Если ДополнительныеДанные.ИмяТаблицы = "РеквизитыТабличныхЧастей" Тогда
			ФильтрСтроки = Новый Структура("НомерСтрокиТЧ", ДополнительныеДанные.НомерСтрокиТЧ);
			ИсходныйНабор = ДокументОбъект[ДополнительныеДанные.ИмяТаблицы].Выгрузить(ФильтрСтроки);
		Иначе
			ИсходныйНабор = ДокументОбъект[ДополнительныеДанные.ИмяТаблицы];
		КонецЕсли;
		
		НаборДанных = РаспознаваниеДокументовСлужебныйКлиентСервер.НаборДанныхСозданияЭлемента(ИсходныйНабор);
	КонецЕсли;
	ТипДокумента = ДокументОбъект.ТипДокумента;
	Направление = ДокументОбъект.Направление;
	
	СвязанныеКолонки = РаспознаваниеДокументовСлужебный.ПараметрыСозданияНовогоЭлемента(
		ИмяЭлемента,
		ТипДокумента,
		Направление);
	
	СтрокаИНН = "";
	ИндексЮридическоеФизическоеЛицоВМассивеЗначенияОткрытия = Неопределено;
	
	ЗначенияОткрытия = Новый Массив;
	Для Каждого РеквизитЭлемента Из СвязанныеКолонки Цикл
		
		ПараметрыРеквизита = Новый Структура();
		ПараметрыРеквизита.Вставить("Имя", РеквизитЭлемента.Реквизит);
		Если РеквизитЭлемента.Свойство("Синоним") Тогда
			ПараметрыРеквизита.Вставить("Синоним", РеквизитЭлемента.Синоним);
		Иначе
			ПараметрыРеквизита.Вставить("Синоним", РеквизитЭлемента.Реквизит);
		КонецЕсли;
		Если РеквизитЭлемента.Свойство("РеквизитыЗаполнения") Тогда
			ПараметрыРеквизита.Вставить("РеквизитыЗаполнения", РеквизитЭлемента.РеквизитыЗаполнения);
		Иначе
			ПараметрыРеквизита.Вставить("РеквизитыЗаполнения", "");
		КонецЕсли;
		
		ПараметрыРеквизита.Вставить("Значение", "");
		ПараметрыРеквизита.Вставить("РаспознанныйТекст", "");
		ПараметрыРеквизита.Вставить("Картинка", "");
		ПараметрыРеквизита.Вставить("ВысотаКартинки", 0);
		ПараметрыРеквизита.Вставить("Координаты", РаспознаваниеДокументовСлужебныйКлиентСервер.ПолучитьНаборКоординат());
		
		ПараметрыСвязаннойКолонки = Неопределено;
		Если РеквизитЭлемента.Свойство("ИмяРеквизита") Тогда
			
			ПараметрыСвязаннойКолонки = НаборДанных.Получить(РеквизитЭлемента.ИмяРеквизита);
			
			Если ПараметрыСвязаннойКолонки <> Неопределено Тогда
				Если СтрНачинаетсяС(РеквизитЭлемента.ИмяРеквизита, "ИННКПП") Тогда
					ПараметрыРеквизита.Значение = РаспознаваниеДокументовСлужебный.ИзвлечьИННКППИзСтроки(
						ПараметрыСвязаннойКолонки.РаспознанныйТекст,
						РеквизитЭлемента.Реквизит);
				Иначе
					ПараметрыРеквизита.Значение = ПараметрыСвязаннойКолонки.РаспознанныйТекст;
				КонецЕсли;
				ПараметрыРеквизита.РаспознанныйТекст = ПараметрыСвязаннойКолонки.РаспознанныйТекст;
				ПараметрыРеквизита.Картинка = ПолучитьДвоичныеДанныеКартинки(
					ДокументОбъект, ДополнительныеДанные.ИмяТаблицы, ПараметрыСвязаннойКолонки);
				ПараметрыРеквизита.ВысотаКартинки = ?(ПараметрыРеквизита.Картинка <> Неопределено, ПараметрыСвязаннойКолонки.СтрокВИзображении, 0);
				ПараметрыРеквизита.Координаты = ПараметрыСвязаннойКолонки.Координаты;
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.Имя = "ИНН" Тогда
			СтрокаИНН = РаспознаваниеДокументовСлужебный.ИзвлечьЦифрыИзСтроки(ПараметрыРеквизита.Значение);
		ИначеЕсли ПараметрыРеквизита.Имя = "ЮридическоеФизическоеЛицо" Тогда
			ИндексЮридическоеФизическоеЛицоВМассивеЗначенияОткрытия = ЗначенияОткрытия.Количество();
		ИначеЕсли ПараметрыРеквизита.Имя = "ТипДоговора" Тогда
			ПараметрыРеквизита.Значение = ДополнительныеДанные.ТипДоговора;
		КонецЕсли;
		
		Если РеквизитЭлемента.Свойство("ПустаяСсылка") Тогда
			Если ПараметрыСвязаннойКолонки <> Неопределено Тогда
				ПараметрыРеквизита.Вставить("Значение", ПараметрыСвязаннойКолонки.Значение);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ПараметрыРеквизита.Значение) Тогда
				ПараметрыРеквизита.Вставить("Значение", РеквизитЭлемента.ПустаяСсылка);
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыРеквизита.Вставить("ИскатьПодходящие", РеквизитЭлемента.ИскатьПодходящие);
		ПараметрыРеквизита.Вставить("Обязательный", РеквизитЭлемента.Обязательный);
		Если РеквизитЭлемента.Свойство("ПодходящиеОбязательноеРавенство") Тогда
			ПараметрыРеквизита.Вставить("ПодходящиеОбязательноеРавенство", РеквизитЭлемента.ПодходящиеОбязательноеРавенство);
		Иначе
			ПараметрыРеквизита.Вставить("ПодходящиеОбязательноеРавенство", "");
		КонецЕсли;
		
		Если РеквизитЭлемента.Свойство("ВыборГруппИЭлементов") Тогда 
			ПараметрыРеквизита.Вставить("ВыборГруппИЭлементов", РеквизитЭлемента.ВыборГруппИЭлементов);
		КонецЕсли;
		
		ЗначенияОткрытия.Добавить(ПараметрыРеквизита);
	КонецЦикла;
	
	Если ИндексЮридическоеФизическоеЛицоВМассивеЗначенияОткрытия <> Неопределено Тогда
		ЮридическоеФизическоеЛицо = РаспознаваниеДокументовСлужебныйКлиентСервер.ОпределитьЮридическоеФизическоеЛицо(СтрокаИНН);
		
		Если ЗначениеЗаполнено(ЮридическоеФизическоеЛицо) Тогда
			ЗначенияОткрытия[ИндексЮридическоеФизическоеЛицоВМассивеЗначенияОткрытия].Значение = ЮридическоеФизическоеЛицо;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначенияОткрытия;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДвоичныеДанныеКартинки(ДокументОбъект, ИмяТаблицы, ПараметрыСвязаннойКолонки)
	
	Если РаспознаваниеДокументовКлиентСервер.ВсеКоординатыНулевые(ПараметрыСвязаннойКолонки.Координаты) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ПараметрыСвязаннойКолонки.НомерСтроки < 1
		Или ПараметрыСвязаннойКолонки.НомерСтроки > ДокументОбъект[ИмяТаблицы].Количество() Тогда
		
		Возврат Неопределено;
	КонецЕсли;
	
	ДвоичныеДанные = ДокументОбъект[ИмяТаблицы].Получить(ПараметрыСвязаннойКолонки.НомерСтроки - 1).ОбластьИзображения.Получить();
	Если ДвоичныеДанные = Неопределено Или ДвоичныеДанные.Размер() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат ДвоичныеДанные;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыСоздаваемогоОбъекта(ЗначенияОткрытия)
	
	Для Каждого ПереданныйРеквизит Из ЗначенияОткрытия Цикл
		
		ДанныеРеквизита = РеквизитыСоздаваемогоОбъекта.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеРеквизита, ПереданныйРеквизит, , "Координаты");
		ДанныеРеквизита.Координаты.ЗагрузитьЗначения(ПереданныйРеквизит.Координаты);
		Если ТипЗнч(ПереданныйРеквизит.Значение) = Тип("Строка") Тогда
			ДанныеРеквизита.Значение = СокрЛП(ПереданныйРеквизит.Значение);
		Иначе
			ДанныеРеквизита.Значение = ПереданныйРеквизит.Значение;
		КонецЕсли;
		Если НЕ ДанныеРеквизита.ВысотаКартинки И НЕ ЗначениеЗаполнено(ДанныеРеквизита.Значение) Тогда
			ДанныеРеквизита.ИскатьПодходящие = Ложь;
		КонецЕсли;
		
		// Дубли картинок
		Если ДанныеРеквизита.ВысотаКартинки Тогда
			ХэшКартинки = ПолучитьХэшКартинкиПоАдресу(ДанныеРеквизита.Картинка);
			
			Отбор = Новый Структура("ХэшКартинки", ХэшКартинки);
			Если РеквизитыСоздаваемогоОбъекта.НайтиСтроки(Отбор).Количество()
				Или ХэшКартинки = Неопределено Тогда
				
				ДанныеРеквизита.ВысотаКартинки = 0;
			КонецЕсли;
			
			ДанныеРеквизита.ХэшКартинки = ХэшКартинки;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
