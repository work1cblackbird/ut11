
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Сценарий, ВидПлана, План, Номенклатура, Характеристика, Назначение, Период");
	
	Параметры.Свойство("СоздаватьМенятьКорректировку", СоздаватьМенятьКорректировку);
	
	Если ЗначениеЗаполнено(Корректировка) Тогда
		
		ТабличнаяЧастьУменьшениеПотребностей = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Корректировка, "УменьшениеПотребностей");
		ККорректировке = ТабличнаяЧастьУменьшениеПотребностей[0].Количество;
		
		ТабличнаяЧастьУвеличениеПотребностей = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Корректировка, "УвеличениеПотребностей");
		Если ТабличнаяЧастьУвеличениеПотребностей.Количество() > 0 Тогда
			ККорректировкеКорректировка = ТабличнаяЧастьУвеличениеПотребностей[0].Количество;
			НоменклатураКорректировка = ТабличнаяЧастьУвеличениеПотребностей[0].Номенклатура;
			Остаток = 200;
		КонецЕсли;
		
		Элементы.НоменклатураКорректировка.Доступность = Ложь;
		Элементы.ХарактеристикаКорректировка.Доступность = Ложь;
		Элементы.НазначениеКорректировка.Доступность = Ложь;
		
	КонецЕсли;
	
	//Рассчитать потребность и остаток
	Потребность= 900;
	
	КОбеспечению = Потребность - ККорректировке;
	КОбеспечениюКорректировка = ККорректировкеКорректировка - Остаток;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СкорректироватьПотребность(Команда)
	
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураКорректировки = Новый Структура();
	СтруктураКорректировки.Вставить("План", План);
	СтруктураКорректировки.Вставить("Сценарий", Сценарий);
	СтруктураКорректировки.Вставить("ВидПлана", ВидПлана);
	СтруктураКорректировки.Вставить("Период", Период);
	СтруктураКорректировки.Вставить("Номенклатура", Номенклатура);
	СтруктураКорректировки.Вставить("Характеристика", Характеристика);
	СтруктураКорректировки.Вставить("Назначение", Назначение);
	СтруктураКорректировки.Вставить("НоменклатураКорректировка", НоменклатураКорректировка);
	СтруктураКорректировки.Вставить("ХарактеристикаКорректировка", ХарактеристикаКорректировка);
	СтруктураКорректировки.Вставить("НазначениеКорректировка", НазначениеКорректировка);
	СтруктураКорректировки.Вставить("ККорректировке", ККорректировке);
	СтруктураКорректировки.Вставить("Потребность", Потребность);
	СтруктураКорректировки.Вставить("ККорректировкеКорректировка", ККорректировкеКорректировка);
	СтруктураКорректировки.Вставить("КОбеспечению", КОбеспечению);
	СтруктураКорректировки.Вставить("КОбеспечениюКорректировка", КОбеспечениюКорректировка);
	
	Если СоздаватьМенятьКорректировку Тогда
		Если ЗначениеЗаполнено(Корректировка) Тогда
			ИзменитьКорректировку(СтруктураКорректировки);
		Иначе
			Корректировка = СоздатьКорректировку(СтруктураКорректировки);
		
			Если Корректировка = Неопределено Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураКорректировки.Вставить("Корректировка", Корректировка);
	Закрыть(СтруктураКорректировки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИзменитьКорректировку(ДанныеЗаполнения)
	
	ДокументОбъект = Корректировка.ПолучитьОбъект();
	ДокументОбъект.УвеличениеПотребностей.Очистить();
	ДокументОбъект.УменьшениеПотребностей.Очистить();
	ДокументОбъект.Заполнить(ДанныеЗаполнения);
	
	Ошибка = Не ДокументОбъект.ПроверитьЗаполнение();
	
	Если Не Ошибка Тогда
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьКорректировку(ДанныеЗаполнения)
	
	ДокументОбъект = Документы.КорректировкаПлановыхПотребностей.СоздатьДокумент();
	ДокументОбъект.Заполнить(ДанныеЗаполнения);
	
	Ошибка = Не ДокументОбъект.ПроверитьЗаполнение();
	
	Если Не Ошибка Тогда
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Возврат ДокументОбъект.Ссылка
		
	КонецЕсли;
			
	Возврат Неопределено
КонецФункции

&НаКлиенте
Процедура КЗаменеПриИзменении(Элемент)
	КОбеспечению = Потребность - ККорректировке;
КонецПроцедуры

&НаКлиенте
Процедура ОбеспечитьПриИзменении(Элемент)
	ККорректировке = Потребность - КОбеспечению;
КонецПроцедуры

&НаКлиенте
Процедура ККорректировкеКорректировкаПриИзменении(Элемент)
	КОбеспечениюКорректировка = ККорректировкеКорректировка - Остаток;
КонецПроцедуры

&НаКлиенте
Процедура КОбеспечениюКорректировкаПриИзменении(Элемент)
	ККорректировкеКорректировка = Остаток - КОбеспечениюКорректировка;
КонецПроцедуры

&НаКлиенте
Процедура Перенести(Команда)
	ККорректировкеКорректировка = ККорректировкеКорректировка + ККорректировке;
	КОбеспечениюКорректировка = КОбеспечениюКорректировка - ККорректировке;
	
	КОбеспечению = КОбеспечению + ККорректировке;
	ККорректировке = 0;
КонецПроцедуры

#КонецОбласти