&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	                                                           
	ОбменСГИСЭПД.ПриСозданииНаСервереПодчиненнойФормы(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	//ЭтотОбъект.ОписаниеРеквизитовФормы = ОписаниеРеквизитовФормыСервер();
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеТитулГрузоотправителяАдресПогрузки", ЭтотОбъект);
	
	КонтрагентОписаниеТипов = Метаданные.ОпределяемыеТипы.КонтрагентБЭД.Тип;
		
	Если Параметры.Свойство("ФормаБезОбработки") = Ложь И ЭтотОбъект.ЗапретитьИзменение = Ложь Тогда
		Элементы.СсылкаТитулГрузоотправителяЛицоОсуществляющееПогрузку.ОграничениеТипа = КонтрагентОписаниеТипов;
		
		ТекущаяДата = ТекущаяДатаСеанса();
		Если ЗначениеЗаполнено(ТитулГрузоотправителяЗаявленныеДатаВремяПодачи) = Ложь Тогда
			ТитулГрузоотправителяЗаявленныеДатаВремяПодачи = ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриИзменении(ТекущаяДата);	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТитулГрузоотправителяФактическиеДатаВремяПодачи) = Ложь Тогда
			ТитулГрузоотправителяФактическиеДатаВремяПодачи = ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриИзменении(ТекущаяДата);	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТитулГрузоотправителяФактическиеДатаВремяУбытия) = Ложь Тогда
			ТитулГрузоотправителяФактическиеДатаВремяУбытия = ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриИзменении(ТекущаяДата);	
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					СсылкаТитулГрузоотправителяГрузоотправитель,
					Элементы.ПредставлениеТитулГрузоотправителяАдресПогрузки,
					Элементы.ПредставлениеТитулГрузоотправителяАдресПогрузки.СписокВыбора, Истина);
		
		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить(Элементы.СсылкаТитулГрузоотправителяЛицоОсуществляющееПогрузку);
		ОбменСГИСЭПДКлиентСервер.ПоказатьОшибкиПоКонтрагентам(ЭтотОбъект, МассивЭлементов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяЗаявленныеДатаВремяПодачиРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ТитулГрузоотправителяЗаявленныеДатаВремяПодачи, Направление, СтандартнаяОбработка);	

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяФактическиеДатаВремяПодачиРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ТитулГрузоотправителяФактическиеДатаВремяПодачи, Направление, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяФактическиеДатаВремяУбытияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ТитулГрузоотправителяФактическиеДатаВремяУбытия, Направление, СтандартнаяОбработка);
	
КонецПроцедуры




&НаКлиенте
Процедура ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителемПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	ИзменитьОформлениеКнопок(Новый ФиксированнаяСтруктура("ИмяКнопки, ИдентификаторСтроки"));
	
КонецПроцедуры


&НаКлиенте
Процедура Сохранить(Команда)
		
	ОбменСГИСЭПДКлиент.СохранитьПараметрыПодчиненнойФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбменСГИСЭПДКлиент.ПриОткрытииПодчиненнойФормы(ЭтотОбъект);
																		
КонецПроцедуры
			
&НаКлиенте
Функция ОписаниеРеквизитовФормы() Экспорт
	
	Возврат ОписаниеРеквизитовФормыСервер();
	
КонецФункции

&НаСервере
Функция ОписаниеРеквизитовФормыСервер()
	
	Возврат ОбменСГИСЭПД.ОписаниеРеквизитовФормы(ЭтаФорма);
		
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяОснованиеОсуществленияПогрузки(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяРаботникНаПогрузке(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяВладелецПунктаПогрузки(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяОснованиеДоступаКПунктуПогрузки(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры




&НаКлиенте
Процедура ПредставлениеТитулГОАдресПогрузкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Элементы.ПредставлениеТитулГрузоотправителяАдресПогрузки.СписокВыбора.Очистить();
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					СсылкаТитулГрузоотправителяГрузоотправитель,
					Элементы.ПредставлениеТитулГрузоотправителяАдресПогрузки,
					ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулГОАдресПогрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВводАдреса(Элемент.Имя, ЭтотОбъект, СсылкаТитулГрузоотправителяГрузоотправитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулГОАдресПогрузкиОбработкаВыбора(Элемент, Результат, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(ЭтотОбъект, Результат, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулГрузоотправителяЛицоОсуществляющееПогрузкуПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулГОАдресПогрузкиПриИзменении(Элемент)
	
	Если ПустаяСтрока(ПредставлениеТитулГрузоотправителяАдресПогрузки) Тогда
		Элементы.ПредставлениеТитулГрузоотправителяАдресПогрузки_Ошибка.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтметитьОбязательныеНеЗаполненныеЭлементыФормы" Тогда
		Если УникальныйИдентификатор <> Параметр Тогда
			Возврат;
		КонецЕсли;
		ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(Параметр);
	ИначеЕсли ИмяСобытия = "ИзменитьОформлениеКнопокФормы" Тогда
		Если УникальныйИдентификатор <> Параметр.УникальныйИдентификаторОбновляемойФормы Тогда
			Возврат;
		КонецЕсли;
		ИзменитьОформлениеКнопок(Параметр);	 
	КонецЕсли;
	
КонецПроцедуры

#Область ОбъектыОбязательныеДляЗаполнения

&НаКлиенте
Процедура ИзменитьОформлениеКнопок(Параметр) Экспорт
	
	Если Не ЭтотОбъект.НачальноеОформлениеВыполнено Тогда
		ЭтотОбъект.ТребуетсяДополнительноеОформлениеКнопок = Истина;
		Если ЭтотОбъект.СтруктураДополнительногоОформленияКнопок <> Неопределено Тогда
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = 
				Новый Структура("ИмяКнопки, ИдентификаторСтроки");
		Иначе
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = Параметр;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	СтруктураСТекущимиДанными = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	СтруктураДанныхОбъекта = ОбменСГИСЭПДКлиентСервер.ПолучитьСериализуемыйОбъектСДаннымиДокумента(ЭтотОбъект);
	СтруктураСДаннымиФормыДляОформленияКнопок = ОбменСГИСЭПДКлиентСервер.СтруктураСДаннымиФормыДляОформленияКнопок(ЭтотОбъект);
	
	Результат = ИзменитьОформлениеКнопокНаСервере(СтруктураСТекущимиДанными,
		Параметр.ИмяКнопки,
		Параметр.ИдентификаторСтроки,
		СтруктураДанныхОбъекта,
		СтруктураСДаннымиФормыДляОформленияКнопок);
		
	Если Результат.Успешно Тогда
		ЭтотОбъект.АдресДереваСоответствийИтаблицыКнопок = Результат.НовыйАдресВХранилище;	
		МассивОформления = Результат.МассивОформления;
		ОбменСГИСЭПДКлиентСервер.ОформлениеКнопокНаФорме(ЭтотОбъект, СтруктураСТекущимиДанными, МассивОформления);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзменитьОформлениеКнопокНаСервере(Знач СтруктураСТекущимиДанными,
	ИмяКнопки = Неопределено,
	ИдентификаторСтроки = Неопределено,
	Знач СтруктураДанныхОбъекта,
	Знач СтруктураСДаннымиФормыДляОформленияКнопок)
	
	Результат = Новый Структура("Успешно, НовыйАдресВХранилище, МассивОформления", Ложь, Неопределено, Неопределено);
	
	НовыйАдресВХранилище = ОбменСГИСЭПД.ЗапуститьИзменениеОформленияКнопок(СтруктураСДаннымиФормыДляОформленияКнопок,
		СтруктураСТекущимиДанными, ИмяКнопки, ИдентификаторСтроки, СтруктураДанныхОбъекта);
		
	СтруктураДанных = ПолучитьИзВременногоХранилища(НовыйАдресВХранилище);
	Если СтруктураДанных = Неопределено Тогда
		Возврат Результат;	
	Иначе
		Результат.Успешно = Истина;
		Результат.НовыйАдресВХранилище = НовыйАдресВХранилище;
		Результат.МассивОформления = СтруктураДанных.МассивОформления;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


&НаКлиенте
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(УникальныйИдентификаторОбновляемойФормы)
	
	ЭтотОбъект.НачальноеОформлениеВыполнено = Истина;
	
	СтруктураСТекущимиДанными = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(СтруктураСТекущимиДанными);
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(Знач СтруктураСТекущимиДанными)
	
	ОбменСГИСЭПД.ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(ЭтотОбъект, СтруктураСТекущимиДанными);
	
КонецПроцедуры

#КонецОбласти