&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ЗначениеКопирования.Пустая() = Ложь 
		И Параметры.ЗначениеКопирования.ЭтоВходящий = Истина Тогда
        Отказ = Истина; 
        СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ФормаБезОбработки") Тогда
		
		// СтандартныеПодсистемы.ПодключаемыеКоманды
		ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
		ОбменСГИСЭПД.ПриСозданииНаСервереПодчиненнойФормы(ЭтотОбъект, Отказ, СтандартнаяОбработка);
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			ОбменСГИСЭПД.ЗаполнитьТаблицуВерсийТитулов(Объект.Ссылка, Объект.Организация, ВерсииТитулов);
			ОбменСГИСЭПД.ЗаполнитьТаблицуЗначенийРеквизитов(Объект.Ссылка, Объект.Организация, СтруктураРеквизитов);
		Иначе
			ОбменСГИСЭПД.ЗаполнитьТаблицуЗначенийРеквизитовПоПараметрамФормы(Параметры, СтруктураРеквизитов);	
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
		
		ОрганизацияОписаниеТипов = Метаданные.ОпределяемыеТипы.Организация.Тип;
		КонтрагентОписаниеТипов = Метаданные.ОпределяемыеТипы.КонтрагентБЭД.Тип;
		Если Объект.ЭтоВходящий = Ложь Тогда	
			Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяСоставитель) Тогда
				ВариантПоДоверенности = 1;
				Элементы.СсылкаТитулГрузоотправителяГрузоотправитель.ОграничениеТипа = КонтрагентОписаниеТипов;
				Элементы.СсылкаТитулГрузоотправителяСоставитель.ОграничениеТипа = ОрганизацияОписаниеТипов;
			Иначе
				Элементы.СсылкаТитулГрузоотправителяГрузоотправитель.ОграничениеТипа = ОрганизацияОписаниеТипов;
				Объект.СсылкаТитулГрузоотправителяГрузоотправитель = 
					ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
					"СсылкаТитулГрузоотправителяГрузоотправитель");	
				Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяГрузоотправитель) = Ложь Тогда
					Объект.СсылкаТитулГрузоотправителяГрузоотправитель = ИнтеграцияЭДО.ОрганизацияПоУмолчанию();
					ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элементы.СсылкаТитулГрузоотправителяГрузоотправитель, ЭтотОбъект);
					ЗаполнитьСведенияОПереадресовке();
				КонецЕсли;
			КонецЕсли;		
			Элементы.СсылкаТитулГрузоотправителяЗаказчик.ОграничениеТипа = КонтрагентОписаниеТипов;
			Элементы.СсылкаТитулГрузоотправителяГрузополучатель.ОграничениеТипа = КонтрагентОписаниеТипов;
			Элементы.СсылкаТитулГрузоотправителяПеревозчик.ОграничениеТипа = КонтрагентОписаниеТипов;			
			
			Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1") Тогда
				ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
					"ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство");
				Если ЗначениеЗаполнено(ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство) = Ложь Тогда
					Элементы.ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
				КонецЕсли;
			КонецЕсли;
			
			МассивЭлементов = Новый Массив;
			МассивЭлементов.Добавить(Элементы.СсылкаТитулГрузоотправителяЗаказчик);
			МассивЭлементов.Добавить(Элементы.СсылкаТитулГрузоотправителяГрузоотправитель);
			Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяСоставитель) Тогда
				МассивЭлементов.Добавить(Элементы.СсылкаТитулГрузоотправителяСоставитель);
			КонецЕсли;
			МассивЭлементов.Добавить(Элементы.СсылкаТитулГрузоотправителяГрузополучатель);
			МассивЭлементов.Добавить(Элементы.СсылкаТитулГрузоотправителяПеревозчик);
			МассивЭлементов.Добавить(Элементы.СсылкаТитулПереадресовкаНовыйГрузополучатель);
			МассивЭлементов.Добавить(Элементы.СсылкаДопТитулПереадресовкаНовыйГрузополучатель);
			ОбменСГИСЭПДКлиентСервер.ПоказатьОшибкиПоКонтрагентам(ЭтотОбъект, МассивЭлементов);
			
			Элементы.ГруппаРеквизитаТитулГрузоотправителяТранспортнаяНакладнаяНомер.Видимость = Ложь;
			Элементы.ЗаголовокНомер.Заголовок = "Номер";
		Иначе
			Элементы.ГруппаРеквизитаНомер.Видимость = Ложь;
		КонецЕсли;
		
		ЦветВыделенияУчастника = ЦветаСтиля.ЦветВыделенияУчастникаЭПД;
		Если Объект.РольУчастника = 1 Тогда
			Элементы.СсылкаТитулПереадресовкаНовыйГрузополучатель.ОграничениеТипа = КонтрагентОписаниеТипов;
			Элементы.СсылкаДопТитулПереадресовкаНовыйГрузополучатель.ОграничениеТипа = КонтрагентОписаниеТипов;
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяПеревозчик.ЦветФона = ЦветВыделенияУчастника;
			Элементы.СсылкаТитулПеревозчикаФХЖВалютаСтоимости.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Валюты");
		ИначеЕсли Объект.РольУчастника = 2
			И Объект.Организация = Объект.СсылкаТитулГрузоотправителяГрузополучатель Тогда
				Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяГрузополучатель.ЦветФона = ЦветВыделенияУчастника;
		ИначеЕсли Объект.РольУчастника = 3 Тогда
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяГрузоотправитель.ЦветФона = ЦветВыделенияУчастника;
			Элементы.СсылкаТитулГрузоотправителяФХЖБанковскиеРеквизиты.ОграничениеТипа = 
				Новый ОписаниеТипов(ОбменСГИСЭПДПереопределяемый.ИмяТипаБанковскиеСчетаОрганизации());
		КонецЕсли;
		
		Если Объект.Организация = Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель Тогда
			Элементы.ГруппаРеквизитаСсылкаТитулПереадресовкаНовыйГрузополучатель.ЦветФона = ЦветВыделенияУчастника;
		ИначеЕсли Объект.Организация = Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель Тогда 
			Элементы.ГруппаРеквизитаСсылкаДопТитулПереадресовкаНовыйГрузополучатель.ЦветФона = ЦветВыделенияУчастника;	
		КонецЕсли;
		
		ИзмененСоставУчастников = ЗначениеЗаполнено(Объект.ИдентификаторГрузоотправителя) = Ложь
									Или ЗначениеЗаполнено(Объект.ИдентификаторГрузополучателя) = Ложь
									Или ЗначениеЗаполнено(Объект.ИдентификаторПеревозчика) = Ложь
									Или ТекущийГрузополучатель(Объект) <> Объект.СсылкаТитулГрузоотправителяГрузополучатель;
									
		Если (ЗначениеЗаполнено(Объект.ИдентификаторГрузополучателя) 
				И Объект.ИдентификаторГрузоотправителя = Объект.ИдентификаторГрузополучателя)
			Или (ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяГрузополучатель) 
				И Объект.СсылкаТитулГрузоотправителяГрузополучатель = Объект.СсылкаТитулГрузоотправителяГрузоотправитель) Тогда
			ГрузоотправительЯвляетсяГрузополучателем = Истина;	
			Элементы.СсылкаТитулГрузоотправителяГрузополучатель.Доступность = Ложь;
			Элементы.СсылкаТитулГрузоотправителяГрузополучатель.ОграничениеТипа = Элементы.СсылкаТитулГрузоотправителяГрузоотправитель.ОграничениеТипа;	
		КонецЕсли;
		
		Элементы.КартинкаОпасныйГруз.Видимость = 
			ОбменСГИСЭПДКлиентСервер.ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(ЭтотОбъект, "ТитулГрузоотправителяСведенияОбОпасныхГрузах") > 0;
									
		ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();	
		УстановитьТекущийШагПомощника();
		
		ОтображениеОтправкиQR();
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура ОтображениеОтправкиQR(УстановитьФлагЕслиНужно = Ложь)
	
	Если Объект.РольУчастника = 3 Тогда
		ОшибкаОтправкиQR = ОшибкаОтправкиQR(УстановитьФлагЕслиНужно);
		Если ЗначениеЗаполнено(ОшибкаОтправкиQR) Тогда
			Элементы.ТитулГрузоотправителяВодители_Ошибка.Заголовок = ОшибкаОтправкиQR;
			Элементы.ТитулГрузоотправителяВодители_Ошибка.Видимость = Истина;
		Иначе
			Элементы.ТитулГрузоотправителяВодители_Ошибка.Видимость = Ложь;
		КонецЕсли; 
	Иначе
		Элементы.ТитулГрузоотправителяВодители_Ошибка.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяВодители_ОшибкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "Водитель" Тогда
		МассивПереходов = Новый Массив;
		МассивПереходов.Добавить("ЗаполнитьТитулГрузоотправителяВодители");
		МассивПереходов.Добавить("ТитулГрузоотправителяВодители");
		МассивПереходов.Добавить(0);
		МассивПереходов.Добавить("ХранимыеДанныеВодитель");
		МассивПереходов.Добавить("Почта");
		ЭтотОбъект.ПереходыПоОшибкам = Новый ФиксированныйМассив(МассивПереходов);
		ОбменСГИСЭПДКлиент.ПоказатьОшибкуЗаполнения(ЭтотОбъект);	
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "Водители" Тогда
		МассивПереходов = Новый Массив;
		МассивПереходов.Добавить("ЗаполнитьТитулГрузоотправителяВодители");
		МассивПереходов.Добавить("ТитулГрузоотправителяВодители");
		ЭтотОбъект.ПереходыПоОшибкам = Новый ФиксированныйМассив(МассивПереходов);
		ОбменСГИСЭПДКлиент.ПоказатьОшибкуЗаполнения(ЭтотОбъект);	
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "УчетнаяЗаписьПочты" Тогда
		СистемнаяУчетнаяЗаписьПочты = СистемнаяУчетнаяЗаписьПочты();
		Если ЗначениеЗаполнено(СистемнаяУчетнаяЗаписьПочты) Тогда
			ПараметрыФормы = Новый Структура("Ключ", СистемнаяУчетнаяЗаписьПочты);
			ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаОбъекта", ПараметрыФормы);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СистемнаяУчетнаяЗаписьПочты()

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениями = ОбщегоНазначения.ОбщийМодуль("РаботаСПочтовымиСообщениями");
		Если МодульРаботаСПочтовымиСообщениями.ПроверитьСистемнаяУчетнаяЗаписьДоступна() Тогда	
			Возврат МодульРаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
		КонецЕсли;
	КонецЕсли;	
	
	Возврат Неопределено;
		
КонецФункции


&НаСервере
Функция ОшибкаОтправкиQR(УстановитьФлагЕслиНужно = Ложь)
		
	ОтправлятьQR = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
						"ТитулГрузоотправителяОтправлятьQR");
												
	Если УстановитьФлагЕслиНужно = Ложь 
		И ОтправлятьQR <> Истина Тогда
		Возврат "";
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениями = ОбщегоНазначения.ОбщийМодуль("РаботаСПочтовымиСообщениями");
		Если МодульРаботаСПочтовымиСообщениями.ПроверитьСистемнаяУчетнаяЗаписьДоступна() Тогда
			СистемнаяУчетнаяЗапись = МодульРаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
			Если МодульРаботаСПочтовымиСообщениями.УчетнаяЗаписьНастроена(СистемнаяУчетнаяЗапись, Истина) <> Истина Тогда	
				ОшибкаПодключения = Истина;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Возврат "";
	КонецЕсли;
	
	МассивВодителей = ОбменСГИСЭПДКлиентСервер.МассивЗначенийПоСтрокамТаблицыИзСтруктурыФормы(ЭтотОбъект, 
							"ТитулГрузоотправителяВодители", "ХранимыеДанныеВодитель");
							
	Если МассивВодителей.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
							
	Получатели = ОбменСГИСЭПДВызовСервера.ПолучитьПочтуВодителей(МассивВодителей);
	
	МассивСтрок = Новый Массив;
	
	Если Получатели.Количество() = 0 Тогда
		МассивСтрок.Добавить("Для автоматической отправки QR-кода нужно ");
		Если МассивВодителей.Количество() > 1 Тогда
			ТекстВодители = "водителей";
			СсылкаВодители = "Водители";
		Иначе
			ТекстВодители = "водителя";	
			СсылкаВодители = "Водитель";
		КонецЕсли;
		МассивСтрок.Добавить("указать почту ");
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ТекстВодители, , , , СсылкаВодители));
	ИначеЕсли УстановитьФлагЕслиНужно = Истина
	 	И ОтправлятьQR = Ложь Тогда
	 	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулГрузоотправителяОтправлятьQR");
	КонецЕсли;
									
	Если ОшибкаПодключения = Истина Тогда
		Если МассивСтрок.Количество() = 0 Тогда
			МассивСтрок.Добавить("Для автоматической отправки QR-кода нужно ");	
		Иначе
			МассивСтрок.Добавить(" и ");		
		КонецЕсли;
		МассивСтрок.Добавить("настроить служебную ");
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("учетную запись почты", , , , "УчетнаяЗаписьПочты"));
	КонецЕсли;
	
	СтрокаОшибки = Новый ФорматированнаяСтрока(МассивСтрок);
	
	Возврат СтрокаОшибки;
	
КонецФункции

&НаКлиенте
Процедура ОтправитьQR(Команда)
	
	ЧастичнаяРазгрузкаОткрыта = Ложь;
	Если ЗначениеЗаполнено(Объект.ДопТитулПереадресовкаИдентификаторФайла) Тогда
		КоличествоПереадресовок = 0;
		КоличествоПриемок = 0;
		Для Каждого СтрокаВерсии Из ВерсииТитулов Цикл
			Если СтрокаВерсии.Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7") Тогда
				КоличествоПереадресовок = КоличествоПереадресовок + 1;	
			ИначеЕсли СтрокаВерсии.Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3") Тогда
				КоличествоПриемок = КоличествоПриемок + 1;
			КонецЕсли;
		КонецЦикла;	
		ЧастичнаяРазгрузкаОткрыта = КоличествоПереадресовок > КоличествоПриемок;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТитулГрузополучателяИдентификаторФайла)
		И ЧастичнаяРазгрузкаОткрыта = Ложь Тогда
		ПоказатьПредупреждение(, НСтр("ru='Приемка груза уже совершена, QR-код можно получить только по незавершенной перевозке.'"));
	Иначе
		Если Объект.РольУчастника = 1 Тогда
			Отправитель = Объект.ИдентификаторПеревозчика;
		ИначеЕсли Объект.РольУчастника = 2 Тогда
			Отправитель = Объект.ИдентификаторГрузополучателя;
		ИначеЕсли Объект.РольУчастника = 3 Тогда
			Отправитель = Объект.ИдентификаторГрузоотправителя;	
		КонецЕсли;
		ПараметрыФормы = Новый Структура;	
		ПараметрыФормы.Вставить("УИДМинтранс", Объект.УИДМинтранс);
		ПараметрыФормы.Вставить("Отправитель", Отправитель);
		ПараметрыФормы.Вставить("НомерДокумента", Объект.ТитулГрузоотправителяТранспортнаяНакладнаяНомер);
		ПараметрыФормы.Вставить("ДатаДокумента", Объект.ТитулГрузоотправителяТранспортнаяНакладнаяДата); 
		ПараметрыФормы.Вставить("ТипДокумента", ПредопределенноеЗначение("Перечисление.ТипыДокументовЭДО.ЭТрН"));
		
		МассивВодителей = ОбменСГИСЭПДКлиентСервер.МассивЗначенийПоСтрокамТаблицыИзСтруктурыФормы(ЭтотОбъект, 
							"ТитулГрузоотправителяВодители", "ХранимыеДанныеВодитель");
							
		ПараметрыФормы.Вставить("Получатели", ОбменСГИСЭПДВызовСервера.ПолучитьПочтуВодителей(МассивВодителей));
		
		ОткрытьФорму("ОбщаяФорма.ОтправкаQR", 
						ПараметрыФормы, 
						ЭтотОбъект, 
						УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВариантПоДоверенностиПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
	ВариантПоДоверенностиПриИзмененииСервер();

КонецПроцедуры


&НаСервере
Процедура ВариантПоДоверенностиПриИзмененииСервер()
	
	ОрганизацияОписаниеТипов = Метаданные.ОпределяемыеТипы.Организация.Тип;
	КонтрагентОписаниеТипов = Метаданные.ОпределяемыеТипы.КонтрагентБЭД.Тип;
	Если Объект.ЭтоВходящий = Ложь Тогда	
		Если ВариантПоДоверенности = 1 Тогда
			Элементы.СсылкаТитулГрузоотправителяГрузоотправитель.ОграничениеТипа = КонтрагентОписаниеТипов;
			Элементы.СсылкаТитулГрузоотправителяСоставитель.ОграничениеТипа = ОрганизацияОписаниеТипов;
		Иначе
			Элементы.СсылкаТитулГрузоотправителяГрузоотправитель.ОграничениеТипа = ОрганизацияОписаниеТипов;
			Элементы.СсылкаТитулГрузоотправителяСоставитель.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");	
			Объект.СсылкаТитулГрузоотправителяСоставитель = Неопределено;
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулГрузоотправителяПредставительГрузоотправителя");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Проверить(Команда)
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) = Ложь Тогда
		Возврат;	
	КонецЕсли;
	
	ЗаполнитьУчастников();
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя());
		
КонецПроцедуры


&НаКлиенте
Процедура НадписьОшибкиЗакрытьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ЗакрытьОшибки" Тогда
		СтандартнаяОбработка = Ложь;
		Элементы.ГруппаОшибки.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СледующаяОшибка(Команда)
	
	ОбменСГИСЭПДКлиент.НавигацияПоОшибкамЗаполнения(ЭтотОбъект, 
													ОшибкиЗаполнения, 
													Элементы.ОшибкиЗаполнения.ТекущаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ПредыдущаяОшибка(Команда)
	
	ОбменСГИСЭПДКлиент.НавигацияПоОшибкамЗаполнения(ЭтотОбъект, 
													ОшибкиЗаполнения, 
													Элементы.ОшибкиЗаполнения.ТекущаяСтрока,
													Истина);
	
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ЗаписьИзФормы", Истина);
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ТекущийТитул) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	Если ИнформацияПоПрефиксамТитула.ВПрограмме = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	КонтейнерОтображаемойВерсии = Неопределено;
	
	ОбменСГИСЭПД.ЗаполнитьДополнительныеРеквизитыФормы(ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме, КонтейнерОтображаемойВерсии);
	
	НомерВерсии = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
		ИнформацияПоПрефиксамТитула.ВПрограмме + "НомерИсправления", Неопределено, КонтейнерОтображаемойВерсии);
		
	Если НомерВерсии = Неопределено Тогда
		НомерВерсии = КонтейнерОтображаемойВерсии.НомерВерсии;	
	КонецЕсли;		
	
	Если ПараметрыЗаписи.Свойство("НеДобавлятьВерсию") = Ложь Тогда
		// Запишем версию при необходимости
		ТекущийОбъект.ДополнительныеСвойства.Вставить("НомерВерсии", НомерВерсии);
		
		ИдентификаторФайлаВерсии = Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла"];
		
		ДатаВерсии = Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ДатаФормированияФайла"]
						+ 60 * 60 * Час(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла"]) 
						+ 60 * Минута(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла"]) 
						+ Секунда(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла"]);
		
		ЭтоНоваяВерсия = Истина;
		Для Каждого СтрокаВерсии Из ВерсииТитулов Цикл
			Если СтрокаВерсии.Титул = ТекущийОбъект.ТекущийТитул 
			И СтрокаВерсии.НомерВерсии = НомерВерсии Тогда
				СтрокаВерсии.ИдентификаторФайла = ИдентификаторФайлаВерсии;	
				ЭтоНоваяВерсия = Ложь;
			КонецЕсли;	
		КонецЦикла;
	
		Если ЭтоНоваяВерсия = Истина Тогда
			НовСтрокаВерсии = ВерсииТитулов.Добавить();
			НовСтрокаВерсии.ДатаВерсии = ДатаВерсии;
			Если НовСтрокаВерсии.ДатаВерсии = Дата(1,1,1) Тогда
				НовСтрокаВерсии.ДатаВерсии = ТекущаяДатаСеанса();
			КонецЕсли;
			НовСтрокаВерсии.ИдентификаторФайла = ИдентификаторФайлаВерсии;
			НовСтрокаВерсии.НомерВерсии = НомерВерсии;
			НовСтрокаВерсии.Титул = ТекущийОбъект.ТекущийТитул;		
		КонецЕсли;
			
		ВерсияТитула = Новый Структура;
		ВерсияТитула.Вставить("НомерВерсии", НомерВерсии);
		ВерсияТитула.Вставить("ИдентификаторФайла", ИдентификаторФайлаВерсии);
		ВерсияТитула.Вставить("Титул", ТекущийОбъект.ТекущийТитул);
		ВерсияТитула.Вставить("ДатаВерсии", ДатаВерсии);
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ВерсияТитула", ВерсияТитула);
	КонецЕсли;
	
	МассивВерсийТитула = Неопределено;
	СтруктураРеквизитов.Свойство(ИнформацияПоПрефиксамТитула.ВПрограмме, МассивВерсийТитула);
	Если МассивВерсийТитула <> Неопределено Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("СтруктураРеквизитов", МассивВерсийТитула[Мин(НомерВерсии, МассивВерсийТитула.ВГраница())]);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТитулГрузоотправителяЗаказНомерПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяЗаказДатаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры


&НаКлиенте
Процедура ПриИзмененииДанныхНаФорме(ИмяЭлемента)
	
	СтруктураРеквизитовФормы = Новый Структура(ЭтотОбъект.ОписаниеРеквизитовФормы.ПараметрыФормы);
	СтруктураРеквизитовОбъекта = Новый Структура(ЭтотОбъект.ОписаниеРеквизитовФормы.РеквизитыОбъекта);
	
	Если СтруктураРеквизитовФормы.Свойство(ИмяЭлемента) Тогда
		ЗначениеРеквизита = ЭтотОбъект[ИмяЭлемента];
	ИначеЕсли СтруктураРеквизитовОбъекта.Свойство(ИмяЭлемента) Тогда
		ЗначениеРеквизита = Объект[ИмяЭлемента];
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, ИмяЭлемента, ЗначениеРеквизита);
	
	Если ИмяЭлемента = "СсылкаТитулГрузоотправителяГрузополучатель"
		Или ИмяЭлемента = "СсылкаТитулГрузоотправителяПеревозчик" Тогда
		ОбновитьДополнительныеРеквизитыОсновнойФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДополнительныеРеквизитыОсновнойФормы()
	
	ОбменСГИСЭПД.ДобавитьОписаниеДополнительныхРеквизитов(ЭтотОбъект, , "ОсновнаяФорма");
	ОбменСГИСЭПД.ПоказатьДополнительныеРеквизитыОсновнойФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяТранспортнаяНакладнаяНомерПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяТранспортнаяНакладнаяДатаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом 
	
	Если СтруктураРеквизитов <> Неопределено Тогда
		ПеречитатьДанные();		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПеречитатьДанные()
	
	ОбменСГИСЭПД.ЗаполнитьТаблицуВерсийТитулов(Объект.Ссылка, Объект.Организация, ВерсииТитулов, Истина);
	ОбменСГИСЭПД.ЗаполнитьТаблицуЗначенийРеквизитов(Объект.Ссылка, Объект.Организация, СтруктураРеквизитов, , , Истина);

	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);

	ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
	
	УстановитьТекущийШагПомощника();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("Запись_ДокументыЭПД", Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбменСГИСЭПДКлиент.ПриОткрытииПодчиненнойФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьИсправительнуюВерсиюТитулаПриНеобходимости()
	
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	
	ЭтоИсправление = ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется повторная отправка"
					Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется уточнение"
					Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется повторная отправка";
					
	НужноПодниматьВерсиюВсегда = Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7")
					Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8")
					Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7")
					Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8")
					Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3")
					Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4");
	
	Если ЭтоИсправление Или НужноПодниматьВерсиюВсегда Тогда
		Отбор = Новый Структура("Титул", Объект.ТекущийТитул);
		СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии, ИдентификаторФайла");
		СтрокиВерсий.Сортировать("НомерВерсии");
		
		ТекущийНомерВерсии = -1;
		ТекущаяВерсияЗафиксирована = Ложь;
		Для Каждого СтрокаВерсии Из СтрокиВерсий Цикл
			Если СтрокаВерсии.НомерВерсии > ТекущийНомерВерсии Тогда
				ТекущийНомерВерсии = СтрокаВерсии.НомерВерсии;
				ТекущаяВерсияЗафиксирована = ЗначениеЗаполнено(СтрокаВерсии.ИдентификаторФайла);	
			КонецЕсли;	
		КонецЦикла;
		
		Если ТекущаяВерсияЗафиксирована = Истина Тогда
			ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
			КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме);
			СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
			КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула].Добавить(СтруктураВерсииТитула);
			КонтейнерОтображаемойВерсии.НомерВерсии = КонтейнерОтображаемойВерсии.НомерВерсии + 1;
			СтруктураРеквизитов = ОбменСГИСЭПДКлиентСервер.СкопироватьВФиксированноеЗначенияРекурсивно(КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение);
				
			НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, ИнформацияПоПрефиксамТитула.ВПрограмме);
			
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, ИнформацияПоПрефиксамТитула.ВПрограмме, 1);	
			
			НоваяВерсия = ВерсииТитулов.Добавить();
			НоваяВерсия.НомерВерсии = НомерВерсии + 1;
			НоваяВерсия.Титул = Объект.ТекущийТитул;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула()
	
	КонтейнерОтображаемойВерсии = Неопределено;
	
	ИнициализироватьИсправительнуюВерсиюТитулаПриНеобходимости();
	
	Если (ЗначениеЗаполнено(Объект.Ссылка) = Ложь 
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1")) Тогда
			
		Если ЗначениеЗаполнено(Объект.ТитулГрузоотправителяТранспортнаяНакладнаяДата) = Ложь Тогда
			Объект.ТитулГрузоотправителяТранспортнаяНакладнаяДата = ТекущаяДатаСеанса();	
		КонецЕсли;
				
		Если ЗначениеЗаполнено(Объект.ВидДокумента) = Ложь Тогда
			Объект.ВидДокумента = ЭлектронныеДокументыЭДО.ВидДокументаПоТипу(ПредопределенноеЗначение("Перечисление.ТипыДокументовЭДО.ЭТрН"));
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулГрузоотправителяКодМетодаОпределенияМассыГруза", 
			"03", 
			Ложь, КонтейнерОтображаемойВерсии);

		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулГрузоотправителяКодВалюты", "643", Ложь, КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулГрузоотправителяНаименованиеВалюты", 
			"Российский рубль", 
			Ложь, КонтейнерОтображаемойВерсии);	

		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулГрузоотправителяВладелецПунктаПогрузкиЯвляетсяГрузоотправителем", 
			"1", 
			Ложь, КонтейнерОтображаемойВерсии);	
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулГрузоотправителяЭкспедитор", 
				"0", 
				Ложь, КонтейнерОтображаемойВерсии);	
				
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулГрузоотправителяСпособПередачиУказанияНаПереадресовку", 
				"Электронное уведомление перевозчика о переадресовке", 
				Ложь, КонтейнерОтображаемойВерсии);
		
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда 
		
		ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
		
		Если ЗначениеЗаполнено(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла"])
			И ЗначениеЗаполнено(ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, ИнформацияПоПрефиксамТитула.ПолеУИД)) Тогда
			Модифицированность = Истина;
		КонецЕсли;
		
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3")
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3") Тогда
			
		ПрефиксДоп = "";
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3") Тогда
			ПрефиксДоп = "Доп";
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			ПрефиксДоп + "ТитулГрузополучателяСодержаниеОперацииПриемГруза", 
			"Лицом, управомоченным на получение груза, при указанных обстоятельствах принят от перевозчика груз с указанными характеристиками", 
			Ложь, КонтейнерОтображаемойВерсии);
				
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			ПрефиксДоп + "ТитулГрузополучателяКодМетодаОпределенияМассыГруза", 
			"03", 
			Ложь, КонтейнерОтображаемойВерсии);
	
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			ПрефиксДоп + "ТитулГрузополучателяФактическиеДатаВремяПрибытия", 
			ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриИзменении(ТекущаяДатаСеанса()), 
			Ложь, КонтейнерОтображаемойВерсии);
	
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			ПрефиксДоп + "ТитулГрузополучателяФактическиеДатаВремяУбытия", 
			ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриИзменении(ТекущаяДатаСеанса()), 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ТитулГрузоотправителяДатаИВремяДоставки = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект,
														ПрефиксДоп + "ТитулГрузоотправителяДатаИВремяДоставки",
														ТекущаяДатаСеанса(),
														КонтейнерОтображаемойВерсии);

		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			ПрефиксДоп + "ТитулГрузополучателяЗаявленныеДатаВремяПрибытия", 
			ТитулГрузоотправителяДатаИВремяДоставки, 
			Ложь, КонтейнерОтображаемойВерсии);
		
		ТекущийГрузополучатель = ТекущийГрузополучатель(Объект);
		
		Если НЕ ОбменСГИСЭПДКлиентСервер.СкопироватьРеквизитыВСтруктуреФормы(ЭтотОбъект, 
			ПрефиксДоп + "ТитулПереадресовкаАдресВыгрузки", ПрефиксДоп + "ТитулГрузополучателяАдресВыгрузки") Тогда
			Если НЕ ОбменСГИСЭПДКлиентСервер.СкопироватьРеквизитыВСтруктуреФормы(ЭтотОбъект, 
				"ТитулПереадресовкаАдресВыгрузки", ПрефиксДоп + "ТитулГрузополучателяАдресВыгрузки") Тогда
				ОбменСГИСЭПДКлиентСервер.СкопироватьРеквизитыВСтруктуреФормы(ЭтотОбъект, 
					"ТитулГрузоотправителяГрузополучательАдресДоставки", ПрефиксДоп + "ТитулГрузополучателяАдресВыгрузки");
			КонецЕсли;
		КонецЕсли;
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("Представление" + ПрефиксДоп + "ТитулГрузополучателяАдресВыгрузки", ЭтотОбъект);
		
		ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					ТекущийГрузополучатель,
					Элементы["Представление" + ПрефиксДоп + "ТитулГрузополучателяАдресВыгрузки"],
					Элементы["Представление" + ПрефиксДоп + "ТитулГрузополучателяАдресВыгрузки"].СписокВыбора);	
		
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4") Тогда 
		
		ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
		
		Если ЗначениеЗаполнено(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла"])
			И ЗначениеЗаполнено(ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, ИнформацияПоПрефиксамТитула.ПолеУИД)) Тогда
			Модифицированность = Истина;
		КонецЕсли;
		
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7") Тогда
		
		ТекущийГрузополучатель = ТекущийГрузополучатель(Объект);
		
		ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					ТекущийГрузополучатель,
					Элементы.ПредставлениеТитулПереадресовкаАдресВыгрузки,
					Элементы.ПредставлениеТитулПереадресовкаАдресВыгрузки.СписокВыбора, Истина);
					
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7") Тогда
		
		ТекущийГрузополучатель = ТекущийГрузополучатель(Объект);
		
		ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					ТекущийГрузополучатель,
					Элементы.ПредставлениеДопТитулПереадресовкаАдресВыгрузки,
					Элементы.ПредставлениеДопТитулПереадресовкаАдресВыгрузки.СписокВыбора, Истина);
		
	КонецЕсли;
	
	// ЗИТ ответили, что иные получатели должны копироваться из Т1
	// для переадресовки в иных получателях старый или новый ГП 
	Если ЗначениеЗаполнено(Объект.Ссылка) 
		И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1")
		И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7")
		И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7") Тогда
			СкопироватьИныхПолучателейИзТитулаГрузоотправителя();	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяОбщееКоличествоПринятыхГрузовыхМестПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяФактическоеСостояниеГрузаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяМассаБруттоПринятогоГрузаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяМассаНеттоПринятогоГрузаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяОбъемГрузовыхМестПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры






&НаСервере
Процедура СкопироватьИныхПолучателейИзТитулаГрузоотправителя()
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) Тогда
		ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);	
		СчетчикЦикла = 1;
		КлючОткуда = "ТитулГрузоотправителяИдентификаторыИныхПолучателейФайла__" + СчетчикЦикла + "__" + "ИдентификаторИногоПолучателя";
		ЗначениеОткуда = Неопределено;
		КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, КлючОткуда);
		СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
		КонтейнерОтображаемойВерсииКуда = Неопределено;
		Пока СтруктураВерсииТитула.Свойство(КлючОткуда, ЗначениеОткуда) Цикл
			Если ЗначениеОткуда <> Объект.ИдентификаторГрузоотправителя
			И ЗначениеОткуда <> Объект.ИдентификаторГрузополучателя
			И ЗначениеОткуда <> Объект.ИдентификаторПеревозчика Тогда
				КлючКуда = ИнформацияПоПрефиксамТитула.ВПрограмме 
								+ "ИдентификаторыИныхПолучателейФайла__" + СчетчикЦикла + "__" + "ИдентификаторИногоПолучателя";
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, КлючКуда, ЗначениеОткуда, , КонтейнерОтображаемойВерсииКуда);	
				СчетчикЦикла = СчетчикЦикла + 1;
				КлючОткуда = "ТитулГрузоотправителяИдентификаторыИныхПолучателейФайла__" + СчетчикЦикла + "__" + "ИдентификаторИногоПолучателя";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяФактическиеДатаВремяПрибытияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ТитулГрузополучателяФактическиеДатаВремяПрибытия = 
		ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
			"ТитулГрузополучателяФактическиеДатаВремяПрибытия");
	
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ТитулГрузополучателяФактическиеДатаВремяПрибытия, Направление, СтандартнаяОбработка);
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
		"ТитулГрузополучателяФактическиеДатаВремяПрибытия", ТитулГрузополучателяФактическиеДатаВремяПрибытия);

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяФактическиеДатаВремяУбытияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ТитулГрузополучателяФактическиеДатаВремяУбытия = 
		ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
			"ТитулГрузополучателяФактическиеДатаВремяУбытия");
	
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ТитулГрузополучателяФактическиеДатаВремяУбытия, Направление, СтандартнаяОбработка);
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
		"ТитулГрузополучателяФактическиеДатаВремяУбытия", ТитулГрузополучателяФактическиеДатаВремяУбытия);

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяЗаявленныеДатаВремяПрибытияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ТитулГрузополучателяЗаявленныеДатаВремяПрибытия = 
		ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
			"ТитулГрузополучателяЗаявленныеДатаВремяПрибытия");
	
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ТитулГрузополучателяЗаявленныеДатаВремяПрибытия, Направление, СтандартнаяОбработка);
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
		"ТитулГрузополучателяЗаявленныеДатаВремяПрибытия", ТитулГрузополучателяЗаявленныеДатаВремяПрибытия);
	
КонецПроцедуры


&НаКлиенте
Процедура ДопТитулГрузополучателяФактическиеДатаВремяПрибытияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ДопТитулГрузополучателяФактическиеДатаВремяПрибытия = 
		ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
			"ДопТитулГрузополучателяФактическиеДатаВремяПрибытия");
	
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ДопТитулГрузополучателяФактическиеДатаВремяПрибытия, Направление, СтандартнаяОбработка);
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
		"ДопТитулГрузополучателяФактическиеДатаВремяПрибытия", ДопТитулГрузополучателяФактическиеДатаВремяПрибытия);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяФактическиеДатаВремяУбытияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ДопТитулГрузополучателяФактическиеДатаВремяУбытия = 
		ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
			"ДопТитулГрузополучателяФактическиеДатаВремяУбытия");
			
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ДопТитулГрузополучателяФактическиеДатаВремяУбытия, Направление, СтандартнаяОбработка);
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
		"ДопТитулГрузополучателяФактическиеДатаВремяУбытия", ДопТитулГрузополучателяФактическиеДатаВремяУбытия);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяЗаявленныеДатаВремяПрибытияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ДопТитулГрузополучателяЗаявленныеДатаВремяПрибытия = 
		ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
			"ДопТитулГрузополучателяЗаявленныеДатаВремяПрибытия");
			
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ДопТитулГрузополучателяЗаявленныеДатаВремяПрибытия, Направление, СтандартнаяОбработка);
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
		"ДопТитулГрузополучателяЗаявленныеДатаВремяПрибытия", ДопТитулГрузополучателяЗаявленныеДатаВремяПрибытия);
	
КонецПроцедуры




&НаСервере
Процедура ЗаполнитьСведенияОПереадресовке()

	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
		"ТитулГрузоотправителяЛицоИмеющееПолномочияПереадресовки", "Грузоотправитель", Ложь);

	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
		"ТитулГрузоотправителяСпособПередачиУказанияНаПереадресовку", "Электронное уведомление перевозчика о переадресовке", Ложь);
	
	Если ОбменСГИСЭПДКлиентСервер.ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(ЭтотОбъект, 
		"ТитулГрузоотправителяОтветственныйЗаПереадресовкуНомераТелефонов") = 0 Тогда
		ЛицоОсуществляющееПереадресацию = Неопределено;
		ТитулГрузоотправителяЛицоИмеющееПолномочияПереадресовки = 
			ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ТитулГрузоотправителяЛицоИмеющееПолномочияПереадресовки");
		Если ТитулГрузоотправителяЛицоИмеющееПолномочияПереадресовки = "Грузоотправитель" И ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяГрузоотправитель) Тогда
			ЛицоОсуществляющееПереадресацию = Объект.СсылкаТитулГрузоотправителяГрузоотправитель;		
		ИначеЕсли ТитулГрузоотправителяЛицоИмеющееПолномочияПереадресовки = "Грузополучатель" И ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяГрузополучатель) Тогда
			ЛицоОсуществляющееПереадресацию = Объект.СсылкаТитулГрузоотправителяГрузополучатель;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛицоОсуществляющееПереадресацию) Тогда
			ОрганизацияТип = Метаданные.ОпределяемыеТипы.Организация.Тип.Типы()[0];
			КонтрагентТип = Метаданные.ОпределяемыеТипы.КонтрагентБЭД.Тип.Типы()[0];
			ДатаОпределенияКонтактов = ТекущаяДатаСеанса();
			Телефон = Неопределено;
			Если ТипЗнч(ЛицоОсуществляющееПереадресацию) = ОрганизацияТип Тогда
				Телефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ЛицоОсуществляющееПереадресацию, 
																Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации, 
																ДатаОпределенияКонтактов, Истина);
			ИначеЕсли ТипЗнч(ЛицоОсуществляющееПереадресацию) = КонтрагентТип Тогда
				Телефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ЛицоОсуществляющееПереадресацию, 
																Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента, 
																ДатаОпределенияКонтактов, Истина);
			КонецЕсли;
			Если ЗначениеЗаполнено(Телефон) Тогда
				КлючКуда = "ТитулГрузоотправителяОтветственныйЗаПереадресовкуНомераТелефонов__1__Телефон";
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, КлючКуда, Телефон);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменаВводаДопТитула(Команда)
	
	ЗаполнитьРеквизитыПоследнейВерсии(Объект.ТекущийТитул);
	
	Объект.ТекущийТитул = Неопределено;
	ВводимТитулКорректировкиСтоимости = Ложь;
	ВводимТитулКорректировкиЭстафета = Ложь;
	ВводимТитулУказаниеПереадресовки = Ложь;
	ВводимДопТитулУказаниеПереадресовки = Ложь;
	ВводимТитулПереадресовки = Ложь;
	ВводимДопТитулПереадресовки = Ложь;
	ВводимДопТитулКорректировкиЭстафета = Ложь;
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	УстановитьТекущийШагПомощника();

КонецПроцедуры

&НаКлиенте
Процедура НадписьСтатусаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ТекущиеДелаПоЭДО" Тогда
		СтандартнаяОбработка = Ложь;
		ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокументОбъектаУчета(Объект.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлектронныйДокумент(Команда)
	
	ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокументОбъектаУчета(Объект.Ссылка);
	
КонецПроцедуры


&НаКлиенте
Процедура НадписьСтатусаОшибкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОписаниеОшибки" Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ОткрытьОписаниеОшибки(Объект.Ссылка, ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьУказаниеПереадресовки(Команда)
	
	Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9");
	УстановитьВидимостьСтраницыТитулУказаниеПереадресовки();
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьУказаниеПереадресовкиДоп(Команда)
	
	Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9");
	УстановитьВидимостьСтраницыТитулУказаниеПереадресовкиДоп();
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьПереадресовку(Команда)
	
	Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7");
	УстановитьВидимостьСтраницыТитулПереадресовки();
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьПереадресовкуДоп(Команда)
	
	Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7");
	УстановитьВидимостьСтраницыНачалоДоп();
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЭстафету(Команда)
	
	Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8");
	УстановитьВидимостьСтраницыТитулКорректировкиЭстафета();
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЭстафетуДоп(Команда)
	
	Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8");
	УстановитьВидимостьСтраницыТитулКорректировкиЭстафетаДоп();
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКорректировкуСтоимости(Команда)
	
	Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5");
	УстановитьВидимостьСтраницыТитулПлатеж();
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьПредставленияАдресов(Знач Титул = Неопределено)
	
	Если Титул = Неопределено Тогда
		ПрефиксТитула = ОбменСГИСЭПДКлиентСервер.ПолучитьПрефиксТитулаПоСтраницеОсновнойФормы(Элементы.Страницы.ТекущаяСтраница.Имя, 
			ОбменСГИСЭПДКлиентСервер.ТипДокументаТранспортнаяНакладная());	
		Титул = ОбменСГИСЭПДКлиентСервер.ТитулПоПрефиксу("Документ.ЭлектроннаяТранспортнаяНакладная", ПрефиксТитула);
	КонецЕсли;
	
	Если Титул = Неопределено Или Титул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеТитулГрузоотправителяГрузополучательАдресДоставки", ЭтотОбъект);
	КонецЕсли;
	
	Если Титул = Неопределено Или Титул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеТитулУказаниеПереадресАдресВыгрузки", ЭтотОбъект);
	КонецЕсли;
	
	Если Титул = Неопределено Или Титул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеДопТитулУказаниеПереадресАдресВыгрузки", ЭтотОбъект);
	КонецЕсли;
	
	Если Титул = Неопределено Или Титул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеТитулПереадресовкаАдресВыгрузки", ЭтотОбъект);
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеТитулПереадресовкаНовыйГрузополучательАдрес", ЭтотОбъект);
	КонецЕсли;
	
	Если Титул = Неопределено Или Титул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеТитулГрузополучателяАдресВыгрузки", ЭтотОбъект);
	КонецЕсли;
	
	Если Титул = Неопределено Или Титул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеДопТитулГрузополучателяАдресВыгрузки", ЭтотОбъект);
	КонецЕсли;
	
	Если Титул = Неопределено Или Титул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеДопТитулПереадресовкаАдресВыгрузки", ЭтотОбъект);
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеДопТитулПереадресовкаНовыйГрузополучательАдрес", ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ОписаниеРеквизитовФормы() Экспорт
	
	Возврат ОписаниеРеквизитовФормыСервер();
	
КонецФункции

&НаСервере
Функция ОписаниеРеквизитовФормыСервер()
	
	Возврат ОбменСГИСЭПД.ОписаниеРеквизитовФормы(ЭтаФорма);
		
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяОснованиеРасчетовИнымЛицом(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяДоговорНаУсловияПеревозки(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяГрузы(Команда)
	
	ОповещениеИзмененияГруза = Новый ОписаниеОповещения("ЗаполнитьТитулГрузоотправителяГрузы_Завершение", ЭтотОбъект);
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя, , , , ОповещениеИзмененияГруза);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяГрузы_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.КартинкаОпасныйГруз.Видимость = ОбменСГИСЭПДКлиентСервер.ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(ЭтотОбъект, "ТитулГрузоотправителяСведенияОбОпасныхГрузах") > 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяСопроводительныеДокументы(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяУказанияГрузоотправителя(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяВодители(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяПогрузка(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяОтметкиГрузоотправителя(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаПриемкаОтметкиПеревозчикаПриПриемеГруза(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузополучателяСведенияОПринятыхГрузах(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулГрузополучателяОтметкиГрузополучателя(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаВыдачаОтметкиПриВыдачеГруза(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПереадресовкаОснованиеРеквизитыСторон(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДопТитулПереадресовкаОснованиеРеквизитыСторон(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПереадресовкаКонтактныеДанныеНовогоГрузополучателя(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПереадресовкаСведенияОбОтметках(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДопТитулПереадресовкаКонтактныеДанныеНовогоГрузополучателя(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДопТитулПереадресовкаСведенияОбОтметках(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаЗаменыДокументРеквизитыСторон(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДопТитулПеревозчикаЗаменыДокументРеквизитыСторон(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаЗаменыЗаменыВодителей(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДопТитулПеревозчикаЗаменыЗаменыВодителей(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаЗаменыТранспортныеСредства(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДопТитулПеревозчикаЗаменыТранспортныеСредства(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаЗаменыОтметкиОЗаменах(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДопТитулПеревозчикаЗаменыОтметкиОЗаменах(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаФХЖПеревозчик(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулУказаниеПереадресСведенияОМаршруте(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулУказаниеПереадресДокументПодтверждающийОтгрузку(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулУказаниеПереадресСведенияОГрузе(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьТитулГрузоотправителяДоверенность(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры


&НаКлиенте
Процедура СсылкаТитулУказаниеПереадресЛицоПриИзменении(Элемент)


	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулУказаниеПереадресСведенияОНовомГрузополучателеПриИзменении(Элемент)


	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулУказаниеПереадресАдресВыгрузкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулУказаниеПереадресАдресВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВводАдреса(Элемент.Имя, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулУказаниеПереадресАдресВыгрузкиОбработкаВыбора(Элемент, Результат, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(ЭтотОбъект, Результат, Элемент.Имя);
	
КонецПроцедуры


&НаКлиенте
Процедура СсылкаТитулГрузоотправителяГрузоотправительПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
	Если ГрузоотправительЯвляетсяГрузополучателем Тогда
		Объект.СсылкаТитулГрузоотправителяГрузополучатель = Объект.СсылкаТитулГрузоотправителяГрузоотправитель;	
		СсылкаТитулГрузоотправителяГрузополучательПриИзменении(Элементы.СсылкаТитулГрузоотправителяГрузополучатель);
	КонецЕсли;
	
	ЗаполнитьСведенияОПереадресовке();
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулГрузоотправителяСоставительПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ИзмененСоставУчастников = Истина;
	
	НаименованиеСоставителя = Строка(Объект.СсылкаТитулГрузоотправителяСоставитель);
	
	Если ЗначениеЗаполнено(НаименованиеСоставителя) Тогда
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулГрузоотправителяПредставительГрузоотправителя", НаименованиеСоставителя);
	Иначе
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулГрузоотправителяПредставительГрузоотправителя");	
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СсылкаТитулГрузоотправителяЗаказчикПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИныеПолучатели(Команда)
	
	ТолькоПросмотрИныхПолучателей = Элементы.Страницы.ТекущаяСтраница.ТолькоПросмотр
										Или Элементы.Страницы.ТекущаяСтраница <> Элементы.СтраницаСодИнфГО;
		
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСодИнфГО Тогда
		ИмяТаблицы = "ТитулГрузоотправителяИдентификаторыИныхПолучателейФайла";	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСодИнфПрвПрием Тогда
		ИмяТаблицы = "ТитулПеревозчикаПриемкаИдентификаторыИныхПолучателейФайла";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСодИнфГП Тогда
		ИмяТаблицы = "ТитулГрузополучателяИдентификаторыИныхПолучателейФайла";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСодПрвВыд Тогда
		ИмяТаблицы = "ТитулПеревозчикаВыдачаИдентификаторыИныхПолучателейФайла";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСодИнфЗамен Тогда
		ИмяТаблицы = "ТитулПеревозчикаЗаменыИдентификаторыИныхПолучателейФайла";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДопСодИнфЗамен Тогда
		ИмяТаблицы = "ДопТитулПеревозчикаЗаменыИдентификаторыИныхПолучателейФайла";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДопСодИнфГП Тогда
		ИмяТаблицы = "ДопТитулГрузополучателяИдентификаторыИныхПолучателейФайла";
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДопСодПрвВыд Тогда
		ИмяТаблицы = "ДопТитулПеревозчикаВыдачаИдентификаторыИныхПолучателейФайла";
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='Для текущего титула добавление иных получателей не предусмотрено форматом обмена'"), , );
		Возврат;
	КонецЕсли;
	
	Организация = Неопределено;
	ТипОрганизация = ОбменСГИСЭПДВызовСервера.ПолучитьТипОрганизация();
	Если ТипЗнч(Объект.СсылкаТитулГрузоотправителяПеревозчик) = ТипОрганизация Тогда
		Организация = Объект.СсылкаТитулГрузоотправителяПеревозчик;
	ИначеЕсли ТипЗнч(Объект.СсылкаТитулГрузоотправителяГрузополучатель) = ТипОрганизация Тогда
		Организация = Объект.СсылкаТитулГрузоотправителяГрузополучатель;
	ИначеЕсли ТипЗнч(Объект.СсылкаТитулГрузоотправителяГрузоотправитель) = ТипОрганизация Тогда
		Организация = Объект.СсылкаТитулГрузоотправителяГрузоотправитель;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) = Ложь Тогда
		ПоказатьПредупреждение(, "Сначала нужно выбрать организацию, для которой настроена учетная запись 1С-ЭДО");	
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", Организация);
	
	МассивПолучателей = Новый Массив;
	СчетчикЦикла = 1;
	КлючСтруктуры = ИмяТаблицы + "__" + СчетчикЦикла + "__ИдентификаторИногоПолучателя";
	ЗначениеРеквизита = Неопределено;
	КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, ИмяТаблицы);
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	Пока СтруктураВерсииТитула.Свойство(КлючСтруктуры, ЗначениеРеквизита) Цикл
		Если ЗначениеРеквизита <> Объект.ИдентификаторГрузоотправителя
		И ЗначениеРеквизита <> Объект.ИдентификаторГрузополучателя
		И ЗначениеРеквизита <> Объект.ИдентификаторПеревозчика Тогда
			МассивПолучателей.Добавить(ЗначениеРеквизита);	
			СчетчикЦикла = СчетчикЦикла + 1;
			КлючСтруктуры = ИмяТаблицы + "__" + СчетчикЦикла + "__ИдентификаторИногоПолучателя";
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы.Вставить("ВидДокумента", Объект.ВидДокумента);
	ПараметрыФормы.Вставить("ИмяТаблицы", ИмяТаблицы);
	ПараметрыФормы.Вставить("МассивПолучателей", МассивПолучателей);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотрИныхПолучателей);
	
	ОписаниеИныеПолучатели_Закрытие = Новый ОписаниеОповещения("ИныеПолучатели_Закрытие", ЭтотОбъект, ПараметрыФормы);
	
	ОткрытьФорму("Документ.ЭлектроннаяТранспортнаяНакладная.Форма.ИныеПолучатели", ПараметрыФормы, ЭтотОбъект, 
					УникальныйИдентификатор, , , ОписаниеИныеПолучатели_Закрытие, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
					
КонецПроцедуры

&НаКлиенте
Процедура ИныеПолучатели_Закрытие(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(ЭтотОбъект, ДополнительныеПараметры.ИмяТаблицы);
		СчетчикЦикла = 1;
		Для Каждого ИДПолучателя Из Результат Цикл
			Если ИДПолучателя <> Объект.ИдентификаторГрузоотправителя
			И ИДПолучателя <> Объект.ИдентификаторГрузополучателя
			И ИДПолучателя <> Объект.ИдентификаторПеревозчика Тогда
				КлючКуда = ДополнительныеПараметры.ИмяТаблицы + "__" + СчетчикЦикла + "__ИдентификаторИногоПолучателя";
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, КлючКуда, ИДПолучателя);
				СчетчикЦикла = СчетчикЦикла + 1;
			КонецЕсли;
		КонецЦикла;	
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СсылкаТитулГрузоотправителяГрузополучательПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	ЗаполнитьСведенияОПереадресовке();
	
	Если ЗначениеЗаполнено(ПредставлениеТитулГрузоотправителяГрузополучательАдресДоставки) = Ложь Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
						Объект.СсылкаТитулГрузоотправителяГрузополучатель,
						Элементы.ПредставлениеТитулГрузоотправителяГрузополучательАдресДоставки,
						Элементы.ПредставлениеТитулГрузоотправителяГрузополучательАдресДоставки.СписокВыбора, Истина);
	КонецЕсли;
		
КонецПроцедуры


&НаКлиенте
Процедура ПредставлениеТитулГОПредставлениеАдресДоставкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Элементы.ПредставлениеТитулГрузоотправителяГрузополучательАдресДоставки.СписокВыбора.Очистить();
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					Объект.СсылкаТитулГрузоотправителяГрузополучатель,
					Элемент,
					ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулГОПредставлениеАдресДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВводАдреса(Элемент.Имя, ЭтотОбъект, Объект.СсылкаТитулГрузоотправителяГрузополучатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулГОПредставлениеАдресДоставкиОбработкаВыбора(Элемент, Результат, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(ЭтотОбъект, Результат, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулГОПредставлениеАдресДоставкиПриИзменении(Элемент)
	
	Если ПустаяСтрока(ПредставлениеТитулГрузоотправителяГрузополучательАдресДоставки) Тогда
		Элементы.ПредставлениеТитулГрузоотправителяГрузополучательАдресДоставки_Ошибка.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулПереадресовкаНовыйГПАдресПриИзменении(Элемент)
	
	Если ПустаяСтрока(ЭтотОбъект[Элемент.Имя]) Тогда
		Элементы[Элемент.Имя + "_Ошибка"].Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулПереадресовкаАдресВыгрузкиПриИзменении(Элемент)
	
	Если ПустаяСтрока(ЭтотОбъект[Элемент.Имя]) Тогда
		Элементы[Элемент.Имя + "_Ошибка"].Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПредставлениеГрузополучательАдресВыгрузкиПриИзменении(Элемент)
		
	Если ПустаяСтрока(ЭтотОбъект[Элемент.Имя]) Тогда
		Элементы[Элемент.Имя + "_Ошибка"].Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяКодМетодаОпределенияМассыГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяЗаявленныеДатаВремяПрибытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяФактическиеДатаВремяУбытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяФактическиеДатаВремяПрибытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузополучателяПричинаОтказаВПриемеГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияДатаВремяПрибытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияДатаВремяУбытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияДатаВремяПостановкиНаПогрузкуПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияВОтношенииФактическогоСостояниеГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияВОтношенииМассыГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияВОтношенииКоличестваГрузовыхМестПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияВОтношенииПроведенияПогрузочныхРаботПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаДатаВремяПрибытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаДатаВремяУбытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаДатаИВремяПостановкиНаВыгрузкуПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаЗамечанияВОтношенииФактическогоСостоянияГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаЗамечанияВОтношенииПроведенияРаботПоВыгрузкеПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПереадресовкаДатаВремяПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПереадресовкаНовыеДатаВремяПодачиПодВыгрузкуПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулГрузоотправителяПеревозчикПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры


&НаКлиенте
Процедура ПредставлениеПредставлениеГрузополучательАдресВыгрузкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Элементы.ПредставлениеТитулГрузополучателяАдресВыгрузки.СписокВыбора.Очистить();
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					Объект.СсылкаТитулГрузоотправителяГрузополучатель,
					Элемент,
					ДанныеВыбора);
					
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПредставлениеГрузополучательАдресВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВводАдреса(Элемент.Имя, ЭтотОбъект, Объект.СсылкаТитулГрузоотправителяГрузополучатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПредставлениеГрузополучательАдресВыгрузкиОбработкаВыбора(Элемент, Результат, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(ЭтотОбъект, Результат, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулПереадресовкаНовыйГрузополучательПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеТитулПереадресовкаНовыйГрузополучательАдрес", ЭтотОбъект);
	
	ИзмененСоставУчастников = Истина;
	
	ЗначениеОтбора = ?(ЗначениеЗаполнено(Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель), 
						Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель, Объект.СсылкаТитулГрузоотправителяГрузополучатель);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					ЗначениеОтбора,
					Элементы.ПредставлениеТитулПереадресовкаАдресВыгрузки,
					Элементы.ПредставлениеТитулПереадресовкаАдресВыгрузки.СписокВыбора, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПереадресовкаОснованиеНаименованиеПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПереадресовкаОснованиеНомерПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПереадресовкаОснованиеДатаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПереадресовкаОснованиеДополнительныеСведенияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры





&НаКлиенте
Процедура СсылкаДопТитулПереадресовкаНовыйГрузополучательПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеДопТитулПереадресовкаНовыйГрузополучательАдрес", ЭтотОбъект);
	
	ИзмененСоставУчастников = Истина;
	
	ЗначениеОтбора = ?(ЗначениеЗаполнено(Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель), 
						Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель, Объект.СсылкаДопТитулГрузоотправителяГрузополучатель);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					ЗначениеОтбора,
					Элементы.ПредставлениеДопТитулПереадресовкаАдресВыгрузки,
					Элементы.ПредставлениеДопТитулПереадресовкаАдресВыгрузки.СписокВыбора, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПереадресовкаОснованиеНаименованиеПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПереадресовкаОснованиеНомерПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПереадресовкаОснованиеДатаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПереадресовкаОснованиеДополнительныеСведенияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры





&НаКлиенте
Процедура ПредставлениеТитулПереадресовкаНовыйГПАдресАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулПереадресовкаНовыйГПАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущийГрузополучатель = ТекущийГрузополучатель(Объект);
	ОбменСГИСЭПДКлиент.ВводАдреса(Элемент.Имя, ЭтотОбъект, ТекущийГрузополучатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулПереадресовкаНовыйГПАдресОбработкаВыбора(Элемент, Результат, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(ЭтотОбъект, Результат, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулПереадресовкаАдресВыгрузкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Элементы.ПредставлениеТитулПереадресовкаАдресВыгрузки.СписокВыбора.Очистить();
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
	ТекущийГрузополучатель = ТекущийГрузополучатель(Объект);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
					ТекущийГрузополучатель,
					Элемент,
					ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПереадресовкиПриИзменении(Элемент)
	
	Если ВариантПереадресовки = 0 Тогда
		Если СтрЗаканчиваетсяНа(Элемент.Имя, "Доп") Тогда
			Если ЗначениеЗаполнено(Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель) Тогда
				ТипЗначения = ТипЗнч(Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель);
				Если ТипЗначения <> Неопределено Тогда
					Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель = Новый(ТипЗначения);
					СсылкаТитулПереадресовкаНовыйГрузополучательПриИзменении(Элементы.СсылкаДопТитулПереадресовкаНовыйГрузополучатель);	
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель) Тогда
				ТипЗначения = ТипЗнч(Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель);
				Если ТипЗначения <> Неопределено Тогда
					Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель = Новый(ТипЗначения);
					СсылкаТитулПереадресовкаНовыйГрузополучательПриИзменении(Элементы.СсылкаТитулПереадресовкаНовыйГрузополучатель);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);	

КонецПроцедуры


&НаКлиенте
Процедура ПредставлениеТитулПереадресовкаАдресВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущийГрузополучатель = ТекущийГрузополучатель(Объект);
	ОбменСГИСЭПДКлиент.ВводАдреса(Элемент.Имя, ЭтотОбъект, ТекущийГрузополучатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулПереадресовкаАдресВыгрузкиОбработкаВыбора(Элемент, Результат, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(ЭтотОбъект, Результат, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулПеревозчикаФХЖВалютаСтоимостиПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаФХЖСтоимостьПеревозкиБезНалогаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры


&НаКлиенте
Процедура СсылкаТитулГрузоотправителяФХЖБанковскиеРеквизитыПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяФХЖГрузоотправительОКПОПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяФХЖГрузоотправительКраткоеНаименованиеПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяФХЖГрузоотправительСтруктурноеПодразделениеПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПереадресовкаДатаВремяПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПереадресовкаНовыеДатаВремяПодачиПодВыгрузкуПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры







#Область Навигация

&НаКлиентеНаСервереБезКонтекста
Процедура ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, ТитулСтрока, Инкремент)
	
	Если Инкремент = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтображаемыеВерсииТитулов = Неопределено Тогда
		ОтображаемыеВерсииТитулов = Новый Структура;
	Иначе
		ТекущееЗначениеВерсии = Неопределено;
		ОтображаемыеВерсииТитулов.Свойство(ТитулСтрока, ТекущееЗначениеВерсии);
		Если ТекущееЗначениеВерсии <> Неопределено Тогда
			ОтображаемыеВерсииТитулов.Вставить(ТитулСтрока, ТекущееЗначениеВерсии + Инкремент);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НавигацияКартинкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага(НавигационнаяСсылкаФорматированнойСтроки, НавигационнаяСсылкаФорматированнойСтроки);
	
КонецПроцедуры


&НаКлиенте
Процедура НавигацияКартинкаДопОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага(НавигационнаяСсылкаФорматированнойСтроки, НавигационнаяСсылкаФорматированнойСтроки);
	
КонецПроцедуры


&НаКлиенте
Процедура Шаг1ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг1", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры


&НаКлиенте
Процедура Шаг2ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг2", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг3ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг3", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг4ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг4", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг5ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг5", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг6ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг6", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг7ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг7", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг8ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг8", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг9ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг9", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры


&НаКлиенте
Процедура Шаг10ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг10", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг11ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг11", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг12ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг12", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг13ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг13", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

#КонецОбласти



#Область НавигацияПоСтраницам

&НаКлиентеНаСервереБезКонтекста
Функция ВсегоШагов(Форма)
	
	ВсегоШагов = 4;
	ВсегоШагов = ВсегоШагов + ?(СтатусПереадресовки(Форма) > 0, 1, 0);
	ВсегоШагов = ВсегоШагов + ?(СтатусЗамены(Форма) > 0, 1, 0);
	ВсегоШагов = ВсегоШагов + ?(СтатусКорректировкиСтоимости(Форма) > 0, 2, 0);
	
	Возврат ВсегоШагов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВсегоШаговДоп(Форма)
	
	ВсегоШагов = 4;
	ВсегоШагов = ВсегоШагов + ?(СтатусЗаменыДоп(Форма) > 0, 1, 0);
	
	Возврат ВсегоШагов;
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьСтраницы(ОтображаемаяСтраница)
	
	ОтображаемаяСтраницаЦелевая = ПодменитьСтраницуДляТестированияФормы(ОтображаемаяСтраница);

	// Чтобы не отрастали лишние скролл-бары по высоте из-за разного числа элементов
	// на разных страницах, оставляем видимость только у одной - отображаемой страницы.
	
	Для каждого СтраницаЭТрН Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		СтраницаЭТрН.Видимость = (СтраницаЭТрН = ОтображаемаяСтраницаЦелевая);
	КонецЦикла;

	Элементы.Страницы.ТекущаяСтраница  = ОтображаемаяСтраницаЦелевая;
	
	ОбменСГИСЭПД.ПодготовитьФормуДляОтметкиОбязательныхПолей(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПодменитьСтраницуДляТестированияФормы(ОтображаемаяСтраница)
	
	Возврат ОтображаемаяСтраница;
	
КонецФункции

&НаСервере
Процедура УстановитьТекущийШагПомощника(ПредыдущийТекущийТитул = Неопределено)
	
	Если Параметры.Свойство("ТитулСтраницы") Тогда
		ТитулСтраницы = Параметры.ТитулСтраницы;
	Иначе
		ТитулСтраницы = ?(ЗначениеЗаполнено(Объект.ТекущийТитул), Объект.ТекущийТитул, ПредыдущийТекущийТитул);
	КонецЕсли;
	
	НачатьСПервойСтраницы = ТолькоПросмотр 
		Или ТитулСтраницы = Неопределено 
		Или НЕ ЗначениеЗаполнено(Объект.Ссылка);
		
	Если НачатьСПервойСтраницы Тогда
		ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1");	
	КонецЕсли;
	
	ОбменСГИСЭПД.ЗаполнитьВерсиюТитулаМобильногоПриложения(ЭтотОбъект, ТитулСтраницы);

	Если ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1") Тогда
		
		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыНачало();
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда
		
		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыТитулПеревозчика(); 
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9") Тогда
		
		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыТитулУказаниеПереадресовки();
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7") Тогда
		
		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыТитулПереадресовки();
			
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8") Тогда
		
		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыТитулКорректировкиЭстафета();
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3") Тогда
		
		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыТитулГрузополучателя();
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4") Тогда

		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыТитулПеревозчикаПриРазгрузке();
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5") Тогда

		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыТитулПлатеж();
	
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6") Тогда

		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыТитулПлательщик();
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9") Тогда
		
		УстановитьВидимостьСтраницыНачало(Ложь);
		УстановитьВидимостьСтраницыТитулУказаниеПереадресовкиДоп();
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7") Тогда

		УстановитьВидимостьСтраницыНачало(Ложь);
		УстановитьВидимостьСтраницыНачалоДоп();
	
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8") Тогда

		УстановитьВидимостьСтраницыНачало(Ложь);
		УстановитьВидимостьСтраницыТитулКорректировкиЭстафетаДоп();
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3") Тогда

		УстановитьВидимостьСтраницыНачало(Ложь);
		УстановитьВидимостьСтраницыТитулГрузополучателяДоп();
		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4") Тогда

		УстановитьВидимостьСтраницыНачало(Ложь);
		УстановитьВидимостьСтраницыТитулПеревозчикаПриРазгрузкеДоп();			
		
	Иначе
		
		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
		УстановитьВидимостьСтраницыНачало();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьТекущийШагПомощника()
	
	Если ТолькоПросмотр ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыНачало(ОтмечатьТекущий = Истина)

	Если ОтмечатьТекущий = Истина Тогда
		УстановитьВидимостьСтраницы(Элементы.СтраницаСодИнфГО);
	КонецЕсли;
	
	РазместитьНавигацию("ТитулГрузоотправителя", ОтмечатьТекущий);
	
	СохранитьТекущийШагПомощника();

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулПеревозчика()

	УстановитьВидимостьСтраницы(Элементы.СтраницаСодИнфПрвПрием);
	
	РазместитьНавигацию("ТитулПеревозчикаПриемка");
	
	СохранитьТекущийШагПомощника();

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулГрузополучателя()

	УстановитьВидимостьСтраницы(Элементы.СтраницаСодИнфГП);
	
	РазместитьНавигацию("ТитулГрузополучателя");
	
	СохранитьТекущийШагПомощника();
	

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулГрузополучателяДоп()

	УстановитьВидимостьСтраницы(Элементы.СтраницаДопСодИнфГП);
	
	РазместитьНавигациюДоп("ДопТитулГрузополучателя");
	
	СохранитьТекущийШагПомощника();
	

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулПеревозчикаПриРазгрузке()

	УстановитьВидимостьСтраницы(Элементы.СтраницаСодПрвВыд);
	
	РазместитьНавигацию("ТитулПеревозчикаВыдача");
	
	СохранитьТекущийШагПомощника();

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулПеревозчикаПриРазгрузкеДоп()

	УстановитьВидимостьСтраницы(Элементы.СтраницаДопСодПрвВыд);
	
	РазместитьНавигациюДоп("ДопТитулПеревозчикаВыдача");
	
	СохранитьТекущийШагПомощника();

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулУказаниеПереадресовки()
	
	ВводимДопТитулКорректировкиЭстафета = Ложь;
	ВводимДопТитулПереадресовки = Ложь;
	ВводимТитулКорректировкиСтоимости = Ложь;
	ВводимТитулКорректировкиЭстафета = Ложь;
	ВводимТитулПереадресовки = Ложь;
	ВводимДопТитулУказаниеПереадресовки = Ложь;
	ВводимТитулУказаниеПереадресовки = Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9;

	УстановитьВидимостьСтраницы(Элементы.СтраницаТитулУказаниеПереадрес);
	
	РазместитьНавигацию("ТитулУказаниеПереадрес");
	
	СохранитьТекущийШагПомощника();
		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулУказаниеПереадресовкиДоп()
	
	ВводимДопТитулКорректировкиЭстафета = Ложь;
	ВводимДопТитулПереадресовки = Ложь;
	ВводимТитулКорректировкиСтоимости = Ложь;
	ВводимТитулКорректировкиЭстафета = Ложь;
	ВводимТитулПереадресовки = Ложь;
	ВводимТитулУказаниеПереадресовки = Ложь;
	ВводимДопТитулУказаниеПереадресовки = Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9;

	УстановитьВидимостьСтраницы(Элементы.СтраницаДопТитулУказаниеПереадрес);
	
	РазместитьНавигациюДоп("ДопТитулУказаниеПереадрес");
	
	СохранитьТекущийШагПомощника();
		
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимостьСтраницыТитулПереадресовки()
	
	ВводимДопТитулКорректировкиЭстафета = Ложь;
	ВводимДопТитулПереадресовки = Ложь;
	ВводимТитулКорректировкиСтоимости = Ложь;
	ВводимТитулКорректировкиЭстафета = Ложь;
	ВводимТитулУказаниеПереадресовки = Ложь;
	ВводимДопТитулУказаниеПереадресовки = Ложь;
	ВводимТитулПереадресовки = Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7;

	УстановитьВидимостьСтраницы(Элементы.СтраницаСодИнфПА);
	
	РазместитьНавигацию("ТитулПереадресовка");
	
	СохранитьТекущийШагПомощника();
		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыНачалоДоп(ОтмечатьТекущий = Истина)
	
	Если ОтмечатьТекущий = Истина Тогда
		ВводимДопТитулКорректировкиЭстафета = Ложь;
		ВводимДопТитулПереадресовки = Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7;
		ВводимТитулКорректировкиСтоимости = Ложь;
		ВводимТитулКорректировкиЭстафета = Ложь;
		ВводимТитулПереадресовки = Ложь;
		ВводимТитулУказаниеПереадресовки = Ложь;
		ВводимДопТитулУказаниеПереадресовки = Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9;
		Если ВводимДопТитулПереадресовки = Истина Тогда
			УстановитьВидимостьСтраницы(Элементы.СтраницаДопСодИнфПА);
		ИначеЕсли ВводимДопТитулУказаниеПереадресовки = Истина Тогда
			УстановитьВидимостьСтраницы(Элементы.СтраницаДопТитулУказаниеПереадрес);	
		КонецЕсли;
	КонецЕсли;
	
	НавигацияПомощникаДоп = НавигацияПомощникаДоп();
	ЕстьДопТитулы = Ложь;
	Для Каждого СтруктураШага Из НавигацияПомощникаДоп Цикл
		Если СтруктураШага.Значение.Выполнен Или СтруктураШага.Значение.Доступен Тогда
			ЕстьДопТитулы = Истина;
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	РазместитьНавигациюДоп(?(ЕстьДопТитулы, "ДопТитулПереадресовка", ""), ОтмечатьТекущий);
	
	СохранитьТекущийШагПомощника();
		
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимостьСтраницыТитулКорректировкиЭстафета()
	
	ВводимДопТитулКорректировкиЭстафета = Ложь;
	ВводимДопТитулПереадресовки = Ложь;
	ВводимТитулКорректировкиСтоимости = Ложь;
	ВводимТитулКорректировкиЭстафета = Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8;
	ВводимТитулПереадресовки = Ложь;
	ВводимТитулУказаниеПереадресовки = Ложь;
	ВводимДопТитулУказаниеПереадресовки = Ложь;
	
	УстановитьВидимостьСтраницы(Элементы.СтраницаСодИнфЗамен);
	
	РазместитьНавигацию("ТитулПеревозчикаЗамены");
	
	СохранитьТекущийШагПомощника();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулКорректировкиЭстафетаДоп()
	
	ВводимДопТитулКорректировкиЭстафета = Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8;
	ВводимДопТитулПереадресовки = Ложь;
	ВводимТитулКорректировкиСтоимости = Ложь;
	ВводимТитулКорректировкиЭстафета = Ложь;
	ВводимТитулПереадресовки = Ложь;
	ВводимТитулУказаниеПереадресовки = Ложь;
	ВводимДопТитулУказаниеПереадресовки = Ложь;
	
	УстановитьВидимостьСтраницы(Элементы.СтраницаДопСодИнфЗамен);
	
	РазместитьНавигациюДоп("ДопТитулПеревозчикаЗамены");
	
	СохранитьТекущийШагПомощника();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулПлатеж()
	
	ВводимДопТитулКорректировкиЭстафета = Ложь;
	ВводимДопТитулПереадресовки = Ложь;
	ВводимТитулКорректировкиСтоимости = Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5;
	ВводимТитулКорректировкиЭстафета = Ложь;
	ВводимТитулПереадресовки = Ложь;
	ВводимТитулУказаниеПереадресовки = Ложь;
	ВводимДопТитулУказаниеПереадресовки = Ложь;

	УстановитьВидимостьСтраницы(Элементы.СтраницаСодФХЖ1);
	
	РазместитьНавигацию("ТитулПеревозчикаФХЖ");
	
	СохранитьТекущийШагПомощника();

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулПлательщик()

	УстановитьВидимостьСтраницы(Элементы.СтраницаСодФХЖ2);
	
	РазместитьНавигацию("ТитулГрузоотправителяФХЖ");
	
	СохранитьТекущийШагПомощника();

КонецПроцедуры


&НаСервере
Функция ИмяПомощника()

	Возврат "ЭлектроннаяТранспортнаяНакладная";

КонецФункции

&НаСервере
Функция ИмяПомощникаДоп()

	Возврат "ЭлектроннаяТранспортнаяНакладнаяДоп";

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусПереадресовки(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ТитулПереадресовкаИдентификаторФайла) Тогда
		Возврат 2;
	ИначеЕсли Форма.ВводимТитулПереадресовки 
		Или Форма.ВводимТитулУказаниеПереадресовки
		Или ЗначениеЗаполнено(Форма.Объект.ТитулУказаниеПереадресИдентификаторФайла) Тогда
		Возврат 1;
	КонецЕсли;
	
	Возврат 0; 
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусПереадресовкиДоп(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ДопТитулПереадресовкаИдентификаторФайла) Тогда
		Возврат 2;
	ИначеЕсли Форма.ВводимДопТитулПереадресовки Тогда
		Возврат 1;
	КонецЕсли;
	
	Возврат 0; 
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусЗамены(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ТитулПеревозчикаЗаменыИдентификаторФайла) Тогда
		Возврат 2;
	ИначеЕсли Форма.ВводимТитулКорректировкиЭстафета Тогда
		Возврат 1;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции


&НаКлиентеНаСервереБезКонтекста
Функция ПереадресовкаДоЗамены(Форма)
	
	НомерШагаАДР = 3;
	НомерШагаЗАМ = 4;
	Если СтатусПереадресовки(Форма) > 0 И СтатусЗамены(Форма) > 0 Тогда
		Если ЗначениеЗаполнено(Форма.Объект.ТитулПеревозчикаЗаменыДатаФормированияФайла) 
			И ЗначениеЗаполнено(Форма.Объект.ТитулПереадресовкаДатаФормированияФайла) = Ложь Тогда
			НомерШагаАДР = 4;
			НомерШагаЗАМ = 3;
		ИначеЕсли ЗначениеЗаполнено(Форма.Объект.ТитулПеревозчикаЗаменыДатаФормированияФайла) 
			И ЗначениеЗаполнено(Форма.Объект.ТитулПереадресовкаДатаФормированияФайла) Тогда		
			ДатаВремяПереадресовки = Форма.Объект.ТитулПереадресовкаДатаФормированияФайла 
										+ 60 * 60 * Час(Форма.Объект.ТитулПереадресовкаВремяФормированияФайла)
										+ 60 * Минута(Форма.Объект.ТитулПереадресовкаВремяФормированияФайла)
										+ Секунда(Форма.Объект.ТитулПереадресовкаВремяФормированияФайла);
			ДатаВремяЗамены = Форма.Объект.ТитулПеревозчикаЗаменыДатаФормированияФайла 
										+ 60 * 60 * Час(Форма.Объект.ТитулПеревозчикаЗаменыВремяФормированияФайла)
										+ 60 * Минута(Форма.Объект.ТитулПеревозчикаЗаменыВремяФормированияФайла)
										+ Секунда(Форма.Объект.ТитулПеревозчикаЗаменыВремяФормированияФайла);
			Если ДатаВремяПереадресовки > ДатаВремяЗамены Тогда
				НомерШагаАДР = 4;	
				НомерШагаЗАМ = 3;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли СтатусПереадресовки(Форма) = 0 И СтатусЗамены(Форма) > 0 Тогда
		НомерШагаАДР = 4;
		НомерШагаЗАМ = 3;
	КонецЕсли; 
	
	Возврат НомерШагаАДР < НомерШагаЗАМ;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусЗаменыДоп(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ДопТитулПеревозчикаЗаменыИдентификаторФайла) Тогда
		Возврат 2;
	ИначеЕсли Форма.ВводимДопТитулКорректировкиЭстафета Тогда
		Возврат 1;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусКорректировкиСтоимости(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ТитулПеревозчикаФХЖИдентификаторФайла) Тогда
		Возврат 2;
	ИначеЕсли Форма.ВводимТитулКорректировкиСтоимости Тогда
		Возврат 1;
	КонецЕсли;
	
	Возврат 0; 
	
КонецФункции

&НаСервере
Функция НавигацияПомощника()
	
	ВсегоШагов = ВсегоШагов(ЭтотОбъект);
	
	СтруктураНавигации = Новый Структура;
	
	НомерШага = 1;
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаНачало(НомерШага));
	
	НомерШага = НомерШага + 1;
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаПогрузка(НомерШага));
	
	СдвигШаговСКонца = 0;
	Если СтатусКорректировкиСтоимости(ЭтотОбъект) > 0 Тогда
		СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(ВсегоШагов - 1), СтруктураШагаПлатеж(ВсегоШагов - 1));
		СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(ВсегоШагов), СтруктураШагаПлательщик(ВсегоШагов));
		СдвигШаговСКонца = 2;	
	КонецЕсли;
	
	// ГИС пока не поддерживает Т9
	// Если СтатусПереадресовки(ЭтотОбъект) > 0 Тогда
	// 	НомерШага = НомерШага + ?(ПереадресовкаДоЗамены(ЭтотОбъект), 1, 2);
	// 	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаУказаниеПереадресовки(НомерШага));	
	// КонецЕсли;
	
	Если СтатусПереадресовки(ЭтотОбъект) > 0 Тогда
		НомерШага = НомерШага + ?(ПереадресовкаДоЗамены(ЭтотОбъект), 1, 2);
		СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаПереадресовки(НомерШага));	
	КонецЕсли;
	
	Если СтатусЗамены(ЭтотОбъект) > 0 Тогда
		НомерШага = НомерШага + ?(СтатусПереадресовки(ЭтотОбъект) = 0 Или ПереадресовкаДоЗамены(ЭтотОбъект), 1, -1);
		СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаКорректировкаЭстафета(НомерШага));	
	КонецЕсли;	
	
	НомерШага = ВсегоШагов - СдвигШаговСКонца - 1;
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаПриемка(НомерШага));
	
	НомерШага = ВсегоШагов - СдвигШаговСКонца;
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаРазгрузка(НомерШага));
	
	Для Каждого КиЗ Из СтруктураНавигации Цикл
		Титул = ОбменСГИСЭПДКлиентСервер.ТитулПоПрефиксу("Документ.ЭлектроннаяТранспортнаяНакладная", КиЗ.Значение.СтруктураПараметровФормы.НавигацияПараметрФормы);
		ШагВыполнен = Ложь;
		Для Каждого СтрВерсия Из ВерсииТитулов Цикл
			Если СтрВерсия.Титул = Титул И СтрВерсия.ИдентификаторФайла <> "" Тогда
				ШагВыполнен = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		КиЗ.Значение.Выполнен = ШагВыполнен; 	
		КиЗ.Значение.Доступен = КиЗ.Значение.Доступен Или КиЗ.Значение.Выполнен;
	КонецЦикла;
	
	Возврат СтруктураНавигации;
	
КонецФункции

&НаСервере
Функция НавигацияПомощникаДоп()
	
	СтруктураНавигации = Новый Структура;
	
	НомерШага = 10;
	// ГИС пока не поддерживает Т9
	// СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаУказаниеПереадресовкиДоп(НомерШага));
	// НомерШага = НомерШага + 1;
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаПереадресовкиДоп(НомерШага));
	
	Если СтатусЗаменыДоп(ЭтотОбъект) > 0 Тогда
		НомерШага = НомерШага + 1;
		СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаКорректировкаЭстафетаДоп(НомерШага));	
	КонецЕсли;	
	
	НомерШага = НомерШага + 1;
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаПриемкаДоп(НомерШага));
	
	НомерШага = НомерШага + 1;
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаРазгрузкаДоп(НомерШага));
	
	Для Каждого КиЗ Из СтруктураНавигации Цикл
		Титул = ОбменСГИСЭПДКлиентСервер.ТитулПоПрефиксу("Документ.ЭлектроннаяТранспортнаяНакладная", КиЗ.Значение.СтруктураПараметровФормы.НавигацияПараметрФормы);
		ШагВыполнен = Ложь;
		Для Каждого СтрВерсия Из ВерсииТитулов Цикл
			Если СтрВерсия.Титул = Титул И СтрВерсия.ИдентификаторФайла <> "" Тогда
				ШагВыполнен = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		КиЗ.Значение.Выполнен = ШагВыполнен;	
	КонецЦикла;
	
	Возврат СтруктураНавигации;
	
КонецФункции

&НаСервере
Функция СтруктураШагаНачало(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Оформление'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулГрузоотправителя";
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулГрузоотправителяИдентификаторФайла); 
	СтруктураШага.Доступен = Истина;
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулГрузоотправителя");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаПогрузка(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Погрузка'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулПеревозчикаПриемка";
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулПеревозчикаПриемкаИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулПеревозчикаПриемка");
	Возврат СтруктураШага;
	
КонецФункции

// ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД

&НаКлиенте
Процедура Подключаемый_НадписьМПОткрытьНажатие(Элемент)
	
	ОбменСГИСЭПДКлиент.НадписьМПОткрытьНажатие(ЭтотОбъект, ИдентификаторОтправителя());
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НадписьМППозвонитьНажатие(Элемент)
	
	ОбменСГИСЭПДКлиент.НадписьМППозвонитьНажатие(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаВыбратьМПНажатие(Элемент)
	
	ОбменСГИСЭПДКлиент.КомандаВыбратьМПНажатие(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НадписьСтатусаМобильноеПриложениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ПроверитьПодписьМП") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.НадписьСтатусаМобильноеПриложениеОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД

// ГИС пока не поддерживает титул указания о переадресовке (Т9)
// &НаСервере
// Функция СтруктураШагаУказаниеПереадресовки(НомерШага)
//	
//	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9"));
//	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
//	
//	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
//	СтруктураШага.ИмяПомощника   = ИмяПомощника();
//	СтруктураШага.НомерШага      = НомерШага;
//	СтруктураШага.ТекстНавигации = НСтр("ru='Указание о переадресовке'");
//	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулУказаниеПереадрес";
//	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулУказаниеПереадресИдентификаторФайла);
//	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9");
//	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
//	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулУказаниеПереадрес");
//	Возврат СтруктураШага;
//	
// КонецФункции

// ГИС пока не поддерживает титул указания о переадресовке (Т9)
// &НаСервере
// Функция СтруктураШагаУказаниеПереадресовкиДоп(НомерШага)
//	
//	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9"));
//	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
//	
//	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
//	СтруктураШага.ИмяПомощника   = ИмяПомощника();
//	СтруктураШага.НомерШага      = НомерШага;
//	СтруктураШага.ТекстНавигации = НСтр("ru='Указание о переадресовке (возврат)'");
//	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ДопТитулУказаниеПереадрес";
//	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ДопТитулУказаниеПереадресИдентификаторФайла);
//	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9");
//	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
//	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ДопТитулУказаниеПереадрес");
//	Возврат СтруктураШага;
//	
// КонецФункции

&НаСервере
Функция СтруктураШагаПереадресовки(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Переадресовка'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулПереадресовка";
	СтруктураШага.Выполнен = СтатусПереадресовки(ЭтотОбъект) = 2;
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулПереадресовка");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаПереадресовкиДоп(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощникаДоп();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Переадресовка
											|(возврат)'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ДопТитулПереадресовка";
	СтруктураШага.Выполнен = СтатусПереадресовкиДоп(ЭтотОбъект) = 2;
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ДопТитулПереадресовка");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаКорректировкаЭстафета(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Замена'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулПеревозчикаЗамены";
	СтруктураШага.Выполнен = СтатусЗамены(ЭтотОбъект) = 2;
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулПеревозчикаЗамены");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаКорректировкаЭстафетаДоп(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощникаДоп();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Замена
											|(возврат)'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ДопТитулПеревозчикаЗамены";
	СтруктураШага.Выполнен = СтатусЗаменыДоп(ЭтотОбъект) = 2;
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ДопТитулПеревозчикаЗамены");
	Возврат СтруктураШага;
	
КонецФункции


&НаСервере
Функция СтруктураШагаПриемка(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Приемка'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулГрузополучателя";
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулГрузополучателяИдентификаторФайла); 
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулГрузополучателя");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаПриемкаДоп(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощникаДоп();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Приемка
											|(возврат)'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ДопТитулГрузополучателя";
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ДопТитулГрузополучателяИдентификаторФайла); 
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ДопТитулГрузополучателя");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаРазгрузка(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Разгрузка'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулПеревозчикаВыдача";
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулПеревозчикаВыдачаИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулПеревозчикаВыдача");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаРазгрузкаДоп(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощникаДоп();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Разгрузка
											|(возврат)'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ДопТитулПеревозчикаВыдача";
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ДопТитулПеревозчикаВыдачаИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ДопТитулПеревозчикаВыдача");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаПлатеж(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Согласование
											|оплаты'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулПеревозчикаФХЖ";
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулПеревозчикаФХЖИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулПеревозчикаФХЖ");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаПлательщик(НомерШага)
	
	Отбор = Новый Структура("Титул", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6"));
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Подтверждение оплаты'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулГрузоотправителяФХЖ";
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулГрузоотправителяФХЖИдентификаторФайла); 
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6");
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулГрузоотправителяФХЖ");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция ОтображаемаяВерсияТитула(СтрокиВерсий, ТитулСтрока)
	
	МаксВерсия = 0;
	Для Каждого СтрокаТЗ Из СтрокиВерсий Цикл
		Если СтрокаТЗ.НомерВерсии > МаксВерсия Тогда
			МаксВерсия = СтрокаТЗ.НомерВерсии;
		КонецЕсли;
	КонецЦикла;
	
	Если ОтображаемыеВерсииТитулов = Неопределено Тогда
		ОтображаемыеВерсииТитулов = Новый Структура;
		ОтображаемыеВерсииТитулов.Вставить(ТитулСтрока, МаксВерсия);
		Возврат МаксВерсия;
	КонецЕсли;
	
	ТекущееЗначениеВерсии = Неопределено;
	ОтображаемыеВерсииТитулов.Свойство(ТитулСтрока, ТекущееЗначениеВерсии);
	
	Если ТекущееЗначениеВерсии = Неопределено Тогда
		ОтображаемыеВерсииТитулов.Вставить(ТитулСтрока, МаксВерсия);
		Возврат МаксВерсия;
	Иначе
		Возврат ТекущееЗначениеВерсии;		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыПоследнейВерсии(Титул = Неопределено)
	
	СтрокиВерсий = ВерсииТитулов.Выгрузить();
	СтрокиВерсий.Сортировать("Титул, НомерВерсии Убыв");
	
	ОбработанныеТитулы = Новый Массив;
	Для Каждого СтрокаВерсии Из СтрокиВерсий Цикл
		Если Титул <> Неопределено И СтрокаВерсии.Титул <> Титул Тогда
			Продолжить;
		КонецЕсли;
		Если ОбработанныеТитулы.Найти(СтрокаВерсии.Титул) <> Неопределено Тогда
			Если Титул = Неопределено Тогда
				Продолжить;
			Иначе
				Прервать;
			КонецЕсли;
		КонецЕсли;
		СтрокиВерсий.Сортировать("НомерВерсии Убыв");
		НомерВерсии = СтрокиВерсий[0].НомерВерсии;
		
		РеквизитыТекущейВерсииТитула = ОбменСГИСЭПД.ПолучитьВерсиюТитулаДокумента(СтруктураРеквизитов, СтрокаВерсии.Титул, НомерВерсии);
		ОбменСГИСЭПД.ЗаполнитьРеквизитыПоВерсии(ЭтотОбъект, СтрокаВерсии.Титул, НомерВерсии, РеквизитыТекущейВерсииТитула);

		ОбработанныеТитулы.Добавить(СтрокаВерсии.Титул);
	КонецЦикла;
	
	Если Титул <> Неопределено И ОбработанныеТитулы.Количество() = 0 Тогда
		ОбменСГИСЭПД.ЗаполнитьРеквизитыПоВерсии(ЭтотОбъект, Титул, 0, Новый Структура);	
	КонецЕсли;
	
	ЗаполнитьПредставленияАдресов(Титул);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыОтображаемойВерсии(ВыбранныйТитулСтрока, ОтмечатьТекущий)
	
	ВыбранныйТитул = ОбменСГИСЭПДКлиентСервер.ТитулПоПрефиксу("Документ.ЭлектроннаяТранспортнаяНакладная", ВыбранныйТитулСтрока); 
	
	Если ЗначениеЗаполнено(ВыбранныйТитул) Тогда
		Отбор = Новый Структура("Титул", ВыбранныйТитул);
		СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
		СтрокиВерсий.Сортировать("НомерВерсии");	
		НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, ВыбранныйТитулСтрока);
		
		РеквизитыТекущейВерсииТитула = ОбменСГИСЭПД.ПолучитьВерсиюТитулаДокумента(СтруктураРеквизитов, ВыбранныйТитул, НомерВерсии);
		ОбменСГИСЭПД.ЗаполнитьРеквизитыПоВерсии(ЭтотОбъект, ВыбранныйТитул, НомерВерсии, РеквизитыТекущейВерсииТитула);
		ЗаполнитьПредставленияАдресов(ВыбранныйТитул);
		Если ОтмечатьТекущий = Истина Тогда
			СтруктураСТекущимиДанными = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
			СтруктураДанныхОбъекта = Неопределено;
			СтруктураСДаннымиФормыДляОформленияКнопок = ОбменСГИСЭПДКлиентСервер.СтруктураСДаннымиФормыДляОформленияКнопок(ЭтотОбъект);
			
			Результат = ИзменитьОформлениеКнопокНаСервере(СтруктураСТекущимиДанными,
				Неопределено,
				Неопределено,
				СтруктураДанныхОбъекта,
				СтруктураСДаннымиФормыДляОформленияКнопок);
				
			Если Результат.Успешно Тогда
				ЭтотОбъект.АдресДереваСоответствийИтаблицыКнопок = Результат.НовыйАдресВХранилище;	
				МассивОформления = Результат.МассивОформления;
				ОбменСГИСЭПДКлиентСервер.ОформлениеКнопокНаФорме(ЭтотОбъект, СтруктураСТекущимиДанными, МассивОформления);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РазместитьНавигацию(ВыбранныйТитулСтрока, ОтмечатьТекущий = Истина)

	НавигацияПараметрФормы = ВыбранныйТитулСтрока;
	
	ЗаполнитьРеквизитыОтображаемойВерсии(ВыбранныйТитулСтрока, ОтмечатьТекущий);

	СтруктураНавигацииПомощника = НавигацияПомощника();
	НавигацияПомощниковСВозвратомЭПД.РазместитьНавигацию(ЭтотОбъект, СтруктураНавигацииПомощника, Параметры, , , ОтмечатьТекущий);

КонецПроцедуры

&НаСервере
Процедура РазместитьНавигациюДоп(ВыбранныйТитулСтрока, ОтмечатьТекущий = Истина)

	НавигацияПараметрФормы = ВыбранныйТитулСтрока;
	
	ЗаполнитьРеквизитыОтображаемойВерсии(ВыбранныйТитулСтрока, ОтмечатьТекущий);

	СтруктураНавигацииПомощника = НавигацияПомощникаДоп();
	СдвигДопНавигации = 3;
	СдвигДопНавигации = СдвигДопНавигации + ?(СтатусПереадресовки(ЭтотОбъект) > 0, 1, 0) + ?(СтатусЗамены(ЭтотОбъект) > 0, 1, 0);
	НавигацияПомощниковСВозвратомЭПД.РазместитьНавигацию(ЭтотОбъект, СтруктураНавигацииПомощника, Параметры, СдвигДопНавигации, "Доп", ОтмечатьТекущий);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеШага(ИмяШага, НавигационнаяСсылка)
	
	ИнкрементВерсии = 0;
	Если НавигационнаяСсылка = "Влево" Тогда
		ИнкрементВерсии = -1;
	ИначеЕсли НавигационнаяСсылка = "Вправо" Тогда
		ИнкрементВерсии = 1;
	КонецЕсли;
	
	ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1");
	Если ИмяШага = "Шаг10" Или ИмяШага = "Шаг11" Или ИмяШага = "Шаг12" Или ИмяШага = "Шаг13" Тогда
		ВсегоШагов = ВсегоШаговДоп(ЭтотОбъект);	
		Если ИмяШага = "Шаг10" Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ДопТитулПереадресовка", ИнкрементВерсии);
			УстановитьВидимостьСтраницыНачалоДоп();
		ИначеЕсли ИмяШага = "Шаг11" И СтатусЗаменыДоп(ЭтотОбъект) > 0 Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ДопТитулПеревозчикаЗамены", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулКорректировкиЭстафетаДоп();
		ИначеЕсли ИмяШага = "Шаг" + Строка(9 + ВсегоШагов - 1) Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ДопТитулГрузополучателя", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулГрузополучателяДоп();
		ИначеЕсли ИмяШага = "Шаг" + Строка(9 + ВсегоШагов) Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ДопТитулПеревозчикаВыдача", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулПеревозчикаПриРазгрузкеДоп();
		КонецЕсли;
		УстановитьВидимостьСтраницыНачало(Ложь);
	Иначе 
		ВсегоШагов = ВсегоШагов(ЭтотОбъект);
		
		Если ИмяШага = "Шаг1" Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулГрузоотправителя", ИнкрементВерсии);
			УстановитьВидимостьСтраницыНачало();
		ИначеЕсли ИмяШага = "Шаг2" Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулПеревозчикаПриемка", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулПеревозчика();
		// ГИС пока не поддерживает Т9
		// ИначеЕсли ИмяШага = "Шаг" + Строка(?(ПереадресовкаДоЗамены(ЭтотОбъект), 3, 4)) И СтатусПереадресовки(ЭтотОбъект) > 0 Тогда
		// 	ИнкрементироватьОтображаемуюВерсиюТитула("ТитулУказаниеПереадрес", ИнкрементВерсии);
		// 	УстановитьВидимостьСтраницыТитулУказаниеПереадресовки();
		ИначеЕсли ИмяШага = "Шаг" + Строка(?(ПереадресовкаДоЗамены(ЭтотОбъект), 3, 4)) И СтатусПереадресовки(ЭтотОбъект) > 0 Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулПереадресовка", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулПереадресовки();
		ИначеЕсли ИмяШага = "Шаг" + Строка(?(ПереадресовкаДоЗамены(ЭтотОбъект), 4, 3)) И СтатусЗамены(ЭтотОбъект) > 0 Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулПеревозчикаЗамены", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулКорректировкиЭстафета();	
		ИначеЕсли ИмяШага = "Шаг" + Строка(ВсегоШагов - 1 - ?(СтатусКорректировкиСтоимости(ЭтотОбъект) > 0, 2, 0)) Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулГрузополучателя", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулГрузополучателя();
		ИначеЕсли ИмяШага = "Шаг" + Строка(ВсегоШагов - ?(СтатусКорректировкиСтоимости(ЭтотОбъект) > 0, 2, 0)) Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулПеревозчикаВыдача", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулПеревозчикаПриРазгрузке();
		ИначеЕсли ИмяШага = "Шаг" + Строка(ВсегоШагов - 1) И СтатусКорректировкиСтоимости(ЭтотОбъект) > 0 Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулПеревозчикаФХЖ", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулПлатеж();
		ИначеЕсли ИмяШага = "Шаг" + Строка(ВсегоШагов) И СтатусКорректировкиСтоимости(ЭтотОбъект) = 2 Тогда
			ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6");
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулГрузоотправителяФХЖ", ИнкрементВерсии);
			УстановитьВидимостьСтраницыТитулПлательщик();
		КонецЕсли;
		УстановитьВидимостьСтраницыНачалоДоп(Ложь);
	КонецЕсли;
	
	ОбменСГИСЭПДКлиент.ОтображениеМобильногоПриложения(ЭтотОбъект, ТитулШага);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект);
	
	Элементы.ФормаИныеПолучатели.Видимость = Истина;
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСодФХЖ1
		Или Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСодФХЖ2
		Или Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСодИнфПА
		Или Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДопСодИнфПА Тогда
			Элементы.ФормаИныеПолучатели.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ТитулГрузоотправителяЭкспедиторПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулГрузоотправителяОтправлятьQRПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОтображениеОтправкиQR();
	
КонецПроцедуры


&НаКлиенте
Процедура ВариантПриемкиПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
	КонтейнерОтображаемойВерсии = Неопределено;
	Если ВариантПриемки = 2 Тогда
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
			ЭтотОбъект, "ТитулГрузополучателяСодержаниеОперацииПриемГруза", Неопределено, , КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
			ЭтотОбъект, "ТитулГрузополучателяСодержаниеОперацииОтказВПриемеГруза", 
			"Лицом, управомоченным на получение груза, при указанных обстоятельствах отказано в принятии от перевозчика груза с указанными характеристиками", , КонтейнерОтображаемойВерсии);		
	Иначе
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
			ЭтотОбъект, "ТитулГрузополучателяСодержаниеОперацииОтказВПриемеГруза", Неопределено, , КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
			ЭтотОбъект, "ТитулГрузополучателяСодержаниеОперацииПриемГруза", 
			"Лицом, управомоченным на получение груза, при указанных обстоятельствах принят от перевозчика груз с указанными характеристиками", , КонтейнерОтображаемойВерсии);
	КонецЕсли;
	
	ИзменитьОформлениеКнопок(Новый ФиксированнаяСтруктура("ИмяКнопки, ИдентификаторСтроки"));
	
КонецПроцедуры


&НаКлиенте
Процедура ВариантПриемкиДопПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
	КонтейнерОтображаемойВерсии = Неопределено;
	Если ВариантПриемкиДоп = 2 Тогда
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
			ЭтотОбъект, "ДопТитулГрузополучателяСодержаниеОперацииПриемГруза", Неопределено, , КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
			ЭтотОбъект, "ДопТитулГрузополучателяСодержаниеОперацииОтказВПриемеГруза", 
			"Лицом, управомоченным на получение груза, при указанных обстоятельствах отказано в принятии от перевозчика груза с указанными характеристиками", , КонтейнерОтображаемойВерсии);		
	Иначе
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
			ЭтотОбъект, "ДопТитулГрузополучателяСодержаниеОперацииОтказВПриемеГруза", Неопределено, , КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
			ЭтотОбъект, "ДопТитулГрузополучателяСодержаниеОперацииПриемГруза", 
			"Лицом, управомоченным на получение груза, при указанных обстоятельствах принят от перевозчика груз с указанными характеристиками", , КонтейнерОтображаемойВерсии);
	КонецЕсли;
	
	ИзменитьОформлениеКнопок(Новый ФиксированнаяСтруктура("ИмяКнопки, ИдентификаторСтроки"));
	
КонецПроцедуры


&НаКлиенте
Процедура ВариантПогрузкиПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантВыгрузкиПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаФХЖНалоговаяСтавкаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаФХЖСуммаНДСПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаФХЖСтоимостьПеревозкиСНалогомПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаФХЖПорядокМеханизмРасчетаПлатыПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры




&НаКлиенте
Процедура ТитулПеревозчикаЗаменыСодержаниеОперацииПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
	КонтейнерОтображаемойВерсии = Неопределено;
	Если СтрНайти(ТитулПеревозчикаЗаменыСодержаниеОперации, "водител") = 0 Тогда
		ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(ЭтотОбъект, 
			"ТитулПеревозчикаЗаменыЗаменыВодителей", , КонтейнерОтображаемойВерсии);	
	ИначеЕсли СтрНайти(ТитулПеревозчикаЗаменыСодержаниеОперации, "водителя") > 0 Тогда
		ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(ЭтотОбъект, 
			"ТитулПеревозчикаЗаменыЗаменыВодителей", 1, КонтейнерОтображаемойВерсии, Истина);
	КонецЕсли;
	
	Если СтрНайти(ТитулПеревозчикаЗаменыСодержаниеОперации, "транспорт") = 0 Тогда
		ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(ЭтотОбъект, 
			"ТитулПеревозчикаЗаменыТранспортныеСредства", , КонтейнерОтображаемойВерсии);	
	ИначеЕсли СтрНайти(ТитулПеревозчикаЗаменыСодержаниеОперации, "транспортного средства") > 0 Тогда
		ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(ЭтотОбъект, 
			"ТитулПеревозчикаЗаменыТранспортныеСредства", 1, КонтейнерОтображаемойВерсии, Истина);
	КонецЕсли;
	
	ИзменитьОформлениеКнопок(Новый ФиксированнаяСтруктура("ИмяКнопки, ИдентификаторСтроки"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяПричинаОтказаВПриемеГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяФактическиеДатаВремяПрибытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяФактическиеДатаВремяУбытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяЗаявленныеДатаВремяПрибытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяКодМетодаОпределенияМассыГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяОбщееКоличествоПринятыхГрузовыхМестПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяФактическоеСостояниеГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяМассаБруттоПринятогоГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяМассаНеттоПринятогоГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулГрузополучателяОбъемГрузовыхМестПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаВыдачаДатаВремяПрибытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаВыдачаДатаВремяУбытияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаВыдачаДатаИВремяПостановкиНаВыгрузкуПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаВыдачаЗамечанияВОтношенииФактическогоСостоянияГрузаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаВыдачаЗамечанияВОтношенииПроведенияРаботПоВыгрузкеПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры
















&НаКлиенте
Процедура ДопТитулПеревозчикаЗаменыДатаВремяЗаменыПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаЗаменыПричинаЗаменыПроизвольныйТекстПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаЗаменыДокументНаименованиеПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаЗаменыДокументНомерПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаЗаменыДокументДатаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ДопТитулПеревозчикаЗаменыДокументДополнительныеСведенияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры







&НаКлиенте
Процедура ТитулПеревозчикаЗаменыДатаВремяЗаменыПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаЗаменыПричинаЗаменыПроизвольныйТекстПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаЗаменыДокументНаименованиеПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаЗаменыДокументНомерПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаЗаменыДокументДатаПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаЗаменыДокументДополнительныеСведенияПриИзменении(Элемент)
		
	ПриИзмененииДанныхНаФорме(Элемент.Имя);

КонецПроцедуры







&НаКлиенте
Процедура ВариантПричиныЗаменыПриИзменении(Элемент)
	
	КонтейнерОтображаемойВерсии = Неопределено;
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснования(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	МассивДокументов = Новый Массив;
	Для Каждого СтрТаб Из Объект.ДокументыОснования Цикл
		МассивДокументов.Добавить(СтрТаб.ДокументОснование);	
	КонецЦикла;
	
	ПараметрыФормы.Вставить("МассивДокументов", МассивДокументов);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1"));
	
	ОписаниеДокументыОснование_Закрытие = Новый ОписаниеОповещения("ДокументыОснование_Закрытие", ЭтотОбъект, ПараметрыФормы);
	
	ОткрытьФорму("Документ.ЭлектроннаяТранспортнаяНакладная.Форма.ДокументыОснования", ПараметрыФормы, ЭтотОбъект, 
					УникальныйИдентификатор, , , ОписаниеДокументыОснование_Закрытие, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
					
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснование_Закрытие(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		Объект.ДокументыОснования.Очистить();
		Для Каждого Документ Из Результат Цикл
			НовСтр = Объект.ДокументыОснования.Добавить();	
			НовСтр.ДокументОснование = Документ;	
		КонецЦикла;	
		Модифицированность = Истина;
		ОбменСГИСЭПДКлиентПереопределяемый.ОбработкаЗаполненияНаФормеЭТрН(ЭтотОбъект, Результат);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыгрузитьВФайл(Команда)
	
	Результат = ОбменСГИСЭПДВызовСервера.ДвоичныеДанныеДокументаЭПД(Объект.Ссылка, УникальныйИдентификатор);
	
	Если Результат.ДвоичныеДанные <> Неопределено Тогда
		ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов;
		ПараметрыДиалога.Заголовок = НСтр("ru = 'Выберите путь для сохранения файла'");
		
		НачатьПолучениеФайлаССервера(Результат.ДвоичныеДанные, Результат.ИмяФайла, ПараметрыДиалога);
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='Нет доступного титула'"), , );	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ИдентификаторОтправителя()
	
	ТипОрганизация = ОбменСГИСЭПДВызовСервера.ПолучитьТипОрганизация();
	Если Объект.ЭтоВходящий = Истина Тогда
		Если ТипЗнч(Объект.СсылкаТитулГрузоотправителяПеревозчик) = ТипОрганизация Тогда
			Результат = Объект.ИдентификаторПеревозчика;
		Иначе
			Результат = Объект.ИдентификаторГрузополучателя;
		КонецЕсли;
	Иначе
		Результат = Объект.ИдентификаторГрузоотправителя;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьУчастников(ЭтоНастройкаПередОтправкой = Ложь)
	
	КлючНастроекОтправки = НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки();
	КлючНастроекОтправки.ВидДокумента = Объект.ВидДокумента;
	
	КлючНастроекОтправкиСледующий = НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки();
	КлючНастроекОтправкиСледующий.ВидДокумента = Объект.ВидДокумента;
	
	СсылкаГрузополучатель = ТекущийГрузополучатель(Объект);
	
	Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяСоставитель) Тогда
		СоставительПервогоТитула = Объект.СсылкаТитулГрузоотправителяСоставитель;
	Иначе
		СоставительПервогоТитула = Объект.СсылкаТитулГрузоотправителяГрузоотправитель;	
	КонецЕсли;

	ТипОрганизация = ОбменСГИСЭПДВызовСервера.ПолучитьТипОрганизация();
	Если Объект.ЭтоВходящий = Истина Тогда
		Если ТипЗнч(Объект.СсылкаТитулГрузоотправителяПеревозчик) = ТипОрганизация Тогда
			КлючНастроекОтправки.Отправитель = Объект.СсылкаТитулГрузоотправителяПеревозчик;
			КлючНастроекОтправки.Получатель = СоставительПервогоТитула;
			КлючНастроекОтправкиСледующий.Отправитель = Объект.СсылкаТитулГрузоотправителяПеревозчик;
			КлючНастроекОтправкиСледующий.Получатель = СсылкаГрузополучатель;
		Иначе
			КлючНастроекОтправки.Отправитель = СсылкаГрузополучатель;
			КлючНастроекОтправки.Получатель = Объект.СсылкаТитулГрузоотправителяПеревозчик;
			КлючНастроекОтправкиСледующий.Отправитель = СсылкаГрузополучатель;
			КлючНастроекОтправкиСледующий.Получатель = СоставительПервогоТитула;
		КонецЕсли;
	Иначе
		КлючНастроекОтправки.Отправитель = СоставительПервогоТитула;
		КлючНастроекОтправки.Получатель = Объект.СсылкаТитулГрузоотправителяПеревозчик; 
		КлючНастроекОтправкиСледующий.Отправитель = СоставительПервогоТитула;
		КлючНастроекОтправкиСледующий.Получатель = СсылкаГрузополучатель;
	КонецЕсли;
	
	НастройкиОтправки = НастройкиОтправкиЭДОСлужебныйВызовСервера.НастройкиОтправки(КлючНастроекОтправки);
	
	ПараметрыНастройкиОбменаСКонтрагентом = НастройкиЭДОКлиент.НовыеПараметрыНастройкиОбменаСКонтрагентом();
	ПараметрыНастройкиОбменаСКонтрагентом.НастройкаОдногоДокумента = Истина;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("КлючНастроекОтправки", КлючНастроекОтправки);
	Если СоставительПервогоТитула <> СсылкаГрузополучатель Тогда
		ДополнительныеПараметры.Вставить("КлючНастроекОтправкиСледующий", КлючНастроекОтправкиСледующий);
	КонецЕсли;
	ДополнительныеПараметры.Вставить("ПараметрыНастройкиОбменаСКонтрагентом", ПараметрыНастройкиОбменаСКонтрагентом);
	ДополнительныеПараметры.Вставить("ПараметрыЗаписи", Новый Структура);
	ДополнительныеПараметры.Вставить("ИдентификаторОтправителя", ИдентификаторОтправителя());
	ДополнительныеПараметры.Вставить("ЭтоНастройкаПередОтправкой", ЭтоНастройкаПередОтправкой);
	
	ОповещениеОкончаниеНастройки = Новый ОписаниеОповещения("ЗаполнитьУчастников_ПослеНастроек", ЭтотОбъект, ДополнительныеПараметры);
	Если НастройкиОтправки = Неопределено И ЭтоНастройкаПередОтправкой = Истина Тогда	
		НастройкиЭДОКлиент.НастроитьОбменСКонтрагентом(КлючНастроекОтправки, ОповещениеОкончаниеНастройки, ПараметрыНастройкиОбменаСКонтрагентом);
	Иначе
		ВыполнитьОбработкуОповещения(ОповещениеОкончаниеНастройки, НастройкиОтправки); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительЯвляетсяГрузополучателемПриИзменении(Элемент)
	
	Элементы.СсылкаТитулГрузоотправителяГрузополучатель.Доступность = Не ГрузоотправительЯвляетсяГрузополучателем;
	Если ГрузоотправительЯвляетсяГрузополучателем И ВариантПоДоверенности = 0 Тогда
		ОграничениеТипаГрузополучателя = ОбменСГИСЭПДКлиентСервер.ПолучитьТипОрганизация();				
	Иначе
		ОграничениеТипаГрузополучателя = ОбменСГИСЭПДКлиентСервер.ПолучитьТипКонтрагент();	
	КонецЕсли;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(ОграничениеТипаГрузополучателя);
	Элементы.СсылкаТитулГрузоотправителяГрузополучатель.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	
	Если ГрузоотправительЯвляетсяГрузополучателем Тогда
		Объект.СсылкаТитулГрузоотправителяГрузополучатель = Объект.СсылкаТитулГрузоотправителяГрузоотправитель;	
		СсылкаТитулГрузоотправителяГрузополучательПриИзменении(Элементы.СсылкаТитулГрузоотправителяГрузополучатель);
	Иначе
		Объект.СсылкаТитулГрузоотправителяГрузополучатель = Неопределено;	
	КонецЕсли;

КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Функция ТекущийГрузополучатель(Объект)
	
	Если ЗначениеЗаполнено(Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель)
		И ТипЗнч(Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель) <> Тип("СправочникСсылка.СтроковыеЗначенияЭПД") Тогда
		СсылкаГрузополучатель = Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель;
	ИначеЕсли ЗначениеЗаполнено(Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель)
		И ТипЗнч(Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель) <> Тип("СправочникСсылка.СтроковыеЗначенияЭПД") Тогда
		СсылкаГрузополучатель = Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель;
	Иначе
		СсылкаГрузополучатель = Объект.СсылкаТитулГрузоотправителяГрузополучатель;
	КонецЕсли;
	
	Возврат СсылкаГрузополучатель;
	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьУчастников_ПослеНастроек(Настройка, ДополнительныеПараметры) Экспорт
	
	Если Настройка = Неопределено Тогда
		ЭтотОбъект.Доступность = Истина;
		Возврат;
	КонецЕсли;
	
	ТекущийГрузополучатель = ТекущийГрузополучатель(Объект);
	
	Если ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяСоставитель) Тогда
		СоставительПервогоТитула = Объект.СсылкаТитулГрузоотправителяСоставитель;
	Иначе
		СоставительПервогоТитула = Объект.СсылкаТитулГрузоотправителяГрузоотправитель;	
	КонецЕсли;
	
	Если Настройка.Отправитель = СоставительПервогоТитула Тогда
		Объект.ИдентификаторГрузоотправителя = Настройка.ИдентификаторОтправителя;
	КонецЕсли;
	
	Если Настройка.Отправитель = Объект.СсылкаТитулГрузоотправителяПеревозчик Тогда
		Объект.ИдентификаторПеревозчика = Настройка.ИдентификаторОтправителя;
	КонецЕсли;
	
	Если Настройка.Отправитель = ТекущийГрузополучатель Тогда
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7")
			И Объект.ИдентификаторГрузополучателя <> Настройка.ИдентификаторОтправителя Тогда
				КлючКуда = "ТитулПереадресовкаИдентификаторыИныхПолучателейФайла__1__ИдентификаторИногоПолучателя"; 
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, КлючКуда, Настройка.ИдентификаторОтправителя);
		Иначе
			Объект.ИдентификаторГрузополучателя = Настройка.ИдентификаторОтправителя;
		КонецЕсли;
	КонецЕсли;
	
	Если Настройка.Получатель = СоставительПервогоТитула Тогда
		Объект.ИдентификаторГрузоотправителя = Настройка.ИдентификаторПолучателя;
	КонецЕсли;
	
	Если Настройка.Получатель = Объект.СсылкаТитулГрузоотправителяПеревозчик Тогда
		Объект.ИдентификаторПеревозчика = Настройка.ИдентификаторПолучателя;
	КонецЕсли;
	
	Если Настройка.Получатель = ТекущийГрузополучатель Тогда
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7")
			И Объект.ИдентификаторГрузополучателя <> Настройка.ИдентификаторПолучателя Тогда
				КлючКуда = "ТитулПереадресовкаИдентификаторыИныхПолучателейФайла__1__ИдентификаторИногоПолучателя"; 
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, КлючКуда, Настройка.ИдентификаторПолучателя);
		Иначе
			Объект.ИдентификаторГрузополучателя = Настройка.ИдентификаторПолучателя;
		КонецЕсли;
	КонецЕсли;	
	
	ЭтоНастройкаПередОтправкой = Неопределено;
	ДополнительныеПараметры.Свойство("ЭтоНастройкаПередОтправкой", ЭтоНастройкаПередОтправкой);
	Если ДополнительныеПараметры <> Неопределено И ДополнительныеПараметры.Свойство("КлючНастроекОтправкиСледующий") = Истина Тогда
		ДополнительныеПараметрыСледующий = Новый Структура;
		Для Каждого КиЗ Из ДополнительныеПараметры Цикл
			Если КиЗ.Ключ <> "КлючНастроекОтправкиСледующий" Тогда
				ДополнительныеПараметрыСледующий.Вставить(КиЗ.Ключ, КиЗ.Значение);	
			КонецЕсли;	
		КонецЦикла;
		ОповещениеОкончаниеНастройки = Новый ОписаниеОповещения("ЗаполнитьУчастников_ПослеНастроек", ЭтотОбъект, ДополнительныеПараметрыСледующий);
		
		НастройкиОтправкиСледующий = НастройкиОтправкиЭДОСлужебныйВызовСервера.НастройкиОтправки(ДополнительныеПараметры.КлючНастроекОтправкиСледующий);	
		Если НастройкиОтправкиСледующий = Неопределено И ЭтоНастройкаПередОтправкой = Истина Тогда		
			НастройкиЭДОКлиент.НастроитьОбменСКонтрагентом(ДополнительныеПараметры.КлючНастроекОтправкиСледующий, 
																ОповещениеОкончаниеНастройки, 
																ДополнительныеПараметры.ПараметрыНастройкиОбменаСКонтрагентом);
		Иначе
			ВыполнитьОбработкуОповещения(ОповещениеОкончаниеНастройки, НастройкиОтправкиСледующий);	
		КонецЕсли;
		Возврат;
	КонецЕсли;
																		
	ИзмененСоставУчастников = Ложь;
	
	Если ЭтоНастройкаПередОтправкой = Истина
		И ЗначениеЗаполнено(Объект.ИдентификаторГрузоотправителя)
		И ЗначениеЗаполнено(Объект.ИдентификаторГрузополучателя)
		И ЗначениеЗаполнено(Объект.ИдентификаторПеревозчика) Тогда
			ОтправитьЧерезЭДОПослеЗаписи();
	Иначе
		ЭтотОбъект.Доступность = Истина;
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИмяФайла(Шаблон, ИдГрузоотправителя, ИдГрузополучателя, ИдПеревозчика, НаличиеДругихПолучателей = Ложь)
	
	#Если Сервер Тогда
		ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	#Иначе
		ТекущаяДатаСеанса = ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли
	
	Результат = Шаблон;
	Результат = СтрЗаменить(Результат, "ИдГО", ИдГрузоотправителя);
	Результат = СтрЗаменить(Результат, "ИдПЕР", ИдПеревозчика);
	Результат = СтрЗаменить(Результат, "ИдГП", ИдГрузополучателя);
	Результат = СтрЗаменить(Результат, "GGGGMMDD", Формат(ТекущаяДатаСеанса, "ДФ=ггггММдд"));
	Результат = СтрЗаменить(Результат, "ГУИДФайла", Строка(Новый УникальныйИдентификатор()));
	Результат = СтрЗаменить(Результат, "НалДр", ?(НаличиеДругихПолучателей = Истина, "1", "0"));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция УстановитьНомерДокумента()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.УстановитьНовыйНомер();
	
	Возврат ДокументОбъект.Номер;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя, Переформировать = Ложь, ОбработкаЗавершения = Неопределено)

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИнформацияПоПрефиксамТитула", ИнформацияПоПрефиксамТитула);
	ДополнительныеПараметры.Вставить("ИдентификаторОтправителя", ИдентификаторОтправителя);
	ДополнительныеПараметры.Вставить("Переформировать", Переформировать);
	ДополнительныеПараметры.Вставить("ОбработкаЗавершения", ОбработкаЗавершения);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьИдентификациюФайлаОбмена_ПослеПолученияУИД", ЭтотОбъект, ДополнительныеПараметры);
	
	Если ЗначениеЗаполнено(Объект.УИДМинтранс) Тогда
		ЗаполнитьИдентификациюФайлаОбмена_ПослеПолученияУИД(Объект.УИДМинтранс, ДополнительныеПараметры);
	Иначе
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1") Тогда
			ОбменСГИСЭПДКлиент.ПолучитьУИДМинтранса(ОписаниеОповещения, Объект.ИдентификаторГрузоотправителя);
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда
			ОбменСГИСЭПДКлиент.ПолучитьУИДМинтранса(ОписаниеОповещения, Объект.ИдентификаторПеревозчика, Истина, Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИдентификациюФайлаОбмена_ПослеПолученияУИД(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Объект.УИДМинтранс) = Ложь Тогда
		Объект.УИДМинтранс = Результат;
	КонецЕсли;
	
	ИнформацияПоПрефиксамТитула = ДополнительныеПараметры.ИнформацияПоПрефиксамТитула;
	ИдентификаторОтправителя = ДополнительныеПараметры.ИдентификаторОтправителя;
	Переформировать = ДополнительныеПараметры.Переформировать;
	
	ТребуетсяЗаполнить = Переформировать = Истина
			Или ОбменСГИСЭПДКлиент.ТребуетсяИдентификацияФайлаТитула(Объект.Ссылка, Объект.ТекущийТитул, ВерсииТитулов);
	
	Если ТребуетсяЗаполнить = Истина Тогда
		КонтейнерОтображаемойВерсии = Неопределено;
		
		ДатаИВремяФормирования = ОбщегоНазначенияКлиент.ДатаСеанса();
		ДатаФормирования = НачалоДня(ДатаИВремяФормирования);
		ВремяФормирования = Дата('00010101') + (ДатаИВремяФормирования - ДатаФормирования);
	
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1") Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяТранспортнаяНакладнаяДата", Объект.Дата, Ложь, КонтейнерОтображаемойВерсии);
			Если ЗначениеЗаполнено(Объект.Ссылка) = Ложь Тогда
				Объект.Номер = УстановитьНомерДокумента();
			КонецЕсли;	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяТранспортнаяНакладнаяНомер", Объект.Номер, Ложь, КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяСодержаниеОперации", 
				"Лицом, осуществляющим погрузку груза, при указанных обстоятельствах передан водителю груз с указанными характеристиками", , КонтейнерОтображаемойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяЗаказНомер", "Без номера", Ложь, КонтейнерОтображаемойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяУказанияВОтношенииВыполненияНормПеревозки", "Отсутствуют", Ложь, КонтейнерОтображаемойВерсии);
			
			СчетчикЦикла = 1;
			КлючСтруктуры = "ТитулГрузоотправителяГрузы__" + СчетчикЦикла + "__ИдентификаторСтроки";
			ИдентификаторСтроки = Неопределено;
			СтруктураРеквизитовТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
			Пока СтруктураРеквизитовТитула.Свойство(КлючСтруктуры, ИдентификаторСтроки) Цикл
				ЗначенияСтроки = Новый Структура("МаркировкаГруза", "Отсутствует");
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеПодчиненнойСтрокиВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяПереченьМаркировокГруза", ИдентификаторСтроки, ЗначенияСтроки, Ложь, КонтейнерОтображаемойВерсии);	
				СчетчикЦикла = СчетчикЦикла + 1;
				КлючСтруктуры = "ТитулГрузоотправителяГрузы__" + СчетчикЦикла + "__ИдентификаторСтроки";
			КонецЦикла;
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем", "1", Ложь, КонтейнерОтображаемойВерсии);
			ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(
					ЭтотОбъект, "ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем", , КонтейнерОтображаемойВерсии);
			Если ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем = "1"
				И ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяГрузоотправитель) Тогда
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяРеквизитыГрузоотправителяЮЛ_ИНН", ИННКонтрагента(Объект.СсылкаТитулГрузоотправителяГрузоотправитель), , КонтейнерОтображаемойВерсии);
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяРеквизитыГрузоотправителяЮЛ_ИНН", Неопределено, , КонтейнерОтображаемойВерсии);
			КонецЕсли;
			
			Если ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем = "1" Тогда
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеОснованиеПолномочий", Неопределено, , КонтейнерОтображаемойВерсии);	
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийНаименование", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийДата", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийНомер", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийИдентификатор", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийДополнительныеСведения", Неопределено, , КонтейнерОтображаемойВерсии);
				
				ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(
					ЭтотОбъект, "ТитулГрузоотправителяИныеОснованияПолномочийПогрузкиРеквизитыСторон", , КонтейнерОтображаемойВерсии);	
			Иначе
				ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийНаименование =
					ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(
						ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийНаименование", , КонтейнерОтображаемойВерсии);
				Если ЗначениеЗаполнено(ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийНаименование) Тогда
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеОснованиеПолномочий", Неопределено, , КонтейнерОтображаемойВерсии);	
				Иначе
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеОснованиеПолномочий", "Должностные обязанности", Ложь, КонтейнерОтображаемойВерсии);	
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийНаименование", Неопределено, , КонтейнерОтображаемойВерсии);
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийДата", Неопределено, , КонтейнерОтображаемойВерсии);
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийНомер", Неопределено, , КонтейнерОтображаемойВерсии);
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийИдентификатор", Неопределено, , КонтейнерОтображаемойВерсии);
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, "ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийДополнительныеСведения", Неопределено, , КонтейнерОтображаемойВерсии);
					
					ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(
						ЭтотОбъект, "ТитулГрузоотправителяИныеОснованияПолномочийПогрузкиРеквизитыСторон", , КонтейнерОтображаемойВерсии);
				КонецЕсли;
			КонецЕсли;
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяВладелецПунктаПогрузкиЯвляетсяГрузоотправителем", "1", Ложь, КонтейнерОтображаемойВерсии);
			Если ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(
					ЭтотОбъект, "ТитулГрузоотправителяВладелецПунктаПогрузкиЯвляетсяГрузоотправителем", , КонтейнерОтображаемойВерсии) = "1"
				И ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяГрузоотправитель) Тогда
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяИнойГрузоотправительЮЛ_ИНН", ИННКонтрагента(Объект.СсылкаТитулГрузоотправителяГрузоотправитель), , КонтейнерОтображаемойВерсии);
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузоотправителяИнойГрузоотправительЮЛ_ИНН", Неопределено, , КонтейнерОтображаемойВерсии);
			КонецЕсли;
			
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда 
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаПриемкаСодержаниеОперации", 
					"Груз принят к перевозке водителем, уполномоченным перевозчиком на перевозку груза, от лица, осуществившего погрузку груза в транспортное средство", , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаПриемкаФайлГрузоотправителяИдентификатор",
					Объект.ТитулГрузоотправителяИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаПриемкаФайлГрузоотправителяДатаФормированияФайла", Объект.ТитулГрузоотправителяДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаПриемкаФайлГрузоотправителяВремяФормированияФайла", Объект.ТитулГрузоотправителяВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаПриемкаФайлГрузоотправителяЭлектроннаяПодпись",
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1")), , КонтейнерОтображаемойВерсии);
					
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3") Тогда	
			Если ВариантПриемки = 2 Тогда
				ПричинаОтказаВПриемеГруза = 
					ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ТитулГрузополучателяПричинаОтказаВПриемеГруза", , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.ОчиститьДанныеПоТитулуВСтруктуреФормы(ЭтотОбъект, Объект.ТекущийТитул, КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяПричинаОтказаВПриемеГруза", ПричинаОтказаВПриемеГруза, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяОбщееКоличествоПринятыхГрузовыхМест", 0, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяСодержаниеОперацииПриемГруза", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяСодержаниеОперацииОтказВПриемеГруза", 
					"Лицом, управомоченным на получение груза, при указанных обстоятельствах отказано в принятии от перевозчика груза с указанными характеристиками", , КонтейнерОтображаемойВерсии);
				ЗаполнитьПредставленияАдресов(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3"));	
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяСодержаниеОперацииОтказВПриемеГруза", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяПричинаОтказаВПриемеГруза", Неопределено, , КонтейнерОтображаемойВерсии);
					
				ТитулГрузоотправителяКоличествоГрузовыхМест = 
					ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
					"ТитулГрузоотправителяКоличествоГрузовыхМест", 0);
					
				ТитулГрузополучателяОбщееКоличествоПринятыхГрузовыхМест = 
					ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
					"ТитулГрузополучателяОбщееКоличествоПринятыхГрузовыхМест", 0, КонтейнерОтображаемойВерсии);
					
				Если ТитулГрузополучателяОбщееКоличествоПринятыхГрузовыхМест < ТитулГрузоотправителяКоличествоГрузовыхМест Тогда
					ВидОперацииПриемки = "Частичная выгрузка";
				Иначе
					ВидОперацииПриемки = "Лицом, управомоченным на получение груза, при указанных обстоятельствах принят от перевозчика груз с указанными характеристиками";	
				КонецЕсли;
					
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяСодержаниеОперацииПриемГруза", 
					ВидОперацииПриемки, , КонтейнерОтображаемойВерсии);
			КонецЕсли;				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяПредставительГрузополучателя", Строка(Объект.СсылкаТитулГрузоотправителяГрузополучатель), , КонтейнерОтображаемойВерсии);
					
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаПриемка";
			
			ТитулПеревозчикаПриемкаИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаВремяФормированияФайла", , КонтейнерПервойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяИдентификаторФайлаПеревозчика", ТитулПеревозчикаПриемкаИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяДатаФормированияФайлаПеревозчика", ТитулПеревозчикаПриемкаДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяВремяФормированияФайлаПеревозчика", ТитулПеревозчикаПриемкаВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулГрузополучателяЭлектроннаяПодписьФайлаПеревозчика",
						ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"), Истина), , КонтейнерОтображаемойВерсии);
						
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3") Тогда
			Если ВариантПриемкиДоп = 2 Тогда
				ПричинаОтказаВПриемеГруза = 
					ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ДопТитулГрузополучателяПричинаОтказаВПриемеГруза", , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.ОчиститьДанныеПоТитулуВСтруктуреФормы(ЭтотОбъект, Объект.ТекущийТитул, КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяПричинаОтказаВПриемеГруза", ПричинаОтказаВПриемеГруза, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяОбщееКоличествоПринятыхГрузовыхМест", 0, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяСодержаниеОперацииПриемГруза", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяСодержаниеОперацииОтказВПриемеГруза", 
					"Лицом, управомоченным на получение груза, при указанных обстоятельствах отказано в принятии от перевозчика груза с указанными характеристиками", , КонтейнерОтображаемойВерсии);
				ЗаполнитьПредставленияАдресов(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3"));		
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяСодержаниеОперацииОтказВПриемеГруза", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяПричинаОтказаВПриемеГруза", Неопределено, , КонтейнерОтображаемойВерсии);
					
				ТитулГрузоотправителяКоличествоГрузовыхМест = 
					ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
					"ТитулГрузоотправителяКоличествоГрузовыхМест", 0);
					
				ОбщееКоличествоПринятыхГрузовыхМест = 
					ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
					"ТитулГрузополучателяОбщееКоличествоПринятыхГрузовыхМест", 0);
					
				МассивВерсийДопТ3 = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение["ДопТитулГрузополучателя"];
				Для Каждого СтруктураВерсии Из МассивВерсийДопТ3 Цикл
					ОбщееКоличествоПринятыхГрузовыхМест = ОбщееКоличествоПринятыхГрузовыхМест
															+ СтруктураВерсии.ДопТитулГрузополучателяОбщееКоличествоПринятыхГрузовыхМест;
				КонецЦикла;
				
				Если ОбщееКоличествоПринятыхГрузовыхМест < ТитулГрузоотправителяКоличествоГрузовыхМест Тогда
					ВидОперацииДопПриемки = "Частичная выгрузка";
				Иначе
					ВидОперацииДопПриемки = "Лицом, управомоченным на получение груза, при указанных обстоятельствах принят от перевозчика груз с указанными характеристиками";	
				КонецЕсли;
					
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяСодержаниеОперацииПриемГруза",
					ВидОперацииДопПриемки, , КонтейнерОтображаемойВерсии);
			КонецЕсли;
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяПредставительГрузополучателя", Строка(Объект.СсылкаТитулГрузоотправителяГрузополучатель), , КонтейнерОтображаемойВерсии);
					
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаПриемка";
			
			ТитулПеревозчикаПриемкаИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаВремяФормированияФайла", , КонтейнерПервойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяИдентификаторФайлаПеревозчика", ТитулПеревозчикаПриемкаИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяДатаФормированияФайлаПеревозчика", ТитулПеревозчикаПриемкаДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяВремяФормированияФайлаПеревозчика", ТитулПеревозчикаПриемкаВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулГрузополучателяЭлектроннаяПодписьФайлаПеревозчика",
						ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"), Истина), , КонтейнерОтображаемойВерсии);
						
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4") Тогда
			КонтейнерРеквизитовГрузополучателя = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ТитулГрузополучателя");
						
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаВыдачаСодержаниеОперации", 
					"Груз с указанными характеристиками сдан водителем, уполномоченным перевозчиком на перевозку груза, лицу, управомоченному на получение груза", , КонтейнерОтображаемойВерсии);
			
			ТитулГрузополучателяИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулГрузополучателяИдентификаторФайла", , КонтейнерРеквизитовГрузополучателя);
			ТитулГрузополучателяДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулГрузополучателяДатаФормированияФайла", , КонтейнерРеквизитовГрузополучателя);
			ТитулГрузополучателяВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулГрузополучателяВремяФормированияФайла", , КонтейнерРеквизитовГрузополучателя);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаВыдачаИдентификаторФайлаГрузополучателя", ТитулГрузополучателяИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаВыдачаДатаФормированияФайлаГрузополучателя", ТитулГрузополучателяДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаВыдачаВремяФормированияФайлаГрузополучателя", ТитулГрузополучателяВремяФормированияФайла, , КонтейнерОтображаемойВерсии);				
					
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаВыдачаЭлектроннаяПодписьФайлаГрузополучателя", 
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3")), , КонтейнерОтображаемойВерсии);
					
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4") Тогда
			КонтейнерРеквизитовГрузополучателя = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ДопТитулГрузополучателя");
			
			СодержаниеОперацииПриемки = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ДопТитулГрузополучателяСодержаниеОперацииПриемГруза", , КонтейнерРеквизитовГрузополучателя);
				
			СодержаниеОперацииПриемки = "Груз с указанными характеристиками сдан водителем, уполномоченным перевозчиком на перевозку груза, лицу, управомоченному на получение груза";
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаВыдачаСодержаниеОперации", 
					СодержаниеОперацииПриемки, , КонтейнерОтображаемойВерсии);
					
			ДопТитулГрузополучателяИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ДопТитулГрузополучателяИдентификаторФайла", , КонтейнерРеквизитовГрузополучателя);
			ДопТитулГрузополучателяДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ДопТитулГрузополучателяДатаФормированияФайла", , КонтейнерРеквизитовГрузополучателя);
			ДопТитулГрузополучателяВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ДопТитулГрузополучателяВремяФормированияФайла", , КонтейнерРеквизитовГрузополучателя);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаВыдачаИдентификаторФайлаГрузополучателя", ДопТитулГрузополучателяИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаВыдачаДатаФормированияФайлаГрузополучателя", ДопТитулГрузополучателяДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаВыдачаВремяФормированияФайлаГрузополучателя", ДопТитулГрузополучателяВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаВыдачаЭлектроннаяПодписьФайлаГрузополучателя", 
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3")), , КонтейнерОтображаемойВерсии);
					
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9") Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулУказаниеПереадресСодержаниеОперации", "Направление указания о переадресовке", , КонтейнерОтображаемойВерсии);	
					
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаПриемка";
			
			ТитулПеревозчикаПриемкаИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаВремяФормированияФайла", , КонтейнерПервойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулУказаниеПереадресФайлПеревозчикаПриемкаИдентификатор", ТитулПеревозчикаПриемкаИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулУказаниеПереадресФайлПеревозчикаПриемкаДатаФормированияФайла", ТитулПеревозчикаПриемкаДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулУказаниеПереадресФайлПеревозчикаПриемкаВремяФормированияФайла", ТитулПеревозчикаПриемкаВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулУказаниеПереадресФайлПеревозчикаПриемкаЭлектроннаяПодпись", 
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"), Истина), , КонтейнерОтображаемойВерсии);
		
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9") Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулУказаниеПереадресСодержаниеОперации", "Направление указания о переадресовке", , КонтейнерОтображаемойВерсии);	
					
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаВыдача";
			
			ТитулПеревозчикаВыдачаИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаВыдачаИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаВыдачаДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаВыдачаДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаВыдачаВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаВыдачаВремяФормированияФайла", , КонтейнерПервойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулУказаниеПереадресФайлПеревозчикаВыдачаИдентификатор", ТитулПеревозчикаВыдачаИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулУказаниеПереадресФайлПеревозчикаВыдачаДатаФормирования", ТитулПеревозчикаВыдачаДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулУказаниеПереадресФайлПеревозчикаВыдачаВремяФормирования", ТитулПеревозчикаВыдачаВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулУказаниеПереадресФайлПеревозчикаВыдачаЭлектроннаяПодпись", 
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4"), Истина), , КонтейнерОтображаемойВерсии);
								
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7") Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПереадресовкаФормаПереадресовки", "Электронная", , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПереадресовкаВидДоставкиДокументаОПереадресовке", "Электронное уведомление перевозчика о переадресовке", , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПереадресовкаСодержаниеОперации", "Получение указания о переадресовке", , КонтейнерОтображаемойВерсии);
					
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаПриемка";
			
			ТитулПеревозчикаПриемкаИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаВремяФормированияФайла", , КонтейнерПервойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПереадресовкаИдентификаторФайлаПеревозчикаОПриемеГруза", ТитулПеревозчикаПриемкаИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПереадресовкаДатаФайлаИнформацииПеревозчикаОПриемеГруза", ТитулПеревозчикаПриемкаДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПереадресовкаВремяФайлаОбменаПеревозчикаОПриемеГруза", ТитулПеревозчикаПриемкаВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПереадресовкаЭлектроннаяПодписьФайлаПеревозчикаОПриемеГруза", 
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"), Истина), , КонтейнерОтображаемойВерсии);
					
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7") Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПереадресовкаФормаПереадресовки", "Электронная", , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПереадресовкаВидДоставкиДокументаОПереадресовке", "Электронное уведомление перевозчика о переадресовке", , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПереадресовкаСодержаниеОперации", "Получение указания о переадресовке", , КонтейнерОтображаемойВерсии);
					
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаПриемка";
			
			ТитулПеревозчикаПриемкаИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаВремяФормированияФайла", , КонтейнерПервойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПереадресовкаИдентификаторФайлаПеревозчикаОПриемеГруза", ТитулПеревозчикаПриемкаИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПереадресовкаДатаФайлаИнформацииПеревозчикаОПриемеГруза", ТитулПеревозчикаПриемкаДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПереадресовкаВремяФайлаОбменаПеревозчикаОПриемеГруза", ТитулПеревозчикаПриемкаВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПереадресовкаЭлектроннаяПодписьФайлаПеревозчикаОПриемеГруза", 
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"), Истина), , КонтейнерОтображаемойВерсии);
					
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8") Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыЭлектроннаяПодписьФайлаПеревозчика", 
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"), Истина), , КонтейнерОтображаемойВерсии);
					
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаПриемка";
			
			ТитулПеревозчикаПриемкаИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаВремяФормированияФайла", , КонтейнерПервойВерсии);
				
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыИдентификаторФайлаПеревозчика", ТитулПеревозчикаПриемкаИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыДатаФормированияФайлаПеревозчика", ТитулПеревозчикаПриемкаДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыВремяФормированияФайлаПеревозчика", ТитулПеревозчикаПриемкаВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
						
			Если ВариантПричиныЗамены = 1 Тогда
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыПричинаЗаменыПроизвольныйТекст", Неопределено, , КонтейнерОтображаемойВерсии);
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыДокументНаименование", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыДокументНомер", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыДокументДата", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыДокументДополнительныеСведения", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(
					ЭтотОбъект, "ТитулПеревозчикаЗаменыДокументРеквизитыСторон", , КонтейнерОтображаемойВерсии);
			КонецЕсли;
			
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8") Тогда		
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыЭлектроннаяПодписьФайлаПеревозчика", 
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"), Истина), , КонтейнерОтображаемойВерсии);
					
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаПриемка";
			
			ТитулПеревозчикаПриемкаИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаПриемкаВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаПриемкаВремяФормированияФайла", , КонтейнерПервойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыИдентификаторФайлаПеревозчика", ТитулПеревозчикаПриемкаИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыДатаФормированияФайлаПеревозчика", ТитулПеревозчикаПриемкаДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыВремяФормированияФайлаПеревозчика", ТитулПеревозчикаПриемкаВремяФормированияФайла, , КонтейнерОтображаемойВерсии);	
					
			Если ВариантПричиныЗаменыДоп = 1 Тогда
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыПричинаЗаменыПроизвольныйТекст", Неопределено, , КонтейнерОтображаемойВерсии);
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыДокументНаименование", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыДокументНомер", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыДокументДата", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыДокументДополнительныеСведения", Неопределено, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(
					ЭтотОбъект, "ДопТитулПеревозчикаЗаменыДокументРеквизитыСторон", , КонтейнерОтображаемойВерсии);
			КонецЕсли;
			
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5") Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖСодержание", 
				"Вверенный грузоотправителем груз доставлен в пункт назначения и выдан управомоченному на получение груза с учетом приведенных в транспортной накладной обстоятельств перевозки", , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖПредставительПеревозчика", Строка(Объект.СсылкаТитулГрузоотправителяПеревозчик), , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖНаименованиеВалютыСтоимости", "Российский рубль", Ложь, КонтейнерОтображаемойВерсии);	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖКодВалютыСтоимости", "643", Ложь, КонтейнерОтображаемойВерсии);
				
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаВыдача";
			
			ТитулПеревозчикаВыдачаИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаВыдачаИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаВыдачаДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаВыдачаДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаВыдачаВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаВыдачаВремяФормированияФайла", , КонтейнерПервойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖИдентификаторФайлаПеревозчика", ТитулПеревозчикаВыдачаИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖДатаФормированияФайлаПеревозчика", ТитулПеревозчикаВыдачаДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖВремяФормированияФайлаПеревозчика", ТитулПеревозчикаВыдачаВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖЭлектроннаяПодписьФайлаПеревозчика", 
				ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4"), Истина), , КонтейнерОтображаемойВерсии);
				
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6") Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяФХЖСодержаниеФактаХозяйственнойЖизни", 
				"Обязательства по доставке груза в пункт назначения и выдаче его  на получение груза лицу исполнены перевозчиком с учетом обстоятельств, приведенных в транспортной накладной", , КонтейнерОтображаемойВерсии);
			
			КонтейнерПервойВерсии = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(КонтейнерОтображаемойВерсии);
			КонтейнерПервойВерсии.НомерВерсии = 0;
			КонтейнерПервойВерсии.ПрефиксТитула = "ТитулПеревозчикаФХЖ";
			
			ТитулПеревозчикаФХЖИдентификаторФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаФХЖИдентификаторФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаФХЖДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаФХЖДатаФормированияФайла", , КонтейнерПервойВерсии);
			ТитулПеревозчикаФХЖВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				"ТитулПеревозчикаФХЖВремяФормированияФайла", , КонтейнерПервойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяФХЖПредставительГрузоотправителя", Строка(Объект.СсылкаТитулГрузоотправителяГрузоотправитель), , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяФХЖИдентификаторФайлаПеревозчика", ТитулПеревозчикаФХЖИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяФХЖДатаФайлаПеревозчика", ТитулПеревозчикаФХЖДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяФХЖВремяФайлаПеревозчика", ТитулПеревозчикаФХЖВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяФХЖЭлектроннаяПодписьФайлаПеревозчика", 
				ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5")), , КонтейнерОтображаемойВерсии);
		КонецЕсли;
		
		СчетчикЦикла = 1;
		ИныеПолучатели = Новый Массив;
		КлючОткуда = ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторыИныхПолучателейФайла__" + СчетчикЦикла + "__" + "ИдентификаторИногоПолучателя";
		ЗначениеОткуда = Неопределено;
		КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, КлючОткуда);
		СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
		Пока СтруктураВерсииТитула.Свойство(КлючОткуда, ЗначениеОткуда) Цикл
			ИныеПолучатели.Добавить(ЗначениеОткуда);	
			СчетчикЦикла = СчетчикЦикла + 1;
			КлючОткуда = ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторыИныхПолучателейФайла__" + СчетчикЦикла + "__" + "ИдентификаторИногоПолучателя";
		КонецЦикла;
		НаличиеИныхПолучателей = ИныеПолучатели.Количество() > 0;
		Объект.ИныеПолучателиСтрока = СтрСоединить(ИныеПолучатели, ",");
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ПолеУИД, Объект.УИДМинтранс, , КонтейнерОтображаемойВерсии);
				
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ВерсияПрограммы", ОбменСГИСЭПДКлиентСервер.ВерсияПрограммы(), , КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ВерсияФормата", 
				ОбменСГИСЭПДКлиентСервер.ВерсияФормата("ЭлектроннаяТранспортнаяНакладная"), ,
				КонтейнерОтображаемойВерсии);
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "КодДокументаПоКНД", ИнформацияПоПрефиксамТитула.КНД, , КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "НаименованиеДокументаПоФХЖ", ИнформацияПоПрефиксамТитула.ПоФактХЖ, , КонтейнерОтображаемойВерсии);
				
		ДанныеСертификатаУчетнойЗаписиЭДО = ОбменСГИСЭПДКлиентСервер.ДанныеСертификатаУчетнойЗаписиЭДО(ИдентификаторОтправителя);
		
		Если ИнформацияПоПрефиксамТитула.ВПрограмме = "ТитулПереадресовка"
			Или ИнформацияПоПрефиксамТитула.ВПрограмме = "ДопТитулПереадресовка"
			Или ИнформацияПоПрефиксамТитула.ВПрограмме = "ТитулПеревозчикаФХЖ"
			Или ИнформацияПоПрефиксамТитула.ВПрограмме = "ТитулГрузоотправителяФХЖ" Тогда
			ОбменСГИСЭПДКлиентСервер.УдалитьСтрокиТаблицыИзСтруктурыФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты", , КонтейнерОтображаемойВерсии);
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты__1__КодСтатусаПодписанта", 
				?(ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности), "2", "1"), , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты__1__Фамилия", ДанныеСертификатаУчетнойЗаписиЭДО.Фамилия, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты__1__Имя", ДанныеСертификатаУчетнойЗаписиЭДО.Имя, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты__1__Отчество", ДанныеСертификатаУчетнойЗаписиЭДО.Отчество, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты__1__Должность", ДанныеСертификатаУчетнойЗаписиЭДО.Должность, , КонтейнерОтображаемойВерсии); 
			Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности) Тогда
				Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.СведенияОбИнформационнойСистеме) = Ложь Тогда
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты__1__ДоверенностьИдентификаторФайла", ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности, , КонтейнерОтображаемойВерсии);
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты__1__ДоверенностьДата", ДанныеСертификатаУчетнойЗаписиЭДО.ДатаДоверенности, , КонтейнерОтображаемойВерсии);
					Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.ПорядковыйНомерДоверенности) Тогда
						ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
							ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты__1__ДоверенностьНомер", ДанныеСертификатаУчетнойЗаписиЭДО.ПорядковыйНомерДоверенности, , КонтейнерОтображаемойВерсии);	
					КонецЕсли;	
				Иначе
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "Подписанты__1__СистемаХранящаяДоверенность", ДанныеСертификатаУчетнойЗаписиЭДО.СведенияОбИнформационнойСистеме, , КонтейнерОтображаемойВерсии);	
				КонецЕсли;
			КонецЕсли;
		Иначе
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантФамилия", ДанныеСертификатаУчетнойЗаписиЭДО.Фамилия, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантИмя", ДанныеСертификатаУчетнойЗаписиЭДО.Имя, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантОтчество", ДанныеСертификатаУчетнойЗаписиЭДО.Отчество, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДолжность", ДанныеСертификатаУчетнойЗаписиЭДО.Должность, , КонтейнерОтображаемойВерсии);
			// Для версии 5.02
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантТипПодписи", "1", , КонтейнерОтображаемойВерсии);
			Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности) Тогда
				// Для версии 5.01
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантКодСтатуса", "2", , КонтейнерОтображаемойВерсии);
				Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.СведенияОбИнформационнойСистеме) Тогда
					// Для версии 5.01
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСистемаХранящаяДоверенность", ДанныеСертификатаУчетнойЗаписиЭДО.СведенияОбИнформационнойСистеме, , КонтейнерОтображаемойВерсии);	
					// Для версии 5.02
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСпособПодтвержденияПолномочий", "3", , КонтейнерОтображаемойВерсии);
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектроннаяИнформационнаяСистема", ДанныеСертификатаУчетнойЗаписиЭДО.СведенияОбИнформационнойСистеме, , КонтейнерОтображаемойВерсии);
				
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектроннаяНомер", ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности, , КонтейнерОтображаемойВерсии);
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектроннаяДата", ДанныеСертификатаУчетнойЗаписиЭДО.ДатаДоверенности, , КонтейнерОтображаемойВерсии);
					Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.ПорядковыйНомерДоверенности) Тогда
						ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
							ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьНомер", ДанныеСертификатаУчетнойЗаписиЭДО.ПорядковыйНомерДоверенности, , КонтейнерОтображаемойВерсии);
					КонецЕсли;	
				Иначе
					// Для версии 5.01
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьИдентификаторФайла", ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности, , КонтейнерОтображаемойВерсии);
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьДата", ДанныеСертификатаУчетнойЗаписиЭДО.ДатаДоверенности, , КонтейнерОтображаемойВерсии);
					// Для версии 5.02
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСпособПодтвержденияПолномочий", "6", , КонтейнерОтображаемойВерсии);
					Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.ПорядковыйНомерДоверенности) Тогда
						ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
							ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектроннаяНомерВнутр", ДанныеСертификатаУчетнойЗаписиЭДО.ПорядковыйНомерДоверенности, , КонтейнерОтображаемойВерсии);						
					КонецЕсли;						
				КонецЕсли;
			Иначе
				// Для версии 5.01
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантКодСтатуса", "1", , КонтейнерОтображаемойВерсии);
				// Для версии 5.02
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСпособПодтвержденияПолномочий", "1", , КонтейнерОтображаемойВерсии);
			КонецЕсли;
		КонецЕсли;
		
		ИдентификаторГрузоотправителяДляФайла = Объект.ИдентификаторГрузоотправителя;
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9") Тогда
			Если Объект.Организация = Объект.СсылкаТитулГрузоотправителяГрузоотправитель
				Или Объект.Организация = Объект.СсылкаТитулГрузоотправителяСоставитель Тогда
				ИдентификаторГрузоотправителяДляФайла = Объект.ИдентификаторГрузоотправителя;
			ИначеЕсли Объект.Организация = Объект.СсылкаТитулГрузоотправителяГрузополучатель
				Или Объект.Организация = Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель Тогда
				ИдентификаторГрузоотправителяДляФайла = Объект.ИдентификаторГрузополучателя;
			КонецЕсли;	
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла", ПолучитьИмяФайла(ИнформацияПоПрефиксамТитула.ШаблонИмениФайла, 
																			ИдентификаторГрузоотправителяДляФайла,
																			Объект.ИдентификаторГрузополучателя,
																			Объект.ИдентификаторПеревозчика,
																			НаличиеИныхПолучателей), , КонтейнерОтображаемойВерсии);
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ДатаФормированияФайла",
			ДатаФормирования, ,	
			КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла",
			ВремяФормирования, ,	
			КонтейнерОтображаемойВерсии);
	КонецЕсли;
		
	// Проверим заполнение
	Если ОбменСГИСЭПДКлиент.ЗаполнитьТаблицуОшибокЭПД(ЭтотОбъект, ОшибкиЗаполнения, Истина) = Истина Тогда	
		Элементы.ГруппаОшибки.Видимость = Истина;
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения (" + Строка(ОшибкиЗаполнения.Количество()) + ")";
		Если ТребуетсяЗаполнить = Истина Тогда
			ОчиститьИдФайлТекущегоТитула();
		КонецЕсли;
	Иначе
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения";
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("ОбработкаЗавершения") 
		И ДополнительныеПараметры.ОбработкаЗавершения <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОбработкаЗавершения);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьТитул(Команда)
	
	ВводимИсправление = Истина;
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	УстановитьТекущийШагПомощника();
		
КонецПроцедуры


&НаСервере
Функция ИННКонтрагента(Контрагент)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ИНН");
	
КонецФункции

&НаКлиенте
Процедура ОтправитьУОУ(Команда)
	
	ОповещениеПослеВводаТекста = Новый ОписаниеОповещения("ОтправитьУОУ_ПослеВводаТекстаУточнения", ЭтотОбъект);
	ПоказатьВводСтроки(ОповещениеПослеВводаТекста, "", "Текст запроса уточнения (отклонения)", , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьУОУ_ПослеВводаТекстаУточнения(Текст, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Текст) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТекущийПолученныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1") Тогда
		Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ОткП");
	ИначеЕсли Объект.ТекущийПолученныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3") Тогда
		Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ОткТ3");
	ИначеЕсли Объект.ТекущийПолученныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5") Тогда
		Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ОткГО");	
	КонецЕсли;
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
	Записать(ПараметрыЗаписи);
	
	НаборДействий = Новый Соответствие();
	
	ДействиеОтклонить = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отклонить");
	
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ДействиеОтклонить);
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Отправить"));
	
	ПараметрыВыполненияДействийПоЭДО = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();	
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ОбъектыУчета.Добавить(Объект.Ссылка);
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	
	ДополнительныеПараметрыОтклонения = ЭлектронныеДокументыЭДОКлиентСервер.НовыеДополнительныеПараметрыДействия();
	ДополнительныеПараметрыОтклонения.Вставить("Комментарий", Текст);
	ДополнительныеПараметрыОтклонения.Вставить("ЭлементДляОтклонения", Объект.ТекущийПолученныйТитул);
	ПараметрыВыполненияДействийПоЭДО.ДополнительныеПараметрыДействий.Вставить(ДействиеОтклонить, ДополнительныеПараметрыОтклонения);
	
	ДополнительныеПараметрыУспешногоЗавершения = Новый Структура;
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("ЭтоИсправление", Ложь);
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("НаборДействий", НаборДействий);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоИсправление", Ложь);
	ДополнительныеПараметры.Вставить("ОповещениеУспешногоЗавершения",
		Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, 
									ДополнительныеПараметрыУспешногоЗавершения));

	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ИнтерфейсДокументовЭДОКлиент, ДополнительныеПараметры);
	
	ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);
	
КонецПроцедуры


&НаСервере
Функция ПолучитьПодписьТитулаBase64(ТипЭлементаРегламента, ПерваяВерсия = Ложь) 
	
	ПодписьBase64 = "";
	
	СообщениеТитула = ОбменСГИСЭПД.ПолучитьСообщениеТитула(Объект.Ссылка, ТипЭлементаРегламента, , ПерваяВерсия);
	
	Если ЗначениеЗаполнено(СообщениеТитула) Тогда
		УстановленныеПодписи = ЭлектронныеДокументыЭДО.УстановленныеПодписи(СообщениеТитула);
		Для Каждого ОписаниеПодписи Из УстановленныеПодписи Цикл
			ПодписьBase64 = Base64Строка(ОписаниеПодписи.Подпись);
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПодписьBase64;
	
КонецФункции

&НаКлиенте
Процедура ОтправитьЧерезЭДО(Команда)
		
	ЭтотОбъект.Доступность = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторГрузоотправителя) = Ложь
		Или ЗначениеЗаполнено(Объект.ИдентификаторГрузополучателя) = Ложь
		Или ЗначениеЗаполнено(Объект.ИдентификаторПеревозчика) = Ложь
		Или ИзмененСоставУчастников = Истина Тогда
		ЗаполнитьУчастников(Истина);
	Иначе
		ОтправитьЧерезЭДОПослеЗаписи();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезЭДОПослеЗаписи(Повторно = Ложь)
	
	Если Объект.ИдентификаторПеревозчика = Объект.ИдентификаторГрузоотправителя
		Или Объект.ИдентификаторПеревозчика = Объект.ИдентификаторГрузополучателя Тогда
		Доступность = Истина;
		ПоказатьПредупреждение(, НСтр("ru='Документ не отправлен. 
			|Идентификатор перевозчика не должен совпадать с идентификатором грузоотправителя или грузополучателя.'"));
		Возврат;	
	КонецЕсли;
	
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	
	ЭтоИсправление = Ложь;
	КонтейнерОтображаемойВерсии = Неопределено;
	Если ВводимИсправление Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется уточнение"
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется повторная отправка" Тогда
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1") Тогда
			ТекущийНомерИсправления = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ТитулГрузоотправителяНомерИсправления", 0, КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяНомерИсправления", ТекущийНомерИсправления + 1, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузоотправителяДатаИсправления", ОбщегоНазначенияКлиент.ДатаСеанса(), , КонтейнерОтображаемойВерсии);
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3") Тогда
			ТекущийНомерИсправления = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ТитулГрузополучателяНомерИсправления", 0, КонтейнерОтображаемойВерсии);	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузополучателяНомерИсправления", ТекущийНомерИсправления + 1, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулГрузополучателяДатаИсправления", ОбщегоНазначенияКлиент.ДатаСеанса(), , КонтейнерОтображаемойВерсии);
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3") Тогда
			ТекущийНомерИсправления = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ДопТитулГрузополучателяНомерИсправления", 0, КонтейнерОтображаемойВерсии);	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ДопТитулГрузополучателяНомерИсправления", ТекущийНомерИсправления + 1, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ДопТитулГрузополучателяДатаИсправления", ОбщегоНазначенияКлиент.ДатаСеанса(), , КонтейнерОтображаемойВерсии);
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5") Тогда
			ТекущийНомерИсправления = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ТитулПеревозчикаФХЖНомерИсправления", 0, КонтейнерОтображаемойВерсии);	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖНомерИсправления", ТекущийНомерИсправления + 1, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулПеревозчикаФХЖДатаИсправления", ОбщегоНазначенияКлиент.ДатаСеанса(), , КонтейнерОтображаемойВерсии);
		КонецЕсли;
		ЭтоИсправление = Истина;
		Повторно = Истина;	
	КонецЕсли;
	
	Если Повторно = Истина Тогда
		ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка, Истина);
		ВерсииТитуловЗаписанные = ОбменСГИСЭПДВызовСервера.ПолучитьВерсииТитуловДокумента(Объект, Объект.Организация);
		ОбменСГИСЭПДКлиентСервер.УстановитьТекущийДоступныйТитулЭТрН(Объект, ТитулыПоДокументу, ВерсииТитуловЗаписанные, , Истина);
	КонецЕсли;
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДанныеСостоянияЭДО", ДанныеСостоянияЭДО);
	ДополнительныеПараметры.Вставить("ЭтоИсправление", ЭтоИсправление);
	ДополнительныеПараметры.Вставить("Повторно", Повторно);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЧерезЭДОПослеЗаписи_Завершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя(), Повторно, ОписаниеОповещения);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезЭДОПослеЗаписи_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДанныеСостоянияЭДО = ДополнительныеПараметры.ДанныеСостоянияЭДО;
	Повторно = ДополнительныеПараметры.Повторно;
	ЭтоИсправление = ДополнительныеПараметры.ЭтоИсправление;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
	Записать(ПараметрыЗаписи);
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) = Ложь Тогда
		Доступность = Истина;
		Возврат;
	КонецЕсли;
	
	Если ОшибкиЗаполнения.Количество() > 0 Тогда	
		Элементы.ГруппаОшибки.Видимость = Истина;
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения (" + Строка(ОшибкиЗаполнения.Количество()) + ")";
		Доступность = Истина;
		ПоказатьПредупреждение(, НСтр("ru='Документ не отправлен, обнаружены ошибки заполнения. Исправьте ошибки и повторите попытку'"));
		Возврат;
	Иначе
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения";
	КонецЕсли;
	
	НаборДействий = Новый Соответствие;		
	
	Если Повторно = Истина 
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется повторная отправка" 
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7")
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7")
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8")
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9")
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8")
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9")
		Или ЗначениеЗаполнено(ОбменСГИСЭПДКлиентСервер.ПолучитьСообщениеТитула(Объект.Ссылка, Объект.ТекущийТитул)) = Ложь Тогда
			Если Объект.ЭтоВходящий = Ложь И ДанныеСостоянияЭДО.СуществуетАктуальныйДокумент = Ложь Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Сформировать"));	
			Иначе
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.СформироватьОтвет"));
			КонецЕсли;	   
			
			ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
			ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
				"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));  
	Иначе		
		Если ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется подготовка к отправке" 
			И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется отправка" Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
		КонецЕсли;
		
		Если ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется отправка" Тогда
			ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
				"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
		КонецЕсли;		
	КонецЕсли;
	
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отправить"));
	
	ПараметрыВыполненияДействийПоЭДО = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();	
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ОбъектыУчета.Добавить(Объект.Ссылка);
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	
	ДополнительныеПараметрыУспешногоЗавершения = Новый Структура;
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("НаборДействий", НаборДействий);
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("ЭтоИсправление", ЭтоИсправление);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоИсправление", ЭтоИсправление);
	ДополнительныеПараметры.Вставить("ОповещениеУспешногоЗавершения",
		Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, 
									ДополнительныеПараметрыУспешногоЗавершения, 
									"ПослеВыполненияДействийПоЭДО_ОбработкаОшибки", ЭтотОбъект));

	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ИнтерфейсДокументовЭДОКлиент, ДополнительныеПараметры);
	
	ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);	
	
КонецПроцедуры


&НаКлиенте
Процедура ОшибкиЗаполненияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = ОшибкиЗаполнения.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭтотОбъект.ПереходыПоОшибкам = ТекущиеДанные.Описание.Переходы;
	ОбменСГИСЭПДКлиент.ПоказатьОшибкуЗаполнения(ЭтотОбъект, ТекущиеДанные, ИдентификаторОтправителя());

КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("НеТребуетсяИдентификацияФайла") = Ложь Тогда
		ЗаполнитьУчастников();
		ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
		ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя());	
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьЧерезЭДОПовторно(Команда)
	
	ЭтотОбъект.Доступность = Ложь;
	
	ОтправитьЧерезЭДОПослеЗаписи(Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	ДействиеОтправить = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отправить");
	КоличествоОтправлено = Результат.ОбработаноПоДействиям.Получить(ДействиеОтправить);
	
	Если КоличествоОтправлено <> Неопределено И КоличествоОтправлено > 0 Тогда
		Если ДополнительныеПараметры.ЭтоИсправление Тогда
			ОбменСГИСЭПДВызовСервера.ОтметитьИсправлениеДокумента(Объект.Ссылка);	
		КонецЕсли;
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
		Записать(ПараметрыЗаписи);
		
		ОтображаемыеВерсииТитулов = Неопределено;
		
		ТекстОповещения = НСтр("ru = 'Титул """ + Объект.ТекущийТитул + """ отправлен'");		
		ЗаголовокОповещения = НСтр("ru = 'Электронные документы'");	
		ДействиеПриНажатии = Неопределено;
		КартинкаОповещения = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО48;
		
		ПодключитьОбработчикОжидания("ОбновлениеДоступностиЭлементов", 2, Истина);
		
		#Если Не МобильноеПриложениеКлиент Тогда
		ПоказатьОповещениеПользователя(ЗаголовокОповещения, ДействиеПриНажатии, ТекстОповещения, КартинкаОповещения,
			СтатусОповещенияПользователя.Важное);
		#КонецЕсли
	Иначе
		ЭтотОбъект.Доступность = Истина;
	КонецЕсли;
	
	Если ДополнительныеПараметры.НаборДействий.Получить(ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.ОтправитьВАрхив")) = Истина Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО_ОбработкаОшибки(ИнформацияОбОшибке, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт
	
	ОчиститьИдФайлТекущегоТитула(Истина);
	
	ПодключитьОбработчикОжидания("ОбновлениеДоступностиЭлементов", 2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИдФайлТекущегоТитула(Записать = Ложь)
	
	ЭтотОбъект.Доступность = Истина;
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
		ЭтотОбъект, 
		ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла", 
		Неопределено);
	
	Если Записать = Истина Тогда
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеДоступностиЭлементов()
	
	ВводимДопТитулКорректировкиЭстафета = Ложь;
	ВводимДопТитулПереадресовки = Ложь;
	ВводимТитулКорректировкиСтоимости = Ложь;
	ВводимТитулКорректировкиЭстафета = Ложь;
	ВводимТитулПереадресовки = Ложь;

	ПредыдущийТекущийТитул = Объект.ТекущийТитул;
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭТрН(ЭтотОбъект);
	
	Доступность = Истина;
	УстановитьТекущийШагПомощника(ПредыдущийТекущийТитул);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтметитьОбязательныеНеЗаполненныеЭлементыФормы" Тогда
		Если УникальныйИдентификатор <> Параметр Тогда
			Возврат;
		КонецЕсли;
		ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(Параметр);
	ИначеЕсли ИмяСобытия = "ИзменитьОформлениеКнопокФормы" Тогда
		Если УникальныйИдентификатор <> Параметр.УникальныйИдентификаторОбновляемойФормы Тогда
			Возврат;
		КонецЕсли;
		ИзменитьОформлениеКнопок(Параметр);	
		Если Параметр.ИмяКнопки = "ЗаполнитьТитулГрузоотправителяВодители" Тогда
			ОтображениеОтправкиQR(Истина);	
		КонецЕсли;
	ИначеЕсли СтрНачинаетсяС(ИмяСобытия, "Запись_") И Источник <> Неопределено Тогда
		Если Источник = Объект.СсылкаТитулГрузоотправителяГрузоотправитель Тогда
			СсылкаТитулГрузоотправителяГрузоотправительПриИзменении(Элементы.СсылкаТитулГрузоотправителяГрузоотправитель);
		ИначеЕсли Источник = Объект.СсылкаТитулГрузоотправителяГрузополучатель Тогда
			СсылкаТитулГрузоотправителяГрузополучательПриИзменении(Элементы.СсылкаТитулГрузоотправителяГрузополучатель);
		ИначеЕсли Источник = Объект.СсылкаТитулГрузоотправителяПеревозчик Тогда
			СсылкаТитулГрузоотправителяПеревозчикПриИзменении(Элементы.СсылкаТитулГрузоотправителяПеревозчик);
		ИначеЕсли Источник = ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство Тогда
			ХранимыеДанныеТитулГрузоотправителяТранспортноеСредствоПриИзменении(Элементы.ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство);
		КонецЕсли;
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД
	ОбменСГИСЭПДКлиент.ОбработкаОповещенияМП(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДокументыЭДО(Команда)
	
	Доступность = Ложь;

	Оповещение = Новый ОписаниеОповещения("ПолучитьДокументыЭДОЗавершение", ЭтотОбъект);
	ИнтерфейсДокументовЭДОКлиент.ОтправитьПолучитьДокументыЭДО(ЭтотОбъект, Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДокументыЭДОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Доступность = Истина; 
	
	Прочитать();
	
КонецПроцедуры


#Область ОбъектыОбязательныеДляЗаполнения

&НаКлиенте
Процедура ИзменитьОформлениеКнопок(Параметр) Экспорт

	Если Не ЭтотОбъект.НачальноеОформлениеВыполнено Тогда
		ЭтотОбъект.ТребуетсяДополнительноеОформлениеКнопок = Истина;
		Если ЭтотОбъект.СтруктураДополнительногоОформленияКнопок <> Неопределено Тогда
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = 
				Новый ФиксированнаяСтруктура("ИмяКнопки, ИдентификаторСтроки");
		Иначе
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = Параметр;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	СтруктураСТекущимиДаннымиРеквизитов = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	СтруктураДанныхОбъекта = Неопределено;
	СтруктураСДаннымиФормыДляОформленияКнопок = 
		ОбменСГИСЭПДКлиентСервер.СтруктураСДаннымиФормыДляОформленияКнопок(ЭтотОбъект);
	
	Результат = ИзменитьОформлениеКнопокНаСервере(СтруктураСТекущимиДаннымиРеквизитов,
		Параметр.ИмяКнопки,
		Параметр.ИдентификаторСтроки,
		СтруктураДанныхОбъекта,
		СтруктураСДаннымиФормыДляОформленияКнопок);
		
	Если Результат.Успешно Тогда
		ЭтотОбъект.АдресДереваСоответствийИтаблицыКнопок = Результат.НовыйАдресВХранилище;	
		МассивОформления = Результат.МассивОформления;
		ОбменСГИСЭПДКлиентСервер.ОформлениеКнопокНаФорме(ЭтотОбъект,
			СтруктураСТекущимиДаннымиРеквизитов, МассивОформления);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзменитьОформлениеКнопокНаСервере(Знач СтруктураСТекущимиДаннымиРеквизитов,
	ИмяКнопки = Неопределено,
	ИдентификаторСтроки = Неопределено,
	Знач СтруктураДанныхОбъекта,
	Знач СтруктураСДаннымиФормыДляОформленияКнопок)
	
	НовыйАдресВХранилище = ОбменСГИСЭПД.ЗапуститьИзменениеОформленияКнопок(СтруктураСДаннымиФормыДляОформленияКнопок,
		СтруктураСТекущимиДаннымиРеквизитов, ИмяКнопки, ИдентификаторСтроки, СтруктураДанныхОбъекта);

	Результат = ОбменСГИСЭПД.ОбработатьРезультатИзмененияОформленияКнопок(НовыйАдресВХранилище);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(Параметр)
	
	СтруктураСТекущимиДаннымиРеквизитов = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(СтруктураСТекущимиДаннымиРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(Знач СтруктураСТекущимиДанными)
	
	ОбменСГИСЭПД.ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(ЭтотОбъект, СтруктураСТекущимиДанными);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулУказаниеПереадресПричинаПереадресовкиПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулУказаниеПереадресНовыеДатаВремяПодачиПодВыгрузкуПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти