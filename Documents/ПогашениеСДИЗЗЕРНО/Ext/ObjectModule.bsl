#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("Структура") И ДанныеЗаполнения.Свойство("Корректировочный") Тогда
		ЗаполнитьКорректировкуПогашения(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура")Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения);
	// СДИЗ, массив СДИЗ, (ТТН, массив ТТН - преобразовываются при вызове заполнения), плюс значения заполнения
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.СДИЗЗЕРНО")ИЛИ
		(ТипДанныхЗаполнения = Тип("Массив")
		И ДанныеЗаполнения.Количество()
		И ТипЗнч(ДанныеЗаполнения[0]) = Тип("СправочникСсылка.СДИЗЗЕРНО"))Тогда 
		ЗаполнитьПогашениеПоСДИЗЗЕРНО(ДанныеЗаполнения);
	// Документ формирования и погашения СДИЗ
	ИначеЕсли Метаданные.ОпределяемыеТипы.ОснованиеОформлениеСДИЗЗЕРНО.Тип.Типы().Найти(ТипДанныхЗаполнения) <> Неопределено Тогда
		СДИЗКПогашению = Документы.ПогашениеСДИЗЗЕРНО.СДИЗКПогашению(ДанныеЗаполнения);
		Если Товары.Количество() = 0 И СДИЗКПогашению.Количество() > 0 Тогда
			ЗаполнитьПогашениеПоСДИЗЗЕРНО(СДИЗКПогашению);
		КонецЕсли;
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	ИнтеграцияЗЕРНОПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.ПричинаРасхождения");
	МассивНепроверяемыхРеквизитов.Добавить("ИсторияПогашений.ПричинаРасхождения");
	Если Корректировочный Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Номенклатура");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Количество");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоЗЕРНО");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
	КонецЕсли;
	ИнтеграцияЗЕРНОПереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ДанныеПоСДИЗ          = Неопределено;
	ДанныеТекущегоСтатуса = Неопределено;
	КоличествоГашениеСДИЗ = Неопределено;
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Если СтрокаТовары.СтатусУказанияТранспорта = 1 И Не Корректировочный Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'В строке %1 списка ""Товары"" не указано транспортное средство'"),
				СтрокаТовары.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", СтрокаТовары.НомерСтроки, "ТранспортПредставление"),,
				Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТовары.СДИЗ)
			И СтрокаТовары.ПолноеПогашение
			И Не Корректировочный
			И Не ЗначениеЗаполнено(СтрокаТовары.ПричинаРасхождения)
			И Не Корректировочный Тогда
			
			Если ДанныеТекущегоСтатуса = Неопределено Тогда
				ДанныеТекущегоСтатуса = РегистрыСведений.СтатусыОбъектовСинхронизацииЗЕРНО.ТекущееСостояние(Ссылка);
			КонецЕсли;
			
			Если ДанныеТекущегоСтатуса.Статус = Документы.ПогашениеСДИЗЗЕРНО.СтатусПоУмолчанию() Тогда
				
				Если ДанныеПоСДИЗ = Неопределено Тогда
					ДанныеПоСДИЗ = Справочники.СДИЗЗЕРНО.ДанныеПоСДИЗ(Товары.ВыгрузитьКолонку("СДИЗ"));
				КонецЕсли;
				Если КоличествоГашениеСДИЗ = Неопределено Тогда
					КоличествоГашениеСДИЗ = Новый Соответствие();
					Для Каждого СтрокаТаблицы Из Товары Цикл
						КоличествоЗЕРНО = КоличествоГашениеСДИЗ[СтрокаТаблицы.СДИЗ];
						Если КоличествоЗЕРНО = Неопределено Тогда
							КоличествоЗЕРНО = 0;
						КонецЕсли;
						КоличествоЗЕРНО = КоличествоЗЕРНО + СтрокаТаблицы.КоличествоЗЕРНО;
						КоличествоГашениеСДИЗ[СтрокаТаблицы.СДИЗ] = КоличествоЗЕРНО;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеСДИЗ = ДанныеПоСДИЗ[СтрокаТовары.СДИЗ];
				ВсегоОсталосьПогасить = ДанныеСДИЗ.Количество - ДанныеСДИЗ.КоличествоПогашено - ДанныеСДИЗ.КоличествоОтказПогашения;
				Если ((ВсегоОсталосьПогасить - КоличествоГашениеСДИЗ[СтрокаТовары.СДИЗ]) <> 0) Тогда
					ТекстСообщения = СтрШаблон(
						НСтр("ru = 'В строке %1 списка ""Товары"" не указана причина расходжения веса'"),
						СтрокаТовары.НомерСтроки);
					ОбщегоНазначения.СообщитьПользователю(
						ТекстСообщения,
						ЭтотОбъект,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
							"Товары", СтрокаТовары.НомерСтроки, "КоличествоЗЕРНО"),,
						Отказ);
				КонецЕсли;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	МассивСДИЗ = Новый Массив;
	
	Для Каждого СтрокаИстория Из ИсторияПогашений Цикл
		МассивСДИЗ.Добавить(СтрокаИстория.СДИЗ);
	КонецЦикла;
	
	ДанныеПоСДИЗ = Справочники.СДИЗЗЕРНО.ДанныеПоСДИЗ(МассивСДИЗ);
	
	ОперацияЗаполнена = Ложь;
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Отбор = Новый Структура("СДИЗ", СтрокаТовары.СДИЗ);
		СтрокиИстория = ИсторияПогашений.НайтиСтроки(Отбор);
		КоличествоАннулирование = 0;
		Для Каждого СтрокаИстория Из СтрокиИстория Цикл
			Если СтрокаИстория.Операция = Перечисления.ВидыОперацийЗЕРНО.ПогашениеСДИЗАннулирование Тогда
				КоличествоАннулирование = КоличествоАннулирование + СтрокаИстория.КоличествоЗЕРНО;
			КонецЕсли;
			
			Если СтрокаИстория.ПолноеПогашение И Не ЗначениеЗаполнено(СтрокаИстория.ПричинаРасхождения)
				И Не ЗначениеЗаполнено(СтрокаИстория.Партия) Тогда
				
				ДанныеСДИЗ = ДанныеПоСДИЗ[СтрокаИстория.СДИЗ];
				
				ВсегоОсталосьПогасить = ДанныеСДИЗ.Количество - ДанныеСДИЗ.КоличествоПогашено -
					ДанныеСДИЗ.КоличествоОтказПогашения + КоличествоАннулирование;
				
				Если (ВсегоОсталосьПогасить - СтрокаИстория.КоличествоЗЕРНО <> 0) Тогда
					ТекстСообщения = СтрШаблон(
					НСтр("ru = 'В строке %1 списка ""История погашений"" не указана причина расходжения веса'"),
					СтрокаИстория.НомерСтроки);
				ОбщегоНазначения.СообщитьПользователю(
						ТекстСообщения,
						ЭтотОбъект,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
							"ИсторияПогашений", СтрокаИстория.НомерСтроки, "Примечание"),,
						Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого СтрокаИстория Из ИсторияПогашений Цикл
		
		Если СтрокаИстория.СтатусУказанияТранспорта = 1 И Не ЗначениеЗаполнено(СтрокаИстория.Партия) Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'В строке %1 списка ""История погашений"" не указано транспортное средство'"),
				СтрокаИстория.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"ИсторияПогашений", СтрокаИстория.НомерСтроки, "Операция"),,
				Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИстория.Операция) Тогда
			ОперацияЗаполнена = Истина;
		КонецЕсли;
		
	КонецЦикла;
		
	Если Корректировочный И Не ОперацияЗаполнена Тогда
		ТекстСообщения = НСтр("ru = 'В таблице история погашений нет изменений'");
		
		ОбщегоНазначения.СообщитьПользователю(
			ТекстСообщения,
			ЭтотОбъект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"ИсторияПогашений", 1, "Операция"),,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ЗаписатьСоответствиеНоменклатуры();
	
	ИнтеграцияЗЕРНО.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЗЕРНО.ЗаписатьСтатусДокументаЗЕРНОПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Для Каждого СтрокаТовары Из Товары Цикл
		СтрокаТовары.Партия = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ПогашениеСДИЗЗЕРНО.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиПартийЗЕРНО.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияИСПереопределяемый.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеЗЕРНО.ДанныеЗаполненияПогашениеСДИЗЗЕРНО(Организация);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеЗЕРНО.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПогашениеПоСДИЗЗЕРНО(ДанныеЗаполнения, ДополнитьДокумент = Ложь) 
	
	Если Не ДополнитьДокумент Тогда
		
		ЗаполнитьШапкуПоСДИЗ(ДанныеЗаполнения);
		
	КонецЕсли;
	
	ЗаполнитьДанныеПродукции(ВыборкаДанныхСДИЗЗЕРНО(ДанныеЗаполнения));
	
КонецПроцедуры

Процедура ЗаполнитьШапкуПоСДИЗ(ДанныеЗаполнения)
	
	ДанныеШапки = ВыборкаДанныхШапкиСДИЗЗЕРНО(ДанныеЗаполнения);
	
	Если ДанныеШапки.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеШапки);
		
		Если Не ЗначениеЗаполнено(Организация) Тогда
			Если ДанныеШапки.ВидОперацииСДИЗ = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт Тогда
				Ключ = ДанныеШапки.УполномоченноеЛицо;
			Иначе
				Ключ = ?(ЗначениеЗаполнено(Грузополучатель), Грузополучатель, Покупатель);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Ключ) Тогда
				Ключ = ДанныеШапки.УполномоченноеЛицо;
			КонецЕсли;
			
			ДанныеСопоставления = Справочники.КлючиРеквизитовОрганизацийЗЕРНО.ОрганизацииКонтрагентыПоКлючам(Ключ).Получить(Ключ);
			Если ДанныеСопоставления <> Неопределено Тогда
				Организация   = ДанныеСопоставления.Организация;
				Подразделение = ДанныеСопоставления.Подразделение;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Грузополучатель)
				И ЗначениеЗаполнено(Покупатель)
				И Грузополучатель <> Покупатель
				И Не ЗначениеЗаполнено(ДанныеСопоставления.Организация)
				И ДанныеШапки.ВидОперацииСДИЗ = Перечисления.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ
				И ДанныеШапки.Перевозка И ДанныеШапки.Реализация Тогда
				ДанныеСопоставления = Справочники.КлючиРеквизитовОрганизацийЗЕРНО.ОрганизацииКонтрагентыПоКлючам(Покупатель).Получить(Покупатель);
				Организация   = ДанныеСопоставления.Организация;
				Подразделение = ДанныеСопоставления.Подразделение;
			КонецЕсли;
			
		КонецЕсли;
		
		Товары.Очистить();
		ТранспортныеСредства.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКорректировкуПогашения(ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Свойство("Основание")
		И (ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ПогашениеСДИЗЗЕРНО")
		Или ТипЗнч(ДанныеЗаполнения.Основание) = Тип("СправочникСсылка.СДИЗЗЕРНО")) Тогда
		
		ЗаполнитьКорректировочныйСДИЗ(ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКорректировочныйСДИЗ(ДанныеЗаполнения)
	
	Основание = ДанныеЗаполнения.Основание;
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	// СДИЗ
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПогашениеСДИЗЗЕРНО") Тогда
		
		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.СДИЗ
		|ПОМЕСТИТЬ Т_СДИЗ
		|ИЗ
		|	Документ.ПогашениеСДИЗЗЕРНО.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Основание
		|	И Товары.СДИЗ <> ЗНАЧЕНИЕ(Справочник.СДИЗЗерно.ПустаяСсылка)"
		,);
		
		// Шапка
		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	Шапка.*
		|ИЗ
		|	Документ.ПогашениеСДИЗЗЕРНО КАК Шапка
		|ГДЕ
		|	Шапка.Ссылка = &Основание",
		"Шапка");
		
	Иначе
		
		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	СДИЗЗЕРНО.Ссылка КАК СДИЗ
		|ПОМЕСТИТЬ Т_СДИЗ
		|ИЗ
		|	Справочник.СДИЗЗЕРНО КАК СДИЗЗЕРНО
		|ГДЕ
		|	СДИЗЗЕРНО.Ссылка = &Основание"
		,);
		
	КонецЕсли;
	
	// Товары
	ТекстыЗапроса.Добавить(
	"ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Идентификатор,
	|	Товары.СДИЗ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.СтатусУказанияСерий,
	|	Товары.Партия,
	|	Товары.Количество КАК Количество,
	|	Товары.КоличествоЗЕРНО КАК КоличествоЗЕРНО,
	|	Товары.ПолноеПогашение,
	|	Товары.ПричинаРасхождения,
	|	Товары.ОписаниеПричиныРасхождения,
	|	Товары.СтатусУказанияТранспорта,
	|	Товары.ДляПроизводстваНеПрослеживаемойПродукции,
	|	1 КАК КоличествоСтрок,
	|	Товары.Партия.Идентификатор КАК ПартияИдентификатор
	|ПОМЕСТИТЬ Т_Товары
	|ИЗ
	|	Документ.ПогашениеСДИЗЗЕРНО.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_СДИЗ КАК Т_СДИЗ
	|		ПО Товары.СДИЗ = Т_СДИЗ.СДИЗ
	|		И Товары.Партия <> ЗНАЧЕНИЕ(Справочник.РеестрПартийЗерно.ПустаяСсылка)
	|ГДЕ
	|	НЕ Товары.Ссылка.Корректировочный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т_Товары.Идентификатор,
	|	Т_Товары.СДИЗ,
	|	Т_Товары.Номенклатура КАК Номенклатура,
	|	Т_Товары.Характеристика,
	|	Т_Товары.Серия,
	|	Т_Товары.СтатусУказанияСерий,
	|	Т_Товары.Партия,
	|	Т_Товары.Количество КАК Количество,
	|	Т_Товары.КоличествоЗЕРНО КАК КоличествоЗЕРНО,
	|	Т_Товары.ПолноеПогашение,
	|	Т_Товары.ПричинаРасхождения,
	|	Т_Товары.ОписаниеПричиныРасхождения,
	|	Т_Товары.СтатусУказанияТранспорта,
	|	Т_Товары.ДляПроизводстваНеПрослеживаемойПродукции,
	|	Т_Товары.КоличествоСтрок КАК КоличествоСтрок
	|ИЗ
	|	Т_Товары КАК Т_Товары
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(КоличествоЗЕРНО),
	|	СУММА(КоличествоСтрок)
	|ПО
	|	СДИЗ",
	"Товары");
	
	// История погашений
	ТекстыЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ИсторияПогашенийСДИЗЗЕРНО.СДИЗ,
	|	ИсторияПогашенийСДИЗЗЕРНО.КоличествоЗЕРНО,
	|	ИсторияПогашенийСДИЗЗЕРНО.КоличествоЗЕРНО КАК КоличествоЗЕРНОПосле,
	|	ИсторияПогашенийСДИЗЗЕРНО.Причина КАК ПричинаРасхождения,
	|	ИсторияПогашенийСДИЗЗЕРНО.ОписаниеПричины КАК ОписаниеПричиныРасхождения,
	|	ИсторияПогашенийСДИЗЗЕРНО.Статус,
	|	ИсторияПогашенийСДИЗЗЕРНО.ПолноеПогашение,
	|	ИсторияПогашенийСДИЗЗЕРНО.ИдентификаторЗаявки,
	|	ИсторияПогашенийСДИЗЗЕРНО.ДатаОперации,
	|	ИсторияПогашенийСДИЗЗЕРНО.ВидОперации,
	|	РеестрПартийЗЕРНО.Ссылка КАК Партия
	|ПОМЕСТИТЬ Т_ИсторияПогашений
	|ИЗ
	|	Т_СДИЗ КАК Т_СДИЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияПогашенийСДИЗЗЕРНО КАК ИсторияПогашенийСДИЗЗЕРНО
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РеестрПартийЗЕРНО КАК РеестрПартийЗЕРНО
	|			ПО ИсторияПогашенийСДИЗЗЕРНО.НомерПартии = РеестрПартийЗЕРНО.Идентификатор
	|		ПО ИсторияПогашенийСДИЗЗЕРНО.СДИЗ = Т_СДИЗ.СДИЗ
	|		И ИсторияПогашенийСДИЗЗЕРНО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаписейЗЕРНО.Подписано)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т_ИсторияПогашений.СДИЗ,
	|	Т_ИсторияПогашений.КоличествоЗЕРНО,
	|	Т_ИсторияПогашений.КоличествоЗЕРНОПосле,
	|	Т_ИсторияПогашений.ПричинаРасхождения,
	|	Т_ИсторияПогашений.ОписаниеПричиныРасхождения,
	|	Т_ИсторияПогашений.Статус,
	|	Т_ИсторияПогашений.ПолноеПогашение,
	|	Т_ИсторияПогашений.ИдентификаторЗаявки,
	|	Т_ИсторияПогашений.ДатаОперации,
	|	Т_ИсторияПогашений.ВидОперации,
	|	Т_ИсторияПогашений.Партия,
	|	Т_Товары.ДляПроизводстваНеПрослеживаемойПродукции
	|ИЗ
	|	Т_ИсторияПогашений КАК Т_ИсторияПогашений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т_Товары КАК Т_Товары
	|		ПО Т_ИсторияПогашений.Партия = Т_Товары.Партия",
	"ИсторияПогашений");
	
	// Транспортные средства
	ТекстыЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ТранспортныеСредства.ТипТранспорта,
	|	ТранспортныеСредства.НомерТранспортногоСредства,
	|	ТранспортныеСредства.НомерАвтомобильногоКонтейнера,
	|	Т_ИсторияПогашений.Партия КАК Партия
	|ИЗ
	|	Т_Товары КАК Т_Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПогашениеСДИЗЗЕРНО.ТранспортныеСредства КАК ТранспортныеСредства 
	|	ПО ТранспортныеСредства.ИдентификаторСтрокиТоваров = Т_Товары.Идентификатор
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_ИсторияПогашений КАК Т_ИсторияПогашений
	|	ПО Т_Товары.Партия = Т_ИсторияПогашений.Партия",
	"ТранспортныеСредства");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Основание", Основание);
	РезультатыЗапроса = ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
	
	Корректировочный = Истина;
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.СДИЗЗЕРНО") Тогда
		
		ЗаполнитьШапкуПоСДИЗ(Основание);
		
	Иначе
		
		Выборка = РезультатыЗапроса["Шапка"].Выбрать();
		
		КолонкиИсключенияЗаполнения = "Номер, Дата, Комментарий, Ответственный, Корректировочный, Проведен";
		
		Если Выборка.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка,, КолонкиИсключенияЗаполнения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВыборкаНоменклатура = РезультатыЗапроса["Товары"].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаНоменклатура.Количество() = 0 Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru='В %1 отсутствует продукция для заполнения.'"), Основание);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	Товары.Очистить();
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Выборка = ВыборкаНоменклатура.Выбрать();
		Выборка.Следующий();
		
		НоваяСтрока = Товары.Добавить();
		
		СтрокиИсключения = "";
		
		Если ВыборкаНоменклатура.КоличествоСтрок > 1 Тогда
			
			СтрокиИсключения = "Номенклатура, Характеристика, Серия, Количество, КоличествоЗЕРНО";
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка,,СтрокиИсключения);
		
	КонецЦикла;
	
	Выборка = РезультатыЗапроса["ИсторияПогашений"].Выбрать();
	
	ИсторияПогашений.Очистить();
	СтрокиСопоставленияНоменклатуры = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ИсторияПогашений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		НоваяСтрока.Идентификатор = Новый УникальныйИдентификатор;
		
		СтрокиСопоставленияНоменклатуры.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	Выборка = РезультатыЗапроса["ТранспортныеСредства"].Выбрать();
	
	ТранспортныеСредства.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТранспортныеСредства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Отбор = Новый Структура("Партия", Выборка.Партия);
		
		СтрокиИстория = ИсторияПогашений.НайтиСтроки(Отбор);
		
		Если СтрокиИстория.Количество() Тогда
			НоваяСтрока.ИдентификаторСтрокиТоваров = СтрокиИстория[0].Идентификатор;
		КонецЕсли;
		
	КонецЦикла;
	
	СопоставленныеТовары = ИнтеграцияЗЕРНО.ПолучитьСопоставленныеТовары(СтрокиСопоставленияНоменклатуры);
	
	Для Каждого СтрокаТЧ Из СтрокиСопоставленияНоменклатуры Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСопоставленногоТовара = СопоставленныеТовары.Найти(СтрокаТЧ.НомерСтроки, "НомерСтрокиТовара");
		
		Если СтрокаСопоставленногоТовара <> Неопределено Тогда
			СтрокаТЧ.Номенклатура   = СтрокаСопоставленногоТовара.Номенклатура;
			СтрокаТЧ.Характеристика = СтрокаСопоставленногоТовара.Характеристика;
		КонецЕсли;
		
	КонецЦикла;
	
	ЕдиницаИзмеренияКилограмм = ИнтеграцияИСВызовСервера.ЕдиницаИзмеренияКилограмм();
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		СтруктураПоиска = Новый Структура("СДИЗ", СтрокаТовары.СДИЗ);
		
		МассивПогашений = ИсторияПогашений.НайтиСтроки(СтруктураПоиска);
		
		КоличествоЗЕРНО = 0;
		Коэффициент = ИнтеграцияИСВызовСервера.КоэффициентУпаковки(ЕдиницаИзмеренияКилограмм, СтрокаТовары.Номенклатура);
		
		Для Каждого Строка Из МассивПогашений Цикл
			КоличествоЗЕРНО = КоличествоЗЕРНО + Строка.КоличествоЗЕРНО;
			Строка.Количество = Строка.КоличествоЗЕРНО * Коэффициент;
		КонецЦикла;
		
		СтрокаТовары.КоличествоЗЕРНО = КоличествоЗЕРНО;
		
		Если Не ЗначениеЗаполнено(Коэффициент) Тогда
			Коэффициент = 1;
		КонецЕсли;
	
		СтрокаТовары.Количество = СтрокаТовары.КоличествоЗЕРНО * Коэффициент;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПродукции(ВыборкаСДИЗ)
	
	СтрокиСопоставленияКоличества = Новый Массив;
	СтрокиСопоставленияНоменклатуры = Новый Массив;
	
	Пока ВыборкаСДИЗ.Следующий() Цикл 
		
		СтрокаТЧ = Товары.Найти(ВыборкаСДИЗ.СДИЗ, "СДИЗ");
		
		Если СтрокаТЧ = Неопределено Тогда
			СтрокаТЧ = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, ВыборкаСДИЗ);
			СтрокаТЧ.Идентификатор = Строка(Новый УникальныйИдентификатор);
			СтрокаТЧ.ПолноеПогашение = Истина;
			Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
				СтрокиСопоставленияКоличества.Добавить(СтрокаТЧ);
			Иначе
				СтрокиСопоставленияНоменклатуры.Добавить(СтрокаТЧ);
			КонецЕсли;
		Иначе
			ОчиститьСвязанныеСтрокиТабличнойЧасти(СтрокаТЧ.ИдентификаторСтроки, "ТранспортныеСредства");
		КонецЕсли;
		
		ВыборкаТранспортныеСредства = ВыборкаСДИЗ.ТранспортныеСредства.Выбрать();
		Пока ВыборкаТранспортныеСредства.Следующий() Цикл
			СтрокаТранспортныеСредства = ТранспортныеСредства.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТранспортныеСредства, ВыборкаТранспортныеСредства);
			СтрокаТранспортныеСредства.ИдентификаторСтрокиТоваров = СтрокаТЧ.Идентификатор;
		КонецЦикла;
		
	КонецЦикла;
	
	Если СтрокиСопоставленияНоменклатуры.Количество() Тогда
		
		СопоставленныеТовары = ИнтеграцияЗЕРНО.ПолучитьСопоставленныеТовары(СтрокиСопоставленияНоменклатуры);
		
		Для Каждого СтрокаТЧ Из СтрокиСопоставленияНоменклатуры Цикл
			
			Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаСопоставленногоТовара = СопоставленныеТовары.Найти(СтрокаТЧ.НомерСтроки, "НомерСтрокиТовара");
			
			Если СтрокаСопоставленногоТовара <> Неопределено Тогда
				СтрокаТЧ.Номенклатура   = СтрокаСопоставленногоТовара.Номенклатура;
				СтрокаТЧ.Характеристика = СтрокаСопоставленногоТовара.Характеристика;
				СтрокиСопоставленияКоличества.Добавить(СтрокаТЧ);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Если СтрокиСопоставленияКоличества.Количество() Тогда
		ИнтеграцияЗЕРНОПереопределяемый.ЗаполнитьКоличествоПоКоличествуЗЕРНО(СтрокиСопоставленияКоличества);
	КонецЕсли;
	
КонецПроцедуры

Функция ВыборкаДанныхСДИЗЗЕРНО(МассивСДИЗ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", МассивСДИЗ);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОформлениеСДИЗЗЕРНОТовары.СДИЗ КАК СДИЗ,
	|	МАКСИМУМ(ОформлениеСДИЗЗЕРНОТовары.Номенклатура)   КАК Номенклатура,
	|	МАКСИМУМ(ОформлениеСДИЗЗЕРНОТовары.Характеристика) КАК Характеристика,
	|	МАКСИМУМ(ОформлениеСДИЗЗЕРНОТовары.Серия)          КАК Серия
	|ПОМЕСТИТЬ
	|	ОформлениеСДИЗЗЕРНОТовары
	|ИЗ
	|	Документ.ОформлениеСДИЗЗЕРНО.Товары КАК ОформлениеСДИЗЗЕРНОТовары
	|ГДЕ
	|	ОформлениеСДИЗЗЕРНОТовары.СДИЗ В (&Ссылки)
	|СГРУППИРОВАТЬ ПО
	|	ОформлениеСДИЗЗЕРНОТовары.СДИЗ
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОформлениеСДИЗЗЕРНОТовары.Номенклатура)     = 1
	|	И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОформлениеСДИЗЗЕРНОТовары.Характеристика) = 1
	|	И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОформлениеСДИЗЗЕРНОТовары.Серия)          = 1
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПогашениеСДИЗЗЕРНОТовары.СДИЗ КАК СДИЗ,
	|	МАКСИМУМ(ПогашениеСДИЗЗЕРНОТовары.Номенклатура)   КАК Номенклатура,
	|	МАКСИМУМ(ПогашениеСДИЗЗЕРНОТовары.Характеристика) КАК Характеристика,
	|	МАКСИМУМ(ПогашениеСДИЗЗЕРНОТовары.Серия)          КАК Серия
	|ПОМЕСТИТЬ
	|	ПогашениеСДИЗЗЕРНОТовары
	|ИЗ
	|	Документ.ПогашениеСДИЗЗЕРНО.Товары КАК ПогашениеСДИЗЗЕРНОТовары
	|ГДЕ
	|	ПогашениеСДИЗЗЕРНОТовары.СДИЗ В (&Ссылки)
	|СГРУППИРОВАТЬ ПО
	|	ПогашениеСДИЗЗЕРНОТовары.СДИЗ
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПогашениеСДИЗЗЕРНОТовары.Номенклатура)     = 1
	|	И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПогашениеСДИЗЗЕРНОТовары.Характеристика) = 1
	|	И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПогашениеСДИЗЗЕРНОТовары.Серия)          = 1
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПогашениеСДИЗЗЕРНОТовары.СДИЗ,ОформлениеСДИЗЗЕРНОТовары.СДИЗ) КАК СДИЗ,
	|	ЕСТЬNULL(ОформлениеСДИЗЗЕРНОТовары.Номенклатура,ПогашениеСДИЗЗЕРНОТовары.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ОформлениеСДИЗЗЕРНОТовары.Характеристика,ПогашениеСДИЗЗЕРНОТовары.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(ОформлениеСДИЗЗЕРНОТовары.Серия,ПогашениеСДИЗЗЕРНОТовары.Серия) КАК Серия
	|ПОМЕСТИТЬ СопоставленныеТовары
	|ИЗ ПогашениеСДИЗЗЕРНОТовары КАК ПогашениеСДИЗЗЕРНОТовары
	|	ПОЛНОЕ СОЕДИНЕНИЕ ОформлениеСДИЗЗЕРНОТовары КАК ОформлениеСДИЗЗЕРНОТовары
	|		ПО ОформлениеСДИЗЗЕРНОТовары.СДИЗ = ПогашениеСДИЗЗЕРНОТовары.СДИЗ
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияПогашенийСДИЗЗЕРНО.СДИЗ КАК СДИЗ,
	|	СУММА(ИсторияПогашенийСДИЗЗЕРНО.КоличествоЗЕРНО) КАК Количество
	|ПОМЕСТИТЬ РанееПогашено
	|ИЗ
	|	РегистрСведений.ИсторияПогашенийСДИЗЗЕРНО КАК ИсторияПогашенийСДИЗЗЕРНО
	|ГДЕ
	|	ИсторияПогашенийСДИЗЗЕРНО.СДИЗ В (&Ссылки)
	|	И ИсторияПогашенийСДИЗЗЕРНО.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаписейЗЕРНО.Подписано)
	|СГРУППИРОВАТЬ ПО
	|	ИсторияПогашенийСДИЗЗЕРНО.СДИЗ
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СДИЗЗЕРНО.Ссылка                    КАК СДИЗ,
	|	СопоставленныеТовары.Номенклатура   КАК Номенклатура,
	|	СопоставленныеТовары.Характеристика КАК Характеристика,
	|	СопоставленныеТовары.Серия          КАК Серия,
	|	СДИЗЗЕРНО.Количество - ЕСТЬNULL(РанееПогашено.Количество, 0) КАК КоличествоЗЕРНО,
	|	СДИЗЗЕРНО.ТранспортныеСредства.(
	|		ТипТранспорта КАК ТипТранспорта,
	|		НомерТранспортногоСредства КАК НомерТранспортногоСредства,
	|		НомерАвтомобильногоКонтейнера КАК НомерАвтомобильногоКонтейнера) КАК ТранспортныеСредства
	|ИЗ
	|	Справочник.СДИЗЗЕРНО КАК СДИЗЗЕРНО
	|	ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеТовары КАК СопоставленныеТовары
	|		ПО СДИЗЗЕРНО.Ссылка = СопоставленныеТовары.СДИЗ
	|	ЛЕВОЕ СОЕДИНЕНИЕ РанееПогашено КАК РанееПогашено
	|		ПО СДИЗЗЕРНО.Ссылка = РанееПогашено.СДИЗ
	|ГДЕ
	|	СДИЗЗЕРНО.Ссылка В (&Ссылки)";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ВыборкаДанныхШапкиСДИЗЗЕРНО(МассивСДИЗ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивСДИЗ);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА СДИЗЗЕРНО.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
	|			ТОГДА СДИЗЗЕРНО.УполномоченноеЛицо.ОрганизацияКонтрагент
	|		КОГДА СДИЗЗЕРНО.Грузополучатель <> Значение(Справочник.КлючиРеквизитовОрганизацийЗЕРНО.ПустаяСсылка)
	|			ТОГДА СДИЗЗЕРНО.Грузополучатель.ОрганизацияКонтрагент
	|		КОГДА СДИЗЗЕРНО.Покупатель <> Значение(Справочник.КлючиРеквизитовОрганизацийЗЕРНО.ПустаяСсылка)
	|			ТОГДА СДИЗЗЕРНО.Покупатель.ОрганизацияКонтрагент
	|		ИНАЧЕ СДИЗЗЕРНО.УполномоченноеЛицо.ОрганизацияКонтрагент КОНЕЦ КАК Организация,
	|	СДИЗЗЕРНО.ВидПродукции       КАК ВидПродукции,
	|	СДИЗЗЕРНО.ВидОперации        КАК ВидОперацииСДИЗ,
	|	СДИЗЗЕРНО.Продавец           КАК Продавец,
	|	СДИЗЗЕРНО.Грузоотправитель   КАК Грузоотправитель,
	|	СДИЗЗЕРНО.Покупатель         КАК Покупатель,
	|	СДИЗЗЕРНО.Грузополучатель    КАК Грузополучатель,
	|	СДИЗЗЕРНО.ПунктОтправления   КАК ПунктОтправления,
	|	СДИЗЗЕРНО.ПунктНазначения    КАК ПунктНазначения,
	|	СДИЗЗЕРНО.Перевозка          КАК Перевозка,
	|	СДИЗЗЕРНО.Реализация         КАК Реализация,
	|	СДИЗЗЕРНО.УполномоченноеЛицо КАК УполномоченноеЛицо
	|ИЗ
	|	Справочник.СДИЗЗЕРНО КАК СДИЗЗЕРНО
	|ГДЕ
	|	СДИЗЗЕРНО.Ссылка В(&Ссылка)";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Процедура ОчиститьСвязанныеСтрокиТабличнойЧасти(ИдентификаторСтроки, ИмяТабличнойЧасти)
	
	КолонкаОтбора = "ИдентификаторСтрокиТоваров";
	СтруктураОтбора = Новый Структура(КолонкаОтбора, ИдентификаторСтроки);
	СтрокиКУдалению = ЭтотОбъект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураОтбора);
	Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ИндексСтроки = ЭтотОбъект[ИмяТабличнойЧасти].Индекс(СтрокаКУдалению);
		ЭтотОбъект[ИмяТабличнойЧасти].Удалить(ИндексСтроки);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаписатьСоответствиеНоменклатуры()
	
	ДанныеСопоставления = Товары.ВыгрузитьКолонки("Номенклатура, Характеристика, Серия, Партия");
	
	Если Корректировочный Тогда
		
		Для Каждого СтрокаИсторииПогашений Из ИсторияПогашений Цикл
			Если Не ЗначениеЗаполнено(СтрокаИсторииПогашений.Операция) Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = ДанныеСопоставления.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаИсторииПогашений);
			Если Не ЗначениеЗаполнено(СтрокаИсторииПогашений.Номенклатура) Тогда
				СтруктураПоиска = Новый Структура("СДИЗ", СтрокаИсторииПогашений.СДИЗ);
				ПоискСтрок = Товары.НайтиСтроки(СтруктураПоиска);
				Для Каждого СтрокаТаблицы Из ПоискСтрок Цикл
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы,, "Партия");
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаТаблицы Из Товары Цикл
			НоваяСтрока = ДанныеСопоставления.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла;
	
	КонецЕсли;
	
	ИнтеграцияЗЕРНО.ЗаписатьСоответствиеНоменклатуры(ЭтотОбъект, ДанныеСопоставления);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
