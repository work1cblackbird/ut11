
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Возврат при получении формы для анализа.
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СписокНазначенийНаОформлениеОформитьОтчет.Доступность = ПравоДоступа("Добавление",Метаданные.Документы.ОтчетКомитентуОЗакупках);
	
	// Получение ФО
	ИспользоватьНесколькоСкладов = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов");
	ИспользоватьРасширенныеВозможностиЗаказаКлиента = ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента");
	ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказам = ПолучитьФункциональнуюОпцию("ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказам");
	ИспользоватьОрдернуюСхемуПриОтгрузке = ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтгрузке");
	
	// Установка отборов.
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
							
	ВариантОбособления = Константы.ВариантОбособленияТоваровВПродажах.Получить();
	
	МассивТипов = Новый Массив;
	Если ВариантОбособления = Перечисления.ВариантыОбособленияТоваровВПродажах.ЗаказКлиента Тогда
		
		МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказКлиента"));
		Элементы.Назначение.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		Элементы.Назначение.ПодсказкаВвода = НСтр("ru = 'Заказ'");
		Элементы.СписокНазначенийНаОформлениеНазначение.Заголовок = НСтр("ru = 'Заказ комитента (принципала)'");

		Элементы.СписокНазначенийНаОформлениеДоговорСКомитентом.Видимость = Истина;
		
	ИначеЕсли ВариантОбособления = Перечисления.ВариантыОбособленияТоваровВПродажах.Договор Тогда
		
		МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
		Элементы.Назначение.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		Элементы.Назначение.ПодсказкаВвода = НСтр("ru = 'Договор'");
		Элементы.СписокНазначенийНаОформлениеНазначение.Заголовок = НСтр("ru = 'Договор с комитентом (принципалом)'");
		
		Элементы.СписокНазначенийНаОформлениеДоговорСКомитентом.Видимость = Ложь;
		
	Иначе
		Назначение = Неопределено;
		Элементы.Назначение.Видимость = Ложь;
	КонецЕсли;
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНазначенийНаОформление, 
		"ИспользуетсяВариантОбособленияПоЗаказуКлиента", ВариантОбособления = Перечисления.ВариантыОбособленияТоваровВПродажах.ЗаказКлиента, Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНазначенийНаОформление,
		"СостояниеНеНачат", НСтр("ru = 'Не начат'"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, 
		"ИспользуетсяВариантОбособленияПоЗаказуКлиента", ВариантОбособления = Перечисления.ВариантыОбособленияТоваровВПродажах.ЗаказКлиента, Истина);
	
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Свойство("Организация",     Организация);
		СтруктураБыстрогоОтбора.Свойство("Комитент",        Комитент);
		СтруктураБыстрогоОтбора.Свойство("Поставщик",       Поставщик);
		СтруктураБыстрогоОтбора.Свойство("Назначение",      Назначение);
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ТипСсылки",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ОтчетКомитентуОЗакупках"));
	
	УстановитьОтборДинамическихСписков();	
	УстановитьТекущуюСтраницу();
	
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ПриСозданииНаСервереСписокДокументов(Список);
	
	Если ПроверкаКонтрагентовВызовСервера.ИспользованиеПроверкиВозможно() Тогда
		//Элементы.ЕстьОшибкиПроверкиКонтрагентов.Видимость = Истина;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами 
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтаФорма, Элементы.СписокКоманднаяПанель);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПриобретениеТоваровУслуг"
		ИЛИ ИмяСобытия = "Запись_КорректировкаПриобретения"
		ИЛИ ИмяСобытия = "Запись_ВозвратТоваровПоставщику"
		ИЛИ ИмяСобытия = "Запись_ОтчетКомитентуОЗакупках" Тогда
		
		Элементы.СписокНазначенийНаОформление.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Свойство("Поставщик", Поставщик);
		Настройки.Удалить("Поставщик");
		СтруктураБыстрогоОтбора.Свойство("Комитент", Комитент);
		Настройки.Удалить("Комитент");
		СтруктураБыстрогоОтбора.Свойство("Назначение", Назначение);
		Настройки.Удалить("Назначение");
		СтруктураБыстрогоОтбора.Свойство("Организация", Организация);
		Настройки.Удалить("Организация");
	Иначе
		Поставщик = Настройки.Получить("Поставщик");
		Комитент = Настройки.Получить("Комитент");
		Назначение = Настройки.Получить("Назначение");
		Если ЗначениеЗаполнено(Назначение) Тогда
			ВариантОбособления = Константы.ВариантОбособленияТоваровВПродажах.Получить();
			Если ВариантОбособления = Перечисления.ВариантыОбособленияТоваровВПродажах.ЗаказКлиента
				И ТипЗнч(Назначение) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				Назначение = Неопределено;
			ИначеЕсли ВариантОбособления = Перечисления.ВариантыОбособленияТоваровВПродажах.Договор
				И ТипЗнч(Назначение) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
				Назначение = Неопределено;
			КонецЕсли;
		КонецЕсли;
		Организация = Настройки.Получить("Организация");
	КонецЕсли;
	
	Период = Настройки.Получить("Период");
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомитентПриИзменении(Элемент)
	
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Вставить("Комитент", Комитент);
	КонецЕсли;	
	УстановитьОтборДинамическихСписков();
		
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Вставить("Поставщик", Поставщик);
	КонецЕсли;
	УстановитьОтборДинамическихСписков();
		
КонецПроцедуры

&НаКлиенте
Процедура НазначениеПриИзменении(Элемент)
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Вставить("Назначение", Назначение);
	КонецЕсли;
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Вставить("Организация", Организация);
	КонецЕсли;	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаЖурналПродажиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючНазначенияФормы", "");
	ОткрытьФорму("Обработка.ЖурналДокументовПродажи.Форма.СписокДокументов", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
		
	Если ТекущаяСтраница = Элементы.ГруппаКОформлению Тогда
		
		Элементы.Поставщик.Видимость = Истина;
		Элементы.Назначение.Видимость = Истина;
			
		Элементы.СписокНазначенийНаОформление.Обновить();
		
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаОтчетыКомитентамОЗакупках Тогда
		
		Элементы.Поставщик.Видимость = Ложь;
		Элементы.Назначение.Видимость = Ложь;
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	ОбщегоНазначенияУТКлиент.ИзменитьЭлемент(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Если Копирование Тогда
		ОбщегоНазначенияУТКлиент.СкопироватьЭлемент(Элемент);
	Иначе
		СтруктураОтбор = Новый Структура;
		СтруктураОтбор.Вставить("Организация", Организация);
		СтруктураОтбор.Вставить("Партнер", Комитент);
		
		СтруктураПараметры = Новый Структура("Основание", СтруктураОтбор);
		ОткрытьФорму("Документ.ОтчетКомитентуОЗакупках.Форма.ФормаДокумента", СтруктураПараметры, Элементы.Список);
	КонецЕсли;
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ОбщегоНазначенияУТКлиент.ИзменитьЭлемент(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПровести(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиДокументы(Элементы.Список, Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОтменаПроведения(Команда)
	
	ОбщегоНазначенияУТКлиент.ОтменаПроведения(Элементы.Список, Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкопировать(Команда)
	
	ОбщегоНазначенияУТКлиент.СкопироватьЭлемент(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокУстановитьСнятьПометкуУдаления(Команда)
	
	ОбщегоНазначенияУТКлиент.УстановитьПометкуУдаления(Элементы.Список, Заголовок);
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	ОбщегоНазначенияУТКлиент.УстановитьПометкуУдаления(Элементы.Список, Заголовок);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Оповещение = Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект);
	
	ОбщегоНазначенияУтКлиент.РедактироватьПериод(Период, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Период = ВыбранноеЗначение;
	УстановитьОтборПоПериоду();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоПериоду()
	
	Список.Параметры.УстановитьЗначениеПараметра("НачалоПериода",
		Период.ДатаНачала);
	Список.Параметры.УстановитьЗначениеПараметра("КонецПериода", 
		Период.ДатаОкончания);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОформитьОтчетКомитентуОЗакупках(Команда)
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени("Документ.ОтчетКомитентуОЗакупках.Форма.КОформлению.Команда.ОформитьОтчетКомитентуОЗакупках");
	
	ОформитьОтчетКомитентуОЗакупкахНаКлиенте();
		
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область Прочее

&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Партнер",
		Комитент,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(Комитент));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Организация",
		Организация,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(Организация));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокНазначенийНаОформление,
		"Комитент",
		Комитент,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(Комитент));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокНазначенийНаОформление,
		"Поставщик",
		Поставщик,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(Поставщик));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокНазначенийНаОформление,
		"АналитикаНазначения",
		Назначение,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(Назначение));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокНазначенийНаОформление,
		"Организация",
		Организация,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(Организация));
		
	УстановитьОтборПоПериоду();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УправлениеЭлементамиФормы

&НаСервере
Процедура УстановитьТекущуюСтраницу()
	
	ИмяТекущейСтраницы = "";
	Если Не Параметры.Свойство("ИмяТекущейСтраницы", ИмяТекущейСтраницы) Тогда
		ИмяТекущейСтраницы = Элементы.СписокНазначенийНаОформление.Имя;	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ИмяТекущейСтраницы) Тогда
		ТекущийЭлемент = Элементы[ИмяТекущейСтраницы];
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Условное оформление динамического списка "СписокНазначенийНаОформление"
	СписокУсловноеОформление = СписокНазначенийНаОформление.КомпоновщикНастроек.Настройки.УсловноеОформление;
	СписокУсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

#Область Создание_Документов

&НаКлиенте
Процедура ОформитьОтчетКомитентуОЗакупкахНаКлиенте()
	
	ОчиститьСообщения();
	
	ВыделенныеСтроки = Элементы.СписокНазначенийНаОформление.ВыделенныеСтроки;
	СписокНазначений.Очистить();
	
	Для Каждого Строка Из ВыделенныеСтроки Цикл
		НайденнаяСтрока = Элементы.СписокНазначенийНаОформление.ДанныеСтроки(Строка);
		ДобавленнаяСтрока = СписокНазначений.Добавить();
		ЗаполнитьЗначенияСвойств(ДобавленнаяСтрока, НайденнаяСтрока);
	КонецЦикла;
	
	// Выбор варианта действия и возврат результата в виде имени формы, которую необходимо открыть и ее входящих параметров
	ПараметрыСозданныхДокументов = ОформитьОтчетКомитентуОЗакупкахНаСервере();
	Если ПараметрыСозданныхДокументов.Свойство("ОформитьРядНакладных") И ПараметрыСозданныхДокументов.ОформитьРядНакладных Тогда
		ДлительнаяОперация = ПараметрыСозданныхДокументов.ДлительнаяОперация;
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОформитьОтчетКомитентуОЗакупкахНаКлиентеЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	Иначе
		ОформитьОтчетКомитентуОЗакупкахНаКлиентеЗавершение(Неопределено, ПараметрыСозданныхДокументов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьОтчетКомитентуОЗакупкахНаКлиентеЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		ПараметрыСозданныхДокументов = ДопПараметры;
	Иначе
		ПараметрыСозданныхДокументов = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(ПараметрыСозданныхДокументов.СписокОшибок);
	
	Если ПараметрыСозданныхДокументов.Свойство("ТекстВопросаПользователю") Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения(ПараметрыСозданныхДокументов.ПроцедураОбработкиОтветаПользователя, 
				ЭтотОбъект,
				ПараметрыСозданныхДокументов),
			ПараметрыСозданныхДокументов.ТекстВопросаПользователю,
			РежимДиалогаВопрос.ДаНет);
	ИначеЕсли ПараметрыСозданныхДокументов.Свойство("ИмяФормы") Тогда
		
		Если ПараметрыСозданныхДокументов.Параметры.Свойство("СозданныеДокументы") Тогда
			
			ТекстОповещения = НСтр("ru = 'Создано документов: %1'");
			Если ПараметрыСозданныхДокументов.Параметры.СозданныеДокументы.Количество() > 0 Тогда
				ТекстОповещения = СтрШаблон(ТекстОповещения, ПараметрыСозданныхДокументов.Параметры.СозданныеДокументы.Количество());
				ПоказатьОповещениеПользователя(НСтр("ru = 'Создание документов'"), , ТекстОповещения);
			Иначе
				ТекстОповещения = СтрШаблон(ТекстОповещения, 0);
				ПоказатьОповещениеПользователя(НСтр("ru = 'Создание документов'"), , ТекстОповещения);
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		ОткрытьФорму(ПараметрыСозданныхДокументов.ИмяФормы, 
			ПараметрыСозданныхДокументов.Параметры,
			ЭтаФорма,,,,,);
	КонецЕсли;
	
	Элементы.СписокНазначенийНаОформление.Обновить();
	
КонецПроцедуры

&НаСервере
Функция ОформитьОтчетКомитентуОЗакупкахНаСервере()
	
	Перем СписокОшибок;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ОформитьРядОтчетовКомитентуОЗакупках", Ложь);
	ПараметрыФормы.Вставить("ДлительнаяОперация", Неопределено);
	ПараметрыФормы.Вставить("СписокОшибок", СписокОшибок);
	
	// Разбивка выделенных строк под разные отчеты комитенту
	РезультатыРазбивки = РазделитьСписокНазначенийПоОтчетам();
	РазбивкаПоДокументам = РезультатыРазбивки.МассивТаблиц;
	ДанныеПоРасхождениям = РезультатыРазбивки.ДанныеПоРасхождениям;
	
	ВсегоТаблиц = РазбивкаПоДокументам.Количество();
	
	// Открывается форма созданной накладной, в случае если совпали ключевые поля выделенных строк, и позволяет функциональная опция
	// В ином случае открывается форма со списком созданных накладных
	
	Если ВсегоТаблиц > 0 Тогда
		Если РазбивкаПоДокументам.Количество() > 1 Тогда
			
			ТекстОшибки = "";
			
			Если ДанныеПоРасхождениям.РазличныеОрганизации Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС+ НСтр("ru = '- организациям'");
			КонецЕсли;
			
			Если ДанныеПоРасхождениям.РазличныеКомитенты Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС+ НСтр("ru = '- комитентам (принципалам)'");
			КонецЕсли;
			
			Если ДанныеПоРасхождениям.РазличныеДоговора Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС+ НСтр("ru = '- договорам'");
			КонецЕсли;
			
			Если ДанныеПоРасхождениям.РазличнаяВалюта Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС+ НСтр("ru = '- валютам'");
			КонецЕсли;
			
			Если ДанныеПоРасхождениям.РазличныеНаправленияДеятельности Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС+ НСтр("ru = '- направлениям деятельности'");
			КонецЕсли;
			
			Если ДанныеПоРасхождениям.РазличноеНалогообложениеНДС Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС+ НСтр("ru = '- вариантам налогообложения НДС'");
			КонецЕсли;
			
			Если ДанныеПоРасхождениям.РазличныеНастройкиПоЦенаВключаетНДС Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС+ НСтр("ru ='- вариантам отражения НДС в цене'");
			КонецЕсли;
			
			Если ДанныеПоРасхождениям.РазличныеНастройкиПоСоглашению Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС+ НСтр("ru = '- соглашениям в заказах принципала'");
			КонецЕсли;
			
			Если ДанныеПоРасхождениям.РазличныеНастройкиПоДокументуПриобретения Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС+ НСтр("ru = '- приобретениям, при включенной разбивке по приобретениям в отчете'");
			КонецЕсли;
			
			Если Не ТекстОшибки = "" Тогда
				ТекстОшибки = НСтр("ru = 'Недоступно оформление отчета о закупках по различным:'")+ТекстОшибки;
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "Объект.СписокНазначенийНаОформление", ТекстОшибки, Неопределено);
			КонецЕсли;
			
		ИначеЕсли РазбивкаПоДокументам.Количество() = 1 Тогда
			// Индивидуально
			ПараметрыФормы = ОформитьОтчетКомитентуОЗакупкахПоТаблице(РазбивкаПоДокументам, СписокОшибок);
		КонецЕсли;
	ИначеЕсли СписокНазначений.Количество() > 1 Тогда
		
		// При оформлении документов в пакетном режиме произошли ошибки
		
		ТекстОшибки = НСтр("ru = 'Не выбрано ни одного документа, который можно было бы оформить %1'");
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, НСтр("ru = 'по заказам'"));
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "Объект.СписокРаспоряженияНаОформление",ТекстОшибки, Неопределено);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПараметрыФормы) Тогда
		ПараметрыФормы = Новый Структура();
	Иначе 
		Элементы.СписокНазначенийНаОформление.Обновить();
	КонецЕсли;
	
	РежимБезВопросов = Ложь;
	ПараметрыФормы.Вставить("СписокОшибок", СписокОшибок);
	
	Возврат ПараметрыФормы;
	
КонецФункции

&НаСервере
Функция РазделитьСписокНазначенийПоОтчетам()
	
	РазбиватьОтчетПоДокументам = Ложь;
	ВыбранныеСтроки = СписокНазначений.Выгрузить(,"ДоговорСКомитентом");
	ВыбранныеСтроки.Свернуть("ДоговорСКомитентом");
	
	Для каждого Строка Из ВыбранныеСтроки Цикл
		Если ЗначениеЗаполнено(Строка.ДоговорСКомитентом) Тогда
			РазбиватьОтчетПоДокументам = РазбиватьОтчетПоДокументам Или ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.ДоговорСКомитентом, "РазбиватьОтчетПоДокументам");
		КонецЕсли;
	КонецЦикла;
	
	КолонкиДляВыгрузки = "Организация, Комитент, ДоговорСКомитентом, КонтрагентКомитент, Валюта, НаправлениеДеятельности, НалогообложениеНДС, ЦенаВключаетНДС, Соглашение";
	Если РазбиватьОтчетПоДокументам Тогда
		КолонкиДляВыгрузки = КолонкиДляВыгрузки + ", ДокументПриобретения";
	КонецЕсли;
	
	ПараметрыУникальныхДокументов = СписокНазначений.Выгрузить(,КолонкиДляВыгрузки);
	ПараметрыУникальныхДокументов.Свернуть(КолонкиДляВыгрузки, "");
	Если Не РазбиватьОтчетПоДокументам Тогда
		ПараметрыУникальныхДокументов.Колонки.Добавить("ДокументПриобретения", Новый ОписаниеТипов("ДокументСсылка.ПриобретениеТоваровУслуг"));
	КонецЕсли;
	
	МассивТаблиц = Новый Массив();
	Для каждого СтрокаПараметровДокумента Из ПараметрыУникальныхДокументов Цикл
		
		ОтборДляСпискаНазначений = Новый Структура;
		ОтборДляСпискаНазначений.Вставить("Организация", СтрокаПараметровДокумента.Организация);
		ОтборДляСпискаНазначений.Вставить("Комитент", СтрокаПараметровДокумента.Комитент);
		ОтборДляСпискаНазначений.Вставить("Валюта", СтрокаПараметровДокумента.Валюта);
		ОтборДляСпискаНазначений.Вставить("ДоговорСКомитентом", СтрокаПараметровДокумента.ДоговорСКомитентом);
		ОтборДляСпискаНазначений.Вставить("КонтрагентКомитент", СтрокаПараметровДокумента.КонтрагентКомитент);
		ОтборДляСпискаНазначений.Вставить("НаправлениеДеятельности", СтрокаПараметровДокумента.НаправлениеДеятельности);
		ОтборДляСпискаНазначений.Вставить("НалогообложениеНДС", СтрокаПараметровДокумента.НалогообложениеНДС);
		ОтборДляСпискаНазначений.Вставить("ЦенаВключаетНДС", СтрокаПараметровДокумента.ЦенаВключаетНДС);
		ОтборДляСпискаНазначений.Вставить("Соглашение", СтрокаПараметровДокумента.Соглашение);
		Если РазбиватьОтчетПоДокументам Тогда
			ОтборДляСпискаНазначений.Вставить("ДокументПриобретения", СтрокаПараметровДокумента.ДокументПриобретения);
		КонецЕсли;
		СтрокиСпискаНазначенийПоОтбору = СписокНазначений.НайтиСтроки(ОтборДляСпискаНазначений);
		МассивТаблиц.Добавить(СписокНазначений.Выгрузить(СтрокиСпискаНазначенийПоОтбору));
		
	КонецЦикла;
	
	ДанныеПоРасхождениям = ПолучитьДанныеПоРасхождениюРеквизитовВыбранныхДокументов(ПараметрыУникальныхДокументов);
	
	Результат = Новый Структура();
	Результат.Вставить("МассивТаблиц", МассивТаблиц);
	Результат.Вставить("ДанныеПоРасхождениям", ДанныеПоРасхождениям);
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоРасхождениюРеквизитовВыбранныхДокументов(ПараметрыУникальныхДокументов)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаПараметровДокументов.Организация КАК Организация,
	               |	ТаблицаПараметровДокументов.Комитент КАК Комитент,
	               |	ТаблицаПараметровДокументов.ДоговорСКомитентом КАК ДоговорСКомитентом,
	               |	ТаблицаПараметровДокументов.КонтрагентКомитент КАК КонтрагентКомитент,
	               |	ТаблицаПараметровДокументов.Валюта КАК Валюта,
	               |	ТаблицаПараметровДокументов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	               |	ТаблицаПараметровДокументов.НалогообложениеНДС КАК НалогообложениеНДС,
	               |	ТаблицаПараметровДокументов.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	               |	ТаблицаПараметровДокументов.Соглашение КАК Соглашение,
	               |	ТаблицаПараметровДокументов.ДокументПриобретения КАК ДокументПриобретения
	               |	
	               |ПОМЕСТИТЬ ТаблицаПараметровДокументов
	               |ИЗ
	               |	&ТаблицаПараметровДокументов КАК ТаблицаПараметровДокументов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаПараметровДокументов.Организация) КАК Организация,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаПараметровДокументов.Комитент) КАК Комитент,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаПараметровДокументов.ДоговорСКомитентом) КАК ДоговорСКомитентом,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаПараметровДокументов.КонтрагентКомитент) КАК КонтрагентКомитент,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаПараметровДокументов.Валюта) КАК Валюта,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаПараметровДокументов.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаПараметровДокументов.НалогообложениеНДС) КАК НалогообложениеНДС,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаПараметровДокументов.ЦенаВключаетНДС) КАК ЦенаВключаетНДС,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаПараметровДокументов.Соглашение) КАК Соглашение,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	               |		КОГДА Договоры.Ссылка ЕСТЬ NULL
	               |			ТОГДА ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	               |		ИНАЧЕ ТаблицаПараметровДокументов.ДокументПриобретения
	               |	КОНЕЦ) КАК ДокументПриобретения
	               |ПОМЕСТИТЬ ТаблицаКоличестваРазличных
	               |ИЗ
	               |	ТаблицаПараметровДокументов КАК ТаблицаПараметровДокументов
	               |	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	               |		ПО Договоры.Ссылка = ТаблицаПараметровДокументов.ДоговорСКомитентом
	               |		И Договоры.РазбиватьОтчетПоДокументам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.Организация > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличныеОрганизации,
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.Комитент > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличныеКомитенты,
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.ДоговорСКомитентом > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличныеДоговора,
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.КонтрагентКомитент > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличныеКонтрагенты,
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.Валюта > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличнаяВалюта,
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.НаправлениеДеятельности > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличныеНаправленияДеятельности,
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.НалогообложениеНДС > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличноеНалогообложениеНДС,
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.ЦенаВключаетНДС > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличныеНастройкиПоЦенаВключаетНДС,
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.Соглашение > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличныеНастройкиПоСоглашению,
	               |	ВЫБОР
	               |		КОГДА ТаблицаКоличестваРазличных.ДокументПриобретения > 1
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК РазличныеНастройкиПоДокументуПриобретения
	               |ИЗ
	               |	ТаблицаКоличестваРазличных КАК ТаблицаКоличестваРазличных";
	Запрос.УстановитьПараметр("ТаблицаПараметровДокументов", ПараметрыУникальныхДокументов);
	
	ИнформацияПоРазличнымДаннымВыбранныхДокументов = Новый Структура();
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличныеОрганизации",Ложь);
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличныеКомитенты",Ложь);
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличныеДоговора",Ложь);
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличныеКонтрагенты",Ложь);
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличнаяВалюта",Ложь);
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличныеНаправленияДеятельности",Ложь);
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличноеНалогообложениеНДС",Ложь);
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличныеНастройкиПоЦенаВключаетНДС",Ложь);
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличныеНастройкиПоСоглашению",Ложь);
	ИнформацияПоРазличнымДаннымВыбранныхДокументов.Вставить("РазличныеНастройкиПоДокументуПриобретения",Ложь);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ИнформацияПоРазличнымДаннымВыбранныхДокументов, Выборка);
	КонецЕсли;

	Возврат ИнформацияПоРазличнымДаннымВыбранныхДокументов;
КонецФункции

&НаСервере
Функция ОформитьОтчетКомитентуОЗакупкахПоТаблице(РазбивкаПоДокументам, СписокОшибок)
	
	СозданныеДокументы = Новый СписокЗначений();
	
	ТаблицаДокументов = РазбивкаПоДокументам[0];
	ПерваяСтрока  = ТаблицаДокументов[0];
	
	МетаданныеОтчетаКомитентуОЗакупках = Метаданные.Документы.ОтчетКомитентуОЗакупках;
	ИмяОтчетаКомитентуОЗакупках        = МетаданныеОтчетаКомитентуОЗакупках.Имя;
	
	НастройкиФормы = Новый Структура();
	ПараметрыФормы = Новый Структура();

	Назначения = ТаблицаДокументов.ВыгрузитьКолонку("Назначение");
	ДокументыПриобретения = ТаблицаДокументов.ВыгрузитьКолонку("ДокументПриобретения");
	
	СтруктураПоиска = Документы.ОтчетКомитентуОЗакупках.СтруктураЗначащихРеквизитов();
	СтруктураПоиска.Партнер = ПерваяСтрока.Комитент;
	СтруктураПоиска.Организация = ПерваяСтрока.Организация;
	СтруктураПоиска.Договор = ПерваяСтрока.ДоговорСКомитентом;
	СтруктураПоиска.Контрагент = ПерваяСтрока.КонтрагентКомитент;
	СтруктураПоиска.Валюта = ПерваяСтрока.Валюта;
	СтруктураПоиска.ДокументПриобретения = ПерваяСтрока.ДокументПриобретения;
	
	ЗаполнитьЗначенияСвойств(СтруктураПоиска, ПерваяСтрока);
	
	РеквизитыШапки = Новый Структура();
	ОбщегоНазначенияУТКлиентСервер.ДополнитьСтруктуру(РеквизитыШапки, СтруктураПоиска, Истина);
	
	ПараметрыФормы.Вставить("РеквизитыШапки",    РеквизитыШапки);
	ПараметрыФормы.Вставить("МассивНазначений",     Назначения);
	ПараметрыФормы.Вставить("МассивДокументовПриобретения",     ДокументыПриобретения);
	ПараметрыФормы.Вставить("ЗаполнятьПоДаннымКОформлению", Истина);
	
	НастройкиФормы.Вставить("ИмяФормы", "Документ." + ИмяОтчетаКомитентуОЗакупках + ".Форма.ФормаДокумента");
	
	// Для вывода сообщения о количестве созданных документов
	СозданныеДокументы.Добавить(ПредопределенноеЗначение("Документ." + МетаданныеОтчетаКомитентуОЗакупках.Имя + ".ПустаяСсылка"));
	
	ПараметрыФормы.Вставить("СозданныеДокументы", СозданныеДокументы);
	ПараметрыСОснованием = Новый Структура("Основание", ПараметрыФормы);
	
	НастройкиФормы.Вставить("Параметры", ПараметрыСОснованием);
	
	Возврат НастройкиФормы;
	
КонецФункции

#КонецОбласти

#КонецОбласти
