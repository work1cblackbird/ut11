#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Партнер, Соглашение";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Организация", Параметры);	
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Партнер, Организация";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Менеджер", Параметры);
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Менеджер";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Подразделение", Параметры);
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Организация";
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Договор, Валюта";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Организация";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "БанковскийСчет", Параметры);
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Организация";
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Валюта";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Организация";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Касса", Параметры);
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "СпособРасчетаВознаграждения";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "СпособРасчетаВознаграждения";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "ПроцентВознаграждения", Параметры);
	
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Услуга, СпособРасчетаВознаграждения, СтавкаНДСВознаграждения");
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПриходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.СчетНаОплатуКлиенту.ДобавитьКомандуСоздатьНаОснованииСчетаНаОплатуРеализацияАкт(КомандыСозданияНаОсновании);
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ИсправлениеДокументов.ДобавитьКомандуИсправление(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	ИсправлениеДокументов.ДобавитьКомандуСторно(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	
	ОтчетКомитентуОЗакупкахЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Отчет комитенту (принципалу) о продажах".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//  Неопределено - Нет комды создания на основании.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ОтчетКомитентуОЗакупкахЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//  СпособРасчетаВознаграждения - ПеречислениеСсылка.СпособыРасчетаКомиссионногоВознаграждения - способ расчета вознаграждения.
//  МассивВсехРеквизитов - Массив из Строка - Массив всех имен реквизитов, зависимых от хозяйственной операции.
//  МассивРеквизитовОперации - Массив из Строка - Массив имен реквизитов, используемых в выбранной хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоСпособуРасчетаВознаграждения(СпособРасчетаВознаграждения, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ПроцентВознаграждения");
	МассивВсехРеквизитов.Добавить("СтавкаНДСВознаграждения");
	МассивВсехРеквизитов.Добавить("СуммаНДСВознаграждения");
	МассивВсехРеквизитов.Добавить("Товары.СуммаВознаграждения");
	МассивВсехРеквизитов.Добавить("Товары.СуммаНДСВознаграждения");
	МассивВсехРеквизитов.Добавить("СуммаВознаграждения");
	МассивВсехРеквизитов.Добавить("Услуга");
	
	МассивРеквизитовОперации = Новый Массив;
	Если СпособРасчетаВознаграждения <> Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается Тогда
		МассивРеквизитовОперации.Добавить("ПроцентВознаграждения");
		МассивРеквизитовОперации.Добавить("СтавкаНДСВознаграждения");
		МассивРеквизитовОперации.Добавить("СуммаНДСВознаграждения");
		МассивРеквизитовОперации.Добавить("Товары.СуммаВознаграждения");
		МассивРеквизитовОперации.Добавить("Товары.СуммаНДСВознаграждения");
		МассивРеквизитовОперации.Добавить("СуммаВознаграждения");
		МассивРеквизитовОперации.Добавить("Услуга");
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ОтчетКомитенту - Ссылка на документ.
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа.
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента+ДанныеДокумента.СуммаВознаграждения КАК СуммаДокумента,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов,
	|
	|	ДанныеДокумента.СуммаДокумента+ДанныеДокумента.СуммаВознаграждения КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|
	|	ДанныеДокумента.Проведен КАК Проведен
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		Партнер = Выборка.Партнер;
		Контрагент = Выборка.Контрагент;
		Договор = Выборка.Договор;
		НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
		ПорядокРасчетов = Выборка.ПорядокРасчетов;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		СуммаВознаграждения = Выборка.СуммаВознаграждения;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		НаправлениеДеятельности = Справочники.НаправленияДеятельности.ПустаяСсылка();
		ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		СуммаВознаграждения = 0;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("Дата", Дата);
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("Партнер", Партнер);
	СтруктураРеквизитов.Вставить("Контрагент", Контрагент);
	СтруктураРеквизитов.Вставить("Договор", Договор);
	СтруктураРеквизитов.Вставить("ПорядокРасчетов", ПорядокРасчетов);
	СтруктураРеквизитов.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала);
	СтруктураРеквизитов.Вставить("СуммаДокумента", СуммаДокумента);
	СтруктураРеквизитов.Вставить("СуммаВзаиморасчетов", СуммаВзаиморасчетов); 
	СтруктураРеквизитов.Вставить("СуммаВознаграждения", СуммаВознаграждения);
	СтруктураРеквизитов.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Функция возвращает стуктуру значащих реквизитов документа
//
// Возвращаемое значение:
//	Структура - Реквизиты документа.
//
Функция СтруктураЗначащихРеквизитов() Экспорт
	
	Возврат Новый Структура("
		|Партнер,
		|Контрагент,
		|Договор,
		|Организация,
		|Соглашение,
		|Валюта,
		|Подразделение,
		|НалогообложениеНДС,
		|ЦенаВключаетНДС,
		|НаправлениеДеятельности,
		|ДокументПриобретения
		|");
	
КонецФункции


// Функция возвращает текст запроса для выбора товаров и работ
//
// Параметры:
//  ИмяВременнойТаблицы - Неопределено, Строка - имя временной таблицы.
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстаткиПоНазначениям(ИмяВременнойТаблицы = Неопределено) Экспорт
	
	// текст запроса содержит литералы для замены.
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Организация КАК Организация,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Характеристика КАК Характеристика,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Назначение КАК Назначение,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.ДокументПриобретения КАК ДокументПриобретения,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.ДокументПриобретения.Контрагент КАК Поставщик,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.НомерГТД КАК НомерГТД,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Валюта КАК Валюта,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.КоличествоОстаток КАК Количество,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТ,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.КоличествоОстаток / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоУпаковок,
	               |	ВЫБОР
	               |		КОГДА ПриобретениеТоваровУслуг.ЦенаВключаетНДС
	               |			ТОГДА ВЫРАЗИТЬ(ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.СуммаСНДСОстаток / ВЫБОР
	               |						КОГДА ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.КоличествоОстаток = 0
	               |							ТОГДА 1
	               |						ИНАЧЕ ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.КоличествоОстаток
	               |					КОНЕЦ КАК ЧИСЛО(31, 2))
	               |		ИНАЧЕ ВЫРАЗИТЬ((ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.СуммаСНДСОстаток - ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.СуммаНДСОстаток) / ВЫБОР
	               |					КОГДА ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.КоличествоОстаток = 0
	               |						ТОГДА 1
	               |					ИНАЧЕ ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.КоличествоОстаток
	               |				КОНЕЦ КАК ЧИСЛО(31, 2))
	               |	КОНЕЦ КАК Цена,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.СуммаСНДСОстаток КАК СуммаСНДС,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.СуммаНДСОстаток КАК СуммаНДС,
	               |	ВЫБОР
	               |		КОГДА ПриобретениеТоваровУслуг.ЦенаВключаетНДС
	               |			ТОГДА ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.СуммаСНДСОстаток
	               |		ИНАЧЕ ВЫРАЗИТЬ(ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.СуммаСНДСОстаток - ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.СуммаНДСОстаток КАК ЧИСЛО(31, 2))
	               |	КОНЕЦ КАК Сумма,
	               |	ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Назначение.Заказ КАК ЗаказКлиента,
	               |	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
	               |		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС
	               |,ИмяВременнойТаблицы
	               |ИЗ
	               |	РегистрНакопления.ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупках.Остатки(
	               |			,
	               |			(НЕ &ИспользоватьОтборПоНазначениям
	               |				ИЛИ &ИспользоватьОтборПоНазначениям
	               |					И Назначение В (&МассивНазначений))
	               |			И (НЕ &ИспользоватьОтборПоДокументам
	               |				ИЛИ &ИспользоватьОтборПоДокументам
	               |					И ДокументПриобретения В (&МассивДокументовПриобретения))
	               |				И (НЕ &ИспользоватьОтборПоПоставщику
	               |					ИЛИ &ИспользоватьОтборПоПоставщику
	               |						И ДокументПриобретения.Контрагент = &Поставщик)
	               |				И Назначение.Договор = &Договор
	               |				И Валюта = &Валюта
	               |				И Организация = &Организация) КАК ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	               |		ПО (ПриобретениеТоваровУслуг.Ссылка = ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.ДокументПриобретения)
	               |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних(&Период,
	               |			Страна = &СтранаРегистрации ИЛИ Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтавкиНДСНоменклатуры
	               |		ПО ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
	               |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС.СрезПоследних(&Период, Страна = &СтранаРегистрации) КАК ОсновныеСтавкиНДС
	               |		ПО (ИСТИНА)
	               |";

	
	ТекстДляЗамены = "";
	ТекстУпорядочивания = "";
	
	Если ЗначениеЗаполнено(ИмяВременнойТаблицы) Тогда
		ТекстДляЗамены = "ПОМЕСТИТЬ "+ИмяВременнойТаблицы;
	Иначе
		ТекстУпорядочивания = "
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Номенклатура,
		|	Характеристика,
		|	Упаковка,
		|	Назначение,
		|	ДокументПриобретения,
		|	ЗаказКлиента
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Номенклатура.ЕдиницаИзмерения",
		"ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Номенклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",ИмяВременнойТаблицы", ТекстДляЗамены) + ТекстУпорядочивания;
	
	Возврат ТекстЗапроса;
КонецФункции

// Процедура заполнения товаров в документе
//
// Параметры:
//  Объект - ДокументОбъект.ОтчетКомитентуОЗакупках - документ.
//  СписокНазначений - Массив из СправочникСсылка.Назначения - список назначений, по которым подбираются товары.
//  СписокДокументовПриобретения - Массив - из ДокументСсылка.ПриобретениеТоваровУслуг, ДокументСсылка.КорректировкаПриобретения,
//         ДокументСсылка.ВозвратТоваровПоставщику - список документов, которые изменяли данные по закупленным работам и товарам.
//
Процедура ЗаполнитьПоТоварамУслугамКОформлениюОтчетовКомитентуОЗакупках(Объект, СписокНазначений, СписокДокументовПриобретения) Экспорт
	
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
	"Документ.ОтчетКомитентуОЗакупках.МодульМенеджера.ЗаполнитьПоТоварамУслугамКОформлениюОтчетовКомитентуОЗакупках");
	КоличествоОбработанныхДанных = 0;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(ТекстЗапросаТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстаткиПоНазначениям());

	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Валюта", Объект.Валюта);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Договор", ?(ЗначениеЗаполнено(Объект.Договор), Объект.Договор, Неопределено));
	
	Запрос.УстановитьПараметр("МассивНазначений", СписокНазначений);
	Запрос.УстановитьПараметр("ИспользоватьОтборПоНазначениям", (СписокНазначений.Количество()>0));
	
	Запрос.УстановитьПараметр("МассивДокументовПриобретения", СписокДокументовПриобретения);
	Запрос.УстановитьПараметр("ИспользоватьОтборПоДокументам", (СписокДокументовПриобретения.Количество()>0));
	
	Запрос.УстановитьПараметр("Поставщик", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ИспользоватьОтборПоПоставщику", Ложь);
	
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(Объект.Организация));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Номенклатура.ЕдиницаИзмерения",
		"ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупкахОстатки.Номенклатура"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.Товары.Очистить();
	
	ВыборкаПоНоменклатуре = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл
		
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНоменклатуре);
		
		КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + 1;
	КонецЦикла;
	
	ПроверитьНаличиеПриобретенияИИсправительнойКорректировкиВОдномОтчете(Объект);
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, КоличествоОбработанныхДанных);
	
КонецПроцедуры

// Функция возращает результат проверки по нахождению приобретения и исправительной корректировки в одном отчете
//
// Параметры:
//  Объект - ДокументОбъект.ОтчетКомитентуОЗакупках - документ.
//
// Возвращаемое значение:
//  Булево - результат проверки.
//
Функция ПроверитьНаличиеПриобретенияИИсправительнойКорректировкиВОдномОтчете(Объект) Экспорт
	
	Отказ = Ложь;
	//++ Локализация
	
	Если Объект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
			
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА ТоварыОтчета.ДокументПриобретения ССЫЛКА Документ.КорректировкаПриобретения
		               |			ТОГДА ВЫРАЗИТЬ(ТоварыОтчета.ДокументПриобретения КАК Документ.КорректировкаПриобретения)
		               |		КОГДА ТоварыОтчета.ДокументПриобретения ССЫЛКА Документ.ПриобретениеТоваровУслуг
		               |			ТОГДА ВЫРАЗИТЬ(ТоварыОтчета.ДокументПриобретения КАК Документ.ПриобретениеТоваровУслуг)
		               |	КОНЕЦ КАК ДокументПриобретения,
					   |	ТоварыОтчета.НомерСтроки КАК НомерСтроки
		               |ПОМЕСТИТЬ ТоварыОтчета
		               |ИЗ
		               |	&ТоварыОтчета КАК ТоварыОтчета
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА Товары.ДокументПриобретения ССЫЛКА Документ.КорректировкаПриобретения
		               |				И Товары.ДокументПриобретения.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
		               |			ТОГДА Товары.ДокументПриобретения.ДокументОснование
		               |		ИНАЧЕ Товары.ДокументПриобретения
		               |	КОНЕЦ КАК ДокументПриобретения,
		               |	СУММА(ВЫБОР
		               |			КОГДА Товары.ДокументПриобретения ССЫЛКА Документ.КорректировкаПриобретения
		               |					И Товары.ДокументПриобретения.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
		               |				ТОГДА 1
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК КоличествоКорректировок,
		               |	СУММА(ВЫБОР
		               |			КОГДА Товары.ДокументПриобретения ССЫЛКА Документ.ПриобретениеТоваровУслуг
		               |				ТОГДА 1
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК КоличествоПриобретений,
					   |	МАКСИМУМ(ВЫБОР
		               |		КОГДА Товары.ДокументПриобретения ССЫЛКА Документ.КорректировкаПриобретения
		               |				И Товары.ДокументПриобретения.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
		               |			ТОГДА Товары.НомерСтроки
					   |		ИНАЧЕ 0
					   |	КОНЕЦ) КАК НомерСтроки
		               |ПОМЕСТИТЬ ДанныеТоваров
		               |ИЗ
		               |	ТоварыОтчета КАК Товары
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВЫБОР
		               |		КОГДА Товары.ДокументПриобретения ССЫЛКА Документ.КорректировкаПриобретения
		               |				И Товары.ДокументПриобретения.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
		               |			ТОГДА Товары.ДокументПриобретения.ДокументОснование
		               |		ИНАЧЕ Товары.ДокументПриобретения
		               |	КОНЕЦ
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеТоваров.ДокументПриобретения КАК ДокументПриобретения,
					   |	ДанныеТоваров.НомерСтроки КАК НомерСтроки
		               |ИЗ
		               |	ДанныеТоваров КАК ДанныеТоваров
		               |ГДЕ
		               |	ДанныеТоваров.КоличествоКорректировок > 0
		               |	И ДанныеТоваров.КоличествоПриобретений > 0";
			
		Запрос.Параметры.Вставить("ТоварыОтчета", Объект.Товары.Выгрузить());
		
		СтрокаКорректировки = Запрос.Выполнить().Выбрать();
		КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(Объект);

		Пока СтрокаКорректировки.Следующий() Цикл
			ТекстСообщения = НСтр("ru = 'В одном отчете не может быть документа приобретения и исправительной корректировки по нему. Необходимо сделать раздельные отчеты.'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаКорректировки.НомерСтроки, "ДокументПриобретения");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, "Объект", Отказ);
		КонецЦикла;
		
	КонецЕсли;
	//-- Локализация
	
	Возврат Отказ;
	
КонецФункции

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  См. Справочники.Назначения.МакетФормыВыбораНазначений
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.Договор  = "Объект.Договор";
	
	ШаблонНазначения.ТипыНазначений = Новый Массив;
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ПоставкаПодПринципала);
	
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ВсеНазначения", Истина, "Объект.Товары.Назначение");
	
	Возврат МакетФормы;
	
КонецФункции


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Партнер)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Возвращает параметры механизма взаиморасчетов.
//
// Параметры:
// 	ДанныеЗаполнения - ДокументОбъект, СправочникОбъект, ДокументСсылка, СправочникСсылка, Структура, ДанныеФормыСтруктура - Объект или коллекция для
//              расчета параметров взаиморасчетов.
//
// Возвращаемое значение:
// 	Массив из см. ВзаиморасчетыСервер.ПараметрыМеханизма
//
Функция ПараметрыВзаиморасчеты(ДанныеЗаполнения = Неопределено) Экспорт
	
	МассивСтруктур = Новый Массив;
	
	#Область ОтчетКомитентаОЗакупках
	
	СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();
	СтруктураПараметров.ЭтоПродажаЗакупка                = Истина;
	СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
		
	СтруктураПараметров.КурсЧислитель                    = 1;
	СтруктураПараметров.КурсЗнаменатель                  = 1;
	
	СтруктураПараметров.ПутьКДаннымТЧ                    = "Объект.Товары";
	СтруктураПараметров.ПутьКДаннымТЧРасшифровкаПлатежа  = "Объект.РасшифровкаПлатежаСКлиентом";
	СтруктураПараметров.СуммаДокумента                   = "Объект.СуммаДокумента";
	СтруктураПараметров.ИмяРеквизитаТЧЗаказ              = "ЗаказКлиента";
	СтруктураПараметров.ВалютаВзаиморасчетов             = "Объект.Валюта";
	СтруктураПараметров.СуммаВзаиморасчетов              = "Объект.СуммаДокумента";
	
	СтруктураПараметров.БанковскийСчетОрганизации        = "Объект.БанковскийСчет";
	СтруктураПараметров.БанковскийСчетКонтрагента        = "";
	СтруктураПараметров.Менеджер                         = "Объект.Менеджер";
	СтруктураПараметров.НомерВходящегоДокумента          = "";
	СтруктураПараметров.ДатаВходящегоДокумента           = "";
	
	СтруктураПараметров.ЭлементыФормы.НадписьЭтапы       = "ДекорацияЭтапыОплаты";
	СтруктураПараметров.ЭлементыФормы.ЗачетОплаты        = "ЗачетОплаты";
	СтруктураПараметров.ЭлементыФормы.НадписьРасчеты     = "ДекорацияСостояниеРасчетов";
	
	СтруктураПараметров.ЭлементыФормы.ГруппаФинансовогоУчета  = "ГруппаФинансовогоУчета";
	СтруктураПараметров.ЭлементыФормы.НаправлениеДеятельности = "НаправлениеДеятельности";
	
	СтруктураПараметров.ПутьКДаннымТЧЭтапыОплаты         = "Объект.ЭтапыГрафикаОплаты";
	СтруктураПараметров.НадписьЭтапыОплаты               = "Форма.НадписьЭтапыОплаты";
	СтруктураПараметров.ИсточникСуммТабличнаяЧасть       = Истина;
	СтруктураПараметров.ГрафикОплаты                     = "Объект.ГрафикОплаты";
	СтруктураПараметров.ИмяРеквизитаТЧСуммаСНДС          = "СуммаВзаиморасчетов";
	
	СтруктураПараметров.ОбъектРасчетов                   = "Объект.Товары.ОбъектРасчетов";
	
	СтруктураПараметров.НакладнаяПоЗаказам               = Константы.ВариантОбособленияТоваровВПродажах.Получить() = Перечисления.ВариантыОбособленияТоваровВПродажах.ЗаказКлиента;
	СтруктураПараметров.ЭтапыОплатыТолькоПросмотр        = НЕ (ПраваПользователяПовтИсп.ОтклонениеОтУсловийПродаж()
										ИЛИ НЕ Константы.ВариантОбособленияТоваровВПродажах.Получить() = Перечисления.ВариантыОбособленияТоваровВПродажах.ЗаказКлиента);
	
	МассивСтруктур.Добавить(СтруктураПараметров);
	
	#КонецОбласти
	
	Возврат МассивСтруктур;
	
КонецФункции

#КонецОбласти

#Область УчетНДС

// Возвращает структуру параметров для заполнения налогообложения НДС закупки.
//
// Параметры:
//  Объект - ДокументОбъект.ОтчетКомитенту - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки
//
Функция ПараметрыЗаполненияНалогообложенияНДСПродажи(Объект) Экспорт

	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата = Объект.Дата;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = Объект.НаправлениеДеятельности;
	ПараметрыЗаполнения.ОтчетКомитентуОЗакупках = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры регистрации счетов-фактур (выданных)
//
// Параметры:
//  Объект		- ДокументОбъект.ОтчетКомитенту, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных
//
Функция ПараметрыРегистрацииСчетовФактурВыданных(Объект) Экспорт
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных();
	
	ПараметрыРегистрации.Ссылка					= Объект.Ссылка;
	ПараметрыРегистрации.Дата					= Объект.Дата;
	ПараметрыРегистрации.Организация			= Объект.Организация;
	ПараметрыРегистрации.Контрагент				= Объект.Контрагент;
	ПараметрыРегистрации.НалогообложениеНДС		= Объект.НалогообложениеНДС;
	ПараметрыРегистрации.РеализацияРаботУслуг	= Истина;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти

// Возвращает структуру с наименованием табличных частей документа, хранящих информацию о товарах.
//
// Возвращаемое значение:
//	Структура - коллекция, содержащая следующие наименования табличных частей:
//		* Товары - ТаблицаЗначений, ТабличнаяЧасть, Неопределено - данные о товарах документа.
//	
Функция КоллекцияТабличныхЧастейТоваров() Экспорт
	
	ТаблицыДокумента = Новый Структура("Товары");
	
	Возврат ТаблицыДокумента;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("Взаиморасчеты");
	
	МеханизмыДокумента.Добавить("Продажи");
	
	
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("Закупки");
	МеханизмыДокумента.Добавить("ОформлениеОтчетовКомитентуОЗакупках");
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетНДС");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ИсправлениеДокументов");
	МеханизмыДокумента.Добавить("ОперативныйУчетТоваровОрганизаций");
	
	ОтчетКомитентуОЗакупкахЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  СписокЗначений, Структура - Данные документа для проведения
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ОтчетКомитентуОЗакупках") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыУслугиКОформлениюОтчетовКомитентуОЗакупках(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРаспоряженияНаОтгрузку(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
		ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры);
		ОтчетКомитентуОЗакупкахЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

#Область ФормированиеГиперссылкиВЖурналеПродаж

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	ПоказыватьЗаказы = ПолучитьФункциональнуюОпцию("ИспользоватьОказаниеАгентскихУслугПриЗакупке")
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РаспоряженияНаОтгрузку)
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупках);
		
	Гиперссылка = Неопределено;
	ТекстГиперссылки = НСтр("ru = 'Отчеты комитентам (принципалам) о закупках'");
	
	Если ПоказыватьЗаказы Тогда
		Гиперссылка = Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСпискаОтчетыКомитентуОЗакупках());
	КонецЕсли;
	
	Возврат Гиперссылка;
	
КонецФункции

Функция ИмяФормыСпискаОтчетыКомитентуОЗакупках() Экспорт
	
	Возврат "Документ.ОтчетКомитентуОЗакупках.Форма.КОформлению";
	
КонецФункции

#КонецОбласти

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                         КАК Период,
	|	ДанныеДокумента.Номер                                        КАК Номер,
	|	ДанныеДокумента.Ссылка                                       КАК Ссылка,
	|	ДанныеДокумента.Валюта                                       КАК Валюта,
	|	ДанныеДокумента.Организация                                  КАК Организация,
	|	ДанныеДокумента.Организация.ВалютаРегламентированногоУчета   КАК ВалютаРегламентированногоУчета,
	|	ДанныеДокумента.Организация.СтранаРегистрации                КАК СтранаРегистрации,
	|	ДанныеДокумента.Партнер                                      КАК Партнер,
	|	ДанныеДокумента.Контрагент                                   КАК Контрагент,
	|	ДанныеДокумента.Услуга                                       КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                     КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)          КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)                 КАК Назначение,
	|	ДанныеДокумента.Договор                                      КАК Договор,
	|	ДанныеДокумента.Менеджер                                     КАК Менеджер,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|	ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		ДанныеДокумента.КонецПериода
	|	КОНЕЦ                                                        КАК КонецПериода,
	|	ДанныеДокумента.Подразделение                                КАК Подразделение,
	|	ДанныеДокумента.ГруппаФинансовогоУчета                       КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.Соглашение                                   КАК Соглашение,
	|	ДанныеДокумента.НаправлениеДеятельности                      КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Комментарий                                  КАК Комментарий,
	|	ДанныеДокумента.СуммаДокумента                               КАК СуммаДокумента,
	|	ДанныеДокумента.ПометкаУдаления                              КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен                                     КАК Проведен,
	|	ДанныеДокумента.Автор                                        КАК Автор,
	|	ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетДоходов, ЛОЖЬ) КАК УчетДоходовПоНД,
	|	ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетЗатрат, ЛОЖЬ) КАК УчетЗатратПоНД
	|
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                            Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",                             Реквизиты.Номер);
	Запрос.УстановитьПараметр("КонецПериода",                      КонецДня(Реквизиты.КонецПериода));
	Запрос.УстановитьПараметр("Валюта",                            Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",              Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",             Перечисления.ХозяйственныеОперации.ОтчетПринципалуОЗакупках);
	Запрос.УстановитьПараметр("НастройкаХозяйственнойОперации",    Справочники.НастройкиХозяйственныхОпераций.ОтчетПринципалуОЗакупках);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",    Реквизиты.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",        Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("Договор",                           Реквизиты.Договор);
	Запрос.УстановитьПараметр("Организация",                       Реквизиты.Организация);
	Запрос.УстановитьПараметр("СтранаРегистрации",                 Реквизиты.СтранаРегистрации);
	Запрос.УстановитьПараметр("Контрагент",                        Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Номенклатура",                      Реквизиты.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",                    Реквизиты.Характеристика);
	Запрос.УстановитьПараметр("Склад",                             Реквизиты.Склад);
	Запрос.УстановитьПараметр("Серия",                             Реквизиты.Серия);
	Запрос.УстановитьПараметр("Назначение",                        Реквизиты.Назначение);
	Запрос.УстановитьПараметр("Менеджер",                          Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("Партнер",                           Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Подразделение",                     Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",            Реквизиты.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("Соглашение",                        Реквизиты.Соглашение);
	Запрос.УстановитьПараметр("ИспользоватьПродажуАгентскихУслуг", ПолучитьФункциональнуюОпцию("ИспользоватьПродажуАгентскихУслуг"));
	Запрос.УстановитьПараметр("ИспользоватьРасширенныеВозможностиЗаказаКлиента", 
		ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
	
	Запрос.УстановитьПараметр("НаправлениеДеятельности",           Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения",   Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	Запрос.УстановитьПараметр("Статус",                            Неопределено);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",           ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка)));
	Запрос.УстановитьПараметр("Комментарий",					   Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("СуммаДокумента",					   Реквизиты.СуммаДокумента);
	Запрос.УстановитьПараметр("ПометкаУдаления",				   Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",					   	   Реквизиты.Проведен);
	Запрос.УстановитьПараметр("НомерНаПечать",		   			   Реквизиты.Номер);
	Если ЗначениеЗаполнено(Реквизиты.Договор) Тогда
		ШаблонСтроки = "ru = 'По договору ""%1""'"; // @НСтр
		ИнформацияПоДоговору = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСтроки, Реквизиты.Договор);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоДоговору",             ИнформацияПоДоговору);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета",
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("УчетДоходовПоНД",                            Реквизиты.УчетДоходовПоНД);
	Запрос.УстановитьПараметр("УчетЗатратПоНД",                             Реквизиты.УчетЗатратПоНД);
	Запрос.УстановитьПараметр("Автор",                                      Реквизиты.Автор);
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	МАКСИМУМ(ДанныеЭтапов.ДатаПлатежа) КАК ДатаПлатежа
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.ЭтапыГрафикаОплаты КАК ДанныеЭтапов
	|ГДЕ
	|	ДанныеЭтапов.Ссылка = &Ссылка
	|";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("ДатаПлатежаПоставщик", Реквизиты.ДатаПлатежа);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Запрос.Параметры.Валюта, 
		Запрос.Параметры.Валюта,
		Запрос.Параметры.Период,
		Запрос.Параметры.Организация);

	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Запрос.Параметры));
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаНоменклатуры") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Номенклатура) Тогда
		СтруктураПолей = Новый Структура("Номенклатура, Характеристика, Серия, Склад, Назначение");
		ЗаполнитьЗначенияСвойств(СтруктураПолей, Запрос.Параметры);
		
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры",
						РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(СтруктураПолей));
	Иначе
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", Неопределено);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры)
	
	НакладнаяПоЗаказам     = ?(Константы.ВариантОбособленияТоваровВПродажах.Получить() = Перечисления.ВариантыОбособленияТоваровВПродажах.ЗаказКлиента,
								"ИСТИНА",
								"ЛОЖЬ");

	#Область КурсыВалютДокумента
	
	ИмяРегистра = "ВременнаяТаблицаКурсыВалютДокумента";

	ТекстЗапросаКурсыВалютДокумента = 
		"ВЫБРАТЬ
		|	ДанныеДокументаШапка.Ссылка КАК Ссылка,
		|	ДанныеДокументаШапка.Организация КАК Организация,
		|	ДанныеДокументаШапка.Дата КАК ДатаКурса,
		|	Таблица.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаДокумента,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаВзаиморасчетов
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.ЭтапыГрафикаОплаты КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДанныеДокументаШапка
		|		ПО Таблица.Ссылка = ДанныеДокументаШапка.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	ДанныеДокументаШапка.Организация КАК Организация,
		|	ДанныеДокументаШапка.Дата КАК ДатаКурса,
		|	ОбъектыРасчетов.Ссылка КАК ОбъектРасчетов,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаДокумента,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаВзаиморасчетов
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.РасшифровкаПлатежаСКлиентом КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДанныеДокументаШапка
		|		ПО Таблица.Ссылка = ДанныеДокументаШапка.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
		|		ПО ОбъектыРасчетов.Объект = Таблица.Ссылка
		|		И НЕ ОбъектыРасчетов.ПометкаУдаления
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	ДанныеДокументаШапка.Организация КАК Организация,
		|	ДанныеДокументаШапка.Дата КАК ДатаКурса,
		|	Таблица.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаДокумента,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаВзаиморасчетов
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.РасшифровкаПлатежаСКлиентом КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДанныеДокументаШапка
		|		ПО Таблица.Ссылка = ДанныеДокументаШапка.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	ДанныеДокументаШапка.Организация КАК Организация,
		|	ДанныеДокументаШапка.Дата КАК ДатаКурса,
		|	Таблица.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаДокумента,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаВзаиморасчетов
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.Товары КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДанныеДокументаШапка
		|		ПО Таблица.Ссылка = ДанныеДокументаШапка.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	ДанныеДокументаШапка.Организация КАК Организация,
		|	ДанныеДокументаШапка.Дата КАК ДатаКурса,
		|	(ВЫБОР
		|		КОГДА &НакладнаяПоЗаказам
		|			ТОГДА Таблица.ЗаказКлиента.ОбъектРасчетов
		|		КОГДА ДанныеДокументаШапка.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамНакладным)
		|			ТОГДА Таблица.ОбъектРасчетов.Договор.ОбъектРасчетов
		|		ИНАЧЕ Таблица.ОбъектРасчетов
		|	КОНЕЦ) КАК ОбъектРасчетов,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаДокумента,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаВзаиморасчетов
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.Товары КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДанныеДокументаШапка
		|		ПО Таблица.Ссылка = ДанныеДокументаШапка.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)";
	
	
	ТекстЗапросаКурсыВалютДокумента = СтрЗаменить(ТекстЗапросаКурсыВалютДокумента,
								"&НакладнаяПоЗаказам",
								НакладнаяПоЗаказам);
									
	ТекстЗапросаКурсыВалютДокумента = ВзаиморасчетыСервер.ПолучитьТаблицуКурсовВалютНаправленийДеятельности(ТекстЗапросаКурсыВалютДокумента);

	ТекстыЗапроса.Добавить(ТекстЗапросаКурсыВалютДокумента, ИмяРегистра);
	
	#КонецОбласти
	
	#Область Продажа
	
	ТекстПродажа = "
		|ВЫБРАТЬ
		|	ДанныеШапки.Ссылка                                                    КАК Ссылка,
		|	ДанныеШапки.Организация                                               КАК Организация,
		|	ДанныеШапки.Партнер                                                   КАК Партнер,
		|	
		|	Таблица.ОбъектРасчетов                                                КАК ОбъектРасчетов,
		|	Таблица.ДатаПлатежа                                                   КАК ДатаПлатежа,
		|	Таблица.Заказ                                                         КАК ЗаказПродажи,
		|	&НакладнаяПоЗаказам                                                   КАК НакладнаяПоЗаказам,
		|	Таблица.СуммаВзаиморасчетов                                           КАК СуммаВзаиморасчетов,
		|	0                                                                     КАК СуммаВзаиморасчетовПоТаре,
		|	Таблица.СуммаПлатежа                                                  КАК Сумма,
		|	
		|	ДанныеШапки.ПорядокРасчетов                                           КАК ПорядокРасчетов,
		|	ДанныеШапки.Дата                                                      КАК ДатаРегистратора,
		|	ДанныеШапки.Номер                                                     КАК НомерРегистратора,
		|	ДанныеШапки.Валюта                                                    КАК ВалютаВзаиморасчетов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоставкаПодПринципала)    КАК ХозяйственнаяОперация,
		|	ДанныеШапки.Дата                                                      КАК ДатаКурса,
		|	ДанныеШапки.Валюта                                                    КАК ВалютаДокумента,
		|	Таблица.ВариантОплаты                                                 КАК ВариантОплаты,
		|	Таблица.СверхЗаказа                                                   КАК СверхЗаказа,
		|	Неопределено                                                          КАК СвязанныйДокумент
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.ЭтапыГрафикаОплаты КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДанныеШапки
		|		ПО Таблица.Ссылка = ДанныеШапки.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)";
		
	#КонецОбласти
	
	#Область УвеличениеПланаОплат
		
	ТекстПланированиеОплат = "
		|ВЫБРАТЬ
		|	ДанныеШапки.Ссылка                                                    КАК Ссылка,
		|	ДанныеШапки.Организация                                               КАК Организация,
		|	ДанныеШапки.Партнер                                                   КАК Партнер,
		|	
		|	Таблица.ОбъектРасчетов                                                КАК ОбъектРасчетов,
		|	ДанныеШапки.Дата                                                      КАК ДатаРегистратора,
		|	ДанныеШапки.Номер                                                     КАК НомерРегистратора,
		|	ДанныеШапки.ПорядокРасчетов                                           КАК ПорядокРасчетов,
		|	ДанныеШапки.Валюта                                                    КАК ВалютаВзаиморасчетов,
		|	ДанныеШапки.Валюта                                                    КАК ВалютаДокумента,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоставкаПодПринципала)    КАК ХозяйственнаяОперация,
		|	ДанныеШапки.ФормаОплаты                                               КАК ФормаОплаты,
		|	
		|	Таблица.ДатаПлатежа                                                   КАК ДатаПлатежа,
		|	Таблица.ВариантОплаты                                                 КАК ВариантОплаты,
		|	Таблица.СуммаВзаиморасчетов                                           КАК КОплате,
		|		
		|	ВЫБОР КОГДА Таблица.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроляОплатыКлиентом.ПредоплатаДоОтгрузки)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ                                                                 КАК ИсключатьПриКонтроле,
		|	&НакладнаяПоЗаказам                                                   КАК НакладнаяПоЗаказам,
		|	Таблица.Заказ                                                         КАК ЗаказПродажи,
		|	Таблица.СверхЗаказа                                                   КАК СверхЗаказа,
		|	Неопределено                                                          КАК СвязанныйДокумент
		|	
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.ЭтапыГрафикаОплаты КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДанныеШапки
		|		ПО Таблица.Ссылка = ДанныеШапки.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Таблица.СуммаВзаиморасчетов > 0";
	
	#КонецОбласти
	
	#Область ЗачетАванса
	
	ТекстЗачетАванса = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                                           КАК Ссылка,
		|	Таблица.Ссылка.Организация                                               КАК Организация,
		|	Таблица.Ссылка.Партнер                                                   КАК Партнер,
		|
		|	ОбъектыРасчетов.Ссылка                                                   КАК ОбъектРасчетовПриемник,
		|	Таблица.ОбъектРасчетов                                                   КАК ОбъектРасчетовИсточник,
		|
		|	Таблица.Ссылка.Валюта                                                    КАК ВалютаВзаиморасчетов,
		|	Таблица.СуммаВзаиморасчетов                                              КАК СуммаВзаиморасчетов,
		|	Таблица.Ссылка.Валюта                                                    КАК ВалютаДокумента,
		|	Таблица.Сумма                                                            КАК Сумма,
		|
		|	Таблица.Ссылка.Дата                                                      КАК ДатаРегистратора,
		|	Таблица.Ссылка.Дата                                                      КАК ДатаКурса,
		|	Таблица.Ссылка.Номер                                                     КАК НомерРегистратора,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса)               КАК ХозяйственнаяОперация
		|	
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.РасшифровкаПлатежаСКлиентом КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
		|			ПО ОбъектыРасчетов.Объект = Таблица.Ссылка
		|			И НЕ ОбъектыРасчетов.ПометкаУдаления
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Таблица.Ссылка.СуммаДокумента > 0";
	
	#КонецОбласти
	
	#Область ТекстТовары
	
	ТекстТовары = "
	
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                                           КАК Ссылка,
		|	Таблица.Ссылка.Организация                                               КАК Организация,
		|	Таблица.Ссылка.Партнер                                                   КАК Партнер,
		|	
		|	Таблица.ОбъектРасчетов                                                   КАК ОбъектРасчетов,
		|	Таблица.Ссылка.Дата                                                      КАК ДатаОтгрузки,
		|	0                                                                        КАК УвеличитьКОтгрузке,
		|	Таблица.СуммаВзаиморасчетов                                              КАК УменьшитьОтгружается,
		|	0                                                                        КАК УвеличитьОтгружается,
		|	Таблица.СуммаВзаиморасчетов                                              КАК СуммаВзаиморасчетов,
		|	Таблица.СуммаВзаиморасчетов                                              КАК УменьшитьКОтгрузке,
		|
		|	Таблица.ЗаказКлиента                                                     КАК ЗаказПродажи,
		|	0                                                                        КАК ЗалогЗаТару,
		|	ЛОЖЬ                                                                     КАК СверхЗаказа,
		|	&НакладнаяПоЗаказам                                                      КАК НакладнаяПоЗаказам,
		|	
		|	Таблица.Ссылка.ПорядокРасчетов                                           КАК ПорядокРасчетов,
		|	Таблица.Ссылка.Дата                                                      КАК ДатаРегистратора,
		|	Таблица.Ссылка.Номер                                                     КАК НомерРегистратора,
		|	Таблица.Ссылка.Валюта                                                    КАК ВалютаВзаиморасчетов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоставкаПодПринципала)       КАК ХозяйственнаяОперация,
		|	Таблица.Ссылка.Валюта                                                    КАК ВалютаДокумента
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.Товары КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)";
		
	#КонецОбласти
	
	ТекстПродажа           = СтрЗаменить(ТекстПродажа,
								"&НакладнаяПоЗаказам",
								НакладнаяПоЗаказам);
	
	ТекстПланированиеОплат = СтрЗаменить(ТекстПланированиеОплат,
								"&НакладнаяПоЗаказам",
								НакладнаяПоЗаказам);
	
	ТекстТовары = СтрЗаменить(ТекстТовары,
								"&НакладнаяПоЗаказам",
								НакладнаяПоЗаказам);
	
	ВзаиморасчетыСервер.ПроведениеПродажи(Запрос, ТекстыЗапроса, Регистры, ТекстПродажа, ТекстПланированиеОплат, ТекстЗачетАванса, ТекстТовары);
	
	ТекстОплата = 
		"ВЫБРАТЬ
		|	ДанныеШапки.Ссылка                                                    КАК Ссылка,
		|	ДанныеШапки.Организация                                               КАК Организация,
		|	ДанныеШапки.Партнер                                                   КАК Партнер,
		|	
		|	ДанныеШапки.Валюта                                                    КАК ВалютаВзаиморасчетов,
		|	Таблица.ОбъектРасчетов                                                КАК ОбъектРасчетов,
		|	Таблица.ЗаказКлиента                                                  КАК Заказ,
		|	-(Таблица.СуммаВзаиморасчетов)                                        КАК Сумма,
		|	-(Таблица.СуммаВзаиморасчетов)                                        КАК СуммаВзаиморасчетов,
		|	0                                                                     КАК УвеличениеОплачивается,
		|	0                                                                     КАК УменьшениеОплачивается,
		|	
		|	ДанныеШапки.Дата                                                      КАК ДатаРегистратора,
		|	ДанныеШапки.Дата                                                      КАК ДатаКурса,
		|	ДАТАВРЕМЯ(1,1,1)                                                      КАК ДатаПогашения,
		|	ДанныеШапки.Номер                                                     КАК НомерРегистратора,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности) КАК ХозяйственнаяОперация,
		|	ДанныеШапки.ФормаОплаты                                               КАК ФормаОплаты,
		|	Неопределено                                                          КАК СтатьяДвиженияДенежныхСредств,
		|	Неопределено                                                          КАК СчетНаОплату,
		|	ДанныеШапки.Валюта                                                    КАК ВалютаДокумента,
		|	НЕОПРЕДЕЛЕНО                                                          КАК СвязанныйДокумент,
		|	Таблица.ОбъектРасчетов.УникальныйИдентификатор                        КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации                                       КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.Товары КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДанныеШапки
		|		ПО Таблица.Ссылка = ДанныеШапки.Ссылка
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Таблица.СуммаВзаиморасчетов < 0";
		
	ВзаиморасчетыСервер.ПроведениеОплатыОтКлиента(Запрос, ТекстыЗапроса, Регистры, ТекстОплата);
	
КонецПроцедуры

Процедура СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры = Неопределено) Экспорт
	
	ТекстЗапросаДанных =
	"ВЫБРАТЬ
	|	""ТоварыРаботыУслуги"" КАК ИсточникДанных,
	|	ИСТИНА КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Валюта КАК ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ДатаСчетаФактуры = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА ТаблицаДокумента.Ссылка.Дата
	|		ИНАЧЕ ТаблицаДокумента.ДатаСчетаФактуры
	|	КОНЕЦ КАК ПериодБазыНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ДатаСчетаФактуры = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА ТаблицаДокумента.Ссылка.Дата
	|		ИНАЧЕ ТаблицаДокумента.ДатаСчетаФактуры
	|	КОНЕЦ КАК ДатаКурса,
	|
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаВзаиморасчетов,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	ИСТИНА КАК ОтражаетсяВРасчетах,
	|	ТаблицаДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ИСТИНА КАК ПересчитыватьПоДаннымРасчетов
	|
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Вознаграждение"" КАК ИсточникДанных,
	|	ЛОЖЬ КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Валюта КАК ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ТаблицаДокумента.Ссылка.Дата КАК ПериодБазыНДС,
	|	ТаблицаДокумента.Ссылка.Дата КАК ДатаКурса,
	|
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтрокиВознаграждения КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаВознаграждения - ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаБезНДС,
	|	ТаблицаДокумента.Ссылка.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения КАК СуммаВзаиморасчетов,
	|	ТаблицаДокумента.СуммаНДСВознаграждения  КАК СуммаНДСВзаиморасчетов,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	ИСТИНА КАК ОтражаетсяВРасчетах,
	|	ТаблицаДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ИСТИНА КАК ПересчитыватьПоДаннымРасчетов
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаДокумента.СуммаВознаграждения <> 0
	|
	|";
	
	РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента(
		Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанных);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоставкаПодПринципала) КАК ХозяйственнаяОперация,
	|	&Партнер                                КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Менеджер                               КАК Ответственный,
	|	&Автор                                  КАК Автор,
	|	&Комментарий                            КАК Комментарий,
	|	&Валюта                                 КАК Валюта,
	|	&СуммаДокумента                         КАК Сумма,
	|	Неопределено                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&ИнформацияПоДоговору                   КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыУслугиКОформлениюОтчетовКомитентуОЗакупках(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупках";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ДокументПриобретения КАК ДокументПриобретения,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.Договор.ПереоцениватьТоварыУслугиКОтчетуКомитенту, ЛОЖЬ)
	|			ТОГДА Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.Договор.ПереоцениватьТоварыУслугиКОтчетуКомитенту, ЛОЖЬ)
	|			ТОГДА Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ИСТИНА КАК Первичное,
	|	ТаблицаТовары.ОбъектРасчетов.УникальныйИдентификатор КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК Суммы
	|		ПО ТаблицаТовары.Ссылка = Суммы.Ссылка
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "Закупки";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
		"// Возврат товаров поставщику.
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПринципалуОЗакупках) КАК ХозяйственнаяОперация,
		|	ДокументШапка.Организация КАК Организация,
		|	ДокументШапка.Подразделение КАК Подразделение,
		|	ДокументШапка.Менеджер КАК Менеджер,
		|
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
		|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
		|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
		|	
		|	ДокументШапка.Партнер КАК Партнер,
		|	ДокументШапка.Контрагент КАК Контрагент,
		|	ДокументШапка.Соглашение КАК Соглашение,
		|	ДокументШапка.Договор КАК Договор,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.ЗаказКлиента <> ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)
		|			ТОГДА ТаблицаТовары.ЗаказКлиента
		|		ИНАЧЕ &Ссылка
		|	КОНЕЦ КАК Заказ,
		|
		|	ТаблицаТовары.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
		|	ДокументШапка.НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
		|
		|	ТаблицаТовары.Количество КАК Количество,
		|
		|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(31,2)) КАК Сумма,
		|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаБезНДС,
		|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
		|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРеглБезНДС,
		|	0 КАК СуммаСкидки,
		|
		|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(31,2)) КАК Стоимость,
		|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(31,2)) КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СтоимостьРегл,
		|	0 КАК ДопРасходы,
		|	0 КАК ДопРасходыБезНДС,
		|
		|	ДокументШапка.Валюта КАК ВалютаДокумента,
		|	ТаблицаТовары.СуммаСНДС КАК СуммаВВалютеДокумента,
		|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
		|
		|	ДокументШапка.Валюта КАК ВалютаВзаиморасчетов,
		|	ТаблицаТовары.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
		|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
		|
		|	ВЫБОР
		|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
		|			ТОГДА ТаблицаТовары.ВидЗапасов
		|		ИНАЧЕ ТаблицаТовары.Номенклатура
		|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
		|	ТаблицаТовары.ОбъектРасчетов КАК ИсточникГФУРасчетов
		|ИЗ
		|	Документ.ОтчетКомитентуОЗакупках.Товары КАК ТаблицаТовары
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДокументШапка
		|		ПО ТаблицаТовары.Ссылка = ДокументШапка.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	АналитикаПоПодразделениям.КлючАналитики   КАК АналитикаУчетаНоменклатуры,
	|	&Организация                              КАК Организация,
	|	ТаблицаТоваров.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТоваров.НомерГТД                   КАК НомерГТД,
	|	ТаблицаТоваров.Количество                 КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ           КАК КоличествоПоРНПТ,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтгрузкаПринятыхСПравомПродажиТоваровСХранения) КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Номенклатура               КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика             КАК Характеристика,
	|	ЗНАЧЕНИЕ (Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ТаблицаТоваров.ДокументПриобретения       КАК ДокументРеализации
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ДанныеШапки
	|		ПО ТаблицаТоваров.Ссылка = ДанныеШапки.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПоПодразделениям
	|	ПО АналитикаПоПодразделениям.Номенклатура = ТаблицаТоваров.Номенклатура
	|		И АналитикаПоПодразделениям.Характеристика = ТаблицаТоваров.Характеристика
	|		И АналитикаПоПодразделениям.Назначение = ТаблицаТоваров.Назначение
	|		И АналитикаПоПодразделениям.МестоХранения = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|
	|ГДЕ
	|	ТаблицаТоваров.Ссылка = &Ссылка
	|	И ДанныеНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ДанныеНоменклатуры.ПрослеживаемыйТовар
	|	И &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);

	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры)
	
	Если Не УчетНДСУП.ТребуетсяПроведениеПоРегистрамНДС(Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстТовары = 
	"ВЫБРАТЬ
	|	Товары.Ссылка                          КАК Ссылка,
	|	Товары.Ссылка.Организация              КАК Организация,
	|	Товары.Номенклатура                    КАК Номенклатура,
	|	Товары.Характеристика                  КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)                           КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)                           КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)                           КАК ХарактеристикаНабора,
	|	Товары.Номенклатура.КодТНВЭД                           КАК КодТНВЭД,
	|	Товары.ВидЗапасов                      КАК ВидЗапасов,
	|	Товары.Ссылка.Дата                     КАК Период,
	|	ЛОЖЬ                                   КАК ИсправлениеОшибок,
	|	ЛОЖЬ                                   КАК КорректировкаПоСогласованиюСторон,
	|	Товары.Ссылка                          КАК ДокументРеализации,
	|	ВЫБОР КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ                                  КАК НалогообложениеНДС,
	|	Товары.Ссылка.Подразделение            КАК Подразделение,
	|	Товары.Ссылка.Контрагент               КАК Контрагент,
	|	Товары.Ссылка.Договор                  КАК Договор,
	|	Товары.Ссылка.Организация              КАК Грузоотправитель,
	|	Товары.Ссылка.Контрагент               КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения ИЛИ Товары.КоличествоУпаковок = 0
	|			ТОГДА Товары.Количество
	|		ИНАЧЕ Товары.КоличествоУпаковок
	|	КОНЕЦ                                  КАК Количество,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ                                  КАК ЕдиницаИзмерения,
	|	Товары.КоличествоПоРНПТ                КАК КоличествоПоРНПТ,
	|	""""                                   КАК Содержание,
	|	Товары.СтавкаНДС                       КАК СтавкаНДС,
	|	Товары.НомерГТД                        КАК НомерГТД,
	|	Товары.ДокументПриобретения            КАК ДокументПриобретения,
	|	Товары.СчетФактураПолученный           КАК СчетФактураПолученный,
	|	Товары.НомерСтроки		               КАК НомерСтроки,
	|	Товары.ИдентификаторСтроки             КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В (&Ссылка)
	|";
	ТекстТовары = СтрЗаменить(
		ТекстТовары,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	УчетНДСУП.ОтразитьОтчетКомитентуОЗакупках(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);

	ТекстВознаграждение = 
	"ВЫБРАТЬ
	|	ОтчетКомитенту.Дата                    КАК Период,
	|	ОтчетКомитенту.Ссылка                  КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту) КАК ХозяйственнаяОперация,
	|	ОтчетКомитенту.Организация             КАК Организация,
	|	ОтчетКомитенту.Подразделение           КАК Подразделение,
	|	ОтчетКомитенту.Контрагент              КАК Контрагент,
	|	ОтчетКомитенту.Договор                 КАК Договор,
	|	НЕОПРЕДЕЛЕНО                           КАК ПокупательКомиссионногоТовара,
	|	ЛОЖЬ                                   КАК РеализацияЧерезКомиссионера,
	|	НЕОПРЕДЕЛЕНО                           КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО                           КАК Грузополучатель,
	|	ЛОЖЬ                                   КАК РеализацияВРозницу,
	|	ОтчетКомитенту.Ссылка                  КАК ДокументРеализации,
	|	ЛОЖЬ                                   КАК ИсправлениеОшибок,
	|	ЛОЖЬ                                   КАК КорректировкаПоСогласованиюСторон,
	|	НЕОПРЕДЕЛЕНО                           КАК ДокументКорректировкиРеализации,
	|	ОтчетКомитентуТовары.ОбъектРасчетов    КАК ОбъектРасчетов,
	|	ВЫБОР КОГДА СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ                                  КАК НалогообложениеНДС,
	|	
	|	ОтчетКомитенту.Услуга                                        КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                                                 КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                                                 КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.НоменклатураКонтрагентов.ПустаяСсылка)   КАК НоменклатураПартнера,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)               КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНабора,
	|	""""                                                         КАК Содержание,
	|	0                                                            КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)   КАК ЕдиницаИзмерения,
	|	0                                                            КАК КоличествоПоРНПТ,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)                  КАК НомерГТД,
	|	ОтчетКомитенту.СтавкаНДСВознаграждения                       КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                                                 КАК КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО                                                 КАК ВидЗапасов,
	|	ОтчетКомитентуТовары.НомерСтроки                             КАК НомерСтроки,
	|	ОтчетКомитентуТовары.ИдентификаторСтрокиВознаграждения             КАК ИдентификаторСтроки,
	|	ОтчетКомитентуТовары.ИдентификаторСтрокиВознаграждения             КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтчетКомитенту) КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК ОтчетКомитентуТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОЗакупках КАК ОтчетКомитенту
	|		ПО (ОтчетКомитенту.Ссылка = ОтчетКомитентуТовары.Ссылка)
	|ГДЕ
	|	ОтчетКомитенту.Ссылка В(&Ссылка)
	|	И ОтчетКомитентуТовары.СуммаВознаграждения <> 0
	|";
	УчетНДСУП.ОтразитьРеализациюКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстВознаграждение);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРаспоряженияНаОтгрузку(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "РаспоряженияНаОтгрузку";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженияНакопления.Расход) КАК ВидДвиженияРегистра,
	|	&Период КАК Период,
	|	ТаблицаТовары.Назначение.Заказ КАК Распоряжение,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	0 КАК КодСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	-ТаблицаТовары.Количество КАК Заказано,
	|	-ТаблицаТовары.Количество КАК КОформлению,
	|	ТаблицаТовары.СуммаСНДС КАК Сумма
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ (ТаблицаТовары.Назначение.Заказ = НЕОПРЕДЕЛЕНО 
	|		ИЛИ НЕ ТаблицаТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказКлиента 
	|		ИЛИ ТаблицаТовары.Назначение.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка))
	|	И ТаблицаТовары.СуммаСНДС <> 0
	|	И &ИспользоватьРасширенныеВозможностиЗаказаКлиента
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтСуммыДокументовВВалютахУчета", ТекстыЗапроса) Тогда
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаНоменклатуры(Запрос);
	УчетНДСУП.УстановитьПараметрыЗапросаСтавкиНДС(Запрос.Параметры, Запрос.Параметры.Организация, Запрос.Параметры.Период);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументаТовары.НомерСтроки             КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	&АналитикаУчетаПоПартнерам                    КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР КОГДА &УчетДоходовПоНД ТОГДА
	|		&НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельностиКонтрагента,
	|	ДанныеДокументаТовары.ЗаказКлиента            КАК ЗаказКлиента,
	|	&АналитикаУчетаНоменклатуры                   КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчетЗатратПоНД ТОГДА
	|		&НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельностиНоменклатуры,
	|	ДанныеДокумента.Подразделение                 КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)     КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяССылка) КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА ДанныеДокумента.СтавкаНДСВознаграждения = &СтавкаНДСНаЭкспорт
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА ДанныеДокумента.СтавкаНДСВознаграждения = &СтавкаНДСНаЭкспорт
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ КАК НалогообложениеНДС,
	|
	|	&Менеджер КАК Менеджер,
	|
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|
	|	ЕСТЬNULL(Суммы.СуммаСНДСУпр, 
	|		ВЫРАЗИТЬ(ДанныеДокументаТовары.СуммаВознаграждения 
	|			* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))) КАК СуммаВыручки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр,
	|		ВЫРАЗИТЬ((ДанныеДокументаТовары.СуммаВознаграждения 
	|				- ДанныеДокументаТовары.СуммаНДСВознаграждения)
	|			* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))) КАК СуммаВыручкиБезНДС,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|		ВЫРАЗИТЬ((ДанныеДокументаТовары.СуммаВознаграждения
	|				- ДанныеДокументаТовары.СуммаНДСВознаграждения)
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))) КАК СуммаВыручкиРегл,
	|
	|	ЕСТЬNULL(Суммы.СуммаСНДСРегл,
	|		ВЫРАЗИТЬ(ДанныеДокументаТовары.СуммаВознаграждения 
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))) КАК СуммаВыручкиСНДСРегл,
	|
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ДанныеДокумента.Договор                  КАК Договор,
	|	ДанныеДокумента.Соглашение               КАК Соглашение,
	|
	|	ДанныеДокумента.Валюта                   КАК ВалютаВзаиморасчетов,
	|	ДанныеДокументаТовары.СуммаВознаграждения      КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокументаТовары.СуммаВознаграждения - ДанныеДокументаТовары.СуммаНДСВознаграждения КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.Валюта                   КАК ВалютаДокумента,
	|	ДанныеДокументаТовары.СуммаВознаграждения      КАК СуммаВВалютеДокумента,
	|	ДанныеДокументаТовары.СуммаВознаграждения - ДанныеДокументаТовары.СуммаНДСВознаграждения КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ДанныеДокумента.Услуга                   КАК ИсточникГФУНоменклатуры,
	|	ДанныеДокументаТовары.ОбъектРасчетов     КАК ИсточникГФУРасчетов,
	|	
	|	ДанныеДокументаТовары.ИдентификаторСтрокиВознаграждения КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтчетКомитенту) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК ДанныеДокументаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		ДанныеДокументаТовары.Ссылка = Суммы.Ссылка
	|		И ДанныеДокументаТовары.ИдентификаторСтрокиВознаграждения = Суммы.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетКомитентуОЗакупках КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокументаТовары.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокументаТовары.Ссылка = &Ссылка
	|	И ДанныеДокументаТовары.СуммаВознаграждения <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.ОтчетКомитентуОЗакупках";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",        """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоДоговору", """""");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ВЗапросеЕстьИсточник = Ложь;
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", 	ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", 		ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

		// Комплект документов на принтер
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКомплектаДокументов";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "КомплектДокументов";
		КомандаПечати.СразуНаПринтер = Истина;
		КомандаПечати.Представление = НСтр("ru = 'Комплект документов на принтер'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 1;

		// Комплект документов с настройкой...
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКомплектаДокументовСНастройкой";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "КомплектДокументовСНастройкой";
		КомандаПечати.Представление = НСтр("ru = 'Комплект документов с настройкой...'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 2;

	Если ПравоДоступа("Изменение", Метаданные.Документы.ОтчетКомитентуОЗакупках) Тогда
		// Акт об оказании услуг
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Акт";
		КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг агентской закупки'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Отчет комитенту о закупках
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОтчетовПоКомиссии";
		КомандаПечати.Идентификатор = "ОтчетКомитентуОЗакупках";
		КомандаПечати.Представление = НСтр("ru = 'Отчет комитенту (принципалу) о закупках'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	ОтчетКомитентуОЗакупкахЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать.
//  ПараметрыПечати - Структура - дополнительные настройки печати.
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект.
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", НСтр("ru='Акт об оказании услуг'"),
			СформироватьПечатнуюФормуАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КомплектДокументов") Тогда
		КоллекцияПечатныхФорм.Очистить();
		СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати);
	КонецЕсли;
	
	ОтчетКомитентуОЗакупкахЛокализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати) Экспорт
	
	Перем АдресКомплектаПечатныхФорм;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") И ПараметрыПечати.Свойство("АдресКомплектаПечатныхФорм", АдресКомплектаПечатныхФорм) Тогда
		
		КомплектПечатныхФорм = ПолучитьИзВременногоХранилища(АдресКомплектаПечатныхФорм);
		
	Иначе
		
		КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
			Метаданные.Документы.ОтчетКомитентуОЗакупках.ПолноеИмя(),
			МассивОбъектов, Неопределено);
		
	КонецЕсли;
		
	Если КомплектПечатныхФорм = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОтчетКомитентуОЗакупкахЛокализация.СформироватьКомплектПечатныхФорм(МассивОбъектов,
		ПараметрыПечати,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		КомплектПечатныхФорм);
			
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"ОтчетКомитентуОЗакупках");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ОтчетКомитентуОЗакупках", КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьОтчетовПоКомиссии.СформироватьПечатнуюФормуОтчетПоЗакупке(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"Акт");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ОтчетКомитентуОЗакупках", КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			СформироватьПечатнуюФормуАктОбОказанииУслуг(КомплектПечати.Объекты, ОбъектыПечати));
	КонецЦикла;
	
КонецФункции

Функция КомплектПечатныхФорм() Экспорт
	
	КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.ПодготовитьКомплектПечатныхФорм();
	
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ОтчетКомитентуОЗакупках", НСтр("ru = 'Отчет комитенту (принципалу) о закупках'"), 2);
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "Акт", НСтр("ru = 'Акт об оказании услуг'"),                                       2);
	
	ОтчетКомитентуОЗакупкахЛокализация.КомплектПечатныхФорм(КомплектПечатныхФорм);
	
	Возврат КомплектПечатныхФорм;
	
КонецФункции

Функция СформироватьПечатнуюФормуАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Услуга.НаименованиеПолное КАК УслугаНаименование,
	|	ДанныеДокумента.Услуга.Код КАК Код,
	|	ДанныеДокумента.Услуга.Артикул КАК Артикул,
	|
	|	ДанныеДокумента.СуммаВознаграждения КАК Сумма,
	|	ДанныеДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетКомитенту_АктОбУслугах";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомитентуОЗакупках.ПФ_MXL_АктОбУслугах");
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов();
	ИмяКолонкиКодов = КолонкаКодов.ИмяКолонки;
	ПредставлениеКолонкиКодов = КолонкаКодов.ПредставлениеКолонки;
	
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки.
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("Шапка");
		
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		СведенияОПолучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);
		
		УстановитьПараметр(ЗаголовокТаблицы, "ПредставлениеПоставщика",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,"));
		УстановитьПараметр(ЗаголовокТаблицы, "ПредставлениеПолучателя",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе, "ПолноеНаименование,"));
		УстановитьПараметр(ЗаголовокТаблицы, "ТекстЗаголовка",
			ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Акт об оказании услуг'", ОбщегоНазначения.КодОсновногоЯзыка())));
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ЗаголовокТаблицы, ДанныеПечати.Ссылка);
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
		// Выводим таблицу.
		Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСКодами");
			УстановитьПараметр(ОбластьМакета, "ИмяКолонкиКодов", ПредставлениеКолонкиКодов);
			УстановитьПараметр(ОбластьМакета, "Артикул", ДанныеПечати[ИмяКолонкиКодов]);
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);	
		
		// Выводим реквизиты подвала.
		ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
		
		ТекстОСуммеПрописью = НСтр("ru='Сумма комиссионного вознаграждения составила'", ОбщегоНазначения.КодОсновногоЯзыка()) + " "
			+ ?(ДанныеПечати.Сумма < 0, НСтр("ru='минус'", ОбщегоНазначения.КодОсновногоЯзыка()) + " ", "")
			+ РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ДанныеПечати.Сумма, ДанныеПечати.Валюта) + ","
			+ Символы.ПС
			+ НСтр("ru='в том числе НДС ('", ОбщегоНазначения.КодОсновногоЯзыка())	+ ДанныеПечати.СтавкаНДС + ") "
			+ Формат(ДанныеПечати.СуммаНДС, "ЧДЦ=2") + " " + ДанныеПечати.Валюта;
		
		УстановитьПараметр(ОбластьПодвала, "ТекстОСуммеПрописью", ТекстОСуммеПрописью);
		
		ТабличныйДокумент.Вывести(ОбластьПодвала);	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ДанныеПечати.Ссылка);
		
	КонецЦикла;
		
	Возврат ТабличныйДокумент;

КонецФункции

// Возвращает данные для формирования печатной формы "Отчета комитенту о закупках".
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ОтчетКомитентуОЗакупках - ссылки на документы, по которым необходимо
//																		получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемая при печати УПД, содержащая следующие свойства:
//		* Заголовок - Строка - заголовок отчета.
//		* РезультатПоШапке - РезультатЗапроса - общие данные документа.
//		* РезультатПоТабличнойЧасти - РезультатЗапроса - данные табличной части документа.
//		* ДанныеПрослеживаемостиДокументов - ТаблицаЗначений - таблица, содержащая информацию о прослеживаемости документа, со следующими колонками:
//			** Ссылка - ДокументСсылка.ОтчетКомитентуОЗакупках - ссылка на документ.
//			** ЕстьРНПТ - Булево - признак того, что документ содержит сведения о прослеживаемости.
//		* ПрослеживаемыеКомплектующие - ТаблицаЗначений - - описание таблицы сведений о прослеживаемых комплектующих, со следующими колонками:
//			** НомерГТД - СправочникСсылка.НомераГТД - ссылка на номер РНПТ комплекта.
//			** НомерРНПТ - Строка - регистрационный номер товара.
//			** КоличествоПоРНПТ - Число - нормативное количество комплектующих, приходящихся на единицу комплекта.
//			** ЕдиницаИзмеренияТНВЭД - Строка - наименование единицы измерения.
//
Функция ПолучитьДанныеДляПечатнойФормыОтчетПоЗакупкам(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомитентуОЗакупках.Ссылка					КАК Ссылка,
	|	ОтчетКомитентуОЗакупках.Номер					КАК Номер,
	|	ОтчетКомитентуОЗакупках.Дата					КАК Дата,
	|	ОтчетКомитентуОЗакупках.Контрагент				КАК Комитент,
	|	ОтчетКомитентуОЗакупках.Организация				КАК Комиссионер,
	|	ОтчетКомитентуОЗакупках.Организация.Префикс		КАК Префикс,
	|	ОтчетКомитентуОЗакупках.Договор					КАК Договор,
	|	ОтчетКомитентуОЗакупках.Валюта					КАК Валюта,
	|	ОтчетКомитентуОЗакупках.СуммаВознаграждения		КАК СуммаВознаграждения,
	|	ОтчетКомитентуОЗакупках.СуммаНДСВознаграждения	КАК СуммаНДСВознаграждения,
	|	ОтчетКомитентуОЗакупках.ПроцентВознаграждения	КАК ПроцентВознаграждения,
	|	ВЫБОР
	|		КОГДА ОтчетКомитентуОЗакупках.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|				ИЛИ ОтчетКомитентуОЗакупках.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ											КАК ЕстьСтавкаВознаграждения,
	|	ВЫБОР
	|		КОГДА ОтчетКомитентуОЗакупках.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ											КАК ПродажаОблагаетсяНДС,
	|	""""											КАК ПредставительКомитента,
	|	ОтчетКомитентуОЗакупках.Менеджер.ФизическоеЛицо КАК ПредставительКомиссионера
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках КАК ОтчетКомитентуОЗакупках
	|ГДЕ
	|	ОтчетКомитентуОЗакупках.Ссылка В(&МассивДокументов)
	|	И ОтчетКомитентуОЗакупках.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	//++ Локализация
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОснованияДокументов.ДокументОснование			КАК ДокументОснование,
	|	ТоварыДокумента.СчетФактураПолученныйОтПродавца	КАК СчетФактураПолученныйОтПродавца,
	|	ТоварыДокумента.Номенклатура					КАК Номенклатура,
	|	ТоварыДокумента.Ссылка							КАК СчетФактураВыданный,
	|	ТоварыДокумента.Характеристика					КАК Характеристика,
	|	ТоварыДокумента.НомерГТД						КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Корректировочный
	|			ТОГДА ВЫБОР КОГДА ТоварыДокумента.КоличествоУвеличение > 0
	|				ТОГДА ТоварыДокумента.КоличествоУвеличение
	|			ИНАЧЕ - ТоварыДокумента.КоличествоУменьшение
	|			КОНЕЦ
	|		ИНАЧЕ ТоварыДокумента.Количество
	|	КОНЕЦ											КАК Количество,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Корректировочный
	|			ТОГДА ВЫБОР КОГДА ТоварыДокумента.СуммаУвеличение > 0
	|				ТОГДА ТоварыДокумента.СуммаУвеличение
	|			ИНАЧЕ - ТоварыДокумента.СуммаУменьшение
	|			КОНЕЦ
	|		ИНАЧЕ ТоварыДокумента.Сумма
	|	КОНЕЦ											КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Корректировочный
	|			ТОГДА ВЫБОР КОГДА ТоварыДокумента.СуммаНДСУвеличение > 0
	|				ТОГДА ТоварыДокумента.СуммаНДСУвеличение
	|			ИНАЧЕ - ТоварыДокумента.СуммаНДСУменьшение
	|			КОНЕЦ
	|		ИНАЧЕ ТоварыДокумента.СуммаНДС
	|	КОНЕЦ											КАК СуммаНДС
	|ПОМЕСТИТЬ СчетФактураВыданныйТовары
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК ТоварыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияДокументов
	|		ПО ТоварыДокумента.Ссылка = ОснованияДокументов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ДанныеДокумента
	|		ПО ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ОснованияДокументов.ДокументОснование В(&МассивДокументов)
	|	И ОснованияДокументов.Ссылка.Проведен
	|;
	//-- Локализация
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка												КАК Ссылка,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки)								КАК НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура										КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное						КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код									КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул								КАК Артикул,
	|	ВложенныйЗапрос.НомерГТД.ЕдиницаИзмерения.Представление				КАК ЕдиницаИзмеренияТНВЭД,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное					КАК Характеристика,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление						КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ																КАК Упаковка,
	|	СУММА(ВложенныйЗапрос.Количество)									КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ)								КАК КоличествоПоРНПТ,
	|	ВложенныйЗапрос.Цена												КАК Цена,
	|	СУММА(ВложенныйЗапрос.СуммаКомитента)								КАК СуммаКомитента,
	|	ВложенныйЗапрос.СтавкаНДС											КАК СтавкаНДС,
	|	СУММА(ВложенныйЗапрос.СуммаСНДС)									КАК СуммаСНДС,
	|	СУММА(ВложенныйЗапрос.СуммаНДС)										КАК СуммаНДС,
	|	СУММА(ВложенныйЗапрос.СуммаВознаграждения)							КАК СуммаВознаграждения,
	|	ВложенныйЗапрос.ПроцентВознаграждения								КАК ПроцентВознаграждения,
	|	ВложенныйЗапрос.НомерГТД											КАК НомерГТД,
	|	ВложенныйЗапрос.НомерГТД.ТипНомераГТД								КАК ТипНомераГТД,
	|	ВложенныйЗапрос.НомерГТД.Представление								КАК НомерРНПТ,
	//++ Локализация
	|	ВложенныйЗапрос.СчетФактураВыданныйДата								КАК СчетФактураВыданныйДата,
	|	ВложенныйЗапрос.СчетФактураВыданныйПредставлениеНомера				КАК СчетФактураВыданныйПредставлениеНомера,
	//-- Локализация
	|	ВложенныйЗапрос.ДатаСчетаФактуры									КАК ДатаСчетаФактуры,
	|	ВложенныйЗапрос.Поставщик											КАК Поставщик
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка						КАК Ссылка,
	|		ТаблицаТовары.НомерСтроки					КАК НомерСтроки,
	|		ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТовары.Номенклатура					КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|			ИНАЧЕ ТаблицаТовары.Упаковка
	|		КОНЕЦ										КАК ЕдиницаИзмерения,
	|		ТаблицаТовары.Характеристика				КАК Характеристика,
	|		ТаблицаТовары.Упаковка						КАК Упаковка,
	|		ТаблицаТовары.КоличествоУпаковок			КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ТаблицаТовары.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаТовары.КоличествоПоРНПТ
	|		КОНЕЦ										КАК КоличествоПоРНПТ,
	|		ТаблицаТовары.Цена							КАК Цена,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Ссылка.ЦенаВключаетНДС
	|				ТОГДА ТаблицаТовары.СуммаСНДС
	|		ИНАЧЕ
	|			ТаблицаТовары.Сумма
	|		КОНЕЦ										КАК СуммаКомитента,
	|		ТаблицаТовары.СтавкаНДС						КАК СтавкаНДС,
	|		ТаблицаТовары.СуммаСНДС						КАК СуммаСНДС,
	|		ТаблицаТовары.СуммаНДС						КАК СуммаНДС,
	|		ТаблицаТовары.СуммаВознаграждения			КАК СуммаВознаграждения,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СуммаВознаграждения <> 0
	|				ТОГДА ТаблицаТовары.СуммаВознаграждения / (ТаблицаТовары.СуммаСНДС / 100)
	|			ИНАЧЕ 0
	|		КОНЕЦ										КАК ПроцентВознаграждения,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ТаблицаТовары.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ИНАЧЕ ТаблицаТовары.НомерГТД
	|		КОНЕЦ										КАК НомерГТД,
	//++ Локализация
	|		ТоварыСчетаФактуры.СчетФактураВыданный.Дата	КАК СчетФактураВыданныйДата,
	|		ТоварыСчетаФактуры.СчетФактураВыданный.ПредставлениеНомера КАК СчетФактураВыданныйПредставлениеНомера,
	//-- Локализация
	|		ТаблицаТовары.ДатаСчетаФактуры				КАК ДатаСчетаФактуры,
	|		ТаблицаТовары.Поставщик						КАК Поставщик
	|	ИЗ
	|		Документ.ОтчетКомитентуОЗакупках.Товары КАК ТаблицаТовары
	//++ Локализация
	|			ЛЕВОЕ СОЕДИНЕНИЕ СчетФактураВыданныйТовары КАК ТоварыСчетаФактуры
	|			ПО ТаблицаТовары.Ссылка = ТоварыСчетаФактуры.ДокументОснование
	|				И ТаблицаТовары.Номенклатура = ТоварыСчетаФактуры.Номенклатура
	|				И ТаблицаТовары.Характеристика = ТоварыСчетаФактуры.Характеристика
	|				И ТаблицаТовары.Количество = ТоварыСчетаФактуры.Количество
	|				И ТаблицаТовары.СуммаСНДС = ТоварыСчетаФактуры.Сумма
	|				И ТаблицаТовары.СуммаНДС = ТоварыСчетаФактуры.СуммаНДС
	|				И ТаблицаТовары.НомерГТД = ТоварыСчетаФактуры.НомерГТД
	|				И ТаблицаТовары.СчетФактураПолученный = ТоварыСчетаФактуры.СчетФактураПолученныйОтПродавца
	//-- Локализация
	|	
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|	
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.ПроцентВознаграждения,
	|	ВложенныйЗапрос.НомерГТД,
	//++ Локализация
	|	ВложенныйЗапрос.СчетФактураВыданныйДата,
	|	ВложенныйЗапрос.СчетФактураВыданныйПредставлениеНомера,
	//-- Локализация
	|	ВложенныйЗапрос.ДатаСчетаФактуры,
	|	ВложенныйЗапрос.Поставщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаКомитента),
	|	СУММА(СуммаВознаграждения),
	|	СУММА(СуммаСНДС),
	|	СУММА(СуммаНДС)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка	КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				И ЕСТЬNULL(Товары.НомерГТД.ТипНомераГТД, НЕОПРЕДЕЛЕНО) В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|																		ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)			КАК ЕстьРНПТ
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК Товары
	|
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.НомерГТД							КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА Комплектующие.НомерРНПТ.РегистрационныйНомер = """"
	|			ТОГДА Комплектующие.НомерРНПТ
	|		ИНАЧЕ Комплектующие.НомерРНПТ.РегистрационныйНомер
	|	КОНЕЦ												КАК НомерРНПТ,
	|	Комплектующие.КоличествоПоРНПТ						КАК КоличествоПоРНПТ,
	|	Комплектующие.ЕдиницаИзмеренияТНВЭД.Представление	КАК ЕдиницаИзмеренияТНВЭД
	|ИЗ
	|	Документ.ОтчетКомитентуОЗакупках.Товары КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД.ПрослеживаемыеКомплектующие КАК Комплектующие
	|		ПО ТаблицаДокумента.НомерГТД = Комплектующие.Ссылка";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"&ТекстЗапросаКоэффициентУпаковки",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
									"ВложенныйЗапрос.Упаковка",
									"ВложенныйЗапрос.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Заголовок = НСтр("ru = 'Отчет комитенту о закупках'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатПоШапке					= МассивРезультатов[0]; // РезультатЗапроса - 
	РезультатПоТабличнойЧасти			= МассивРезультатов[МассивРезультатов.ВГраница() - 2]; // РезультатЗапроса - 
	ДанныеПрослеживаемостиДокументов	= МассивРезультатов[МассивРезультатов.ВГраница() - 1].Выгрузить(); // ТаблицаЗначений - 
	ПрослеживаемыеКомплектующие			= МассивРезультатов[МассивРезультатов.ВГраница()].Выгрузить(); // ТаблицаЗначений - 
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("Заголовок",							Заголовок);
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",					РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти",			РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("ДанныеПрослеживаемостиДокументов",	ДанныеПрослеживаемостиДокументов);
	СтруктураДанныхДляПечати.Вставить("ПрослеживаемыеКомплектующие",		ПрослеживаемыеКомплектующие);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Заполняет структуру данными о получателях печатных форм.
// Параметры:
// 	СтруктураДанныхОбъектаПечати - см. ФормированиеПечатныхФорм.ЗаполнитьДанныеСтруктурыПолучателяПоТипуОбъекта.СтруктураДанныхОбъектаПечати
//
Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтактноеЛицо");
	
КонецПроцедуры

// Прочее

Процедура УстановитьПараметр(ОбластьМакета, ИмяПараметра, ЗначениеПараметра)
	ОбластьМакета.Параметры.Заполнить(Новый Структура(ИмяПараметра, ЗначениеПараметра));
КонецПроцедуры

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона:
//         * Имя            - Строка - Уникальное имя общего реквизита.
//         * Представление  - Строка - Представление общего реквизита.
//         * Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         * Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения:
//         * Имя            - Строка - Уникальное имя вложения.
//         * Представление  - Строка - Представление варианта.
//         * ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие из КлючИЗначение- список используемых в шаблоне реквизитов:
//      * Ключ     - Строка - имя реквизита в шаблоне;
//      * Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие из КлючИЗначение - список используемых в шаблоне общих реквизитов:
//      * Ключ     - Строка - имя реквизита в шаблоне;
//      * Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие из КлючИЗначение - значения реквизитов
//      * Ключ     - Строка - имя вложения в шаблоне;
//      * Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS:
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма:
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти

Функция МетаданныеДокумента() Экспорт
	
	СтруктураОбъекта = НаправленияДеятельностиСервер.СтруктураОбъекта();
	СтруктураОбъекта.ОформляетсяПоЗаказу = Ложь;
	
	Возврат СтруктураОбъекта;
	
КонецФункции

// Возвращает информацию о распределении суммы документа на заказы.
// 
// Возвращаемое значение:
// 	Строка - Адрес временного храниища таблицы значений. (См. ВзаиморасчетыСервер.ПараметрыМеханизма)
//
Функция СуммыПоЗаказам(СсылкаОбъект) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Товары.ЗаказКлиента          КАК ЗаказКлиента,
	|	ЛОЖЬ                         КАК СверхЗаказа,
	|	Товары.СуммаСНДС             КАК СуммаПлатежа,
	|	&ЗаказШапка                  КАК ЗаказШапка
	|ПОМЕСТИТЬ ВТТовары1
	|ИЗ
	|	&Таблица КАК Товары
	|ГДЕ Товары.СуммаСНДС > 0
	|	И &УсловиеСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ЗаказКлиента          КАК ЗаказКлиента,
	|	ВЫБОР
	|		КОГДА Товары.ЗаказКлиента = ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                        КАК СверхЗаказа,
	|	Товары.СуммаВознаграждения   КАК СуммаПлатежа,
	|	&ЗаказШапка                  КАК ЗаказШапка
	|ПОМЕСТИТЬ ВТТовары2
	|ИЗ
	|	&Таблица КАК Товары
	|ГДЕ Товары.СуммаВознаграждения > 0
	|	И &УсловиеСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТовары1.ЗаказКлиента       КАК ЗаказКлиента,
	|	ВТТовары1.СверхЗаказа        КАК СверхЗаказа,
	|	ВТТовары1.СуммаПлатежа       КАК СуммаПлатежа,
	|	ВТТовары1.ЗаказШапка         КАК ЗаказШапки
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	ВТТовары1 КАК ВТТовары1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТТовары2.ЗаказКлиента,
	|	ВТТовары2.СверхЗаказа,
	|	ВТТовары2.СуммаПлатежа,
	|	ВТТовары2.ЗаказШапка
	|ИЗ
	|	ВТТовары2 КАК ВТТовары2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТТовары.ЗаказКлиента.Номер, """") = """"
	|				ТОГДА ВТТовары.ЗаказШапки
	|			ИНАЧЕ ВТТовары.ЗаказКлиента
	|	КОНЕЦ                        КАК Заказ,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТТовары.ЗаказКлиента.Номер, """") = """"
	|				ТОГДА ЕСТЬNULL(ВТТовары.ЗаказШапки.Дата, ДАТАВРЕМЯ(1,1,1))
	|			ИНАЧЕ ЕСТЬNULL(ВТТовары.ЗаказКлиента.Дата, ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ                        КАК ДатаЗаказа,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТТовары.ЗаказКлиента.Номер, """") = """"
	|				ТОГДА ЕСТЬNULL(ВТТовары.ЗаказШапки.ДатаСогласования, ДАТАВРЕМЯ(1,1,1))
	|			ИНАЧЕ ЕСТЬNULL(ВТТовары.ЗаказКлиента.ДатаСогласования, ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ                        КАК ДатаСогласования,
	|	СУММА(ВТТовары.СуммаПлатежа) КАК СуммаПлатежа,
	|	СУММА(ВТТовары.СуммаПлатежа) КАК СуммаВзаиморасчетов,
	|	ВТТовары.СверхЗаказа         КАК СверхЗаказа,
	|	0                            КАК СуммаЗалогаЗаТару,
	|	0                            КАК СуммаВзаиморасчетовПоТаре
	|ИЗ
	|	ВТТовары КАК ВТТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТТовары.ЗаказКлиента.Номер, """") = """"
	|				ТОГДА ВТТовары.ЗаказШапки
	|			ИНАЧЕ ВТТовары.ЗаказКлиента
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТТовары.ЗаказКлиента.Номер, """") = """"
	|				ТОГДА ЕСТЬNULL(ВТТовары.ЗаказШапки.Дата, ДАТАВРЕМЯ(1,1,1))
	|			ИНАЧЕ ЕСТЬNULL(ВТТовары.ЗаказКлиента.Дата, ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТТовары.ЗаказКлиента.Номер, """") = """"
	|				ТОГДА ЕСТЬNULL(ВТТовары.ЗаказШапки.ДатаСогласования, ДАТАВРЕМЯ(1,1,1))
	|			ИНАЧЕ ЕСТЬNULL(ВТТовары.ЗаказКлиента.ДатаСогласования, ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ,
	|	ВТТовары.СверхЗаказа";
	
	Если ТипЗнч(СсылкаОбъект) = Тип("ДокументСсылка.ОтчетКомитентуОЗакупках") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Таблица", "Документ.ОтчетКомитентуОЗакупках.Товары");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЗаказШапка", "Товары.Ссылка.ЗаказКлиента");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеСсылка", "Товары.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка",СсылкаОбъект);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеСсылка", "ИСТИНА");
		Запрос.УстановитьПараметр("ЗаказШапка", СсылкаОбъект.ЗаказКлиента);
		Запрос.УстановитьПараметр("Таблица", СсылкаОбъект.Товары);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли
