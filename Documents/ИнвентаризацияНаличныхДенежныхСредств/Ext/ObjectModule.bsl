#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Автор = Пользователи.ТекущийПользователь();
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка." + Метаданные().Имя) Тогда
		
		ИсправлениеДокументов.ЗаполнитьИсправление(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнвентаризацияНаличныхДенежныхСредствЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	ПараметрыВыбораСтатейИАналитик = Документы.ИнвентаризацияНаличныхДенежныхСредств.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ОбработкаЗаполнения(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИсправлениеДокументов.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
	Если Кассы.Количество() > 0 Тогда
		Кассы.Очистить();
	КонецЕсли;
	
	ПоследнийНомерПКО      = "";
	ПоследнийНомерРКО      = "";
	Автор = Пользователи.ТекущийПользователь();
	Ответственный = Пользователи.ТекущийПользователь();
	
	ИнициализироватьДокумент();
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, "Кассы");
	
	ИнвентаризацияНаличныхДенежныхСредствЛокализация.ПриКопировании(ЭтотОбъект, ОбъектКопирования);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	МассивНепроверяемыхРеквизитов.Добавить("Кассы.СтатьяДоходовРасходов");
	Для каждого СтрокаТЧ Из Кассы Цикл
		Если СтрокаТЧ.СуммаРасхождения <> 0 И Не ЗначениеЗаполнено(СтрокаТЧ.СтатьяДоходовРасходов) Тогда
			Если СтрокаТЧ.СуммаРасхождения > 0 Тогда
				ТекстОшибки = НСтр("ru='Не указана ""Статья доходов"" в строке %1.'");
			Иначе
				ТекстОшибки = НСтр("ru='Не указана ""Статья расходов"" в строке %1.'");
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(ТекстОшибки, СтрокаТЧ.НомерСтроки),
				ЭтотОбъект,
				"Кассы[" + (СтрокаТЧ.НомерСтроки - 1) + "].СтатьяДоходовРасходов",
				,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	
	ИсправлениеДокументов.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
		ПроверяемыеРеквизиты,
		МассивНепроверяемыхРеквизитов);
		
	ПроверитьЗаполнениеТабличнойЧасти(Отказ);
	
	ПараметрыВыбораСтатейИАналитик = Документы.ИнвентаризацияНаличныхДенежныхСредств.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
	
	ИнвентаризацияНаличныхДенежныхСредствЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ИсправлениеДокументов.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ВалютаРеглУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
	
	ТаблицаДокумента = Кассы.Выгрузить(,"Касса, СуммаПоУчету, СуммаПоФакту");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Касса КАК Касса,
	|	ТаблицаДокумента.СуммаПоУчету,
	|	ТаблицаДокумента.СуммаПоФакту
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|/////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	КурсВалюты.Валюта КАК Валюта,
	|	КурсВалюты.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель / (КурсВалюты.КурсЗнаменатель * КурсВалютыРегл.КурсЧислитель) КАК КоэффициентПересчета
	|ПОМЕСТИТЬ ТаблицаКурсыВалютРегл
	|ИЗ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаДокумента, БазоваяВалюта = &ВалютаРеглУчета) КАК КурсВалюты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаДокумента, Валюта = &ВалютаРеглУчета И БазоваяВалюта = &ВалютаРеглУчета) КАК КурсВалютыРегл
	|	ПО (ИСТИНА)
	|ГДЕ
	|	КурсВалюты.КурсЗнаменатель <> 0
	|	И КурсВалютыРегл.КурсЧислитель <> 0
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ТаблицаДокумента.СуммаПоУчету
	|		* ТаблицаКурсыВалютРегл.КоэффициентПересчета), 0) КАК СуммаПоУчетуВсего,
	|	ЕСТЬNULL(СУММА(ТаблицаДокумента.СуммаПоФакту
	|		* ТаблицаКурсыВалютРегл.КоэффициентПересчета), 0) КАК СуммаПоФактуВсего
	|ИЗ
	|	ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Кассы КАК Кассы
	|	ПО
	|		Кассы.Ссылка = ТаблицаДокумента.Касса
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ТаблицаКурсыВалютРегл
	|		ПО
	|			ТаблицаКурсыВалютРегл.Валюта = Кассы.ВалютаДенежныхСредств
	|";
	
	Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаДокумента);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "Кассы");
	
	ПараметрыВыбораСтатейИАналитик = Документы.ИнвентаризацияНаличныхДенежныхСредств.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПередЗаписью(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ИнвентаризацияНаличныхДенежныхСредствЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
	ИнвентаризацияНаличныхДенежныхСредствЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ИнвентаризацияНаличныхДенежныхСредствЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ИнвентаризацияНаличныхДенежныхСредствЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличнойЧасти(Отказ)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Касса КАК Касса,
	|	Таблица.СуммаРасхождения КАК СуммаРасхождения,
	|	Таблица.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Таблица.Подразделение КАК Подразделение,
	|	Таблица.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	|	Таблица.АналитикаДоходов КАК АналитикаДоходов,
	|	Таблица.АналитикаРасходов КАК АналитикаРасходов
	|	
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК Таблица
	|ГДЕ
	|	Таблица.Касса <> НЕОПРЕДЕЛЕНО
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Касса КАК Касса
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Касса
	|ИМЕЮЩИЕ 
	|	КОЛИЧЕСТВО(*) > 1
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Касса КАК Касса,
	|	ВЫБОР КОГДА Кассы.Владелец <> &Организация ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтличаетсяОрганизация,
	|	ВЫБОР КОГДА Кассы.КассоваяКнига <> &КассоваяКнига ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтличаетсяКассоваяКнига
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Кассы КАК Кассы
	|	ПО
	|		Кассы.Ссылка = ТаблицаДокумента.Касса
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР КОГДА ТаблицаДокумента.СтатьяДвиженияДенежныхСредств = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ НеЗаполненаСтатьяДДС,
	|	ВЫБОР КОГДА ТаблицаДокумента.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ НеЗаполненоПодразделение
	|ИЗ
	|	ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.СуммаРасхождения <> 0
	|");
	
	ТаблицаДокумента = Кассы.Выгрузить();
	Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаДокумента);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КассоваяКнига", КассоваяКнига);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатЗапросаДубли = МассивРезультатов[1];
	РезультатЗапросаКассы = МассивРезультатов[2];
	РезультатЗапросаТЧ = МассивРезультатов[3];
	
	// Проверяем дубли строк в документе
	Выборка = РезультатЗапросаДубли.Выбрать();
	Пока Выборка.Следующий() Цикл
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Касса %1 повторяется в табличной части'"),
			Выборка.Касса);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ЭтотОбъект,
			"Кассы[" + (Выборка.НомерСтроки - 1) + "].Касса",
			,
			Отказ);
	КонецЦикла;
	
	ИспользоватьПодразделения = ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения");
	
	Выборка = РезультатЗапросаКассы.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Проверяем соответствие организации документа и организации кассы
		Если Выборка.ОтличаетсяОрганизация Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Организация документа %1 отличается от организации %2'"),
				Выборка.Документ,
				Организация);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				"Кассы[" + (Выборка.НомерСтроки - 1) + "].Касса",
				,
				Отказ);
		КонецЕсли;
		
		// Проверяем соответствие кассовой книги документа и кассовой книги кассы
		Если Выборка.ОтличаетсяКассоваяКнига Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Кассовая книга документа %1 отличается от кассовой книги %2'"),
				Выборка.Документ,
				?(ЗначениеЗаполнено(КассоваяКнига), КассоваяКнига, НСтр("ru = '<Основная кассовая книга организации>'")));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				"Кассы[" + (Выборка.НомерСтроки - 1) + "].Касса",
				,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	
	// Проверка заполнения реквизитов табл. части
	Выборка = РезультатЗапросаТЧ.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НеЗаполненаСтатьяДДС Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не указана ""Статья движения денежных средств"" в строке %1'"), Выборка.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				"Кассы[" + (Выборка.НомерСтроки - 1) + "].СтатьяДвиженияДенежныхСредств",
				,
				Отказ);
		КонецЕсли;
		
		Если Выборка.НеЗаполненоПодразделение И ИспользоватьПодразделения Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не указано ""Подразделение"" в строке %1'"), Выборка.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				"Кассы[" + (Выборка.НомерСтроки - 1) + "].Подразделение",
				,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
