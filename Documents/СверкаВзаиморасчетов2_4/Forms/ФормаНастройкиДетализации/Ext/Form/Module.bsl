
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Партнер = Параметры.Партнер;
	
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("Контрагент",  Контрагент);
	
	ДоступнаФильтрацияПоДоговору = Параметры.Свойство("Договор", Договор);
	ДоступнаФильтрацияПоПартнерам = ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов");
	
	РасшифровкаПоЗаказам = Параметры.РасшифровкаПоЗаказам;
	Если ЗначениеЗаполнено(Договор) Тогда
		ВидРасшифровкиПоПартнерамДоговорам = 4;
	ИначеЕсли Параметры.РасшифровкаПоДоговорам Тогда
		ВидРасшифровкиПоПартнерамДоговорам = 3;
	ИначеЕсли ЗначениеЗаполнено(Партнер) Тогда
		ВидРасшифровкиПоПартнерамДоговорам = 2;
	ИначеЕсли Параметры.РасшифровкаПоПартнерам Тогда
		ВидРасшифровкиПоПартнерамДоговорам = 1;
	Иначе
		ВидРасшифровкиПоПартнерамДоговорам = 0;
	КонецЕсли; 
	
	Элементы.Договор.Видимость	 = ДоступнаФильтрацияПоДоговору;
	Элементы.Договор.Доступность = ВидРасшифровкиПоПартнерамДоговорам = 4;
	Элементы.Партнер.Доступность = ВидРасшифровкиПоПартнерамДоговорам = 2;
	
	Элементы.ВидРасшифровкиПоПартнерамДоговорам4.Видимость = ДоступнаФильтрацияПоДоговору;
	
	Элементы.ВидРасшифровкиПоПартнерамДоговорам1.Видимость = ДоступнаФильтрацияПоПартнерам;
	Элементы.ВидРасшифровкиПоПартнерамДоговорам2.Видимость = ДоступнаФильтрацияПоПартнерам;
	Элементы.Партнер.Видимость                             = ДоступнаФильтрацияПоПартнерам;
	
	Если Не ДоступнаФильтрацияПоПартнерам Тогда
		Элементы.ГруппаДетализацияВзаиморасчетов.Заголовок = НСтр("ru = 'Расшифровка расчетов по договорам'");
	КонецЕсли;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидРасшифровкиПоПартнерамДоговорамПриИзменении(Элемент)
	
	Элементы.Партнер.Доступность = ВидРасшифровкиПоПартнерамДоговорам = 2;
	Элементы.Договор.Доступность = ВидРасшифровкиПоПартнерамДоговорам = 4;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	Если ВидРасшифровкиПоПартнерамДоговорам = 2 Тогда
		Если Партнер.Пустая() Тогда
			Текст = НСтр("ru = 'Поле ""Фильтр по партнеру"" не заполнено'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				Текст,
				,
				"Партнер",
				,
				Отказ);
		КонецЕсли; 
	Иначе		
		Партнер = ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка");
	КонецЕсли; 
	
	Если ВидРасшифровкиПоПартнерамДоговорам = 4 Тогда
		Если Договор.Пустая() Тогда
			Текст = НСтр("ru = 'Поле ""Фильтр по договору"" не заполнено'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				Текст,
				,
				"Договор",
				,
				Отказ);
		КонецЕсли; 
	Иначе		
		Договор = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		РасшифровкаПоПартнерам = ВидРасшифровкиПоПартнерамДоговорам = 1;
		РасшифровкаПоДоговорам = ВидРасшифровкиПоПартнерамДоговорам = 3;
		
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить("РасшифровкаПоЗаказам", РасшифровкаПоЗаказам);
		СтруктураВозврата.Вставить("РасшифровкаПоПартнерам", РасшифровкаПоПартнерам);
		СтруктураВозврата.Вставить("РасшифровкаПоДоговорам", РасшифровкаПоДоговорам);
		СтруктураВозврата.Вставить("Партнер", Партнер);
		СтруктураВозврата.Вставить("Договор", Договор);
		
		Закрыть(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти
