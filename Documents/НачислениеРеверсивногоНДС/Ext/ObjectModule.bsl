// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Исправление Тогда
		ИсправлениеДокументов.ПроверитьЗаполнениеСторно(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты)
	Иначе
		НепроверяемыеРеквизиты.Добавить("НомерИсправления");
		НепроверяемыеРеквизиты.Добавить("ДатаИсправления");
		НепроверяемыеРеквизиты.Добавить("СторнируемыйДокумент");
		НепроверяемыеРеквизиты.Добавить("ИсправляемыйДокумент");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаНДС = НачислениеНДС.Итог("СуммаНДС");
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "НачислениеНДС");
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	ИсправлениеДокументов.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	Если Не Исправление Тогда
		НомерИсправления = "";
		ДатаИсправления  = '00010101';
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	МассивТиповДляЗаполненияИзРеестра = Новый Массив;
	МассивТиповДляЗаполненияИзРеестра.Добавить(Тип("ДокументСсылка.ПриобретениеТоваровУслуг"));
	МассивТиповДляЗаполненияИзРеестра.Добавить(Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов"));
	МассивТиповДляЗаполненияИзРеестра.Добавить(Тип("ДокументСсылка.ВыкупПринятыхНаХранениеТоваров"));
	МассивТиповДляЗаполненияИзРеестра.Добавить(Тип("ДокументСсылка.КорректировкаПриобретения"));
	
	Если Не МассивТиповДляЗаполненияИзРеестра.Найти(ТипДанныхЗаполнения) = Неопределено Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрДокументов.Организация КАК Организация,
		|	КлючиРеестраДокументов.Ключ КАК Контрагент,
		|	РеестрДокументов.Партнер КАК Партнер,
		|	РеестрДокументов.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиРеестраДокументов КАК КлючиРеестраДокументов
		|		ПО (РеестрДокументов.Контрагент = КлючиРеестраДокументов.Ссылка)
		|ГДЕ
		|	РеестрДокументов.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(СуммыДокументовВВалютахУчетаСрезПоследних.СуммаБезНДСРегл), 0) КАК СуммаБезНДСРегл
		|ИЗ
		|	РегистрСведений.СуммыДокументовВВалютахУчета.СрезПоследних(
		|			&Период,
		|			Регистратор = &Ссылка
		|				И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)) КАК СуммыДокументовВВалютахУчетаСрезПоследних";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
		
		ПакетЗапроса = Запрос.ВыполнитьПакет();
		ВыборкаШапка = ПакетЗапроса[0].Выбрать();
		Если ВыборкаШапка.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
			
		КонецЕсли;
		
		Если НЕ ПакетЗапроса[1].Пустой() Тогда
			
			НачислениеНДС.Очистить();
			
		КонецЕсли;
		
		ВыборкаСуммы = ПакетЗапроса[1].Выбрать();
		Если ВыборкаСуммы.Следующий() Тогда
			
			НалоговаяБаза = ВыборкаСуммы.СуммаБезНДСРегл;
			СтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчанию(Организация, Дата);
			Если ЗначениеЗаполнено(СтавкаНДС) Тогда
				
				СтавкаНДСЧислом = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтавкаНДС, "Ставка");
				
			Иначе
				
				СтавкаНДСЧислом = 0;
				
			КонецЕсли;
			
			НоваяСтрокаНачислениеНДС = НачислениеНДС.Добавить();
			НоваяСтрокаНачислениеНДС.НалоговаяБаза = НалоговаяБаза;
			НоваяСтрокаНачислениеНДС.СтавкаНДС = СтавкаНДС;
			НоваяСтрокаНачислениеНДС.СуммаНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(НалоговаяБаза, СтавкаНДСЧислом, Ложь);
			
		КонецЕсли;
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.НачислениеРеверсивногоНДС") Тогда
		
		ИсправлениеДокументов.ЗаполнитьИсправление(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИсправлениеДокументов.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, "НачислениеНДС");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Ответственный, Подразделение);
	СуммаНДС = НачислениеНДС.Итог("СуммаНДС");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
