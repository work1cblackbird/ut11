#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	
	ПрочиеДоходыРасходыЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * ТаблицаИмяРегистра - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ПрочиеДоходыРасходы") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры);
		
		ПрочиеДоходыРасходыЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
	ПрочиеДоходыРасходыЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Отражение прочих доходов и расходов".
//
// Параметры:
//  КомандыСозданияНаОсновании - ТаблицаЗначений - описание в СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании
//
// Возвращаемое значение:
// 	СтрокаТаблицыЗначений - описание в СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании 
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПрочиеДоходыРасходы) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПрочиеДоходыРасходы.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПрочиеДоходыРасходы);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьУчетПрочихДоходовРасходов";
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ПрочиеДоходыРасходыЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Заполняет таблицу реквизитов, зависимых от хозяйственной операции
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция соглашения
//	МассивВсехРеквизитов - Массив - реквизиты, которые не зависят от хозяйственной операции
//	МассивРеквизитовОперации - Массив - реквизиты, которые зависят от хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("Валюта");
	МассивВсехРеквизитов.Добавить("ОрганизацияПолучатель");
	
	МассивВсехРеквизитов.Добавить("ПрочиеРасходы.КорСтатьяРасходов");
	МассивВсехРеквизитов.Добавить("ПрочиеРасходы.КорАналитикаРасходов");
	МассивВсехРеквизитов.Добавить("ПрочиеРасходы.СтатьяАктивовПассивов");
	МассивВсехРеквизитов.Добавить("ПрочиеРасходы.АналитикаАктивовПассивов");
	МассивВсехРеквизитов.Добавить("ПрочиеРасходы.ПредставлениеОтраженияВРеглУчете");
	
	МассивВсехРеквизитов.Добавить("ПрочиеДоходы.КорСтатьяДоходов");
	МассивВсехРеквизитов.Добавить("ПрочиеДоходы.КорАналитикаДоходов");
	МассивВсехРеквизитов.Добавить("ПрочиеДоходы.СтатьяАктивовПассивов");
	МассивВсехРеквизитов.Добавить("ПрочиеДоходы.АналитикаАктивовПассивов");
	МассивВсехРеквизитов.Добавить("ПрочиеДоходы.ПредставлениеОтраженияВРеглУчете");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы Тогда
		МассивРеквизитовОперации.Добавить("Валюта");
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.СтатьяАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.ПредставлениеОтраженияВРеглУчете");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеПрочихРасходов
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеПрочихРасходов Тогда
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.СтатьяАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.ПредставлениеОтраженияВРеглУчете");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеклассификацияРасходов Тогда
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.КорСтатьяРасходов");
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.КорАналитикаРасходов");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходы Тогда
		МассивРеквизитовОперации.Добавить("Валюта");
		МассивРеквизитовОперации.Добавить("ПрочиеДоходы.СтатьяАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПрочиеДоходы.АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПрочиеДоходы.ПредставлениеОтраженияВРеглУчете");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеПрочихДоходов Тогда
		МассивРеквизитовОперации.Добавить("ПрочиеДоходы.СтатьяАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПрочиеДоходы.АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПрочиеДоходы.ПредставлениеОтраженияВРеглУчете");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеклассификацияДоходов Тогда
		МассивРеквизитовОперации.Добавить("ПрочиеДоходы.КорСтатьяДоходов");
		МассивРеквизитовОперации.Добавить("ПрочиеДоходы.КорАналитикаДоходов");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.КорСтатьяРасходов");
		МассивРеквизитовОперации.Добавить("ПрочиеРасходы.КорАналитикаРасходов");
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет таблицу остатков расходов для подбора
//
// Параметры:
//	ДанныеОтбора			 - Структура - поля, по которым будут отобраны остатки для заполнения документа
//		ДанныеОтбора.Дата		 - Дата - дата среза, на которую будут получены остатки
//		ДанныеОтбора.Валюта		 - СправочникСсылка.Валюта - валюта документа
//		ДанныеОтбора.Ссылка		 - ДокументСсылка.РаспределениеРасходовНаПрочиеАктивы, Неопределено - документ, который необходимо обновить
//		ДанныеОтбора.Организация - СправочникСсылка.Организации, Неопределено - Организация, по которой будет осуществляться отбор остатков
//	Расходы					 - ДанныеФормыКоллекция - таблица расходов, в которую будут помещены данные.
//
Процедура ПолучитьОстаткиПрочихРасходов(ДанныеОтбора, Расходы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Параметры отбора
	Запрос.УстановитьПараметр("Ссылка",			ДанныеОтбора.Ссылка);
	Запрос.УстановитьПараметр("Организация",	ДанныеОтбора.Организация);
	Запрос.УстановитьПараметр("Граница",		Новый Граница(КонецДня(ДанныеОтбора.Дата), ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Подразделение КАК Подразделение,
	|	ВложенныйЗапрос.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВложенныйЗапрос.СтатьяРасходов КАК СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	СУММА(ВложенныйЗапрос.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ВложенныйЗапрос.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВложенныйЗапрос.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ВложенныйЗапрос.СуммаРегл
	|		- ВложенныйЗапрос.ПостояннаяРазница
	|		- ВложенныйЗапрос.ВременнаяРазница) КАК СуммаНУ,
	|	СУММА(ВложенныйЗапрос.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ВложенныйЗапрос.ВременнаяРазница) КАК ВременнаяРазница,
	|	СУММА(ВложенныйЗапрос.СуммаНДД) КАК СуммаНДД
	|ИЗ
	|	(ВЫБРАТЬ
	|		Регистр.Организация КАК Организация,
	|		Регистр.Подразделение КАК Подразделение,
	|		Регистр.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		Регистр.СтатьяРасходов КАК СтатьяРасходов,
	|		Регистр.АналитикаРасходов КАК АналитикаРасходов,
	|		Регистр.СуммаОстаток КАК Сумма,
	|		Регистр.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|		Регистр.СуммаУпрОстаток КАК СуммаУпр,
	|		Регистр.СуммаРеглОстаток КАК СуммаРегл,
	|		Регистр.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|		Регистр.ВременнаяРазницаОстаток КАК ВременнаяРазница,
	|		Регистр.СуммаНДДОстаток КАК СуммаНДД
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Остатки(&Граница, Организация = &Организация) КАК Регистр
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Регистр.Организация,
	|		Регистр.Подразделение,
	|		Регистр.НаправлениеДеятельности,
	|		Регистр.СтатьяРасходов,
	|		Регистр.АналитикаРасходов,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.Сумма
	|			ИНАЧЕ -Регистр.Сумма
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.СуммаБезНДС
	|			ИНАЧЕ -Регистр.СуммаБезНДС
	|		КОНЕЦ КАК СуммаБезНДС,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.СуммаУпр
	|			ИНАЧЕ -Регистр.СуммаУпр
	|		КОНЕЦ КАК СуммаУпр,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.СуммаРегл
	|			ИНАЧЕ -Регистр.СуммаРегл
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.ПостояннаяРазница
	|			ИНАЧЕ -Регистр.ПостояннаяРазница
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.ВременнаяРазница
	|			ИНАЧЕ -Регистр.ВременнаяРазница
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.СуммаНДД
	|			ИНАЧЕ -Регистр.СуммаНДД
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы КАК Регистр
	|	ГДЕ
	|		Регистр.Регистратор = &Ссылка
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.НаправлениеДеятельности,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Сумма) <> 0
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаУпр) <> 0
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаРегл) <> 0
	|		ИЛИ СУММА(ВложенныйЗапрос.ПостояннаяРазница) <> 0
	|		ИЛИ СУММА(ВложенныйЗапрос.ВременнаяРазница) <> 0
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаНДД) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	НаправлениеДеятельности,
	|	СтатьяРасходов,
	|	АналитикаРасходов";
	
	ВыборкаРасходы = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаРасходы.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Расходы.Добавить(), ВыборкаРасходы);
	КонецЦикла;
	
КонецПроцедуры


// Возвращает параметры выбора статей в документе.
// 
// Параметры:
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 
// Возвращаемое значение:
// 	Массив - Массив параметров настройки счетов учета (См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики)
//
Функция ПараметрыВыбораСтатейИАналитик(ХозяйственнаяОперация) Экспорт
	
	МассивПараметровВыбора = Новый Массив;
	
	#Область ПрочиеРасходыСтатьяРасходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным =    "Объект.ПрочиеРасходы";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПрочиеРасходыСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовБезРазбиения");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ПрочиеРасходыАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовБезРазбиения");
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область ПрочиеРасходыКорСтатьяРасходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.ПрочиеРасходы";
	ПараметрыВыбора.Статья = "КорСтатьяРасходов";
	ПараметрыВыбора.ДоступностьПоОперации = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеклассификацияРасходов
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами);
		
	ПараметрыВыбора.ОбязательностьЗаполнения = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеклассификацияРасходов);
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "КорАналитикаРасходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("КорСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПрочиеРасходыКорСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("КорСтатьяРасходовБезРазбиения");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("КорАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("ПрочиеРасходыКорАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("КорАналитикаРасходовБезРазбиения");
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область ПрочиеРасходыСтатьяАктивовПассивов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным =    "Объект.ПрочиеРасходы";
	ПараметрыВыбора.Статья = "СтатьяАктивовПассивов";
	ПараметрыВыбора.ДоступностьПоОперации = 
		(ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеПрочихРасходов
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеПрочихРасходов);
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("РасходыСтатьяАктивовПассивовБезРазбиения");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПрочиеРасходыСтатьяАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("РасходыСтатьяАктивовПассивов");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("РасходыАналитикаАктивовПассивовБезРазбиения");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ПрочиеРасходыАналитикаАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("РасходыАналитикаАктивовПассивов");
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область ПрочиеДоходыСтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным =    "Объект.ПрочиеДоходы";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПрочиеДоходыСтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходовБезРазбиения");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("ПрочиеДоходыАналитикаДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходовБезРазбиения");
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область ПрочиеДоходыКорСтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным =    "Объект.ПрочиеДоходы";
	ПараметрыВыбора.Статья = "КорСтатьяДоходов";
	ПараметрыВыбора.ДоступностьПоОперации = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеклассификацияДоходов);
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "КорАналитикаДоходов";

	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("КорСтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПрочиеДоходыКорСтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("КорСтатьяДоходовБезРазбиения");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("КорАналитикаДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("ПрочиеДоходыКорАналитикаДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("КорАналитикаДоходовБезРазбиения");
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	#Область ПрочиеДоходыСтатьяАктивовПассивов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.ПрочиеДоходы";
	ПараметрыВыбора.Статья = "СтатьяАктивовПассивов";
	ПараметрыВыбора.ДоступностьПоОперации = 
		(ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходы
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеПрочихДоходов);
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ДоходыСтатьяАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ПрочиеДоходыСтатьяАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("ДоходыСтатьяАктивовПассивовБезРазбиения");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ДоходыАналитикаАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ПрочиеДоходыАналитикаАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ДоходыАналитикаАктивовПассивовБезРазбиения");
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	Возврат МассивПараметровВыбора;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти


#КонецЕсли


#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ХозяйственнаяОперация");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Данные.ХозяйственнаяОперация) Тогда

		ПредставлениеОперации = СписокОпераций().НайтиПоЗначению(Данные.ХозяйственнаяОперация);
		Если ПредставлениеОперации <> Неопределено Тогда
			ПредставлениеОперации = ПредставлениеОперации.Представление;
		Иначе
			ПредставлениеОперации = Данные.ХозяйственнаяОперация;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 %2 от %3'"),
			ПредставлениеОперации,
			Данные.Номер,
			Данные.Дата);
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти


#Область Прочее

Функция СписокОпераций() Экспорт
	
	ПрочиеРасходы = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеРасходы");
	СписаниеПрочихРасходов = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов");
	СторнированиеПрочихРасходов = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов");
	РеклассификацияРасходов = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеклассификацияРасходов");
	ПередачаПрочихРасходовМеждуФилиалами = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами");
	ПрочиеДоходы = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеДоходы");
	СторнированиеПрочихДоходов = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов");
	РеклассификацияДоходов = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеклассификацияДоходов");

	СписокОпераций = Новый СписокЗначений;
	
	СписокОпераций.Добавить(ПрочиеРасходы, НСтр("ru = 'Регистрация расходов'"));
	СписокОпераций.Добавить(СписаниеПрочихРасходов, НСтр("ru = 'Списание расходов'"));
	СписокОпераций.Добавить(СторнированиеПрочихРасходов, НСтр("ru = 'Сторнирование расходов'"));
	СписокОпераций.Добавить(РеклассификацияРасходов, НСтр("ru = 'Реклассификация расходов'"));
	
	СписокОпераций.Добавить(ПрочиеДоходы, НСтр("ru = 'Регистрация доходов'"));
	СписокОпераций.Добавить(СторнированиеПрочихДоходов, НСтр("ru = 'Сторнирование доходов'"));
	СписокОпераций.Добавить(РеклассификацияДоходов, НСтр("ru = 'Реклассификация доходов'"));
	
	СписокОпераций.Добавить(ПередачаПрочихРасходовМеждуФилиалами, НСтр("ru = 'Передача расходов между филиалами'"));
	
	Возврат СписокОпераций;

КонецФункции

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос();
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = ПустаяСсылка().Метаданные().ПолноеИмя();
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ВЗапросеЕстьИсточник = Ложь;
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                  КАК Дата,
	|	ДанныеДокумента.Валюта                КАК Валюта,
	|	ДанныеДокумента.Номер                 КАК Номер,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация           КАК Организация,
	|	ДанныеДокумента.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	ДанныеДокумента.Ответственный         КАК Ответственный,
	|	ДанныеДокумента.Проведен              КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления       КАК ПометкаУдаления,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	НастройкиХозяйственныхОпераций.Ссылка КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО ДанныеДокумента.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                          Реквизиты.Дата);
	Запрос.УстановитьПараметр("Валюта",                          Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Организация",                     Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",           Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Номер",                           Реквизиты.Номер);
	Запрос.УстановитьПараметр("ПометкаУдаления",                 Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Ответственный",                   Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Проведен",                        Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",      Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",           Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",         ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка)));
	Запрос.УстановитьПараметр("НомерНаПечать",                   ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	Запрос.УстановитьПараметр("НастройкаХозяйственнойОперации",  Реквизиты.НастройкаХозяйственнойОперации);
	
КонецПроцедуры

Функция ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКоэффициентыПересчетаВалют";
	
	УстановитьПараметрЗапросаТаблицаКоэффициентыПересчетаВалют(Запрос);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВтКоэффициентыПересчетаВалют.Период,
		|	ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр,
		|	ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл
		|ПОМЕСТИТЬ ВтКоэффициентыПересчетаВалют
		|ИЗ
		|	&ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаТаблицаКоэффициентыПересчетаВалют(Запрос)
	
	ЗапросКурсов = Новый Запрос;
	ЗапросКурсов.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПериодыОтражения.Период КАК Период
		|ПОМЕСТИТЬ втПериоды
		|ИЗ
		|	(ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ПрочиеРасходы.ДатаОтражения, ДЕНЬ) КАК Период
		|	ИЗ
		|		Документ.ПрочиеДоходыРасходы.ПрочиеРасходы КАК ПрочиеРасходы
		|	ГДЕ
		|		ПрочиеРасходы.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ПрочиеДоходы.ДатаОтражения, ДЕНЬ)
		|	ИЗ
		|		Документ.ПрочиеДоходыРасходы.ПрочиеДоходы КАК ПрочиеДоходы
		|	ГДЕ
		|		ПрочиеДоходы.Ссылка = &Ссылка) КАК ПериодыОтражения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(КурсыВалют.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
		|	ЕСТЬNULL(КурсыВалют.БазоваяВалюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК БазоваяВалюта,
		|	втПериоды.Период КАК Период,
		|	МАКСИМУМ(ЕСТЬNULL(КурсыВалют.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаПоследнегоКурса
		|ПОМЕСТИТЬ втДатыПоследнихКурсовВалют
		|ИЗ
		|	втПериоды КАК втПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|		ПО (КурсыВалют.Период <= втПериоды.Период)
		|			И (КурсыВалют.Валюта = &ВалютаРеглУчета
		|				ИЛИ КурсыВалют.Валюта = &ВалютаУпрУчета
		|				ИЛИ КурсыВалют.Валюта = &ВалютаДокумента)
		|			И (КурсыВалют.БазоваяВалюта = &ВалютаРеглУчета)
		|
		|СГРУППИРОВАТЬ ПО
		|	втПериоды.Период,
		|	ЕСТЬNULL(КурсыВалют.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)),
		|	ЕСТЬNULL(КурсыВалют.БазоваяВалюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаРеглУчета
		|				ТОГДА КурсыВалют.КурсЧислитель
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КурсРеглУчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаРеглУчета
		|				ТОГДА КурсыВалют.КурсЗнаменатель
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КратностьРеглУчета,
		|	втДатыПоследнихКурсовВалют.Период КАК Период,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаУпрУчета
		|				ТОГДА КурсыВалют.КурсЧислитель
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КурсУпрУчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаУпрУчета
		|				ТОГДА КурсыВалют.КурсЗнаменатель
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КратностьУпрУчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаДокумента
		|				ТОГДА КурсыВалют.КурсЧислитель
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КурсДокумента,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаДокумента
		|				ТОГДА КурсыВалют.КурсЗнаменатель
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КратностьДокумента
		|ПОМЕСТИТЬ втКурсыВалютНаДату
		|ИЗ
		|	втДатыПоследнихКурсовВалют КАК втДатыПоследнихКурсовВалют
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|		ПО втДатыПоследнихКурсовВалют.ДатаПоследнегоКурса = КурсыВалют.Период
		|			И втДатыПоследнихКурсовВалют.БазоваяВалюта = КурсыВалют.БазоваяВалюта
		|			И втДатыПоследнихКурсовВалют.Валюта = КурсыВалют.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	втДатыПоследнихКурсовВалют.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втКурсыВалютНаДату.Период,
		|	ВЫБОР
		|		КОГДА втКурсыВалютНаДату.КратностьДокумента * втКурсыВалютНаДату.КурсУпрУчета = 0
		|			ТОГДА 1
		|		ИНАЧЕ втКурсыВалютНаДату.КурсДокумента * втКурсыВалютНаДату.КратностьУпрУчета / (втКурсыВалютНаДату.КратностьДокумента * втКурсыВалютНаДату.КурсУпрУчета)
		|	КОНЕЦ КАК КоэффициентПересчетаВВалютуУпр,
		|	ВЫБОР
		|		КОГДА втКурсыВалютНаДату.КратностьДокумента * втКурсыВалютНаДату.КурсРеглУчета = 0
		|			ТОГДА 1
		|		ИНАЧЕ втКурсыВалютНаДату.КурсДокумента * втКурсыВалютНаДату.КратностьРеглУчета / (втКурсыВалютНаДату.КратностьДокумента * втКурсыВалютНаДату.КурсРеглУчета)
		|	КОНЕЦ КАК КоэффициентПересчетаВВалютуРегл
		|ИЗ
		|	втКурсыВалютНаДату КАК втКурсыВалютНаДату";

	ЗапросКурсов.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросКурсов.УстановитьПараметр("ВалютаДокумента", Запрос.Параметры.Валюта);
	ЗапросКурсов.УстановитьПараметр("ВалютаУпрУчета",  Константы.ВалютаУправленческогоУчета.Получить());
	ЗапросКурсов.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(
					ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запрос.Параметры.Ссылка, "Организация")));
	
	Запрос.УстановитьПараметр("ВтКоэффициентыПересчетаВалют", ЗапросКурсов.Выполнить().Выгрузить());
	
КонецПроцедуры

Функция ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтДанныеРасходы";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;	
	
	ТекстЗапросаУчетнойПолитикиПоНДД = РасчетСебестоимостиЛокализация.ТекстЗапросаНастроекНДД("", "ПрочиеДоходыРасходы_ТекстЗапросаВтДанныеРасходы");
	ТекстыЗапроса.Добавить(ТекстЗапросаУчетнойПолитикиПоНДД, ИмяРегистра);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Организация                                 КАК Организация,
	|	ВЫБОР КОГДА РАЗНОСТЬДАТ(ДанныеДокументаРасходы.ДатаОтражения, ДанныеДокумента.Дата, ДЕНЬ) = 0
	|				ИЛИ ДанныеДокументаРасходы.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		ДанныеДокументаРасходы.ДатаОтражения
	|	КОНЕЦ                                                       КАК Дата,
	|	ДанныеДокументаРасходы.НомерСтроки                          КАК НомерСтроки,
	|
	|	ДанныеДокументаРасходы.Подразделение                        КАК Подразделение,
	|	ДанныеДокументаРасходы.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|	ДанныеДокументаРасходы.СтатьяРасходов                       КАК СтатьяРасходов,
	|	ДанныеДокументаРасходы.АналитикаРасходов                    КАК АналитикаРасходов,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокументаРасходы.КорПодразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 
	|			ТОГДА ДанныеДокументаРасходы.КорПодразделение
	|		ИНАЧЕ ДанныеДокументаРасходы.Подразделение
	|	КОНЕЦ                                                       КАК КорПодразделение,
	|	ДанныеДокументаРасходы.КорНаправлениеДеятельности           КАК КорНаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДанныеДокументаРасходы.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			ТОГДА ДанныеДокументаРасходы.КорСтатьяРасходов
	|		ИНАЧЕ ДанныеДокументаРасходы.СтатьяРасходов
	|	КОНЕЦ                                                       КАК КорСтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ДанныеДокументаРасходы.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			ТОГДА ДанныеДокументаРасходы.КорАналитикаРасходов
	|		ИНАЧЕ ДанныеДокументаРасходы.АналитикаРасходов
	|	КОНЕЦ                                                       КАК КорАналитикаРасходов,
	|
	|	ДанныеДокументаРасходы.СтатьяАктивовПассивов                КАК СтатьяАктивовПассивов,
	|	ДанныеДокументаРасходы.АналитикаАктивовПассивов             КАК АналитикаАктивовПассивов,
	|
	|	ДанныеДокументаРасходы.Ссылка                               КАК ДокументПоступленияРасходов,
	|	СтатьиРасходов.ПринятиеКНалоговомуУчету                     КАК ПринятиеКНалоговомуУчету,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов))
	|			ТОГДА ДанныеДокументаРасходы.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВЫРАЗИТЬ(ДанныеДокументаРасходы.Сумма КАК ЧИСЛО(31, 2))
	|				* ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов))
	|			ТОГДА ДанныеДокументаРасходы.СуммаБезНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ВЫРАЗИТЬ(ДанныеДокументаРасходы.СуммаБезНДС КАК ЧИСЛО(31, 2))
	|				* ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов))
	|			ТОГДА ДанныеДокументаРасходы.СуммаУпр
	|		ИНАЧЕ ВЫРАЗИТЬ(ВЫРАЗИТЬ(ДанныеДокументаРасходы.СуммаУпр КАК ЧИСЛО(31, 2))
	|				* ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ДанныеДокументаРасходы.СуммаРегл КАК СуммаРегл,
	|	ВЫБОР КОГДА НЕ &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами))
	|			И НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету ТОГДА
	|		ДанныеДокументаРасходы.СуммаРегл - ДанныеДокументаРасходы.ВременнаяРазница
	|	ИНАЧЕ
	|		ДанныеДокументаРасходы.ПостояннаяРазница
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	ДанныеДокументаРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаПоНДД.ПлательщикНДД, ЛОЖЬ)
	|			 И (ДанныеДокументаРасходы.КорСтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				 ИЛИ ЕСТЬNULL(КорСтатьиРасходов.ПризнаютсяВРасходахНДД, ЛОЖЬ))
	|			ТОГДА ДанныеДокументаРасходы.СуммаНДД
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДД,
	|
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами) 
 	|			И НЕ ЕСТЬNULL(КорСтатьиРасходов.ПринятиеКНалоговомуУчету, СтатьиРасходов.ПринятиеКНалоговомуУчету) ТОГДА
	|		ДанныеДокументаРасходы.СуммаРегл - ДанныеДокументаРасходы.ВременнаяРазница
	|	ИНАЧЕ
	|		ДанныеДокументаРасходы.ПостояннаяРазница
	|	КОНЕЦ КАК КорПостояннаяРазница,
	|
	|
	|	ДанныеДокументаРасходы.ВременнаяРазница КАК КорВременнаяРазница,
	|
	|	ДанныеДокументаРасходы.Сумма               КАК СуммаВВалюте,
	|
	|	ДанныеДокументаРасходы.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ ВтДанныеРасходы
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы.ПрочиеРасходы КАК ДанныеДокументаРасходы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПрочиеДоходыРасходы КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокументаРасходы.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ДанныеДокументаРасходы.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК КорСтатьиРасходов
	|	ПО
	|		ДанныеДокументаРасходы.КорСтатьяРасходов = КорСтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|	ПО  
	|		НАЧАЛОПЕРИОДА(ДанныеДокументаРасходы.ДатаОтражения, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаПоНДД КАК УчетнаяПолитикаПоНДД
	|	ПО
	|		ДанныеДокумента.Организация = УчетнаяПолитикаПоНДД.Организация
	|
	|ГДЕ
	|	ДанныеДокументаРасходы.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияРасходов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДанныеДоходы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтДанныеДоходы";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Организация                      КАК Организация,
	|	ВЫБОР КОГДА РАЗНОСТЬДАТ(ДанныеДокументаДоходы.ДатаОтражения, ДанныеДокумента.Дата, ДЕНЬ) = 0
	|				ИЛИ ДанныеДокументаДоходы.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		ДанныеДокументаДоходы.ДатаОтражения
	|	КОНЕЦ                                            КАК Дата,
	|	ДанныеДокументаДоходы.НомерСтроки                КАК НомерСтроки,
	|
	|	ДанныеДокументаДоходы.Подразделение              КАК Подразделение,
	|	ДанныеДокументаДоходы.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ДанныеДокументаДоходы.СтатьяДоходов              КАК СтатьяДоходов,
	|	ДанныеДокументаДоходы.АналитикаДоходов           КАК АналитикаДоходов,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокументаДоходы.КорПодразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 
	|			ТОГДА ДанныеДокументаДоходы.КорПодразделение
	|		ИНАЧЕ ДанныеДокументаДоходы.Подразделение
	|	КОНЕЦ                                            КАК КорПодразделение,
	|	ДанныеДокументаДоходы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДанныеДокументаДоходы.КорСтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|			ТОГДА ДанныеДокументаДоходы.КорСтатьяДоходов
	|		ИНАЧЕ ДанныеДокументаДоходы.СтатьяДоходов
	|	КОНЕЦ                                            КАК КорСтатьяДоходов,
	|	ВЫБОР
	|		КОГДА ДанныеДокументаДоходы.КорСтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|			ТОГДА ДанныеДокументаДоходы.КорАналитикаДоходов
	|		ИНАЧЕ ДанныеДокументаДоходы.АналитикаДоходов
	|	КОНЕЦ                                            КАК КорАналитикаДоходов,
	|
	|	ДанныеДокументаДоходы.СтатьяАктивовПассивов      КАК СтатьяАктивовПассивов,
	|	ДанныеДокументаДоходы.АналитикаАктивовПассивов   КАК АналитикаАктивовПассивов,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияДоходов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов))
	|			ТОГДА ДанныеДокументаДоходы.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВЫРАЗИТЬ(ДанныеДокументаДоходы.Сумма КАК ЧИСЛО(31, 2))
	|				* ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияДоходов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов))
	|			ТОГДА ДанныеДокументаДоходы.СуммаУпр
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ВЫРАЗИТЬ(ДанныеДокументаДоходы.СуммаУпр КАК ЧИСЛО(31, 2))
	|				* ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА ДанныеДокументаДоходы.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА ДанныеДокументаДоходы.ПостояннаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА ДанныеДокументаДоходы.ВременнаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВременнаяРазница,
	|	ДанныеДокументаДоходы.Сумма КАК СуммаВВалюте,
	|	ДанныеДокументаДоходы.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ ВтДанныеДоходы
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы.ПрочиеДоходы КАК ДанныеДокументаДоходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы КАК ДанныеДокумента
	|		ПО ДанныеДокументаДоходы.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ДанныеДокументаДоходы.ДатаОтражения, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|ГДЕ
	|	ДанныеДокументаДоходы.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияДоходов))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.Подразделение КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВтДанныеРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВтДанныеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|	ВтДанныеРасходы.СуммаНДД КАК СуммаНДД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации     КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВтДанныеРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВтДанныеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|	ВтДанныеРасходы.СуммаНДД КАК СуммаНДД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации     КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	-ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ -ВтДанныеРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	-ВтДанныеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	-ВтДанныеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	-ВтДанныеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	-ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|	-ВтДанныеРасходы.СуммаНДД КАК СуммаНДД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации     КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВтДанныеРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВтДанныеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|	ВтДанныеРасходы.СуммаНДД КАК СуммаНДД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации     КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.КорПодразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности,
	|	ВтДанныеРасходы.КорСтатьяРасходов,
	|	ВтДанныеРасходы.КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	-ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ -ВтДанныеРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	-ВтДанныеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	-ВтДанныеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	-ВтДанныеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	-ВтДанныеРасходы.КорПостояннаяРазница КАК ПостояннаяРазница,
	|	-ВтДанныеРасходы.КорВременнаяРазница КАК ВременнаяРазница,
	|	-ВтДанныеРасходы.СуммаНДД КАК СуммаНДД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации     КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	&ОрганизацияПолучатель,
	|	ВтДанныеРасходы.КорПодразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности,
	|	ВтДанныеРасходы.КорСтатьяРасходов,
	|	ВтДанныеРасходы.КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВтДанныеРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВтДанныеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	ВтДанныеРасходы.КорПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.КорВременнаяРазница КАК ВременнаяРазница,
	|	ВтДанныеРасходы.СуммаНДД КАК СуммаНДД,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРасходов) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВнутреннееПоступлениеРасходов) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	-ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	-ВЫБОР
	|		КОГДА ВтДанныеРасходы.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВтДанныеРасходы.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	-ВтДанныеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	-ВтДанныеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	-ВтДанныеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	-ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|	-ВтДанныеРасходы.СуммаНДД КАК СуммаНДД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации     КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ДополнительныеПоля = "";
	РасчетСебестоимостиЛокализация.ДобавитьДополнительныеПоляПоНДД(ДополнительныеПоля);
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы(ДополнительныеПоля);
	
	//++ Локализация
	
	// Отключаем логику расчета ПР по настройкам статьи расходов
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НЕ Статья.ПринятиеКналоговомуУчету", "ЛОЖЬ");
	
	//-- Локализация
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ДополнительныеПоля = "";
	РасчетСебестоимостиЛокализация.ДобавитьДополнительныеПоляПоНДД(ДополнительныеПоля);
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы(ДополнительныеПоля);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата                        КАК Период,
	|	ВтДанныеРасходы.Организация                 КАК Организация,
	|	ВтДанныеРасходы.Подразделение               КАК Подразделение,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов           КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаАктивовПассивов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|	ВтДанныеРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                КАК ВидДеятельностиНДС,
	|
	|	ВтДанныеРасходы.Сумма                       КАК Стоимость,
	|	ВтДанныеРасходы.СуммаБезНДС                 КАК СтоимостьБезНДС,
	|	0                                           КАК НДСУпр,
	|	ВтДанныеРасходы.СуммаРегл                   КАК СтоимостьРегл,
	|	ВтДанныеРасходы.ПостояннаяРазница           КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница            КАК ВременнаяРазница,
	|	0                                           КАК НДСРегл,
	|	&ХозяйственнаяОперация                      КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА """" 
	|	     ИНАЧЕ ВтДанныеРасходы.ИдентификаторСтроки 
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|	     ИНАЧЕ &НастройкаХозяйственнойОперации 
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий,
	|	ВтДанныеРасходы.НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	ВтДанныеРасходы.Сумма,
	|	ВтДанныеРасходы.СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	ВтДанныеРасходы.СуммаРегл,
	|	ВтДанныеРасходы.ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА """" 
	|	     ИНАЧЕ ВтДанныеРасходы.ИдентификаторСтроки 
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|	     ИНАЧЕ &НастройкаХозяйственнойОперации 
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий,
	|	ВтДанныеРасходы.НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	-ВтДанныеРасходы.Сумма,
	|	-ВтДанныеРасходы.СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	-ВтДанныеРасходы.СуммаРегл,
	|	-ВтДанныеРасходы.ПостояннаяРазница,
	|	-ВтДанныеРасходы.ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА """" 
	|	     ИНАЧЕ ВтДанныеРасходы.ИдентификаторСтроки 
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|	     ИНАЧЕ &НастройкаХозяйственнойОперации 
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий,
	|	ВтДанныеРасходы.НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	ВтДанныеРасходы.Сумма,
	|	ВтДанныеРасходы.СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	ВтДанныеРасходы.СуммаРегл,
	|	ВтДанныеРасходы.ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА """" 
	|	     ИНАЧЕ ВтДанныеРасходы.ИдентификаторСтроки 
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|	     ИНАЧЕ &НастройкаХозяйственнойОперации 
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.КорСтатьяРасходов,
	|	ВтДанныеРасходы.КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	-ВтДанныеРасходы.Сумма,
	|	-ВтДанныеРасходы.СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	-ВтДанныеРасходы.СуммаРегл,
	|	-ВтДанныеРасходы.КорПостояннаяРазница КАК ПостояннаяРазница,
	|	-ВтДанныеРасходы.КорВременнаяРазница КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА """" 
	|	     ИНАЧЕ ВтДанныеРасходы.ИдентификаторСтроки 
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|	     ИНАЧЕ &НастройкаХозяйственнойОперации 
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий,
	|	ВтДанныеРасходы.НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	ВтДанныеРасходы.Сумма,
	|	ВтДанныеРасходы.СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	ВтДанныеРасходы.СуммаРегл,
	|	ВтДанныеРасходы.ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА """" 
	|	     ИНАЧЕ ВтДанныеРасходы.ИдентификаторСтроки 
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|	     ИНАЧЕ &НастройкаХозяйственнойОперации 
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата,
	|	&ОрганизацияПолучатель,
	|	ВтДанныеРасходы.КорПодразделение,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.КорСтатьяРасходов,
	|	ВтДанныеРасходы.КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	ВтДанныеРасходы.Сумма,
	|	ВтДанныеРасходы.СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	ВтДанныеРасходы.СуммаРегл,
	|	ВтДанныеРасходы.ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРасходов) КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА """" 
	|	     ИНАЧЕ ВтДанныеРасходы.ИдентификаторСтроки 
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	 ВЫБОР КОГДА &ОрганизацияПолучатель <> ВтДанныеРасходы.Организация
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|	     ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВнутреннееПоступлениеРасходов)  
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	
	//++ Локализация
	
	// Отключаем логику расчета ПР по настройкам статьи расходов
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НЕ Статья.ПринятиеКналоговомуУчету", "ЛОЖЬ");
	
	//-- Локализация
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеДоходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеДоходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеДоходы.НомерСтроки             КАК НомерСтроки,
	|	ВтДанныеДоходы.Дата                    КАК Период,
	|	ВтДанныеДоходы.Организация             КАК Организация,
	|	ВтДанныеДоходы.Подразделение           КАК Подразделение,
	|	ВтДанныеДоходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяДоходов           КАК СтатьяДоходов,
	|	ВтДанныеДоходы.АналитикаДоходов        КАК АналитикаДоходов,
	|	ВтДанныеДоходы.Сумма                   КАК Сумма,
	|	ВтДанныеДоходы.СуммаРегл               КАК СуммаРегл,
	|	ВтДанныеДоходы.СуммаУпр                КАК СуммаУпр,
	|	
	|	ВтДанныеДоходы.ИдентификаторСтроки     КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации        КАК НастройкаХозяйственнойОперации 
	|	
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы)
	|	И ВтДанныеДоходы.Сумма + ВтДанныеДоходы.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеДоходы.НомерСтроки             КАК НомерСтроки,
	|	ВтДанныеДоходы.Дата                    КАК Период,
	|	ВтДанныеДоходы.Организация             КАК Организация,
	|	ВтДанныеДоходы.Подразделение           КАК Подразделение,
	|	ВтДанныеДоходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяДоходов           КАК СтатьяДоходов,
	|	ВтДанныеДоходы.АналитикаДоходов        КАК АналитикаДоходов,
	|	-ВтДанныеДоходы.Сумма                  КАК Сумма,
	|	-ВтДанныеДоходы.СуммаРегл              КАК СуммаРегл,
	|	-ВтДанныеДоходы.СуммаУпр               КАК СуммаУпр,
	|	
	|	ВтДанныеДоходы.ИдентификаторСтроки     КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации        КАК НастройкаХозяйственнойОперации 
	|	
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация  = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов)
	|	И ВтДанныеДоходы.Сумма + ВтДанныеДоходы.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеДоходы.НомерСтроки             КАК НомерСтроки,
	|	ВтДанныеДоходы.Дата                    КАК Период,
	|	ВтДанныеДоходы.Организация             КАК Организация,
	|	ВтДанныеДоходы.Подразделение           КАК Подразделение,
	|	ВтДанныеДоходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяДоходов           КАК СтатьяДоходов,
	|	ВтДанныеДоходы.АналитикаДоходов        КАК АналитикаДоходов,
	|	-ВтДанныеДоходы.Сумма                  КАК Сумма,
	|	-ВтДанныеДоходы.СуммаРегл              КАК СуммаРегл,
	|	-ВтДанныеДоходы.СуммаУпр               КАК СуммаУпр,
	|	
	|	ВтДанныеДоходы.ИдентификаторСтроки     КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации        КАК НастройкаХозяйственнойОперации 
	|	
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияДоходов)
	|	И ВтДанныеДоходы.Сумма + ВтДанныеДоходы.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ВтДанныеДоходы.НомерСтроки                КАК НомерСтроки,
	|	ВтДанныеДоходы.Дата                       КАК Период,
	|	ВтДанныеДоходы.Организация                КАК Организация,
	|	ВтДанныеДоходы.КорПодразделение           КАК Подразделение,
	|	ВтДанныеДоходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.КорСтатьяДоходов           КАК СтатьяДоходов,
	|	ВтДанныеДоходы.КорАналитикаДоходов        КАК АналитикаДоходов,
	|	ВтДанныеДоходы.Сумма                      КАК Сумма,
	|	ВтДанныеДоходы.СуммаРегл                  КАК СуммаРегл,
	|	ВтДанныеДоходы.СуммаУпр                   КАК СуммаУпр,
	|	
	|	ВтДанныеДоходы.ИдентификаторСтроки        КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации           КАК НастройкаХозяйственнойОперации 
	|	
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияДоходов)
	|	И ВтДанныеДоходы.Сумма + ВтДанныеДоходы.СуммаРегл <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеДоходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеДоходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|	ВтДанныеДоходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеДоходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ВтДанныеДоходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы)
	|	И ВтДанныеДоходы.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|	ВтДанныеДоходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеДоходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК Аналитика,
	|	-ВтДанныеДоходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов)
	|	И ВтДанныеДоходы.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ВтДанныеРасходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|	И ВтДанныеРасходы.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ВтДанныеРасходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов)
	|	И ВтДанныеРасходы.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	-ВтДанныеРасходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов)
	|	И ВтДанныеРасходы.Сумма <> 0
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеДоходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеДоходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|	ВтДанныеДоходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеДоходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтДанныеДоходы.СуммаРегл КАК СуммаРегл,
	|	ВтДанныеДоходы.СуммаУпр КАК СуммаУпр,
	|	ВтДанныеДоходы.Сумма КАК СуммаСНДС,
	|	ВтДанныеДоходы.Сумма КАК СуммаБезНДС,
	|	ВтДанныеДоходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтДанныеДоходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	ВтДанныеДоходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	ВтДанныеДоходы.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы)
	|	И (ВтДанныеДоходы.Сумма <> 0 ИЛИ ВтДанныеДоходы.СуммаРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|	ВтДанныеДоходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеДоходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	-ВтДанныеДоходы.СуммаРегл КАК СуммаРегл,
	|	-ВтДанныеДоходы.СуммаУпр КАК СуммаУпр,
	|	-ВтДанныеДоходы.Сумма КАК СуммаСНДС,
	|	-ВтДанныеДоходы.Сумма КАК СуммаБезНДС,
	|	-ВтДанныеДоходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ВтДанныеДоходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	ВтДанныеДоходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	ВтДанныеДоходы.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов)
	|	И (ВтДанныеДоходы.Сумма <> 0 ИЛИ ВтДанныеДоходы.СуммаРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|	ВтДанныеРасходы.СуммаУпр КАК СуммаУпр,
	|	ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВтДанныеРасходы.СуммаБезНДС КАК СуммаБезНДС,
	|	ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|	И (ВтДанныеРасходы.Сумма <> 0 ИЛИ ВтДанныеРасходы.СуммаРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|	ВтДанныеРасходы.СуммаУпр КАК СуммаУпр,
	|	ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВтДанныеРасходы.СуммаБезНДС КАК СуммаБезНДС,
	|	ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов)
	|	И (ВтДанныеРасходы.Сумма <> 0 ИЛИ ВтДанныеРасходы.СуммаРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	-ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|	-ВтДанныеРасходы.СуммаУпр КАК СуммаУпр,
	|	-ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	-ВтДанныеРасходы.СуммаБезНДС КАК СуммаБезНДС,
	|	-ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов)
	|	И (ВтДанныеРасходы.Сумма <> 0 ИЛИ ВтДанныеРасходы.СуммаРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.Подразделение КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами) КАК Статья,
	|	&ОрганизацияПолучатель КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|	ВтДанныеРасходы.СуммаУпр КАК СуммаУпр,
	|	ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВтДанныеРасходы.СуммаБезНДС КАК СуммаБезНДС,
	|	ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами)
	|	И ВтДанныеРасходы.Организация <> &ОрганизацияПолучатель
	|	И (ВтДанныеРасходы.Сумма <> 0 ИЛИ ВтДанныеРасходы.СуммаРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами) КАК Статья,
	|	ВтДанныеРасходы.Организация КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|	ВтДанныеРасходы.СуммаУпр КАК СуммаУпр,
	|	ВтДанныеРасходы.Сумма КАК СуммаСНДС,
	|	ВтДанныеРасходы.СуммаБезНДС КАК СуммаБезНДС,
	|	ВтДанныеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	ВтДанныеРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВнутреннееПоступлениеРасходов) КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами)
	|	И ВтДанныеРасходы.Организация <> &ОрганизацияПолучатель
	|	И (ВтДанныеРасходы.Сумма <> 0 ИЛИ ВтДанныеРасходы.СуммаРегл <> 0)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеДоходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеДоходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ВтДанныеДоходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходыАктивыПассивы) КАК ХозяйственнаяОперация,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|
	|	ВтДанныеДоходы.Подразделение КАК Подразделение,
	|	ВтДанныеДоходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяДоходов КАК Статья,
	|	ВтДанныеДоходы.АналитикаДоходов КАК АналитикаДоходов,
	|	NULL КАК АналитикаРасходов,
	|	NULL КАК АналитикаАктивовПассивов,
	|
	|	ВтДанныеДоходы.КорПодразделение КАК КорПодразделение,
	|	ВтДанныеДоходы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК КорСтатья,
	|	NULL КАК КорАналитикаДоходов,
	|	NULL КАК КорАналитикаРасходов,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|
	|	ВтДанныеДоходы.Сумма КАК Сумма,
	|	ВтДанныеДоходы.СуммаУпр КАК СуммаУпр,
	|	ВтДанныеДоходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	ВтДанныеДоходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы)
	|	И ВтДанныеДоходы.Сумма + ВтДанныеДоходы.СуммаРегл <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ВтДанныеДоходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов) КАК ХозяйственнаяОперация,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|
	|	ВтДанныеДоходы.Подразделение КАК Подразделение,
	|	ВтДанныеДоходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяДоходов КАК Статья,
	|	ВтДанныеДоходы.АналитикаДоходов КАК АналитикаДоходов,
	|	NULL КАК АналитикаРасходов,
	|	NULL КАК АналитикаАктивовПассивов,
	|
	|	ВтДанныеДоходы.КорПодразделение КАК КорПодразделение,
	|	ВтДанныеДоходы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК КорСтатья,
	|	NULL КАК КорАналитикаДоходов,
	|	NULL КАК КорАналитикаРасходов,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|
	|	-ВтДанныеДоходы.Сумма КАК Сумма,
	|	-ВтДанныеДоходы.СуммаУпр КАК СуммаУпр,
	|	-ВтДанныеДоходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	-ВтДанныеДоходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов)
	|	И ВтДанныеДоходы.Сумма + ВтДанныеДоходы.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходыАктивыПассивы) КАК ХозяйственнаяОперация,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	NULL КАК АналитикаДоходов,
	|	NULL КАК АналитикаРасходов,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.Подразделение КАК КорПодразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов КАК КорСтатья,
	|	NULL КАК КорАналитикаДоходов,
	|	ВтДанныеРасходы.АналитикаРасходов КАК КорАналитикаРасходов,
	|	NULL КАК КорАналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 ИЛИ НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ВтДанныеРасходы.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	ВтДанныеРасходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|	И ВтДанныеРасходы.Сумма + ВтДанныеРасходы.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходыАктивыПассивы) КАК ХозяйственнаяОперация,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|
	|	ВтДанныеРасходы.Подразделение КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов КАК Статья,
	|	NULL КАК АналитикаДоходов,
	|	ВтДанныеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	NULL КАК АналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.КорПодразделение КАК КорПодразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК КорСтатья,
	|	NULL КАК КорАналитикаДоходов,
	|	NULL КАК КорАналитикаРасходов,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 ИЛИ НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ВтДанныеРасходы.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	ВтДанныеРасходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов)
	|	И ВтДанныеРасходы.Сумма + ВтДанныеРасходы.СуммаРегл <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов) КАК ХозяйственнаяОперация,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	NULL КАК АналитикаДоходов,
	|	NULL КАК АналитикаРасходов,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.Подразделение КАК КорПодразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов КАК КорСтатья,
	|	NULL КАК КорАналитикаДоходов,
	|	ВтДанныеРасходы.АналитикаРасходов КАК КорАналитикаРасходов,
	|	NULL КАК КорАналитикаАктивовПассивов,
	|
	|	-ВтДанныеРасходы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 ИЛИ НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		ИНАЧЕ
	|			-ВтДанныеРасходы.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	-ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	-ВтДанныеРасходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов)
	|	И ВтДанныеРасходы.Сумма + ВтДанныеРасходы.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВтДанныеРасходы.Организация,
	|
	|	ВтДанныеРасходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.КорСтатьяРасходов КАК Статья,
	|	NULL КАК АналитикаДоходов,
	|	ВтДанныеРасходы.КорАналитикаРасходов КАК АналитикаРасходов,
	|	NULL КАК АналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.Подразделение КАК КорПодразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов КАК КорСтатья,
	|	NULL КАК КорАналитикаДоходов,
	|	ВтДанныеРасходы.АналитикаРасходов КАК КорАналитикаРасходов,
	|	NULL КАК КорАналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 ИЛИ НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ВтДанныеРасходы.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	ВтДанныеРасходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияРасходов)
	|	И ВтДанныеРасходы.Сумма + ВтДанныеРасходы.СуммаРегл <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ВтДанныеДоходы.НомерСтроки,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВтДанныеДоходы.Организация,
	|
	|	ВтДанныеДоходы.КорПодразделение КАК Подразделение,
	|	ВтДанныеДоходы.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеДоходы.КорСтатьяДоходов КАК Статья,
	|	ВтДанныеДоходы.КорАналитикаДоходов КАК АналитикаДоходов,
	|	NULL КАК АналитикаРасходов,
	|	NULL КАК АналитикаАктивовПассивов,
	|
	|	ВтДанныеДоходы.Подразделение КАК КорПодразделение,
	|	ВтДанныеДоходы.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтДанныеДоходы.СтатьяДоходов КАК КорСтатья,
	|	ВтДанныеДоходы.АналитикаДоходов КАК КорАналитикаДоходов,
	|	NULL КАК КорАналитикаРасходов,
	|	NULL КАК КорАналитикаАктивовПассивов,
	|
	|	ВтДанныеДоходы.Сумма КАК Сумма,
	|	ВтДанныеДоходы.СуммаУпр КАК СуммаУпр,
	|	ВтДанныеДоходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	ВтДанныеДоходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеклассификацияДоходов)
	|	И ВтДанныеДоходы.Сумма + ВтДанныеДоходы.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|
	|	ВтДанныеРасходы.Подразделение КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов КАК Статья,
	|	NULL КАК АналитикаДоходов,
	|	ВтДанныеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	NULL КАК АналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.КорПодразделение КАК КорПодразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтДанныеРасходы.КорСтатьяРасходов КАК КорСтатья,
	|	NULL КАК КорАналитикаДоходов,
	|	ВтДанныеРасходы.КорАналитикаРасходов КАК КорАналитикаРасходов,
	|	NULL КАК КорАналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 ИЛИ НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ВтДанныеРасходы.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	ВтДанныеРасходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами)
	|	И ВтДанныеРасходы.Сумма + ВтДанныеРасходы.СуммаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРасходов) КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель КАК Организация,
	|
	|	ВтДанныеРасходы.Подразделение КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов КАК Статья,
	|	NULL КАК АналитикаДоходов,
	|	ВтДанныеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	NULL КАК АналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.КорПодразделение КАК КорПодразделение,
	|	ВтДанныеРасходы.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтДанныеРасходы.КорСтатьяРасходов КАК КорСтатья,
	|	NULL КАК КорАналитикаДоходов,
	|	ВтДанныеРасходы.КорАналитикаРасходов КАК КорАналитикаРасходов,
	|	NULL КАК КорАналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 ИЛИ НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ВтДанныеРасходы.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	ВтДанныеРасходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами)
	|	И ВтДанныеРасходы.Сумма + ВтДанныеРасходы.СуммаРегл <> 0
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	НЕОПРЕДЕЛЕНО                            КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                            КАК Договор,
	|	НЕОПРЕДЕЛЕНО                            КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО                            КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	НЕОПРЕДЕЛЕНО                            КАК Комментарий,
	|	&Валюта                                 КАК Валюта,
	|	НЕОПРЕДЕЛЕНО                            КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&Период                                 КАК ДатаОтраженияВУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;
	ПрочиеДоходыРасходыЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// См. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ПрочиеДоходыРасходы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.20.26";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("5ed7a6cc-7884-4740-82be-7fefa2573805");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПрочиеДоходыРасходы.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	СписокОписаний = Новый Массив;
	СписокОписаний.Добавить(НСтр("ru = 'Обновление документов ""Отражение прочих доходов и расходов"":'"));
	СписокОписаний.Добавить(НСтр("ru = '- заполнение реквизита ""Международный фин. учет"" табличной части ""Прочие расходы""'"));
	СписокОписаний.Добавить(НСтр("ru = '- замена аналитики с типом перечисление типы налогов на справочник виды налогов и взносов';"));
	
	Обработчик.Комментарий = СтрСоединить(СписокОписаний, Символы.ПС);
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ПрочиеДоходыРасходы.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ПрочиеДоходыРасходы.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ПрочиеДоходыРасходы.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ПрочиеДоходыРасходы";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы.ПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	ПрочиеРасходы.СуммаУпр = 0
	|	И ПрочиеРасходы.СуммаБезНДС <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы.ПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	ПрочиеРасходы.АналитикаАктивовПассивов ССЫЛКА Перечисление.УдалитьТипыНалогов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПрочиеДоходы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы.ПрочиеДоходы КАК ПрочиеДоходы
	|ГДЕ
	|	ПрочиеДоходы.АналитикаАктивовПассивов ССЫЛКА Перечисление.УдалитьТипыНалогов";
		
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления
// 
// Параметры:
// 	Параметры - См. ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляМногопоточнойОбработки 
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ПрочиеДоходыРасходы";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	#Область ТекстыЗапроса
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ОбновляемыеДанные.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОбновляемыеДанные
		|ИЗ
		|	&ОбновляемыеДанные КАК ОбновляемыеДанные
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка");
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ОбновляемыеДанные.Ссылка КАК Ссылка,
		|	ПрочиеДоходыРасходы.ВерсияДанных КАК ВерсияДанных
		|ИЗ
		|	ОбновляемыеДанные КАК ОбновляемыеДанные
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы КАК ПрочиеДоходыРасходы
		|		ПО ОбновляемыеДанные.Ссылка = ПрочиеДоходыРасходы.Ссылка
		|");
	
	#КонецОбласти
	
	Запрос = Новый Запрос(СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов()));
	Запрос.УстановитьПараметр("ОбновляемыеДанные", ОбновляемыеДанные);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			Блокировка.Добавить(ПолноеИмяОбъекта).УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			
			Если ДокументОбъект <> Неопределено Тогда
				
				ОбъектИзменен = Ложь;
				Перечисления.УдалитьТипыНалогов.ЗаполнитьРеквизитТипНалога(ДокументОбъект, "ПрочиеРасходы.АналитикаАктивовПассивов");
				Перечисления.УдалитьТипыНалогов.ЗаполнитьРеквизитТипНалога(ДокументОбъект, "ПрочиеДоходы.АналитикаАктивовПассивов");
				Если ДокументОбъект.Модифицированность() Тогда
					ОбъектИзменен = Истина;
				КонецЕсли;
				Для Каждого ТекСтр Из ДокументОбъект.ПрочиеРасходы Цикл
					
					Если ТекСтр.СуммаУпр = 0 И ТекСтр.СуммаБезНДС <> 0 Тогда
						ТекСтр.СуммаУпр = ТекСтр.СуммаБезНДС;
						ОбъектИзменен = Истина;
					КонецЕсли;
					
				КонецЦикла;
				
				Если ОбъектИзменен Тогда
					ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
				Иначе
					ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ДокументОбъект);
				КонецЕсли;
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;

	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
