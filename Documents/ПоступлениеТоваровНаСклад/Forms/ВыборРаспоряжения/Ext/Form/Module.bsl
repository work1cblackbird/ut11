
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Партнер",		Параметры.Партнер);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Контрагент",	Параметры.Контрагент);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Соглашение",	Параметры.Соглашение);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Организация",	Параметры.Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Договор",		Параметры.Договор);
	
	Если ЗначениеЗаполнено(Параметры.Склад) Тогда
		Склады = ЗначениеНастроекПовтИсп.ИерархияГрупп(Параметры.Склад);
		Склады.Добавить(Справочники.Склады.ПустаяСсылка());
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "БезОтбораПоСкладу", Ложь);
	Иначе
		Склады = Новый Массив;
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "БезОтбораПоСкладу", Истина);
	КонецЕсли;
	
	Склады.Добавить(Параметры.Склад);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Склады", Склады);
	
	ХозяйственныеОперацииСоглашения = Новый Массив;
	ХозяйственныеОперацииСоглашения.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	ХозяйственныеОперацииСоглашения.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ХозяйственныеОперацииСоглашения.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	
	ХозяйственныеОперацииДоговора = Новый Массив;
	ХозяйственныеОперацииДоговора.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути);
	ХозяйственныеОперацииДоговора.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки);
	ХозяйственныеОперацииДоговора.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути);
	ХозяйственныеОперацииДоговора.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки);
	ХозяйственныеОперацииДоговора.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ХозяйственнаяОперация",
																		Параметры.ХозяйственнаяОперация);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ХозяйственныеОперацииДоговора",
																		ХозяйственныеОперацииДоговора);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ХозяйственныеОперацииСоглашения",
																		ХозяйственныеОперацииСоглашения);
	
	ВариантыПриемкиПоЗаказу = Новый Массив;
	ВариантыПриемкиПоЗаказу.Добавить(Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ВариантыПриемкиПоЗаказу",
																		ВариантыПриемкиПоЗаказу);
	
	ВариантыПриемкиПоДоговоруПоЗаказу = Новый Массив;
	ВариантыПриемкиПоДоговоруПоЗаказу.Добавить(Перечисления.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ВариантыПриемкиПоДоговоруПоЗаказу",
																		ВариантыПриемкиПоДоговоруПоЗаказу);
	
	ВариантыПриемкиПоНакладнаяПоЗаказу = Новый Массив;
	ВариантыПриемкиПоНакладнаяПоЗаказу.Добавить(Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным);
	ВариантыПриемкиПоНакладнаяПоЗаказу.Добавить(Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ВариантыПриемкиПоНакладнаяПоЗаказу",
																		ВариантыПриемкиПоНакладнаяПоЗаказу);
	
	ВариантыПриемкиПоНакладнаяБезЗаказа = Новый Массив;
	ВариантыПриемкиПоНакладнаяБезЗаказа.Добавить(Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ВариантыПриемкиПоНакладнаяБезЗаказа",
																		ВариантыПриемкиПоНакладнаяБезЗаказа);

	ВариантыПриемкиПоСоглашению = Новый Массив;
	ВариантыПриемкиПоСоглашению.Добавить(Перечисления.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных);
	ВариантыПриемкиПоСоглашению.Добавить(Перечисления.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным);
	ВариантыПриемкиПоСоглашению.Добавить(Перечисления.ВариантыПриемкиТоваров.НеРазделенаПоНакладным);
	
	ВариантыПриемкиПоДоговору = Новый Массив;
	ВариантыПриемкиПоДоговору.Добавить(Перечисления.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных);
	ВариантыПриемкиПоДоговору.Добавить(Перечисления.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных);
	ВариантыПриемкиПоДоговору.Добавить(Перечисления.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ВариантыПриемкиПоСоглашению",
																		ВариантыПриемкиПоСоглашению);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ВариантыПриемкиПоДоговору",
																		ВариантыПриемкиПоДоговору);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"КонстантаВариантПриемки",
																		Константы.ВариантПриемкиТоваров.Получить());
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																		"ИспользоватьТоварыВПутиОтПоставщиков",
																		ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработатьВыбор(Элемент.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если ОбщегоНазначенияУТКлиент.ПроверитьНаличиеВыделенныхВСпискеСтрок(Элементы.Список) Тогда
		ОбработатьВыбор(Элементы.Список.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Параметры:
// 	ТекущаяСтрока - ДанныеФормыЭлементКоллекции, ДанныеФормыЭлементДерева, ДанныеФормыСтруктура - содержит:
//	* Ссылка                - ДокументСсылка.ЗаказПоставщику - 
//	* Партнер               - СправочникСсылка.Партнеры - 
//	* Контрагент            - СправочникСсылка.Контрагенты - 
//	* Соглашение            - СправочникСсылка.СоглашенияСПоставщиками - 
//	* ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - 
//	* Организация           - СправочникСсылка.Организации - 
//	* Договор               - СправочникСсылка.ДоговорыКонтрагентов - 
//	* ЭтоГруппаСкладов      - Булево - 
//	* Склад                 - СправочникСсылка.Склады - 
//	* Валюта                - СправочникСсылка.Валюты - 
//	* ВидЦеныПоставщика     - СправочникСсылка.ВидыЦенПоставщиков - 
&НаКлиенте
Процедура ОбработатьВыбор(ТекущаяСтрока)
	
	ВыбранноеЗначение = Новый Структура;
	ВыбранноеЗначение.Вставить("Распоряжение",			ТекущаяСтрока.Ссылка);
	ВыбранноеЗначение.Вставить("Партнер",				ТекущаяСтрока.Партнер);
	ВыбранноеЗначение.Вставить("Контрагент",			ТекущаяСтрока.Контрагент);
	ВыбранноеЗначение.Вставить("Соглашение",			ТекущаяСтрока.Соглашение);
	ВыбранноеЗначение.Вставить("ХозяйственнаяОперация",	ТекущаяСтрока.ХозяйственнаяОперация);
	ВыбранноеЗначение.Вставить("Организация",			ТекущаяСтрока.Организация);
	ВыбранноеЗначение.Вставить("Договор",				ТекущаяСтрока.Договор);
	ВыбранноеЗначение.Вставить("ЭтоГруппаСкладов",		ТекущаяСтрока.ЭтоГруппаСкладов);
	ВыбранноеЗначение.Вставить("Склад",					ТекущаяСтрока.Склад);
	ВыбранноеЗначение.Вставить("Валюта",				ТекущаяСтрока.Валюта);
	ВыбранноеЗначение.Вставить("ВидЦеныПоставщика",		ТекущаяСтрока.ВидЦеныПоставщика);
	
	Закрыть(ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти
