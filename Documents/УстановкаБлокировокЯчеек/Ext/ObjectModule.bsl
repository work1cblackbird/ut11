#Если НЕ МобильныйАвтономныйСервер Тогда
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	Если Не (ДанныеЗаполнения <> Неопределено
		И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения))) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтборРазмещениеТоваров") Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,"Проведен,Статус,Склад,Помещение");
		
		Если Не ЗначенияРеквизитов.Проведен Тогда
			ТекстСообщения = НСтр("ru='Ввод на основании возможен только по проведенным документам!'");
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		Если ЗначенияРеквизитов.Статус <> Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками Тогда
			ТекстСообщения = НСтр("ru='Ввод установки блокировки возможен только на основании задания на отбор (размещение) в статусе %Выполнено%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Выполнено%", Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками);
			ВызватьИсключение ТекстСообщения;
		Иначе
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект,ЗначенияРеквизитов, "Склад, Помещение");
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ВложенныйЗапрос.Ячейка,
			|	СУММА(ВложенныйЗапрос.КоличествоЯчеекРазмещение) КАК КоличествоЯчеекРазмещение,
			|	СУММА(ВложенныйЗапрос.КоличествоЯчеекОтбор) КАК КоличествоЯчеекОтбор
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОтборРазмещениеТоваровТоварыОтбор.Ячейка КАК Ячейка,
			|		0 КАК КоличествоЯчеекРазмещение,
			|		1 КАК КоличествоЯчеекОтбор
			|	ИЗ
			|		Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ОтборРазмещениеТоваровТоварыОтбор
			|	ГДЕ
			|		ОтборРазмещениеТоваровТоварыОтбор.Ссылка = &Ссылка
			|		И ОтборРазмещениеТоваровТоварыОтбор.КоличествоУпаковок <> ОтборРазмещениеТоваровТоварыОтбор.КоличествоУпаковокОтобрано
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОтборРазмещениеТоваровТоварыРазмещение.Ячейка,
			|		1,
			|		0
			|	ИЗ
			|		Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК ОтборРазмещениеТоваровТоварыРазмещение
			|	ГДЕ
			|		ОтборРазмещениеТоваровТоварыРазмещение.Ссылка = &Ссылка
			|		И ОтборРазмещениеТоваровТоварыРазмещение.КоличествоУпаковок <> ОтборРазмещениеТоваровТоварыРазмещение.КоличествоУпаковокРазмещено) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Ячейка
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВложенныйЗапрос.Ячейка.Код";
			
			Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				НоваяСтрока = СкладскиеЯчейки.Добавить();
				НоваяСтрока.Ячейка = Выборка.Ячейка;
				
				Если Выборка.КоличествоЯчеекОтбор > 0
					И Выборка.КоличествоЯчеекРазмещение = 0 Тогда
					// Значит количества не сходятся только в ТЧ Отбор
					// блокируем на отбор.
					НоваяСтрока.ТипБлокировки = Перечисления.ТипыБлокировокСкладскихЯчеек.Отбор;
				ИначеЕсли Выборка.КоличествоЯчеекРазмещение > 0
					И Выборка.КоличествоЯчеекОтбор = 0 Тогда
					// Значит количества не сходятся только в ТЧ Размещение
					// блокируем на размещение.
					НоваяСтрока.ТипБлокировки = Перечисления.ТипыБлокировокСкладскихЯчеек.Размещение;
				Иначе
					// Значит количества не сходятся в обеих ТЧ
					// блокируем на полностью.
					НоваяСтрока.ТипБлокировки = Перечисления.ТипыБлокировокСкладскихЯчеек.Полная;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверитьЯчейкиПередБлокировкой(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ИнициализироватьДокумент();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если Не СкладыСервер.ИспользоватьСкладскиеПомещения(Склад,Дата) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Помещение");
	КонецЕсли;
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный = Пользователи.ТекущийПользователь();
	Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);

КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ПроверитьЯчейкиПередБлокировкой(Отказ)
	
	Блокировка = Новый БлокировкаДанных;

	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.БлокировкиСкладскихЯчеек");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СкладскиеЯчейки;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ячейка", "Ячейка");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыВЯчейках");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Разделяемый;
	ЭлементБлокировки.ИсточникДанных = СкладскиеЯчейки;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ячейка", "Ячейка");
	
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|	ТоварыВЯчейкахОстатки.КОтборуОстаток КАК КОтборуОстаток,
	|	ТоварыВЯчейкахОстатки.КРазмещениюОстаток КАК КРазмещениюОстаток,
	|	УстановкаБлокировокЯчеекСкладскиеЯчейки.ТипБлокировки КАК ТипБлокировки
	|ИЗ
	|	Документ.УстановкаБлокировокЯчеек.СкладскиеЯчейки КАК УстановкаБлокировокЯчеекСкладскиеЯчейки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВЯчейках.Остатки(
	|				,
	|				Ячейка В
	|					(ВЫБРАТЬ
	|						УстановкаБлокировокЯчеекСкладскиеЯчейки.Ячейка КАК Ячейка
	|					ИЗ
	|						Документ.УстановкаБлокировокЯчеек.СкладскиеЯчейки КАК УстановкаБлокировокЯчеекСкладскиеЯчейки
	|					ГДЕ
	|						УстановкаБлокировокЯчеекСкладскиеЯчейки.Ссылка = &Ссылка)) КАК ТоварыВЯчейкахОстатки
	|		ПО УстановкаБлокировокЯчеекСкладскиеЯчейки.Ячейка = ТоварыВЯчейкахОстатки.Ячейка
	|ГДЕ
	|	(ТоварыВЯчейкахОстатки.КОтборуОстаток <> 0
	|				И (УстановкаБлокировокЯчеекСкладскиеЯчейки.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная)
	|					ИЛИ УстановкаБлокировокЯчеекСкладскиеЯчейки.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Отбор))
	|			ИЛИ ТоварыВЯчейкахОстатки.КРазмещениюОстаток <> 0
	|				И (УстановкаБлокировокЯчеекСкладскиеЯчейки.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная)
	|					ИЛИ УстановкаБлокировокЯчеекСкладскиеЯчейки.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Размещение)))
	|	И УстановкаБлокировокЯчеекСкладскиеЯчейки.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ячейка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипБлокировки = Перечисления.ТипыБлокировокСкладскихЯчеек.Размещение Тогда
			ТекстСообщения = НСтр("ru='Ячейка %Ячейка% не может быть заблокирована с типом блокировки ""%ТипБлокировки%"":
									   |есть невыполненные задания на размещение товара в ячейку'");
		ИначеЕсли Выборка.ТипБлокировки = Перечисления.ТипыБлокировокСкладскихЯчеек.Отбор Тогда
			ТекстСообщения = НСтр("ru='Ячейка %Ячейка% не может быть заблокирована с типом блокировки ""%ТипБлокировки%"":
									   |есть невыполненные задания на отбор товара из ячейки'");
		ИначеЕсли Выборка.ТипБлокировки = Перечисления.ТипыБлокировокСкладскихЯчеек.Полная Тогда
			ТекстСообщения = НСтр("ru='Ячейка %Ячейка% не может быть заблокирована с типом блокировки ""%ТипБлокировки%"":
									   |есть невыполненные задания на %Действие%'");
			//
			Если Выборка.КОтборуОстаток <> 0
			     И Выборка.КРазмещениюОстаток <> 0 Тогда
				 ТекстДействия = НСтр("ru='отбор и размещение товара в ячейку'");
			ИначеЕсли Выборка.КОтборуОстаток <> 0 Тогда
				 ТекстДействия = НСтр("ru='отбор товара из ячейки'");
			ИначеЕсли Выборка.КРазмещениюОстаток <> 0 Тогда
				 ТекстДействия = НСтр("ru='размещение в ячейку'");
			КонецЕсли;
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Действие%", ТекстДействия);
			
		КонецЕсли;
			
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ячейка%", Выборка.Ячейка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипБлокировки%", Выборка.ТипБлокировки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
#КонецЕсли