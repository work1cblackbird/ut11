
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	МаршрутыПодписанияБЭД.УстановитьУсловноеОформлениеДереваМаршрута(ЭтотОбъект, "ДеревоМаршрутаПодписания");
	
	Объект = Параметры.Объект;
	
	СообщениеОбмена = ОбменСБанкамиСлужебный.СообщениеОбменаПоВладельцу(Объект);
	
	Если ЗначениеЗаполнено(СообщениеОбмена) Тогда
		НастройкаОбмена = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СообщениеОбмена, "НастройкаОбмена");
		ПрограммаБанка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НастройкаОбмена, "ПрограммаБанка");
	КонецЕсли;
	
	ЗаполнитьТаблицуЭП();
	
	Состояние = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СообщениеОбмена, "Состояние");
	
	Элементы.ГруппаМаршрутПодписания.Видимость = Состояние = Перечисления.СостоянияОбменСБанками.НаПодписи;
	
	КлючСохраненияПоложенияОкна = Строка(Элементы.ГруппаМаршрутПодписания.Видимость);
	
	ОбновитьДеревоМаршрутаПодписания();
	
	Элементы.ПроверитьПодписи.Видимость = ЭП.Количество();
	
	Если НЕ ОбменСБанкамиСлужебныйВызовСервера.ПравоВыполненияОбмена() Тогда
		Элементы.ПроверитьПодписи.Доступность = Ложь;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСертификат(Команда)
	
	Если Элементы.ЭП.ТекущиеДанные <> Неопределено Тогда
		ПоказатьСертификат(Элементы.ЭП.ТекущиеДанные.Отпечаток);
	Иначе
		ОчиститьСообщения();
		ТекстОшибки = НСтр("ru = 'Выберите сертификат в списке установленных подписей.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодписи(Команда)
	
	ОчиститьСообщения();
	Оповещение = Новый ОписаниеОповещения("ОбновитьДанныеФормыПослеПроверкиПодписей", ЭтотОбъект);
	Если ПрограммаБанка = ПредопределенноеЗначение("Перечисление.ПрограммыБанка.АсинхронныйОбмен") Тогда
		ОбменСБанкамиСлужебныйКлиент.ПроверитьПодписиСообщенияОбмена(Оповещение, СообщениеОбмена);
	Иначе
		МассивСообщенийОбмена = Новый Массив;
		МассивСообщенийОбмена.Добавить(СообщениеОбмена);
		ОбменСБанкамиСлужебныйКлиент.ОпределитьСтатусыПодписейСбербанк(
			Оповещение, НастройкаОбмена, МассивСообщенийОбмена);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПоказатьСертификат(Отпечаток)
	
	СтруктураСертификата = ОбменСБанкамиСлужебныйВызовСервера.СтруктураСертификатаУстановленнойПодписи(
		СообщениеОбмена, Отпечаток, УникальныйИдентификатор);

	Если СтруктураСертификата <> Неопределено Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СтруктураСертификата", СтруктураСертификата);
		ПараметрыФормы.Вставить("Отпечаток", Отпечаток);
		ПараметрыФормы.Вставить("АдресСертификата", СтруктураСертификата.АдресДанныхСертификата);
		ОткрытьФорму("ОбщаяФорма.Сертификат", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеФормыПослеПроверкиПодписей(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат); 
	ИначеЕсли ТипЗнч(Результат) = Тип("Булево") Тогда 
		Если Результат Тогда  
			ТекстСообщения = НСтр("ru = 'Результат проверки - подпись верна'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Результат проверки - подпись неверна'");
		КонецЕсли;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения); 
	КонецЕсли;
	
	ЗаполнитьТаблицуЭП();
	ОбновитьОтображениеДанных(); 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЭПСтатус.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭП.ПодписьВерна");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЭП()
	
	Если Не ЗначениеЗаполнено(СообщениеОбмена) Тогда
		Возврат;
	КонецЕсли;
	
	ПрисоединенныйФайл = ОбменСБанкамиСлужебный.ПрисоединенныйФайл(СообщениеОбмена);

	ТаблицаЭП = РеквизитФормыВЗначение("ЭП");
	ТаблицаЭП.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭП.КомуВыданСертификат КАК КомуВыданСертификат,
	|	ЭП.ДатаПроверкиПодписи КАК ДатаПроверкиПодписи,
	|	ЭП.ПодписьВерна КАК ПодписьВерна,
	|	ЭП.ДатаПодписи КАК ДатаПодписи,
	|	ЭП.Отпечаток КАК Отпечаток,
	|	ЭП.ПорядковыйНомер КАК НомерСтроки,
	|	ЭП.УстановившийПодпись КАК УстановившийПодпись
	|ИЗ
	|	РегистрСведений.ЭлектронныеПодписи КАК ЭП
	|ГДЕ
	|	ЭП.ПодписанныйОбъект = &ПрисоединенныйФайл";
	
	Запрос.УстановитьПараметр("ПрисоединенныйФайл", ПрисоединенныйФайл);
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаЭП.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЗаполнитьСтатусПодписи(НоваяСтрока, Выборка);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТаблицаЭП, "ЭП");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "КомандаПроверитьПодписи", "Видимость", ЭП.Количество());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатусПодписи(НоваяСтрока, ТекСтрока)
	
	Если ЗначениеЗаполнено(ТекСтрока.ДатаПроверкиПодписи) Тогда
		НоваяСтрока.Представление = ?(ТекСтрока.ПодписьВерна, НСтр("ru = 'Верна'"), НСтр("ru = 'Неверна'"))
			+" (" + ТекСтрока.ДатаПроверкиПодписи + ")";
	Иначе
		НоваяСтрока.Представление = НСтр("ru = 'Не проверена'");
	КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоМаршрутаПодписания()

	Если Состояние = Перечисления.СостоянияОбменСБанками.НаПодписи Тогда
		МаршрутыПодписанияБЭД.ЗаполнитьДеревоМаршрутаНаФорме(
			ЭтотОбъект, СообщениеОбмена, "ДеревоМаршрутаПодписания");
	Иначе
		ДеревоМаршрутаПодписания.ПолучитьЭлементы().Очистить();
		Статус = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Статус");
		
		Если Статус = Перечисления.СтатусыОбменСБанками.Сформирован ИЛИ Статус = Перечисления.СтатусыОбменСБанками.Черновик Тогда
			ПараметрыОбмена = ОбменСБанкамиСлужебныйВызовСервера.ПараметрыОбменаПоВидуЭД(
				НастройкаОбмена, Перечисления.ВидыЭДОбменСБанками.Письмо);
			Если ЗначениеЗаполнено(ПараметрыОбмена.МаршрутПодписания) Тогда
				ТаблицаМаршрута = ПараметрыОбмена.МаршрутПодписания.ТаблицаТребований.Выгрузить();
				
				МаршрутыПодписанияБЭД.ЗаполнитьДеревоМаршрутаНаФорме(ЭтотОбъект, ТаблицаМаршрута, 
					"ДеревоМаршрутаПодписания");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти