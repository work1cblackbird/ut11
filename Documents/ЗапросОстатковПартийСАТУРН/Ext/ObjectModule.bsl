#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияСАТУРНПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	МассивНепроверяемыхРеквизитов.Добавить("ОстаткиПоДаннымСАТУРН.Серия");
	
	ИнтеграцияСАТУРНПереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияСАТУРН.ЗаписатьСоответствиеНоменклатуры(ЭтотОбъект, "ОстаткиПоДаннымСАТУРН");
	
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ИнтеграцияСАТУРН.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ОстаткиПоДаннымСАТУРН.Очистить();
	КорректировкаОстатков.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ЗапросОстатковПартийСАТУРН.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиПартийСАТУРН.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	РегистрыСведений.МестаХраненияПартийСАТУРН.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияИСПереопределяемый.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьПоРасхождениям() Экспорт
	
	КорректировкаОстатков.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ВладелецПартии", ОрганизацияСАТУРН);
	Запрос.УстановитьПараметр("ОстаткиПоДаннымСАТУРН", ОстаткиПоДаннымСАТУРН.Выгрузить(, "Партия,МестоХранения,КоличествоОстатокСАТУРН"));
	Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
	Запрос.УстановитьПараметр("ВсеОстатки", Не ЗначениеЗаполнено(МестоХранения));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОстаткиПартийСАТУРНОстатки.Партия КАК Партия,
	|	ОстаткиПартийСАТУРНОстатки.КоличествоСАТУРНОстаток КАК КоличествоСАТУРН,
	|	ОстаткиПартийСАТУРНОстатки.ВОбработкеСАТУРНОстаток КАК ВОбработкеСАТУРН,
	|	ПоложениеПартийСАТУРН.МестоХранения КАК МестоХранения
	|ПОМЕСТИТЬ ОстаткиПоУчету
	|ИЗ
	|	РегистрНакопления.ОстаткиПартийСАТУРН.Остатки(&Период) КАК ОстаткиПартийСАТУРНОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестаХраненияПартийСАТУРН.СрезПоследних(&Период) КАК ПоложениеПартийСАТУРН
	|		ПО ОстаткиПартийСАТУРНОстатки.Партия = ПоложениеПартийСАТУРН.Партия
	|		И ПоложениеПартийСАТУРН.ОрганизацияСАТУРН = &ВладелецПартии
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Партия,
	|	МестоХранения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиПоДаннымСАТУРН.Партия КАК Партия,
	|	ОстаткиПоДаннымСАТУРН.МестоХранения КАК МестоХранения,
	|	ОстаткиПоДаннымСАТУРН.КоличествоОстатокСАТУРН КАК КоличествоСАТУРН
	|ПОМЕСТИТЬ ОстаткиСАТУРН
	|ИЗ
	|	&ОстаткиПоДаннымСАТУРН КАК ОстаткиПоДаннымСАТУРН
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Партия,
	|	МестоХранения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ОстаткиПоУчету.Партия, ОстаткиСАТУРН.Партия) КАК Партия,
	|	ЕСТЬNULL(ОстаткиСАТУРН.МестоХранения, ОстаткиПоУчету.МестоХранения) КАК МестоХранения,
	|	ЕСТЬNULL(ОстаткиСАТУРН.КоличествоСАТУРН, 0) - ЕСТЬNULL(ОстаткиПоУчету.КоличествоСАТУРН, 0) КАК КоличествоСАТУРН,
	|	-ЕСТЬNULL(ОстаткиПоУчету.ВОбработкеСАТУРН, 0) КАК ВОбработкеСАТУРН
	|ИЗ
	|	ОстаткиПоУчету КАК ОстаткиПоУчету
	|		ПОЛНОЕ СОЕДИНЕНИЕ ОстаткиСАТУРН КАК ОстаткиСАТУРН
	|		ПО ОстаткиПоУчету.Партия = ОстаткиСАТУРН.Партия
	|ГДЕ
	|	(ЕСТЬNULL(ОстаткиСАТУРН.КоличествоСАТУРН, 0) <> ЕСТЬNULL(ОстаткиПоУчету.КоличествоСАТУРН, 0)
	|		ИЛИ ЕСТЬNULL(ОстаткиПоУчету.ВОбработкеСАТУРН, 0) <> 0
	|		ИЛИ ОстаткиПоУчету.МестоХранения <> ОстаткиСАТУРН.МестоХранения)
	|	И (&ВсеОстатки
	|		ИЛИ ОстаткиПоУчету.МестоХранения = &МестоХранения
	|		ИЛИ ОстаткиСАТУРН.МестоХранения = &МестоХранения)";
	
	КорректировкаОстатков.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеСАТУРН.ДанныеЗаполненияЗапросаОстатковСАТУРН(ОрганизацияСАТУРН);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеСАТУРН.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
