#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует параметры заполнения видов запасов дополнительных свойств документа, используемых при записи документа
// в режиме 'Проведения' или 'Отмены проведения'.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект.СписаниеРасхожденийПоступлениеПриобретение - документ, для которого выполняется инициализация параметров.
//	РежимЗаписи - РежимЗаписиДокумента - режим записи документа.
//
Процедура ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ДокументОбъект, РежимЗаписи = Неопределено) Экспорт
	
	ПараметрыЗаполненияВидовЗапасов = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();

	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ПараметрыЗаполненияВидовЗапасов.ИспользоватьРаздельноеОформлениеЗакупок = Истина;
	КонецЕсли;
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ПараметрыЗаполненияВидовЗапасов", ПараметрыЗаполненияВидовЗапасов);

КонецПроцедуры


// Заполняет условия закупок
//
// Параметры:
//	УсловияЗакупок - Структура - Структура для заполнения.
//
Процедура ЗаполнитьУсловияЗакупок(Знач УсловияЗакупок) Экспорт
	
	Если УсловияЗакупок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(УсловияЗакупок.Организация)
		И УсловияЗакупок.Организация <> Организация Тогда
		
		Организация = УсловияЗакупок.Организация;
		
	КонецЕсли;

	Если ЗначениеЗаполнено(УсловияЗакупок.Склад) Тогда
		Склад = УсловияЗакупок.Склад;
	КонецЕсли;
	
	НаправлениеДеятельности = УсловияЗакупок.НаправлениеДеятельности;
	
	Если ЗначениеЗаполнено(УсловияЗакупок.Контрагент)
		И УсловияЗакупок.Контрагент <> Контрагент Тогда
		
		Контрагент = УсловияЗакупок.Контрагент;
		
	КонецЕсли;
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	
	Если УсловияЗакупок.ИспользуютсяДоговорыКонтрагентов <> Неопределено
		И УсловияЗакупок.ИспользуютсяДоговорыКонтрагентов Тогда
		
		ПарыОперацийРаздельнойЗакупки = ЗакупкиСервер.ПарыОперацийРаздельнойЗакупки();
		ХозяйственнаяОперацияДоговора = ПарыОперацийРаздельнойЗакупки.Получить(Перечисления.ХозяйственныеОперации.СписаниеРасхожденийПоступлениеПриобретение);
		
		ДопПараметры = ЗакупкиСервер.ДополнительныеПараметрыОтбораДоговоров();
		Договор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(ЭтотОбъект, ХозяйственнаяОперацияДоговора, ДопПараметры);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетЗатратПоНаправлениямДеятельности") Тогда
			НаправленияДеятельностиСервер.ЗаполнитьНаправлениеПоУмолчанию(НаправлениеДеятельности, Соглашение, Договор);
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьВидДеятельностиНДС();
	
КонецПроцедуры

Процедура ЗаполнитьУсловияЗакупокПоУмолчанию() Экспорт
	
	Если ЗначениеЗаполнено(Партнер) Тогда
		
		ХозяйственныеОперации = Новый Массив;
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка);
		
		ПараметрыОтбораСоглашения = Новый Структура;
		ПараметрыОтбораСоглашения.Вставить("ВыбранноеСоглашение",                     Соглашение);
		ПараметрыОтбораСоглашения.Вставить("ХозяйственныеОперации",                   ХозяйственныеОперации);
		ПараметрыОтбораСоглашения.Вставить("УчитыватьГруппыСкладов",                  Ложь);
		ПараметрыОтбораСоглашения.Вставить("ИсключитьГруппыСкладовДоступныеВЗаказах", Истина);
		
		УсловияЗакупокПоУмолчанию = ЗакупкиСервер.ПолучитьУсловияЗакупокПоУмолчанию(Партнер, ПараметрыОтбораСоглашения);
		
		ЦеныЗаполнены = Ложь;
		
		Если УсловияЗакупокПоУмолчанию <> Неопределено Тогда
			
			Если Соглашение <> УсловияЗакупокПоУмолчанию.Соглашение
				И ЗначениеЗаполнено(УсловияЗакупокПоУмолчанию.Соглашение) Тогда
				
				Соглашение = УсловияЗакупокПоУмолчанию.Соглашение;
				ЗаполнитьУсловияЗакупок(УсловияЗакупокПоУмолчанию);
				
			Иначе
				ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
				Соглашение = УсловияЗакупокПоУмолчанию.Соглашение;
			КонецЕсли;
			
		Иначе
			
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
			Соглашение = Неопределено;
			
			ПарыОперацийРаздельнойЗакупки	= ЗакупкиСервер.ПарыОперацийРаздельнойЗакупки();
			ХозяйственнаяОперацияДоговора	= ПарыОперацийРаздельнойЗакупки.Получить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка);
			ТекущаяХозяйственнаяОперация	= ХозяйственнаяОперацияДоговора;
			
			ДопПараметры = ЗакупкиСервер.ДополнительныеПараметрыОтбораДоговоров();
			Договор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(ЭтотОбъект, ХозяйственнаяОперацияДоговора, ДопПараметры);
			
			ЗаполнитьВидДеятельностиНДС();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет реквизиты, хранящие информацию о видах запасов и аналитиках учета номенклатуры в табличной части 'Расхождения'
// документа, а также заполняет табличную часть 'ВидыЗапасов'.
//
// Параметры:
//	Отказ - Булево - признак того, что не удалось заполнить данные.
//	ТаблицыДокумента - см. Документы.СписаниеРасхожденийПоступлениеПриобретение.КоллекцияТабличныхЧастейТоваров.
//
Процедура ЗаполнитьВидыЗапасовПриОбмене(Отказ, ТаблицыДокумента) Экспорт
	
	ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров();
	
	Если ТаблицыДокумента <> Неопределено Тогда
		ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров(ТаблицыДокумента);
		ДополнительныеСвойства.Вставить("ТаблицыЗаполненияВидовЗапасовПриОбмене", ТаблицыДокумента);
	Иначе
		ИмяПараметра = "ТаблицыДокумента";
		
		ТекстИсключения = НСтр("ru = 'Для заполнения видов запасов не передан параметр ""%1"".'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, ИмяПараметра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЗаполнитьВидыЗапасов(Отказ);
	ДополнительныеСвойства.Удалить("ТаблицыЗаполненияВидовЗапасовПриОбмене");
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ПараметрыПроверкиЗаполненияХарактеристик = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик(); 
	ПараметрыПроверкиЗаполненияХарактеристик.ИмяТЧ = "Расхождения";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверкиЗаполненияХарактеристик);

	ПараметрыПроверкиЗаполненияКоличества = НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества();
	ПараметрыПроверкиЗаполненияКоличества.ИмяТЧ = "Расхождения";
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверкиЗаполненияКоличества);

	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.СписаниеРасхожденийПоступлениеПриобретение),
												Отказ,
												МассивНепроверяемыхРеквизитов);
	
	РаботыУслуги = Новый Массив;
	РаботыУслуги.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	РаботыУслуги.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	
	Если Не ЗначениеЗаполнено(Склад) Тогда
		Для ТекИндекс = 0 По Расхождения.Количество()-1 Цикл
			
			СтрокаТовары = Расхождения[ТекИндекс]; // СтрокаТабличнойЧасти
			
			Если РаботыУслуги.Найти(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТовары.Номенклатура, "ТипНоменклатуры")) = Неопределено Тогда
				ТекстОшибки = НСтр("ru='Поле ""Склад"" не заполнено.'");
					
				ОбщегоНазначения.СообщитьПользователю(
					ТекстОшибки,,
					"Объект.Склад",,
					Отказ);
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЕстьПерепоставки = Ложь;
	ЕстьНедопоставки = Ложь;
	Для Каждого СтрокаТовары Из Расхождения Цикл
		Если СтрокаТовары.ВидРасхождений = Перечисления.ВидыРасхожденийПоступленийПриобретений.Недопоставка Тогда 
			ЕстьНедопоставки = Истина;
		КонецЕсли;
		Если СтрокаТовары.ВидРасхождений = Перечисления.ВидыРасхожденийПоступленийПриобретений.Перепоставка Тогда 
			ЕстьПерепоставки = Истина;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьПерепоставки Тогда
		ПроверяемыеРеквизиты.Добавить("СтатьяДоходов");
	КонецЕсли;

	Если ЕстьНедопоставки Тогда
		ПроверяемыеРеквизиты.Добавить("СтатьяРасходов");
	КонецЕсли;    
	ИсправлениеДокументов.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	// Выбор статей и аналитик.
	ПараметрыДоступностиСтатей = Новый Структура("ЕстьПерепоставки, ЕстьНедопоставки, ОбработкаПроверкиЗаполнения", ЕстьПерепоставки, ЕстьНедопоставки, Истина);
	ПараметрыВыбораСтатейИАналитик = Документы.СписаниеРасхожденийПоступлениеПриобретение.ПараметрыВыбораСтатейИАналитик(ПараметрыДоступностиСтатей);
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

	СписаниеРасхожденийПоступлениеПриобретениеЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Перем Склад;
	
	Автор = Пользователи.ТекущийПользователь();
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				
				ДанныеЗаполнения.Свойство("Склад", Склад);

				ЗаполнитьДокументНаОснованииЗаказаПоставщику(ДанныеЗаполнения.ДокументОснование, Склад);
				
			ИначеЕсли ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
				
				ДанныеЗаполнения.Свойство("Склад", Склад);
				ЗаполнитьДокументНаОснованииПриобретенияТоваров(ДанныеЗаполнения.ДокументОснование,
																Склад,
																ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.ДокументОснование, "ХозяйственнаяОперация"));
			ИначеЕсли ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				
				ДанныеЗаполнения.Свойство("Склад", Склад);
				ЗаполнитьДокументНаОснованииДоговора(ДанныеЗаполнения.ДокументОснование);

			КонецЕсли;
		ИначеЕсли ДанныеЗаполнения.Свойство("АктОРасхождениях") 
			И ДанныеЗаполнения.Свойство("ОснованиеАкта") Тогда
			
			ЗаполнитьДокументНаОснованииАктаПриемкиПослеПриобретения(ДанныеЗаполнения);
			
		КонецЕсли;
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		ЗаполнитьДокументНаОснованииДоговора(ДанныеЗаполнения);

	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеРасхожденийПоступлениеПриобретение") Тогда
		ИсправлениеДокументов.ЗаполнитьИсправление(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
	ИнициализироватьДокумент(ДанныеЗаполнения);

	// Выбор статей и аналитик.
	ЕстьПерепоставки = Ложь;
	ЕстьНедопоставки = Ложь;
	Для Каждого СтрокаТовары Из Расхождения Цикл
		ЕстьНедопоставки = СтрокаТовары.ВидРасхождений = Перечисления.ВидыРасхожденийПоступленийПриобретений.Недопоставка;
		ЕстьПерепоставки = СтрокаТовары.ВидРасхождений = Перечисления.ВидыРасхожденийПоступленийПриобретений.Перепоставка;
	КонецЦикла;
		
	ПараметрыДоступностиСтатей = Новый Структура("ЕстьПерепоставки, ЕстьНедопоставки", ЕстьПерепоставки, ЕстьНедопоставки);
	ПараметрыВыбораСтатейИАналитик = Документы.СписаниеРасхожденийПоступлениеПриобретение.ПараметрыВыбораСтатейИАналитик(ПараметрыДоступностиСтатей);
	ДоходыИРасходыСервер.ОбработкаЗаполнения(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);

	СписаниеРасхожденийПоступлениеПриобретениеЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект);
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	СписаниеРасхожденийПоступлениеПриобретениеЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект, РежимЗаписиДокумента.ОтменаПроведения);
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	СписаниеРасхожденийПоступлениеПриобретениеЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИсправлениеДокументов.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
	ВидыЗапасов.Очистить();
	
	ИнициализироватьДокумент();
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, "ВидыЗапасов");
	
	СписаниеРасхожденийПоступлениеПриобретениеЛокализация.ПриКопировании(ЭтотОбъект, ОбъектКопирования);

	Автор = Пользователи.ТекущийПользователь();
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	ИсправлениеДокументов.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект,
		Документы.СписаниеРасхожденийПоступлениеПриобретение);

	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров();
		ЗаполнитьВидыЗапасов(Отказ);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ВидыЗапасов.Очистить();
	КонецЕсли;

	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "Расхождения,ВидыЗапасов");


	// Выбор статей и аналитик.
	ЕстьПерепоставки = Ложь;
	ЕстьНедопоставки = Ложь;
	Для Каждого СтрокаТовары Из Расхождения Цикл
		ЕстьНедопоставки = СтрокаТовары.ВидРасхождений = Перечисления.ВидыРасхожденийПоступленийПриобретений.Недопоставка;
		ЕстьПерепоставки = СтрокаТовары.ВидРасхождений = Перечисления.ВидыРасхожденийПоступленийПриобретений.Перепоставка;
	КонецЦикла;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И ЕстьПерепоставки Тогда
		ПроверитьСоздатьАналитикиУчетаНоменклатурыБезСерий();
	КонецЕсли;
	ПараметрыДоступностиСтатей = Новый Структура("ЕстьПерепоставки, ЕстьНедопоставки", ЕстьПерепоставки, ЕстьНедопоставки);
	ПараметрыВыбораСтатейИАналитик = Документы.СписаниеРасхожденийПоступлениеПриобретение.ПараметрыВыбораСтатейИАналитик(ПараметрыДоступностиСтатей);
	ДоходыИРасходыСервер.ПередЗаписью(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Склад       = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	
	Если Не ЗначениеЗаполнено(Распоряжение) Тогда
		Распоряжение = ДокументОснованиеПриЗаполнении(ДанныеЗаполнения);
	КонецЕсли;
	
	ЗаполнитьВидДеятельностиНДС();
	
КонецПроцедуры

Функция ДокументОснованиеПриЗаполнении(ДанныеЗаполнения)
	
	ТипыОснований = Новый Массив;
	ТипыОснований.Добавить(Тип("ДокументСсылка.СписаниеРасхожденийПоступлениеПриобретение"));
	ТипыОснований.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
	ТипыОснований.Добавить(Тип("СправочникСсылка.СоглашенияСПоставщиками"));
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ДокументОснование")
		И ТипыОснований.Найти(ТипЗнч(ДанныеЗаполнения.ДокументОснование)) <> Неопределено Тогда
		
		Возврат ДанныеЗаполнения.ДокументОснование;
		
	ИначеЕсли ТипыОснований.Найти(ТипЗнч(ДанныеЗаполнения)) <> Неопределено Тогда 
		
		Возврат ДанныеЗаполнения;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ТекстЗапросаЗаполненияНаОсновании(ПоДаннымАктаОРасхождениях = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПриобретениеТоваров.Ссылка КАК Ссылка,
	|	ПриобретениеТоваров.Соглашение КАК Соглашение,
	|	ПриобретениеТоваров.Партнер КАК Партнер,
	|	ПриобретениеТоваров.Контрагент КАК Контрагент,
	|	ПриобретениеТоваров.Организация КАК Организация,
	|	ПриобретениеТоваров.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ПриобретениеТоваров.ВариантПриемкиТоваров В (ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных), ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных), ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных))
	|			ТОГДА ПриобретениеТоваров.Договор
	|		КОГДА ПриобретениеТоваров.ВариантПриемкиТоваров В (ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных), ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным), ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоНакладным))
	|			ТОГДА ПриобретениеТоваров.Соглашение
	|		КОГДА НЕ ПриобретениеТоваров.ПоступлениеПоЗаказам
	|				И ПриобретениеТоваров.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным)
	|			ТОГДА ПриобретениеТоваров.Ссылка
	|		КОГДА ПриобретениеТоваров.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
	|			ТОГДА ПриобретениеТоваров.Ссылка
	|		ИНАЧЕ ПриобретениеТоваров.ЗаказПоставщику
	|	КОНЕЦ КАК Распоряжение,
	|	ПриобретениеТоваров.Сделка КАК Сделка,
	|	ПриобретениеТоваров.Валюта КАК Валюта,
	|	&СкладПоступления КАК Склад,
	|	ЕСТЬNULL(Соглашения.ВидЦеныПоставщика, ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)) КАК ВидЦеныПоставщика,
	|	ПриобретениеТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПриобретениеТоваров.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПриобретениеТоваров.Подразделение КАК Подразделение,
	|	ПриобретениеТоваров.ЗакупкаПодДеятельность КАК ВидДеятельностиНДС,
	|	ПриобретениеТоваров.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕ ПриобретениеТоваров.Проведен КАК ЕстьОшибкиПроведен,
	|	ЛОЖЬ КАК ЕстьОшибкиСтатус
	|ПОМЕСТИТЬ ВТРаспоряжение
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК Соглашения
	|		ПО ПриобретениеТоваров.Соглашение = Соглашения.Ссылка
	|ГДЕ
	|	ПриобретениеТоваров.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКПоступлению.Склад КАК Склад,
	|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
	|	ТоварыКПоступлению.Характеристика КАК Характеристика,
	|	ТоварыКПоступлению.Назначение КАК Назначение,
	|	ТоварыКПоступлению.Серия КАК Серия,
	|	ТоварыКПоступлению.КОформлениюПоступленийПоРаспоряжениюОстаток КАК Количество,
	|	ТоварыКПоступлению.КОформлениюПоступленийПоРаспоряжениюОстаток КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(
	|			,
	|			ДокументПоступления = &ДокументОснование
	|				И ВЫБОР
	|					КОГДА &СкладУказан
	|						ТОГДА Склад = &СкладПоступления
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ТоварыКПоступлению
	|ГДЕ
	|	НЕ &ЗаполнятьПоНакладной
	|	И ТоварыКПоступлению.КОформлениюПоступленийПоРаспоряжениюОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыКПоступлению.ДокументПоступления,
	|	ТоварыКПоступлению.Склад,
	|	ТоварыКПоступлению.Номенклатура,
	|	ТоварыКПоступлению.Характеристика,
	|	ТоварыКПоступлению.Назначение,
	|	ТоварыКПоступлению.Серия,
	|	ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток,
	|	ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(
	|			,
	|			ДокументПоступления = &ДокументОснование
	|				И ВЫБОР
	|					КОГДА &СкладУказан
	|						ТОГДА Склад = &СкладПоступления
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ТоварыКПоступлению
	|ГДЕ
	|	&ЗаполнятьПоНакладной
	|	И ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиТоваров.ДокументПоступления КАК ДокументПоступления,
	|	УпаковкиТоваров.Склад КАК Склад,
	|	УпаковкиТоваров.Номенклатура КАК Номенклатура,
	|	УпаковкиТоваров.Характеристика КАК Характеристика,
	|	УпаковкиТоваров.Назначение КАК Назначение,
	|	УпаковкиТоваров.Серия КАК Серия,
	|	УпаковкиТоваров.Упаковка КАК Упаковка,
	|	&ТекстЗапросаКоэффициентУпаковки КАК КоэффициентУпаковки,
	|	СУММА(УпаковкиТоваров.Количество) КАК Количество,
	|	СУММА(УпаковкиТоваров.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВТУпаковкиТоваров
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
	|		ТоварыКПоступлению.Склад КАК Склад,
	|		ТоварыКПоступлению.Номенклатура КАК Номенклатура,
	|		ТоварыКПоступлению.Характеристика КАК Характеристика,
	|		ТоварыКПоступлению.Назначение КАК Назначение,
	|		ТоварыКПоступлению.Серия КАК Серия,
	|		ТоварыПриобретения.Упаковка КАК Упаковка,
	|		СУММА(ТоварыПриобретения.Количество) КАК Количество,
	|		СУММА(ТоварыПриобретения.КоличествоУпаковок) КАК КоличествоУпаковок
	|	ИЗ
	|		ВТТовары КАК ТоварыКПоступлению
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ТоварыПриобретения
	|			ПО ТоварыКПоступлению.ДокументПоступления = ТоварыПриобретения.Ссылка
	|				И ТоварыКПоступлению.Склад = ТоварыПриобретения.Склад
	|				И ТоварыКПоступлению.Номенклатура = ТоварыПриобретения.Номенклатура
	|				И ТоварыКПоступлению.Характеристика = ТоварыПриобретения.Характеристика
	|				И ТоварыКПоступлению.Назначение = ТоварыПриобретения.Назначение
	|				И (ВЫБОР
	|					КОГДА ТоварыПриобретения.СтатусУказанияСерий В (14, 18)
	|						ТОГДА ТоварыКПоступлению.Серия = ТоварыПриобретения.Серия
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыКПоступлению.ДокументПоступления,
	|		ТоварыКПоступлению.Склад,
	|		ТоварыКПоступлению.Номенклатура,
	|		ТоварыКПоступлению.Характеристика,
	|		ТоварыКПоступлению.Назначение,
	|		ТоварыКПоступлению.Серия,
	|		ТоварыПриобретения.Упаковка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыКПоступлению.ДокументПоступления,
	|		ТоварыКПоступлению.Склад,
	|		ТоварыКПоступлению.Номенклатура,
	|		ТоварыКПоступлению.Характеристика,
	|		ТоварыКПоступлению.Назначение,
	|		ТоварыКПоступлению.Серия,
	|		ТоварыПоступления.Упаковка,
	|		-СУММА(ТоварыПоступления.Количество),
	|		-СУММА(ТоварыПоступления.КоличествоУпаковок)
	|	ИЗ
	|		ВТТовары КАК ТоварыКПоступлению
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад КАК ПоступлениеНаСклад
	|			ПО ТоварыКПоступлению.ДокументПоступления = ПоступлениеНаСклад.Распоряжение
	|				И ТоварыКПоступлению.Склад = ПоступлениеНаСклад.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад.Товары КАК ТоварыПоступления
	|			ПО (ПоступлениеНаСклад.Ссылка = ТоварыПоступления.Ссылка)
	|				И ТоварыКПоступлению.Номенклатура = ТоварыПоступления.Номенклатура
	|				И ТоварыКПоступлению.Характеристика = ТоварыПоступления.Характеристика
	|				И ТоварыКПоступлению.Назначение = ТоварыПоступления.Назначение
	|				И (ВЫБОР
	|					КОГДА ТоварыПоступления.СтатусУказанияСерий В (14, 18)
	|						ТОГДА ТоварыКПоступлению.Серия = ТоварыПоступления.Серия
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|	ГДЕ
	|		ЕСТЬNULL(ПоступлениеНаСклад.Проведен, ЛОЖЬ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыКПоступлению.ДокументПоступления,
	|		ТоварыКПоступлению.Склад,
	|		ТоварыКПоступлению.Номенклатура,
	|		ТоварыКПоступлению.Характеристика,
	|		ТоварыКПоступлению.Назначение,
	|		ТоварыКПоступлению.Серия,
	|		ТоварыПоступления.Упаковка) КАК УпаковкиТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	УпаковкиТоваров.ДокументПоступления,
	|	УпаковкиТоваров.Склад,
	|	УпаковкиТоваров.Номенклатура,
	|	УпаковкиТоваров.Характеристика,
	|	УпаковкиТоваров.Назначение,
	|	УпаковкиТоваров.Серия,
	|	УпаковкиТоваров.Упаковка
	|
	|ИМЕЮЩИЕ
	|	СУММА(УпаковкиТоваров.Количество) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Склад,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКПоступлению.Склад КАК Склад,
	|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
	|	ТоварыКПоступлению.Характеристика КАК Характеристика,
	|	ТоварыКПоступлению.Назначение КАК Назначение,
	|	ТоварыКПоступлению.Серия КАК Серия,
	|	ТоварыКПоступлению.Упаковка КАК Упаковка,
	|	ТоварыКПоступлению.КоэффициентУпаковки КАК КоэффициентУпаковки,
	|	ТоварыКПоступлению.Количество КАК Количество,
	|	ТоварыКПоступлению.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТоварыПриобретения.Цена КАК Цена,
	|	ТоварыПриобретения.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ВТЦеныТоваров
	|ИЗ
	|	ВТУпаковкиТоваров КАК ТоварыКПоступлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ТоварыПриобретения
	|		ПО ТоварыКПоступлению.ДокументПоступления = ТоварыПриобретения.Ссылка
	|			И ТоварыКПоступлению.Склад = ТоварыПриобретения.Склад
	|			И ТоварыКПоступлению.Номенклатура = ТоварыПриобретения.Номенклатура
	|			И ТоварыКПоступлению.Характеристика = ТоварыПриобретения.Характеристика
	|			И ТоварыКПоступлению.Назначение = ТоварыПриобретения.Назначение
	|			И (ВЫБОР
	|				КОГДА ТоварыПриобретения.СтатусУказанияСерий В (14, 18)
	|					ТОГДА ТоварыКПоступлению.Серия = ТоварыПриобретения.Серия
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И ТоварыКПоступлению.Упаковка = ТоварыПриобретения.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Склад,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКПоступлению.Склад КАК Склад,
	|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
	|	ТоварыКПоступлению.Характеристика КАК Характеристика,
	|	ТоварыКПоступлению.Назначение КАК Назначение,
	|	ТоварыКПоступлению.Серия КАК Серия,
	|	ТоварыКПоступлению.Упаковка КАК Упаковка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыКПоступлению.Цена) КАК КоличествоЦен,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыКПоступлению.СтавкаНДС) КАК КоличествоСтавокНДС
	|ПОМЕСТИТЬ ВТЦеныТоваровГруппировка
	|ИЗ
	|	ВТЦеныТоваров КАК ТоварыКПоступлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКПоступлению.ДокументПоступления,
	|	ТоварыКПоступлению.Склад,
	|	ТоварыКПоступлению.Номенклатура,
	|	ТоварыКПоступлению.Характеристика,
	|	ТоварыКПоступлению.Назначение,
	|	ТоварыКПоступлению.Серия,
	|	ТоварыКПоступлению.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Склад,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжение.Ссылка КАК Ссылка,
	|	ТаблицаРаспоряжение.Соглашение КАК Соглашение,
	|	ТаблицаРаспоряжение.Партнер КАК Партнер,
	|	ТаблицаРаспоряжение.Контрагент КАК Контрагент,
	|	ТаблицаРаспоряжение.Организация КАК Организация,
	|	ТаблицаРаспоряжение.Договор КАК Договор,
	|	ТаблицаРаспоряжение.Распоряжение КАК Распоряжение,
	|	ТаблицаРаспоряжение.Сделка КАК Сделка,
	|	ТаблицаРаспоряжение.Валюта КАК Валюта,
	|	ТаблицаРаспоряжение.Склад КАК Склад,
	|	ТаблицаРаспоряжение.ВидЦеныПоставщика КАК ВидЦеныПоставщика,
	|	ТаблицаРаспоряжение.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ТаблицаРаспоряжение.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаРаспоряжение.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ТаблицаРаспоряжение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРаспоряжение.Подразделение КАК Подразделение,
	|	ТаблицаРаспоряжение.ЕстьОшибкиПроведен КАК ЕстьОшибкиПроведен,
	|	ТаблицаРаспоряжение.ЕстьОшибкиСтатус КАК ЕстьОшибкиСтатус
	|ИЗ
	|	ВТРаспоряжение КАК ТаблицаРаспоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДокументПоступления КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаТовары.Серия КАК Серия,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаТовары.Количество < 0
	|				ТОГДА -ТаблицаТовары.Количество
	|			ИНАЧЕ ТаблицаТовары.Количество
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаТовары.КоличествоУпаковок < 0
	|				ТОГДА -ТаблицаТовары.КоличествоУпаковок
	|			ИНАЧЕ ТаблицаТовары.КоличествоУпаковок
	|		КОНЕЦ) КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Перепоставка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Недопоставка)
	|	КОНЕЦ КАК ВидРасхождений
	|ИЗ
	|	ВТТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ДокументПоступления,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Перепоставка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Недопоставка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ДокументПоступления КАК ДокументПоступления,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.КоэффициентУпаковки КАК КоэффициентУпаковки,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Количество < 0
	|				ТОГДА -Товары.Количество
	|			ИНАЧЕ Товары.Количество
	|		КОНЕЦ) КАК Количество,
	|	СУММА(Товары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	Товары.Цена КАК Цена,
	|	Товары.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
	|		ТоварыКПоступлению.Склад КАК Склад,
	|		ТоварыКПоступлению.Номенклатура КАК Номенклатура,
	|		ТоварыКПоступлению.Характеристика КАК Характеристика,
	|		ТоварыКПоступлению.Назначение КАК Назначение,
	|		ТоварыКПоступлению.Серия КАК Серия,
	|		ТоварыКПоступлению.Упаковка КАК Упаковка,
	|		ТоварыКПоступлению.КоэффициентУпаковки КАК КоэффициентУпаковки,
	|		ТоварыКПоступлению.Количество КАК Количество,
	|		ТоварыКПоступлению.КоличествоУпаковок КАК КоличествоУпаковок,
	|		ВЫБОР
	|			КОГДА ЦеныТоваров.КоличествоЦен = 1
	|				ТОГДА ТоварыКПоступлению.Цена
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА ЦеныТоваров.КоличествоСтавокНДС = 1
	|				ТОГДА ТоварыКПоступлению.СтавкаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СтавкаНДС
	|	ИЗ
	|		ВТЦеныТоваров КАК ТоварыКПоступлению
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТЦеныТоваровГруппировка КАК ЦеныТоваров
	|			ПО ТоварыКПоступлению.ДокументПоступления = ЦеныТоваров.ДокументПоступления
	|				И ТоварыКПоступлению.Склад = ЦеныТоваров.Склад
	|				И ТоварыКПоступлению.Номенклатура = ЦеныТоваров.Номенклатура
	|				И ТоварыКПоступлению.Характеристика = ЦеныТоваров.Характеристика
	|				И ТоварыКПоступлению.Назначение = ЦеныТоваров.Назначение
	|				И ТоварыКПоступлению.Серия = ЦеныТоваров.Серия
	|				И ТоварыКПоступлению.Упаковка = ЦеныТоваров.Упаковка) КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.ДокументПоступления,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Упаковка,
	|	Товары.КоэффициентУпаковки,
	|	Товары.Цена,
	|	Товары.СтавкаНДС
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоэффициентУпаковки УБЫВ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаКоэффициентУпаковки",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
									"УпаковкиТоваров.Упаковка",
									"УпаковкиТоваров.Номенклатура"));
									
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьВидДеятельностиНДС()
	
	ПараметрыЗаполнения = Документы.СписаниеРасхожденийПоступлениеПриобретение.ПараметрыЗаполненияВидаДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ВидДеятельностиНДС, ПараметрыЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииЗаказаПоставщику(ДокументОснование, Склад = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка					КАК Ссылка,
	|	ЗаказПоставщику.Соглашение				КАК Соглашение,
	|	ЗаказПоставщику.Партнер					КАК Партнер,
	|	ЗаказПоставщику.Контрагент				КАК Контрагент,
	|	ЗаказПоставщику.Организация				КАК Организация,
	|	ВЫБОР 
	|		КОГДА ЗаказПоставщику.Склад.ЭтоГруппа
	|	ТОГДА 
	|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	ИНАЧЕ
	|		ЗаказПоставщику.Склад
	|	КОНЕЦ 									КАК Склад,
	|	ЗаказПоставщику.Договор					КАК Договор,
	|	ЗаказПоставщику.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ЗаказПоставщику.Подразделение			КАК Подразделение,
	|	ЗаказПоставщику.Статус					КАК Статус,
	|	НЕ ЗаказПоставщику.Проведен				КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщику.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.НеСогласован),
	|										ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Согласован))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ									КАК ЕстьОшибкиСтатус
	|ПОМЕСТИТЬ ВТРаспоряжение
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК Соглашения
	|		ПО ЗаказПоставщику.Соглашение = Соглашения.Ссылка
	|ГДЕ
	|	ЗаказПоставщику.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Договор
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток < 0
	|			Тогда Значение(Перечисление.ВидыРасхожденийПоступленийПриобретений.Перепоставка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Недопоставка)
	|	КОНЕЦ КАК ВидРасхождений,
	|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
	|	ТоварыКПоступлению.Характеристика КАК Характеристика,
	|	ТоварыКПоступлению.Назначение КАК Назначение,
	|	ТоварыКПоступлению.Серия КАК Серия,
	|	ВЫБОР 
	|		КОГДА ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток < 0
	|	ТОГДА
	|		-ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток
	|	ИНАЧЕ
	|		ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР 
	|		КОГДА ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток < 0
	|	ТОГДА
	|		-ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток
	|	ИНАЧЕ
	|		ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток
	|	КОНЕЦ КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВТРасхождения
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки( 
	|			,
	|			ДокументПоступления = &ДокументОснование
	|			И ВЫБОР
	|				КОГДА &СкладУказан
	|					ТОГДА Склад В (&Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	) КАК ТоварыКПоступлению
	|ГДЕ
	|	ТоварыКПоступлению.КОформлениюПоступленийПоНакладнымОстаток <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжение.Ссылка					КАК Ссылка,
	|	ТаблицаРаспоряжение.Соглашение				КАК Соглашение,
	|	ТаблицаРаспоряжение.Партнер					КАК Партнер,
	|	ТаблицаРаспоряжение.Контрагент				КАК Контрагент,
	|	&Склад										КАК Склад,
	|	ТаблицаРаспоряжение.Организация				КАК Организация,
	|	ТаблицаРаспоряжение.Договор					КАК Договор,
	|	ТаблицаРаспоряжение.Подразделение			КАК Подразделение,
	|	ТаблицаРаспоряжение.Статус					КАК СтатусДокумента,
	|	ТаблицаРаспоряжение.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ТаблицаРаспоряжение.ЕстьОшибкиПроведен		КАК ЕстьОшибкиПроведен,
	|	ТаблицаРаспоряжение.ЕстьОшибкиСтатус		КАК ЕстьОшибкиСтатус
	|ИЗ
	|	ВТРаспоряжение КАК ТаблицаРаспоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ
	|	ТаблицаРасхождения.ВидРасхождений			КАК ВидРасхождений,
	|	ТаблицаРасхождения.Номенклатура				КАК Номенклатура,
	|	ТаблицаРасхождения.Характеристика			КАК Характеристика,
	|	ТаблицаРасхождения.Назначение				КАК Назначение,
	|	ТаблицаРасхождения.Серия					КАК Серия,
	|	СУММА(ТаблицаРасхождения.Количество)		КАК Количество,
	|	СУММА(ТаблицаРасхождения.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ВТРасхождения КАК ТаблицаРасхождения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасхождения.ВидРасхождений,
	|	ТаблицаРасхождения.Номенклатура,
	|	ТаблицаРасхождения.Характеристика,
	|	ТаблицаРасхождения.Назначение,
	|	ТаблицаРасхождения.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаРасхождения.Номенклатура.Наименование";

	
	
	Запрос.УстановитьПараметр("ДокументОснование",	ДокументОснование);
	Запрос.УстановитьПараметр("Склад",				Склад);
	Запрос.УстановитьПараметр("СкладУказан",		ЗначениеЗаполнено(Склад));
	
	Распоряжение	= ДокументОснование;

	РезультатЗапроса	= Запрос.ВыполнитьПакет();
	Выборка				= РезультатЗапроса[2].Выбрать();
	ТЗРасхождения		= РезультатЗапроса[3].Выгрузить();
	
	Выборка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив;
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовПоставщикам.Подтвержден);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовПоставщикам.Закрыт);
	
	ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
	ПараметрыПроверки.Статус = Выборка.СтатусДокумента;
	ПараметрыПроверки.ЕстьОшибкиПроведен = Выборка.ЕстьОшибкиПроведен;
	ПараметрыПроверки.ЕстьОшибкиСтатус = Выборка.ЕстьОшибкиСтатус;
	ПараметрыПроверки.МассивДопустимыхСтатусов = МассивДопустимыхСтатусов;

	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(ДокументОснование, ПараметрыПроверки);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	ЗаполнитьРасхождения(ТЗРасхождения);
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииАктаПриемкиПослеПриобретения(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка                    КАК ДокументПоступления,
	|	&Заказ                                             КАК ЗаказПоставщику,
	|   &Склад											   КАК Склад,
	|	АктОРасхожденияхПослеПриемки.Ссылка                КАК АктОРасхождениях,
	|	ПриобретениеТоваровУслуг.Соглашение                КАК Соглашение,
	|	ПриобретениеТоваровУслуг.Организация               КАК Организация,
	|	ПриобретениеТоваровУслуг.Партнер                   КАК Партнер,
	|	ПриобретениеТоваровУслуг.Контрагент                КАК Контрагент,
	|	ПриобретениеТоваровУслуг.Договор                   КАК Договор,
	|	ПриобретениеТоваровУслуг.Подразделение             КАК Подразделение,
	|	НЕ АктОРасхожденияхПослеПриемки.Проведен           КАК ЕстьОшибкиПроведенАктОРасхождениях,
	|	АктОРасхожденияхПослеПриемки.СпособОтраженияРасхождений КАК СпособОтраженияРасхождений,
	|	АктОРасхожденияхПослеПриемки.Статус                КАК СтатусАктаОРасхождениях,
	|	НЕ АктОРасхожденияхПослеПриемки.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению), ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано)) КАК ЕстьОшибкиСтатусАкт,
	|	НЕ ПриобретениеТоваровУслуг.Проведен               КАК ЕстьОшибкиПроведенДокументПриобретения,
	|	ВЫБОР
	|		КОГДА ПриобретениеТоваровУслуг.ВариантПриемкиТоваров В (ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных),
	|														ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных),
	|														ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных))
	|		ТОГДА
	|			ПриобретениеТоваровУслуг.Договор
	|		КОГДА ПриобретениеТоваровУслуг.ВариантПриемкиТоваров В (ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных),
	|														ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным),
	|														ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоНакладным))
	|		ТОГДА
	|			ПриобретениеТоваровУслуг.Соглашение
	|		КОГДА НЕ ПриобретениеТоваровУслуг.ПоступлениеПоЗаказам
	|			И ПриобретениеТоваровУслуг.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным)
	|		ТОГДА
	|			ПриобретениеТоваровУслуг.Ссылка
	|		КОГДА ПриобретениеТоваровУслуг.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
	|		ТОГДА
	|			ПриобретениеТоваровУслуг.Ссылка
	|		ИНАЧЕ
	|			&Заказ
	|	КОНЕЦ КАК Распоряжение
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПриемки КАК АктОРасхожденияхПослеПриемки
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемки.Ссылка = &АктОРасхождениях
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемки.Номенклатура           КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемки.Характеристика         КАК Характеристика,
	|	АктОРасхожденияхПослеПриемки.Назначение             КАК Назначение,
	|	АктОРасхожденияхПослеПриемки.Серия                  КАК Серия,
	|	АктОРасхожденияхПослеПриемки.СтатусУказанияСерий    КАК СтатусУказанияСерий,
	|	АктОРасхожденияхПослеПриемки.Упаковка               КАК Упаковка,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемки.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Перепоставка)
	|		КОГДА АктОРасхожденияхПослеПриемки.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Недопоставка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.ПустаяСсылка)
	|	КОНЕЦ  КАК ВидРасхождений,
	|	СУММА(
	|			ВЫБОР
	|				КОГДА АктОРасхожденияхПослеПриемки.КоличествоПоДокументу - АктОРасхожденияхПослеПриемки.Количество < 0
	|					ТОГДА -(АктОРасхожденияхПослеПриемки.КоличествоПоДокументу - АктОРасхожденияхПослеПриемки.Количество)
	|				ИНАЧЕ
	|					АктОРасхожденияхПослеПриемки.КоличествоПоДокументу - АктОРасхожденияхПослеПриемки.Количество
	|			КОНЕЦ
	|		)                                              КАК Количество,
	|	СУММА(
	|			ВЫБОР
	|				КОГДА АктОРасхожденияхПослеПриемки.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемки.КоличествоУпаковок < 0
	|					ТОГДА -(АктОРасхожденияхПослеПриемки.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемки.КоличествоУпаковок)
	|				ИНАЧЕ
	|					АктОРасхожденияхПослеПриемки.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемки.КоличествоУпаковок
	|			КОНЕЦ
	|		)                                              КАК КоличествоУпаковок,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемки.Склад)	   КАК Склад
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемки
	|ГДЕ
	|	АктОРасхожденияхПослеПриемки.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемки.Действие В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы)
	|		)
	|	И АктОРасхожденияхПослеПриемки.ДокументОснование = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемки.ЗаказПоставщику = &Заказ
	|	И АктОРасхожденияхПослеПриемки.Склад = &Склад
	|	И АктОРасхожденияхПослеПриемки.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемки.КоличествоУпаковок <> 0
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	СтатусУказанияСерий,
	|	Упаковка,
	|	Действие
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура                                                                 КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика                                                               КАК Характеристика,
	|	АктОРасхожденияхПослеПриемкиСерии.Серия                                                                        КАК Серия,
	|	АктОРасхожденияхПослеПриемкиСерии.Назначение                                                                   КАК Назначение,
	|	СУММА(
	|		ВЫБОР
	|				КОГДА АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиСерии.Количество < 0
	|					ТОГДА -(АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиСерии.Количество)
	|				ИНАЧЕ
	|					АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиСерии.Количество
	|			КОНЕЦ
	|	) КАК Количество
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Серии КАК АктОРасхожденияхПослеПриемкиСерии
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиСерии.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемкиСерии.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку)
	|	И АктОРасхожденияхПослеПриемкиСерии.ДокументОснование = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика,
	|	АктОРасхожденияхПослеПриемкиСерии.Серия,
	|	АктОРасхожденияхПослеПриемкиСерии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения.ОснованиеАкта);
	Запрос.УстановитьПараметр("АктОРасхождениях",  ДанныеЗаполнения.АктОРасхождениях);
	Запрос.УстановитьПараметр("Заказ",  ДанныеЗаполнения.Заказ);
	Запрос.УстановитьПараметр("Склад",  ДанныеЗаполнения.Склад);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[0].Выбрать();
	
	ВыборкаШапка.Следующий();

	МассивДопустимыхСтатусов = Новый Массив;
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовПоставщикам.Подтвержден);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовПоставщикам.Закрыт);
	
	// По документу поступления

	ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
	ПараметрыПроверки.ЕстьОшибкиПроведен = ВыборкаШапка.ЕстьОшибкиПроведенДокументПриобретения;

	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
		ВыборкаШапка.ДокументПоступления,
		ПараметрыПроверки);
		
	// По акту о расхождениях

	ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
	ПараметрыПроверки.Статус = ВыборкаШапка.СтатусАктаОРасхождениях;
	ПараметрыПроверки.ЕстьОшибкиПроведен = ВыборкаШапка.ЕстьОшибкиПроведенАктОРасхождениях;
	ПараметрыПроверки.ЕстьОшибкиСтатус = ВыборкаШапка.ЕстьОшибкиСтатусАкт;
	ПараметрыПроверки.МассивДопустимыхСтатусов = МассивДопустимыхСтатусов;

	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
		ВыборкаШапка.АктОРасхождениях,
		ПараметрыПроверки);
		
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	Основание = ДанныеЗаполнения.ОснованиеАкта;
	
	ТаблицаТоваров = ПакетЗапросов[1].Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаТоваров Цикл

		Если Не ЗначениеЗаполнено(Склад) Тогда
			Склад = ТекСтрока.Склад;
		КонецЕсли;
		НоваяСтрока = Расхождения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
		
	КонецЦикла;
	
	Серии.Загрузить(ПакетЗапросов[2].Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииПриобретенияТоваров(Знач ДокументОснование, Знач СкладПоступления = Неопределено, Знач ХозяйственнаяОперацияПриемки = Неопределено)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаЗаполненияНаОсновании(Ложь);
	
	Запрос.УстановитьПараметр("ДокументОснование",		ДокументОснование);
	Запрос.УстановитьПараметр("СкладПоступления",		СкладПоступления);
	Запрос.УстановитьПараметр("СкладУказан",			ЗначениеЗаполнено(СкладПоступления));
	Запрос.УстановитьПараметр("ЗаполнятьПоНакладной",	Истина);
	
	РезультатЗапроса	= Запрос.ВыполнитьПакет();
	Выборка				= РезультатЗапроса[5].Выбрать();
	ТЗРасхождений		= РезультатЗапроса[6].Выгрузить();
	ТЗУпаковки			= РезультатЗапроса[7].Выгрузить();
	
	Выборка.Следующий();
	
	ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
	ПараметрыПроверки.ЕстьОшибкиПроведен = Выборка.ЕстьОшибкиПроведен;

	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
		ДокументОснование,
		ПараметрыПроверки);
	
	Распоряжение	= ДокументОснование;
	Склад			= СкладПоступления;
	
	ПарыОперацийРаздельнойЗакупки = ЗакупкиСервер.ПарыОперацийРаздельнойЗакупки(Истина);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ПарыОперацийРаздельнойЗакупки.Получить(ХозяйственнаяОперацияПриемки);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ?(Не ЗначениеЗаполнено(ХозяйственнаяОперацияПриемкиФактическоеПоступление),
															ХозяйственнаяОперацияПриемки,
															ХозяйственнаяОперацияПриемкиФактическоеПоступление);
	
	ХозяйственнаяОперация = ХозяйственнаяОперацияПриемкиФактическоеПоступление;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	ЗаполнитьРасхождения(ТЗРасхождений);

КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииДоговора(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Договор.Ссылка КАК Ссылка,
	|	Договор.Ссылка КАК Договор,
	|	Договор.Партнер КАК Партнер,
	|	Договор.Контрагент КАК Контрагент,
	|	Договор.Организация КАК Организация,
	|	Договор.Статус КАК СтатусДокумента,
	|	ВЫБОР
	|		КОГДА Договор.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	ВЫБОР
	|		КОГДА Договор.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОказаниеАгентскихУслуг)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоАгентскиеУслуги,
	|	Договор.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Договор.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТРаспоряжение
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК Договор
	|ГДЕ
	|	Договор.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстатки.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКПоступлениюОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыКПоступлениюОстатки.Характеристика КАК Характеристика,
	|	ТоварыКПоступлениюОстатки.Назначение КАК Назначение,
	|	ТоварыКПоступлениюОстатки.Серия КАК Серия,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток КАК Количество
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(, ДокументПоступления = &ДокументОснование) КАК ТоварыКПоступлениюОстатки
	|ГДЕ
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжение.Ссылка КАК Ссылка,
	|	ТаблицаРаспоряжение.Договор КАК Договор,
	|	ТаблицаРаспоряжение.Партнер КАК Партнер,
	|	ТаблицаРаспоряжение.Контрагент КАК Контрагент,
	|	ТаблицаРаспоряжение.Организация КАК Организация,
	|	ТаблицаРаспоряжение.СтатусДокумента КАК СтатусДокумента,
	|	ТаблицаРаспоряжение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРаспоряжение.Подразделение КАК Подразделение,
	|	ТаблицаРаспоряжение.ЭтоАгентскиеУслуги КАК ЭтоАгентскиеУслуги,
	|	ТаблицаРаспоряжение.ЕстьОшибкиСтатус КАК ЕстьОшибкиСтатус
	|ИЗ
	|	ВТРаспоряжение КАК ТаблицаРаспоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Перепоставка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Недопоставка)
	|	КОНЕЦ КАК ВидРасхождений,
	|	ТаблицаТовары.ДокументПоступления КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество < 0
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество < 0
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ВТТовары КАК ТаблицаТовары");
		
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка		= РезультатЗапроса[2].Выбрать();
	ТЗТовары	= РезультатЗапроса[3].Выгрузить();
	
	Выборка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыДоговоровКонтрагентов.Действует);

	ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
	ПараметрыПроверки.Статус = Выборка.СтатусДокумента;
	ПараметрыПроверки.ЕстьОшибкиПроведен = Ложь;
	ПараметрыПроверки.ЕстьОшибкиСтатус = Выборка.ЕстьОшибкиСтатус;
	ПараметрыПроверки.МассивДопустимыхСтатусов = МассивДопустимыхСтатусов;

	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
		ДокументОснование,
		ПараметрыПроверки);
		
	Распоряжение          = ДокументОснование;

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	ЗаполнитьРасхождения(ТЗТовары);
	
КонецПроцедуры

// Параметры:
// 	ТЗРасхождений - ТаблицаЗначений - 
Процедура ЗаполнитьРасхождения(ТЗРасхождений)
	
	Расхождения.Очистить();
	Для Каждого СтрокаРасхождений Из ТЗРасхождений Цикл
		
		СтрокаТЧ = Расхождения.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаРасхождений);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ВидыЗапасов

// Возвращает временные таблицы с данными документа.
// Используется для заполнения видов запасов.
// 
// Параметры:
//  ВидРасхождений - Неопределено, ПеречислениеСсылка.ВидыРасхожденийПоступленийПриобретений - Вид расхождений.
//  ДляТоваровУПартнеров - Булево - Отбор по аналитике учета номенклатуры по договору.
//  ТолькоИмпортныеТовары - Булево - Отбор по импортным товарам.
// 
// Возвращаемое значение:
//  МенеджерВременныхТаблиц - менеджер временных таблиц с данными документа.
Функция ВременныеТаблицыДанныхДокумента(ВидРасхождений = Неопределено, ДляТоваровУПартнеров = Ложь, ТолькоИмпортныеТовары = Ложь, ТолькоРаботы = Неопределено)
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Соглашение КАК Соглашение,
	|	&Договор КАК Договор,
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	&МестоХранения КАК МестоХранения,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Валюта КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЛОЖЬ КАК ЕстьСделкиВТабличнойЧасти,
	|	&ТипЗапасов КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	&ТаблицаТоваровАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	0 КАК КоличествоПоРНПТ,
	|	0 КАК Цена,
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ТаблицаТоваров.ВидРасхождений КАК ВидРасхождений
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	&Склад КАК Склад,
	|	ТаблицаТоваров.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.Цена КАК Цена,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ИСТИНА КАК ПодбиратьВидыЗапасов,
	|	&ВидЦены КАК ВидЦены,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	&Распоряжение КАК ДокументОприходования
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.ВидРасхождений = &ВидРасхождений
	|	И ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ВестиУчетПоГТД
	|	И &ОтборТипНоменклатурыТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|		ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.ВидРасхождений КАК ВидРасхождений
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	Аналитика.МестоХранения КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ЛОЖЬ КАК ВидыЗапасовУказаныВручную,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	&Распоряжение КАК ДокументОприходования
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидРасхождений = &ВидРасхождений
	|	И ВЫРАЗИТЬ(Аналитика.Номенклатура КАК Справочник.Номенклатура).ВестиУчетПоГТД
	|	И &ОтборТипНоменклатурыВидыЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &Проведен
	|			ТОГДА ТаблицаТоваров.ВидЗапасов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|	КОНЕЦ КАК ТекущийВидЗапасов,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара,
	|	&Организация КАК Организация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			И ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ПрослеживаемыйТовар
	|			ТОГДА
	|				&ТипЗапасовПрослеживаемыхРабот
	|			ИНАЧЕ
	|				&ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеОрганизации,
	|	НЕОПРЕДЕЛЕНО КАК ВладелецТовара,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка) КАК ВидЦены
	|ПОМЕСТИТЬ ИсходнаяТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ТаблицаТоваров.ВидЗапасов = ВидыЗапасов.Ссылка
	|ГДЕ
	|	(ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	ИЛИ ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		И ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ПрослеживаемыйТовар)
	|	И (ТаблицаТоваров.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|	ИЛИ ВидыЗапасов.ТипЗапасов <> &ТипЗапасов
	|	ИЛИ ВидыЗапасов.Организация <> &Организация
	|	ИЛИ &ПерезаполнитьВидыЗапасов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыКПоступлению.Регистратор КАК Регистратор,
	|	ТаблицаТоваров.ДокументОприходования КАК ДокументОприходования
	|ПОМЕСТИТЬ ВТРегистраторыТоварыКПоступлению
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ТаблицаТоваров.ДокументОприходования = ТоварыКПоступлению.ДокументПоступления
	|ГДЕ
	|	ВЫБОР
	|		КОГДА &СкладУказан
	|				И НЕ ТоварыКПоступлению.Номенклатура.ТипНоменклатуры В (&РаботыУслуги)
	|			ТОГДА ТоварыКПоступлению.Склад = &СкладПоступления
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	Если ВидРасхождений = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТоваров.ВидРасхождений = &ВидРасхождений", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаВидыЗапасов.ВидРасхождений = &ВидРасхождений", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("ВидРасхождений", ВидРасхождений);
	КонецЕсли;
	
	Если ДляТоваровУПартнеров Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ТаблицаТоваровАналитикаУчетаНоменклатуры",
									"ТаблицаТоваров.АналитикаУчетаНоменклатурыТоварыУПартнеров");
		Запрос.УстановитьПараметр("ТипЗапасов", ТипЗапасовПоХозОперации());
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ТаблицаТоваровАналитикаУчетаНоменклатуры",
									"ТаблицаТоваров.АналитикаУчетаНоменклатуры");
		Запрос.УстановитьПараметр("ТипЗапасов", Перечисления.ТипыЗапасов.ПустаяСсылка());
	КонецЕсли;
	
	Если ТолькоРаботы = Неопределено Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ОтборТипНоменклатурыТовары",
									"ИСТИНА");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ОтборТипНоменклатурыВидыЗапасов",
									"ИСТИНА");
	ИначеЕсли ТолькоРаботы Тогда
		
		ТекстУсловияТовары = "ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ОтборТипНоменклатурыТовары",
									ТекстУсловияТовары);
		
		ТекстУсловияВидыЗапасов = "ВЫРАЗИТЬ(ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ОтборТипНоменклатурыВидыЗапасов",
									ТекстУсловияВидыЗапасов);
	Иначе
		
		ТекстУсловияТовары = "ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ОтборТипНоменклатурыТовары",
									ТекстУсловияТовары);
		
		ТекстУсловияВидыЗапасов = "ВЫРАЗИТЬ(ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры) <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ОтборТипНоменклатурыВидыЗапасов",
									ТекстУсловияВидыЗапасов);
	КонецЕсли;
	
	Если Не ТолькоИмпортныеТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ВестиУчетПоГТД", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫРАЗИТЬ(Аналитика.Номенклатура КАК Справочник.Номенклатура).ВестиУчетПоГТД", "ИСТИНА");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТаблицаТоваров = ?(ДополнительныеСвойства.Свойство("ТаблицыЗаполненияВидовЗапасовПриОбмене")
							И ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене <> Неопределено
							И ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене.Свойство("Расхождения"),
						ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене.Расхождения,
						Расхождения);
	
	РеквизитыОснования = ПолучитьРеквизитыОснования();
	ХозяйственнаяОперация = РеквизитыОснования.ХозяйственнаяОперация;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки Тогда
		ТипЗапасов = Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке;
	Иначе
		ТипЗапасов = Перечисления.ТипыЗапасов.СобственныйТоварВПути;
	КонецЕсли;
	
	ТипЗапасовПрослеживаемыхРабот = Перечисления.ТипыЗапасов.Работа;
	
	РаботыУслуги = Новый Массив;
	РаботыУслуги.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	РаботыУслуги.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	
	Запрос.УстановитьПараметр("ТаблицаТоваров",         ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",     ВидыЗапасов);
	Запрос.УстановитьПараметр("Ссылка",                 Ссылка);
	Запрос.УстановитьПараметр("Дата",                   Дата);
	Запрос.УстановитьПараметр("Партнер",                Партнер);
	Запрос.УстановитьПараметр("Контрагент",             Контрагент);
	Запрос.УстановитьПараметр("Соглашение",             Соглашение);
	Запрос.УстановитьПараметр("Договор",                Договор);
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("Склад",                  Склад);
	Запрос.УстановитьПараметр("МестоХранения",          Склад);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Валюта",                 Справочники.Валюты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидЦены",				Неопределено);
	Запрос.УстановитьПараметр("Проведен",				Проведен);
	Запрос.УстановитьПараметр("ТипЗапасов",				ТипЗапасов);
	Запрос.УстановитьПараметр("ТипЗапасовПрослеживаемыхРабот", ТипЗапасовПрослеживаемыхРабот);
	Запрос.УстановитьПараметр("СкладУказан",			ЗначениеЗаполнено(Склад));
	Запрос.УстановитьПараметр("СкладПоступления",		Склад);
	Запрос.УстановитьПараметр("РаботыУслуги",			РаботыУслуги);
	Запрос.УстановитьПараметр("Распоряжение",			?(ЗначениеЗаполнено(Распоряжение), 
															Распоряжение, 
															?(ЗначениеЗаполнено(Основание), Основание, Неопределено)));
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект, Запрос);
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Процедура ЗаполнитьВидыЗапасов(Отказ)
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц		= ВременныеТаблицыДанныхДокумента(Неопределено, Истина, Ложь);
	ПерезаполнитьВидыЗапасов	= ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов");
	
	ЗапасыСервер.ЗаполнитьВидыЗапасовПоУмолчанию(МенеджерВременныхТаблиц, Расхождения);

	ВидыЗапасовПерезаполнены = Ложь;
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ЗапасыСервер.ПроверитьИзменениеТоваровПоКоличествуИСумме(МенеджерВременныхТаблиц) Тогда
		
		ДополнительныеСвойства.Вставить("КонтролироватьНомераГТД", Истина);
		
		ВидРасхожденийНедопоставка = Перечисления.ВидыРасхожденийПоступленийПриобретений.Недопоставка;
		МенеджерВременныхТаблицНедостачи = ВременныеТаблицыДанныхДокумента(ВидРасхожденийНедопоставка, Ложь, Истина, Ложь);
		
		ВидыЗапасов.Очистить();
		
		ВидыЗапасовПромежуточная = ВидыЗапасов.Выгрузить();
		
		Если Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ХозяйственнаяОперация")= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки Тогда 
			ВидыЗапасовПромежуточнаяНедостачи = ВидыЗапасов.Выгрузить(Новый Массив);
			
			ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов(Истина);
			ПараметрыЗаполнения.БезОтбораПоНомерамГТД = Ложь;
			ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
			
			ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																	МенеджерВременныхТаблицНедостачи,
																	Отказ,
																	ПараметрыЗаполнения);
			
			ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, ВидРасхождений",
								"Количество, КоличествоПоРНПТ");
			
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВидыЗапасов, ВидыЗапасовПромежуточная);
			ВидыЗапасов.Очистить();
			
		КонецЕсли;
		
		// Работы.
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов(Ложь);
		ПараметрыЗаполнения.БезОтбораПоНомерамГТД = Ложь;
		ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Ложь;
		
		МенеджерВременныхТаблицНедостачи = ВременныеТаблицыДанныхДокумента(ВидРасхожденийНедопоставка, Ложь, Истина, Истина);
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																МенеджерВременныхТаблицНедостачи,
																Отказ,
																ПараметрыЗаполнения);
		
		ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, ВидРасхождений",
							"Количество, КоличествоПоРНПТ");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВидыЗапасовПромежуточная, ВидыЗапасов);
		
	КонецЕсли;
КонецПроцедуры

Функция ПараметрыЗаполненияВидовЗапасов(ПоТоварам)
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	
	ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
	ПараметрыЗаполнения.ТаблицаРеквизитовВидовЗапасовПоУмолчанию = ТаблицаРеквизитовВидовЗапасовПоУмолчанию();
	ПараметрыЗаполнения.ИмяТаблицыОстатков = "СписаниеРасхожденийПоложительныйОстаток";
	ПараметрыЗаполнения.БезОтбораПоНомерамГТД = Истина;
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Очистить();
	
	Если ПоТоварам Тогда
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	Иначе
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Работа);
	КонецЕсли;
	
	ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация = Организация;
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ВидЦены = Справочники.ВидыЦенПоставщиков.ПустаяСсылка();
	
	Возврат ПараметрыЗаполнения;
КонецФункции

Функция ТаблицаРеквизитовВидовЗапасовПоУмолчанию()
	
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию = Расхождения.Выгрузить(, "НомерСтроки, АналитикаУчетаНоменклатуры"); // ТаблицаЗначений
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"ВладелецТовара", Новый ОписаниеТипов("СправочникСсылка.Партнеры"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"Договор", Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"ТипЗапасов", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗапасов"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"ВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"НомерГТД", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(Партнер, "ВладелецТовара");
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(Договор, "Договор");
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(Организация, "Организация");
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(ТипЗапасовПоХозОперации(), "ТипЗапасов");
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(Контрагент, "Контрагент");
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Товары.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТТовары КАК Товары
	|ГДЕ
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Товары.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар";
	
	Запрос.УстановитьПараметр("Товары", ТаблицаРеквизитовВидовЗапасовПоУмолчанию);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ПараметрыОтбора = Новый Структура("НомерСтроки");
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Выборка);
		НайденныеСтроки = ТаблицаРеквизитовВидовЗапасовПоУмолчанию.НайтиСтроки(ПараметрыОтбора);
		Для Каждого Строка Из НайденныеСтроки Цикл
			Строка.ТипЗапасов = Перечисления.ТипыЗапасов.Работа;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаРеквизитовВидовЗапасовПоУмолчанию;
КонецФункции

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
	ИменаРеквизитов = "Организация, Дата, Партнер, Склад, Договор, Контрагент";
	
	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
КонецФункции

// Заполняет аналитики учета номенклатуры в табличных частях документа, хранящих информацию о товарах.
// Если параметр не передан, тогда будет выполнено заполнение данных в табличных частях документа.
//
// Параметры:
//	ТаблицыДокумента - см. Документы.СписаниеРасхожденийПоступлениеПриобретение.КоллекцияТабличныхЧастейТоваров.
//
Процедура ЗаполнитьАналитикиУчетаНоменклатурыВТабличныхЧастяхТоваров(ТаблицыДокумента = Неопределено)
	
	Если ТаблицыДокумента = Неопределено Тогда
		ТаблицыДокумента = Документы.СписаниеРасхожденийПоступлениеПриобретение.КоллекцияТабличныхЧастейТоваров();
		
		ЗаполнитьЗначенияСвойств(ТаблицыДокумента, ЭтотОбъект);
	КонецЕсли;
	
	ТаблицаРасхождения = ТаблицыДокумента.Расхождения;
	
	РеквизитыОснования = ПолучитьРеквизитыОснования();
	
	ОсновнаяХозОперация = ЗакупкиСервер.ОсновнаяХозяйственнаяОперацияРаздельнойЗакупки(РеквизитыОснования.ХозяйственнаяОперация);
	МестаУчетаСклад = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ОсновнаяХозОперация, Склад,
																		Подразделение,
																		Партнер,
																		Договор);

	ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();

	ИменаПолей.АналитикаУчетаНоменклатуры = "АналитикаУчетаНоменклатуры";

	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ТаблицаРасхождения, МестаУчетаСклад, ИменаПолей);
	
	МестаУчетаДоговор = Новый Структура("Произвольный", Договор);
		
	ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
	ИменаПолей.АналитикаУчетаНоменклатуры = "АналитикаУчетаНоменклатурыТоварыУПартнеров";
		
	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ТаблицаРасхождения, МестаУчетаДоговор, ИменаПолей);

КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПолучитьРеквизитыОснования()
	
	Если ЗначениеЗаполнено(Основание) Тогда
		Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Основание, "ХозяйственнаяОперация");
	Иначе
		Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, "ХозяйственнаяОперация");
	КонецЕсли;
		
КонецФункции

Функция ТипЗапасовПоХозОперации()
	РеквизитыОснования = ПолучитьРеквизитыОснования();
	ХозяйственнаяОперация = РеквизитыОснования.ХозяйственнаяОперация;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути
		
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути Тогда
		
		Возврат Перечисления.ТипыЗапасов.СобственныйТоварВПути;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка 
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки
		
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки Тогда
		
		Возврат Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке;
		
	Иначе
		Возврат Перечисления.ТипыЗапасов.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Процедура ПроверитьСоздатьАналитикиУчетаНоменклатурыБезСерий()
	Перепоставки = Расхождения.НайтиСтроки(Новый Структура("ВидРасхождений", Перечисления.ВидыРасхожденийПоступленийПриобретений.Перепоставка));
	ТаблицаПерепоставок = Расхождения.Выгрузить(Перепоставки);
	ТаблицаПерепоставок.Колонки.Добавить("МестоХранения", Новый ОписаниеТипов("СправочникСсылка.Склады, СправочникСсылка.ДоговорыКонтрагентов"));
	Для Каждого Строка ИЗ ТаблицаПерепоставок Цикл
		Строка.МестоХранения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.АналитикаУчетаНоменклатурыТоварыУПартнеров, "МестоХранения");
		Строка.Назначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.АналитикаУчетаНоменклатурыТоварыУПартнеров, "Назначение");
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПерепоставок.Номенклатура КАК Номенклатура,
	|	ТаблицаПерепоставок.Характеристика КАК Характеристика,
	|	ТаблицаПерепоставок.МестоХранения КАК МестоХранения,
	|	ТаблицаПерепоставок.Назначение КАК Назначение
	|ПОМЕСТИТЬ ВТ_ТаблицаПерепоставок
	|ИЗ
	|	&ТаблицаПерепоставок КАК ТаблицаПерепоставок
	|;
	|	ВЫБРАТЬ
	|		ТаблицаПерепоставок.Номенклатура КАК Номенклатура,
	|		ТаблицаПерепоставок.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТаблицаПерепоставок.МестоХранения КАК МестоХранения,
	|		ТаблицаПерепоставок.Назначение КАК Назначение
	|	ИЗ
	|		ВТ_ТаблицаПерепоставок КАК ТаблицаПерепоставок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыБезСерии
	|			ПО АналитикаУчетаНоменклатурыБезСерии.Номенклатура = ТаблицаПерепоставок.Номенклатура
	|			И АналитикаУчетаНоменклатурыБезСерии.Характеристика = ТаблицаПерепоставок.Характеристика 
	|			И АналитикаУчетаНоменклатурыБезСерии.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И АналитикаУчетаНоменклатурыБезСерии.Назначение = ТаблицаПерепоставок.Назначение
	|			И АналитикаУчетаНоменклатурыБезСерии.МестоХранения = ТаблицаПерепоставок.МестоХранения
	|	ГДЕ
	|		АналитикаУчетаНоменклатурыБезСерии.КлючАналитики Есть NULL";
	
	Запрос.УстановитьПараметр("ТаблицаПерепоставок", ТаблицаПерепоставок);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
