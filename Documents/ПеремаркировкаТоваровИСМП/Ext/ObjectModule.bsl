#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Товары.Очистить();
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если ТребуетсяИндивидуализацияКИЗ
		И ВидПродукции <> Перечисления.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха Тогда
		ТребуетсяИндивидуализацияКИЗ = Ложь;
	КонецЕсли;
	
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("ЭтоНовый") Или Не ДополнительныеСвойства.ЭтоНовый Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Документ", Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус
		|ИЗ
		|	РегистрСведений.СтатусыДокументовИСМП КАК Статусы
		|ГДЕ
		|	Статусы.Документ = &Документ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Статус = Перечисления.СтатусыОбработкиПеремаркировкиТоваровИСМП.Черновик Тогда
				ДополнительныеСвойства.Вставить("ТребуетсяПерезаписьСтатусаПоУмолчанию", Истина);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ИнтеграцияИСМП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
	НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
	НепроверяемыеРеквизиты.Добавить("Товары.КодМаркировки");
	
	НепроверяемыеРеквизиты.Добавить("Товары.НоваяХарактеристика");
	НепроверяемыеРеквизиты.Добавить("Товары.НовыйКодМаркировки");
	НепроверяемыеРеквизиты.Добавить("Товары.КодТНВЭД");
	
	ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""Товары""'");
	
	ТаблицаТовары = Товары.Выгрузить();
	ТаблицаТовары.Колонки.Добавить("ХарактеристикиИспользуются",      Новый ОписаниеТипов("Булево"));
	ТаблицаТовары.Колонки.Добавить("НоваяХарактеристикаИспользуется", Новый ОписаниеТипов("Булево"));

	ИнтеграцияИСПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(Неопределено, ТаблицаТовары);
	
	Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
		НомерСтроки = СтрокаТовары.НомерСтроки;
		
		Если СтрокаТовары.ПричинаПеремаркировки = ПредопределенноеЗначение(
			"Перечисление.ПричиныПеремаркировкиТоваровИСМП.ОшибкиОписанияТовара") Тогда
			
			Если Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
				ТекстОшибки = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Номенклатура (старая)'"), НомерСтроки);
				
				ОбщегоНазначения.СообщитьПользователю(
					ТекстОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"Товары", НомерСтроки, "Номенклатура"),,
					Отказ);
			КонецЕсли;
				
			Если Не ЗначениеЗаполнено(СтрокаТовары.КодМаркировки) Тогда
				ТекстОшибки = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Код маркировки (старый)'"), НомерСтроки);
				
				ОбщегоНазначения.СообщитьПользователю(
					ТекстОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"Товары", НомерСтроки, "КодМаркировки"),,
					Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрокаТовары.ХарактеристикиИспользуются
			И Не ЗначениеЗаполнено(СтрокаТовары.Характеристика) Тогда
			ТекстОшибки = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Характеристика (старая)'"), НомерСтроки);
			
			ОбщегоНазначения.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", НомерСтроки, "Характеристика"),,
				Отказ);
		КонецЕсли;
		
		Если СтрокаТовары.НоваяХарактеристикаИспользуется
			И Не ЗначениеЗаполнено(СтрокаТовары.НоваяХарактеристика) Тогда
			ТекстОшибки = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Характеристика (новая)'"), НомерСтроки);
			
			ОбщегоНазначения.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", НомерСтроки, "НоваяХарактеристика"),,
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
	ИнтеграцияИСМППереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование   = Неопределено;
	ИдентификаторЗаявки = Неопределено;
	Товары.Очистить();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеИСМП.ДанныеЗаполненияПеремаркировкиТоваровИСМП(Организация);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеИСМП.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли