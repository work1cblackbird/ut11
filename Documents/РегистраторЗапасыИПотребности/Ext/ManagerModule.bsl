
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Соотвествие со списком реквизитов, по которым определяется уникальность ключа
// 
// Возвращаемое значение:
//   Соответствие - ключ - имя реквизита 
//
Функция КлючевыеРеквизиты() Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить("Распоряжение");
	
	Возврат Результат;
	
КонецФункции


// Ищет документ регистрации по распоряжению
//
// Параметры:
//  Распоряжение - СправочникСсылка.СоглашенияСПоставщиками, СправочникСсылка.ДоговорыКонтрагентов -
// 
// Возвращаемое значение:
//  ДокументСсылка.РегистраторЗапасыИПотребности - ссылка на документ.
//
Функция РегистраторПоРаспоряжению(Распоряжение) Экспорт
	
	Если ТипЗнч(Распоряжение) <> Тип("СправочникСсылка.СоглашенияСПоставщиками")
			И ТипЗнч(Распоряжение) <> Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				Возврат Распоряжение;
	КонецЕсли;
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка КАК Документ
	|ИЗ
	|	Документ.РегистраторЗапасыИПотребности КАК Таблица
	|ГДЕ
	|	Таблица.Распоряжение = &Распоряжение
	|УПОРЯДОЧИТЬ ПО
	|	Документ";
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Результат = Выборка.Документ;
		
	Иначе
		
		ТекстИсключения = НСтр("ru = 'Не найден документ-регистратор движения графика движения товаров по распоряжению %Распоряжение%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Распоряжение%", Распоряжение);
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Ищет документ регистрации по распоряжению
//
// Параметры:
//  Распоряжения - Массив Из СправочникСсылка.СоглашенияСПоставщиками, СправочникСсылка.ДоговорыКонтрагентов -
// 
// Возвращаемое значение:
//  Соответствие Из ДокументСсылка.РегистраторЗапасыИПотребности - ссылка на документ.
//
Функция РегистраторыПоРаспоряжениям(Распоряжения) Экспорт
	
	Результат = Новый Соответствие;
	Для Каждого Распоряжение Из Распоряжения Цикл
		Результат.Вставить(Распоряжение, Распоряжение);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Распоряжения", Распоряжения);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МИНИМУМ(Таблица.Ссылка) КАК Документ,
		|	Таблица.Распоряжение КАК Распоряжение
		|ИЗ
		|	Документ.РегистраторЗапасыИПотребности КАК Таблица
		|ГДЕ
		|	Таблица.Распоряжение В(&Распоряжения)
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Распоряжение";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(Выборка.Распоряжение, Выборка.Документ);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Распоряжение.Партнер)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецЕсли
