#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура")Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ИмпортПродукцииСАТУРН") Тогда
		
		ЗаполнитьПоИмпортуПродукцииСАТУРН(ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнтеграцияСАТУРНПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Партия");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.НомерПартии");
	
	ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""Товары""'");
	
	Для Каждого СтрокаТовары Из Товары Цикл
		Если Не ЗначениеЗаполнено(СтрокаТовары.Партия)
			И (СтрокаТовары.КоличествоУпаковок < 0
			Или Не ЗначениеЗаполнено(СтрокаТовары.НомерПартии)) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Партия'"), СтрокаТовары.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", СтрокаТовары.НомерСтроки, "Партия"),,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияСАТУРНПереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Для Каждого СтрокаТовары Из Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТовары.НомерПартии)
			И СтрокаТовары.КоличествоУпаковок < 0 Тогда
			СтрокаТовары.НомерПартии          = "";
			СтрокаТовары.ТорговоеНаименование = "";
			СтрокаТовары.АртикулПроизводителя = "";
			СтрокаТовары.ДатаПроизводства     = Дата(1, 1, 1);
			СтрокаТовары.СрокГодности         = Дата(1, 1, 1);
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияСАТУРН.ЗаписатьСоответствиеНоменклатуры(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ИнтеграцияСАТУРН.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Идентификатор = Неопределено;

	Для Каждого СтрокаТаблицы Из Товары Цикл
		СтрокаТаблицы.НомерПартии  = "";
		СтрокаТаблицы.КоличествоОстатокСАТУРН = 0;
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.АктИнвентаризацииСАТУРН.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиПартийСАТУРН.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	РегистрыСведений.МестаХраненияПартийСАТУРН.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияИСПереопределяемый.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеСАТУРН.ДанныеЗаполненияАктИнвентаризацииСАТУРН(ОрганизацияСАТУРН);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеСАТУРН.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоИмпортуПродукцииСАТУРН(ДанныеЗаполнения)
	
	ДанныеШапки = ВыборкаДанныхШапкиИмпортПродукции(ДанныеЗаполнения);
	
	Если ДанныеШапки.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеШапки);
		
	КонецЕсли;
	
	ДанныеЗаполненияТЧ = ВыборкаДанныхИмпортаПродукции(ДанныеЗаполнения);
	
	Пока ДанныеЗаполненияТЧ.Следующий() Цикл
		
		СтрокаТЧ = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, ДанныеЗаполненияТЧ);
		
		СтрокаТЧ.ПричинаРасхождения = НСтр("ru = 'Списание импортной партии'");
		
		НоваяСтрокаТЧ = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, ДанныеЗаполненияТЧ,, "Партия");
		
		НоваяСтрокаТЧ.КоличествоУпаковок = -СтрокаТЧ.КоличествоУпаковок;
		НоваяСтрокаТЧ.ПричинаРасхождения = НСтр("ru = 'Расформирование импортной партии'");
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВыборкаДанныхШапкиИмпортПродукции(МассивПлановПрименения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивПлановПрименения);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИмпортПродукцииСАТУРН.ОрганизацияСАТУРН КАК ОрганизацияСАТУРН,
	|	ИмпортПродукцииСАТУРН.МестоХранения     КАК МестоХранения,
	|	ИмпортПродукцииСАТУРН.ДатаПолучения     КАК ДатаРегистрации,
	|	ИмпортПродукцииСАТУРН.Ссылка            КАК ДокументОснование
	|ИЗ
	|	Документ.ИмпортПродукцииСАТУРН КАК ИмпортПродукцииСАТУРН
	|ГДЕ
	|	ИмпортПродукцииСАТУРН.Ссылка В (&Ссылка)";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ВыборкаДанныхИмпортаПродукции(МассивПлановПрименения)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивПлановПрименения);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Товары.Номенклатура             КАК Номенклатура,
		|	Товары.Характеристика           КАК Характеристика,
		|	Товары.Серия                    КАК Серия,
		|	Товары.ПАТ                      КАК ПАТ,
		|	Товары.ТипИзмеряемойВеличиныСАТУРН КАК ТипИзмеряемойВеличиныСАТУРН,
		|	Товары.Количество               КАК Количество,
		|	-Товары.КоличествоУпаковок      КАК КоличествоУпаковок,
		|	Товары.Упаковка                 КАК Упаковка,
		|	Товары.Партия                   КАК Партия
		|ИЗ
		|	Документ.ИмпортПродукцииСАТУРН.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка В (&Ссылка)";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
