
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	#Область СтандартныеМеханизмы
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	#КонецОбласти

	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура СоздатьВводОстатковНаБанковскихСчетах(Команда)

	СоздатьДокумент(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковНаБанковскихСчетах"));

КонецПроцедуры

&НаКлиенте
Процедура СоздатьВводОстатковВКассах(Команда)

	СоздатьДокумент(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковВКассах"));

КонецПроцедуры

&НаКлиенте
Процедура СоздатьВводОстатковВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах(Команда)

	СоздатьДокумент(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах"));

КонецПроцедуры

&НаКлиенте
Процедура СоздатьВводОстатковВАвтономныхКассахККМПоРозничнойВыручке(Команда)

	СоздатьДокумент(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковВАвтономныхКассахККМПоРозничнойВыручке"));

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокумент(ХозяйственнаяОперация)
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	
	ПараметрыФормы = Новый Структура("Основание", ДанныеЗаполнения);
	ОткрытьФорму("Документ.ВводОстатковДенежныхСредств.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры

#КонецОбласти
