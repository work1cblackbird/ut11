#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияПодарочныхСертификатов") Тогда
		
		ЗаполнитьПоРеализацииПодарочныхСертификатов(ДанныеЗаполнения, Неопределено);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ЧекККМ") Тогда
		
		ЗаполнитьПоРеализацииПодарочныхСертификатов(ДанныеЗаполнения.ЧекККМ, ДанныеЗаполнения);
		ЗаполнитьДокументПоКассеККМ(КассаККМ);
		
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	ВзаиморасчетыСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Контрагент = Справочники.Контрагенты.РозничныйПокупатель;
	КонецЕсли;
	
	ВзаиморасчетыСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);
	
	Если Статус = Перечисления.СтатусыЧековККМ.Пробит Тогда
		
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			
			ЗаполнитьОбъектРасчетов();
			
		ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			
			Отказ = Истина;
			
			ТекстОшибки = НСтр("ru='Чек на возврат подарочных сертификатов пробит. Отмена проведения невозможна.'");
			
			ОбщегоНазначения.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект);
			
			Возврат;
			
		КонецЕсли;
		
	Иначе
		
		Для Каждого СтрокаТЧ Из ПодарочныеСертификаты Цикл
			СтрокаТЧ.ОбъектРасчетов = Неопределено;
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "ПодарочныеСертификаты,ОплатаПлатежнымиКартами");
		
	СуммаДокумента = ПодарочныеСертификаты.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВызватьИсключение НСтр("ru = 'Документ ""Возврат подарочных сертификатов"" вводится только на основании документа ""Реализация подарочных сертификатов"".'");
	
	ВзаиморасчетыСервер.ПриКопировании(ЭтотОбъект);
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, "ПодарочныеСертификаты,ОплатаПлатежнымиКартами");
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПодарочныеСертификатыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	РозничныеПродажи.ПроверитьЗаполнениеОплатыПлатежнымиКартами(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
	ТаблицаИзменений = УчетНДСУП.НоваяТаблицаИзмененийРасчетов();
	СтрокаИзменений = ТаблицаИзменений.Добавить();
	СтрокаИзменений.Документ = Ссылка;
	СтрокаИзменений.Период = Дата;
	УчетНДСУП.ОтразитьВУчетеНДСИзменениеРасчетовСКлиентами(ТаблицаИзменений);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

// Процедура заполнения документа на основании расходного кассового ордера.
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств - Заявка на платеж
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоРеализацииПодарочныхСертификатов(Знач ДокументОснование, ДанныеЗаполнения = Неопределено)
	
	ВозвращаемыеПодарочныеСертификаты = Неопределено;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ПодарочныеСертификаты") Тогда
			ВозвращаемыеПодарочныеСертификаты = ПолучитьИзВременногоХранилища(ДанныеЗаполнения.ПодарочныеСертификаты);
		КонецЕсли;
	КонецЕсли;

	ТекстыЗапросов = Новый Массив;
	Запрос = Новый Запрос;
	
	// Текст запроса для заполнения шапки документа.
	ТекстЗапроса = "ВЫБРАТЬ
			|	РеализацияПодарочныхСертификатов.Валюта КАК Валюта,
			|	РеализацияПодарочныхСертификатов.Ссылка КАК ЧекККМ,
			|	РеализацияПодарочныхСертификатов.Организация КАК Организация,
			|	РеализацияПодарочныхСертификатов.КассаККМ КАК КассаККМ,
			|	РеализацияПодарочныхСертификатов.КассоваяСмена КАК КассоваяСмена,
			|	РеализацияПодарочныхСертификатов.Статус КАК Статус,
			|	РеализацияПодарочныхСертификатов.Проведен КАК Проведен
			|ИЗ
			|	Документ.РеализацияПодарочныхСертификатов КАК РеализацияПодарочныхСертификатов
			|ГДЕ
			|	РеализацияПодарочныхСертификатов.Ссылка = &Ссылка";
	ТекстыЗапросов.Добавить(ТекстЗапроса);

	// Текст запроса для заполнения табличной части Оплата платежными картами
	// без отбора по виду оплаты
	ТекстыЗапросов.Добавить(Документы.РеализацияПодарочныхСертификатов.ТекстЗапросаДляПолученияНеотмененныхОплатПоЧекуККМ(Ложь));
	
	// Текст запроса для заполнения табличной части
	Если ВозвращаемыеПодарочныеСертификаты = Неопределено Тогда
		ТекстЗапроса = "ВЫБРАТЬ
               |	ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
               |	СУММА(ПодарочныеСертификаты.Количество) КАК Количество,
               |	СУММА(ПодарочныеСертификаты.Сумма) КАК Сумма
               |ИЗ
               |	(ВЫБРАТЬ
               |		ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
               |		1 КАК Количество,
               |		ПодарочныеСертификаты.Сумма КАК Сумма
               |	ИЗ
               |		Документ.РеализацияПодарочныхСертификатов.ПодарочныеСертификаты КАК ПодарочныеСертификаты
               |	ГДЕ
               |		ПодарочныеСертификаты.Ссылка = &Ссылка
               |	
               |	ОБЪЕДИНИТЬ ВСЕ
               |	
               |	ВЫБРАТЬ
               |		ПодарочныеСертификаты.ПодарочныйСертификат,
               |		-1,
               |		-ПодарочныеСертификаты.Сумма
               |	ИЗ
               |		Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК ПодарочныеСертификаты
               |	ГДЕ
               |		ПодарочныеСертификаты.Ссылка.РеализацияПодарочныхСертификатов = &Ссылка
               |		И ПодарочныеСертификаты.Ссылка.Проведен
               |		И ПодарочныеСертификаты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)) КАК ПодарочныеСертификаты
               |
               |СГРУППИРОВАТЬ ПО
               |	ПодарочныеСертификаты.ПодарочныйСертификат
               |
               |ИМЕЮЩИЕ
               |	СУММА(ПодарочныеСертификаты.Количество) > 0
               |
               |УПОРЯДОЧИТЬ ПО
               |	ПодарочныйСертификат";
		ТекстыЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;

	МассивВидовОплат = Новый Массив;
	
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, Символы.ПС+";"+Символы.ПС);
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("ВидыОплат", МассивВидовОплат);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[0].Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка, ,"Статус, Проведен");
	
	ТекстОшибки = "";
	Если Не Выборка.Проведен Тогда
		ТекстОшибки = НСтр("ru='Документ ""Реализация подарочных сертификатов"" не проведен. Ввод на основании невозможен.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Если Выборка.Статус <> Перечисления.СтатусыЧековККМ.Пробит Тогда
		ТекстОшибки = НСтр("ru='Чек ""Реализация подарочных сертификатов"" не пробит. Ввод на основании невозможен.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	КассаККМПоУмолчанию = Справочники.КассыККМ.КассаККМФискальныйРегистраторПоОрганизацииДляРМКПоУмолчанию(Выборка.Организация, Выборка.КассаККМ);
	Если Не ЗначениеЗаполнено(КассаККМПоУмолчанию) Тогда
		ТекстСообщения = НСтр("ru = 'Для текущего рабочего места не настроена касса ККМ по организации: %Организация%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Выборка.Организация);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	КассаККМ = КассаККМПоУмолчанию;
	СтруктураСостояниеКассовойСмены = РозничныеПродажи.ПолучитьСостояниеКассовойСмены(КассаККМ);
	КассоваяСмена = СтруктураСостояниеКассовойСмены.КассоваяСмена;
	
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	ДанныеПодарочныхСертификатов = Неопределено;
	ТаблицаЗначений = ВозвращаемыеПодарочныеСертификаты;
	Если ТаблицаЗначений = Неопределено Тогда
		ТаблицаЗначений = РезультатЗапроса[2].Выгрузить();
		ДанныеПодарочныхСертификатов = ПодарочныеСертификатыВызовСервера.ПолучитьДанныеПодарочныхСертификатов(ТаблицаЗначений.ВыгрузитьКолонку("ПодарочныйСертификат"));
	КонецЕсли;
	
	ПодарочныеСертификаты.Очистить();	
	Для Каждого Строка Из ТаблицаЗначений Цикл
		ПодарочныйСертификатМожноВернуть = Истина;
		Если ЗначениеЗаполнено(ДанныеПодарочныхСертификатов) Тогда
			ПодарочныйСертификатМожноВернуть = Ложь;
			ДанныеПодарочногоСертификата = ДанныеПодарочныхСертификатов[Строка.ПодарочныйСертификат];
			Если Не ДанныеПодарочногоСертификата = Неопределено Тогда
				Если ПодарочныеСертификатыКлиентСервер.ПодарочныйСертификатМожноВернуть(ДанныеПодарочногоСертификата, ТекущаяДатаСеанса) Тогда
					ПодарочныйСертификатМожноВернуть = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ПодарочныйСертификатМожноВернуть Тогда
			СтрокаТЧ = ПодарочныеСертификаты.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, Строка);
		КонецЕсли;
	КонецЦикла;

	Если ПодарочныеСертификаты.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru='По данному чеку ККМ все подарочные сертификаты уже возвращены, частично использованы, либо уже не действуют.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	РеализацияПодарочныхСертификатов = ДокументОснование;
	СуммаДокумента = ПодарочныеСертификаты.Итог("Сумма");
	
	// Распределение суммы возврата по таблице оплат
	ОплатаПлатежнымиКартами.Очистить();
	СуммаКРаспределению = СуммаДокумента;
	ВыборкаОплат = РезультатЗапроса[1].Выбрать();
	Пока ВыборкаОплат.Следующий() И СуммаКРаспределению > 0 Цикл
		СтрокаТЧ = ОплатаПлатежнымиКартами.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, ВыборкаОплат);
		СтрокаТЧ.Сумма = Мин(СуммаКРаспределению, СтрокаТЧ.Сумма);
		СуммаКРаспределению = СуммаКРаспределению - СтрокаТЧ.Сумма;
	КонецЦикла;
	
КонецПроцедуры

// Инициализирует реализация товаров и услуг.
//	ДокументОбъект - Объект, который будет заполнен.
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Валюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
	КонецЕсли;
	Кассир      = Пользователи.ТекущийПользователь();
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Контрагент = Справочники.Контрагенты.РозничныйПокупатель;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоКассеККМ(КассаККМ)
	
	СостояниеКассовойСмены = РозничныеПродажи.ПолучитьСостояниеКассовойСмены(КассаККМ);
	НалогообложениеНДС = СостояниеКассовойСмены.НалогообложениеНДС;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектРасчетов()
	
	Если ПодарочныеСертификаты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодарочныеСертификаты.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(ПодарочныеСертификаты.ПодарочныйСертификат КАК Справочник.ПодарочныеСертификаты) КАК ПодарочныйСертификат
	|ПОМЕСТИТЬ ПодарочныеСертификаты
	|ИЗ
	|	&ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодарочныйСертификат
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодарочныеСертификаты.НомерСтроки КАК НомерСтроки,
	|	ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ОбъектыРасчетов.Ссылка КАК ОбъектРасчетов
	|ИЗ
	|	ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО ОбъектыРасчетов.Объект = ПодарочныеСертификаты.ПодарочныйСертификат
	|			И НЕ ОбъектыРасчетов.ПометкаУдаления
	|ГДЕ
	|	ПодарочныеСертификаты.ПодарочныйСертификат.Владелец.УчетПодарочныхСертификатов2_5";
	
	Запрос.УстановитьПараметр("ПодарочныеСертификаты", ПодарочныеСертификаты.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Индекс = Выборка.НомерСтроки - 1;
		ПодарочныеСертификаты[Индекс].ОбъектРасчетов = Выборка.ОбъектРасчетов;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
