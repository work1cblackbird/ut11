#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Ответственный";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Ответственный";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"Подразделение", Параметры);
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Контрагент";
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Валюта";
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Контрагент";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"БанковскийСчетКонтрагента", Параметры);
	
КонецПроцедуры

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("Взаиморасчеты");
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("ПланированиеКонтрольДенежныхСредств");
	МеханизмыДокумента.Добавить("РасчетыСПодотчетниками");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("УчетДенежныхСредств");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ФинансовыеИнструменты");
	МеханизмыДокумента.Добавить("ИсправлениеДокументов");
	
	СписаниеБезналичныхДенежныхСредствЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов - таблиц значений - данных для отражения в регистр.
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.СписаниеБезналичныхДенежныхСредств") Тогда
		ДокументОбъект = Документ;
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументОбъект = Документ.ПолучитьОбъект();
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	ПолучитьДанныеДокумента(Запрос, ДокументСсылка);
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		
		ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		
		ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		
		ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		
		ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		
		ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
		
		СписаниеБезналичныхДенежныхСредствЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
	
	ПроведениеДокументов.ДобавитьЗапросыСторноДвижений(Запрос, ТекстыЗапроса, Регистры, ПустаяСсылка().Метаданные());
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Возвращает структуру параметров для заполнения налогообложения НДС продажи.
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеБезналичныхДенежныхСредств - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи
//
Функция ПараметрыЗаполненияНалогообложенияНДСПродажи(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата = Объект.Дата;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = Объект.НаправлениеДеятельности;
	ПараметрыЗаполнения.Подразделение = Объект.Подразделение;
	
	ПараметрыЗаполнения.РеализацияТоваров = Истина;
	ПараметрыЗаполнения.РеализацияРаботУслуг = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Возвращает структуру параметров для заполнения налогообложения НДС закупки.
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеБезналичныхДенежныхСредств - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки
//
Функция ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
	
	ПараметрыЗаполнения.Контрагент = Объект.Контрагент;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.Период  = Объект.Дата;
	
	ПараметрыЗаполнения.ПриобретениеТоваров = Истина;
	ПараметрыЗаполнения.ПриобретениеРабот = Истина;
	ПараметрыЗаполнения.ПриобретениеНаСтатьи = Истина;
		
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	НоваяКоманда = Документы.АвансовыйОтчет.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.ЕстьУсловияВидимости = Истина;
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			НоваяКоманда,
			"ХозяйственнаяОперация",
			Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику,
			ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	
	НоваяКоманда = Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.ЕстьУсловияВидимости = Истина;
		ДоступныеХозОперации = Новый Массив;
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет);
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			НоваяКоманда,
			"ХозяйственнаяОперация",
			ДоступныеХозОперации,
			ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
	НоваяКоманда = Документы.ПриходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.ЕстьУсловияВидимости = Истина;
		ДоступныеХозОперации = Новый Массив;
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств);
		ДоступныеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			НоваяКоманда,
			"ХозяйственнаяОперация",
			ДоступныеХозОперации,
			ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	СозданиеНаОснованииЛокализация.ДобавитьКомандуСоздатьНаОснованииПисьмоОбменСБанками(КомандыСозданияНаОсновании);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС") Тогда
		
		КомандаСозданияСчетФактуры = Документы.СчетФактураПолученныйАванс.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
		
		Если КомандаСозданияСчетФактуры <> Неопределено Тогда
			КомандаСозданияСчетФактуры.ЕстьУсловияВидимости = Истина;
			ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаСозданияСчетФактуры,
																"ОперацияССамозанятым",
																Истина,
																ВидСравненияКомпоновкиДанных.НеРавно);
		КонецЕсли;
		
	КонецЕсли;
	
	ХозяйственныеОперацииДляИсправления = Новый Массив;
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ОплатаАрендодателю);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту);
	ХозяйственныеОперацииДляИсправления.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	
	КомандаИсправление = ИсправлениеДокументов.ДобавитьКомандуИсправление(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	
	Если КомандаИсправление <> Неопределено Тогда
		
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			КомандаИсправление,
			"ХозяйственнаяОперация",
			ХозяйственныеОперацииДляИсправления,
			ВидСравненияКомпоновкиДанных.ВСписке);
		
	КонецЕсли;
	
	КомандаСторно = ИсправлениеДокументов.ДобавитьКомандуСторно(
		КомандыСозданияНаОсновании,
		ПустаяСсылка().Метаданные());
	
	Если КомандаСторно <> Неопределено Тогда
		
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			КомандаСторно,
			"ХозяйственнаяОперация",
			ХозяйственныеОперацииДляИсправления,
			ВидСравненияКомпоновкиДанных.ВСписке);
		
	КонецЕсли;
	
	КомандаСозданияНаОсновании = Документы.ПодтверждениеЗачисленияЗарплаты.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Если КомандаСозданияНаОсновании <> Неопределено Тогда
		
		МассивХозяйственныхОпераций = Новый Массив;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивХозяйственныхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПеречислениеДенежныхСредствСпискуСотрудников") Тогда
			МассивХозяйственныхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
		КонецЕсли;
		
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаСозданияНаОсновании,
															"ХозяйственнаяОперация",
															МассивХозяйственныхОпераций,
															ВидСравненияКомпоновкиДанных.ВСписке);
		
	КонецЕсли;
	
	СписаниеБезналичныхДенежныхСредствЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Списание безналичных ДС".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Порядок - Число - Порядок команды.
//
// Возвращаемое значение:
//	ТаблицаЗначений, Неопределено - сформированные команды для вывода в подменю.
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, Порядок = 0) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеБезналичныхДенежныхСредств) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СписаниеБезналичныхДенежныхСредств.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.Порядок = Порядок;
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	СписаниеБезналичныхДенежныхСредствЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);
	
КонецПроцедуры

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса.
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ВЫБОР КОГДА ТаблицаДокументов.ПроведеноБанком ТОГДА
	|		&СтрокаПроведеноБанком
	|	ИНАЧЕ
	|		&СтрокаНеПроведеноБанком
	|	КОНЕЦ КАК ПредставлениеТекущегоСтатуса,
	|	&СтрокаПроведеноБанком КАК ПредставлениеНовогоСтатуса,
	|	ТаблицаДокументов.ПроведеноБанком КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	ИСТИНА КАК ЗаписьПроведением
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("СтрокаПроведеноБанком", НСтр("ru = 'Проведено банком'"));
	Запрос.УстановитьПараметр("СтрокаНеПроведеноБанком", НСтр("ru = 'Не проведено банком'"));
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Строка - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки.
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Дополнительные проверки отсутствуют
	
КонецФункции

// Возвращает параметры механизма взаиморасчетов.
//
// Параметры:
// 	ДанныеЗаполнения - ДокументОбъект, СправочникОбъект, ДокументСсылка, СправочникСсылка, Структура, ДанныеФормыСтруктура - Объект или коллекция для
//              расчета параметров взаиморасчетов.
//
// Возвращаемое значение:
// 	Массив из См. ВзаиморасчетыСервер.ПараметрыМеханизма - Массив параметров функций механизма взаиморасчетов.
//
Функция ПараметрыВзаиморасчеты(ДанныеЗаполнения = Неопределено) Экспорт
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеЗаполнения) Тогда
		СтруктураДанныеЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДанныеЗаполнения, 
			"ХозяйственнаяОперация,
			|ПроведеноБанком,
			|СписокКонтрагентов,
			|ОперацияССамозанятым");
		ХозяйственнаяОперация = СтруктураДанныеЗаполнения.ХозяйственнаяОперация;
		ПроведеноБанком       = СтруктураДанныеЗаполнения.ПроведеноБанком;
		СписокКонтрагентов    = СтруктураДанныеЗаполнения.СписокКонтрагентов;
		ОперацияССамозанятым = СтруктураДанныеЗаполнения.ОперацияССамозанятым;
	ИначеЕсли ДанныеЗаполнения = Неопределено Тогда
		ХозяйственнаяОперация = Неопределено;
		ПроведеноБанком       = Ложь;
		СписокКонтрагентов    = Ложь;
		ОперацияССамозанятым = Ложь;
	Иначе
		ХозяйственнаяОперация = ДанныеЗаполнения.ХозяйственнаяОперация;
		ПроведеноБанком       = ДанныеЗаполнения.ПроведеноБанком;
		СписокКонтрагентов    = ДанныеЗаполнения.СписокКонтрагентов;
		ОперацияССамозанятым = ДанныеЗаполнения.ОперацияССамозанятым;
	КонецЕсли;
	
	МассивСтруктур = Новый Массив();
	
	#Область ВсеОстальныеФункции
	
	СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
	ИначеЕсли ХозяйственнаяОперация =Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
		СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком;
	КонецЕсли;
	
	СтруктураПараметров.ИзменяетПланОплаты =
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне;
	
	СтруктураПараметров.ИзменяетРасчетыСтрокой               = 
		"ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
		|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
		|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
		|	ИЛИ
		|//Условие возврата начало
		|	ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
		|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		|//Условие возврата окончание";
	СтруктураПараметров.ИзменяетПланОтгрузкиПоставки = Ложь;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
		СтруктураПараметров.Контрагент                             = "Объект.БанковскийСчетПолучатель.Владелец";
		СтруктураПараметров.Партнер                                = Справочники.Партнеры.НашеПредприятие;
	ИначеЕсли (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		И ОперацияССамозанятым)
		И СписокКонтрагентов Тогда
		СтруктураПараметров.Контрагент                             = "Объект.РасшифровкаПлатежа.Контрагент";
		СтруктураПараметров.Партнер                                = "Объект.РасшифровкаПлатежа.Партнер";
	Иначе
		СтруктураПараметров.Контрагент                             = "Объект.Контрагент";
		СтруктураПараметров.Партнер                          = "Объект.РасшифровкаПлатежа.Партнер";
	КонецЕсли;
	
	СтруктураПараметров.ВалютаВзаиморасчетов             = "Объект.РасшифровкаПлатежа.ВалютаВзаиморасчетов";
	СтруктураПараметров.КурсЧислитель                    = "";
	СтруктураПараметров.КурсЗнаменатель                  = "";
	СтруктураПараметров.ПорядокРасчетов                  = "";
	
	СтруктураПараметров.ФормаОплаты                      = "";
	СтруктураПараметров.ОплатаВВалюте                    = "";
	
	СтруктураПараметров.ПутьКДаннымТЧРасшифровкаПлатежа  = "Объект.РасшифровкаПлатежа";
	СтруктураПараметров.Организация                      = "Объект.Организация";
	СтруктураПараметров.Соглашение                       = "";
	СтруктураПараметров.Договор                          = "Объект.Договор";
	СтруктураПараметров.БанковскийСчетОрганизации        = "Объект.БанковскийСчет";
	СтруктураПараметров.БанковскийСчетКонтрагента        = "";
	СтруктураПараметров.Касса                            = "";
	СтруктураПараметров.Дата                             = "Объект.Дата";
	СтруктураПараметров.ИдентификаторПлатежа             = "";
	
	СтруктураПараметров.НомерВходящегоДокумента          = "Объект.НомерВходящегоДокумента";
	СтруктураПараметров.ДатаВходящегоДокумента           = "Объект.ДатаВходящегоДокумента";
	СтруктураПараметров.НалогообложениеНДС               = "Объект.НалогообложениеНДС";
	
	СтруктураПараметров.ЭлементыФормы.РасшифровкаПлатежа               = "РасшифровкаПлатежа";
	СтруктураПараметров.ЭлементыФормы.ПодборВРасшифровкуПлатежа        = "РасшифровкаПлатежаПодборПоОстаткам";
	СтруктураПараметров.ПлатежиПо275ФЗ                                 = "Объект.ПлатежиПо275ФЗ";
	
	СтруктураПараметров.ПартнерПрочиеОтношения = ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне;
	
	СтруктураПараметров.ПодборТолькоБезусловнойЗадолженности = ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию;
	
	СтруктураПараметров.ОперацияССамозанятым = "Объект.ОперацияССамозанятым";
	
	МассивСтруктур.Добавить(СтруктураПараметров);
	
	#КонецОбласти
	
	#Область ОбъектРасчетовВозврат
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
	
		СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();
		
		СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
		СтруктураПараметров.ОбъектРасчетов                   = "Объект.ОбъектРасчетов";
		
		СтруктураПараметров.ИзменяетПланОплаты               = ИСТИНА;
		
		СтруктураПараметров.ИзменяетРасчетыСтрокой           = 
			"ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
			|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
			|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
			|	ИЛИ
			|//Условие возврата начало
			|	ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
			|	ИЛИ ИсточникДанных.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
			|//Условие возврата окончание";
		СтруктураПараметров.ИзменяетПланОтгрузкиПоставки     = Ложь;
		
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
			СтруктураПараметров.Контрагент                             = "Объект.БанковскийСчетПолучатель.Владелец";
			СтруктураПараметров.Партнер                                = Справочники.Партнеры.НашеПредприятие;
		Иначе
			СтруктураПараметров.Контрагент                             = "Объект.Контрагент";
			СтруктураПараметров.Партнер                                = "Объект.РасшифровкаПлатежа.Партнер";
		КонецЕсли;
		
		СтруктураПараметров.ВалютаВзаиморасчетов             = "Объект.РасшифровкаПлатежа.ВалютаВзаиморасчетов";
		СтруктураПараметров.КурсЧислитель                    = "";
		СтруктураПараметров.КурсЗнаменатель                  = "";
		СтруктураПараметров.ПорядокРасчетов                  = "";
		
		СтруктураПараметров.ФормаОплаты                      = "";
		СтруктураПараметров.ОплатаВВалюте                    = "";
		 
		СтруктураПараметров.ПутьКДаннымТЧРасшифровкаПлатежа  = "Объект.РасшифровкаПлатежа";
		СтруктураПараметров.Организация                      = "Объект.Организация";
		СтруктураПараметров.Соглашение                       = "";
		СтруктураПараметров.Договор                          = "Объект.Договор";
		СтруктураПараметров.БанковскийСчетОрганизации        = "Объект.БанковскийСчет";
		СтруктураПараметров.БанковскийСчетКонтрагента        = "";
		СтруктураПараметров.Касса                            = "";
		Если ПроведеноБанком Тогда
			СтруктураПараметров.Дата                             = "Объект.ДатаПроведенияБанком";
		Иначе
			СтруктураПараметров.Дата                             = "Объект.Дата";
		КонецЕсли;
		СтруктураПараметров.ИдентификаторПлатежа             = "";
		
		СтруктураПараметров.НомерВходящегоДокумента          = "Объект.НомерВходящегоДокумента";
		СтруктураПараметров.ДатаВходящегоДокумента           = "Объект.ДатаВходящегоДокумента";
		СтруктураПараметров.НалогообложениеНДС               = "Объект.НалогообложениеНДС";
		
		МассивСтруктур.Добавить(СтруктураПараметров);
		
	КонецЕсли;
	
	#КонецОбласти
	
	Возврат МассивСтруктур;
КонецФункции

#Область Прочее

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	Объект - ДокументОбъект.СписаниеБезналичныхДенежныхСредств - Объект документа.
//	МассивВсехРеквизитов - Массив из Строка - Массив всех имен реквизитов, зависимых от хозяйственной операции.
//	МассивРеквизитовОперации - Массив из Строка - Массив имен реквизитов, используемых в выбранной хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(Объект, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	ХозяйственнаяОперация = Объект.ХозяйственнаяОперация;
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("БанковскийСчетКонтрагента");
	МассивВсехРеквизитов.Добавить("БанковскийСчетПолучатель");
	МассивВсехРеквизитов.Добавить("ВалютаКонвертации");
	МассивВсехРеквизитов.Добавить("ДатаАвансовогоОтчета");
	МассивВсехРеквизитов.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
	МассивВсехРеквизитов.Добавить("КассаПолучатель");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("КурсКонвертации");
	МассивВсехРеквизитов.Добавить("КратностьКурсаКонвертации");
	МассивВсехРеквизитов.Добавить("ОплатаПоЗаявкам");
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("Подразделение");
	МассивВсехРеквизитов.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("СуммаКонвертации");
	МассивВсехРеквизитов.Добавить("ДоговорЭквайринга");
	МассивВсехРеквизитов.Добавить("ТипНалога");
	МассивВсехРеквизитов.Добавить("ПлатежСКонвертацией");
	МассивВсехРеквизитов.Добавить("СуммаВВалютеОтправителя");
	
	МассивВсехРеквизитов.Добавить("ГруппаФинансовогоУчета");
	МассивВсехРеквизитов.Добавить("НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("Договор");
	МассивВсехРеквизитов.Добавить("НалогообложениеНДС");
	
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорАренды");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Комментарий");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Партнер");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Подразделение");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтавкаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипПлатежаПоАренде");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Организация");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДатаПогашения");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Контрагент");
	
	МассивВсехРеквизитов.Добавить("ЛицевыеСчетаСотрудников");
	МассивВсехРеквизитов.Добавить("ЛицевыеСчетаСотрудников.ФизическоеЛицо");
	МассивВсехРеквизитов.Добавить("ЛицевыеСчетаСотрудников.ЛицевойСчет");
	МассивВсехРеквизитов.Добавить("ЛицевыеСчетаСотрудников.Сумма");
	МассивВсехРеквизитов.Добавить("ЛицевыеСчетаСотрудников.СтатьяДвиженияДенежныхСредств");
	
	МассивРеквизитовОперации = Новый Массив;
	МассивРеквизитовОперации.Добавить("Подразделение");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		МассивРеквизитовОперации.Добавить("ПлатежСКонвертацией");
		МассивРеквизитовОперации.Добавить("СуммаВВалютеОтправителя");
	
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Контрагент");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДатаПогашения");
	
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		МассивРеквизитовОперации.Добавить("ПлатежСКонвертацией");
		МассивРеквизитовОперации.Добавить("СуммаВВалютеОтправителя");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Контрагент");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ДатаАвансовогоОтчета");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("Контрагент");
		
		Если Не Объект.СписокФизЛиц Тогда
			МассивРеквизитовОперации.Добавить("ПлатежСКонвертацией");
			МассивРеквизитовОперации.Добавить("СуммаВВалютеОтправителя");
		КонецЕсли;
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
		МассивРеквизитовОперации.Добавить("ЛицевыеСчетаСотрудников");
		МассивРеквизитовОперации.Добавить("ЛицевыеСчетаСотрудников.ФизическоеЛицо");
		МассивРеквизитовОперации.Добавить("ЛицевыеСчетаСотрудников.ЛицевойСчет");
		МассивРеквизитовОперации.Добавить("ЛицевыеСчетаСотрудников.Сумма");
		МассивРеквизитовОперации.Добавить("ЛицевыеСчетаСотрудников.СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		МассивРеквизитовОперации.Добавить("ПлатежСКонвертацией");
		МассивРеквизитовОперации.Добавить("СуммаВВалютеОтправителя");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДатаПогашения");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежСКонвертацией");
		МассивРеквизитовОперации.Добавить("СуммаВВалютеОтправителя");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Подразделение");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежСКонвертацией");
		МассивРеквизитовОперации.Добавить("СуммаВВалютеОтправителя");
		
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Контрагент");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДатаПогашения");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ТипНалога");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежСКонвертацией");
		МассивРеквизитовОперации.Добавить("СуммаВВалютеОтправителя");
		
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ВалютаКонвертации");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("КурсКонвертации");
		МассивРеквизитовОперации.Добавить("КратностьКурсаКонвертации");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("СуммаКонвертации");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Контрагент");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежСКонвертацией");
		МассивРеквизитовОперации.Добавить("СуммаВВалютеОтправителя");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Контрагент");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежСКонвертацией");
		МассивРеквизитовОперации.Добавить("СуммаВВалютеОтправителя");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Контрагент");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику Тогда
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("Контрагент");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("Контрагент");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
			МассивРеквизитовОперации.Добавить("Контрагент");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ДоговорЭквайринга");
		МассивРеквизитовОперации.Добавить("ПодразделениеРасходов");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("ОтражатьКомиссию");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	
	КонецЕсли;
	
КонецПроцедуры

// Определяет состав хоз. операций документа, для которых не используется расшифровка платежа при отсутствии заявок на
// расход ДС.
//
// Возвращаемое значение:
//    Массив - хозяйственные операции без использования расшифровки платежа.
//
Функция МассивОперацийБезРасшифровкиПлатежа() Экспорт
	
	МассивОпераций = Новый Массив;
	
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту);
	
	Возврат МассивОпераций;
	
КонецФункции

// Определяет свойства полей формы в зависимости от данных
//
// Параметры:
//	Настройки - ТаблицаЗначений - таблица с колонками:
//		* Поля - Массив из Строка - поля, для которых определяются настройки отображения
//		* Условие - ОтборКомпоновкиДанных - условия применения настройки
//		* Свойства - Структура - имена и значения свойств
//
Процедура ЗаполнитьНастройкиПолейФормы(Настройки) Экспорт
	
	Финансы = ФинансоваяОтчетностьСервер;
	Операции = Перечисления.ХозяйственныеОперации;
	
	ОтборПеречислениеСотрудникуЧерезБанк = Новый ОтборКомпоновкиДанных();
	ГруппаИ = Финансы.НовыйОтбор(ОтборПеречислениеСотрудникуЧерезБанк, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ПеречислениеСотрудникуЧерезБанк", Истина);
	ПодГруппаИли = Финансы.НовыйОтбор(ГруппаИ, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ПодГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ПодГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ПодГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ПодГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	
	ОтборВыплатаСамозанятому = ДенежныеСредстваСервер.ОтборВыплатаСамозанятому();
	ОтборСписокКонтрагентов = ДенежныеСредстваСервер.ОтборСписокКонтрагентов(ОтборВыплатаСамозанятому);
	
	#Область Шапка
	// ОплатаПоЗаявкам
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ОплатаПоЗаявкам");
	Элемент.Поля.Добавить("НадписьЗаголовокЗаявки");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьЗаявкиНаРасходованиеДенежныхСредств", Истина);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыНаПлатежнуюКарту);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ОплатаПоЗаявкам");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.РазрешеныПлатежиБезУказанияЗаявок", Истина);
	Элемент.Свойства.Вставить("Доступность");
	
	// ПроведеноБанком
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПроведеноБанком");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ИнкассовоеПоручение);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.БанковскийОрдер);
	Элемент.Свойства.Вставить("ТолькоПросмотр");
	
	// ДатаПроведенияБанком
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДатаПроведенияБанком");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ПроведеноБанком", Ложь);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.БанковскийОрдер);
	Элемент.Свойства.Вставить("ТолькоПросмотрБезОтметкиНезаполненного");
	
	// ДатаВходящегоДокумента, НомерВходящегоДокумента
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДатаВходящегоДокумента");
	Элемент.Поля.Добавить("НомерВходящегоДокумента");
	Финансы.НовыйОтбор(Элемент.Условие, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение);
	Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного", Ложь);
	Элемент.Свойства.Вставить("ОтметкаНезаполненного", Ложь);
	
	// ПодотчетноеЛицо
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Работник'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Подотчетное лицо'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	Финансы.НовыйОтбор(Элемент.Условие, "СписокФизЛиц", Истина);
	Элемент.Свойства.Вставить("Доступность", Ложь);
	
	// БанковскийСчетПолучатель
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеДенежныхСредствНаДругойСчет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Счет зачисления'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеДенежныхСредствНаДругойСчет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Счет получатель'"));
	
	// Контрагент
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	Элемент.Поля.Добавить("СтраницыПроблемаПроверкаКонтрагентаКонтрагент");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИлиИ = Финансы.НовыйОтбор(ГруппаИли, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИлиИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	Финансы.НовыйОтбор(ГруппаИлиИ, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИлиИ, "ОперацияССамозанятым", Ложь);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыНаПлатежнуюКарту);
	Финансы.СкопироватьОтбор(ОтборПеречислениеСотрудникуЧерезБанк, ГруппаИли);
	Финансы.СкопироватьОтбор(ОтборСписокКонтрагентов, ГруппаИли);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Получатель'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВозвратОплатыНаПлатежнуюКарту);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Эквайер'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.СкопироватьОтбор(ОтборПеречислениеСотрудникуЧерезБанк, ГруппаИли);
	Финансы.СкопироватьОтбор(ОтборСписокКонтрагентов, ГруппаИли);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Банк-получатель'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Брокер'"));
	
	// Договор подключения к платежной системе
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДоговорЭквайринга");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВозвратОплатыНаПлатежнуюКарту);
	Элемент.Свойства.Вставить("Видимость");
	
	// БанковскийСчетКонтрагента
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыНаПлатежнуюКарту);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
	Элемент.Свойства.Вставить("ТолькоПросмотр", Истина);
	
	ОперацииСФизЛицами = Новый Массив;
	ОперацииСФизЛицами.Добавить(Операции.ВыдачаДенежныхСредствПодотчетнику);
	ОперацииСФизЛицами.Добавить(Операции.ВыдачаЗаймаСотруднику);
	ОперацииСФизЛицами.Добавить(Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	КонтрагентНеЗаполнен = Финансы.НовыйОтбор(ГруппаИли, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	КонтрагентНеЗаполнен.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	Финансы.НовыйОтбор(КонтрагентНеЗаполнен, "Контрагент", , , ВидСравненияКомпоновкиДанных.НеЗаполнено);

	ПодгруппаИли = Финансы.НовыйОтбор(КонтрагентНеЗаполнен, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ПодгруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ПеречислениеЧерезБанк = Финансы.НовыйОтбор(ПодгруппаИли, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ПеречислениеЧерезБанк.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	Финансы.НовыйОтбор(ПеречислениеЧерезБанк, "ХозяйственнаяОперация", ОперацииСФизЛицами, , ВидСравненияКомпоновкиДанных.ВСписке);
	Финансы.НовыйОтбор(ПеречислениеЧерезБанк, "ПеречислениеСотрудникуЧерезБанк", Истина);
	
	ОстальныеОперации = Финансы.НовыйОтбор(ПодгруппаИли, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ОстальныеОперации.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
	
	Финансы.НовыйОтбор(ОстальныеОперации, "ХозяйственнаяОперация", ОперацииСФизЛицами, , ВидСравненияКомпоновкиДанных.ВСписке);
	
	ФизЛицоНеЗаполнено = Финансы.НовыйОтбор(ГруппаИли, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ФизЛицоНеЗаполнено.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	Финансы.НовыйОтбор(ФизЛицоНеЗаполнено, "ПодотчетноеЛицо", , , ВидСравненияКомпоновкиДанных.НеЗаполнено);
	Финансы.НовыйОтбор(ФизЛицоНеЗаполнено, "ХозяйственнаяОперация", ОперацииСФизЛицами, , ВидСравненияКомпоновкиДанных.ВСписке);
	Финансы.НовыйОтбор(ФизЛицоНеЗаполнено, "ПеречислениеСотрудникуЧерезБанк", Ложь);
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Счет брокера'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.КонвертацияВалюты, , ВидСравненияКомпоновкиДанных.НеРавно);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Счет получателя'"));
	
	// КассаПолучатель
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КассаПолучатель");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.СнятиеНаличныхДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// СтатьяДвиженияДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтатьяДвиженияДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыНаПлатежнуюКарту);
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// РаспоряжениеНаПеремещениеДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
	ГруппаИли1 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли1, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение);
	Финансы.НовыйОтбор(ГруппаИли1, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.БанковскийОрдер);
	Финансы.НовыйОтбор(ГруппаИли1, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер);
	ГруппаИли2 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ПеречислениеДенежныхСредствНаДругойСчет);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.СнятиеНаличныхДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// ЗаявкаНаРасходованиеДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Элемент.Свойства.Вставить("Видимость");
	
	// Банковский счет контрагента
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного", Ложь);
	Элемент.Свойства.Вставить("ОтметкаНезаполненного", Ложь);
	
	// ТипНалога
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ТипНалога");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Элемент.Свойства.Вставить("Видимость");
	
	// Тип перечисления подотчетнику
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПеречислениеСотрудникуЧерезБанк");
	Элемент.Свойства.Вставить("Видимость", Истина);
	ГруппИли = Финансы.НовыйОтбор(Элемент.Условие, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПеречислениеСотрудникуЧерезБанк");
	Элемент.Свойства.Вставить("Доступность", Ложь);
	Финансы.НовыйОтбор(Элемент.Условие, "СписокФизЛиц", Истина);
	
	// Лицевые счета
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЛицевыеСчетаСотрудников");
	
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(Элемент.Условие, "СписокФизЛиц", Истина);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// Надпись о наличии документа о зачислении ДС на лицевые счета
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДекорацияОтсутствиеЗачисленияДСНаСчета");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(Элемент.Условие, "СписокФизЛиц", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.НаличиеДокументаЗачисленияДС", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	Элемент.Свойства.Вставить("ЦветТекста", ЦветаСтиля.ЦветТекстаПредупреждение);
	
	// Список физ. лиц
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СписокФизЛицВключено");
	Элемент.Поля.Добавить("СписокФизЛицОтключено");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(Элемент.Условие, "ПеречислениеСотрудникуЧерезБанк", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьПеречислениеДенежныхСредствСпискуСотрудников", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// Статья ДДС конвертации
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтатьяДвиженияДенежныхСредствКонвертация");
	Финансы.НовыйОтбор(Элемент.Условие, "ПлатежСКонвертацией", Истина);
	ГруппНе = Финансы.НовыйОтбор(Элемент.Условие, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
	Финансы.НовыйОтбор(ГруппНе, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Видимость");
	#КонецОбласти
	
	#Область Реквизиты
	// СуммаДокумента
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СуммаДокумента");
	Финансы.НовыйОтбор(Элемент.Условие, "ПлатежСКонвертацией", Истина);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Сумма платежа'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СуммаДокумента");
	Финансы.НовыйОтбор(Элемент.Условие, "ПлатежСКонвертацией", Ложь);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Сумма'"));
	
	// Валюта
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Валюта");
	ОтборОпераций = Финансы.НовыйОтбор(Элемент.Условие, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ОтборОпераций.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ОтборОпераций, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ОтборОпераций, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ОтборОпераций, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ОтборОпераций, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ОтборОпераций, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ОтборОпераций, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ОтборОпераций, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ОтборОпераций, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ОтборОпераций, "ХозяйственнаяОперация", Операции.ОплатаАрендодателю);
	
	ВыплатаОдномуПодотчетнику = Финансы.НовыйОтбор(ОтборОпераций, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ВыплатаОдномуПодотчетнику.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ВыплатаОдномуПодотчетнику, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ВыплатаОдномуПодотчетнику, "СписокФизЛиц", Ложь);
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	Элемент.Свойства.Вставить("ТолькоПросмотр", Ложь);
	
	// НадписьВалюта
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НадписьВалюта");
	Элемент.Поля.Добавить("НадписьВалютаКомиссия");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// СуммаВВалютеПолучателя
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СуммаВВалютеОтправителя");
	Элемент.Поля.Добавить("БанковскийСчетВалютаДенежныхСредств");
	Финансы.НовыйОтбор(Элемент.Условие, "ПлатежСКонвертацией", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СуммаВВалютеОтправителя");
	Финансы.НовыйОтбор(Элемент.Условие, "ПлатежСКонвертацией", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "ПроведеноБанком", Ложь);
	Элемент.Свойства.Вставить("Доступность", Ложь);
	
	// ПериодАвансовогоОтчета, ДатаАвансовогоОтчета
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПериодАвансовогоОтчета");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДатаАвансовогоОтчета");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ПериодАвансовогоОтчетаДата", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// Конвертация
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ВалютаКонвертации");
	Элемент.Поля.Добавить("КурсКонвертации");
	Элемент.Поля.Добавить("СуммаКонвертации");
	Элемент.Поля.Добавить("КратностьКурсаКонвертации");
	Элемент.Поля.Добавить("ВалютаКурсаКонвертации");
	Элемент.Поля.Добавить("ВалютаКратностиКурсаКонвертации");
	Элемент.Поля.Добавить("БанковскийСчетСписанияКомиссии");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Видимость");
	
	// Валютный платеж
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ТипКомиссииЗаПеревод");
	Элемент.Поля.Добавить("КодыИнструкцийБанку");
	Элемент.Поля.Добавить("ИнформацияПолучателюПлатежа");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйПлатеж", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЭтоТранзитныйСчет", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ИнформацияДляРегулирующихОрганов");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйПлатеж", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ТребуетсяИнформацияДляРегулирующихОрганов", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЭтоТранзитныйСчет", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// ВставитьВНазначение
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ВставитьВНазначение");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйКонтроль", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// НадписьЗеркальныйПлатеж
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НадписьЗеркальныйПлатеж");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Элемент.Свойства.Вставить("Видимость");
	
	// Комиссия
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГруппаКомиссия");
	Финансы.НовыйОтбор(Элемент.Условие, "ОтражатьКомиссию", Истина);
	Элемент.Свойства.Вставить("Видимость");
	#КонецОбласти
	
	#Область РасшифровкаПлатежа
	// СтраницаРасшифровка
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтраницаРасшифровка");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ОплатаПоЗаявкам", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВозвратОплатыНаПлатежнуюКарту);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИ, "СписокФизЛиц", Ложь);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИ, "СписокФизЛиц", Истина);
	Финансы.НовыйОтбор(ГруппаИ, "ОплатаПоЗаявкам", Истина);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтраницаРасшифровка");
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Расшифровка платежа'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтраницаРасшифровка");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(Элемент.Условие, "СписокФизЛиц", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "ОплатаПоЗаявкам", Истина);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Заявки на оплату'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтраницаРасшифровка");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Ведомости'"));
	
	// ЗаявкаНаРасходованиеДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияЗаявкаНаРасходованиеДенежныхСредств");
	
	Финансы.НовыйОтбор(Элемент.Условие, "ОплатаПоЗаявкам", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыНаПлатежнуюКарту);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияЗаявкаНаРасходованиеДенежныхСредств");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.РазрешеныПлатежиБезУказанияЗаявок", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "ОплатаПоЗаявкам", Ложь);
	Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного", Ложь);
	Элемент.Свойства.Вставить("ОтметкаНезаполненного", Ложь);
	
	// Аналитика прочей выдачи
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Подразделение");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПодразделение");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияНаправлениеДеятельности");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// СтатьяДвиженияДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтатьяДвиженияДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВыплатаЗарплатыНаЛицевыеСчета);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИ2, "СписокФизЛиц", Ложь);
	
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// СуммаВзаиморасчетов, ВалютаВзаиморасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияВалютаВзаиморасчетов");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИ, "СписокФизЛиц", Ложь);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	Элемент.Свойства.Вставить("Видимость");
	
	// СуммаВзаиморасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаВзаиморасчетов");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютаВзаиморасчетов", "Валюта", , , Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	Элемент.Свойства.Вставить("ТолькоПросмотр");
	
	// ДекорацияВалютыИКурсПлатежа, КурсЧислительВзаиморасчетов, КурсЗнаменательВзаиморасчетов, ВариантКурсаДоговора
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДекорацияВалютыИКурсПлатежа");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.КурсЧислительВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияКурсЧислительВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.КурсЧислительВзаиморасчетовТекст");
	Элемент.Поля.Добавить("РасшифровкаПлатежаКурсЗнаменательВзаиморасчетовНадпись");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ВариантКурсаДоговора");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияВариантКурсаДоговора");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПрочаяВыдачаДенежныхСредств);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	
	Финансы.НовыйОтбор(Элемент.Условие, "Валюта", "Дополнительно.ВалютаВзаиморасчетов",, ВидСравненияКомпоновкиДанных.НеРавно, Истина);
	ПодгруппаИли = Финансы.НовыйОтбор(Элемент.Условие, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ПодгруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ПодгруппаИли, "Дополнительно.НесколькоВалютВзаиморасчетов", Истина);
	Финансы.НовыйОтбор(ПодгруппаИли, "Дополнительно.ВалютаВзаиморасчетов", Справочники.Валюты.ПустаяСсылка(), , ВидСравненияКомпоновкиДанных.НеРавно);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДекорацияВалютыИКурсПлатежа
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДекорацияВалютыИКурсПлатежа");
	ГруппаИ = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ВалютаВзаиморасчетов",,, ВидСравненияКомпоновкиДанных.Заполнено);
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ВариантКурсаДоговора",,, ВидСравненияКомпоновкиДанных.Заполнено);
	Элемент.Свойства.Вставить("Доступность");
	
	// РасшифровкаБезРазбиенияВариантКурсаДоговора
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияВариантКурсаДоговора");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "Дополнительно.ВариантКурсаДоговора", Перечисления.ВариантыКурсаДоговора.УстановленныйВДоговоре,, ВидСравненияКомпоновкиДанных.Равно);
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ВариантКурсаДоговора", Перечисления.ВариантыКурсаДоговора.ФиксированныйНаДатуОтгрузки,, ВидСравненияКомпоновкиДанных.Равно);
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ТипОбъектаРасчетов", Перечисления.ТипыОбъектовРасчетов.Накладная,, ВидСравненияКомпоновкиДанных.Равно);
	Элемент.Свойства.Вставить("Гиперссылка");
	
	// СуммаНДС, СтавкаНДС
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаНДС");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаНДС");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтавкаНДС");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтавкаНДС");
	Элемент.Поля.Добавить("ВалютаНДС");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	ГруппаНе = Финансы.НовыйОтбор(Элемент.Условие, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаНе);
	Элемент.Свойства.Вставить("Видимость");
	
	// ОбъектРасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОбъектРасчетов");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	Элемент.Свойства.Вставить("Видимость");
	
	// Партнер
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Партнер");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПартнер");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорКредитаДепозита
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорКредитаДепозита");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Элемент.Свойства.Вставить("Видимость");
	
	// ТипСуммыКредитаДепозита
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипСуммыКредитаДепозита");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ОплатаПоКредитам);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорЗаймаСотруднику
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорЗаймаСотруднику");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорАренды
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорАренды");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорАренды");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипПлатежаПоАренде");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипПлатежаПоАренде");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ОплатаАрендодателю);
	Элемент.Свойства.Вставить("Видимость");
	
	// Организация
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Организация");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОрганизация");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЕстьФилиалы", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	Элемент.Свойства.Вставить("Видимость");
	
	// ГиперссылкаРеквизитыОбъектаРасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГиперссылкаРеквизитыОбъектаРасчетов");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	Элемент.Свойства.Вставить("Видимость");
	
	// Нераспределенный платеж
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГруппаФинансовогоУчета");
	Элемент.Поля.Добавить("НаправлениеДеятельности");
	ГруппаИ = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.СуммаНераспределено", 0,, ВидСравненияКомпоновкиДанных.НеРавно);
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию,, ВидСравненияКомпоновкиДанных.НеРавно);
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту,, ВидСравненияКомпоновкиДанных.НеРавно);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ГруппаФинансовогоУчетаВозврата");
	Элемент.Поля.Добавить("НаправлениеДеятельностиВозврата");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Элемент.Свойства.Вставить("Видимость");
	
	// Договор
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Договор");
	
	Финансы.НовыйОтбор(Элемент.Условие, "СписокКонтрагентов", Ложь);
	
	ГруппаИ1 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ГруппаИли = Финансы.НовыйОтбор(ГруппаИ1,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	
	ГруппаИ4 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ4.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ4, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИ4, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	
	ГруппаИ5 = Финансы.НовыйОтбор(ГруппаИли, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ5.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИ5);
	Финансы.НовыйОтбор(ГруппаИ5, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	
	Элемент.Свойства.Вставить("Видимость");

	// Договор возврата
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДоговорВозврата");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыСКлиентами", Истина);
		
	Элемент.Свойства.Вставить("Видимость");
		
	// Договор объекта расчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОбъектРасчетовДоговор");
	
	ОсновныеУсловия = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ОсновныеУсловия.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ОсновныеУсловия, "СписокКонтрагентов", Истина);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	ГруппаИли1 = Финансы.НовыйОтбор(ГруппаИ1,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли1);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ2,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьДоговорыСКлиентами", Истина);
	ГруппаИли3 = Финансы.НовыйОтбор(ГруппаИ3,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли3, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежаДоговор");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьДоговорыСПоставщиками", Истина);
	ГруппаИли1 = Финансы.НовыйОтбор(ГруппаИ1,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли1);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьДоговорыМеждуОрганизациями", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ2,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьДоговорыСКлиентами", Истина);
	ГруппаИли3 = Финансы.НовыйОтбор(ГруппаИ3,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли3, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// Дата погашения
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДатаПогашения");
	Элемент.Поля.Добавить("РасшифровкаПлатежаДатаПогашения");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	
	Элемент.Свойства.Вставить("Видимость");
	
	#КонецОбласти
	
	#Область Команды
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЗаполнитьОстаткамиНевыданныхСуммКонтрагенту");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Операции.ВыдачаЗаймов);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежаПодборПоОстаткам");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Операции.ПеречислениеТаможне);
	Финансы.СкопироватьОтбор(ОтборВыплатаСамозанятому, ГруппаИли);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежаПодобратьИзЗаявок");
	Финансы.НовыйОтбор(Элемент.Условие, "СписокФизЛиц", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	#КонецОбласти
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Возвращает параметры выбора статей в документе.
// 
// Параметры:
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	ДополнительнаяДоступность - Булево - Дополнительный признак доступности выбора статей и аналитик.
// 
// Возвращаемое значение:
// 	Массив из Структура - Массив параметров настройки счетов учета См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики
//
Функция ПараметрыВыбораСтатейИАналитик(ХозяйственнаяОперация, ДополнительнаяДоступность = Ложь) Экспорт
	
	МассивПараметровВыбора = Новый Массив;
	
	#Область СтатьяРасходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.РасшифровкаПлатежа";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка();
	КонецЕсли;
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("РасшифровкаБезРазбиенияСтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("РасшифровкаПлатежаСтатьяРасходов");	
	ПараметрыВыбора.ДоступностьПоОперации = ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств;
	
	#Область АналитикаАктивовПассивов
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("РасшифровкаБезРазбиенияАналитикаАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("РасшифровкаПлатежаАналитикаАктивовПассивов");
	#КонецОбласти
	
	#Область АналитикаРасходов
	ПараметрыВыбора.ВыборСтатьиРасходов = ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("РасшифровкаБезРазбиенияАналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("РасшифровкаПлатежаАналитикаРасходов");
	#КонецОбласти
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	
	ПараметрыВыбора.ДоступностьПоОперации =
		(ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту) Или ДополнительнаяДоступность;
	
	МассивПараметровВыбора.Добавить(ПараметрыВыбора);
	
	Возврат МассивПараметровВыбора;
	
КонецФункции

#КонецОбласти


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
// 
// Параметры:
//  Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ
	|	( ЗначениеРазрешено(Организация)
	|	ИЛИ ЗначениеРазрешено(БанковскийСчетПолучатель.Владелец)
	|		И ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|	ИЛИ ЗначениеРазрешено(РасшифровкаПлатежа.Организация, Null КАК Истина) И ХозяйственнаяОперация В (
	|		Значение(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		Значение(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		Значение(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		Значение(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		Значение(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|		)
	|	)И ЗначениеРазрешено(ХозяйственнаяОперация)
	|	И ВЫБОР КОГДА ХозяйственнаяОперация В (Значение(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		Значение(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))
	|	ТОГДА ЗначениеРазрешено(РасшифровкаПлатежа.Партнер, Null КАК Истина)
	|	КОГДА ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	ТОГДА ЗначениеРазрешено(ПодотчетноеЛицо)
	|	ИНАЧЕ ИСТИНА КОНЕЦ 
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	( ЗначениеРазрешено(Организация)
	|	ИЛИ ( ЗначениеРазрешено(БанковскийСчетПолучатель.Владелец)
	|	И ХозяйственнаяОперация В (Значение(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
	|	))И ЗначениеРазрешено(ХозяйственнаяОперация)
	|	И ВЫБОР КОГДА ХозяйственнаяОперация В (Значение(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		Значение(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту))
	|	ТОГДА ЗначениеРазрешено(РасшифровкаПлатежа.Партнер, Null КАК Истина)
	|	КОГДА ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	ТОГДА ЗначениеРазрешено(ПодотчетноеЛицо)
	|	ИНАЧЕ ИСТИНА КОНЕЦ ";

КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

//++ Локализация


//-- Локализация

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Основание") И ЗначениеЗаполнено(Параметры.Основание) Тогда
		
		Если ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств")
			И ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметры.Основание, "ХозяйственнаяОперацияПоЗарплате") =
				Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета
			И ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
				
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаПомощникаСоздания";
			
		ИначеЕсли ТипЗнч(Параметры.Основание) = Тип("Структура")
			И Параметры.Основание.Свойство("НесколькоЗаявокНаРасходованиеСредств") И Не Параметры.Основание.НесколькоЗаявокНаРасходованиеСредств
			И Параметры.Основание.Свойство("ДокументОснование") И Параметры.Основание.ДокументОснование.Количество()
			И ТипЗнч(Параметры.Основание.ДокументОснование[0]) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") Тогда
			
			РеквизитыЗаявки = ОбщегоНазначенияУТВызовСервера.ЗначенияРеквизитовОбъекта(
				Параметры.Основание.ДокументОснование[0], "ХозяйственнаяОперация, ХозяйственнаяОперацияПоЗарплате, СписокФизЛиц, БанковскийСчет, ПеречислениеСотрудникуЧерезБанк");
				
			Если РеквизитыЗаявки.ХозяйственнаяОперацияПоЗарплате = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета
				Или РеквизитыЗаявки.СписокФизЛиц Тогда
				
				БанковскийСчет = Неопределено;
				Если Параметры.Основание.Свойство("БанковскийСчетКасса") И ЗначениеЗаполнено(Параметры.Основание.БанковскийСчетКасса) Тогда
					БанковскийСчет = Параметры.Основание.БанковскийСчетКасса;
				Иначе
					БанковскийСчет = РеквизитыЗаявки.БанковскийСчет;
				КонецЕсли;
				
				Параметры.Основание = Параметры.Основание.ДокументОснование[0];
				Параметры.Вставить("БанковскийСчет", БанковскийСчет);
				Если РеквизитыЗаявки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
					Параметры.Вставить("ХозяйственнаяОперация", РеквизитыЗаявки.ХозяйственнаяОперацияПоЗарплате);
				Иначе
					Параметры.Вставить("ХозяйственнаяОперация", РеквизитыЗаявки.ХозяйственнаяОперация);
				КонецЕсли;
				
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаПомощникаСоздания";
				
				Если Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
					И РеквизитыЗаявки.СписокФизЛиц
					И ПолучитьФункциональнуюОпцию("ИспользоватьПеречислениеДенежныхСредствСпискуСотрудников") Тогда
					
					Если Не РеквизитыЗаявки.ПеречислениеСотрудникуЧерезБанк Тогда
						ВыбраннаяФорма = "ФормаПомощникаСписанияНаЛицевыеСчета";
					Иначе
						ВыбраннаяФорма = Метаданные.Документы.СписаниеБезналичныхДенежныхСредств.Формы.ФормаДокумента;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СписаниеБезналичныхДенежныхСредствЛокализация.ОбработкаПолученияФормы(
		ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Если ИмяРегистра <> "ЛимитыРасходаДенежныхСредств" Тогда
		ИсточникиДанных.Вставить("РасшифровкаПлатежа.ОбъектРасчетов");
	КонецЕсли;
	
	СписаниеБезналичныхДенежныхСредствЛокализация.ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра ,ИсточникиДанных);
	
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос();
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие;
	ПереопределениеРасчетаПараметров = Новый Структура;
	СинонимТаблицыДокумента = "";
	
	ПолноеИмяДокумента = "Документ.СписаниеБезналичныхДенежныхСредств";
	
	Если ИмяРегистра = "ДенежныеСредстваКВыплате" Тогда
		
		ПереопределениеРасчетаПараметров.Вставить("Период", "
			|ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком
			|	ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата) = ДанныеДокумента.ДатаПроведенияБанком
			|	ИЛИ ДанныеДокумента.Исправление ТОГДА
			|		ДанныеДокумента.Дата
			|	ИНАЧЕ
			|		КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПроведенияБанком, ДЕНЬ)
			|КОНЕЦ");
			
		ПереопределениеРасчетаПараметров.Вставить("Получатель", "
			|ВЫБОР
			|	КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
			|		) ТОГДА
			|			ДанныеДокумента.ПодотчетноеЛицо
			|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
			|		ТОГДА
			|			ДанныеДокумента.БанковскийСчетПолучатель.Владелец
			|	ИНАЧЕ
			|		ДанныеДокумента.Контрагент
			|КОНЕЦ");
			
		ТекстЗапроса = ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ПереопределениеРасчетаПараметров.Вставить("Период", "
			|ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком
			|	ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата) = ДанныеДокумента.ДатаПроведенияБанком
			|	ИЛИ ДанныеДокумента.Исправление ТОГДА
			|		ДанныеДокумента.Дата
			|	ИНАЧЕ
			|		КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПроведенияБанком, ДЕНЬ)
			|КОНЕЦ");
		ПереопределениеРасчетаПараметров.Вставить("ПартнерИзДокумента", "
			|	ВЫБОР
			|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
			|		ТОГДА
			|			ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
			|		ИНАЧЕ
			|			ДанныеДокумента.Партнер
			|	КОНЕЦ");
		ПереопределениеРасчетаПараметров.Вставить("КонтрагентИзДокумента", "
			|	ВЫБОР
			|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
			|		ТОГДА
			|			ДанныеДокумента.БанковскийСчетПолучатель.Владелец
			|		ИНАЧЕ
			|			ДанныеДокумента.Контрагент
			|	КОНЕЦ");
		ПереопределениеРасчетаПараметров.Вставить("ВалютаДенежныхСредств", "
			|ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией
			|	ТОГДА
			|		ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств
			|	ИНАЧЕ
			|		ДанныеДокумента.Валюта
			|КОНЕЦ");
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Истина, ПереопределениеРасчетаПараметров);
	Иначе
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, ПереопределениеРасчетаПараметров, ТекстыЗапросаВременныхТаблиц);
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметровПроведения();
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств",
		ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ДатаНачалаПеречисленияЧерезПромежуточныйСчет", Дата('00010101'));
	
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьПодарочныйСертификат
	|ПОМЕСТИТЬ НаличиеВидаОбъектаРасчетовПодарочныйСертификат
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК РасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО (РасшифровкаПлатежа.ОбъектРасчетов = ОбъектыРасчетов.Ссылка)
	|ГДЕ
	|	ОбъектыРасчетов.Объект ССЫЛКА Справочник.ПодарочныеСертификаты
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком
	|		ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, ДЕНЬ) = ДанныеДокумента.ДатаПроведенияБанком
	|		ИЛИ ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	ДанныеДокумента.ПроведеноБанком                               КАК ПроведеноБанком,
	|	
	|	ДанныеДокумента.НомерВходящегоДокумента                       КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.Номер                                         КАК Номер,
	|	ДанныеДокумента.ДатаВходящегоДокумента                        КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Дата                                          КАК Дата,
	|	ДанныеДокумента.НазначениеПлатежа                             КАК НазначениеПлатежа,
	|	ДанныеДокумента.Валюта                                        КАК Валюта,
	|	ДанныеДокумента.ВалютаКонвертации                             КАК ВалютаКонвертации,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств           КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств      КАК РаспоряжениеНаПеремещениеДенежныхСредств,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредствВалюта     КАК ВалютаЗаявки,
	|	ДанныеДокумента.Организация                                   КАК Организация,
	|	ДанныеДокумента.ОрганизацияГоловнаяОрганизация                КАК ГоловнаяОрганизация,
	|	ДанныеДокумента.БанковскийСчетПолучательВладелец              КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.БанковскийСчет                                КАК БанковскийСчет,
	|	ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств           КАК ВалютаДенежныхСредств,
	|	ДанныеДокумента.ХозяйственнаяОперация                         КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств                 КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.СтатьяЦелевыхСредств                          КАК СтатьяЦелевыхСредств,
	|	ДанныеДокумента.Подразделение                                 КАК Подразделение,
	|	ДанныеДокумента.БанковскийСчетНаправлениеДеятельности         КАК НаправлениеДеятельностиДС,
	|	ДанныеДокумента.ОплатаПоЗаявкам                               КАК ОплатаПоЗаявкам,
	|	
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	
	|		КОГДА
	|			ЕСТЬNULL(НаличиеВидаПодарочныйСертификат.ЕстьПодарочныйСертификат, ЛОЖЬ)
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель)
	|	
	|	ИНАЧЕ
	|		ДанныеДокумента.Партнер
	|	КОНЕЦ                                                         КАК Партнер,
	|	
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА
	|			ДанныеДокумента.БанковскийСчетПолучательВладелец
	|	
	|		КОГДА
	|			ЕСТЬNULL(НаличиеВидаПодарочныйСертификат.ЕстьПодарочныйСертификат, ЛОЖЬ)
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|	
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент
	|	КОНЕЦ                                                         КАК Контрагент,
	|	ДанныеДокумента.СписокКонтрагентов                            КАК СписокКонтрагентов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ
	|			ДанныеДокумента.Партнер
	|	КОНЕЦ                                                         КАК ПартнерИзДокумента,
	|	
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА
	|			ДанныеДокумента.БанковскийСчетПолучательВладелец
	|		ИНАЧЕ
	|			ДанныеДокумента.Контрагент
	|	КОНЕЦ                                                         КАК КонтрагентИзДокумента,
	|	ДанныеДокумента.ПодотчетноеЛицо                               КАК ПодотчетноеЛицо,
	|	
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|		) ТОГДА
	|			ДанныеДокумента.ПодотчетноеЛицо
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА
	|			ДанныеДокумента.БанковскийСчетПолучательВладелец
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Получатель,
	|	
	|	ВЫРАЗИТЬ(ДанныеДокумента.Ссылка КАК Документ.СписаниеБезналичныхДенежныхСредств).РасшифровкаПлатежа.(ЗаявкаНаРасходованиеДенежныхСредств) КАК РасшифровкаПлатежа,
	|	
	|	ДанныеДокумента.СуммаДокумента          КАК СуммаДокумента,
	|	ДанныеДокумента.Договор                 КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Ответственный           КАК Ответственный,
	|	ДанныеДокумента.Автор                   КАК Автор,
	|	ДанныеДокумента.Комментарий             КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокумента.Исправление             КАК Исправление,
	|	ДанныеДокумента.СторнируемыйДокумент    КАК СторнируемыйДокумент,
	|	ДанныеДокумента.ИсправляемыйДокумент    КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ЕСТЬNULL(НаличиеВидаПодарочныйСертификат.ЕстьПодарочныйСертификат, ЛОЖЬ) КАК ЕстьПодарочныйСертификат,
	|	НастройкиХозяйственныхОпераций.Ссылка   КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.СписокФизЛиц            КАК СписокФизЛиц,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, ДЕНЬ) = ДанныеДокумента.ДатаПроведенияБанком
	|				ИЛИ ДанныеДокумента.Исправление
	|			ТОГДА ДанныеДокумента.Дата
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ >= &ДатаНачалаПеречисленияЧерезПромежуточныйСчет
	|	И &ДатаНачалаПеречисленияЧерезПромежуточныйСчет <> ДАТАВРЕМЯ(1, 1, 1) КАК ПеречислениеЧерезПереводыВПути,
	|	ДанныеДокумента.ПеречислениеСотрудникуЧерезБанк КАК ПеречислениеСотрудникуЧерезБанк,
	|	ДанныеДокумента.ПлатежСКонвертацией КАК ПлатежСКонвертацией,
	|	ДанныеДокумента.СуммаВВалютеОтправителя КАК СуммаВВалютеОтправителя,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредствКонвертация КАК СтатьяДвиженияДенежныхСредствКонвертация
	|ИЗ
	|	ДанныеДокументаШапка КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО ДанныеДокумента.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеВидаОбъектаРасчетовПодарочныйСертификат КАК НаличиеВидаПодарочныйСертификат
	|		ПО ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения(Реквизиты) Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ПолучитьДанныеДокумента(Запрос, ДокументСсылка)

	СписокЗапросов = Новый Массив;
	
	ТекстЗапросаДанныеДокументаШапка(СписокЗапросов);
	ТекстЗапросаДанныеДокументаТаблицаРасшифровкаПлатежа(СписокЗапросов);
	ТекстЗапросаДанныеДокументаТаблицаЛицевыеСчетаСотрудников(СписокЗапросов);
	ТекстЗапросаРасшифровкаПлатежаВВалютеПлательщика(СписокЗапросов);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	СуммыРасшифровкиВВалютеПлательщика = ПолучитьТаблицуРасшифровкиВВалютеПлательщика(ДокументСсылка);
	Запрос.УстановитьПараметр("СуммыРасшифровкиВВалютеПлательщика", СуммыРасшифровкиВВалютеПлательщика);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ТекстЗапросаДанныеДокументаШапка(СписокЗапросов)
	
	ТекстЗапросаШапка = "ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОчередностьПлатежа КАК ОчередностьПлатежа,
	|	ДанныеДокумента.БанковскийСчетПолучатель КАК БанковскийСчетПолучатель,
	|	ДанныеДокумента.КассаПолучатель КАК КассаПолучатель,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств КАК РаспоряжениеНаПеремещениеДенежныхСредств,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.ПеречислениеВБюджет КАК ПеречислениеВБюджет,
	|	ДанныеДокумента.ВидПеречисленияВБюджет КАК ВидПеречисленияВБюджет,
	|	ДанныеДокумента.СтатусСоставителя КАК СтатусСоставителя,
	|	ДанныеДокумента.ПоказательТипа КАК ПоказательТипа,
	|	ДанныеДокумента.КодБК КАК КодБК,
	|	ДанныеДокумента.КодОКАТО КАК КодОКАТО,
	|	ДанныеДокумента.ПоказательОснования КАК ПоказательОснования,
	|	ДанныеДокумента.ПоказательПериода КАК ПоказательПериода,
	|	ДанныеДокумента.ПоказательНомера КАК ПоказательНомера,
	|	ДанныеДокумента.ПоказательДаты КАК ПоказательДаты,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.НеКонтролироватьЗаполнениеЗаявки КАК НеКонтролироватьЗаполнениеЗаявки,
	|	ДанныеДокумента.ВидПлатежа КАК ВидПлатежа,
	|	ДанныеДокумента.ТипПлатежногоДокумента КАК ТипПлатежногоДокумента,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаКонвертации КАК ВалютаКонвертации,
	|	ДанныеДокумента.КурсКонвертации КАК КурсКонвертации,
	|	ДанныеДокумента.СуммаКонвертации КАК СуммаКонвертации,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.НомерВедомостиНаВыплатуЗарплаты КАК НомерВедомостиНаВыплатуЗарплаты,
	|	ДанныеДокумента.ДатаВедомостиНаВыплатуЗарплаты КАК ДатаВедомостиНаВыплатуЗарплаты,
	|	ДанныеДокумента.ОплатаПоЗаявкам КАК ОплатаПоЗаявкам,
	|	ДанныеДокумента.ИдентификаторПлатежа КАК ИдентификаторПлатежа,
	|	ДанныеДокумента.ПроводкиПоРаботникам КАК ПроводкиПоРаботникам,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ДанныеДокумента.ПроведеноБанком КАК ПроведеноБанком,
	|	ДанныеДокумента.ДатаПроведенияБанком КАК ДатаПроведенияБанком,
	|	ДанныеДокумента.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДанныеДокумента.ДатаВыгрузки КАК ДатаВыгрузки,
	|	ДанныеДокумента.ДатаЗагрузки КАК ДатаЗагрузки,
	|	ДанныеДокумента.ОшибкиЗагрузки КАК ОшибкиЗагрузки,
	|	ДанныеДокумента.ФорматированноеНазначениеПлатежа КАК ФорматированноеНазначениеПлатежа,
	|	ДанныеДокумента.ДанныеВыписки КАК ДанныеВыписки,
	|	ДанныеДокумента.ИмяКонтрагента КАК ИмяКонтрагента,
	|	ДанныеДокумента.ДатаАвансовогоОтчета КАК ДатаАвансовогоОтчета,
	|	ДанныеДокумента.ПлатежиПо275ФЗ КАК ПлатежиПо275ФЗ,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.ДоговорСУчастникомГОЗ КАК ДоговорСУчастникомГОЗ,
	|	ДанныеДокумента.ДоговорСЗаказчиком КАК ДоговорСЗаказчиком,
	|	ДанныеДокумента.ТипНалога КАК ТипНалога,
	|	ДанныеДокумента.НДФЛПоВедомостям КАК НДФЛПоВедомостям,
	|	ДанныеДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ИННПлательщика КАК ИННПлательщика,
	|	ДанныеДокумента.КПППлательщика КАК КПППлательщика,
	|	ДанныеДокумента.ТекстПлательщика КАК ТекстПлательщика,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.ТипКомиссииЗаПеревод КАК ТипКомиссииЗаПеревод,
	|	ДанныеДокумента.КодВалютнойОперации КАК КодВалютнойОперации,
	|	ДанныеДокумента.ИнформацияДляВалютногоКонтроля КАК ИнформацияДляВалютногоКонтроля,
	|	ДанныеДокумента.ИнформацияПолучателюПлатежа КАК ИнформацияПолучателюПлатежа,
	|	ДанныеДокумента.ИнформацияДляРегулирующихОрганов КАК ИнформацияДляРегулирующихОрганов,
	|	ДанныеДокумента.УсловиеСделкиКонвертации КАК УсловиеСделкиКонвертации,
	|	ДанныеДокумента.БанковскийСчетСписанияКомиссии КАК БанковскийСчетСписанияКомиссии,
	|	ДанныеДокумента.УведомлениеОЗачисленииВалюты КАК УведомлениеОЗачисленииВалюты,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.КратностьКурсаКонвертации КАК КратностьКурсаКонвертации,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторДокумента,
	|	ДанныеДокумента.КодВидаДохода КАК КодВидаДохода,
	|	ДанныеДокумента.Автор КАК Автор,
	|	ДанныеДокумента.ДоговорЭквайринга КАК ДоговорЭквайринга,
	|	ДанныеДокумента.ОтражатьКомиссию КАК ОтражатьКомиссию,
	|	ДанныеДокумента.СуммаКомиссии КАК СуммаКомиссии,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ДанныеДокумента.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|	ДанныеДокумента.КодВыплат КАК КодВыплат,
	|	ДанныеДокумента.Исправление КАК Исправление,
	|	ДанныеДокумента.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	ДанныеДокумента.ИсправляемыйДокумент КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.ПеречислениеСотрудникуЧерезБанк КАК ПеречислениеСотрудникуЧерезБанк,
	|	ДанныеДокумента.ПериодРегистрации КАК ПериодРегистрации,
	|	ДанныеДокумента.СписокФизЛиц КАК СписокФизЛиц,
	|	ДанныеДокумента.ДатаВыгрузкиРеестра КАК ДатаВыгрузкиРеестра,
	|	ДанныеДокумента.НомерДоговораСБанком КАК НомерДоговораСБанком,
	|	ДанныеДокумента.ДатаДоговораСБанком КАК ДатаДоговораСБанком,
	|	ДанныеДокумента.ОтделениеБанка КАК ОтделениеБанка,
	|	ДанныеДокумента.ФилиалОтделенияБанка КАК ФилиалОтделенияБанка,
	|	ДанныеДокумента.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
	|	ДанныеДокумента.СписокКонтрагентов КАК СписокКонтрагентов,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств.Валюта КАК ЗаявкаНаРасходованиеДенежныхСредствВалюта,
	|	ДанныеДокумента.Организация.ГоловнаяОрганизация КАК ОрганизацияГоловнаяОрганизация,
	|	ДанныеДокумента.БанковскийСчетПолучатель.Владелец КАК БанковскийСчетПолучательВладелец,
	|	ДанныеДокумента.БанковскийСчет.НаправлениеДеятельности КАК БанковскийСчетНаправлениеДеятельности,
	|	ДанныеДокумента.БанковскийСчет.РазрешитьПлатежиБезУказанияЗаявок КАК БанковскийСчетРазрешитьПлатежиБезУказанияЗаявок,
	|	ДанныеДокумента.БанковскийСчет.Подразделение КАК БанковскийСчетПодразделение,
	|	ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК БанковскийСчетВалютаДенежныхСредств,
	|	ДанныеДокумента.Контрагент.Партнер КАК КонтрагентПартнер,
	|	ДанныеДокумента.ДоговорЭквайринга.НаправлениеДеятельности КАК ДоговорЭквайрингаНаправлениеДеятельности,
	|	ДанныеДокумента.ДоговорЭквайринга.СтатьяДвиженияДенежныхСредствКомиссия КАК
	|		ДоговорЭквайрингаСтатьяДвиженияДенежныхСредствКомиссия,
	|	ДанныеДокумента.БанковскийСчетПолучатель.НаправлениеДеятельности КАК БанковскийСчетПолучательНаправлениеДеятельности,
	|	ДанныеДокумента.ПлатежСКонвертацией КАК ПлатежСКонвертацией,
	|	ДанныеДокумента.СуммаВВалютеОтправителя КАК СуммаВВалютеОтправителя,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредствКонвертация КАК СтатьяДвиженияДенежныхСредствКонвертация
	|ПОМЕСТИТЬ ДанныеДокументаШапка
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	СписокЗапросов.Добавить(ТекстЗапросаШапка);
	
КонецПроцедуры

Процедура ТекстЗапросаДанныеДокументаТаблицаРасшифровкаПлатежа(СписокЗапросов)
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Ссылка КАК Ссылка,
	|	ТаблицаРасшифровкаПлатежа.Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.Комментарий КАК Комментарий,
	|	ТаблицаРасшифровкаПлатежа.ДоговорАренды КАК ДоговорАренды,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоАренде КАК ТипПлатежаПоАренде,
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику КАК ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита КАК ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.ДоговорСЗаказчиком КАК ДоговорСЗаказчиком,
	|	ТаблицаРасшифровкаПлатежа.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|	ТаблицаРасшифровкаПлатежа.Ведомость КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаРасшифровкаПлатежа.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|	ТаблицаРасшифровкаПлатежа.КурсЧислительВзаиморасчетов КАК КурсЧислительВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.КурсЗнаменательВзаиморасчетов КАК КурсЗнаменательВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
	|	ТаблицаРасшифровкаПлатежа.ДатаПогашения КАК ДатаПогашения,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Организация КАК ОбъектРасчетовОрганизация,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Партнер КАК ОбъектРасчетовПартнер,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Договор КАК ОбъектРасчетовДоговор,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Контрагент КАК ОбъектРасчетовКонтрагент, 
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НалогообложениеНДС КАК ОбъектРасчетовНалогообложениеНДС,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Подразделение КАК ОбъектРасчетовПодразделение,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности КАК ОбъектРасчетовНаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Объект КАК ОбъектРасчетовОбъект,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|			ТОГДА
	|				ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ
	|			ТаблицаРасшифровкаПлатежа.Партнер
	|	КОНЕЦ КАК ОбъектРасчетовПлатежПартнер,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств.КонтролироватьОплатуПоОбъектамРасчетов КАК
	|		ЗаявкаНаРасходованиеДенежныхСредствКонтролироватьОплатуПоОбъектамРасчетов,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств.Валюта КАК ЗаявкаНаРасходованиеДенежныхСредствВалюта
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаДанныеДокументаТаблицаЛицевыеСчетаСотрудников(СписокЗапросов)
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТаблицаЛицевыеСчетаСотрудников.НомерСтроки КАК НомерСтроки,
	|	ТаблицаЛицевыеСчетаСотрудников.Ссылка КАК Ссылка,
	|	ТаблицаЛицевыеСчетаСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаЛицевыеСчетаСотрудников.ЛицевойСчет КАК ЛицевойСчет,
	|	ТаблицаЛицевыеСчетаСотрудников.Сумма КАК Сумма,
	|	ТаблицаЛицевыеСчетаСотрудников.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаЛицевыеСчетаСотрудников.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаЛицевыеСчетаСотрудников
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.ЛицевыеСчетаСотрудников КАК ТаблицаЛицевыеСчетаСотрудников
	|ГДЕ
	|	ТаблицаЛицевыеСчетаСотрудников.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Функция ПолучитьТаблицуРасшифровкиВВалютеПлательщика(Ссылка)

	ЗапросРаспределения = Новый Запрос;
	ЗапросРаспределения.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, ДЕНЬ) = ДанныеДокумента.ДатаПроведенияБанком
	|				ИЛИ ДанныеДокумента.Исправление
	|			ТОГДА ДанныеДокумента.Дата
	|		ИНАЧЕ ДанныеДокумента.ДатаПроведенияБанком
	|	КОНЕЦ КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ПлатежСКонвертацией
	|	И ДанныеДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокумента.Сумма КАК Сумма,
	|	ДанныеДокумента.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка.ПлатежСКонвертацией
	|	И ДанныеДокумента.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ЗапросРаспределения.УстановитьПараметр("Ссылка", Ссылка);
	МассивЗапросов = ЗапросРаспределения.ВыполнитьПакет();
	ВыборкаШапки = МассивЗапросов[МассивЗапросов.ВГраница() - 1].Выбрать();
	ТаблицаРасшифровкиПоДокументу = МассивЗапросов[МассивЗапросов.ВГраница()].Выгрузить();
	
	Если ВыборкаШапки.Следующий() Тогда
		
		СуммаИтог = ТаблицаРасшифровкиПоДокументу.Итог("Сумма");
		СуммаНДСИтог = ТаблицаРасшифровкиПоДокументу.Итог("СуммаНДС");
		
		Если СуммаИтог = 0 Тогда
			Возврат ТаблицаРасшифровкиПоДокументу;
		КонецЕсли;
		
		КоэффициентыСуммы = Новый Массив;
		КоэффициентыСуммыНДС = Новый Массив;
		
		Для Каждого СтрокаТаблицы Из ТаблицаРасшифровкиПоДокументу Цикл
				
			Если СуммаИтог <> 0 Тогда
				КоэффициентыСуммы.Добавить(СтрокаТаблицы.Сумма / СуммаИтог);
			КонецЕсли;
			
			Если СуммаНДСИтог <> 0 Тогда
				КоэффициентыСуммыНДС.Добавить(СтрокаТаблицы.СуммаНДС / СуммаНДСИтог);
			КонецЕсли;
			
		КонецЦикла;
		
		Если КоэффициентыСуммы.Количество() = 0 Тогда
			КоэффициентыСуммы.Добавить(1);
		КонецЕсли;
		
		Если КоэффициентыСуммыНДС.Количество() = 0 Тогда
			КоэффициентыСуммыНДС.Добавить(1);
		КонецЕсли;
		
		КоэффициентыПересчета = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			ВыборкаШапки.Валюта,
			ВыборкаШапки.ВалютаДенежныхСредств,
			ВыборкаШапки.Дата,
			ВыборкаШапки.Организация);
		СписокСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			Окр(СуммаИтог * КоэффициентыПересчета.КоэффициентПересчетаВВалютуВзаиморасчетов, 2), КоэффициентыСуммы);
		СписокСуммНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			Окр(СуммаНДСИтог * КоэффициентыПересчета.КоэффициентПересчетаВВалютуВзаиморасчетов, 2), КоэффициентыСуммыНДС);
	
		ВсегоСтрок = ТаблицаРасшифровкиПоДокументу.Количество();
		
		НомерСтроки = 1;
	
		Пока НомерСтроки <= ВсегоСтрок Цикл
			
			Отбор = Новый Структура;
			Отбор.Вставить("НомерСтроки", НомерСтроки);
			СтрокиТаблицы = ТаблицаРасшифровкиПоДокументу.НайтиСтроки(Отбор);
		
			Если СписокСумм <> Неопределено Тогда 
				СтрокиТаблицы[0].Сумма = СписокСумм[НомерСтроки - 1];
			КонецЕсли;
			
			Если СписокСуммНДС <> Неопределено Тогда
				СтрокиТаблицы[0].СуммаНДС = СписокСуммНДС[НомерСтроки - 1];
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат ТаблицаРасшифровкиПоДокументу;

КонецФункции

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	Значения = Новый Структура;
	Значения.Вставить("ИдентификаторМетаданных",                         ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СписаниеБезналичныхДенежныхСредств"));
	Значения.Вставить("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств", ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	Значения.Вставить("ИспользоватьУчетПрочихДоходовРасходов",           ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Значения.Вставить("КонтролироватьВыдачуПодОтчетВРазрезеЦелей",       ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	Значения.Вставить("ИспользоватьНачислениеЗарплаты",                  Константы.ИспользоватьНачислениеЗарплаты.Получить());
	Значения.Вставить("ИспользоватьЛимитыРасходаДенежныхСредств",        ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредств"));
	Значения.Вставить("ИспользоватьЛимитыРасходаПоОрганизациям",         ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям"));
	Значения.Вставить("ИспользоватьЛимитыРасходаПоПодразделениям",       ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям"));
	Значения.Вставить("ИспользоватьУчетПрочихАктивовПассивов",           ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	Значения.Вставить("ИдентификаторНеиспользуемойФинЗаписи",            ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	Значения.Вставить("ВалютаУправленческогоУчета",                      Константы.ВалютаУправленческогоУчета.Получить());
	
	Если Реквизиты <> Неопределено Тогда
		
		Значения.Вставить("СтатьяДвиженияДенежныхСредств",                         СтатьяДвиженияДенежныхСредствДокумента(Реквизиты));
		
		МассивЗаявок = Реквизиты.РасшифровкаПлатежа.Выгрузить().ВыгрузитьКолонку("ЗаявкаНаРасходованиеДенежныхСредств"); // Массив
		МассивЗаявок.Добавить(Реквизиты.ЗаявкаНаРасходованиеДенежныхСредств);
		МассивЗаявок.Добавить(Реквизиты.РаспоряжениеНаПеремещениеДенежныхСредств);
		Значения.Вставить("МассивЗаявок",                                МассивЗаявок);
		
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.Валюта,
			Реквизиты.ВалютаДенежныхСредств,
			Реквизиты.Период,
			Реквизиты.Организация);
			
		КоэффициентыКонвертации = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.ВалютаКонвертации,
			Реквизиты.Валюта,
			Реквизиты.Период,
			Реквизиты.Организация);
			
		КоэффициентыДенежныхСредств = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.ВалютаДенежныхСредств,
			Неопределено,
			Реквизиты.Период,
			Реквизиты.Организация);
			
		Значения.Вставить("КоэффициентПересчетаВВалютуУпр",              Коэффициенты.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаВВалютуРегл",             Коэффициенты.КоэффициентПересчетаВВалютуРегл);
		Значения.Вставить("КоэффициентПересчетаВВалютуДенежныхСредств",  Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов);
		
		Значения.Вставить("КоэффициентПересчетаКонвертацииВВалютуУпр",   КоэффициентыКонвертации.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаКонвертацииВВалютуРегл",  КоэффициентыКонвертации.КоэффициентПересчетаВВалютуРегл);
		Значения.Вставить("КоэффициентПересчетаВВалютуКонвертации",      КоэффициентыКонвертации.КоэффициентПересчетаВВалютуВзаиморасчетов);
		
		Значения.Вставить("КоэффициентПересчетаДенежныхСредствВВалютуУпр", КоэффициентыДенежныхСредств.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаДенежныхСредствВВалютуРегл", КоэффициентыДенежныхСредств.КоэффициентПересчетаВВалютуРегл);
		
		Значения.Вставить("НомерНаПечать",                               ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		
		Значения.Вставить("ВалютаРегламентированногоУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация));
		
	КонецЕсли;
	
	Возврат Значения;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос, ТекстыЗапроса = Неопределено, ДокументОбъект = Неопределено)

	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартнеровИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПоАналитикам = Новый Запрос;
	ЗапросПоАналитикам.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросПоАналитикам.Текст ="";
	Если НЕ (ЗапросПоАналитикам.МенеджерВременныхТаблиц <> Неопределено 
		И ЗапросПоАналитикам.МенеджерВременныхТаблиц.Таблицы.Найти("ВтТаблицаОбъектовРасчетов") <> Неопределено) Тогда
		
		ЗапросПоАналитикам.Текст = ТекстЗапросаВременнаяТаблицаОбъектовРасчета(ЗапросПоАналитикам, Новый СписокЗначений, ДокументОбъект);
		ЗапросПоАналитикам.Текст = ЗапросПоАналитикам.Текст + "
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	ЗапросПоАналитикам.Текст = СтрЗаменить(ЗапросПоАналитикам.Текст, "ПОМЕСТИТЬ ТаблицаОбъектовРасчетов", "ПОМЕСТИТЬ ВтТаблицаОбъектовРасчетов");
	
	ТекстЗапросаПоАналитикам = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ВЫБОР КОГДА &СписокКонтрагентов
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Контрагент
	|		ИНАЧЕ &Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	ВЫБОР КОГДА &СписокКонтрагентов
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Контрагент
	|		ИНАЧЕ &Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И ТаблицаОбъектовРасчетов.Организация <> &Организация
	|	И ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|		И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыРасчетов.Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Партнер КАК Партнер,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаОбъектовРасчетов КАК ОбъектыРасчетов
	|	ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ОбъектыРасчетов.ОбъектРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ОбъектыРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ОбъектыРасчетов.Партнер = Аналитика.Партнер
	|		И ОбъектыРасчетов.Договор = Аналитика.Договор
	|		И ОбъектыРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	&Партнер КАК Партнер,
	|	&Договор КАК Договор,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ДанныеДокументаШапка КАК ТаблицаПлатеж
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация= Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаПлатеж.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|		)";
	
	Если ДокументОбъект = Неопределено Тогда
		ТекстЗапросаПоАналитикам = СтрЗаменить(ТекстЗапросаПоАналитикам, "ДанныеДокументаТаблицаРасшифровкаПлатежа", "Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа");
		ТекстЗапросаПоАналитикам = СтрЗаменить(ТекстЗапросаПоАналитикам, "ДанныеДокументаШапка", "Документ.СписаниеБезналичныхДенежныхСредств");
	КонецЕсли;
	
	ЗапросПоАналитикам.Текст = ЗапросПоАналитикам.Текст + ТекстЗапросаПоАналитикам;

	ЗапросПоАналитикам.УстановитьПараметр("Ссылка",                              Запрос.Параметры.Ссылка);
	ЗапросПоАналитикам.УстановитьПараметр("Организация",                         Запрос.Параметры.Организация);
	ЗапросПоАналитикам.УстановитьПараметр("Контрагент",                          Запрос.Параметры.Контрагент);
	ЗапросПоАналитикам.УстановитьПараметр("Партнер",                             Запрос.Параметры.Партнер);
	ЗапросПоАналитикам.УстановитьПараметр("НаправлениеДеятельности",             Запрос.Параметры.НаправлениеДеятельности);
	ЗапросПоАналитикам.УстановитьПараметр("ПроведеноБанком",                     Запрос.Параметры.ПроведеноБанком);
	ЗапросПоАналитикам.УстановитьПараметр("ХозяйственнаяОперация",               Запрос.Параметры.ХозяйственнаяОперация);
	ЗапросПоАналитикам.УстановитьПараметр("ЗаявкаНаРасходованиеДенежныхСредств", Запрос.Параметры.ЗаявкаНаРасходованиеДенежныхСредств);
	ЗапросПоАналитикам.УстановитьПараметр("СписокКонтрагентов",                  Запрос.Параметры.СписокКонтрагентов);
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Договор) Тогда
		ЗапросПоАналитикам.УстановитьПараметр("Договор",                         Запрос.Параметры.Договор);
	ИначеЕсли НЕ ЗначениеЗаполнено(Запрос.Параметры.Договор)
			И Запрос.Параметры.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию") Тогда
		ЗапросПоАналитикам.УстановитьПараметр("Договор",                         Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка());
	Иначе
		ЗапросПоАналитикам.УстановитьПараметр("Договор",                         Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;

	Выборка = ЗапросПоАналитикам.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Если Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику Тогда
		
		СтруктураАналитики = Новый Структура;
		СтруктураАналитики.Вставить("Организация", Запрос.Параметры.Организация);
		СтруктураАналитики.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
		СтруктураАналитики.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
		СтруктураАналитики.Вставить("Договор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		СтруктураАналитики.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
		
		АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
		АналитикаУчетаПоПартнерамПолучатель = Неопределено;
	Иначе
		
		АналитикаУчетаПоПартнерам = Неопределено;
		АналитикаУчетаПоПартнерамПолучатель = Неопределено;
	КонецЕсли;
	
	Если ВзаиморасчетыСервер.ХозяйственнаяОперацияВозвратДенежныхСредств(Запрос.Параметры.ХозяйственнаяОперация) Тогда
		АналитикаУчетаПоПартнерамОбъектРасчетов = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(ЗапросПоАналитикам.Параметры);
	Иначе
		АналитикаУчетаПоПартнерамОбъектРасчетов = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам",                    АналитикаУчетаПоПартнерам);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамПолучатель",          АналитикаУчетаПоПартнерамПолучатель);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамОбъектРасчетов",      АналитикаУчетаПоПартнерамОбъектРасчетов);
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПартнеровИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса, ДокументОбъект = Неопределено) Экспорт
	
	ИмяВременнойТаблицы = "ТаблицаОбъектовРасчетов";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов   КАК ОбъектРасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетовОрганизация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетовПартнер КАК Партнер,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетовКонтрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетовДоговор КАК Договор,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетовНалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетовПодразделение КАК Подразделение,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|				И ЕСТЬNULL(Направления.УчетДоходов, ЛОЖЬ)
	|			ИЛИ НЕ &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|				И ЕСТЬNULL(Направления.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|		ТОГДА
	|			ТаблицаРасшифровкаПлатежа.ОбъектРасчетовНаправлениеДеятельности
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК Направления
	|	ПО ТаблицаРасшифровкаПлатежа.ОбъектРасчетовНаправлениеДеятельности = Направления.Ссылка
	|	
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И ТаблицаРасшифровкаПлатежа.ОбъектРасчетов <> ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|	И НЕ &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов
	|";
	
	Если ДокументОбъект = Неопределено Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаТаблицаРасшифровкаПлатежа", "Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаРасшифровкаПлатежа.ОбъектРасчетовОрганизация", "ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Организация");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаРасшифровкаПлатежа.ОбъектРасчетовПартнер", "ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Партнер");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаРасшифровкаПлатежа.ОбъектРасчетовДоговор", "ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Договор");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаРасшифровкаПлатежа.ОбъектРасчетовКонтрагент", "ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Контрагент");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаРасшифровкаПлатежа.ОбъектРасчетовНалогообложениеНДС", "ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НалогообложениеНДС");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаРасшифровкаПлатежа.ОбъектРасчетовПодразделение", "ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Подразделение");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаРасшифровкаПлатежа.ОбъектРасчетовНаправлениеДеятельности", "ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности");
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект = Неопределено) Экспорт
	
	ИмяВременнойТаблицы = "ТаблицаРасшифровкаПлатежа";
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос, ТекстыЗапроса, ДокументОбъект);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаОбъектовРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ВЫБОР
	|		КОГДА &ЕстьПодарочныйСертификат = ИСТИНА
	|			ТОГДА &Партнер
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.Партнер
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &СписокКонтрагентов
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Контрагент
	|		ИНАЧЕ &Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.Договор, Неопределено) КАК Договор,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|			ТОГДА ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаОбъектовРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СтатьяРасходов
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет))
	|		ТОГДА
	|			ВЫБОР КОГДА &ИспользоватьУчетПрочихАктивовПассивов ТОГДА
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ИНАЧЕ
	|				НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		ТОГДА ТаблицаРасшифровкаПлатежа.АналитикаРасходов 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		ТОГДА ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов 
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет))
	|		ТОГДА
	|			ДанныеДокумента.ТипНалога
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику))
	|		ТОГДА
	|			&ПодотчетноеЛицо
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК АналитикаАктивовПассивов,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Подразделение 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК Подразделение,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеЗаказа,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаДенежныхСредств
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ
	|			ЕСТЬNULL(РасшифровкаВВалютеПлательщика.Сумма, ТаблицаРасшифровкаПлатежа.Сумма)
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорАренды,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоАренде КАК ТипПлатежаПоАренде,
	|	ВЫБОР 
	|		КОГДА &СписокФизЛиц
	|				И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА &СтатьяДвиженияДенежныхСредств
	|		КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику))
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	ИНАЧЕ
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику))
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств
	|	ИНАЧЕ
	|		&СтатьяЦелевыхСредств
	|	КОНЕЦ КАК СтатьяЦелевыхСредств,
	|	ТаблицаРасшифровкаПлатежа.Ведомость КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.Сумма, ТаблицаРасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаДенежныхСредствВВалютуУпр КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.Сумма, ТаблицаРасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаДенежныхСредствВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ЕСТЬNULL(РасшифровкаВВалютеПлательщика.СуммаНДС, ТаблицаРасшифровкаПлатежа.СуммаНДС)
	|	ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.СуммаНДС, ТаблицаРасшифровкаПлатежа.СуммаНДС) * &КоэффициентПересчетаДенежныхСредствВВалютуУпр КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.СуммаНДС, ТаблицаРасшифровкаПлатежа.СуммаНДС) * &КоэффициентПересчетаДенежныхСредствВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ ТаблицаРасшифровкаПлатежа
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК ДанныеДокумента
	|		ПО ТаблицаРасшифровкаПлатежа.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|		И ТаблицаРасшифровкаПлатежа.Партнер = ТаблицаОбъектовРасчетов.Партнер
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И ТаблицаОбъектовРасчетов.Контрагент = Аналитика.Контрагент
	|		И ВЫБОР КОГДА &ЕстьПодарочныйСертификат = ИСТИНА
	|			ТОГДА &Партнер
	|			ИНАЧЕ ТаблицаРасшифровкаПлатежа.Партнер
	|		КОНЕЦ = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаПлатежаВВалютеПлательщика КАК РасшифровкаВВалютеПлательщика
	|		ПО ТаблицаРасшифровкаПлатежа.Ссылка = РасшифровкаВВалютеПлательщика.Ссылка
	|			И ТаблицаРасшифровкаПлатежа.НомерСтроки = РасшифровкаВВалютеПлательщика.НомерСтроки
	|
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаАрендодателю)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ВЫБОР
	|		КОГДА ТаблицаРасшифровкаПлатежа.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) ТОГДА
	|			ТаблицаРасшифровкаПлатежа.Партнер
	|		ИНАЧЕ
	|			ДанныеДокумента.КонтрагентПартнер
	|	КОНЕЦ КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеЗаказа,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаДенежныхСредств
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ
	|			ЕСТЬNULL(РасшифровкаВВалютеПлательщика.Сумма, ТаблицаРасшифровкаПлатежа.Сумма)
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО КАК ТипПлатежаПоАренде,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
	|	НЕОПРЕДЕЛЕНО КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.Сумма, ТаблицаРасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаДенежныхСредствВВалютуУпр КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.Сумма, ТаблицаРасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаДенежныхСредствВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ЕСТЬNULL(РасшифровкаВВалютеПлательщика.СуммаНДС, ТаблицаРасшифровкаПлатежа.СуммаНДС)
	|	ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.СуммаНДС, ТаблицаРасшифровкаПлатежа.СуммаНДС) * &КоэффициентПересчетаДенежныхСредствВВалютуУпр КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.СуммаНДС, ТаблицаРасшифровкаПлатежа.СуммаНДС) * &КоэффициентПересчетаДенежныхСредствВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК ДанныеДокумента
	|		ПО ТаблицаРасшифровкаПлатежа.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ВЫБОР
	|			КОГДА ТаблицаРасшифровкаПлатежа.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) ТОГДА
	|				ТаблицаРасшифровкаПлатежа.Партнер
	|			ИНАЧЕ
	|				ДанныеДокумента.КонтрагентПартнер
	|		КОНЕЦ = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|		И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаПлатежаВВалютеПлательщика КАК РасшифровкаВВалютеПлательщика
	|		ПО ТаблицаРасшифровкаПлатежа.Ссылка = РасшифровкаВВалютеПлательщика.Ссылка
	|			И ТаблицаРасшифровкаПлатежа.НомерСтроки = РасшифровкаВВалютеПлательщика.НомерСтроки
	|
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ТаблицаОбъектовРасчетов.Подразделение КАК ПодразделениеЗаказа,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаДенежныхСредств
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ
	|			ЕСТЬNULL(РасшифровкаВВалютеПлательщика.Сумма, ТаблицаРасшифровкаПлатежа.Сумма)
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорАренды,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоАренде КАК ТипПлатежаПоАренде,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
	|	НЕОПРЕДЕЛЕНО КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.Сумма, ТаблицаРасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаДенежныхСредствВВалютуУпр КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.Сумма, ТаблицаРасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаДенежныхСредствВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ЕСТЬNULL(РасшифровкаВВалютеПлательщика.СуммаНДС, ТаблицаРасшифровкаПлатежа.СуммаНДС)
	|	ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.СуммаНДС, ТаблицаРасшифровкаПлатежа.СуммаНДС) * &КоэффициентПересчетаДенежныхСредствВВалютуУпр КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|			ВЫРАЗИТЬ(ЕСТЬNULL(РасшифровкаВВалютеПлательщика.СуммаНДС, ТаблицаРасшифровкаПлатежа.СуммаНДС) * &КоэффициентПересчетаДенежныхСредствВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ТаблицаОбъектовРасчетов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК ДанныеДокумента
	|		ПО ТаблицаРасшифровкаПлатежа.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = ТаблицаОбъектовРасчетов.Партнер
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаОбъектовРасчетов.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаПлатежаВВалютеПлательщика КАК РасшифровкаВВалютеПлательщика
	|		ПО ТаблицаРасшифровкаПлатежа.Ссылка = РасшифровкаВВалютеПлательщика.Ссылка
	|			И ТаблицаРасшифровкаПлатежа.НомерСтроки = РасшифровкаВВалютеПлательщика.НомерСтроки
	|
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	Списание.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	Списание.Подразделение,
	|	Списание.Подразделение,
	|	Списание.СуммаДокумента,
	|	Списание.СуммаДокумента,
	|	Списание.Валюта,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	Списание.СтатьяДвиженияДенежныхСредств,
	|	Списание.СтатьяЦелевыхСредств,
	|	НЕОПРЕДЕЛЕНО,
	|	Списание.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ВЫРАЗИТЬ(Списание.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)),
	|	ВЫРАЗИТЬ(Списание.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)),
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	0,
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	&АналитикаУчетаПоПартнерам,
	|
	|	Списание.ИдентификаторДокумента КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ДанныеДокументаШапка КАК Списание
	|ГДЕ
	|	Списание.Ссылка = &Ссылка
	|	И Списание.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|	                                    ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|	                                    ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета))
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|";
	
	Если ДокументОбъект = Неопределено Тогда
		
		Если Запрос.МенеджерВременныхТаблиц = Неопределено Тогда
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
		КонецЕсли;
		
		Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ДанныеДокументаТаблицаРасшифровкаПлатежа") = Неопределено 
			Или Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ДанныеДокументаШапка") = Неопределено
			Или Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("РасшифровкаПлатежаВВалютеПлательщика") = Неопределено Тогда
			ПолучитьДанныеДокумента(Запрос, Запрос.Параметры.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаЛицевыеСчетаСотрудников(Запрос, ТекстыЗапроса, ДокументОбъект = Неопределено) Экспорт
	
	ИмяВременнойТаблицы = "ТаблицаЛицевыеСчетаСотрудников";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеДокумента.ЛицевойСчет КАК ЛицевойСчет,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ДанныеДокумента.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ДанныеДокумента.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл
	|ПОМЕСТИТЬ ТаблицаЛицевыеСчетаСотрудников
	|ИЗ
	|	ДанныеДокументаТаблицаЛицевыеСчетаСотрудников КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Если ДокументОбъект = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаТаблицаЛицевыеСчетаСотрудников", "Документ.СписаниеБезналичныхДенежныхСредств.ЛицевыеСчетаСотрудников");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецФункции

Функция ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса, ДокументОбъект = Неопределено) Экспорт
	
	ИмяРегистра = "ТаблицаКурсовыхРазниц";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.БанковскийСчет.Подразделение КАК Подразделение,
	|	ДанныеДокумента.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаДенежныхСредств) КАК ХозяйственнаяОперация,
	|
	|	СУММА(ТаблицаРасшифровкаПлатежа.Сумма)
	|		- ДанныеДокумента.СуммаВВалютеОтправителя КАК Сумма,
	|
	|	СУММА(ТаблицаРасшифровкаПлатежа.СуммаУпр)
	|		- ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуУпр КАК СуммаУпр,
	|	
	|	СУММА(ТаблицаРасшифровкаПлатежа.СуммаРегл)
	|		- ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуРегл КАК СуммаРегл,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторДокумента
	|
	|ПОМЕСТИТЬ ТаблицаКурсовыхРазниц
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа
	|	ПО ИСТИНА
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ПлатежСКонвертацией
	|	И &ПроведеноБанком
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ДенежныеСредстваБезналичные";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	МассивТекстовЗапроса = Новый Массив;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
		И НЕ ДокументОбъект.СписокФизЛиц Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	КОНЕЦ КАК ВидДвижения,
		|	&Период                                                                     КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                 КАК Организация,
		|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.Сумма
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК Сумма,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.СуммаУпр
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуУпр
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаУпр,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.СуммаРегл
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуРегл
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаРегл,
		|	
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.Сумма
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией
		|			И ДанныеДокумента.СуммаВВалютеОтправителя = 0 ТОГДА
		|			ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуДенежныхСредств
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией
		|			И ДанныеДокумента.СуммаВВалютеОтправителя <> 0 ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК КСписанию,
		|	
		|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
		|		ИНАЧЕ &СтатьяДвиженияДенежныхСредств
		|	КОНЕЦ                                                                       КАК СтатьяДвиженияДенежныхСредств,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств
		|		ИНАЧЕ &СтатьяЦелевыхСредств
		|	КОНЕЦ                                                                       КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.ТипПлатежаФЗ275                                             КАК ТипПлатежаФЗ275,
		|
		|	ВЫБОР КОГДА
		|		ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|		ИЛИ ДанныеДокумента.ПлатежСКонвертацией
		|	ТОГДА
		|		Неопределено
		|	ИНАЧЕ
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам
		|	КОНЕЦ КАК АналитикаУчетаПоПартнерам,
		
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.ОбъектРасчетов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ОбъектРасчетов,
		|	ДанныеДокумента.Ссылка                                                      КАК ПлатежныйДокумент,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.ИдентификаторДокумента
		|	ИНАЧЕ
		|		&ИдентификаторНеиспользуемойФинЗаписи
		|	КОНЕЦ КАК ИдентификаторФинЗаписи,
		|
		|	ВЫБОР 
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком 
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ &НастройкаХозяйственнойОперации
		|	КОНЕЦ КАК НастройкаХозяйственнойОперации
		|		
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО
		|		ДанныеДокумента.ПлатежСКонвертацией = ЛОЖЬ";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
		И ДокументОбъект.СписокФизЛиц Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	КОНЕЦ КАК ВидДвижения,
		|	&Период                                                                     КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                 КАК Организация,
		|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаЛицевыеСчетаСотрудников.Сумма
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК Сумма,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаЛицевыеСчетаСотрудников.СуммаУпр
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуУпр
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаУпр,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаЛицевыеСчетаСотрудников.СуммаРегл
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуРегл
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаРегл,
		|	
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаЛицевыеСчетаСотрудников.Сумма
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией
		|			И ДанныеДокумента.СуммаВВалютеОтправителя = 0 ТОГДА
		|			ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуДенежныхСредств
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией
		|			И ДанныеДокумента.СуммаВВалютеОтправителя <> 0 ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК КСписанию,
		|	
		|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаЛицевыеСчетаСотрудников.СтатьяДвиженияДенежныхСредств
		|		ИНАЧЕ &СтатьяДвиженияДенежныхСредств
		|	КОНЕЦ                                                                       КАК СтатьяДвиженияДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО                                                                КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.ТипПлатежаФЗ275                                             КАК ТипПлатежаФЗ275,
		|
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
		
		|	НЕОПРЕДЕЛЕНО                                                                КАК ОбъектРасчетов,
		|	ДанныеДокумента.Ссылка                                                      КАК ПлатежныйДокумент,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаЛицевыеСчетаСотрудников.ИдентификаторСтроки
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.ИдентификаторДокумента
		|	ИНАЧЕ
		|		&ИдентификаторНеиспользуемойФинЗаписи
		|	КОНЕЦ КАК ИдентификаторФинЗаписи,
		|
		|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаЛицевыеСчетаСотрудников КАК ТаблицаЛицевыеСчетаСотрудников
		|	ПО
		|		ДанныеДокумента.ПлатежСКонвертацией = ЛОЖЬ
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств) Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	КОНЕЦ КАК ВидДвижения,
		|	&Период                                                                     КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                 КАК Организация,
		|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.Сумма
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК Сумма,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.СуммаУпр
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуУпр
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаУпр,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.СуммаРегл
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуРегл
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаРегл,
		|	
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.Сумма
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией
		|			И ДанныеДокумента.СуммаВВалютеОтправителя = 0 ТОГДА
		|			ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуДенежныхСредств
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией
		|			И ДанныеДокумента.СуммаВВалютеОтправителя <> 0 ТОГДА
		|			ДанныеДокумента.СуммаВВалютеОтправителя
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК КСписанию,
		|	
		|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
		|		ИНАЧЕ &СтатьяДвиженияДенежныхСредств
		|	КОНЕЦ                                                                       КАК СтатьяДвиженияДенежныхСредств,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств
		|		ИНАЧЕ &СтатьяЦелевыхСредств
		|	КОНЕЦ                                                                       КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.ТипПлатежаФЗ275                                             КАК ТипПлатежаФЗ275,
		|	Неопределено                                                                КАК АналитикаУчетаПоПартнерам,
		|	Неопределено                                                                КАК ОбъектРасчетов,
		|	ДанныеДокумента.Ссылка                                                      КАК ПлатежныйДокумент,
		|	
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ПроведеноБанком И НЕ ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки
		|		КОГДА ДанныеДокумента.ПроведеноБанком И ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.ИдентификаторДокумента
		|	ИНАЧЕ
		|		&ИдентификаторНеиспользуемойФинЗаписи
		|	КОНЕЦ КАК ИдентификаторФинЗаписи,
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		&НастройкаХозяйственнойОперации
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО
		|		ДанныеДокумента.ПлатежСКонвертацией = ЛОЖЬ
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту) Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	КОНЕЦ КАК ВидДвижения,
		|	&Период                                                                     КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                 КАК Организация,
		|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
		|	
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		ДанныеДокумента.СуммаДокумента
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК Сумма,
		|	
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаУпр,
		|	
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаРегл,
		|	
		|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком ТОГДА
		|		ДанныеДокумента.СуммаДокумента
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК КСписанию,
		|	
		|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
		|	&СтатьяДвиженияДенежныхСредств                                              КАК СтатьяДвиженияДенежныхСредств,
		|	&СтатьяЦелевыхСредств                                                       КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.ТипПлатежаФЗ275                                             КАК ТипПлатежаФЗ275,
		|	Неопределено                                                                КАК АналитикаУчетаПоПартнерам,
		|	Неопределено                                                                КАК ОбъектРасчетов,
		|	ДанныеДокумента.Ссылка                                                      КАК ПлатежныйДокумент,
		|	
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		ДанныеДокумента.ИдентификаторДокумента
		|	ИНАЧЕ
		|		&ИдентификаторНеиспользуемойФинЗаписи
		|	КОНЕЦ КАК ИдентификаторФинЗаписи,
		|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
		|		&НастройкаХозяйственнойОперации
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если Не ДокументОбъект.ПлатежСКонвертацией Тогда
	
		ТекстЗапроса = "
		|// Положительные курсовые разницы, платеж с конвертацией
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                КАК ВидДвижения,
		|	&Период                                                               КАК Период,
		|	
		|	&Организация                                                          КАК Организация,
		|	&БанковскийСчет                                                       КАК БанковскийСчет,
		|	
		|	-ТаблицаКурсовыхРазниц.Сумма                                          КАК Сумма,
		|	-ТаблицаКурсовыхРазниц.СуммаУпр                                       КАК СуммаУпр,
		|	-ТаблицаКурсовыхРазниц.СуммаРегл                                      КАК СуммаРегл,
		|	0                                                                     КАК КСписанию,
		|	
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)        КАК ХозяйственнаяОперация,
		|	&СтатьяДвиженияДенежныхСредств                                        КАК СтатьяДвиженияДенежныхСредств,
		|	&СтатьяЦелевыхСредств                                                 КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.ТипПлатежаФЗ275                                       КАК ТипПлатежаФЗ275,
		|
		|	НЕОПРЕДЕЛЕНО                                                          КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО                                                          КАК ОбъектРасчетов,
		|	&Ссылка                                                               КАК ПлатежныйДокумент,
		|	
		|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента                          КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КонвертацияВалюты) КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
		|		ПО ИСТИНА
		|	
		|ГДЕ
		|	(ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0)
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|// Отрицательные курсовые разницы, платеж с конвертацией
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                КАК ВидДвижения,
		|	&Период                                                               КАК Период,
		|	
		|	&Организация                                                          КАК Организация,
		|	&БанковскийСчет                                                       КАК БанковскийСчет,
		|	
		|	ТаблицаКурсовыхРазниц.Сумма                                           КАК Сумма,
		|	ТаблицаКурсовыхРазниц.СуммаУпр                                        КАК СуммаУпр,
		|	ТаблицаКурсовыхРазниц.СуммаРегл                                       КАК СуммаРегл,
		|	0                                                                     КАК КСписанию,
		|	
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)        КАК ХозяйственнаяОперация,
		|	&СтатьяДвиженияДенежныхСредств                                        КАК СтатьяДвиженияДенежныхСредств,
		|	&СтатьяЦелевыхСредств                                                 КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.ТипПлатежаФЗ275                                       КАК ТипПлатежаФЗ275,
		|
		|	НЕОПРЕДЕЛЕНО                                                          КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО                                                          КАК ОбъектРасчетов,
		|	&Ссылка                                                               КАК ПлатежныйДокумент,
		|	
		|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента                          КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КонвертацияВалюты) КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
		|		ПО ИСТИНА
		|	
		|ГДЕ
		|	(ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0)";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если МассивТекстовЗапроса.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;

	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаЛицевыеСчетаСотрудников", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаЛицевыеСчетаСотрудников(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ДенежныеСредстваВПути";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ДокументОбъект.ПроведеноБанком Тогда
		Возврат "";
	КонецЕсли;
	
	МассивТекстовЗапроса = Новый Массив;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
		|	&Период                                                                      КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                  КАК Организация,
		|	ДанныеДокумента.КассаПолучатель                                              КАК Получатель,
		|	ДанныеДокумента.БанковскийСчет                                               КАК Отправитель,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка)        КАК ВидПереводаДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Контрагент,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Договор,
		|	ДанныеДокумента.Валюта                                                       КАК Валюта,
		|	
		|	ДанныеДокумента.СуммаДокумента                                               КАК Сумма,
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр             КАК СуммаУпр,
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл            КАК СуммаРегл,
		|	
		|	ДанныеДокумента.ХозяйственнаяОперация                                        КАК ХозяйственнаяОперация,
		|	&СтатьяДвиженияДенежныхСредств                                               КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ДанныеДокумента.ИдентификаторДокумента                                       КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СнятиеНаличныхДенежныхСредств) КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|";
	
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
		|	&Период                                                                      КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                  КАК Организация,
		|	ДанныеДокумента.БанковскийСчетПолучатель                                     КАК Получатель,
		|	ДанныеДокумента.БанковскийСчет                                               КАК Отправитель,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет) КАК ВидПереводаДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Контрагент,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Договор,
		|	ДанныеДокумента.Валюта                                                       КАК Валюта,
		|	
		|	ДанныеДокумента.СуммаДокумента                                               КАК Сумма,
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр             КАК СуммаУпр,
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл            КАК СуммаРегл,
		|	
		|	ДанныеДокумента.ХозяйственнаяОперация                                        КАК ХозяйственнаяОперация,
		|	&СтатьяДвиженияДенежныхСредств                                               КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ДанныеДокумента.ИдентификаторДокумента                                       КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПеречислениеДенежныхСредствНаДругойСчет) КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|";
	
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
		|	&Период                                                                      КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                  КАК Организация,
		|	ДанныеДокумента.БанковскийСчетПолучатель                                     КАК Получатель,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Отправитель,
		|	ВЫБОР КОГДА ДанныеДокумента.Валюта = &ВалютаРегламентированногоУчета
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
		|	КОНЕЦ                                                                        КАК ВидПереводаДенежныхСредств,
		|	ДанныеДокумента.Контрагент                                                   КАК Контрагент,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Договор,
		|	ДанныеДокумента.Валюта                                                       КАК Валюта,
		|	
		|	ДанныеДокумента.СуммаДокумента                                               КАК Сумма,
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр             КАК СуммаУпр,
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл            КАК СуммаРегл,
		|	
		|	ДанныеДокумента.ХозяйственнаяОперация                                        КАК ХозяйственнаяОперация,
		|	&СтатьяДвиженияДенежныхСредств                                               КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ДанныеДокумента.ИдентификаторДокумента                                       КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КонвертацияВалюты)        КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ПлатежСКонвертацией Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ // Платеж с конвертацией
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
		|	&Период                                                                      КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                  КАК Организация,
		|	ДанныеДокумента.БанковскийСчет                                               КАК Получатель,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Отправитель,
		|	ВЫБОР КОГДА &ВалютаДенежныхСредств = &ВалютаРегламентированногоУчета
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
		|	КОНЕЦ                                                                        КАК ВидПереводаДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Контрагент,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Договор,
		|	&ВалютаДенежныхСредств                                                       КАК Валюта,
		|	
		|	ДанныеДокумента.СуммаВВалютеОтправителя                                      КАК Сумма,
		|	ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуУпр КАК СуммаУпр,
		|	ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуРегл КАК СуммаРегл,
		|	
		|	ДанныеДокумента.ХозяйственнаяОперация                                        КАК ХозяйственнаяОперация,
		|	&СтатьяДвиженияДенежныхСредств                                               КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ДанныеДокумента.ИдентификаторДокумента                                       КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ПлатежСКонвертацией Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                       КАК ВидДвижения,
		|	ДанныеДокумента.Дата                                                         КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                  КАК Организация,
		|	ДанныеДокумента.БанковскийСчет                                               КАК Получатель,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Отправитель,
		|	ВЫБОР КОГДА &ВалютаДенежныхСредств = &ВалютаРегламентированногоУчета
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
		|	КОНЕЦ                                                                        КАК ВидПереводаДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Контрагент,
		|	НЕОПРЕДЕЛЕНО                                                                 КАК Договор,
		|	&ВалютаДенежныхСредств                                                       КАК Валюта,
		|	
		|	ТаблицаРасшифровкаПлатежа.Сумма                                              КАК Сумма,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр                                           КАК СуммаУпр,
		|	ТаблицаРасшифровкаПлатежа.СуммаРегл                                          КАК СуммаРегл,
		|	
		|	&ХозяйственнаяОперация                                                       КАК ХозяйственнаяОперация,
		|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств                      КАК СтатьяДвиженияДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки                                КАК ИдентификаторФинЗаписи,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокумента.ПроведеноБанком
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ &НастройкаХозяйственнойОперации
		|	КОНЕЦ КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО
		|		ИСТИНА
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;

	ТекстЗапроса = "
	|// Положительные курсовые разницы, платеж с конвертацией
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                           КАК ВидДвижения,
	|	&Период                                                                          КАК Период,
	|	
	|	&Организация                                                                     КАК Организация,
	|	&БанковскийСчет                                                                  КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                     КАК Отправитель,
	|	ВЫБОР КОГДА &ВалютаДенежныхСредств = &ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
	|	КОНЕЦ                                                                            КАК ВидПереводаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                                                     КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                                                                     КАК Договор,
	|	&ВалютаДенежныхСредств                                                           КАК Валюта,
	|	
	|	-ТаблицаКурсовыхРазниц.Сумма                                                     КАК Сумма,
	|	-ТаблицаКурсовыхРазниц.СуммаУпр                                                  КАК СуммаУпр,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл                                                 КАК СуммаРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)                   КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                   КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента                                     КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КонвертацияВалюты)            КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|	
	|ГДЕ
	|	(ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Отрицательные курсовые разницы, платеж с конвертацией
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                          КАК ВидДвижения,
	|	&Период                                                                         КАК Период,
	|	
	|	&Организация                                                                    КАК Организация,
	|	&БанковскийСчет                                                                 КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                    КАК Отправитель,
	|	ВЫБОР КОГДА &ВалютаДенежныхСредств = &ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
	|	КОНЕЦ                                                                           КАК ВидПереводаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                                                    КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                                                                    КАК Договор,
	|	&ВалютаДенежныхСредств                                                          КАК Валюта,
	|	
	|	ТаблицаКурсовыхРазниц.Сумма                                                     КАК Сумма,
	|	ТаблицаКурсовыхРазниц.СуммаУпр                                                  КАК СуммаУпр,
	|	ТаблицаКурсовыхРазниц.СуммаРегл                                                 КАК СуммаРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)                  КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                   КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента                                     КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КонвертацияВалюты)           КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|	
	|ГДЕ
	|	(ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0)";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                               КАК ВидДвижения,
		|	&Период                                                                              КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                          КАК Организация,
		|	ДанныеДокумента.БанковскийСчет                                                       КАК Получатель,
		|	НЕОПРЕДЕЛЕНО                                                                         КАК Отправитель,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)   КАК ВидПереводаДенежныхСредств,
		|	ДанныеДокумента.Контрагент                                                           КАК Контрагент,
		|	ДанныеДокумента.ДоговорЭквайринга                                                    КАК Договор,
		|	ДанныеДокумента.Валюта                                                               КАК Валюта,
		|	
		|	ДанныеДокумента.СуммаДокумента                                                       КАК Сумма,
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр                     КАК СуммаУпр,
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл                    КАК СуммаРегл,
		|	
		|	ДанныеДокумента.ХозяйственнаяОперация                                                КАК ХозяйственнаяОперация,
		|	&СтатьяДвиженияДенежныхСредств                                                       КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ДанныеДокумента.ИдентификаторДокумента                                               КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВозвратОплатыНаПлатежнуюКарту)    КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту
		И ДокументОбъект.СуммаКомиссии <> 0 И ДокументОбъект.ОтражатьКомиссию Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                               КАК ВидДвижения,
		|	ДанныеДокумента.Дата                                                                 КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                          КАК Организация,
		|	ДанныеДокумента.БанковскийСчет                                                       КАК Получатель,
		|	НЕОПРЕДЕЛЕНО                                                                         КАК Отправитель,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)   КАК ВидПереводаДенежныхСредств,
		|	ДанныеДокумента.Контрагент                                                           КАК Контрагент,
		|	ДанныеДокумента.ДоговорЭквайринга                                                    КАК Договор,
		|	ДанныеДокумента.Валюта                                                               КАК Валюта,
		|	
		|	ДанныеДокумента.СуммаКомиссии                                                               КАК Сумма,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))   КАК СуммаУпр,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуРегл  КАК ЧИСЛО(31,2)) КАК СуммаРегл,
		|	
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КомиссияПоЭквайрингу)                    КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.ДоговорЭквайринга.СтатьяДвиженияДенежныхСредствКомиссия              КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ДанныеДокумента.ИдентификаторДокумента                                               КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КомиссияПоЭквайрингу)             КАК НастройкаХозяйственнойОперации 
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
		И ДокументОбъект.СписокФизЛиц Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                          КАК ВидДвижения,
		|	&Период                                                                         КАК Период,
		|	
		|	ДанныеДокумента.Организация                                                     КАК Организация,
		|	НЕОПРЕДЕЛЕНО                                                                    КАК Получатель,
		|	ДанныеДокумента.БанковскийСчет                                                  КАК Отправитель,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеФизическимЛицам) КАК ВидПереводаДенежныхСредств,
		|	ДанныеДокумента.Контрагент                                                      КАК Контрагент,
		|	НЕОПРЕДЕЛЕНО                                                                    КАК Договор,
		|	ДанныеДокумента.Валюта                                                          КАК Валюта,
		|	
		|	ТаблицаЛицевыеСчетаСотрудников.Сумма                                            КАК Сумма,
		|	ТаблицаЛицевыеСчетаСотрудников.СуммаУпр                                         КАК СуммаУпр,
		|	ТаблицаЛицевыеСчетаСотрудников.СуммаРегл                                        КАК СуммаРегл,
		|	
		|	ДанныеДокумента.ХозяйственнаяОперация                                           КАК ХозяйственнаяОперация,
		|	ТаблицаЛицевыеСчетаСотрудников.СтатьяДвиженияДенежныхСредств                    КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ТаблицаЛицевыеСчетаСотрудников.ИдентификаторСтроки                              КАК ИдентификаторФинЗаписи,
		|	ЕСТЬNULL(НастройкиХозяйственныхОпераций.Ссылка, ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка)) КАК НастройкаХозяйственнойОперации
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЛицевыеСчетаСотрудников КАК ТаблицаЛицевыеСчетаСотрудников
		|	ПО ИСТИНА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
		|		ПО ДанныеДокумента.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
		|";
	
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	
	Если МассивТекстовЗапроса.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаЛицевыеСчетаСотрудников", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаЛицевыеСчетаСотрудников(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ(ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
		И ДокументОбъект.ПроведеноБанком И НЕ ДокументОбъект.СписокФизЛиц) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ПодотчетноеЛицо,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов
	|	ИНАЧЕ
	|		ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств
	|	КОНЕЦ КАК Валюта,
	|
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|	ИНАЧЕ
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаУпр,
	|	0 КАК КОтчету,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыдачаДенежныхСредствПодотчетнику) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ДанныеДокументаШапка КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаАвансовогоОтчета, ДЕНЬ) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ПодотчетноеЛицо,
	|	ДанныеДокумента.Подразделение КАК Подразделение, 
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов
	|	ИНАЧЕ
	|		ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств
	|	КОНЕЦ КАК Валюта,
	|
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|	ИНАЧЕ
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК КОтчету,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыдачаДенежныхСредствПодотчетнику) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ДанныеДокументаШапка КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект = Неопределено)
	
	ИмяРегистра = "ДенежныеСредстваКВыплате";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Запрос.Параметры.Свойство("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств") Тогда
		ИспользоватьЗаявкиНаРасходованиеДенежныхСредств = Запрос.Параметры.ИспользоватьЗаявкиНаРасходованиеДенежныхСредств;
	Иначе
		ИспользоватьЗаявкиНаРасходованиеДенежныхСредств = ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств");
	КонецЕсли;
	
	Если НЕ ИспользоватьЗаявкиНаРасходованиеДенежныхСредств Тогда
		Возврат "";
	КонецЕсли;
	
	МассивТекстовЗапросов = Новый Массив;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Заявка в расшифровке
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫБОР КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокКонтрагентов ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				&Получатель
	|			КОНЕЦ
	|		КОГДА ДанныеДокумента.СписокКонтрагентов
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			&Получатель
	|	КОНЕЦ КАК Получатель,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.Сумма <
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|		ТОГДА
	|			ЗаявкиРасшифровки.Сумма
	|		ИНАЧЕ
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|	КОНЕЦ КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	ДанныеДокументаШапка КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ДанныеДокумента.Ссылка КАК Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|			СУММА(ВЫБОР
	|				КОГДА &Валюта <> ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредствВалюта ТОГДА
	|						ДанныеДокумента.СуммаВзаиморасчетов
	|					ИНАЧЕ
	|						ДанныеДокумента.Сумма
	|				КОНЕЦ) КАК Сумма
	|			ИЗ
	|				ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка = &Ссылка
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> НЕОПРЕДЕЛЕНО
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеДокумента.Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		) КАК ЗаявкиРасшифровки
	|	ПО
	|		ЗаявкиРасшифровки.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.БанковскийСчет
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|		И ДенежныеСредства.Регистратор <> &СторнируемыйДокумент
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ ЗаявкиРасшифровки.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫБОР КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокКонтрагентов ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				&Получатель
	|			КОНЕЦ
	|		КОГДА ДанныеДокумента.СписокКонтрагентов
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			&Получатель
	|	КОНЕЦ,
	|	ЗаявкиРасшифровки.Сумма,
	|	ДанныеДокумента.БанковскийСчет
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДенежныеСредства.Сумма
	|		ИНАЧЕ -ДенежныеСредства.Сумма
	|	КОНЕЦ) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫБОР КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокКонтрагентов ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				&Получатель
	|			КОНЕЦ
	|		КОГДА ДанныеДокумента.СписокКонтрагентов
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			&Получатель
	|	КОНЕЦ КАК Получатель,
	|	&Организация КАК Организация,
	|	ЗаявкиРасшифровки.Сумма -
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0) КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	ДанныеДокументаШапка КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ДанныеДокумента.Ссылка КАК Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|			СУММА(ВЫБОР
	|				КОГДА &Валюта <> ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредствВалюта ТОГДА
	|						ДанныеДокумента.СуммаВзаиморасчетов
	|					ИНАЧЕ
	|						ДанныеДокумента.Сумма
	|				КОНЕЦ) КАК Сумма
	|			ИЗ
	|				ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка = &Ссылка
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> НЕОПРЕДЕЛЕНО
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеДокумента.Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		) КАК ЗаявкиРасшифровки
	|	ПО
	|		ЗаявкиРасшифровки.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.БанковскийСчет
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|		И ДенежныеСредства.Регистратор <> &СторнируемыйДокумент
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ ЗаявкиРасшифровки.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫБОР КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			КОГДА ВЫРАЗИТЬ(ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокКонтрагентов ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				&Получатель
	|			КОНЕЦ
	|		КОГДА ДанныеДокумента.СписокКонтрагентов
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			&Получатель
	|	КОНЕЦ,
	|	ЗаявкиРасшифровки.Сумма,
	|	ДанныеДокумента.БанковскийСчет
	|	
	|ИМЕЮЩИЕ
	|	ЗаявкиРасшифровки.Сумма >
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0)";
	
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	Если ДокументОбъект = Неопределено 
		ИЛИ (ДокументОбъект.ЗаявкаНаРасходованиеДенежныхСредств <> Документы.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка()
		И ДокументОбъект.ЗаявкаНаРасходованиеДенежныхСредств <> Неопределено) Тогда
	
		ТекстЗапроса = "ВЫБРАТЬ // Заявка в шапке
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетКасса,
		|	&Получатель КАК Получатель,
		|	&Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.СуммаДокумента <
		|			СУММА(ВЫБОР
		|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА ДенежныеСредства.Сумма
		|				ИНАЧЕ -ДенежныеСредства.Сумма
		|			КОНЕЦ)
		|		ТОГДА
		|			ДанныеДокумента.СуммаДокумента
		|		ИНАЧЕ
		|			СУММА(ВЫБОР
		|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА ДенежныеСредства.Сумма
		|				ИНАЧЕ -ДенежныеСредства.Сумма
		|			КОНЕЦ)
		|	КОНЕЦ КАК Сумма,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Расшифровка
		|	ПО
		|		Расшифровка.Ссылка = ДанныеДокумента.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
		|	ПО
		|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
		|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.БанковскийСчет
		|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
		|		И ДенежныеСредства.Активность
		|		И ДенежныеСредства.Регистратор <> &СторнируемыйДокумент
		|
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> НЕОПРЕДЕЛЕНО
		|	И Расшифровка.Ссылка ЕСТЬ NULL
		|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
		|	
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.СуммаДокумента,
		|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств,
		|	ДанныеДокумента.БанковскийСчет
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ДенежныеСредства.Сумма
		|		ИНАЧЕ -ДенежныеСредства.Сумма
		|	КОНЕЦ) <> 0
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКасса,
		|	&Получатель КАК Получатель,
		|	&Организация КАК Организация,
		|	ДанныеДокумента.СуммаДокумента -
		|		ЕСТЬNULL(СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ -ДенежныеСредства.Сумма
		|		КОНЕЦ), 0) КАК Сумма,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Расшифровка
		|	ПО
		|		Расшифровка.Ссылка = ДанныеДокумента.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
		|	ПО
		|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
		|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.БанковскийСчет
		|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
		|		И ДенежныеСредства.Активность
		|		И ДенежныеСредства.Регистратор <> &СторнируемыйДокумент
		|
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> НЕОПРЕДЕЛЕНО
		|	И Расшифровка.Ссылка ЕСТЬ NULL
		|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
		|	
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.СуммаДокумента,
		|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств,
		|	ДанныеДокумента.БанковскийСчет
		|	
		|ИМЕЮЩИЕ
		|	ДанныеДокумента.СуммаДокумента >
		|		ЕСТЬNULL(СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ -ДенежныеСредства.Сумма
		|		КОНЕЦ), 0)";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект = Неопределено 
		ИЛИ (ДокументОбъект.РаспоряжениеНаПеремещениеДенежныхСредств <> Документы.РаспоряжениеНаПеремещениеДенежныхСредств.ПустаяСсылка()
		И (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)) Тогда
	
		ТекстЗапроса = "ВЫБРАТЬ // Распоряжение на перемещение
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетКасса,
		|	&Организация КАК Получатель,
		|	&Организация КАК Организация,
		|	ДанныеДокумента.СуммаДокумента КАК Сумма,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.РаспоряжениеНаПеремещениеДенежныхСредств.ПустаяСсылка)
		|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
		|	И &ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
		|		)
		//++ Локализация
		|	И ТипПлатежногоДокумента <> ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.РаспоряжениеОбОбязательнойПродаже)
		//-- Локализация
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;

	//++ Локализация
	Если ДокументОбъект = Неопределено 
		ИЛИ (ДокументОбъект.УведомлениеОЗачисленииВалюты <> Документы.УведомлениеОЗачисленииВалюты.ПустаяСсылка()) Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ // Распоряжение на обязательную продажу
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДанныеДокумента.УведомлениеОЗачисленииВалюты КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетКасса,
		|	&Организация КАК Получатель,
		|	&Организация КАК Организация,
		|	ДанныеДокумента.СуммаДокумента КАК Сумма,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И ДанныеДокумента.УведомлениеОЗачисленииВалюты <> ЗНАЧЕНИЕ(Документ.УведомлениеОЗачисленииВалюты.ПустаяСсылка)
		|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
		|	И ТипПлатежногоДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.РаспоряжениеОбОбязательнойПродаже)
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	//-- Локализация
	
	Если МассивТекстовЗапросов.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Если ДокументОбъект = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаШапка", "Документ.СписаниеБезналичныхДенежныхСредств");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаТаблицаРасшифровкаПлатежа", "Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредствВалюта", "ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств.Валюта");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ЛимитыРасходаДенежныхСредств";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Запрос.Параметры.Свойство("ИспользоватьЛимитыРасходаДенежныхСредств") Тогда
		ИспользоватьЛимитыРасходаДенежныхСредств = Запрос.Параметры.ИспользоватьЛимитыРасходаДенежныхСредств;
	Иначе
		ИспользоватьЛимитыРасходаДенежныхСредств = ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредств");
	КонецЕсли;
	
	Если НЕ ИспользоватьЛимитыРасходаДенежныхСредств Тогда
		Возврат "";
	КонецЕсли;
	
	Если Запрос.Параметры.Свойство("ИспользоватьНачислениеЗарплаты") Тогда
		ИспользоватьНачислениеЗарплаты = Запрос.Параметры.ИспользоватьНачислениеЗарплаты;
	Иначе
		ИспользоватьНачислениеЗарплаты = Константы.ИспользоватьНачислениеЗарплаты.Получить();
	КонецЕсли;

	МассивТекстовЗапросов = Новый Массив;
	
	Если ДокументОбъект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет
		И ДокументОбъект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
		И ДокументОбъект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
			
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
		|	&Период КАК Период,
		|	ВЫБОР
		|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
		|			ТОГДА &Организация
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	КОНЕЦ КАК Организация,
		|	ВЫБОР
		|		КОГДА НЕ &ИспользоватьЛимитыРасходаПоПодразделениям
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|		КОГДА &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА &Подразделение 
		|		ИНАЧЕ ДанныеДокумента.БанковскийСчетПодразделение
		|	КОНЕЦ КАК Подразделение,
		|	
		|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику))
		|	ТОГДА
		|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
		|	ИНАЧЕ
		|		&СтатьяДвиженияДенежныхСредств
		|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр КАК РасходСверхЛимита
		|	
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО
		|		ТаблицаРасшифровкаПлатежа.Ссылка = ДанныеДокумента.Ссылка
		|	
		|ГДЕ
		|	(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО)
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
		И НЕ ИспользоватьНачислениеЗарплаты Тогда
			
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	0 КАК НомерСтрокиЗаявки,
		|	&Период КАК Период,
		|	ВЫБОР
		|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
		|			ТОГДА &Организация
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	КОНЕЦ КАК Организация,
		|	ВЫБОР
		|		КОГДА НЕ &ИспользоватьЛимитыРасходаПоПодразделениям
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|		КОГДА &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА &Подразделение 
		|		ИНАЧЕ ДанныеДокумента.БанковскийСчетПодразделение
		|	КОНЕЦ КАК Подразделение,
		|	
		|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК РасходСверхЛимита
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|
		|ГДЕ
		|	(&ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ &ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО)
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета
		И НЕ ИспользоватьНачислениеЗарплаты Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	0 КАК НомерСтрокиЗаявки,
		|	&Период КАК Период,
		|	ВЫБОР
		|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
		|			ТОГДА &Организация
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	КОНЕЦ КАК Организация,
		|	ВЫБОР
		|		КОГДА НЕ &ИспользоватьЛимитыРасходаПоПодразделениям
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|		КОГДА &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА &Подразделение 
		|		ИНАЧЕ ДанныеДокумента.БанковскийСчетПодразделение
		|	КОНЕЦ КАК Подразделение,
		|	
		|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	
		|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК РасходСверхЛимита
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|
		|ГДЕ
		|	(&ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ &ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО)";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если МассивТекстовЗапросов.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиЗаявки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = "
	|// Расчет курсовых разниц
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ДоходыПриКонвертацииВалюты) КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаДоходов,
	|	ТаблицаКурсовыхРазниц.Подразделение КАК Подразделение,
	|	ТаблицаКурсовыхРазниц.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты) КАК ХозяйственнаяОперация,
	|	
	|	ТаблицаКурсовыхРазниц.СуммаУпр КАК Сумма,
	|	(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаКурсовыхРазниц.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	(ВЫБОР
	|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА ТаблицаКурсовыхРазниц.СуммаРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	
	|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КонвертацияВалюты) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	&ПроведеноБанком
	|	И (ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса, ДокументОбъект = Неопределено)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтСуммыДокументовВВалютахУчета", ТекстыЗапроса) Тогда 
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Неопределено, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаСНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаБезНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаБезНДСУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаСНДСРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПрочаяВыдачаДенежныхСредств) КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.СтатьяРасходов = СтатьиРасходов.Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	И &ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ДанныеДокумента.ДоговорЭквайрингаНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	// Рассчитаем сумму в валюте управленческого учета.
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаБезНДСУпр,
	|
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл + СуммыДокументовВВалютахУчета.СуммаНДСРегл, ДанныеДокумента.СуммаКомиссии) КАК СуммаСНДСРегл,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, ДанныеДокумента.СуммаКомиссии) КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КомиссияПоЭквайрингу) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	
	|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КомиссияПоЭквайрингу) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаШапка КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втСуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		СуммыДокументовВВалютахУчета.Ссылка = ДанныеДокумента.Ссылка
	|		И СуммыДокументовВВалютахУчета.ИдентификаторСтроки = ""1""
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПроведеноБанком
	|	И ДанныеДокумента.СуммаКомиссии <> 0
	|	И ДанныеДокумента.ОтражатьКомиссию
	|	И НЕ ДанныеДокумента.ПлатежСКонвертацией
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаКурсовыхРазниц.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриКонвертацииВалюты) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаРасходов,
	|	ТаблицаКурсовыхРазниц.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаСНДС,
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаБезНДС,
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаБезНДСУпр,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаСНДСРегл,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	
	|	ТаблицаКурсовыхРазниц.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КонвертацияВалюты) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	&ПроведеноБанком
	|	И (ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0)
	|";
	
	Если ДокументОбъект = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаШапка", "Документ.СписаниеБезналичныхДенежныхСредств");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокумента.ДоговорЭквайрингаНаправлениеДеятельности", "ДанныеДокумента.ДоговорЭквайринга.НаправлениеДеятельности");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса, ДокументОбъект = Неопределено) Экспорт
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ДокументОбъект.ПроведеноБанком Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры = Неопределено, ДокументОбъект = Неопределено) Экспорт
	
	ИмяРегистра = "СуммыДокументовВВалютахУчета";
	
	Если Регистры <> Неопределено И Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапросаДанных = "
	|ВЫБРАТЬ
	|	""ДанныеДокумента""     КАК ИсточникДанных,
	|	ИСТИНА                    КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, ДЕНЬ) = ТаблицаДокумента.ДатаПроведенияБанком
	|				ИЛИ ТаблицаДокумента.Исправление  ТОГДА
	|			ТаблицаДокумента.Дата
	|		ИНАЧЕ
	|			КОНЕЦПЕРИОДА(ТаблицаДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ                   КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР КОГДА ТаблицаДокумента.ПлатежСКонвертацией ТОГДА
	|		&ВалютаДенежныхСредств
	|	ИНАЧЕ
	|		ТаблицаДокумента.Валюта
	|	КОНЕЦ КАК ВалютаДокумента,
	|	ЕСТЬNULL(Строки.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО) КАК ВалютаВзаиморасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПериодБазыНДС,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, ДЕНЬ) = ТаблицаДокумента.Ссылка.ДатаПроведенияБанком
	|				ИЛИ ТаблицаДокумента.Исправление  ТОГДА
	|			ТаблицаДокумента.Дата
	|		ИНАЧЕ
	|			КОНЕЦПЕРИОДА(ТаблицаДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ                   КАК ДатаКурса,
	|
	|	ЕСТЬNULL(Строки.НомерСтроки, 0) КАК НомерСтроки,
	|	ЕСТЬNULL(Строки.ИдентификаторСтроки, """") КАК ИдентификаторСтроки,
	|	ЕСТЬNULL(ЕСТЬNULL(СтрокиВВалютеПлательщика.Сумма, Строки.Сумма) - ЕСТЬNULL(СтрокиВВалютеПлательщика.СуммаНДС, Строки.СуммаНДС),
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ПлатежСКонвертацией
	|				ТОГДА ТаблицаДокумента.СуммаВВалютеОтправителя
	|			ИНАЧЕ ТаблицаДокумента.СуммаДокумента
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	ЕСТЬNULL(Строки.СтавкаНДС, НЕОПРЕДЕЛЕНО) КАК СтавкаНДС,
	|	ЕСТЬNULL(ЕСТЬNULL(СтрокиВВалютеПлательщика.СуммаНДС, Строки.СуммаНДС), 0) КАК СуммаНДС,
	|	ЕСТЬNULL(Строки.СуммаВзаиморасчетов, 0) КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК СуммаБезНДСУпр,
	|	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Строки.ОбъектРасчетов, ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтражаетсяВРасчетах,
	|	ЕСТЬNULL(Строки.ОбъектРасчетов, ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)) КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|ИЗ
	|	ДанныеДокументаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Строки
	|		ПО Строки.Ссылка = ТаблицаДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаПлатежаВВалютеПлательщика КАК СтрокиВВалютеПлательщика
	|		ПО Строки.Ссылка = СтрокиВВалютеПлательщика.Ссылка
	|			И Строки.НомерСтроки = СтрокиВВалютеПлательщика.НомерСтроки
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ДанныеДокумента"" КАК ИсточникДанных,
	|	ИСТИНА КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, ДЕНЬ) = ТаблицаДокумента.ДатаПроведенияБанком
	|				ИЛИ ТаблицаДокумента.Исправление ТОГДА
	|			ТаблицаДокумента.Дата
	|		ИНАЧЕ
	|			КОНЕЦПЕРИОДА(ТаблицаДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ                   КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Валюта КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПериодБазыНДС,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, ДЕНЬ) = ТаблицаДокумента.ДатаПроведенияБанком
	|				ИЛИ ТаблицаДокумента.Исправление ТОГДА
	|			ТаблицаДокумента.Дата
	|		ИНАЧЕ
	|			КОНЕЦПЕРИОДА(ТаблицаДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ                   КАК ДатаКурса,
	|
	|	0 КАК НомерСтроки,
	|	""1"" КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаКомиссии КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	ЛОЖЬ КАК ОтражаетсяВРасчетах,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|ИЗ
	|	ДанныеДокументаШапка КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаДокумента.ОтражатьКомиссию
	|	И ТаблицаДокумента.СуммаКомиссии <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ДанныеДокумента""     КАК ИсточникДанных,
	|	ИСТИНА                    КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, ДЕНЬ) = ТаблицаДокумента.ДатаПроведенияБанком
	|				ИЛИ ТаблицаДокумента.Исправление  ТОГДА
	|			ТаблицаДокумента.Дата
	|		ИНАЧЕ
	|			КОНЕЦПЕРИОДА(ТаблицаДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ                   КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Валюта КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПериодБазыНДС,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, ДЕНЬ) = ТаблицаДокумента.ДатаПроведенияБанком
	|				ИЛИ ТаблицаДокумента.Исправление  ТОГДА
	|			ТаблицаДокумента.Дата
	|		ИНАЧЕ
	|			КОНЕЦПЕРИОДА(ТаблицаДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ                   КАК ДатаКурса,
	|
	|	Строки.НомерСтроки КАК НомерСтроки,
	|	Строки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Строки.Сумма КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК СуммаБезНДСУпр,
	|	
	|	ЛОЖЬ КАК ОтражаетсяВРасчетах,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка) КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|ИЗ
	|	ДанныеДокументаШапка КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаЛицевыеСчетаСотрудников КАК Строки
	|		ПО Строки.Ссылка = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Сумма комиссии банка при платеже с конвертацией
	|ВЫБРАТЬ
	|	""ДанныеДокумента""     КАК ИсточникДанных,
	|	ИСТИНА                    КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, ДЕНЬ) = ТаблицаДокумента.ДатаПроведенияБанком
	|				ИЛИ ТаблицаДокумента.Исправление ТОГДА
	|			ТаблицаДокумента.Дата
	|		ИНАЧЕ
	|			КОНЕЦПЕРИОДА(ТаблицаДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ                   КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПериодБазыНДС,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаДокумента.ПроведеноБанком
	|				ИЛИ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, ДЕНЬ) = ТаблицаДокумента.ДатаПроведенияБанком
	|				ИЛИ ТаблицаДокумента.Исправление ТОГДА
	|			ТаблицаДокумента.Дата
	|		ИНАЧЕ
	|			КОНЕЦПЕРИОДА(ТаблицаДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ                   КАК ДатаКурса,
	|
	|	0 КАК НомерСтроки,
	|	"""" КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаВВалютеОтправителя - ЕСТЬNULL(Строки.ОбщаяСумма, ТаблицаДокумента.СуммаВВалютеОтправителя) КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК СуммаБезНДСУпр,
	|	
	|	ЛОЖЬ КАК ОтражаетсяВРасчетах,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка) КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|ИЗ
	|	ДанныеДокументаШапка КАК ТаблицаДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		ТаблицаСумм.Ссылка КАК Ссылка,
	|		СУММА(ЕСТЬNULL(РасшифровкаПлатежаВВалютеПлательщика.Сумма, ТаблицаСумм.Сумма)) КАК ОбщаяСумма
	|	ИЗ
	|		ДанныеДокументаТаблицаРасшифровкаПлатежа КАК ТаблицаСумм
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаПлатежаВВалютеПлательщика КАК РасшифровкаПлатежаВВалютеПлательщика
	|		ПО ТаблицаСумм.Ссылка = РасшифровкаПлатежаВВалютеПлательщика.Ссылка
	|			И ТаблицаСумм.НомерСтроки = РасшифровкаПлатежаВВалютеПлательщика.НомерСтроки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаСумм.Ссылка) КАК Строки
	|	ПО ТаблицаДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаДокумента.ПлатежСКонвертацией
	|	И ТаблицаДокумента.ПроведеноБанком	
	|";
	
	Если ДокументОбъект = Неопределено Тогда
		ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ДанныеДокументаШапка", "Документ.СписаниеБезналичныхДенежныхСредств");
		ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ДанныеДокументаТаблицаРасшифровкаПлатежа", "Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа");
		ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ДанныеДокументаТаблицаЛицевыеСчетаСотрудников", "Документ.СписаниеБезналичныхДенежныхСредств.ЛицевыеСчетаСотрудников");
	КонецЕсли;
	
	РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента(
		Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанных);

КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос, ТекстыЗапроса, ДокументОбъект);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если Запрос.Параметры.Свойство("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств") Тогда
		ИспользоватьЗаявкиНаРасходованиеДенежныхСредств = Запрос.Параметры.ИспользоватьЗаявкиНаРасходованиеДенежныхСредств;
	Иначе
		ИспользоватьЗаявкиНаРасходованиеДенежныхСредств = ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств");
	КонецЕсли;
	
	МассивТекстовЗапросов = Новый Массив;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов) 
		И ДокументОбъект.ПроведеноБанком Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаРасшифровкаПлатежа.НомерСтроки                             КАК НомерСтроки,
		|	&Период                                                           КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                            КАК ВидДвижения,
		
		|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам               КАК АналитикаУчетаПоПартнерам,
		|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита                  КАК Договор,
		|	ВЫБОР
		|		КОГДА &ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
		|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита
		|	КОНЕЦ КАК ТипСуммы,
		|	НЕОПРЕДЕЛЕНО                                                      КАК РасчетныйДокумент,
		|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов                    КАК Валюта,
		
		|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов                     КАК Сумма,
		|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов                     КАК Оплачивается,
		|	ТаблицаРасшифровкаПлатежа.СуммаРегл                               КАК СуммаРегл,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр                                КАК СуммаУпр,
		
		|	&ХозяйственнаяОперация                                            КАК ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Транши)
		|	КОНЕЦ КАК ТипГрафика,
		|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств           КАК СтатьяАналитики,
		|	
		|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки                     КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации                                   КАК НастройкаХозяйственнойОперации,
		|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств     КАК ЗаявкаНаРасходованиеДенежныхСредств
		|	
		|ИЗ
		|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
		|		ПО ДанныеДоговора.Ссылка = ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов) 
		И НЕ (ДокументОбъект.ОплатаПоЗаявкам И ИспользоватьЗаявкиНаРасходованиеДенежныхСредств) Тогда
			
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаРасшифровкаПлатежа.НомерСтроки                             КАК НомерСтроки,
		|	&Период                                                           КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                            КАК ВидДвижения,
		
		|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам               КАК АналитикаУчетаПоПартнерам,
		|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита                  КАК Договор,
		|	ВЫБОР
		|		КОГДА &ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
		|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита
		|	КОНЕЦ КАК ТипСуммы,
		|	НЕОПРЕДЕЛЕНО                                                      КАК РасчетныйДокумент,
		|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов                    КАК Валюта,
		
		|	0                                                                 КАК Сумма,
		|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов                     КАК Оплачивается,
		|	0                                                                 КАК СуммаРегл,
		|	0                                                                 КАК СуммаУпр,
		
		|	&ХозяйственнаяОперация                                            КАК ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Транши)
		|	КОНЕЦ КАК ТипГрафика,
		|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств           КАК СтатьяАналитики,
		|	
		|	&ИдентификаторНеиспользуемойФинЗаписи                             КАК ИдентификаторФинЗаписи,
		|	НЕОПРЕДЕЛЕНО                                                      КАК НастройкаХозяйственнойОперации,
		|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств     КАК ЗаявкаНаРасходованиеДенежныхСредств
		|	
		|ИЗ
		|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
		|		ПО ДанныеДоговора.Ссылка = ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	
	
	Если МассивТекстовЗапросов.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса, ДокументОбъект = Неопределено)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Стоимость,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	
	|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПрочаяВыдачаДенежныхСредств) КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.СтатьяРасходов = СтатьиРасходов.Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	И &ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса, ДокументОбъект = Неопределено) Экспорт
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ДокументОбъект.ПроведеноБанком Тогда
		Возврат "";
	КонецЕсли;

	Если НЕ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		Возврат "";
	Конецесли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ЕстьПрочиеАктивыПассивы = Ложь;
	Если ДокументОбъект.ПроведеноБанком И (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств 
		ИЛИ (ДокументОбъект.СуммаКомиссии И ДокументОбъект.ОтражатьКомиссию)) Тогда
		ЕстьПрочиеАктивыПассивы = Истина;
	КонецЕсли;
	
	МассивТестовЗапросов = Новый Массив;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета 
		И ДокументОбъект.ПроведеноБанком Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
		|	НЕОПРЕДЕЛЕНО КАК Аналитика,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|";
	
		МассивТестовЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту 
		И ДокументОбъект.ПроведеноБанком Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
		|	НЕОПРЕДЕЛЕНО КАК Аналитика,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|ГДЕ
		|	НЕ &ПеречислениеЧерезПереводыВПути";
	
		МассивТестовЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств 
		И ДокументОбъект.ПроведеноБанком Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Организация КАК Организация,
		|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
		|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК Статья,
		|	ВЫБОР
		|		КОГДА ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.СтатьиБезАналитики.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов
		|	КОНЕЦ КАК Аналитика,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))) КАК Сумма
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|		ПО ИСТИНА
		|ГДЕ
		|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
		|	
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов,
		|	ТаблицаРасшифровкаПлатежа.Подразделение,
		|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности,
		|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов";
		
		МассивТестовЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
		|	ДанныеДокумента.ТипНалога КАК Аналитика,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))) КАК Сумма
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|		ПО ИСТИНА
		|	
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.ТипНалога";
		
		МассивТестовЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	
	Если ЕстьПрочиеАктивыПассивы Тогда
		МассивТестовЗапросов.Добавить(РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы());
	КонецЕсли;
	
	Если МассивТестовЗапросов.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТестовЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	ОтражатьВзаимозачетСФилиалами = Ложь;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне) И ДокументОбъект.ПроведеноБанком Тогда
		
		ОтражатьВзаимозачетСФилиалами = Истина;
		
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если ОтражатьВзаимозачетСФилиалами И НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДвиженияКонтрагентКонтрагент", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	МассивТекстовЗапроса = Новый Массив;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
		И ДокументОбъект.ПроведеноБанком Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
		|	НЕОПРЕДЕЛЕНО КАК Аналитика,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
		|
		|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаУпр,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаСНДС,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаБезНДС,
		|
		|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|		ПО ИСТИНА
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств
		И ДокументОбъект.ПроведеноБанком Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
		|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК Статья,
		|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК Аналитика,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
		|
		|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаУпр,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаСНДС,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаБезНДС,
		|
		|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|ГДЕ
		|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет
		И ДокументОбъект.ПроведеноБанком Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
		|	ДанныеДокумента.ТипНалога КАК Аналитика,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
		|
		|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаУпр,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаСНДС,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаБезНДС,
		|
		|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|		ПО ИСТИНА
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств
		И ДокументОбъект.ПроведеноБанком Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами) КАК Статья,
		|	ДанныеДокумента.БанковскийСчетПолучательВладелец КАК Аналитика,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
		|
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаСНДС,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаБезНДС,
		|
		|	ДанныеДокумента.ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику
		И ДокументОбъект.ПроведеноБанком Тогда
	
		// Выдача займов сотруднику
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЗаймыВыданные) КАК Статья,
		|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК Аналитика,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
		|
		|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаУпр,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаСНДС,
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр  КАК СуммаБезНДС,
		|
		|	ТаблицаРасшифровкаПлатежа.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;

	Если МассивТекстовЗапроса.Количество() = 0 Тогда
		
		Если ОтражатьВзаимозачетСФилиалами Тогда
			ТекстЗапроса = ПрочиеАктивыПассивыСервер.ТекстЗапросаВзаимозачетСФилиалами();
			МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		Конецесли;
		
	Иначе
		
		Если ОтражатьВзаимозачетСФилиалами Тогда
			МассивТекстовЗапроса.Добавить(ПрочиеАктивыПассивыСервер.ТекстЗапросаВзаимозачетСФилиалами());
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапросаЛокализация = СписаниеБезналичныхДенежныхСредствЛокализация.ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам();
	
	Если НЕ ПустаяСтрока(ТекстЗапросаЛокализация) Тогда
		
		МассивТекстовЗапроса.Добавить(ТекстЗапросаЛокализация);
		
	КонецЕсли;
	
	Если МассивТекстовЗапроса.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ДвиженияДенежныхСредств";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ДокументОбъект.ПроведеноБанком Тогда
		Возврат "";
	КонецЕсли;
	
	МассивТекстовЗапроса = Новый Массив;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты)
		И НЕ ДокументОбъект.СписокФизЛиц Тогда
			
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	
		|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|	ТОГДА
		|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
		|	ИНАЧЕ
		|		&СтатьяДвиженияДенежныхСредств
		|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
		|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|	ТОГДА
		|		ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств
		|	ИНАЧЕ
		|		&СтатьяЦелевыхСредств
		|	КОНЕЦ КАК СтатьяЦелевыхСредств,
		|	
		|	ДанныеДокумента.Валюта КАК Валюта,
		|
		|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
		|		ТОГДА ДанныеДокумента.БанковскийСчетПолучательНаправлениеДеятельности
		|		ИНАЧЕ ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|	КОНЕЦ КАК КорНаправлениеДеятельности,
		|	ВЫБОР
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
		|			ТОГДА ДанныеДокумента.БанковскийСчетПолучатель
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
		|			ТОГДА ДанныеДокумента.КассаПолучатель
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|			ТОГДА ДанныеДокумента.ПодотчетноеЛицо
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
		|			ТОГДА ДанныеДокумента.Контрагент
		|	КОНЕЦ КАК КорДенежныеСредства,
		|
		|	ВЫБОР
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|			ТОГДА Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица)
		|		ИНАЧЕ
		|			Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути)
		|	КОНЕЦ КАК КорТипДенежныхСредств,
		|	ВЫБОР
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику) ТОГДА
		|			ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов
		|		ИНАЧЕ
		|			ДанныеДокумента.Валюта
		|	КОНЕЦ КАК КорВалюта,
		|
		|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|	ТОГДА ВЫРАЗИТЬ(ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
		|	ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КОНЕЦ КАК Сумма,
		|	
		|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|	ТОГДА ВЫРАЗИТЬ(ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
		|	ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КОНЕЦ КАК СуммаРегл,
		|	
		|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|	ТОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
		|	ИНАЧЕ ДанныеДокумента.СуммаДокумента КОНЕЦ КАК СуммаВВалюте,
		|
		|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|	ТОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов, ДанныеДокумента.СуммаДокумента)
		|	ИНАЧЕ ДанныеДокумента.СуммаДокумента КОНЕЦ КАК СуммаВКорВалюте,
		|
		|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|		ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
		|		ТОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
		|		ИНАЧЕ ДанныеДокумента.СуммаДокумента КОНЕЦ
		|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|	ВЫБОР 
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
		|			ТОГДА ДанныеДокумента.БанковскийСчетПолучатель
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
		|			ТОГДА ДанныеДокумента.КассаПолучатель
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ИсточникКорГФУДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО 
		|		ИСТИНА
		|";
	
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
		И ДокументОбъект.СписокФизЛиц Тогда
			
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	
		|	ТаблицаЛицевыеСчетаСотрудников.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяЦелевыхСредств,
		|	
		|	ДанныеДокумента.Валюта КАК Валюта,
		|
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
		|	ТаблицаЛицевыеСчетаСотрудников.ФизическоеЛицо КАК КорДенежныеСредства,
		|
		|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК КорТипДенежныхСредств,
		|	ДанныеДокумента.Валюта КАК КорВалюта,
		|
		|	ВЫРАЗИТЬ(ТаблицаЛицевыеСчетаСотрудников.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
		|	ВЫРАЗИТЬ(ТаблицаЛицевыеСчетаСотрудников.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
		|	ТаблицаЛицевыеСчетаСотрудников.Сумма КАК СуммаВВалюте,
		|	ТаблицаЛицевыеСчетаСотрудников.Сумма КАК СуммаВКорВалюте,
		|
		|	ВЫБОР КОГДА НЕ ДанныеДокумента.ОплатаПоЗаявкам ТОГДА
		|		ТаблицаЛицевыеСчетаСотрудников.Сумма
		|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО КАК ИсточникКорГФУДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЛицевыеСчетаСотрудников КАК ТаблицаЛицевыеСчетаСотрудников
		|	ПО ИСТИНА";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты Тогда
			
		ТекстЗапроса = "
		|// Операции выплаты по депозитам
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.Валюта КАК Валюта,
		|
		|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
		|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК КорДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.Депозиты) КАК КорТипДенежныхСредств,
		|	ДанныеДокумента.Валюта КАК КорВалюта,
		|
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
		|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
		|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВКорВалюте,
		|
		|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|		ТаблицаРасшифровкаПлатежа.Сумма
		|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ИсточникКорГФУДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО 
		|		ИСТИНА";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту Тогда
			
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ДанныеДокумента.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.Валюта КАК Валюта,
		|
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
		|	ДанныеДокумента.ДоговорЭквайринга КАК КорДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУЭквайера) КАК КорТипДенежныхСредств,
		|	ДанныеДокумента.Валюта КАК КорВалюта,
		|
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
		|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалюте,
		|	ДанныеДокумента.СуммаДокумента КАК СуммаВКорВалюте,
		|	
		|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|		ТаблицаРасшифровкаПлатежа.Сумма
		|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО КАК ИсточникКорГФУДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО ИСТИНА";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ПлатежСКонвертацией Тогда
			
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	Значение(Перечисление.ХозяйственныеОперации.КонвертацияВалюты) КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
		|	
		|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ДанныеДокумента.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств КАК Валюта,
		|
		|	&НаправлениеДеятельностиДС КАК КорНаправлениеДеятельности,
		|	ДанныеДокумента.БанковскийСчет КАК КорДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути) КАК КорТипДенежныхСредств,
		|	ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств КАК КорВалюта,
		|
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВВалютеОтправителя * &КоэффициентПересчетаДенежныхСредствВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
		|	ДанныеДокумента.СуммаВВалютеОтправителя КАК СуммаВВалюте,
		|	ДанныеДокумента.СуммаВВалютеОтправителя КАК СуммаВКорВалюте,
		|
		|	0 КАК СуммаКВыплатеСверхЛимита,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО КАК ИсточникКорГФУДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО КАК ЗаявкаНаРасходованиеДенежныхСредств
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО ИСТИНА";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если МассивТекстовЗапроса.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаЛицевыеСчетаСотрудников", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаЛицевыеСчетаСотрудников(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ДокументОбъект.ПроведеноБанком Тогда
		Возврат "";
	КонецЕсли;
	
	Если Запрос.Параметры.Свойство("ИспользоватьНачислениеЗарплаты") Тогда
		ИспользоватьНачислениеЗарплаты = Запрос.Параметры.ИспользоватьНачислениеЗарплаты;
	Иначе
		ИспользоватьНачислениеЗарплаты = Константы.ИспользоватьНачислениеЗарплаты.Получить();
	КонецЕсли;
	
	МассивТекстовЗапросов = Новый Массив;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
	
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
		|	ТаблицаРасшифровкаПлатежа.Подразделение КАК ПодразделениеДоходовРасходов,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|	ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|		&ВалютаДенежныхСредств
		|	ИНАЧЕ
		|		ДанныеДокумента.Валюта
		|	КОНЕЦ КАК Валюта,
		|
		|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
		|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
		|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
		|
		|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|		ТаблицаРасшифровкаПлатежа.Сумма
		|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСРегл,
		|	0 КАК СуммаНДСВВалютеПлатежа,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК ИсточникГФУДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО 
		|		ИСТИНА
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
		|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
		|		ТОГДА ТаблицаРасшифровкаПлатежа.Подразделение
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ПодразделениеДоходовРасходов,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.Валюта КАК Валюта,
		|
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиСтатьи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ДанныеДокумента.ТипНалога КАК АналитикаАктивовПассивов,
		|
		|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
		|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
		|
		|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|		ТаблицаРасшифровкаПлатежа.Сумма
		|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСРегл,
		|	0 КАК СуммаНДСВВалютеПлатежа,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК ИсточникГФУДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО 
		|		ИСТИНА
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
		И НЕ ИспользоватьНачислениеЗарплаты Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
		|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДоходовРасходов,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ДанныеДокумента.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|	ДанныеДокумента.Валюта КАК Валюта,
		|
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиСтатьи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	&Организация КАК АналитикаАктивовПассивов,
		|
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
		|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалюте,
		|
		|	ВЫБОР КОГДА ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|		ДанныеДокумента.СуммаДокумента
		|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСРегл,
		|	0 КАК СуммаНДСВВалютеПлатежа,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|";
	
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту
		И ДокументОбъект.ОтражатьКомиссию И ДокументОбъект.СуммаКомиссии <> 0 Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КомиссияПоЭквайрингу) КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
		|	ДанныеДокумента.Подразделение КАК ПодразделениеДоходовРасходов,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	ДанныеДокумента.ДоговорЭквайрингаСтатьяДвиженияДенежныхСредствКомиссия КАК СтатьяДвиженияДенежныхСредств,
		|	НЕОПРЕДЕЛЕНО,
		|	ДанныеДокумента.Валюта КАК Валюта,
		|
		|	ДанныеДокумента.ДоговорЭквайрингаНаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
		|	ДанныеДокумента.СтатьяРасходов КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК Сумма,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКомиссии * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
		|	ДанныеДокумента.СуммаКомиссии КАК СуммаВВалюте,
		|	ВЫБОР КОГДА ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|		ИЛИ ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|		ДанныеДокумента.СуммаКомиссии
		|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСРегл,
		|	0 КАК СуммаНДСВВалютеПлатежа,
		|
		|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|	ДанныеДокумента.СтатьяРасходов КАК ИсточникГФУДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента";
	
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	
	Если ДокументОбъект.ПлатежСКонвертацией Тогда
	
		ТекстЗапроса = "
		|// Расчет доходов от курсовых разниц
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль) КАК ХозяйственнаяОперация,
		|	&Организация КАК Организация,
		|	ТаблицаКурсовыхРазниц.Подразделение КАК Подразделение,
		|	&НаправлениеДеятельностиДС,
		|	ТаблицаКурсовыхРазниц.Подразделение КАК ПодразделениеДоходовРасходов,
		|
		|	ТаблицаКурсовыхРазниц.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути) КАК ТипДенежныхСредств,
		|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	&СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|	&ВалютаДенежныхСредств КАК Валюта,
		|
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиСтатьи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ДоходыПриКонвертацииВалюты) КАК СтатьяДоходовРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	
		|	ТаблицаКурсовыхРазниц.СуммаУпр КАК Сумма,
		|	ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаРегл,
		|	ТаблицаКурсовыхРазниц.Сумма КАК СуммаВВалюте,
		|
		|	0 КАК СуммаКВыплатеСверхЛимита,
		|
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСРегл,
		|	0 КАК СуммаНДСВВалютеПлатежа,
		|	
		|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ДоходыПриКонвертацииВалюты) КАК ИсточникГФУДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|	НЕОПРЕДЕЛЕНО КАК ЗаявкаНаРасходованиеДенежныхСредств
		|ИЗ
		|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
		|
		|ГДЕ
		|	&ПлатежСКонвертацией
		|	И (ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|// Расчет расходов от курсовых разниц
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСУбыток) КАК ХозяйственнаяОперация,
		|	&Организация КАК Организация,
		|	ТаблицаКурсовыхРазниц.Подразделение КАК Подразделение,
		|	&НаправлениеДеятельностиДС,
		|	ТаблицаКурсовыхРазниц.Подразделение КАК ПодразделениеДоходовРасходов,
		|
		|	ТаблицаКурсовыхРазниц.БанковскийСчет КАК ДенежныеСредства,
		|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути) КАК ТипДенежныхСредств,
		|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	&СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|	&ВалютаДенежныхСредств КАК Валюта,
		|
		|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиСтатьи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриКонвертацииВалюты) КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|
		|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК Сумма,
		|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаРегл,
		|	-ТаблицаКурсовыхРазниц.Сумма КАК СуммаВВалюте,
		|
		|	0 КАК СуммаКВыплатеСверхЛимита,
		|
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСРегл,
		|	0 КАК СуммаНДСВВалютеПлатежа,
		|
		|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриКонвертацииВалюты) КАК ИсточникГФУДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|	НЕОПРЕДЕЛЕНО КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|ИЗ
		|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
		|
		|ГДЕ
		|	&ПлатежСКонвертацией
		|	И (ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0)
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если МассивТекстовЗапросов.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ДокументОбъект.ПроведеноБанком Тогда
		Возврат "";
	КонецЕсли;
	
	МассивТекстовПодзапроса = Новый Массив;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне) Тогда
		
		ТекстПодзапросаЗапроса = "// Операции по списанию денежных средств
		|	ВЫБРАТЬ
		|		&Период КАК Период,
		|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|		ДанныеДокумента.Организация КАК Организация,
		|		ДанныеДокумента.Подразделение КАК Подразделение,
		|
		|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|		ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|		ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств
		|		ИНАЧЕ
		|			ДанныеДокумента.Валюта
		|		КОНЕЦ КАК ВалютаПлатежа,
		|
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
		|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности, ДанныеДокумента.НаправлениеДеятельности) КАК НаправлениеДеятельности,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
		|	
		|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
		|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
		|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаОплатыВВалютеПлатежа,
		|
		|		0 КАК СуммаПостоплаты,
		|		0 КАК СуммаПостоплатыРегл,
		|		0 КАК СуммаПостоплатыВВалютеПлатежа,
		|		
		|		0 КАК СуммаПредоплаты,
		|		0 КАК СуммаПредоплатыРегл,
		|		0 КАК СуммаПредоплатыВВалютеПлатежа,
		|
		|		ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|			ИЛИ ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|			ТаблицаРасшифровкаПлатежа.Сумма
		|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|	
		|		0 КАК СуммаНДС,
		|		0 КАК СуммаНДСРегл,
		|		0 КАК СуммаНДСВВалютеПлатежа,
		|
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
		|
		|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|		ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|	ИЗ
		|		ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|			ПО ИСТИНА
		|";

		МассивТекстовПодзапроса.Добавить(ТекстПодзапросаЗапроса);
		
	КонецЕсли;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию) Тогда
		
		ТекстПодзапросаЗапроса = "// Операции по списанию денежных средств в другую организацию
		|	ВЫБРАТЬ
		|		&Период КАК Период,
		|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|		ДанныеДокумента.Организация КАК Организация,
		|		ДанныеДокумента.Подразделение КАК Подразделение,
		|
		|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|		ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|		ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств
		|		ИНАЧЕ
		|			ДанныеДокумента.Валюта
		|		КОНЕЦ КАК ВалютаПлатежа,
		|
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
		|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.НаправлениеДеятельности, ДанныеДокумента.НаправлениеДеятельности) КАК НаправлениеДеятельности,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
		|	
		|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
		|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
		|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаОплатыВВалютеПлатежа,
		|
		|		0 КАК СуммаПостоплаты,
		|		0 КАК СуммаПостоплатыРегл,
		|		0 КАК СуммаПостоплатыВВалютеПлатежа,
		|		
		|		0 КАК СуммаПредоплаты,
		|		0 КАК СуммаПредоплатыРегл,
		|		0 КАК СуммаПредоплатыВВалютеПлатежа,
		|
		|		ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|			ИЛИ ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|			ТаблицаРасшифровкаПлатежа.Сумма
		|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|	
		|		0 КАК СуммаНДС,
		|		0 КАК СуммаНДСРегл,
		|		0 КАК СуммаНДСВВалютеПлатежа,
		|
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
		|
		|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|		ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|	ИЗ
		|		ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|			ПО ИСТИНА";
		
		МассивТекстовПодзапроса.Добавить(ТекстПодзапросаЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
		
		ТекстПодзапросаЗапроса = "// Операции внутренней передачи денежных средств
		|	ВЫБРАТЬ
		|		&Период КАК Период,
		|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|		ДанныеДокумента.Организация КАК Организация,
		|		ДанныеДокумента.Подразделение КАК Подразделение,
		|
		|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|		&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|		&СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|		ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств
		|		ИНАЧЕ
		|			ДанныеДокумента.Валюта
		|		КОНЕЦ КАК ВалютаПлатежа,
		|
		|		НЕОПРЕДЕЛЕНО КАК Партнер,
		|		ДанныеДокумента.БанковскийСчетПолучательВладелец КАК Контрагент,
		|		ДанныеДокумента.БанковскийСчетПолучательНаправлениеДеятельности КАК НаправлениеДеятельности,
		|		НЕОПРЕДЕЛЕНО КАК Договор,
		|		НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
		|	
		|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаОплаты,
		|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаОплатыРегл,
		|		ДанныеДокумента.СуммаДокумента КАК СуммаОплатыВВалютеПлатежа,
		|
		|		0 КАК СуммаПостоплаты,
		|		0 КАК СуммаПостоплатыРегл,
		|		0 КАК СуммаПостоплатыВВалютеПлатежа,
		|		
		|		0 КАК СуммаПредоплаты,
		|		0 КАК СуммаПредоплатыРегл,
		|		0 КАК СуммаПредоплатыВВалютеПлатежа,
		|
		|		ВЫБОР КОГДА ЕстьNULL(ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|			ИЛИ ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|			ДанныеДокумента.СуммаДокумента
		|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|	
		|		0 КАК СуммаНДС,
		|		0 КАК СуммаНДСРегл,
		|		0 КАК СуммаНДСВВалютеПлатежа,
		|
		|		ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
		|
		|		ДанныеДокумента.СуммаДокумента КАК СуммаОплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
		|
		|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|		НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов,
		|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|		ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|	ИЗ
		|		ДанныеДокументаШапка КАК ДанныеДокумента";
		
		МассивТекстовПодзапроса.Добавить(ТекстПодзапросаЗапроса);
		
	КонецЕсли;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов) Тогда
		
		ТекстПодзапросаЗапроса = "// Операции оплаты по кредитам и выплатам по выданным займам
		|	ВЫБРАТЬ
		|		&Период КАК Период,
		|		ВЫБОР
		|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
		|				И ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты) ТОГДА
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПроцентовПоКредитам)
		|			ИНАЧЕ
		|				&ХозяйственнаяОперация
		|		КОНЕЦ КАК ХозяйственнаяОперация,
		|		ДанныеДокумента.Организация КАК Организация,
		|		ДанныеДокумента.Подразделение КАК Подразделение,
		|
		|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|		ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|		
		|		ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств
		|		ИНАЧЕ
		|			ДанныеДокумента.Валюта
		|		КОНЕЦ КАК ВалютаПлатежа,
		|
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
		|		ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК Договор,
		|		НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
		|	
		|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
		|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
		|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК СуммаОплатыВВалютеПлатежа,
		|
		|		0 КАК СуммаПостоплаты,
		|		0 КАК СуммаПостоплатыРегл,
		|		0 КАК СуммаПостоплатыВВалютеПлатежа,
		|		
		|		0 КАК СуммаПредоплаты,
		|		0 КАК СуммаПредоплатыРегл,
		|		0 КАК СуммаПредоплатыВВалютеПлатежа,
		|
		|		ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
		|			ИЛИ ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = НЕОПРЕДЕЛЕНО ТОГДА
		|			ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
		|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
		|	
		|		0 КАК СуммаНДС,
		|		0 КАК СуммаНДСРегл,
		|		0 КАК СуммаНДСВВалютеПлатежа,
		|
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
		|
		|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ИсточникГФУРасчетов,
		|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|		ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|	ИЗ
		|		ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	ПО
		|		ИСТИНА";
		
		МассивТекстовПодзапроса.Добавить(ТекстПодзапросаЗапроса);
		
	КонецЕсли;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию) Тогда
		
		ТекстПодзапросаЗапроса = "// НДС
		|	ВЫБРАТЬ
		|		&Период КАК Период,
		|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|		ДанныеДокумента.Организация КАК Организация,
		|		ДанныеДокумента.Подразделение КАК Подразделение,
		|
		|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
		|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|		ТаблицаРасшифровкаПлатежа.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
		|		ВЫБОР КОГДА ДанныеДокумента.ПлатежСКонвертацией ТОГДА
		|			ДанныеДокумента.БанковскийСчетВалютаДенежныхСредств
		|		ИНАЧЕ
		|			ДанныеДокумента.Валюта
		|		КОНЕЦ КАК ВалютаПлатежа,
		|
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
		|	
		|		0 КАК СуммаОплаты,
		|		0 КАК СуммаОплатыРегл,
		|		0 КАК СуммаОплатыВВалютеПлатежа,
		|
		|		0 КАК СуммаПостоплаты,
		|		0 КАК СуммаПостоплатыРегл,
		|		0 КАК СуммаПостоплатыВВалютеПлатежа,
		|		
		|		0 КАК СуммаПредоплаты,
		|		0 КАК СуммаПредоплатыРегл,
		|		0 КАК СуммаПредоплатыВВалютеПлатежа,
		|	
		|		0 КАК СуммаКВыплатеСверхЛимита,
		|	
		|		ТаблицаРасшифровкаПлатежа.СуммаНДСУпр КАК СуммаНДС,
		|		ТаблицаРасшифровкаПлатежа.СуммаНДСРегл КАК СуммаНДСРегл,
		|		ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДСВВалютеПлатежа,
		|	
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	
		|		0 КАК СуммаОплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
		|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
		|	
		|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|		ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
		|		ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
		|
		|	ИЗ
		|		ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|			ПО ИСТИНА
		|	ГДЕ
		|		ТаблицаРасшифровкаПлатежа.СуммаНДС <> 0";
	
		МассивТекстовПодзапроса.Добавить(ТекстПодзапросаЗапроса);
		
	КонецЕсли;
	
	Если МассивТекстовПодзапроса.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстПодзапросаЗапроса = СтрСоединить(МассивТекстовПодзапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|
	|	ДанныеДокумента.ДенежныеСредства КАК ДенежныеСредства,
	|	ВЫБОР КОГДА &ПлатежСКонвертацией ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|	КОНЕЦ КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.СтатьяЦелевыхСредств КАК СтатьяЦелевыхСредств,
	|	ДанныеДокумента.ВалютаПлатежа КАК ВалютаПлатежа,
	|
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|				И ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетДоходов, ЛОЖЬ)
	|			ИЛИ НЕ &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|				И ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|		ТОГДА
	|			ДанныеДокумента.НаправлениеДеятельности
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельностиКонтрагента,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|
	|	СУММА(ДанныеДокумента.СуммаОплаты) КАК СуммаОплаты,
	|	СУММА(ДанныеДокумента.СуммаОплатыРегл) КАК СуммаОплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеПлатежа) КАК СуммаОплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПостоплаты) КАК СуммаПостоплаты,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыРегл) КАК СуммаПостоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеПлатежа) КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПредоплаты) КАК СуммаПредоплаты,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыРегл) КАК СуммаПредоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеПлатежа) КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаКВыплатеСверхЛимита) КАК СуммаКВыплатеСверхЛимита,
	|	
	|	СУММА(ДанныеДокумента.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ДанныеДокумента.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	СУММА(ДанныеДокумента.СуммаНДСВВалютеПлатежа) КАК СуммаНДСВВалютеПлатежа,
	|	
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеВзаиморасчетов) КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеВзаиморасчетов) КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеВзаиморасчетов) КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|
	|	ДанныеДокумента.СтавкаНДС,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ЛОЖЬ КАК ОтложенноеПроведение
	|
	|
	|ИЗ &ТекстВложенногоЗапроса КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ДенежныеСредства,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.СтатьяЦелевыхСредств,
	|	ДанныеДокумента.ВалютаПлатежа,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|				И ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетДоходов, ЛОЖЬ)
	|			ИЛИ НЕ &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|				И ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|		ТОГДА
	|			ДанныеДокумента.НаправлениеДеятельности
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.СтавкаНДС,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстВложенногоЗапроса", "(" + ТекстПодзапросаЗапроса + ")");
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, ДокументОбъект)
	
	ИмяВременнойТаблицы = "ВтДвиженияКонтрагентКонтрагент";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	МассивТекстовПодзапроса = Новый Массив;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне)
		И ДокументОбъект.ПроведеноБанком Тогда
		
		ТекстПодзапросаЗапроса = "// Передали задолженность филиала в организацию
		|	ВЫБРАТЬ
		|		&Период КАК Период,
		|		ВЫБОР КОГДА &ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПлатежаИзФилиала)
		|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности)
		|		КОНЕЦ КАК ХозяйственнаяОперация,
		|		ДанныеДокумента.Организация КАК Организация,
		|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
		|
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
		|
		|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК КорПартнер,
		|		ТаблицаРасшифровкаПлатежа.Организация КАК КорКонтрагент,
		|		&НаправлениеДеятельностиДС КАК КорНаправлениеДеятельности,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорОбъектРасчетов,
		|		
		|	
		|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
		|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
		|
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
		|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорИсточникГФУРасчетов
		|	ИЗ
		|		ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|			ПО ИСТИНА
		|	ГДЕ
		|		ДанныеДокумента.Организация <> ТаблицаРасшифровкаПлатежа.Организация
		|		
		|";
		
		МассивТекстовПодзапроса.Добавить(ТекстПодзапросаЗапроса);
		
	КонецЕсли;
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне)
		И ДокументОбъект.ПроведеноБанком Тогда
		
		ТекстПодзапросаЗапроса = "// Погасили задолженность филиала перед поставщиком
		|	ВЫБРАТЬ
		|		&Период КАК Период,
		|		ВЫБОР КОГДА &ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПлатежаВФилиале)
		|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности)
		|		КОНЕЦ КАК ХозяйственнаяОперация,
		|		ТаблицаРасшифровкаПлатежа.Организация КАК Организация,
		|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
		|
		|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
		|		ДанныеДокумента.Организация КАК Контрагент,
		|		&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ОбъектРасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК КорПартнер,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК КорКонтрагент,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорОбъектРасчетов,
		|		
		|	
		|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
		|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
		|
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
		|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорИсточникГФУРасчетов
		|	ИЗ
		|		ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|			ПО ИСТИНА
		|	ГДЕ
		|		ДанныеДокумента.Организация <> ТаблицаРасшифровкаПлатежа.Организация
		|";
		
		МассивТекстовПодзапроса.Добавить(ТекстПодзапросаЗапроса);
		
	КонецЕсли;
	
	Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		И ДокументОбъект.ПроведеноБанком Тогда
		
		ТекстПодзапросаЗапроса = "// ВозвратОплатыКлиенту по курсу аванса
		|	ВЫБРАТЬ
		|		&Период КАК Период,
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
		|		ДанныеДокумента.Организация КАК Организация,
		|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
		|
		|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
		|		ДанныеДокумента.Организация КАК Контрагент,
		|		&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
		|		ДанныеДокумента.Договор КАК Договор,
		|		ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК КорПартнер,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК КорКонтрагент,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорОбъектРасчетов,
		|		
		|	
		|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
		|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
		|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
		|
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
		|
		|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
		|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
		|
		|		ДанныеДокумента.ОбъектРасчетов КАК ИсточникГФУРасчетов,
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов КАК КорИсточникГФУРасчетов
		|	ИЗ
		|		ДанныеДокументаШапка КАК ДанныеДокумента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|			ПО ИСТИНА
		|	ГДЕ
		|		ТаблицаРасшифровкаПлатежа.ОбъектРасчетов.Объект <> &Ссылка";
		
		МассивТекстовПодзапроса.Добавить(ТекстПодзапросаЗапроса);
		
	КонецЕсли;
	
	Если МассивТекстовПодзапроса.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстПодзапросаЗапроса = СтрСоединить(МассивТекстовПодзапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|	ДанныеДокумента.КорПартнер КАК КорПартнер,
	|	ДанныеДокумента.КорКонтрагент КАК КорКонтрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.КорНаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.КорНаправлениеДеятельности
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.КорДоговор КАК КорДоговор,
	|	ДанныеДокумента.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	&Валюта КАК Валюта,
	|
	|	СУММА(ДанныеДокумента.Сумма) КАК Сумма,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ДанныеДокумента.СуммаВВалюте) КАК СуммаВВалюте,
	|
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаВВалютеВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.КорВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|	СУММА(ДанныеДокумента.КорСуммаВВалютеВзаиморасчетов) КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеДокумента.КорИсточникГФУРасчетов КАК КорИсточникГФУРасчетов
	|ПОМЕСТИТЬ ВтДвиженияКонтрагентКонтрагент
	|ИЗ &ТекстВложенногоЗапроса КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|   ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.НаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.НаправлениеДеятельности
	|	КОНЕЦ,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.КорПартнер,
	|	ДанныеДокумента.КорКонтрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.КорНаправлениеДеятельности.УчетРасчетовСПоставщиками, ЛОЖЬ) ТОГДА
	|			ДанныеДокумента.КорНаправлениеДеятельности
	|	КОНЕЦ,
	|	ДанныеДокумента.КорДоговор,
	|	ДанныеДокумента.КорОбъектРасчетов,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.КорВалютаВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.КорИсточникГФУРасчетов
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстВложенногоЗапроса", "(" + ТекстПодзапросаЗапроса + ")");
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ДвиженияКонтрагентКонтрагент";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ДокументОбъект.ПроведеноБанком Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДвиженияКонтрагентКонтрагент", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияКонтрагентКонтрагент.Период                        КАК Период,
	|	ДвиженияКонтрагентКонтрагент.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ДвиженияКонтрагентКонтрагент.Организация                   КАК Организация,
	|	ДвиженияКонтрагентКонтрагент.Подразделение                 КАК Подразделение,
	|	ДвиженияКонтрагентКонтрагент.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|
	|	ДвиженияКонтрагентКонтрагент.Партнер                       КАК Партнер,
	|	ДвиженияКонтрагентКонтрагент.Контрагент                    КАК Контрагент,
	|	ДвиженияКонтрагентКонтрагент.Договор                       КАК Договор,
	|	ДвиженияКонтрагентКонтрагент.ОбъектРасчетов                КАК ОбъектРасчетов,
	|
	|	ДвиженияКонтрагентКонтрагент.КорПартнер                    КАК КорПартнер,
	|	ДвиженияКонтрагентКонтрагент.КорКонтрагент                 КАК КорКонтрагент,
	|	ДвиженияКонтрагентКонтрагент.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ДвиженияКонтрагентКонтрагент.КорДоговор                    КАК КорДоговор,
	|	ДвиженияКонтрагентКонтрагент.КорОбъектРасчетов             КАК КорОбъектРасчетов,
	|	ДвиженияКонтрагентКонтрагент.Валюта                        КАК Валюта,
	|
	|	ДвиженияКонтрагентКонтрагент.Сумма                         КАК Сумма,
	|	ДвиженияКонтрагентКонтрагент.СуммаРегл                     КАК СуммаРегл,
	|	ДвиженияКонтрагентКонтрагент.СуммаВВалюте                  КАК СуммаВВалюте,
	|
	|	ДвиженияКонтрагентКонтрагент.ВалютаВзаиморасчетов          КАК ВалютаВзаиморасчетов,
	|	ДвиженияКонтрагентКонтрагент.СуммаВВалютеВзаиморасчетов    КАК СуммаВВалютеВзаиморасчетов,
	|	ДвиженияКонтрагентКонтрагент.КорВалютаВзаиморасчетов       КАК КорВалютаВзаиморасчетов,
	|	ДвиженияКонтрагентКонтрагент.КорСуммаВВалютеВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|	ДвиженияКонтрагентКонтрагент.ИсточникГФУРасчетов           КАК ИсточникГФУРасчетов,
	|	ДвиженияКонтрагентКонтрагент.КорИсточникГФУРасчетов        КАК КорИсточникГФУРасчетов
	|
	|ИЗ
	|	ВтДвиженияКонтрагентКонтрагент КАК ДвиженияКонтрагентКонтрагент
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект = Неопределено)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	МассивТекстовЗапроса = Новый Массив;
	
	Если ДокументОбъект = Неопределено 
		ИЛИ (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка()) Тогда
				
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&ИдентификаторМетаданных                КАК ТипСсылки,
		|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
		|	&Организация                            КАК Организация,
		|	&ПартнерИзДокумента                     КАК Партнер,
		|	&БанковскийСчет                         КАК МестоХранения,
		|	&КонтрагентИзДокумента                  КАК Контрагент,
		|	&Подразделение                          КАК Подразделение,
		|	&Период                                 КАК ДатаДокументаИБ,
		|	&Ссылка                                 КАК Ссылка,
		
		|	&Номер                                  КАК НомерДокументаИБ,
		|	НЕОПРЕДЕЛЕНО                            КАК Статус,
		|	&Ответственный                          КАК Ответственный,
		|	&Автор                                  КАК Автор,
		|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
		|	&НазначениеПлатежа                      КАК Дополнительно,
		|	&Комментарий                            КАК Комментарий,
		|	&Проведен                               КАК Проведен,
		|	&ПометкаУдаления                        КАК ПометкаУдаления,
		|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
		|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
		|	ВЫБОР КОГДА &ПлатежСКонвертацией ТОГДА
		|		&СуммаВВалютеОтправителя
		|	ИНАЧЕ
		|		&СуммаДокумента
		|	КОНЕЦ КАК Сумма,
		|	&ВалютаДенежныхСредств                  КАК Валюта,
		|	&Договор                                КАК Договор,
		|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
		|	&Исправление                            КАК СторноИсправление,
		|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
		|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
		|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
		|		&Период
		|	КОНЕЦ КАК ДатаОтраженияВУчете,
		|	НЕОПРЕДЕЛЕНО КАК Приоритет
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И &ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
		|	)";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект = Неопределено 
		ИЛИ (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику) Тогда
				
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&ИдентификаторМетаданных                КАК ТипСсылки,
		|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
		|	&Организация                            КАК Организация,
		|	&Партнер                                КАК Партнер,
		|	&БанковскийСчет                         КАК МестоХранения,
		|	ВЫБОР
		|		КОГДА &ПеречислениеСотрудникуЧерезБанк
		|			ТОГДА &КонтрагентИзДокумента
		|		ИНАЧЕ &ПодотчетноеЛицо
		|	КОНЕЦ                                   КАК Контрагент,
		|	&Подразделение                          КАК Подразделение,
		|	&Период                                 КАК ДатаДокументаИБ,
		|	&Ссылка                                 КАК Ссылка,
		
		|	&Номер                                  КАК НомерДокументаИБ,
		|	НЕОПРЕДЕЛЕНО                            КАК Статус,
		|	&Ответственный                          КАК Ответственный,
		|	&Автор                                  КАК Автор,
		|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
		|	&НазначениеПлатежа                      КАК Дополнительно,
		|	&Комментарий                            КАК Комментарий,
		|	&Проведен                               КАК Проведен,
		|	&ПометкаУдаления                        КАК ПометкаУдаления,
		|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
		|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
		|	ВЫБОР КОГДА &ПлатежСКонвертацией ТОГДА
		|		&СуммаВВалютеОтправителя
		|	ИНАЧЕ
		|		&СуммаДокумента
		|	КОНЕЦ КАК Сумма,
		|	&ВалютаДенежныхСредств                  КАК Валюта,
		|	&Договор                                КАК Договор,
		|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
		|	&Исправление                            КАК СторноИсправление,
		|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
		|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
		|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
		|		&Период
		|	ИНАЧЕ
		|		ДАТАВРЕМЯ(1,1,1)
		|	КОНЕЦ КАК ДатаОтраженияВУчете,
		|	НЕОПРЕДЕЛЕНО КАК Приоритет
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И &ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
		|	)";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект = Неопределено 
		ИЛИ (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств) Тогда
				
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&ИдентификаторМетаданных                КАК ТипСсылки,
		|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
		|	&Организация                            КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
		|	&БанковскийСчет                         КАК МестоХранения,
		|	ДанныеДокумента.БанковскийСчетПолучательВладелец КАК Контрагент,
		|	&Подразделение                          КАК Подразделение,
		|	&Период                                 КАК ДатаДокументаИБ,
		|	&Ссылка                                 КАК Ссылка,
		
		|	&Номер                                  КАК НомерДокументаИБ,
		|	НЕОПРЕДЕЛЕНО                            КАК Статус,
		|	&Ответственный                          КАК Ответственный,
		|	&Автор                                  КАК Автор,
		|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
		|	&НазначениеПлатежа                      КАК Дополнительно,
		|	&Комментарий                            КАК Комментарий,
		|	&Проведен                               КАК Проведен,
		|	&ПометкаУдаления                        КАК ПометкаУдаления,
		|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
		|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
		|	ВЫБОР КОГДА &ПлатежСКонвертацией ТОГДА
		|		&СуммаВВалютеОтправителя
		|	ИНАЧЕ
		|		&СуммаДокумента
		|	КОНЕЦ КАК Сумма,
		|	&ВалютаДенежныхСредств                  КАК Валюта,
		|	&Договор                                КАК Договор,
		|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
		|	&Исправление                            КАК СторноИсправление,
		|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
		|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
		|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
		|		&Период
		|	ИНАЧЕ
		|		ДАТАВРЕМЯ(1,1,1)
		|	КОНЕЦ КАК ДатаОтраженияВУчете,
		|	НЕОПРЕДЕЛЕНО КАК Приоритет
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И &ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
		|	)";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект = Неопределено 
		ИЛИ (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств) Тогда
				
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&ИдентификаторМетаданных                КАК ТипСсылки,
		|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
		|	&Организация                            КАК Организация,
		|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
		|	&БанковскийСчет                         КАК МестоХранения,
		|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
		|	&Подразделение                          КАК Подразделение,
		|	&Период                                 КАК ДатаДокументаИБ,
		|	&Ссылка                                 КАК Ссылка,
		
		|	&Номер                                  КАК НомерДокументаИБ,
		|	НЕОПРЕДЕЛЕНО                            КАК Статус,
		|	&Ответственный                          КАК Ответственный,
		|	&Автор                                  КАК Автор,
		|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
		|	&НазначениеПлатежа                      КАК Дополнительно,
		|	&Комментарий                            КАК Комментарий,
		|	&Проведен                               КАК Проведен,
		|	&ПометкаУдаления                        КАК ПометкаУдаления,
		|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
		|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
		|	&СуммаДокумента                         КАК Сумма,
		|	&Валюта                                 КАК Валюта,
		|	НЕОПРЕДЕЛЕНО                            КАК Договор,
		|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
		|	&Исправление                            КАК СторноИсправление,
		|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
		|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
		|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
		|		&Период
		|	ИНАЧЕ
		|		ДАТАВРЕМЯ(1,1,1)
		|	КОНЕЦ КАК ДатаОтраженияВУчете,
		|	НЕОПРЕДЕЛЕНО КАК Приоритет
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И &ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
		|	)";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект = Неопределено
		ИЛИ (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту) Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&ИдентификаторМетаданных                КАК ТипСсылки,
		|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
		|	&Организация                            КАК Организация,
		|	&Партнер                                КАК Партнер,
		|	&БанковскийСчет                         КАК МестоХранения,
		|	&Контрагент                             КАК Контрагент,
		|	&Подразделение                          КАК Подразделение,
		|	&Период                                 КАК ДатаДокументаИБ,
		|	&Ссылка                                 КАК Ссылка,
		
		|	&Номер                                  КАК НомерДокументаИБ,
		|	НЕОПРЕДЕЛЕНО                            КАК Статус,
		|	&Ответственный                          КАК Ответственный,
		|	&Автор                                  КАК Автор,
		|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
		|	&НазначениеПлатежа                      КАК Дополнительно,
		|	&Комментарий                            КАК Комментарий,
		|	&Проведен                               КАК Проведен,
		|	&ПометкаУдаления                        КАК ПометкаУдаления,
		|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
		|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
		|	&СуммаДокумента                         КАК Сумма,
		|	&Валюта                                 КАК Валюта,
		|	ДанныеДокумента.ДоговорЭквайринга       КАК Договор,
		|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
		|	&Исправление                            КАК СторноИсправление,
		|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
		|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
		|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
		|		&Период
		|	КОНЕЦ КАК ДатаОтраженияВУчете,
		|	НЕОПРЕДЕЛЕНО КАК Приоритет
		|ИЗ
		|	ДанныеДокументаШапка КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И &ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту)
		|	)";
		
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
	Если ДокументОбъект <> Неопределено И МассивТекстовЗапроса.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Если ДокументОбъект = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаШапка", "Документ.СписаниеБезналичныхДенежныхСредств");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокумента.БанковскийСчетПолучательВладелец", "ДанныеДокумента.БанковскийСчетПолучатель.Владелец");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция СтатьяДвиженияДенежныхСредствДокумента(ДанныеДокумента)
	
	Если ДанныеДокумента.ПлатежСКонвертацией Тогда
		СтатьяДвиженияДенежныхСредств = ДанныеДокумента.СтатьяДвиженияДенежныхСредствКонвертация;
	Иначе
		Если ЗначениеЗаполнено(ДанныеДокумента.СтатьяДвиженияДенежныхСредств) Тогда
			СтатьяДвиженияДенежныхСредств = ДанныеДокумента.СтатьяДвиженияДенежныхСредств;
		Иначе
			СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПредопределеннаяСтатьяДДС(
				ДанныеДокумента.ХозяйственнаяОперация, ДанныеДокумента.Валюта);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтатьяДвиженияДенежныхСредств;
	
КонецФункции

Процедура ДобавитьТекстыОтраженияВзаиморасчетов(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	Если НЕ (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне) Тогда
		Возврат;
	КонецЕсли;
	
	#Область КурсыВалютДокумента
	
	ИмяРегистра = "ВременнаяТаблицаКурсыВалютДокумента";

	ТекстЗапросаКурсыВалютДокумента = 
		"ВЫБРАТЬ
		|	ДанныеДокументаШапка.Ссылка КАК Ссылка,
		|	ДанныеДокументаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ДанныеДокументаШапка.Дата, ДЕНЬ) = ДанныеДокументаШапка.ДатаПроведенияБанком
		|		ИЛИ НЕ ДанныеДокументаШапка.ПроведеноБанком
		|			ТОГДА ДанныеДокументаШапка.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ДанныеДокументаШапка.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ КАК ДатаКурса,
		|	ОбъектыРасчетов.Ссылка КАК ОбъектРасчетов,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаДокумента,
		|	Таблица.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
		|ИЗ
		|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК ДанныеДокументаШапка
		|		ПО Таблица.Ссылка = ДанныеДокументаШапка.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
		|			ПО Таблица.Ссылка = ОбъектыРасчетов.Объект
		|				И Таблица.ОбъектРасчетовПлатежПартнер = ОбъектыРасчетов.Партнер
		|				И Таблица.ВалютаВзаиморасчетов = ОбъектыРасчетов.ВалютаВзаиморасчетов
		|				И НЕ ОбъектыРасчетов.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокументаШапка.Ссылка КАК Ссылка,
		|	ДанныеДокументаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ДанныеДокументаШапка.Дата, ДЕНЬ) = ДанныеДокументаШапка.ДатаПроведенияБанком
		|		ИЛИ НЕ ДанныеДокументаШапка.ПроведеноБанком
		|		ИЛИ ДанныеДокументаШапка.Исправление
		|			ТОГДА ДанныеДокументаШапка.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ДанныеДокументаШапка.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ КАК ДатаКурса,
		|	Таблица.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаДокумента,
		|	Таблица.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
		|ИЗ
		|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК ДанныеДокументаШапка
		|		ПО Таблица.Ссылка = ДанныеДокументаШапка.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокументаШапка.Ссылка КАК Ссылка,
		|	ДанныеДокументаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ДанныеДокументаШапка.Дата, ДЕНЬ) = ДанныеДокументаШапка.ДатаПроведенияБанком
		|		ИЛИ НЕ ДанныеДокументаШапка.ПроведеноБанком
		|		ИЛИ ДанныеДокументаШапка.Исправление
		|			ТОГДА ДанныеДокументаШапка.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ДанныеДокументаШапка.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ КАК ДатаКурса,
		|	ОбъектыРасчетов.Ссылка КАК ОбъектРасчетов,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаДокумента,
		|	Таблица.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
		|ИЗ
		|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК ДанныеДокументаШапка
		|		ПО Таблица.Ссылка = ДанныеДокументаШапка.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
		|			ПО Таблица.Ссылка = ОбъектыРасчетов.Объект
		|				И Таблица.ОбъектРасчетовПлатежПартнер = ОбъектыРасчетов.Партнер
		|				И Таблица.ВалютаВзаиморасчетов = ОбъектыРасчетов.ВалютаВзаиморасчетов
		|				И НЕ ОбъектыРасчетов.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокументаШапка.Ссылка КАК Ссылка,
		|	ДанныеДокументаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеДокументаШапка.ПроведеноБанком
		|		ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокументаШапка.Дата, ДЕНЬ) = ДанныеДокументаШапка.ДатаПроведенияБанком
		|			ТОГДА ДанныеДокументаШапка.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ДанныеДокументаШапка.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ КАК ДатаКурса,
		|	Таблица.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ДанныеДокументаШапка.Валюта КАК ВалютаДокумента,
		|	Таблица.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
		|ИЗ
		|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК ДанныеДокументаШапка
		|		ПО Таблица.Ссылка = ДанныеДокументаШапка.Ссылка
		|";
		
	ТекстЗапросаКурсыВалютДокумента = ВзаиморасчетыСервер.ПолучитьТаблицуКурсовВалютНаправленийДеятельности(ТекстЗапросаКурсыВалютДокумента, Истина);

	ТекстыЗапроса.Добавить(ТекстЗапросаКурсыВалютДокумента, ИмяРегистра);
	
	#КонецОбласти
	
	Если НЕ Запрос.Параметры.Свойство("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств") Тогда
		Запрос.УстановитьПараметр("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств",
			ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	КонецЕсли;
	
	#Область РасчетыСКлиентами
	
	#Область ТекстВозврат
	
	ТекстВозврат = "";
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		И ДокументОбъект.ПроведеноБанком Тогда
			
	ТекстВозврат = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                                           КАК Ссылка,
		|	Документ.Организация                                                     КАК Организация,
		|	ВЫБОР КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		КОГДА &ЕстьПодарочныйСертификат = ИСТИНА
		|			ТОГДА &Партнер
		|		ИНАЧЕ Таблица.Партнер
		|	КОНЕЦ                                                                    КАК Партнер,
		|	ОбъектРасчетовПлатеж.Ссылка                                              КАК ОбъектРасчетов,
		|	
		|	Таблица.ВалютаВзаиморасчетов                                             КАК ВалютаВзаиморасчетов,
		|	Таблица.СуммаВзаиморасчетов                                              КАК СуммаВзаиморасчетов,
		|	Документ.Валюта                                                          КАК ВалютаДокумента,
		|	Таблица.Сумма                                                            КАК Сумма,
		|	ВЫБОР 
		|		КОГДА Документ.ПроведеноБанком
		|				И (НЕ (Документ.ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
		|					ИЛИ Таблица.ЗаявкаНаРасходованиеДенежныхСредствКонтролироватьОплатуПоОбъектамРасчетов)
		|			ТОГДА Таблица.СуммаВзаиморасчетов 
		|		ИНАЧЕ 0 
		|	КОНЕЦ КАК УвеличениеОплачивается,
		|	
		|	Документ.ХозяйственнаяОперация                                           КАК ХозяйственнаяОперация,
		|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Документ.Дата, ДЕНЬ) = Документ.ДатаПроведенияБанком
		|		ИЛИ НЕ Документ.ПроведеноБанком
		|		ИЛИ Документ.Исправление
		|			ТОГДА Документ.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(Документ.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                                    КАК ДатаРегистратора,
		|	Документ.Номер                                                           КАК НомерРегистратора,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)                           КАК ФормаОплаты,
		|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Документ.Дата, ДЕНЬ) = Документ.ДатаПроведенияБанком 
		|		ИЛИ НЕ Документ.ПроведеноБанком
		|			ТОГДА Документ.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(Документ.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                                    КАК ДатаКурса,
		|	Таблица.СтатьяДвиженияДенежныхСредств                                    КАК СтатьяДвиженияДенежныхСредств,
		|	Таблица.ЗаявкаНаРасходованиеДенежныхСредств                              КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	Таблица.ИдентификаторСтроки                                              КАК ИдентификаторФинЗаписи,
		|	&НастройкаХозяйственнойОперации                                          КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК Документ
		|			ПО Документ.Ссылка = Таблица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектРасчетовПлатеж
		|			ПО Таблица.Ссылка = ОбъектРасчетовПлатеж.Объект
		|				И Таблица.ОбъектРасчетовПлатежПартнер = ОбъектРасчетовПлатеж.Партнер
		|				И Таблица.ВалютаВзаиморасчетов = ОбъектРасчетовПлатеж.ВалютаВзаиморасчетов
		|				И НЕ ОбъектРасчетовПлатеж.ПометкаУдаления
		|";
	
	КонецЕсли;

	#КонецОбласти
	
	#Область УменьшениеОплачивается
	
	ТекстУменьшитьОплачивается = "";
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию) Тогда
			
	ТекстУменьшитьОплачивается = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                                          КАК Ссылка,
		|	Документ.Организация                                              КАК Организация,
		|	ВЫБОР КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		КОГДА &ЕстьПодарочныйСертификат = ИСТИНА
		|			ТОГДА &Партнер
		|		ИНАЧЕ Документ.Партнер
		|	КОНЕЦ                                                                   КАК Партнер,
		|
		|	Таблица.ОбъектРасчетов                                                  КАК ОбъектРасчетов,
		|
		|	Таблица.ВалютаВзаиморасчетов                                            КАК ВалютаВзаиморасчетов,
		|	Таблица.СуммаВзаиморасчетов                                             КАК Оплачивается,
		|	Документ.ХозяйственнаяОперация                                    КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)                          КАК ФормаОплаты,
		|	Таблица.СтатьяДвиженияДенежныхСредств                                   КАК СтатьяДвиженияДенежныхСредств,
		|	Таблица.ЗаявкаНаРасходованиеДенежныхСредств                             КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	Документ.Валюта                                                   КАК ВалютаДокумента,
		|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Документ.Дата, ДЕНЬ) = Документ.ДатаПроведенияБанком
		|		ИЛИ НЕ Документ.ПроведеноБанком
		|		ИЛИ Документ.Исправление
		|			ТОГДА Документ.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(Документ.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                                   КАК ДатаРегистратора,
		|	Документ.Номер                                                    КАК НомерРегистратора
		|ИЗ
		|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК Документ
		|			ПО Документ.Ссылка = Таблица.Ссылка
		|ГДЕ
		|	 НЕ (Документ.ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
		|";
	
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПереносЗадолженности
	
	ТекстПереносЗадолженности = "";
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		И ДокументОбъект.ПроведеноБанком Тогда
			
	ТекстПереносЗадолженности = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                             КАК Ссылка,
		|	Документ.Организация                                       КАК Организация,
		|	ВЫБОР КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		КОГДА &ЕстьПодарочныйСертификат = ИСТИНА
		|			ТОГДА &Партнер
		|		ИНАЧЕ Таблица.Партнер
		|	КОНЕЦ                                                      КАК Партнер,
		|	ОбъектРасчетовПлатеж.Ссылка                                КАК ОбъектРасчетовПриемник,
		|	ОбъектыРасчетов.Ссылка                                     КАК ОбъектРасчетовИсточник,
		|	
		|	Таблица.ВалютаВзаиморасчетов                               КАК ВалютаВзаиморасчетов,
		|	Документ.Валюта                                            КАК ВалютаДокумента,
		|	Таблица.СуммаВзаиморасчетов                                КАК СуммаВзаиморасчетов,
		|	Таблица.Сумма                                              КАК Сумма,
		|	
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)             КАК ФормаОплаты,
		|	Документ.Номер                                             КАК НомерРегистратора,
		|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Документ.Дата, ДЕНЬ) = Документ.ДатаПроведенияБанком 
		|		ИЛИ НЕ Документ.ПроведеноБанком
		|		ИЛИ Документ.Исправление ТОГДА
		|		Документ.Дата
		|	ИНАЧЕ
		|		КОНЕЦПЕРИОДА(Документ.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                      КАК ДатаРегистратора,
		|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Документ.Дата, ДЕНЬ) = Документ.ДатаПроведенияБанком 
		|		ИЛИ НЕ Документ.ПроведеноБанком
		|		ИЛИ Документ.Исправление 
		|			ТОГДА Документ.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(Документ.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                      КАК ДатаКурса,
		|	Таблица.СтатьяДвиженияДенежныхСредств                      КАК СтатьяДвиженияДенежныхСредств,
		|	Таблица.ИдентификаторСтроки                                КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПереносАванса) КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК Документ
		|			ПО Документ.Ссылка = Таблица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектРасчетовПлатеж
		|			ПО Таблица.Ссылка = ОбъектРасчетовПлатеж.Объект
		|				И Таблица.ОбъектРасчетовПлатежПартнер = ОбъектРасчетовПлатеж.Партнер
		|				И Таблица.ВалютаВзаиморасчетов = ОбъектРасчетовПлатеж.ВалютаВзаиморасчетов
		|				И НЕ ОбъектРасчетовПлатеж.ПометкаУдаления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов 
		|			ПО Таблица.ОбъектРасчетов = ОбъектыРасчетов.Ссылка
		|";
	
	КонецЕсли;
	
	#КонецОбласти
	
	ВзаиморасчетыСервер.ПроведениеВозвратаОплатыКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстВозврат,
		ТекстПереносЗадолженности, ТекстУменьшитьОплачивается);
	
	#КонецОбласти
	
	#Область РасчетыСПоставщиками
	
	Если (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне) Тогда
			
	ТекстОплата = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                                 КАК Ссылка,
		|	Документ.Организация                                           КАК Организация,
		|	ВЫБОР КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		ИНАЧЕ Таблица.Партнер
		|	КОНЕЦ                                                         КАК Партнер,
		|	ВЫБОР КОГДА НЕ Документ.ПроведеноБанком
		|		ИЛИ НАЧАЛОПЕРИОДА(Документ.Дата, ДЕНЬ) = Документ.ДатаПроведенияБанком
		|		ИЛИ Документ.Исправление ТОГДА
		|		Документ.Дата
		|	ИНАЧЕ
		|		КОНЕЦПЕРИОДА(Документ.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                          КАК ДатаРегистратора,
		|	Документ.Номер                                                 КАК НомерРегистратора,
		|	
		|	Таблица.ВалютаВзаиморасчетов                                   КАК ВалютаВзаиморасчетов,
		|	Таблица.ОбъектРасчетов                                         КАК ОбъектРасчетов,
		|	ВЫБОР 
		|		КОГДА Документ.ПроведеноБанком 
		|			ТОГДА Таблица.Сумма 
		|		ИНАЧЕ 0 
		|	КОНЕЦ                                                          КАК Сумма,
		|	ВЫБОР 
		|		КОГДА Документ.ПроведеноБанком 
		|			ТОГДА Таблица.СуммаВзаиморасчетов 
		|		ИНАЧЕ 0 
		|	КОНЕЦ                                                          КАК СуммаВзаиморасчетов,
		|	ВЫБОР 
		|		КОГДА Документ.ПроведеноБанком
		|				И (НЕ (Документ.ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
		|					ИЛИ Таблица.ЗаявкаНаРасходованиеДенежныхСредствКонтролироватьОплатуПоОбъектамРасчетов)
		|			ТОГДА Таблица.СуммаВзаиморасчетов 
		|		ИНАЧЕ 0 
		|	КОНЕЦ                                                          КАК УменьшениеОплачивается,
		|	ВЫБОР 
		|		КОГДА НЕ (Документ.ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
		|			ТОГДА Таблица.СуммаВзаиморасчетов 
		|		ИНАЧЕ 0 
		|	КОНЕЦ                                                          КАК УвеличениеОплачивается,
		|	0                                                              КАК СуммаУпр,
		|	0                                                              КАК СуммаРегл,
		|
		|	Документ.ХозяйственнаяОперация                                 КАК ХозяйственнаяОперация,
		|	Таблица.СтатьяДвиженияДенежныхСредств                          КАК СтатьяДвиженияДенежныхСредств,
		|	Таблица.ЗаявкаНаРасходованиеДенежныхСредств                    КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)                 КАК ФормаОплаты,
		|	Документ.Валюта                                                КАК ВалютаДокумента,
		|	ВЫБОР КОГДА НЕ Документ.ПроведеноБанком
		|		ИЛИ НАЧАЛОПЕРИОДА(Документ.Дата, ДЕНЬ) = Документ.ДатаПроведенияБанком 
		|			ТОГДА Документ.Дата
		|		ИНАЧЕ КОНЕЦПЕРИОДА(Документ.ДатаПроведенияБанком, ДЕНЬ)
		|	КОНЕЦ                                                          КАК ДатаКурса,
		|	Таблица.ДатаПогашения                                          КАК ДатаПогашения,
		|	Неопределено                                                   КАК СвязанныйДокумент,
		|	Таблица.ИдентификаторСтроки                                    КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	ДанныеДокументаТаблицаРасшифровкаПлатежа КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаШапка КАК Документ
		|			ПО Документ.Ссылка = Таблица.Ссылка
		|";
	
		ВзаиморасчетыСервер.ПроведениеОплатыПоставщику(Запрос, ТекстыЗапроса, Регистры, ТекстОплата);
	
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ТекстЗапросаРасшифровкаПлатежаВВалютеПлательщика(СписокЗапросов)

	ТекстЗапроса = "ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Сумма КАК Сумма,
	|	Таблица.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ РасшифровкаПлатежаВВалютеПлательщика
	|ИЗ
	|	&СуммыРасшифровкиВВалютеПлательщика КАК Таблица
	|";
	
	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	// Банковские реквизиты
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеквизитыПлатежа";
	КомандаПечати.Представление = НСтр("ru = 'Реквизиты международного платежа'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	СписаниеБезналичныхДенежныхСредствЛокализация.ДобавитьКомандыПечати(КомандыПечати);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеквизитыПлатежа") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РеквизитыПлатежа",
			НСтр("ru='Банковские реквизиты'"),
			СформироватьРеквизитыПлатежа(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.СписаниеБезналичныхДенежныхСредств.ПФ_MXL_РеквизитыПлатежа");
	КонецЕсли;
	СписаниеБезналичныхДенежныхСредствЛокализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Контрагент";
	МассивРеквизитовПолучателей = СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей; // Массив
	
	МассивРеквизитовПолучателей.Добавить("Контрагент");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		МассивРеквизитовПолучателей.Добавить("РасшифровкаПлатежа.Партнер");
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьРеквизитыПлатежа(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеБезналичныхДенежныхСредств_РеквизитыПлатежа";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеБезналичныхДенежныхСредств.ПФ_MXL_РеквизитыПлатежа");
	
	ТаблицаСсылок = Новый ТаблицаЗначений;
	ТаблицаСсылок.Колонки.Добавить("Ссылка",
		Новый ОписаниеТипов("ДокументСсылка.СписаниеБезналичныхДенежныхСредств, ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств"));
	Для Инд = 1 По МассивОбъектов.Количество() Цикл
		ТаблицаСсылок.Добавить();
	КонецЦикла;
	ТаблицаСсылок.ЗагрузитьКолонку(МассивОбъектов, "Ссылка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ
	|	ПлатежныеПоручения
	|ИЗ
	|	&ТаблицаСсылок КАК ТаблицаСсылок
	|ГДЕ
	|	ТаблицаСсылок.Ссылка ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|	ИЛИ ТаблицаСсылок.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|;"
		+ Обработки.КлиентБанк.ТекстЗапросаПлатежныеПорученияТретьиЛица() + "ОБЪЕДИНИТЬ ВСЕ"
		+ Обработки.КлиентБанк.ТекстЗапросаПлатежныеПорученияВнутренние() + "ОБЪЕДИНИТЬ ВСЕ"
		+ Обработки.КлиентБанк.ТекстЗапросаПлатежныеПорученияПереводы()
	;
	Запрос.УстановитьПараметр("ТаблицаСсылок", ТаблицаСсылок);
	
	ПоляЗапроса = Новый Массив;
	ПоляЗапроса.Добавить("Ссылка");
	ПоляЗапроса.Добавить("Сумма");
	ПоляЗапроса.Добавить("Валюта");
	ПоляЗапроса.Добавить("Номер");
	ПоляЗапроса.Добавить("Дата");
	ПоляЗапроса.Добавить("НазначениеПлатежа");
	ПоляЗапроса.Добавить("КонтрагентНаименованиеМеждународное");
	ПоляЗапроса.Добавить("КонтрагентАдресМеждународный");
	ПоляЗапроса.Добавить("КонтрагентРасчСчет");
	ПоляЗапроса.Добавить("КонтрагентРасчСчетЭтоIBAN");
	ПоляЗапроса.Добавить("КонтрагентБанкМеждународный");
	ПоляЗапроса.Добавить("КонтрагентАдресБанкаМеждународный");
	ПоляЗапроса.Добавить("КонтрагентСВИФТБанка");
	ПоляЗапроса.Добавить("КонтрагентБИКБанка");
	ПоляЗапроса.Добавить("КонтрагентКоррСчетБанка");
	ПоляЗапроса.Добавить("КонтрагентБанкДляРасчетовМеждународный");
	ПоляЗапроса.Добавить("КонтрагентАдресБанкаДляРасчетовМеждународный");
	ПоляЗапроса.Добавить("КонтрагентСВИФТБанкаДляРасчетов");
	ПоляЗапроса.Добавить("КонтрагентБИКБанкаДляРасчетов");
	ПоляЗапроса.Добавить("ОрганизацияНаименованиеМеждународное");
	ПоляЗапроса.Добавить("ОрганизацияАдресМеждународный");
	ПоляЗапроса.Добавить("ОрганизацияРасчСчет");
	ПоляЗапроса.Добавить("ОрганизацияРасчСчетЭтоIBAN");
	ПоляЗапроса.Добавить("ОрганизацияБанкМеждународный");
	ПоляЗапроса.Добавить("ОрганизацияАдресБанкаМеждународный");
	ПоляЗапроса.Добавить("ОрганизацияСВИФТБанка");
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	
	ЗапросВыбора = СхемаЗапроса.ПакетЗапросов[1]; // ЗапросВыбораСхемыЗапроса
	ВсегоКолонок = ЗапросВыбора.Колонки.Количество() - 1;
	Для Инд = 0 По ВсегоКолонок Цикл
		Колонка = ЗапросВыбора.Колонки.Получить(ВсегоКолонок - Инд);
		Если ПоляЗапроса.Найти(Колонка.Псевдоним) = Неопределено Тогда
			ЗапросВыбора.Колонки.Удалить(ВсегоКолонок - Инд);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Если ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СписаниеБезналичныхДенежныхСредств", "ЗаявкаНаРасходованиеДенежныхСредств");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДанныеДокумента.ДатаВходящегоДокумента", "ДанныеДокумента.ЖелательнаяДатаПлатежа");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДанныеДокумента.Дата  ", "ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата)  ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДанныеДокумента.Номер  ", "ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Номер, ДанныеДокумента.Номер)  ");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Реквизиты");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		
		ОбластьМакета.Параметры.СуммаПлатежа = Формат(Выборка.Сумма, "ЧДЦ=2") + " " + Строка(Выборка.Валюта);
		
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств") Тогда
			ОбластьМакета.Параметры.Документ = СтрШаблон(НСтр("ru = 'Реквизиты платежа'", ОбщегоНазначения.КодОсновногоЯзыка()) 
				+ " №%1 " + НСтр("ru = 'от'", ОбщегоНазначения.КодОсновногоЯзыка()) + " %2",
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер), Формат(Выборка.Дата, "ДЛФ=Д"));
		Иначе
			ОбластьМакета.Параметры.Документ = НСтр("ru = 'Реквизиты платежа'", ОбщегоНазначения.КодОсновногоЯзыка());
		КонецЕсли;
		
		Если Выборка.ОрганизацияРасчСчетЭтоIBAN = Истина Тогда
			ОбластьМакета.Параметры.ПредставлениеСчетаОрганизации = "IBAN"
		Иначе
			ОбластьМакета.Параметры.ПредставлениеСчетаОрганизации = НСтр("ru = 'Номер счета'");
		КонецЕсли;
		
		Если Выборка.КонтрагентРасчСчетЭтоIBAN = Истина Тогда
			ОбластьМакета.Параметры.ПредставлениеСчетаПолучателя = "IBAN"
		Иначе
			ОбластьМакета.Параметры.ПредставлениеСчетаПолучателя = НСтр("ru = 'Номер счета'");
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона:
//         * Имя            - Строка - Уникальное имя общего реквизита.
//         * Представление  - Строка - Представление общего реквизита.
//         * Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         * Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения:
//         * Имя            - Строка - Уникальное имя вложения.
//         * Представление  - Строка - Представление варианта.
//         * ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие из КлючИЗначение- список используемых в шаблоне реквизитов:
//      * Ключ     - Строка - имя реквизита в шаблоне;
//      * Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие из КлючИЗначение - список используемых в шаблоне общих реквизитов:
//      * Ключ     - Строка - имя реквизита в шаблоне;
//      * Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие из КлючИЗначение - значения реквизитов
//      * Ключ     - Строка - имя вложения в шаблоне;
//      * Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS:
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма:
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Добавляет команду создания документа "Списание безналичных ДС".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//	ТаблицаЗначений, Неопределено - сформированные команды для вывода в подменю.
Функция ДобавитьКомандуСоздатьНаОснованииОтчетаПоКомиссии_Вознаграждение(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеБезналичныхДенежныхСредств) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.СписаниеБезналичныхДсНаОснованииОтчетаПоКомиссии_Вознаграждение";
		КомандаСоздатьНаОсновании.Идентификатор = "СписаниеБезналичныхДсНаОснованииОтчетаПоКомиссии_Вознаграждение";
		КомандаСоздатьНаОсновании.Представление =
			ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств)
			+ " " + НСтр("ru = 'комитента (вознаграждение комиссионеру)'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Функция ищет зеркальный документ ПоступлениеБДС для операций между Организациями (Интеркампани).
//
// Параметры:
//	ДокументСсылка - ДокументСсылка.СписаниеБезналичныхДенежныхСредств - Документ, для которого необходимо найти зеркальный документ ПоступлениеБДС.
//
// Возвращаемое значение:
//	ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств, Неопределено - Зеркальный платеж или Неопределено, если документ не найден.
//
Функция НайтиЗеркальныйПлатеж(ДокументСсылка) Экспорт
	
	ЗеркальныйПлатеж = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПоступлениеБезналичныхДенежныхСредств.Ссылка
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеБезналичныхДенежныхСредств
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|ПО 
	|	ПоступлениеБезналичныхДенежныхСредств.БанковскийСчет = СписаниеБезналичныхДенежныхСредств.БанковскийСчетПолучатель
	|	И ПоступлениеБезналичныхДенежныхСредств.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	|	И ПоступлениеБезналичныхДенежныхСредств.Валюта = СписаниеБезналичныхДенежныхСредств.Валюта
	|	И ПоступлениеБезналичныхДенежныхСредств.ДатаВходящегоДокумента = СписаниеБезналичныхДенежныхСредств.ДатаВходящегоДокумента
	|	И ПоступлениеБезналичныхДенежныхСредств.НомерВходящегоДокумента = СписаниеБезналичныхДенежныхСредств.НомерВходящегоДокумента
	|	И ПоступлениеБезналичныхДенежныхСредств.БанковскийСчетОтправитель = СписаниеБезналичныхДенежныхСредств.БанковскийСчет
	|	И ПоступлениеБезналичныхДенежныхСредств.СуммаДокумента = СписаниеБезналичныхДенежныхСредств.СуммаДокумента
	|ГДЕ
	|	СписаниеБезналичныхДенежныхСредств.Ссылка = &ДокументСсылка
	|";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
		ЗеркальныйПлатеж = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ЗеркальныйПлатеж;
	
КонецФункции

// Проверяет соответствие расшифровок платежа в зеркальном ПоступленииБДС,
// для операций между Организациями (Интеркампани).
//
// Параметры:
//	ДокументСсылка - ДокументСсылка.СписаниеБезналичныхДенежныхСредств - Документ списания
//  ЗеркальныйПлатежСсылка - ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств - Документ поступления
//
// Возвращаемое значение:
//  Булево - Признак соответствия платежей
Функция СоответствуетЗеркальномуПлатежу(ДокументСсылка, ЗеркальныйПлатежСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИСТИНА КАК ЕстьРазличия
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА
	|				ПоступлениеБДСРасшифровка.ОбъектРасчетов.Объект = &ПоступлениеБДС ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				ПоступлениеБДСРасшифровка.ОбъектРасчетов.Объект
	|		КОНЕЦ КАК ОбъектРасчетов,
	|		ПоступлениеБДСРасшифровка.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		СУММА(ПоступлениеБДСРасшифровка.Сумма) КАК СуммаПоступление,
	|		СУММА(ПоступлениеБДСРасшифровка.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетовПоступление,
	|		СУММА(0) КАК СуммаСписание,
	|		СУММА(0) КАК СуммаВзаиморасчетовСписание,
	|		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчет КАК БанковскийСчетПоступление,
	|		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчетОтправитель КАК БанковскийСчетОтправительПоступление,
	|		ПоступлениеБДСРасшифровка.Ссылка.ДатаВходящегоДокумента КАК ДатаВходящегоДокументаПоступление,
	|		ПоступлениеБДСРасшифровка.Ссылка.НомерВходящегоДокумента КАК НомерВходящегоДокументаПоступление,
	|		NULL КАК БанковскийСчетПолучательСписание,
	|		NULL КАК БанковскийСчетСписание,
	|		NULL КАК ДатаВходящегоДокументаСписание,
	|		NULL КАК НомерВходящегоДокументаСписание
	|	ИЗ
	|		Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеБДСРасшифровка
	|	ГДЕ
	|		ПоступлениеБДСРасшифровка.Ссылка = &ПоступлениеБДС
	|		И ПоступлениеБДСРасшифровка.ОбъектРасчетов.Объект <> &ПоступлениеБДС
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоступлениеБДСРасшифровка.ВалютаВзаиморасчетов,
	|		ВЫБОР
	|			КОГДА
	|				ПоступлениеБДСРасшифровка.ОбъектРасчетов.Объект = &ПоступлениеБДС ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				ПоступлениеБДСРасшифровка.ОбъектРасчетов.Объект
	|		КОНЕЦ,
	|		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчет,
	|		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчетОтправитель,
	|		ПоступлениеБДСРасшифровка.Ссылка.ДатаВходящегоДокумента,
	|		ПоступлениеБДСРасшифровка.Ссылка.НомерВходящегоДокумента
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА
	|				СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект = &СписаниеБДС ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект
	|		КОНЕЦ КАК ОбъектРасчетов,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|		0,
	|		0,
	|		СУММА(СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Сумма),
	|		СУММА(СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.СуммаВзаиморасчетов),
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчетПолучатель,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчет,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.ДатаВходящегоДокумента,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.НомерВходящегоДокумента
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа
	|	ГДЕ
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка = &СписаниеБДС
	|		И СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект <> &СписаниеБДС
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА
	|				СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект = &СписаниеБДС ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект
	|		КОНЕЦ,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчет,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.ДатаВходящегоДокумента,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.НомерВходящегоДокумента,
	|		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчетПолучатель) КАК РасшифровкаПоступлениеСписание
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПоступлениеСписание.ОбъектРасчетов,
	|	РасшифровкаПоступлениеСписание.ВалютаВзаиморасчетов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(РасшифровкаПоступлениеСписание.СуммаПоступление) <> СУММА(РасшифровкаПоступлениеСписание.СуммаСписание)
	|		ИЛИ СУММА(РасшифровкаПоступлениеСписание.СуммаВзаиморасчетовПоступление) <> СУММА(РасшифровкаПоступлениеСписание.СуммаВзаиморасчетовСписание)
	|		ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетПолучательСписание)
	|		ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетОтправительПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетСписание)
	|		ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.ДатаВходящегоДокументаПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.ДатаВходящегоДокументаСписание)
	|		ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.НомерВходящегоДокументаПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.НомерВходящегоДокументаСписание))
	|";
	
	Запрос.УстановитьПараметр("ПоступлениеБДС", ЗеркальныйПлатежСсылка);
	Запрос.УстановитьПараметр("СписаниеБДС", ДокументСсылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Не Выборка.Следующий();
	
КонецФункции

// Приводит в соответствие зеркальное ПоступленииБДС,
// для операций между Организациями (Интеркампани).
//
// Параметры:
//    ДокументСсылка - ДокументСсылка.СписаниеБезналичныхДенежныхСредств - Документ списания
//    ЗеркальныйПлатежОбъект - ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств - Документ поступления
//
// Возвращаемое значение:
//  Булево - Признак успеха операции
Функция ПривестиВСоответствиеЗеркальныйПлатеж(ДокументСсылка, ЗеркальныйПлатежОбъект) Экспорт
	
	Реквизиты = Новый Структура("РасшифровкаПлатежа, СуммаДокумента, БанковскийСчетПолучатель,
		|БанковскийСчет,ДатаВходящегоДокумента, НомерВходящегоДокумента, ХозяйственнаяОперация");
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, Реквизиты);
	
	ЗеркальныйПлатежОбъект.СуммаДокумента = Реквизиты.СуммаДокумента;
	ЗеркальныйПлатежОбъект.БанковскийСчет = Реквизиты.БанковскийСчетПолучатель;
	ЗеркальныйПлатежОбъект.БанковскийСчетОтправитель = Реквизиты.БанковскийСчет;
	ЗеркальныйПлатежОбъект.ДатаВходящегоДокумента= Реквизиты.ДатаВходящегоДокумента;
	ЗеркальныйПлатежОбъект.НомерВходящегоДокумента= Реквизиты.НомерВходящегоДокумента;
	
	РасшифровкаПлатежа = Реквизиты.РасшифровкаПлатежа.Выгрузить();
	РасшифровкаПлатежаЗеркальный = ЗеркальныйПлатежОбъект.РасшифровкаПлатежа;
	
	Если РасшифровкаПлатежа.Количество() = 1 И РасшифровкаПлатежаЗеркальный.Количество() = 1 Тогда
		ЗаполнитьЗначенияСвойств(РасшифровкаПлатежаЗеркальный[0], РасшифровкаПлатежа[0], "ОбъектРасчетов, Сумма, СуммаВзаиморасчетов, ВалютаВзаиморасчетов");
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасшифровкаПлатежа[0].ОбъектРасчетов,"Объект") = ДокументСсылка Тогда
			РасшифровкаПлатежаЗеркальный[0].ОбъектРасчетов = Справочники.ОбъектыРасчетов.ПустаяСсылка();
		КонецЕсли; 
		Возврат Истина;
	КонецЕсли;
	
	СтатьяПоУмолчанию = Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(Реквизиты.ХозяйственнаяОперация);
	Если Не ЗначениеЗаполнено(СтатьяПоУмолчанию) Тогда
		МассивСтатей = РасшифровкаПлатежаЗеркальный.ВыгрузитьКолонку("СтатьяДвиженияДенежныхСредств");
		МассивСтатей = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивСтатей);
		Если МассивСтатей.Количество() = 1 Тогда
			СтатьяПоУмолчанию = МассивСтатей[0];
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ОбъектыРасчетов.Ссылка КАК ОбъектРасчетов,
	|	СУММА(РасшифровкаПлатежа.Сумма) КАК Сумма,
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.ОбъектРасчетов.Объект ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|				ИЛИ РасшифровкаПлатежа.ОбъектРасчетов.Объект ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА ВЫБОР
	|					КОГДА РасшифровкаПлатежа.ОбъектРасчетов.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|							ИЛИ РасшифровкаПлатежа.ОбъектРасчетов.Договор.СтатьяДвиженияДенежныхСредствПолучателя = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|						ТОГДА &СтатьяПоУмолчанию
	|					ИНАЧЕ РасшифровкаПлатежа.ОбъектРасчетов.Договор.СтатьяДвиженияДенежныхСредствПолучателя
	|				КОНЕЦ
	|		ИНАЧЕ &СтатьяПоУмолчанию
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	РасшифровкаПлатежа.ОбъектРасчетов.Объект КАК ОснованиеПлатежа
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|			ПО РасшифровкаПлатежа.ОбъектРасчетов.Объект = ОбъектыРасчетов.Объект
	|				И РасшифровкаПлатежа.ОбъектРасчетов <> ОбъектыРасчетов.Ссылка
	|				И РасшифровкаПлатежа.ОбъектРасчетов.Организация <> ОбъектыРасчетов.Организация
	|				И РасшифровкаПлатежа.ОбъектРасчетов.ТипРасчетов <> ОбъектыРасчетов.ТипРасчетов
	|				И НЕ ОбъектыРасчетов.ПометкаУдаления
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	ОбъектыРасчетов.Ссылка,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.ОбъектРасчетов.Объект ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|				ИЛИ РасшифровкаПлатежа.ОбъектРасчетов.Объект ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА ВЫБОР
	|					КОГДА РасшифровкаПлатежа.ОбъектРасчетов.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|							ИЛИ РасшифровкаПлатежа.ОбъектРасчетов.Договор.СтатьяДвиженияДенежныхСредствПолучателя = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|						ТОГДА &СтатьяПоУмолчанию
	|					ИНАЧЕ РасшифровкаПлатежа.ОбъектРасчетов.Договор.СтатьяДвиженияДенежныхСредствПолучателя
	|				КОНЕЦ
	|		ИНАЧЕ &СтатьяПоУмолчанию
	|	КОНЕЦ,
	|	РасшифровкаПлатежа.ОбъектРасчетов.Объект");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("СтатьяПоУмолчанию",СтатьяПоУмолчанию);
	
	УстановитьПривилегированныйРежим(Истина);
	РасшифровкаРезультат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого Стр Из РасшифровкаРезультат Цикл
		Если Не ЗначениеЗаполнено(Стр.СтатьяДвиженияДенежныхСредств) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не приведено в соответствие %1, 
					|не удалось заполнить статьи движения дс в расшифровке платежа.'"), ЗеркальныйПлатежОбъект.Ссылка));
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЗеркальныйПлатежОбъект.РасшифровкаПлатежа.Загрузить(РасшифровкаРезультат);
	
	Возврат Истина;
	
КонецФункции

//++ Локализация


//-- Локализация

#КонецОбласти


#Область ОбновлениеИнформационнойБазы

// Заполняет сведения об обработчиках обновления.
// 
// Параметры:
//  Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.20.26";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("ba3df84c-3248-4237-ab29-80ae838556d6");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	
	СписокОписаний = Новый Массив;
	СписокОписаний.Добавить(НСтр("ru = 'Обновление документов ""Списание безналичных денежных средств"":'"));
	СписокОписаний.Добавить(НСтр("ru = '- заполнение колонки ""Статья ДДС"" в табличной части ""Лицевые счета сотрудников"";'"));
	СписокОписаний.Добавить(НСтр("ru = '- заполнение реквизита ""Налог""';"));
	СписокОписаний.Добавить(НСтр("ru = '- замена аналитики с типом перечисление типы налогов на справочник виды налогов и взносов';"));
	
	//++ Локализация
	СписокОписаний.Добавить(НСтр("ru = '- замена операции ""Оплата самозанятому"" на операцию ""Оплата поставщику"" с признаком ""Оплата самозанятому"";'"));
	//-- Локализация
	
	Обработчик.Комментарий = СтрСоединить(СписокОписаний, Символы.ПС);
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Обычный;
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = ПустаяСсылка().Метаданные().ПолноеИмя();
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ЛОЖЬ
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|
	//++ Локализация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УдалитьОплатаСамозанятому)
	//-- Локализация

	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ТипНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалоговВзносов.ПустаяСсылка)
	|	И НЕ ДанныеДокумента.УдалитьТипНалога = Значение(Перечисление.УдалитьТипыНалогов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.АналитикаАктивовПассивов ССЫЛКА Перечисление.УдалитьТипыНалогов
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления
// 
// Параметры:
// 	Параметры - См. ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляМногопоточнойОбработки 
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		
		Параметры.ОбработкаЗавершена =
			ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
		
	КонецЕсли;
	
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	ИсключенияПриОбновлении = Новый Массив;
	
	СписокОписаний = Новый Массив;
	СписокОписаний.Добавить(НСтр("ru = 'Не удалось обработать документы ""Списание безналичных денежных средств"" по обработчику:'"));
	СписокОписаний.Добавить(НСтр("ru = '- заполнение колонки ""Статья ДДС"" в табличной части ""Лицевые счета сотрудников"";'"));
	СписокОписаний.Добавить(НСтр("ru = '- заполнение реквизита ""Налог""';"));
	СписокОписаний.Добавить(НСтр("ru = '- замена аналитики с типом перечисление типы налогов на справочник виды налогов и взносов';"));
	
	//++ Локализация
	СписокОписаний.Добавить(НСтр("ru = '- замена операции ""Оплата самозанятому"" на операцию ""Оплата поставщику"" с признаком ""Оплата самозанятому"";'"));
	//-- Локализация
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДляОбновления.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ТаблицаДокументов
		|ИЗ
		|	&ДанныеДляОбновления КАК ДанныеДляОбновления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных
		|ИЗ
		|	ТаблицаДокументов КАК ТаблицаДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
		|		ПО ТаблицаДокументов.Ссылка = ДанныеДокумента.Ссылка
		|";
	
	Запрос.УстановитьПараметр("ДанныеДляОбновления", ОбновляемыеДанные);
	
	Документ = Запрос.Выполнить().Выбрать();
	
	Пока Документ.Следующий() Цикл
		
		ПричинаИсключения = 0;
		Рекомендация = "";
		
		НачатьТранзакцию();
		
		Попытка
			
			ПричинаИсключения = 1; // Блокировка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Документ.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(
				Документ.Ссылка, Документ.ВерсияДанных, Параметры.Очередь); // ДокументОбъект
			
			ПричинаИсключения = 2; // ПлохиеДанные
			Рекомендация = НСтр("ru = 'Перепроведите документ вручную.'");
			
			ОбъектИзменен = Ложь;
			
			Если ДокументОбъект <> Неопределено Тогда
				
				Перечисления.УдалитьТипыНалогов.ЗаполнитьРеквизитТипНалога(ДокументОбъект,"УдалитьТипНалога","ТипНалога");
				Перечисления.УдалитьТипыНалогов.ЗаполнитьРеквизитТипНалога(ДокументОбъект,"РасшифровкаПлатежа.АналитикаАктивовПассивов");

				Если ДокументОбъект.Модифицированность() Тогда
					ОбъектИзменен = Истина;
				КонецЕсли;
				Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
					
					Для каждого СтрокаТЧ Из ДокументОбъект.ЛицевыеСчетаСотрудников Цикл
						Если Не ЗначениеЗаполнено(СтрокаТЧ.СтатьяДвиженияДенежныхСредств) Тогда
							СтрокаТЧ.СтатьяДвиженияДенежныхСредств = ДокументОбъект.СтатьяДвиженияДенежныхСредств;
							ОбъектИзменен = Истина;
						КонецЕсли;
					КонецЦикла;
				
				//++ Локализация
				ИначеЕсли ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УдалитьОплатаСамозанятому Тогда
					
					ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
					ДокументОбъект.ОперацияССамозанятым = Истина;
					ОбъектИзменен = Истина;
				//-- Локализация
				
				КонецЕсли;
				
			КонецЕсли;
			
			ПричинаИсключения = 3; // Запись
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Документ.Ссылка);
			КонецЕсли;
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Документ.Ссылка);
			
			Если ПричинаИсключения = 2 Тогда
				
				ОписаниеПроблемы = ОбновлениеИнформационнойБазыУТ.ПроблемаСДанными(
					Документ.Ссылка, Рекомендация, ИнформацияОбОшибке());
				ИсключенияПриОбновлении.Добавить(ОписаниеПроблемы);
				
			ИначеЕсли ПричинаИсключения = 3 Тогда
				
				ОбновлениеИнформационнойБазыУТ.ЗаписатьПлохиеДанные(
					ИсключенияПриОбновлении, ОбъектовОбработано, Параметры);
				ВызватьИсключение СтрСоединить(СписокОписаний, Символы.ПС);
				
			КонецЕсли;
			
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена =
		ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		
		СписокОписаний.Добавить(НСтр("ru = 'Всего пропущено: %1'"));
		ТекстСообщения = СтрШаблон(СтрСоединить(СписокОписаний, Символы.ПС), ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
		
	Иначе
		
		ШаблонСообщения = НСтр("ru = 'Обработана порция документов ""Списание безналичных денежных средств"": %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектовОбработано);
		ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, , ,
			ТекстСообщения);
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыУТ.ЗаписатьПлохиеДанные(ИсключенияПриОбновлении, ОбъектовОбработано, Параметры);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
