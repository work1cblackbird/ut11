#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Номер = Данные.Номер;
	Дата = Формат(Данные.Дата, "ДФ=dd.MM.yyyy");
	Направление = "";
	Если ЗначениеЗаполнено(Данные.Ссылка) Тогда
		РеквизитыСсылки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Данные.Ссылка, "ТитулОформлениеНомерПутевогоЛиста,ТитулОформлениеДатаПутевогоЛиста,ЭтоВходящий", Истина);
		Если ЗначениеЗаполнено(РеквизитыСсылки.ТитулОформлениеНомерПутевогоЛиста) Тогда
			Номер = РеквизитыСсылки.ТитулОформлениеНомерПутевогоЛиста;
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыСсылки.ТитулОформлениеДатаПутевогоЛиста) Тогда
			Дата = Формат(РеквизитыСсылки.ТитулОформлениеДатаПутевогоЛиста, "ДФ=dd.MM.yyyy");
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыСсылки.ЭтоВходящий) Тогда
			Направление = ?(РеквизитыСсылки.ЭтоВходящий, " (входящий)", "");
		КонецЕсли;
	КонецЕсли;
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Электронный путевой лист%1 № %2 от %3'"), Направление, Номер, Дата);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЭПЛ";
	КомандаПечати.Представление = НСтр("ru = 'Путевой лист'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Картинка = БиблиотекаКартинок.Печать;
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений:
//  * Значение - ДокументСсылка.РеализацияТоваровУслуг - ссылка на объект;
//  * Представление - Строка - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЭПЛ") Тогда
		
		ИмяПечатнойФормы = Неопределено;
		Если МассивОбъектов.Количество() = 1 Тогда
			ДатаДокумента = МассивОбъектов[0].Дата;
			ИмяПечатнойФормы = ОбменСГИСЭПДПереопределяемый.ИмяПечатнойФормыЭПЛ(ДатаДокумента);
		КонецЕсли;
	
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЭПЛ",
			НСтр("ru='Путевой лист'"),
			СформироватьПутевойЛист(МассивОбъектов, ОбъектыПечати, ИмяПечатнойФормы),
			,
			ИмяПечатнойФормы);
			
	КонецЕсли;
	
КонецПроцедуры


// Формирует печатную форму транспортной накладной.
//
// Параметры:
//  МассивОбъектов            - Массив из ДокументСсылка.ЭлектронныйПутевойЛист - документы РТУ на печать.
//  ОбъектыПечати             - Список значений - объекты печати (значение - ссылка на объект, 
//                                                           представление - имя области, в которой был выведен объект).
//
// Возвращаемое значение:
//  Табличный документ
//
Функция СформироватьПутевойЛист(МассивОбъектов, ОбъектыПечати, Знач ИмяПечатнойФормы) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб         = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	
	ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЭлектронныйПутевойЛист_ПутевойЛист";
	ТабличныйДокумент.ИмяПараметровПечати = ИмяПараметровПечати;
	
	ОбменСГИСЭПД.УстановитьМинимальныеПоляПечати(ТабличныйДокумент);
	
	МакетПереданный = Неопределено;
	Если ИмяПечатнойФормы <> Неопределено Тогда
		МакетПереданный = УправлениеПечатью.МакетПечатнойФормы(ИмяПечатнойФормы);
	КонецЕсли;
	
	Для Каждого СсылкаНаОбъект Из МассивОбъектов Цикл
		
		ДанныеФормирования = ОбменСГИСЭПД.ДанныеРеквизитовЭПД(СсылкаНаОбъект);
		
		Если МакетПереданный = Неопределено Тогда
			ИмяПечатнойФормы = ОбменСГИСЭПДПереопределяемый.ИмяПечатнойФормыЭПЛ(СсылкаНаОбъект.Дата);
			Макет = УправлениеПечатью.МакетПечатнойФормы(ИмяПечатнойФормы);
		Иначе
			Макет = МакетПереданный;
		КонецЕсли; 
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;       
		
		ПараметрыМакета = ПараметрыМакетаЭПЛ(СсылкаНаОбъект, ДанныеФормирования);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ГоризонтальнаяЛицеваяСторона");
		ОбластьМакета.Параметры.Заполнить(ПараметрыМакета);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("ГоризонтальнаяОборотнаяСторона");
		ОбластьМакета.Параметры.Заполнить(ПараметрыМакета);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);       
		
		
		// Добавить штампы
		Если ЗначениеЗаполнено(СсылкаНаОбъект.УИДМинтранс) Тогда
			ИдентификаторДокумента = СсылкаНаОбъект.УИДМинтранс;
		Иначе
			ИдентификаторДокумента = СсылкаНаОбъект.ТитулОформлениеИдентификаторФайла;
		КонецЕсли;     
		
		ОбменСГИСЭПД.УстановитьШтампыПодписейПоДокументуЭПД(СсылкаНаОбъект, ТабличныйДокумент, ИдентификаторДокумента);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, СсылкаНаОбъект);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;		
		
КонецФункции          



Функция ПараметрыМакетаЭПЛ(СсылкаНаОбъект, ДанныеЗаполнения)
		
	Результат = Новый Структура;
	
	// Оформление
	Результат.Вставить("ДатаПЛ", Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеДатаПутевогоЛиста"), "ДЛФ=D"));
	Результат.Вставить("НомерПЛ", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеНомерПутевогоЛиста"));
	
	Если ЗначениеЗаполнено(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеДатаНачалаСрокаИспользованияПутевогоЛиста")) Тогда
		Результат.Вставить("ДействиеС", Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеДатаНачалаСрокаИспользованияПутевогоЛиста"), "ДЛФ=D"));
		Результат.Вставить("ДействиеПо", Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеДатаОкончанияСрокаИспользованияПутевогоЛиста"), "ДЛФ=D"));
	Иначе
		Результат.Вставить("ДействиеС", Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеДатаВТечениеКоторойПутевойЛистМожетБытьИспользован"), "ДЛФ=D"));
		Результат.Вставить("ДействиеПо", Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеДатаВТечениеКоторойПутевойЛистМожетБытьИспользован"), "ДЛФ=D"));
	КонецЕсли;
	
	Результат.Вставить("Организация", ОбменСГИСЭПД.ПредставлениеУчастника(ДанныеЗаполнения, "ТитулОформлениеОформитель"));    
	
	ПредставлениеВидовПеревозки = Новый Соответствие;
	ПредставлениеВидовПеревозки.Вставить("КП", "Коммерческая перевозка");
	ПредставлениеВидовПеревозки.Вставить("СН", "Перевозка для собственных нужд");
	ПредставлениеВидовПеревозки.Вставить("СТ", "Передвижение и работа специальных транспортных средств");
	
	ПредставлениеВидовСообщений = Новый Соответствие;
	ПредставлениеВидовСообщений.Вставить("Г", "Городское");
	ПредставлениеВидовСообщений.Вставить("П", "Пригородное");
	ПредставлениеВидовСообщений.Вставить("М", "Междугородное");	
	
	Результат.Вставить("ВидПеревозки", ПредставлениеВидовПеревозки.Получить(
											ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеСведенияОВидеПеревозки")));
	Результат.Вставить("ВидТранспортногоСообщения", ПредставлениеВидовСообщений.Получить(
											ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеВидСообщения")));
											
	// Грузоотправители
	Если ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеСведенияОВидеПеревозки") = "СН" Тогда
		Результат.Вставить("Грузоотправители", ОбменСГИСЭПД.ПредставлениеУчастника(ДанныеЗаполнения, "ТитулОформлениеОформитель"));	
	Иначе           
		МассивГрузоотправители = Новый Массив;
		Для Каждого СтрГрузоотправитель Из ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеГрузоотправители", Новый Массив) Цикл
			МассивГрузоотправители.Добавить(ОбменСГИСЭПД.ПредставлениеУчастника(СтрГрузоотправитель, "Грузоотправитель"));
		КонецЦикла;   
		Результат.Вставить("Грузоотправители", СтрСоединить(МассивГрузоотправители, Символы.ПС));
	КонецЕсли;
	
	// Адреса подачи
	МассивАдресаПодачи = Новый Массив;
	Для Каждого СтрАдресПодачи Из ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеАдресаПунктовПогрузкиИВыгрузки", Новый Массив) Цикл
		МассивАдресаПодачи.Добавить(ОбменСГИСЭПД.ПредставлениеАдреса(СтрАдресПодачи, "АдресПунктаПогрузки"));
	КонецЦикла;   
	Результат.Вставить("АдресаПодачи", СтрСоединить(МассивАдресаПодачи, Символы.ПС));
											
	// Транспортное средство
	Результат.Вставить("ТранспортноеСредство", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеТранспортноеСредствоМарка", "")
				+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеТранспортноеСредствоМодель")
				+ " (" + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеТранспортноеСредствоТип") + ")");  
	Результат.Вставить("ТранспортноеСредствоРегНомер", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеТранспортноеСредствоРегистрационныйНомер", ""));
	
	// Номера прицепов
	МассивНомераПрицепов = Новый Массив;
	Для Каждого СтрПрицеп Из ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеПрицепы", Новый Массив) Цикл
		МассивНомераПрицепов.Добавить(СтрПрицеп.РегистрационныйНомер);
	КонецЦикла;   
	Результат.Вставить("НомераПрицепов", СтрСоединить(МассивНомераПрицепов, ","));
	
	// Водители
	МассивВодители = Новый Массив;
	Для Каждого СтрВодитель Из ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулОформлениеВодители", Новый Массив) Цикл
		ВодительИНН = Неопределено;
		СтрВодитель.Свойство("ФЛ_ИНН", ВодительИНН);
		Если ЗначениеЗаполнено(ВодительИНН) = Ложь Тогда
			СтрВодитель.Свойство("ИНН", ВодительИНН);	
		КонецЕсли;
		МассивВодители.Добавить(СтрВодитель.Фамилия 
								+ " " + СтрВодитель.Имя
								+ " " + СтрВодитель.Отчество
								+ ?(ЗначениеЗаполнено(ВодительИНН),
									", ИНН: " + ВодительИНН, "")
								+ ?(ЗначениеЗаполнено(СтрВодитель.НомерВУ),
									", ВУ " 
										+ СтрВодитель.СерияВУ + " " + СтрВодитель.НомерВУ
										+ " выдано " + Формат(СтрВодитель.ДатаВыдачиВУ, "ДЛФ=D"), "")
								);
	КонецЦикла;
	Результат.Вставить("Водители", СтрСоединить(МассивВодители, Символы.ПС)); 
	
	// Медосмотр
	Результат.Вставить("ШтампМО", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрОтметкаОРезультатеПроведения"));
	Результат.Вставить("ДатаМО", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрДатаИВремяПроведения"));
	
	Если ЗначениеЗаполнено(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрШтатныйМедработникФамилия")) Тогда
		Результат.Вставить("ДолжностьМО", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрШтатныйМедработникДолжность"));
		Результат.Вставить("ПодписьМО", "(Электронная)");
		Результат.Вставить("ФИОМО", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрШтатныйМедработникФамилия")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрШтатныйМедработникИмя")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрШтатныйМедработникОтчество"));	  
		Результат.Вставить("ЛицензияМО", "серия " 
										+ ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрШтатныйМедработникЛицензияСерия") 
										+ " № " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрШтатныйМедработникЛицензияНомер")
										+ " от " + Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрШтатныйМедработникЛицензияДатаВыдачи"), "ДЛФ=D"));
	ИначеЕсли ЗначениеЗаполнено(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрСтороннийМедработникФамилия")) Тогда
		Результат.Вставить("ДолжностьМО", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрСтороннийМедработникДолжность"));
		Результат.Вставить("ПодписьМО", "(Электронная)");
		Результат.Вставить("ФИОМО", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрСтороннийМедработникФамилия")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрСтороннийМедработникИмя")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрСтороннийМедработникОтчество")); 
		Результат.Вставить("ЛицензияМО", "серия " 
										+ ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрСтороннийМедработникЛицензияСерия") 
										+ " № " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрСтороннийМедработникЛицензияНомер")
										+ " от " + Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрСтороннийМедработникЛицензияДатаВыдачи"), "ДЛФ=D"));
	КонецЕсли;
	
	// Медосмотр после
	Результат.Вставить("ШтампМОПосле", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеОтметкаОРезультатеПроведения"));
	Результат.Вставить("ДатаМОПосле", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеДатаИВремяПроведения"));
	
	Если ЗначениеЗаполнено(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеШтатныйМедработникФамилия")) Тогда
		Результат.Вставить("ДолжностьМОПосле", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеШтатныйМедработникДолжность"));
		Результат.Вставить("ПодписьМОПосле", "(Электронная)");
		Результат.Вставить("ФИОМОПосле", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеШтатныйМедработникФамилия")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеШтатныйМедработникИмя")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеШтатныйМедработникОтчество"));	  
		Результат.Вставить("ЛицензияМОПосле", "серия " 
										+ ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеШтатныйМедработникЛицензияСерия") 
										+ " № " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеШтатныйМедработникЛицензияНомер")
										+ " от " + Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеШтатныйМедработникЛицензияДатаВыдачи"), "ДЛФ=D"));
	ИначеЕсли ЗначениеЗаполнено(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеСтороннийМедработникФамилия")) Тогда
		Результат.Вставить("ДолжностьМОПосле", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеСтороннийМедработникДолжность"));
		Результат.Вставить("ПодписьМОПосле", "(Электронная подпись)");
		Результат.Вставить("ФИОМОПосле", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеСтороннийМедработникФамилия")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеСтороннийМедработникИмя")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеСтороннийМедработникОтчество")); 
		Результат.Вставить("ЛицензияМОПосле", "серия " 
										+ ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеСтороннийМедработникЛицензияСерия") 
										+ " № " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеСтороннийМедработникЛицензияНомер")
										+ " от " + Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулМедосмотрПослеСтороннийМедработникЛицензияДатаВыдачи"), "ДЛФ=D"));
	КонецЕсли;      
	
											
	// Техонтроль                       
	Если ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыпускРезультатПроведенияПредсменногоКонтроля") = "1" Тогда
		Результат.Вставить("ТекстКонтроль", "Выпуск на линию разрешен");
		Результат.Вставить("ДатаКонтроль", Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыпускДатаИВремяПредрейсовогоКонтроля"), "ДЛФ=D"));
		Результат.Вставить("ВремяКонтроль", Формат(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыпускДатаИВремяПредрейсовогоКонтроля"), "ДФ=ЧЧ:мм"));
		Результат.Вставить("ДатаВыпускаТС", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыпускДатаИВремяВыпускаНаЛинию"));
		Результат.Вставить("ПодписьКонтроль", "(Электронная)");
		Результат.Вставить("ФИОКонтроль", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыпускОтветственныйЗаСостояниеТСФамилия")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыпускОтветственныйЗаСостояниеТСИмя")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыпускОтветственныйЗаСостояниеТСОтчество"));
	КонецЕсли;
	
	
	// Одометр при выезде                       
	Если ЗначениеЗаполнено(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыездДатаИВремяВыезда")) Тогда   
		Если ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыездПризнакНачалаРейса") = "1" Тогда
			Результат.Вставить("ОдометрПриВыезде", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыездПоказанияОдометраПриВыезде"));
		Иначе
			Результат.Вставить("ОдометрПриВыезде", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыездПоказанияОдометраПриПриеме"));	
		КонецЕсли;		
		Результат.Вставить("ДолжностьОдометр", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыездУполномоченныйНаПроставлениеДанныхДолжность"));
		Результат.Вставить("ПодписьОдометр", "(Электронная)");
		Результат.Вставить("ФИООдометр", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыездУполномоченныйНаПроставлениеДанныхФамилия")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыездУполномоченныйНаПроставлениеДанныхИмя")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулВыездУполномоченныйНаПроставлениеДанныхОтчество"));
	КонецЕсли; 
	
	
	// Одометр при заезде                       
	Если ЗначениеЗаполнено(ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулЗаездДатаИВремяЗаезда")) Тогда   
		Если ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулЗаездПризнакОкончанияРейса") = "1" Тогда
			Результат.Вставить("ОдометрПриЗаезде", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулЗаездПоказанияОдометраПриЗаезде"));
		Иначе
			Результат.Вставить("ОдометрПриЗаезде", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулЗаездПоказанияОдометраПриСдаче"));	
		КонецЕсли;		
		Результат.Вставить("ДолжностьОдометрЗаезд", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулЗаездУполномоченныйНаПроставлениеДанныхДолжность"));
		Результат.Вставить("ПодписьОдометрЗаезд", "(Электронная)");
		Результат.Вставить("ФИООдометрЗаезд", ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулЗаездУполномоченныйНаПроставлениеДанныхФамилия")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулЗаездУполномоченныйНаПроставлениеДанныхИмя")
									+ " " + ОбменСГИСЭПД.ПолучитьЗначениеСтруктуры(ДанныеЗаполнения, "ТитулЗаездУполномоченныйНаПроставлениеДанныхОтчество"));
	КонецЕсли;
									
	Возврат Результат;
	
КонецФункции


#КонецЕсли
