&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ЗначениеКопирования.Пустая() = Ложь 
		И Параметры.ЗначениеКопирования.ЭтоВходящий = Истина Тогда
        Отказ = Истина; 
        СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ФормаБезОбработки") Тогда
		
		// СтандартныеПодсистемы.ПодключаемыеКоманды
		ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
			
		ОбменСГИСЭПД.ПриСозданииНаСервереПодчиненнойФормы(ЭтотОбъект, Отказ, СтандартнаяОбработка);

		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			ОбменСГИСЭПД.ЗаполнитьТаблицуВерсийТитулов(Объект.Ссылка, Объект.Организация, ВерсииТитулов);
			ОбменСГИСЭПД.ЗаполнитьТаблицуЗначенийРеквизитов(Объект.Ссылка, Объект.Организация, СтруктураРеквизитов);
		Иначе
			ОбменСГИСЭПД.ЗаполнитьТаблицуЗначенийРеквизитовПоПараметрамФормы(Параметры, СтруктураРеквизитов);	
		КонецЕсли;

		ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭПЛ(ЭтотОбъект);
		
		ЦветВыделенияУчастника = ЦветаСтиля.ЦветВыделенияУчастникаЭПД;
		ОрганизацияОписаниеТипов = Метаданные.ОпределяемыеТипы.Организация.Тип;
		КонтрагентОписаниеТипов = Метаданные.ОпределяемыеТипы.КонтрагентБЭД.Тип;
		Если Объект.ЭтоВходящий = Ложь Тогда	
			Элементы.СсылкаТитулОформлениеОформитель.ОграничениеТипа = ОрганизацияОписаниеТипов;
			Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеОформитель) = Ложь Тогда
				Элементы.СсылкаТитулОформлениеОформитель.ОграничениеТипа = ОрганизацияОписаниеТипов;	
				Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеОформитель) = Ложь Тогда
					Объект.СсылкаТитулОформлениеОформитель = ИнтеграцияЭДО.ОрганизацияПоУмолчанию();
					ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элементы.СсылкаТитулОформлениеОформитель, ЭтотОбъект);
				КонецЕсли;
			КонецЕсли;					
			
			Элементы.СсылкаТитулОформлениеМедорганизация.ОграничениеТипа = КонтрагентОписаниеТипов;
			Элементы.СсылкаТитулОформлениеТехконтроль.ОграничениеТипа = КонтрагентОписаниеТипов;
			Элементы.СсылкаТитулОформлениеПоказанияОдометра.ОграничениеТипа = КонтрагентОписаниеТипов;
					
			МассивЭлементов = Новый Массив;
			МассивЭлементов.Добавить(Элементы.СсылкаТитулОформлениеОформитель);
			ОбменСГИСЭПДКлиентСервер.ПоказатьОшибкиПоКонтрагентам(ЭтотОбъект, МассивЭлементов);
			
			Элементы.ГруппаРеквизитаТитулОформлениеНомерПутевогоЛиста.Видимость = Ложь;
			Элементы.ЗаголовокНомер.Заголовок = "Номер";
			
			Элементы.ГруппаРеквизитаСсылкаТитулОформлениеОформитель.ЦветФона = ЦветВыделенияУчастника;
		Иначе
			Элементы.ГруппаРеквизитаНомер.Видимость = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеМедорганизация)
		И Объект.СсылкаТитулОформлениеМедорганизация <> Объект.СсылкаТитулОформлениеОформитель Тогда
			ВариантМедосмотр = 1;
			ВариантМедработник = 1;
			ВариантМедработникПосле = 1;
			Элементы.ВариантМедработник.Доступность = Ложь;
			Элементы.ВариантМедработникПосле.Доступность = Ложь;			
			Если Объект.Организация = Объект.СсылкаТитулОформлениеМедорганизация Тогда
				Элементы.ВариантМедосмотр.Видимость = Ложь;
				Элементы.ГруппаРеквизитаВариантМедосмотр.ЦветФона = ЦветВыделенияУчастника;
			КонецЕсли;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеТехконтроль)
		И Объект.СсылкаТитулОформлениеТехконтроль <> Объект.СсылкаТитулОформлениеОформитель Тогда
			ВариантТехконтроль = 1;	
			Если Объект.Организация = Объект.СсылкаТитулОформлениеТехконтроль Тогда
				Элементы.ВариантТехконтроль.Видимость = Ложь;
				Элементы.ГруппаРеквизитаВариантТехконтроль.ЦветФона = ЦветВыделенияУчастника;
			КонецЕсли;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеПоказанияОдометра)
		И Объект.СсылкаТитулОформлениеПоказанияОдометра <> Объект.СсылкаТитулОформлениеОформитель Тогда
			ВариантПоказанияОдометра = 1;	
			Если Объект.Организация = Объект.СсылкаТитулОформлениеПоказанияОдометра Тогда
				Элементы.ВариантПоказанияОдометра.Видимость = Ложь;
				Элементы.ГруппаРеквизитаВариантПоказанияОдометра.ЦветФона = ЦветВыделенияУчастника;
			КонецЕсли;	
		КонецЕсли;
		
		Если Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1 Тогда
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулОформлениеТранспортноеСредство) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулОформлениеТранспортноеСредство.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;		
		ИначеЕсли Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2 Тогда
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулМедосмотрШтатныйМедработник) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулМедосмотрШтатныйМедработник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулМедосмотрСтороннийМедработник) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулМедосмотрСтороннийМедработник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулМедосмотрВодитель) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулМедосмотрВодитель.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
		ИначеЕсли Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3 Тогда
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулВыпускТранспортноеСредство) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулВыпускТранспортноеСредство.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТС) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТС.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
		ИначеЕсли Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4 Тогда
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанных) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанных.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
		ИначеЕсли Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5 Тогда
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанных) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанных.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
		ИначеЕсли Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6 Тогда
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ХранимыеДанныеТитулМедосмотрПослеВодитель) = Ложь Тогда
				Элементы.ХранимыеДанныеТитулМедосмотрПослеВодитель.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
		
		УстановитьТекущийШагПомощника();
		
		ЗаполнитьПредставленияАдресов();
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Функция ИдентификаторОтправителя()

	Результат = Неопределено;
	
	ТипОрганизация = ОбменСГИСЭПДВызовСервера.ПолучитьТипОрганизация();
	Если ТипЗнч(Объект.СсылкаТитулОформлениеМедорганизация) = ТипОрганизация Тогда
		Результат = Объект.ИдентификаторМедорганизации;
	ИначеЕсли ТипЗнч(Объект.СсылкаТитулОформлениеТехконтроль) = ТипОрганизация Тогда
		Результат = Объект.ИдентификаторТехконтроль;
	ИначеЕсли ТипЗнч(Объект.СсылкаТитулОформлениеПоказанияОдометра) = ТипОрганизация Тогда
		Результат = Объект.ИдентификаторПоказанияОдометра;
	Иначе
		Результат = Объект.ИдентификаторОформителя;	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("НеТребуетсяИдентификацияФайла") = Ложь Тогда
		ЗаполнитьУчастников();
		ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
		ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя());	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ЗаписьИзФормы", Истина);
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ТекущийТитул) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	Если ИнформацияПоПрефиксамТитула.ВПрограмме = Неопределено Тогда
		Возврат;
	КонецЕсли;      
	
	КонтейнерОтображаемойВерсии = Неопределено;
	
	ОбменСГИСЭПД.ЗаполнитьДополнительныеРеквизитыФормы(ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме, КонтейнерОтображаемойВерсии);
	
	НомерВерсии = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
		ИнформацияПоПрефиксамТитула.ВПрограмме + "НомерВерсии", 0, КонтейнерОтображаемойВерсии);
	
	Если ПараметрыЗаписи.Свойство("НеДобавлятьВерсию") = Ложь Тогда
		// Запишем версию при необходимости
		ТекущийОбъект.ДополнительныеСвойства.Вставить("НомерВерсии", НомерВерсии);
		
		ИдентификаторФайлаВерсии = Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла"];
		
		ДатаВерсии = Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ДатаФормированияФайла"]
						+ 60 * 60 * Час(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла"]) 
						+ 60 * Минута(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла"]) 
						+ Секунда(Объект[ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла"]);
		
		ЭтоНоваяВерсия = Истина;
		Для Каждого СтрокаВерсии Из ВерсииТитулов Цикл
			Если СтрокаВерсии.Титул = ТекущийОбъект.ТекущийТитул 
			И СтрокаВерсии.НомерВерсии = НомерВерсии Тогда
				СтрокаВерсии.ИдентификаторФайла = ИдентификаторФайлаВерсии;	
				ЭтоНоваяВерсия = Ложь;
			КонецЕсли;	
		КонецЦикла;
	
		Если ЭтоНоваяВерсия = Истина Тогда
			НовСтрокаВерсии = ВерсииТитулов.Добавить();
			НовСтрокаВерсии.ДатаВерсии = ДатаВерсии;
			Если НовСтрокаВерсии.ДатаВерсии = Дата(1,1,1) Тогда
				НовСтрокаВерсии.ДатаВерсии = ТекущаяДатаСеанса();
			КонецЕсли;
			НовСтрокаВерсии.ИдентификаторФайла = ИдентификаторФайлаВерсии;
			НовСтрокаВерсии.НомерВерсии = НомерВерсии;
			НовСтрокаВерсии.Титул = ТекущийОбъект.ТекущийТитул;		
		КонецЕсли;
			
		ВерсияТитула = Новый Структура;
		ВерсияТитула.Вставить("НомерВерсии", НомерВерсии);
		ВерсияТитула.Вставить("ИдентификаторФайла", ИдентификаторФайлаВерсии);
		ВерсияТитула.Вставить("Титул", ТекущийОбъект.ТекущийТитул);
		ВерсияТитула.Вставить("ДатаВерсии", ДатаВерсии);
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ВерсияТитула", ВерсияТитула);
	КонецЕсли;
	
	МассивВерсийТитула = Неопределено;
	СтруктураРеквизитов.Свойство(ИнформацияПоПрефиксамТитула.ВПрограмме, МассивВерсийТитула);
	Если МассивВерсийТитула <> Неопределено Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("СтруктураРеквизитов", МассивВерсийТитула[Мин(НомерВерсии, МассивВерсийТитула.ВГраница())]);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("Запись_ДокументыЭПД", Объект.Ссылка);
	
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбменСГИСЭПДКлиент.ПриОткрытииПодчиненнойФормы(ЭтотОбъект);
	
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


&НаКлиенте
Процедура ОткрытьЭлектронныйДокумент(Команда)
	
	ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокументОбъектаУчета(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСтатусаОшибкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОписаниеОшибки" Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ОткрытьОписаниеОшибки(Объект.Ссылка, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСтатусаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ТекущиеДелаПоЭДО" Тогда
		СтандартнаяОбработка = Ложь;
		ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокументОбъектаУчета(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредставленияАдресов(Знач Титул = Неопределено)
	
	Если Титул = Неопределено Тогда
		ПрефиксТитула = ОбменСГИСЭПДКлиентСервер.ПолучитьПрефиксТитулаПоСтраницеОсновнойФормы(Элементы.Страницы.ТекущаяСтраница.Имя, 
			ОбменСГИСЭПДКлиентСервер.ТипДокументаПутевойЛист());	
		Титул = ОбменСГИСЭПДКлиентСервер.ТитулПоПрефиксу("Документ.ЭлектронныйПутевойЛист", ПрефиксТитула);
	КонецЕсли;
	
	Если Титул = Неопределено Или Титул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьПредставлениеАдреса("ПредставлениеТитулОформлениеАдресМестаОтправления", ЭтотОбъект);
	КонецЕсли;
	
	Если Объект.ТекущийТитул = Перечисления.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1 Тогда
		ОбменСГИСЭПДКлиентСервер.ЗаполнениеСпискаСохраненныхАдресов(ЭтотОбъект, 
						Объект.СсылкаТитулОформлениеОформитель,
						Элементы.ПредставлениеТитулОформлениеАдресМестаОтправления);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезЭДО(Команда)
	
	ЭтотОбъект.Доступность = Ложь;
		
	Если ИзмененСоставУчастников = Истина
		Или ЗначениеЗаполнено(Объект.ИдентификаторОформителя) = Ложь
		Или ЗначениеЗаполнено(Объект.ИдентификаторМедорганизации) = Ложь
		Или ЗначениеЗаполнено(Объект.ИдентификаторТехконтроль) = Ложь
		Или ЗначениеЗаполнено(Объект.ИдентификаторПоказанияОдометра) = Ложь
		Тогда
		ЗаполнитьУчастников(Истина);
	Иначе
		ОтправитьЧерезЭДОПослеЗаписи();
  	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) = Ложь Тогда
		Возврат;	
	КонецЕсли;
	
	ЗаполнитьУчастников();
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя());
	
КонецПроцедуры

&НаКлиенте
Процедура СледующаяОшибка(Команда)
	
	ОбменСГИСЭПДКлиент.НавигацияПоОшибкамЗаполнения(ЭтотОбъект, 
													ОшибкиЗаполнения, 
													Элементы.ОшибкиЗаполнения.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущаяОшибка(Команда)
	
	ОбменСГИСЭПДКлиент.НавигацияПоОшибкамЗаполнения(ЭтотОбъект, 
													ОшибкиЗаполнения, 
													Элементы.ОшибкиЗаполнения.ТекущаяСтрока,
													Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОшибкиЗаполненияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = ОшибкиЗаполнения.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭтотОбъект.ПереходыПоОшибкам = ТекущиеДанные.Описание.Переходы;
	ОбменСГИСЭПДКлиент.ПоказатьОшибкуЗаполнения(ЭтотОбъект, ТекущиеДанные, ИдентификаторОтправителя());

КонецПроцедуры

&НаКлиенте
Процедура НадписьОшибкиЗакрытьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ЗакрытьОшибки" Тогда
		СтандартнаяОбработка = Ложь;
		Элементы.ГруппаОшибки.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула(ТитулЗаполнения = Неопределено)
	
	Если ТитулЗаполнения = Неопределено Тогда
		ТитулЗаполнения = Объект.ТекущийТитул;
	КонецЕсли;
	
	КонтейнерОтображаемойВерсии = Неопределено;
	
	Если (ЗначениеЗаполнено(Объект.Ссылка) = Ложь 
		Или ТитулЗаполнения = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1")) Тогда
				
		Если ЗначениеЗаполнено(Объект.ВидДокумента) = Ложь Тогда
			Объект.ВидДокумента = ЭлектронныеДокументыЭДО.ВидДокументаПоТипу(ПредопределенноеЗначение("Перечисление.ТипыДокументовЭДО.ЭПЛ"));
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулОформлениеДатаПутевогоЛиста", 
			ТекущаяДатаСеанса(), 
			Ложь, КонтейнерОтображаемойВерсии);
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулОформлениеПризнакНачалаРейса", 
			"1", 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулОформлениеОбязательностьМедОсмотраПосле", 
			"2", 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулОформлениеСведенияОВидеПеревозки", 
			"СН", 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулОформлениеОформительСтатус", 
			"1", 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулОформлениеПризнакФормированияПутевогоЛистаНаОдинДень", 
			"1", 
			Ложь, КонтейнерОтображаемойВерсии);
		
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка)
		И ТитулЗаполнения = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
			
		Отправки = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка);
		Медосмотры = Отправки.Получить(ТитулЗаполнения);
		КоличествоМедосмотров = 0;
		КоличествоНезавершенных = 0;
		Если Медосмотры <> Неопределено Тогда
			Для Каждого СтруктураМедосмотр Из Медосмотры Цикл
				Если СтруктураМедосмотр.Статус = ПредопределенноеЗначение("Перечисление.СтатусыСообщенийЭДО.Отправлен") Тогда
					КоличествоМедосмотров = КоличествоМедосмотров + 1;	
				ИначеЕсли СтруктураМедосмотр.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыСообщенийЭДО.Получен") Тогда
					КоличествоНезавершенных = КоличествоНезавершенных + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Отбор = Новый Структура("Титул", ТитулЗаполнения);
		СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
		
		ТекущееЗначениеВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулМедосмотр");
		
		// Если есть незавершенные переключимся на версию, следующую за крайней отправленной
		Если КоличествоНезавершенных > 0 Тогда
			НовоеТекущееЗначениеВерсии = КоличествоМедосмотров;
			
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулМедосмотр", 
														НовоеТекущееЗначениеВерсии - ТекущееЗначениеВерсии);	
		Иначе
			КоличествоВодителей = ОбменСГИСЭПДКлиентСервер.ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(ЭтотОбъект, "ТитулОформлениеВодители");
			// Версий меньше, чем количество водителей - добавим
			Если КоличествоВодителей > СтрокиВерсий.Количество() Тогда
				НовоеТекущееЗначениеВерсии = КоличествоМедосмотров;
				
				Если НовоеТекущееЗначениеВерсии > СтрокиВерсий.Количество() - 1 Тогда
					СтрокаНовойВерсии = ВерсииТитулов.Добавить();
					СтрокаНовойВерсии.Титул = ТитулЗаполнения;
					СтрокаНовойВерсии.НомерВерсии = НовоеТекущееЗначениеВерсии;
				КонецЕсли;	
				ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулМедосмотр", 
															НовоеТекущееЗначениеВерсии - ТекущееЗначениеВерсии);
				ТекущееЗначениеВерсии = НовоеТекущееЗначениеВерсии;
			КонецЕсли;
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулМедосмотрНомерВерсии", 
			ТекущееЗначениеВерсии, 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулМедосмотрДатаИВремяПроведения", 
			ТекущаяДатаСеанса(), 
			Ложь, КонтейнерОтображаемойВерсии);
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулМедосмотрОтметкаОРезультатеПроведения", 
			"Прошел предсменный медицинский осмотр, к исполнению трудовых обязанностей допущен", 
			Ложь, КонтейнерОтображаемойВерсии);
		
		Водитель = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
									"ТитулОформлениеВодители__" + Строка(ТекущееЗначениеВерсии + 1) + "__ХранимыеДанныеВодитель");
		
		Если ТипЗнч(Водитель) = Тип("Строка") Тогда
			Элементы.ХранимыеДанныеТитулМедосмотрВодитель.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ХранимыеДанныеТитулМедосмотрВодитель", 
			Водитель, 
			Ложь, КонтейнерОтображаемойВерсии);
		
		ОбменСГИСЭПДКлиентСервер.СкопироватьРеквизитыВСтруктуреФормы(ЭтотОбъект, 
			"ТитулОформлениеВодители__" + Строка(ТекущееЗначениеВерсии + 1) + "__", 
			"ТитулМедосмотрВодитель");
			
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка)
		И ТитулЗаполнения = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3") Тогда
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулВыпускДатаИВремяПредрейсовогоКонтроля", 
			ТекущаяДатаСеанса(), 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулВыпускДатаИВремяВыпускаНаЛинию", 
			ТекущаяДатаСеанса(), 
			Ложь, КонтейнерОтображаемойВерсии);
			
		Транспорт = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
																"ХранимыеДанныеТитулОформлениеТранспортноеСредство");
		
		Если ТипЗнч(Транспорт) = Тип("Строка") Тогда
			Элементы.ХранимыеДанныеТитулВыпускТранспортноеСредство.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ХранимыеДанныеТитулВыпускТранспортноеСредство", 
			Транспорт, 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.СкопироватьРеквизитыВСтруктуреФормы(ЭтотОбъект, 
			"ТитулОформлениеТранспортноеСредство", 
			"ТитулВыпускТранспортноеСредство");
			
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка)
		И ТитулЗаполнения = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
				
		ПризнакНачалаРейса = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
																				"ТитулОформлениеПризнакНачалаРейса");
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулВыездПризнакНачалаРейса", 
			ПризнакНачалаРейса, 
			Ложь, КонтейнерОтображаемойВерсии);
			
		Если ТитулВыездПризнакНачалаРейса = "1" Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулВыездДатаИВремяВыезда", 
				ТекущаяДатаСеанса(), 
				Ложь, КонтейнерОтображаемойВерсии);
		ИначеЕсли ТитулВыездПризнакНачалаРейса = "2" Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулВыездДатаИВремяПриема", 
				ТекущаяДатаСеанса(), 
				Ложь, КонтейнерОтображаемойВерсии);	
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, "ТитулВыездПризнакНачалаРейса");
			
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка)
		И ТитулЗаполнения = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулЗаездПризнакОкончанияРейса", 
			"1", 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ПризнакНачалаРейса = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
			"ТитулЗаездПризнакОкончанияРейса",,
			КонтейнерОтображаемойВерсии);
			
		Если ПризнакНачалаРейса = "1" Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулЗаездДатаИВремяЗаезда", 
				ТекущаяДатаСеанса(), 
				Ложь, КонтейнерОтображаемойВерсии);
		ИначеЕсли ПризнакНачалаРейса = "2" Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулЗаездДатаИВремяСдачи", 
				ТекущаяДатаСеанса(), 
				Ложь, КонтейнерОтображаемойВерсии);	
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, "ТитулЗаездПризнакОкончанияРейса");
		
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка)
		И ТитулЗаполнения = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
			
		Отправки = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка);
		Медосмотры = Отправки.Получить(ТитулЗаполнения);
		КоличествоМедосмотров = 0;
		КоличествоНезавершенных = 0;
		Если Медосмотры <> Неопределено Тогда
			Для Каждого СтруктураМедосмотр Из Медосмотры Цикл
				Если СтруктураМедосмотр.Статус = ПредопределенноеЗначение("Перечисление.СтатусыСообщенийЭДО.Отправлен") Тогда
					КоличествоМедосмотров = КоличествоМедосмотров + 1;	
				ИначеЕсли СтруктураМедосмотр.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыСообщенийЭДО.Получен") Тогда
					КоличествоНезавершенных = КоличествоНезавершенных + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Отбор = Новый Структура("Титул", ТитулЗаполнения);
		СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
		
		ТекущееЗначениеВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулМедосмотрПосле");
		
		// Если есть незавершенные переключимся на версию, следующую за крайней отправленной
		Если КоличествоНезавершенных > 0 Тогда
			НовоеТекущееЗначениеВерсии = КоличествоМедосмотров;
			
			ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулМедосмотрПосле", 
														НовоеТекущееЗначениеВерсии - ТекущееЗначениеВерсии);	
		Иначе
			КоличествоВодителей = ОбменСГИСЭПДКлиентСервер.ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(ЭтотОбъект, "ТитулОформлениеВодители");
			// Версий меньше, чем количество водителей - добавим
			Если КоличествоВодителей > СтрокиВерсий.Количество() Тогда
				НовоеТекущееЗначениеВерсии = КоличествоМедосмотров;
				
				Если НовоеТекущееЗначениеВерсии > СтрокиВерсий.Количество() - 1 Тогда
					СтрокаНовойВерсии = ВерсииТитулов.Добавить();
					СтрокаНовойВерсии.Титул = ТитулЗаполнения;
					СтрокаНовойВерсии.НомерВерсии = НовоеТекущееЗначениеВерсии;
				КонецЕсли;	
				ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулМедосмотрПосле", 
															НовоеТекущееЗначениеВерсии - ТекущееЗначениеВерсии);
				ТекущееЗначениеВерсии = НовоеТекущееЗначениеВерсии;
			КонецЕсли;
		КонецЕсли;
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулМедосмотрПослеНомерВерсии", 
				ТекущееЗначениеВерсии, 
				Ложь, КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
				"ТитулМедосмотрПослеДатаИВремяПроведения", 
				ТекущаяДатаСеанса(), 
				Ложь, КонтейнерОтображаемойВерсии);	
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулМедосмотрПослеОтметкаОРезультатеПроведения", 
			"Прошел послерейсовый медицинский осмотр", 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ТекущееЗначениеВерсии = Неопределено;
		ОтображаемыеВерсииТитулов.Свойство("ТитулМедосмотрПосле", ТекущееЗначениеВерсии);
		
		Водитель = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
									"ТитулОформлениеВодители__" + Строка(ТекущееЗначениеВерсии + 1) + "__ХранимыеДанныеВодитель");
		
		Если ТипЗнч(Водитель) = Тип("Строка") Тогда
			Элементы.ХранимыеДанныеТитулМедосмотрПослеВодитель.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
		КонецЕсли;

		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ХранимыеДанныеТитулМедосмотрПослеВодитель", 
			Водитель, 
			Ложь, КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.СкопироватьРеквизитыВСтруктуреФормы(ЭтотОбъект, 
			"ТитулОформлениеВодители__" + Строка(ТекущееЗначениеВерсии + 1) + "__", 
			"ТитулМедосмотрПослеВодитель");		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУчастников(ЭтоНастройкаПередОтправкой = Ложь)
	
	МассивНастроек = Новый Массив;
	
	ТипОрганизация = ОбменСГИСЭПДВызовСервера.ПолучитьТипОрганизация();
	Если Объект.ЭтоВходящий = Ложь Тогда
		КлючНастроекОтправкиМед = НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки();
		КлючНастроекОтправкиМед.ВидДокумента = Объект.ВидДокумента;
		КлючНастроекОтправкиМед.Отправитель = Объект.СсылкаТитулОформлениеОформитель;
		Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеМедорганизация) Тогда
			КлючНастроекОтправкиМед.Получатель = Объект.СсылкаТитулОформлениеМедорганизация; 	
		Иначе
			КлючНастроекОтправкиМед.Получатель = Объект.СсылкаТитулОформлениеОформитель;
		КонецЕсли;
		МассивНастроек.Добавить(КлючНастроекОтправкиМед);
		
		Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеТехконтроль) Тогда
			КлючНастроекОтправкиТК = НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки();
			КлючНастроекОтправкиТК.ВидДокумента = Объект.ВидДокумента;
			КлючНастроекОтправкиТК.Отправитель = Объект.СсылкаТитулОформлениеОформитель;
			КлючНастроекОтправкиТК.Получатель = Объект.СсылкаТитулОформлениеТехконтроль;
			МассивНастроек.Добавить(КлючНастроекОтправкиТК);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеПоказанияОдометра) Тогда
			КлючНастроекОтправкиОД = НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки();
			КлючНастроекОтправкиОД.ВидДокумента = Объект.ВидДокумента;
			КлючНастроекОтправкиОД.Отправитель = Объект.СсылкаТитулОформлениеОформитель;
			КлючНастроекОтправкиОД.Получатель = Объект.СсылкаТитулОформлениеПоказанияОдометра;
			МассивНастроек.Добавить(КлючНастроекОтправкиОД);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыНастройкиОбменаСКонтрагентом = НастройкиЭДОКлиент.НовыеПараметрыНастройкиОбменаСКонтрагентом();
	ПараметрыНастройкиОбменаСКонтрагентом.НастройкаОдногоДокумента = Истина;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("МассивНастроек", МассивНастроек);
	ДополнительныеПараметры.Вставить("ИндексНастройки", 1);
	ДополнительныеПараметры.Вставить("ПараметрыНастройкиОбменаСКонтрагентом", ПараметрыНастройкиОбменаСКонтрагентом);
	ДополнительныеПараметры.Вставить("ПараметрыЗаписи", Новый Структура);
	ДополнительныеПараметры.Вставить("ИдентификаторОтправителя", ИдентификаторОтправителя());
	ДополнительныеПараметры.Вставить("ЭтоНастройкаПередОтправкой", ЭтоНастройкаПередОтправкой);
	
	ОповещениеОкончаниеНастройки = Новый ОписаниеОповещения("ЗаполнитьУчастников_ПослеНастроек", ЭтотОбъект, ДополнительныеПараметры);
	Если МассивНастроек.Количество() > 0 Тогда
		НастройкиОтправки = НастройкиОтправкиЭДОСлужебныйВызовСервера.НастройкиОтправки(МассивНастроек[0]);
		
		Если НастройкиОтправки = Неопределено Тогда	
			НастройкиЭДОКлиент.НастроитьОбменСКонтрагентом(МассивНастроек[0], ОповещениеОкончаниеНастройки, ПараметрыНастройкиОбменаСКонтрагентом);
		Иначе
			ВыполнитьОбработкуОповещения(ОповещениеОкончаниеНастройки, НастройкиОтправки); 
		КонецЕсли;
	Иначе
		ВыполнитьОбработкуОповещения(ОповещениеОкончаниеНастройки, НастройкиОтправки); 	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУчастников_ПослеНастроек(Настройка, ДополнительныеПараметры) Экспорт
	
	МассивНастроек = Неопределено;
	ДополнительныеПараметры.Свойство("МассивНастроек", МассивНастроек);
	ЕстьНастройки = МассивНастроек <> Неопределено И МассивНастроек.Количество() > 0;
	
	Если ЕстьНастройки = Истина Тогда
		Если Настройка = Неопределено Тогда
			Доступность = Истина;
			Возврат;
		КонецЕсли;
		
		Если Настройка.Отправитель = Объект.СсылкаТитулОформлениеОформитель Тогда
			Объект.ИдентификаторОформителя = Настройка.ИдентификаторОтправителя;
		КонецЕсли;
		
		Если Настройка.Отправитель = Объект.СсылкаТитулОформлениеМедорганизация Тогда
			Объект.ИдентификаторМедорганизации = Настройка.ИдентификаторОтправителя;
		КонецЕсли;
		
		Если Настройка.Отправитель = Объект.СсылкаТитулОформлениеТехконтроль Тогда
			Объект.ИдентификаторТехконтроль = Настройка.ИдентификаторОтправителя;
		КонецЕсли;
		
		Если Настройка.Отправитель = Объект.СсылкаТитулОформлениеПоказанияОдометра Тогда
			Объект.ИдентификаторПоказанияОдометра = Настройка.ИдентификаторОтправителя;
		КонецЕсли;
	
	
		Если Настройка.Получатель = Объект.СсылкаТитулОформлениеОформитель Тогда
			Объект.ИдентификаторОформителя = Настройка.ИдентификаторПолучателя;
		КонецЕсли;
		
		Если Настройка.Получатель = Объект.СсылкаТитулОформлениеМедорганизация Тогда
			Объект.ИдентификаторМедорганизации = Настройка.ИдентификаторПолучателя;
		КонецЕсли;
		
		Если Настройка.Получатель = Объект.СсылкаТитулОформлениеТехконтроль Тогда
			Объект.ИдентификаторТехконтроль = Настройка.ИдентификаторПолучателя;
		КонецЕсли;
		
		Если Настройка.Получатель = Объект.СсылкаТитулОформлениеПоказанияОдометра Тогда
			Объект.ИдентификаторПоказанияОдометра = Настройка.ИдентификаторПолучателя;
		КонецЕсли;
		
		ЭтоНастройкаПередОтправкой = Неопределено;
		ДополнительныеПараметры.Свойство("ЭтоНастройкаПередОтправкой", ЭтоНастройкаПередОтправкой);
		ИндексНастройки = 0;
		
		Если ДополнительныеПараметры <> Неопределено 
		И МассивНастроек <> Неопределено
		И ДополнительныеПараметры.Свойство("ИндексНастройки", ИндексНастройки) = Истина
		И МассивНастроек.ВГраница() >= ИндексНастройки Тогда
			ДополнительныеПараметрыСледующий = Новый Структура;
			Для Каждого КиЗ Из ДополнительныеПараметры Цикл
				ДополнительныеПараметрыСледующий.Вставить(КиЗ.Ключ, КиЗ.Значение);	
			КонецЦикла;
			ДополнительныеПараметрыСледующий.Вставить("ИндексНастройки", ИндексНастройки + 1);
			ОповещениеОкончаниеНастройки = Новый ОписаниеОповещения("ЗаполнитьУчастников_ПослеНастроек", ЭтотОбъект, ДополнительныеПараметрыСледующий);
			
			НастройкиОтправкиСледующий = НастройкиОтправкиЭДОСлужебныйВызовСервера.НастройкиОтправки(МассивНастроек[ИндексНастройки]);	
			Если НастройкиОтправкиСледующий = Неопределено Тогда		
				НастройкиЭДОКлиент.НастроитьОбменСКонтрагентом(МассивНастроек[ИндексНастройки], 
																	ОповещениеОкончаниеНастройки, 
																	ДополнительныеПараметры.ПараметрыНастройкиОбменаСКонтрагентом);
			Иначе
				ВыполнитьОбработкуОповещения(ОповещениеОкончаниеНастройки, НастройкиОтправкиСледующий);	
			КонецЕсли;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеМедорганизация) = Ложь Тогда
		Объект.ИдентификаторМедорганизации = Объект.ИдентификаторОформителя;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеТехконтроль) = Ложь Тогда
		Объект.ИдентификаторТехконтроль = Объект.ИдентификаторОформителя;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СсылкаТитулОформлениеПоказанияОдометра) = Ложь Тогда
		Объект.ИдентификаторПоказанияОдометра = Объект.ИдентификаторОформителя;
	КонецЕсли;
																		
	ИзмененСоставУчастников = Ложь;
	
	Если ЭтоНастройкаПередОтправкой = Истина
		И ЗначениеЗаполнено(Объект.ИдентификаторОформителя)
		И ЗначениеЗаполнено(Объект.ИдентификаторМедорганизации)
		И ЗначениеЗаполнено(Объект.ИдентификаторТехконтроль)
		И ЗначениеЗаполнено(Объект.ИдентификаторПоказанияОдометра) Тогда
			ОтправитьЧерезЭДОПослеЗаписи();
	Иначе
		ЭтотОбъект.Доступность = Истина;
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИмяФайла(Шаблон, ИдОформителя, ИдМедорганизации, ИдТехконтроль, ИдОдометр, НаличиеДругихПолучателей = Ложь)
	
	#Если Сервер Тогда
		ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	#Иначе
		ТекущаяДатаСеанса = ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли
	
	Результат = Шаблон;
	Результат = СтрЗаменить(Результат, "ИдОФ", ИдОформителя);
	Результат = СтрЗаменить(Результат, "ИдМО", ИдМедорганизации);
	Результат = СтрЗаменить(Результат, "ИдТК", ИдТехконтроль);
	Результат = СтрЗаменить(Результат, "ИдОД", ИдОдометр);
	Результат = СтрЗаменить(Результат, "GGGGMMDD", Формат(ТекущаяДатаСеанса, "ДФ=ггггММдд"));
	Результат = СтрЗаменить(Результат, "ГУИДФайла", Строка(Новый УникальныйИдентификатор()));
	Результат = СтрЗаменить(Результат, "НалДр", ?(НаличиеДругихПолучателей = Истина, "1", "0"));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция УстановитьНомерДокумента()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.УстановитьНовыйНомер();
	
	Возврат ДокументОбъект.Номер;
	
КонецФункции

&НаСервере
Функция ПолучитьПодписьТитулаBase64(ТипЭлементаРегламента) 
	
	ПодписьBase64 = "";
	
	СообщениеТитула = ОбменСГИСЭПД.ПолучитьСообщениеТитула(Объект.Ссылка, ТипЭлементаРегламента);
	
	Если ЗначениеЗаполнено(СообщениеТитула) Тогда
		УстановленныеПодписи = ЭлектронныеДокументыЭДО.УстановленныеПодписи(СообщениеТитула);
		Для Каждого ОписаниеПодписи Из УстановленныеПодписи Цикл
			ПодписьBase64 = Base64Строка(ОписаниеПодписи.Подпись);
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПодписьBase64;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, ИдентификаторОтправителя, Переформировать = Ложь, ОбработкаЗавершения = Неопределено)

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИнформацияПоПрефиксамТитула", ИнформацияПоПрефиксамТитула);
	ДополнительныеПараметры.Вставить("ИдентификаторОтправителя", ИдентификаторОтправителя);
	ДополнительныеПараметры.Вставить("Переформировать", Переформировать);
	ДополнительныеПараметры.Вставить("ОбработкаЗавершения", ОбработкаЗавершения);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьИдентификациюФайлаОбмена_ПослеПолученияУИД", ЭтотОбъект, ДополнительныеПараметры);
	
	Если ЗначениеЗаполнено(Объект.УИДМинтранс) Тогда
		ЗаполнитьИдентификациюФайлаОбмена_ПослеПолученияУИД(Объект.УИДМинтранс, ДополнительныеПараметры);
	Иначе
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1") Тогда
			ОбменСГИСЭПДКлиент.ПолучитьУИДМинтранса(ОписаниеОповещения, Объект.ИдентификаторОформителя);
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
			ОбменСГИСЭПДКлиент.ПолучитьУИДМинтранса(ОписаниеОповещения, Объект.ИдентификаторМедорганизации, Истина, Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИдентификациюФайлаОбмена_ПослеПолученияУИД(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Объект.УИДМинтранс) = Ложь Тогда
		Объект.УИДМинтранс = Результат;
	КонецЕсли;
	
	ИнформацияПоПрефиксамТитула = ДополнительныеПараметры.ИнформацияПоПрефиксамТитула;
	ИдентификаторОтправителя = ДополнительныеПараметры.ИдентификаторОтправителя;
	Переформировать = ДополнительныеПараметры.Переформировать;
	
	ТребуетсяЗаполнить = Переформировать = Истина
			Или ОбменСГИСЭПДКлиент.ТребуетсяИдентификацияФайлаТитула(Объект.Ссылка, Объект.ТекущийТитул, ВерсииТитулов);
	
	Если ТребуетсяЗаполнить = Истина Тогда
		КонтейнерОтображаемойВерсии = Неопределено;
		ПрефиксПодписанта = "";
		
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1") Тогда
			КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ТитулОформление");
			
			Если ЗначениеЗаполнено(Объект.Ссылка) = Ложь Тогда
				Объект.Номер = УстановитьНомерДокумента();
			КонецЕсли;
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулОформлениеДатаПутевогоЛиста",
				Объект.Дата, Ложь,
				КонтейнерОтображаемойВерсии);	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулОформлениеНомерПутевогоЛиста",
				Объект.Номер, Ложь,
				КонтейнерОтображаемойВерсии);	
			
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
			КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ТитулМедосмотр");
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулМедосмотрФайлОформлениеИдентификаторФайла",
					Объект.ТитулОформлениеИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулМедосмотрФайлОформлениеДатаФормированияФайла", 
					Объект.ТитулОформлениеДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулМедосмотрФайлОформлениеВремяФормированияФайла", 
					Объект.ТитулОформлениеВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулМедосмотрФайлОформлениеЭлектроннаяПодпись",
				ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1")), ,
				КонтейнерОтображаемойВерсии);
				
			Если ВариантМедработник = 1 Тогда
				ПрефиксПодписанта = "ТитулМедосмотрСтороннийМедработник";		
				// Очистим данные штатного медработника
				ХранимыеДанныеТитулМедосмотрШтатныйМедработник = Неопределено;
				ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, "ТитулМедосмотрШтатныйМедработник", КонтейнерОтображаемойВерсии);
			Иначе
				ПрефиксПодписанта = "ТитулМедосмотрШтатныйМедработник";
				// Очистим данные стороннего медработника
				ХранимыеДанныеТитулМедосмотрСтороннийМедработник = Неопределено;
				ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, "ТитулМедосмотрСтороннийМедработник", КонтейнерОтображаемойВерсии);
			КонецЕсли;
				
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3") Тогда
			КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ТитулВыпуск");
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулВыпускФайлОформлениеИдентификаторФайла",
					Объект.ТитулОформлениеИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулВыпускФайлОформлениеДатаФормированияФайла", 
					Объект.ТитулОформлениеДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулВыпускФайлОформлениеВремяФормированияФайла", 
					Объект.ТитулОформлениеВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулВыпускФайлОформлениеЭлектроннаяПодпись",
				ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1")), ,
				КонтейнерОтображаемойВерсии);
				
			ПрефиксПодписанта = "ТитулВыпускОтветственныйЗаСостояниеТС";
				
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
			КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ТитулВыезд");
			
			Если ТитулВыездПризнакНачалаРейса = "1" Тогда
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездФайлВыпускИдентификаторФайла",
						Объект.ТитулВыпускИдентификаторФайла, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездФайлВыпускДатаФормированияФайла", 
						Объект.ТитулВыпускДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездФайлВыпускВремяФормированияФайла", 
						Объект.ТитулВыпускВремяФормированияФайла, , КонтейнерОтображаемойВерсии);	
						
				// Очистим реквизиты приема ТС
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездДатаИВремяПриема", , , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездПоказанияОдометраПриПриеме", , , КонтейнерОтображаемойВерсии);
						
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					"ТитулВыездФайлВыпускЭлектроннаяПодпись",
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3")), ,
					КонтейнерОтображаемойВерсии);
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездФайлОформлениеИдентификаторФайла",
						Объект.ТитулОформлениеИдентификаторФайла, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездФайлОформлениеДатаФормированияФайла", 
						Объект.ТитулОформлениеДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездФайлОформлениеВремяФормированияФайла", 
						Объект.ТитулОформлениеВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
						
				// Очистим реквизиты выезда с парковки
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездДатаИВремяВыезда", , , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулВыездПоказанияОдометраПриВыезде", , , КонтейнерОтображаемойВерсии);
						
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					"ТитулВыездФайлОформлениеЭлектроннаяПодпись",
					ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1")), ,
					КонтейнерОтображаемойВерсии);
			КонецЕсли;
			
			ПрефиксПодписанта = "ТитулВыездУполномоченныйНаПроставлениеДанных";
				
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда
			КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ТитулЗаезд");
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулЗаездФайлВыездИдентификаторФайла",
					Объект.ТитулВыездИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулЗаездФайлВыездДатаФормированияФайла", 
					Объект.ТитулВыездДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулЗаездФайлВыездВремяФормированияФайла", 
					Объект.ТитулВыездВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
					
			Если Объект.ТитулЗаездПризнакОкончанияРейса = "1" Тогда
				// Очистим реквизиты сдачи ТС
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулЗаездДатаИВремяСдачи", , , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулЗаездПоказанияОдометраПриСдаче", , , КонтейнерОтображаемойВерсии);
			Иначе
				// Очистим реквизиты заезда на парковку
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулЗаездДатаИВремяЗаезда", , , КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, "ТитулЗаездПоказанияОдометраПриЗаезде", , , КонтейнерОтображаемойВерсии);	
			КонецЕсли;
	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулЗаездФайлВыездЭлектроннаяПодпись",
				ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4")), ,
				КонтейнерОтображаемойВерсии);
				
			ПрефиксПодписанта = "ТитулЗаездУполномоченныйНаПроставлениеДанных";
				
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
			КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, "ТитулМедосмотрПосле");
			
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулМедосмотрПослеФайлЗаездИдентификаторФайла",
					Объект.ТитулЗаездИдентификаторФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулМедосмотрПослеФайлЗаездДатаФормированияФайла", 
					Объект.ТитулЗаездДатаФормированияФайла, , КонтейнерОтображаемойВерсии);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, "ТитулМедосмотрПослеФайлЗаездВремяФормированияФайла", 
					Объект.ТитулЗаездВремяФормированияФайла, , КонтейнерОтображаемойВерсии);
	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				"ТитулМедосмотрПослеФайлЗаездЭлектроннаяПодпись",
				ПолучитьПодписьТитулаBase64(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5")), ,
				КонтейнерОтображаемойВерсии);
				
			Если ВариантМедработникПосле = 1 Тогда
				ПрефиксПодписанта = "ТитулМедосмотрПослеСтороннийМедработник";
				// Очистим данные штатного медработника
				ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник = Неопределено;
				ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, "ТитулМедосмотрПослеШтатныйМедработник", КонтейнерОтображаемойВерсии);
			Иначе
				ПрефиксПодписанта = "ТитулМедосмотрПослеШтатныйМедработник";
				// Очистим данные стороннего медработника
				ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник = Неопределено;
				ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, "ТитулМедосмотрПослеСтороннийМедработник", КонтейнерОтображаемойВерсии);
			КонецЕсли;
			
		КонецЕсли;
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ПолеУИД, Объект.УИДМинтранс, , КонтейнерОтображаемойВерсии);
	
		ИтераторЦикла = 1;
		ИныеПолучатели = Новый Массив;
		КлючОткуда = ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторыИныхПолучателейФайла__" + ИтераторЦикла + "__" + "ИдентификаторИногоПолучателя";
		ЗначениеОткуда = Неопределено;
		СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
		Пока СтруктураВерсииТитула.Свойство(КлючОткуда, ЗначениеОткуда) Цикл
			ИныеПолучатели.Добавить(ЗначениеОткуда);	
			ИтераторЦикла = ИтераторЦикла + 1;
			КлючОткуда = ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторыИныхПолучателейФайла__" + ИтераторЦикла + "__" + "ИдентификаторИногоПолучателя";
		КонецЦикла;
		НаличиеИныхПолучателей = ИныеПолучатели.Количество() > 0;
		Объект.ИныеПолучателиСтрока = СтрСоединить(ИныеПолучатели, ",");
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла", ПолучитьИмяФайла(ИнформацияПоПрефиксамТитула.ШаблонИмениФайла, 
																			Объект.ИдентификаторОформителя,
																			Объект.ИдентификаторМедорганизации,
																			Объект.ИдентификаторТехконтроль,
																			Объект.ИдентификаторПоказанияОдометра,
																			НаличиеИныхПолучателей), , КонтейнерОтображаемойВерсии);
																			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ВерсияПрограммы",
			ОбменСГИСЭПДКлиентСервер.ВерсияПрограммы(), ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ВерсияФормата",
			ОбменСГИСЭПДКлиентСервер.ВерсияФормата("ЭлектронныйПутевойЛист"), ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "КодДокументаПоКНД",
			ИнформацияПоПрефиксамТитула.КНД, ,
			КонтейнерОтображаемойВерсии);
		
		ДатаИВремяФормирования = ОбщегоНазначенияКлиент.ДатаСеанса();
		ДатаФормирования = НачалоДня(ДатаИВремяФормирования);
		ВремяФормирования = Дата('00010101') + (ДатаИВремяФормирования - ДатаФормирования); 
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ДатаФормированияФайла",
			ДатаФормирования, ,	
			КонтейнерОтображаемойВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла",
			ВремяФормирования, ,	
			КонтейнерОтображаемойВерсии);
		
		ОтборПодписанта = ПолучитьОтборПодписанта(ЭтотОбъект, ПрефиксПодписанта);
		ДанныеСертификатаУчетнойЗаписиЭДО = ОбменСГИСЭПДКлиентСервер.ДанныеСертификатаУчетнойЗаписиЭДО(ИдентификаторОтправителя, ОтборПодписанта);
		
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантТипПодписи",
			"1", ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантФамилия",
			ДанныеСертификатаУчетнойЗаписиЭДО.Фамилия, ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантИмя",
			ДанныеСертификатаУчетнойЗаписиЭДО.Имя, ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантОтчество",
			ДанныеСертификатаУчетнойЗаписиЭДО.Отчество, ,
			КонтейнерОтображаемойВерсии);
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДолжность",
			ДанныеСертификатаУчетнойЗаписиЭДО.Должность, ,
			КонтейнерОтображаемойВерсии);
			
		Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности) Тогда
			Если ЗначениеЗаполнено(ДанныеСертификатаУчетнойЗаписиЭДО.СведенияОбИнформационнойСистеме) Тогда
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектронная__1__Номер",
					ДанныеСертификатаУчетнойЗаписиЭДО.НомерДоверенности, ,
					КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектронная__1__Дата",
					ДанныеСертификатаУчетнойЗаписиЭДО.ДатаДоверенности, ,
					КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектронная__1__НомерВнутр",
					ДанныеСертификатаУчетнойЗаписиЭДО.ПорядковыйНомерДоверенности, ,
					КонтейнерОтображаемойВерсии);	
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантДоверенностьЭлектронная__1__ИнформационнаяСистема",
					ДанныеСертификатаУчетнойЗаписиЭДО.СведенияОбИнформационнойСистеме, ,
					КонтейнерОтображаемойВерсии);
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСпособПодтвержденияПолномочий",
					"3", ,
					КонтейнерОтображаемойВерсии);
			Иначе
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
					ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСпособПодтвержденияПолномочий",
					"6", ,
					КонтейнерОтображаемойВерсии);
			КонецЕсли;
		Иначе
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект,
				ИнформацияПоПрефиксамТитула.ВПрограмме + "ПодписантСпособПодтвержденияПолномочий",
				"1", ,
				КонтейнерОтображаемойВерсии);
		КонецЕсли;
	КонецЕсли;
	
	// Проверим заполнение
	Если ОбменСГИСЭПДКлиент.ЗаполнитьТаблицуОшибокЭПД(ЭтотОбъект, ОшибкиЗаполнения, Истина) = Истина Тогда	
		Элементы.ГруппаОшибки.Видимость = Истина;
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения (" + Строка(ОшибкиЗаполнения.Количество()) + ")";
		Если ТребуетсяЗаполнить = Истина Тогда
			ОчиститьИдФайлТекущегоТитула();
		КонецЕсли;
	Иначе
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения";
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("ОбработкаЗавершения") 
		И ДополнительныеПараметры.ОбработкаЗавершения <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОбработкаЗавершения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьТитул(Команда)
	
	ВводимИсправление = Истина;

	ТитулСтрока = ОбменСГИСЭПДКлиентСервер.ПолучитьПрефиксТитулаПоСтраницеОсновнойФормы(Элементы.Страницы.ТекущаяСтраница.Имя, "ЭлектронныйПутевойЛист");	
	Объект.ТекущийТитул = ОбменСГИСЭПДКлиентСервер.ТитулПоПрефиксу("Документ.ЭлектронныйПутевойЛист", ТитулСтрока);
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	ИдентификаторФайлаТитула = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла");
	
	Если ЗначениеЗаполнено(ИдентификаторФайлаТитула) Тогда
		НомерПредыдущейВерсии = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
				ИнформацияПоПрефиксамТитула.ВПрограмме + "НомерВерсии", 0);
				
		СтрокаНовойВерсии = ВерсииТитулов.Добавить();
		СтрокаНовойВерсии.Титул = Объект.ТекущийТитул;
		СтрокаНовойВерсии.НомерВерсии = НомерПредыдущейВерсии + 1;
		
		// Увеличим номер версии
		НовыйНомерВерсии = НомерПредыдущейВерсии + 1;
		ТекущееЗначениеВерсии = Неопределено;
		ОтображаемыеВерсииТитулов.Свойство(ТитулСтрока, ТекущееЗначениеВерсии);
		ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, ТитулСтрока, НовыйНомерВерсии - ТекущееЗначениеВерсии);
			
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			ИнформацияПоПрефиксамТитула.ВПрограмме + "НомерВерсии", НовыйНомерВерсии);
			
		УстановитьТекущийШагПомощника();
		
		ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
		
		Элементы.Страницы.ТекущаяСтраница.ТолькоПросмотр = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезЭДОПослеЗаписи(Повторно = Ложь)
		
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	
	ЭтоИсправление = Ложь;
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется уточнение"
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется повторная отправка" Тогда
		ЭтоИсправление = Истина;
		Повторно = Истина;	
	КонецЕсли;
	
	Если ВводимИсправление = Истина Тогда
		Повторно = Истина;
	КонецЕсли;
	
	ДоступенВнеОчередиТитул3 = ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4) 
							И Объект.ТитулОформлениеПризнакНачалаРейса = "1"
							И Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2");
							
	Если ДоступенВнеОчередиТитул3 И Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТитулВыпуск Тогда
		Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3");	
	КонецЕсли;
	
	ТребуетсяПовторноМедосмотр = Ложь;
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2")
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
		ЗавершенныеОтправки = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка, Истина);
		ЗавершенныеМедосмотры = ЗавершенныеОтправки.Получить(Объект.ТекущийТитул);
		КоличествоМедосмотров = 0;
		Если ЗавершенныеМедосмотры <> Неопределено Тогда
			Для Каждого СтруктураМедосмотр Из ЗавершенныеМедосмотры Цикл
				Если СтруктураМедосмотр.Статус = ПредопределенноеЗначение("Перечисление.СтатусыСообщенийЭДО.Отправлен") Тогда
					КоличествоМедосмотров = КоличествоМедосмотров + 1;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		КоличествоВодителей = ОбменСГИСЭПДКлиентСервер.ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(ЭтотОбъект, "ТитулОформлениеВодители");
		Если КоличествоМедосмотров > 0 И КоличествоВодителей > КоличествоМедосмотров Тогда
			ТребуетсяПовторноМедосмотр = Истина;
		КонецЕсли; 
	КонецЕсли;

	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДанныеСостоянияЭДО", ДанныеСостоянияЭДО);
	ДополнительныеПараметры.Вставить("ЭтоИсправление", ЭтоИсправление);
	ДополнительныеПараметры.Вставить("Повторно", Повторно);
	ДополнительныеПараметры.Вставить("ТребуетсяПовторноМедосмотр", ТребуетсяПовторноМедосмотр);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЧерезЭДОПослеЗаписи_Завершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ЗаполнитьИдентификациюФайлаОбмена(ИнформацияПоПрефиксамТитула, 
		ИдентификаторОтправителя(), 
		Повторно Или ТребуетсяПовторноМедосмотр,
		ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезЭДОПослеЗаписи_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДанныеСостоянияЭДО = ДополнительныеПараметры.ДанныеСостоянияЭДО;
	Повторно = ДополнительныеПараметры.Повторно;
	ТребуетсяПовторноМедосмотр = ДополнительныеПараметры.ТребуетсяПовторноМедосмотр;
	ЭтоИсправление = ДополнительныеПараметры.ЭтоИсправление;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
	Записать(ПараметрыЗаписи);
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) = Ложь Тогда
		ЭтотОбъект.Доступность = Истина;
		Возврат;
	КонецЕсли;
	
	Если ОшибкиЗаполнения.Количество() > 0 Тогда	
		Элементы.ГруппаОшибки.Видимость = Истина;
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения (" + Строка(ОшибкиЗаполнения.Количество()) + ")";
		Доступность = Истина;
		ПоказатьПредупреждение(, НСтр("ru='Документ не отправлен, обнаружены ошибки заполнения. Исправьте ошибки и повторите попытку'"));
		Возврат;
	Иначе
		Элементы.НадписьОшибки.Заголовок = "Ошибки заполнения";
	КонецЕсли;
	
	НаборДействий = Новый Соответствие;		
	
	Если Повторно = Истина Или ТребуетсяПовторноМедосмотр = Истина
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется повторная отправка" 
		Или ЗначениеЗаполнено(ОбменСГИСЭПДКлиентСервер.ПолучитьСообщениеТитула(Объект.Ссылка, Объект.ТекущийТитул)) = Ложь Тогда
			Если Объект.ЭтоВходящий = Ложь И ДанныеСостоянияЭДО.СуществуетАктуальныйДокумент = Ложь Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Сформировать"));	
			Иначе
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.СформироватьОтвет"));
			КонецЕсли;	   
			
			ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
			ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
				"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));  
	Иначе		
		Если ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется подготовка к отправке" 
			И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется отправка" Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
		КонецЕсли;
		
		Если ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется отправка" Тогда
			ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
				"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
		КонецЕсли;		
	КонецЕсли;
	
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отправить"));
	
	ПараметрыВыполненияДействийПоЭДО = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();	
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ОбъектыУчета.Добавить(Объект.Ссылка);
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	
	ДополнительныеПараметрыУспешногоЗавершения = Новый Структура;
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("НаборДействий", НаборДействий);
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("ЭтоИсправление", ЭтоИсправление);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоИсправление", ЭтоИсправление);
	ДополнительныеПараметры.Вставить("ПараметрыВыполненияДействийПоЭДО", ПараметрыВыполненияДействийПоЭДО);
	ДополнительныеПараметры.Вставить("ОповещениеУспешногоЗавершения",
		Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, 
									ДополнительныеПараметрыУспешногоЗавершения, 
									"ПослеВыполненияДействийПоЭДО_ОбработкаОшибки", ЭтотОбъект));

	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ИнтерфейсДокументовЭДОКлиент, ДополнительныеПараметры);
	
	ИнтерфейсДокументовЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьУОУ(Команда)
	
	ОповещениеПослеВводаТекста = Новый ОписаниеОповещения("ОтправитьУОУ_ПослеВводаТекстаУточнения", ЭтотОбъект);
	ПоказатьВводСтроки(ОповещениеПослеВводаТекста, "", "Текст запроса уточнения (отклонения)", , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьУОУ_ПослеВводаТекстаУточнения(Текст, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Текст) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_ОткМ");	

	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
	Записать(ПараметрыЗаписи);
	
	НаборДействий = Новый Соответствие();
	
	ДействиеОтклонить = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отклонить");
	
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ДействиеОтклонить);
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Отправить"));
	
	ПараметрыВыполненияДействийПоЭДО = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();	
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ОбъектыУчета.Добавить(Объект.Ссылка);
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	
	ДополнительныеПараметрыОтклонения = ИнтерфейсДокументовЭДОКлиентСервер.НовыеДополнительныеПараметрыДействия();
	ДополнительныеПараметрыОтклонения.Вставить("Комментарий", Текст);
	ДополнительныеПараметрыОтклонения.Вставить("ЭлементДляОтклонения", ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1"));
	ПараметрыВыполненияДействийПоЭДО.ДополнительныеПараметрыДействий.Вставить(ДействиеОтклонить, ДополнительныеПараметрыОтклонения);
	
	ДополнительныеПараметрыУспешногоЗавершения = Новый Структура;
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("ЭтоИсправление", Ложь);
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("НаборДействий", НаборДействий);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоИсправление", Ложь);
	ДополнительныеПараметры.Вставить("ОповещениеУспешногоЗавершения",
		Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, 
									ДополнительныеПараметрыУспешногоЗавершения));

	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ИнтерфейсДокументовЭДОКлиент, ДополнительныеПараметры);
	
	ИнтерфейсДокументовЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	ДействиеОтправить = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отправить");
	КоличествоОтправлено = Результат.ОбработаноПоДействиям.Получить(ДействиеОтправить);
	
	Если КоличествоОтправлено <> Неопределено И КоличествоОтправлено > 0 Тогда
		ВводимИсправление = Ложь;
		Если ДополнительныеПараметры.ЭтоИсправление Тогда
			ОбменСГИСЭПДВызовСервера.ОтметитьИсправлениеДокумента(Объект.Ссылка);	
		КонецЕсли;
		ПредыдущийТекущийТитул = Объект.ТекущийТитул;
		ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭПЛ(ЭтотОбъект);
	
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
		Записать(ПараметрыЗаписи);
		
		ОтображаемыеВерсииТитулов = Неопределено;
		
		ТекстОповещения = НСтр("ru = 'Титул """ + ПредыдущийТекущийТитул + """ отправлен'");		
		ЗаголовокОповещения = НСтр("ru = 'Электронные документы'");	
		ДействиеПриНажатии = Неопределено;
		КартинкаОповещения = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО48;
		
		ПодключитьОбработчикОжидания("ОбновлениеДоступностиЭлементов", 2, Истина);	
		
		#Если Не МобильноеПриложениеКлиент Тогда
		ПоказатьОповещениеПользователя(ЗаголовокОповещения, ДействиеПриНажатии, ТекстОповещения, КартинкаОповещения,
			СтатусОповещенияПользователя.Важное);
		#КонецЕсли
	Иначе
		ЭтотОбъект.Доступность = Истина;
	КонецЕсли;
	
	Если ДополнительныеПараметры.НаборДействий.Получить(ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.ОтправитьВАрхив")) = Истина Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО_ОбработкаОшибки(ИнформацияОбОшибке, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт
	
	ОчиститьИдФайлТекущегоТитула(Истина);
	
	ПредыдущийТекущийТитул = Объект.ТекущийТитул;
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭПЛ(ЭтотОбъект);
	
	ПодключитьОбработчикОжидания("ОбновлениеДоступностиЭлементов", 2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеДоступностиЭлементов()
	
	ВводимМедосмотрПосле = Ложь;
	
	ЭтотОбъект.Доступность = Истина;
	
	Если ЗначениеЗаполнено(Объект.ТекущийТитул) Тогда
		ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
		УстановитьТекущийШагПомощника(Объект.ТекущийТитул);	
	Иначе
		УстановитьТекущийШагПомощника(ПредыдущийТекущийТитул);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИдФайлТекущегоТитула(Записать = Ложь)
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(Объект.ТекущийТитул);
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
		ЭтотОбъект, 
		ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла", 
		Неопределено);
	
	Если Записать = Истина Тогда
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииДанныхНаФорме(ИмяЭлемента)
		
	СтруктураРеквизитовФормы = Новый Структура(ЭтотОбъект.ОписаниеРеквизитовФормы.ПараметрыФормы);
	СтруктураРеквизитовОбъекта = Новый Структура(ЭтотОбъект.ОписаниеРеквизитовФормы.РеквизитыОбъекта);
	
	Если СтруктураРеквизитовФормы.Свойство(ИмяЭлемента) Тогда
		ЗначениеРеквизита = ЭтотОбъект[ИмяЭлемента];
	ИначеЕсли СтруктураРеквизитовОбъекта.Свойство(ИмяЭлемента) Тогда
		ЗначениеРеквизита = Объект[ИмяЭлемента];
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, ИмяЭлемента, ЗначениеРеквизита);
	
	Если ИмяЭлемента = "СсылкаТитулОформлениеМедорганизация"
		Или ИмяЭлемента = "СсылкаТитулОформлениеТехконтроль"
		Или ИмяЭлемента = "СсылкаТитулОформлениеПоказанияОдометра" Тогда
		ОбновитьДополнительныеРеквизитыОсновнойФормы();
	КонецЕсли;
	
	Если ИзмененСоставУчастников = Истина Тогда
		ЗаполнитьУчастников();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДополнительныеРеквизитыОсновнойФормы()
	
	ОбменСГИСЭПД.ДобавитьОписаниеДополнительныхРеквизитов(ЭтотОбъект, , "ОсновнаяФорма");
	ОбменСГИСЭПД.ПоказатьДополнительныеРеквизитыОсновнойФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ОписаниеРеквизитовФормы() Экспорт
	
	Возврат ОписаниеРеквизитовФормыСервер();
	
КонецФункции

&НаСервере
Функция ОписаниеРеквизитовФормыСервер()
	
	Возврат ОбменСГИСЭПД.ОписаниеРеквизитовФормы(ЭтаФорма);
		
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТитулОформлениеАдресаПунктовПогрузкиИВыгрузки(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулОформлениеГрузоотправители(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулОформлениеВодители(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура Подключаемый_ДобавлениеПоляВвода(Команда)
	
	ИмяТаблицыИПоля = СтрЗаменить(Команда.Имя, "ДобавлениеПоляВвода", "");
	МассивЧастей = ОбменСГИСЭПДКлиентСервер.РазделитьСтрокуСоСложнымРазделителем(ИмяТаблицыИПоля, "__");
	
	ДобавлениеПоляВводаСервер(МассивЧастей[0], МассивЧастей[1], Истина);
	
КонецПроцедуры

&НаСервере
Процедура ДобавлениеПоляВводаСервер(ИмяТаблицы, ИмяПоля, ДобавитьСтроку)
	
	ОбменСГИСЭПД.СоздатьЭлементыВводаЗначенийСписка(ЭтотОбъект, ИмяТаблицы, ИмяПоля, ДобавитьСтроку);
	
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура Подключаемый_ПолеЗначенияСпискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	МассивЧастей = ОбменСГИСЭПДКлиентСервер.РазделитьСтрокуСоСложнымРазделителем(Элемент.Имя, "__");	
	УстановитьФорматированноеЗначениеПоляВвода(МассивЧастей[0], МассивЧастей[1], Число(МассивЧастей[2]), Текст);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФорматированноеЗначениеПоляВвода(ИмяТаблицы, ИмяПоля, НомерСтроки, Текст)
	
	ТекущиеДанные = ЭтотОбъект[ИмяТаблицы][НомерСтроки];	 
	ОбменСГИСЭПД.УстановитьФорматированноеЗначениеПоляВвода(ЭтотОбъект, ТекущиеДанные, ИмяПоля, Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулОформлениеАдресМестаОтправленияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулОформлениеАдресМестаОтправленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВводАдреса(Элемент.Имя, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТитулОформлениеАдресМестаОтправленияОбработкаВыбора(Элемент, Результат, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(ЭтотОбъект, Результат, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулОформлениеОформительПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.ИдентификаторОформителя) Тогда
		ИзмененСоставУчастников = Истина;
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулОформлениеМедорганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторМедорганизации) Тогда
		ИзмененСоставУчастников = Истина;
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулОформлениеТехконтрольПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторТехконтроль) Тогда
		ИзмененСоставУчастников = Истина;
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулОформлениеПоказанияОдометраПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторПоказанияОдометра) Тогда
		ИзмененСоставУчастников = Истина;
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыПоСсылке(Элемент, ЭтотОбъект);
	
КонецПроцедуры


&НаКлиенте
Процедура ХранимыеДанныеТитулОформлениеТранспортноеСредствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулОформлениеТранспортноеСредствоОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулОформлениеТранспортноеСредство, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулОформлениеТранспортноеСредствоПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, ХранимыеДанныеТитулОформлениеТранспортноеСредство, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулОформлениеТранспортноеСредствоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрШтатныйМедработникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , , , ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрШтатныйМедработникОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулМедосмотрШтатныйМедработник) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрШтатныйМедработникПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулМедосмотрШтатныйМедработник;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ВходящийКонтекст.Вставить("ОповещениеОЗавершении", ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьОтборПодписанта(Форма, ПрефиксПодписанта)
	
	ОтборПодписанта = Новый Структура;
	
	Если ЗначениеЗаполнено(ПрефиксПодписанта) Тогда
		КонтейнерОтображаемойВерсии = Неопределено;
		
		ОтборПодписанта.Вставить("Фамилия", ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, 
			ПрефиксПодписанта + "Фамилия", , КонтейнерОтображаемойВерсии));
		ОтборПодписанта.Вставить("Имя", ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, 
			ПрефиксПодписанта + "Имя", , КонтейнерОтображаемойВерсии));
		ОтборПодписанта.Вставить("Отчество", ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, 
			ПрефиксПодписанта + "Отчество", , КонтейнерОтображаемойВерсии));
	КонецЕсли;
	
	Возврат ОтборПодписанта;
	
КонецФункции

&НаСервере
Процедура ПроверитьНаличиеЭЦППоФИО(ПрефиксРеквизитов, ЭлементРодитель, ИдентификаторОтправителя)
	
	ОтборПодписанта = ПолучитьОтборПодписанта(ЭтотОбъект, ПрефиксРеквизитов);
	
	ДанныеСертификатаУчетнойЗаписиЭДО = ОбменСГИСЭПДКлиентСервер.ДанныеСертификатаУчетнойЗаписиЭДО(
												ИдентификаторОтправителя, 
												ОтборПодписанта);
	
	ИмяЭлементаОшибки = ПрефиксРеквизитов + "_НадписьОтсутствиеЭЦП";
	НадписьОшибка = Элементы.Найти(ИмяЭлементаОшибки);
	Если ДанныеСертификатаУчетнойЗаписиЭДО.СоответствуетОтбору = Ложь Тогда
		Если НадписьОшибка = Неопределено Тогда
			НадписьОшибка = Элементы.Добавить(ИмяЭлементаОшибки, Тип("ДекорацияФормы"), Элементы.Найти(ЭлементРодитель));
			НадписьОшибка.Вид = ВидДекорацииФормы.Надпись;
			НадписьОшибка.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
			НадписьОшибка.Ширина = 50;
			МассивСтроки = Новый Массив;
			МассивСтроки.Добавить(НСтр("ru='Нет сертификата ЭЦП с такими ФИО. 
										|Нужно выбрать другое лицо или добавить сертификат в '"));
			КлючЗаписи = РегистрыСведений.УчетныеЗаписиЭДО.СоздатьКлючЗаписи(Новый Структура("ИдентификаторЭДО", ИдентификаторОтправителя));
			СсылкаНаЗапись = ПолучитьНавигационнуюСсылку(КлючЗаписи);
			МассивСтроки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='учетной записи ЭДО'"), , , , СсылкаНаЗапись));
			ЗаголовокГиперссылки = Новый ФорматированнаяСтрока(МассивСтроки);
			НадписьОшибка.Заголовок = ЗаголовокГиперссылки;
		КонецЕсли;
		НадписьОшибка.Видимость = Истина;
	ИначеЕсли НадписьОшибка <> Неопределено Тогда
		НадписьОшибка.Видимость = Ложь;	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрШтатныйМедработникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрСтороннийМедработникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , , , ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрСтороннийМедработникОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулМедосмотрСтороннийМедработник) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрСтороннийМедработникПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулМедосмотрСтороннийМедработник;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ВходящийКонтекст.Вставить("ОповещениеОЗавершении", ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрСтороннийМедработникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрВодительОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулМедосмотрВодитель) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрВодительПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулМедосмотрВодитель;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрВодительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , , , ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТСОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТС) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТСПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТС;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ВходящийКонтекст.Вставить("ОповещениеОЗавершении", ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускТранспортноеСредствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускТранспортноеСредствоОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулВыпускТранспортноеСредство) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускТранспортноеСредствоПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулВыпускТранспортноеСредство;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускТранспортноеСредствоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , , , ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОповещениеОЗавершенииВводаДанных(ИмяЭлемента, ЭтоХранимыеДанные = Истина)
	
	ГруппаДанных = СтрЗаменить(ИмяЭлемента, "ХранимыеДанные", "");
	
	Контекст = Новый Структура;
	Контекст.Вставить("ГруппаДанных", ГруппаДанных);
	ЭлементРодитель = Элементы.Найти("ГруппаРеквизита" + ?(ЭтоХранимыеДанные = Истина, "ХранимыеДанные", "") + ГруппаДанных);
	Контекст.Вставить("ЭлементРодитель", ЭлементРодитель.Имя);
	
	Возврат Новый ОписаниеОповещения("ВывестиФормуВводаДанных_Завершение", ЭтотОбъект, Контекст);
	
КонецФункции

&НаКлиенте
Процедура ВывестиФормуВводаДанных_Завершение(Результат, Контекст) Экспорт
	
	ПроверитьНаличиеЭЦППоФИО(Контекст.ГруппаДанных, Контекст.ЭлементРодитель, ИдентификаторОтправителя());
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанныхОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанных) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанныхПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанных;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ВходящийКонтекст.Вставить("ОповещениеОЗавершении", ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанныхАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , , , ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанныхОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанных) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанныхПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанных;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ВходящийКонтекст.Вставить("ОповещениеОЗавершении", ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанныхАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , , , ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработникОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработникПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ВходящийКонтекст.Вставить("ОповещениеОЗавершении", ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , , , ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработникОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработникПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ВходящийКонтекст.Вставить("ОповещениеОЗавершении", ПолучитьОповещениеОЗавершенииВводаДанных(Элемент.Имя));
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеВодительОткрытие(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(ХранимыеДанныеТитулМедосмотрПослеВодитель) <> Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Элемент.Имя, , Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеВодительПриИзменении(Элемент)
	
	ЗначениеРеквизита = ХранимыеДанныеТитулМедосмотрПослеВодитель;
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ВходящийКонтекст = Новый Структура;
		ВходящийКонтекст.Вставить("ЗапретитьИзменение", Ложь);
		ВходящийКонтекст.Вставить("Форма", ЭтотОбъект);
		ВходящийКонтекст.Вставить("ГруппаДанных", ГруппаДанных);
		ОбменСГИСЭПДКлиент.ОткрытиеФормыПоГиперссылке_Завершение(ЗначениеРеквизита, ВходящийКонтекст);	
	Иначе
		ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, ГруппаДанных);
		ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеЭлементовФормы(ЭтотОбъект, ГруппаДанных);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеВодительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "ХранимыеДанные", "");
	ПараметрыПолученияДанных.Отбор = ОбменСГИСЭПДКлиент.ПолучитьОтборХранимыхДанных(Объект, ЭтотОбъект, ГруппаДанных);
	ПараметрыПолученияДанных.СпособПоискаСтроки = ПредопределенноеЗначение("СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть");
	
КонецПроцедуры


#Область Навигация

&НаКлиенте
Процедура Шаг1ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг1", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг2ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг2", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг3ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг3", НавигационнаяСсылкаФорматированнойСтроки);
	
	// Если перед Т2 можем сформировать Т3 тогда нужно заполнить его значениями по-умолчанию
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2")
		И Объект.ТитулОформлениеПризнакНачалаРейса = "1"
		И ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4) Тогда
		ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Шаг4ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг4", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг5ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг5", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг6ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг6", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

#КонецОбласти


#Область НавигацияПоСтраницам

&НаКлиентеНаСервереБезКонтекста
Процедура ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, ТитулСтрока, Инкремент)
	
	Если Инкремент = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтображаемыеВерсииТитулов = Неопределено Тогда
		ОтображаемыеВерсииТитулов = Новый Структура;
	Иначе
		ТекущееЗначениеВерсии = Неопределено;
		ОтображаемыеВерсииТитулов.Свойство(ТитулСтрока, ТекущееЗначениеВерсии);
		Если ТекущееЗначениеВерсии <> Неопределено Тогда
			ОтображаемыеВерсииТитулов.Вставить(ТитулСтрока, ТекущееЗначениеВерсии + Инкремент);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницы(ОтображаемаяСтраница)
	
	ОтображаемаяСтраницаЦелевая = ПодменитьСтраницуДляТестированияФормы(ОтображаемаяСтраница);

	// Чтобы не отрастали лишние скролл-бары по высоте из-за разного числа элементов
	// на разных страницах, оставляем видимость только у одной - отображаемой страницы.
	
	Для каждого СтраницаЭПЛ Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		СтраницаЭПЛ.Видимость = (СтраницаЭПЛ = ОтображаемаяСтраницаЦелевая);
	КонецЦикла;

	Элементы.Страницы.ТекущаяСтраница  = ОтображаемаяСтраницаЦелевая;
	
	ОбменСГИСЭПД.ПодготовитьФормуДляОтметкиОбязательныхПолей(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПодменитьСтраницуДляТестированияФормы(ОтображаемаяСтраница)
	
	Возврат ОтображаемаяСтраница;
	
КонецФункции

&НаСервере
Процедура УстановитьТекущийШагПомощника(ПредыдущийТекущийТитул = Неопределено)
	
	Если Параметры.Свойство("ТитулСтраницы") Тогда
		ТитулСтраницы = Параметры.ТитулСтраницы;
	Иначе
		ТитулСтраницы = ?(ЗначениеЗаполнено(Объект.ТекущийТитул), Объект.ТекущийТитул, ПредыдущийТекущийТитул);
	КонецЕсли;
	
	НачатьСПервойСтраницы = ТолькоПросмотр 
		Или ТитулСтраницы = Неопределено 
		Или НЕ ЗначениеЗаполнено(Объект.Ссылка);
		
	Если НачатьСПервойСтраницы Тогда
		ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1");	
	КонецЕсли;
	
	ОбменСГИСЭПД.ЗаполнитьВерсиюТитулаМобильногоПриложения(ЭтотОбъект, ТитулСтраницы);

	Если ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1") Тогда		
		УстановитьВидимостьСтраницыНачало("Шаг1");		
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда			
		УстановитьВидимостьСтраницыТитулМедосмотр("Шаг2"); 			
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3") Тогда
		НомерШага = ?(Объект.РольУчастника = 4, 2, 3);
		УстановитьВидимостьСтраницыТитулВыпуск("Шаг" + Строка(НомерШага));	
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда	
		НомерШага = 4;
		Если Объект.ТитулОформлениеПризнакНачалаРейса = "2"
			Или (ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1) = Ложь
			     И ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4) = Ложь) Тогда  
			НомерШага = НомерШага - 1;
		КонецЕсли;
		УстановитьВидимостьСтраницыТитулВыезд("Шаг" + Строка(НомерШага));
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда	
		НомерШага = 5;
		Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1) = Ложь
			И ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8) = Ложь Тогда
			НомерШага = НомерШага - 1;
		КонецЕсли;		
		Если Объект.ТитулОформлениеПризнакНачалаРейса = "2"
			Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4) = Ложь Тогда  
			НомерШага = НомерШага - 1;
		КонецЕсли;
		УстановитьВидимостьСтраницыТитулЗаезд("Шаг" + Строка(НомерШага));
	ИначеЕсли ТитулСтраницы = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
		НомерШага = 6;
		Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1) = Ложь
			И ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8) = Ложь Тогда
			НомерШага = НомерШага - 1;
		КонецЕсли;		
		Если Объект.ТитулОформлениеПризнакНачалаРейса = "2"
			Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4) = Ложь Тогда  
			НомерШага = НомерШага - 1;
		КонецЕсли;		
		УстановитьВидимостьСтраницыТитулМедосмотрПосле("Шаг" + Строка(НомерШага));
	Иначе			
		УстановитьВидимостьСтраницыНачало("Шаг1");			
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимостьСтраницыНачало(ИмяШага)

	УстановитьВидимостьСтраницы(Элементы.СтраницаТитулОформление);
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	РазместитьНавигацию(ИмяШагаПараметр);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулМедосмотр(ИмяШага)

	УстановитьВидимостьСтраницы(Элементы.СтраницаТитулМедосмотр);
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	РазместитьНавигацию(ИмяШагаПараметр);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулВыпуск(ИмяШага)

	УстановитьВидимостьСтраницы(Элементы.СтраницаТитулВыпуск);
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	РазместитьНавигацию(ИмяШагаПараметр);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулВыезд(ИмяШага)

	УстановитьВидимостьСтраницы(Элементы.СтраницаТитулВыезд);
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	РазместитьНавигацию(ИмяШагаПараметр);

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулЗаезд(ИмяШага)

	УстановитьВидимостьСтраницы(Элементы.СтраницаТитулЗаезд);
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	РазместитьНавигацию(ИмяШагаПараметр);

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТитулМедосмотрПосле(ИмяШага)

	УстановитьВидимостьСтраницы(Элементы.СтраницаТитулМедосмотрПосле);
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	РазместитьНавигацию(ИмяШагаПараметр);
	
КонецПроцедуры


&НаСервере
Функция ИмяПомощника()

	Возврат "ЭлектронныйПутевойЛист";

КонецФункции


&НаСервере
Функция НавигацияПомощника()

	СтруктураНавигации = Новый Структура;
	
	НомерШага = 1;
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаНачало(НомерШага));
	Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1)
		Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 2)
		Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8) Тогда
			НомерШага = НомерШага + 1;
			СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаМедосмотр(НомерШага));
	КонецЕсли;
	Если Объект.ТитулОформлениеПризнакНачалаРейса = "1"
		И (ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1)
			Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4)) Тогда
		НомерШага = НомерШага + 1;
		СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаВыпуск(НомерШага));
	КонецЕсли;
	Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1)
		Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8) Тогда
			НомерШага = НомерШага + 1;
			СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаВыезд(НомерШага));
	КонецЕсли;
	Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1)
		Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8)
		Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 2) Тогда
			НомерШага = НомерШага + 1;
			СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаЗаезд(НомерШага));
	КонецЕсли;
	Если (Объект.ТитулОформлениеОбязательностьМедОсмотраПосле = "1" 
			Или ВводимМедосмотрПосле = Истина
			Или ЗначениеЗаполнено(Объект.ТитулМедосмотрПослеИдентификаторФайла))
		И (ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1)
			Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 2)) Тогда
		НомерШага = НомерШага + 1;
		СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(НомерШага), СтруктураШагаМедосмотрПосле(НомерШага));	
	КонецЕсли;

	Для Каждого КиЗ Из СтруктураНавигации Цикл
		ШагВыполнен = Ложь;
		Для Каждого СтрВерсия Из ВерсииТитулов Цикл
			Если СтрВерсия.Титул = КиЗ.Значение.ТипЭлементаРегламента И СтрВерсия.ИдентификаторФайла <> "" Тогда
				ШагВыполнен = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		КиЗ.Значение.Выполнен = ШагВыполнен; 	
		КиЗ.Значение.Доступен = КиЗ.Значение.Доступен Или КиЗ.Значение.Выполнен;
	КонецЦикла;
	
	Возврат СтруктураНавигации;
	
КонецФункции

&НаСервере
Функция СтруктураШагаНачало(НомерШага)
	
	Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1");
	Отбор = Новый Структура("Титул", Титул);
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Оформление'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулОформление";
	СтруктураШага.ТипЭлементаРегламента = Титул;
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулОформлениеИдентификаторФайла); 
	СтруктураШага.Доступен = Истина;
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулОформление");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаМедосмотр(НомерШага)
	
	Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2");
	Отбор = Новый Структура("Титул", Титул);
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Медосмотр'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулМедосмотр";
	СтруктураШага.ТипЭлементаРегламента = Титул;
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулМедосмотрИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = Титул;
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулМедосмотр");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаВыпуск(НомерШага)
	
	Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3");
	Отбор = Новый Структура("Титул", Титул);
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	ДоступенВнеОчередиТитул3 = ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4) 
							И Объект.ТитулОформлениеПризнакНачалаРейса = "1"
							И Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Контроль транспорта'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулВыпуск";
	СтруктураШага.ТипЭлементаРегламента = Титул;
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулВыпускИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = Титул Или ДоступенВнеОчередиТитул3;
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулВыпуск");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаВыезд(НомерШага)
	
	Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4");
	Отбор = Новый Структура("Титул", Титул);
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Показания (выезд)'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулВыезд";
	СтруктураШага.ТипЭлементаРегламента = Титул;
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулВыездИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = Титул;
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулВыезд");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаЗаезд(НомерШага)
	
	Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5");
	Отбор = Новый Структура("Титул", Титул);
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Показания (заезд)'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулЗаезд";
	СтруктураШага.ТипЭлементаРегламента = Титул;
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулЗаездИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = Титул;
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулЗаезд");
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаМедосмотрПосле(НомерШага)
	
	Титул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6");
	Отбор = Новый Структура("Титул", Титул);
	СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Медосмотр
											|(после рейса)'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ТитулМедосмотрПосле";
	СтруктураШага.ТипЭлементаРегламента = Титул;
	СтруктураШага.Выполнен = ЗначениеЗаполнено(Объект.ТитулМедосмотрПослеИдентификаторФайла);
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или Объект.ТекущийТитул = Титул;
	СтруктураШага.КоличествоВерсий = Макс(СтрокиВерсий.Количество(), 1);
	СтруктураШага.НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, "ТитулМедосмотрПосле");
	Возврат СтруктураШага;
	
КонецФункции

// ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД

&НаКлиенте
Процедура Подключаемый_НадписьМПОткрытьНажатие(Элемент)
	
	ОбменСГИСЭПДКлиент.НадписьМПОткрытьНажатие(ЭтотОбъект, ИдентификаторОтправителя());
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НадписьМППозвонитьНажатие(Элемент)
	
	ОбменСГИСЭПДКлиент.НадписьМППозвонитьНажатие(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаВыбратьМПНажатие(Элемент)
	
	ОбменСГИСЭПДКлиент.КомандаВыбратьМПНажатие(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НадписьСтатусаМобильноеПриложениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ПроверитьПодписьМП") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСГИСЭПДКлиент.НадписьСтатусаМобильноеПриложениеОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД

&НаСервере
Функция ОтображаемаяВерсияТитула(СтрокиВерсий, ТитулСтрока)
	
	МаксВерсия = 0;
	Для Каждого СтрокаТЗ Из СтрокиВерсий Цикл
		Если СтрокаТЗ.НомерВерсии > МаксВерсия Тогда
			МаксВерсия = СтрокаТЗ.НомерВерсии;
		КонецЕсли;
	КонецЦикла;
	
	Если ОтображаемыеВерсииТитулов = Неопределено Тогда
		ОтображаемыеВерсииТитулов = Новый Структура;
		ОтображаемыеВерсииТитулов.Вставить(ТитулСтрока, МаксВерсия);
		Возврат МаксВерсия;
	КонецЕсли;
	
	ТекущееЗначениеВерсии = Неопределено;
	ОтображаемыеВерсииТитулов.Свойство(ТитулСтрока, ТекущееЗначениеВерсии);
	
	Если ТекущееЗначениеВерсии = Неопределено Тогда
		ОтображаемыеВерсииТитулов.Вставить(ТитулСтрока, МаксВерсия);
		Возврат МаксВерсия;
	Иначе
		Возврат ТекущееЗначениеВерсии;		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыОтображаемойВерсии(ВыбранныйТитулСтрока, ОтмечатьТекущий)
	
	ВыбранныйТитул = ОбменСГИСЭПДКлиентСервер.ТитулПоПрефиксу("Документ.ЭлектронныйПутевойЛист", ВыбранныйТитулСтрока); 
	
	Если ЗначениеЗаполнено(ВыбранныйТитул) Тогда
		Отбор = Новый Структура("Титул", ВыбранныйТитул);
		СтрокиВерсий = ВерсииТитулов.Выгрузить(Отбор, "НомерВерсии");	
		НомерВерсии = ОтображаемаяВерсияТитула(СтрокиВерсий, ВыбранныйТитулСтрока);
		
		РеквизитыТекущейВерсииТитула = ОбменСГИСЭПД.ПолучитьВерсиюТитулаДокумента(СтруктураРеквизитов, ВыбранныйТитул, НомерВерсии);
		ОбменСГИСЭПД.ЗаполнитьРеквизитыПоВерсии(ЭтотОбъект, ВыбранныйТитул, НомерВерсии, РеквизитыТекущейВерсииТитула);
		ЗаполнитьПредставленияАдресов(ВыбранныйТитул);
		Если ОтмечатьТекущий = Истина Тогда
			СтруктураСТекущимиДанными = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
			СтруктураДанныхОбъекта = ОбменСГИСЭПДКлиентСервер.ПолучитьСериализуемыйОбъектСДаннымиДокумента(ЭтотОбъект);
			СтруктураСДаннымиФормыДляОформленияКнопок = ОбменСГИСЭПДКлиентСервер.СтруктураСДаннымиФормыДляОформленияКнопок(ЭтотОбъект);
			
			Результат = ИзменитьОформлениеКнопокНаСервере(СтруктураСТекущимиДанными,
				Неопределено,
				Неопределено,
				СтруктураДанныхОбъекта,
				СтруктураСДаннымиФормыДляОформленияКнопок);
				
			Если Результат.Успешно Тогда
				ЭтотОбъект.АдресДереваСоответствийИтаблицыКнопок = Результат.НовыйАдресВХранилище;	
				МассивОформления = Результат.МассивОформления;
				ОбменСГИСЭПДКлиентСервер.ОформлениеКнопокНаФорме(ЭтотОбъект, СтруктураСТекущимиДанными, МассивОформления);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура РазместитьНавигацию(ВыбранныйТитулСтрока)

	НавигацияПараметрФормы = ВыбранныйТитулСтрока;
	
	ЗаполнитьРеквизитыОтображаемойВерсии(ВыбранныйТитулСтрока, Истина);

	СтруктураНавигацииПомощника = НавигацияПомощника();
	НавигацияПомощниковСВозвратомЭПД.РазместитьНавигацию(ЭтотОбъект, СтруктураНавигацииПомощника, Параметры);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеШага(ИмяШага, НавигационнаяСсылка)
	
	ИнкрементВерсии = 0;
	Если НавигационнаяСсылка = "Влево" Тогда
		ИнкрементВерсии = -1;
	ИначеЕсли НавигационнаяСсылка = "Вправо" Тогда
		ИнкрементВерсии = 1;
	КонецЕсли;
	
	НомерШагаТ2 = Неопределено;
	Если Объект.РольУчастника <> 4 Тогда
		НомерШагаТ2 = "Шаг2";
	КонецЕсли;
	
	НомерШагаТ3 = Неопределено;
	Если Объект.ТитулОформлениеПризнакНачалаРейса <> "2" Тогда
		Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1) Тогда
			НомерШагаТ3 = "Шаг3";
		ИначеЕсли ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4) Тогда
			Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 2) Тогда
				НомерШагаТ3 = "Шаг3";	
			Иначе
				НомерШагаТ3 = "Шаг2";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НомерШагаТ4 = Неопределено;
	Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1) Тогда
		НомерШагаТ4 = ?(Объект.ТитулОформлениеПризнакНачалаРейса <> "2", "Шаг4", "Шаг3");
	ИначеЕсли ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8) Тогда
		Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4)
			И Объект.ТитулОформлениеПризнакНачалаРейса <> "2" Тогда	
			НомерШагаТ4 = "Шаг4";
		Иначе
			НомерШагаТ4 = "Шаг3";
		КонецЕсли;
	КонецЕсли;
	
	НомерШагаТ5 = Неопределено;
	Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1) Тогда
		НомерШагаТ5 = ?(Объект.ТитулОформлениеПризнакНачалаРейса <> "2", "Шаг5", "Шаг4");
	ИначеЕсли ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 2)
		Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8) Тогда
		СдвигШагаВперед = 0;
		Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4)
			И Объект.ТитулОформлениеПризнакНачалаРейса <> "2" Тогда
			СдвигШагаВперед = СдвигШагаВперед + 1;
		КонецЕсли;
		Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8) Тогда
			СдвигШагаВперед = СдвигШагаВперед + 1;	
		КонецЕсли;
		НомерШагаТ5 = "Шаг" + Строка(3 + СдвигШагаВперед);
	КонецЕсли;
	
	НомерШагаТ6 = Неопределено;
	Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1) Тогда
		НомерШагаТ6 = ?(Объект.ТитулОформлениеПризнакНачалаРейса <> "2", "Шаг6", "Шаг5");
	ИначеЕсли ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 2) Тогда
		СдвигШагаВперед = 0;
		Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4)
			И Объект.ТитулОформлениеПризнакНачалаРейса <> "2" Тогда
			СдвигШагаВперед = СдвигШагаВперед + 1;
		КонецЕсли;
		Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8) Тогда
			СдвигШагаВперед = СдвигШагаВперед + 1;	
		КонецЕсли;
		НомерШагаТ6 = "Шаг" + Строка(4 + СдвигШагаВперед);
	КонецЕсли;	
	
	Если ИмяШага = "Шаг1" Тогда
		ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1");
		ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулОформление", ИнкрементВерсии);
		УстановитьВидимостьСтраницыНачало(ИмяШага);
	ИначеЕсли ИмяШага = НомерШагаТ2 Тогда
		ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2");
		ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулМедосмотр", ИнкрементВерсии);
		УстановитьВидимостьСтраницыТитулМедосмотр(ИмяШага);
	ИначеЕсли ИмяШага = НомерШагаТ3 Тогда
		ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3");
		ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулВыпуск", ИнкрементВерсии);
		УстановитьВидимостьСтраницыТитулВыпуск(ИмяШага);
	ИначеЕсли ИмяШага = НомерШагаТ4 Тогда
		ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4");
		ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулВыезд", ИнкрементВерсии);
		УстановитьВидимостьСтраницыТитулВыезд(ИмяШага);
	ИначеЕсли ИмяШага = НомерШагаТ5 Тогда
		ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5");
		ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулЗаезд", ИнкрементВерсии);
		УстановитьВидимостьСтраницыТитулЗаезд(ИмяШага);
	ИначеЕсли ИмяШага = НомерШагаТ6 Тогда
		ТитулШага = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6");
		ИнкрементироватьОтображаемуюВерсиюТитула(ОтображаемыеВерсииТитулов, "ТитулМедосмотрПосле", ИнкрементВерсии);
		УстановитьВидимостьСтраницыТитулМедосмотрПосле(ИмяШага);
	КонецЕсли;
	
	ОбменСГИСЭПДКлиент.ОтображениеМобильногоПриложения(ЭтотОбъект, ТитулШага);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбъектыОбязательныеДляЗаполнения

&НаКлиенте
Процедура ИзменитьОформлениеКнопок(Параметр) Экспорт

	Если Не ЭтотОбъект.НачальноеОформлениеВыполнено Тогда
		ЭтотОбъект.ТребуетсяДополнительноеОформлениеКнопок = Истина;
		Если ЭтотОбъект.СтруктураДополнительногоОформленияКнопок <> Неопределено Тогда
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = 
				Новый ФиксированнаяСтруктура("ИмяКнопки, ИдентификаторСтроки");
		Иначе
			ЭтотОбъект.СтруктураДополнительногоОформленияКнопок = Параметр;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	СтруктураСТекущимиДаннымиРеквизитов = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	СтруктураДанныхОбъекта = Неопределено;
	СтруктураСДаннымиФормыДляОформленияКнопок = 
		ОбменСГИСЭПДКлиентСервер.СтруктураСДаннымиФормыДляОформленияКнопок(ЭтотОбъект);
	
	Результат = ИзменитьОформлениеКнопокНаСервере(СтруктураСТекущимиДаннымиРеквизитов,
		Параметр.ИмяКнопки,
		Параметр.ИдентификаторСтроки,
		СтруктураДанныхОбъекта,
		СтруктураСДаннымиФормыДляОформленияКнопок);
		
	Если Результат.Успешно Тогда
		ЭтотОбъект.АдресДереваСоответствийИтаблицыКнопок = Результат.НовыйАдресВХранилище;	
		МассивОформления = Результат.МассивОформления;
		ОбменСГИСЭПДКлиентСервер.ОформлениеКнопокНаФорме(ЭтотОбъект,
			СтруктураСТекущимиДаннымиРеквизитов, МассивОформления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзменитьОформлениеКнопокНаСервере(Знач СтруктураСТекущимиДаннымиРеквизитов,
	ИмяКнопки = Неопределено,
	ИдентификаторСтроки = Неопределено,
	Знач СтруктураДанныхОбъекта,
	Знач СтруктураСДаннымиФормыДляОформленияКнопок)
	
	НовыйАдресВХранилище = ОбменСГИСЭПД.ЗапуститьИзменениеОформленияКнопок(СтруктураСДаннымиФормыДляОформленияКнопок,
		СтруктураСТекущимиДаннымиРеквизитов, ИмяКнопки, ИдентификаторСтроки, СтруктураДанныхОбъекта);

	Результат = ОбменСГИСЭПД.ОбработатьРезультатИзмененияОформленияКнопок(НовыйАдресВХранилище);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(Параметр)
	
	СтруктураСТекущимиДаннымиРеквизитов = ОбменСГИСЭПДКлиентСервер.ПолучитьСтруктуруПоТитулуИВерсии(ЭтотОбъект);
	ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(СтруктураСТекущимиДаннымиРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьОбязательныеНеЗаполненныеЭлементыФормыНаСервере(Знач СтруктураСТекущимиДанными)
	
	ОбменСГИСЭПД.ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(ЭтотОбъект, СтруктураСТекущимиДанными);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтметитьОбязательныеНеЗаполненныеЭлементыФормы" Тогда
		Если УникальныйИдентификатор <> Параметр Тогда
			Возврат;
		КонецЕсли;
		ОтметитьОбязательныеНеЗаполненныеЭлементыФормы(Параметр);
	ИначеЕсли ИмяСобытия = "ИзменитьОформлениеКнопокФормы" Тогда
		Если УникальныйИдентификатор <> Параметр.УникальныйИдентификаторОбновляемойФормы Тогда
			Возврат;
		КонецЕсли;
		ИзменитьОформлениеКнопок(Параметр);	
	ИначеЕсли СтрНачинаетсяС(ИмяСобытия, "Запись_") И Источник <> Неопределено Тогда
		Если Источник = Объект.СсылкаТитулОформлениеОформитель Тогда
			СсылкаТитулОформлениеОформительПриИзменении(Элементы.СсылкаТитулОформлениеОформитель);
		ИначеЕсли Источник = ХранимыеДанныеТитулОформлениеТранспортноеСредство Тогда
			ХранимыеДанныеТитулОформлениеТранспортноеСредствоПриИзменении(Элементы.ХранимыеДанныеТитулОформлениеТранспортноеСредство);
		ИначеЕсли Источник = ХранимыеДанныеТитулМедосмотрВодитель Тогда
			ХранимыеДанныеТитулМедосмотрВодительПриИзменении(Элементы.ХранимыеДанныеТитулМедосмотрВодитель);
		ИначеЕсли Источник = ХранимыеДанныеТитулМедосмотрШтатныйМедработник Тогда
			ХранимыеДанныеТитулМедосмотрШтатныйМедработникПриИзменении(Элементы.ХранимыеДанныеТитулМедосмотрШтатныйМедработник);
		ИначеЕсли Источник = ХранимыеДанныеТитулМедосмотрСтороннийМедработник Тогда
			ХранимыеДанныеТитулМедосмотрСтороннийМедработникПриИзменении(Элементы.ХранимыеДанныеТитулМедосмотрСтороннийМедработник);
		ИначеЕсли Источник = ХранимыеДанныеТитулВыпускТранспортноеСредство Тогда
			ХранимыеДанныеТитулВыпускТранспортноеСредствоПриИзменении(Элементы.ХранимыеДанныеТитулВыпускТранспортноеСредство);
		ИначеЕсли Источник = ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТС Тогда
			ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТСПриИзменении(Элементы.ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТС);
		ИначеЕсли Источник = ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанных Тогда
			ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанныхПриИзменении(Элементы.ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанных);
		ИначеЕсли Источник = ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанных Тогда
			ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанныхПриИзменении(Элементы.ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанных);
		ИначеЕсли Источник = ХранимыеДанныеТитулМедосмотрПослеВодитель Тогда
			ХранимыеДанныеТитулМедосмотрПослеВодительПриИзменении(Элементы.ХранимыеДанныеТитулМедосмотрПослеВодитель);
		ИначеЕсли Источник = ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник Тогда
			ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработникПриИзменении(Элементы.ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник);
		ИначеЕсли Источник = ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник Тогда
			ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработникПриИзменении(Элементы.ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник);
		КонецЕсли;
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД
	ОбменСГИСЭПДКлиент.ОбработкаОповещенияМП(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД
	
КонецПроцедуры

#КонецОбласти


&НаКлиенте
Процедура ТитулОформлениеДатаПутевогоЛистаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеПризнакНачалаРейсаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
	УстановитьТекущийШагПомощника();
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеОбязательностьМедОсмотраПослеПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	УстановитьТекущийШагПомощника();
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеСведенияОВидеПеревозкиПриИзменении(Элемент)
	
	Если ТитулОформлениеСведенияОВидеПеревозки <> "КП" Тогда
		ТитулОформлениеВидКоммерческойПеревозки = Неопределено;
		ПриИзмененииДанныхНаФорме("ТитулОформлениеВидКоммерческойПеревозки");
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеВидКоммерческойПеревозкиПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	Если ТитулОформлениеВидКоммерческойПеревозки <> "ПГ" Тогда
		НужноОбновитьНавигацию = Объект.ТитулОформлениеОбязательностьМедОсмотраПосле <> "1";
		Объект.ТитулОформлениеОбязательностьМедОсмотраПосле = "1";
		ПриИзмененииДанныхНаФорме("ТитулОформлениеОбязательностьМедОсмотраПосле");
		Если НужноОбновитьНавигацию Тогда
			УстановитьТекущийШагПомощника();
		КонецЕсли;
	КонецЕсли;
	Элементы.ТитулОформлениеОбязательностьМедОсмотраПосле.Доступность = ТитулОформлениеВидКоммерческойПеревозки = "ПГ";
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеВидСообщенияПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеОформительСтатусПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеПризнакФормированияПутевогоЛистаНаОдинДеньПриИзменении(Элемент)
	
	Если ТитулОформлениеПризнакФормированияПутевогоЛистаНаОдинДень = "1" Тогда
		ТитулОформлениеДатаНачалаСрокаИспользованияПутевогоЛиста = Неопределено;
		ПриИзмененииДанныхНаФорме("ТитулОформлениеДатаНачалаСрокаИспользованияПутевогоЛиста");
		ТитулОформлениеДатаОкончанияСрокаИспользованияПутевогоЛиста = Неопределено;
		ПриИзмененииДанныхНаФорме("ТитулОформлениеДатаОкончанияСрокаИспользованияПутевогоЛиста");
	ИначеЕсли ТитулОформлениеПризнакФормированияПутевогоЛистаНаОдинДень = "2" Тогда
		ТитулОформлениеДатаВТечениеКоторойПутевойЛистМожетБытьИспользован = Неопределено;
		ПриИзмененииДанныхНаФорме("ТитулОформлениеДатаВТечениеКоторойПутевойЛистМожетБытьИспользован");
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеДатаВТечениеКоторойПутевойЛистМожетБытьИспользованПриИзменении(Элемент)
	
	Если ТитулОформлениеДатаВТечениеКоторойПутевойЛистМожетБытьИспользован < НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса()) Тогда
		ТитулОформлениеДатаВТечениеКоторойПутевойЛистМожетБытьИспользован = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
		ПоказатьПредупреждение(, НСтр("ru='Дата действия путевого листа не может быть меньше текущей даты'"));
		Возврат;
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеДатаНачалаСрокаИспользованияПутевогоЛистаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулОформлениеДатаОкончанияСрокаИспользованияПутевогоЛистаПриИзменении(Элемент)
	
	Если ТитулОформлениеДатаОкончанияСрокаИспользованияПутевогоЛиста < НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса()) Тогда
		ТитулОформлениеДатаОкончанияСрокаИспользованияПутевогоЛиста = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
		ПоказатьПредупреждение(, НСтр("ru='Дата действия путевого листа не может быть меньше текущей даты'"));
		Возврат;
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулМедосмотрВидМедосмотраПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулМедосмотрВариантМедработникПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулВыпускРезультатПроведенияПредсменногоКонтроляПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулВыпускДатаИВремяПредрейсовогоКонтроляПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулВыпускДатаИВремяВыпускаНаЛиниюПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулВыездПризнакНачалаРейсаПриИзменении(Элемент)
	
	КонтейнерОтображаемойВерсии = Неопределено;
	Если ТитулВыездПризнакНачалаРейса = "1" Тогда
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулВыездДатаИВремяВыезда", 
			ОбщегоНазначенияКлиент.ДатаСеанса(), 
			Ложь, КонтейнерОтображаемойВерсии);
	ИначеЕсли ТитулВыездПризнакНачалаРейса = "2" Тогда
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулВыездДатаИВремяПриема", 
			ОбщегоНазначенияКлиент.ДатаСеанса(), 
			Ложь, КонтейнерОтображаемойВерсии);
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулВыездДатаИВремяВыездаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулВыездПоказанияОдометраПриВыездеПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулВыездДатаИВремяПриемаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулВыездПоказанияОдометраПриПриемеПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулЗаездПризнакОкончанияРейсаПриИзменении(Элемент)
	
	КонтейнерОтображаемойВерсии = Неопределено;
	Если Объект.ТитулЗаездПризнакОкончанияРейса = "1"
		И ЗначениеЗаполнено(ТитулЗаездДатаИВремяЗаезда) = Ложь Тогда
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулЗаездДатаИВремяЗаезда", 
			ОбщегоНазначенияКлиент.ДатаСеанса(), 
			Ложь, КонтейнерОтображаемойВерсии);
	ИначеЕсли Объект.ТитулЗаездПризнакОкончанияРейса = "2" 
		И ЗначениеЗаполнено(ТитулЗаездДатаИВремяСдачи) = Ложь Тогда
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
			"ТитулЗаездДатаИВремяСдачи", 
			ОбщегоНазначенияКлиент.ДатаСеанса(), 
			Ложь, КонтейнерОтображаемойВерсии);
	КонецЕсли;
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулЗаездДатаИВремяЗаездаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулЗаездПоказанияОдометраПриЗаездеПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулЗаездДатаИВремяСдачиПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулЗаездПоказанияОдометраПриСдачеПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулМедосмотрВариантМедработникПослеПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулМедосмотрПослеВидМедосмотраПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулМедосмотрДатаИВремяПроведенияПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулМедосмотрПослеДатаИВремяПроведенияПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры



&НаКлиенте
Процедура ВариантМедосмотрПриИзменении(Элемент)
	
	Объект.ИдентификаторМедорганизации = Неопределено;
	Если ВариантМедосмотр = 0 Тогда
		Объект.СсылкаТитулОформлениеМедорганизация = Неопределено;
		ПриИзмененииДанныхНаФорме("СсылкаТитулОформлениеМедорганизация");
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ВариантТехконтрольПриИзменении(Элемент)
	
	Объект.ИдентификаторТехконтроль = Неопределено;
	Если ВариантТехконтроль = 0 Тогда
		Объект.СсылкаТитулОформлениеТехконтроль = Неопределено;
		ПриИзмененииДанныхНаФорме("СсылкаТитулОформлениеТехконтроль");
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПоказанияОдометраПриИзменении(Элемент)
	
	Объект.ИдентификаторПоказанияОдометра = Неопределено;
	Если ВариантПоказанияОдометра = 0 Тогда
		Объект.СсылкаТитулОформлениеПоказанияОдометра = Неопределено;
		ПриИзмененииДанныхНаФорме("СсылкаТитулОформлениеПоказанияОдометра");
	КонецЕсли;
	
	ОбменСГИСЭПДКлиентСервер.ИзменитьОформлениеФормы(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры



&НаКлиенте
Процедура ТитулОформлениеПредыдущийПутевойЛистПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СсылкаПредыдущийПутевойЛист)
		И Объект.СсылкаПредыдущийПутевойЛист = Объект.Ссылка Тогда
		Объект.СсылкаПредыдущийПутевойЛист = Неопределено;
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
													"ТитулОформлениеУИДМинтрансПредыдущегоЭПЛ");
		ПоказатьПредупреждение(, НСтр("ru='Предыдущий путевой лист не может совпадать с текущим'"));
		Возврат;	
	КонецЕсли;
	
	ПриИзмененииПредыдущегоПутевогоЛиста();

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПредыдущегоПутевогоЛиста()
	
	РеквизитыПЛ = ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(Объект.СсылкаПредыдущийПутевойЛист, "УИДМинтранс, ТитулЗаездПризнакОкончанияРейса");
	
	Если РеквизитыПЛ.ТитулЗаездПризнакОкончанияРейса <> "2" Тогда
		Объект.СсылкаПредыдущийПутевойЛист = Неопределено;
		ПоказатьПредупреждение(, НСтр("ru='В предыдущем путевом листе должен быть признак ""Сдача транспортного средства"" в титуле Т5 ""Заезд""'"));
		Возврат;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыПЛ.УИДМинтранс) Тогда
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
													"ТитулОформлениеУИДМинтрансПредыдущегоЭПЛ", РеквизитыПЛ.УИДМинтранс);	
	Иначе
		Объект.СсылкаПредыдущийПутевойЛист = Неопределено;
		ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
													"ТитулОформлениеУИДМинтрансПредыдущегоЭПЛ");
		ПоказатьПредупреждение(, НСтр("ru='Выбранный путевой лист не зарегистрирован в ГИС ЭПД, выберите другой'"));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулОформлениеПредыдущийПутевойЛистНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	Отбор = Новый Структура;
	Отбор.Вставить("ТитулЗаездПризнакОкончанияРейса", "2");
	ПараметрыФормы.Вставить("Отбор", Отбор); 

	СсылкаТитулОформлениеПредыдущийПутевойЛист_Выбор = Новый ОписаниеОповещения("СсылкаТитулОформлениеПредыдущийПутевойЛист_Выбор", ЭтотОбъект);
	
	ОткрытьФорму("Документ.ЭлектронныйПутевойЛист.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , 
		СсылкаТитулОформлениеПредыдущийПутевойЛист_Выбор);
		
КонецПроцедуры

&НаКлиенте
Процедура СсылкаТитулОформлениеПредыдущийПутевойЛист_Выбор(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.СсылкаПредыдущийПутевойЛист = Результат;
		ПриИзмененииПредыдущегоПутевогоЛиста();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьQR(Команда)
	
	Если ЗначениеЗаполнено(Объект.ТитулВыездИдентификаторФайла) = Ложь Тогда
		ПоказатьПредупреждение(, НСтр("ru='Для формирования QR-кода требуется оформить титул внесения показаний одометра при выезде.'"));
	Иначе
		Отправитель = Объект.ИдентификаторОформителя;
		ПараметрыФормы = Новый Структура;	
		ПараметрыФормы.Вставить("УИДМинтранс", Объект.УИДМинтранс);
		ПараметрыФормы.Вставить("Отправитель", Отправитель);
		ПараметрыФормы.Вставить("НомерДокумента", Объект.ТитулОформлениеНомерПутевогоЛиста);
		ПараметрыФормы.Вставить("ДатаДокумента", Объект.ТитулОформлениеДатаПутевогоЛиста); 
		ПараметрыФормы.Вставить("ТипДокумента", ПредопределенноеЗначение("Перечисление.ТипыДокументовЭДО.ЭПЛ"));
		
		МассивВодителей = ОбменСГИСЭПДКлиентСервер.МассивЗначенийПоСтрокамТаблицыИзСтруктурыФормы(ЭтотОбъект, 
							"ТитулОформлениеВодители", "ХранимыеДанныеВодитель");
							
		ПараметрыФормы.Вставить("Получатели", ОбменСГИСЭПДВызовСервера.ПолучитьПочтуВодителей(МассивВодителей));
		
		ОткрытьФорму("ОбщаяФорма.ОтправкаQR", 
						ПараметрыФормы, 
						ЭтотОбъект, 
						УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьМедосмотрПосле(Команда)
	
	ВводимМедосмотрПосле = Истина;
	
	Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6");
	
	НомерШага = 6;
	Если ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 1) = Ложь
		И ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 8) = Ложь Тогда
		НомерШага = НомерШага - 1;
	КонецЕсли;		
	Если Объект.ТитулОформлениеПризнакНачалаРейса = "2"
		Или ОбменСГИСЭПДКлиентСервер.ВхождениеРоли(Объект.РольУчастника, 4) = Ложь Тогда  
		НомерШага = НомерШага - 1;
	КонецЕсли;		
	УстановитьВидимостьСтраницыТитулМедосмотрПосле("Шаг" + Строка(НомерШага));
	
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭПЛ(ЭтотОбъект);
	ЗаполнитьЗначенияПоУмолчаниюДляТекущегоТитула();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменаВводаДопТитула(Команда)
	
	Объект.ТекущийТитул = Неопределено;
	ВводимМедосмотрПосле = Ложь;
	ОбменСГИСЭПДКлиентСервер.УстановитьДоступностьЭлементовЭПЛ(ЭтотОбъект);
	УстановитьТекущийШагПомощника();
	
КонецПроцедуры
