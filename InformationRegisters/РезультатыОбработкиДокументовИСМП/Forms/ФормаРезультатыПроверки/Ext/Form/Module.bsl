
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокТиповДокументов();
	ЗаполнитьСписокСостоянияОтправки();
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("Организации") И ЗначениеЗаполнено(Параметры.Организации) Тогда
		Организации.ЗагрузитьЗначения(ЗначениеВМассив(Параметры.Организации));
	КонецЕсли;
	Если Параметры.Свойство("ТипДокумента") И ЗначениеЗаполнено(Параметры.ТипДокумента) Тогда
		ТипыДокументов.ЗагрузитьЗначения(ЗначениеВМассив(Параметры.ТипДокумента));
	КонецЕсли;
	Если Параметры.Свойство("СтатусОтправки") И ЗначениеЗаполнено(Параметры.СтатусОтправки) Тогда
		СтатусОтправки.ЗагрузитьЗначения(ЗначениеВМассив(Параметры.СтатусОтправки));
	КонецЕсли;
	
	Если Параметры.Свойство("ФлагОшибки") И ТипЗнч(Параметры.ФлагОшибки) = Тип("Булево") Тогда
		ФлагОшибки = Параметры.ФлагОшибки;
	КонецЕсли;
	
	ИнтеграцияИСКлиентСервер.НастроитьОтборПоОрганизации(ЭтотОбъект, Организации, "Отбор");
	
	УстановитьОтборПоОрганизации(ЭтотОбъект);
	УстановитьОтборПоТипуДокумента(ЭтотОбъект);
	УстановитьОтборПоСостояниюОтправки(ЭтотОбъект);
	УстановитьОтборПоДокументамСОшибки(ЭтотОбъект);
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТекстКомандыОтключитьПроверку();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область Отбор

#Область ОтборПоОрганизации

&НаКлиенте
Процедура ОтборОрганизацииПриИзменении(Элемент)
	
	ИнтеграцияИСМПКлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Организации, Истина, "Отбор");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтеграцияИСМПКлиент.ОткрытьФормуВыбораОрганизаций(ЭтотОбъект, "Отбор");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтеграцияИСМПКлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Неопределено, Истина, "Отбор");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтеграцияИСМПКлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, ВыбранноеЗначение, Истина, "Отбор");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ИнтеграцияИСМПКлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Организация, Истина, "Отбор");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтеграцияИСМПКлиент.ОткрытьФормуВыбораОрганизаций(ЭтотОбъект, "Отбор");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтеграцияИСМПКлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Неопределено, Истина, "Отбор");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗаданияИС()

	СоответствиеТребованиямГИСМТКлиент.ПроверитьВыполнениеЗадания(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтеграцияИСМПКлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, ВыбранноеЗначение, Истина, "Отбор");
	
КонецПроцедуры

#КонецОбласти

#Область ОтборПоСостояниюОтправки

&НаКлиенте
Процедура ОтборСостояниеОтправкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораПоСостояниюОтправки();
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеОтправкиГИСМТОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПослеВыбораСостоянияОтправки(Новый Массив, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеОтправкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПослеВыбораСостоянияОтправки(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбранноеЗначение), Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОтборПоТипуДокумента

&НаКлиенте
Процедура ОтборТипыДокументовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораПоТипуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипыДокументовОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПослеВыбораТипаДокумента(Новый Массив, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипыДокументовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПослеВыбораТипаДокумента(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбранноеЗначение), Неопределено);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтборФлагОшибкиПриИзменении(Элемент)
	УстановитьОтборПоДокументамСОшибки(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ТекстКомандыОтключитьПроверку();
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Документ);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Проверить(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("Документ",                              ТекущиеДанные.Документ);
	ПараметрыПроверки.Вставить("Форма",                                 ЭтотОбъект);
	ПараметрыПроверки.Вставить("ДополнитьРезультатДаннымиКомандыФормы", Ложь);
	ПараметрыПроверки.Вставить("ПроверкаИзФормыСписка",                 Истина);
	ПараметрыПроверки.Вставить("ЭтоФоноваяПроверкаДокумента",           Ложь);
	
	СоответствиеТребованиямГИСМТКлиент.ПроверитьДокументНаСоответствиеТребованиямГИСМТ(ПараметрыПроверки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПроверку(Команда)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	МассивДляИзменения = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		ТекущиеДанные = Элементы.Список.ДанныеСтроки(ВыделеннаяСтрока);
		Если ТекущиеДанные = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыИзменения = Новый Структура;
		ПараметрыИзменения.Вставить("Документ",            ТекущиеДанные.Документ);
		ПараметрыИзменения.Вставить("ПроверкаОтключена",   Не ТекущиеДанные.ПроверкаОтключена);
		ПараметрыИзменения.Вставить("ИдентификаторЗаписи", ТекущиеДанные.ИдентификаторЗаписи);
		
		МассивДляИзменения.Добавить(ПараметрыИзменения);
		
	КонецЦикла;
	
	СоответствиеТребованиямГИСМТВызовСервера.ОтключитьПроверку(МассивДляИзменения);
	
	Элементы.Список.Обновить();
	
	ТекстКомандыОтключитьПроверку();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ТекстКомандыОтключитьПроверку()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СписокОтключитьПроверку.Заголовок =  СоответствиеТребованиямГИСМТКлиентСервер.ЗаголовокКомандыПроверкаОтключена(
		ТекущиеДанные.ПроверкаОтключена);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СписокСтатусов = Новый СписокЗначений;
	СписокСтатусов.Добавить(Перечисления.СтатусыОбработкиДокументовИСМП.ЗавершеноСОшибкой);
	СписокСтатусов.Добавить(Перечисления.СтатусыОбработкиДокументовИСМП.ЗавершеноСОшибкойТаймаута);

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокСостояние.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Статус");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокСтатусов;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПроверкаОтключена");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаТребуетВниманияГосИС);

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПроверкаОтключена");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокТиповДокументов()
	
	ВсеЗначения = Элементы.ОтборТипыДокументов.СписокВыбора;
	
	ВсеЗначения.Очистить();
	
	Для Каждого Значение Из Перечисления.ТипыДокументовГИСМТ Цикл
		ВсеЗначения.Добавить(Значение);
	КонецЦикла;
	
	ВсеЗначения.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСостоянияОтправки()
	
	ВсеЗначения = Элементы.ОтборСтатусОтправки.СписокВыбора;
	
	ВсеЗначения.Очистить();
	
	Для Каждого Значение Из Перечисления.СтатусОтправкиГИСМТ Цикл
		ВсеЗначения.Добавить(Значение);
	КонецЦикла;
	
	ВсеЗначения.СортироватьПоПредставлению();
	
КонецПроцедуры

#Область Отбор

&НаКлиенте
Процедура ОткрытьФормуВыбораПоТипуДокумента()
	
	ТекстЗаголовка     = НСтр("ru = 'Выбор типа документа'");
	ВсеЗначения        = Элементы.ОтборТипыДокументов.СписокВыбора;
	ВыбранныеЗначения  = ТипыДокументов.ВыгрузитьЗначения();
	ОписаниеЗавершения = Новый ОписаниеОповещения("ПослеВыбораТипаДокумента", ЭтотОбъект);
	
	ОткрытьФормуВыбораЗначения(ВыбранныеЗначения, ВсеЗначения, ОписаниеЗавершения, ТекстЗаголовка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораТипаДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	ВсеЗначения = Элементы.ОтборТипыДокументов.СписокВыбора;
	
	ТипыДокументов.Очистить();
	ТипыДокументовПредставление = "";
	
	Если Результат.Количество() > 0 И Результат.Количество() < ВсеЗначения.Количество() Тогда
		ТипыДокументов.ЗагрузитьЗначения(Результат);
		СтрокаРазделитель = ";" + " ";
		ТипыДокументовПредставление = СтрСоединить(Результат, СтрокаРазделитель);
	КонецЕсли;
	
	УстановитьОтборПоТипуДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораПоСостояниюОтправки()
	
	ТекстЗаголовка     = НСтр("ru = 'Выбор состояния отправки ГИС МТ'");
	ВсеЗначения        = Элементы.ОтборСтатусОтправки.СписокВыбора;
	ВыбранныеЗначения  = СтатусОтправки.ВыгрузитьЗначения();
	ОписаниеЗавершения = Новый ОписаниеОповещения("ПослеВыбораСостоянияОтправки", ЭтотОбъект);
	
	ОткрытьФормуВыбораЗначения(ВыбранныеЗначения, ВсеЗначения, ОписаниеЗавершения, ТекстЗаголовка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСостоянияОтправки(Результат, ДополнительныеПараметры) Экспорт
	
	ВсеЗначения = Элементы.ОтборСтатусОтправки.СписокВыбора;
	
	СтатусОтправки.Очистить();
	СтатусОтправкиПредставление = "";
	
	Если Результат.Количество() > 0 И Результат.Количество() < ВсеЗначения.Количество() Тогда
		СтатусОтправки.ЗагрузитьЗначения(Результат);
		СтрокаРазделитель = ";" + " ";
		СтатусОтправкиПредставление = СтрСоединить(Результат, СтрокаРазделитель);
	КонецЕсли;
	
	УстановитьОтборПоСостояниюОтправки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораЗначения(ВыбранныеЗначения, ВсеЗначения, ОписаниеЗавершения, ТекстЗаголовка)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ВыбранныеЗначения", ВыбранныеЗначения);
	ПараметрыОткрытияФормы.Вставить("ВсеЗначения",       ВсеЗначения);
	ПараметрыОткрытияФормы.Вставить("Заголовок",         ТекстЗаголовка);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОписаниеЗавершения", ОписаниеЗавершения);
	
	ОткрытьФорму(
		"РегистрСведений.РезультатыОбработкиДокументовИСМП.Форма.ФормаВыбораЗначенияИзСписка",
		ПараметрыОткрытияФормы,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ПослеЗавершенияВыбораЗначения", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗавершенияВыбораЗначения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеЗавершения = ДополнительныеПараметры.ОписаниеЗавершения;
	СписокЗначений     = Результат.Значения;
	
	ВыполнитьОбработкуОповещения(ОписаниеЗавершения, СписокЗначений);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоОрганизации(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "Организация",
		Форма.Организации, ВидСравненияКомпоновкиДанных.ВСписке,, ЗначениеЗаполнено(Форма.Организации));
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоТипуДокумента(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "ТипДокумента",
		Форма.ТипыДокументов, ВидСравненияКомпоновкиДанных.ВСписке,, ЗначениеЗаполнено(Форма.ТипыДокументов));
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоСостояниюОтправки(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "СтатусОтправки",
		Форма.СтатусОтправки, ВидСравненияКомпоновкиДанных.ВСписке,, ЗначениеЗаполнено(Форма.СтатусОтправки));
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоДокументамСОшибки(Форма)
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыОбработкиДокументовИСМП.ЗавершеноСОшибкой"));
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыОбработкиДокументовИСМП.ЗавершеноСОшибкойТаймаута"));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "Статус",
		МассивСтатусов, ВидСравненияКомпоновкиДанных.ВСписке,, Форма.ФлагОшибки);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "ПроверкаОтключена",
		Ложь, ВидСравненияКомпоновкиДанных.Равно,, Форма.ФлагОшибки);
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеВМассив(Значение)
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		Возврат Значение;
	ИначеЕсли ТипЗнч(Значение) = Тип("СписокЗначений") Тогда
		Возврат Значение.ВыгрузитьЗначения();
	КонецЕсли;
	Возврат ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Значение);
КонецФункции

#КонецОбласти
