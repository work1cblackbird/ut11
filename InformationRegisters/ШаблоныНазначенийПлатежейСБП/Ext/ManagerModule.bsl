///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Получает данные шаблонов из настройки подключения СБП.
//
// Параметры:
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей - настройка подключения к СБП.
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    оплату в информационной базе.
//  СценарийСБП - Строка - идентификатор сценария СБП.
//
// Возвращаемое значение:
//  ТаблицаЗначений - см. СистемаБыстрыхПлатежейСлужебный.НовыйШаблоныНазначений.
//
Функция ШаблоныНазначенийДокументаОперации(
		НастройкаПодключения,
		ДокументОперации,
		СценарийСБП) Экспорт
	
	ОбъектМетаданных = ДокументОперации.Метаданные().Имя;
	ШаблоныНазначений = СистемаБыстрыхПлатежейСлужебный.НовыйШаблоныНазначений();
	ШаблоныНазначений.Колонки.Добавить("НазначениеПлатежа", ОбщегоНазначения.ОписаниеТипаСтрока(140));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныНазначенийПлатежейСБП.ОбъектМетаданных КАК ОбъектМетаданных,
		|	ШаблоныНазначенийПлатежейСБП.Идентификатор КАК Идентификатор,
		|	ШаблоныНазначенийПлатежейСБП.НазначениеПлатежа КАК НазначениеПлатежа,
		|	ШаблоныНазначенийПлатежейСБП.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.ШаблоныНазначенийПлатежейСБП КАК ШаблоныНазначенийПлатежейСБП
		|ГДЕ
		|	ШаблоныНазначенийПлатежейСБП.НастройкаПодключения = &НастройкаПодключения
		|	И ШаблоныНазначенийПлатежейСБП.ОбъектМетаданных = &ОбъектМетаданных
		|	И ШаблоныНазначенийПлатежейСБП.СценарийСБП = &СценарийСБП";
	
	Запрос.УстановитьПараметр("ОбъектМетаданных", ОбъектМетаданных);
	Запрос.УстановитьПараметр("НастройкаПодключения", НастройкаПодключения);
	Запрос.УстановитьПараметр("СценарийСБП", СценарийСБП);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ШаблоныНазначений;
	КонецЕсли;
	
	Настройки = СистемаБыстрыхПлатежейСлужебный.НастройкиПодключенияПрограммы();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Для Каждого Настройка Из Настройки.c2b.ШаблоныНазначений Цикл
		Если Настройка.ОбъектМетаданных = ОбъектМетаданных Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("Идентификатор", Настройка.Идентификатор);
			Если ВыборкаДетальныеЗаписи.НайтиСледующий(Отбор) Тогда
				НовыйШаблон = ШаблоныНазначений.Добавить();
				ЗаполнитьЗначенияСвойств(
					НовыйШаблон,
					ВыборкаДетальныеЗаписи,
					"ОбъектМетаданных, Идентификатор, НазначениеПлатежа, Наименование");
				НовыйШаблон.Параметры = Настройка.Параметры;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ШаблоныНазначений;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Определяет настроенные шаблоны назначений платежей.
//
// Параметры:
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей - настройка подключения к СБП.
//
// Возвращаемое значение:
//  Соответствие - настроенные шаблоны:
//    * Значение - Строка - настроенное назначение платежа.
//    * Ключ - Строка - идентификатор шаблона.
//
Функция ШаблоныНазначенийПлатежей(НастройкаПодключения) Экспорт
	
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныНазначенийПлатежейСБП.Идентификатор КАК Идентификатор,
		|	ШаблоныНазначенийПлатежейСБП.НазначениеПлатежа КАК НазначениеПлатежа
		|ИЗ
		|	РегистрСведений.ШаблоныНазначенийПлатежейСБП КАК ШаблоныНазначенийПлатежейСБП
		|ГДЕ
		|	ШаблоныНазначенийПлатежейСБП.НастройкаПодключения = &НастройкаПодключения";
	
	Запрос.УстановитьПараметр("НастройкаПодключения", НастройкаПодключения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Результат.Вставить(
			ВыборкаДетальныеЗаписи.Идентификатор,
			ВыборкаДетальныеЗаписи.НазначениеПлатежа);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Определяет настроенные шаблоны назначений платежей.
//
// Параметры:
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей - настройка подключения к СБП.
//  ШаблоныНазначений - ТаблицаЗначений - настройки шаблонов.
//
Процедура ОбновитьШаблоныНазначений(НастройкаПодключения, ШаблоныНазначений) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ШаблоныНазначенийПлатежейСБП");
		ЭлементБлокировки.УстановитьЗначение("НастройкаПодключения", НастройкаПодключения);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		Для Каждого ДанныеШаблона Из ШаблоныНазначений Цикл
			
			НовыйШаблон = РегистрыСведений.ШаблоныНазначенийПлатежейСБП.СоздатьМенеджерЗаписи();
			НовыйШаблон.СценарийСБП = СистемаБыстрыхПлатежейСлужебный.ИдентификаторСценарияСБПc2b();
			НовыйШаблон.НастройкаПодключения = НастройкаПодключения;
			НовыйШаблон.Идентификатор = ДанныеШаблона.Идентификатор;
			НовыйШаблон.Прочитать();
			
			Если ЗначениеЗаполнено(ДанныеШаблона.НазначениеПлатежа) Тогда
				НовыйШаблон.СценарийСБП = СистемаБыстрыхПлатежейСлужебный.ИдентификаторСценарияСБПc2b();
				НовыйШаблон.НастройкаПодключения = НастройкаПодключения;
				ЗаполнитьЗначенияСвойств(
				НовыйШаблон,
				ДанныеШаблона,
				"ОбъектМетаданных, НазначениеПлатежа, Наименование, Идентификатор");
				НовыйШаблон.Записать();
			ИначеЕсли НовыйШаблон.Выбран() Тогда
				НовыйШаблон.Удалить();
			КонецЕсли;
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
