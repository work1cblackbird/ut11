

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьПараметрыЗагрузки();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьКурсы(Команда)
	
	Если ЗагрузитьКурсыСервер() Тогда
		Закрыть();
	КонецЕсли;
	
	Оповестить("Запись_ЗагрузкаОтносительныхКурсовВалют");
	
	Текст = НСтр("ru = 'Загрузка относительных курсов выполнена'");
	ПоказатьОповещениеПользователя(Текст, , , БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение)	
	
	ШаблонТекста = НСтр("ru='Строка №%1 колонка ""%2"" - ошибка преобразования значения ""%3""
						|Строка не загружена'");
	Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	ОбщегоНазначения.СообщитьПользователю(Текст);
	
КонецПроцедуры

&НаСервере
Функция ТекстВДату(Знач СтроковоеЗначение, НомерСтроки, ИмяКолонки)
	
	Результат = Неопределено;
	
	ЛокальнаяДата = Формат(Дата('29991211'), "ДЛФ=D");
	ДлинаСтроки = СтрДлина(ЛокальнаяДата);
	
	Сч = 1;
	Пока Сч <= ДлинаСтроки Цикл
		ТекСимвол = Сред(ЛокальнаяДата, Сч, 1);
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ТекСимвол) Тогда
			Сч = Сч + 1;
		Иначе
			РазделительДробнойЧасти = ТекСимвол;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		Цифры = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЛокальнаяДата, РазделительДробнойЧасти);
		ИндексЧисло = Цифры.Найти("11");
		ИндексМесяц = Цифры.Найти("12");
		ИндексГод = Цифры.Найти("2999");
		
		Цифры = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтроковоеЗначение, РазделительДробнойЧасти);
		Результат = ?(СтрДлина(Цифры[ИндексГод]) = 2, "20" + Цифры[2], Цифры[2]) 
					+ Формат(Число(Цифры[ИндексМесяц]), "ЧЦ=2; ЧВН=;") 
					+ Формат(Число(Цифры[ИндексЧисло]), "ЧЦ=2; ЧВН=;");
		Результат = Дата(Результат);
	Исключение
		СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТекстВВалюту(Знач СтроковоеЗначение, НомерСтроки, ИмяКолонки)
	
	Результат = Справочники.Валюты.НайтиПоНаименованию(СокрЛП(СтроковоеЗначение), Истина);
	
	Если Не ЗначениеЗаполнено(Результат) Тогда 
	    СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТекстВЧисло(СтроковоеЗначение, НомерСтроки, ИмяКолонки)
	
	Если ПустаяСтрока(СтроковоеЗначение) ИЛИ СтроковоеЗначение = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	Результат = 0;
	
	Попытка
		Результат = Число(СтрЗаменить(СтроковоеЗначение," ",""));
	Исключение
		СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЗагрузитьКурсыСервер()
	
	НомерСтроки = 2;
	СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
	ПоляЗагрузки = ПараметрыЗагрузки.Поля;
	ИменаПолейНаЯзыках = ПараметрыЗагрузки.ИменаПолейНаЯзыках;
	ЗаполненаДата = ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + ПоляЗагрузки.Период).Текст);
	ЗагруженоБезОшибок = Истина;
	
	Пока ЗаполненаДата Цикл
		
		ДанныеСтроки = Неопределено;
		
		Попытка
			
			ДанныеСтроки = Новый Структура;
			
			Для Каждого Поле Из ПоляЗагрузки Цикл
				
				ТекстЗначения = ТабличныйДокумент.Область("R" + СтроковыйНомер + Поле.Значение).Текст;
				Если Поле.Ключ = "Период" Тогда
					ЗначениеПоля = ТекстВДату(ТекстЗначения, СтроковыйНомер, ИменаПолейНаЯзыках[Поле.Ключ]);
				ИначеЕсли Поле.Ключ = "Валюта" Или Поле.Ключ = "БазоваяВалюта" Тогда
					ЗначениеПоля = ТекстВВалюту(ТекстЗначения, СтроковыйНомер, ИменаПолейНаЯзыках[Поле.Ключ]);
				Иначе
					ЗначениеПоля = ТекстВЧисло(ТекстЗначения, СтроковыйНомер, ИменаПолейНаЯзыках[Поле.Ключ]);
				КонецЕсли;
				ДанныеСтроки.Вставить(Поле.Ключ,ЗначениеПоля);
				
			КонецЦикла;
			
		Исключение
			ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗагруженоБезОшибок = Ложь;
		КонецПопытки;
		
		Если ЗначениеЗаполнено(ДанныеСтроки) Тогда
			
			// проверим все что прочитали
			ВсеПоляЗаполненыКорректно = Истина;
			
			Если Не ЗначениеЗаполнено(ДанныеСтроки.Период) Тогда
				ВсеПоляЗаполненыКорректно = Ложь;
				СообщениеОбОшибке = НСтр("ru='В строке %1 не заполнен период. Строка не загружена.'");
				ОбщегоНазначения.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, СтроковыйНомер));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДанныеСтроки.Валюта) Тогда
				ВсеПоляЗаполненыКорректно = Ложь;
				СообщениеОбОшибке = НСтр("ru='В строке %1 не заполнена валюта. Строка не загружена.'");
				ОбщегоНазначения.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, СтроковыйНомер));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДанныеСтроки.БазоваяВалюта) Тогда
				ВсеПоляЗаполненыКорректно = Ложь;
				СообщениеОбОшибке = НСтр("ru='В строке %1 не заполнена базовая валюта. Строка не загружена.'");
				ОбщегоНазначения.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, СтроковыйНомер));
			КонецЕсли;
			
			Для Каждого Поле Из ПараметрыЗагрузки.ПоляКонтроля Цикл
				
				СообщениеОбОшибке = "";
				
				Если ДанныеСтроки[Поле] < 0 Тогда
					СообщениеОбОшибке = НСтр("ru='В строке %1 в колонке %2 отрицательное значение. Строка не загружена.'");
				ИначеЕсли ДанныеСтроки[Поле] = 0 Тогда
					СообщениеОбОшибке = НСтр("ru='В строке %1 в колонке %2 значение не заполнено. Строка не загружена.'");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
					ВсеПоляЗаполненыКорректно = Ложь;
					ОбщегоНазначения.СообщитьПользователю(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, СтроковыйНомер, ИменаПолейНаЯзыках[Поле]));
					ЗагруженоБезОшибок = Ложь;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ВсеПоляЗаполненыКорректно Тогда
				Запись = РегистрыСведений.ОтносительныеКурсыВалют.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(Запись, ДанныеСтроки);
				Запись.КурсЧислитель = ДанныеСтроки.ЕдиницБазовойВалюты;
				Запись.КурсЗнаменатель = ДанныеСтроки.ЕдиницВалюты;
				Запись.Записать(Истина);
			КонецЕсли;
			
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
		
		Попытка
			ЗаполненаДата = ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + ПоляЗагрузки.Период).Текст);
		Исключение
			ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗагруженоБезОшибок = Ложь;
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат ЗагруженоБезОшибок;
		
КонецФункции

&НаСервере
Процедура ИнициализироватьПараметрыЗагрузки()
	
	ПараметрыЗагрузки = Новый Структура;
	
	ПоляЗагрузки = Новый Структура();
	ПоляЗагрузки.Вставить("Период", "C1");
	ПоляЗагрузки.Вставить("ЕдиницВалюты", "C2");
	ПоляЗагрузки.Вставить("Валюта", "C3");
	ПоляЗагрузки.Вставить("ЕдиницБазовойВалюты", "C4");
	ПоляЗагрузки.Вставить("БазоваяВалюта", "C5");
	
	ПараметрыЗагрузки.Вставить("Поля", ПоляЗагрузки);
	
	МассивПолей = Новый Массив;
	МассивПолей.Добавить("ЕдиницВалюты");
	МассивПолей.Добавить("ЕдиницБазовойВалюты");
	
	ПараметрыЗагрузки.Вставить("ПоляКонтроля", МассивПолей);
	
	ИменаПолейНаЯзыках = Новый Структура();
	ИменаПолейНаЯзыках.Вставить("Период", НСтр("ru = 'Период'"));
	ИменаПолейНаЯзыках.Вставить("ЕдиницВалюты", НСтр("ru = 'Единиц валюты'"));
	ИменаПолейНаЯзыках.Вставить("Валюта", НСтр("ru = 'Валюта'"));
	ИменаПолейНаЯзыках.Вставить("ЕдиницБазовойВалюты", НСтр("ru = 'Единиц базовой валюты'"));
	ИменаПолейНаЯзыках.Вставить("БазоваяВалюта", НСтр("ru = 'Базовая валюта'"));
	
	ПараметрыЗагрузки.Вставить("ИменаПолейНаЯзыках", ИменаПолейНаЯзыках);
	
	
	МакетШаблона = РегистрыСведений.ОтносительныеКурсыВалют.ПолучитьМакет("МакетЗагрузкиКурсов");
	ТабличныйДокумент.Очистить();
	ОбластьКолонки = МакетШаблона.ПолучитьОбласть("КурсыВалют");
	ТабличныйДокумент.Присоединить(ОбластьКолонки);
	ТабличныйДокумент.ФиксацияСверху = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

