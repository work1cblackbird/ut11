
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
    Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
        МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
        МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    КонецЕсли;
    // Конец СтандартныеПодсистемы.УправлениеДоступом
   
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отправить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Запись.ЭлектронныйДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	МассивРезультатовОбработки = НачатьПовторнуюОтправку();
	
	Если МассивРезультатовОбработки.Количество() = 0 Тогда
		ТекстВопроса = НСтр("ru = 'Выбранный электронный документ не требует регистрации события в ГИС НР'");
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Режим", "Предупреждение");
		ПараметрыФормы.Вставить("Ширина", 60);
		ПараметрыФормы.Вставить("ТекстФормы", СтроковыеФункцииКлиент.ФорматированнаяСтрока(ТекстВопроса));
		ЭлектронноеАктированиеЕИСКлиент.ОткрытьФормуИнформации(ПараметрыФормы);
		Возврат;
	КонецЕсли;
	
	РезультатОбработки = МассивРезультатовОбработки[0];
	
	Если РезультатОбработки.Ошибка Тогда
		Ошибки = СтрСоединить(РезультатОбработки.МассивОшибок, " ");
		Если ЗначениеЗаполнено(РезультатОбработки.ВидСобытия) Тогда
			Шаблон = НСтр("ru = 'По событию %1 от %2 повторная отправка не выполнена. %3'");
			ТекстСообщения = СтрШаблон(Шаблон,
				РезультатОбработки.ВидСобытия,
				Формат(РезультатОбработки.ДатаСобытия,
				"ДЛФ=D;"), Ошибки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Иначе
			Шаблон = НСтр("ru = 'Повторная отправка не выполнена. %1'");
			ТекстСообщения = СтрШаблон(Шаблон, Ошибки);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(РезультатОбработки.Документ) Тогда
			ЭлектронноеАктированиеЕИСГИСНРКлиент.ОповеститьОбОтсутствииОшибки(РезультатОбработки.Документ);
		КонецЕсли;
		Шаблон = НСтр("ru = 'По событию %1 от %2 повторная отправка выполнена успешно.'");
		ТекстСообщения = СтрШаблон(Шаблон,
			РезультатОбработки.ВидСобытия,
			Формат(РезультатОбработки.ДатаСобытия, "ДЛФ=D;"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция НачатьПовторнуюОтправку()
	
	МассивДокументов = Новый Массив;
	МассивДокументов.Добавить(Запись.ЭлектронныйДокумент);
	
	Результат = ЭлектронноеАктированиеЕИСГИСНР.ОтправитьЛогПоДаннымРегистра(МассивДокументов);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Существует = НЕ Запись.ИсходныйКлючЗаписи.Пустой();
	Элементы.ФормаОтправить.Видимость = Существует 
		И Запись.СтатусОтправкиДанных = Перечисления.СтатусыОтправкиДанныхВГИСНР.ОшибкаОтправки;
	ЭлектронноеАктированиеЕИСВызовСервера.
		СкрытьЭлементыФормыПриИспользованииОднойОрганизации(ЭтотОбъект, "Организация");
	
	ВсегоЧасов = ЭлектронноеАктированиеЕИСГИСНР.ПредставлениеОграниченияВремениОтправки();

	ТекстПодсказки = НСтр("ru = 'Отражает результат отправки события на сервер ГИС НР.'") + Символы.ПС
			+ НСтр("ru = 'Статус ""Просрочено"" означает, что в соответствии с регламентом работы
			|с ГИС НР учетной системе не удалось передать информацию о событии
			|%1 с момента его возникновения.'");
	Элементы.СтатусОтправкиДанных.РасширеннаяПодсказка.Заголовок = СтрШаблон(ТекстПодсказки, ВсегоЧасов);
	
	Если ЗначениеЗаполнено(Запись.ЧасовойПояс) И ЗначениеЗаполнено(Запись.ДатаСобытия) Тогда
		УниверсальнаяДатаСобытия = УниверсальноеВремя(Запись.ДатаСобытия, Запись.ЧасовойПояс);
	Иначе
		УниверсальнаяДатаСобытия = ТекущаяУниверсальнаяДата();
	КонецЕсли;
	РазницаДат = ТекущаяУниверсальнаяДата() - УниверсальнаяДатаСобытия;
	
	ТекстПояснения = "";
	Если Запись.СтатусОтправкиДанных = Перечисления.СтатусыОтправкиДанныхВГИСНР.Просрочено Тогда
		ТекстПояснения = НСтр("ru = 'Просрочена отправка на'") + " " + Формат(Цел(РазницаДат / 60), "ЧЦ=10; ЧГ=0")
					+ " " + НСтр("ru = 'мин'") + ".";
	ИначеЕсли Запись.СтатусОтправкиДанных = Перечисления.СтатусыОтправкиДанныхВГИСНР.ОшибкаОтправки Тогда
		ТекстПояснения = НСтр("ru = 'Проверьте доступность сервиса по адресу'") + ": "
			+ ЭлектронноеАктированиеЕИСГИСНР.СтруктураАдресаСервераГИСНР().ИмяСервера;
	КонецЕсли;
	
	Элементы.Пояснение.Видимость = НЕ ПустаяСтрока(ТекстПояснения);
	Пояснение = СтроковыеФункции.ФорматированнаяСтрока(ТекстПояснения);
	
КонецПроцедуры

#КонецОбласти
