#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)

	ОчиститьСообщения();
	
	ЕстьУчетнаяЗапись =
		ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПараметрыВыполненияКоманды.Источник, "УчетнаяЗапись");
	Если Не ЕстьУчетнаяЗапись Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Не предусмотрена загрузка заказов из этого источника.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("УчетнаяЗапись", ПараметрыВыполненияКоманды.Источник.УчетнаяЗапись);
	ПараметрыЗадания.Вставить("Форма", ПараметрыВыполненияКоманды.Источник);
	
	ЗапуститьЗагрузкуЗаказов(ПараметрыЗадания);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗапуститьЗагрузкуЗаказов(Параметры)

	Форма = Параметры.Форма;
	
	Если Форма.ИмяФормы = "Обработка.УправлениеПродажамиНаOzon.Форма.СписокЗаказов" Тогда
		ИдентификаторыВыделенныхСтрок = Форма.Элементы.ТаблицаЗаказов.ВыделенныеСтроки;
		Если ИдентификаторыВыделенныхСтрок.Количество() = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Нет заказов для загрузки.'"));
			Возврат;
		КонецЕсли;
		
		ИмяТаблицы = "ТаблицаЗаказов";
		
		ВыделенныеСтроки = Новый Массив;
		Для Каждого ИдентификаторСтроки Из ИдентификаторыВыделенныхСтрок Цикл
			ДанныеСтроки = Форма[ИмяТаблицы].НайтиПоИдентификатору(ИдентификаторСтроки);
			Если ДанныеСтроки <> Неопределено Тогда
				ВыделенныеСтроки.Добавить(
					Новый Структура("ИдентификаторЗаказа, ДатаСозданияОтправления",
						ДанныеСтроки.ИдентификаторЗаказа,
						ДанныеСтроки.ДатаСозданияОтправления));
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.УправлениеПродажамиНаOzon.Форма.СоставЗаказа" Тогда
		ИмяТаблицы = "";
		
		ВыделенныеСтроки = Новый Массив;
		ВыделенныеСтроки.Добавить(
			Новый Структура("ИдентификаторЗаказа, ДатаСозданияОтправления",
				Форма.ИдентификаторЗаказа,
				Форма.ДатаСозданияОтправления));
		
	Иначе
		ИмяТаблицы       = "Список";
		ВыделенныеСтроки = Неопределено;
	КонецЕсли;
	
	Если ВыделенныеСтроки = Неопределено Тогда
		ТекстОжидания = НСтр("ru = 'Выполняется загрузка новых заказов.'");
	Иначе
		ТекстОжидания = НСтр("ru = 'Выполняется загрузка выделенных заказов.'");
	КонецЕсли;
	
	ДанныеУчетнойЗаписи = Новый Структура;
	ДанныеУчетнойЗаписи.Вставить("УчетнаяЗапись", Параметры.УчетнаяЗапись);
	ДанныеУчетнойЗаписи.Вставить("ВидМаркетплейса", ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.ПустаяСсылка"));
	
	ДлительнаяОперация = ВыполнитьЗагрузкуНовыхЗаказов(
		ДанныеУчетнойЗаписи,
		Форма.УникальныйИдентификатор,
		ВыделенныеСтроки);
	
	ВидМаркетплейса = ДанныеУчетнойЗаписи.ВидМаркетплейса;
	
	Логотип = ИнтеграцияСМаркетплейсамиКлиентСервер.ЛоготипТорговойПлощадки(ВидМаркетплейса);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ТекстСообщения = ТекстОжидания;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = ВидМаркетплейса;
	ПараметрыОжидания.ОповещениеПользователя.Пояснение =
		НСтр("ru = 'Завершена фоновая загрузка заказов.'");
	ПараметрыОжидания.ОповещениеПользователя.НавигационнаяСсылка = "";
	ПараметрыОжидания.ОповещениеПользователя.Картинка = Логотип;
	
	ДопПараметрыОповещения = Новый Структура;
	ДопПараметрыОповещения.Вставить("Форма",           Форма);
	ДопПараметрыОповещения.Вставить("ИмяТаблицы",      ИмяТаблицы);
	ДопПараметрыОповещения.Вставить("УчетнаяЗапись",   Параметры.УчетнаяЗапись);
	ДопПараметрыОповещения.Вставить("ВидМаркетплейса", ВидМаркетплейса);
	
	Обработчик = Новый ОписаниеОповещения("ВыполнитьЗагрузкуНовыхЗаказовЗавершение",
		ЭтотОбъект,
		ДопПараметрыОповещения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция ВыполнитьЗагрузкуНовыхЗаказов(ДанныеУчетнойЗаписи, Знач ИдентификаторФормы, Знач ВыделенныеСтроки)

	ДанныеУчетнойЗаписи.ВидМаркетплейса =
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеУчетнойЗаписи.УчетнаяЗапись, "ВидМаркетплейса");

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Загрузка заказов.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ИмяМетода = "ИнтеграцияСМаркетплейсамиСервер.ЗагрузитьЗаказыСТорговойПлощадки";
	
	ОкончаниеПериода = КонецДня(ТекущаяДатаСеанса());
	НачалоПериода    = НачалоДня(ДобавитьМесяц(ОкончаниеПериода, -1));
	
	Если ВыделенныеСтроки = Неопределено Тогда
		ИдентификаторыЗаказов = Неопределено;
	Иначе
		ИдентификаторыЗаказов = Новый Массив;
		
		Для Каждого ДанныеВыделеннойСтроки Из ВыделенныеСтроки Цикл
			ИдентификаторыЗаказов.Добавить(ДанныеВыделеннойСтроки.ИдентификаторЗаказа);
			
			НачалоПериода    = Мин(НачалоПериода, ДанныеВыделеннойСтроки.ДатаСозданияОтправления);
			ОкончаниеПериода = Макс(ОкончаниеПериода, ДанныеВыделеннойСтроки.ДатаСозданияОтправления);
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеУчетнойЗаписи.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсOzon Тогда
		ПараметрыФункции = ИнтеграцияСМаркетплейсомOzonСервер.НовыйПараметрыЗагрузкиЗаказов();
		ПараметрыФункции.НачалоПериода       = НачалоДня(НачалоПериода);
		ПараметрыФункции.ОкончаниеПериода    = КонецДня(ОкончаниеПериода);
		ПараметрыФункции.ИдентификаторЗаказа = ИдентификаторыЗаказов;
		Если ВыделенныеСтроки = Неопределено Тогда
			// Загрузка только новых заказов.
			ПараметрыФункции.СтатусОтправления = "awaiting_packaging";
		КонецЕсли;
	Иначе
		ПараметрыФункции = Новый Структура;
	КонецЕсли;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода,
		ДанныеУчетнойЗаписи.УчетнаяЗапись,
		ПараметрыФункции);

КонецФункции

&НаКлиенте
// Обработка оповещения загрузки заказов.
//
// Параметры:
//   РезультатЗадания - см. ДлительныеОперации.ВыполнитьВФоне.
//   ДополнительныеПараметры - Произвольный - дополнительные параметры оповещения.
//
Процедура ВыполнитьЗагрузкуНовыхЗаказовЗавершение(РезультатЗадания, ДополнительныеПараметры) Экспорт

	Если РезультатЗадания <> Неопределено Тогда
		Если РезультатЗадания.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатЗадания.ПодробноеПредставлениеОшибки);
			
		ИначеЕсли РезультатЗадания.Статус = "Выполнено" Тогда
			Ошибка = ПолучитьИзВременногоХранилища(РезультатЗадания.АдресРезультата);
			УдалитьИзВременногоХранилища(РезультатЗадания.АдресРезультата);
			
			ИнтеграцияСМаркетплейсамиКлиент.ВывестиСостояние(Ошибка, Неопределено, Истина);
			
			Если Не ПустаяСтрока(ДополнительныеПараметры.ИмяТаблицы) Тогда
				Форма = ДополнительныеПараметры.Форма; // ФормаКлиентскогоПриложения
				Форма.Элементы[ДополнительныеПараметры.ИмяТаблицы].Обновить();
			КонецЕсли;
			
			Оповестить("ВыполненаЗагрузкаЗаказовТорговойПлощадки", ДополнительныеПараметры.УчетнаяЗапись);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
