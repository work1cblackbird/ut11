
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Записывает движения документа в регистр.
//
Процедура ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОстаткиАлкогольнойПродукцииЕГАИС;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияОстаткиАлкогольнойПродукцииЕГАИС = Движения.ОстаткиАлкогольнойПродукцииЕГАИС;
	ДвиженияОстаткиАлкогольнойПродукцииЕГАИС.Записывать = Истина;
	ДвиженияОстаткиАлкогольнойПродукцииЕГАИС.Загрузить(Таблица);
	
КонецПроцедуры

// Осуществляет запись в регистр по переданным данным.
//
// Параметры:
//  Данные - См. ПоляЗаписиСтатусаУпаковки
//  ЭтоКорректировкаОстатка - Булево - это установка остатка без инкрементирования количества частичного выбытия
//  ПроверятьЧастичноеВыбытие - Булево - проверять / изменять количество частичного выбытия
Процедура ВыполнитьЗаписьВРегистр(Данные, ЭтоКорректировкаОстатка = Ложь, ПроверятьЧастичноеВыбытие = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПроверятьЧастичноеВыбытие
		Или ЭтоКорректировкаОстатка  Тогда
		
		ДанныеЗаписи = ПоляЗаписиСтатусаУпаковки();
		ЗаполнитьЗначенияСвойств(ДанныеЗаписи, Данные);
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.АкцизныеМаркиЕГАИС");
		ЭлементБлокировки.УстановитьЗначение("ОрганизацияЕГАИС", ДанныеЗаписи.ОрганизацияЕГАИС);
		ЭлементБлокировки.УстановитьЗначение("АкцизнаяМарка",    ДанныеЗаписи.АкцизнаяМарка);
		
		Если Не ЭтоКорректировкаОстатка Тогда
			ЭлементБлокировки = БлокировкаДанных.Добавить(Метаданные.РегистрыСведений.ВскрытыеПотребительскиеУпаковкиИС.ПолноеИмя());
			ЭлементБлокировки.УстановитьЗначение("КодМаркировки", ДанныеЗаписи.АкцизнаяМарка);
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Попытка
			
			БлокировкаДанных.Заблокировать();
			
			Если Не ЭтоКорректировкаОстатка Тогда
				
				ДанныеВскрытия = РегистрыСведений.ВскрытыеПотребительскиеУпаковкиИС.ВскрытыеПотребительскиеУпаковкиПоКодуМаркировки(
					ДанныеЗаписи.АкцизнаяМарка, Истина)[ДанныеЗаписи.АкцизнаяМарка];
				Если ДанныеВскрытия <> Неопределено
					И (ДанныеВскрытия.Остаток - ДанныеЗаписи.КоличествоЧастичногоВыбытия) <= 0 Тогда
					РегистрыСведений.ВскрытыеПотребительскиеУпаковкиИС.УдалитьВскрытыеПотребительскиеУпаковки(ДанныеЗаписи.АкцизнаяМарка);
				КонецЕсли;
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ДанныеЗаписи.ОрганизацияЕГАИС);
				Запрос.УстановитьПараметр("АкцизнаяМарка",    ДанныеЗаписи.АкцизнаяМарка);
				Запрос.Текст =
				"ВЫБРАТЬ
				|	АкцизныеМаркиЕГАИС.КоличествоЧастичногоВыбытия
				|ИЗ
				|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
				|ГДЕ
				|	АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС = &ОрганизацияЕГАИС
				|	И АкцизныеМаркиЕГАИС.АкцизнаяМарка = &АкцизнаяМарка";
				
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					ДанныеЗаписи.КоличествоЧастичногоВыбытия = Выборка.КоличествоЧастичногоВыбытия + ДанныеЗаписи.КоличествоЧастичногоВыбытия;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ДанныеЗаписи.КоличествоЧастичногоВыбытия <> 0
				И ДанныеЗаписи.Статус = Перечисления.СтатусыАкцизныхМарок.ВНаличии Тогда
				ДанныеЗаписи.Статус = Перечисления.СтатусыАкцизныхМарок.ВскрытаяБутылка;
			КонецЕсли;
			
			МенеджерЗаписи = СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДанныеЗаписи);
			МенеджерЗаписи.Записать();
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
		
	Иначе
		
		МенеджерЗаписи = СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Данные);
		МенеджерЗаписи.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает структуру полей регистра для заполнения (и последующей записи)
//
// Возвращаемое значение:
//   Структура - поля таблицы регистра
//
Функция ПоляЗаписиСтатусаУпаковки() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ОрганизацияЕГАИС",            Неопределено);
	Результат.Вставить("АкцизнаяМарка",               Неопределено);
	Результат.Вставить("Статус",                      Неопределено);
	Результат.Вставить("Справка2",                    Неопределено);
	Результат.Вставить("АлкогольнаяПродукция",        Неопределено);
	Результат.Вставить("Основание",                   Неопределено);
	Результат.Вставить("КоличествоЧастичногоВыбытия", 0);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС";
	ИмяРегистра = "ОстаткиАлкогольнойПродукцииЕГАИС";
	
	// Акт постановки на баланс
	ТекстЗапросаМеханизмаПроведения = Документы.АктПостановкиНаБалансЕГАИС.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыЕГАИС.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.АктПостановкиНаБалансЕГАИС");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	// Акт списания
	ТекстЗапросаМеханизмаПроведения = Документы.АктСписанияЕГАИС.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыЕГАИС.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.АктСписанияЕГАИС");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	// Возврат из регистра №2
	ТекстЗапросаМеханизмаПроведения = Документы.ВозвратИзРегистра2ЕГАИС.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыЕГАИС.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.ВозвратИзРегистра2ЕГАИС");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	// Запрос остатков
	ТекстЗапросаМеханизмаПроведения = Документы.ОстаткиЕГАИС.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыЕГАИС.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.ОстаткиЕГАИС");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	// Передача в регистр №2
	ТекстЗапросаМеханизмаПроведения = Документы.ПередачаВРегистр2ЕГАИС.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыЕГАИС.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.ПередачаВРегистр2ЕГАИС");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	// Входящая ТТН
	ТекстЗапросаМеханизмаПроведения = Документы.ТТНВходящаяЕГАИС.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыЕГАИС.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.ТТНВходящаяЕГАИС");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	// Исходящая ТТН
	ТекстЗапросаМеханизмаПроведения = Документы.ТТНИсходящаяЕГАИС.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыЕГАИС.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.ТТНИсходящаяЕГАИС");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.АктПостановкиНаБалансЕГАИС");
	Регистраторы.Добавить("Документ.АктСписанияЕГАИС");
	Регистраторы.Добавить("Документ.ВозвратИзРегистра2ЕГАИС");
	Регистраторы.Добавить("Документ.ОстаткиЕГАИС");
	Регистраторы.Добавить("Документ.ПередачаВРегистр2ЕГАИС");
	Регистраторы.Добавить("Документ.ТТНВходящаяЕГАИС");
	Регистраторы.Добавить("Документ.ТТНИсходящаяЕГАИС");
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыЕГАИС.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
		"РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС",
		Параметры.Очередь);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли