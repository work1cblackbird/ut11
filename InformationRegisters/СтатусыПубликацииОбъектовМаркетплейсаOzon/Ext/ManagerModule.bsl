
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет указать объекты метаданных, для которых задана логика ограничения доступа к данным.
//
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
		"РазрешитьЧтениеИзменение
		|ГДЕ
		|	ЗначениеРазрешено(УчетнаяЗаписьМаркетплейса.Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	// Схемы работы торговых площадок
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.ОбработатьДанныеДляПереходаНаНовуюВерсию_СхемыРаботыТорговыхПлощадок";
	Обработчик.Версия = "2.5.17.32";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("f4551c40-5667-4c59-9528-8d01ff4cced1");   
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию_СхемыРаботыТорговыхПлощадок";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Устанавливает признак ""Продается по схеме работы FBO"" в регистре сведений ""Статусы публикации объектов маркетплейса Ozon"" для существующих карточек товаров. 
	|Проверяет, если в регистре сведений ""Соответствия объектов маркетплейсов"" есть склады со схемой работы ""FBS"", тогда устанавливает для всех товаров признак ""Продается по схеме работы FBS"", если в регистре сведений ""Соответствия объектов маркетплейсов"" есть склады со схемой работы ""DBS"" устанавливает признак ""Продается по схеме работы DBS"" для всех товаров.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.СоответствияОбъектовМаркетплейсов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");     
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.СоответствияОбъектовМаркетплейсов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	
КонецПроцедуры

// Параметры:
//   Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию_СхемыРаботыТорговыхПлощадок(Параметры) Экспорт
		
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = "РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon";
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыПубликацииОбъектовМаркетплейсаOzon.УчетнаяЗаписьМаркетплейса КАК УчетнаяЗаписьМаркетплейса,
	|	СтатусыПубликацииОбъектовМаркетплейсаOzon.ВидОбъектаМаркетплейса КАК ВидОбъектаМаркетплейса,
	|	СтатусыПубликацииОбъектовМаркетплейсаOzon.Номенклатура КАК Номенклатура,
	|	СтатусыПубликацииОбъектовМаркетплейсаOzon.Характеристика КАК Характеристика,
	|	СтатусыПубликацииОбъектовМаркетплейсаOzon.Упаковка КАК Упаковка,
	|	СтатусыПубликацииОбъектовМаркетплейсаOzon.ОбъектПубликации КАК ОбъектПубликации
	|ИЗ
	|	РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon КАК СтатусыПубликацииОбъектовМаркетплейсаOzon
	|ГДЕ
	|	НЕ СтатусыПубликацииОбъектовМаркетплейсаOzon.ПродаетсяПоСхемеРаботыFBO
	|	И (СтатусыПубликацииОбъектовМаркетплейсаOzon.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Товар))
	|";
	
	ТаблицаРегистра = Запрос.Выполнить().Выгрузить();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ТаблицаРегистра, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию_СхемыРаботыТорговыхПлощадок(Параметры) Экспорт
		
	МетаданныеОбъекта = Метаданные.РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon;
	ПолноеИмяРегистра  = МетаданныеОбъекта.ПолноеИмя();
	
	Если ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра) Тогда 
		Параметры.ОбработкаЗавершена = ОбновлениеПредшествующихДанныхЗавершено_СхемыРаботыТорговыхПлощадок(); 
		Если Параметры.ОбработкаЗавершена Тогда
			Возврат;       
		КонецЕсли;
	КонецЕсли;  
			
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
				   |	ВЫБОР КОГДА СУММА(ПодЗапрос.ЕстьFBS) = 1 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ИспользуетсяСхемаFBS,
				   |	ВЫБОР КОГДА СУММА(ПодЗапрос.ЕстьDBS) = 1 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ИспользуетсяСхемаDBS
				   |ИЗ
				   |(ВЫБРАТЬ ПЕРВЫЕ 1
	               |	1 КАК ЕстьFBS,
				   |	0 КАК ЕстьDBS
	               |ИЗ
	               |	РегистрСведений.СоответствияОбъектовМаркетплейсов КАК СоответствияОбъектовМаркетплейсов
	               |ГДЕ
	               |	СоответствияОбъектовМаркетплейсов.ИспользуетсяДляСхемыРаботыFBS
				   |	И СоответствияОбъектовМаркетплейсов.УчетнаяЗаписьМаркетплейса.ВидМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыМаркетплейсов.МаркетплейсOzon)
				   |	И СоответствияОбъектовМаркетплейсов.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Склад)
				   |
				   |ОБЪЕДИНИТЬ ВСЕ 
				   |
				   |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	0 КАК ЕстьFBS,
				   |	1 КАК ЕстьDBS
	               |ИЗ
	               |	РегистрСведений.СоответствияОбъектовМаркетплейсов КАК СоответствияОбъектовМаркетплейсов
	               |ГДЕ
	               |	СоответствияОбъектовМаркетплейсов.ИспользуетсяДляСхемыРаботыDBS 
				   |	И СоответствияОбъектовМаркетплейсов.УчетнаяЗаписьМаркетплейса.ВидМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыМаркетплейсов.МаркетплейсOzon)
				   |	И СоответствияОбъектовМаркетплейсов.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Склад)
				   |) КАК ПодЗапрос";
	Результат = Запрос.Выполнить().Выбрать();
	
	ИспользуетсяСхемаFBS = Ложь;
	ИспользуетсяСхемаDBS = Ложь;
	
	Пока Результат.Следующий() Цикл
		ИспользуетсяСхемаFBS = Результат.ИспользуетсяСхемаFBS;
		ИспользуетсяСхемаDBS = Результат.ИспользуетсяСхемаDBS;
	КонецЦикла;    
	
	ТаблицаОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	Для Каждого Строка Из ТаблицаОбновляемыеДанные Цикл
		
		НаборЗаписей = Неопределено;
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных();
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon");
			ЭлементБлокировки.УстановитьЗначение("УчетнаяЗаписьМаркетплейса", Строка.УчетнаяЗаписьМаркетплейса);
			ЭлементБлокировки.УстановитьЗначение("ВидОбъектаМаркетплейса", Строка.ВидОбъектаМаркетплейса);
			ЭлементБлокировки.УстановитьЗначение("Номенклатура", Строка.Номенклатура);  
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Строка.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Упаковка", Строка.Упаковка);
			ЭлементБлокировки.УстановитьЗначение("ОбъектПубликации", Строка.ОбъектПубликации); 
			Блокировка.Заблокировать();        
			
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(Строка.УчетнаяЗаписьМаркетплейса);
			НаборЗаписей.Отбор.ВидОбъектаМаркетплейса.Установить(Строка.ВидОбъектаМаркетплейса);
			НаборЗаписей.Отбор.Номенклатура.Установить(Строка.Номенклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(Строка.Характеристика);
			НаборЗаписей.Отбор.Упаковка.Установить(Строка.Упаковка);
			НаборЗаписей.Отбор.ОбъектПубликации.Установить(Строка.ОбъектПубликации);
			
			НаборЗаписей.Прочитать();
			
			Для Каждого Запись Из НаборЗаписей Цикл
				
				Запись.ПродаетсяПоСхемеРаботыFBO = Истина;
				Если ИспользуетсяСхемаFBS Тогда
					Запись.ПродаетсяПоСхемеРаботыFBS = Истина;
				КонецЕсли;
				
				Если ИспользуетсяСхемаDBS Тогда
					Запись.ПродаетсяПоСхемеРаботыDBS = Истина;
				КонецЕсли;
				
			КонецЦикла;
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Если НаборЗаписей = Неопределено Тогда
				НаборЗаписей = СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(Строка.УчетнаяЗаписьМаркетплейса);
				НаборЗаписей.Отбор.ВидОбъектаМаркетплейса.Установить(Строка.ВидОбъектаМаркетплейса);
				НаборЗаписей.Отбор.Номенклатура.Установить(Строка.Номенклатура);
				НаборЗаписей.Отбор.Характеристика.Установить(Строка.Характеристика);
				НаборЗаписей.Отбор.Упаковка.Установить(Строка.Упаковка);
				НаборЗаписей.Отбор.ОбъектПубликации.Установить(Строка.ОбъектПубликации);
			КонецЕсли;
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), НаборЗаписей);
		КонецПопытки;
		
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
		
КонецПроцедуры

Функция ОбновлениеПредшествующихДанныхЗавершено_СхемыРаботыТорговыхПлощадок()
	
	Запрос = Новый Запрос; 
	ЕстьОшибка = Ложь;
	Запрос.УстановитьПараметр("РежимВыполнения", Перечисления.РежимыВыполненияОбработчиков.Отложенно);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОбработчикиОбновления.ИмяОбработчика КАК ИмяОбработчика,
		|	ОбработчикиОбновления.Статус КАК Статус
		|ИЗ
		|	РегистрСведений.ОбработчикиОбновления КАК ОбработчикиОбновления
		|ГДЕ
		|	ОбработчикиОбновления.ИмяОбработчика = ""РегистрыСведений.СоответствияОбъектовМаркетплейсов.ОбработатьДанныеДляПереходаНаНовуюВерсию""
		|	И ОбработчикиОбновления.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОбработчиковОбновления.Ошибка))
		|	И ОбработчикиОбновления.РежимВыполнения = &РежимВыполнения
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбработчикиОбновления.Статус,
		|	ОбработчикиОбновления.ИмяОбработчика";
	
	СтатусыОбработчиков = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Обработчик Из СтатусыОбработчиков Цикл
		
		ТекстСообщения = НСтр("ru = 'Обновление зависимых данных завершено с ошибкой.
		|Не выполнен обработчик обновления'") + " """ + Обработчик.ИмяОбработчика + """";
		
		ЕстьОшибка = Истина;
		ВызватьИсключение ТекстСообщения;
		
	КонецЦикла;
	
	Возврат ЕстьОшибка;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
