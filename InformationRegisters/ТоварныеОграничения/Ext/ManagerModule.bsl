#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подставляет в текст запроса соединения необходимые для получения настройки поддержания запасов.
//
// Параметры:
//  ТекстЗапроса	 - Строка - текст запроса, в который нужно подставить соединение
//  ИмяПараметра	 - Строка - имя параметра на место которого будет подставлено соединение
//  ПоляСоединения	 - Строка - поля соединения в формате [ВедущаяТаблица].Номенклатура,[ВедущаяТаблица].Характеристика,[ВедущаяТаблица].Склад
//  ПсевдонимТаблицы - Строка - Псведоним таблицы, используемой в запросе в качестве источника данных для получения
//                              товарных ограничений.
// 
// Возвращаемое значение:
//  Строка - новый тест запроса
//
Функция ПодставитьСоединение(ТекстЗапроса, ИмяПараметра, ПоляСоединения = Неопределено, ПсевдонимТаблицы = "ТоварныеОграничения") Экспорт
	
	РезультатПодстановки = ТекстЗапроса;
	Пока Истина Цикл
		
		НачалоПараметра = СтрНайти(РезультатПодстановки, ИмяПараметра, НаправлениеПоиска.СНачала);
		
		Если НачалоПараметра = 0 Тогда
			Прервать;
		КонецЕсли;
		
		// Замена ресурсов, измерений и реквизитов.
		Поля = Метаданные.РегистрыСведений.ТоварныеОграничения.Измерения;
		ПодставитьВыраженияПолейВыборки(РезультатПодстановки, Поля, ПсевдонимТаблицы);
		Поля = Метаданные.РегистрыСведений.ТоварныеОграничения.Ресурсы;
		ПодставитьВыраженияПолейВыборки(РезультатПодстановки, Поля, ПсевдонимТаблицы);
		Поля = Метаданные.РегистрыСведений.ТоварныеОграничения.Реквизиты;
		ПодставитьВыраженияПолейВыборки(РезультатПодстановки, Поля, ПсевдонимТаблицы);
		
		// Замена соединения.
		НачалоПараметра = СтрНайти(РезультатПодстановки, ИмяПараметра, НаправлениеПоиска.СНачала);
		
		ПоследнийСимвол = НачалоПараметра + СтрДлина(ИмяПараметра);
		НачалоСинонима = СтрНайти(РезультатПодстановки, "КАК", НаправлениеПоиска.СКонца, НачалоПараметра) + СтрДлина("КАК");
		ПревыйСимвол = СтрНайти(РезультатПодстановки, "СОЕДИНЕНИЕ", НаправлениеПоиска.СКонца, НачалоСинонима) + СтрДлина("СОЕДИНЕНИЕ");
		
		ПодстрокаПоиска = Сред(РезультатПодстановки, ПревыйСимвол, ПоследнийСимвол - ПревыйСимвол);
		ПодстрокаЗамены =
			" РегистрСведений.ТоварныеОграничения КАК НастройкаДетальная
			|		ПО НастройкаДетальная.Номенклатура   = Т.Номенклатура
			|		 И НастройкаДетальная.Характеристика = Т.Характеристика
			|		 И НастройкаДетальная.Склад          = Т.Склад
			|		 И НастройкаДетальная.ГруппировкаТоварныхОграничений    = ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)
			|		 И НастройкаДетальная.ЭтоДействующийПараметр
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ПринадлежностьГруппе
			|		ПО НастройкаДетальная.Склад ЕСТЬ NULL
			|		 И ПринадлежностьГруппе.Номенклатура   = Т.Номенклатура
			|		 И ПринадлежностьГруппе.Характеристика = Т.Характеристика
			|		 И ПринадлежностьГруппе.Склад          = Т.Склад
			|		 И ПринадлежностьГруппе.ГруппировкаТоварныхОграничений <> ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)
			|		 И ПринадлежностьГруппе.ЭтоДействующийПараметр
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК НастройкаГруппировки
			|		ПО НастройкаДетальная.Склад ЕСТЬ NULL
			|		 И НастройкаГруппировки.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|		 И НастройкаГруппировки.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		 И НастройкаГруппировки.Склад          = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
			|		 И НастройкаГруппировки.ГруппировкаТоварныхОграничений    = ПринадлежностьГруппе.ГруппировкаТоварныхОграничений
			|		 И НастройкаГруппировки.ЭтоДействующийПараметр
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК НастройкаОбщая
			|		ПО НастройкаДетальная.Склад ЕСТЬ NULL
			|		 И ПринадлежностьГруппе.Склад ЕСТЬ NULL
			|		 И Т.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		 И НастройкаОбщая.Номенклатура   = Т.Номенклатура
			|		 И НастройкаОбщая.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		 И НастройкаОбщая.Склад          = Т.Склад
			|		 И НастройкаОбщая.ГруппировкаТоварныхОграничений    = ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)
			|		 И НастройкаОбщая.ЭтоДействующийПараметр
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ПринадлежностьГруппеОбщейНастройки
			|		ПО НастройкаДетальная.Склад ЕСТЬ NULL
			|		 И ПринадлежностьГруппе.Склад ЕСТЬ NULL
			|		 И НастройкаОбщая.Склад ЕСТЬ NULL
			|		 И Т.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		 И ПринадлежностьГруппеОбщейНастройки.Номенклатура   = Т.Номенклатура
			|		 И ПринадлежностьГруппеОбщейНастройки.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		 И ПринадлежностьГруппеОбщейНастройки.Склад          = Т.Склад
			|		 И ПринадлежностьГруппеОбщейНастройки.ГруппировкаТоварныхОграничений    <> ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)
			|		 И ПринадлежностьГруппеОбщейНастройки.ЭтоДействующийПараметр
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК НастройкаГруппировкиОбщейНастройки
			|		ПО НастройкаДетальная.Склад ЕСТЬ NULL
			|		 И ПринадлежностьГруппе.Склад ЕСТЬ NULL
			|		 И НастройкаОбщая.Склад ЕСТЬ NULL
			|		 И Т.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		 И НастройкаГруппировкиОбщейНастройки.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|		 И НастройкаГруппировкиОбщейНастройки.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		 И НастройкаГруппировкиОбщейНастройки.Склад          = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
			|		 И НастройкаГруппировкиОбщейНастройки.ГруппировкаТоварныхОграничений    = ПринадлежностьГруппеОбщейНастройки.ГруппировкаТоварныхОграничений
			|		 И НастройкаГруппировкиОбщейНастройки.ЭтоДействующийПараметр";
			
		Если ПоляСоединения <> Неопределено Тогда
			МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПоляСоединения);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Номенклатура",   МассивПодстрок[0]);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Характеристика", МассивПодстрок[1]);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Склад",          МассивПодстрок[2]);
		КонецЕсли;
		
		РезультатПодстановки = СтрЗаменить(РезультатПодстановки, ПодстрокаПоиска, ПодстрокаЗамены);
		
	КонецЦикла;
	
	Возврат РезультатПодстановки;
	
КонецФункции

// Подставляет в текст запроса соединения необходимые для получения упаковки заказа
//
// Параметры:
//  ТекстЗапроса	 - Строка - текст запроса, в который нужно подставить соединение
//  ИмяПараметра	 - Строка - имя параметра на место которого будет подставлено соединение
//  ПоляСоединения	 - Строка - поля соединения в формате [ВедущаяТаблица].Номенклатура,[ВедущаяТаблица].Характеристика,[ВедущаяТаблица].Склад
//  ПсевдонимТаблицы - Строка - Псведоним таблицы, используемой в запросе в качестве источника данных для получения
//                              товарных ограничений.
// 
// Возвращаемое значение:
//  Строка - новый тест запроса
//
Функция ПодставитьСоединениеДляУпаковкиЗаказа(ТекстЗапроса, ИмяПараметра, ПоляСоединения = Неопределено, ПсевдонимТаблицы = "УпаковкиЗаказа") Экспорт
	
	РезультатПодстановки = ТекстЗапроса;
	Пока Истина Цикл
		
		НачалоПараметра = СтрНайти(РезультатПодстановки, ИмяПараметра, НаправлениеПоиска.СНачала);
		
		Если НачалоПараметра = 0 Тогда
			Прервать;
		КонецЕсли;
		
		// Замена ресурса.
		ПодстрокаПоиска = ПсевдонимТаблицы + ".УпаковкаЗаказа";
		ПодстрокаЗамены =
		"
		|ВЫБОР
		|	КОГДА ЕСТЬNULL(ЦеныПоставщиков.УпаковкаЗаказаПоставщика,Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = 
		|		Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
		|			ЕСТЬNULL(УпаковкиЗаказаДетальные.УпаковкаЗаказа, УпаковкиЗаказаОбщие.УпаковкаЗаказа)
		|		ИНАЧЕ
		|			ЦеныПоставщиков.УпаковкаЗаказаПоставщика
		|	КОНЕЦ";
		РезультатПодстановки = СтрЗаменить(РезультатПодстановки, ПодстрокаПоиска, ПодстрокаЗамены);
		
		// Замена соединения.
		НачалоПараметра = СтрНайти(РезультатПодстановки, ИмяПараметра, НаправлениеПоиска.СНачала);
		
		ПоследнийСимвол = НачалоПараметра + СтрДлина(ИмяПараметра);
		НачалоСинонима = СтрНайти(РезультатПодстановки, "КАК", НаправлениеПоиска.СКонца, НачалоПараметра) + СтрДлина("КАК");
		ПревыйСимвол = СтрНайти(РезультатПодстановки, "СОЕДИНЕНИЕ", НаправлениеПоиска.СКонца, НачалоСинонима) + СтрДлина("СОЕДИНЕНИЕ");
		
		ПодстрокаПоиска = Сред(РезультатПодстановки, ПревыйСимвол, ПоследнийСимвол - ПревыйСимвол);
		ПодстрокаЗамены =
			" РегистрСведений.ТоварныеОграничения КАК УпаковкиЗаказаДетальные
			|		ПО УпаковкиЗаказаДетальные.Номенклатура   = Т.Номенклатура
			|		 И УпаковкиЗаказаДетальные.Характеристика = Т.Характеристика
			|		 И УпаковкиЗаказаДетальные.Склад          = Т.Склад
			|		 И УпаковкиЗаказаДетальные.УпаковкаЗаказа <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК УпаковкиЗаказаОбщие
			|		ПО УпаковкиЗаказаДетальные.Склад ЕСТЬ NULL
			|		 И Т.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		 И УпаковкиЗаказаОбщие.Номенклатура   = Т.Номенклатура
			|		 И УпаковкиЗаказаОбщие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		 И УпаковкиЗаказаОбщие.Склад          = Т.Склад";
			
		Если ПоляСоединения <> Неопределено Тогда
			МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПоляСоединения);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Номенклатура",   МассивПодстрок[0]);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Характеристика", МассивПодстрок[1]);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Склад",          МассивПодстрок[2]);
		КонецЕсли;
		
		РезультатПодстановки = СтрЗаменить(РезультатПодстановки, ПодстрокаПоиска, ПодстрокаЗамены);
		
	КонецЦикла;
	
	Возврат РезультатПодстановки;
	
КонецФункции


// Формирует текст запроса временной таблицы, содержащую параметры поддержания запаса, установленные для товаров в РС
// "Товарные ограничения". На список товаров и складов может быть установлен отбор кеомпоновки данных.
// Параметры:
// 
// Возвращаемое значение:
//  Строка - тест запроса временной таблицы "ВтТоварыПоддерживаемогоЗапаса".
//
Функция ВременнаяТаблицаТоварыПоддерживаемогоЗапаса() Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	
		|	ЕСТЬNULL(НастройкаГруппировки.СтраховоеКоличествоЗапаса, Таблица.СтраховоеКоличествоЗапаса)                           КАК СтраховоеКоличествоЗапаса,
		|	ЕСТЬNULL(НастройкаГруппировки.МинимальноеКоличествоЗапаса, Таблица.МинимальноеКоличествоЗапаса)                       КАК МинимальноеКоличествоЗапаса,
		|	ЕСТЬNULL(НастройкаГруппировки.МаксимальноеКоличествоЗапаса, Таблица.МаксимальноеКоличествоЗапаса)                     КАК МаксимальноеКоличествоЗапаса,
		|	ЕСТЬNULL(НастройкаГруппировки.НормаПотребления, Таблица.НормаПотребления)                                             КАК НормаПотребления,
		|	ЕСТЬNULL(НастройкаГруппировки.МетодОбеспеченияПотребностей, Таблица.МетодОбеспеченияПотребностей)                     КАК МетодОбеспеченияПотребностей,
		|	ЕСТЬNULL(НастройкаГруппировки.УпаковкаЗаказа, Таблица.УпаковкаЗаказа)                                                 КАК УпаковкаЗаказа,
		|	ЕСТЬNULL(НастройкаГруппировки.ОбеспечениеЗаказовПриПоддержанииЗапаса, Таблица.ОбеспечениеЗаказовПриПоддержанииЗапаса) КАК ОбеспечениеЗаказовПриПоддержанииЗапаса
		|	
		|ПОМЕСТИТЬ ВтТоварыПоддерживаемогоЗапаса
		|	
		|ИЗ
		|	РегистрСведений.ТоварныеОграничения КАК Таблица
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК НастройкаГруппировки
		|		ПО Таблица.ГруппировкаТоварныхОграничений <> ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)
		|			И НастройкаГруппировки.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			И НастройкаГруппировки.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			И НастройкаГруппировки.Склад          = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			И НастройкаГруппировки.ГруппировкаТоварныхОграничений    = Таблица.ГруппировкаТоварныхОграничений
		|			И НастройкаГруппировки.ЭтоДействующийПараметр
		|
		|ГДЕ
		|	ЕСТЬNULL(НастройкаГруппировки.МетодОбеспеченияПотребностей, Таблица.МетодОбеспеченияПотребностей) <> ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ)
		|	И Таблица.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И (Таблица.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
		|		ИЛИ Таблица.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|	И Таблица.ЭтоДействующийПараметр
		|{ГДЕ
		|	Таблица.Номенклатура.*   КАК Номенклатура,
		|	Таблица.Характеристика.* КАК Характеристика,
		|	Таблица.Склад.*          КАК Склад}
		|
		|{ГДЕ (Таблица.Номенклатура, Таблица.Характеристика) В(
		|	ВЫБРАТЬ
		|		ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|		ТаблицаОтбора.Характеристика КАК Характеристика
		|	ИЗ
		|		ОтборПоСегментам КАК ТаблицаОтбора
		|	ГДЕ
		|		&ИспользуетсяОтборПоСегментуНоменклатуры)}
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Номенклатура        КАК Номенклатура,
		|	ТаблицаХарактеристик.Ссылка КАК Характеристика,
		|	Таблица.Склад               КАК Склад,
		|	
		|	ЕСТЬNULL(НастройкаГруппировки.СтраховоеКоличествоЗапаса, Таблица.СтраховоеКоличествоЗапаса)                           КАК СтраховоеКоличествоЗапаса,
		|	ЕСТЬNULL(НастройкаГруппировки.МинимальноеКоличествоЗапаса, Таблица.МинимальноеКоличествоЗапаса)                       КАК МинимальноеКоличествоЗапаса,
		|	ЕСТЬNULL(НастройкаГруппировки.МаксимальноеКоличествоЗапаса, Таблица.МаксимальноеКоличествоЗапаса)                     КАК МаксимальноеКоличествоЗапаса,
		|	ЕСТЬNULL(НастройкаГруппировки.НормаПотребления, Таблица.НормаПотребления)                                             КАК НормаПотребления,
		|	ЕСТЬNULL(НастройкаГруппировки.МетодОбеспеченияПотребностей, Таблица.МетодОбеспеченияПотребностей)                     КАК МетодОбеспеченияПотребностей,
		|	ЕСТЬNULL(НастройкаГруппировки.УпаковкаЗаказа, Таблица.УпаковкаЗаказа)                                                 КАК УпаковкаЗаказа,
		|	ЕСТЬNULL(НастройкаГруппировки.ОбеспечениеЗаказовПриПоддержанииЗапаса, Таблица.ОбеспечениеЗаказовПриПоддержанииЗапаса) КАК ОбеспечениеЗаказовПриПоддержанииЗапаса
		|	
		|ИЗ
		|	РегистрСведений.ТоварныеОграничения КАК Таблица
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
		|		ПО ТаблицаНоменклатуры.Ссылка = Таблица.Номенклатура
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ТаблицаХарактеристик
		|		ПО ТаблицаХарактеристик.Владелец
		|			= ВЫБОР КОГДА ТаблицаНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры) ТОГДА
		|						ТаблицаНоменклатуры.Ссылка
		|					КОГДА ТаблицаНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры) ТОГДА
		|						ТаблицаНоменклатуры.ВидНоменклатуры
		|					КОГДА ТаблицаНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры) ТОГДА
		|						ТаблицаНоменклатуры.ВладелецХарактеристик
		|				КОНЕЦ
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК НастройкаДетальная
		|		ПО НастройкаДетальная.Номенклатура      = Таблица.Номенклатура
		|			И НастройкаДетальная.Характеристика = ТаблицаХарактеристик.Ссылка
		|			И НастройкаДетальная.Склад          = Таблица.Склад
		|			И НастройкаДетальная.ЭтоДействующийПараметр
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК НастройкаГруппировки
		|		ПО Таблица.ГруппировкаТоварныхОграничений <> ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)
		|			И НастройкаГруппировки.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			И НастройкаГруппировки.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			И НастройкаГруппировки.Склад          = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			И НастройкаГруппировки.ГруппировкаТоварныхОграничений    = Таблица.ГруппировкаТоварныхОграничений
		|			И НастройкаГруппировки.ЭтоДействующийПараметр
		|		
		|ГДЕ
		|	ЕСТЬNULL(НастройкаГруппировки.МетодОбеспеченияПотребностей, Таблица.МетодОбеспеченияПотребностей) <> ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ)
		|	И Таблица.Номенклатура  <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И Таблица.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|	И Таблица.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
		|	И Таблица.ЭтоДействующийПараметр
		|	И НастройкаДетальная.Склад ЕСТЬ NULL
		|	И НЕ ТаблицаХарактеристик.Ссылка ЕСТЬ NULL
		|{ГДЕ
		|	Таблица.Номенклатура.*        КАК Номенклатура,
		|	ТаблицаХарактеристик.Ссылка.* КАК Характеристика,
		|	Таблица.Склад.*               КАК Склад}
		|
		|{ГДЕ (Таблица.Номенклатура, Таблица.Характеристика) В(
		|	ВЫБРАТЬ
		|		ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|		ТаблицаОтбора.Характеристика КАК Характеристика
		|	ИЗ
		|		ОтборПоСегментам КАК ТаблицаОтбора
		|	ГДЕ
		|		&ИспользуетсяОтборПоСегментуНоменклатуры)}
		|
		|;
		|
		|///////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Получает значение настройки "Параметры поддержания запаса" для товарной позиции на складе или группировки.
// Параметры:
//    Ключ - Структура - Структура с полями:
//                        Номенклатура - СправочникСсылка.Номенклатура - Позиция номенклатуры, для которой требуется
//                                                                       получить значение настройки.
//                        Характеристика - СправочникСсылка.ХарактеристикаНоменклатуры - Характеристика номенклатуры,
//                            для которой требуется получить значение настройки.
//                        Склад - СправочникСсылка.Склады - Склад, для которого требуется получить значение настройки.
//                        ГруппировкаТоварныхОграничений - СправочникСсылка.ГруппировкиТоварныхОграничений - Группировка для которой
//                            требуется получить значение настройки
// Возвращаемое значение:
//    Структура - Структура с полями:
//                 СпособУказанияНастройки - Строка - Принимает одно из следующих значений: "ДЛЯ_ТОВАРА",
//                                                    "ДЛЯ_ХАРАКТЕРИСТИК_ТОВАРА", "ДЛЯ_ГРУППЫ_ТОВАРОВ", "НЕ_УКАЗАНА".
//                 ГруппировкаТоварныхОграничений - СправочникСсылка.ГруппировкиТоварныхОграничений - Группировка товарных ограничений, для
//                                                                                 которой установлена настройка.
//                 МетодОбеспеченияПотребностей - ПеречислениеСсылка.МетодОбеспеченияПотребностей - Значение параметра
//                     "Метод обеспечения потребностей".
//                 СтраховоеКоличествоЗапаса - Число - Значение параметра "Страховое количество запаса".
//                 МинимальноеКоличествоЗапаса- Число - Значение параметра "Минимальное количество запаса".
//                 МаксимальноеКоличествоЗапаса- Число - Значение параметра "Максимальное количество запаса".
//                 НормаПотребления - Число - Значение параметра "Норма потребления".
//                 УпаковкаЗаказа - СправочникСсылка.УпаковкиЕдиницыИзмерения - Значение параметра "Упаковка заказа".
//                 ОбеспечениеЗаказовПриПоддержанииЗапаса - ПеречислениеСсылка.ОбеспечениеЗаказовПриПоддержанииЗапаса -
//                     Значение параметра "Обеспечение заказов при поддержании запаса".
//
Функция ПараметрыПоддержанияЗапасаТовараНаСкладе(Ключ) Экспорт
	
	Если Ключ.Свойство("Группировка") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТоварныеОграничения.ГруппировкаТоварныхОграничений,
			|	ТоварныеОграничения.СтраховоеКоличествоЗапаса,
			|	ТоварныеОграничения.МинимальноеКоличествоЗапаса,
			|	ТоварныеОграничения.МаксимальноеКоличествоЗапаса,
			|	ТоварныеОграничения.НормаПотребления,
			|	ТоварныеОграничения.МетодОбеспеченияПотребностей,
			|	ТоварныеОграничения.УпаковкаЗаказа,
			|	ТоварныеОграничения.ОбеспечениеЗаказовПриПоддержанииЗапаса,
			|	""ДЛЯ_ГРУППЫ_ТОВАРОВ"" КАК СпособУказанияНастройки
			|ИЗ
			|	РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
			|ГДЕ
			|	ТоварныеОграничения.ГруппировкаТоварныхОграничений = &ГруппировкаТоварныхОграничений
			|	И ТоварныеОграничения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|	И ТоварныеОграничения.ЭтоДействующийПараметр";
		
		Запрос.УстановитьПараметр("ГруппировкаТоварныхОграничений", Ключ.ГруппировкаТоварныхОграничений);
		Выборка = Запрос.Выполнить().Выбрать();
	
	Иначе
	
		Запрос = Новый Запрос();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	&Номенклатура   КАК Номенклатура,
		|	&Характеристика КАК Характеристика,
		|	&Склад          КАК Склад
		|ПОМЕСТИТЬ ВтКлючЗаписи
		|;
		|
		|////////////////////////////////////////
		|ВЫБРАТЬ
		|	&СпособУказанияНастройки                                   КАК СпособУказанияНастройки,
		|	ТоварныеОграничения.ГруппировкаТоварныхОграничений                            КАК ГруппировкаТоварныхОграничений,
		|	ТоварныеОграничения.СтраховоеКоличествоЗапаса              КАК СтраховоеКоличествоЗапаса,
		|	ТоварныеОграничения.МинимальноеКоличествоЗапаса            КАК МинимальноеКоличествоЗапаса,
		|	ТоварныеОграничения.МаксимальноеКоличествоЗапаса           КАК МаксимальноеКоличествоЗапаса,
		|	ТоварныеОграничения.НормаПотребления                       КАК НормаПотребления,
		|	ТоварныеОграничения.МетодОбеспеченияПотребностей           КАК МетодОбеспеченияПотребностей,
		|	ТоварныеОграничения.УпаковкаЗаказа                         КАК УпаковкаЗаказа,
		|	ТоварныеОграничения.ОбеспечениеЗаказовПриПоддержанииЗапаса КАК ОбеспечениеЗаказовПриПоддержанииЗапаса
		|ИЗ
		|	ВтКлючЗаписи КАК КлючЗаписи
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
		|		ПО &ПодстановкаТоварногоОграничения";
		
		Запрос.Текст = ПодставитьСоединение(
			Запрос.Текст,
			"ПодстановкаТоварногоОграничения",
			"КлючЗаписи.Номенклатура,КлючЗаписи.Характеристика,КлючЗаписи.Склад");
			
		// Вычисление поля "Способ указания настройки", использует служебные таблицы функции ПодставитьСоединение(...).
		ПодстановкаСпособУказанияНастройки =
			"ВЫБОР КОГДА НЕ НастройкаДетальная.Номенклатура ЕСТЬ NULL ТОГДА
			|			ВЫБОР КОГДА НастройкаДетальная.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|					И НастройкаДетальная.Номенклатура.ИспользованиеХарактеристик 
			|					<> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать) ТОГДА
			|				""ДЛЯ_ХАРАКТЕРИСТИК_ТОВАРА""
			|			ИНАЧЕ
			|				""ДЛЯ_ТОВАРА""
			|			КОНЕЦ
			|		КОГДА НЕ ПринадлежностьГруппе.Номенклатура ЕСТЬ NULL
			|				ИЛИ НЕ НастройкаГруппировкиОбщейНастройки.Номенклатура ЕСТЬ NULL ТОГДА
			|			""ДЛЯ_ГРУППЫ_ТОВАРОВ""
			|		КОГДА НЕ НастройкаОбщая.Номенклатура ЕСТЬ NULL ТОГДА
			|			""ДЛЯ_ХАРАКТЕРИСТИК_ТОВАРА""
			|		ИНАЧЕ
			|			NULL
			|	КОНЕЦ";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СпособУказанияНастройки", ПодстановкаСпособУказанияНастройки);
		
		Запрос.УстановитьПараметр("Номенклатура",   Ключ.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Ключ.Характеристика);
		Запрос.УстановитьПараметр("Склад",          Ключ.Склад);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
	КонецЕсли;
	
	ЗначениеНастройки = Новый Структура();
	ЗначениеНастройки.Вставить("СпособУказанияНастройки", "НЕ_УКАЗАНА");
	ЗначениеНастройки.Вставить("ГруппировкаТоварныхОграничений", Справочники.ГруппировкиТоварныхОграничений.ПустаяСсылка());
	ЗначениеНастройки.Вставить("МетодОбеспеченияПотребностей", Перечисления.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ);
	ЗначениеНастройки.Вставить("СтраховоеКоличествоЗапаса", 0.000);
	ЗначениеНастройки.Вставить("МинимальноеКоличествоЗапаса", 0.000);
	ЗначениеНастройки.Вставить("МаксимальноеКоличествоЗапаса", 0.000);
	ЗначениеНастройки.Вставить("НормаПотребления", 0.000);
	ЗначениеНастройки.Вставить("УпаковкаЗаказа", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	ЗначениеНастройки.Вставить("ОбеспечениеЗаказовПриПоддержанииЗапаса", Перечисления.ОбеспечениеЗаказовПриПоддержанииЗапаса.ЗаСчетЗапасов);
	
	Если Выборка.Следующий() И Выборка.СпособУказанияНастройки <> NULL Тогда
		
		ЗаполнитьЗначенияСвойств(ЗначениеНастройки, Выборка);
		
	КонецЕсли;
	
	Если ЗначениеНастройки.МетодОбеспеченияПотребностей <> Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоНорме Тогда
		ЗначениеНастройки.НормаПотребления = 0.000;
	КонецЕсли;
	
	Возврат ЗначениеНастройки;
	
КонецФункции

// Функция-конструктор структуры, описывающей запись группировки в регистре.
//
// Параметры:
//		Группировка - СправочникСсылка.ГруппировкиТоварныхОграничений - Группировка которая определяет ключ записи.
//
// Возвращаемое значение:
//		Структура - Структура с полями:
//			ТипКлюча	- Строка - Служебный реквизит.
//			ГруппировкаТоварныхОграничений	- Справочник.ГруппировкиТоварныхограничений.
//
Функция КлючЗаписиГруппировки(Группировка = Неопределено) Экспорт
	Ключ = Новый Структура;
	Ключ.Вставить("ТипКлюча",		"Группировка");
	Ключ.Вставить("ГруппировкаТоварныхОграничений",	?(Группировка <> Неопределено, Группировка,
		Справочники.ГруппировкиТоварныхОграничений.ПустаяСсылка()));
	Возврат Ключ;
КонецФункции

// Функция-конструктор структуры, описывающей запись номенклатуры (общая настройка для всех характеристик) в регистре.
//
// Возвращаемое значение:
//		Структура - Структура с полями:
//			ТипКлюча		- Строка - Служебный реквизит.
//			Номенклатура	- СправочникСсылка.Номенклатура.
//			Склад			- СправочникСсылка.Склады.
//
Функция КлючЗаписиНоменклатуры() Экспорт
	Ключ = Новый Структура;
	Ключ.Вставить("ТипКлюча",		"ОбщаяНастройка");
	Ключ.Вставить("Номенклатура",	Справочники.ГруппировкиТоварныхОграничений.ПустаяСсылка());
	Ключ.Вставить("Склад",			Справочники.Склады.ПустаяСсылка());
	Возврат Ключ;
КонецФункции

// Функция-конструктор структуры, описывающей запись номенклатуры с характеристикой в регистре.
//
// Возвращаемое значение:
//		Структура - Структура с полями:
//			ТипКлюча		- Строка - Служебный реквизит.
//			Номенклатура	- СправочникСсылка.Номенклатура.
//			Характеристика	- СправочникСсылка.ХарактеристикиНоменклатуры.
//			Склад			- СправочникСсылка.Склады.
//
Функция КлючЗаписиХарактеристики() Экспорт
	Ключ = Новый Структура;
	Ключ.Вставить("ТипКлюча",		"ДетальнаяНастройка");
	Ключ.Вставить("Номенклатура",	Справочники.ГруппировкиТоварныхОграничений.ПустаяСсылка());
	Ключ.Вставить("Характеристика",	Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Ключ.Вставить("Склад",			Справочники.Склады.ПустаяСсылка());
	Возврат Ключ;
КонецФункции

// Возвращает массив ключей записей номенклатуры и характеристик входящих в указанную группировку.
//
// Параметры:
//		Группировка		- СправочникСсылка.ГруппировкиТоварныхОграничений - Группировка по которой возвращаются ключи записей.
//		Склад			- СправочникСсылка.Склады - Ограничение выборки по складу.
//
// Возвращаемое значение:
//		Массив - Содержит КлючЗаписи товаров (см. КлючЗаписиНоменклатуры(), КлючЗаписиХарактеристики()).
//
Функция КлючиЗаписейТовараВГруппировке(Группировка, Склад = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварныеОграничения.Склад,
		|	ТоварныеОграничения.Номенклатура,
		|	ТоварныеОграничения.Характеристика
		|ИЗ
		|	РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
		|ГДЕ
		|	ТоварныеОграничения.ГруппировкаТоварныхОграничений = &ГруппировкаТоварныхОграничений
		|	И ТоварныеОграничения.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ГруппировкаТоварныхОграничений", Группировка);
	
	Если ЗначениеЗаполнено(Склад) Тогда
		Запрос.Текст = Запрос.Текст + " И ТоварныеОграничения.Склад = &Склад";
		Запрос.УстановитьПараметр("Склад", Склад);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	КлючиЗаписей = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Характеристика) Тогда
			КлючЗаписиТовара = РегистрыСведений.ТоварныеОграничения.КлючЗаписиХарактеристики();
		Иначе
			КлючЗаписиТовара = РегистрыСведений.ТоварныеОграничения.КлючЗаписиНоменклатуры();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(КлючЗаписиТовара, Выборка);
		КлючиЗаписей.Добавить(КлючЗаписиТовара);
	КонецЦикла;
	
	Возврат КлючиЗаписей;
	
КонецФункции

// Функция-конструктор структуры, описывающей параметры поддержания запаса "Min-max".
//
// Возвращаемое значение:
//		Структура - Структура с полями:
//			МинимальноеКоличествоЗапаса				- Число.
//			МаксимальноеКоличествоЗапаса			- Число.
//			ОбеспечениеЗаказовПриПоддержанииЗапаса	- ПеречислениеСсылка.ОбеспечениеЗаказовПриПоддержанииЗапаса.
//
Функция ПараметрыМинМакс() Экспорт
	Параметры = Новый Структура();
	Параметры.Вставить("МинимальноеКоличествоЗапаса",	0);
	Параметры.Вставить("МаксимальноеКоличествоЗапаса",	0);
	Параметры.Вставить("ОбеспечениеЗаказовПриПоддержанииЗапаса",
		Перечисления.ОбеспечениеЗаказовПриПоддержанииЗапаса.ЗаСчетЗапасов);
	Возврат Параметры;
КонецФункции

// Функция-конструктор структуры, описывающей параметры поддержания запаса "Расчет по норме".
//
// Возвращаемое значение:
//	Структура - Структура с полями:
//		* НормаПотребления - Число - Норма потребления.
//		* СтраховоеКоличествоЗапаса - Число - Страховой запас.
//		* ОбеспечениеЗаказовПриПоддержанииЗапаса - ПеречислениеСсылка.ОбеспечениеЗаказовПриПоддержанииЗапаса - Вариант обеспечения заказов при поддержании запаса
//
Функция ПараметрыРасчетПоНорме() Экспорт
	Параметры = Новый Структура();
	Параметры.Вставить("НормаПотребления",			0);
	Параметры.Вставить("СтраховоеКоличествоЗапаса",	0);
	Параметры.Вставить("ОбеспечениеЗаказовПриПоддержанииЗапаса",
		Перечисления.ОбеспечениеЗаказовПриПоддержанииЗапаса.ЗаСчетЗапасов);
	Возврат Параметры;
КонецФункции

// Функция-конструктор структуры, описывающей параметры поддержания запаса "Расчет по статистике".
//
// Возвращаемое значение:
//	Структура - Структура с полями:
//		* СтраховоеКоличествоЗапаса - Число - Страховой запас.
//		* ОбеспечениеЗаказовПриПоддержанииЗапаса - ПеречислениеСсылка.ОбеспечениеЗаказовПриПоддержанииЗапаса - Вариант обеспечения заказов при поддержании запаса
//
Функция ПараметрыРасчетПоСтатистике() Экспорт
	Параметры = Новый Структура();
	Параметры.Вставить("СтраховоеКоличествоЗапаса",	0);
	Параметры.Вставить("ОбеспечениеЗаказовПриПоддержанииЗапаса",
		Перечисления.ОбеспечениеЗаказовПриПоддержанииЗапаса.ЗаСчетЗапасов);
	Возврат Параметры;
КонецФункции

// Добавляет поддержание запаса по методу "МинМакс" для товара на складе или группировки.
// Если не переданы параметры МинМакса и по ключу уже ранее поддерживался запас, то старые параметры запаса не обнуляются.
// Параметры:
//		КлючиЗаписи - Массив Из Структура, Структура -
//		ПараметрыМинМакс - см. ПараметрыМинМакс.
//
Процедура ДобавитьПоддержаниеЗапасаМинМакс(КлючиЗаписи, ПараметрыМинМакс = Неопределено) Экспорт
	
	Если ТипЗнч(КлючиЗаписи) = Тип("Структура") Тогда
		Ключ = КлючиЗаписи;
		КлючиЗаписи = Новый Массив(1);
		КлючиЗаписи[0] = Ключ;
	КонецЕсли;
	
	ОбнулятьРанееЗаданныйМинМакс = Истина;
	Если ПараметрыМинМакс = Неопределено Тогда
		ОбнулятьРанееЗаданныйМинМакс = Ложь;
		ПараметрыМинМакс = ПараметрыМинМакс();
	КонецЕсли;
	
	ПараметрыДляЗаписи = ПустыеПараметрыТоварногоОграничения();
	ЗаполнитьЗначенияСвойств(ПараметрыДляЗаписи, ПараметрыМинМакс, 
		"МинимальноеКоличествоЗапаса, МаксимальноеКоличествоЗапаса, ОбеспечениеЗаказовПриПоддержанииЗапаса");
	ПараметрыДляЗаписи.МетодОбеспеченияПотребностей = Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаМинМакс;
	
	ТаблицаТоваров		= ТаблицаТоваров();
	ТаблицаГруппировок	= ТаблицаГруппировок();
	Для каждого Ключ Из КлючиЗаписи Цикл
		Если Ключ.ТипКлюча = "ДетальнаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Характеристика	= Ключ.Характеристика;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "ОбщаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "Группировка" Тогда
			ЗаписьТаблицы = ТаблицаГруппировок.Добавить();
			ЗаписьТаблицы.ГруппировкаТоварныхОграничений = Ключ.ГруппировкаТоварныхОграничений;
		Иначе
			ВызватьИсключение НСтр("ru = 'Недопустимый тип ключа записи!'");;
		КонецЕсли;
	КонецЦикла;
	
	Записать(ТаблицаТоваров, ТаблицаГруппировок, ПараметрыДляЗаписи, ОбнулятьРанееЗаданныйМинМакс);
	
КонецПроцедуры

// Добавляет поддержание запаса по методу "Расчет по норме" для товара на складе или группировки.
//
// Параметры:
//		КлючиЗаписи - Массив Из Структура, Структура -
//		ПараметрыПоНорме - см. ПараметрыРасчетПоНорме.
//
Процедура ДобавитьПоддержаниеЗапасаРасчетПоНорме(КлючиЗаписи, ПараметрыПоНорме) Экспорт
	
	Если ТипЗнч(КлючиЗаписи) = Тип("Структура") Тогда
		Ключ = КлючиЗаписи;
		КлючиЗаписи = Новый Массив(1);
		КлючиЗаписи[0] = Ключ;
	КонецЕсли;
	
	ПараметрыДляЗаписи = ПустыеПараметрыТоварногоОграничения();
	ЗаполнитьЗначенияСвойств(ПараметрыДляЗаписи, ПараметрыПоНорме,
		"НормаПотребления, СтраховоеКоличествоЗапаса, ОбеспечениеЗаказовПриПоддержанииЗапаса");
	ПараметрыДляЗаписи.МетодОбеспеченияПотребностей = Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоНорме;
	
	ТаблицаТоваров		= ТаблицаТоваров();
	ТаблицаГруппировок	= ТаблицаГруппировок();
	Для каждого Ключ Из КлючиЗаписи Цикл
		Если Ключ.ТипКлюча = "ДетальнаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Характеристика	= Ключ.Характеристика;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "ОбщаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "Группировка" Тогда
			ЗаписьТаблицы = ТаблицаГруппировок.Добавить();
			ЗаписьТаблицы.ГруппировкаТоварныхОграничений		= Ключ.ГруппировкаТоварныхОграничений;
		Иначе
			ВызватьИсключение НСтр("ru = 'Недопустимый тип ключа записи!'");;
		КонецЕсли;
	КонецЦикла;
	
	Записать(ТаблицаТоваров, ТаблицаГруппировок, ПараметрыДляЗаписи, Истина);
	
КонецПроцедуры

// Добавляет поддержание запаса по методу "Расчет по статистике" для товара на складе или группировки.
//
// Параметры:
//		КлючиЗаписи - Массив Из Структура, Структура -
//		ПараметрыПоСтатистике - см. ПараметрыРасчетПоСтатистике.
//
Процедура ДобавитьПоддержаниеЗапасаРасчетПоСтатистике(КлючиЗаписи, ПараметрыПоСтатистике) Экспорт
	
	Если ТипЗнч(КлючиЗаписи) = Тип("Структура") Тогда
		Ключ = КлючиЗаписи;
		КлючиЗаписи = Новый Массив(1);
		КлючиЗаписи[0] = Ключ;
	КонецЕсли;
	
	ПараметрыДляЗаписи = ПустыеПараметрыТоварногоОграничения();
	ЗаполнитьЗначенияСвойств(ПараметрыДляЗаписи, ПараметрыПоСтатистике,
		"СтраховоеКоличествоЗапаса, ОбеспечениеЗаказовПриПоддержанииЗапаса");
	ПараметрыДляЗаписи.МетодОбеспеченияПотребностей = Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоСтатистике;
	
	ТаблицаТоваров		= ТаблицаТоваров();
	ТаблицаГруппировок	= ТаблицаГруппировок();
	Для каждого Ключ Из КлючиЗаписи Цикл
		Если Ключ.ТипКлюча = "ДетальнаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Характеристика	= Ключ.Характеристика;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "ОбщаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "Группировка" Тогда
			ЗаписьТаблицы = ТаблицаГруппировок.Добавить();
			ЗаписьТаблицы.ГруппировкаТоварныхОграничений		= Ключ.ГруппировкаТоварныхОграничений;
		Иначе
			ВызватьИсключение НСтр("ru = 'Недопустимый тип ключа записи!'");;
		КонецЕсли;
	КонецЦикла;
	
	Записать(ТаблицаТоваров, ТаблицаГруппировок, ПараметрыДляЗаписи, Истина);
	
КонецПроцедуры

// Добавляет поддержание запаса по параметрам группировки для товара на складе.
//
// Параметры:
//		КлючиЗаписи - Массив Из Структура, Структура -
//		КлючГруппировки - см. КлючЗаписиГруппировки.
//
Процедура ДобавитьПоддержаниеЗапасаГруппировкой(КлючиЗаписи, КлючГруппировки) Экспорт
	
	Если ТипЗнч(КлючиЗаписи) = Тип("Структура") Тогда
		Ключ = КлючиЗаписи;
		КлючиЗаписи = Новый Массив(1);
		КлючиЗаписи[0] = Ключ;
	КонецЕсли;
	
	Если КлючГруппировки.ТипКлюча = "Группировка" Тогда
		ПараметрыДляЗаписи = ПустыеПараметрыТоварногоОграничения();
		ПараметрыДляЗаписи.Вставить("ГруппировкаТоварныхОграничений", КлючГруппировки.ГруппировкаТоварныхОграничений);
	Иначе
		ВызватьИсключение НСтр("ru = 'Недопустимый тип ключа записи группировки!'");
	КонецЕсли;
	
	ТаблицаТоваров = ТаблицаТоваров();
	Для каждого Ключ Из КлючиЗаписи Цикл
		ЗаписьТаблицы = ТаблицаТоваров.Добавить();
		Если Ключ.ТипКлюча = "ДетальнаяНастройка" Тогда
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Характеристика	= Ключ.Характеристика;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "ОбщаяНастройка" Тогда
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		Иначе
			ВызватьИсключение НСтр("ru = 'Недопустимый тип ключа записи!'");
		КонецЕсли;
	КонецЦикла;
	
	// Если нет записи для данной группировки, то создадим её
	ТаблицаГруппировок = ТаблицаГруппировок();
	Если ЗначениеЗаполнено(КлючГруппировки.ГруппировкаТоварныхОграничений) Тогда
		ЗаписьТаблицы = ТаблицаГруппировок.Добавить();
		ЗаписьТаблицы.ГруппировкаТоварныхОграничений = КлючГруппировки.ГруппировкаТоварныхОграничений;
	КонецЕсли;
	
	Записать(ТаблицаТоваров, ТаблицаГруппировок, ПараметрыДляЗаписи, Истина);
	
КонецПроцедуры

// Удаляет поддержание запаса для товара на складе или группировки.
//
// Параметры:
//		КлючиЗаписи - Массив Из Структура, Структура -
//
Процедура УдалитьПоддержаниеЗапаса(КлючиЗаписи) Экспорт

	Если ТипЗнч(КлючиЗаписи) = Тип("Структура") Тогда
		Ключ = КлючиЗаписи;
		КлючиЗаписи = Новый Массив(1);
		КлючиЗаписи[0] = Ключ;
	КонецЕсли;
	
	ТаблицаТоваров		= ТаблицаТоваров();
	ТаблицаГруппировок	= ТаблицаГруппировок();
	Для каждого Ключ Из КлючиЗаписи Цикл
		Если Ключ.ТипКлюча = "ДетальнаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Характеристика	= Ключ.Характеристика;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "ОбщаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "Группировка" Тогда
			ЗаписьТаблицы = ТаблицаГруппировок.Добавить();
			ЗаписьТаблицы.ГруппировкаТоварныхОграничений		= Ключ.ГруппировкаТоварныхОграничений;
		Иначе
			ВызватьИсключение НСтр("ru = 'Недопустимый тип ключа записи!'");;
		КонецЕсли;
	КонецЦикла;
	
	Удалить(ТаблицаТоваров, ТаблицаГруппировок);

КонецПроцедуры

// Устанавливает поддержание запаса для товара с характеристикой на складе согласно общей настройки номенклатуры.
//
// Параметры:
//		КлючиЗаписиХарактеристик - см. КлючЗаписиХарактеристики,
///					- Массив Из - см. КлючЗаписиХарактеристики.
//
Процедура УстановитьПоддержаниеЗапасаКакДляНоменклатуры(КлючиЗаписиХарактеристик) Экспорт

	Если ТипЗнч(КлючиЗаписиХарактеристик) = Тип("Структура") Тогда
		Ключ = КлючиЗаписиХарактеристик;
		КлючиЗаписиХарактеристик = Новый Массив(1);
		КлючиЗаписиХарактеристик[0] = Ключ;
	КонецЕсли;
	
	ТаблицаТоваров		= ТаблицаТоваров();
	Для каждого Ключ Из КлючиЗаписиХарактеристик Цикл
		Если Ключ.ТипКлюча = "ДетальнаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Характеристика	= Ключ.Характеристика;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		Иначе
			ВызватьИсключение НСтр("ru = 'Недопустимый тип ключа записи характеристики!'");;
		КонецЕсли;
	КонецЦикла;
	
	Удалить(ТаблицаТоваров, ТаблицаГруппировок(), Истина);

КонецПроцедуры

// Заполняет указанный параметр поддержания запаса для товаров на складе или группировк.
// Заполнение присходит только для тех записей, для которых это имеет смысл (исходя из метода обеспечения).
//
// Параметры:
//		КлючиЗаписи - Массив Из Структура, Структура -
//		ИмяПараметра	- Строка - Наименование параметра запонения.
//		Значение	- Число, ПеречислениеСсылка.ОбеспечениеЗаказовПриПоддержанииЗапаса - Значение параметра заполнения.
// Возвращаемое значение:
//		Число - Количесто заполненных записей.
//
Функция ЗаполнитьПараметрПоддержанияЗапаса(КлючиЗаписи, ИмяПараметра, Значение) Экспорт
	
	Если ТипЗнч(КлючиЗаписи) = Тип("Структура") Тогда
		Ключ = КлючиЗаписи;
		КлючиЗаписи = Новый Массив(1);
		КлючиЗаписи[0] = Ключ;
	КонецЕсли;
	
	МетодыДляОтбора = Новый Массив;
	Если ИмяПараметра = "МинимальноеКоличествоЗапаса" ИЛИ ИмяПараметра = "МаксимальноеКоличествоЗапаса" Тогда
		МетодыДляОтбора.Добавить(Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаМинМакс);
	ИначеЕсли ИмяПараметра = "НормаПотребления" Тогда
		МетодыДляОтбора.Добавить(Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоНорме);
	ИначеЕсли ИмяПараметра = "СтраховоеКоличествоЗапаса" Тогда
		МетодыДляОтбора.Добавить(Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоНорме);
		МетодыДляОтбора.Добавить(Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоСтатистике);
	ИначеЕсли ИмяПараметра = "ОбеспечениеЗаказовПриПоддержанииЗапаса" Тогда
		МетодыДляОтбора.Добавить(Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаМинМакс);
		МетодыДляОтбора.Добавить(Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоНорме);
		МетодыДляОтбора.Добавить(Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоСтатистике);
	Иначе
		ВызватьИсключение НСтр("ru = 'Некорректно задано имя параметра!'");
	КонецЕсли;
	
	ПараметрыДляЗаписи = Новый Структура;
	ПараметрыДляЗаписи.Вставить(ИмяПараметра, Значение);
	
	ТаблицаТоваров		= ТаблицаТоваров();
	ТаблицаГруппировок	= ТаблицаГруппировок();
	Для каждого Ключ Из КлючиЗаписи Цикл
		Если Ключ.ТипКлюча = "ДетальнаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Характеристика	= Ключ.Характеристика;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "ОбщаяНастройка" Тогда
			ЗаписьТаблицы = ТаблицаТоваров.Добавить();
			ЗаписьТаблицы.Номенклатура		= Ключ.Номенклатура;
			ЗаписьТаблицы.Склад				= Ключ.Склад;
		ИначеЕсли Ключ.ТипКлюча = "Группировка" Тогда
			ЗаписьТаблицы = ТаблицаГруппировок.Добавить();
			ЗаписьТаблицы.ГруппировкаТоварныхОграничений		= Ключ.ГруппировкаТоварныхОграничений;
		Иначе
			ВызватьИсключение НСтр("ru = 'Недопустимый тип ключа записи!'");;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Записать(ТаблицаТоваров, ТаблицаГруппировок, ПараметрыДляЗаписи, Истина, МетодыДляОтбора);
	
КонецФункции


// Задает упаковку заказа для товара на складе.
//
// Параметры:
//  Номенклатура	- СправочникСсылка.Номенклатура - Номенклатура товара,
//  Характеристика	- СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика товара,
//  Склад			- СправочникСсылка.Склады - Склад.
//  УпаковкаЗаказа  - СправочникСсылка.УпаковкиЕдиницыИзмерения - Упаковка заказа.
//
Процедура ЗадатьУпаковкуТовара(Номенклатура, Характеристика, Склад, УпаковкаЗаказа) Экспорт

	НаборЗаписей = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);
	НаборЗаписей.Отбор.Характеристика.Установить(Характеристика);
	НаборЗаписей.Отбор.Склад.Установить(Склад);
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
	ЭлементБлокировки.УстановитьЗначение("Номенклатура",	Номенклатура);
	ЭлементБлокировки.УстановитьЗначение("Характеристика",	Характеристика);
	ЭлементБлокировки.УстановитьЗначение("Склад",			Склад);
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка.Заблокировать();
		
		НаборЗаписей.Прочитать();
		
		ОчисткаУпаковки = НЕ ЗначениеЗаполнено(УпаковкаЗаказа);
		Записывать = Ложь;
		Если НаборЗаписей.Количество() = 0 Тогда
			Если Не ОчисткаУпаковки Тогда
				ЗаписьРегистра = НаборЗаписей.Добавить();
				ЗаписьРегистра.Номенклатура		= Номенклатура;
				ЗаписьРегистра.Характеристика	= Характеристика;
				ЗаписьРегистра.Склад			= Склад;
				ЗаписьРегистра.МетодОбеспеченияПотребностей	= Перечисления.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ;
				ЗаписьРегистра.УпаковкаЗаказа = УпаковкаЗаказа;
				ЗаписьРегистра.ЭтоДействующийПараметр	= Ложь;
				Записывать = Истина;
			КонецЕсли;
		ИначеЕсли НЕ НаборЗаписей[0].ЭтоДействующийПараметр И ОчисткаУпаковки И
			НЕ НаборЗаписей[0].ЕстьРекомендацияПоИзменению Тогда
			НаборЗаписей.Очистить();
			Записывать = Истина;
		ИначеЕсли НаборЗаписей[0].УпаковкаЗаказа <> УпаковкаЗаказа Тогда
			НаборЗаписей[0].УпаковкаЗаказа = УпаковкаЗаказа;
			Записывать = Истина;
		КонецЕсли;
		Если Записывать Тогда
			НаборЗаписей.Записать();
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Задание упаковки заказа для товара на складе'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Обновляет данные статистики потребления для списка товаров на складах.
//
// Параметры:
//	МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц - менеджер с временной таблицей ВтТовары.
//
Процедура РассчитатьСтатистикуПотребленияТоваров(МенеджерВременныхТаблиц) Экспорт
	
	Курсор = Новый Структура("Номенклатура, Характеристика, Склад");
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("ДатаРасчетаРекомендаций", ТекущаяДатаСеанса());
	ОбеспечениеСервер.УстановитьПараметрыЗапросаРасчетаСтатистики(Запрос);
	ОбеспечениеСервер.ДобавитьВременнуюТаблицуСтатистикиПотребления(Запрос, "ВтТовары");
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Истина Цикл
		
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 100
			|	Т.Номенклатура КАК Номенклатура,
			|	Т.Характеристика КАК Характеристика,
			|	Т.Склад КАК Склад
			|ПОМЕСТИТЬ ТоварыПорция
			|ИЗ
			|	ВтТовары КАК Т
			|ГДЕ
			|	Т.Номенклатура >= &Номенклатура
			|	И (Т.Номенклатура > &Номенклатура ИЛИ Т.Характеристика >= &Характеристика)
			|	И (Т.Номенклатура > &Номенклатура ИЛИ Т.Характеристика > &Характеристика ИЛИ Т.Склад > &Склад)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номенклатура,
			|	Характеристика,
			|	Склад
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|// Блокировка изменяемых записей
			|ВЫБРАТЬ
			|	ТоварыПорция.Номенклатура КАК Номенклатура,
			|	ТоварыПорция.Характеристика КАК Характеристика,
			|	ТоварыПорция.Склад КАК Склад
			|ИЗ
			|	ТоварыПорция КАК ТоварыПорция
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|// Блокировка записей общих настроек
			|ВЫБРАТЬ
			|	ТоварыПорция.Номенклатура,
			|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
			|	ТоварыПорция.Склад
			|ИЗ
			|	ТоварыПорция КАК ТоварыПорция
			|ГДЕ
			|	ТоварыПорция.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|// Блокировка группировок
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
			|	ТоварыПорция.Склад КАК Склад,
			|	ТоварныеОграничения.ГруппировкаТоварныхОграничений КАК ГруппировкаТоварныхОграничений
			|ИЗ
			|	ТоварыПорция КАК ТоварыПорция
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
			|		ПО ТоварыПорция.Номенклатура = ТоварныеОграничения.Номенклатура
			|		И ТоварыПорция.Склад = ТоварныеОграничения.Склад
			|ГДЕ
			|	ТоварныеОграничения.ГруппировкаТоварныхОграничений <> ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)";
		
		Запрос.УстановитьПараметр("Номенклатура",	Курсор.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика",	Курсор.Характеристика);
		Запрос.УстановитьПараметр("Склад",			Курсор.Склад);
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		Если РезультатыЗапроса[1].Пустой() Тогда
			Прервать;
		КонецЕсли;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
			ЭлементБлокировки.ИсточникДанных = РезультатыЗапроса[1];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",		"Номенклатура");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика",	"Характеристика");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",			"Склад");
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
			ЭлементБлокировки.ИсточникДанных = РезультатыЗапроса[2];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",		"Номенклатура");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",			"Склад");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГруппировкаТоварныхОграничений",		"ГруппировкаТоварныхОграничений");
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
			ЭлементБлокировки.ИсточникДанных = РезультатыЗапроса[1];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",		"Номенклатура");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",			"Склад");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
			ЭлементБлокировки.ИсточникДанных = РезультатыЗапроса[2];
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",			"Склад");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГруппировкаТоварныхОграничений",		"ГруппировкаТоварныхОграничений");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
			
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Т.Номенклатура   КАК Номенклатура,
				|	Т.Характеристика КАК Характеристика,
				|	Т.Склад          КАК Склад,
				|
				|	ТоварныеОграничения.ГруппировкаТоварныхОграничений                            КАК ГруппировкаТоварныхОграничений,
				|	ТоварныеОграничения.МетодОбеспеченияПотребностей           КАК МетодОбеспеченияПотребностей,
				|	ТоварныеОграничения.МинимальноеКоличествоЗапаса            КАК МинимальноеКоличествоЗапаса,
				|	ТоварныеОграничения.МаксимальноеКоличествоЗапаса           КАК МаксимальноеКоличествоЗапаса,
				|	ТоварныеОграничения.НормаПотребления                       КАК НормаПотребления,
				|	ТоварныеОграничения.СтраховоеКоличествоЗапаса              КАК СтраховоеКоличествоЗапаса,
				|	ТоварныеОграничения.ОбеспечениеЗаказовПриПоддержанииЗапаса КАК ОбеспечениеЗаказовПриПоддержанииЗапаса,
				|	ТоварныеОграничения.УпаковкаЗаказа                         КАК УпаковкаЗаказа,
				|
				|	ТоварныеОграничения.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
				|	ТоварныеОграничения.ЭтоДействующийПараметр    КАК ЭтоДействующийПараметр,
				|
				|	ЕСТЬNULL(Статистика.СреднедневноеПотребление, 0) КАК СреднедневноеПотребление,
				|	ЕСТЬNULL(Статистика.ДисперсияПотребления, 0)     КАК ДисперсияПотребления,
				|	&ДатаРасчетаРекомендаций                         КАК ДатаРасчетаРекомендаций,
				|
				|	ТоварныеОграничения.Номенклатура ЕСТЬ NULL КАК НоваяЗапись,
				|	НЕ ЕСТЬNULL(ТоварныеОграничения.ЭтоДействующийПараметр, ЛОЖЬ)
				|		И ЕСТЬNULL(Статистика.СреднедневноеПотребление, 0) = 0
				|		И ЕСТЬNULL(ТоварныеОграничения.УпаковкаЗаказа, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК УдалитьЗапись
				|ИЗ
				|	ТоварыПорция КАК Т
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСтатистикаПотребления КАК Статистика
				|		ПО Т.Номенклатура = Статистика.Номенклатура
				|			И Т.Характеристика = Статистика.Характеристика
				|			И Т.Склад = Статистика.Склад
				|			И Статистика.СреднедневноеПотребление > 0
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
				|		ПО Т.Номенклатура = ТоварныеОграничения.Номенклатура
				|			И Т.Характеристика = ТоварныеОграничения.Характеристика
				|			И Т.Склад = ТоварныеОграничения.Склад
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ТоварыПорция";
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			ОбщиеНастройки = ТаблицаОбщихНастроек();
			Группировки = ТаблицаСлужебныхГруппировок();
			
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Курсор, Выборка);
				
				НаборЗаписей = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
				Если НЕ Выборка.УдалитьЗапись Тогда
					ЗаписьРегистра = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
					Если Выборка.НоваяЗапись Тогда
						ЗаписьРегистра.МетодОбеспеченияПотребностей = Перечисления.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ;
						ЗаписьРегистра.ЭтоДействующийПараметр = Ложь;
					КонецЕсли;
					ЗаписьРегистра.СреднееОтклонениеПотребления = Sqrt(Выборка.ДисперсияПотребления);
					
					ОбновитьРекомендациюПоИзменениюЗаписиРегистра(ЗаписьРегистра);
					Если НЕ ЗаписьРегистра.ЭтоДействующийПараметр И Не ЗаписьРегистра.ЕстьРекомендацияПоИзменению
						И НЕ ЗначениеЗаполнено(ЗаписьРегистра.УпаковкаЗаказа) Тогда
						НаборЗаписей.Удалить(ЗаписьРегистра);
					КонецЕсли;
				КонецЕсли;
				
				Если Выборка.НоваяЗапись И НаборЗаписей.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				// Запоминаем для каких из группировычных записей нужно обновить реквизит ЕстьРекомендацияПоИзменению.
				ЗапомнитьГруппировкуДляОбновления(Группировки, Выборка.ГруппировкаТоварныхОграничений, Выборка.Склад,
					?(НаборЗаписей.Количество() > 0, НаборЗаписей[0].ЕстьРекомендацияПоИзменению, Ложь));
				Если ЗначениеЗаполнено(Выборка.Характеристика) Тогда
					ЗапомнитьОбщуюНастройкуДляОбновления(ОбщиеНастройки, Выборка.Номенклатура, Выборка.Склад);
				КонецЕсли;
				
				НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
				НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
				НаборЗаписей.Отбор.Склад.Установить(Выборка.Склад);
				НаборЗаписей.Записать();
				
			КонецЦикла;
			
			// Проверка правильности заблокированных группировок
			ЗаблокированныеГруппировки = РезультатыЗапроса[2].Выгрузить();
			Отбор = Новый Структура("ГруппировкаТоварныхОграничений, Склад");
			Для каждого ЗаписьГруппировки Из Группировки Цикл
				ЗаполнитьЗначенияСвойств(Отбор, ЗаписьГруппировки);
				НайденныеСтроки = ЗаблокированныеГруппировки.НайтиСтроки(Отбор);
				Если НайденныеСтроки.Количество() = 0 Тогда
					ВызватьИсключение НСтр("ru = 'Несоответствие в транзакции заблокированных и изменяемых группировок'");
				КонецЕсли;
			КонецЦикла;
			
			ОбновитьРекомендацииПоИзменениюОбщихНастроек(ОбщиеНастройки, Группировки);
			ОбновитьРекомендацииПоИзменениюГруппировок(Группировки);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Расчет статистики потребления товаров'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Склад)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

// Функция-конструктор структуры, описывающей параметры товарных ограничений.
//
// Возвращаемое значение:
//		Структура - Структура с полями:
//			МетодОбеспеченияПотребностей			- Перечисление.МетодыОбеспеченияПотребностей.
//			МинимальноеКоличествоЗапаса				- Число.
//			МаксимальноеКоличествоЗапаса			- Число.
//			СтраховоеКоличествоЗапаса				- Число.
//			НормаПотребления						- Число.
//			ОбеспечениеЗаказовПриПоддержанииЗапаса	- ПеречислениеСсылка.ОбеспечениеЗаказовПриПоддержанииЗапаса.
//
Функция ПустыеПараметрыТоварногоОграничения()
	ПараметрыТоварногоОграничения = Новый Структура();
	ПараметрыТоварногоОграничения.Вставить("МетодОбеспеченияПотребностей",
		Перечисления.МетодыОбеспеченияПотребностей.ПустаяСсылка());
	ПараметрыТоварногоОграничения.Вставить("МинимальноеКоличествоЗапаса",	0);
	ПараметрыТоварногоОграничения.Вставить("МаксимальноеКоличествоЗапаса",	0);
	ПараметрыТоварногоОграничения.Вставить("СтраховоеКоличествоЗапаса",		0);
	ПараметрыТоварногоОграничения.Вставить("НормаПотребления",				0);
	ПараметрыТоварногоОграничения.Вставить("ОбеспечениеЗаказовПриПоддержанииЗапаса",
		Перечисления.ОбеспечениеЗаказовПриПоддержанииЗапаса.ПустаяСсылка());

	Возврат ПараметрыТоварногоОграничения;
КонецФункции

Функция ТаблицаТоваров()
	ТаблицаЗаписей = Новый ТаблицаЗначений;
	ТаблицаЗаписей.Колонки.Добавить("Номенклатура",		Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаЗаписей.Колонки.Добавить("Характеристика",	Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаЗаписей.Колонки.Добавить("Склад",			Новый ОписаниеТипов("СправочникСсылка.Склады"));
	Возврат ТаблицаЗаписей;
КонецФункции

Функция ТаблицаГруппировок()
	ТаблицаЗаписей = Новый ТаблицаЗначений;
	ТаблицаЗаписей.Колонки.Добавить("ГруппировкаТоварныхОграничений", Новый ОписаниеТипов("СправочникСсылка.ГруппировкиТоварныхОграничений"));
	Возврат ТаблицаЗаписей;
КонецФункции

Функция ТаблицаСлужебныхГруппировок()
	СлужебныеГруппировки = Новый ТаблицаЗначений;
	СлужебныеГруппировки.Колонки.Добавить("ГруппировкаТоварныхОграничений",
		Новый ОписаниеТипов("СправочникСсылка.ГруппировкиТоварныхОграничений"));
	СлужебныеГруппировки.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	СлужебныеГруппировки.Колонки.Добавить("ЕстьРекомендацияПоИзменению", Новый ОписаниеТипов("Булево"));
	Возврат СлужебныеГруппировки;
КонецФункции

Функция ТаблицаОбщихНастроек()
	ОбщиеНастройки = Новый ТаблицаЗначений;
	ОбщиеНастройки.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ОбщиеНастройки.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ОбщиеНастройки.Колонки.Добавить("ЕстьРекомендацияПоИзменению", Новый ОписаниеТипов("Булево"));
	Возврат ОбщиеНастройки;
КонецФункции

Процедура ЗапомнитьГруппировкуДляОбновления(ТаблицаСлужебныхГруппировок, Группировка, Склад,
											ЕстьРекомендацияПоИзменению)
	
	Если НЕ ЗначениеЗаполнено(Группировка) Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("ГруппировкаТоварныхОграничений, Склад", Группировка, Склад);
	НайденныеСтроки = ТаблицаСлужебныхГруппировок.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтрокаГруппировки = НайденныеСтроки[0];
		СтрокаГруппировки.ЕстьРекомендацияПоИзменению	= СтрокаГруппировки.ЕстьРекомендацияПоИзменению
			ИЛИ ЕстьРекомендацияПоИзменению;
	Иначе
		СтрокаГруппировки = ТаблицаСлужебныхГруппировок.Добавить();
		СтрокаГруппировки.ГруппировкаТоварныхОграничений					= Группировка;
		СтрокаГруппировки.Склад							= Склад;
		СтрокаГруппировки.ЕстьРекомендацияПоИзменению	= ЕстьРекомендацияПоИзменению;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗапомнитьОбщуюНастройкуДляОбновления(ТаблицаОбщихНастроек, Номенклатура, Склад)
	
	Отбор = Новый Структура("Номенклатура, Склад", Номенклатура, Склад);
	НайденныеСтроки = ТаблицаОбщихНастроек.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() = 0 Тогда
		ОбщаяНастройка = ТаблицаОбщихНастроек.Добавить();
		ОбщаяНастройка.Номенклатура					= Номенклатура;
		ОбщаяНастройка.Склад						= Склад;
	КонецЕсли;

КонецПроцедуры

Функция Записать(ТаблицаТоваров, ТаблицаГруппировок, ПараметрыДляЗаписи, ОбнулятьРанееЗаданныйМинМакс,
			МетодыДляОтбора = Неопределено)
	
	ТаблицаТоваров.Свернуть("Номенклатура,Характеристика,Склад");
	ТаблицаГруппировок.Свернуть("ГруппировкаТоварныхОграничений");
	
	УстановкаГруппировки = ПараметрыДляЗаписи.Свойство("ГруппировкаТоварныхОграничений");
	ИсключениеИзГруппы = УстановкаГруппировки И ПараметрыДляЗаписи.ГруппировкаТоварныхОграничений.Пустая();
	
	НачатьТранзакцию();
	Попытка
	
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
		ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",		"Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика",	"Характеристика");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",			"Склад");
		
		Для каждого СтрокаТаблицы Из ТаблицаГруппировок Цикл
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура",	Справочники.Номенклатура.ПустаяСсылка());
			ЭлементБлокировки.УстановитьЗначение("Склад",			Справочники.Склады.ПустаяСсылка());
			ЭлементБлокировки.УстановитьЗначение("ГруппировкаТоварныхОграничений",		СтрокаТаблицы.ГруппировкаТоварныхОграничений);
		КонецЦикла;
		
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаТоваров.Номенклатура   КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика КАК Характеристика,
			|	ТаблицаТоваров.Склад          КАК Склад
			|ПОМЕСТИТЬ ВтТаблицаТоваров
			|ИЗ
			|	&ТаблицаТоваров КАК ТаблицаТоваров
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаГруппировок.ГруппировкаТоварныхОграничений КАК ГруппировкаТоварныхОграничений
			|ПОМЕСТИТЬ ВтТаблицаГруппировок
			|ИЗ
			|	&ТаблицаГруппировок КАК ТаблицаГруппировок
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТоваров.Номенклатура     КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика   КАК Характеристика,
			|	ТаблицаТоваров.Склад            КАК Склад,
			|	ТоварныеОграничения.ГруппировкаТоварныхОграничений КАК ГруппировкаТоварныхОграничений,
			|
			|	ЕСТЬNULL(ТоварныеОграниченияГруппировки.МетодОбеспеченияПотребностей,
			|		ТоварныеОграничения.МетодОбеспеченияПотребностей)             КАК МетодОбеспеченияПотребностей,
			|	ЕСТЬNULL(ТоварныеОграниченияГруппировки.МинимальноеКоличествоЗапаса,
			|		ТоварныеОграничения.МинимальноеКоличествоЗапаса)              КАК МинимальноеКоличествоЗапаса,
			|	ЕСТЬNULL(ТоварныеОграниченияГруппировки.МаксимальноеКоличествоЗапаса,
			|		ТоварныеОграничения.МаксимальноеКоличествоЗапаса)             КАК МаксимальноеКоличествоЗапаса,
			|	ЕСТЬNULL(ТоварныеОграниченияГруппировки.НормаПотребления,
			|		ТоварныеОграничения.НормаПотребления)                         КАК НормаПотребления,
			|	ЕСТЬNULL(ТоварныеОграниченияГруппировки.СтраховоеКоличествоЗапаса,
			|		ТоварныеОграничения.СтраховоеКоличествоЗапаса)                КАК СтраховоеКоличествоЗапаса,
			|	ЕСТЬNULL(ТоварныеОграниченияГруппировки.ОбеспечениеЗаказовПриПоддержанииЗапаса,
			|		ТоварныеОграничения.ОбеспечениеЗаказовПриПоддержанииЗапаса)   КАК ОбеспечениеЗаказовПриПоддержанииЗапаса,
			|
			|	ТоварныеОграничения.УпаковкаЗаказа               КАК УпаковкаЗаказа,
			|	ТоварныеОграничения.СреднедневноеПотребление     КАК СреднедневноеПотребление,
			|	ТоварныеОграничения.СреднееОтклонениеПотребления КАК СреднееОтклонениеПотребления,
			|	ТоварныеОграничения.ЕстьРекомендацияПоИзменению  КАК ЕстьРекомендацияПоИзменению,
			|	ТоварныеОграничения.ДатаРасчетаРекомендаций      КАК ДатаРасчетаРекомендаций,
			|	ТоварныеОграничения.РеквизитДопУпорядочивания    КАК РеквизитДопУпорядочивания,
			|
			|	ТаблицаТоваров.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|		ИЛИ ТаблицаТоваров.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать) КАК ЭтоДетальнаяЗапись,
			|	ЛОЖЬ КАК ЭтоГруппировка
			|ИЗ
			|	ВтТаблицаТоваров КАК ТаблицаТоваров
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
			|		ПО ТаблицаТоваров.Номенклатура = ТоварныеОграничения.Номенклатура
			|			И ТаблицаТоваров.Характеристика = ТоварныеОграничения.Характеристика
			|			И ТаблицаТоваров.Склад = ТоварныеОграничения.Склад
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграниченияГруппировки
			|		ПО (ТоварныеОграничения.ГруппировкаТоварныхОграничений = ТоварныеОграниченияГруппировки.ГруппировкаТоварныхОграничений)
			|			И (ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) = ТоварныеОграниченияГруппировки.Номенклатура)
			|			И (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) = ТоварныеОграниченияГруппировки.Склад)
			|ГДЕ
			|	(&БезОтбораПоМетодам
			|			ИЛИ ТоварныеОграничения.МетодОбеспеченияПотребностей В (&МетодыОбеспеченияПотребностей))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
			|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
			|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
			|	ТаблицаГруппировок.ГруппировкаТоварныхОграничений,
			|
			|	ТоварныеОграничения.МетодОбеспеченияПотребностей,
			|	ТоварныеОграничения.МинимальноеКоличествоЗапаса,
			|	ТоварныеОграничения.МаксимальноеКоличествоЗапаса,
			|	ТоварныеОграничения.НормаПотребления,
			|	ТоварныеОграничения.СтраховоеКоличествоЗапаса,
			|	ТоварныеОграничения.ОбеспечениеЗаказовПриПоддержанииЗапаса,
			|
			|	ТоварныеОграничения.УпаковкаЗаказа,
			|	ТоварныеОграничения.СреднедневноеПотребление,
			|	ТоварныеОграничения.СреднееОтклонениеПотребления,
			|	ТоварныеОграничения.ЕстьРекомендацияПоИзменению,
			|	ТоварныеОграничения.ДатаРасчетаРекомендаций,
			|	ТоварныеОграничения.РеквизитДопУпорядочивания,
			|
			|	ЛОЖЬ,
			|	ИСТИНА
			|ИЗ
			|	ВтТаблицаГруппировок КАК ТаблицаГруппировок
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
			|		ПО ТаблицаГруппировок.ГруппировкаТоварныхОграничений = ТоварныеОграничения.ГруппировкаТоварныхОграничений
			|			И (ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) = ТоварныеОграничения.Номенклатура)
			|			И (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) = ТоварныеОграничения.Склад)
			|ГДЕ
			|	(&БезПропускаГруппировки
			|			ИЛИ ТоварныеОграничения.МетодОбеспеченияПотребностей ЕСТЬ NULL)
			|	И (&БезОтбораПоМетодам
			|			ИЛИ ТоварныеОграничения.МетодОбеспеченияПотребностей В (&МетодыОбеспеченияПотребностей))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТоваров.Номенклатура     КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика   КАК Характеристика
			|ИЗ
			|	ВтТаблицаТоваров КАК ТаблицаТоваров
			|ГДЕ
			|	ТаблицаТоваров.Склад.ЦеховаяКладовая";
		
		Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
		Запрос.УстановитьПараметр("ТаблицаГруппировок", ТаблицаГруппировок);
		
		Запрос.УстановитьПараметр("БезОтбораПоМетодам", МетодыДляОтбора = Неопределено);
		Запрос.УстановитьПараметр("МетодыОбеспеченияПотребностей", МетодыДляОтбора);
		
		// Если при установке группировки уже есть запись группировки, не трогаем её
		Запрос.УстановитьПараметр("БезПропускаГруппировки", НЕ УстановкаГруппировки);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.ВыполнитьПакет();
		УстановитьПривилегированныйРежим(Ложь);
		Выборка = Результат[2].Выбрать();
		ВыборкаДляОбновленияДопРеквизита = Результат[3].Выбрать();
		
		НаборЗаписей = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
		ЗаписьРегистра = НаборЗаписей.Добавить();
		КоличествоЗаписей = 0;
		
		ОбщиеНастройки = ТаблицаОбщихНастроек();
		Группировки = ТаблицаСлужебныхГруппировок();
		
		ВсеРесурсы = "СтраховоеКоличествоЗапаса,МинимальноеКоличествоЗапаса,МаксимальноеКоличествоЗапаса,
			|НормаПотребления,МетодОбеспеченияПотребностей,УпаковкаЗаказа,ОбеспечениеЗаказовПриПоддержанииЗапаса,
			|СреднедневноеПотребление,СреднееОтклонениеПотребления";
		
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
			
			Если НЕ ИсключениеИзГруппы Тогда // при исключении из группы берем параметры группировки
				ЗаполнитьЗначенияСвойств(ЗаписьРегистра, ПараметрыДляЗаписи);
				Если Не ОбнулятьРанееЗаданныйМинМакс
					И Выборка.МетодОбеспеченияПотребностей = ЗаписьРегистра.МетодОбеспеченияПотребностей Тогда
						ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка, ВсеРесурсы);
				КонецЕсли;
			Иначе
				ЗаписьРегистра.ГруппировкаТоварныхОграничений = Справочники.ГруппировкиТоварныхОграничений.ПустаяСсылка();
			КонецЕсли;
			
			Если УстановкаГруппировки И Выборка.ЭтоГруппировка Тогда // записи для группировки нет, заполним по умолчанию
				ЗаполнитьЗначенияСвойств(ЗаписьРегистра, ПараметрыМинМакс());
				ЗаписьРегистра.МетодОбеспеченияПотребностей = Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаМинМакс;
			КонецЕсли;
			
			ЗаписьРегистра.ЭтоДействующийПараметр = ЗначениеЗаполнено(Выборка.Характеристика)
				ИЛИ ЗаписьРегистра.МетодОбеспеченияПотребностей <> Перечисления.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ;
				
			Если Выборка.ЭтоДетальнаяЗапись Тогда
				ОбновитьРекомендациюПоИзменениюЗаписиРегистра(ЗаписьРегистра);
				
				Если ЗначениеЗаполнено(Выборка.Характеристика) Тогда
					ЗапомнитьОбщуюНастройкуДляОбновления(ОбщиеНастройки, Выборка.Номенклатура, Выборка.Склад);
				КонецЕсли;
			ИначеЕсли НЕ Выборка.ЭтоГруппировка Тогда // общая настройка для номенклатуры
				ЗапомнитьОбщуюНастройкуДляОбновления(ОбщиеНастройки, Выборка.Номенклатура, Выборка.Склад);
			КонецЕсли;
			
			// Запоминаем для каких записей группировки нужно обновить реквизит ЕстьРекомендацияПоИзменению.
			Если УстановкаГруппировки И НЕ Выборка.ЭтоГруппировка Тогда
				ЗапомнитьГруппировкуДляОбновления(Группировки, Выборка.ГруппировкаТоварныхОграничений, Выборка.Склад, Ложь);
				ЗапомнитьГруппировкуДляОбновления(Группировки, ПараметрыДляЗаписи.ГруппировкаТоварныхОграничений, Выборка.Склад,
					ЗаписьРегистра.ЕстьРекомендацияПоИзменению);
			КонецЕсли;
			
			НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
			НаборЗаписей.Отбор.Склад.Установить(Выборка.Склад);
			Если Выборка.ЭтоГруппировка Тогда
				НаборЗаписей.Отбор.ГруппировкаТоварныхОграничений.Установить(Выборка.ГруппировкаТоварныхОграничений);
			КонецЕсли;
			
			НаборЗаписей.Записать();
			НаборЗаписей.Отбор.ГруппировкаТоварныхОграничений.Использование = Ложь;
			КоличествоЗаписей = КоличествоЗаписей + 1;
			
		КонецЦикла;
		
		ОбновитьРекомендацииПоИзменениюОбщихНастроек(ОбщиеНастройки, Группировки);
		ОбновитьРекомендацииПоИзменениюГруппировок(Группировки);
		
		Пока ВыборкаДляОбновленияДопРеквизита.Следующий() Цикл
			ОбновитьЗначенияРеквизитаДопУпорядочивания(ВыборкаДляОбновленияДопРеквизита.Номенклатура,
				ВыборкаДляОбновленияДопРеквизита.Характеристика);
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Запись в регистр ""Товарные ограничения""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат КоличествоЗаписей;

КонецФункции

Процедура Удалить(ТаблицаТоваров, ТаблицаГруппировок, УдалятьДетальные = Ложь)
	
	ТаблицаТоваров.Свернуть("Номенклатура,Характеристика,Склад");
	ТаблицаГруппировок.Свернуть("ГруппировкаТоварныхОграничений");
	
	НачатьТранзакцию();
	Попытка
	
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
		ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",		"Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика",	"Характеристика");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",			"Склад");
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
		ЭлементБлокировки.ИсточникДанных = ТаблицаГруппировок;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГруппировкаТоварныхОграничений",		"ГруппировкаТоварныхОграничений");
		
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаТоваров.Номенклатура   КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика КАК Характеристика,
			|	ТаблицаТоваров.Склад          КАК Склад
			|ПОМЕСТИТЬ ВтТаблицаТоваров
			|ИЗ
			|	&ТаблицаТоваров КАК ТаблицаТоваров
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаГруппировок.ГруппировкаТоварныхОграничений КАК ГруппировкаТоварныхОграничений
			|ПОМЕСТИТЬ ВтТаблицаГруппировок
			|ИЗ
			|	&ТаблицаГруппировок КАК ТаблицаГруппировок
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаписиСУпаковками.Номенклатура             КАК Номенклатура,
			|	ЗаписиСУпаковками.Характеристика           КАК Характеристика,
			|	ЗаписиСУпаковками.Склад                    КАК Склад,
			|	ЗаписиСУпаковками.ГруппировкаТоварныхОграничений              КАК ГруппировкаТоварныхОграничений,
			|	МАКСИМУМ(ЗаписиСУпаковками.ЭтоГруппировка) КАК УдаляетсяВсяГруппировка,
			|	ЗаписиСУпаковками.УпаковкаЗаказа           КАК УпаковкаЗаказа
			|ПОМЕСТИТЬ ВтТаблицаЗаписейСУпаковками
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТоварныеОграничения.Номенклатура КАК Номенклатура,
			|		ТоварныеОграничения.Характеристика КАК Характеристика,
			|		ТоварныеОграничения.Склад КАК Склад,
			|		ТаблицаЗаписейГруппировки.ГруппировкаТоварныхОграничений КАК ГруппировкаТоварныхОграничений,
			|		ИСТИНА КАК ЭтоГруппировка,
			|		ТоварныеОграничения.УпаковкаЗаказа КАК УпаковкаЗаказа
			|	ИЗ
			|		ВтТаблицаГруппировок КАК ТаблицаЗаписейГруппировки
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
			|			ПО ТаблицаЗаписейГруппировки.ГруппировкаТоварныхОграничений = ТоварныеОграничения.ГруппировкаТоварныхОграничений
			|	ГДЕ
			|		(ТоварныеОграничения.УпаковкаЗаказа <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
			|				ИЛИ ТоварныеОграничения.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|				ИЛИ ТоварныеОграничения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ТаблицаЗаписейГруппировки.Номенклатура,
			|		ТаблицаЗаписейГруппировки.Характеристика,
			|		ТаблицаЗаписейГруппировки.Склад,
			|		ТоварныеОграничения.ГруппировкаТоварныхОграничений,
			|		ЛОЖЬ,
			|		ТоварныеОграничения.УпаковкаЗаказа
			|	ИЗ
			|		ВтТаблицаТоваров КАК ТаблицаЗаписейГруппировки
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
			|			ПО ТаблицаЗаписейГруппировки.Номенклатура = ТоварныеОграничения.Номенклатура
			|				И ТаблицаЗаписейГруппировки.Характеристика = ТоварныеОграничения.Характеристика
			|				И ТаблицаЗаписейГруппировки.Склад = ТоварныеОграничения.Склад) КАК ЗаписиСУпаковками
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаписиСУпаковками.Номенклатура,
			|	ЗаписиСУпаковками.Характеристика,
			|	ЗаписиСУпаковками.Склад,
			|	ЗаписиСУпаковками.ГруппировкаТоварныхОграничений,
			|	ЗаписиСУпаковками.УпаковкаЗаказа
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Склад
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	УдаляемыеЗаписи.Номенклатура                      КАК Номенклатура,
			|	УдаляемыеЗаписи.Характеристика                    КАК Характеристика,
			|	УдаляемыеЗаписи.Склад                             КАК Склад,
			|	УдаляемыеЗаписи.ГруппировкаТоварныхОграничений                       КАК ГруппировкаТоварныхОграничений,
			|	УдаляемыеЗаписи.УдаляетсяВсяГруппировка           КАК УдаляетсяВсяГруппировка,
			|	УдаляемыеЗаписи.УпаковкаЗаказа                    КАК УпаковкаЗаказа,
			|	НЕ ОбщиеНастройки.Номенклатура ЕСТЬ NULL          КАК ЕстьОбщаяНастройка,
			|	НЕ УдаляемыеОбщиеНастройки.Номенклатура ЕСТЬ NULL КАК ОбщаяНастройкаУдаляется
			|ИЗ
			|	ВтТаблицаЗаписейСУпаковками КАК УдаляемыеЗаписи
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ОбщиеНастройки
			|		ПО УдаляемыеЗаписи.Номенклатура = ОбщиеНастройки.Номенклатура
			|			И УдаляемыеЗаписи.Склад = ОбщиеНастройки.Склад
			|			И (ОбщиеНастройки.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
			|			И (УдаляемыеЗаписи.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаписейСУпаковками КАК УдаляемыеОбщиеНастройки
			|		ПО УдаляемыеЗаписи.Номенклатура = УдаляемыеОбщиеНастройки.Номенклатура
			|			И УдаляемыеЗаписи.Склад = УдаляемыеОбщиеНастройки.Склад
			|			И (УдаляемыеОбщиеНастройки.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
			|			И (УдаляемыеЗаписи.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
			|ИТОГИ
			|	МАКСИМУМ(УдаляетсяВсяГруппировка)
			|ПО
			|	УдаляемыеЗаписи.ГруппировкаТоварныхОграничений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТоваров.Номенклатура     КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика   КАК Характеристика
			|ИЗ
			|	ВтТаблицаТоваров КАК ТаблицаТоваров
			|ГДЕ
			|	ТаблицаТоваров.Склад.ЦеховаяКладовая
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ТоварныеОграничения.Номенклатура,
			|	ТоварныеОграничения.Характеристика
			|ИЗ
			|	ВтТаблицаГруппировок КАК ТаблицаЗаписейГруппировки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
			|		ПО ТаблицаЗаписейГруппировки.ГруппировкаТоварныхОграничений = ТоварныеОграничения.ГруппировкаТоварныхОграничений
			|			И ТоварныеОграничения.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|ГДЕ
			|	ТоварныеОграничения.Склад.ЦеховаяКладовая";
		
		Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
		Запрос.УстановитьПараметр("ТаблицаГруппировок", ТаблицаГруппировок);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.ВыполнитьПакет();
		УстановитьПривилегированныйРежим(Ложь);
		ВыборкаГруппировка = Результат[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаДляОбновленияДопРеквизита = Результат[4].Выбрать();
		
		ОбщиеНастройки = ТаблицаОбщихНастроек();
		Группировки = ТаблицаСлужебныхГруппировок();
		
		Пока ВыборкаГруппировка.Следующий() Цикл
			
			Выборка = ВыборкаГруппировка.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				НаборЗаписей = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
				
				ЗаписьУдаляется = НЕ (ЗначениеЗаполнено(Выборка.УпаковкаЗаказа) 
					ИЛИ (Выборка.ЕстьОбщаяНастройка И НЕ Выборка.ОбщаяНастройкаУдаляется И НЕ УдалятьДетальные));
			
				Если НЕ ЗаписьУдаляется Тогда
					ЗаписьРегистра = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка,, "ГруппировкаТоварныхОграничений");
					ЗаписьРегистра.МетодОбеспеченияПотребностей = Перечисления.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ;
					ЗаписьРегистра.ЭтоДействующийПараметр = Выборка.ЕстьОбщаяНастройка И НЕ УдалятьДетальные;
					ОбновитьРекомендациюПоИзменениюЗаписиРегистра(ЗаписьРегистра);
				КонецЕсли;
				
				// Запоминаем для каких из группировычных записей нужно обновить реквизит ЕстьРекомендацияПоИзменению.
				ЕстьРекомендацияПоИзменению = ?(НаборЗаписей.Количество() > 0, ЗаписьРегистра.ЕстьРекомендацияПоИзменению, Ложь);
				Если НЕ Выборка.УдаляетсяВсяГруппировка И ЗначениеЗаполнено(Выборка.ГруппировкаТоварныхОграничений) Тогда
					ЗапомнитьГруппировкуДляОбновления(Группировки, Выборка.ГруппировкаТоварныхОграничений, Выборка.Склад,
						ЕстьРекомендацияПоИзменению);
				КонецЕсли;
				Если Выборка.ЕстьОбщаяНастройка И НЕ Выборка.ОбщаяНастройкаУдаляется Тогда
					ЗапомнитьОбщуюНастройкуДляОбновления(ОбщиеНастройки, Выборка.Номенклатура, Выборка.Склад);
				КонецЕсли;
				
				Если НЕ Выборка.УдаляетсяВсяГруппировка ИЛИ НЕ ЗаписьУдаляется Тогда
					НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
					НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
					НаборЗаписей.Отбор.Склад.Установить(Выборка.Склад);
					НаборЗаписей.Записать();
				КонецЕсли;
			
			КонецЦикла;
			
			Если ВыборкаГруппировка.УдаляетсяВсяГруппировка Тогда
				НаборЗаписей = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ГруппировкаТоварныхОграничений.Установить(ВыборкаГруппировка.ГруппировкаТоварныхОграничений);
				НаборЗаписей.Записать();
			КонецЕсли;
			
		КонецЦикла;
		
		ОбновитьРекомендацииПоИзменениюОбщихНастроек(ОбщиеНастройки, Группировки);
		ОбновитьРекомендацииПоИзменениюГруппировок(Группировки);
		
		Пока ВыборкаДляОбновленияДопРеквизита.Следующий() Цикл
			ОбновитьЗначенияРеквизитаДопУпорядочивания(ВыборкаДляОбновленияДопРеквизита.Номенклатура,
				ВыборкаДляОбновленияДопРеквизита.Характеристика);
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Удаление записей в регистре ""Товарные ограничения""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбновитьРекомендацииПоИзменениюОбщихНастроек(ОбщиеНастройки, Группировки)
	
	Если ОбщиеНастройки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
	ЭлементБлокировки.ИсточникДанных = ОбщиеНастройки;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбщиеНастройки.Номенклатура,
		|	ОбщиеНастройки.Склад
		|ПОМЕСТИТЬ ВтОбщиеНастройки
		|ИЗ
		|	&ОбщиеНастройки КАК ОбщиеНастройки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ЕСТЬNULL(ВЫБОР
		|				КОГДА ЕСТЬNULL(ГруппировкиДетальныхНастроек.МетодОбеспеченияПотребностей, ДетальныеНастройки.МетодОбеспеченияПотребностей) <> ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ПустаяСсылка)
		|						И ЕСТЬNULL(ГруппировкиДетальныхНастроек.МетодОбеспеченияПотребностей, ДетальныеНастройки.МетодОбеспеченияПотребностей) <> ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ)
		|					ТОГДА ДетальныеНастройки.ЕстьРекомендацияПоИзменению
		|				ИНАЧЕ НЕ ДетальныеНастройки.ЕстьРекомендацияПоИзменению
		|			КОНЕЦ, ИСТИНА)) КАК ЕстьРекомендацияПоИзменению,
		|	ТоварныеОграничения.Склад,
		|	ТоварныеОграничения.Номенклатура,
		|	ТоварныеОграничения.Характеристика,
		|	ТоварныеОграничения.ГруппировкаТоварныхОграничений,
		|	ТоварныеОграничения.СтраховоеКоличествоЗапаса,
		|	ТоварныеОграничения.МинимальноеКоличествоЗапаса,
		|	ТоварныеОграничения.МаксимальноеКоличествоЗапаса,
		|	ТоварныеОграничения.НормаПотребления,
		|	ТоварныеОграничения.МетодОбеспеченияПотребностей,
		|	ТоварныеОграничения.УпаковкаЗаказа,
		|	ТоварныеОграничения.ОбеспечениеЗаказовПриПоддержанииЗапаса,
		|	ТоварныеОграничения.СреднедневноеПотребление,
		|	ТоварныеОграничения.СреднееОтклонениеПотребления,
		|	ТоварныеОграничения.РеквизитДопУпорядочивания,
		|	ТоварныеОграничения.ДатаРасчетаРекомендаций,
		|	ТоварныеОграничения.ЭтоДействующийПараметр,
		|	ТоварныеОграничения.ЭтоГруппировка
		|ИЗ
		|	ВтОбщиеНастройки КАК ОбщиеНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ДетальныеНастройки
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ГруппировкиДетальныхНастроек
		|			ПО ДетальныеНастройки.ГруппировкаТоварныхОграничений = ГруппировкиДетальныхНастроек.ГруппировкаТоварныхОграничений
		|				И (ДетальныеНастройки.Склад = ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка))
		|		ПО ОбщиеНастройки.Номенклатура = ДетальныеНастройки.Номенклатура
		|			И ОбщиеНастройки.Склад = ДетальныеНастройки.Склад
		|			И (ДетальныеНастройки.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
		|		ПО ОбщиеНастройки.Номенклатура = ТоварныеОграничения.Номенклатура
		|			И ОбщиеНастройки.Склад = ТоварныеОграничения.Склад
		|			И (ТоварныеОграничения.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|			И ТоварныеОграничения.ЭтоДействующийПараметр
		|ГДЕ
		|	НЕ ТоварныеОграничения.Склад ЕСТЬ NULL
		|	И ОбщиеНастройки.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварныеОграничения.Склад,
		|	ТоварныеОграничения.Номенклатура,
		|	ТоварныеОграничения.Характеристика,
		|	ТоварныеОграничения.ГруппировкаТоварныхОграничений,
		|	ТоварныеОграничения.СтраховоеКоличествоЗапаса,
		|	ТоварныеОграничения.МинимальноеКоличествоЗапаса,
		|	ТоварныеОграничения.МаксимальноеКоличествоЗапаса,
		|	ТоварныеОграничения.НормаПотребления,
		|	ТоварныеОграничения.МетодОбеспеченияПотребностей,
		|	ТоварныеОграничения.УпаковкаЗаказа,
		|	ТоварныеОграничения.ОбеспечениеЗаказовПриПоддержанииЗапаса,
		|	ТоварныеОграничения.СреднедневноеПотребление,
		|	ТоварныеОграничения.СреднееОтклонениеПотребления,
		|	ТоварныеОграничения.РеквизитДопУпорядочивания,
		|	ТоварныеОграничения.ДатаРасчетаРекомендаций,
		|	ТоварныеОграничения.ЭтоДействующийПараметр,
		|	ТоварныеОграничения.ЭтоГруппировка,
		|	ТоварныеОграничения.ЕстьРекомендацияПоИзменению
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ВЫБОР
		|				КОГДА ДетальныеНастройки.МетодОбеспеченияПотребностей <> ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ПустаяСсылка)
		|						И ДетальныеНастройки.МетодОбеспеченияПотребностей <> ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ)
		|					ТОГДА ДетальныеНастройки.ЕстьРекомендацияПоИзменению
		|				ИНАЧЕ НЕ ДетальныеНастройки.ЕстьРекомендацияПоИзменению
		|			КОНЕЦ, ИСТИНА)) <> ТоварныеОграничения.ЕстьРекомендацияПоИзменению";
		
	Запрос.УстановитьПараметр("ОбщиеНастройки", ОбщиеНастройки);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",		"Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика",	"Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",			"Склад");
	Блокировка.Заблокировать();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Набор = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
		Набор.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
		Набор.Отбор.Характеристика.Установить(Выборка.Характеристика);
		Набор.Отбор.Склад.Установить(Выборка.Склад);
		
		ЗаписьРегистра = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
		
		Если ЗначениеЗаполнено(Выборка.ГруппировкаТоварныхОграничений) Тогда
			ЗапомнитьГруппировкуДляОбновления(Группировки, Выборка.ГруппировкаТоварныхОграничений, Выборка.Склад, Выборка.ЕстьРекомендацияПоИзменению);
		КонецЕсли;
		
		Набор.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьРекомендацииПоИзменениюГруппировок(Группировки)
	
	Если Группировки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОтборСтрок = Новый Структура("ЕстьРекомендацияПоИзменению", Ложь);
	БезРекомендаций = Группировки.Скопировать(Группировки.НайтиСтроки(ОтборСтрок));
	
	Группировки.Колонки.Добавить("КоличествоЗаписей", Новый ОписаниеТипов("Число"));
	
	Если БезРекомендаций.Количество() > 0 Тогда
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
		ЭлементБлокировки.ИсточникДанных = БезРекомендаций;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГруппировкаТоварныхОграничений",	"ГруппировкаТоварныхОграничений");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",		"Склад");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		Блокировка.Заблокировать();
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	БезРекомендаций.ГруппировкаТоварныхОграничений,
			|	БезРекомендаций.Склад
			|ПОМЕСТИТЬ ВтГруппировки
			|ИЗ
			|	&БезРекомендаций КАК БезРекомендаций
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Группировки.ГруппировкаТоварныхОграничений КАК ГруппировкаТоварныхОграничений,
			|	Группировки.Склад КАК Склад,
			|	МАКСИМУМ(ЕСТЬNULL(ТоварныеОграничения.ЕстьРекомендацияПоИзменению, ЛОЖЬ)) КАК ЕстьРекомендацияПоИзменению,
			|	КОЛИЧЕСТВО(ТоварныеОграничения.Номенклатура) КАК КоличествоЗаписей
			|ИЗ
			|	ВтГруппировки КАК Группировки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
			|		ПО Группировки.ГруппировкаТоварныхОграничений = ТоварныеОграничения.ГруппировкаТоварныхОграничений
			|			И Группировки.Склад = ТоварныеОграничения.Склад
			|			И (ТоварныеОграничения.Номенклатура <> ЗНАЧЕНИЕ(Справочник.номенклатура.ПустаяСсылка))
			|
			|СГРУППИРОВАТЬ ПО
			|	Группировки.ГруппировкаТоварныхОграничений,
			|	Группировки.Склад";
			
		Запрос.УстановитьПараметр("БезРекомендаций", БезРекомендаций);
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		
		Пока Выборка.Следующий() Цикл
			ОтборСтрок = Новый Структура("ГруппировкаТоварныхОграничений, Склад", Выборка.ГруппировкаТоварныхОграничений, Выборка.Склад);
			ЗаполнитьЗначенияСвойств(Группировки.НайтиСтроки(ОтборСтрок)[0], Выборка);
		КонецЦикла;
	КонецЕсли;
	
	Группировки.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
	ЭлементБлокировки.ИсточникДанных = Группировки;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",		"Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",			"Склад");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГруппировкаТоварныхОграничений",		"ГруппировкаТоварныхОграничений");
	Блокировка.Заблокировать();
	
	Для каждого Настройка Из Группировки Цикл
		Набор = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
		Набор.Отбор.Номенклатура.Установить(Настройка.Номенклатура);
		Набор.Отбор.Склад.Установить(Настройка.Склад);
		Набор.Отбор.ГруппировкаТоварныхОграничений.Установить(Настройка.ГруппировкаТоварныхОграничений);
		Если НЕ Настройка.ЕстьРекомендацияПоИзменению И Настройка.КоличествоЗаписей = 0 Тогда 
			// По складу нет товаров в группировке, служебная запись не нужна
			Набор.Записать();
		Иначе
			Набор.Прочитать();
			Записывать = Ложь;
			Если Набор.Количество() = 0 Тогда
				// Первый товар по складу в группировке, добавим служебную запись
				ЗаписьРегистра = Набор.Добавить();
				ЗаписьРегистра.Склад					= Настройка.Склад;
				ЗаписьРегистра.ГруппировкаТоварныхОграничений				= Настройка.ГруппировкаТоварныхОграничений;
				ЗаписьРегистра.ЭтоДействующийПараметр	= Истина;
				ЗаписьРегистра.ЭтоГруппировка			= Истина;
				Записывать = Истина;
			КонецЕсли;
			Если Набор[0].ЕстьРекомендацияПоИзменению <> Настройка.ЕстьРекомендацияПоИзменению ИЛИ Записывать Тогда
				Набор[0].ЕстьРекомендацияПоИзменению = Настройка.ЕстьРекомендацияПоИзменению;
				Набор.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьРекомендациюПоИзменениюЗаписиРегистра(ЗаписьРегистра)
	
	ПотреблениеСтабильно = ЗаписьРегистра.СреднедневноеПотребление > 0
		И ЗаписьРегистра.СреднееОтклонениеПотребления / ЗаписьРегистра.СреднедневноеПотребление < 0.05;
	ЗапасПоддерживается = ЗначениеЗаполнено(ЗаписьРегистра.ГруппировкаТоварныхОграничений)
		ИЛИ ЗначениеЗаполнено(ЗаписьРегистра.МетодОбеспеченияПотребностей)
			И ЗаписьРегистра.МетодОбеспеченияПотребностей <> Перечисления.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ;
	ЗаписьРегистра.ЕстьРекомендацияПоИзменению = (ПотреблениеСтабильно И НЕ ЗапасПоддерживается)
		ИЛИ (НЕ ПотреблениеСтабильно И ЗапасПоддерживается);
	
КонецПроцедуры

Процедура ПодставитьВыраженияПолейВыборки(РезультатПодстановки, Поля, СинонимТаблицы)

	Для Каждого Поле Из Поля Цикл

		ПодстрокаПоиска = СинонимТаблицы + "." + Поле.Имя;
		ПодстрокаЗамены = "	ЕСТЬNULL(НастройкаДетальная.Имя, ЕСТЬNULL(НастройкаГруппировки.Имя, ЕСТЬNULL(НастройкаОбщая.Имя, НастройкаГруппировкиОбщейНастройки.Имя)))";
		ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Имя", Поле.Имя);
		РезультатПодстановки = СтрЗаменить(РезультатПодстановки, ПодстрокаПоиска, ПодстрокаЗамены);

	КонецЦикла;

КонецПроцедуры

Процедура ОбновитьЗначенияРеквизитаДопУпорядочивания(Номенклатура, Характеристика)
	
	БлокировкаДанных = Новый БлокировкаДанных;
	
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.ТоварныеОграничения");
	ЭлементБлокировки.УстановитьЗначение("Номенклатура",	Номенклатура);
	ЭлементБлокировки.УстановитьЗначение("Характеристика",	Характеристика);
	
	БлокировкаДанных.Заблокировать();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Таблица.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				И Таблица.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И Таблица.ГруппировкаТоварныхОграничений = ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)
	|			ТОГДА 1
	|		КОГДА Таблица.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				И Таблица.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И Таблица.ГруппировкаТоварныхОграничений = ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ                                               КАК НомерГруппы,
	|	Таблица.Склад                                       КАК Склад,
	|	Таблица.Номенклатура                                КАК Номенклатура,
	|	Таблица.Характеристика                              КАК Характеристика,
	|	Таблица.ГруппировкаТоварныхОграничений                                 КАК ГруппировкаТоварныхОграничений,
	|	Таблица.СтраховоеКоличествоЗапаса                   КАК СтраховоеКоличествоЗапаса,
	|	Таблица.МинимальноеКоличествоЗапаса                 КАК МинимальноеКоличествоЗапаса,
	|	Таблица.МаксимальноеКоличествоЗапаса                КАК МаксимальноеКоличествоЗапаса,
	|	Таблица.НормаПотребления                            КАК НормаПотребления,
	|	Таблица.МетодОбеспеченияПотребностей                КАК МетодОбеспеченияПотребностей,
	|	Таблица.УпаковкаЗаказа                              КАК УпаковкаЗаказа,
	|	Таблица.ОбеспечениеЗаказовПриПоддержанииЗапаса      КАК ОбеспечениеЗаказовПриПоддержанииЗапаса,
	|	Таблица.СреднедневноеПотребление                    КАК СреднедневноеПотребление,
	|	Таблица.СреднееОтклонениеПотребления                КАК СреднееОтклонениеПотребления,
	|	Таблица.РеквизитДопУпорядочивания                   КАК РеквизитДопУпорядочивания,
	|	Таблица.ДатаРасчетаРекомендаций                     КАК ДатаРасчетаРекомендаций,
	|	Таблица.ЭтоДействующийПараметр                      КАК ЭтоДействующийПараметр,
	|	Таблица.ЕстьРекомендацияПоИзменению                 КАК ЕстьРекомендацияПоИзменению,
	|	Таблица.ЭтоГруппировка                              КАК ЭтоГруппировка,
	|	ЕСТЬNULL(Таблица.Склад.Подразделение, НЕОПРЕДЕЛЕНО) КАК Подразделение,
	|	ЕСТЬNULL(Таблица.Склад.ЦеховаяКладовая, ЛОЖЬ)       КАК ЦеховаяКладовая,
	|	Таблица.ЭтоДействующийПараметр
	|		И (Таблица.ГруппировкаТоварныхОграничений <> ЗНАЧЕНИЕ(Справочник.ГруппировкиТоварныхОграничений.ПустаяСсылка)
	|			ИЛИ Таблица.МетодОбеспеченияПотребностей <> ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ЗаказПодЗаказ)) КАК ЗапасПоддерживается
	|ИЗ
	|	РегистрСведений.ТоварныеОграничения КАК Таблица
	|ГДЕ
	|	Таблица.Номенклатура = &Номенклатура
	|	И Таблица.Характеристика = &Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерГруппы,
	|	Подразделение,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.ГруппировкаТоварныхОграничений,
	|	Таблица.РеквизитДопУпорядочивания");
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаЗаписей = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЗаписей.Количество() = 0 
		ИЛИ ТаблицаЗаписей.Найти(Истина, "ЦеховаяКладовая") = Неопределено Тогда
		// Нет изменения записей по цеховым кладовым
		Возврат;
	КонецЕсли;
	
	ЗначениеРеквизитаДопУпорядочивания = 0;
	ПредыдущаяЗапись = Новый Структура("НомерГруппы, Подразделение, Номенклатура, Характеристика");
	
	// Создание набора записей
	НаборЗаписей = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);
	НаборЗаписей.Отбор.Характеристика.Установить(Характеристика);
	
	// Нужно обработать следующие комбинации
	// Подразделение, Номенклатура, Характеристика, Группа не указана
	// Подразделение, Номенклатура, Характеристика не указана, Группа не указана
	// Подразделение, Номенклатура, Характеристика, Группа.
	Для каждого Выборка Из ТаблицаЗаписей Цикл
		
		Если НЕ Выборка.ЦеховаяКладовая ИЛИ НЕ Выборка.ЗапасПоддерживается Тогда
			// Запись не относится к цеховой кладовой или по ней не поддерживается запас, поэтому записываем ее как есть.
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.РеквизитДопУпорядочивания = 0;
			Продолжить;
		КонецЕсли;
			
		// Запись не отличается от предыдущей
		Если Выборка.НомерГруппы = ПредыдущаяЗапись.НомерГруппы 
			И Выборка.Подразделение = ПредыдущаяЗапись.Подразделение 
			И Выборка.Номенклатура = ПредыдущаяЗапись.Номенклатура 
			И Выборка.Характеристика = ПредыдущаяЗапись.Характеристика Тогда
			
			// Следующее значение упорядочивания
			ЗначениеРеквизитаДопУпорядочивания = ЗначениеРеквизитаДопУпорядочивания + 1;
			
		Иначе
			
			// Сохранение текущей записи
			ЗаполнитьЗначенияСвойств(ПредыдущаяЗапись, Выборка);
			ЗначениеРеквизитаДопУпорядочивания = 1;
			
		КонецЕсли;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
		НоваяЗапись.РеквизитДопУпорядочивания = ЗначениеРеквизитаДопУпорядочивания;
			
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

#КонецЕсли
