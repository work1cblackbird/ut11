#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
		Или Свойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		Параметры.НезависимыеРегистры.Добавить(Метаданные.РегистрыСведений.ГрафикПлатежей);
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

#КонецОбласти

// Для записи графика накладывает блокировку на таблицу, от которой зависит график
// 
// Параметры:
//    ТаблицаОбъектовОплаты - ТаблицаЗначений - таблица с колонками:
//        * ОбъектОплаты - ОпределяемыйТип.ОбъектОплаты - оплачиваемый объект
//        * ОбъектРасчетов - ОпределяемыйТип.ОбъектРасчетов - объект, в разрезе которого ведутся расчеты
//    ИмяТаблицы - Строка - блокируемая таблица
//    ИмяПоля - Строка - поле блокируемой таблицы
//    ИмяКолонки - Строка - поле таблицы объектов оплаты, используемое для блокировки
//
Процедура УстановитьБлокировкиДанныхДляРасчетаГрафика(ТаблицаОбъектовОплаты, ИмяТаблицы, ИмяПоля, ИмяКолонки = "ОбъектОплаты") Экспорт
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить(ИмяТаблицы);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ТаблицаОбъектовОплаты;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ИмяПоля, ИмяКолонки);
	Блокировка.Заблокировать();
	
КонецПроцедуры

// Производит расчет и запись графика по расчетам с клиентами
//
// Параметры:
//    ТаблицаОбъектовОплаты - ТаблицаЗначений - таблица с колонками:
//        * ОбъектОплаты - ОпределяемыйТип.ОбъектОплаты - оплачиваемый объект
//        * ОбъектРасчетов - ОпределяемыйТип.ОбъектРасчетов - объект, в разрезе которого ведутся расчеты
//    Очередь - Число - номер очереди при обновлении данных
//
Процедура РассчитатьГрафикПлатежейПоРасчетамСКлиентами(ТаблицаОбъектовОплаты, Очередь = Неопределено) Экспорт
	
	НоваяАрхитектураВзаиморасчетов = ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов");
	
	НеОбрабатываемые = НеобрабатываемыеДокументы();
	СтрокиКУдалению = Новый Массив;
	Для каждого СтрокаТаблицы Из ТаблицаОбъектовОплаты Цикл
		Если НеОбрабатываемые.Найти(ТипЗнч(СтрокаТаблицы.ОбъектОплаты)) <> Неопределено Тогда
			СтрокиКУдалению.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	Для каждого СтрокаТаблицы Из СтрокиКУдалению Цикл
		ТаблицаОбъектовОплаты.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	СтрокиОплата = Новый Массив;
	СтрокиВозврат = Новый Массив;
	
	Для каждого СтрокаТаблицы Из ТаблицаОбъектовОплаты Цикл
		Если ТипЗнч(СтрокаТаблицы.ОбъектОплаты) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
			Или ТипЗнч(СтрокаТаблицы.ОбъектОплаты) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
			СтрокиВозврат.Добавить(СтрокаТаблицы);
		Иначе
			СтрокиОплата.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокиОплата.Количество() Тогда
		
		Если НоваяАрхитектураВзаиморасчетов Тогда
			ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоРасчетамСКлиентамиНоваяАрхитектура();
		Иначе
			ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоРасчетамСКлиентами();
		КонецЕсли;
		
		ЗаписатьГрафикПлатежейПоРасчетам(
			ТаблицаОбъектовОплаты.Скопировать(СтрокиОплата),
			ТекстЗапроса,
			Перечисления.ТипыДвиженияДенежныхСредств.Поступление,
			Перечисления.ОбластиПланированияПлатежей.РасчетыСКлиентами,
			Очередь);
	КонецЕсли;
	
	Если СтрокиВозврат.Количество() Тогда
		
		Если НоваяАрхитектураВзаиморасчетов Тогда
			ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоВозвратамКлиентамНоваяАрхитектура();
		Иначе
			ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоВозвратамКлиентам();
		КонецЕсли;
		
		ЗаписатьГрафикПлатежейПоРасчетам(
			ТаблицаОбъектовОплаты.Скопировать(СтрокиВозврат),
			ТекстЗапроса,
			Перечисления.ТипыДвиженияДенежныхСредств.Списание,
			Перечисления.ОбластиПланированияПлатежей.ВозвратыКлиентам,
			Очередь);
	КонецЕсли;
	
КонецПроцедуры

// Производит расчет и запись графика по расчетам с поставщиками
//
// Параметры:
//    ТаблицаОбъектовОплаты - ТаблицаЗначений - таблица с колонками:
//        * ОбъектОплаты - ОпределяемыйТип.ОбъектОплаты - оплачиваемый объект
//        * ОбъектРасчетов - ОпределяемыйТип.ОбъектРасчетов - объект, в разрезе которого ведутся расчеты
//    Очередь - Число - номер очереди при обновлении данных
//
Процедура РассчитатьГрафикПлатежейПоРасчетамСПоставщиками(ТаблицаОбъектовОплаты, Очередь = Неопределено) Экспорт
	
	НоваяАрхитектураВзаиморасчетов = ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов");
	
	НеОбрабатываемые = НеобрабатываемыеДокументы();
	СтрокиКУдалению = Новый Массив;
	Для каждого СтрокаТаблицы Из ТаблицаОбъектовОплаты Цикл
		Если НеОбрабатываемые.Найти(ТипЗнч(СтрокаТаблицы.ОбъектОплаты)) <> Неопределено Тогда
			СтрокиКУдалению.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	Для каждого СтрокаТаблицы Из СтрокиКУдалению Цикл
		ТаблицаОбъектовОплаты.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	СтрокиОплата = Новый Массив;
	СтрокиВозврат = Новый Массив;
	
	Для каждого СтрокаТаблицы Из ТаблицаОбъектовОплаты Цикл
		Если ТипЗнч(СтрокаТаблицы.ОбъектОплаты) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			СтрокиВозврат.Добавить(СтрокаТаблицы);
		Иначе
			СтрокиОплата.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокиОплата.Количество() Тогда
		
		Если НоваяАрхитектураВзаиморасчетов Тогда
			ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоРасчетамСПоставщикамиНоваяАрхитектура();
		Иначе
			ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоРасчетамСПоставщиками();
		КонецЕсли;
		
		ЗаписатьГрафикПлатежейПоРасчетам(
			ТаблицаОбъектовОплаты.Скопировать(СтрокиОплата),
			ТекстЗапроса,
			Перечисления.ТипыДвиженияДенежныхСредств.Списание,
			Перечисления.ОбластиПланированияПлатежей.РасчетыСПоставщиками,
			Очередь);
	КонецЕсли;
	
	Если СтрокиВозврат.Количество() Тогда
		
		Если НоваяАрхитектураВзаиморасчетов Тогда
			ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоВозвратамОтПоставщиковНоваяАрхитектура();
		Иначе
			ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоВозвратамОтПоставщиков();
		КонецЕсли;
		
		ЗаписатьГрафикПлатежейПоРасчетам(
			ТаблицаОбъектовОплаты.Скопировать(СтрокиВозврат),
			ТекстЗапроса,
			Перечисления.ТипыДвиженияДенежныхСредств.Поступление,
			Перечисления.ОбластиПланированияПлатежей.ВозвратыОтПоставщиков,
			Очередь);
	КонецЕсли;
	
КонецПроцедуры

// Производит расчет и запись графика по денежным средствам к выплате
//
// Параметры:
//    ОбъектыОплаты - Массив из ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств - заявки на расходование денежных средств
//    Очередь - Число - номер очереди при обновлении данных
//
Процедура РассчитатьГрафикПлатежейПоДенежнымСредствамКВыплате(ОбъектыОплаты, Очередь = Неопределено) Экспорт
	
	Заявки = Новый Массив;
	ЗаявкиНаКомандировку = Новый Массив;
	Распоряжения = Новый Массив;
	//++ Локализация
	Уведомления = Новый Массив;
	//-- Локализация
	
	Для каждого ОбъектОплаты Из ОбъектыОплаты Цикл
		Если ТипЗнч(ОбъектОплаты) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") Тогда
			Заявки.Добавить(ОбъектОплаты);
		ИначеЕсли ТипЗнч(ОбъектОплаты) = Тип("ДокументСсылка.ЗаявкаНаКомандировку") Тогда
			ЗаявкиНаКомандировку.Добавить(ОбъектОплаты);
		ИначеЕсли ТипЗнч(ОбъектОплаты) = Тип("ДокументСсылка.РаспоряжениеНаПеремещениеДенежныхСредств") Тогда
			Распоряжения.Добавить(ОбъектОплаты);
		//++ Локализация
		ИначеЕсли ТипЗнч(ОбъектОплаты) = Тип("ДокументСсылка.УведомлениеОЗачисленииВалюты") Тогда
			Уведомления.Добавить(ОбъектОплаты);
		//-- Локализация
		КонецЕсли;
	КонецЦикла;
	
	Если Заявки.Количество() Тогда
		ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ЗаявкаНаРасходованиеДенежныхСредств");
		ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоЗаявкам();
		ЗаписатьГрафикПлатежейПоДенежнымСредствамКВыплате(Заявки, ТекстЗапроса, ИдентификаторОбъектаМетаданных, Очередь);
	КонецЕсли;
	
	Если ЗаявкиНаКомандировку.Количество() Тогда
		ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ЗаявкаНаКомандировку");
		ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоЗаявкамНаКомандировку();
		ЗаписатьГрафикПлатежейПоДенежнымСредствамКВыплате(ЗаявкиНаКомандировку, ТекстЗапроса, ИдентификаторОбъектаМетаданных, Очередь);
	КонецЕсли;
	
	Если Распоряжения.Количество() Тогда
		ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.РаспоряжениеНаПеремещениеДенежныхСредств");
		ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоРаспоряжениямНаОплату();
		ЗаписатьГрафикПлатежейПоДенежнымСредствамКВыплате(Распоряжения, ТекстЗапроса, ИдентификаторОбъектаМетаданных, Очередь);
	КонецЕсли;
	
	//++ Локализация
	Если Уведомления.Количество() Тогда
		ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.УведомлениеОЗачисленииВалюты");
		ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоУведомлениямОЗачисленииВалюты();
		ЗаписатьГрафикПлатежейПоДенежнымСредствамКВыплате(Уведомления, ТекстЗапроса, ИдентификаторОбъектаМетаданных, Очередь);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Производит расчет и запись графика по денежным средствам в пути
//
// Параметры:
//    ТаблицаОбъектовОплаты - ТаблицаЗначений - таблица с колонками:
//        * ОбъектОплаты - ОпределяемыйТип.ОбъектОплаты - оплачиваемый объект
//        * БанковскийСчетКасса - СправочникСсылка.БанковскиеСчетаОрганизаций, СправочникСсылка.Кассы - банковский счет или касса, в которую ожидается поступление денежных средств
//    Очередь - Число - номер очереди при обновлении данных
//
Процедура РассчитатьГрафикПлатежейПоДенежнымСредствамВПути(ТаблицаОбъектовОплаты, Очередь = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДенежныеСредства.Отправитель КАК ОбъектОплаты,
	|	ДенежныеСредства.Получатель КАК БанковскийСчетКасса,
	|	ВЫБОР ДенежныеСредства.ВидПереводаДенежныхСредств
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияВБанк) ТОГДА
	|			ДОБАВИТЬКДАТЕ(&ДатаРасчета, ДЕНЬ, ЕСТЬNULL(ВЫРАЗИТЬ(ДенежныеСредства.Отправитель КАК Справочник.Кассы).СрокИнкассации, 0))
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка) ТОГДА
	|			ДОБАВИТЬКДАТЕ(&ДатаРасчета, ДЕНЬ, ЕСТЬNULL(ВЫРАЗИТЬ(ДенежныеСредства.Получатель КАК Справочник.Кассы).СрокИнкассации, 0))
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет) ТОГДА
	|			ДОБАВИТЬКДАТЕ(&ДатаРасчета, ДЕНЬ, 1)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеремещениеВДругуюКассу) ТОГДА
	|			ДОБАВИТЬКДАТЕ(&ДатаРасчета, ДЕНЬ, ЕСТЬNULL(ВЫРАЗИТЬ(ДенежныеСредства.Отправитель КАК Справочник.Кассы).СрокИнкассации, 0))
	|	КОНЕЦ КАК ДатаПлатежа,
	|	ДенежныеСредства.Организация КАК ПлательщикПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	|	ДенежныеСредства.ВидПереводаДенежныхСредств КАК ТипСуммы,
	|	ДенежныеСредства.Валюта КАК Валюта,
	|	ДенежныеСредства.СуммаОстаток КАК Сумма,
	|	ДенежныеСредства.Организация КАК Организация,
	|	ДенежныеСредства.Получатель.Подразделение КАК Подразделение,
	|	ДенежныеСредства.Получатель.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	ВЫБОР ДенежныеСредства.ВидПереводаДенежныхСредств
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияВБанк) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеремещениеВДругуюКассу) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР ДенежныеСредства.ВидПереводаДенежныхСредств
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияВБанк) ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.СдачаДенежныхСредствВБанк)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка) ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанка)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет) ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПеречислениеДенежныхСредствНаДругойСчет)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеремещениеВДругуюКассу) ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВДругуюКассу)
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДенежныеСредства.Получатель) = ТИП(Справочник.Кассы)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ДенежныеСредства.Отправитель) = ТИП(Справочник.КассыККМ)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ДенежныеСредства.Получатель) = ТИП(Справочник.КассыККМ) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		КОГДА ТИПЗНАЧЕНИЯ(ДенежныеСредства.Получатель) = ТИП(Справочник.БанковскиеСчетаОрганизаций) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ДенежныеСредстваВПути) КАК ОбластьПланирования,
	|	ДенежныеСредства.СуммаОстаток КАК СуммаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК КорВалюта
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваВПути.Остатки(,
	|		ВидПереводаДенежныхСредств В (
	|			ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияВБанк),
	|			ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка),
	|			ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет),
	|			ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеремещениеВДругуюКассу)
	|		)
	|		И Получатель В (&БанковскийСчетКасса)
	|		И Отправитель В (&ОбъектОплаты)
	|	) КАК ДенежныеСредства
	|	
	|ГДЕ
	|	ДенежныеСредства.СуммаОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредства.Договор КАК ОбъектОплаты,
	|	ДенежныеСредства.Получатель КАК БанковскийСчетКасса,
	|	ДОБАВИТЬКДАТЕ(&ДатаРасчета, ДЕНЬ, ЕСТЬNULL(ДенежныеСредства.Договор.СрокИсполненияПлатежа, 1)) КАК ДатаПлатежа,
	|	ДенежныеСредства.Контрагент КАК ПлательщикПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	|	ДенежныеСредства.ВидПереводаДенежныхСредств КАК ТипСуммы,
	|	ДенежныеСредства.Валюта КАК Валюта,
	|	ДенежныеСредства.СуммаОстаток КАК Сумма,
	|	ДенежныеСредства.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ДенежныеСредства.Получатель КАК Справочник.БанковскиеСчетаОрганизаций).Подразделение,
	|	ВЫРАЗИТЬ(ДенежныеСредства.Получатель КАК Справочник.БанковскиеСчетаОрганизаций).НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте),
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента),
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДенежныеСредства.Получатель) = ТИП(Справочник.Кассы) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		КОГДА ТИПЗНАЧЕНИЯ(ДенежныеСредства.Получатель) = ТИП(Справочник.БанковскиеСчетаОрганизаций) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ДенежныеСредстваВПути) КАК ОбластьПланирования,
	|	ДенежныеСредства.СуммаОстаток КАК СуммаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК КорВалюта
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваВПути.Остатки(,
	|		ВидПереводаДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)
	|		И Получатель В (&БанковскийСчетКасса)
	|		И Договор В (&ОбъектОплаты)
	|	) КАК ДенежныеСредства
	|	
	|ГДЕ
	|	ДенежныеСредства.СуммаОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредства.Контрагент КАК ОбъектОплаты,
	|	ДенежныеСредства.Получатель КАК БанковскийСчетКасса,
	|	ДОБАВИТЬКДАТЕ(&ДатаРасчета, ДЕНЬ, 1) КАК ДатаПлатежа,
	|	ДенежныеСредства.Контрагент КАК ПлательщикПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	|	ДенежныеСредства.ВидПереводаДенежныхСредств КАК ТипСуммы,
	|	ДенежныеСредства.Получатель.ВалютаДенежныхСредств КАК Валюта,
	|	
	|	СУММА(ВЫБОР КОГДА КурсВалютыОтправителя.КурсЗнаменатель <> 0 И КурсВалютыПолучателя.КурсЧислитель <> 0 ТОГДА
	|		ДенежныеСредства.СуммаОстаток *
	|			КурсВалютыОтправителя.КурсЧислитель * КурсВалютыПолучателя.КурсЗнаменатель / (КурсВалютыОтправителя.КурсЗнаменатель * КурсВалютыПолучателя.КурсЧислитель)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ) КАК Сумма,
	|	
	|	ДенежныеСредства.Организация КАК Организация,
	|	ДенежныеСредства.Получатель.Подразделение,
	|	ДенежныеСредства.Получатель.НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДенежныеСредства.Получатель) = ТИП(Справочник.Кассы) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		КОГДА ТИПЗНАЧЕНИЯ(ДенежныеСредства.Получатель) = ТИП(Справочник.БанковскиеСчетаОрганизаций) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ДенежныеСредстваВПути) КАК ОбластьПланирования,
	|	СУММА(ДенежныеСредства.СуммаОстаток) КАК СуммаДокумента,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДенежныеСредства.Валюта) = 1 ТОГДА
	|		МАКСИМУМ(ДенежныеСредства.Валюта)
	|	КОНЕЦ КАК КорВалюта
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваВПути.Остатки(,
	|		ВидПереводаДенежныхСредств В (
	|			ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты),
	|			ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
	|		)
	|		И Получатель В (&БанковскийСчетКасса)
	|		И Контрагент В (&ОбъектОплаты)
	|	) КАК ДенежныеСредства
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаРасчета) КАК КурсВалютыОтправителя
	|	ПО КурсВалютыОтправителя.Валюта = ДенежныеСредства.Валюта
	|	И КурсВалютыОтправителя.БазоваяВалюта = ДенежныеСредства.Организация.ВалютаРегламентированногоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаРасчета) КАК КурсВалютыПолучателя
	|	ПО КурсВалютыПолучателя.Валюта = ДенежныеСредства.Получатель.ВалютаДенежныхСредств
	|	И КурсВалютыПолучателя.БазоваяВалюта = ДенежныеСредства.Организация.ВалютаРегламентированногоУчета
	|	
	|ГДЕ
	|	ДенежныеСредства.СуммаОстаток > 0
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредства.Контрагент,
	|	ДенежныеСредства.Получатель,
	|	ДенежныеСредства.Организация,
	|	ДенежныеСредства.ВидПереводаДенежныхСредств
	|";
	
	Запрос.УстановитьПараметр("ОбъектОплаты", ТаблицаОбъектовОплаты.ВыгрузитьКолонку("ОбъектОплаты"));
	Запрос.УстановитьПараметр("БанковскийСчетКасса", ТаблицаОбъектовОплаты.ВыгрузитьКолонку("БанковскийСчетКасса"));
	Запрос.УстановитьПараметр("ДатаРасчета", КонецДня(ТекущаяДатаСеанса()));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для каждого СтрокаОбъектОплаты Из ТаблицаОбъектовОплаты Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ОбъектОплаты", СтрокаОбъектОплаты.ОбъектОплаты);
		СтруктураПоиска.Вставить("БанковскийСчетКасса", СтрокаОбъектОплаты.БанковскийСчетКасса);
		
		НаборЗаписей = РегистрыСведений.ГрафикПлатежей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектОплаты.Установить(СтрокаОбъектОплаты.ОбъектОплаты);
		НаборЗаписей.Отбор.БанковскийСчетКасса.Установить(СтрокаОбъектОплаты.БанковскийСчетКасса);
		НаборЗаписей.Очистить();
		
		Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
			
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			
			Запись.ТипОбъектаОплаты = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ОбщегоНазначения.ИмяТаблицыПоСсылке(Выборка.ОбъектОплаты));
			
			Если Не ЗначениеЗаполнено(Запись.СтатьяДвиженияДенежныхСредств) Тогда
				Запись.СтатьяДвиженияДенежныхСредств =
					Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(Запись.ХозяйственнаяОперация);
			КонецЕсли;
		КонецЦикла;
		Выборка.Сбросить();
		
		НачатьТранзакцию();
		Попытка
			Если Очередь <> Неопределено Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			Иначе
				НаборЗаписей.Записать();
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось записать график платежей по: %1 по причине: %2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения, СтрокаОбъектОплаты.ОбъектОплаты, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,,
				СтрокаОбъектОплаты.ОбъектОплаты, ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

// Производит расчет и запись графика по эквайрингу
//
Процедура РассчитатьГрафикПлатежейПоПоступлениямОтБанкаПоЭквайрингу() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст ="
	|ВЫБРАТЬ
	|	Таблица.ОбъектОплаты,
	|	Таблица.БанковскийСчетКасса
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистра.Договор КАК ОбъектОплаты,
	|		ДанныеРегистра.Получатель КАК БанковскийСчетКасса,
	|		ДанныеРегистра.СуммаОстаток КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредстваВПути.Остатки(,
	|			ВидПереводаДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)
	|			И Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыЭквайринга.ПустаяСсылка)
	|		) КАК ДанныеРегистра
	|	ГДЕ
	|		ДанныеРегистра.СуммаОстаток > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеРегистра.ОбъектОплаты КАК ОбъектОплаты,
	|		ДанныеРегистра.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|		-ДанныеРегистра.Сумма КАК Сумма
	|	ИЗ
	|		РегистрСведений.ГрафикПлатежей КАК ДанныеРегистра
	|	ГДЕ	
	|		ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)
	|		И ДанныеРегистра.ПоступлениеСписание = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление)
	|	) КАК Таблица
	|СГРУППИРОВАТЬ ПО
	|	Таблица.ОбъектОплаты,
	|	Таблица.БанковскийСчетКасса
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.Сумма) <> 0
	|";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоДенежнымСредствамВПути(Результат.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

// Производит расчет и запись графика по расчетам по финансовым инструментам
//
// Параметры:
//    ОбъектыОплаты - Массив из СправочникСсылка.ДоговорыКредитовИДепозитов, СправочникСсылка.ДоговорыАренды - договоры, по которым планируется оплата
//    ДопПараметр - Произвольный - дополнительные данные для расчета.
//    Очередь - Число - номер очереди при обновлении данных
//
Процедура РассчитатьГрафикПлатежейПоФинансовымИнструментам(ОбъектыОплаты, ДопПараметр = Неопределено, Очередь = Неопределено) Экспорт
	
	ДоговорыКредитовДепозитов = Новый Массив;
	
	Для каждого ОбъектОплаты Из ОбъектыОплаты Цикл
		Если ТипЗнч(ОбъектОплаты) = Тип("СправочникСсылка.ДоговорыКредитовИДепозитов") Тогда
			ДоговорыКредитовДепозитов.Добавить(ОбъектОплаты);
		КонецЕсли;
	КонецЦикла;
	
	Если ДоговорыКредитовДепозитов.Количество() Тогда
		ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.ДоговорыКредитовИДепозитов");
		ТекстЗапроса = ТекстЗапросаГрафикПлатежейПоДоговорамКредитовИДепозитов();
		ЗаписатьГрафикПлатежейПоФинансовымИнструментам(
			ДоговорыКредитовДепозитов, 
			ТекстЗапроса, 
			ИдентификаторОбъектаМетаданных, 
			Очередь,
			3);
	КонецЕсли;
	
	
КонецПроцедуры

// Производит расчет и запись графика по расчетам по ожидаемым поступлениям
//
// Параметры:
//    ДатыРасчета - Массив из Дата - даты платежей, на которые ожидаются поступления
//    НедействительныеДокументыОплаты - Массив из ДокументСсылка - документы, которые не планируется пересчитывать
//    Очередь - Число - номер очереди при обновлении данных
//    ОбъектыОплаты - Массив из ДокументСсылка.ОжидаемоеПоступлениеДенежныхСредств - документы, по которым нужно пересчитать.
//
Процедура РассчитатьГрафикПлатежейПоОжидаемымПоступлениямДенежныхСредств(ДатыРасчета, НедействительныеДокументыОплаты = Неопределено, Очередь = Неопределено, ОбъектыОплаты = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(НедействительныеДокументыОплаты) Тогда
		Для каждого НедействительныйДокументОплаты Из НедействительныеДокументыОплаты Цикл
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ОбъектОплаты.Установить(НедействительныйДокументОплаты);
			УстановитьПривилегированныйРежим(Истина);
			ЗаписатьНабор(НаборЗаписей, НедействительныйДокументОплаты, Очередь);
			УстановитьПривилегированныйРежим(Ложь);
		КонецЦикла;
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                                    КАК ОбъектОплаты,
	|	ДанныеДокумента.КассаБанковскийСчет                                       КАК БанковскийСчетКасса,
	|	ДанныеДокумента.ДатаПлатежа                                               КАК ДатаПлатежа,
	|	ДанныеДокумента.Организация                                               КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление)            КАК ПоступлениеСписание,
	|	ДанныеДокумента.Валюта                                                    КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                            КАК Сумма,
	|	
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств                             КАК СтатьяДвиженияДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ОжидаемыеПоступления)   КАК ОбластьПланирования,
	|	ДанныеДокумента.Подразделение                                             КАК Подразделение,
	|	ДанныеДокумента.Ответственный                                             КАК Ответственный,
	|	ДанныеДокумента.Номер                                                     КАК Номер,
	|	ДанныеДокумента.Дата                                                      КАК Дата,
	|
	|	ДанныеДокумента.СуммаДокумента                                            КАК СуммаДокумента,
	|	ДанныеДокумента.ФормаОплаты                                               КАК ФормаОплаты,
	|	ДанныеДокумента.ДатаПлатежа                                               КАК ДатаАктуальностиГрафика,
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, ДЕНЬ)                           КАК КонецДатыПлатежа
	|ПОМЕСТИТЬ ОжидаемыеПоступления
	|ИЗ
	|	Документ.ОжидаемоеПоступлениеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.ДатаПлатежа В (&ДатыРасчета)
	|	И НЕ ДанныеДокумента.Ссылка В (&НедействительныеДокументыОплаты)
	|	И (ДанныеДокумента.Ссылка В (&ОбъектыОплаты) ИЛИ &ВсеОбъектыОплаты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КлючиОжидаемыхПоступлений.Организация КАК Организация,
	|	КлючиОжидаемыхПоступлений.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	КлючиОжидаемыхПоступлений.Валюта КАК Валюта,
	|	КлючиОжидаемыхПоступлений.ДатаПлатежа КАК ДатаПлатежа,
	|	КлючиОжидаемыхПоступлений.КонецДатыПлатежа КАК КонецДатыПлатежа
	|ПОМЕСТИТЬ ВТФильтрОжидаемыхПоступлений
	|ИЗ
	|	ОжидаемыеПоступления КАК КлючиОжидаемыхПоступлений
	|";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДатыРасчета", ДатыРасчета);
	Запрос.УстановитьПараметр("НедействительныеДокументыОплаты", НедействительныеДокументыОплаты);
	Запрос.УстановитьПараметр("ВсеОбъектыОплаты", Не ЗначениеЗаполнено(ОбъектыОплаты));
	Запрос.УстановитьПараметр("ОбъектыОплаты", ОбъектыОплаты);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.ВыполнитьПакетСПромежуточнымиДанными()[0];
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ДенежныеСредства.Период, ДЕНЬ) КАК ДатаПлатежа,
	|	ДенежныеСредства.Организация КАК Организация,
	|	ДенежныеСредства.Касса.ВалютаДенежныхСредств КАК Валюта,
	|	ДенежныеСредства.Касса КАК БанковскийСчетКасса,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная) КАК ФормаОплаты,
	|	ДенежныеСредства.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	СУММА(ДенежныеСредства.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВТФильтрОжидаемыхПоступлений КАК ОжидаемыеПоступления
	|		ПО
	|			ОжидаемыеПоступления.Организация = ДенежныеСредства.Организация
	|			И ОжидаемыеПоступления.СтатьяДвиженияДенежныхСредств = ДенежныеСредства.СтатьяДвиженияДенежныхСредств
	|			И ОжидаемыеПоступления.Валюта = ДенежныеСредства.Касса.ВалютаДенежныхСредств
	|			И ДенежныеСредства.Период МЕЖДУ ОжидаемыеПоступления.ДатаПлатежа И ОжидаемыеПоступления.КонецДатыПлатежа
	|ГДЕ
	|	ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ДенежныеСредства.Период, ДЕНЬ),
	|	ДенежныеСредства.Организация,
	|	ДенежныеСредства.Касса,
	|	ДенежныеСредства.СтатьяДвиженияДенежныхСредств
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ДенежныеСредства.Период, ДЕНЬ) КАК ДатаПлатежа,
	|	ДенежныеСредства.Организация КАК Организация,
	|	ДенежныеСредства.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	ДенежныеСредства.БанковскийСчет КАК БанковскийСчетКасса,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) КАК ФормаОплаты,
	|	ДенежныеСредства.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	СУММА(ДенежныеСредства.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДенежныеСредства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВТФильтрОжидаемыхПоступлений КАК ОжидаемыеПоступления
	|		ПО
	|			ОжидаемыеПоступления.Организация = ДенежныеСредства.Организация
	|			И ОжидаемыеПоступления.СтатьяДвиженияДенежныхСредств = ДенежныеСредства.СтатьяДвиженияДенежныхСредств
	|			И ОжидаемыеПоступления.Валюта = ДенежныеСредства.БанковскийСчет.ВалютаДенежныхСредств
	|			И ДенежныеСредства.Период МЕЖДУ ОжидаемыеПоступления.ДатаПлатежа И ОжидаемыеПоступления.КонецДатыПлатежа
	|ГДЕ
	|	ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ДенежныеСредства.Период, ДЕНЬ),
	|	ДенежныеСредства.Организация,
	|	ДенежныеСредства.БанковскийСчет,
	|	ДенежныеСредства.СтатьяДвиженияДенежныхСредств
	|";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	УстановитьПривилегированныйРежим(Истина);
	ФактическиеПоступления = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);

	ИдентификаторОМ = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ОжидаемоеПоступлениеДенежныхСредств");
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СуммаПоступления = Выборка.Сумма;
		
		СтруктураПоиска = Новый Структура("ДатаПлатежа, Организация, Валюта, СтатьяДвиженияДенежныхСредств");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		Если ЗначениеЗаполнено(Выборка.ФормаОплаты) Тогда
			СтруктураПоиска.Вставить("ФормаОплаты", Выборка.ФормаОплаты);
		КонецЕсли;
		Если ЗначениеЗаполнено(Выборка.БанковскийСчетКасса) Тогда
			СтруктураПоиска.Вставить("БанковскийСчетКасса", Выборка.БанковскийСчетКасса);
		КонецЕсли;
		
		СтрокиКУдалению = Новый Массив;
		
		СтрокиФакт = ФактическиеПоступления.НайтиСтроки(СтруктураПоиска);
		Если СтрокиФакт.Количество() Тогда
			Для каждого СтрокаФакт Из СтрокиФакт Цикл
				
				Если СтрокаФакт.Сумма >= СуммаПоступления Тогда
					СтрокаФакт.Сумма = СтрокаФакт.Сумма - СуммаПоступления;
					СуммаПоступления = 0;
				Иначе
					СуммаПоступления = СуммаПоступления - СтрокаФакт.Сумма;
					СтрокаФакт.Сумма = 0;
				КонецЕсли;
				
				Если СтрокаФакт.Сумма = 0 Тогда
					СтрокиКУдалению.Добавить(СтрокаФакт);
				КонецЕсли;
				
				Если СуммаПоступления = 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			ФактическиеПоступления.Удалить(СтрокаКУдалению);
		КонецЦикла;
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектОплаты.Установить(Выборка.ОбъектОплаты);
		
		Если СуммаПоступления <> 0 Тогда
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.Сумма = СуммаПоступления;
			Запись.ТипОбъектаОплаты = ИдентификаторОМ;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		ЗаписатьНабор(НаборЗаписей, Выборка.ОбъектОплаты, Очередь);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЦикла;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбновлениеИнформационнойБазы

// Заполняет сведения об обработчиках обновления.
// 
// Параметры:
//  Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	//++ Локализация

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.ГрафикПлатежей.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.17.17";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("0ae9f183-0cc2-4c7c-b1b4-ba81a7655a31");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ГрафикПлатежей.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	
	Обработчик.Комментарий = НСтр("ru = 'Изменение операции ""Оплата самозанятому"" на операцию ""Оплата поставщику"" в регистре сведений ""График платежей""'");
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Некритичный;
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.ГрафикПлатежей.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.ГрафикПлатежей.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.ГрафикПлатежей.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

	//-- Локализация

КонецПроцедуры

//++ Локализация

// Регистрирует записи регистра к обработке.
//
// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки; // см. ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляМногопоточнойОбработки
	ПараметрыВыборки.ПолныеИменаРегистров = Метаданные.РегистрыСведений.ГрафикПлатежей.ПолноеИмя();
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикПлатежей.ОбъектОплаты КАК ОбъектОплаты
	|ИЗ
	|	РегистрСведений.ГрафикПлатежей КАК ГрафикПлатежей
	|ГДЕ
	|	ГрафикПлатежей.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УдалитьОплатаСамозанятому)";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрСведений.ГрафикПлатежей");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РезультатЗапроса, ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры обработчика:
//   * ВерсияПодсистемыНаНачалоОбновления - Строка - версия подсистемы.
//   * ИмяОбработчика - Строка - имя обработчика.
//   * ОбновляемыеДанные - Структура.
//   * ОбработкаЗавершена - Булево, Неопределено - признак завершения обработки.
//   * Очередь - Число - очередь.
//   * ПрогрессВыполнения - Структура:
//     ** ВсегоОбъектов - Число - всего обработано объектов.
//     ** ОбработаноОбъектов - Число - обработано объектов.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПолноеИмяОбъекта = Метаданные.РегистрыСведений.ГрафикПлатежей.ПолноеИмя();
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		
		Параметры.ОбработкаЗавершена =
			ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
		
	КонецЕсли;
	
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	ИсключенияПриОбновлении = Новый Массив;
	
	СписокОписаний = Новый Массив;
	СписокОписаний.Добавить(НСтр("ru = 'Не удалось обработать записи регистра сведений ""График платежей"".'"));
	
	Для каждого Данные Из ОбновляемыеДанные Цикл
		
		ПричинаИсключения = 0;
		
		НачатьТранзакцию();
		
		Попытка
			
			ПричинаИсключения = 1; // Блокировка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("ОбъектОплаты", Данные.ОбъектОплаты);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.ГрафикПлатежей.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ОбъектОплаты.Установить(Данные.ОбъектОплаты);
			НаборЗаписей.Прочитать();
			
			НаборИзменен = Ложь;
			
			Для Каждого Запись Из НаборЗаписей Цикл
				
				Если Запись.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УдалитьОплатаСамозанятому Тогда
					Запись.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
					НаборИзменен = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
			ПричинаИсключения = 3; // Запись
			
			Если НаборИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Данные.ОбъектОплаты);
			
			Если ПричинаИсключения = 3 Тогда
				
				ОбновлениеИнформационнойБазыУТ.ЗаписатьПлохиеДанные(
					ИсключенияПриОбновлении, ОбъектовОбработано, Параметры);
				ВызватьИсключение СтрСоединить(СписокОписаний, Символы.ПС);
				
			КонецЕсли;
			
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена =
		ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		
		СписокОписаний.Добавить(НСтр("ru = 'Всего пропущено: %1'"));
		ТекстСообщения = СтрШаблон(СтрСоединить(СписокОписаний, Символы.ПС), ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
		
	Иначе
		
		ШаблонСообщения = НСтр("ru = 'Обработана порция объектов оплаты по регистру ""График платежей"": %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектовОбработано);
		ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, , ,
			ТекстСообщения);
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыУТ.ЗаписатьПлохиеДанные(ИсключенияПриОбновлении, ОбъектовОбработано, Параметры);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьГрафикПлатежейПоРасчетам(ТаблицаОбъектовОплаты, ТекстЗапроса, ПоступлениеСписание, ОбластьПланирования, Очередь)
	
	Если Не ТаблицаОбъектовОплаты.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ПоляГрафика = ИнициализироватьПоляГрафика();
	
	ЗапросыПоТипам = Новый Соответствие;
	ВыборкиПоТипам = Новый Соответствие;
	
	Для каждого СтрокаТаблицы Из ТаблицаОбъектовОплаты Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ОбъектОплаты) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипОбъектаОплаты = ОбщегоНазначения.ИмяТаблицыПоСсылке(СтрокаТаблицы.ОбъектОплаты);
		Если ЗапросыПоТипам.Получить(ТипОбъектаОплаты) = Неопределено Тогда
			ЗапросыПоТипам.Вставить(ТипОбъектаОплаты,
				ДенежныеСредстваПовтИсп.ТекстЗапросаКэшРеквизитовПлатежа(ТипОбъектаОплаты, ПоляГрафика));
		КонецЕсли;
	КонецЦикла;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	Для каждого ЗапросПоТипу Из ЗапросыПоТипам Цикл
		НовыйЗапрос = СхемаЗапроса.ПакетЗапросов.Добавить();
		НовыйЗапрос.УстановитьТекстЗапроса(ЗапросПоТипу.Значение);
	КонецЦикла;
	Запрос = Новый Запрос(СхемаЗапроса.ПолучитьТекстЗапроса());
	Если ЗначениеЗаполнено(Запрос.Текст) Тогда
		Запрос.УстановитьПараметр("Ссылка", ТаблицаОбъектовОплаты.ВыгрузитьКолонку("ОбъектОплаты"));
		Результат = Запрос.ВыполнитьПакет();
		Инд = 0;
		Для каждого ЗапросПоТипу Из ЗапросыПоТипам Цикл
			ВыборкиПоТипам.Вставить(ЗапросПоТипу.Ключ, Результат[Инд].Выбрать());
			Инд = Инд + 1;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ОбъектыРасчетов", ТаблицаОбъектовОплаты.ВыгрузитьКолонку("ОбъектРасчетов"));
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для каждого СтрокаТаблицы Из ТаблицаОбъектовОплаты Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ОбъектОплаты) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Ссылка", СтрокаТаблицы.ОбъектОплаты);
		
		НаборЗаписей = РегистрыСведений.ГрафикПлатежей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектОплаты.Установить(СтрокаТаблицы.ОбъектОплаты);
		НаборЗаписей.Отбор.ПоступлениеСписание.Установить(ПоступлениеСписание);
		
		ТипОбъектаОплаты = ОбщегоНазначения.ИмяТаблицыПоСсылке(СтрокаТаблицы.ОбъектОплаты);
		
		ВыборкаРеквизитов = ВыборкиПоТипам.Получить(ТипОбъектаОплаты);
		
		Если ВыборкаРеквизитов.НайтиСледующий(СтруктураПоиска) Тогда
			ПоляГрафика = ИнициализироватьПоляГрафика();
			ЗаполнитьЗначенияСвойств(ПоляГрафика, ВыборкаРеквизитов);
		КонецЕсли;
		
		Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
			
			Запись = НаборЗаписей.Добавить();
			
			ЗаполнитьЗначенияСвойств(Запись, ПоляГрафика);
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			
			Запись.ОбъектОплаты = Выборка.Ссылка;
			Запись.ПоступлениеСписание = ПоступлениеСписание;
			Запись.ОбластьПланирования = ОбластьПланирования;
			
			Запись.БанковскийСчетКасса = Неопределено;
			Если ЗначениеЗаполнено(ПоляГрафика.ФормаОплаты) Тогда
				Если ПоляГрафика.ФормаОплаты = Перечисления.ФормыОплаты.Безналичная Тогда
					Если ЗначениеЗаполнено(ПоляГрафика.БанковскийСчет) Тогда
						Запись.БанковскийСчетКасса = ПоляГрафика.БанковскийСчет;
					ИначеЕсли ЗначениеЗаполнено(ПоляГрафика.БанковскийСчетОрганизации) Тогда
						Запись.БанковскийСчетКасса = ПоляГрафика.БанковскийСчетОрганизации;
					КонецЕсли;
				ИначеЕсли ПоляГрафика.ФормаОплаты = Перечисления.ФормыОплаты.Наличная
					И ЗначениеЗаполнено(ПоляГрафика.Касса) Тогда
					Запись.БанковскийСчетКасса = ПоляГрафика.Касса;
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(ПоляГрафика.Касса) Тогда
					Запись.БанковскийСчетКасса = ПоляГрафика.Касса;
				ИначеЕсли ЗначениеЗаполнено(ПоляГрафика.БанковскийСчет) Тогда
					Запись.БанковскийСчетКасса = ПоляГрафика.БанковскийСчет;
				ИначеЕсли ЗначениеЗаполнено(ПоляГрафика.БанковскийСчетОрганизации) Тогда
					Запись.БанковскийСчетКасса = ПоляГрафика.БанковскийСчетОрганизации;
				КонецЕсли;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ПоляГрафика.СтатьяДвиженияДенежныхСредств) Тогда
				Если ЗначениеЗаполнено(ПоляГрафика.ДоговорСтатьяДвиженияДенежныхСредств) Тогда
					Запись.СтатьяДвиженияДенежныхСредств = ПоляГрафика.ДоговорСтатьяДвиженияДенежныхСредств;
				ИначеЕсли ЗначениеЗаполнено(ПоляГрафика.СоглашениеСтатьяДвиженияДенежныхСредств) Тогда
					Запись.СтатьяДвиженияДенежныхСредств = ПоляГрафика.СоглашениеСтатьяДвиженияДенежныхСредств;
				Иначе
					Запись.СтатьяДвиженияДенежныхСредств =
						Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(ПоляГрафика.ХозяйственнаяОперация);
				КонецЕсли;
			КонецЕсли;
			
			Запись.Ответственный = ПоляГрафика.Менеджер;
			Запись.ТипОбъектаОплаты = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипОбъектаОплаты);
		КонецЦикла;
		Выборка.Сбросить();
		ВыборкаРеквизитов.Сбросить();
		
		НачатьТранзакцию();
		Попытка
			Если Очередь <> Неопределено Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			Иначе
				НаборЗаписей.Записать();
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось записать график платежей по: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", СтрокаТаблицы.ОбъектОплаты);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,,
				СтрокаТаблицы.ОбъектОплаты, ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьГрафикПлатежейПоДенежнымСредствамКВыплате(ОбъектыОплаты, ТекстЗапроса, ИдентификаторОбъектаМетаданных, Очередь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОбъектыОплаты", ОбъектыОплаты);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для каждого ОбъектОплаты Из ОбъектыОплаты Цикл
		
		СтруктураПоиска = Новый Структура("ОбъектОплаты", ОбъектОплаты);
		
		НаборЗаписей = РегистрыСведений.ГрафикПлатежей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектОплаты.Установить(ОбъектОплаты);
		
		Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
			
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			
			Запись.ТипОбъектаОплаты = ИдентификаторОбъектаМетаданных;
		КонецЦикла;
		Выборка.Сбросить();
		
		ЗаписатьНабор(НаборЗаписей, ОбъектОплаты, Очередь);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьГрафикПлатежейПоФинансовымИнструментам(ОбъектыОплаты, ТекстЗапроса, ИдентификаторОбъектаМетаданных, Очередь, НомерЗапроса, ДопПараметр = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОбъектыОплаты", ОбъектыОплаты);
	Запрос.УстановитьПараметр("ДопПараметр", ДопПараметр);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = Результат[НомерЗапроса].Выбрать();
	ВыборкаРеквизитов = Результат[НомерЗапроса + 1].Выбрать();
	
	Для каждого ОбъектОплаты Из ОбъектыОплаты Цикл
		
		Если Не ЗначениеЗаполнено(ОбъектОплаты) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("ОбъектОплаты", ОбъектОплаты);
		
		НаборЗаписей = РегистрыСведений.ГрафикПлатежей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектОплаты.Установить(ОбъектОплаты);
		
		ВыборкаРеквизитов.НайтиСледующий(СтруктураПоиска);
		
		Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
			
			Запись = НаборЗаписей.Добавить();
			
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаРеквизитов);
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			
			Запись.БанковскийСчетКасса = Неопределено;
			Если ЗначениеЗаполнено(ВыборкаРеквизитов.ФормаОплаты) Тогда
				Если ВыборкаРеквизитов.ФормаОплаты = Перечисления.ФормыОплаты.Безналичная Тогда
					Если ЗначениеЗаполнено(ВыборкаРеквизитов.БанковскийСчет) Тогда
						Запись.БанковскийСчетКасса = ВыборкаРеквизитов.БанковскийСчет;
					КонецЕсли;
				ИначеЕсли ВыборкаРеквизитов.ФормаОплаты = Перечисления.ФормыОплаты.Наличная
					И ЗначениеЗаполнено(ВыборкаРеквизитов.Касса) Тогда
					Запись.БанковскийСчетКасса = ВыборкаРеквизитов.Касса;
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(ВыборкаРеквизитов.Касса) Тогда
					Запись.БанковскийСчетКасса = ВыборкаРеквизитов.Касса;
				ИначеЕсли ЗначениеЗаполнено(ВыборкаРеквизитов.БанковскийСчет) Тогда
					Запись.БанковскийСчетКасса = ВыборкаРеквизитов.БанковскийСчет;
				КонецЕсли;
			КонецЕсли;
			
			Если ТипЗнч(ОбъектОплаты) = Тип("СправочникСсылка.ДоговорыКредитовИДепозитов") Тогда
				Если Выборка.ПоступлениеСписание = Перечисления.ТипыДвиженияДенежныхСредств.Списание
					И ВыборкаРеквизитов.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм
					Или Выборка.ПоступлениеСписание = Перечисления.ТипыДвиженияДенежныхСредств.Поступление
					И (ВыборкаРеквизитов.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Депозит
						Или ВыборкаРеквизитов.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный) Тогда
					
					Если Выборка.ТипСуммы = Перечисления.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг Тогда
						Запись.СтатьяДвиженияДенежныхСредств = ВыборкаРеквизитов.СтатьяДДСОсновногоДолга;
					ИначеЕсли Выборка.ТипСуммы = Перечисления.ТипыСуммГрафикаКредитовИДепозитов.Проценты Тогда
						Запись.СтатьяДвиженияДенежныхСредств = ВыборкаРеквизитов.СтатьяДДСПроцентов;
					ИначеЕсли Выборка.ТипСуммы = Перечисления.ТипыСуммГрафикаКредитовИДепозитов.Комиссия Тогда
						Запись.СтатьяДвиженияДенежныхСредств = ВыборкаРеквизитов.СтатьяДДСКомиссии;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Запись.ТипОбъектаОплаты = ИдентификаторОбъектаМетаданных;
		КонецЦикла;
		Выборка.Сбросить();
		ВыборкаРеквизитов.Сбросить();
		
		УстановитьПривилегированныйРежим(Истина);
		ЗаписатьНабор(НаборЗаписей, ОбъектОплаты, Очередь);
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьНабор(НаборЗаписей, ОбъектОплаты, Очередь)
	
	НачатьТранзакцию();
	Попытка
		Если Очередь <> Неопределено Тогда
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		Иначе
			НаборЗаписей.Записать();
		КонецЕсли;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru = 'Не удалось записать график платежей по: %Ссылка% по причине: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ОбъектОплаты);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,,
			ОбъектОплаты, ТекстСообщения);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Функция ТекстЗапросаГрафикПлатежейПоРасчетамСКлиентами()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток КАК КОплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|			ОбъектРасчетов В (&ОбъектыРасчетов)
	|		) КАК Расчеты
	|
	|ГДЕ
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.КОплатеПриход КАК КОплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Обороты(,,
	|			День,
	|			(ОбъектРасчетов, АналитикаУчетаПоПартнерам, Валюта) В 
	|			(ВЫБРАТЬ
	|				Остатки.ОбъектРасчетов,
	|				Остатки.АналитикаУчетаПоПартнерам,
	|				Остатки.Валюта
	|			ИЗ
	|				Остатки КАК Остатки)
	|		) КАК Расчеты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КОплате) - МАКСИМУМ(ГрафикОплаты.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КОплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0))
	|	КОНЕЦ КАК Сумма
	|	
	|ПОМЕСТИТЬ ГрафикОплатыРассчитанный
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И ГрафикОплатыИтог.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И ГрафикОплатыИтог.Валюта = ГрафикОплаты.Валюта
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И Остатки.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И Остатки.Валюта = ГрафикОплаты.Валюта
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект КАК Ссылка,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент КАК ПлательщикПолучатель,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	СУММА(ГрафикОплаты.Сумма) КАК Сумма
	|ИЗ
	|	ГрафикОплатыРассчитанный КАК ГрафикОплаты
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация,
	|	ГрафикОплаты.Валюта
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГрафикПлатежейПоВозвратамКлиентам()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	-(Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток) КАК КОплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|			ОбъектРасчетов В (&ОбъектыРасчетов)
	|		) КАК Расчеты
	|
	|ГДЕ
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.КОплатеРасход КАК КОплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Обороты(,,
	|			День,
	|			(ОбъектРасчетов, АналитикаУчетаПоПартнерам, Валюта) В 
	|			(ВЫБРАТЬ
	|				Остатки.ОбъектРасчетов,
	|				Остатки.АналитикаУчетаПоПартнерам,
	|				Остатки.Валюта
	|			ИЗ
	|				Остатки КАК Остатки)
	|		) КАК Расчеты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КОплате) - МАКСИМУМ(ГрафикОплаты.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КОплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0))
	|	КОНЕЦ КАК Сумма
	|	
	|ПОМЕСТИТЬ ГрафикОплатыРассчитанный
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И ГрафикОплатыИтог.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И ГрафикОплатыИтог.Валюта = ГрафикОплаты.Валюта
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И Остатки.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И Остатки.Валюта = ГрафикОплаты.Валюта
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект КАК Ссылка,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент КАК ПлательщикПолучатель,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	СУММА(ГрафикОплаты.Сумма) КАК Сумма
	|ИЗ
	|	ГрафикОплатыРассчитанный КАК ГрафикОплаты
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация,
	|	ГрафикОплаты.Валюта
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГрафикПлатежейПоРасчетамСКлиентамиНоваяАрхитектура()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток КАК КОплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|			ОбъектРасчетов В (&ОбъектыРасчетов)
	|		) КАК Расчеты
	|
	|ГДЕ
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланОплат.ДатаПлановогоПогашения КАК ДатаПлановогоПогашения,
	|	ПланОплат.ДатаВозникновения КАК ДатаВозникновения,
	|	ПланОплат.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ПланОплат.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ПланОплат.Валюта КАК Валюта,
	|	ПланОплат.КОплатеОстаток КАК КОплате
	|ПОМЕСТИТЬ ОстаткиРасчетыСКлиентами
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПланОплат.Остатки(, ОбъектРасчетов В (&ОбъектыРасчетов)) КАК ПланОплат
	|ГДЕ
	|	ПланОплат.КОплатеОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.ДатаПлановогоПогашения,
	|	Расчеты.ДатаВозникновения,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта,
	|	Расчеты.ДолгОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам.Остатки(, ОбъектРасчетов В (&ОбъектыРасчетов)) КАК Расчеты
	|ГДЕ
	|	Расчеты.ДолгОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОстаткиРасчетыСКлиентами.ДатаПлановогоПогашения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА ОстаткиРасчетыСКлиентами.ДатаВозникновения = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(ОбъектыРасчетов.Дата, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|									ТОГДА &ТекущаяДата
	|								ИНАЧЕ ОбъектыРасчетов.Дата
	|							КОНЕЦ
	|					ИНАЧЕ ОстаткиРасчетыСКлиентами.ДатаВозникновения
	|				КОНЕЦ
	|		ИНАЧЕ ОстаткиРасчетыСКлиентами.ДатаПлановогоПогашения
	|	КОНЕЦ КАК Период,
	|	ОстаткиРасчетыСКлиентами.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ОстаткиРасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ОстаткиРасчетыСКлиентами.Валюта КАК Валюта,
	|	ОстаткиРасчетыСКлиентами.КОплате КАК КОплате
	|ПОМЕСТИТЬ ОстаткиРасчетовСПериодом
	|ИЗ
	|	ОстаткиРасчетыСКлиентами КАК ОстаткиРасчетыСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО ОстаткиРасчетыСКлиентами.ОбъектРасчетов = ОбъектыРасчетов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Валюта КАК Валюта,
	|	СУММА(ВложенныйЗапрос.КОплате) КАК КОплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ ОстаткиРасчетовСПериодом КАК ВложенныйЗапрос
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ОбъектРасчетов,
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Валюта
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КОплате) - МАКСИМУМ(ГрафикОплаты.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КОплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0))
	|	КОНЕЦ КАК Сумма
	|	
	|ПОМЕСТИТЬ ГрафикОплатыРассчитанный
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И ГрафикОплатыИтог.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И ГрафикОплатыИтог.Валюта = ГрафикОплаты.Валюта
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И Остатки.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И Остатки.Валюта = ГрафикОплаты.Валюта
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект КАК Ссылка,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент КАК ПлательщикПолучатель,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	СУММА(ГрафикОплаты.Сумма) КАК Сумма
	|ИЗ
	|	ГрафикОплатыРассчитанный КАК ГрафикОплаты
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация,
	|	ГрафикОплаты.Валюта
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГрафикПлатежейПоВозвратамКлиентамНоваяАрхитектура()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	-(Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток) КАК КОплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|			ОбъектРасчетов В (&ОбъектыРасчетов)
	|		) КАК Расчеты
	|
	|ГДЕ
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Валюта КАК Валюта,
	|	СУММА(ВложенныйЗапрос.КОплате) КАК КОплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ (
	|	ВЫБРАТЬ
	|		ПланОплат.ДатаПлановогоПогашения КАК Период,
	|		ПланОплат.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ПланОплат.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|		ПланОплат.Валюта КАК Валюта,
	|		ПланОплат.КОплатеОстаток КАК КОплате
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентамиПланОплат.Остатки(, ОбъектРасчетов В (&ОбъектыРасчетов)) КАК ПланОплат
	|	ГДЕ
	|		ПланОплат.КОплатеОстаток > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.ДатаПлановогоПогашения КАК Период,
	|		Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|		Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|		Расчеты.Валюта КАК Валюта,
	|		Расчеты.ДолгОстаток КАК КОплате
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентамиПоСрокам.Остатки(, ОбъектРасчетов В (&ОбъектыРасчетов)) КАК Расчеты
	|	ГДЕ
	|		Расчеты.ДолгОстаток > 0) КАК ВложенныйЗапрос
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ОбъектРасчетов,
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Валюта
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КОплате) - МАКСИМУМ(ГрафикОплаты.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КОплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0))
	|	КОНЕЦ КАК Сумма
	|	
	|ПОМЕСТИТЬ ГрафикОплатыРассчитанный
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И ГрафикОплатыИтог.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И ГрафикОплатыИтог.Валюта = ГрафикОплаты.Валюта
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И Остатки.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И Остатки.Валюта = ГрафикОплаты.Валюта
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект КАК Ссылка,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент КАК ПлательщикПолучатель,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	СУММА(ГрафикОплаты.Сумма) КАК Сумма
	|ИЗ
	|	ГрафикОплатыРассчитанный КАК ГрафикОплаты
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация,
	|	ГрафикОплаты.Валюта
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГрафикПлатежейПоРасчетамСПоставщиками()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	-(Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток) КАК КОплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(,
	|			ОбъектРасчетов В (&ОбъектыРасчетов)
	|		) КАК Расчеты
	|
	|ГДЕ
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.КОплатеРасход КАК КОплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Обороты(,,
	|			День,
	|			(ОбъектРасчетов, АналитикаУчетаПоПартнерам, Валюта) В 
	|			(ВЫБРАТЬ
	|				Остатки.ОбъектРасчетов,
	|				Остатки.АналитикаУчетаПоПартнерам,
	|				Остатки.Валюта
	|			ИЗ
	|				Остатки КАК Остатки)
	|		) КАК Расчеты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КОплате) - МАКСИМУМ(ГрафикОплаты.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КОплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0))
	|	КОНЕЦ КАК Сумма
	|	
	|ПОМЕСТИТЬ ГрафикОплатыРассчитанный
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И ГрафикОплатыИтог.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И ГрафикОплатыИтог.Валюта = ГрафикОплаты.Валюта
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И Остатки.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И Остатки.Валюта = ГрафикОплаты.Валюта
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект КАК Ссылка,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент КАК ПлательщикПолучатель,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	СУММА(ГрафикОплаты.Сумма) КАК Сумма
	|ИЗ
	|	ГрафикОплатыРассчитанный КАК ГрафикОплаты
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация,
	|	ГрафикОплаты.Валюта
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГрафикПлатежейПоВозвратамОтПоставщиков()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток КАК КОплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(,
	|			ОбъектРасчетов В (&ОбъектыРасчетов)
	|		) КАК Расчеты
	|
	|ГДЕ
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.КОплатеПриход КАК КОплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Обороты(,,
	|			День,
	|			(ОбъектРасчетов, АналитикаУчетаПоПартнерам, Валюта) В 
	|			(ВЫБРАТЬ
	|				Остатки.ОбъектРасчетов,
	|				Остатки.АналитикаУчетаПоПартнерам,
	|				Остатки.Валюта
	|			ИЗ
	|				Остатки КАК Остатки)
	|		) КАК Расчеты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КОплате) - МАКСИМУМ(ГрафикОплаты.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КОплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0))
	|	КОНЕЦ КАК Сумма
	|	
	|ПОМЕСТИТЬ ГрафикОплатыРассчитанный
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И ГрафикОплатыИтог.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И ГрафикОплатыИтог.Валюта = ГрафикОплаты.Валюта
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И Остатки.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И Остатки.Валюта = ГрафикОплаты.Валюта
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект КАК Ссылка,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент КАК ПлательщикПолучатель,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	СУММА(ГрафикОплаты.Сумма) КАК Сумма
	|ИЗ
	|	ГрафикОплатыРассчитанный КАК ГрафикОплаты
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация,
	|	ГрафикОплаты.Валюта
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГрафикПлатежейПоРасчетамСПоставщикамиНоваяАрхитектура()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	-(Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток) КАК КОплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(,
	|			ОбъектРасчетов В (&ОбъектыРасчетов)
	|		) КАК Расчеты
	|
	|ГДЕ
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланОплат.ДатаПлановогоПогашения КАК ДатаПлановогоПогашения,
	|	ПланОплат.ДатаВозникновения КАК ДатаВозникновения,
	|	ПланОплат.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ПланОплат.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ПланОплат.Валюта КАК Валюта,
	|	ПланОплат.КОплатеОстаток КАК КОплате
	|ПОМЕСТИТЬ ОстаткиРасчетыСПоставщиками
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПланОплат.Остатки(,ОбъектРасчетов В (&ОбъектыРасчетов)) КАК ПланОплат
	|ГДЕ
	|	ПланОплат.КОплатеОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.ДатаПлановогоПогашения,
	|	Расчеты.ДатаВозникновения,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта,
	|	Расчеты.ДолгОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам.Остатки(, ОбъектРасчетов В (&ОбъектыРасчетов)) КАК Расчеты
	|ГДЕ
	|	Расчеты.ДолгОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОстаткиРасчетыСПоставщиками.ДатаПлановогоПогашения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА ОстаткиРасчетыСПоставщиками.ДатаВозникновения = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(ОбъектыРасчетов.Дата, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|									ТОГДА &ТекущаяДата
	|								ИНАЧЕ ОбъектыРасчетов.Дата
	|							КОНЕЦ
	|					ИНАЧЕ ОстаткиРасчетыСПоставщиками.ДатаВозникновения
	|				КОНЕЦ
	|		ИНАЧЕ ОстаткиРасчетыСПоставщиками.ДатаПлановогоПогашения
	|	КОНЕЦ КАК Период,
	|	ОстаткиРасчетыСПоставщиками.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ОстаткиРасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ОстаткиРасчетыСПоставщиками.Валюта КАК Валюта,
	|	ОстаткиРасчетыСПоставщиками.КОплате КАК КОплате
	|ПОМЕСТИТЬ ОстаткиРасчетовСПериодом
	|ИЗ
	|	ОстаткиРасчетыСПоставщиками КАК ОстаткиРасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО ОстаткиРасчетыСПоставщиками.ОбъектРасчетов = ОбъектыРасчетов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Валюта КАК Валюта,
	|	СУММА(ВложенныйЗапрос.КОплате) КАК КОплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ ОстаткиРасчетовСПериодом КАК ВложенныйЗапрос
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ОбъектРасчетов,
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Валюта
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КОплате) - МАКСИМУМ(ГрафикОплаты.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КОплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0))
	|	КОНЕЦ КАК Сумма
	|	
	|ПОМЕСТИТЬ ГрафикОплатыРассчитанный
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И ГрафикОплатыИтог.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И ГрафикОплатыИтог.Валюта = ГрафикОплаты.Валюта
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И Остатки.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И Остатки.Валюта = ГрафикОплаты.Валюта
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект КАК Ссылка,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент КАК ПлательщикПолучатель,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	СУММА(ГрафикОплаты.Сумма) КАК Сумма
	|ИЗ
	|	ГрафикОплатыРассчитанный КАК ГрафикОплаты
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация,
	|	ГрафикОплаты.Валюта
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГрафикПлатежейПоВозвратамОтПоставщиковНоваяАрхитектура()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток КАК КОплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(,
	|			ОбъектРасчетов В (&ОбъектыРасчетов)
	|		) КАК Расчеты
	|
	|ГДЕ
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланОплат.ДатаПлановогоПогашения КАК Период,
	|	ПланОплат.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ПланОплат.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ПланОплат.Валюта КАК Валюта,
	|	СУММА(ПланОплат.КОплатеОстаток) КАК КОплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПланОплат.Остатки(, ОбъектРасчетов В (&ОбъектыРасчетов)) КАК ПланОплат
	|ГДЕ
	|	ПланОплат.КОплатеОстаток <> 0
	|СГРУППИРОВАТЬ ПО
	|	ПланОплат.ДатаПлановогоПогашения,
	|	ПланОплат.ОбъектРасчетов,
	|	ПланОплат.АналитикаУчетаПоПартнерам,
	|	ПланОплат.Валюта
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КОплате) - МАКСИМУМ(ГрафикОплаты.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КОплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0))
	|	КОНЕЦ КАК Сумма
	|	
	|ПОМЕСТИТЬ ГрафикОплатыРассчитанный
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И ГрафикОплатыИтог.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И ГрафикОплатыИтог.Валюта = ГрафикОплаты.Валюта
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.ОбъектРасчетов = ГрафикОплаты.ОбъектРасчетов
	|		И Остатки.АналитикаУчетаПоПартнерам = ГрафикОплаты.АналитикаУчетаПоПартнерам
	|		И Остатки.Валюта = ГрафикОплаты.Валюта
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.ОбъектРасчетов,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам,
	|	ГрафикОплаты.Валюта
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КОплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КОплате, 0)) > 0
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект КАК Ссылка,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент КАК ПлательщикПолучатель,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ГрафикОплаты.Валюта КАК Валюта,
	|	СУММА(ГрафикОплаты.Сумма) КАК Сумма
	|ИЗ
	|	ГрафикОплатыРассчитанный КАК ГрафикОплаты
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.ДатаПлатежа,
	|	ГрафикОплаты.ОбъектРасчетов.Объект,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Контрагент,
	|	ГрафикОплаты.АналитикаУчетаПоПартнерам.Организация,
	|	ГрафикОплаты.Валюта
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГрафикПлатежейПоЗаявкам()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка,
	|	ДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредства.СуммаОстаток КАК КВыплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКВыплате.Остатки(,
	|			ЗаявкаНаРасходованиеДенежныхСредств В (&ОбъектыОплаты)
	|		) КАК ДенежныеСредства
	|
	|ГДЕ
	|	ДенежныеСредства.СуммаОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаРасходованиеДенежныхСредств,
	|	БанковскийСчетКасса
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДенежныеСредства.Период КАК Период,
	|	ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка,
	|	ДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредства.СуммаПриход КАК КВыплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКВыплате.Обороты(,,
	|			День,
	|			(ЗаявкаНаРасходованиеДенежныхСредств, БанковскийСчетКасса) В
	|			(ВЫБРАТЬ
	|				Остатки.Заявка,
	|				Остатки.БанковскийСчетКасса
	|			ИЗ
	|				Остатки КАК Остатки)
	|		) КАК ДенежныеСредства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаРасходованиеДенежныхСредств,
	|	БанковскийСчетКасса
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.Заявка КАК Ссылка,
	|	ГрафикОплаты.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КВыплате) - МАКСИМУМ(ГрафикОплаты.КВыплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КВыплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КВыплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КВыплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КВыплате, 0))
	|	КОНЕЦ КАК Сумма
	|
	|ПОМЕСТИТЬ ГрафикПлатежейИтог
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.Заявка = ГрафикОплаты.Заявка
	|		И ГрафикОплатыИтог.БанковскийСчетКасса = ГрафикОплаты.БанковскийСчетКасса
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.Заявка = ГрафикОплаты.Заявка
	|		И Остатки.БанковскийСчетКасса = ГрафикОплаты.БанковскийСчетКасса
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.Заявка,
	|	ГрафикОплаты.БанковскийСчетКасса
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КВыплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КВыплате, 0)) > 0
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикПлатежей.Ссылка КАК ОбъектОплаты,
	|	ГрафикПлатежей.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Списание) КАК ПоступлениеСписание,
	|	ВЫБОР
	|		КОГДА Заявка.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			)
	|		ТОГДА
	|			Заявка.ПодотчетноеЛицо
	|		КОГДА Заявка.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|			)
	|		ТОГДА
	|			Заявка.ОрганизацияПолучатель
	|		ИНАЧЕ
	|			Заявка.Контрагент
	|	КОНЕЦ КАК ПлательщикПолучатель,
	|	Заявка.Валюта КАК Валюта,
	|	
	|	ГрафикПлатежей.Сумма КАК Сумма,
	|	
	|	Заявка.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Заявка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Заявка.Подразделение КАК Подразделение,
	|	
	|	ВЫБОР КОГДА ГрафикПлатежей.БанковскийСчетКасса ССЫЛКА Справочник.Кассы ТОГДА
	|		ВЫРАЗИТЬ(ГрафикПлатежей.БанковскийСчетКасса КАК Справочник.Кассы).НаправлениеДеятельности
	|	КОГДА ГрафикПлатежей.БанковскийСчетКасса ССЫЛКА Справочник.БанковскиеСчетаОрганизаций ТОГДА
	|		ВЫРАЗИТЬ(ГрафикПлатежей.БанковскийСчетКасса КАК Справочник.БанковскиеСчетаОрганизаций).НаправлениеДеятельности
	|	КОГДА ГрафикПлатежей.БанковскийСчетКасса = НЕОПРЕДЕЛЕНО ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	
	|	Заявка.ПриоритетОплаты КАК Приоритет,
	|	Заявка.КтоЗаявил КАК Ответственный,
	|	Заявка.Номер КАК Номер,
	|	Заявка.Дата КАК Дата,
	|	Заявка.Организация КАК Организация,
	|	Заявка.СуммаДокумента КАК СуммаДокумента,
	|	
	|	ВЫБОР
	|		КОГДА Заявка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредствНеСогласованные)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредств)
	|	КОНЕЦ КАК ОбластьПланирования,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ГрафикПлатежей.БанковскийСчетКасса) = ТИП(Справочник.БанковскиеСчетаОрганизаций) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		КОГДА ТИПЗНАЧЕНИЯ(ГрафикПлатежей.БанковскийСчетКасса) = ТИП(Справочник.Кассы) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		ИНАЧЕ
	|			Заявка.ФормаОплатыЗаявки
	|	КОНЕЦ КАК ФормаОплаты
	|	
	|ИЗ
	|	ГрафикПлатежейИтог КАК ГрафикПлатежей
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
	|	ПО Заявка.Ссылка = ГрафикПлатежей.Ссылка
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ГрафикПлатежей.Ссылка КАК ОбъектОплаты,
	|	ВЫБОР
	|		КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная) ТОГДА
	|			Заявка.КассаПолучатель
	|		КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) ТОГДА
	|			Заявка.БанковскийСчетПолучатель
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК БанковскийСчетКасса,
	
	|	ГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	
	|	ВЫБОР
	|		КОГДА Заявка.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|			)
	|		ТОГДА
	|			Заявка.Организация
	|		ИНАЧЕ
	|			Заявка.Контрагент
	|	КОНЕЦ КАК ПлательщикПолучатель,
	
	|	ВЫБОР
	|		КОГДА Заявка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты) ТОГДА
	|			Заявка.ВалютаКонвертации
	|		ИНАЧЕ
	|			Заявка.Валюта
	|	КОНЕЦ КАК Валюта,
	|	
	|	СУММА(ВЫБОР
	|		КОГДА Заявка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты) ТОГДА
	|			ВЫБОР
	|				КОГДА Заявка.ВалютаКонвертации = Заявка.Организация.ВалютаРегламентированногоУчета ТОГДА
	|					ВЫБОР КОГДА Заявка.КратностьКурсаКонвертации <> 0 ТОГДА
	|						ГрафикПлатежей.Сумма * Заявка.КурсКонвертации / Заявка.КратностьКурсаКонвертации
	|					ИНАЧЕ
	|						0
	|					КОНЕЦ
	|				ИНАЧЕ
	|					ВЫБОР КОГДА Заявка.КурсКонвертации <> 0 ТОГДА
	|						ГрафикПлатежей.Сумма / Заявка.КурсКонвертации * Заявка.КратностьКурсаКонвертации
	|					ИНАЧЕ
	|						0
	|					КОНЕЦ
	|				КОНЕЦ
	|			ИНАЧЕ
	|				ГрафикПлатежей.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	
	|	Заявка.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Заявка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Заявка.Подразделение КАК Подразделение,
	|	
	|	ВЫБОР
	|		КОГДА Заявка.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|			) ТОГДА
	|				ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная) ТОГДА
	|					Заявка.КассаПолучатель.НаправлениеДеятельности
	|				ИНАЧЕ
	|					Заявка.БанковскийСчетПолучатель.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	
	|	Заявка.ПриоритетОплаты КАК Приоритет,
	|	Заявка.КтоЗаявил КАК Ответственный,
	|	Заявка.Номер КАК Номер,
	|	Заявка.Дата КАК Дата,
	|	
	|	ВЫБОР
	|		КОГДА Заявка.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|			) ТОГДА
	|				Заявка.ОрганизацияПолучатель
	|		ИНАЧЕ
	|			Заявка.Организация
	|	КОНЕЦ КАК Организация,
	|	
	|	Заявка.СуммаДокумента КАК СуммаДокумента,
	|	
	|	ВЫБОР
	|		КОГДА Заявка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредствНеСогласованные)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредств)
	|	КОНЕЦ КАК ОбластьПланирования,
	|	Заявка.ФормаОплатыЗаявки КАК ФормаОплаты
	|	
	|ИЗ
	|	ГрафикПлатежейИтог КАК ГрафикПлатежей
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
	|	ПО Заявка.Ссылка = ГрафикПлатежей.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Константы
	|	ПО ИСТИНА
	|	
	|ГДЕ
	|	Заявка.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|	)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикПлатежей.Ссылка,
	|	Заявка.Ссылка,
	|	ГрафикПлатежей.ДатаПлатежа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГрафикПлатежей.Ссылка КАК ОбъектОплаты,
	|	ВЫБОР
	|		КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная) ТОГДА
	|			Заявка.КассаПолучатель
	|		КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) ТОГДА
	|			Заявка.БанковскийСчетПолучатель
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК БанковскийСчетКасса,
	
	|	ГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	
	|	Заявка.Организация КАК ПлательщикПолучатель,
	
	|	Заявка.Валюта КАК Валюта,
	|	
	|	СУММА(ГрафикПлатежей.Сумма) КАК Сумма,
	|	
	|	Заявка.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Заявка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Заявка.Подразделение КАК Подразделение,
	|	
	|	ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная) ТОГДА
	|		Заявка.КассаПолучатель.НаправлениеДеятельности
	|	ИНАЧЕ
	|		Заявка.БанковскийСчетПолучатель.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	
	|	Заявка.ПриоритетОплаты КАК Приоритет,
	|	Заявка.КтоЗаявил КАК Ответственный,
	|	Заявка.Номер КАК Номер,
	|	Заявка.Дата КАК Дата,
	|	
	|	Заявка.ОрганизацияПолучатель КАК Организация,
	|	
	|	Заявка.СуммаДокумента КАК СуммаДокумента,
	|	
	|	ВЫБОР
	|		КОГДА Заявка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредствНеСогласованные)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредств)
	|	КОНЕЦ КАК ОбластьПланирования,
	|	Заявка.ФормаОплатыЗаявки КАК ФормаОплаты
	|	
	|ИЗ
	|	ГрафикПлатежейИтог КАК ГрафикПлатежей
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
	|	ПО Заявка.Ссылка = ГрафикПлатежей.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Константы
	|	ПО ИСТИНА
	|	
	|ГДЕ
	|	Заявка.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|	И НЕ Заявка.КонтролироватьОплатуПоОбъектамРасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикПлатежей.Ссылка,
	|	Заявка.Ссылка,
	|	ГрафикПлатежей.ДатаПлатежа
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаГрафикПлатежейПоЗаявкамНаКомандировку()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка,
	|	ДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредства.СуммаОстаток КАК КВыплате
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКВыплате.Остатки(,
	|			ЗаявкаНаРасходованиеДенежныхСредств В (&ОбъектыОплаты)
	|		) КАК ДенежныеСредства
	|
	|ГДЕ
	|	ДенежныеСредства.СуммаОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаРасходованиеДенежныхСредств,
	|	БанковскийСчетКасса
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДенежныеСредства.Период КАК Период,
	|	ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка,
	|	ДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредства.СуммаПриход КАК КВыплате
	|ПОМЕСТИТЬ ГрафикОплаты
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКВыплате.Обороты(,,
	|			День,
	|			(ЗаявкаНаРасходованиеДенежныхСредств, БанковскийСчетКасса) В
	|			(ВЫБРАТЬ
	|				Остатки.Заявка,
	|				Остатки.БанковскийСчетКасса
	|			ИЗ
	|				Остатки КАК Остатки)
	|		) КАК ДенежныеСредства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаРасходованиеДенежныхСредств,
	|	БанковскийСчетКасса
	|;
	|
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикОплаты.Период КАК ДатаПлатежа,
	|	ГрафикОплаты.Заявка КАК Ссылка,
	|	ГрафикОплаты.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(Остатки.КВыплате) - МАКСИМУМ(ГрафикОплаты.КВыплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КВыплате, 0)) > 0
	|		ТОГДА
	|			МАКСИМУМ(ГрафикОплаты.КВыплате)
	|		ИНАЧЕ
	|			МАКСИМУМ(Остатки.КВыплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КВыплате, 0))
	|	КОНЕЦ КАК Сумма
	|
	|ПОМЕСТИТЬ ГрафикПлатежейИтог
	|ИЗ
	|	ГрафикОплаты КАК ГрафикОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ГрафикОплаты КАК ГрафикОплатыИтог
	|	ПО
	|		ГрафикОплатыИтог.Заявка = ГрафикОплаты.Заявка
	|		И ГрафикОплатыИтог.БанковскийСчетКасса = ГрафикОплаты.БанковскийСчетКасса
	|		И ГрафикОплатыИтог.Период > ГрафикОплаты.Период
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Остатки КАК Остатки
	|	ПО
	|		Остатки.Заявка = ГрафикОплаты.Заявка
	|		И Остатки.БанковскийСчетКасса = ГрафикОплаты.БанковскийСчетКасса
	|		
	|СГРУППИРОВАТЬ ПО
	|	ГрафикОплаты.Период,
	|	ГрафикОплаты.Заявка,
	|	ГрафикОплаты.БанковскийСчетКасса
	|	
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Остатки.КВыплате) - СУММА(ЕСТЬNULL(ГрафикОплатыИтог.КВыплате, 0)) > 0
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикПлатежей.Ссылка КАК ОбъектОплаты,
	|	ГрафикПлатежей.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Списание) КАК ПоступлениеСписание,
	|	Заявка.Сотрудник КАК ПлательщикПолучатель,
	|	Заявка.Валюта КАК Валюта,
	|	
	|	ГрафикПлатежей.Сумма КАК Сумма,
	|	
	|	Заявка.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику) КАК ХозяйственнаяОперация,
	|	Заявка.Подразделение КАК Подразделение,
	|	
	|	ВЫБОР КОГДА ГрафикПлатежей.БанковскийСчетКасса ССЫЛКА Справочник.Кассы ТОГДА
	|		ВЫРАЗИТЬ(ГрафикПлатежей.БанковскийСчетКасса КАК Справочник.Кассы).НаправлениеДеятельности
	|	КОГДА ГрафикПлатежей.БанковскийСчетКасса ССЫЛКА Справочник.БанковскиеСчетаОрганизаций ТОГДА
	|		ВЫРАЗИТЬ(ГрафикПлатежей.БанковскийСчетКасса КАК Справочник.БанковскиеСчетаОрганизаций).НаправлениеДеятельности
	|	КОГДА ГрафикПлатежей.БанковскийСчетКасса = НЕОПРЕДЕЛЕНО ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	
	|	Заявка.Ответственный КАК Ответственный,
	|	Заявка.Номер КАК Номер,
	|	Заявка.Дата КАК Дата,
	|	Заявка.Организация КАК Организация,
	|	Заявка.СуммаДокумента КАК СуммаДокумента,
	|	
	|	ВЫБОР
	|		КОГДА Заявка.Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокСотрудников.Подготовлена),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокСотрудников.Рассматривается)
	|			) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредствНеСогласованные)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредств)
	|	КОНЕЦ КАК ОбластьПланирования,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ГрафикПлатежей.БанковскийСчетКасса) = ТИП(Справочник.БанковскиеСчетаОрганизаций) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		КОГДА ТИПЗНАЧЕНИЯ(ГрафикПлатежей.БанковскийСчетКасса) = ТИП(Справочник.Кассы) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		ИНАЧЕ
	|			Заявка.ФормаОплатыЗаявки
	|	КОНЕЦ КАК ФормаОплаты
	|	
	|ИЗ
	|	ГрафикПлатежейИтог КАК ГрафикПлатежей
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаКомандировку КАК Заявка
	|	ПО Заявка.Ссылка = ГрафикПлатежей.Ссылка
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаГрафикПлатежейПоРаспоряжениямНаОплату()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств КАК Ссылка,
	|	ДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредства.Получатель КАК Получатель,
	|	ДенежныеСредства.Организация КАК Организация,
	|	ДенежныеСредства.СуммаОстаток КАК Сумма
	|	
	|ПОМЕСТИТЬ ДенежныеСредства
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКВыплате.Остатки(, ЗаявкаНаРасходованиеДенежныхСредств В (&ОбъектыОплаты)) КАК ДенежныеСредства
	|	
	|ГДЕ
	|	ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.РаспоряжениеНаПеремещениеДенежныхСредств
	|	И ДенежныеСредства.СуммаОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДенежныеСредства.Ссылка КАК ОбъектОплаты,
	|	ДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	Распоряжение.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Списание) КАК ПоступлениеСписание,
	|	ДенежныеСредства.Получатель КАК ПлательщикПолучатель,
	|	Распоряжение.Валюта КАК Валюта,
	|	
	|	ДенежныеСредства.Сумма КАК Сумма,
	|	
	|	Распоряжение.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Распоряжение.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Распоряжение.Подразделение КАК Подразделение,
	|	Распоряжение.КтоРешил КАК Ответственный,
	|	
	|	ВЫБОР Распоряжение.ХозяйственнаяОперация
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк) ТОГДА
	|			Распоряжение.Касса.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк) ТОГДА
	|			Распоряжение.Касса.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу) ТОГДА
	|			Распоряжение.Касса.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет) ТОГДА
	|			Распоряжение.БанковскийСчет.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка) ТОГДА
	|			Распоряжение.БанковскийСчет.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств) ТОГДА
	|			Распоряжение.БанковскийСчет.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	Распоряжение.Номер КАК Номер,
	|	Распоряжение.Дата КАК Дата,
	|	Распоряжение.Организация КАК Организация,
	|	Распоряжение.СуммаДокумента КАК СуммаДокумента,
	|
	|	ВЫБОР
	|		КОГДА Распоряжение.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРаспоряженийНаПеремещениеДенежныхСредств.НеСогласовано) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.РаспоряженияНаПеремещениеДенежныхСредствНесогласованные)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.РаспоряженияНаПеремещениеДенежныхСредств)
	|	КОНЕЦ КАК ОбластьПланирования,
	|	ВЫБОР
	|		КОГДА Распоряжение.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу))
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		КОГДА Распоряжение.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств))
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты
	|	
	|ИЗ
	|	ДенежныеСредства КАК ДенежныеСредства
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспоряжениеНаПеремещениеДенежныхСредств КАК Распоряжение
	|	ПО
	|		Распоряжение.Ссылка = ДенежныеСредства.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредства.Ссылка КАК ОбъектОплаты,
	|	
	|	ВЫБОР Распоряжение.ХозяйственнаяОперация
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк) ТОГДА
	|			Распоряжение.БанковскийСчетПолучатель
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк) ТОГДА
	|			Распоряжение.БанковскийСчетПолучатель
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу) ТОГДА
	|			Распоряжение.КассаПолучатель
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет) ТОГДА
	|			Распоряжение.БанковскийСчетПолучатель
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка) ТОГДА
	|			Распоряжение.КассаПолучатель
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств) ТОГДА
	|			Распоряжение.КассаПолучатель
	|	КОНЕЦ КАК БанковскийСчетКасса,
	|	
	|	Распоряжение.ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	|	ДенежныеСредства.Получатель КАК ПлательщикПолучатель,
	|	Распоряжение.Валюта КАК Валюта,
	|	
	|	ДенежныеСредства.Сумма КАК Сумма,
	|	
	|	Распоряжение.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Распоряжение.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Распоряжение.Подразделение КАК Подразделение,
	|	Распоряжение.КтоРешил КАК Ответственный,
	|	
	|	ВЫБОР Распоряжение.ХозяйственнаяОперация
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк) ТОГДА
	|			Распоряжение.БанковскийСчетПолучатель.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк) ТОГДА
	|			Распоряжение.БанковскийСчетПолучатель.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу) ТОГДА
	|			Распоряжение.КассаПолучатель.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет) ТОГДА
	|			Распоряжение.БанковскийСчетПолучатель.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка) ТОГДА
	|			Распоряжение.КассаПолучатель.НаправлениеДеятельности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств) ТОГДА
	|			Распоряжение.КассаПолучатель.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	
	|	Распоряжение.Номер КАК Номер,
	|	Распоряжение.Дата КАК Дата,
	|	Распоряжение.Организация КАК Организация,
	|	Распоряжение.СуммаДокумента КАК СуммаДокумента,
	|
	|	ВЫБОР КОГДА Распоряжение.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРаспоряженийНаПеремещениеДенежныхСредств.НеСогласовано) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.РаспоряженияНаПеремещениеДенежныхСредствНесогласованные)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.РаспоряженияНаПеремещениеДенежныхСредств)
	|	КОНЕЦ КАК ОбластьПланирования,
	|	ВЫБОР
	|		КОГДА Распоряжение.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств))
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		КОГДА Распоряжение.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет))
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты
	|
	|ИЗ
	|	ДенежныеСредства КАК ДенежныеСредства
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспоряжениеНаПеремещениеДенежныхСредств КАК Распоряжение
	|	ПО
	|		Распоряжение.Ссылка = ДенежныеСредства.Ссылка
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ Локализация
Функция ТекстЗапросаГрафикПлатежейПоУведомлениямОЗачисленииВалюты()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств КАК Ссылка,
	|	ДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредства.Получатель КАК Получатель,
	|	ДенежныеСредства.Организация КАК Организация,
	|	ДенежныеСредства.СуммаОстаток КАК Сумма
	|	
	|ПОМЕСТИТЬ ДенежныеСредства
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКВыплате.Остатки(, ЗаявкаНаРасходованиеДенежныхСредств В (&ОбъектыОплаты)) КАК ДенежныеСредства
	|	
	|ГДЕ
	|	ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.УведомлениеОЗачисленииВалюты
	|	И ДенежныеСредства.СуммаОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДенежныеСредства.Ссылка КАК ОбъектОплаты,
	|	ДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДОБАВИТЬКДАТЕ(ДанныеДокумента.Дата, ДЕНЬ, ДанныеДокумента.БанковскийСчет.СрокИсполненияПлатежа) КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Списание) КАК ПоступлениеСписание,
	|	ДенежныеСредства.Получатель КАК ПлательщикПолучатель,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	
	|	ДенежныеСредства.Сумма КАК Сумма,
	|	
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет) КАК ХозяйственнаяОперация,
	|	
	|	ДанныеДокумента.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.РаспоряженияНаПеремещениеДенежныхСредств) КАК ОбластьПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) КАК ФормаОплаты
	|	
	|ИЗ
	|	ДенежныеСредства КАК ДенежныеСредства
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОЗачисленииВалюты КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокумента.Ссылка = ДенежныеСредства.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредства.Ссылка КАК ОбъектОплаты,
	|	
	|	ДанныеДокумента.БанковскийСчет.ОсновнойБанковскийСчет КАК БанковскийСчетКасса,
	|	
	|	ДОБАВИТЬКДАТЕ(ДанныеДокумента.Дата, ДЕНЬ, ДанныеДокумента.БанковскийСчет.СрокИсполненияПлатежа) КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	|	ДенежныеСредства.Получатель КАК ПлательщикПолучатель,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	
	|	ДенежныеСредства.Сумма КАК Сумма,
	|	
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет) КАК ХозяйственнаяОперация,
	|	
	|	ДанныеДокумента.БанковскийСчет.ОсновнойБанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.РаспоряженияНаПеремещениеДенежныхСредств) КАК ОбластьПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) КАК ФормаОплаты
	|
	|ИЗ
	|	ДенежныеСредства КАК ДенежныеСредства
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОЗачисленииВалюты КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокумента.Ссылка = ДенежныеСредства.Ссылка
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- Локализация

Функция ТекстЗапросаГрафикПлатежейПоДоговорамКредитовИДепозитов()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка                            КАК ОбъектОплаты,
	|	ДанныеСправочника.ХарактерДоговора                  КАК ХарактерДоговора,
	|	ДанныеСправочника.ВалютаВзаиморасчетов              КАК Валюта,
	|	ДанныеСправочника.БанковскийСчет                    КАК БанковскийСчет,
	|	ДанныеСправочника.Касса                             КАК Касса,
	|	ДанныеСправочника.БанковскийСчетПроцентов           КАК БанковскийСчетПроцентов,
	|	ДанныеСправочника.БанковскийСчетКомиссии            КАК БанковскийСчетКомиссии,
	|	ДанныеСправочника.Контрагент                        КАК ПлательщикПолучатель,
	|	ДанныеСправочника.Организация                       КАК Организация,
	|	ДанныеСправочника.СтатьяДДСПоступленияВыдачи        КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеСправочника.СтатьяДДСОсновногоДолга           КАК СтатьяДДСОсновногоДолга,
	|	ДанныеСправочника.СтатьяДДСПроцентов                КАК СтатьяДДСПроцентов,
	|	ДанныеСправочника.СтатьяДДСКомиссии                 КАК СтатьяДДСКомиссии,
	|	ДанныеСправочника.Подразделение                     КАК Подразделение,
	|	ДанныеСправочника.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	ДанныеСправочника.Ответственный                     КАК Ответственный,
	|	ДанныеСправочника.Номер                             КАК Номер,
	|	ДанныеСправочника.Дата                              КАК Дата,
	|	ДанныеСправочника.СуммаТраншей                      КАК СуммаДокумента,
	|	ДанныеСправочника.ФормаОплаты                       КАК ФормаОплаты,
	|	ВЫБОР ДанныеСправочника.ХарактерДоговора
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.КредитыИлиЗаймыПолученные)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.Депозиты)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ОбластиПланированияПлатежей.ЗаймыВыданные)
	|	КОНЕЦ КАК ОбластьПланирования
	|ПОМЕСТИТЬ Договоры
	|ИЗ
	|	Справочник.ДоговорыКредитовИДепозитов КАК ДанныеСправочника
	|ГДЕ
	|	ДанныеСправочника.Ссылка В (&ОбъектыОплаты)
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектОплаты,
	|	ХарактерДоговора
	|;
	|
	|ВЫБРАТЬ
	|	Расчеты.Договор КАК Договор,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.ТипСуммы КАК ТипСуммы,
	|	Расчеты.СуммаРасход КАК Сумма
	|ПОМЕСТИТЬ ПоступлениеСредств
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам.Обороты(,,,
	|		Договор В (&ОбъектыОплаты)
	|	) КАК Расчеты
	|ГДЕ
	|	Расчеты.СуммаРасход > 0
	|;
	|
	|ВЫБРАТЬ
	|	Расчеты.Договор КАК Договор,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.ТипСуммы КАК ТипСуммы,
	|	Расчеты.СуммаПриход - Расчеты.ОплачиваетсяПриход + Расчеты.ОплачиваетсяРасход КАК Сумма
	|ПОМЕСТИТЬ СписаниеСредств
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам.Обороты(,,,
	|		Договор В (&ОбъектыОплаты)
	|	) КАК Расчеты
	|ГДЕ
	|	Расчеты.СуммаПриход - Расчеты.ОплачиваетсяПриход + Расчеты.ОплачиваетсяРасход > 0
	|;
	|
	|ВЫБРАТЬ // Транши полученного кредита
	|	Договоры.ОбъектОплаты КАК ОбъектОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг) КАК ТипСуммы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам) КАК ХозяйственнаяОперация,
	|	График.Период КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА График.СуммаИтог - График.Сумма - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0) < 0 ТОГДА
	|			График.СуммаИтог - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0)
	|		ИНАЧЕ
	|			График.Сумма
	|	КОНЕЦ КАК Сумма
	|	
	|ИЗ
	|	РегистрСведений.ГрафикТраншейКредитовИДепозитов КАК График
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры
	|		ПО Договоры.ОбъектОплаты = График.ВариантГрафика.Владелец
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоступлениеСредств
	|		ПО ПоступлениеСредств.Договор = Договоры.ОбъектОплаты
	|			И ПоступлениеСредств.Валюта = Договоры.Валюта
	|			И ПоступлениеСредств.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|ГДЕ
	|	Договоры.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И График.ВариантГрафика.Используется
	|	И НЕ График.ВариантГрафика.ПометкаУдаления
	|	И График.Сумма > 0
	|	И График.СуммаИтог - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Транши выданного кредита или депозита
	|	Договоры.ОбъектОплаты КАК ОбъектОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Списание) КАК ПоступлениеСписание,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг) КАК ТипСуммы,
	|	ВЫБОР Договоры.ХарактерДоговора
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	График.Период КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА График.СуммаИтог - График.Сумма - ЕСТЬNULL(СписаниеСредств.Сумма, 0) < 0 ТОГДА
	|			График.СуммаИтог - ЕСТЬNULL(СписаниеСредств.Сумма, 0)
	|		ИНАЧЕ
	|			График.Сумма
	|	КОНЕЦ КАК Сумма
	|	
	|ИЗ
	|	РегистрСведений.ГрафикТраншейКредитовИДепозитов КАК График
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры
	|		ПО Договоры.ОбъектОплаты = График.ВариантГрафика.Владелец
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписаниеСредств
	|		ПО СписаниеСредств.Договор = Договоры.ОбъектОплаты
	|			И СписаниеСредств.Валюта = Договоры.Валюта
	|			И СписаниеСредств.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|ГДЕ
	|	Договоры.ХарактерДоговора В (
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит),
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный))
	|	И График.ВариантГрафика.Используется
	|	И НЕ График.ВариантГрафика.ПометкаУдаления
	|	И График.Сумма > 0
	|	И График.СуммаИтог - ЕСТЬNULL(СписаниеСредств.Сумма, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Оплата полученного кредита
	|	Договоры.ОбъектОплаты КАК ОбъектОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Списание) КАК ПоступлениеСписание,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг) КАК ТипСуммы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам) КАК ХозяйственнаяОперация,
	|	График.Период КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА График.СуммаИтог - График.Сумма - ЕСТЬNULL(СписаниеСредств.Сумма, 0) < 0 ТОГДА
	|			График.СуммаИтог - ЕСТЬNULL(СписаниеСредств.Сумма, 0)
	|		ИНАЧЕ
	|			График.Сумма
	|	КОНЕЦ КАК Сумма
	|
	|ИЗ
	|	РегистрСведений.ГрафикОплатКредитовИДепозитов КАК График
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры
	|		ПО Договоры.ОбъектОплаты = График.ВариантГрафика.Владелец
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписаниеСредств
	|		ПО СписаниеСредств.Договор = Договоры.ОбъектОплаты
	|			И СписаниеСредств.Валюта = Договоры.Валюта
	|			И СписаниеСредств.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	
	|ГДЕ
	|	Договоры.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И График.ВариантГрафика.Используется
	|	И НЕ График.ВариантГрафика.ПометкаУдаления
	|	И График.Сумма > 0
	|	И График.СуммаИтог - ЕСТЬNULL(СписаниеСредств.Сумма, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Оплата процентов полученного кредита
	|	Договоры.ОбъектОплаты КАК ОбъектОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Списание) КАК ПоступлениеСписание,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты) КАК ТипСуммы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам) КАК ХозяйственнаяОперация,
	|	График.Период КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА График.ПроцентыИтог - График.Проценты - ЕСТЬNULL(СписаниеСредств.Сумма, 0) < 0 ТОГДА
	|			График.ПроцентыИтог - ЕСТЬNULL(СписаниеСредств.Сумма, 0)
	|		ИНАЧЕ
	|			График.Проценты
	|	КОНЕЦ КАК Сумма
	|
	|ИЗ
	|	РегистрСведений.ГрафикОплатКредитовИДепозитов КАК График
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры
	|		ПО Договоры.ОбъектОплаты = График.ВариантГрафика.Владелец
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписаниеСредств
	|		ПО СписаниеСредств.Договор = Договоры.ОбъектОплаты
	|			И СписаниеСредств.Валюта = Договоры.Валюта
	|			И СписаниеСредств.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|	
	|ГДЕ
	|	Договоры.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И График.ВариантГрафика.Используется
	|	И НЕ График.ВариантГрафика.ПометкаУдаления
	|	И График.Проценты > 0
	|	И График.ПроцентыИтог - ЕСТЬNULL(СписаниеСредств.Сумма, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Оплата комиссии полученного кредита
	|	Договоры.ОбъектОплаты КАК ОбъектОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Списание) КАК ПоступлениеСписание,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия) КАК ТипСуммы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам) КАК ХозяйственнаяОперация,
	|	График.Период КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА График.КомиссияИтог - График.Комиссия - ЕСТЬNULL(СписаниеСредств.Сумма, 0) < 0 ТОГДА
	|			График.КомиссияИтог - ЕСТЬNULL(СписаниеСредств.Сумма, 0)
	|		ИНАЧЕ
	|			График.Комиссия
	|	КОНЕЦ КАК Сумма
	|
	|ИЗ
	|	РегистрСведений.ГрафикОплатКредитовИДепозитов КАК График
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры
	|		ПО Договоры.ОбъектОплаты = График.ВариантГрафика.Владелец
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписаниеСредств
	|		ПО СписаниеСредств.Договор = Договоры.ОбъектОплаты
	|			И СписаниеСредств.Валюта = Договоры.Валюта
	|			И СписаниеСредств.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|	
	|ГДЕ
	|	Договоры.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И График.ВариантГрафика.Используется
	|	И НЕ График.ВариантГрафика.ПометкаУдаления
	|	И График.Комиссия > 0
	|	И График.КомиссияИтог - ЕСТЬNULL(СписаниеСредств.Сумма, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Оплата выданного кредита, депозита
	|	Договоры.ОбъектОплаты КАК ОбъектОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг) КАК ТипСуммы,
	|	ВЫБОР Договоры.ХарактерДоговора
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	График.Период КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА График.СуммаИтог - График.Сумма - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0) < 0 ТОГДА
	|			График.СуммаИтог - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0)
	|		ИНАЧЕ
	|			График.Сумма
	|	КОНЕЦ КАК Сумма
	|
	|ИЗ
	|	РегистрСведений.ГрафикОплатКредитовИДепозитов КАК График
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры
	|		ПО Договоры.ОбъектОплаты = График.ВариантГрафика.Владелец
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоступлениеСредств
	|		ПО ПоступлениеСредств.Договор = Договоры.ОбъектОплаты
	|			И ПоступлениеСредств.Валюта = Договоры.Валюта
	|			И ПоступлениеСредств.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	
	|ГДЕ
	|	Договоры.ХарактерДоговора В (
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит),
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный))
	|	И График.ВариантГрафика.Используется
	|	И НЕ График.ВариантГрафика.ПометкаУдаления
	|	И График.Сумма > 0
	|	И График.СуммаИтог - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Оплата процентов выданного кредита, депозита
	|	Договоры.ОбъектОплаты КАК ОбъектОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты) КАК ТипСуммы,
	|	ВЫБОР Договоры.ХарактерДоговора
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеПроцентовПоЗаймамВыданным)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	График.Период КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА График.ПроцентыИтог - График.Проценты - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0) < 0 ТОГДА
	|			График.ПроцентыИтог - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0)
	|		ИНАЧЕ
	|			График.Проценты
	|	КОНЕЦ КАК Сумма
	|
	|ИЗ
	|	РегистрСведений.ГрафикОплатКредитовИДепозитов КАК График
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры
	|		ПО Договоры.ОбъектОплаты = График.ВариантГрафика.Владелец
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоступлениеСредств
	|		ПО ПоступлениеСредств.Договор = Договоры.ОбъектОплаты
	|			И ПоступлениеСредств.Валюта = Договоры.Валюта
	|			И ПоступлениеСредств.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|	
	|ГДЕ
	|	Договоры.ХарактерДоговора В (
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит),
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный))
	|	И График.ВариантГрафика.Используется
	|	И НЕ График.ВариантГрафика.ПометкаУдаления
	|	И График.Проценты > 0
	|	И График.ПроцентыИтог - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Оплата комиссии выданного кредита, депозита
	|	Договоры.ОбъектОплаты КАК ОбъектОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление) КАК ПоступлениеСписание,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия) КАК ТипСуммы,
	|	ВЫБОР Договоры.ХарактерДоговора
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	График.Период КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА График.КомиссияИтог - График.Комиссия - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0) < 0 ТОГДА
	|			График.КомиссияИтог - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0)
	|		ИНАЧЕ
	|			График.Комиссия
	|	КОНЕЦ КАК Сумма
	|
	|ИЗ
	|	РегистрСведений.ГрафикОплатКредитовИДепозитов КАК График
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры
	|		ПО Договоры.ОбъектОплаты = График.ВариантГрафика.Владелец
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоступлениеСредств
	|		ПО ПоступлениеСредств.Договор = Договоры.ОбъектОплаты
	|			И ПоступлениеСредств.Валюта = Договоры.Валюта
	|			И ПоступлениеСредств.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|	
	|ГДЕ
	|	Договоры.ХарактерДоговора В (
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит),
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный))
	|	И График.ВариантГрафика.Используется
	|	И НЕ График.ВариантГрафика.ПометкаУдаления
	|	И График.Комиссия > 0
	|	И График.КомиссияИтог - ЕСТЬNULL(ПоступлениеСредств.Сумма, 0) > 0
	|;
	|
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Договоры
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ИнициализироватьПоляГрафика()
	
	ПоляГрафика = Новый Структура("Ссылка, БанковскийСчет, БанковскийСчетОрганизации, Касса, СтатьяДвиженияДенежныхСредств, НаправлениеДеятельности,
		|ХозяйственнаяОперация, Подразделение, Приоритет, Менеджер, Номер, Дата, СуммаДокумента, ФормаОплаты,
		|ДоговорСтатьяДвиженияДенежныхСредств, СоглашениеСтатьяДвиженияДенежныхСредств");
		
	ПоляГрафика.Вставить("Сумма", "СуммаДокумента");
	
	Возврат ПоляГрафика;
	
КонецФункции

Функция НеобрабатываемыеДокументы()
	
	НеОбрабатываемые = Новый Массив;
	НеОбрабатываемые.Добавить(Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств"));
	НеОбрабатываемые.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер"));
	НеОбрабатываемые.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
	НеОбрабатываемые.Добавить(Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств"));
	НеОбрабатываемые.Добавить(Тип("ДокументСсылка.ОперацияПоПлатежнойКарте"));
	//++ Локализация
	НеОбрабатываемые.Добавить(Тип("ДокументСсылка.ОперацияПоЯндексКассе"));
	//-- Локализация
	
	Возврат НеОбрабатываемые;
	
КонецФункции

#КонецОбласти

#КонецЕсли