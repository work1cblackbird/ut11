
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресОписанияТиповГрафика = ПоместитьВоВременноеХранилище(ОписаниеТиповГрафикаПлатежей(),УникальныйИдентификатор);
	ТипыГрафиков = ПолучитьИзВременногоХранилища(АдресОписанияТиповГрафика).ТипыГрафиков;
	
	МассивРеквизитов = Новый Массив;
	ТипРеквизита = Новый ОписаниеТипов("Булево");
	
	Для Каждого ОписаниеЭлементаГруппы Из ТипыГрафиков Цикл
	
		НовыйРеквизит = Новый РеквизитФормы(ОписаниеЭлементаГруппы.ТипГрафика,
								ТипРеквизита,
								"",
								ОписаниеЭлементаГруппы.ЗаголовокОтметкиТипГрафика);
		МассивРеквизитов.Добавить(НовыйРеквизит);
	
	КонецЦикла;
		
	ИзменитьРеквизиты(МассивРеквизитов);
	
	Для Каждого ОписаниеЭлементаГруппы Из ТипыГрафиков Цикл
	
		ЭлементТип = Элементы.Добавить(ОписаниеЭлементаГруппы.ТипГрафика,Тип("ПолеФормы"),Элементы.ГруппаЛево);
		ЭлементТип.Вид						= ВидПоляФормы.ПолеФлажка;
		ЭлементТип.Заголовок				= ОписаниеЭлементаГруппы.ЗаголовокОтметкиТипГрафика;
		ЭлементТип.ПутьКДанным				= ОписаниеЭлементаГруппы.ТипГрафика;
		ЭлементТип.ПоложениеЗаголовка		= ПоложениеЗаголовкаЭлементаФормы.Право;
		ЭтотОбъект[ОписаниеЭлементаГруппы.ТипГрафика] = Истина;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажкиТипам(Команда)
	ИзменитьОтметки(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиТипам(Команда)
	ИзменитьОтметки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Пересчитать(Команда)
	ПересчитатьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОписаниеФильтраРасчета()
	
	ОписаниеФильтраРасчета = Новый Структура;
	ОписаниеФильтраРасчета.Вставить("ОбластиПланирования",Новый Массив);
	Возврат ОписаниеФильтраРасчета;
	
КонецФункции

&НаСервере
Функция ОписаниеТиповГрафикаПлатежей()
	
	ТипыГрафиков = Новый Массив;
	ТипыГрафиков.Добавить(ОписаниеТипаГрафика("Расчеты_с_клиентами"));
	ТипыГрафиков.Добавить(ОписаниеТипаГрафика("Расчеты_с_поставщиками"));
	ТипыГрафиков.Добавить(ОписаниеТипаГрафика("Денежные_средства_к_выплате"));
	ТипыГрафиков.Добавить(ОписаниеТипаГрафика("Денежные_средства_в_пути"));
	ТипыГрафиков.Добавить(ОписаниеТипаГрафика("Поступления_от_банков_по_эквайрингу"));
	ТипыГрафиков.Добавить(ОписаниеТипаГрафика("Финансовые_инструменты"));
	ТипыГрафиков.Добавить(ОписаниеТипаГрафика("Ожидаемые_поступления_денежных_средств"));
	
	ОписаниеТиповГрафикаПлатежей = Новый Структура();
	ОписаниеТиповГрафикаПлатежей.Вставить("ТипыГрафиков",ТипыГрафиков);
	
	Возврат ОписаниеТиповГрафикаПлатежей;
	
КонецФункции

&НаСервере
Функция ОписаниеТипаГрафика(ТипГрафика)
	
	ОписаниеТипаГрафика = Новый Структура;
	ОписаниеТипаГрафика.Вставить("ТипГрафика",СтрЗаменить(ТипГрафика,"_",""));
	ОписаниеТипаГрафика.Вставить("ЗаголовокОтметкиТипГрафика",СтрЗаменить(ТипГрафика,"_"," "));
	
	Возврат ОписаниеТипаГрафика;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьОтметки(Значение)
	
	ТипыГрафиков = ПолучитьИзВременногоХранилища(АдресОписанияТиповГрафика).ТипыГрафиков;
	Для Каждого ОписаниеГрафика Из ТипыГрафиков Цикл
		ЭтотОбъект[ОписаниеГрафика.ТипГрафика] = Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьНаСервере()
	
	Если ЭтотОбъект.РасчетыСКлиентами Тогда
		
		ФильтрРасчетыСКлиентами = ОписаниеФильтраРасчета(); 
		ФильтрРасчетыСКлиентами.Вставить("ЭтоРасчетыСКлиентами",Истина);
		ФильтрРасчетыСКлиентами.ОбластиПланирования.Добавить(
			ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.РасчетыСКлиентами"));
		
		РассчитатьГрафикПлатежейСКлиентамиИПоставщиками(ФильтрРасчетыСКлиентами);
		
	КонецЕсли;
	
	Если ЭтотОбъект.РасчетыСПоставщиками Тогда
		
		ФильтрРасчетыСПоставщиками = ОписаниеФильтраРасчета(); 
		ФильтрРасчетыСПоставщиками.Вставить("ЭтоРасчетыСКлиентами",Ложь);
		ФильтрРасчетыСПоставщиками.ОбластиПланирования.Добавить(
			ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.РасчетыСПоставщиками"));
		
		РассчитатьГрафикПлатежейСКлиентамиИПоставщиками(ФильтрРасчетыСПоставщиками);
		
	КонецЕсли;

	Если ЭтотОбъект.ДенежныеСредстваКВыплате Тогда
		РассчитатьГрафикПлатежейПоДенежнымСредствамКВыплате();
	КонецЕсли;

	Если ЭтотОбъект.ДенежныеСредстваВПути Тогда
		РассчитатьГрафикПлатежейПоДенежнымСредствамВПути();
	КонецЕсли;

	Если ЭтотОбъект.ПоступленияОтБанковПоЭквайрингу Тогда
		РассчитатьГрафикПлатежейПоПоступлениямОтБанкаПоЭквайрингу();
	КонецЕсли;

	Если ЭтотОбъект.ФинансовыеИнструменты Тогда
		РассчитатьГрафикПлатежейПоФинансовымИнструментам();
	КонецЕсли;

	Если ЭтотОбъект.ОжидаемыеПоступленияДенежныхСредств Тогда
		РассчитатьГрафикПлатежейПоОжидаемымПоступлениямДенежныхСредств();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьГрафикПлатежейСКлиентамиИПоставщиками(ПараметрыРасчета)
	
	ЭтоРасчетыСКлиентами = ПараметрыРасчета.ЭтоРасчетыСКлиентами;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВсеОрганизации", Не ЗначениеЗаполнено(Организация));	
	Запрос.УстановитьПараметр("ВсеБанковскиеСчетаИКассы", Не ЗначениеЗаполнено(БанковскийСчетКасса));
	Запрос.УстановитьПараметр("ЭтоКасса", ТипЗНЧ(БанковскийСчетКасса) = Тип("СправочникСсылка.Кассы"));
	Запрос.УстановитьПараметр("Касса",БанковскийСчетКасса);
	Запрос.УстановитьПараметр("БанковскийСчет",БанковскийСчетКасса);
	
	ТекстЗапросаОстатки =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.ОбъектРасчетов
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(,) КАК Расчеты
	|ГДЕ
	|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток < 0";
	
	Если ЭтоРасчетыСКлиентами Тогда
		ТекстЗапросаОстатки =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Расчеты.ОбъектРасчетов
		|ПОМЕСТИТЬ ВТОстатки
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.Остатки(,) КАК Расчеты
		|ГДЕ
		|	Расчеты.КОплатеОстаток - Расчеты.ОплачиваетсяОстаток > 0";
	КонецЕсли;
	
	Запрос.Текст =
	ТекстЗапросаОстатки + ОбщегоНазначения.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ
	|	Остатки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ОбъектыРасчетов.Объект КАК ОбъектОплаты
	|ПОМЕСТИТЬ ВТОбъектыОплаты
	|ИЗ
	|	ВТОстатки КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО Остатки.ОбъектРасчетов = ОбъектыРасчетов.Ссылка
	|ГДЕ	
	|	(ОбъектыРасчетов.Организация = &Организация
	|			ИЛИ &ВсеОрганизации)
	|	И ВЫБОР
	|			КОГДА &ЭтоКасса
	|				ТОГДА ОбъектыРасчетов.Касса = &Касса	
	|						ИЛИ &ВсеБанковскиеСчетаИКассы
	|			ИНАЧЕ ОбъектыРасчетов.БанковскийСчетОрганизации = &БанковскийСчет
	|						ИЛИ &ВсеБанковскиеСчетаИКассы
	|		КОНЕЦ";
	
	Запрос.Выполнить();
	Результат = Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТОбъектыОплаты").ПолучитьДанные();
	Если Не Результат.Пустой() Тогда
		ОчиститьГрафикПлатежей(ПараметрыРасчета,Запрос.МенеджерВременныхТаблиц);
		Если ЭтоРасчетыСКлиентами Тогда
			РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоРасчетамСКлиентами(Результат.Выгрузить());
		Иначе
			РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоРасчетамСПоставщиками(Результат.Выгрузить());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьГрафикПлатежейПоДенежнымСредствамКВыплате()
	
	ПараметрыРасчета = ОписаниеФильтраРасчета();
	ПараметрыРасчета.ОбластиПланирования.Добавить(
		ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредств"));
	ПараметрыРасчета.ОбластиПланирования.Добавить(
		ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.ЗаявкиНаРасходованиеДенежныхСредствНесогласованные"));
	ПараметрыРасчета.ОбластиПланирования.Добавить(
			ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.РаспоряженияНаПеремещениеДенежныхСредств"));
	ПараметрыРасчета.ОбластиПланирования.Добавить(
			ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.РаспоряженияНаПеремещениеДенежныхСредствНесогласованные"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УстановитьОсновнойОтбор(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств КАК ОбъектОплаты
	|ПОМЕСТИТЬ ВТОбъектыОплаты
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКВыплате.Остатки(
	|			,
	|			(Организация = &Организация
	|				ИЛИ &ВсеОрганизации)
	|				И (БанковскийСчетКасса = &БанковскийСчетКасса
	|					ИЛИ &ВсеБанковскиеСчетаИКассы)) КАК ДенежныеСредства
	|ГДЕ
	|	ДенежныеСредства.СуммаОстаток > 0";
	
	Запрос.Выполнить();
	Результат = Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТОбъектыОплаты").ПолучитьДанные();
	Если Не Результат.Пустой() Тогда
		ОчиститьГрафикПлатежей(ПараметрыРасчета,Запрос.МенеджерВременныхТаблиц);
		МассивОбъектовОплаты = Результат.Выгрузить().ВыгрузитьКолонку("ОбъектОплаты");
		РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоДенежнымСредствамКВыплате(МассивОбъектовОплаты);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьГрафикПлатежейПоДенежнымСредствамВПути()
	
	ПараметрыРасчета = ОписаниеФильтраРасчета();
	ПараметрыРасчета.ОбластиПланирования.Добавить(
			ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.ДенежныеСредстваВПути"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УстановитьОсновнойОтбор(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДенежныеСредстваВПути.Получатель КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ДенежныеСредстваВПути.ВидПереводаДенежныхСредств В 
	|
	|		(ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияВБанк),
	|		 ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка),
	|	  ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет),
	|		 ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеремещениеВДругуюКассу))
	|
	|			ТОГДА ДенежныеСредстваВПути.Отправитель
	|
	|		КОГДА ДенежныеСредстваВПути.ВидПереводаДенежныхСредств В 
	|
	|		(ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты),
	|		 ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты))
	|
	|			ТОГДА ДенежныеСредстваВПути.Контрагент
	|
	|	КОНЕЦ КАК ОбъектОплаты
	|ПОМЕСТИТЬ ВТОбъектыОплаты
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваВПути.Остатки(
	|			,
	|			ВЫБОР
	|					КОГДА ВидПереводаДенежныхСредств В
	|
	|					(ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияВБанк),
	|					 ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка),
	|					 ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет),
	|					 ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеремещениеВДругуюКассу))
	|
	|						ТОГДА Отправитель
	|
	|					КОГДА ВидПереводаДенежныхСредств В 
	|					(ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты),
	|					 ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты))
	|
	|						ТОГДА Контрагент
	|						ИНАЧЕ НЕОПРЕДЕЛЕНО
	|
	|				КОНЕЦ <> НЕОПРЕДЕЛЕНО	
	|				И (Организация = &Организация ИЛИ &ВсеОрганизации)
	|				И (Получатель = &БанковскийСчетКасса ИЛИ &ВсеБанковскиеСчетаИКассы)
	|	) КАК ДенежныеСредстваВПути";
	
	Запрос.Выполнить();
	Результат = Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТОбъектыОплаты").ПолучитьДанные();
	Если Не Результат.Пустой() Тогда
		ОчиститьГрафикПлатежейДляДенежныхСредствВПути(ПараметрыРасчета,Запрос.МенеджерВременныхТаблиц);
		РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоДенежнымСредствамВПути(Результат.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьГрафикПлатежейПоПоступлениямОтБанкаПоЭквайрингу()
	
	ПараметрыРасчета = ОписаниеФильтраРасчета();
	ПараметрыРасчета.ОбластиПланирования.Добавить(
		ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.ДенежныеСредстваВПути"));
	
	Запрос = Новый Запрос;
	УстановитьОсновнойОтбор(Запрос);
	Запрос.УстановитьПараметр("ОбластиПланирования",ПараметрыРасчета.ОбластиПланирования);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.ОбъектОплаты,
	|	Таблица.БанковскийСчетКасса
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистра.Договор КАК ОбъектОплаты,
	|		ДанныеРегистра.Получатель КАК БанковскийСчетКасса,
	|		ДанныеРегистра.СуммаОстаток КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредстваВПути.Остатки(,
	|			(Организация = &Организация
	|				ИЛИ &ВсеОрганизации)
	|			И (Получатель = &БанковскийСчетКасса
	|				ИЛИ &ВсеБанковскиеСчетаИКассы)
	|			И ВидПереводаДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)
	|			И Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыЭквайринга.ПустаяСсылка)
	|		) КАК ДанныеРегистра
	|	ГДЕ
	|		ДанныеРегистра.СуммаОстаток > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеРегистра.ОбъектОплаты КАК ОбъектОплаты,
	|		ДанныеРегистра.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|		-ДанныеРегистра.Сумма КАК Сумма
	|	ИЗ
	|		РегистрСведений.ГрафикПлатежей КАК ДанныеРегистра
	|	ГДЕ	
	|		ДанныеРегистра.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)
	|		И ДанныеРегистра.ПоступлениеСписание = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление)
	|		И (ДанныеРегистра.Организация = &Организация
	|			ИЛИ &ВсеОрганизации)
	|		И (ДанныеРегистра.БанковскийСчетКасса = &БанковскийСчетКасса
	|			ИЛИ &ВсеБанковскиеСчетаИКассы)
	|	) КАК Таблица
	|СГРУППИРОВАТЬ ПО
	|	Таблица.ОбъектОплаты,
	|	Таблица.БанковскийСчетКасса
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.Сумма) <> 0
	|";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоДенежнымСредствамВПути(Результат.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьГрафикПлатежейПоФинансовымИнструментам()
	
	ПараметрыРасчета = ОписаниеФильтраРасчета();
	ПараметрыРасчета.ОбластиПланирования.Добавить(
		ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.КредитыИлиЗаймыПолученные"));
	ПараметрыРасчета.ОбластиПланирования.Добавить(
		ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.Депозиты"));
	ПараметрыРасчета.ОбластиПланирования.Добавить(
		ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.ЗаймыВыданные"));
	ПараметрыРасчета.ОбластиПланирования.Добавить(
		ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.Аренда"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УстановитьОсновнойОтбор(Запрос);
	
	МассивТекстовЗапроса = Новый Массив;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.Договор КАК ОбъектОплаты
	|ПОМЕСТИТЬ ВТПоступленияИСписанияСредств
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам.Обороты(, , , 
	|			ТИПЗНАЧЕНИЯ(Договор) = ТИП(Справочник.ДоговорыКредитовИДепозитов)) КАК Расчеты
	|ГДЕ
	|	Расчеты.СуммаРасход > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Расчеты.Договор
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам.Обороты(, , , ) КАК Расчеты
	|ГДЕ
	|	Расчеты.СуммаПриход - Расчеты.ОплачиваетсяПриход + Расчеты.ОплачиваетсяРасход > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеСредств.ОбъектОплаты КАК ОбъектОплаты
	|ПОМЕСТИТЬ ВТОбъектыОплаты
	|ИЗ
	|	ВТПоступленияИСписанияСредств КАК ПоступлениеСредств
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ОписаниеДоговоров
	|		ПО ПоступлениеСредств.ОбъектОплаты = ОписаниеДоговоров.Ссылка
	|ГДЕ
	|	(ОписаниеДоговоров.Организация = &Организация
	|			ИЛИ &ВсеОрганизации)
	|	И (ОписаниеДоговоров.БанковскийСчет = &БанковскийСчетКасса
	|			ИЛИ &ВсеБанковскиеСчетаИКассы)";
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
		
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.ТекстОбъединитьВсе());
	Запрос.Выполнить();
	Результат = Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТОбъектыОплаты").ПолучитьДанные();
	Если Не Результат.Пустой() Тогда
		ОчиститьГрафикПлатежей(ПараметрыРасчета,Запрос.МенеджерВременныхТаблиц);
		МассивОбъектовОплаты = Результат.Выгрузить().ВыгрузитьКолонку("ОбъектОплаты");
		РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоФинансовымИнструментам(МассивОбъектовОплаты);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьГрафикПлатежейПоОжидаемымПоступлениямДенежныхСредств()
	
	ПараметрыРасчета = ОписаниеФильтраРасчета();
	ПараметрыРасчета.ОбластиПланирования.Добавить(
		ПредопределенноеЗначение("Перечисление.ОбластиПланированияПлатежей.ОжидаемыеПоступления"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УстановитьОсновнойОтбор(Запрос);
	Запрос.УстановитьПараметр("ДатаОкончанияРасчета",НачалоДня(ТекущаяДатаСеанса()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Организация КАК Организация,
	|	Таблица.Касса КАК Касса
	|ПОМЕСТИТЬ ВТОстаткиНаличных
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные.Остатки(
	|			,
	|			(Организация = &Организация
	|				ИЛИ &ВсеОрганизации)
	|				И (Касса = &БанковскийСчетКасса
	|					ИЛИ &ВсеБанковскиеСчетаИКассы)) КАК Таблица
	|ГДЕ
	|	(Таблица.СуммаОстаток > 0
	|			ИЛИ Таблица.СуммаУпрОстаток > 0
	|			ИЛИ Таблица.СуммаРеглОстаток > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Организация КАК Организация,
	|	Таблица.БанковскийСчет КАК БанковскийСчет
	|ПОМЕСТИТЬ ВТОстаткиБезналичных
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные.Остатки(
	|			,
	|			(Организация = &Организация
	|				ИЛИ &ВсеОрганизации)
	|				И (БанковскийСчет = &БанковскийСчетКасса
	|					ИЛИ &ВсеБанковскиеСчетаИКассы)) КАК Таблица
	|ГДЕ
	|	(Таблица.СуммаОстаток > 0
	|			ИЛИ Таблица.СуммаУпрОстаток > 0
	|			ИЛИ Таблица.СуммаРеглОстаток > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ДатыРасчета.ДатаРасчета) КАК ДатаНачала,
	|	&ДатаОкончанияРасчета КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТПериодРасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ДенежныеСредства.Период, ДЕНЬ) КАК ДатаРасчета
	|	ИЗ
	|		ВТОстаткиНаличных КАК Остатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
	|			ПО Остатки.Организация = ДенежныеСредства.Организация
	|				И Остатки.Касса = ДенежныеСредства.Касса
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ДенежныеСредства.Период, ДЕНЬ)
	|	ИЗ
	|		ВТОстаткиБезналичных КАК Остатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваБезналичные КАК ДенежныеСредства
	|			ПО Остатки.Организация = ДенежныеСредства.Организация
	|				И Остатки.БанковскийСчет =
	|					ДенежныеСредства.БанковскийСчет) КАК ДатыРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОжидаемоеПоступление.Ссылка КАК ОбъектОплаты,
	|	ОжидаемоеПоступление.ДатаПлатежа КАК ДатаРасчета
	|ПОМЕСТИТЬ ВТОбъектыОплаты
	|ИЗ
	|	ВТПериодРасчета КАК ВТПериодРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОжидаемоеПоступлениеДенежныхСредств КАК ОжидаемоеПоступление
	|		ПО (ОжидаемоеПоступление.ДатаПлатежа МЕЖДУ
	|				ВТПериодРасчета.ДатаНачала И ВТПериодРасчета.ДатаОкончания)
	|ГДЕ
	|	ОжидаемоеПоступление.Проведен
	|	И (ОжидаемоеПоступление.Организация = &Организация
	|			ИЛИ &ВсеОрганизации)
	|	И ВЫБОР
	|			КОГДА ОжидаемоеПоступление.ФормаОплаты =
	|					ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ОжидаемоеПоступление.КассаБанковскийСчет =
	|					&БанковскийСчетКасса
	|						ИЛИ &ВсеБанковскиеСчетаИКассы
	|		КОНЕЦ";
	
	Запрос.Выполнить();
	Результат = Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТОбъектыОплаты").ПолучитьДанные();
	Если Не Результат.Пустой() Тогда
		ОчиститьГрафикПлатежей(ПараметрыРасчета,Запрос.МенеджерВременныхТаблиц);
		ТаблицаОбъектовОплаты = Результат.Выгрузить();
		МассивДатРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаОбъектовОплаты,"ДатаРасчета",Истина);
		МассивОбъектовОплаты = ТаблицаОбъектовОплаты.ВыгрузитьКолонку("ОбъектОплаты");
		РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоОжидаемымПоступлениямДенежныхСредств(МассивДатРасчета,,,
																										МассивОбъектовОплаты);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОсновнойОтбор(Запрос)
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВсеОрганизации", Не ЗначениеЗаполнено(Организация));
	Запрос.УстановитьПараметр("БанковскийСчетКасса", БанковскийСчетКасса);
	Запрос.УстановитьПараметр("ВсеБанковскиеСчетаИКассы", Не ЗначениеЗаполнено(БанковскийСчетКасса));
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьГрафикПлатежей(ПараметрыРасчета,МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	УстановитьОсновнойОтбор(Запрос);
	Запрос.УстановитьПараметр("ОбластиПланирования",ПараметрыРасчета.ОбластиПланирования);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикПлатежей.ОбъектОплаты КАК ОбъектОплаты,
	|	ГрафикПлатежей.ОбластьПланирования КАК ОбластьПланирования
	|ИЗ
	|	РегистрСведений.ГрафикПлатежей КАК ГрафикПлатежей
	|ГДЕ
	|	ГрафикПлатежей.ОбластьПланирования В(&ОбластиПланирования)
	|	И (ГрафикПлатежей.Организация = &Организация
	|			ИЛИ &ВсеОрганизации)
	|	И (ГрафикПлатежей.БанковскийСчетКасса = &БанковскийСчетКасса
	|			ИЛИ &ВсеБанковскиеСчетаИКассы)
	|	И НЕ ГрафикПлатежей.ОбъектОплаты В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ОбъектыОплаты.ОбъектОплаты
	|				ИЗ
	|					ВТОбъектыОплаты КАК ОбъектыОплаты)";
	
	ТаблицаОбъектовОплаты = Запрос.Выполнить().Выгрузить();
	УдалитьЗаписиГрафикаПлатежей(ТаблицаОбъектовОплаты);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьГрафикПлатежейДляДенежныхСредствВПути(ПараметрыРасчета,МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	УстановитьОсновнойОтбор(Запрос);
	Запрос.УстановитьПараметр("ОбластиПланирования",ПараметрыРасчета.ОбластиПланирования);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикПлатежей.ОбъектОплаты КАК ОбъектОплаты,
	|	ГрафикПлатежей.ОбластьПланирования КАК ОбластьПланирования
	|ИЗ
	|	РегистрСведений.ГрафикПлатежей КАК ГрафикПлатежей
	|ГДЕ
	|	ГрафикПлатежей.ОбластьПланирования В(&ОбластиПланирования)
	|	И (ГрафикПлатежей.Организация = &Организация
	|			ИЛИ &ВсеОрганизации)
	|	И (ГрафикПлатежей.БанковскийСчетКасса = &БанковскийСчетКасса
	|			ИЛИ &ВсеБанковскиеСчетаИКассы)
	|	И НЕ(ГрафикПлатежей.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)
	|				И ГрафикПлатежей.ПоступлениеСписание = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияДенежныхСредств.Поступление))
	|	И НЕ (ГрафикПлатежей.ОбъектОплаты, ГрафикПлатежей.БанковскийСчетКасса) В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ОбъектыОплаты.ОбъектОплаты,
	|					ОбъектыОплаты.БанковскийСчетКасса
	|				ИЗ
	|					ВТОбъектыОплаты КАК ОбъектыОплаты)";
	
	ТаблицаОбъектовОплаты = Запрос.Выполнить().Выгрузить();
	УдалитьЗаписиГрафикаПлатежей(ТаблицаОбъектовОплаты);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЗаписиГрафикаПлатежей(ТаблицаОбъектовОплаты)
	
	НачатьТранзакцию();
	
	Попытка
	
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ГрафикПлатежей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = ТаблицаОбъектовОплаты;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектОплаты", "ОбъектОплаты");
		Блокировка.Заблокировать();
		
		Для Каждого ОписаниеОбъектаОплаты Из ТаблицаОбъектовОплаты Цикл
			
			НаборЗаписей = РегистрыСведений.ГрафикПлатежей.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ОбъектОплаты.Установить(ОписаниеОбъектаОплаты.ОбъектОплаты);
			НаборЗаписей.Прочитать();
			
			ДанныеНабора = НаборЗаписей.Выгрузить();
			СтрокиКУдалению = ДанныеНабора.НайтиСтроки(Новый Структура("ОбластьПланирования",ОписаниеОбъектаОплаты.ОбластьПланирования));
			Для Каждого УдаляемаяСтрока Из СтрокиКУдалению Цикл
				ДанныеНабора.Удалить(УдаляемаяСтрока);
			КонецЦикла;
			НаборЗаписей.Загрузить(ДанныеНабора);
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	
	Исключение
		
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Пересчет графика платежей'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти