// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(Параметры.ПериодРегистрации) Тогда
		// Форма открыта из формы закрытия месяца
		//@skip-check property-return-type
		ДоступныеОрганизации = Параметры.МассивОрганизаций; // Массив из СправочникСсылка.Организации
		ИсходныйПериод = НачалоМесяца(Параметры.ПериодРегистрации);
		ФормаОткрытаКонтекстно = Истина;
	Иначе
		ДоступныеОрганизации = Справочники.Организации.ДоступныеОрганизации(Истина);
		ИсходныйПериод = Неопределено;
		ФормаОткрытаКонтекстно = Ложь;
	КонецЕсли;
	
	НастройкиБлокировок = РегистрыСведений.НастройкаБлокировкиОтИзменений.СведенияОБлокировкеОтИзменений(ДоступныеОрганизации);
	
	Для Каждого ТекСтр Из НастройкиБлокировок.ТаблицаБлокировок Цикл
		
		Если ЗначениеЗаполнено(ИсходныйПериод) И ТекСтр.ПериодБлокировки >= ИсходныйПериод Тогда
			Продолжить; // период для организации уже заблокирован
		КонецЕсли;
		НовСтр = БлокировкиОтИзменений.Добавить();
		НовСтр.Организация = ТекСтр.Организация;
		НовСтр.ЗаблокированныйПериод = ТекСтр.ПериодБлокировки;
		НовСтр.МожноЗаблокироватьПо = ТекСтр.ПериодВозможнойБлокировки;
		НовСтр.ИсходныйПериод = НовСтр.ЗаблокированныйПериод;
		
		Если ЗначениеЗаполнено(ИсходныйПериод) Тогда
			НовСтр.ЗаблокированныйПериод = ИсходныйПериод;
		КонецЕсли;
		
		НовСтр.ЗаблокированныйПериодПредставление = ЗакрытиеМесяцаКлиентСервер.ПредставлениеПериодаМесяцГод(НовСтр.ЗаблокированныйПериод);
		НовСтр.МожноЗаблокироватьПоПредставление = ЗакрытиеМесяцаКлиентСервер.ПредставлениеПериодаМесяцГод(НовСтр.МожноЗаблокироватьПо);
		
		Если НЕ ЗначениеЗаполнено(ТекСтр.ДатаИзменения) Тогда
			НовСтр.СведенияОБлокировке = НСтр("ru='Блокировка не установлена'");
		Иначе
			НовСтр.СведенияОБлокировке = НСтр("ru='Установлена блокировка'") + ": "
				+ Формат(ТекСтр.ДатаИзменения, "ДЛФ=DT; ДП=;") + ?(ЗначениеЗаполнено(ТекСтр.ДатаИзменения), "; ", "")
				+ Строка(ТекСтр.Ответственный) + ?(ЗначениеЗаполнено(ТекСтр.Ответственный), "; ", "")
				+ СокрЛП(ТекСтр.Комментарий); 
		КонецЕсли;
		
	КонецЦикла;

	БлокировкиОтИзменений.Сортировать("Организация");
	
	Если БлокировкиОтИзменений.Количество() <= 1 Тогда
		Элементы.БлокировкиОтИзмененийГруппаУстановить.Видимость = Ложь;
	КонецЕсли;
	
	Если ФормаОткрытаКонтекстно Тогда
		
		// Спрячем лишние элементы управления
		Элементы.БлокировкиОтИзменений.КоманднаяПанель.Видимость = Ложь;
		Элементы.БлокировкиОтИзмененийМожноЗаблокироватьПо.Видимость = Ложь;
		Элементы.УстановитьБлокировкуПо.Видимость = Ложь;
		Элементы.БлокировкиОтИзмененийЗаблокированныйПериод.Видимость = Ложь;
		
		Элементы.ДекорацияСообщениеОБлокировке.Видимость = Истина;
		Элементы.ДекорацияСообщениеОБлокировке.Заголовок =
			НСтр("ru='По указанным организациям будет установлена блокировка от изменений для периода'")
			+ " " + ЗакрытиеМесяцаКлиентСервер.ПредставлениеПериодаМесяцГод(ИсходныйПериод);
		
		УсловноеОформление.Элементы.Очистить();
		
	Иначе
		Элементы.ДекорацияСообщениеОБлокировке.Видимость = Ложь;
	КонецЕсли;
	
	ТолькоПросмотр = НЕ ЗакрытиеМесяцаСервер.ЕстьПравоУправленияБлокировкойПериода();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыБлокировкиОтИзменений

&НаКлиенте
Процедура БлокировкиОтИзмененийПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элементы.БлокировкиОтИзменений.ТекущиеДанные;
	
	Если Элементы.БлокировкиОтИзменений.ТекущийЭлемент = Элементы.УстановитьБлокировкуПо
	 И ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.ЗаблокированныйПериод = ТекущиеДанные.МожноЗаблокироватьПо;
		ТекущиеДанные.ЗаблокированныйПериодПредставление = ТекущиеДанные.МожноЗаблокироватьПоПредставление;
	КонецЕсли;

	Если ТекущиеДанные <> Неопределено Тогда
		Элементы.СведенияОБлокировке.Заголовок = ТекущиеДанные.СведенияОБлокировке;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БлокировкиОтИзмененийЗаблокированныйПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработчикЗакрытия = Новый ОписаниеОповещения("ЗаблокированныйПериодПредставлениеНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыФормы 	   = Новый Структура("Значение, РежимВыбораПериода", Элементы.БлокировкиОтИзменений.ТекущиеДанные.ЗаблокированныйПериод, "МЕСЯЦ");
	
	ОткрытьФорму("ОбщаяФорма.ВыборПериода",
		ПараметрыФормы, 
		ЭтотОбъект, 
		УникальныйИдентификатор,
		,
		, 
		ОбработчикЗакрытия,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура БлокировкиОтИзмененийЗаблокированныйПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.БлокировкиОтИзменений.ТекущиеДанные;
	
	ОбщегоНазначенияУТКлиент.РегулированиеПредставленияПериодаРегистрации(
		Направление,
		СтандартнаяОбработка,
		ТекущиеДанные.ЗаблокированныйПериод,
		ТекущиеДанные.ЗаблокированныйПериодПредставление);
	
	ТекущиеДанные.ЗаблокированныйПериод = Мин(ТекущиеДанные.МожноЗаблокироватьПо, ТекущиеДанные.ЗаблокированныйПериод);
	ТекущиеДанные.ЗаблокированныйПериодПредставление = ЗакрытиеМесяцаКлиентСервер.ПредставлениеПериодаМесяцГод(ТекущиеДанные.ЗаблокированныйПериод);
	
КонецПроцедуры

&НаКлиенте
Процедура БлокировкиОтИзмененийЗаблокированныйПериодОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура БлокировкиОтИзмененийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.БлокировкиОтИзменений.ТекущиеДанные;
	
	Если Элементы.БлокировкиОтИзменений.ТекущийЭлемент = Элементы.БлокировкиОтИзмененийОрганизация
	 И ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(, ТекущиеДанные.Организация);
 	КонецЕсли;
 	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаблокироватьПериод(Команда)
	
	ЗаписатьБлокировкиПериода();
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ОбновитьФормуЗакрытиМесяца", Истина);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОбщийПериод(Команда)
	
	ОбработчикЗакрытия = Новый ОписаниеОповещения("УстановитьОбщийПериодЗавершение", ЭтотОбъект);
	ПараметрыФормы 	   = Новый Структура("РежимВыбораПериода", "МЕСЯЦ");
	
	ОткрытьФорму("ОбщаяФорма.ВыборПериода",
		ПараметрыФормы, 
		ЭтотОбъект, 
		УникальныйИдентификатор,
		,
		, 
		ОбработчикЗакрытия,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМаксимальноВозможныйПериод(Команда)
	
	Для Каждого ТекСтр Из БлокировкиОтИзменений Цикл
		
		ТекСтр.ЗаблокированныйПериод = ТекСтр.МожноЗаблокироватьПо;
		ТекСтр.ЗаблокированныйПериодПредставление = ТекСтр.МожноЗаблокироватьПоПредставление;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заблокированный период представление начало выбора завершение.
// 
// Параметры:
//  ВыбранныйПериод - Дата - Выбранный период
//  ДополнительныеПараметры - Произвольный - Дополнительные параметры
&НаКлиенте
Процедура ЗаблокированныйПериодПредставлениеНачалоВыбораЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт 
	
	Если ВыбранныйПериод <> Неопределено Тогда
		
		ТекущиеДанные = Элементы.БлокировкиОтИзменений.ТекущиеДанные;
		
		ВыбранныйПериод = Мин(ТекущиеДанные.МожноЗаблокироватьПо, ВыбранныйПериод);
		
		ТекущиеДанные.ЗаблокированныйПериод = ВыбранныйПериод;
		ТекущиеДанные.ЗаблокированныйПериодПредставление = ЗакрытиеМесяцаКлиентСервер.ПредставлениеПериодаМесяцГод(ВыбранныйПериод);
		
	КонецЕсли;
	
КонецПроцедуры

// Установить общий период завершение.
// 
// Параметры:
//  ВыбранныйПериод - Дата - Выбранный период
//  ДополнительныеПараметры - Произвольный - Дополнительные параметры
&НаКлиенте
Процедура УстановитьОбщийПериодЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт 
	
	Если ВыбранныйПериод <> Неопределено Тогда
		
		Для Каждого ТекСтр Из БлокировкиОтИзменений Цикл
			
			ТекущийПериод = Мин(ТекСтр.МожноЗаблокироватьПо, ВыбранныйПериод);
			
			ТекСтр.ЗаблокированныйПериод = ТекущийПериод;
			ТекСтр.ЗаблокированныйПериодПредставление = ЗакрытиеМесяцаКлиентСервер.ПредставлениеПериодаМесяцГод(ТекущийПериод);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьБлокировкиПериода()
	
	Для Каждого ТекСтр Из БлокировкиОтИзменений Цикл
		
		Если ТекСтр.ЗаблокированныйПериод = ТекСтр.ИсходныйПериод Тогда
			Продолжить;
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.НастройкаБлокировкиОтИзменений.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Организация = ТекСтр.Организация;
		МенеджерЗаписи.ЗаблокироватьПо = НачалоМесяца(ТекСтр.ЗаблокированныйПериод);
		
		Если ФормаОткрытаКонтекстно Тогда
			МенеджерЗаписи.Комментарий = НСтр("ru='Установлено из формы закрытия месяца'");
		Иначе
			МенеджерЗаписи.Комментарий = НСтр("ru='Установлено из формы настройки блокировки'");
		КонецЕсли;
		
		МенеджерЗаписи.Записать(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Установлен некорректный период (больше максимально допустимого)
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.БлокировкиОтИзмененийЗаблокированныйПериод.Имя);
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("БлокировкиОтИзменений.ЗаблокированныйПериод");
	ОтборЭлемента.ПравоеЗначение  = Новый ПолеКомпоновкиДанных("БлокировкиОтИзменений.МожноЗаблокироватьПо");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Больше;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
	
	// Период блокировки изменен
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.БлокировкиОтИзмененийЗаблокированныйПериод.Имя);
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("БлокировкиОтИзменений.ЗаблокированныйПериод");
	ОтборЭлемента.ПравоеЗначение  = Новый ПолеКомпоновкиДанных("БлокировкиОтИзменений.ИсходныйПериод");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Зеленый);
	
КонецПроцедуры

#КонецОбласти
