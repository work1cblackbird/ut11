#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция ПараметрыЗаписиРегистра(ИдентификаторЭДО, Идентификатор) Экспорт
	
	// При расширении полей, добавить новые в
	// СервисВзаимодействияМПЭПДКлиент.СтруктураПолейРегистраПодключенныхМПЭПД
	
	Структура = Новый Структура();
	Структура.Вставить("Идентификатор", Идентификатор);
	Структура.Вставить("ИдентификаторЭДО", ИдентификаторЭДО);
	Структура.Вставить("ИдентификаторМП", Неопределено);
	Структура.Вставить("Состояние", Неопределено);
	Структура.Вставить("ИНН", Неопределено);
	Структура.Вставить("СНИЛС", Неопределено);
	Структура.Вставить("Наименование", Неопределено);
	Структура.Вставить("ВидПодписи", Неопределено);
	Структура.Вставить("Телефоны", Неопределено);
	Структура.Вставить("МЧД", Неопределено);
	Структура.Вставить("ЕстьБумажнаяДоверенность", Неопределено);
	Структура.Вставить("ПрямойОбмен", Неопределено);
	Структура.Вставить("ФизическоеЛицо", Неопределено);
	Структура.Вставить("Фамилия", Неопределено);
	Структура.Вставить("Имя", Неопределено);
	Структура.Вставить("Отчество", Неопределено);
	Структура.Вставить("ДатаВремяПолученияКодаРегистрации", Неопределено);
	Структура.Вставить("КодРегистрации", Неопределено);
	Структура.Вставить("Найден", Ложь);
	Структура.Вставить("Фото", Неопределено);
	Структура.Вставить("Роль", Неопределено);
	Структура.Вставить("ВидыДокументов", Неопределено);
	
	Возврат Структура;
	
КонецФункции

Функция СтруктураДанныхЗаписиПоИдентификатору(Идентификатор) Экспорт
	
	Если Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	*
	|ИЗ
	|	РегистрСведений.ПодключенныеМПЭПД КАК ПодключенныеМПЭПД
	|ГДЕ
	|	ПодключенныеМПЭПД.Идентификатор = &Идентификатор";
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПараметрыЗаписи = ПараметрыЗаписиРегистра("", "");
		ЗаполнитьЗначенияСвойств(ПараметрыЗаписи, Выборка);
		ПараметрыЗаписи.Найден = Истина;
		Возврат ПараметрыЗаписи;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура РегистрироватьЗапись(СтруктураРегистра) Экспорт
	
	СтруктураСуществующейЗаписи = НайтиЗапись(СтруктураРегистра);
	СервисВзаимодействияМПЭПД.ЗаполнитьЗначенияОбъекта(СтруктураСуществующейЗаписи, СтруктураРегистра);

	ЗаписьРегистра = СоздатьМенеджерЗаписи();
	СервисВзаимодействияМПЭПД.ЗаполнитьЗначенияОбъекта(ЗаписьРегистра, СтруктураСуществующейЗаписи);
	
	ЗаписьРегистра.Записать(Истина);
	
КонецПроцедуры

Функция РегистрироватьНабор(ТекущийОтбор, НовыйНабор, УниверсальнаяДатаЗапроса) Экспорт
	
	ВремяАктивностиКода = СервисВзаимодействияМПЭПД.ВремяАктивностиКодаРегистрацииВСекундах();
	
	СтруктураРезультата = НовыйРезультатРегистрацииНабора();
	
	ЗаписиРегистра = СоздатьНаборЗаписей();
	ЗаписиРегистра.Отбор.ИдентификаторЭДО.Установить(ТекущийОтбор);
	ЗаписиРегистра.Прочитать();
	ТаблицаЗаписей = ЗаписиРегистра.Выгрузить();
	ТаблицаЗаписей.Колонки.Добавить("Изменена", Новый ОписаниеТипов("Булево"));

	Для Каждого СтрокаМассива Из НовыйНабор Цикл
		
		НашлиСтроки = ТаблицаЗаписей.НайтиСтроки(Новый Структура("ИдентификаторЭДО, Идентификатор", СтрокаМассива.ИдентификаторЭДО, СтрокаМассива.Идентификатор));
		Если НашлиСтроки.Количество() = 0 Тогда
			ТекущаяСтрока = ТаблицаЗаписей.Добавить();
		Иначе
			ТекущаяСтрока = НашлиСтроки[0];
		КонецЕсли;
		
		// Если от сервера моб. устройств вернулось состояние "ОжидаетсяПодключение", а текущее состояние "ПодключениеНеВыполнено",
		// тогда запись не меняется, т.к. сервер не различает "ОжидаетсяПодключение" и "ПодключениеНеВыполнено".
		// В ином случае запись изменяется по данным сервера.
		Если Не (СтрокаМассива.Состояние = Перечисления.СостояниеМПЭПД.ОжидаетсяПодключение
			И ТекущаяСтрока.Состояние = Перечисления.СостояниеМПЭПД.ПодключениеНеВыполнено) Тогда
			
			СервисВзаимодействияМПЭПД.ЗаполнитьЗначенияОбъекта(ТекущаяСтрока, СтрокаМассива);
		КонецЕсли;
		
		ТекущаяСтрока.Изменена = Истина;
		
	КонецЦикла;
	
	Всего = ТаблицаЗаписей.Количество() - 1;
	Для Счетчик = 0 По Всего Цикл
		
		ТекущаяСтрока = ТаблицаЗаписей[Всего - Счетчик];
		
		Если Не ТекущаяСтрока.Изменена Тогда
			
			Если ТекущаяСтрока.Состояние = Перечисления.СостояниеМПЭПД.ПодключениеНеВыполнено
				Или ТекущаяСтрока.Состояние = Перечисления.СостояниеМПЭПД.Черновик Тогда
				Продолжить;
			ИначеЕсли ТекущаяСтрока.Состояние = Перечисления.СостояниеМПЭПД.ОжидаетсяПодключение Тогда
				Если ЗначениеЗаполнено(ТекущаяСтрока.ДатаВремяПолученияКодаРегистрации)
					И УниверсальнаяДатаЗапроса - ТекущаяСтрока.ДатаВремяПолученияКодаРегистрации > ВремяАктивностиКода Тогда
				
					ТекущаяСтрока.Состояние = Перечисления.СостояниеМПЭПД.ПодключениеНеВыполнено;
				Иначе
					СтруктураРезультата.ЕстьУстройстваОжидающиеПодключение = Истина;
				КонецЕсли;
			Иначе
				ТаблицаЗаписей.Удалить(ТекущаяСтрока);
			КонецЕсли;
			
		Иначе
			Если ТекущаяСтрока.Состояние = Перечисления.СостояниеМПЭПД.ОжидаетсяПодключение Тогда
				Если ЗначениеЗаполнено(ТекущаяСтрока.ДатаВремяПолученияКодаРегистрации)
					И УниверсальнаяДатаЗапроса - ТекущаяСтрока.ДатаВремяПолученияКодаРегистрации > ВремяАктивностиКода Тогда
				
					ТекущаяСтрока.Состояние = Перечисления.СостояниеМПЭПД.ПодключениеНеВыполнено;
				Иначе
					СтруктураРезультата.ЕстьУстройстваОжидающиеПодключение = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаписиРегистра.Загрузить(ТаблицаЗаписей);
	ЗаписиРегистра.Отбор.ИдентификаторЭДО.Установить(ТекущийОтбор);
	ЗаписиРегистра.Записать(Истина);
	
	СтруктураРезультата.УспешностьВыполнения = Истина;
	
	Возврат СтруктураРезультата;
	
КонецФункции

Процедура УдалитьЗапись(ДанныеИзмеренийТекущейЗаписи, ФизическоеУдаление = Ложь) Экспорт
	
	НашлиЗапись = НайтиЗапись(ДанныеИзмеренийТекущейЗаписи);
	Если НашлиЗапись.Найден Тогда
		ЗаписьРегистра = СоздатьМенеджерЗаписи();
		СервисВзаимодействияМПЭПД.ЗаполнитьЗначенияОбъекта(ЗаписьРегистра, НашлиЗапись);
		ЗаписьРегистра.Удалить();
		Если ФизическоеУдаление = Истина Тогда
			ЗаписьРегистра.Удалить();
		Иначе	
			ЗаписьРегистра.Удален = Истина;
			ЗаписьРегистра.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция НайтиЗапись(ДанныеИзмеренийТекущейЗаписи) Экспорт
	
	Результат = ПараметрыЗаписиРегистра(ДанныеИзмеренийТекущейЗаписи.ИдентификаторЭДО,
			ДанныеИзмеренийТекущейЗаписи.Идентификатор);
	
	ЗаписьРегистра = СоздатьМенеджерЗаписи();
	ЗаписьРегистра.ИдентификаторЭДО = ДанныеИзмеренийТекущейЗаписи.ИдентификаторЭДО;
	ЗаписьРегистра.Идентификатор = ДанныеИзмеренийТекущейЗаписи.Идентификатор;
	ЗаписьРегистра.Прочитать();
	Если ЗаписьРегистра.Выбран() Тогда
		ЗаполнитьЗначенияСвойств(Результат, ЗаписьРегистра);
		Результат.Найден = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ИзменитьСостояниеМП(ИдентификаторМП, Состояние) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.ПодключенныеМПЭПД КАК ПодключенныеМПЭПД
	|ГДЕ
	|	ПодключенныеМПЭПД.ИдентификаторМП = &ИдентификаторМП";
	Запрос.УстановитьПараметр("ИдентификаторМП", ИдентификаторМП);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьРегистра = СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
	ЗаписьРегистра.Состояние = Состояние;
	ЗаписьРегистра.Записать(Истина);
	
КонецПроцедуры

Функция КлючевыеПоляКонтроляПовторенийРегистра() Экспорт
	
	// При расширении полей, добавить новые в
	// СервисВзаимодействияМПЭПДКлиент.КлючевыеПоляКонтроляПовторенийРегистраПодключенныхМПЭПД
	
	Структура = Новый Структура;
	Структура.Вставить("СНИЛС");
	Структура.Вставить("ИНН");
	
	Возврат Структура;
	
КонецФункции

// Добавляет в запрос текст и параметры поиска повторяющихся записей
//
// Параметры:
//  Запрос							 - Запрос	 - 
//  СтруктураКонтроляКлючевыхПолей	 - Структура - см. КлючевыеПоляКонтроляПовторенийРегистра()
//  ИдентификаторТекущейЗаписи		 - Строка	 - Идентификатор записи, которую не нужно проверять
//	ИдентификаторЭДО				 - Строка	 - Идентификатор ЭДО организации
//	 
// Возвращаемое значение:
//  Булево - Истина если текст запроса добавлен, Ложь если нет
//
Функция ДобавитьВЗапросТекстИПараметрыПоискаПовторяющихсяЗаписей(Запрос, СтруктураКонтроляКлючевыхПолей, ИдентификаторТекущейЗаписи, ИдентификаторЭДО) Экспорт
	
	МассивТекстовЗапроса = Новый Массив;
	
	Для Каждого КлючЗначение Из СтруктураКонтроляКлючевыхПолей Цикл
		
		Если Не ЗначениеЗаполнено(КлючЗначение.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапросаДляПоискаПовторяющихсяЗаписей(КлючЗначение.Ключ);
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
				
	КонецЦикла;
	
	Если МассивТекстовЗапроса.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ОбщийТекстЗапроса = ОбъединенныйТекстЗапросаИзМассива(МассивТекстовЗапроса);
	Запрос.УстановитьПараметр("Идентификатор", ИдентификаторТекущейЗаписи);
	Запрос.УстановитьПараметр("ИдентификаторЭДО", ИдентификаторЭДО);
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Запрос.Текст = ОбщийТекстЗапроса;
	Иначе
		ШаблонОбъединения = "%1%2%3";
		РазделительПакетаЗапросов = ОбщегоНазначения.РазделительПакетаЗапросов();
		Запрос.Текст = СтрШаблон(ШаблонОбъединения, Запрос.Текст, РазделительПакетаЗапросов, ОбщийТекстЗапроса);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйРезультатРегистрацииНабора()
	
	Структура = Новый Структура;
	Структура.Вставить("УспешностьВыполнения", Ложь);
	Структура.Вставить("ЕстьУстройстваОжидающиеПодключение", Ложь);
	
	Возврат Структура;
	
КонецФункции

Функция ТекстЗапросаДляПоискаПовторяющихсяЗаписей(ПолеПоискаПовторений)
	
	ШаблонТекстаЗапроса = 
	"ВЫБРАТЬ
	|	""%1"" КАК ПолеПоискаПовторений,
	|	ПодключенныеМПЭПД.Наименование КАК Наименование,
	|	ПодключенныеМПЭПД.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.ПодключенныеМПЭПД КАК ПодключенныеМПЭПД
	|ГДЕ
	|	ПодключенныеМПЭПД.%1 = &%1
	|	И НЕ ПодключенныеМПЭПД.Идентификатор = &Идентификатор
	|	И ПодключенныеМПЭПД.ИдентификаторЭДО = &ИдентификаторЭДО
	|	И ПодключенныеМПЭПД.Удален = ЛОЖЬ";
	ТекстЗапроса = СтрШаблон(ШаблонТекстаЗапроса, ПолеПоискаПовторений);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ОбъединенныйТекстЗапросаИзМассива(МассивТекстовЗапроса)
	
	РазделительОбъединить = 
	"
	|ОБЪЕДИНИТЬ ВСЕ
	|";
	
	ТекстЗапросов = СтрСоединить(МассивТекстовЗапроса, РазделительОбъединить);
	Возврат ТекстЗапросов;
	
КонецФункции

#КонецОбласти

#КонецЕсли