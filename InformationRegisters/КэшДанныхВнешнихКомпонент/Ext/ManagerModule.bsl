///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает данные кэша версии для указанного идентификатора.
//
// Параметры:
//   Идентификатор - Строка - идентификатор записи кэша.
//
// Возвращаемое значение:
//   ФиксированнаяСтруктура, Неопределено
//
Функция ДанныеКэша(Знач Идентификатор) Экспорт
	
	Результат = Неопределено;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаКэша.ДатаОбновления КАК ДатаОбновления,
		|	ТаблицаКэша.Версия КАК Версия,
		|	ТаблицаКэша.ДатаВерсии КАК ДатаВерсии,
		|	ТаблицаКэша.ОписаниеВерсии КАК ОписаниеВерсии,
		|	ТаблицаКэша.Идентификатор КАК Идентификатор,
		|	ТаблицаКэша.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.КэшДанныхВнешнихКомпонент КАК ТаблицаКэша
		|ГДЕ
		|	ТаблицаКэша.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	НачатьТранзакцию();
	Попытка
		// Не устанавливаем управляемую блокировку, чтобы другие сеансы могли изменять значение пока эта транзакция активна.
		УстановитьПривилегированныйРежим(Истина);
		РезультатЗапроса = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Если КэшАктуален(Выборка.ДатаОбновления) Тогда
		Результат = Новый Структура(
			"Идентификатор,
			|Наименование,
			|ДатаОбновления,
			|Версия,
			|ДатаВерсии,
			|ОписаниеВерсии");
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		Результат = Новый ФиксированнаяСтруктура(Результат);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Обновляет данные в кэше внешних компонент.
//
// Параметры:
//  ОписаниеВнешнейКомпоненты - СтрокаТаблицыЗначений - данные для записи в кэш.
//
Процедура ОбновитьДанныеКэша(ОписаниеВнешнейКомпоненты) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Идентификатор = ОписаниеВнешнейКомпоненты.Идентификатор;
	Ключ = СоздатьКлючЗаписи(Новый Структура("Идентификатор", Идентификатор));
	
	Попытка
		ЗаблокироватьДанныеДляРедактирования(Ключ);
	Исключение
		// Данные уже обновляются из другого сеанса.
		Возврат;
	КонецПопытки;
	
	Попытка
		
		Набор = СоздатьНаборЗаписей();
		Набор.Отбор.Идентификатор.Установить(Идентификатор);
		
		Запись = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(
			Запись,
			ОписаниеВнешнейКомпоненты);
		Запись.ДатаОбновления = ТекущаяУниверсальнаяДата();
		
		Набор.Записать();
		
		РазблокироватьДанныеДляРедактирования(Ключ);
		
	Исключение
		
		РазблокироватьДанныеДляРедактирования(Ключ);
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КэшАктуален(ДатаОбновления)
	
	Если ЗначениеЗаполнено(ДатаОбновления) Тогда
		Возврат ДатаОбновления + 24 * 60 * 60 > ТекущаяУниверсальнаяДата(); // кешируем не более чем на 1 день
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецЕсли