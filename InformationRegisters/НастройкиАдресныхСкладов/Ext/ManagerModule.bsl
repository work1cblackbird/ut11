#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура добавляет в регистр настройку подпитки по умолчанию, если
// еще нет настроек для склада (помещения) с адресным хранением.
//
//	Параметры:
//	Склад - СправочникСсылка.Склады - склад, для которого осуществляется настройка;
//	Помещение - СправочникСсылка.СкладскиеПомещения - складское помещение, для которого осуществляется настройка;
//	ИспользоватьАдресноеХранение - Булево - Истина - признак использования адресного хранения на складе / в помещении;
//	ДатаНачалаАдресногоХраненияОстатков - Дата - дата, с которой осуществляется использование адресного хранения 
//		остатков товаров на складе / в помещении;
//	ИспользоватьАдресноеХранениеСправочно - Булево - Истина - признак использования справочного хранения товаров 
//		на адресном складе / помещении;
//	ИспользоватьРабочиеУчастки - Булево - Истина - признак использования рабочих участков на складе / в помещении;
//	СкопироватьНастройкиВладельца - Булево - Истина - признак необходимости копирования настроек по складу 
//		в настройки помещения.
//
Процедура УстановитьНастройкиПоУмолчанию(Склад, Помещение, ИспользоватьАдресноеХранение,
										ДатаНачалаАдресногоХраненияОстатков, ИспользоватьАдресноеХранениеСправочно, ИспользоватьРабочиеУчастки,
										СкопироватьНастройкиВладельца = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	&Помещение КАК Помещение,
		|	НастройкиАдресныхСкладов.*
		|ИЗ
		|	РегистрСведений.НастройкиАдресныхСкладов КАК НастройкиАдресныхСкладов
		|ГДЕ
		|	НастройкиАдресныхСкладов.Склад = &Склад";
	Если СкопироватьНастройкиВладельца Тогда
		Запрос.Текст = Запрос.Текст + "
			|	И НастройкиАдресныхСкладов.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)";
	Иначе
		Запрос.Текст = Запрос.Текст + "
			|	И НастройкиАдресныхСкладов.Помещение = &Помещение";
	КонецЕсли;
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Помещение", Помещение);
	
	Настройки = Запрос.Выполнить().Выбрать();
	
	Набор = РегистрыСведений.НастройкиАдресныхСкладов.СоздатьНаборЗаписей();
	Набор.Отбор.Склад.Установить(Склад);
	Набор.Отбор.Помещение.Установить(Помещение);
	
	СтрокаНастроек = Набор.Добавить();
	Если Настройки.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтрокаНастроек, Настройки);
	Иначе
		СтрокаНастроек.Склад = Склад;
		СтрокаНастроек.Помещение = Помещение;
		Набор.Заполнить(Неопределено);
	КонецЕсли;
	
	СтрокаНастроек.ИспользоватьАдресноеХранение          = ИспользоватьАдресноеХранение;
	СтрокаНастроек.ДатаНачалаАдресногоХраненияОстатков   = ДатаНачалаАдресногоХраненияОстатков;
	СтрокаНастроек.ИспользоватьАдресноеХранениеСправочно = ИспользоватьАдресноеХранениеСправочно;
	СтрокаНастроек.ИспользоватьРабочиеУчастки            = ИспользоватьРабочиеУчастки;
	
	Набор.Записать();
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Склад)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли