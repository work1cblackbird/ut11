
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Склад = Параметры.Склад;
	Помещение = Параметры.Помещение;
	
	ЕдиницаИзмеренияВеса   = Константы.ЕдиницаИзмеренияВеса.Получить();
	ЕдиницаИзмеренияОбъема = Константы.ЕдиницаИзмеренияОбъема.Получить();
	
	ДействиеНадРегламентнымЗаданием = "";
	Параметры.Свойство("ДействиеНадРегламентнымЗаданием", ДействиеНадРегламентнымЗаданием);
	
	Если ДействиеНадРегламентнымЗаданием = "СоздатьЗадания" Тогда
		Элементы.ГруппаПараметрыРегламентногоЗадания.Видимость = Ложь;
		Элементы.СоздатьЗадания.Заголовок = НСтр("ru = 'Создать задания'");
	Иначе
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, 
			"НаименованиеРегламентногоЗадания, РасписаниеРегламентногоЗадания,
			|ПриОшибкахПовторятьРегламентноеЗадание, ПриОшибкахПовторятьЧерезРегламентноеЗадание
			|");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.НастройкиСозданияПеремещений, 
			"НастройкаФормированияПоРабочимУчасткам, ОграничениеПоВесу,
			|ОграничениеПоОбъему, ОграничиватьПоВесу, ОграничиватьПоОбъему, 
			|ПравилоСозданияЗаданий, РабочийУчасток
			|");
	КонецЕсли;
		
	ИспользованиеРабочихУчастков = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ИспользованиеРабочихУчастков");
	Если ИспользованиеРабочихУчастков = Перечисления.ИспользованиеСкладскихРабочихУчастков.ОпределяетсяНастройкамиПомещения Тогда
		ИспользованиеРабочихУчастков = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Помещение, "ИспользованиеРабочихУчастков");
	КонецЕсли;

	УстановитьЗначенияРеквизитовПоУмолчанию(
		ИспользованиеРабочихУчастков = Перечисления.ИспользованиеСкладскихРабочихУчастков.Использовать);
	Элементы.НастройкиСозданияЗаданийРабочиеУчастки.Видимость = 
		ИспользованиеРабочихУчастков = Перечисления.ИспользованиеСкладскихРабочихУчастков.Использовать;
		
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
		Элементы.ГруппаПравилоСозданияЗаданийВыбор.Видимость = Ложь;
		Элементы.ГруппаПравилоСозданияЗаданийПодпитка.Видимость = Истина;
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru = 'Создание заданий на подпитку зон быстрого отбора'");
	КонецЕсли;
	
	УстановитьДоступность(ЭтаФорма);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОграничиватьПоВесуПриИзменении(Элемент)
	Элементы.ОграничениеПоВесу.Доступность = ОграничиватьПоВесу;
КонецПроцедуры

&НаКлиенте
Процедура ОграничиватьПоОбъемуПриИзменении(Элемент)
	Элементы.ОграничениеПоОбъему.Доступность = ОграничиватьПоОбъему;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаФормированияПоРабочимУчасткамПриИзменении(Элемент)
	Если НастройкаФормированияПоРабочимУчасткам = "ПоОдномуРабочемуУчастку"
		И ЗначениеЗаполнено(РабочийУчасток) Тогда
		РабочийУчастокПриИзмененииСервер();
	КонецЕсли;
	УстановитьДоступность(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПравилоСозданияЗаданийПриИзменении(Элемент)
	НаименованиеРегламентногоЗадания = СгенерироватьНаименованиеРегламентногоЗадания(Склад, Помещение, ПравилоСозданияЗаданий);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЗадания(Команда)
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат
	КонецЕсли;
	
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("Помещение",								Помещение);
	ПараметрыСоздания.Вставить("Склад",									Склад);
	ПараметрыСоздания.Вставить("ПравилоСозданияЗаданий",				ПравилоСозданияЗаданий);
	ПараметрыСоздания.Вставить("НастройкаФормированияПоРабочимУчасткам",НастройкаФормированияПоРабочимУчасткам);
	ПараметрыСоздания.Вставить("РабочийУчасток",						РабочийУчасток);
	ПараметрыСоздания.Вставить("ОграничиватьПоВесу",					ОграничиватьПоВесу);
	ПараметрыСоздания.Вставить("ОграничениеПоВесу",						ОграничениеПоВесу);
	ПараметрыСоздания.Вставить("ОграничиватьПоОбъему",					ОграничиватьПоОбъему);
	ПараметрыСоздания.Вставить("ОграничениеПоОбъему",					ОграничениеПоОбъему);
		
	Результат = Новый Структура("ДействиеНадРегламентнымЗаданием, НаименованиеРегламентногоЗадания, ПриОшибкахПовторятьРегламентноеЗадание,
					|ПриОшибкахПовторятьЧерезРегламентноеЗадание, РасписаниеРегламентногоЗадания");
	ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект);
	Результат.Вставить("Действие", "ЗакрытьИСохранитьРегламентноеЗадание");
	Результат.Вставить("НастройкиСозданияПеремещений", ПараметрыСоздания);
	Закрыть(Результат);
		
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Новый Структура("Действие", "Отмена"));
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступность(Форма)
	
	Форма.Элементы.РабочийУчасток.Доступность 				= Форма.НастройкаФормированияПоРабочимУчасткам = "ПоОдномуРабочемуУчастку";
	Форма.Элементы.ОграничениеПоОбъему.Доступность 			= Форма.ОграничиватьПоОбъему;
	Форма.Элементы.ЕдиницаИзмеренияОбъема.Доступность 		= Форма.ОграничиватьПоОбъему;
	Форма.Элементы.ОграничениеПоВесу.Доступность			= Форма.ОграничиватьПоВесу;
	Форма.Элементы.ЕдиницаИзмеренияВеса.Доступность			= Форма.ОграничиватьПоВесу;
	
	Если Форма.НастройкаФормированияПоРабочимУчасткам = "СРазбиениемПоРабочимУчасткам" Тогда
		Форма.Элементы.ГруппаНастройкиОграничения.ТекущаяСтраница = Форма.Элементы.СтраницаОграничиватьНадпись;
	Иначе
		Форма.Элементы.ГруппаНастройкиОграничения.ТекущаяСтраница = Форма.Элементы.СтраницаОграничиватьФлаги;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеРегламентногоЗаданияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	Оповещение = Новый ОписаниеОповещения("РасписаниеРегламентногоЗаданияНажатиеЗавершение", ЭтаФорма);
	ДиалогРасписания.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеРегламентногоЗаданияНажатиеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание = Неопределено ИЛИ НЕ ТипЗнч(Расписание) = Тип("РасписаниеРегламентногоЗадания") Тогда
		Возврат;
	КонецЕсли;
	
	РасписаниеРегламентногоЗадания = Расписание;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НастройкаФормированияПоРабочимУчасткам <> "ПоОдномуРабочемуУчастку" Тогда
		МассивНепроверяемыхРеквизитов.Добавить("РабочийУчасток");	
	КонецЕсли;
	
	Если Не ОграничиватьПоВесу Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ОграничениеПоВесу");	
	КонецЕсли;
	
	Если Не ОграничиватьПоОбъему Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ОграничениеПоОбъему");	
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура РабочийУчастокПриИзмененииСервер()
		
	ЗаполнитьЗначенияСвойств(
		ЭтаФорма, 
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			РабочийУчасток,
			"ОграничиватьПоВесу,ОграничениеПоВесу,ОграничиватьПоОбъему,ОграничениеПоОбъему"),
		"ОграничиватьПоВесу,ОграничениеПоВесу,ОграничиватьПоОбъему,ОграничениеПоОбъему");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияРеквизитовПоУмолчанию(ИспользоватьРабочиеУчастки)
	
	Если НЕ ЗначениеЗаполнено(НастройкаФормированияПоРабочимУчасткам) 
		Или Не ИспользоватьРабочиеУчастки Тогда
		НастройкаФормированияПоРабочимУчасткам = "БезРазбиенияПоРабочимУчасткам";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПравилоСозданияЗаданий) Или Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
		ПравилоСозданияЗаданий = Перечисления.ПравилаСозданияЗаданийНаОтборРазмещение.ПодпиткаЗонБыстрогоОтбора;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НаименованиеРегламентногоЗадания) Тогда
		НаименованиеРегламентногоЗадания = СгенерироватьНаименованиеРегламентногоЗадания(Склад, Помещение, ПравилоСозданияЗаданий);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция СгенерироватьНаименованиеРегламентногоЗадания(Склад, Помещение, ПравилоСозданияЗаданий)
	
	НаименованиеРегламентногоЗадания = 
		НСтр("ru = 'Создание заданий на перемещение ""%Правило%"" для склада ""%ПредставлениеСклада%""'");
	НаименованиеРегламентногоЗадания = 
		СтрЗаменить(НаименованиеРегламентногоЗадания, 
			"%Правило%", 
			СформироватьНаименованиеПравилаДляРегЗадания(ПравилоСозданияЗаданий));
	НаименованиеРегламентногоЗадания = 
		СтрЗаменить(НаименованиеРегламентногоЗадания, 
			"%ПредставлениеСклада%", 
			СкладыСервер.ПолучитьПредставлениеСклада(Склад, Помещение));
			
	Возврат НаименованиеРегламентногоЗадания;

КонецФункции

&НаСервереБезКонтекста
Функция СформироватьНаименованиеПравилаДляРегЗадания(ПравилоСозданияЗаданий)
	Если ПравилоСозданияЗаданий = 
		Перечисления.ПравилаСозданияЗаданийНаОтборРазмещение.ПеремещениеПоПравиламРазмещенияОбособленныхТоваров Тогда
		Возврат НСтр("ru = 'Размещение обособленных товаров'");
	ИначеЕсли ПравилоСозданияЗаданий = 
		Перечисления.ПравилаСозданияЗаданийНаОтборРазмещение.ПодпиткаЗонБыстрогоОтбора Тогда
		Возврат НСтр("ru = 'Подпитка зон быстрого отбора'");
	КонецЕсли;
	Возврат "";
КонецФункции

#КонецОбласти

#КонецОбласти