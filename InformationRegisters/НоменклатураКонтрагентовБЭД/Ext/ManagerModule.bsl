
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ОбновлениеВерсииИБ

// Регистрирует данные для обработчика обновления
// 
// Параметры:
//  Параметры - Структура - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.НоменклатураКонтрагентовБЭД;
	ПолноеИмяРегистра = МетаданныеОбъекта.ПолноеИмя();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.СпособВыборки        = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	НоменклатураКонтрагентовБЭД.Владелец КАК Владелец,
	|	НоменклатураКонтрагентовБЭД.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.НоменклатураКонтрагентовБЭД КАК НоменклатураКонтрагентовБЭД
	|ГДЕ
	|	НоменклатураКонтрагентовБЭД.Владелец >= &Владелец
	|	И ВЫБОР
	|		КОГДА НоменклатураКонтрагентовБЭД.Владелец = &Владелец
	|			ТОГДА НоменклатураКонтрагентовБЭД.Идентификатор > &Идентификатор
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Владелец,
	|	Идентификатор";
	
	Владелец      = МетаданныеОбъекта.Измерения.Владелец.Тип.ПривестиЗначение();
	Идентификатор = "";
	
	Пока Истина Цикл
		
		Запрос.УстановитьПараметр("Владелец", Владелец);
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		
		Выгрузка        = Запрос.Выполнить().Выгрузить();
		КоличествоСтрок = Выгрузка.Количество();
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Выгрузка, ДополнительныеПараметры);
		
		Если КоличествоСтрок < 1000 Тогда
			Прервать;
		Иначе
			Владелец      = Выгрузка[КоличествоСтрок - 1].Владелец;
			Идентификатор = Выгрузка[КоличествоСтрок - 1].Идентификатор;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
	
// Обработчик обновления БЭД 1.8.1
//
// Перебирает записи в регистре сведений НоменклатураКонтрагентовБЭД и разбивает идентификатор на части:
//  Идентификатор Номенклатуры, Идентификатор Характеристики, Идентификатор Упаковки.
// 
// Параметры:
//  Параметры - Структура - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.НоменклатураКонтрагентовБЭД;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();
	
	Если Не ОбновлениеИнформационнойБазы.ОбъектОбработан(Метаданные.Справочники.НоменклатураКонтрагентов.ПолноеИмя()).Обработан Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ВыборкаДляЗаписиВСправочник = ВыборкаОтсутствующейНоменклатурыКонтрагентовВСправочнике(ОбновляемыеДанные);

	ДополнительныеПараметры = СопоставлениеНоменклатурыКонтрагентов.НовыеДополнительныеПараметрыПриЗаписиНоменклатурыКонтрагентов();
	ДополнительныеПараметры.ТребуетсяЗаписьВРегистр = Ложь;
	ДополнительныеПараметры.ТребуетсяПоискСсылки    = Ложь;
	
	ЕстьОтработанныеЗаписи = Ложь;
	ПроизошлаОшибка        = Ложь;
	Для Каждого Строка Из ОбновляемыеДанные Цикл
		
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("Владелец"     , Строка.Владелец);
		ПараметрыПоиска.Вставить("Идентификатор", Строка.Идентификатор);
		
		НачатьТранзакцию();
		Попытка
			
			НаборЗаписей = РегистрыСведений.НоменклатураКонтрагентовБЭД.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Владелец.Установить(Строка.Владелец);
			НаборЗаписей.Отбор.Идентификатор.Установить(Строка.Идентификатор);
			ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоНаборуЗаписей(НаборЗаписей);
			НаборЗаписей.Прочитать();
			
			Записать = Ложь;
			
			ОбработкаДанных_1_8_1(НаборЗаписей, Записать, ВыборкаДляЗаписиВСправочник, ПараметрыПоиска,
				ДополнительныеПараметры);
			ОбработкаДанных_1_9_10(НаборЗаписей, Записать);
			
			Если Записать Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			
			ЕстьОтработанныеЗаписи = Истина;
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ШаблонСообщения = НСтр("ru = 'Не удалось обработать запись по идентификатору: %1 по причине:'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Строка.Идентификатор) + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта, Строка.Идентификатор, ТекстСообщения);
				
			ПроизошлаОшибка = Истина;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если Не ЕстьОтработанныеЗаписи И ПроизошлаОшибка Тогда
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;

	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		
КонецПроцедуры

// Конец СтандартныеПодсистемы.ОбновлениеВерсииИБ

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыборкаОтсутствующейНоменклатурыКонтрагентовВСправочнике(Знач ОбновляемыеДанные)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбновляемыеДанные", ОбновляемыеДанные);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбновляемыеДанные.Владелец КАК Владелец,
	|	ОбновляемыеДанные.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ОбновляемыеДанные
	|ИЗ
	|	&ОбновляемыеДанные КАК ОбновляемыеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбновляемыеДанные.Владелец КАК Владелец,
	|	ОбновляемыеДанные.Идентификатор КАК Идентификатор
	|ИЗ
	|	ОбновляемыеДанные КАК ОбновляемыеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО ОбновляемыеДанные.Владелец = НоменклатураКонтрагентов.ВладелецНоменклатуры
	|			И ОбновляемыеДанные.Идентификатор = НоменклатураКонтрагентов.Идентификатор
	|ГДЕ
	|	НоменклатураКонтрагентов.Ссылка ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выбрать();

КонецФункции

#Область Обработчики

Процедура ОбработкаДанных_1_8_1(НаборЗаписей, Записать, ВыборкаДляЗаписиВСправочник, ПараметрыПоиска,
	ДополнительныеПараметры)
	
	Отказ       = Ложь;
	ТекстОшибки = "";
		
	Если НаборЗаписей.Количество() Тогда
		
		ТекущаяЗапись = НаборЗаписей[0];
		
		Если (Не ЗначениеЗаполнено(ТекущаяЗапись.ИдентификаторНоменклатуры)
			Или Не ЗначениеЗаполнено(ТекущаяЗапись.ИдентификаторХарактеристики)
			Или Не ЗначениеЗаполнено(ТекущаяЗапись.ИдентификаторУпаковки)) Тогда
			
			Записать = Истина;
			
			СопоставлениеНоменклатурыКонтрагентовКлиентСервер.РазделитьИдентификаторНаЧасти(ТекущаяЗапись.Идентификатор, ТекущаяЗапись);
			
			Если ЗначениеЗаполнено(ТекущаяЗапись.Характеристика) Тогда
				ТекущаяЗапись.ИспользоватьХарактеристики = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ВыборкаДляЗаписиВСправочник.НайтиСледующий(ПараметрыПоиска) Тогда
			
			Записать = Истина;
			НоменклатураКонтрагента = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента();
			ЗаполнитьЗначенияСвойств(НоменклатураКонтрагента, ТекущаяЗапись);
			НоменклатураИБ = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураИнформационнойБазы();
			ЗаполнитьЗначенияСвойств(НоменклатураИБ, ТекущаяЗапись);
			
			СопоставлениеНоменклатурыКонтрагентов.СоздатьОбновитьНоменклатуруКонтрагента(
				НоменклатураКонтрагента, НоменклатураИБ, Отказ, ТекстОшибки, ДополнительныеПараметры);
				
			ТекущаяЗапись.НаименованиеУпаковки = НоменклатураКонтрагента.НаименованиеУпаковки;
			ТекущаяЗапись.ЕдиницаИзмерения     = НоменклатураКонтрагента.ЕдиницаИзмерения;
			
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаДанных_1_9_10(НаборЗаписей, Записать)
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		ИсходныеКлючи = СопоставлениеНоменклатурыКонтрагентовСлужебный.ХешиНатуральныхКлючейНоменклатуры(
			"", "", "", "");
		ЗаполнитьЗначенияСвойств(ИсходныеКлючи, Запись);
		
		Ключи = СопоставлениеНоменклатурыКонтрагентовСлужебный.ХешиНатуральныхКлючейНоменклатуры(
			Запись.Наименование,
			Запись.Артикул,
			Запись.КодНоменклатуры,
			Запись.ШтрихкодКомбинации);
		
		Если ОбщегоНазначения.ДанныеСовпадают(ИсходныеКлючи, Ключи) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Запись, Ключи);
		
		Записать = Истина;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли