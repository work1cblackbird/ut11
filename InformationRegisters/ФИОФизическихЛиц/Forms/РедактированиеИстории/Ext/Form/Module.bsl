
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ФизическоеЛицо", ФизическоеЛицо);
	
	Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НаборЗаписей.Загрузить(Параметры.НаборЗаписей.Выгрузить());
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ФИОФизическихЛиц) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли; 
	
	Если ТолькоПросмотр Тогда
		
		Элементы.НаборЗаписей.ТолькоПросмотр = Истина;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, 
			"ФормаКомандаОК",
			"Доступность",
			Ложь);
			
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ВопросОЗакрытииЗавершение", ЭтаФорма),
			НСтр("ru = 'Данные были изменены. Сохранить изменения?'"),
			РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыНаборЗаписей

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НЕ НоваяСтрока ИЛИ Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если НаборЗаписей.Количество() > 1 Тогда
		
		ЗаписьФИОФизическихЛиц = НаборЗаписей.Получить(НаборЗаписей.Количество() - 2);
		ПоследнийПериод = ЗаписьФИОФизическихЛиц.Период;
		
		Если НЕ Копирование Тогда
			Элемент.ТекущиеДанные.Фамилия 	= ЗаписьФИОФизическихЛиц.Фамилия;
			Элемент.ТекущиеДанные.Имя 		= ЗаписьФИОФизическихЛиц.Имя;
			Элемент.ТекущиеДанные.Отчество 	= ЗаписьФИОФизическихЛиц.Отчество;
		КонецЕсли;
		
	Иначе
		ПоследнийПериод = '00010101000000';
	КонецЕсли; 
	
	Элемент.ТекущиеДанные.Период = Макс(НачалоДня(ТекущаяДата()), КонецДня(ПоследнийПериод) + 1);
	Элемент.ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицо;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования ИЛИ Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
		
		СообщениеОбОшибке = НСтр("ru = 'Необходимо указать дату сведений'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Фамилия)
	 И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Имя) 
	 И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Отчество) Тогда
		
		СообщениеОбОшибке = НСтр("ru = 'Необходимо указать хотя бы одну часть ФИО'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей", , Отказ);
		
	Иначе
		
		НайденныеСтроки = НаборЗаписей.НайтиСтроки(Новый Структура("Период", Элемент.ТекущиеДанные.Период));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если НайденнаяСтрока <> Элемент.ТекущиеДанные Тогда
				СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
				Прервать;
			КонецЕсли; 
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НЕ ОтменаРедактирования Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
	ИдентификаторТекущейСтроки = Элементы.НаборЗаписей.ТекущаяСтрока;
	Если ИдентификаторТекущейСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = НаборЗаписей.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ИндексТекущейСтроки = НаборЗаписей.Индекс(ТекущаяСтрока);
	КоличествоЗаписей = НаборЗаписей.Количество();
	СдвигаемаяЗапись = НаборЗаписей[ИндексТекущейСтроки];
	
	Смещение = 0;
	
	Если ИндексТекущейСтроки > 0 Тогда
		Для СдвигИндексаЗаписи = КоличествоЗаписей - ИндексТекущейСтроки По КоличествоЗаписей - 1 Цикл
			Запись = НаборЗаписей[КоличествоЗаписей - 1 - СдвигИндексаЗаписи];
			Если СдвигаемаяЗапись.Период > Запись.Период Тогда
				Прервать;
			КонецЕсли; 
			Смещение = Смещение - 1;
		КонецЦикла;
	КонецЕсли;
	
	Если Смещение = 0 И ИндексТекущейСтроки < КоличествоЗаписей - 1 Тогда
		Для ИндексЗаписи = ИндексТекущейСтроки + 1 По КоличествоЗаписей - 1 Цикл
			Запись = НаборЗаписей[ИндексЗаписи];
			Если СдвигаемаяЗапись.Период < Запись.Период Тогда
				Прервать;
			КонецЕсли; 
			Смещение = Смещение + 1;
		КонецЦикла;
	КонецЕсли;
	
	Если Смещение <> 0 Тогда
		НаборЗаписей.Сдвинуть(ИндексТекущейСтроки, Смещение);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПослеУдаления(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПараметрОповещения = Новый Структура("ИмяРегистра, НаборЗаписей", "ФИОФизическихЛиц", НаборЗаписей);
	Оповестить("ОтредактированаИстория", ПараметрОповещения, ФизическоеЛицо);
	
	Модифицированность = Ложь;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросОЗакрытииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		КомандаОК(Неопределено);
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		КомандаОтмена(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
