#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь();
	КоманднаяПанель.ПодчиненныеЭлементы.ФормаОбновитьДанныеРегистра.Видимость = ЭтоПолноправныйПользователь;
	
	Если Параметры.Свойство("АвтоТест") ИЛИ ЭтоПолноправныйПользователь Тогда
		Возврат;
	КонецЕсли;
	
	ТолькоПросмотр = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьДанныеРегистра(Команда)
	ОбновитьДанныеРегистраНаСервере();
	Элементы.Список.Обновить();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ОбновитьДанныеРегистраНаСервере()

	ДокументыКОбработке = Новый ТаблицаЗначений;
	ДокументыКОбработке.Колонки.Добавить("Документ", Новый ОписаниеТипов("ДокументСсылка.РегистраторРасчетов"));

	ЗапросДокументы = Новый Запрос;
	ЗапросДокументы.Текст = "
	|ВЫБРАТЬ
	|	РегистраторыРасчетов.Ссылка КАК Документ
	|ИЗ
	|	Документ.РегистраторРасчетов КАК РегистраторыРасчетов";

	ВыборкаДокументов = ЗапросДокументы.Выполнить().Выбрать();
	КоличествоЗаписейКОбработке = 0;

	Пока ВыборкаДокументов.Следующий() Цикл

		КоличествоЗаписейКОбработке = КоличествоЗаписейКОбработке + 1;
		ЗаполнитьЗначенияСвойств(ДокументыКОбработке.Добавить(), ВыборкаДокументов);

		Если КоличествоЗаписейКОбработке = 1000 Тогда
			ОбработатьДанныеРегистра(ДокументыКОбработке);
			ДокументыКОбработке.Очистить();
			КоличествоЗаписейКОбработке = 0;
		КонецЕсли;

	КонецЦикла;

	Если ДокументыКОбработке.Количество() > 0 Тогда
		ОбработатьДанныеРегистра(ДокументыКОбработке);
	КонецЕсли;

КонецПроцедуры

// Обработать порцию документов и записать данные в регистр.
// 
// Параметры:
//  ДокументыКОбработке - ТаблицаЗначений - Документы к обработке:
// * Документ - ДокументСсылка.РегистраторРасчетов - 
//
&НаСервереБезКонтекста
Процедура ОбработатьДанныеРегистра(ДокументыКОбработке)
	
	Запрос = Новый Запрос;

	ЗапросРасчетыСПартнерами = Новый Запрос;
	ТекстЗапросаРасчетыСКлиентами = "
	|ВЫБРАТЬ
	|	Регистр.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Регистр.Валюта КАК Валюта,
	|	""РасчетыСКлиентамиПоСрокам"" КАК ИмяТаблицы,
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ) КАК ПериодЗаписи,
	|	Регистр.Регистратор КАК Документ,
	|	КОЛИЧЕСТВО(Регистр.НомерСтроки) КАК КоличествоЗаписей
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК Регистр
	|ГДЕ
	|	Регистр.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	Регистр.АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов,
	|	Регистр.Валюта,
	|	""РасчетыСКлиентамиПоСрокам"",
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ),
	|	Регистр.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Регистр.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Регистр.Валюта КАК Валюта,
	|	""РасчетыСКлиентамиПланОплат"" КАК ИмяТаблицы,
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ) КАК ПериодЗаписи,
	|	Регистр.Регистратор КАК Документ,
	|	КОЛИЧЕСТВО(Регистр.НомерСтроки) КАК КоличествоЗаписей
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПланОплат КАК Регистр
	|ГДЕ
	|	Регистр.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	Регистр.АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов,
	|	Регистр.Валюта,
	|	""РасчетыСКлиентамиПланОплат"",
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ),
	|	Регистр.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Регистр.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Регистр.Валюта КАК Валюта,
	|	""РасчетыСКлиентамиПланОтгрузок"" КАК ИмяТаблицы,
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ) КАК ПериодЗаписи,
	|	Регистр.Регистратор КАК Документ,
	|	КОЛИЧЕСТВО(Регистр.НомерСтроки) КАК КоличествоЗаписей
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПланОтгрузок КАК Регистр
	|ГДЕ
	|	Регистр.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	Регистр.АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов,
	|	Регистр.Валюта,
	|	""РасчетыСКлиентамиПланОтгрузок"",
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ),
	|	Регистр.Регистратор";
	
	ТекстЗапросаРасчетыСПоставщиками = "
	|ВЫБРАТЬ
	|	Регистр.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Регистр.Валюта КАК Валюта,
	|	""РасчетыСПоставщикамиПоСрокам"" КАК ИмяТаблицы,
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ) КАК ПериодЗаписи,
	|	Регистр.Регистратор КАК Документ,
	|	КОЛИЧЕСТВО(Регистр.НомерСтроки) КАК КоличествоЗаписей
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Регистр
	|ГДЕ
	|	Регистр.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	Регистр.АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов,
	|	Регистр.Валюта,
	|	""РасчетыСПоставщикамиПоСрокам"",
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ),
	|	Регистр.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Регистр.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Регистр.Валюта КАК Валюта,
	|	""РасчетыСПоставщикамиПланОплат"" КАК ИмяТаблицы,
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ) КАК ПериодЗаписи,
	|	Регистр.Регистратор КАК Документ,
	|	КОЛИЧЕСТВО(Регистр.НомерСтроки) КАК КоличествоЗаписей
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПланОплат КАК Регистр
	|ГДЕ
	|	Регистр.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	Регистр.АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов,
	|	Регистр.Валюта,
	|	""РасчетыСПоставщикамиПланОплат"",
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ),
	|	Регистр.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Регистр.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Регистр.Валюта КАК Валюта,
	|	""РасчетыСПоставщикамиПланПоставок"" КАК ИмяТаблицы,
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ) КАК ПериодЗаписи,
	|	Регистр.Регистратор КАК Документ,
	|	КОЛИЧЕСТВО(Регистр.НомерСтроки) КАК КоличествоЗаписей
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПланПоставок КАК Регистр
	|ГДЕ
	|	Регистр.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	Регистр.АналитикаУчетаПоПартнерам,
	|	Регистр.ОбъектРасчетов,
	|	Регистр.Валюта,
	|	""РасчетыСПоставщикамиПланПоставок"",
	|	НАЧАЛОПЕРИОДА(Регистр.Период, ДЕНЬ),
	|	Регистр.Регистратор";

	Запрос = Новый Запрос();
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Данные.Документ КАК Документ
	|ПОМЕСТИТЬ ВтДанныеДляОбработки
	|ИЗ
	|	&ДокументыКОбработке КАК Данные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеДляОбработки.Документ КАК Документ,
	|	ЕСТЬNULL(РегистраторРасчетов.ТипРасчетов, ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.ПустаяСсылка)) КАК ТипРасчетов
	|ИЗ
	|	ВтДанныеДляОбработки КАК ВтДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистраторРасчетов КАК РегистраторРасчетов
	|		ПО РегистраторРасчетов.Ссылка = ВтДанныеДляОбработки.Документ";
	Запрос.УстановитьПараметр("ДокументыКОбработке", ДокументыКОбработке);
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		Если Не ЗначениеЗаполнено(Выборка.ТипРасчетов) Тогда
			Продолжить;
		КонецЕсли;

		НачатьТранзакцию();

		Попытка
			НаборЗаписей = РегистрыСведений.КоличествоЗаписейРегистраторовРасчетов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(Выборка.Документ);

			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.КоличествоЗаписейРегистраторовРасчетов");
			ЭлементБлокировки.УстановитьЗначение("Документ", Выборка.Документ);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

			Если Выборка.ТипРасчетов = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом Тогда

				ЗапросРасчетыСПартнерами.Текст = ТекстЗапросаРасчетыСКлиентами;

				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСКлиентамиПоСрокам.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСКлиентамиПланОплат.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСКлиентамиПланОтгрузок.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

			Иначе

				ЗапросРасчетыСПартнерами.Текст = ТекстЗапросаРасчетыСПоставщиками;

				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоСрокам.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщикамиПланОплат.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

				ЭлементБлокировки = Блокировка.Добавить(
					"РегистрНакопления.РасчетыСПоставщикамиПланПоставок.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

			КонецЕсли;

			Блокировка.Заблокировать();

			ЗапросРасчетыСПартнерами.УстановитьПараметр("Регистратор", Выборка.Документ);
			ВыборкаРасчетыСПартнерами = ЗапросРасчетыСПартнерами.Выполнить().Выбрать();

			Пока ВыборкаРасчетыСПартнерами.Следующий() Цикл
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасчетыСПартнерами);
			КонецЦикла;

			НаборЗаписей.Записать();

			ЗафиксироватьТранзакцию();

		Исключение

			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обновить данные регистра ""Количество записей регистраторов расчетов"": %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление данных регистра ""Количество записей регистраторов расчетов""'"),
				УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.КоличествоЗаписейРегистраторовРасчетов,
				ТекстСообщения);

			ВызватьИсключение ТекстСообщения;

		КонецПопытки;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

