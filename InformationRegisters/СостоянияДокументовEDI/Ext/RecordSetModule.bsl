
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		Запись.ХэшТипаДокументаИСтатуса = РегистрыСведений.СостоянияДокументовEDI.ХэшТипаДокументаИСтатуса(Запись.ТипДокумента, Запись.ТекущийСтатус);
	КонецЦикла;
	
	Если Не (ДополнительныеСвойства.Свойство("НеВыполнятьРасчетПоСтатусам")
		И ДополнительныеСвойства.НеВыполнятьРасчетПоСтатусам) Тогда
		
		ДополнительныеСвойства.Вставить("ДанныеДляРасчетаИтогаПоСтатусамПередЗаписью", ДанныеДляРасчетаИтогаПоСтатусамПередЗаписью());
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ДанныеДляРасчетаИтогаПоСтатусамПередЗаписью")
		И Не (ДополнительныеСвойства.Свойство("НеВыполнятьРасчетПоСтатусам")
		И ДополнительныеСвойства.НеВыполнятьРасчетПоСтатусам) Тогда
		
		ДанныеДляРасчета = ДанныеДляРасчетаИтоговПоСтатусам(ДополнительныеСвойства.ДанныеДляРасчетаИтогаПоСтатусамПередЗаписью, Отбор);
		
		Если ДанныеДляРасчета.ТребуетсяРасчет Тогда
			
			Если ДополнительныеСвойства.Свойство("ОтложенныйРасчетПоСтатусам")
				И ДополнительныеСвойства.ОтложенныйРасчетПоСтатусам Тогда
				
			Иначе
				
				РегистрыСведений.ТекущиеИтогиПоСтатусамEDI.РассчитатьИтоги(ДанныеДляРасчета.ИдентификаторыДокументов,
				                                                           ДанныеДляРасчета.Статусы, 
				                                                           ДанныеДляРасчета.Менеджеры, 
				                                                           ДанныеДляРасчета.Организации, 
				                                                           ДанныеДляРасчета.СостоянияПрикладногоОбъекта)
				
			КонецЕсли;
			
		КонецЕсли
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляРасчетаИтогаПоСтатусамПередЗаписью()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистра.ТекущийСтатус               КАК ТекущийСтатус,
	|	ТаблицаРегистра.ТипДокумента                КАК ТипДокумента,
	|	ТаблицаРегистра.Менеджер                    КАК Менеджер,
	|	ТаблицаРегистра.Организация                 КАК Организация,
	|	ТаблицаРегистра.СостояниеПрикладногоОбъекта КАК СостояниеПрикладногоОбъекта,
	|	1                                           КАК Агрегатор
	|ИЗ
	|	РегистрСведений.СостоянияДокументовEDI      КАК ТаблицаРегистра";
	
	ДополнитьЗапросПоОтборуНабораЗаписей(Запрос, Отбор);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ДополнитьЗапросПоОтборуНабораЗаписей(Запрос, Отбор)
	
	ТекстУсловия = "";
	Счетчик = 1;
	
	Для Каждого ЭлементОтбора Из Отбор Цикл
		
		ИмяПараметра = "П" + Строка(Счетчик);
		
		ТекстУсловия = ТекстУсловия + "
		|" + ?(Счетчик > 1, " И ", "") + "ТаблицаРегистра." + ЭлементОтбора.Имя + " = &" + ИмяПараметра;
		
		Запрос.УстановитьПараметр(ИмяПараметра, ЭлементОтбора.Значение);
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	Если Не ПустаяСтрока(ТекстУсловия) Тогда
		ТекстУсловия = "
		|ГДЕ " + ТекстУсловия; 
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + ТекстУсловия;
	
КонецПроцедуры

Функция ДанныеДляРасчетаИтоговПоСтатусам(ДанныеДляРасчетаПередЗаписью, Отбор)
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ТребуетсяРасчет",             Ложь);
	СтруктураВозврата.Вставить("ИдентификаторыДокументов",    Неопределено);
	СтруктураВозврата.Вставить("СостоянияПрикладногоОбъекта", Неопределено);
	СтруктураВозврата.Вставить("Статусы",                     Неопределено);
	СтруктураВозврата.Вставить("Организации",                 Неопределено);
	СтруктураВозврата.Вставить("Менеджеры",                   Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередЗаписью.ТекущийСтатус               КАК ТекущийСтатус,
	|	ПередЗаписью.ТипДокумента                КАК ТипДокумента,
	|	ПередЗаписью.Менеджер                    КАК Менеджер,
	|	ПередЗаписью.Организация                 КАК Организация,
	|	ПередЗаписью.СостояниеПрикладногоОбъекта КАК СостояниеПрикладногоОбъекта,
	|	ПередЗаписью.Агрегатор                   КАК Агрегатор
	|ПОМЕСТИТЬ ПередЗаписью
	|ИЗ
	|	&ПередЗаписью КАК ПередЗаписью
	|
	|;
	|///////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистра.ТекущийСтатус               КАК ТекущийСтатус,
	|	ТаблицаРегистра.ТипДокумента                КАК ТипДокумента,
	|	ТаблицаРегистра.Менеджер                    КАК Менеджер,
	|	ТаблицаРегистра.Организация                 КАК Организация,
	|	ТаблицаРегистра.СостояниеПрикладногоОбъекта КАК СостояниеПрикладногоОбъекта,
	|	-1                                          КАК Агрегатор
	|ПОМЕСТИТЬ ПриЗаписи
	|ИЗ
	|	РегистрСведений.СостоянияДокументовEDI КАК ТаблицаРегистра";
	
	ДополнитьЗапросПоОтборуНабораЗаписей(Запрос, Отбор);
	
	Запрос.Текст = Запрос.Текст + "
	|
	|;
	|///////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередИПриЗаписи.ТекущийСтатус               КАК ТекущийСтатус,
	|	ПередИПриЗаписи.ТипДокумента                КАК ТипДокумента,
	|	ПередИПриЗаписи.Менеджер                    КАК Менеджер,
	|	ПередИПриЗаписи.Организация                 КАК Организация,
	|	ПередИПриЗаписи.СостояниеПрикладногоОбъекта КАК СостояниеПрикладногоОбъекта,
	|	СУММА(ПередИПриЗаписи.Агрегатор)  КАК Агрегатор
	|ИЗ
	|(ВЫБРАТЬ
	|	ПередЗаписью.ТекущийСтатус               КАК ТекущийСтатус,
	|	ПередЗаписью.ТипДокумента                КАК ТипДокумента,
	|	ПередЗаписью.Менеджер                    КАК Менеджер,
	|	ПередЗаписью.Организация                 КАК Организация,
	|	ПередЗаписью.СостояниеПрикладногоОбъекта КАК СостояниеПрикладногоОбъекта,
	|	ПередЗаписью.Агрегатор                   КАК Агрегатор
	|ИЗ 
	|	ПередЗаписью
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриЗаписи.ТекущийСтатус               КАК ТекущийСтатус,
	|	ПриЗаписи.ТипДокумента                КАК ТипДокумента,
	|	ПриЗаписи.Менеджер                    КАК Менеджер,
	|	ПриЗаписи.Организация                 КАК Организация,
	|	ПриЗаписи.СостояниеПрикладногоОбъекта КАК СостояниеПрикладногоОбъекта,
	|	ПриЗаписи.Агрегатор                   КАК Агрегатор
	|ИЗ
	|	ПриЗаписи) КАК ПередИПриЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекущийСтатус,
	|	ТипДокумента,
	|	Менеджер,
	|	Организация,
	|	СостояниеПрикладногоОбъекта
	|ИМЕЮЩИЕ
	|	СУММА(ПередИПриЗаписи.Агрегатор) <> 0 ";
	
	Запрос.УстановитьПараметр("ПередЗаписью", ДанныеДляРасчетаПередЗаписью);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ИдентификаторыДокументов    = Новый Соответствие;
	Статусы                     = Новый Соответствие;
	Менеджеры                   = Новый Соответствие;
	Организации                 = Новый Соответствие;
	СостоянияПрикладногоОбъекта = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		
		ИдентификаторыДокументов.Вставить(Выборка.ТипДокумента);
		Статусы.Вставить(Выборка.ТекущийСтатус);
		Менеджеры.Вставить(Выборка.Менеджер);
		Организации.Вставить(Выборка.Организация);
		СостоянияПрикладногоОбъекта.Вставить(Выборка.СостояниеПрикладногоОбъекта);
		
	КонецЦикла;
	
	СтруктураВозврата.ТребуетсяРасчет = Истина;
	СтруктураВозврата.ИдентификаторыДокументов    = МассивИзСоответствия(ИдентификаторыДокументов);
	СтруктураВозврата.Статусы                     = МассивИзСоответствия(Статусы);
	СтруктураВозврата.Менеджеры                   = МассивИзСоответствия(Менеджеры);
	СтруктураВозврата.Организации                 = МассивИзСоответствия(Организации);
	СтруктураВозврата.СостоянияПрикладногоОбъекта = МассивИзСоответствия(СостоянияПрикладногоОбъекта);
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция МассивИзСоответствия(ДанныеСоответствия)
	
	СоздаваемыйМассив = Новый Массив;
		
	Для Каждого КлючИЗначение Из ДанныеСоответствия Цикл
		
		СоздаваемыйМассив.Добавить(КлючИЗначение.Ключ);
		
	КонецЦикла;
	
	Возврат СоздаваемыйМассив;
	
КонецФункции

#КонецОбласти

#КонецЕсли

