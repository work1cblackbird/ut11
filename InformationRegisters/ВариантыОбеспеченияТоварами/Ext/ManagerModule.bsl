#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Склад)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//   Таблица - ТаблицаЗначений - Таблица для заполнения.
//   СпособОбеспечения - СправочникСсылка.СпособыОбеспеченияПотребностей - Способ обеспечения потребностей.
// Возвращаемое значение:
//   Массив - идентфикаторы обработанных строк.
Функция ЗаполнитьСпособОбеспечения(Таблица, СпособОбеспечения) Экспорт
	
	Набор = РегистрыСведений.ВариантыОбеспеченияТоварами.СоздатьНаборЗаписей();
	ОбработанныеСтроки = Новый Массив();
	
	Если ЗначениеЗаполнено(СпособОбеспечения) Тогда
		
		Набор.Добавить();
		Запись = Набор[0];
		Запись.РеквизитДопУпорядочивания = 1;
		Запись.СпособОбеспеченияПотребностей = СпособОбеспечения;
		
		Для Каждого СтрокаТаблицы Из Таблица Цикл
			
			ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
			Набор.Отбор.Номенклатура.Установить(СтрокаТаблицы.Номенклатура);
			Набор.Отбор.Характеристика.Установить(СтрокаТаблицы.Характеристика);
			Набор.Отбор.Склад.Установить(СтрокаТаблицы.Склад);
			
			Попытка
				
				Набор.Записать();
				ОбработанныеСтроки.Добавить(СтрокаТаблицы.Идентификатор);
				
			Исключение
				
				КомментарийКОшибке = ИнформацияОбОшибке();
				ИмяСобытияЖурнала = НСтр("ru = 'Заполнение способа обеспечения товаров'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
				ЗаписьЖурналаРегистрации(ИмяСобытияЖурнала,
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.РегистрыСведений.ВариантыОбеспеченияТоварами,
					,
					КомментарийКОшибке);
				
			КонецПопытки;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаТаблицы Из Таблица Цикл
			
			Набор.Отбор.Номенклатура.Установить(СтрокаТаблицы.Номенклатура);
			Набор.Отбор.Характеристика.Установить(СтрокаТаблицы.Характеристика);
			Набор.Отбор.Склад.Установить(СтрокаТаблицы.Склад);
			
			Попытка
				
				Набор.Записать();
				ОбработанныеСтроки.Добавить(СтрокаТаблицы.Идентификатор);
				
			Исключение
				
				КомментарийКОшибке = ИнформацияОбОшибке();
				ИмяСобытияЖурнала = НСтр("ru = 'Заполнение способа обеспечения товаров'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
				ЗаписьЖурналаРегистрации(ИмяСобытияЖурнала,
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.РегистрыСведений.ВариантыОбеспеченияТоварами,
					,
					КомментарийКОшибке);
				
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТекстДанныеНеЗаписаны = НСтр("ru = 'Не удалось записать изменения способа обеспечения товарами.'");
	ТекстДанныеЗаписаныЧастично = НСтр("ru = 'Не все изменения способа обеспечения товарами удалось записать.'");
	СообщитьОбОшибкахЗаписиПараметровОбеспеченияПотребностей(
		Таблица,
		ОбработанныеСтроки,
		ТекстДанныеНеЗаписаны,
		ТекстДанныеЗаписаныЧастично);
	
	Возврат ОбработанныеСтроки;
	
КонецФункции

#КонецОбласти

Процедура СообщитьОбОшибкахЗаписиПараметровОбеспеченияПотребностей(Таблица, ОбработанныеСтроки, ТекстДанныеНеЗаписаны, ТекстДанныеЗаписаныЧастично)
	
	ВсегоСтрокВТаблице = Таблица.Количество();
	ВсегоСтрокЗаписано = ОбработанныеСтроки.Количество();
	Если ВсегоСтрокВТаблице > 0 И ВсегоСтрокЗаписано = 0 Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ТекстДанныеНеЗаписаны;
		Сообщение.Сообщить();
	ИначеЕсли ВсегоСтрокВТаблице > ВсегоСтрокЗаписано Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ТекстДанныеЗаписаныЧастично;
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли