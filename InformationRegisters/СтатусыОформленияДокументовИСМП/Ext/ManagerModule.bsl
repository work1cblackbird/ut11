#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//Функция возвращает структуру значений по умолчанию для документа для движений.
//
//Возвращаемое значение:
//   Структура - значения по умолчанию
//
Функция ЗначенияПоУмолчанию(Основание, СсылкаНаОформляемыйДокумент) Экспорт
	
	СтруктураЗначенияПоУмолчанию = Новый Структура;
	
	СтруктураЗначенияПоУмолчанию.Вставить("Документ",         СсылкаНаОформляемыйДокумент);
	СтруктураЗначенияПоУмолчанию.Вставить("Основание",        Основание);
	
	СтруктураЗначенияПоУмолчанию.Вставить("СтатусОформления", Перечисления.СтатусыОформленияДокументовГосИС.НеОформлено);
	СтруктураЗначенияПоУмолчанию.Вставить("Архивный",         Ложь);
	
	СтруктураЗначенияПоУмолчанию.Вставить("Дата",  '00010101');
	СтруктураЗначенияПоУмолчанию.Вставить("Номер", "");
	СтруктураЗначенияПоУмолчанию.Вставить("Контрагент");
	СтруктураЗначенияПоУмолчанию.Вставить("Ответственный");
	СтруктураЗначенияПоУмолчанию.Вставить("ДополнительнаяИнформация");
	
	Возврат СтруктураЗначенияПоУмолчанию;
	
КонецФункции

//Проверяет наличие записей в регистре по указанным документам-основаниям и документу ИС МП.
//
//Параметры:
//   МассивДокументов - Массив Из ОпределяемыйТип.ОснованиеСтатусыОформленияДокументовИСМП - проверяемые документы-основания
//   ПустаяСсылкаИСМП - ОпределяемыйТип.ДокументыИСМППоддерживающиеСтатусыОформления - типизация документа ИС МП
//
//Возвращаемое значение:
// Структура - документы-основания, архивированные или требующие оформления документа ИС МП:
//  * Неоформленные - Массив Из ОпределяемыйТип.ОснованиеСтатусыОформленияДокументовИСМП - требующие оформления.
//  * Архивные      - Массив Из ОпределяемыйТип.ОснованиеСтатусыОформленияДокументовИСМП - не требующие обработки.
//
Функция ДокументыОснованияСЗаписямиРегистра(МассивДокументов, ПустаяСсылкаИСМП) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатусыОформления.Основание,
	|	СтатусыОформления.Архивный
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовИСМП КАК СтатусыОформления
	|ГДЕ
	|	СтатусыОформления.Основание В (&МассивДокументов)
	|	И СтатусыОформления.Документ = &ПустаяСсылкаИСМП";
	
	Запрос.УстановитьПараметр("МассивДокументов",  МассивДокументов);
	Запрос.УстановитьПараметр("ПустаяСсылкаИСМП", ПустаяСсылкаИСМП);
	
	Результат = Новый Структура("Неоформленные, Архивные", Новый Массив, Новый Массив);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Архивный Тогда
			Результат.Архивные.Добавить(Выборка.Основание);
		Иначе
			Результат.Неоформленные.Добавить(Выборка.Основание);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Осуществляет запись в регистр по переданным данным.
//
// Параметры:
//  ДанныеЗаписи - Структура - данные для записи в регистр (См. ЗначенияПолейЗаписиРегистраПоУмолчанию)
//
Процедура ВыполнитьЗаписьВРегистр(ДанныеЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.СтатусыОформленияДокументовИСМП.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДанныеЗаписи);
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Удаляет запись из регистра по переданному документу.
//
// Параметры:
//  Документ  - ОпределяемыйТип.ДокументыИСМППоддерживающиеСтатусыОформления - измерение регистра для очистки.
//  Основание - ОпределяемыйТип.ОснованиеСтатусыОформленияДокументовИСМП     - измерение регистра для очистки.
//
Процедура УдалитьЗаписьРегистра(Основание, Документ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.СтатусыОформленияДокументовИСМП.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Основание.Установить(Основание);
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Архивирует записи из регистра по переданным документам.
//
// Параметры:
//   Основания - Массив Из ОпределяемыйТип.ОснованиеСтатусыОформленияДокументовИСМП - массив распоряжений
//   Документ  - ОпределяемыйТип.ДокументыИСМППоддерживающиеСтатусыОформления - документ, оформлять который не требуется.
//
// Возвращаемое значение:
//   Массив Из См. ИнтеграцияИСМПСлужебный.СтруктураИзменения - данные по измененным статусам распоряжений.
//
Функция АрхивироватьРаспоряженияКОформлению(Основания, Документ) Экспорт
	
	Изменения = Новый Массив;
	
	НаборЗаписей = РегистрыСведений.СтатусыОформленияДокументовИСМП.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	
	Если Не ПравоДоступа("Изменение", Документ.Метаданные()) Тогда
		ВызватьИсключение НСтр("ru = 'Недостаточно прав доступа для обработки распоряжений к оформлению'");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Для Каждого Основание Из Основания Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра());
			ЭлементБлокировки.УстановитьЗначение("Документ",  Документ);
			ЭлементБлокировки.УстановитьЗначение("Основание", Основание);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей.Отбор.Основание.Установить(Основание);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Выбран() Тогда
				
				Для Каждого СтрокаТЧ Из НаборЗаписей Цикл
					СтрокаТЧ.Архивный = Истина;
				КонецЦикла;
				
				НаборЗаписей.Записать();
				
				СтрокаРезультата = ИнтеграцияИСМПСлужебный.СтруктураИзменения();
				СтрокаРезультата.Объект            = Документ;
				СтрокаРезультата.ДокументОснование = Основание;
				
				Изменения.Добавить(СтрокаРезультата);
				
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не удалось архивировать распоряжение к оформлению %1 по причине: %2'"),
				Основание, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(НСтр("ru='ИС МП'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.СтатусыОформленияДокументовИСМП,
				Основание,
				ТекстСообщения);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Изменения;
	
КонецФункции

//Возвращает статусы оформления документов ИС МП по указанному документу-основанию.
//
//Параметры:
//   ДокументОснование - ОпределяемыйТип.ОснованиеСтатусыОформленияДокументовИСМП - документ-основание для документа ИС МП.
//
//Возвращаемое значение:
//   Структура - статусы оформления документов ИС МП, где
//     Ключ - имя оформляемого документа ИС МП как оно указано в метаданных,
//     Значение - Структура - статус оформления и признак "Архивный".
//
Функция СтатусыДокументовИСМППоДокументуОснованию(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.СтатусОформления КАК Статус,
	|	Статусы.Архивный КАК Архивный
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовИСМП КАК Статусы
	|ГДЕ
	|	Статусы.Основание = &ДокументОснование";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	СтатусыОформления = Новый Структура;
	
	Пока Выборка.Следующий() Цикл
		СтатусыОформления.Вставить(Выборка.Документ.Метаданные().Имя,
			Новый Структура("Статус, Архивный", Выборка.Статус, Выборка.Архивный));
	КонецЦикла;
	
	Возврат СтатусыОформления;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолноеИмяРегистра()
	
	Возврат "РегистрСведений.СтатусыОформленияДокументовИСМП";
	
КонецФункции

#КонецОбласти

#КонецЕсли
