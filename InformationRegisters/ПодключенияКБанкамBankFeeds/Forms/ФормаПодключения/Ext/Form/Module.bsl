  
#Область ОбработчикиСобытийФормы
  
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = Параметры.Организация; 
	Если НЕ ЗначениеЗаполнено(Организация) 
		И НЕ Константы.ИспользоватьНесколькоОрганизаций.Получить() Тогда
		
		Организация = Справочники.Организации.ПолучитьОрганизациюПоУмолчанию();
		
	КонецЕсли;	

	Банк = Параметры.Банк;
	БанковскийСчет = Параметры.БанковскийСчет;
	НастройкиСервиса = Параметры.НастройкиСервиса;
	  
	ЭтоФормаДобавитьСчет = Параметры.КомандаФормыПодключения = 
						СловарьBankFeedsСлужебный.КомандыОткрытияФормыПодключения().ДобавитьСчет;
	ЭтоОбновлениеСоединения = Параметры.ЭтоОбновлениеСоединения;
	СоздатьСоединениеСуществующегоСоединения = Параметры.СоздатьСоединениеСуществующегоСоединения;
	
	Если НЕ ЗначениеЗаполнено(НастройкиСервиса) Тогда
		
		НастройкиСервиса = Справочники.ИнтеграцияBankFeeds.НайтиПоРеквизиту(
			"Сервис", Перечисления.СервисыBankFeeds.SaltEdge);	
	КонецЕсли;	

	Если ЗначениеЗаполнено(Организация) Тогда
		
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		
		Если ЗначениеЗаполнено(ТекущийПользователь) Тогда

			КонтактноеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "ФизическоеЛицо");
			email = ОбменССервисомBankFeedsВызовСервера.ПочтаОрганизации(Организация); 
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьСписокПровайдеров(СписокПровайдеров);
	ПодобратьПровайдера(НаименованиеПровайдера, ИдентификаторПровайдера, Банк);
	
	Если ЗначениеЗаполнено(Параметры.СсылкаНаАвторизацию) Тогда
		
		ЗаполнитьДаннымиФормуАвторизацииНаСервисе(Параметры.СсылкаНаАвторизацию, 
			Параметры.ПараметрыЗаполнения);
		
	КонецЕсли;	
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Отказ = Истина;
		
		Текст = НСтр("ru = 'Поле ""Организация"" не заполнено.'");
		ОбщегоНазначения.СообщитьПользователю(
			Текст,,
			"Организация",,
			Отказ);
		
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(email) Тогда
		Отказ = Истина;
		
		Текст = НСтр("ru = 'Поле ""Подтвержденный email"" не заполнено.'");
		ОбщегоНазначения.СообщитьПользователю(
			Текст,,
			"email",,
			Отказ);
		
	КонецЕсли;	
	
	РучноеИзменениеРеквизитовБанка = Ложь;
	Если ЗначениеЗаполнено(БанковскийСчет) Тогда
		РучноеИзменениеРеквизитовБанка = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанковскийСчет, "РучноеИзменениеРеквизитовБанка");
	КонецЕсли;		
	
	Если НЕ ЗначениеЗаполнено(Банк)
		И НЕ РучноеИзменениеРеквизитовБанка Тогда
		
		Отказ = Истина;
		
		Текст = НСтр("ru = 'Поле ""Банк"" не заполнено.'");
		ОбщегоНазначения.СообщитьПользователю(
			Текст,,
			"Банк",,
			Отказ);
		
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(НастройкиСервиса) Тогда

		Отказ = Истина;
		
		Текст = НСтр("ru = 'Поле ""Настройки сервиса"" не заполнено.'");
		ОбщегоНазначения.СообщитьПользователю(
			Текст,,
			"НастройкиСервиса",,
			Отказ);
		
	КонецЕсли;	

	Если НЕ ЭтоФормаДобавитьСчет И  НЕ ЗначениеЗаполнено(БанковскийСчет) Тогда
		
		Отказ = Истина;
		
		Текст = НСтр("ru = 'Поле ""Банковский счет"" не заполнено.'");
		ОбщегоНазначения.СообщитьПользователю(
			Текст,,
			"БанковскийСчет",,
			Отказ);
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(email)
		И Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(email) Тогда
			
		Отказ = Истина;
		
		Текст = НСтр("ru = 'Поле ""Подтвержденный email"" введен не корректно'");
		ОбщегоНазначения.СообщитьПользователю(
			Текст,,
			"email",,
			Отказ);
	
	КонецЕсли;	
	
	Если Элементы.СтраницыПодключения.ТекущаяСтраница = Элементы.ГруппаРегистрацияЛида Тогда	
		
		ПроверяемыеРеквизиты.Добавить("ФамилияИмяОтчествоРегистратора");
		ПроверяемыеРеквизиты.Добавить("МестоРожденияРегистратора");
		ПроверяемыеРеквизиты.Добавить("ПолРегистратора");
		ПроверяемыеРеквизиты.Добавить("СтранаГражданстваРегистратора");
		ПроверяемыеРеквизиты.Добавить("АдресПроживанияРегистратора");
		ПроверяемыеРеквизиты.Добавить("ЮридическоеНаименованиеКомпании");
		ПроверяемыеРеквизиты.Добавить("АдресОфисаКомпании");
		ПроверяемыеРеквизиты.Добавить("КомпанияЗарегистрированаВСтране");
		ПроверяемыеРеквизиты.Добавить("РегистрационныйНомерКомпании");
		
		Если НЕ ЗначениеЗаполнено(ДатаРожденияРегистратора) Тогда

			Отказ = Истина;
		
			Текст = НСтр("ru = 'Поле ""Дата рождения"" заполнена некорректно. Выберите корректную дату'");
			ОбщегоНазначения.СообщитьПользователю(
				Текст,,
				"ДатаРожденияРегистратора",,
				Отказ);
		
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		email = ОбменССервисомBankFeedsВызовСервера.ПочтаОрганизации(Организация);
		
	КонецЕсли;	
	
КонецПроцедуры 

&НаКлиенте
Процедура ПровайдерПриИзменении(Элемент)

	Для Каждого ТекущийПровайдер Из СписокПровайдеров Цикл
		
		Если ТекущийПровайдер.Представление = НаименованиеПровайдера Тогда
	
			ИдентификаторПровайдера = ТекущийПровайдер.Значение;
			
			Прервать;
			
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПровайдерОчистка(Элемент, СтандартнаяОбработка)
	
	ИдентификаторПровайдера = "";
	
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	
	ПодобратьПровайдера(НаименованиеПровайдера, ИдентификаторПровайдера, Банк);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ДополнительныеПараметры = 
		Новый Структура("ПараметрыЗаполнения,Форма", ПараметрыЗаполнения, ЭтотОбъект);
	
	ЗакрытиеФормыАвторизацииВSaltEdge(КодВозвратаДиалога.ОК, ДополнительныеПараметры);
		
	
КонецПроцедуры

&НаКлиенте
Процедура Подключить(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	

	ПараметрыРегистрации = Новый Структура();
	ПараметрыРегистрации.Вставить("Организация", Организация);  
	
	Если ЗначениеЗаполнено(Банк) Тогда
		ВыбранныйБанк = Банк;
	Иначе
		ВыбранныйБанк = БанковскийСчет;
	КонецЕсли;	
	
	ПараметрыРегистрации.Вставить("Банк", ВыбранныйБанк);
	РеквизитыРегистрации = ПрочитатьРеквизитыРегистрацииНаСервере(ПараметрыРегистрации);
	
	Если РеквизитыРегистрации.ДанныеПодтвержденыПользователем Тогда
	
		ПараметрыЗаполнения = Новый Структура();
		ПараметрыЗаполнения.Вставить("Организация", Организация);
		ПараметрыЗаполнения.Вставить("РеквизитыРегистрации", РеквизитыРегистрации);
		ПараметрыЗаполнения.Вставить("Банк", ВыбранныйБанк);
		ПараметрыЗаполнения.Вставить("БанковскийСчет", БанковскийСчет);
		ПараметрыЗаполнения.Вставить("НастройкиСервиса", НастройкиСервиса);
		ПараметрыЗаполнения.Вставить("email", email);
		ПараметрыЗаполнения.Вставить("ИдентификаторПровайдера", ИдентификаторПровайдера);
		ПараметрыЗаполнения.Вставить("ТолькоНовоеПодключение", Ложь);
		
		ОбменССервисомBankFeedsКлиент.ПодключитьСервисНаКлиенте(ПараметрыЗаполнения, ЭтотОбъект);	
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыРегистрации);
		Элементы.СтраницыПодключения.ТекущаяСтраница = Элементы.ГруппаРегистрацияЛида;
		УправлениеФормой();
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Элементы.СтраницыПодключения.ТекущаяСтраница = Элементы.ПараметрыПодключения;
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьДанные(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	
	
	РеквизитыРегистрации = РеквизитыРегистрации();
	
	Если ЗначениеЗаполнено(Банк) Тогда
		ВыбранныйБанк = Банк;
	Иначе
		ВыбранныйБанк = БанковскийСчет;
	КонецЕсли;	
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("Организация", Организация);
	ПараметрыЗаполнения.Вставить("РеквизитыРегистрации", РеквизитыРегистрации);
	ПараметрыЗаполнения.Вставить("Банк", ВыбранныйБанк);
	ПараметрыЗаполнения.Вставить("БанковскийСчет", БанковскийСчет);
	ПараметрыЗаполнения.Вставить("НастройкиСервиса", НастройкиСервиса);
	ПараметрыЗаполнения.Вставить("email", email);
	ПараметрыЗаполнения.Вставить("ИдентификаторПровайдера", ИдентификаторПровайдера);
	ПараметрыЗаполнения.Вставить("ТолькоНовоеПодключение", Ложь);
	
	ОбменССервисомBankFeedsКлиент.ПодключитьСервисНаКлиенте(ПараметрыЗаполнения, ЭтотОбъект);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПрочитатьРеквизитыРегистрацииНаСервере(ПараметрыЗаполнения)
	
	Возврат ОбменССервисомBankFeedsСервер.ПрочитатьРеквизитыРегистрацииНаСервере(ПараметрыЗаполнения);
	
КонецФункции	

&НаКлиенте
Функция РеквизитыРегистрации()

 НаборРеквизитов = Новый Структура();	

 НаборРеквизитов.Вставить("АдресПроживанияРегистратора", АдресПроживанияРегистратора);
 НаборРеквизитов.Вставить("ДатаРожденияРегистратора", ДатаРожденияРегистратора);
 НаборРеквизитов.Вставить("СтранаГражданстваРегистратора", СтранаГражданстваРегистратора);
 НаборРеквизитов.Вставить("ФамилияИмяОтчествоРегистратора", ФамилияИмяОтчествоРегистратора);
 НаборРеквизитов.Вставить("МестоРожденияРегистратора", МестоРожденияРегистратора);  
 НаборРеквизитов.Вставить("ПолРегистратора", ПолРегистратора);  
 НаборРеквизитов.Вставить("ДанныеПодтвержденыПользователем", Истина);  

 НаборРеквизитов.Вставить("АдресОфисаКомпании", АдресОфисаКомпании);
 НаборРеквизитов.Вставить("КомпанияЗарегистрированаВСтране", КомпанияЗарегистрированаВСтране);
 НаборРеквизитов.Вставить("РегистрационныйНомерКомпании", РегистрационныйНомерКомпании);
 НаборРеквизитов.Вставить("ЮридическоеНаименованиеКомпании", ЮридическоеНаименованиеКомпании);
 
 Возврат НаборРеквизитов;
 
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	Если ЭтоФормаДобавитьСчет Тогда	
		
		Заголовок = НСтр("ru = 'Добавить банковские счета из'") + " BankFeeds";
		Элементы.Подключить.Заголовок = НСтр("ru = 'Найти банковские счета'");
		
	КонецЕсли;	

	Если Элементы.СтраницыПодключения.ТекущаяСтраница = Элементы.ГруппаРегистрацияЛида Тогда

		Элементы.ПодтвердитьДанные.КнопкаПоУмолчанию = Истина;
		
	ИначеЕсли Элементы.СтраницыПодключения.ТекущаяСтраница = Элементы.ПараметрыПодключения Тогда	

		Элементы.Подключить.КнопкаПоУмолчанию = Истина; 
		
		Элементы.БанковскийСчет.Видимость = ЗначениеЗаполнено(БанковскийСчет);
	
		Элементы.Банк.ТолькоПросмотр = НЕ ЭтоФормаДобавитьСчет;
		Элементы.Организация.ТолькоПросмотр = НЕ ЭтоФормаДобавитьСчет;
	
		Для Каждого ТекущийПровайдер Из СписокПровайдеров Цикл
			Элементы.Провайдер.СписокВыбора.Добавить(ТекущийПровайдер.Представление);
		КонецЦикла;
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(БанковскийСчет) Тогда 
		РучноеИзменениеРеквизитовБанка = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанковскийСчет, "РучноеИзменениеРеквизитовБанка");
		Если РучноеИзменениеРеквизитовБанка Тогда
		
			Элементы.Банк.АвтоОтметкаНезаполненного = Ложь;
		
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Константы.ИспользоватьНесколькоОрганизаций.Получить() Тогда
		
		Элементы.Организация.ТолькоПросмотр = Ложь;
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДаннымиФормуАвторизацииНаСервисе(СсылкаНаАвторизациюВСервисе, ПараметрыЗаполненияЗапроса) Экспорт
	
	СсылкаНаАвторизацию = СсылкаНаАвторизациюВСервисе;
	ПараметрыЗаполнения = ПараметрыЗаполненияЗапроса;
	
	ТекущийПровайдер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЗаполнения.НастройкиСервиса, "Сервис");
	
	Элементы.ДекорацияОписаниеАвторизации.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
	   	 НСтр("ru = 'Пожалуйста, выполните следующие действия для авторизации в вашем банке
					|1. Откройте <a href = ""%1"">ссылку на авторизацию </a> и пройдите авторизацию на сайте сервиса: %2.
					|2. После успешной авторизации вернитесь на этот экран и нажмите OK.'"),
	
		СсылкаНаАвторизацию, ТекущийПровайдер);
		
	Элементы.СтраницыПодключения.ТекущаяСтраница = Элементы.АвторизацияВСервисе;
	Элементы.OK.КнопкаПоУмолчанию = Истина;
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗакрытиеФормыАвторизацииВSaltEdge(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = ДополнительныеПараметры.ПараметрыЗаполнения; 
	Форма = ДополнительныеПараметры.Форма;
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		
		Если ЭтоФормаДобавитьСчет Тогда

			ДлительнаяОперация = 
					ОбменССервисомBankFeedsВызовСервера.ЗаполнитьПараметрыФоновогоЗаданияНаПодключениеКСервису(
										ДополнительныеПараметры.Форма.УникальныйИдентификатор, ПараметрыЗаполнения);
			ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
			ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
			ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
			ПараметрыОжидания.ВыводитьСообщения = Ложь;
			ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Подключение к сервису'");
			ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
			ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Сервис подключен'");
			ПараметрыОжидания.ОповещениеПользователя.Текст = "BankFeeds";
			
			ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершениеПодключенияКСервисуПрочитатьСчета",
																						Форма, ДополнительныеПараметры);
			ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

		ИначеЕсли ЭтоОбновлениеСоединения Тогда 	
			
			ДлительнаяОперация = 
				ОбменССервисомBankFeedsВызовСервера.ЗаполнитьПараметрыФоновогоЗаданияНаПроверкуОбновленияСоединенияКСервису(
										ДополнительныеПараметры.Форма.УникальныйИдентификатор, ПараметрыЗаполнения);
			ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
			ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
			ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
			ПараметрыОжидания.ВыводитьСообщения = Истина;
			ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Обновление соединения сервиса'");
			ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
			ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Соединение обновлено'");
			ПараметрыОжидания.ОповещениеПользователя.Текст = "BankFeeds";
			
			ДополнительныеПараметры = Новый Структура();
			
			ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершениеОбновлениеСоединенияСервиса", 
																					Форма, ДополнительныеПараметры);
			ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
			
		Иначе
			ДлительнаяОперация = 
						ОбменССервисомBankFeedsВызовСервера.ЗаполнитьПараметрыФоновогоЗаданияНаПодключениеКСервису(
										ДополнительныеПараметры.Форма.УникальныйИдентификатор, ПараметрыЗаполнения);
			ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
			ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
			ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
			ПараметрыОжидания.ВыводитьСообщения = Истина;
			ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Подключение к сервису'");
			ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
			ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Сервис подключен'");
			ПараметрыОжидания.ОповещениеПользователя.Текст = "BankFeeds";
			
			ДополнительныеПараметры = Новый Структура();
			
			ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершениеПодключенияКСервису", Форма, ДополнительныеПараметры);
			ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
			
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры	

&НаКлиенте
Процедура ЗавершениеПодключенияКСервисуПрочитатьСчета(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = ДополнительныеПараметры.ПараметрыЗаполнения; 
	
	ОбменССервисомBankFeedsКлиент.ПрочитатьСчетаОрганизацииВСервисе(ПараметрыЗаполнения, ЭтотОбъект);	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗавершениеОбновлениеСоединенияСервиса(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РезультатОтветаОтСервиса = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если Результат.Статус = "Ошибка" Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка подключения по организации %1, к банку %2. Обновление не выполнено'"),
			Организация, Банк);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	ИначеЕсли РезультатОтветаОтСервиса.СтатусОтвета = ОбменССервисомBankFeedsВызовСервера.СтатусыОтветов().ОтветНеПолучен Тогда
		
		Для Каждого ТекущаяОшибка Из РезультатОтветаОтСервиса.МассивОшибок Цикл
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка: %1. Обновление соединения не выполнено'"), ТекущаяОшибка);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			
		КонецЦикла;	
		
	ИначеЕсли РезультатОтветаОтСервиса.СтатусОтвета = ОбменССервисомBankFeedsВызовСервера.СтатусыОтветов().ОтветПолучен Тогда

		Закрыть("Соединение подключено");
		
	Иначе
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка подключения по организации %1, к банку %2. Обновление не выполнено'"),
			Организация, Банк);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеПодключенияКСервису(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РезультатОтветаОтСервиса = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если Результат.Статус = "Ошибка" Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка подключения по организации %1, к банку %2. Обновление не выполнено'"),
			Организация, Банк);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	ИначеЕсли РезультатОтветаОтСервиса.СтатусОтвета = ОбменССервисомBankFeedsВызовСервера.СтатусыОтветов().ОтветНеПолучен Тогда
		
		Для Каждого ТекущаяОшибка Из РезультатОтветаОтСервиса.МассивОшибок Цикл
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка: %1. Подключение счета не выполнено'"), ТекущаяОшибка);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			
		КонецЦикла;	
		
	ИначеЕсли РезультатОтветаОтСервиса.СтатусОтвета = ОбменССервисомBankFeedsВызовСервера.СтатусыОтветов().ОтветПолучен Тогда

		Если РезультатОтветаОтСервиса.ИдентификаторСчета <> "" Тогда

			Закрыть(Новый Структура("НомерСчета", РезультатОтветаОтСервиса.ИдентификаторСчета));
		
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Подключение по организации %1, к банку %2 выполнено.'"),
				Организация, Банк);
			ПоказатьОповещениеПользователя(НСтр("ru = 'Подключение к сервису'"),,ТекстСообщения,,СтатусОповещенияПользователя.Важное);

		ИначеЕсли СоздатьСоединениеСуществующегоСоединения Тогда
			
			Закрыть();
		
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Подключение по организации %1, к банку %2 выполнено.'"),
				Организация, Банк);
			
			ПоказатьОповещениеПользователя(НСтр("ru = 'Подключение к сервису'"),,ТекстСообщения,,СтатусОповещенияПользователя.Важное);
		Иначе
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Подключение по организации %1, к банку %2 не выполнено. Не найден счет'"),
				Организация, Банк);
			ПоказатьПредупреждение(,ТекстСообщения,,НСтр("ru = 'Подключение к сервису'"));
			
		КонецЕсли;	
		
	Иначе
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка подключения по организации %1, к банку %2. Подключение не выполнено'"),
			Организация, Банк);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;	
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокПровайдеров(СписокПровайдеров)

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодключенияКБанкамBankFeeds.НаименованиеПровайдера КАК НаименованиеПровайдера,
	|	ПодключенияКБанкамBankFeeds.ИдентификаторПровайдера КАК ИдентификаторПровайдера
	|ИЗ
	|	РегистрСведений.ПодключенияКБанкамBankFeeds КАК ПодключенияКБанкамBankFeeds
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодключенияКБанкамBankFeeds.НаименованиеПровайдера,
	|	ПодключенияКБанкамBankFeeds.ИдентификаторПровайдера";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл 
		
		Если НЕ ЗначениеЗаполнено(Результат.ИдентификаторПровайдера)
			ИЛИ  НЕ ЗначениеЗаполнено(Результат.НаименованиеПровайдера) Тогда
			Продолжить;
		КонецЕсли;	
		
		СписокПровайдеров.Добавить(Результат.ИдентификаторПровайдера, Результат.НаименованиеПровайдера); 
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПодобратьПровайдера(НаименованиеПровайдера, ИдентификаторПровайдера, Банк)
	
	НаименованиеПровайдера = "";
	ИдентификаторПровайдера = "";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Банк", Банк);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодключенияКБанкамBankFeeds.ИдентификаторПровайдера КАК ИдентификаторПровайдера,
	|	ПодключенияКБанкамBankFeeds.НаименованиеПровайдера КАК НаименованиеПровайдера
	|ИЗ
	|	РегистрСведений.ПодключенияКБанкамBankFeeds КАК ПодключенияКБанкамBankFeeds
	|ГДЕ
	|	ПодключенияКБанкамBankFeeds.Банк = &Банк";
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		
		Если НЕ ЗначениеЗаполнено(Результат.ИдентификаторПровайдера) 
			ИЛИ НЕ ЗначениеЗаполнено(Результат.НаименованиеПровайдера) Тогда
			Возврат;
		КонецЕсли;	
		
		НаименованиеПровайдера = Результат.НаименованиеПровайдера;
		ИдентификаторПровайдера = Результат.ИдентификаторПровайдера;
		
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти














