#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КлючЗаписи = Неопределено;
	ИмяРегистра = Метаданные.РегистрыСведений.НастройкиУчетаНДС.Имя;
	ТолькоПросмотр = НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.НастройкиУчетаНДС);
	
	Организация = Параметры.Организация;
	Элементы.Организация.Видимость = НЕ ЗначениеЗаполнено(Организация);
	Заголовок = Заголовок + " " + Строка(Организация);
	
	ЭтоФормаЗаписи = Параметры.Свойство("Ключ", КлючЗаписи);
	Если Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		СкопироватьЗаписьРегистра(Параметры.ЗначениеКопирования);
	Иначе
		ПрочитатьЗаписьРегистра(КлючЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_УчетнаяПолитикаФинансовогоУчета" Тогда
		ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения();
		УстановитьСвойстваЭлементов(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если Запись.БазаНДС = Перечисления.ВидыБазыНДС.ВыручкаТекущегоМесяца
		И Запись.ПериодичностьРаспределенияНДС = Перечисления.Периодичность.Квартал Тогда
			ТекстСообщения = НСтр("ru = 'База НДС не может иметь меньший период, чем периодичность распределения НДС.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Запись.БазаНДС", , Отказ);
	КонецЕсли;
	
	Если Запись.БазаНДС = Перечисления.ВидыБазыНДС.ВыручкаТекущегоКвартала
		И Запись.ПериодичностьРаспределенияНДС = Перечисления.Периодичность.Месяц Тогда
			ТекстСообщения = НСтр("ru = 'База НДС не может иметь больший период, чем периодичность распределения НДС.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Запись.БазаНДС", , Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.БазаНДС) Тогда
		ТекстОшибки = НСтр("ru='Поле ""База НДС"" не заполнено'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,
			"Запись.БазаНДС",, Отказ);
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Запись.ПериодичностьРаспределенияНДС) Тогда
		ТекстОшибки = НСтр("ru='Поле ""Периодичность распределения НДС"" не заполнено'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,
			"Запись.ПериодичностьРаспределенияНДС",, Отказ);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И ЗавершениеРаботы Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если Модифицированность Тогда
		Отказ = Истина;
		ЗадатьВопросФормаМодифицирована("ВопросПередЗакрытиемЗавершение");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаИзмененияПриИзменении(Элемент)
	ТекстВопроса = НСтр("ru = 'Создать новую настройку на %1?'");
	ТекстВопроса = СтрШаблон(ТекстВопроса, Формат(НачалоМесяца(ДатаИзменения),"ДЛФ=D"));
	ПоказатьВопрос(Новый ОписаниеОповещения("ДатаИзмененияПриИзмененииЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ДатаИзмененияПриИзмененииЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		ПрочитатьЗаписьРегистраПриИзменииРеквизита(,ДатаИзменения);
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		ПрочитатьЗаписьРегистраПриИзменииРеквизита(,ДатаИзменения, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Организация = Запись.Организация;
	ПрочитатьЗаписьРегистраПриИзменииРеквизита(,ДатаИзменения);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьПлательщикНДСПриИзменении(Элемент)
	
	Если НЕ Запись.ПлательщикНДС Тогда
		Запись.РаздельныйУчетТоваровПоНалогообложениюНДС = Ложь;		
	КонецЕсли;
	УстановитьСвойстваЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РаздельныйУчетТоваровПоНалогообложениюНДСПриИзменении(Элемент)
	УстановитьСвойстваЭлементов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьПериодичностьРаспределенияНДСПриИзменении(Элемент)
	ЗаполнитьСпискиВыбораБазыНДС(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура НачислятьНДСПоАвансамПриИзменении(Элемент)
	
	НачислятьНДСПоАвансамПриИзмененииСервер() 
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Если ЗаписатьИзменения(Истина) Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьИзменения();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения()
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
			"УчетнаяПолитикаФинансовогоУчета",
			Запись.Организация,
			ДатаИзменения,
			Истина);
	Если ПараметрыУчетнойПолитики <> Неопределено Тогда
		МетодОценкиСтоимостиТоваров = ПараметрыУчетнойПолитики.МетодОценкиСтоимостиТоваров;
	Иначе
		МетодОценкиСтоимостиТоваров = Перечисления.МетодыОценкиСтоимостиТоваров.СредняяЗаМесяц;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗаписьРегистра(КлючЗаписи = Неопределено, ПериодЗаписи = Неопределено, СоздатьНовую = Ложь)
	ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения();
	НастройкиНалоговУчетныхПолитик.ПрочитатьЗаписьРегистра(ЭтотОбъект, 
		ИмяРегистра,
		Организация,
		СоздатьНовую,
		КлючЗаписи,
		ПериодЗаписи);
	
	НачислятьНДСПоАвансам = 
		(Запись.ПравилоОтбораАвансовДляРегистрацииСчетовФактур <> Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.НеРегистрироватьСчетаФактурыНаАвансы);
	
	УстановитьСвойстваЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьЗаписьРегистраПриИзменииРеквизита(КлючЗаписи = Неопределено, ПериодЗаписи = Неопределено, СоздатьНовую = Ложь)
	Если НЕ Копирование Тогда
		ПрочитатьЗаписьРегистра(КлючЗаписи, ПериодЗаписи, СоздатьНовую);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СкопироватьЗаписьРегистра(ЗначениеКопирования)
	НастройкиНалоговУчетныхПолитик.СкопироватьУчетнуюПолитику(ЭтотОбъект, ЗначениеКопирования, ИмяРегистра);
	Копирование = Истина;
	Модифицированность = Истина;
	
	ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения();
	
	НачислятьНДСПоАвансам = 
		(Запись.ПравилоОтбораАвансовДляРегистрацииСчетовФактур <> Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.НеРегистрироватьСчетаФактурыНаАвансы);
	
	УстановитьСвойстваЭлементов(ЭтотОбъект);
		
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьПослеЗаписи()
	
	ПараметрыОповещения = Новый Структура("Организация, Период", Запись.Организация, Запись.Период);
	ИмяСобытия = "Запись_" + ИмяРегистра;
	Оповестить(ИмяСобытия, ПараметрыОповещения);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьИзмененияНаСервере(Закрытие = Ложь)
	ЗаписьУспешна = НастройкиНалоговУчетныхПолитик.ЗаписатьИзменениеЗаписейРегистра(ЭтотОбъект, Закрытие);
	Возврат ЗаписьУспешна;
КонецФункции

&НаКлиенте
Функция ЗаписатьИзменения(Закрытие = Ложь)
	ОчиститьСообщения();
	ЗаписьУспешна = ЗаписатьИзмененияНаСервере(Закрытие);
	Если ЗаписьУспешна Тогда
		ОповеститьПослеЗаписи();
	КонецЕсли;
	Возврат ЗаписьУспешна;
КонецФункции

&НаКлиенте
Процедура ОписаниеИсторииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НавигационнаяСсылкаФорматированнойСтроки = "ИсторияИзменений" Тогда
		Если Модифицированность Тогда
			ЗадатьВопросФормаМодифицирована("ОткрытьИсториюИзмененийПродолжение");
		Иначе
			ОткрытьИсториюИзменений();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьВопросФормаМодифицирована(ИмяОповещения)
	
	ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
	Оповещение = Новый ОписаниеОповещения(ИмяОповещения, ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		Если НЕ ЗаписатьИзменения(Истина) Тогда
			Возврат;
		КонецЕсли;
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюИзменений()
	ОткрытьФорму("РегистрСведений.НастройкиУчетаНДС.Форма.РедактированиеИстории",
		Новый Структура("ТолькоПросмотр, Организация", ТолькоПросмотр, Организация),
		ЭтаФорма,,,,
		Новый ОписаниеОповещения("ОткрытьИсториюИзмененийЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюИзмененийПродолжение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет Тогда
		ОткрытьИсториюИзменений();
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		Если НЕ ЗаписатьИзменения(Ложь) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюИзмененийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(Результат) Тогда
		ОткрытьИсториюИзмененийЗавершениеСервер(Результат)
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОткрытьИсториюИзмененийЗавершениеСервер(Результат) Экспорт
	ПрочитатьЗаписьРегистра(Результат);
	ПолучитьПараметрыУчетнойПолитикиИСистемыНалогообложения();
	УстановитьСвойстваЭлементов(ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваЭлементов(Форма)
	
	Форма.Элементы.РаздельныйУчетТоваровПоНалогообложениюНДС.Доступность = Форма.Запись.ПлательщикНДС;
	Форма.ТолькоПросмотр = Форма.ТолькоПросмотр Или Форма.ОбособленноеПодразделение;
	Форма.Элементы.ГруппаРаспределениеНДС.Доступность = Форма.Запись.РаздельныйУчетТоваровПоНалогообложениюНДС;
	Форма.Элементы.ПравилоОтбораАвансовДляРегистрацииСчетовФактур.Доступность = Форма.НачислятьНДСПоАвансам;
	
	ЗаполнитьСпискиВыбораБазыНДС(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСпискиВыбораБазыНДС(Форма)
	
	Форма.Элементы.ЗаписьБазаНДС.СписокВыбора.Очистить();
	
	СписокЗначенийБазыНДС = Новый Массив();
	СписокЗначенийБазыНДС.Добавить(ПредопределенноеЗначение("Перечисление.ВидыБазыНДС.ВыручкаПрошлогоГода"));
	СписокЗначенийБазыНДС.Добавить(ПредопределенноеЗначение("Перечисление.ВидыБазыНДС.ВыручкаТекущегоГода"));
	
	Если Форма.Запись.ПериодичностьРаспределенияНДС = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
		СписокЗначенийБазыНДС.Добавить(ПредопределенноеЗначение("Перечисление.ВидыБазыНДС.ВыручкаТекущегоМесяца"));
	ИначеЕсли Форма.Запись.ПериодичностьРаспределенияНДС = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		СписокЗначенийБазыНДС.Добавить(ПредопределенноеЗначение("Перечисление.ВидыБазыНДС.ВыручкаТекущегоКвартала"));
	КонецЕсли;
	Форма.Элементы.ЗаписьБазаНДС.СписокВыбора.ЗагрузитьЗначения(СписокЗначенийБазыНДС);;
	
КонецПроцедуры

&НаСервере
Процедура НачислятьНДСПоАвансамПриИзмененииСервер() 
	
	Если НачислятьНДСПоАвансам 
			И Запись.ПравилоОтбораАвансовДляРегистрацииСчетовФактур = Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.НеРегистрироватьСчетаФактурыНаАвансы Тогда
		Запись.ПравилоОтбораАвансовДляРегистрацииСчетовФактур = Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня;
	ИначеЕсли Не НачислятьНДСПоАвансам
			И Запись.ПравилоОтбораАвансовДляРегистрацииСчетовФактур <> Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.НеРегистрироватьСчетаФактурыНаАвансы Тогда
		Запись.ПравилоОтбораАвансовДляРегистрацииСчетовФактур = Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.НеРегистрироватьСчетаФактурыНаАвансы;
	КонецЕсли;
	
	УстановитьСвойстваЭлементов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти