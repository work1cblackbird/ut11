
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет указать объекты метаданных, для которых задана логика ограничения доступа к данным.
//
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
		"РазрешитьЧтениеИзменение
		|ГДЕ
		|	ЗначениеРазрешено(УчетнаяЗаписьМаркетплейса.Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.СоответствияОбъектовМаркетплейсов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.19.19";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("8c02ad93-1913-42bc-9ab5-8968164132cb");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.СоответствияОбъектовМаркетплейсов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Устанавливает признак принадлежности склада к схеме работы FBS или к RealFBS в регистре сведений ""Соответствия объектов маркетплейсов"".
										|Данные о схеме работы получаются из сервиса Ozon.
										|Удаление записей регистра по устаревшим объектам метаданных.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.СоответствияОбъектовМаркетплейсов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.СоответствияОбъектовМаркетплейсов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.СоответствияОбъектовМаркетплейсов.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ","); 
	
КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт   
		
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = "РегистрСведений.СоответствияОбъектовМаркетплейсов";
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрСведений.СоответствияОбъектовМаркетплейсов");
	
	Запрос = Новый Запрос;
	ТекстыЗапросов = Новый Массив;
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СоответствияОбъектов.УчетнаяЗаписьМаркетплейса КАК УчетнаяЗаписьМаркетплейса,
	               |	СоответствияОбъектов.ВидОбъектаМаркетплейса КАК ВидОбъектаМаркетплейса,
	               |	СоответствияОбъектов.ИдентификаторОбъектаМаркетплейса КАК ИдентификаторОбъектаМаркетплейса,
	               |	СоответствияОбъектов.ИдентификаторВладельцаОбъектаМаркетплейса КАК ИдентификаторВладельцаОбъектаМаркетплейса,
	               |	СоответствияОбъектов.Объект1С КАК Объект1С
	               |ИЗ
	               |	РегистрСведений.СоответствияОбъектовМаркетплейсов КАК СоответствияОбъектов
	               |ГДЕ
	               |	СоответствияОбъектов.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Склад)
	               |	И СоответствияОбъектов.УчетнаяЗаписьМаркетплейса.ВидМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыМаркетплейсов.МаркетплейсOzon)
	               |	И НЕ СоответствияОбъектов.УчетнаяЗаписьМаркетплейса.ПометкаУдаления
	               |	И НЕ СоответствияОбъектов.ИспользуетсяДляСхемыРаботыFBS
	               |	И НЕ СоответствияОбъектов.ИспользуетсяДляСхемыРаботыDBS"; 
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.УчетнаяЗаписьМаркетплейса КАК УчетнаяЗаписьМаркетплейса,
	|	ДанныеРегистра.ВидОбъектаМаркетплейса КАК ВидОбъектаМаркетплейса,
	|	ДанныеРегистра.ИдентификаторОбъектаМаркетплейса КАК ИдентификаторОбъектаМаркетплейса,
	|	ДанныеРегистра.ИдентификаторВладельцаОбъектаМаркетплейса КАК ИдентификаторВладельцаОбъектаМаркетплейса,
	|	ДанныеРегистра.Объект1С КАК Объект1С
	|ИЗ
	|	РегистрСведений.СоответствияОбъектовМаркетплейсов КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Объект1С ССЫЛКА Перечисление.УдалитьВариантыУчетаСтоимостиТМЦ
	|";
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТаблицаРегистра = Запрос.Выполнить().Выгрузить();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ТаблицаРегистра, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
		
	МетаданныеОбъекта = Метаданные.РегистрыСведений.СоответствияОбъектовМаркетплейсов;
	ПолноеИмяРегистра  = МетаданныеОбъекта.ПолноеИмя();
	
	Если Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра) Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
		
	ТаблицаОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры); 
	КопияТаблицыОбновляемыеДанные = ТаблицаОбновляемыеДанные.Скопировать();
	КопияТаблицыОбновляемыеДанные.Свернуть("УчетнаяЗаписьМаркетплейса",);
	УчетныеЗаписи = КопияТаблицыОбновляемыеДанные.ВыгрузитьКолонку("УчетнаяЗаписьМаркетплейса");
	ТаблицаСкладовИзСервиса = Новый ТаблицаЗначений;   
	ТаблицаСкладовИзСервиса.Колонки.Добавить("ИдентификаторОбъектаМаркетплейса", Новый ОписаниеТипов("Строка"));
	ТаблицаСкладовИзСервиса.Колонки.Добавить("rFBS",  Новый ОписаниеТипов("Булево"));

	Для Каждого УчетнаяЗапись Из УчетныеЗаписи Цикл
		МассивСкладовПоУчетнойЗаписи = ИнтеграцияСМаркетплейсомOzonСервер.СкладыИзСервиса(УчетнаяЗапись);
		Если МассивСкладовПоУчетнойЗаписи<>Неопределено	Тогда
			Для Каждого СкладУчетнойЗаписи Из МассивСкладовПоУчетнойЗаписи Цикл  
				НоваяСтрока = ТаблицаСкладовИзСервиса.Добавить();
				НоваяСтрока.ИдентификаторОбъектаМаркетплейса = СкладУчетнойЗаписи.ИдентификаторОбъектаМаркетплейса;
				НоваяСтрока.rFBS = СкладУчетнойЗаписи.ЭтоRealFBS;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаОбновляемыеДанные Цикл
		
		НаборЗаписей = Неопределено;
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных();
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СоответствияОбъектовМаркетплейсов");
			ЭлементБлокировки.УстановитьЗначение("УчетнаяЗаписьМаркетплейса", Строка.УчетнаяЗаписьМаркетплейса);
			ЭлементБлокировки.УстановитьЗначение("ВидОбъектаМаркетплейса", Строка.ВидОбъектаМаркетплейса);
			ЭлементБлокировки.УстановитьЗначение("ИдентификаторОбъектаМаркетплейса", Строка.ИдентификаторОбъектаМаркетплейса);  
			ЭлементБлокировки.УстановитьЗначение("ИдентификаторВладельцаОбъектаМаркетплейса", Строка.ИдентификаторВладельцаОбъектаМаркетплейса);  
			ЭлементБлокировки.УстановитьЗначение("Объект1С", Строка.Объект1С);

			Блокировка.Заблокировать();        
			
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(Строка.УчетнаяЗаписьМаркетплейса);
			НаборЗаписей.Отбор.ВидОбъектаМаркетплейса.Установить(Строка.ВидОбъектаМаркетплейса);
			НаборЗаписей.Отбор.ИдентификаторОбъектаМаркетплейса.Установить(Строка.ИдентификаторОбъектаМаркетплейса);
			НаборЗаписей.Отбор.ИдентификаторВладельцаОбъектаМаркетплейса.Установить(Строка.ИдентификаторВладельцаОбъектаМаркетплейса);  
			НаборЗаписей.Отбор.Объект1С.Установить(Строка.Объект1С);
			
			Если
				ТипЗнч(Строка.Объект1С) <> Тип("ПеречислениеСсылка.УдалитьВариантыУчетаСтоимостиТМЦ")
				Тогда
				
				СтрокаТаблицы = ТаблицаСкладовИзСервиса.Найти(Строка.ИдентификаторОбъектаМаркетплейса, "ИдентификаторОбъектаМаркетплейса");
				
				НаборЗаписей.Прочитать();
				
				Для Каждого Запись Из НаборЗаписей Цикл
					
					Запись.ИспользуетсяДляСхемыРаботыFBO = Ложь;
					
					Если СтрокаТаблицы<>Неопределено Тогда
						Запись.ИспользуетсяДляСхемыРаботыFBS = Не СтрокаТаблицы.rFBS;
						Запись.ИспользуетсяДляСхемыРаботыDBS = СтрокаТаблицы.rFBS;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Если НаборЗаписей = Неопределено Тогда
				НаборЗаписей = СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(Строка.УчетнаяЗаписьМаркетплейса);
				НаборЗаписей.Отбор.ВидОбъектаМаркетплейса.Установить(Строка.ВидОбъектаМаркетплейса);
				НаборЗаписей.Отбор.ИдентификаторОбъектаМаркетплейса.Установить(Строка.ИдентификаторОбъектаМаркетплейса);
				НаборЗаписей.Отбор.ИдентификаторВладельцаОбъектаМаркетплейса.Установить(Строка.ИдентификаторВладельцаОбъектаМаркетплейса);
				НаборЗаписей.Отбор.Объект1С.Установить(Строка.Объект1С);
			КонецЕсли;
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), НаборЗаписей);
		КонецПопытки;
		
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
		
КонецПроцедуры

#КонецОбласти

// Определяет объект соответствия.
//
// Параметры:
//   УчетнаяЗапись        - СправочникСсылка.УчетныеЗаписиМаркетплейсов - учетная запись подключения к сервису.
//   ВидОбъекта           - ПеречислениеСсылка.ВидыОбъектовМаркетплейсов - вид объекта маркетплейса.
//   ИдентификаторОбъекта - Строка - идентификатор объекта маркетплейса.
//   ТипОбъекта           - Тип, Неопределено - ограничения по типу объекта.
//
// Возвращаемое значение:
//   Произвольный - объект соответствия.
//
Функция ПолучитьОбъектСоответствия(УчетнаяЗапись, ВидОбъекта, ИдентификаторОбъекта, ТипОбъекта = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
		|	СоответствияОбъектовМаркетплейсов.Объект1С КАК Объект1С
		|ИЗ
		|	РегистрСведений.СоответствияОбъектовМаркетплейсов КАК СоответствияОбъектовМаркетплейсов
		|ГДЕ
		|	СоответствияОбъектовМаркетплейсов.УчетнаяЗаписьМаркетплейса = &УчетнаяЗапись
		|	И СоответствияОбъектовМаркетплейсов.ВидОбъектаМаркетплейса = &ВидОбъекта
		|	И СоответствияОбъектовМаркетплейсов.ИдентификаторОбъектаМаркетплейса = &ИдентификаторОбъекта";
	
	Запрос.УстановитьПараметр("УчетнаяЗапись",        УчетнаяЗапись);
	Запрос.УстановитьПараметр("ВидОбъекта",           ВидОбъекта);
	Запрос.УстановитьПараметр("ИдентификаторОбъекта", ИдентификаторОбъекта);
	
	УстановитьПривилегированныйРежим(Истина);
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока ВыборкаДанных.Следующий() Цикл
		Если ТипОбъекта = Неопределено Тогда
			Возврат ВыборкаДанных.Объект1С;
		ИначеЕсли ТипЗнч(ВыборкаДанных.Объект1С) = ТипОбъекта Тогда
			Возврат ВыборкаДанных.Объект1С;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// Записывает объект соответствия.
//
// Параметры:
//   УчетнаяЗапись           - СправочникСсылка.УчетныеЗаписиМаркетплейсов - учетная запись подключения к сервису.
//   ВидОбъекта              - ПеречислениеСсылка.ВидыОбъектовМаркетплейсов - вид объекта маркетплейса.
//   ИдентификаторОбъекта    - Строка - идентификатор объекта маркетплейса.
//   Объект1С                - Произвольный - объект соответствия.
//   ДополнительныеПараметры - Неопределено -
//                           - Структура Из КлючИЗначение - значения прочих измерений и реквизитов регистра сведений 
//                               СоответствияОбъектовМаркетплейсов.
//
Процедура ЗаписатьОбъектСоответствия(УчетнаяЗапись, ВидОбъекта, ИдентификаторОбъекта, Объект1С, 
			ДополнительныеПараметры = Неопределено) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СоответствияОбъектовМаркетплейсов");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		ЭлементБлокировки.УстановитьЗначение("УчетнаяЗаписьМаркетплейса",        УчетнаяЗапись);
		ЭлементБлокировки.УстановитьЗначение("ВидОбъектаМаркетплейса",           ВидОбъекта);
		ЭлементБлокировки.УстановитьЗначение("ИдентификаторОбъектаМаркетплейса", ИдентификаторОбъекта);
		Если ДополнительныеПараметры <> Неопределено
				И ДополнительныеПараметры.Свойство("ИдентификаторВладельцаОбъектаМаркетплейса") Тогда
			ЭлементБлокировки.УстановитьЗначение("ИдентификаторВладельцаОбъектаМаркетплейса", 
				ДополнительныеПараметры.ИдентификаторВладельцаОбъектаМаркетплейса);
		КонецЕсли;
		ЭлементБлокировки.УстановитьЗначение("Объект1С", Объект1С);
		Блокировка.Заблокировать();        
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(УчетнаяЗапись);
		НаборЗаписей.Отбор.ВидОбъектаМаркетплейса.Установить(ВидОбъекта);
		НаборЗаписей.Отбор.ИдентификаторОбъектаМаркетплейса.Установить(ИдентификаторОбъекта);
		Если ДополнительныеПараметры <> Неопределено
				И ДополнительныеПараметры.Свойство("ИдентификаторВладельцаОбъектаМаркетплейса") Тогда
			НаборЗаписей.Отбор.ИдентификаторВладельцаОбъектаМаркетплейса.Установить(
				ДополнительныеПараметры.ИдентификаторВладельцаОбъектаМаркетплейса);  
		КонецЕсли;
		НаборЗаписей.Отбор.Объект1С.Установить(Объект1С);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 0 Тогда
			Запись = НаборЗаписей.Добавить();
		Иначе
			Запись = НаборЗаписей[0];
		КонецЕсли;
		
		Если ДополнительныеПараметры <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(Запись, ДополнительныеПараметры);
		КонецЕсли;
		
		Запись.УчетнаяЗаписьМаркетплейса        = УчетнаяЗапись;
		Запись.ВидОбъектаМаркетплейса           = ВидОбъекта;
		Запись.ИдентификаторОбъектаМаркетплейса = ИдентификаторОбъекта;
		Запись.Объект1С                         = Объект1С;
		Если ДополнительныеПараметры = Неопределено Тогда
			Запись.ДатаАктуальности = ТекущаяДатаСеанса();
		КонецЕсли;
		
		НаборЗаписей.Записать(Истина);
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При записи данных соответствия для объекта %1 возникла ошибка: %2'",
				ОбщегоНазначения.КодОсновногоЯзыка()),
			Объект1С,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ЗаписьЖурналаРегистрации(ИнтеграцияСМаркетплейсамиСервер.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,,,
			ТекстОшибки);
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
