#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ
	|	ЧтениеОбъектаРазрешено(СсылкаНаОбъект)
	|	И ЧтениеОбъектаРазрешено(РаспознанныйДокумент)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ИзменениеОбъектаРазрешено(СсылкаНаОбъект)
	|	И ИзменениеОбъектаРазрешено(РаспознанныйДокумент)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСвязанныеДокументы(РаспознанныйДокумент, ВключатьПотенциальные = Ложь) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СвязанныеОбъектыРаспознаниеДокументов.СсылкаНаОбъект КАК СсылкаНаОбъект
		|ИЗ
		|	РегистрСведений.СвязанныеОбъектыРаспознаниеДокументов КАК СвязанныеОбъектыРаспознаниеДокументов
		|ГДЕ
		|	СвязанныеОбъектыРаспознаниеДокументов.РаспознанныйДокумент = &РаспознанныйДокумент
		|	И НЕ СвязанныеОбъектыРаспознаниеДокументов.ПотенциальныйКандидат";
	
	Если ВключатьПотенциальные Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НЕ СвязанныеОбъектыРаспознаниеДокументов.ПотенциальныйКандидат", "ИСТИНА");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("РаспознанныйДокумент", РаспознанныйДокумент);
	
	Выборка = Запрос.Выполнить();
	Если Выборка.Пустой() Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	РезультатЗапроса = Выборка.Выгрузить();
	
	Возврат РезультатЗапроса.ВыгрузитьКолонку("СсылкаНаОбъект");
	
КонецФункции

Функция ВсеСвязанныеДокументы(РаспознанныйДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СвязанныеОбъектыРаспознаниеДокументов.СсылкаНаОбъект КАК Ссылка,
		|	СвязанныеОбъектыРаспознаниеДокументов.ПотенциальныйКандидат КАК ПотенциальныйКандидат
		|ИЗ
		|	РегистрСведений.СвязанныеОбъектыРаспознаниеДокументов КАК СвязанныеОбъектыРаспознаниеДокументов
		|ГДЕ
		|	СвязанныеОбъектыРаспознаниеДокументов.РаспознанныйДокумент = &РаспознанныйДокумент
		|	И НЕ СвязанныеОбъектыРаспознаниеДокументов.СсылкаНаОбъект.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("РаспознанныйДокумент", РаспознанныйДокумент);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаписатьЗначения(СозданныйДокумент, РаспознанныйДокумент, ПотенциальныйКандидат = Истина) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.СсылкаНаОбъект = СозданныйДокумент;
	Запись.РаспознанныйДокумент = РаспознанныйДокумент;
	Запись.ПотенциальныйКандидат = ПотенциальныйКандидат;
	Запись.Записать();
	
КонецПроцедуры

Процедура УдалитьЗначения(СозданныйДокумент, РаспознанныйДокумент) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.СсылкаНаОбъект = СозданныйДокумент;
	Запись.РаспознанныйДокумент = РаспознанныйДокумент;
	Запись.Удалить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
