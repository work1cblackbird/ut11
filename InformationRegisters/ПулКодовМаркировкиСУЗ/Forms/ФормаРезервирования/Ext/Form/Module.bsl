#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
		
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбработатьИПроверитьПереданныеПараметры(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДанныеФормы();
	
	ИспользоватьХарактеристикиНоменклатуры = ИнтеграцияИС.ХарактеристикиИспользуются();
	
	УправлениеЭлементамиФормыПриСоздании();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Документ", Документ);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриВыполненииКоманды", ЭтотОбъект, Команда);
	
	ОткрытьФорму("РегистрСведений.ПулКодовМаркировкиСУЗ.Форма.ФормаПечати",
		ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВиртуальнаяАгрегация(Команда)
	
	ТекущиеДанные = Элементы.ПулКодовМаркировки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Если ПулКодовМаркировки.Количество() > 0 Тогда
			ТекущиеДанные = ПулКодовМаркировки[0];
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Документ", Документ);
	ПараметрыФормы.Вставить("ВидПродукции", ТекущиеДанные.ВидПродукции);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриВыполненииКоманды", ЭтотОбъект, Команда);
	
	ОткрытьФорму("Обработка.ВиртуальнаяАгрегацияУпаковокИСМП.Форма",
		ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарезервироватьИЗаказать(Команда)
	
	Если ЕстьКодыДляРезервирования() Тогда
		ДлительнаяОперация = НачатьРезервированиеКодов();
		ОповещениеОЗавершении = Новый ОписаниеОповещения("РезервированиеКодовЗавершение", ЭтотОбъект);
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Резервирование кодов маркировки.'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	Иначе
		ЗаказатьКодыМаркировки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление();
	
	УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИПроверитьПереданныеПараметры(Отказ)
	
	Если Не ЗначениеЗаполнено(Параметры.Документ) Тогда
		ТекстОшибки = НСтр("ru = 'В форму заказа и резервирования кодов маркировки не передан документ.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,,Отказ);
		Возврат;
	КонецЕсли;
	
	Если НЕ Метаданные.ОпределяемыеТипы.ОснованиеЗаказНаЭмиссиюКодовМаркировкиИСМП.Тип.СодержитТип(ТипЗнч(Параметры.Документ)) Тогда
		ТекстОшибки = НСтр("ru = 'В форму заказа и резервирования кодов маркировки передан документ неправильного типа.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,,Отказ);
		Возврат;
	КонецЕсли;
		
	Документ = Параметры.Документ;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормыПриСоздании()
	
	Если НЕ ИспользоватьХарактеристикиНоменклатуры Тогда
		Элементы.ПулКодовМаркировкиХарактеристика.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормы()
	
	ДанныеПоДокументу = РегистрыСведений.ПулКодовМаркировкиСУЗ.РассчитатьТаблицуСостоянияПоЗаказу(Документ);
	ПулКодовМаркировки.Загрузить(ДанныеПоДокументу);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыполненииКоманды(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьДанныеФормы();
	
КонецПроцедуры

#Область РезервированиеИЗаказКодовМаркировки

&НаКлиенте
Функция ЕстьКодыДляРезервирования()
	
	Возврат ПулКодовМаркировки.Итог("КоличествоРезервировать") > 0;
	
КонецФункции

&НаСервере
Функция НачатьРезервированиеКодов()
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Документ", Документ);
	
	ТаблицаДляРезервирования = ТаблицаДляРезервирования();
	Если ТаблицаДляРезервирования <> Неопределено Тогда
		ПараметрыПроцедуры.Вставить("ТаблицаНоменклатуры", ТаблицаДляРезервирования);
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Резервирование кодов маркировки в пуле кодов СУЗ.'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ИнтеграцияИСПереопределяемый.НастроитьДлительнуюОперацию(ПараметрыПроцедуры, ПараметрыВыполнения);
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("РегистрыСведений.ПулКодовМаркировкиСУЗ.ЗарезервироватьКодыПодЗаказ",
		ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаСервере
Функция ТаблицаДляРезервирования()
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.МаркировкаТоваровИСМП") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Организация, ВидПродукции, Операция");
		Если РеквизитыДокумента.Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков Тогда
			СпособВводаВОборот = Перечисления.СпособыВводаВОборотСУЗ.МаркировкаОстатков;
		ИначеЕсли РеквизитыДокумента.Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС Тогда
			СпособВводаВОборот = Перечисления.СпособыВводаВОборотСУЗ.Импорт;
		ИначеЕсли РеквизитыДокумента.Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля Тогда
			СпособВводаВОборот = Перечисления.СпособыВводаВОборотСУЗ.ТрансграничнаяТорговля;
		Иначе
			СпособВводаВОборот = Перечисления.СпособыВводаВОборотСУЗ.Производство;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ПеремаркировкаТоваровИСМП") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Организация, ВидПродукции");
		СпособВводаВОборот = Перечисления.СпособыВводаВОборотСУЗ.Перемаркировка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Ссылка",             Документ);
	ПараметрыЗаполнения.Вставить("Организация",        РеквизитыДокумента.Организация);
	ПараметрыЗаполнения.Вставить("ВидПродукции",       РеквизитыДокумента.ВидПродукции);
	ПараметрыЗаполнения.Вставить("СпособВводаВОборот", СпособВводаВОборот);
	ПараметрыЗаполнения.Вставить("Шаблон",
		ИнтеграцияИСМПКлиентСервер.ШаблонКодаМаркировкиПоВидуПродукции(РеквизитыДокумента.ВидПродукции));
	
	ТаблицаДляРезервирования = Новый ТаблицаЗначений;
	ТаблицаДляРезервирования.Колонки.Добавить("Ссылка",             Метаданные.ОпределяемыеТипы.ОснованиеЗаказНаЭмиссиюКодовМаркировкиИСМП.Тип);
	ТаблицаДляРезервирования.Колонки.Добавить("Организация",        Метаданные.ОпределяемыеТипы.Организация.Тип);
	ТаблицаДляРезервирования.Колонки.Добавить("ВидПродукции",       Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПродукцииИС"));
	ТаблицаДляРезервирования.Колонки.Добавить("Шаблон",             Новый ОписаниеТипов("ПеречислениеСсылка.ШаблоныКодовМаркировкиСУЗ"));
	ТаблицаДляРезервирования.Колонки.Добавить("СпособВводаВОборот", Новый ОписаниеТипов("ПеречислениеСсылка.СпособыВводаВОборотСУЗ"));
	ТаблицаДляРезервирования.Колонки.Добавить("Номенклатура",       Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
	ТаблицаДляРезервирования.Колонки.Добавить("Характеристика",     Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип);
	ТаблицаДляРезервирования.Колонки.Добавить("Количество",         ОбщегоНазначения.ОписаниеТипаЧисло(10, 0));
	
	Для Каждого Строка Из ПулКодовМаркировки Цикл
		Если Строка.КоличествоРезервировать > 0 Тогда
			СтрокаТаблицы = ТаблицаДляРезервирования.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ПараметрыЗаполнения);
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Строка, "Номенклатура, Характеристика");
			СтрокаТаблицы.Количество = Строка.КоличествоРезервировать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаДляРезервирования;
	
КонецФункции

&НаКлиенте
Процедура РезервированиеКодовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда  // отменено пользователем
		Закрыть();
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, Результат.КраткоеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		РезервированиеКодовЗавершениеНаСервере(Результат.АдресРезультата);
		ЗаказатьКодыМаркировки();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РезервированиеКодовЗавершениеНаСервере(АдресРезультата)
	
	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		РезультатРезервирования = ПолучитьИзВременногоХранилища(АдресРезультата);
		Если ТипЗнч(РезультатРезервирования) = Тип("Структура")
			И РезультатРезервирования.Свойство("ТаблицаСостояниеКодов")
			И ТипЗнч(РезультатРезервирования.ТаблицаСостояниеКодов) = Тип("ТаблицаЗначений") Тогда
			
			Для Каждого СтрокаРезервирования Из РезультатРезервирования.ТаблицаСостояниеКодов Цикл
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Номенклатура",   СтрокаРезервирования.Номенклатура);
				СтруктураПоиска.Вставить("Характеристика", СтрокаРезервирования.Характеристика);
				
				НайденныеСтроки = ПулКодовМаркировки.НайтиСтроки(СтруктураПоиска);
				Если НайденныеСтроки.Количество() = 1 Тогда
					СтрокаПула = НайденныеСтроки[0];
					Зарезервировано = СтрокаРезервирования.КоличествоПечатать - СтрокаПула.КоличествоПечатать;
					Если Зарезервировано > 0 Тогда
						СтрокаПула.КоличествоПечатать = СтрокаРезервирования.КоличествоПечатать;
						СтрокаПула.КоличествоРезервировать = СтрокаПула.КоличествоРезервировать - Зарезервировано;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ЗаказатьКодыМаркировки()
	
	ВидыПродукции = Новый Соответствие();
	
	Для Каждого СтрокаТЧ Из ПулКодовМаркировки Цикл
		Если СтрокаТЧ.КоличествоЗаказать > 0 Тогда
			ДанныеСтроки = Новый Структура("Номенклатура,Характеристика,Количество,КоличествоУпаковок");
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, СтрокаТЧ);
			ДанныеСтроки.Количество = СтрокаТЧ.КоличествоЗаказать;
			ДанныеСтроки.КоличествоУпаковок = СтрокаТЧ.КоличествоЗаказать;
			
			Товары = ВидыПродукции[СтрокаТЧ.ВидПродукции];
			
			Если Товары = Неопределено Тогда
				Товары = Новый Массив();
				ВидыПродукции.Вставить(СтрокаТЧ.ВидПродукции, Товары);
			КонецЕсли;
			
			Товары.Добавить(ДанныеСтроки);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из ВидыПродукции Цикл
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ДанныеПула");
		ДанныеЗаполнения.Вставить("ВидПродукции", КлючИЗначение.Ключ);
		ДанныеЗаполнения.Вставить("ДокументОснование", Документ);
		ДанныеЗаполнения.Вставить("Товары", КлючИЗначение.Значение);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриВыполненииКоманды", ЭтотОбъект, Команды.ЗарезервироватьИЗаказать);
		
		ИнтеграцияИСМПКлиент.ОткрытьФормуСозданияДокумента(
			"Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ",
			ДанныеЗаполнения,
			ЭтотОбъект,
			ОписаниеОповещения);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти