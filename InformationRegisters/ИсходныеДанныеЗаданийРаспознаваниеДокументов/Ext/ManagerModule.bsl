#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЭтоАвторизованныйПользователь(Пользователь)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура Записать(ИдентификаторФайла, ИдентификаторЗадания, ТекДата, Файл, ДополнительныеПараметры) Экспорт
	
	Запись = РегистрыСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов.СоздатьМенеджерЗаписи();
	Запись.ИдентификаторФайла = ИдентификаторФайла;
	Запись.ИдентификаторЗадания = ИдентификаторЗадания;
	Запись.ДатаЗагрузки = ТекДата;
	Запись.ИмяФайла = Файл.ИмяФайла;
	Запись.ИсходныйФайл = Новый ХранилищеЗначения(Файл.ДвоичныеДанные);
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(Запись, ДополнительныеПараметры);
	КонецЕсли;
	Запись.ВОбработке = Истина;
	Запись.Записать();
	
КонецПроцедуры

Процедура ПереименоватьМобильныеПриложения(Идентификатор, Имя) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла КАК ИдентификаторФайла
			|ИЗ
			|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
			|ГДЕ
			|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторКлиента = &ИдентификаторКлиента";
		
		Запрос.УстановитьПараметр("ИдентификаторКлиента", Идентификатор);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Менеджер = РегистрыСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов.СоздатьМенеджерЗаписи();
			Менеджер.ИдентификаторФайла = Выборка.ИдентификаторФайла;
			Менеджер.Прочитать();
			
			Менеджер.Отправитель = Имя;
			Менеджер.Записать(Истина);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

Процедура ИзменитьОтветственного(РаспознанныйДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла КАК ИдентификаторФайла,
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторЗадания КАК ИдентификаторЗадания
		|ИЗ
		|	РегистрСведений.РезультатыОбработкиЗаданийРаспознаваниеДокументов КАК РезультатыОбработкиЗаданийРаспознаваниеДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
		|		ПО (РезультатыОбработкиЗаданийРаспознаваниеДокументов.ИдентификаторРезультата = &ИдентификаторРезультата)
		|			И (ИсходныеДанныеЗаданийРаспознаваниеДокументов.Пользователь <> &Пользователь)
		|			И РезультатыОбработкиЗаданийРаспознаваниеДокументов.ИдентификаторФайла = ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла";
	
	Запрос.УстановитьПараметр("ИдентификаторРезультата", РаспознанныйДокумент.ИдентификаторРезультата);
	Запрос.УстановитьПараметр("Пользователь", РаспознанныйДокумент.Ответственный);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Менеджер = РегистрыСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов.СоздатьМенеджерЗаписи();
			Менеджер.ИдентификаторФайла = Выборка.ИдентификаторФайла;
			Менеджер.Прочитать();
			
			Менеджер.Пользователь = РаспознанныйДокумент.Ответственный;
			Менеджер.Записать(Истина);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

Функция ПолучитьПользователяПоИдЗадания(ИдентификаторЗадания) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
		|ГДЕ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторЗадания = &ИдентификаторЗадания";
	
	Запрос.УстановитьПараметр("ИдентификаторЗадания", ИдентификаторЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Пользователь;
	КонецЕсли;
	
	Возврат Справочники.Пользователи.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьМобильноеПриложениеПоИдЗадания(ИдентификаторЗадания) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.МобильноеПриложение КАК МобильноеПриложение
		|ИЗ
		|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
		|ГДЕ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторЗадания = &ИдентификаторЗадания";
	
	Запрос.УстановитьПараметр("ИдентификаторЗадания", ИдентификаторЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.МобильноеПриложение;
	КонецЕсли;
	
	Возврат Справочники.Пользователи.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьРезультатыОбработкиПоИдЗадания(ИдентификаторЗадания) Экспорт
	
	ИменаФайлов = Новый Массив;
	ФайлыДокумента = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла КАК ИдентификаторФайла,
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИмяФайла КАК ИмяФайла
		|ИЗ
		|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
		|ГДЕ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторЗадания = &ИдентификаторЗадания";
	
	Запрос.УстановитьПараметр("ИдентификаторЗадания", ИдентификаторЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ИменаФайлов.Добавить(Выборка.ИмяФайла);
		ФайлыДокумента.Добавить(Выборка.ИдентификаторФайла);
		
	КонецЦикла;
	
	РезультатыОбработки = Новый Структура;
	РезультатыОбработки.Вставить("ИдентификаторРезультата", ИдентификаторЗадания);
	РезультатыОбработки.Вставить("ИменаФайлов", СтрСоединить(ИменаФайлов, ", "));
	РезультатыОбработки.Вставить("ФайлыДокумента", ФайлыДокумента);
	
	Возврат РезультатыОбработки;
	
КонецФункции

Функция ПолучитьЕдинственныйИсходныйФайл(ИдентификаторЗадания) Экспорт
	
	ИнформацияОФайлах = ПолучитьИдентификаторыФайлов(ИдентификаторЗадания);
	Если ИнформацияОФайлах.Количество() = 1 Тогда
		Возврат ИнформацияОФайлах[0].ИсходныйФайл;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьИдентификаторыФайлов(ИдентификаторРезультата) Экспорт
	
	ИдентификаторыФайлов = РегистрыСведений.РезультатыОбработкиЗаданийРаспознаваниеДокументов
		.ПолучитьИдФайловПоИдРезультата(ИдентификаторРезультата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла КАК ИдентификаторФайла,
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИсходныйФайл КАК ИсходныйФайл,
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИмяФайла КАК ИмяФайла
		|ИЗ
		|	РегистрСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов КАК ИсходныеДанныеЗаданийРаспознаваниеДокументов
		|ГДЕ
		|	ИсходныеДанныеЗаданийРаспознаваниеДокументов.ИдентификаторФайла В (&ИдентификаторыФайлов)";
	
	Запрос.УстановитьПараметр("ИдентификаторыФайлов", ИдентификаторыФайлов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Результат = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		ИнформацияОФайле = Новый Структура;
		ИнформацияОФайле.Вставить("ИсходныйФайл", Выборка.ИсходныйФайл.Получить());
		ИнформацияОФайле.Вставить("ИмяФайла", Выборка.ИмяФайла);
		Результат.Добавить(ИнформацияОФайле);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура УдалитьЗаписиПоИдФайлов(ИдентификаторыФайлов) Экспорт
	
	Для Каждого ИдентификаторыФайла Из ИдентификаторыФайлов Цикл
		Набор = РегистрыСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов.СоздатьНаборЗаписей();
		Набор.Отбор.ИдентификаторФайла.Установить(ИдентификаторыФайла);
		Набор.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ИзменитьВОбработке(ИдентификаторРезультата, Значение) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		ИдентификаторыФайлов = РегистрыСведений.РезультатыОбработкиЗаданийРаспознаваниеДокументов
			.ПолучитьИдФайловПоИдРезультата(ИдентификаторРезультата);
		
		Для Каждого ИдентификаторФайла Из ИдентификаторыФайлов Цикл
			
			Менеджер = РегистрыСведений.ИсходныеДанныеЗаданийРаспознаваниеДокументов.СоздатьМенеджерЗаписи();
			Менеджер.ИдентификаторФайла = ИдентификаторФайла;
			Менеджер.Прочитать();
			
			Менеджер.ВОбработке = Значение;
			Менеджер.Записать(Истина);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
