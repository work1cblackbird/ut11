#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Осуществляет запись в регистр по переданным данным.
//
// Параметры:
//  ДанныеЗаписи - Структура - данные для записи в регистр
//
Процедура ВыполнитьЗаписьВРегистр(ДанныеЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДанныеЗаписи);
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Удаляет запись из регистра по переданному документу.
//
// Параметры:
//  ДокументОснование  - ДокументСсылка.МаркировкаТоваровИСМП - измерение регистра для очистки.
//
Процедура УдалитьЗаписиПоДокументу(ДокументОснование) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(ДокументОснование);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Удаляет запись из регистра по идентификатору заявки.
//
// Параметры:
//  ИдентификаторЗаявки  - ОпределяемыйТип.ИдентификаторЗаявкиИСМП - ИдентификаторЗаявки.
//  ДокументОснование - ДокументСсылка.МаркировкаТоваровИСМП - измерение регистра для очистки.
Процедура УдалитьЗаписиПоИдентификаторуЗаявки(ИдентификаторЗаявки, ДокументОснование) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = новый Запрос(
	"ВЫБРАТЬ
	|	ПакетыКодовМаркировкиИСМП.Сообщение КАК Сообщение
	|ИЗ
	|	РегистрСведений.ПакетыКодовМаркировкиИСМП КАК ПакетыКодовМаркировкиИСМП
	|ГДЕ
	|	ПакетыКодовМаркировкиИСМП.ДокументОснование = &ДокументОснование
	|	И ПакетыКодовМаркировкиИСМП.ИдентификаторЗаявки = &ИдентификаторЗаявки");
	
	Запрос.УстановитьПараметр("ДокументОснование",   ДокументОснование);
	Запрос.УстановитьПараметр("ИдентификаторЗаявки", ИдентификаторЗаявки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПакетыКодовМаркировкиИСМП");
		ЭлементБлокировки.УстановитьЗначение("ДокументОснование", ДокументОснование);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		Набор = СоздатьНаборЗаписей();
		Набор.Отбор.ДокументОснование.Установить(ДокументОснование);
		Набор.Отбор.Сообщение.Установить(Выборка.Сообщение);
		
		Набор.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеПоДокументу(ДокументОснование) Экспорт
	
	КодыМаркировки = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПакетыКодовМаркировкиИСМП.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(ПакетыКодовМаркировкиИСМП.Версия) КАК Версия
	|ПОМЕСТИТЬ ВерсииСообщений
	|ИЗ
	|	РегистрСведений.ПакетыКодовМаркировкиИСМП КАК ПакетыКодовМаркировкиИСМП
	|ГДЕ
	|	ПакетыКодовМаркировкиИСМП.ДокументОснование = &ДокументОснование
	|	И ПакетыКодовМаркировкиИСМП.Сообщение <> &ПустоеСообщение
	|СГРУППИРОВАТЬ ПО
	|	ПакетыКодовМаркировкиИСМП.ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Версия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПакетыКодовМаркировкиИСМП.ДокументОснование КАК ДокументОснование,
	|	ПакетыКодовМаркировкиИСМП.ДанныеСообщения КАК ДанныеСообщения
	|ИЗ
	|	ВерсииСообщений КАК ВерсииСообщений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыКодовМаркировкиИСМП КАК ПакетыКодовМаркировкиИСМП
	|		ПО ПакетыКодовМаркировкиИСМП.ДокументОснование = ВерсииСообщений.ДокументОснование
	|		И ПакетыКодовМаркировкиИСМП.Версия = ВерсииСообщений.Версия";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ПустоеСообщение", ИнтеграцияИСМПСлужебный.СтроковоеПредставлениеПустогоУникальногоИдентификатора());
	
	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаРезультата Из Результат Цикл
		Если ТипЗнч(СтрокаРезультата.ДанныеСообщения) <> Тип("ХранилищеЗначения") Тогда
			Продолжить;
		КонецЕсли;
		ДанныеСообщения = СтрокаРезультата.ДанныеСообщения.Получить();
		Если ТипЗнч(ДанныеСообщения) <> Тип("Массив") Тогда
			Продолжить;
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КодыМаркировки, ДанныеСообщения);
	КонецЦикла;
	
	Возврат КодыМаркировки;
	
КонецФункции

Функция ПолучитьКодыКПовторнойПередаче(ДокументОснование) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = новый Запрос(
	"ВЫБРАТЬ
	|	ПакетыКодовМаркировкиИСМП.ДанныеСообщения КАК ДанныеСообщения
	|ИЗ
	|	РегистрСведений.ПакетыКодовМаркировкиИСМП КАК ПакетыКодовМаркировкиИСМП
	|ГДЕ
	|	ПакетыКодовМаркировкиИСМП.ДокументОснование = &ДокументОснование
	|	И ПакетыКодовМаркировкиИСМП.Сообщение = &ПустоеСообщение");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ПустоеСообщение", ИнтеграцияИСМПСлужебный.СтроковоеПредставлениеПустогоУникальногоИдентификатора());
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ШтрихкодыУпаковок = Новый Соответствие;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.ДанныеСообщения) <> Тип("ХранилищеЗначения") Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСообщения = Выборка.ДанныеСообщения.Получить();
		Если ТипЗнч(ДанныеСообщения) <> Тип("Массив") Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ЭлементДанных Из ДанныеСообщения Цикл
			ШтрихкодыУпаковок.Вставить(ЭлементДанных, Истина);
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ШтрихкодыУпаковок;
	
КонецФункции

Функция ПолучитьДанныеПоДокументуДляЗапросаКвитанции(ДокументОснование) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИдентификаторыЗаявки", Новый Соответствие);
	Результат.Вставить("ЕстьПакетыКодовОшибками", Ложь);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПакетыКодовМаркировкиИСМП.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(ПакетыКодовМаркировкиИСМП.Версия)  КАК Версия
	|ПОМЕСТИТЬ ВерсииСообщений
	|ИЗ
	|	РегистрСведений.ПакетыКодовМаркировкиИСМП КАК ПакетыКодовМаркировкиИСМП
	|ГДЕ
	|	ПакетыКодовМаркировкиИСМП.ДокументОснование = &ДокументОснование
	|	И ПакетыКодовМаркировкиИСМП.Сообщение <> &ПустоеСообщение
	|СГРУППИРОВАТЬ ПО
	|	ПакетыКодовМаркировкиИСМП.ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Версия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПакетыКодовМаркировкиИСМП.ИдентификаторЗаявки КАК ИдентификаторЗаявки,
	|	ПакетыКодовМаркировкиИСМП.ДанныеСообщения КАК ДанныеСообщения
	|ИЗ
	|	ВерсииСообщений КАК ВерсииСообщений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыКодовМаркировкиИСМП КАК ПакетыКодовМаркировкиИСМП
	|		ПО ПакетыКодовМаркировкиИСМП.ДокументОснование = ВерсииСообщений.ДокументОснование
	|		И ПакетыКодовМаркировкиИСМП.Версия = ВерсииСообщений.Версия";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ПустоеСообщение",   ИнтеграцияИСМПСлужебный.СтроковоеПредставлениеПустогоУникальногоИдентификатора());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.ИдентификаторЗаявки) Тогда
			Результат.ЕстьПакетыКодовОшибками = Истина;
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(Выборка.ДанныеСообщения) <> Тип("ХранилищеЗначения") Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСообщения = Выборка.ДанныеСообщения.Получить();
		Если ТипЗнч(ДанныеСообщения) <> Тип("Массив") Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ЭлементДанных Из ДанныеСообщения Цикл
			Результат.ИдентификаторыЗаявки.Вставить(Выборка.ИдентификаторЗаявки, ЭлементДанных);
			Прервать;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли