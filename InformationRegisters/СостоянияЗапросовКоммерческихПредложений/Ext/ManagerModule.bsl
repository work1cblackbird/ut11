
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает структуру значений по умолчанию для документа для движений.
//
// Параметры:
//   СсылкаНаОформляемыйДокумент - ОпределяемыйТип.ЗапросКоммерческихПредложенийПоставщиков - ссылка на документ.
//
// Возвращаемое значение:
//    Структура - значения по умолчанию
//
Функция ЗначенияПоУмолчанию(СсылкаНаОформляемыйДокумент) Экспорт
	
	СтруктураЗначенияПоУмолчанию = Новый Структура;
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(СсылкаНаОформляемыйДокумент);
	
	СтруктураЗначенияПоУмолчанию.Вставить("ЗапросКоммерческихПредложений", СсылкаНаОформляемыйДокумент);
	СтруктураЗначенияПоУмолчанию.Вставить("ТекущееСостояние", МенеджерОбъекта.СтатусПоУмолчанию());
	СтруктураЗначенияПоУмолчанию.Вставить("НовоеСостояние", МенеджерОбъекта.СтатусПоУмолчанию());
	СтруктураЗначенияПоУмолчанию.Вставить("ДатаОбновления", ТекущаяДатаСеанса());
	СтруктураЗначенияПоУмолчанию.Вставить("СостояниеВСервисе", "");
	СтруктураЗначенияПоУмолчанию.Вставить("Действие", "");
	
	Возврат СтруктураЗначенияПоУмолчанию;
	
КонецФункции

// Возвращает текущее состояние запроса коммерческих предложений по ссылке.
//
// Параметры:
//   ЗапросКоммерческихПредложений - ОпределяемыйТип.ЗапросКоммерческихПредложенийПоставщиков - ссылка на документ.
//
// Возвращаемое значение:
//	Структура - текущее состояние запроса коммерческих предложений
//
Функция ТекущееСостояние(ЗапросКоммерческихПредложений) Экспорт
	
	ВозвращаемоеЗначение = ЗначенияПоУмолчанию(ЗапросКоммерческихПредложений);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СостоянияЗапросовКоммерческихПредложений.ЗапросКоммерческихПредложений КАК ЗапросКоммерческихПредложений,
	|	СостоянияЗапросовКоммерческихПредложений.ТекущееСостояние КАК ТекущееСостояние,
	|	СостоянияЗапросовКоммерческихПредложений.НовоеСостояние КАК НовоеСостояние,
	|	СостоянияЗапросовКоммерческихПредложений.СостояниеВСервисе КАК СостояниеВСервисе,
	|	СостоянияЗапросовКоммерческихПредложений.Действие КАК Действие
	|ИЗ
	|	РегистрСведений.СостоянияЗапросовКоммерческихПредложений КАК СостоянияЗапросовКоммерческихПредложений
	|ГДЕ
	|	СостоянияЗапросовКоммерческихПредложений.ЗапросКоммерческихПредложений = &ЗапросКоммерческихПредложений");
	
	Запрос.УстановитьПараметр("ЗапросКоммерческихПредложений", ЗапросКоммерческихПредложений);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
		
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Выполняет обновление статуса запроса коммерческих предложений.
//
// Параметры:
//   Документ            - ОпределяемыйТип.ЗапросКоммерческихПредложенийПоставщиков - ссылка на документ.
//   ПараметрыОбновления - Структура - параметры обновления регистра см. ресурсы регистра.
//
// Возвращаемое значение:
//    Булево - запись произведена успешно
//
Функция ЗаписатьСтатус(Документ, ПараметрыОбновления, КодСобытия = "БизнесСеть") Экспорт
	
	Результат = Истина;
	
	МенеджерЗаписи = РегистрыСведений.СостоянияЗапросовКоммерческихПредложений.СоздатьМенеджерЗаписи();
	
	СтруктураЗаписи = ЗначенияПоУмолчанию(Документ);
	ЗаполнитьЗначенияСвойств(СтруктураЗаписи, ПараметрыОбновления);
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтруктураЗаписи);
	
	НачатьТранзакцию();
	Попытка
		МенеджерЗаписи.Записать(Истина);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Информация = ИнформацияОбОшибке();
		ЭлектронноеВзаимодействие.ОбработатьОшибку(НСтр("ru = 'Записать статус запроса коммерческих предложений'"),
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(Информация), НСтр(
			"ru = 'Не удалось записать статус запроса коммерческих предложений'"), КодСобытия);
		Результат = Ложь;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли