#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	УправлениеДоступомИСПереопределяемый.ПриЗаполненииОграниченияДоступа(
		Метаданные.РегистрыСведений.НастройкиОбменаСУЗ, Ограничение);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПроизводственныйОбъектПолучитьСписокВыбора(Организация, ПроизводственныйОбъект = Неопределено) Экспорт
	
	СписокВыбора = Новый СписокЗначений;
	
	ТекстЗапросаСписок =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 11
	|	НастройкиОбменаСУЗ.ПроизводственныйОбъект КАК ПроизводственныйОбъект,
	|	ПРЕДСТАВЛЕНИЕ(НастройкиОбменаСУЗ.ПроизводственныйОбъект) КАК Представление,
	|	НастройкиОбменаСУЗ.ПроизводственныйОбъектАдресСтрокой КАК АдресОбъекта
	|ИЗ
	|	РегистрСведений.НастройкиОбменаСУЗ КАК НастройкиОбменаСУЗ
	|ГДЕ
	|	НастройкиОбменаСУЗ.Организация = &Организация
	|	И НастройкиОбменаСУЗ.ПроизводственныйОбъект <> &ПустойПроизводственныйОбъект;";
	
	Если ПроизводственныйОбъект = Неопределено Тогда
		ТекстЗапросаОбъект = "";
	Иначе
		ТекстЗапросаОбъект =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.НастройкиОбменаСУЗ КАК НастройкиОбменаСУЗ
		|ГДЕ
		|	НастройкиОбменаСУЗ.Организация = &Организация
		|	И НастройкиОбменаСУЗ.ПроизводственныйОбъект = &ПроизводственныйОбъект";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",                  Организация);
	Запрос.УстановитьПараметр("ПроизводственныйОбъект",       ПроизводственныйОбъект);
	Запрос.УстановитьПараметр("ПустойПроизводственныйОбъект", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("ПроизводственныйОбъектИС"));
	Запрос.Текст = ТекстЗапросаСписок + ТекстЗапросаОбъект;
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Выборка = РезультатЗапроса[0].Выбрать();
	
	// Список выбора формируем, если всего имеется не более 10 записей
	Если Выборка.Количество() < 11 Тогда
		Пока Выборка.Следующий() Цикл
			Представление = Выборка.Представление;
			Если ЗначениеЗаполнено(Выборка.АдресОбъекта) Тогда
				Представление = Представление + " (" + Выборка.АдресОбъекта + ")";
			КонецЕсли;
			СписокВыбора.Добавить(Выборка.ПроизводственныйОбъект, Представление);
		КонецЦикла;
	КонецЕсли;
	
	Если ПроизводственныйОбъект <> Неопределено Тогда
		Если РезультатЗапроса[1].Пустой() Тогда
			ПроизводственныйОбъект = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СписокВыбора;
	
КонецФункции

Функция ПолучитьАдресПроизводственногоОбъекта(Организация, ПроизводственныйОбъект) Экспорт
	
	ДанныеАдреса = Новый Структура("ПроизводственныйОбъектАдрес, ПроизводственныйОбъектАдресСтрокой");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("ПроизводственныйОбъект", ПроизводственныйОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиОбменаСУЗ.ПроизводственныйОбъектАдрес КАК ПроизводственныйОбъектАдрес,
	|	НастройкиОбменаСУЗ.ПроизводственныйОбъектАдресСтрокой КАК ПроизводственныйОбъектАдресСтрокой
	|ИЗ
	|	РегистрСведений.НастройкиОбменаСУЗ КАК НастройкиОбменаСУЗ
	|ГДЕ
	|	НастройкиОбменаСУЗ.Организация = &Организация
	|	И НастройкиОбменаСУЗ.ПроизводственныйОбъект = &ПроизводственныйОбъект";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеАдреса, Выборка);
	КонецЕсли;
	
	Возврат ДанныеАдреса;
	
КонецФункции

Функция ДоступныеНастройкиОбменаСУЗ(Организации = Неопределено, ТолькоЗаполненные = Истина) Экспорт
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	НастройкиОбменаСУЗ.Организация,
	|	НастройкиОбменаСУЗ.ПроизводственныйОбъект
	|ИЗ
	|	РегистрСведений.НастройкиОбменаСУЗ КАК НастройкиОбменаСУЗ";
	
	Если Организации <> Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	НастройкиОбменаСУЗ.Организация В (&Организации)";
		Запрос.УстановитьПараметр("Организации", Организации);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	ДоступныеНастройки = Запрос.Выполнить().Выгрузить();
	
	Если ТолькоЗаполненные Тогда
		КоличествоСтрок = ДоступныеНастройки.Количество();
		Для Счетчик = 1 По КоличествоСтрок Цикл
			Строка = ДоступныеНастройки[КоличествоСтрок - Счетчик];
			Если Не ЗначениеЗаполнено(Строка.Организация)
				Или Не ЗначениеЗаполнено(Строка.ПроизводственныйОбъект) Тогда
				ДоступныеНастройки.Удалить(Строка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДоступныеНастройки;
	
КонецФункции

Процедура ДополнитьТокенамиСУЗ(Параметры) Экспорт
	
	ДоступныеОрганизации              = Параметры.ДоступныеОрганизации;
	СертификатыДляПодписанияНаСервере = Параметры.СертификатыДляПодписанияНаСервере;
	ОрганизацииПоОтветственному       = Параметры.ОрганизацииПоОтветственному;
	ПустаяОрганизация                 = Параметры.ПустаяОрганизация;
	ПустойПроизводственныйОбъект      = Параметры.ПустойПроизводственныйОбъект;
	Настройки                         = Параметры.Настройки;
	
	ДоступныеНастройкиСУЗ = ДоступныеНастройкиОбменаСУЗ(ДоступныеОрганизации);
	
	Для Каждого ДоступнаяНастройкаСУЗ Из ДоступныеНастройкиСУЗ Цикл
		
		Организация = ДоступнаяНастройкаСУЗ.Организация;
		ПроизводственныйОбъект = ДоступнаяНастройкаСУЗ.ПроизводственныйОбъект;
		Если СертификатыДляПодписанияНаСервере <> Неопределено
			И СертификатыДляПодписанияНаСервере.Сертификаты.Найти(Организация, "Организация") <> Неопределено Тогда
			ВремяОповещения = 0;
		Иначе
			ОрганизацияПоОтветственному = ОрганизацииПоОтветственному[Организация];
			Если ОрганизацияПоОтветственному = Неопределено Тогда
				ОрганизацияПоОтветственному = ОрганизацииПоОтветственному[ПустаяОрганизация];
			КонецЕсли;
			Если ОрганизацияПоОтветственному = Неопределено Тогда
				ВремяОповещения = 0;
			Иначе
				ВремяОповещения = ОрганизацияПоОтветственному[ПроизводственныйОбъект];
				Если ВремяОповещения = Неопределено Тогда
					ВремяОповещения = ОрганизацияПоОтветственному[ПустойПроизводственныйОбъект];
				КонецЕсли;
				Если ВремяОповещения = Неопределено Тогда
					ВремяОповещения = 0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Настройка = Новый Структура;
		Настройка.Вставить("ТипТокенаАвторизации",   Перечисления.ТипыТокеновАвторизации.СУЗ);
		Настройка.Вставить("Организация",            Организация);
		Настройка.Вставить("ПроизводственныйОбъект", ПроизводственныйОбъект);
		Настройка.Вставить("ВремяОповещения",        ВремяОповещения);
		Настройки.Добавить(Настройка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли