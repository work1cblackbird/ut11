// @strict-types

#Область ОписаниеПеременных

&НаКлиенте
Перем ТекущаяДоверенность; // ОпределяемыйТип.МашиночитаемаяДоверенность

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДобавлениеИзменениеМЧДОрганизацийЭДО = Справочники.МашиночитаемыеДоверенностиОрганизаций.ЕстьПравоИзменения();
	ЕстьПравоИзменения = МашиночитаемыеДоверенности.ИмеетсяПравоИзмененияМЧД();
	Элементы.ЗагрузитьИзРеестраФНС.Видимость = ЕстьПравоИзменения;
	Элементы.ЗагрузитьИзФайла.Видимость = ЕстьПравоИзменения;
	Элементы.СоздатьЗаявлениеНаРегистрацию.Видимость = ЕстьПравоИзменения И ДобавлениеИзменениеМЧДОрганизацийЭДО;
	Элементы.СоздатьЗаявлениеНаРегистрациюПередоверия.Видимость = ЕстьПравоИзменения И ДобавлениеИзменениеМЧДОрганизацийЭДО;
	
	Поля = Новый Массив; // Массив Из Строка
	Поля.Добавить("ВсеДоверители, ВсеПредставители");
	Список.УстановитьОграниченияИспользованияВОтборе(Поля);
	УстановитьУсловноеОформление();
	РежимВыбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "РежимВыбора", Ложь);
	Элементы.Выбрать.Видимость = РежимВыбора;
	ОбновитьИспользованиеПараметровСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОбластьПредпросмотра", 0.2, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПерехода(ОбъектПерехода, СтандартнаяОбработка)
	ВыделитьДоверенность(ОбъектПерехода);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = МашиночитаемыеДоверенностиКлиент.ИмяОповещенияПоказатьДоверенностиОрганизации() И Параметр
		<> ВыбраннаяОрганизация Тогда
		ВыбраннаяОрганизация = Параметр;
		ОбновитьОтборПоОрганизации();
	КонецЕсли;
	
	Если ИмяСобытия = МашиночитаемыеДоверенностиКлиент.ИмяОповещенияОИзмененииМЧД() Тогда
		
		Элементы.Список.Обновить();
		
		Если Параметр.Доверенности.Найти(ТекущаяДоверенность) <> Неопределено Тогда
			ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОбластьПредпросмотра", 0.2, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)

	Элементы.ПоказыватьПомеченныеНаУдаление.Пометка = ПоказыватьПомеченныеНаУдаление;
	ОбновитьИспользованиеПараметровСписка();

	Элементы.ПоказыватьПредпросмотр.Пометка = ПоказыватьПредпросмотр;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОтборПоОрганизацииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбраннаяОрганизация = Неопределено;
	ОбновитьОтборПоОрганизации();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, КлючЗаписиИСтрокиДинамическогоСписка)
	
	СтрокиСпискаПоХешу = Новый Соответствие;
	ХешиДляПоискаДублей = Новый Массив;
	
	Для Каждого КлючИЗначение Из КлючЗаписиИСтрокиДинамическогоСписка Цикл
		
		СтрокаСписка = КлючИЗначение.Значение; // СтрокаДинамическогоСписка
		УстановитьОформлениеСубъектаДоверенности(СтрокаСписка, "ВсеДоверители");
		УстановитьОформлениеСубъектаДоверенности(СтрокаСписка, "ВсеПредставители");
		
		Если СтрокаСписка.Данные.ДатаОкончанияДействия < ТекущаяДатаСеанса() Тогда
			ДатаОкончанияДействия = СтрокаСписка.Оформление.Получить("ДатаОкончанияДействия");
			Если ЗначениеЗаполнено(ДатаОкончанияДействия) Тогда
				ДатаОкончанияДействия.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);
			КонецЕсли;
		КонецЕсли;
		
		ТекстПередоверия = "";
		Если ЗначениеЗаполнено(СтрокаСписка.Данные.Номер) Тогда
			КоличествоПередоверий = 
				КоличествоПередоверий(СтрокаСписка.Данные.Номер, КлючЗаписиИСтрокиДинамическогоСписка);
		Иначе
			КоличествоПередоверий = 0;
		КонецЕсли;
		
		Если ТипЗнч(СтрокаСписка.Данные.Доверенность) <> Тип("СправочникСсылка.МЧД003") Тогда
			ТекстПередоверия = "";

			СтрокиСпискаПоХешу.Вставить(КлючИЗначение.Ключ.Хеш, СтрокаСписка); 
			ХешиДляПоискаДублей.Добавить(КлючИЗначение.Ключ.Хеш);

		ИначеЕсли КоличествоПередоверий > 0 Тогда
			ТекстПередоверия = НСтр("ru='Передоверена %1 раз(а)'");
			ТекстПередоверия = СтрШаблон(ТекстПередоверия, КоличествоПередоверий);
		ИначеЕсли СтрокаСписка.Данные.ПередовериеРазрешено Тогда
			ТекстПередоверия = НСтр("ru='Разрешено передоверие'");
		ИначеЕсли ЗначениеЗаполнено(СтрокаСписка.Данные.НомерРодительскойДоверенности) Тогда
			ТекстПередоверия = НСтр("ru='Это передоверие'");
		Иначе
			ТекстПередоверия = НСтр("ru='Без права передоверия'");
		КонецЕсли;
		
		СтрокаСписка.Данные.Передоверие = ТекстПередоверия;
		
	КонецЦикла;
	
	Если ХешиДляПоискаДублей.Количество() > 0 Тогда
		
		ЗаполнитьСтрокиСпискаДаннымиОДубляхМЧД(СтрокиСпискаПоХешу, ХешиДляПоискаДублей);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено И Не ЗначениеЗаполнено(ТекущиеДанные.Доверенность) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Доверенности = Неопределено Тогда
	
		РежимВыбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "РежимВыбора", Ложь); // Булево
		Если РежимВыбора Тогда
			ОповеститьОВыборе(ТекущиеДанные.Доверенность);
		Иначе
			ОбработкаВыбора = Новый ОписаниеОповещения("ВыборДоверенностиЗавершение", ЭтотОбъект);
			ПоказатьЗначение(ОбработкаВыбора, ТекущиеДанные.Доверенность);
		КонецЕсли;
	Иначе
		ОповещениеВыбора = Новый ОписаниеОповещения("ВыборДоверенностиНачало", ЭтотОбъект);
		ПоказатьВыборИзМеню(ОповещениеВыбора, ТекущиеДанные.Доверенности, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Доверенность = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Элементы.Список.ТекущиеДанные, "Доверенность",
		Неопределено);
	Если ТекущаяДоверенность <> Доверенность Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОбластьПредпросмотра", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ДействияНадДоверенностями

&НаКлиенте
Процедура СоздатьЗаявлениеНаРегистрацию(Команда)
	
	ОбработчикПослеСоздания = Новый ОписаниеОповещения("Подключаемый_СоздатьДоверенностьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.СоздатьМЧД(ОбработчикПослеСоздания);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявлениеНаРегистрациюПередоверия(Команда)
	
	ОбработчикПослеСоздания = Новый ОписаниеОповещения("Подключаемый_СоздатьДоверенностьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.СоздатьМЧДПередоверия(ОбработчикПослеСоздания);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзРеестраФНС(Команда)
	
	ОбработчикПослеЗагрузки = Новый ОписаниеОповещения("Подключаемый_ЗагрузитьДоверенностьИзРеестраЗавершение",
		ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ПолучитьДанныеМЧД(ОбработчикПослеЗагрузки, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ОбработчикПослеЗагрузки = Новый ОписаниеОповещения("Подключаемый_ЗагрузитьДоверенностьИзФайлаЗавершение",
		ЭтотОбъект);
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru = 'Архив'") + " (*.zip)|*.zip";
	ПараметрыЗагрузки.Диалог.Заголовок = НСтр("ru = 'Выберите архив с доверенностью и подписью'");
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОбработчикПослеЗагрузки, ПараметрыЗагрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДоверенность(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОповеститьОВыборе(ТекущиеДанные.Доверенность);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ПрочиеКоманды

&НаКлиенте
Процедура ПоказыватьПомеченныеНаУдаление(Команда)
	ПоказыватьПомеченныеНаУдаление = Не ПоказыватьПомеченныеНаУдаление;
	Элементы.ПоказыватьПомеченныеНаУдаление.Пометка = ПоказыватьПомеченныеНаУдаление;
	ОбновитьИспользованиеПараметровСписка();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПредпросмотр(Команда)
	ПоказыватьПредпросмотр = Не ПоказыватьПредпросмотр;
	Элементы.ПоказыватьПредпросмотр.Пометка = ПоказыватьПредпросмотр;
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОбластьПредпросмотра", 0.2, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКлассификаторПолномочий(Команда)
	ОткрытьФорму("Справочник.КлассификаторПолномочийМЧД003.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	ТекущийЭлемент = Элементы.ПоисковаяСтрока;
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Обновить(Команда)
	
	Элементы.Список.Обновить();
	
	Доверенность = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Элементы.Список.ТекущиеДанные, "Доверенность",
		Неопределено);
	
	Если ЗначениеЗаполнено(Доверенность) Тогда
		МашиночитаемыеДоверенностиКлиент.ОповеститьОИзмененииМЧД(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Доверенность));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОформлениеКолонокДинамическогоСписка

&НаСервереБезКонтекста
Процедура УстановитьОформлениеСубъектаДоверенности(СтрокаСписка, ПолеОписанияСубъекта)
	
	ДанныеСубъекта = ОбщегоНазначенияБЭД.JSONЗначение(СтрокаСписка.Данные[ПолеОписанияСубъекта]);
	Если ЗначениеЗаполнено(ДанныеСубъекта) Тогда
		Массив = Новый Массив;
		Для Каждого Субъект Из ДанныеСубъекта Цикл
			Массив.Добавить(МашиночитаемыеДоверенности.ПредставлениеСубъектаДоверенности(Субъект));
		КонецЦикла;
		КоличествоСубъектов = Массив.Количество();
		Если КоличествоСубъектов > 1 Тогда
			Массив[0] = СтрШаблон("[%2] %1", Массив[0], КоличествоСубъектов);
		КонецЕсли;
		СтрокаСписка.Данные[ПолеОписанияСубъекта] = СтрСоединить(Массив, "; ");
	Иначе
		СтрокаСписка.Данные[ПолеОписанияСубъекта] = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Подключаемый_СоздатьДоверенностьЗавершение(Доверенность, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Доверенность) Тогда
		ОбновитьСписокИСфокусироватьсяНаДоверенности(Доверенность);
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено И Не ТекущиеДанные.Действует Тогда
			Текст = НСтр("ru = 'Не удалось обновить статус доверенности.
				|Обновить вручную статус можно в форме доверенности по кнопке ""Обновить статус из реестра ФНС"".'");
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(Текст);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокИСфокусироватьсяНаДоверенности(Доверенность)
	Элементы.Список.Обновить();
	ВыделитьДоверенность(Доверенность);
КонецПроцедуры

&НаСервере
Процедура ВыделитьДоверенность(Доверенность)
	КлючЗаписи = РегистрыСведений.ЖурналМашиночитаемыхДоверенностей.СоздатьКлючЗаписи(Новый Структура("Хеш",
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Доверенность, "ХешФайла")));
	Элементы.Список.ТекущаяСтрока = КлючЗаписи;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗагрузитьДоверенностьИзРеестраЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат.СсылкаНаДоверенность) Тогда
		ПоказатьЗначение(Новый ОписаниеОповещения, Результат.СсылкаНаДоверенность);
		Элементы.Список.Обновить();
		
		ЗагруженныеМЧД = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Результат.СсылкаНаДоверенность);
		МашиночитаемыеДоверенностиКлиент.ОповеститьОИзмененииМЧД(ЗагруженныеМЧД);
	ИначеЕсли Результат.Свойство("ТекстОшибки") Тогда
		МашиночитаемыеДоверенностиКлиент.ПоказатьПредупреждениеПриЗагрузкеМЧД(Результат.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗагрузитьДоверенностьИзФайлаЗавершение(ПомещенныйФайл, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныйФайл = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресВоВременномХранилище = ПомещенныйФайл.Хранение;
	МашиночитаемыеДоверенностиКлиент.ЗагрузитьМЧДИзФайла(АдресВоВременномХранилище);
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборДоверенностиНачало(ВыбранныйЭлемент, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		
		РежимВыбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "РежимВыбора", Ложь); // Булево
		Если РежимВыбора Тогда
			ОповеститьОВыборе(ВыбранныйЭлемент.Значение);
		Иначе
			ОбработкаВыбора = Новый ОписаниеОповещения("ВыборДоверенностиЗавершение", ЭтотОбъект);
			ПоказатьЗначение(ОбработкаВыбора, ВыбранныйЭлемент.Значение);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыборДоверенностиЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	Элементы.Список.Обновить();
КонецПроцедуры

#КонецОбласти

#Область ОбластьПредпросмотра

&НаКлиенте
Процедура Подключаемый_ОбновитьОбластьПредпросмотра()
	
	Доверенность = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Элементы.Список.ТекущиеДанные, "Доверенность",
		Неопределено);
	Элементы.ГруппаПредпросмотра.Видимость = ПоказыватьПредпросмотр;
	Если ПоказыватьПредпросмотр И ЗначениеЗаполнено(Доверенность) Тогда
		ПереформироватьТабличныйДокумент(Доверенность);
		ПоказатьСтатусыДоверенности();
		ТекущаяДоверенность = Доверенность;
	Иначе
		ТабличныйДокументПредпросмотра = Новый ТабличныйДокумент;
		ТекущаяДоверенность = Неопределено;
		Элементы.ГруппаСостоянияИСтатусы.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереформироватьТабличныйДокумент(Знач Ссылка)

	Попытка
		ТабличныйДокументПредпросмотра = МашиночитаемыеДоверенности.ТабличныйДокументМЧДПоСсылке(Ссылка);
		СтатусыДоверенности = ПолучитьСтатусыДоверенности(Ссылка);
		ДанныеПоМЧДВОчереди = МашиночитаемыеДоверенности.НайтиДанныеМЧДВОчередиНаРегистрацию(Ссылка);
	Исключение
		ТабличныйДокументПредпросмотра = Новый ТабличныйДокумент;
		СтатусыДоверенности = Неопределено;
		ДанныеПоМЧДВОчереди = Неопределено;
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтатусыДоверенности()
	
	Если СтатусыДоверенности <> Неопределено Тогда
		Элементы.ГруппаСостоянияИСтатусы.Видимость = Истина;
	
		СведенияОРегистрации = Новый Структура;
		СведенияОРегистрации.Вставить("ДанныеПоМЧДВОчереди", ДанныеПоМЧДВОчереди);
		СведенияОРегистрации.Вставить("ОписаниеОшибкиРегистрации", СтатусыДоверенности.ОписаниеОшибкиРегистрации);
		СведенияОРегистрации.Вставить("ДатаОбновленияСтатуса", СтатусыДоверенности.ДатаОбновленияСтатуса);	
		
		ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, СтатусыДоверенности.Подписана,
			СтатусыДоверенности.Верна, СтатусыДоверенности.Отозвана, СтатусыДоверенности.ДатаОтзыва,
			СтатусыДоверенности.СтатусВРеестреФНС, СведенияОРегистрации);
	Иначе
		Элементы.ГруппаСостоянияИСтатусы.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервереБезКонтекста
Функция КоличествоПередоверий(НомерДоверенности, СтрокиДинамическогоСписка)
	
	Счетчик = 0;
	Для Каждого КлючИЗначение Из СтрокиДинамическогоСписка Цикл
		СтрокаСписка = КлючИЗначение.Значение; // СтрокаДинамическогоСписка
		Если СтрокаСписка.Данные.НомерРодительскойДоверенности = НомерДоверенности
			И (СтрокаСписка.Данные.ДатаВыдачи <= ТекущаяДатаСеанса()
				И СтрокаСписка.Данные.ДатаОкончанияДействия >= ТекущаяДатаСеанса())
			И СтрокаСписка.Данные.Подписана
			И СтрокаСписка.Данные.Действует Тогда
			Счетчик = Счетчик + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Счетчик;
	
КонецФункции

&НаСервере
Процедура ОбновитьИспользованиеПараметровСписка()
	ПараметрПоказыватьПомеченныеНаУдаление = Новый ПараметрКомпоновкиДанных("ПоказыватьПомеченныеНаУдаление");
	ПараметрыДанных = Список.КомпоновщикНастроек.Настройки.ПараметрыДанных;
	ЗначениеПараметра = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрПоказыватьПомеченныеНаУдаление);
	ЗначениеПараметра.Значение = ПоказыватьПомеченныеНаУдаление;
	ЗначениеПараметра.Использование = Не ПоказыватьПомеченныеНаУдаление;
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтборПоОрганизации()
	СвойстваДинамическогоСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваДинамическогоСписка.ДинамическоеСчитываниеДанных = Истина;
	СвойстваДинамическогоСписка.ОсновнаяТаблица = "РегистрСведений.ЖурналМашиночитаемыхДоверенностей";
	Если ЗначениеЗаполнено(ВыбраннаяОрганизация) Тогда
		Элементы.ДекорацияОтборПоОрганизации.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(НСтр(
			"ru='<b>Отбор:</b> %1 <a href=""ОтменитьОтбор"" ><img src=""ПолеВводаОчистить""></a>';"),
			ВыбраннаяОрганизация);
		Элементы.ДекорацияОтборПоОрганизации.Видимость = Истина;
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеОрганизации.Ссылка КАК Ссылка,
		|	&РеквизитИНН КАК ИНН,
		|	&РеквизитКПП КАК КПП
		|ПОМЕСТИТЬ ВТ_ДанныеОрганизации
		|ИЗ
		|	#ТаблицаОрганизации КАК ДанныеОрганизации
		|ГДЕ
		|	ДанныеОрганизации.Ссылка = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДоверенности.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ДоверенностиОрганизации
		|ИЗ
		|	Справочник.МашиночитаемыеДоверенностиОрганизаций КАК ДанныеДоверенности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеОрганизации КАК ДанныеОрганизации
		|		ПО ДанныеДоверенности.Организация = ДанныеОрганизации.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДоверенности.Ссылка
		|ИЗ
		|	Справочник.МЧД003.Доверители КАК ДанныеДоверенности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеОрганизации КАК ДанныеОрганизации
		|		ПО ДанныеДоверенности.ИНН = ДанныеОрганизации.ИНН
		|			И ДанныеДоверенности.КПП = ДанныеОрганизации.КПП
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Хеш КАК Хеш,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Номер КАК Номер,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ВсеДоверители КАК ВсеДоверители,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ВсеПредставители КАК ВсеПредставители,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ДатаВыдачи КАК ДатаВыдачи,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Верна КАК Верна,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Действует КАК Действует,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ПометкаУдаления КАК ПометкаУдаления,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Доверенность,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ДатаИзменения КАК ДатаИзменения,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|				И ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).Подписана = ЛОЖЬ
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексКартинки,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|				И ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).Подписана = ЛОЖЬ
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЧерновик,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|			ТОГДА ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).ПередовериеРазрешено
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПередовериеРазрешено,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|			ТОГДА ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).НомерРодительскойДоверенности
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК НомерРодительскойДоверенности,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|			ТОГДА ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).Подписана
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Подписана,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность.СтатусВРеестреФНС = ЗНАЧЕНИЕ(Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ПустаяСсылка)
		|		ИЛИ (ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность.СтатусВРеестреФНС = ЗНАЧЕНИЕ(Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаРегистрации)
		|			И НЕ ОчередьЗапросовРР.ВидЗапроса ЕСТЬ NULL)
		|			ТОГДА ВЫБОР
		|					КОГДА ОчередьЗапросовРР.ВидЗапроса = ""Регистрация в РР""
		|						ТОГДА ""В очереди на регистрацию""
		|					ИНАЧЕ ""Не зарегистрирована""
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ОчередьЗапросовРР.ВидЗапроса = ""Отзыв в РР""
		|					ТОГДА ""В очереди на отзыв""
		|				ИНАЧЕ ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность.СтатусВРеестреФНС
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусВРеестреФНС,
		|	СТРОКА(100) КАК Передоверие,
		|	НЕОПРЕДЕЛЕНО КАК Доверенности
		|ИЗ
		|	РегистрСведений.ЖурналМашиночитаемыхДоверенностей КАК ЖурналМашиночитаемыхДоверенностейПереопределяемый
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоверенностиОрганизации КАК ДоверенностиОрганизации
		|		ПО ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность = ДоверенностиОрганизации.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередьЗапросовВРеестрМЧДЭДО КАК ОчередьЗапросовРР
		|		ПО ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность = ОчередьЗапросовРР.Доверенность
		|{ГДЕ
		|	(ЖурналМашиночитаемыхДоверенностейПереопределяемый.ПометкаУдаления = &ПоказыватьПомеченныеНаУдаление)}";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РеквизитИНН", СтрШаблон("ДанныеОрганизации.%1",
			ИнтеграцияЭДО.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ИННОрганизации")));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РеквизитКПП", СтрШаблон("ДанныеОрганизации.%1",
			ИнтеграцияЭДО.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("КППОрганизации")));
		СвойстваДинамическогоСписка.ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаОрганизации", СтрШаблон(
			"Справочник.%1", ИнтеграцияЭДО.ИмяПрикладногоСправочника("Организации")));
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваДинамическогоСписка);
		Список.Параметры.УстановитьЗначениеПараметра("Организация", ВыбраннаяОрганизация);
	Иначе
		Элементы.ДекорацияОтборПоОрганизации.Видимость = Ложь;
		СвойстваДинамическогоСписка.ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Хеш КАК Хеш,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Номер КАК Номер,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ВсеДоверители КАК ВсеДоверители,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ВсеПредставители КАК ВсеПредставители,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ДатаВыдачи КАК ДатаВыдачи,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Верна КАК Верна,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Действует КАК Действует,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ПометкаУдаления КАК ПометкаУдаления,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Доверенность,
		|	ЖурналМашиночитаемыхДоверенностейПереопределяемый.ДатаИзменения КАК ДатаИзменения,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|				И ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).Подписана = ЛОЖЬ
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексКартинки,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|				И ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).Подписана = ЛОЖЬ
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЧерновик,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|			ТОГДА ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).ПередовериеРазрешено
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПередовериеРазрешено,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|			ТОГДА ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).НомерРодительскойДоверенности
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК НомерРодительскойДоверенности,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность ССЫЛКА Справочник.МЧД003
		|			ТОГДА ВЫРАЗИТЬ(ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность КАК Справочник.МЧД003).Подписана
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Подписана,
		|	ВЫБОР
		|		КОГДА ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность.СтатусВРеестреФНС = ЗНАЧЕНИЕ(Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ПустаяСсылка)
		|		ИЛИ (ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность.СтатусВРеестреФНС = ЗНАЧЕНИЕ(Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаРегистрации)
		|			И НЕ ОчередьЗапросовРР.ВидЗапроса ЕСТЬ NULL)
		|			ТОГДА ВЫБОР
		|					КОГДА ОчередьЗапросовРР.ВидЗапроса = ""Регистрация в РР""
		|						ТОГДА ""В очереди на регистрацию""
		|					ИНАЧЕ ""Не зарегистрирована""
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ОчередьЗапросовРР.ВидЗапроса = ""Отзыв в РР""
		|					ТОГДА ""В очереди на отзыв""
		|				ИНАЧЕ ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность.СтатусВРеестреФНС
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусВРеестреФНС,
		|	СТРОКА(100) КАК Передоверие,
		|	НЕОПРЕДЕЛЕНО КАК Доверенности
		|ИЗ
		|	РегистрСведений.ЖурналМашиночитаемыхДоверенностей КАК ЖурналМашиночитаемыхДоверенностейПереопределяемый
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередьЗапросовВРеестрМЧДЭДО КАК ОчередьЗапросовРР
		|		ПО ЖурналМашиночитаемыхДоверенностейПереопределяемый.Доверенность = ОчередьЗапросовРР.Доверенность
		|{ГДЕ
		|	(ЖурналМашиночитаемыхДоверенностейПереопределяемый.ПометкаУдаления = &ПоказыватьПомеченныеНаУдаление)}";
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваДинамическогоСписка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	ОформлениеПроблемныхЗаписей = УсловноеОформление.Элементы.Добавить();
	ПоляСписка = ОформлениеПроблемныхЗаписей.Поля.Элементы.Добавить();
	ПоляСписка.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	ГруппаУсловийИ = ОформлениеПроблемныхЗаписей.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаУсловийИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	УсловиеНеЧерновик = ГруппаУсловийИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УсловиеНеЧерновик.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ЭтоЧерновик");
	УсловиеНеЧерновик.ПравоеЗначение = Ложь;
	УсловиеНеЧерновик.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ГруппаУсловий = ГруппаУсловийИ.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаУсловий.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	УсловиеНеВерна = ГруппаУсловий.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УсловиеНеВерна.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Верна");
	УсловиеНеВерна.ПравоеЗначение = Ложь;
	УсловиеНеВерна.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	УсловиеНеДействует = ГруппаУсловий.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УсловиеНеДействует.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Действует");
	УсловиеНеДействует.ПравоеЗначение = Ложь;
	УсловиеНеДействует.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОформлениеПроблемныхЗаписей.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);

	ОформлениеПомеченныхНаУдаление = УсловноеОформление.Элементы.Добавить();
	ПоляСписка = ОформлениеПомеченныхНаУдаление.Поля.Элементы.Добавить();
	ПоляСписка.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	УсловиеПометкаУдаления = ОформлениеПомеченныхНаУдаление.Отбор.Элементы.Добавить(Тип(
		"ЭлементОтбораКомпоновкиДанных"));
	УсловиеПометкаУдаления.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПометкаУдаления");
	УсловиеПометкаУдаления.ПравоеЗначение = Истина;
	УсловиеПометкаУдаления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОформлениеПомеченныхНаУдаление.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ЗачеркнутыйШрифтБЭД);
	
	ОформлениеОшибкиРегистарции = УсловноеОформление.Элементы.Добавить();
	ПоляСписка = ОформлениеОшибкиРегистарции.Поля.Элементы.Добавить();
	ПоляСписка.Поле = Новый ПолеКомпоновкиДанных(Элементы.СтатусВРеестреФНС.Имя);
	УсловиеОшибкаРегистрации = ОформлениеОшибкиРегистарции.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УсловиеОшибкаРегистрации.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СтатусВРеестреФНС");
	УсловиеОшибкаРегистрации.ПравоеЗначение = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаРегистрации;
	УсловиеОшибкаРегистрации.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОформлениеОшибкиРегистарции.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКлассификаторПолномочий002(Команда)
	ОткрытьФорму("Справочник.КлассификаторПолномочийФНСМЧД002.ФормаСписка");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтатусыДоверенности(Ссылка)
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.МЧД003") Тогда
		СтатусыДоверенности = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
			"Подписана, Верна, СтатусВРеестреФНС, ДатаПрекращения, ОписаниеОшибкиРегистрации, ДатаОбновленияСтатуса");
			
		СтатусыДоверенности.Вставить("ДатаОтзыва", СтатусыДоверенности.ДатаПрекращения);
		СтатусыДоверенности.Вставить("Отозвана", СтатусыДоверенности.ДатаПрекращения > Дата(1, 1, 1));
	Иначе
		СтатусыДоверенности = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
			"Подписана, Верна, СтатусВРеестреФНС, ДатаОтзыва, Отозвана, ДатаОбновленияСтатуса");
		СтатусыДоверенности.Вставить("ОписаниеОшибкиРегистрации", Неопределено);
	КонецЕсли;
	
	Возврат СтатусыДоверенности;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьСтрокиСпискаДаннымиОДубляхМЧД(СтрокиСпискаПоХешу, ХешиДляПоискаДублей)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МашиночитаемыеДоверенностиОрганизаций.ХешФайла КАК ХешФайла,
	|	МашиночитаемыеДоверенностиОрганизаций.Ссылка КАК МЧДОрганизаций,
	|	МашиночитаемыеДоверенностиКонтрагентов.Ссылка КАК МЧДКонтрагентов
	|ИЗ
	|	Справочник.МашиночитаемыеДоверенностиОрганизаций КАК МашиночитаемыеДоверенностиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МашиночитаемыеДоверенностиКонтрагентов КАК МашиночитаемыеДоверенностиКонтрагентов
	|		ПО МашиночитаемыеДоверенностиОрганизаций.ХешФайла = МашиночитаемыеДоверенностиКонтрагентов.ХешФайла
	|ГДЕ
	|	МашиночитаемыеДоверенностиКонтрагентов.ХешФайла В(&ХешиДляПоискаДублей)";
	
	Запрос.УстановитьПараметр("ХешиДляПоискаДублей", ХешиДляПоискаДублей);
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СтрокиСпискаПоХешу[Выборка.ХешФайла].Данные.Доверенности <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Доверенности = Новый СписокЗначений();
		Доверенности.Добавить(Выборка.МЧДОрганизаций, НСтр("ru='МЧД от организации'"));
		Доверенности.Добавить(Выборка.МЧДКонтрагентов, НСтр("ru='МЧД от контрагента'"));
		СтрокиСпискаПоХешу[Выборка.ХешФайла].Данные.Доверенности = Доверенности;
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти