#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.ОшибкиВыполненияОтложенныхЗаданий.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.20.4";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("c5401df8-06f9-406c-a8d1-469bbbf06b4d");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ОшибкиВыполненияОтложенныхЗаданий.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Некритичный;
	Обработчик.Комментарий = НСтр("ru = 'Заполняет реквизит ""Хеш аналитики расчета"" в записях регистра ""Ошибки выполнения отложенных заданий"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.ОшибкиВыполненияОтложенныхЗаданий.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.ОшибкиВыполненияОтложенныхЗаданий.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
КонецПроцедуры

// Параметры:
//  Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт 
	
	ПолноеИмяРегистра = "РегистрСведений.ОшибкиВыполненияОтложенныхЗаданий";
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра",			  ПолноеИмяРегистра);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Очередь             КАК Очередь,
	|	Таблица.ИдентификаторОшибки КАК ИдентификаторОшибки
	|ИЗ
	|	РегистрСведений.ОшибкиВыполненияОтложенныхЗаданий КАК Таблица
	|ГДЕ
	|	Таблица.ХешАналитикиРасчета = """"
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить(), ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.ОшибкиВыполненияОтложенныхЗаданий";
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ИмяВременнойТаблицы = "ДанныеДляОбработки";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
					Параметры.Очередь,
					ПолноеИмяРегистра,
					МенеджерВременныхТаблиц,
					ДополнительныеПараметры);
	
	Если Не Результат.ЕстьДанныеДляОбработки Или Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	ТаблицаОчередей = ОтложенныеЗадания.ОчередиЗаданий();
	ТаблицаОчередей.Индексы.Добавить("Очередь");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДляОбработки.Очередь             КАК Очередь,
	|	ДанныеДляОбработки.ИдентификаторОшибки КАК ИдентификаторОшибки
	|ИЗ
	|	ДанныеДляОбработки КАК ДанныеДляОбработки
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("Очередь",             Выборка.Очередь);
			ЭлементБлокировки.УстановитьЗначение("ИдентификаторОшибки", Выборка.ИдентификаторОшибки);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Очередь.Установить(Выборка.Очередь);
			НаборЗаписей.Отбор.ИдентификаторОшибки.Установить(Выборка.ИдентификаторОшибки);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0 И Не ЗначениеЗаполнено(НаборЗаписей[0].ХешАналитикиРасчета) Тогда
				
				НайденныеСтроки  = ТаблицаОчередей.НайтиСтроки(Новый Структура("Очередь", Выборка.Очередь));
				АналитикаРасчета = НайденныеСтроки[0].АналитикаРасчета;
				
				ЗаписьНабора = НаборЗаписей[0];
				ЗаписьНабора.ХешАналитикиРасчета = ОтложенныеЗадания.ХешАналитикиРасчета(
													ЗаписьНабора.ДанныеЗадания.Получить()[0],
													АналитикаРасчета);
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			Иначе
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ШаблонОшибки = НСтр("ru = 'Не удалось заполнить ""Хеш аналитики расчета"" в регистре ""Ошибки выполнения отложенных заданий"":
									   |Очередь: ""%1""
									   |Идентификатор ошибки: ""%2""
									   |
									   |по причине:
									   |%3'");
			
			ТекстОшибки = СтрШаблон(ШаблонОшибки,
										Выборка.Очередь,
										Выборка.ИдентификаторОшибки,
										ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.ОшибкиВыполненияОтложенныхЗаданий,,
				ТекстОшибки);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(
										Параметры.Очередь,
										ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли