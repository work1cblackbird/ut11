#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Удаляет из регистра сведений РегистрацииВНалоговомОргане записи, которые стали
//	некорректными после изменения организации в элементе справочника РегистрацииВНалоговомОргане.
//
//	Параметры:
//		РегистрацияВНалоговомОргане - СправочникОбъект.РегистрацииВНалоговомОргане - регистрация в налоговом органе,
//			для которой необходимо выполнить актуализацию.
//
Процедура АктуализироватьСоставРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Подразделение,
	|	РегистрацииВНалоговомОргане.Организация
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане = &Ссылка
	|	И РегистрацииВНалоговомОргане.Организация.ГоловнаяОрганизация <> &Владелец";
	
	Запрос.УстановитьПараметр("Ссылка",   РегистрацияВНалоговомОргане.Ссылка);
	Запрос.УстановитьПараметр("Владелец", РегистрацияВНалоговомОргане.Владелец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Запись = РегистрыСведений.РегистрацииВНалоговомОргане.СоздатьМенеджерЗаписи();
		Запись.Организация = Выборка.Организация;
		Запись.Подразделение = Выборка.Подразделение;
		
		Запись.Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует временную таблицу, содержащую данные подразделений на дату документа:
// 	* Подразделение
// 	* Организация
// 	* РегистрацияВНалоговомОргане
//
//	Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Организация,
//		Подразделение,
//		Период.
//
Процедура ПоместитьВременнуюТаблицуДанныеПодразделений(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДанныхДокументов.Ссылка                КАК Ссылка,
		|	ДанныеРегистрацийОрганизаций.Подразделение    КАК Подразделение,
		|	ДанныеРегистрацийОрганизаций.Организация      КАК Организация,
		|	МАКСИМУМ(ДанныеРегистрацийОрганизаций.Период) КАК Период
		|ПОМЕСТИТЬ МаксимумыДанныхПодразделений
		|ИЗ
		|	РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеРегистрацийОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
		|		ПО ДанныеРегистрацийОрганизаций.Подразделение = ТаблицаДанныхДокументов.Подразделение
		|		И ДанныеРегистрацийОрганизаций.Организация = ТаблицаДанныхДокументов.Организация
		|		И ДанныеРегистрацийОрганизаций.Период <= ТаблицаДанныхДокументов.Период
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ПО ДанныеРегистрацийОрганизаций.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
		|		И (РегистрацииВНалоговомОргане.ДатаСнятияСУчета > ДанныеРегистрацийОрганизаций.Период
		|		ИЛИ РегистрацииВНалоговомОргане.ДатаСнятияСУчета = ДАТАВРЕМЯ(1, 1, 1))
		|
		|ГДЕ
		|	ДанныеРегистрацийОрганизаций.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДанныхДокументов.Ссылка,
		|	ДанныеРегистрацийОрганизаций.Подразделение,
		|	ДанныеРегистрацийОрганизаций.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Организация,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДанныхДокументов.Ссылка                КАК Ссылка,
		|	ДанныеРегистрацийОрганизаций.Организация      КАК Организация,
		|	МАКСИМУМ(ДанныеРегистрацийОрганизаций.Период) КАК Период
		|ПОМЕСТИТЬ МаксимумыДанныхОрганизаций
		|ИЗ
		|	РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеРегистрацийОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
		|		ПО ДанныеРегистрацийОрганизаций.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|		И ДанныеРегистрацийОрганизаций.Организация = ТаблицаДанныхДокументов.Организация
		|		И ДанныеРегистрацийОрганизаций.Период <= ТаблицаДанныхДокументов.Период
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ПО ДанныеРегистрацийОрганизаций.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
		|		И (РегистрацииВНалоговомОргане.ДатаСнятияСУчета > ДанныеРегистрацийОрганизаций.Период
		|		ИЛИ РегистрацииВНалоговомОргане.ДатаСнятияСУчета = ДАТАВРЕМЯ(1, 1, 1))
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДанныхДокументов.Ссылка,
		|	ДанныеРегистрацийОрганизаций.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимумыДанныхПодразделений.Ссылка                     КАК Ссылка,
		|	РегистрацииВНалоговомОргане.Подразделение               КАК Подразделение,
		|	РегистрацииВНалоговомОргане.Организация                 КАК Организация,
		|	РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
		|ПОМЕСТИТЬ ДанныеПодразделенийПредварительная
		|ИЗ
		|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимумыДанныхПодразделений КАК МаксимумыДанныхПодразделений
		|		ПО (РегистрацииВНалоговомОргане.Подразделение = МаксимумыДанныхПодразделений.Подразделение
		|		И РегистрацииВНалоговомОргане.Организация = МаксимумыДанныхПодразделений.Организация
		|		И РегистрацииВНалоговомОргане.Период = МаксимумыДанныхПодразделений.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Подразделение,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПодразделений.Ссылка                                         КАК Ссылка,
		|	ДанныеПодразделений.Подразделение                                  КАК Подразделение,
		|	ДанныеПодразделений.Организация                                    КАК Организация,
		|	ДанныеПодразделений.РегистрацияВНалоговомОргане                    КАК РегистрацияВНалоговомОргане,
		|	ЕСТЬNULL(РегистрацииВНалоговомОргане.НаименованиеОбособленногоПодразделения, """") КАК НаименованиеОбособленногоПодразделения,
		|	ЕСТЬNULL(РегистрацииКонтактнаяИнформация.Представление, """")      КАК АдресОбособленногоПодразделения
		|ПОМЕСТИТЬ ДанныеПодразделений
		|ИЗ
		|	ДанныеПодразделенийПредварительная КАК ДанныеПодразделений
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ПО ДанныеПодразделений.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане.КонтактнаяИнформация КАК РегистрацииКонтактнаяИнформация
		|		ПО ДанныеПодразделений.РегистрацияВНалоговомОргане = РегистрацииКонтактнаяИнформация.Ссылка
		|			И РегистрацииКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
		|			И РегистрацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресОбособленногоПодразделения)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимумыДанныхОрганизаций.Ссылка                       КАК Ссылка,
		|	РегистрацииВНалоговомОргане.Организация                 КАК Организация,
		|	РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
		|ПОМЕСТИТЬ ДанныеОрганизаций
		|ИЗ
		|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимумыДанныхОрганизаций КАК МаксимумыДанныхОрганизаций
		|		ПО (РегистрацииВНалоговомОргане.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|		И РегистрацииВНалоговомОргане.Организация = МаксимумыДанныхОрганизаций.Организация
		|		И РегистрацииВНалоговомОргане.Период = МаксимумыДанныхОрганизаций.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МаксимумыДанныхПодразделений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МаксимумыДанныхОрганизаций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеПодразделенийПредварительная";
	
	РезультатЗапроса = Запрос.Выполнить();
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	ДобавитьОбработчикЗаполнениеРеквизитовКрупнейшегоНалогоплательщика(Обработчики);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ДобавитьОбработчикЗаполнениеРеквизитовКрупнейшегоНалогоплательщика(Обработчики)
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.РегистрацииВНалоговомОргане.ОбработатьЗаполнениеРеквизитовКрупнейшегоНалогоплательщика";
	Обработчик.Версия = "2.5.19.16";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("94087eb4-e9b3-40e4-95a0-a701d9629e65");
	Обработчик.ПроцедураЗаполненияДанныхОбновления =
		"РегистрыСведений.РегистрацииВНалоговомОргане.ЗарегистрироватьДанныеКЗаполнениюРеквизитовКрупнейшегоНалогоплательщика";
	Обработчик.ПроцедураПроверки = "РегистрыСведений.РегистрацииВНалоговомОргане.РегистрацииКрупнейшихНалогоплательщиковОбновлены";
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Обычный;
	
	Обработчик.Комментарий = 
		НСтр("ru = 'Переносит из регистра ""История регистраций в налоговом органе"" в регистр 
					|""История регистраций в налоговом органе в качестве крупнейшего налогоплательщика"" 
					|записи регистраций крупнейших налогоплательщиков.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.РегистрацииВНалоговомОргане.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.РегистрацииВНалоговомОргане.ПолноеИмя());
	Изменяемые.Добавить(Метаданные.РегистрыСведений.КрупнейшийНалогоплательщикИсторияРегистрацийВНалоговомОргане.ПолноеИмя());
	Изменяемые.Добавить(Метаданные.Справочники.Организации.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.РегистрацииВНалоговомОргане.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
КонецПроцедуры

// Зарегистрировать данные к заполнению реквизитов крупнейшего налогоплательщика.
// 
// Параметры:
//  Параметры - Структура - Параметры
Процедура ЗарегистрироватьДанныеКЗаполнениюРеквизитовКрупнейшегоНалогоплательщика(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.РегистрацииВНалоговомОргане";
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"// Регистрации в качестве крупнейшего налогоплательщика с КПП хххх50ххх.
	|ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Период,
	|	РегистрацииВНалоговомОргане.Организация,
	|	РегистрацииВНалоговомОргане.Подразделение
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	ПОДСТРОКА(РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане.КПП, 5, 2) = ""50""
	|	И РегистрацииВНалоговомОргане.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)";
	
	Данные = Запрос.Выполнить().Выгрузить();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

// Обработать заполнение реквизитов крупнейшего налогоплательщика.
// 
// Параметры:
//  Параметры - Структура -  :
// * Очередь - Число - 
// * ЗаписьИзмененийДляПодчиненногоУзлаРИБСФильтрами - ЗаписьFastInfoset - 
// * ПараметрыВыборки - Структура - 
// - См. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
Процедура ОбработатьЗаполнениеРеквизитовКрупнейшегоНалогоплательщика(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.РегистрацииВНалоговомОргане;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();

	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТДанныеДляОбработки";
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь,
		ПолноеИмяОбъекта,
		МенеджерВременныхТаблиц,
		ДополнительныеПараметры);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДляОбработки.Период КАК Период,
	|	ДанныеДляОбработки.Организация КАК Организация,
	|	ДанныеДляОбработки.Подразделение
	|ИЗ
	|	ВТДанныеДляОбработки КАК ДанныеДляОбработки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
			
			Попытка
				
				// Добавляем запись в регистр КрупнейшийНалогоплательщикИсторияРегистрацийВНалоговомОргане.
				БлокировкаДанных = Новый БлокировкаДанных;
				
				ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.РегистрацииВНалоговомОргане");
				ЭлементБлокировкиДанных.УстановитьЗначение("Период", Выборка.Период);
				ЭлементБлокировкиДанных.УстановитьЗначение("Организация", Выборка.Организация);
				ЭлементБлокировкиДанных.УстановитьЗначение("Подразделение", Выборка.Подразделение);
				ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Разделяемый;
				
				ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.КрупнейшийНалогоплательщикИсторияРегистрацийВНалоговомОргане");
				ЭлементБлокировкиДанных.УстановитьЗначение("Период", Выборка.Период);
				ЭлементБлокировкиДанных.УстановитьЗначение("СтруктурнаяЕдиница", Выборка.Организация);
				ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
				
				БлокировкаДанных.Заблокировать();
				
				ОтборРегистра = Новый Структура;
				ОтборРегистра.Вставить("Организация", Выборка.Организация);
				ОтборРегистра.Вставить("Подразделение", Выборка.Подразделение);
				ДанныеРегистра = РегистрыСведений.РегистрацииВНалоговомОргане.СрезПоследних(Выборка.Период, ОтборРегистра);
				
				НаборЗаписей = РегистрыСведений.КрупнейшийНалогоплательщикИсторияРегистрацийВНалоговомОргане.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
				НаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(Выборка.Организация);
				
				Если ДанныеРегистра.Количество() > 0 Тогда
					
					НоваяЗапись = НаборЗаписей.Добавить();
					НоваяЗапись.Период = Выборка.Период;
					НоваяЗапись.СтруктурнаяЕдиница = Выборка.Организация;
					НоваяЗапись.РегистрацияВНалоговомОргане = ДанныеРегистра[0].РегистрацияВНалоговомОргане;
					
				КонецЕсли;
				
				// Добавляем дополнительное свойство, для последующего исключения выполнения
				//    обработки в процедуре ЗакрытиеМесяцаСервер.ПроверитьНеобходимостьПереоценки
				НаборЗаписей.ДополнительныеСвойства.Вставить("ЗаписьПриОбновленииИнформационнойБазы");
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
				// Удаляем перенесенную в новый регистр запись.
				УдалениеЗаписей = РегистрыСведений.РегистрацииВНалоговомОргане.СоздатьНаборЗаписей();
				УдалениеЗаписей.Отбор.Период.Установить(Выборка.Период);
				УдалениеЗаписей.Отбор.Организация.Установить(Выборка.Организация);
				УдалениеЗаписей.Отбор.Подразделение.Установить(Выборка.Подразделение);
				
				УдалениеЗаписей.ДополнительныеСвойства.Вставить("ЗаписьПриОбновленииИнформационнойБазы");
				
				УдалениеЗаписей.Прочитать();
				УдалениеЗаписей.Очистить();
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(УдалениеЗаписей);
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				ИмяНовогоРегистра = Метаданные.РегистрыСведений.КрупнейшийНалогоплательщикИсторияРегистрацийВНалоговомОргане.ПолноеИмя();
				ТекстСообщения = НСтр("ru = 'Не удалось записать данные в регистр %ИмяРегистра% по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ИмяНовогоРегистра);
				
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта, Неопределено, ТекстСообщения);
				
				ВызватьИсключение;
				
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

// Регистрации крупнейших налогоплательщиков обновлены.
// Функция для проверки объектов при открытии форм и перед записью.
// 
// Параметры:
//  Параметры - Структура - :
// * Данные - СправочникОбъект, ДокументОбъект, ПланВидовХарактеристикОбъект, ПланСчетовОбъект, ПланВидовРасчетаОбъект, РегистрСведенийНаборЗаписей, РегистрНакопленияНаборЗаписей, РегистрБухгалтерииНаборЗаписей, РегистрРасчетаНаборЗаписей, ЛюбаяСсылка, ДанныеФормыСтруктура - 
// * МетаданныеОбъекта - ОбъектМетаданных - 
// * ПолноеИмя - Строка - 
// * Отбор - ЛюбаяСсылка, Структура - 
// * ЭтоНовый - Булево - 
// - См. ОбновлениеИнформационнойБазы.МетаданныеИОтборПоДанным.
// 
// Возвращаемое значение:
//  Булево - Регистрации крупнейших налогоплательщиков обновлены
Функция РегистрацииКрупнейшихНалогоплательщиковОбновлены(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"// Регистрации в качестве крупнейшего налогоплательщика с КПП хххх50ххх.
	|ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Период,
	|	РегистрацииВНалоговомОргане.Организация,
	|	РегистрацииВНалоговомОргане.Подразделение
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	ПОДСТРОКА(РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане.КПП, 5, 2) = ""50""
	|	И РегистрацииВНалоговомОргане.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Пустой();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
