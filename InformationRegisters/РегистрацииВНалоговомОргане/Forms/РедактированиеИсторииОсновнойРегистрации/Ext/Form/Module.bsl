
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ВедущийОбъект", ВедущийОбъект);
	Если Не ЗначениеЗаполнено(ВедущийОбъект) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Параметры.Свойство("ВладелецРегистрацииВНалоговомОргане", ВладелецРегистрацииВНалоговомОргане);
	Если Не ЗначениеЗаполнено(ВладелецРегистрацииВНалоговомОргане) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.РегистрацииВНалоговомОргане) Тогда
		
		ТолькоПросмотр = Истина;
		
	КонецЕсли; 
	
	Если ТолькоПросмотр Тогда
		
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
	НаборЗаписей.Загрузить(Параметры.ИсторияРегистрацииВНалоговомОргане.Выгрузить());
	
	УпорядочитьПоПериоду(НаборЗаписей, ДатаОтсчетаПериодическихСведений);
	
	Если НаборЗаписей.Количество() > 0 Тогда
		Элементы.НаборЗаписей.ТекущаяСтрока = НаборЗаписей[НаборЗаписей.Количество()-1].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНаборЗаписей

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
	
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			
			Элемент.ТекущиеДанные.Организация = ВедущийОбъект;
			Элемент.ТекущиеДанные.РегистрацияВНалоговомОргане = ПредопределенноеЗначение("Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка");
			
			НовыйПериод = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
			
			Если НаборЗаписей.Количество() > 1 Тогда
				ПоследнийПериод = НаборЗаписей.Получить(1).Период;
			Иначе
				ПоследнийПериод = '00010101000000';
			КонецЕсли;
			
			Если НовыйПериод <= ПоследнийПериод Тогда
				НовыйПериод = НачалоДня(ПоследнийПериод + 60*60*24);
			КонецЕсли;
			
			Элемент.ТекущиеДанные.Период = НовыйПериод;
			
			ТекущийЭлемент = Элементы.НаборЗаписейРегистрацияВНалоговомОргане;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	УпорядочитьПоПериоду(НаборЗаписей, ДатаОтсчетаПериодическихСведений);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередУдалением(Элемент, Отказ)
	
	Если НаборЗаписей.Индекс(Элемент.ТекущиеДанные) = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Отказ = Ложь;
	
	ПроверитьЗаполнениеИстории(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрОповещения = Новый Структура(
		"ВедущийОбъект, ИмяРегистра, ИсторияРегистрацииВНалоговомОргане", 
		ВедущийОбъект, "РегистрацииВНалоговомОргане", НаборЗаписей);
	Оповестить("РедактированиеИсторииОсновнойРегистрации", ПараметрОповещения, ВедущийОбъект);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УпорядочитьПоПериоду(ТаблицаИстории, ДатаОтсчетаПериодическихСведений)
	
	ТаблицаИстории.Сортировать("Период");
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеИстории(Отказ)
	
	ПериодыСтрок = Новый Массив;
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		ИндексСтроки = НаборЗаписей.Индекс(Запись);
		ПрефиксСообщенияСтроки = "НаборЗаписей["+Формат(ИндексСтроки, "ЧЦ=; ЧДЦ=; ЧГ=")+"].";
		
		Если НЕ ЗначениеЗаполнено(Запись.Период) И ИндексСтроки > 0 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Нужно указать дату начала действия'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки+"Период", , Отказ);
		КонецЕсли;
		
		Если ПериодыСтрок.Найти(Запись.Период) = Неопределено Тогда
			Если ЗначениеЗаполнено(Запись.Период) Тогда
				ПериодыСтрок.Добавить(Запись.Период);
			КонецЕсли;
		Иначе
			СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "Период", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись.РегистрацияВНалоговомОргане) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Поле ""Регистрация в налоговом органе"" не заполнено'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "РегистрацияВНалоговомОргане", , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти