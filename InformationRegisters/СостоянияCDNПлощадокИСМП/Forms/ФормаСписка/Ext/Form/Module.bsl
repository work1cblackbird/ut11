
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьПараметрТекущейДаты();
	ПодключитьОбработчикОжидания("ОбновлениеАктуальностиПлощадок", 30, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборСтрокПриИзменении(Элемент)
	
	УстановитьОтборСтрок();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Для Каждого Строка Из Строки Цикл
		
		Строка.Значение.Данные.ДатаОбновления = МестноеВремя(Строка.Значение.Данные.ДатаОбновленияУниверсальная);
		
		Если ЗначениеЗаполнено(Строка.Значение.Данные.ДатаНедоступнаДоУниверсальная) Тогда
			Строка.Значение.Данные.ДатаНедоступнаДо = МестноеВремя(Строка.Значение.Данные.ДатаНедоступнаДоУниверсальная);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Актуализировать(Команда)
	
	ОчиститьСообщения();
	
	ПослеВыполненияОбновления = Новый ОписаниеОповещения("ПослеАктуализацииСпискаПлощадок", ЭтотОбъект);
	
	ПараметрыЗапроса                         = ИнтерфейсИСМПОбщегоНазначенияКлиент.ПараметрыЗапросаДанных();
	ПараметрыЗапроса.ОповещениеОЗавершении   = ПослеВыполненияОбновления;
	ПараметрыЗапроса.УникальныйИдентификатор = УникальныйИдентификатор;
	ПараметрыЗапроса.Параметры               = Новый Структура("ОбновлятьБезПроверкиДатыОбновления", Истина);
	
	ИнтерфейсИСМПОбщегоНазначенияКлиент.АктуализацияСпискаCDNПлощадок(ПараметрыЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеАктуализацииСпискаПлощадок(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.ЕстьОшибки И ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ТекстОшибки);
		
	ИначеЕсли Результат.ЕстьОшибки Тогда
		
		ОткрытьФорму("РегистрСведений.СостоянияCDNПлощадокИСМП.Форма.ФормаОшибкиАвторизации",,,,,,,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		Возврат;
		
	КонецЕсли;
	
	ОбновитьПараметрТекущейДаты();
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПараметрТекущейДаты()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
		"ТекущаяДатаУниверсальная",
		ОбщегоНазначенияКлиент.ДатаУниверсальная());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеАктуальностиПлощадок() Экспорт
	ОбновитьПараметрТекущейДаты();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСтрок()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
		"Активна",
		Истина,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ОтборСтрок = "Активные");
	
КонецПроцедуры

#КонецОбласти