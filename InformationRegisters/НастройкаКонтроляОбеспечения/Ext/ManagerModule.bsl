#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает настройку контроля обеспечения склада
//
//	Параметры:
//		Склад - СправочникСсылка.Склады - склад, для которого необходимо получить настройку контроля обеспечения
//	Возвращаемое значение:
//		Булево - настройка контроля обеспечения склада. Неопределено, если настройка отсутствует.
//
Функция НастройкаСклада(Склад) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Настройка.КонтролироватьСвободныеОстатки  КАК КонтролироватьСвободныеОстатки
	|ИЗ
	|	РегистрСведений.НастройкаКонтроляОбеспечения КАК Настройка
	|ГДЕ
	|	Настройка.Склад = &Склад
	|	И Настройка.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И Настройка.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)");

	Запрос.УстановитьПараметр("Склад", Склад);

	Выборка = Запрос.Выполнить().Выбрать();
	Результат = Новый Структура("КонтролироватьСвободныеОстатки");
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Сохраняет настройку контроля обеспечения склада
//
//	Параметры:
//		Склад                           - СправочникСсылка.Склады - склад, для которого необходимо сохранить настройку контроля обеспечения
//		КонтролироватьСвободныеОстатки  - Булево                  - необходимость контроля свободного остатка по складу, сохраняемое значение.
//                                                                  под потребности заказов с действием "К обеспечению".
//
Процедура УстановитьНастройку(Склад, КонтролироватьСвободныеОстатки) Экспорт

	НастройкаКонтроляСвободногоОстатка = НастройкаСклада(Склад);

	Если НастройкаКонтроляСвободногоОстатка.КонтролироватьСвободныеОстатки <> КонтролироватьСвободныеОстатки Тогда

		МенеджерЗаписи = РегистрыСведений.НастройкаКонтроляОбеспечения.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Склад                                   = Склад;
		МенеджерЗаписи.КонтролироватьСвободныеОстатки          = КонтролироватьСвободныеОстатки;

		МенеджерЗаписи.Записать();

	КонецЕсли;

КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Склад)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли
