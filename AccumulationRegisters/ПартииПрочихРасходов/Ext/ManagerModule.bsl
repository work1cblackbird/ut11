#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает текст запроса с типовой структурой временной таблицы "ВтИсходныеПрочиеРасходы".
//
// Параметры:
//  ДополнительныеПоля	 - Строка	 - Список дополнительный полей.
//  
// Возвращаемое значение:
//	Строка - Текст запроса формирования временной таблицы ВтИсходныеПрочиеРасходы.
//
Функция ТекстОписаниеВтИсходныеПартииПрочихРасходов(ДополнительныеПоля = "") Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	Строки.Период,
	|	Строки.ВидДвижения,
	|	Строки.Организация,
	|	Строки.Подразделение,
	|	Строки.СтатьяРасходов,
	|	Строки.АналитикаРасходов,
	|	Строки.АналитикаАктивовПассивов,
	|	Строки.ДокументПоступленияРасходов,
	|	Строки.АналитикаУчетаПартий,
	|	Строки.НаправлениеДеятельности,
	|	Строки.АналитикаУчетаНоменклатуры,
	|	Строки.ВидДеятельностиНДС,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	Строки.ХозяйственнаяОперация,
	|	
	|	Строки.ИдентификаторФинЗаписи,
	|	Строки.НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК Строки
	|";
	
	ДобавитьДополнительныеПоляВТекстЗапроса(ДополнительныеПоля, ТекстЗапроса);
	
	Возврат ТекстЗапроса
	
КонецФункции

// Формирует текст запроса для формирования временной таблицы "ВтПартииПрочихРасходов".
//
// Параметры:
//  ДополнительныеПоля	 - Строка	 - Список дополнительный полей.
//  ВозможныРазныеПериодыВДвижениях - Булево - определяет где хранятся параметры партионного учета, в параметрах запроса или во временной таблице ВТПараметрыПартионногоУчетаДляПроведения
//  
// Возвращаемое значение:
//	Строка - Текст запроса формирования временной таблицы ВтПартииПрочихРасходов.
//
Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(ДополнительныеПоля = "", ВозможныРазныеПериодыВДвижениях = Ложь) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|	ВтИсходныеПартииПрочихРасходов.АналитикаРасходов КАК АналитикаРасходов,
	|	МАКСИМУМ(РеестрДокументов.Организация) КАК Организация
	|
	|ПОМЕСТИТЬ ВтРеестрДокументовПартииПрочихРасходов
	|ИЗ 
	|	ВтИсходныеПартииПрочихРасходов КАК ВтИсходныеПартииПрочихРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|			ПО ВтИсходныеПартииПрочихРасходов.АналитикаРасходов = РеестрДокументов.Ссылка
	|ГДЕ
	|	(РеестрДокументов.Ссылка ССЫЛКА Документ.ВводОстатков
	|	ИЛИ РеестрДокументов.Ссылка ССЫЛКА Документ.ВводОстатковПрочиеРасходы
	|	ИЛИ РеестрДокументов.Ссылка ССЫЛКА Документ.ЗаказНаПеремещение
	|	ИЛИ РеестрДокументов.Ссылка ССЫЛКА Документ.ЗаказНаСборку
	|	ИЛИ РеестрДокументов.Ссылка ССЫЛКА Документ.ЗаказПоставщику
	|	ИЛИ РеестрДокументов.Ссылка ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|	ИЛИ РеестрДокументов.Ссылка ССЫЛКА Документ.СборкаТоваров)
	|	И НЕ РеестрДокументов.ДополнительнаяЗапись
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтИсходныеПартииПрочихРасходов.АналитикаРасходов
	|;
	|
	|ВЫБРАТЬ
	|	Строки.Период КАК Период,
	|	Строки.ВидДвижения КАК ВидДвижения,
	|	Строки.Организация КАК Организация,
	|	Строки.Подразделение КАК Подразделение,
	|	Строки.СтатьяРасходов КАК СтатьяРасходов,
	|	Строки.АналитикаРасходов КАК АналитикаРасходов,
	|	Строки.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Строки.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Строки.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НаправленияДеятельности.УчетЗатрат, ЛОЖЬ)
	|			ТОГДА Строки.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА Строки.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидДеятельностиНДС,
	|
	|	(ВЫБОР
	|		КОГДА Статья.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА Строки.Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА Статья.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА Строки.СтоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР
	//++ Локализация
	|		КОГДА &СписыватьНДСПоРасходамНеПринимаемымВНУ И НЕ Статья.ПринятиеКНалоговомуУчету ТОГДА 0
	//-- Локализация
	|		КОГДА &УправленческийУчетОрганизаций
	|			И (Статья.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	//++ Локализация
	|				ИЛИ (Статья.ВариантРаспределенияРасходовУпр В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|			 		И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	//-- Локализация
	|				)
	|			ТОГДА Строки.НДСУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК НДСУпр,
	|
	|	(ВЫБОР 
	|		КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА 0
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	//++ Локализация
	|			ИЛИ (Статья.ВариантРаспределенияРасходовРегл В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|				И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	//-- Локализация
	|			ТОГДА Строки.СтоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	(ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА 0
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 И НЕ Статья.ПринятиеКналоговомуУчету
	|			ТОГДА Строки.СтоимостьРегл - Строки.ВременнаяРазница
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА Строки.ПостояннаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазница,
	|	(ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА 0
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА Строки.ВременнаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазница,
	|	(ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА 0
	//++ Локализация
	|		КОГДА &СписыватьНДСПоРасходамНеПринимаемымВНУ И НЕ Статья.ПринятиеКНалоговомуУчету ТОГДА 0
	//-- Локализация
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	//++ Локализация
	|			ИЛИ (Статья.ВариантРаспределенияРасходовРегл В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|				И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	//-- Локализация
	|			ТОГДА Строки.НДСРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК НДСРегл,
	|	Строки.ХозяйственнаяОперация,
	|		
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПередачаТоваровМеждуОрганизациями).ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ПеремещениеТоваров)
	|		 И ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПеремещениеТоваров).ХозяйственнаяОперация
	|				= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(Строки.АналитикаРасходов) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПеремещениеТоваров).Организация
	|		КОГДА ЕСТЬNULL(ВтРеестрДокументов.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) 
	|				<> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВтРеестрДокументов.Организация
	|		ИНАЧЕ Строки.Организация
	|	КОНЕЦ КАК ОрганизацияПолучатель,
	|
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Строки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ПОМЕСТИТЬ ВтПартииПрочихРасходов
	|ИЗ
	|	ВтИсходныеПартииПрочихРасходов КАК Строки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|		ПО Статья.Ссылка = Строки.СтатьяРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|		ПО НаправленияДеятельности.Ссылка = Строки.НаправлениеДеятельности
	|	ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК ТаблицаКонстанты ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтРеестрДокументовПартииПрочихРасходов КАК ВтРеестрДокументов
	|		ПО Строки.АналитикаРасходов = ВтРеестрДокументов.АналитикаРасходов
	// Условие выборки записей должны соответствовать функциям:
	// РасчетСебестоимостиПодготовкаДанных.ТекстЗапросаСтатьиСРаздельнымУчетомНДСВРегистреПартииПрочихРасходов()
	// УчетНДСУП.ОтразитьПриобретениеУПоставщика()
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И (Статья.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			И (&ДетализироватьМатериальныеИПостатейныеЗатратыВСебестоимостиТоваров
	|				ИЛИ &РаздельныйУчетТоваровПоНалогообложениюНДС
	//++ Локализация
	|				ИЛИ &РаздельныйУчетТоваровУСН
	|				ИЛИ НЕ &ПартионныйУчетВерсии22
	|				ИЛИ &ПлательщикНДД
	|
	//-- Локализация
	|			)
	|		ИЛИ Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			И (&ДетализироватьМатериальныеИПостатейныеЗатратыВСебестоимостиТоваров
	|				ИЛИ &РаздельныйУчетТоваровПоНалогообложениюНДС
	//++ Локализация
	|				ИЛИ &РаздельныйУчетТоваровУСН
	|				ИЛИ НЕ &ПартионныйУчетВерсии22
	|				ИЛИ &ПлательщикНДД
	|
	//-- Локализация
	|			)
	//++ Локализация
	|		ИЛИ (Статья.ВариантРаспределенияРасходовУпр В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|			 И Статья.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			 И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	|		ИЛИ (Статья.ВариантРаспределенияРасходовРегл В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|			 И Статья.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			 И &РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС)
	//-- Локализация
	|	)
	|";
	
	ТекстСоединения = "ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК ТаблицаКонстанты ПО ИСТИНА";
	
	Если НЕ ВозможныРазныеПериодыВДвижениях Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстСоединения, "");
		
	Иначе
		
		// Параметры партионного учета хранятся не в параметрах запроса, а в одноименных полях временной таблицы ВТПараметрыПартионногоУчетаДляПроведения.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстСоединения,
			"ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПараметрыПартионногоУчетаДляПроведения КАК ПараметрыПартионногоУчета
			|	ПО ПараметрыПартионногоУчета.Период = НАЧАЛОПЕРИОДА(Строки.Период, МЕСЯЦ)
			|	 И ПараметрыПартионногоУчета.Организация = Строки.Организация");
		
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить("ИспользоватьУчетПрочихДоходовРасходовРегл");
		МассивПараметров.Добавить("ИспользоватьУчетПрочихДоходовРасходов");
		МассивПараметров.Добавить("ПартионныйУчетВерсии22");
		МассивПараметров.Добавить("УправленческийУчетОрганизаций");
		МассивПараметров.Добавить("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС");
		МассивПараметров.Добавить("РаздельныйУчетТоваровПоНалогообложениюНДС");
		МассивПараметров.Добавить("РаздельныйУчетТоваровУСН");
		МассивПараметров.Добавить("ДетализироватьМатериальныеИПостатейныеЗатратыВСебестоимостиТоваров");
		МассивПараметров.Добавить("СписыватьНДСПоРасходамНеПринимаемымВНУ");
		МассивПараметров.Добавить("ПлательщикНДД");
		
		Для Каждого ТекущийПараметр Из МассивПараметров Цикл
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&" + ТекущийПараметр, "ПараметрыПартионногоУчета." + ТекущийПараметр);
		КонецЦикла;
		
	КонецЕсли;
	
	ДобавитьДополнительныеПоляВТекстЗапроса(ДополнительныеПоля, ТекстЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса для формирования движений по регистру "Партии прочих расходов".
//
// Параметры:
//  ДополнительныеПоля	 - Строка	 - Список дополнительный полей.
//  
// Возвращаемое значение:
//	Строка - Текст запроса формирования таблицы ПартииПрочихРасходов.
//
Функция ТекстЗапросаТаблицаПартииПрочихРасходов(ДополнительныеПоля = "") Экспорт
	
	ТекстЗапроса = "
	// Формирование таблицы для записи в регистр "ПартииПрочихРасходов".
	|ВЫБРАТЬ
	|	Строки.Период КАК Период,
	|	Строки.ВидДвижения КАК ВидДвижения,
	|	Строки.Организация КАК Организация,
	|	Строки.Подразделение КАК Подразделение,
	|	Строки.СтатьяРасходов КАК СтатьяРасходов,
	|	Строки.АналитикаРасходов КАК АналитикаРасходов,
	|	Строки.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Строки.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Строки.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Строки.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	Строки.Стоимость КАК Стоимость,
	|	Строки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	Строки.НДСУпр КАК НДСУпр,
	|
	|	Строки.СтоимостьРегл КАК СтоимостьРегл,
	|	Строки.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Строки.ВременнаяРазница КАК ВременнаяРазница,
	|	Строки.НДСРегл КАК НДСРегл,
	|
	|	Строки.ХозяйственнаяОперация,
	|
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Строки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ИЗ
	|	ВтПартииПрочихРасходов КАК Строки
	|ГДЕ
	|	(Строки.Стоимость <> 0 ИЛИ Строки.СтоимостьБезНДС <> 0 ИЛИ Строки.НДСУпр <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0 ИЛИ Строки.НДСРегл <> 0
	|		ИЛИ Строки.ПостояннаяРазница <> 0 ИЛИ Строки.ВременнаяРазница <> 0)
	//++ Локализация
	
	// Сторнирование расходов в упр. учете у организации - источника.
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Строки.Период КАК Период,
	|	Строки.ВидДвижения КАК ВидДвижения,
	|	Строки.Организация КАК Организация,
	|	Строки.Подразделение КАК Подразделение,
	|	Строки.СтатьяРасходов КАК СтатьяРасходов,
	|	Строки.АналитикаРасходов КАК АналитикаРасходов,
	|	Строки.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Строки.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Строки.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Строки.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	-Строки.Стоимость КАК Стоимость,
	|	-Строки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-Строки.НДСУпр КАК НДСУпр,
	|
	|	0 КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеРасходовУУ) КАК ХозяйственнаяОперация,
	|
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Строки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ИЗ
	|	ВтПартииПрочихРасходов КАК Строки
	|ГДЕ
	|	Строки.ОрганизацияПолучатель <> Строки.Организация
	|	И (Строки.Стоимость <> 0 ИЛИ Строки.СтоимостьБезНДС <> 0 ИЛИ Строки.НДСУпр <> 0)
	|	И Строки.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРасходов)
	|
	// Регистрация расходов в упр. учете у организации - получателя.
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Строки.Период КАК Период,
	|	Строки.ВидДвижения КАК ВидДвижения,
	|	Строки.ОрганизацияПолучатель КАК Организация,
	|	Строки.Подразделение КАК Подразделение,
	|	Строки.СтатьяРасходов КАК СтатьяРасходов,
	|	Строки.АналитикаРасходов КАК АналитикаРасходов,
	|	Строки.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Строки.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Строки.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Строки.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	Строки.Стоимость КАК Стоимость,
	|	Строки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РегистрацияРасходовУУ) КАК ХозяйственнаяОперация,
	|
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Строки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|	,&ДополнительныеПоля
	|
	|ИЗ
	|	ВтПартииПрочихРасходов КАК Строки
	|ГДЕ
	|	Строки.ОрганизацияПолучатель <> Строки.Организация
	|	И (Строки.Стоимость <> 0 ИЛИ Строки.СтоимостьБезНДС <> 0 ИЛИ Строки.НДСУпр <> 0)
	|	И Строки.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРасходов)
	//-- Локализация
	|";
	
	ДобавитьДополнительныеПоляВТекстЗапроса(ДополнительныеПоля, ТекстЗапроса);
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует часть текста запроса получения значения поля ОрганизацияПолучатель.
//
// Возвращаемое значение:
//	Строка - Текст запроса формирования значения поля ОрганизацияПолучатель.
//
Функция ТекстЗапросаЗначениеПоляОрганизацияПолучатель(ИмяТаблицы = "") Экспорт
	
	ТекстЗапроса = "
	|	ВЫБОР
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Справочник.Организации
	|			ТОГДА Строки.АналитикаРасходов
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.АктВыполненныхРабот
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.АктВыполненныхРабот).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ВводОстатков
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ВводОстатков).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ВводОстатковПрочиеРасходы
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ВводОстатковПрочиеРасходы).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказКлиента).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаказНаПеремещение
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказНаПеремещение).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаказНаСборку
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказНаСборку).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаказПоставщику
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаказПоставщику).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПередачаТоваровМеждуОрганизациями).ОрганизацияПолучатель
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ПеремещениеТоваров
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПеремещениеТоваров).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.ПриобретениеТоваровУслуг).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.РеализацияТоваровУслуг).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.РеализацияУслугПрочихАктивов
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.РеализацияУслугПрочихАктивов).Организация
	|		КОГДА Строки.АналитикаРасходов ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА ВЫРАЗИТЬ(Строки.АналитикаРасходов КАК Документ.СборкаТоваров).Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|";
	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Строки", ИмяТаблицы);
	КонецЕсли;
	Возврат ТекстЗапроса;
	
КонецФункции

// Собирает структуру из текстов запросов для дальнейшей проверки даты запрета.
// 
// Параметры:
// 	Запрос - Запрос - Запрос по проверке даты запрета, можно установить параметры
// Возвращаемое значение:
// 	Структура - см. ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов
Функция ТекстЗапросаКонтрольДатыЗапрета(Запрос) Экспорт
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	ИмяТаблицыИзменений = "ТаблицаИзмененийПартииПрочихРасходов"; 
	СтруктураТекстовЗапросов = ПроведениеДокументов.ШаблонТекстЗапросаКонтрольДатыЗапрета(Запрос, 
		ИмяРегистра, 
		ИмяТаблицыИзменений, 
		"ФинансовыйКонтур");
	Возврат СтруктураТекстовЗапросов

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.ПартииПрочихРасходов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.20.26";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Некритичный;
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("c56328a6-17fd-4f9a-9de3-71a532bad5ab");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПартииПрочихРасходов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заменяет аналитику активов/пассивов с перечисления ""типы налогов"" на справочник ""виды налогов и взносов"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра	= "РегистрНакопления.ПартииПрочихРасходов";
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Период УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Период УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииПрочихРасходов.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|ГДЕ
	|	ПартииПрочихРасходов.АналитикаАктивовПассивов ССЫЛКА Перечисление.УдалитьТипыНалогов";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

// Обработчик обновления
// 
// Параметры:
// 	Параметры - См. ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляМногопоточнойОбработки 
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.ПолноеИмя();
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяРегистра);
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекущиеДанные Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииПрочихРасходов.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ТекущиеДанные.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ТекущиеДанные.Регистратор);
			НаборЗаписей.Прочитать();
			
			Для каждого Запись Из НаборЗаписей Цикл
				Запись.АналитикаАктивовПассивов = Перечисления.УдалитьТипыНалогов.СсылкаВидыНалоговВзносовПоТипуНалогов(Запись.АналитикаАктивовПассивов);
			КонецЦикла;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), ТекущиеДанные.Регистратор);
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

Процедура ДобавитьДополнительныеПоляВТекстЗапроса(ДополнительныеПоля, ТекстЗапроса)

	Если НЕ ЗначениеЗаполнено(ДополнительныеПоля) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ДополнительныеПоля", "");
		Возврат;
	КонецЕсли; 
	
	ТекстДополнительныеПоля = "";
	
	СписокПолей = СтрРазделить(ДополнительныеПоля, ",");
	Для каждого ИмяПоля Из СписокПолей Цикл
		ТекстДополнительныеПоля = ТекстДополнительныеПоля + "
		|	,Строки." + ИмяПоля;
	КонецЦикла; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ДополнительныеПоля", ТекстДополнительныеПоля); 

КонецПроцедуры

#КонецОбласти

#КонецЕсли
