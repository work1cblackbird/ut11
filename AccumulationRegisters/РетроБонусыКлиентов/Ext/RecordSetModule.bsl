//@strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
	 ИЛИ НЕ ПроведениеДокументов.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу "ДвиженияОстаткиРетроБонусыКлиентовПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно текущего
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Организация КАК Организация,
	|	Таблица.Контрагент КАК Контрагент,
	|	Таблица.Партнер КАК Партнер,
	|	Таблица.НачалоПериода КАК НачалоПериода,
	|	Таблица.ОкончаниеПериода КАК ОкончаниеПериода,
	|	Таблица.ДокументУсловий КАК ДокументУсловий,
	|	Таблица.Валюта КАК Валюта,
	|	СУММА(ВЫБОР
	|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Таблица.СуммаБонус
	|		ИНАЧЕ -Таблица.СуммаБонус
	|	КОНЕЦ) КАК СуммаБонусПередЗаписью,
	|	СУММА(ВЫБОР
	|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Таблица.КАктированию
	|		ИНАЧЕ -Таблица.КАктированию
	|	КОНЕЦ) КАК КАктированиюПередЗаписью,
	|	СУММА(ВЫБОР
	|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Таблица.КПодписанию
	|		ИНАЧЕ -Таблица.КПодписанию
	|	КОНЕЦ) КАК КПодписаниюПередЗаписью,
	|	СУММА(ВЫБОР
	|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -Таблица.КСписанию
	|		ИНАЧЕ Таблица.КСписанию
	|	КОНЕЦ) КАК КСписаниюПередЗаписью
	|ПОМЕСТИТЬ ДвиженияОстаткиРетроБонусыКлиентовПередЗаписью
	|ИЗ
	|	РегистрНакопления.РетроБонусыКлиентов КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|	И НЕ &ЭтоНовый
	|	И НЕ &ОбменДанными
	|	И &РассчитыватьИзменения
	|	И &ПроводитьБезКонтроляОстатковРетроБонусов = ЛОЖЬ
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Организация,
	|	Таблица.Контрагент,
	|	Таблица.Партнер,
	|	Таблица.НачалоПериода,
	|	Таблица.ОкончаниеПериода,
	|	Таблица.ДокументУсловий,
	|	Таблица.Валюта";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый", ДополнительныеСвойства.СвойстваДокумента.ЭтоНовый);
	Запрос.УстановитьПараметр("ОбменДанными", ОбменДанными.Загрузка);
	Запрос.УстановитьПараметр(
		"РассчитыватьИзменения",
		ПроведениеДокументов.РассчитыватьИзменения(ДополнительныеСвойства));
	Запрос.УстановитьПараметр(
		"ПроводитьБезКонтроляОстатковРетроБонусов",
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковРетроБонусов);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
	 ИЛИ НЕ ПроведениеДокументов.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	//@skip-check bsl-ql-hub - ДвиженияОстаткиРетроБонусыКлиентовПередЗаписью создается в событии ПередЗаписью
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИзменений.Организация КАК Организация,
	|	ТаблицаИзменений.Контрагент КАК Контрагент,
	|	ТаблицаИзменений.Партнер КАК Партнер,
	|	ТаблицаИзменений.НачалоПериода КАК НачалоПериода,
	|	ТаблицаИзменений.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ТаблицаИзменений.ДокументУсловий КАК ДокументУсловий,
	|	ТаблицаИзменений.Валюта КАК Валюта,
	|	СУММА(ТаблицаИзменений.СуммаБонусИзменение) КАК СуммаБонусИзменение,
	|	СУММА(ТаблицаИзменений.КАктированиюИзменение) КАК КАктированиюИзменение,
	|	СУММА(ТаблицаИзменений.КПодписаниюИзменение) КАК КПодписаниюИзменение,
	|	СУММА(ТаблицаИзменений.КСписаниюИзменение) КАК КСписаниюИзменение
	|ПОМЕСТИТЬ ДвиженияРетроБонусыКлиентовИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		Таблица.Организация КАК Организация,
	|		Таблица.Контрагент КАК Контрагент,
	|		Таблица.Партнер КАК Партнер,
	|		Таблица.НачалоПериода КАК НачалоПериода,
	|		Таблица.ОкончаниеПериода КАК ОкончаниеПериода,
	|		Таблица.ДокументУсловий КАК ДокументУсловий,
	|		Таблица.Валюта КАК Валюта,
	|		Таблица.СуммаБонусПередЗаписью КАК СуммаБонусИзменение,
	|		Таблица.КАктированиюПередЗаписью КАК КАктированиюИзменение,
	|		Таблица.КПодписаниюПередЗаписью КАК КПодписаниюИзменение,
	|		Таблица.КСписаниюПередЗаписью КАК КСписаниюИзменение
	|	ИЗ
	|		ДвиженияОстаткиРетроБонусыКлиентовПередЗаписью КАК Таблица
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Таблица.Организация КАК Организация,
	|		Таблица.Контрагент КАК Контрагент,
	|		Таблица.Партнер КАК Партнер,
	|		Таблица.НачалоПериода КАК НачалоПериода,
	|		Таблица.ОкончаниеПериода КАК ОкончаниеПериода,
	|		Таблица.ДокументУсловий КАК ДокументУсловий,
	|		Таблица.Валюта КАК Валюта,
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Таблица.СуммаБонус
	|			ИНАЧЕ Таблица.СуммаБонус
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Таблица.КАктированию
	|			ИНАЧЕ Таблица.КАктированию
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Таблица.КПодписанию
	|			ИНАЧЕ Таблица.КПодписанию
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Таблица.КСписанию
	|			ИНАЧЕ Таблица.КСписанию
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РетроБонусыКлиентов КАК Таблица
	|	ГДЕ
	|		Таблица.Регистратор = &Регистратор) КАК ТаблицаИзменений
	|ГДЕ
	|	НЕ &ОбменДанными
	|	И &РассчитыватьИзменения
	|	И &ПроводитьБезКонтроляОстатковРетроБонусов = ЛОЖЬ
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.Организация,
	|	ТаблицаИзменений.Контрагент,
	|	ТаблицаИзменений.Партнер,
	|	ТаблицаИзменений.НачалоПериода,
	|	ТаблицаИзменений.ОкончаниеПериода,
	|	ТаблицаИзменений.ДокументУсловий,
	|	ТаблицаИзменений.Валюта
	|ИМЕЮЩИЕ
	|	(СУММА(ТаблицаИзменений.СуммаБонусИзменение) <> 0
	|	ИЛИ СУММА(ТаблицаИзменений.КАктированиюИзменение) <> 0
	|	ИЛИ СУММА(ТаблицаИзменений.КПодписаниюИзменение) <> 0
	|	ИЛИ СУММА(ТаблицаИзменений.КСписаниюИзменение) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДвиженияОстаткиРетроБонусыКлиентовПередЗаписью";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ОбменДанными", ОбменДанными.Загрузка);
	Запрос.УстановитьПараметр(
		"РассчитыватьИзменения",
		ПроведениеДокументов.РассчитыватьИзменения(ДополнительныеСвойства));
	Запрос.УстановитьПараметр(
		"ПроводитьБезКонтроляОстатковРетроБонусов",
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковРетроБонусов);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	
	Результат = Запрос.ВыполнитьПакет();
	Выборка = Результат[0].Выбрать();
	ЕстьИзменения = (Выборка.Следующий() И Выборка.Количество > 0);
	ПроведениеДокументов.ЗарегистрироватьТаблицуКонтроля(
		ДополнительныеСвойства,
		"ДвиженияРетроБонусыКлиентовИзменение",
		ЕстьИзменения);
	
КонецПроцедуры
	
#КонецОбласти

#КонецЕсли	