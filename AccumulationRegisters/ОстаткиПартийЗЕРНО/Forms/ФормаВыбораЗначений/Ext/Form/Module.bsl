#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКолонки = "";
	
	Если Параметры.Свойство("ИмяЭлементаОтбора") Тогда
		Если Параметры.ИмяЭлементаОтбора = "ВладелецПартии" Тогда
			ИмяКолонки = "ОрганизацияКонтрагент";
			АвтоЗаголовок = Ложь;
			Заголовок = НСтр("ru = 'Выбор владелеца партии'");
			Элементы.ТаблицаОрганизацияКонтрагентСтрокой.Заголовок = НСтр("ru = 'Владелец партии'");
			Элементы.ТаблицаСкладКонтрагентСтрокой.Видимость = Ложь;
		ИначеЕсли Параметры.ИмяЭлементаОтбора = "Элеватор" Тогда
			ИмяКолонки = "ОрганизацияКонтрагент";
			АвтоЗаголовок = Ложь;
			Заголовок = НСтр("ru = 'Выбор элеватора'");
			Элементы.ТаблицаОрганизацияКонтрагентСтрокой.Заголовок = НСтр("ru = 'Элеватор'");
			Элементы.ТаблицаСкладКонтрагентСтрокой.Видимость = Ложь;
		ИначеЕсли Параметры.ИмяЭлементаОтбора = "Местоположение" Тогда
			ИмяКолонки = "СкладКонтрагент";
			АвтоЗаголовок = Ложь;
			Заголовок = НСтр("ru = 'Выбор местоположения'");
			Элементы.ТаблицаСкладКонтрагентСтрокой.Заголовок = НСтр("ru = 'Местоположение'");
			Элементы.ТаблицаОрганизацияКонтрагентСтрокой.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ВыбранныеЗначения")
		И ИмяКолонки <> "" Тогда
		Для Каждого Значение Из Параметры.ВыбранныеЗначения Цикл
			Строка = Таблица.Добавить();
			Строка[ИмяКолонки] = Значение;
		КонецЦикла;
	КонецЕсли;
	
	// РаботаСПолямимСоставногоТипа
	СобытияФормИС.ПоляСоставногоТипаИнициализация(ЭтотОбъект, ИменаЭлементовПолейСоставногоТипа());
	// Конец РаботаСПолямимСоставногоТипа
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблица

&НаКлиенте
Процедура ТаблицаОрганизацияКонтрагентСтрокойПриИзменении(Элемент)
	
	ПолеСоставногоТипаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОрганизацияКонтрагентСтрокойОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПолеСоставногоТипаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОрганизацияКонтрагентСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПолеСоставногоТипаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОрганизацияКонтрагентСтрокойАНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПолеСоставногоТипаАвтоПодбор(Элемент, Элемент.ТекстРедактирования, ДанныеВыбора, Неопределено, 0, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладКонтрагентСтрокойПриИзменении(Элемент)
	
	ПолеСоставногоТипаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладКонтрагентСтрокойОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПолеСоставногоТипаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладКонтрагентСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПолеСоставногоТипаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладКонтрагентСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПолеСоставногоТипаАвтоПодбор(Элемент, Элемент.ТекстРедактирования, ДанныеВыбора, Неопределено, 0, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Результат = Новый Массив;
	
	Для Каждого Строка Из Таблица Цикл
		Если ЗначениеЗаполнено(Строка.ОрганизацияКонтрагент) Тогда
			Результат.Добавить(Строка.ОрганизацияКонтрагент);
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.СкладКонтрагент) Тогда
			Результат.Добавить(Строка.СкладКонтрагент);
		КонецЕсли;
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

#Область РаботаСПолямимСоставногоТипа

&НаКлиенте
Процедура ПолеСоставногоТипаПриИзменении(Элемент)
	
	СобытияФормИСКлиент.ПолеСоставногоТипаПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеСоставногоТипаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СобытияФормИСКлиент.ПолеСоставногоТипаОбработкаВыбора(ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеСоставногоТипаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СобытияФормИСКлиент.ПолеСоставногоТипаАвтоПодбор(ЭтотОбъект,
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеСоставногоТипаОкончаниеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	СобытияФормИСКлиент.ПолеСоставногоТипаОкончаниеВыбора(ЭтотОбъект, Результат, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИменаЭлементовПолейСоставногоТипа()
	
	Возврат "ТаблицаОрганизацияКонтрагентСтрокой,ТаблицаСкладКонтрагентСтрокой";
	
КонецФункции


#КонецОбласти

#КонецОбласти
