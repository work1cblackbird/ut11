#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Запуск свертки движений регистра "Резервы товаров организаций" по всем организациям.
//
Процедура ВыполнитьСверткуРегистраРезервыТоваровОрганизаций() Экспорт
	
	Если ЕстьЛишниеРезервы(Ложь) <> "НетЛишнихРезервов" Тогда
		РаспределитьРезервыПоПериодам();
	КонецЕсли;
	
	ЗачестьВстречныеРезервы();
	
	Если Не ЕстьЗаписиСторно() Тогда
		Возврат;
	КонецЕсли;
	
	ДоформироватьРезервыДляПокрытияЛишнихСторно();
	СвернутьДвиженияПоРезервамТоваровОрганизаций();
	
КонецПроцедуры

// Возвращает имя дополнительного свойства - признака того, что запись выполняется механизмом свертки.
//
// Возвращаемое значение:
//	Строка - имя дополнительного свойства.
//
Функция ПризнакЗаписиНабораПриСвертке() Экспорт
	
	Возврат "ВыполняетсяСверткаДвиженийРезервовТоваровОрганизаций";
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СверткаДвижений

Процедура ЗачестьВстречныеРезервы()
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ЗапасыСервер.ТекстЗапросаВстречныхРезервов("ВТАналитикиВстречныхРезервов");
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Результат = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	Если Результат[0].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РезервыТоваровОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Результат[0];
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("НомерГТД", "НомерГТД");
		
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.Текст = ЗапасыСервер.ТекстЗапросаВстречныхРезервов("ВыборкаУпорядоченнаяПоОрганизации", "ВТАналитикиВстречныхРезервов");
		
		УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
		
		ТаблицаВстречныхРезервов = Запрос.Выполнить().Выгрузить();
		
		Если ТаблицаВстречныхРезервов.Количество() = 0 Тогда
			ЗафиксироватьТранзакцию();
			Возврат;
		КонецЕсли;
		
		ТаблицаОрганизаций = ТаблицаВстречныхРезервов.Скопировать(, "Организация");
		ТаблицаОрганизаций.Свернуть("Организация");
		
		ТаблицаДвижений = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
		
		СтруктураПоиска = Новый Структура("Организация");
		
		Для Каждого СтрокаОрганизация Из ТаблицаОрганизаций Цикл
			
			СтруктураПоиска.Организация = СтрокаОрганизация.Организация;
			
			ПоискСтрок = ТаблицаВстречныхРезервов.НайтиСтроки(СтруктураПоиска);
			Для Каждого НайденнаяСтрока из ПоискСтрок Цикл
				
				СтрокаРасхода = ТаблицаДвижений.Добавить();
				СтрокаРасхода.ВидДвижения = ВидДвиженияНакопления.Расход;
				ЗаполнитьЗначенияСвойств(СтрокаРасхода, НайденнаяСтрока);
				
				ДобавитьВНаборРезерваКорЗапись(ТаблицаДвижений, СтрокаРасхода);
				
				СтрокаПрихода = ТаблицаДвижений.Добавить();
				СтрокаПрихода.ВидДвижения = ВидДвиженияНакопления.Приход;
				ЗаполнитьЗначенияСвойств(СтрокаПрихода, НайденнаяСтрока);
				
				ДобавитьВНаборРезерваКорЗапись(ТаблицаДвижений, СтрокаПрихода);
				
			КонецЦикла;
			
			Если ТаблицаДвижений.Количество() > 0 Тогда
				
				КорректировкаРегистров = Документы.КорректировкаРегистров.СоздатьДокумент();
				КорректировкаРегистров.Дата = ТекущаяДатаСеанса();
				КорректировкаРегистров.Комментарий = НСтр("ru = 'Создан автоматически при зачете встречных резервов товаров организаций.'", ОбщегоНазначения.КодОсновногоЯзыка());
				
				НоваяСтрока = КорректировкаРегистров.ТаблицаРегистров.Добавить();
				НоваяСтрока.Имя = "РезервыТоваровОрганизаций";
				
				КорректировкаРегистров.Записать();
				
				Набор = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(КорректировкаРегистров.Ссылка);
				Набор.Загрузить(ТаблицаДвижений);
				
				СтруктураВременныеТаблицы = Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
				Набор.ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура("СтруктураВременныеТаблицы", СтруктураВременныеТаблицы));
				Набор.Записывать = Истина;
				Набор.Записать();
				
				ТаблицаДвижений.Очистить();
				
			КонецЕсли;
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Возникла ошибка зачете встречных резервов: %1'"),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Зачет встречных резервов товаров организаций'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций,,
			ТекстОшибки
		);
			
	КонецПопытки;
	
КонецПроцедуры

Процедура СвернутьДвиженияПоРезервамТоваровОрганизаций()
	
	РегистраторыСОшибкамиСвертки = Новый Массив;
	
	ЗапросТекущегоРегистратора = Новый Запрос;
	ЗапросТекущегоРегистратора.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РезервыТоваровОрганизаций.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|ГДЕ
	|	РезервыТоваровОрганизаций.ЭтоСторно
	|	И НЕ РезервыТоваровОрганизаций.Регистратор В (&РегистраторыСОшибкамиСвертки)";
	
	ЕстьРегистраторыСторно = Истина;
	Счетчик = 0;
	
	Пока ЕстьРегистраторыСторно Цикл
		
		Счетчик = Счетчик + 1;
		
		ЗапросТекущегоРегистратора.УстановитьПараметр("РегистраторыСОшибкамиСвертки", РегистраторыСОшибкамиСвертки);
		ВыборкаРегистратора = ЗапросТекущегоРегистратора.Выполнить().Выбрать();
		
		Если Не ВыборкаРегистратора.Следующий() Тогда
			ЕстьРегистраторыСторно = Ложь;
			
			Для Каждого СтрМас из РегистраторыСОшибкамиСвертки Цикл
				СвернутьДвиженияПоРезервамТоваровОрганизацийПоТекущемуРегистраторуСторно(СтрМас);
			КонецЦикла;
			
			Если ЕстьЗаписиСторно() Тогда
				ТекстИсключения = НСтр("ru = 'Не удалось зачесть все сторно записи резервов товаров организаций. Подробнее - см. Журанал регистрации'");
				ЗаписатьОшибкуСверткиВЖР(ТекстИсключения);
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
			
		ИначеЕсли Не СвернутьДвиженияПоРезервамТоваровОрганизацийПоТекущемуРегистраторуСторно(ВыборкаРегистратора.Регистратор)
			И РегистраторыСОшибкамиСвертки.Найти(ВыборкаРегистратора.Регистратор) = Неопределено Тогда
			
			РегистраторыСОшибкамиСвертки.Добавить(ВыборкаРегистратора.Регистратор);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СвернутьДвиженияПоРезервамТоваровОрганизацийПоТекущемуРегистраторуСторно(ТекущийРегистраторСторно)
		
	ЗапросДляУстановкиБлокировки = Новый Запрос;
	ЗапросДляУстановкиБлокировки.Текст =
	"ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|	РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|	КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТСторноЗаписи
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|ГДЕ
	|	РезервыТоваровОрганизаций.Регистратор = &ТекущийРегистраторСторно
	|	И РезервыТоваровОрганизаций.ЭтоСторно
	|	И РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РегистраторыРезервов.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РегистраторыРезервов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСторноЗаписи КАК ВТСторноЗаписи
	|		ПО РегистраторыРезервов.АналитикаУчетаНоменклатуры = ВТСторноЗаписи.АналитикаУчетаНоменклатуры
	|			И РегистраторыРезервов.Организация = ВТСторноЗаписи.Организация
	|			И РегистраторыРезервов.ВидЗапасов = ВТСторноЗаписи.ВидЗапасов
	|			И РегистраторыРезервов.НомерГТД = ВТСторноЗаписи.НомерГТД
	|			И РегистраторыРезервов.КорВидЗапасов = ВТСторноЗаписи.КорВидЗапасов
	|			И РегистраторыРезервов.КорОрганизация = ВТСторноЗаписи.КорОрганизация
	|			И (КОНЕЦПЕРИОДА(РегистраторыРезервов.Период, МЕСЯЦ) = ВТСторноЗаписи.Период)
	|			И (РегистраторыРезервов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (НЕ РегистраторыРезервов.ЭтоСторно)
	|			И (РегистраторыРезервов.Регистратор <> &ТекущийРегистраторСторно)";
	
	ЗапросДляУстановкиБлокировки.УстановитьПараметр("ТекущийРегистраторСторно", ТекущийРегистраторСторно);
	РегистраторыРезервов = ЗапросДляУстановкиБлокировки.Выполнить().Выгрузить();
	
	НачатьТранзакцию();
	
	Попытка
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РезервыТоваровОрганизаций.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РегистраторыРезервов;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РезервыТоваровОрганизаций.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Регистратор",ТекущийРегистраторСторно);
		
		Блокировка.Заблокировать();
		
		ЗапросЗачетаСторно = Новый Запрос;
		ЗапросЗачетаСторно.Текст =
		"ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(ДвиженияРегистратораСторно.Период, МЕСЯЦ) КАК Период,
		|	ДвиженияРегистратораСторно.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДвиженияРегистратораСторно.Организация КАК Организация,
		|	ДвиженияРегистратораСторно.ВидЗапасов КАК ВидЗапасов,
		|	ДвиженияРегистратораСторно.НомерГТД КАК НомерГТД,
		|	ДвиженияРегистратораСторно.ЭтоСторно КАК ЭтоСторно,
		|	СУММА(ДвиженияРегистратораСторно.Количество) КАК Количество,
		|	СУММА(ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(ДвиженияРегистратораСторно.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(ДвиженияРегистратораСторно.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|		КОНЕЦ) КАК КоличествоПоРНПТ,
		|	ДвиженияРегистратораСторно.КорОрганизация КАК КорОрганизация,
		|	ДвиженияРегистратораСторно.КорВидЗапасов КАК КорВидЗапасов
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК ДвиженияРегистратораСторно
		|ГДЕ
		|	ДвиженияРегистратораСторно.Регистратор = &ТекущийРегистраторСторно
		|	И ДвиженияРегистратораСторно.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|
		|СГРУППИРОВАТЬ ПО
		|	КОНЕЦПЕРИОДА(ДвиженияРегистратораСторно.Период, МЕСЯЦ),
		|	ДвиженияРегистратораСторно.АналитикаУчетаНоменклатуры,
		|	ДвиженияРегистратораСторно.Организация,
		|	ДвиженияРегистратораСторно.ВидЗапасов,
		|	ДвиженияРегистратораСторно.НомерГТД,
		|	ДвиженияРегистратораСторно.ЭтоСторно,
		|	ДвиженияРегистратораСторно.КорОрганизация,
		|	ДвиженияРегистратораСторно.КорВидЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(ДвиженияРегистраторовРезерва.Период, МЕСЯЦ) КАК Период,
		|	ДвиженияРегистраторовРезерва.Регистратор КАК Регистратор,
		|	ДвиженияРегистраторовРезерва.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДвиженияРегистраторовРезерва.Организация КАК Организация,
		|	ДвиженияРегистраторовРезерва.ВидЗапасов КАК ВидЗапасов,
		|	ДвиженияРегистраторовРезерва.НомерГТД КАК НомерГТД,
		|	ДвиженияРегистраторовРезерва.ЭтоСторно КАК ЭтоСторно,
		|	СУММА(ДвиженияРегистраторовРезерва.Количество) КАК Количество,
		|	СУММА(ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(ДвиженияРегистраторовРезерва.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(ДвиженияРегистраторовРезерва.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|		КОНЕЦ) КАК КоличествоПоРНПТ,
		|	ДвиженияРегистраторовРезерва.КорОрганизация КАК КорОрганизация,
		|	ДвиженияРегистраторовРезерва.КорВидЗапасов КАК КорВидЗапасов
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК ДвиженияРегистраторовРезерва
		|ГДЕ
		|	ДвиженияРегистраторовРезерва.Регистратор В(&ЗаблокированныеРегистраторыРезерва)
		|	И ДвиженияРегистраторовРезерва.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|
		|СГРУППИРОВАТЬ ПО
		|	КОНЕЦПЕРИОДА(ДвиженияРегистраторовРезерва.Период, МЕСЯЦ),
		|	ДвиженияРегистраторовРезерва.Регистратор,
		|	ДвиженияРегистраторовРезерва.АналитикаУчетаНоменклатуры,
		|	ДвиженияРегистраторовРезерва.Организация,
		|	ДвиженияРегистраторовРезерва.ВидЗапасов,
		|	ДвиженияРегистраторовРезерва.НомерГТД,
		|	ДвиженияРегистраторовРезерва.ЭтоСторно,
		|	ДвиженияРегистраторовРезерва.КорОрганизация,
		|	ДвиженияРегистраторовРезерва.КорВидЗапасов";
		
		ЗапросЗачетаСторно.УстановитьПараметр("ТекущийРегистраторСторно", ТекущийРегистраторСторно);
		ЗапросЗачетаСторно.УстановитьПараметр("ЗаблокированныеРегистраторыРезерва", РегистраторыРезервов.ВыгрузитьКолонку("Регистратор"));
		
		УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(
			ЗапросЗачетаСторно);
		
		РезультатыЗапроса = ЗапросЗачетаСторно.ВыполнитьПакет();
		
		ДвиженияРегистратораСторно		= РезультатыЗапроса[0].Выгрузить();
		ДвиженияРегистраторовРезервов	= РезультатыЗапроса[1].Выгрузить();
		
		ПоляПоискаСтрокРезерва = "Период,АналитикаУчетаНоменклатуры,Организация,ВидЗапасов,НомерГТД,КорОрганизация,КорВидЗапасов,ЭтоСторно";
		ОтборПоискаСтрокРезерва = Новый Структура(ПоляПоискаСтрокРезерва);
		
		ДвиженияРегистраторовРезервов.Индексы.Добавить(ПоляПоискаСтрокРезерва);
		ДвиженияРегистраторовРезервов.Индексы.Добавить("Регистратор");
		
		ИзмененныеРегистраторыРезерва = Новый Соответствие;
		
		НаборРегистратораСторно = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
		НаборРегистратораСторно.Отбор.Регистратор.Установить(ТекущийРегистраторСторно);
		НаборРегистратораСторно.ДополнительныеСвойства.Вставить(ПризнакЗаписиНабораПриСвертке(), Истина);
		
		СтруктураВременныеТаблицы = Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
		
		НаборРегистратораСторно.ДополнительныеСвойства.Вставить("ДляПроведения", 
			Новый Структура("СтруктураВременныеТаблицы",СтруктураВременныеТаблицы));
		
		Для Каждого СтрокаСторно из ДвиженияРегистратораСторно Цикл
			
			Если Не СтрокаСторно.ЭтоСторно Тогда
				
				НоваяСтрокаСторно = НаборРегистратораСторно.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСторно, СтрокаСторно);
				ДобавитьВНаборРезерваКорЗапись(НаборРегистратораСторно, НоваяСтрокаСторно);
				
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ОтборПоискаСтрокРезерва, СтрокаСторно);
			ОтборПоискаСтрокРезерва.ЭтоСторно = Ложь;
			
			СтрокиРезервов = ДвиженияРегистраторовРезервов.НайтиСтроки(ОтборПоискаСтрокРезерва);
			
			Если СтрокиРезервов.Количество() = 0 Тогда
				ТекстИсключения = НСтр("ru = 'Лишнее сторно'");
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
			
			Для Каждого СтрокаРезерва из СтрокиРезервов Цикл
				
				КоличествоЗачета = Мин(-СтрокаСторно.Количество, СтрокаРезерва.Количество);
				
				СтрокаРезерва.КоличествоПоРНПТ	= СтрокаРезерва.КоличествоПоРНПТ - КоличествоЗачета
													* СтрокаРезерва.КоличествоПоРНПТ / СтрокаРезерва.Количество;
				СтрокаРезерва.Количество		= СтрокаРезерва.Количество - КоличествоЗачета;
				
				СтрокаСторно.КоличествоПоРНПТ	= СтрокаСторно.КоличествоПоРНПТ + КоличествоЗачета
													* СтрокаСторно.КоличествоПоРНПТ / СтрокаСторно.Количество;
				СтрокаСторно.Количество			= СтрокаСторно.Количество + КоличествоЗачета;
				
				ИзмененныеРегистраторыРезерва.Вставить(СтрокаРезерва.Регистратор);
				
				Если СтрокаСторно.Количество = 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если СтрокаСторно.Количество <> 0 Тогда
				
				НоваяСтрокаСторно = НаборРегистратораСторно.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСторно, СтрокаСторно);
				ДобавитьВНаборРезерваКорЗапись(НаборРегистратораСторно, НоваяСтрокаСторно);
				
			КонецЕсли;
			
		КонецЦикла;
		
		НаборРегистратораСторно.Записать();
		
		Для Каждого КлючЗначение Из ИзмененныеРегистраторыРезерва Цикл
			
			НаборРегистраторовРезервов = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
			НаборРегистраторовРезервов.Отбор.Регистратор.Установить(КлючЗначение.Ключ);
			НаборРегистраторовРезервов.ДополнительныеСвойства.Вставить(ПризнакЗаписиНабораПриСвертке(), Истина);
			
			СтруктураВременныеТаблицы = Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
			
			НаборРегистраторовРезервов.ДополнительныеСвойства.Вставить("ДляПроведения", 
				Новый Структура("СтруктураВременныеТаблицы",СтруктураВременныеТаблицы));
			
			СтрокиРезервов = ДвиженияРегистраторовРезервов.НайтиСтроки(Новый Структура("Регистратор", КлючЗначение.Ключ));
			
			Для Каждого СтрокаРезерва из СтрокиРезервов Цикл
				
				Если СтрокаРезерва.Количество <> 0 Тогда
					
					НоваяСтрокаРезервов = НаборРегистраторовРезервов.Добавить();	
					ЗаполнитьЗначенияСвойств(НоваяСтрокаРезервов, СтрокаРезерва);
					ДобавитьВНаборРезерваКорЗапись(НаборРегистраторовРезервов, НоваяСтрокаРезервов);
					
				КонецЕсли;
				
			КонецЦикла;
			
			НаборРегистраторовРезервов.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		Возврат Истина;
	Исключение
		ОтменитьТранзакцию();
		
		ТекстСообщения = НСтр("ru = 'Не удалось свернуть резервы товаров организаций по регистратору сторно %ТекущийРегистраторСторно% по причине ""%ПричинаОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПричинаОшибки%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТекущийРегистраторСторно%", ТекущийРегистраторСторно);
		
		ЗаписатьОшибкуСверткиВЖР(ТекстСообщения);
		
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Процедура ДобавитьВНаборРезерваКорЗапись(НаборЗаписей, ЗаписьИсходная) Экспорт
	
	КорЗапись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(КорЗапись, ЗаписьИсходная);
	
	Если ЗаписьИсходная.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		КорЗапись.ВидДвижения = ВидДвиженияНакопления.Расход;
	Иначе
		КорЗапись.ВидДвижения = ВидДвиженияНакопления.Приход;
	КонецЕсли;
	
	КорЗапись.Организация = ЗаписьИсходная.КорОрганизация;
	КорЗапись.ВидЗапасов  = ЗаписьИсходная.КорВидЗапасов;
	КорЗапись.КорОрганизация = ЗаписьИсходная.Организация;
	КорЗапись.КорВидЗапасов  = ЗаписьИсходная.ВидЗапасов;
	
КонецПроцедуры

// Выводит сообщение об ошибке свертки в журнал регистрации.
//
Процедура ЗаписатьОшибкуСверткиВЖР(ТекстСообщения)
	
	ИмяСобытия = НСтр("ru = 'Свертка движений по резервам товаров организаций'", ОбщегоНазначения.КодОсновногоЯзыка());
	ЗаписьЖурналаРегистрации(
		ИмяСобытия,
		УровеньЖурналаРегистрации.Ошибка,,,
		ТекстСообщения
	);
	
КонецПроцедуры

// Возвращает признак наличия в ИБ записей сторно в приходных движениях (т.е. необходима свертка движений).
//
// Возвращаемое значение:
//	Булево - признак наличия записей сторно.
//
Функция ЕстьЗаписиСторно()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Резервы.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|ГДЕ 
	|	Резервы.ЭтоСторно";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

Функция ЕстьЛишниеРезервы(ПроверятьКонстанту) Экспорт
	
	ДатаПервогоРезерва = ЗапасыСервер.ДатаПервогоРезерва(Неопределено);
	
	Если Не ЗначениеЗаполнено(ДатаПервогоРезерва) Тогда
		ВзвестиКонстантуПериодыРезервовТоваровОрганизацийАктуальны(Истина);
		Возврат "НетЛишнихРезервов";
	КонецЕсли;
	
	Если ПроверятьКонстанту 
		И Константы.ПериодыРезервовТоваровОрганизацийАктуальны.Получить() Тогда
		Возврат "НетЛишнихРезервов";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(РезервыПоПериодам.Период, МЕСЯЦ) КАК Период,
	|	РезервыПоПериодам.Организация КАК Организация,
	|	РезервыПоПериодам.ВидЗапасов КАК ВидЗапасов,
	|	РезервыПоПериодам.НомерГТД КАК НомерГТД,
	|	РезервыПоПериодам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыПоПериодам.КоличествоОборот КАК РезервВПериоде,
	|	РезервыПоПериодам.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток
	|ПОМЕСТИТЬ РезервыПоПериодам
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.ОстаткиИОбороты(&НачалоПериода, , МЕСЯЦ, Движения, ) КАК РезервыПоПериодам
	|ГДЕ
	|	РезервыПоПериодам.КоличествоОборот > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	-(МИНИМУМ(ВложенныйЗапрос.КоличествоКонечныйОстаток) - МИНИМУМ(ВложенныйЗапрос.КоличествоНачальныйОстаток)) КАК КоличествоКПередаче,
	|	СУММА(ВложенныйЗапрос.Резерв) КАК Резерв
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(ТоварыОрганизацийОстаткиИОбороты.Период, МЕСЯЦ) КАК Период,
	|		ТоварыОрганизацийОстаткиИОбороты.Организация КАК Организация,
	|		ТоварыОрганизацийОстаткиИОбороты.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизацийОстаткиИОбороты.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизацийОстаткиИОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизацийОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
	|		ТоварыОрганизацийОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	|		0 КАК Резерв
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(
	|				&НачалоПериода,
	|				,
	|				МЕСЯЦ,
	|				Движения,
	|				(Организация, ВидЗапасов, НомерГТД, АналитикаУчетаНоменклатуры) В
	|					(ВЫБРАТЬ
	|						РезервыПоПериодам.Организация КАК Организация,
	|						РезервыПоПериодам.ВидЗапасов КАК ВидЗапасов,
	|						РезервыПоПериодам.НомерГТД КАК НомерГТД,
	|						РезервыПоПериодам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|					ИЗ
	|						РезервыПоПериодам КАК РезервыПоПериодам)) КАК ТоварыОрганизацийОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РезервыПоПериодам.Период,
	|		РезервыПоПериодам.Организация,
	|		РезервыПоПериодам.ВидЗапасов,
	|		РезервыПоПериодам.НомерГТД,
	|		РезервыПоПериодам.АналитикаУчетаНоменклатуры,
	|		-РезервыПоПериодам.КоличествоНачальныйОстаток,
	|		-РезервыПоПериодам.КоличествоНачальныйОстаток,
	|		РезервыПоПериодам.РезервВПериоде
	|	ИЗ
	|		РезервыПоПериодам КАК РезервыПоПериодам) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	-(МИНИМУМ(ВложенныйЗапрос.КоличествоКонечныйОстаток) - МИНИМУМ(ВложенныйЗапрос.КоличествоНачальныйОстаток)) < СУММА(ВложенныйЗапрос.Резерв) И
	|	СУММА(ВложенныйЗапрос.Резерв) > 0";
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаПервогоРезерва));
	
	УстановитьПривилегированныйРежим(Истина);
	НетЛишнихРезервов = Запрос.Выполнить().Пустой();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если НетЛишнихРезервов Тогда
		ВзвестиКонстантуПериодыРезервовТоваровОрганизацийАктуальны(Истина);
		Возврат "НетЛишнихРезервов";
	Иначе
		ВзвестиКонстантуПериодыРезервовТоваровОрганизацийАктуальны(Ложь);
		Возврат "ЕстьЛишниеРезервы";
	КонецЕсли;
	
КонецФункции

Функция РаспределитьРезервыПоПериодам() Экспорт

	ДатаПервогоРезерва = ЗапасыСервер.ДатаПервогоРезерва(Неопределено);
	
	Если Не ЗначениеЗаполнено(ДатаПервогоРезерва) Тогда
		ВзвестиКонстантуПериодыРезервовТоваровОрганизацийАктуальны(Истина);
		Возврат "НетЛишнихРезервов";
	КонецЕсли;
	
	ДатаПервогоРезерва = КонецМесяца(ДатаПервогоРезерва);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РезервыТоваровОрганизаций.Период КАК Период
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	ДатаПоследнегоРезерва = КонецМесяца(Выборка.Период);
	
	ТекущийМесяц = ДатаПервогоРезерва;
	
	Отказ = Ложь;
	
	Пока ТекущийМесяц <= ДатаПоследнегоРезерва Цикл
		
		Если Не РаспределитьРезервыВПериоде(ТекущийМесяц) Тогда
			Отказ = Истина;
			Прервать;
		КонецЕсли;
		
		ТекущийМесяц = КонецМесяца(ТекущийМесяц + 1);
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РезервыТоваровОрганизаций.Период КАК Период
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Выборка.Следующий();
		
		ДатаПоследнегоРезерва = КонецМесяца(Выборка.Период);
	КонецЦикла;
	
	Если Не Отказ Тогда
		Возврат ЕстьЛишниеРезервы(Ложь);
	Иначе
		ВзвестиКонстантуПериодыРезервовТоваровОрганизацийАктуальны(Ложь);
		Возврат "Ошибка";
	КонецЕсли;	
	
КонецФункции

Функция РаспределитьРезервыВПериоде(ТекущийМесяц)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.РезервыТоваровОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ТоварыОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		
		БлокировкаДанных.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("НачалоПериодаГраница", Новый Граница(НачалоМесяца(ТекущийМесяц),ВидГраницы.Включая));
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецМесяца(ТекущийМесяц),ВидГраницы.Включая));
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ТекущийМесяц));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ТекущийМесяц));
		Запрос.УстановитьПараметр("ДвиженияСторнируемогоДокумента",
									РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки());
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(РезервыПоПериодам.Период, МЕСЯЦ) КАК Период,
		|	РезервыПоПериодам.Организация КАК Организация,
		|	РезервыПоПериодам.ВидЗапасов КАК ВидЗапасов,
		|	РезервыПоПериодам.НомерГТД КАК НомерГТД,
		|	РезервыПоПериодам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	-РезервыПоПериодам.КоличествоОборот КАК Количество,
		|	ВЫБОР
		|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|				ИЛИ НАЧАЛОПЕРИОДА(РезервыПоПериодам.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|			ТОГДА 0
		|		ИНАЧЕ -ВЫРАЗИТЬ(РезервыПоПериодам.КоличествоПоРНПТОборот КАК ЧИСЛО(23, 11))
		|	КОНЕЦ КАК КоличествоПоРНПТ
		|ПОМЕСТИТЬ ДвиженияДокумента
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций.ОстаткиИОбороты(&НачалоПериодаГраница, &КонецПериодаГраница, МЕСЯЦ, Движения, ) КАК РезервыПоПериодам
		|ГДЕ
		|	РезервыПоПериодам.КоличествоОборот > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияДокумента.Период КАК Период,
		|	ДвиженияДокумента.Организация КАК Организация,
		|	ДвиженияДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДвиженияДокумента.ВидЗапасов КАК ВидЗапасов,
		|	ДвиженияДокумента.НомерГТД КАК НомерГТД,
		|	ДвиженияДокумента.Количество КАК Количество,
		|	ВЫРАЗИТЬ(ДвиженияДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ
		|ПОМЕСТИТЬ ДвиженияСторнируемогоДокумента
		|ИЗ
		|	&ДвиженияСторнируемогоДокумента КАК ДвиженияДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Период КАК Период,
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	-(МИНИМУМ(ВложенныйЗапрос.КоличествоКонечныйОстаток) - МИНИМУМ(ВложенныйЗапрос.КоличествоНачальныйОстаток)) КАК КоличествоКПередаче,
		|	-(МИНИМУМ(ВложенныйЗапрос.КоличествоПоРНПТКонечныйОстаток) - МИНИМУМ(ВложенныйЗапрос.КоличествоПоРНПТНачальныйОстаток)) КАК КоличествоРНПТКПередаче
		|ПОМЕСТИТЬ ВТКоличествоКПередаче
		|ИЗ
		|	(ВЫБРАТЬ
		|		КОНЕЦПЕРИОДА(ТоварыОрганизацийОстаткиИОбороты.Период, МЕСЯЦ) КАК Период,
		|		ТоварыОрганизацийОстаткиИОбороты.Организация КАК Организация,
		|		ТоварыОрганизацийОстаткиИОбороты.ВидЗапасов КАК ВидЗапасов,
		|		ТоварыОрганизацийОстаткиИОбороты.НомерГТД КАК НомерГТД,
		|		ТоварыОрганизацийОстаткиИОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		ТоварыОрганизацийОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|		ТоварыОрганизацийОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|		ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизацийОстаткиИОбороты.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ ТоварыОрганизацийОстаткиИОбороты.КоличествоПоРНПТНачальныйОстаток
		|		КОНЕЦ КАК КоличествоПоРНПТНачальныйОстаток,
		|		ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизацийОстаткиИОбороты.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыОрганизацийОстаткиИОбороты.КоличествоПоРНПТКонечныйОстаток КАК ЧИСЛО(23, 11))
		|		КОНЕЦ КАК КоличествоПоРНПТКонечныйОстаток
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(
		|				&НачалоПериодаГраница,
		|				&КонецПериодаГраница,
		|				МЕСЯЦ,
		|				Движения,
		|				(Организация, ВидЗапасов, НомерГТД, АналитикаУчетаНоменклатуры) В
		|					(ВЫБРАТЬ
		|						ДвиженияДокумента.Организация КАК Организация,
		|						ДвиженияДокумента.ВидЗапасов КАК ВидЗапасов,
		|						ДвиженияДокумента.НомерГТД КАК НомерГТД,
		|						ДвиженияДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|					ИЗ
		|						ДвиженияДокумента КАК ДвиженияДокумента)) КАК ТоварыОрганизацийОстаткиИОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОНЕЦПЕРИОДА(&НачалоПериода, МЕСЯЦ),
		|		РезервыТоваровОрганизацийОстатки.Организация,
		|		РезервыТоваровОрганизацийОстатки.ВидЗапасов,
		|		РезервыТоваровОрганизацийОстатки.НомерГТД,
		|		РезервыТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры,
		|		-РезервыТоваровОрганизацийОстатки.КоличествоОстаток,
		|		-РезервыТоваровОрганизацийОстатки.КоличествоОстаток,
		|		ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ -РезервыТоваровОрганизацийОстатки.КоличествоПоРНПТОстаток
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ -ВЫРАЗИТЬ(РезервыТоваровОрганизацийОстатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
		|				&НачалоПериода,
		|				(Организация, ВидЗапасов, НомерГТД, АналитикаУчетаНоменклатуры) В
		|					(ВЫБРАТЬ
		|						ДвиженияДокумента.Организация КАК Организация,
		|						ДвиженияДокумента.ВидЗапасов КАК ВидЗапасов,
		|						ДвиженияДокумента.НомерГТД КАК НомерГТД,
		|						ДвиженияДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|					ИЗ
		|						ДвиженияДокумента КАК ДвиженияДокумента)) КАК РезервыТоваровОрганизацийОстатки
		|	ГДЕ
		|		РезервыТоваровОрганизацийОстатки.КоличествоОстаток > 0
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОНЕЦПЕРИОДА(&НачалоПериода, МЕСЯЦ),
		|		ДвиженияДокумента.Организация,
		|		ДвиженияДокумента.ВидЗапасов,
		|		ДвиженияДокумента.НомерГТД,
		|		ДвиженияДокумента.АналитикаУчетаНоменклатуры,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ДвиженияДокумента КАК ДвиженияДокумента) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.НомерГТД,
		|	ВложенныйЗапрос.Период,
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
		|	ВложенныйЗапрос.Организация
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ВложенныйЗапрос.КоличествоКонечныйОстаток) - МИНИМУМ(ВложенныйЗапрос.КоличествоНачальныйОстаток) < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ ВтОтборыОстатковОрганизаций
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТКоличествоКПередаче.Период КАК Период,
		|		ВТКоличествоКПередаче.Организация КАК Организация,
		|		ВТКоличествоКПередаче.ВидЗапасов КАК ВидЗапасов,
		|		ВТКоличествоКПередаче.НомерГТД КАК НомерГТД,
		|		ВТКоличествоКПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		ВТКоличествоКПередаче.КоличествоКПередаче КАК КоличествоКПередаче,
		|		0 КАК Резерв
		|	ИЗ
		|		ВТКоличествоКПередаче КАК ВТКоличествоКПередаче
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДвиженияДокумента.Период,
		|		ДвиженияДокумента.Организация,
		|		ДвиженияДокумента.ВидЗапасов,
		|		ДвиженияДокумента.НомерГТД,
		|		ДвиженияДокумента.АналитикаУчетаНоменклатуры,
		|		0,
		|		-ДвиженияДокумента.Количество
		|	ИЗ
		|		ДвиженияДокумента КАК ДвиженияДокумента) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Период,
		|	ВложенныйЗапрос.Организация,
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.КоличествоКПередаче) < СУММА(ВложенныйЗапрос.Резерв) И
		|	СУММА(ВложенныйЗапрос.Резерв) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	Организация,
		|	НомерГТД";
		
		Запрос.Текст = ТекстЗапроса;
		
		УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
		
		Запрос.ВыполнитьПакет();
		
		ТекстЗапроса =
		"
		|	ВЫБРАТЬ &ТекстВТОстаткиПоМесяцам;
		|	
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СгруппированныеОстатки.Период КАК Период,
		|	СгруппированныеОстатки.Организация КАК Организация,
		|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасов,
		|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
		|	МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	МИНИМУМ(СгруппированныеОстатки.КоличествоПоРНПТОстаток) КАК КоличествоПоРНПТОстаток,
		|	СУММА(СгруппированныеОстатки.СчетчикПериодов) КАК СчетчикПериодов
		|ПОМЕСТИТЬ СгруппированныеОстатки
		|ИЗ
		|	&ТекстОстаткиПоМесяцам КАК СгруппированныеОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Период,
		|	НомерПериода,
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	НомерГТД
		|
		|ИМЕЮЩИЕ
		|	(МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) <> 0
		|	И СУММА(СгруппированныеОстатки.СчетчикПериодов) >= &ВсегоПериодов - СгруппированныеОстатки.НомерПериода + 1)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	НомерГТД,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ) КАК Период,
		|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
		|	ТаблицаНовыеРезервы.Организация КАК Организация,
		|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
		|	ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
		|	ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов,
		|	СУММА(ТаблицаНовыеРезервы.Количество) КАК Количество,
		|	СУММА(ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|		КОНЕЦ) КАК КоличествоПоРНПТ,
		|	ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения
		|ПОМЕСТИТЬ ВтИсходнаяТаблицаТаблицаНовыеРезервы
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК ТаблицаНовыеРезервы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
		|		ПО ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
		|			И ТаблицаНовыеРезервы.ВидЗапасов = ВтОтборыОстатковОрганизаций.ВидЗапасов
		|			И ТаблицаНовыеРезервы.Организация = ВтОтборыОстатковОрганизаций.Организация
		|			И ТаблицаНовыеРезервы.НомерГТД = ВтОтборыОстатковОрганизаций.НомерГТД
		|ГДЕ
		|	ТаблицаНовыеРезервы.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И НЕ ТаблицаНовыеРезервы.ЭтоСторно
		|	И ТаблицаНовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНовыеРезервы.НомерГТД,
		|	ТаблицаНовыеРезервы.Организация,
		|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры,
		|	КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ),
		|	ТаблицаНовыеРезервы.ВидЗапасов,
		|	ТаблицаНовыеРезервы.ВидДвижения,
		|	ТаблицаНовыеРезервы.КорВидЗапасов,
		|	ТаблицаНовыеРезервы.КорОрганизация
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаНовыеРезервы.Количество) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ),
		|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры,
		|	ТаблицаНовыеРезервы.НомерГТД,
		|	ТаблицаНовыеРезервы.КорОрганизация,
		|	ТаблицаНовыеРезервы.КорВидЗапасов,
		|	ТаблицаНовыеРезервы.Организация,
		|	ТаблицаНовыеРезервы.ВидЗапасов,
		|	СУММА(ТаблицаНовыеРезервы.Количество),
		|	СУММА(ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|		КОНЕЦ),
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК ТаблицаНовыеРезервы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
		|		ПО ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
		|			И ТаблицаНовыеРезервы.ВидЗапасов = ВтОтборыОстатковОрганизаций.ВидЗапасов
		|			И ТаблицаНовыеРезервы.Организация = ВтОтборыОстатковОрганизаций.Организация
		|			И ТаблицаНовыеРезервы.НомерГТД = ВтОтборыОстатковОрганизаций.НомерГТД
		|ГДЕ
		|	ТаблицаНовыеРезервы.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И НЕ ТаблицаНовыеРезервы.ЭтоСторно
		|	И ТаблицаНовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНовыеРезервы.КорВидЗапасов,
		|	ТаблицаНовыеРезервы.НомерГТД,
		|	ТаблицаНовыеРезервы.КорОрганизация,
		|	ТаблицаНовыеРезервы.ВидДвижения,
		|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры,
		|	КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ),
		|	ТаблицаНовыеРезервы.Организация,
		|	ТаблицаНовыеРезервы.ВидЗапасов
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаНовыеРезервы.Количество) > 0";
		
		ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц = ЗапасыСервер.ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц();
		ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц.ЕстьОтборПоНомеруГТД = Истина;
		
		ВсегоПериодов = ЗапасыСервер.ДополнитьЗапросКонтролемОстатковНаКаждыйМесяц(Запрос,
																					ТекстЗапроса,
																					ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц,
																					ТекущийМесяц);
		
		Запрос.УстановитьПараметр("ВсегоПериодов", ВсегоПериодов);
		
		УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
		
		Запрос.Текст = ТекстЗапроса;
		
		РезультатыЗапроса = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
		
		ТаблицаНовыеРезервы = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выгрузить(); // ТаблицаЗначений
		ТаблицаНовыеРезервы.Колонки.Добавить("ЭтоСторно", Новый ОписаниеТипов("Булево"));
		
		ТаблицаНовыеРезервы = ЗапасыСервер.РаспределитьРезервыТоваровОрганизацийПоПериодам(ВсегоПериодов, ТаблицаНовыеРезервы, МенеджерВременныхТаблиц);
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаНовыеРезервы.Период КАК Период,
		|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаНовыеРезервы.Организация КАК Организация,
		|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
		|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
		|	ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
		|	ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов,
		|	ТаблицаНовыеРезервы.Количество КАК Количество,
		|	ВЫРАЗИТЬ(ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
		|	ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения
		|ПОМЕСТИТЬ ВТТаблицаНовыеРезервы
		|ИЗ
		|	&ТаблицаНовыеРезервы КАК ТаблицаНовыеРезервы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Период КАК Период,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
		|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
		|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
		|	СУММА(ВложенныйЗапрос.Количество) < 0 КАК ЭтоСторно,
		|	ВложенныйЗапрос.ВидДвижения КАК ВидДвижения
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаНовыеРезервы.Период КАК Период,
		|		ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаНовыеРезервы.Организация КАК Организация,
		|		ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
		|		ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
		|		ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
		|		ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов,
		|		ТаблицаНовыеРезервы.Количество КАК Количество,
		|		ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ ТаблицаНовыеРезервы.КоличествоПоРНПТ
		|		КОНЕЦ КАК КоличествоПоРНПТ,
		|		ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения
		|	ИЗ
		|		ВТТаблицаНовыеРезервы КАК ТаблицаНовыеРезервы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ИсходнаяТаблицаНовыеРезервы.Период,
		|		ИсходнаяТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры,
		|		ИсходнаяТаблицаНовыеРезервы.Организация,
		|		ИсходнаяТаблицаНовыеРезервы.ВидЗапасов,
		|		ИсходнаяТаблицаНовыеРезервы.НомерГТД,
		|		ИсходнаяТаблицаНовыеРезервы.КорОрганизация,
		|		ИсходнаяТаблицаНовыеРезервы.КорВидЗапасов,
		|		-ИсходнаяТаблицаНовыеРезервы.Количество,
		|		ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(ИсходнаяТаблицаНовыеРезервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			ИНАЧЕ -ИсходнаяТаблицаНовыеРезервы.КоличествоПоРНПТ
		|		КОНЕЦ,
		|		ИсходнаяТаблицаНовыеРезервы.ВидДвижения
		|	ИЗ
		|		ВтИсходнаяТаблицаТаблицаНовыеРезервы КАК ИсходнаяТаблицаНовыеРезервы) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Период,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
		|	ВложенныйЗапрос.Организация,
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД,
		|	ВложенныйЗапрос.КорОрганизация,
		|	ВложенныйЗапрос.КорВидЗапасов,
		|	ВложенныйЗапрос.ВидДвижения
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.Количество) <> 0";
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
		
		УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
		
		ТаблицаНовыеРезервы = Запрос.Выполнить().Выгрузить();
		
		Если ТаблицаНовыеРезервы.Количество() > 0 Тогда
			
			КорректировкаРегистров = Документы.КорректировкаРегистров.СоздатьДокумент();
			КорректировкаРегистров.Дата = ТекущийМесяц;
			КорректировкаРегистров.Комментарий = НСтр("ru = 'Создан автоматически при распределении резервов товаров организаций по периодам.'",
			ОбщегоНазначения.КодОсновногоЯзыка());
			
			НоваяСтрока = КорректировкаРегистров.ТаблицаРегистров.Добавить();
			НоваяСтрока.Имя = "РезервыТоваровОрганизаций";
			
			КорректировкаРегистров.Записать();
			
			Набор = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(КорректировкаРегистров.Ссылка);
			Набор.Загрузить(ТаблицаНовыеРезервы);
			
			//Набор.ДополнительныеСвойства.Вставить(РегистрыНакопления.РезервыТоваровОрганизаций.ПризнакЗаписиНабораПриСвертке(), Истина);
			СтруктураВременныеТаблицы = Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
			Набор.ДополнительныеСвойства.Вставить("ДляПроведения", 
			Новый Структура("СтруктураВременныеТаблицы",СтруктураВременныеТаблицы));
			Набор.Записывать = Истина;
			Набор.Записать();
			
		КонецЕсли;
		
		// Если после распределения остались лишние резервы - их нужно просто сторнировать
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Период КАК Период,
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СУММА(ВложенныйЗапрос.Резерв) - СУММА(ВложенныйЗапрос.КоличествоКПередаче) КАК ЛишнийРезерв
		|ПОМЕСТИТЬ ВтЛишниеРезервы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТКоличествоКПередаче.Период КАК Период,
		|		ВТКоличествоКПередаче.Организация КАК Организация,
		|		ВТКоличествоКПередаче.ВидЗапасов КАК ВидЗапасов,
		|		ВТКоличествоКПередаче.НомерГТД КАК НомерГТД,
		|		ВТКоличествоКПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		ВТКоличествоКПередаче.КоличествоКПередаче КАК КоличествоКПередаче,
		|		0 КАК Резерв
		|	ИЗ
		|		ВТКоличествоКПередаче КАК ВТКоличествоКПередаче
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОНЕЦПЕРИОДА(РезервыПоПериодам.Период, МЕСЯЦ),
		|		РезервыПоПериодам.Организация,
		|		РезервыПоПериодам.ВидЗапасов,
		|		РезервыПоПериодам.НомерГТД,
		|		РезервыПоПериодам.АналитикаУчетаНоменклатуры,
		|		0,
		|		РезервыПоПериодам.КоличествоОборот
		|	ИЗ
		|		РегистрНакопления.РезервыТоваровОрганизаций.ОстаткиИОбороты(&НачалоПериодаГраница, &КонецПериодаГраница, МЕСЯЦ, Движения, ) КАК РезервыПоПериодам
		|	ГДЕ
		|		РезервыПоПериодам.КоличествоОборот > 0) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Период,
		|	ВложенныйЗапрос.Организация,
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.Резерв) - СУММА(ВложенныйЗапрос.КоличествоКПередаче) > 0 И
		|	СУММА(ВложенныйЗапрос.Резерв) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация,
		|	ВидЗапасов,
		|	Период,
		|	НомерГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
		|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
		|	РезервыТоваровОрганизаций.Организация КАК Организация,
		|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
		|	РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
		|	РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
		|	СУММА(ВЫБОР
		|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РезервыТоваровОрганизаций.Количество
		|			ИНАЧЕ -РезервыТоваровОрганизаций.Количество
		|		КОНЕЦ) КАК Количество,
		|	СУММА(ВЫБОР
		|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
		|				ТОГДА 0
		|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|			ИНАЧЕ -ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|		КОНЕЦ) КАК КоличествоПоРНПТ
		|ИЗ
		|	ВтЛишниеРезервы КАК ВтЛишниеРезервы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
		|		ПО (КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) = ВтЛишниеРезервы.Период)
		|			И (РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ВтЛишниеРезервы.АналитикаУчетаНоменклатуры)
		|			И (РезервыТоваровОрганизаций.Организация = ВтЛишниеРезервы.Организация)
		|			И (РезервыТоваровОрганизаций.ВидЗапасов = ВтЛишниеРезервы.ВидЗапасов)
		|			И (РезервыТоваровОрганизаций.НомерГТД = ВтЛишниеРезервы.НомерГТД)
		|
		|СГРУППИРОВАТЬ ПО
		|	РезервыТоваровОрганизаций.Организация,
		|	РезервыТоваровОрганизаций.ВидЗапасов,
		|	РезервыТоваровОрганизаций.КорВидЗапасов,
		|	РезервыТоваровОрганизаций.КорОрганизация,
		|	КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ),
		|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизаций.НомерГТД
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РезервыТоваровОрганизаций.Количество
		|			ИНАЧЕ -РезервыТоваровОрганизаций.Количество
		|		КОНЕЦ) > 0";
		
		Запрос.Текст = ТекстЗапроса;
		
		РезультатыЗапроса = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
		
		ЛишниеРезервы = РезультатыЗапроса[0].Выгрузить();
		
		КолонкиПоиска = "АналитикаУчетаНоменклатуры,НомерГТД,Организация,ВидЗапасов";
		ОтборПоиска = Новый Структура(КолонкиПоиска);
		
		РезервыСКорЧастью = РезультатыЗапроса[1].Выгрузить(); // ТаблицаЗначений
		РезервыСКорЧастью.Индексы.Добавить(КолонкиПоиска);
		
		Если ЛишниеРезервы.Количество() > 0 Тогда
			
			ТаблицаДвижений = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			
			Для Каждого СтрТабл Из ЛишниеРезервы Цикл
				
				НераспределенныйЛишнийРезерв = СтрТабл.ЛишнийРезерв;
				ЗаполнитьЗначенияСвойств(ОтборПоиска, СтрТабл);
				
				КорЧасти = РезервыСКорЧастью.НайтиСтроки(ОтборПоиска);
				
				Для Каждого СтрМас из КорЧасти Цикл
					
					СторноКоличества = Мин(НераспределенныйЛишнийРезерв, СтрМас.Количество);
					
					СтрокаСторноПрихода = ТаблицаДвижений.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСторноПрихода, СтрМас);
					СтрокаСторноПрихода.ВидДвижения = ВидДвиженияНакопления.Приход;
					СтрокаСторноПрихода.Количество = - СторноКоличества;
					СтрокаСторноПрихода.КоличествоПоРНПТ = - СторноКоличества * СтрМас.КоличествоПоРНПТ / СтрМас.Количество;
					СтрокаСторноПрихода.ЭтоСторно  = Истина;
					
					СтрокаСторноРасхода = ТаблицаДвижений.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСторноРасхода, СтрокаСторноПрихода);
					СтрокаСторноРасхода.ВидДвижения    = ВидДвиженияНакопления.Расход;
					СтрокаСторноРасхода.Организация    = СтрокаСторноПрихода.КорОрганизация;
					СтрокаСторноРасхода.ВидЗапасов     = СтрокаСторноПрихода.КорВидЗапасов;
					СтрокаСторноРасхода.КорОрганизация = СтрокаСторноПрихода.Организация;
					СтрокаСторноРасхода.КорВидЗапасов  = СтрокаСторноПрихода.ВидЗапасов;
					
					НераспределенныйЛишнийРезерв = НераспределенныйЛишнийРезерв - СторноКоличества;
					
					Если НераспределенныйЛишнийРезерв = 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
				Если НераспределенныйЛишнийРезерв <> 0 Тогда
					ТекстИсключения = НСтр("ru = 'Ошибка при распределении лишних резервов. Обратитесь к разработчикам.'");
					ВызватьИсключение ТекстИсключения;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ТаблицаДвижений.Количество() > 0 Тогда
				
				КорректировкаРегистров = Документы.КорректировкаРегистров.СоздатьДокумент();
				КорректировкаРегистров.Дата = ТекущийМесяц;
				КорректировкаРегистров.Комментарий = НСтр("ru = 'Создан автоматически при сторнировании лишнего резерва.'",
				ОбщегоНазначения.КодОсновногоЯзыка());
				
				НоваяСтрока = КорректировкаРегистров.ТаблицаРегистров.Добавить();
				НоваяСтрока.Имя = "РезервыТоваровОрганизаций";
				
				КорректировкаРегистров.Записать();
				
				Набор = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(КорректировкаРегистров.Ссылка);
				Набор.Загрузить(ТаблицаДвижений);
				
				СтруктураВременныеТаблицы = Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
				Набор.ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура("СтруктураВременныеТаблицы",СтруктураВременныеТаблицы));
				Набор.Записывать = Истина;
				Набор.Записать();
				
			КонецЕсли;
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
		Возврат Истина;
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Возникла ошибка при переносе резервов товаров организаций за период %1: %2'"),
			Формат(ТекущийМесяц, "ДЛФ=DD"),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияПереносаРезервов(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций,,
			ТекстОшибки
		);
		
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции

Функция ИмяСобытияПереносаРезервов() Экспорт
	Возврат НСтр("ru = 'Перенос резервов товаров организаций'", ОбщегоНазначения.КодОсновногоЯзыка());
КонецФункции

Процедура ВзвестиКонстантуПериодыРезервовТоваровОрганизацийАктуальны(Значение)
	
	УстановитьПривилегированныйРежим(Истина);
	Константы.ПериодыРезервовТоваровОрганизацийАктуальны.Установить(Значение);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ДоформироватьРезервыДляПокрытияЛишнихСторно()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизаций.Период КАК Период,
	|	РезервыТоваровОрганизаций.ВидДвижения КАК ВидДвижения,
	|	РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|	РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|	ЛОЖЬ КАК ЭтоСторно,
	|	-СУММА(РезервыТоваровОрганизаций.Количество) КАК Количество,
	|	-СУММА(РезервыТоваровОрганизаций.КоличествоПоРНПТ) КАК КоличествоПоРНПТ
	|ИЗ
	|	(ВЫБРАТЬ
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация КАК Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|		РезервыТоваровОрганизаций.ВидДвижения КАК ВидДвижения,
	|		РезервыТоваровОрганизаций.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ,
	|		РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|	ГДЕ
	|		НЕ РезервыТоваровОрганизаций.ЭтоСторно
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД,
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ),
	|		РезервыТоваровОрганизаций.ВидДвижения,
	|		РезервыТоваровОрганизаций.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ,
	|		РезервыТоваровОрганизаций.КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|	ГДЕ
	|		РезервыТоваровОрганизаций.ЭтоСторно) КАК РезервыТоваровОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОрганизаций.ВидДвижения,
	|	РезервыТоваровОрганизаций.Организация,
	|	РезервыТоваровОрганизаций.НомерГТД,
	|	РезервыТоваровОрганизаций.Период,
	|	РезервыТоваровОрганизаций.ВидЗапасов,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.КорОрганизация,
	|	РезервыТоваровОрганизаций.КорВидЗапасов
	|
	|ИМЕЮЩИЕ
	|	СУММА(РезервыТоваровОрганизаций.Количество) < 0";
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.РезервыТоваровОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		БлокировкаДанных.Заблокировать();
		
		РезервыДляПокрытияЛишнихСторно = Запрос.Выполнить().Выгрузить();
		
		Если РезервыДляПокрытияЛишнихСторно.Количество() = 0 Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		
		КорректировкаРегистров = Документы.КорректировкаРегистров.СоздатьДокумент();
		КорректировкаРегистров.Дата = ТекущаяДатаСеанса();
		КорректировкаРегистров.Комментарий = НСтр("ru = 'Создан автоматически при удалении лишних сторно-резервов.'",
			ОбщегоНазначения.КодОсновногоЯзыка()
		);
		
		НоваяСтрока = КорректировкаРегистров.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "РезервыТоваровОрганизаций";
		
		КорректировкаРегистров.Записать();
		
		Набор = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
		Набор.Отбор.Регистратор.Установить(КорректировкаРегистров.Ссылка);
		Набор.Загрузить(РезервыДляПокрытияЛишнихСторно);
		
		СтруктураВременныеТаблицы = Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
		Набор.ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура("СтруктураВременныеТаблицы",СтруктураВременныеТаблицы));
		Набор.Записывать = Истина;
		Набор.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Возникла ошибка зачете встречных резервов: %1'"),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Зачет встречных резервов товаров организаций'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций,,
			ТекстОшибки
		);
		
	КонецПопытки;
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли