#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Заказы = РегистрыНакопления.ЗапасыИПотребности.УстановитьБлокировкиЗаказовИТоваров(
		ЭтотОбъект, Отбор.Регистратор.Значение, Ложь);
	
	ВозможноОтложенноеОбеспечение = Ложь;
	Если Константы.ВариантУпорядочиванияПотребностейПоЗаказамДляОбеспечения.Получить()
				<> Перечисления.ВариантыУпорядочиванияПотребностейПоЗаказамДляОбеспечения.ПриоритетИДатаДокумента
			И Не Константы.КонтролироватьЗапасыТоваровПодлежащихРезервированиюПоМереПоступления.Получить() Тогда
		
		Для Каждого Строка Из ЭтотОбъект Цикл
			Если ЗначениеЗаполнено(Строка.ДатаСобытия) И Строка.РезервироватьПоМереПоступления <> 0 Тогда
				ВозможноОтложенноеОбеспечение = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ВозможноОтложенноеОбеспечение Тогда
		РегистрыНакопления.ЗапасыИПотребности.ДополнитьНаборЗаписямиОтложенногоОбеспечения(ЭтотОбъект);
	КонецЕсли;
	
	ТекущийЗаказ = Отбор.Регистратор.Значение;
	Если Заказы.Найти(ТекущийЗаказ) <> Неопределено Тогда
		
		ПодключаемыйНабор = ЭтотОбъект;
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Расчеты = РегистрыНакопления.ЗапасыИПотребности.РассчитатьГрафикПоЗаказамВоВременнуюТаблицу(
			Запрос,
			"РезультатыРасчетаГрафика",
			Заказы.ВыгрузитьКолонку("Заказ"),
			ПодключаемыйНабор);
			
		Расчет = Расчеты.Получить(ТекущийЗаказ);
		Если Расчет <> Неопределено И Расчет.ЕстьИзмененияПоЗаказу Тогда
			
			Запрос.УстановитьПараметр("Заказ", ТекущийЗаказ);
			Запрос.Текст =
				"ВЫБРАТЬ
				|	РезультатыРасчета.Заказ КАК Регистратор,
				|	РезультатыРасчета.Период КАК Период,
				|	РезультатыРасчета.ВидДвижения КАК ВидДвижения,
				|	РезультатыРасчета.Активность КАК Активность,
				|	РезультатыРасчета.Номенклатура КАК Номенклатура,
				|	РезультатыРасчета.Характеристика КАК Характеристика,
				|	РезультатыРасчета.Склад КАК Склад,
				|	РезультатыРасчета.Назначение КАК Назначение,
				|	РезультатыРасчета.Заказ КАК Заказ,
				|	РезультатыРасчета.ДатаСобытия КАК ДатаСобытия,
				|	РезультатыРасчета.ВНаличии КАК ВНаличии,
				|	РезультатыРасчета.Поступит КАК Поступит,
				|	РезультатыРасчета.Заказано КАК Заказано,
				|	РезультатыРасчета.РезервироватьНаСкладе КАК РезервироватьНаСкладе,
				|	РезультатыРасчета.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
				|	РезультатыРасчета.ОтложитьРезервирование КАК ОтложитьРезервирование,
				|	РезультатыРасчета.КОбеспечению КАК КОбеспечению,
				|	РезультатыРасчета.НеОбеспечивать КАК НеОбеспечивать,
				|	РезультатыРасчета.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления,
				|	РезультатыРасчета.ЗакрытьГрафикОтгрузки КАК ЗакрытьГрафикОтгрузки,
				|	НЕОПРЕДЕЛЕНО КАК ОтгружаемыйЗаказ,
				|	РезультатыРасчета.ТипЗаписи КАК ТипЗаписи,
				|	РезультатыРасчета.Сторно КАК Сторно
				|ИЗ
				|	РезультатыРасчетаГрафика КАК РезультатыРасчета
				|ГДЕ
				|	РезультатыРасчета.Заказ = &Заказ
				|		И РезультатыРасчета.Регистратор = &Заказ";
			
			Таблица = Запрос.Выполнить().Выгрузить();
			Для Индекс = 0 По Таблица.Количество() - 1 Цикл
				ЗаполнитьЗначенияСвойств(Добавить(), Таблица[Индекс]);
			КонецЦикла;
			Расчеты.Удалить(ТекущийЗаказ);
			
		КонецЕсли;
		РегистрыНакопления.ЗапасыИПотребности.ЗаписатьРезультатРасчетаГрафика(Запрос, Расчеты);
		ДополнительныеСвойства.Вставить("ЗаказыДляЗакрытияГрафика", Новый Массив);
		
	Иначе
		ДополнительныеСвойства.Вставить("ЗаказыДляЗакрытияГрафика", Заказы.ВыгрузитьКолонку("Заказ"));
	КонецЕсли;
	
	Если ТипЗнч(Отбор.Регистратор.Значение) = Тип("ДокументСсылка.КорректировкаРегистров") Тогда
		ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Истина);
		ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
		Документ = ПроведениеДокументов.ЭмуляцияДокумента(Отбор.Регистратор.Значение, Неопределено);
		ДополнительныеСвойства.Вставить("СвойстваДокумента", Документ.ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента);
		ДополнительныеСвойства.Вставить("ТаблицыКонтроля", Новый Структура());
	КонецЕсли;
	
	Если ПроведениеДокументов.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		СформироватьТаблицуИсходныхДвижений();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.ЗаказыДляЗакрытияГрафика.Количество() > 0 Тогда
		
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Расчеты = РегистрыНакопления.ЗапасыИПотребности.РассчитатьГрафикПоЗаказамВоВременнуюТаблицу(
			Запрос, "РезультатыРасчетаГрафика", ДополнительныеСвойства.ЗаказыДляЗакрытияГрафика);
		РегистрыНакопления.ЗапасыИПотребности.ЗаписатьРезультатРасчетаГрафика(Запрос, Расчеты);
		
	КонецЕсли;
	
	Если ПроведениеДокументов.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		СформироватьТаблицуИзмененийДвижений();
	КонецЕсли;
	
	Если ТипЗнч(Отбор.Регистратор.Значение) = Тип("ДокументСсылка.КорректировкаРегистров") Тогда
		Документ = ПроведениеДокументов.ЭмуляцияДокумента(Отбор.Регистратор.Значение, Неопределено);
		МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
		ЭмуляцияДокумента = ПроведениеДокументов.ЭмуляцияДокумента(Неопределено, Неопределено);
		РаспределениеЗапасовДвижения.ОтразитьЗаданияКРаспределениюЗапасов(ЭмуляцияДокумента, МенеджерВременныхТаблиц);
		СостоянияДокументов.ОтразитьСостоянияДокументов(Документ, МенеджерВременныхТаблиц);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ВключитьБлокировкуРегистраСведенийПоНабору() Экспорт
	
	ДополнительныеСвойства.Вставить("ВключитьБлокировкуРегистраСведенийПоНабору");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТаблицыИзмененийРегистра

Процедура СформироватьТаблицуИсходныхДвижений()
	
	// Текущее состояние набора помещается во временную таблицу "ДвиженияПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно текущего.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый", ДополнительныеСвойства.СвойстваДокумента.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад КАК Склад,
		|	Таблица.Назначение КАК Назначение,
		|	Таблица.Заказ КАК Заказ,
		|	Таблица.ОтгружаемыйЗаказ КАК ОтгружаемыйЗаказ,
		|	Таблица.ДатаСобытия КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА
		|				Таблица.ВНаличии
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВНаличииРасход,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.ВНаличии
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВНаличииПриход,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.РезервироватьНаСкладе
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РезервироватьНаСкладеПриход,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.ВНаличии
		|		ИНАЧЕ - Таблица.ВНаличии
		|	КОНЕЦ КАК ВНаличии,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.Поступит
		|		ИНАЧЕ - Таблица.Поступит
		|	КОНЕЦ КАК Поступит,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.Заказано
		|		ИНАЧЕ - Таблица.Заказано
		|	КОНЕЦ КАК Заказано,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.РезервироватьНаСкладе
		|		ИНАЧЕ - Таблица.РезервироватьНаСкладе
		|	КОНЕЦ КАК РезервироватьНаСкладе,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.РезервироватьПоМереПоступления
		|		ИНАЧЕ - Таблица.РезервироватьПоМереПоступления
		|	КОНЕЦ КАК РезервироватьПоМереПоступления,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.ОтложитьРезервирование
		|		ИНАЧЕ - Таблица.ОтложитьРезервирование
		|	КОНЕЦ КАК ОтложитьРезервирование,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.КОбеспечению
		|		ИНАЧЕ - Таблица.КОбеспечению
		|	КОНЕЦ КАК КОбеспечению,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.НеОбеспечивать
		|		ИНАЧЕ - Таблица.НеОбеспечивать
		|	КОНЕЦ КАК НеОбеспечивать,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.ЗакрытьГрафикПоступления
		|		ИНАЧЕ - Таблица.ЗакрытьГрафикПоступления
		|	КОНЕЦ КАК ЗакрытьГрафикПоступления,
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА
		|				Таблица.ЗакрытьГрафикОтгрузки
		|		ИНАЧЕ - Таблица.ЗакрытьГрафикОтгрузки
		|	КОНЕЦ КАК ЗакрытьГрафикОтгрузки
		|ПОМЕСТИТЬ ЗапасыИПотребностиПередЗаписью
		|ИЗ
		|	РегистрНакопления.ЗапасыИПотребности КАК Таблица
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор
		|		И НЕ &ЭтоНовый
		|		И Таблица.Активность";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицуИзмененийДвижений()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("КонтролироватьПревышениеОбособленногоОбеспечения",
		ОбеспечениеПовтИсп.КонтролироватьПревышениеОбособленногоОбеспечения());
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаИзменений.Номенклатура КАК Номенклатура,
		|	ТаблицаИзменений.Характеристика КАК Характеристика,
		|	ТаблицаИзменений.Склад КАК Склад,
		|	ТаблицаИзменений.Назначение КАК Назначение,
		|	ВЫБОР
		|		КОГДА ТаблицаИзменений.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА ТаблицаИзменений.ОтгружаемыйЗаказ
		|		ИНАЧЕ ТаблицаИзменений.Заказ
		|	КОНЕЦ КАК Заказ,
		|	ТаблицаИзменений.ДатаСобытия КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА ТаблицаИзменений.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		
		|		КОГДА ТаблицаИзменений.НаправлениеДеятельностиИзНазначения <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|			И ТаблицаИзменений.ЗаказИзНазначения = НЕОПРЕДЕЛЕНО
		|			ТОГДА НЕ ТаблицаИзменений.КонтролироватьТолькоНаличие
		|		КОГДА &КонтролироватьПревышениеОбособленногоОбеспечения И ТаблицаИзменений.ЗаказИзНазначения <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК КонтролироватьПревышениеОбособленногоОбеспечения,
		|	СУММА(ТаблицаИзменений.ВНаличииРасход) КАК ВНаличииРасход,
		|	СУММА(ТаблицаИзменений.ВНаличииПриход) КАК ВНаличииПриход,
		|	СУММА(ТаблицаИзменений.РезервироватьНаСкладеПриход) КАК РезервироватьНаСкладеПриход,
		|	СУММА(ТаблицаИзменений.ВНаличии) КАК ВНаличии,
		|	СУММА(ТаблицаИзменений.Поступит) КАК Поступит,
		|	СУММА(ТаблицаИзменений.Заказано) КАК Заказано,
		|	СУММА(ТаблицаИзменений.РезервироватьНаСкладе) КАК РезервироватьНаСкладе,
		|	СУММА(ТаблицаИзменений.РезервироватьПоМереПоступления) КАК РезервироватьПоМереПоступления,
		|	СУММА(ТаблицаИзменений.ОтложитьРезервирование) КАК ОтложитьРезервирование,
		|	СУММА(ТаблицаИзменений.КОбеспечению) КАК КОбеспечению,
		|	СУММА(ТаблицаИзменений.НеОбеспечивать) КАК НеОбеспечивать,
		|	СУММА(ТаблицаИзменений.ЗакрытьГрафикПоступления) КАК ЗакрытьГрафикПоступления,
		|	СУММА(ТаблицаИзменений.ЗакрытьГрафикОтгрузки) КАК ЗакрытьГрафикОтгрузки
		|ПОМЕСТИТЬ ЗапасыИПотребностиИзменение
		|ИЗ(
		|	ВЫБРАТЬ
		|		Таблица.Номенклатура КАК Номенклатура,
		|		Таблица.Характеристика КАК Характеристика,
		|		Таблица.Склад КАК Склад,
		|		Таблица.Назначение КАК Назначение,
		|		Таблица.Заказ КАК Заказ,
		|		Таблица.ОтгружаемыйЗаказ КАК ОтгружаемыйЗаказ,
		|		Таблица.ДатаСобытия КАК ДатаСобытия,
		|		Таблица.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиИзНазначения,
		|		Таблица.Назначение.Заказ КАК ЗаказИзНазначения,
		|		Таблица.Назначение.Партнер КАК ПартнерИзНазначения,
		|		Таблица.Назначение.КонтролироватьТолькоНаличие КАК КонтролироватьТолькоНаличие,
		|		-Таблица.ВНаличииРасход КАК ВНаличииРасход,
		|		-Таблица.ВНаличииПриход КАК ВНаличииПриход,
		|		-Таблица.РезервироватьНаСкладеПриход КАК РезервироватьНаСкладеПриход,
		|		-Таблица.ВНаличии КАК ВНаличии,
		|		-Таблица.Поступит КАК Поступит,
		|		-Таблица.Заказано КАК Заказано,
		|		-Таблица.РезервироватьНаСкладе КАК РезервироватьНаСкладе,
		|		-Таблица.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
		|		-Таблица.ОтложитьРезервирование КАК ОтложитьРезервирование,
		|		-Таблица.КОбеспечению КАК КОбеспечению,
		|		-Таблица.НеОбеспечивать КАК НеОбеспечивать,
		|		-Таблица.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления,
		|		-Таблица.ЗакрытьГрафикОтгрузки КАК ЗакрытьГрафикОтгрузки
		|	ИЗ
		|		ЗапасыИПотребностиПередЗаписью КАК Таблица
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Таблица.Номенклатура КАК Номенклатура,
		|		Таблица.Характеристика КАК Характеристика,
		|		Таблица.Склад КАК Склад,
		|		Таблица.Назначение КАК Назначение,
		|		Таблица.Заказ КАК Заказ,
		|		Таблица.ОтгружаемыйЗаказ КАК ОтгружаемыйЗаказ,
		|		Таблица.ДатаСобытия КАК ДатаСобытия,
		|		Таблица.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиИзНазначения,
		|		Таблица.Назначение.Заказ КАК ЗаказИзНазначения,
		|		Таблица.Назначение.Партнер КАК ПартнерИзНазначения,
		|		Таблица.Назначение.КонтролироватьТолькоНаличие КАК КонтролироватьТолькоНаличие,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА
		|					Таблица.ВНаличии
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ВНаличииРасход,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.ВНаличии
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ВНаличииПриход,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.РезервироватьНаСкладе
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК РезервироватьНаСкладеПриход,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.ВНаличии
		|			ИНАЧЕ - Таблица.ВНаличии
		|		КОНЕЦ КАК ВНаличии,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.Поступит
		|			ИНАЧЕ - Таблица.Поступит
		|		КОНЕЦ КАК Поступит,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.Заказано
		|			ИНАЧЕ - Таблица.Заказано
		|		КОНЕЦ КАК Заказано,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.РезервироватьНаСкладе
		|			ИНАЧЕ - Таблица.РезервироватьНаСкладе
		|		КОНЕЦ КАК РезервироватьНаСкладе,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.РезервироватьПоМереПоступления
		|			ИНАЧЕ - Таблица.РезервироватьПоМереПоступления
		|		КОНЕЦ КАК РезервироватьПоМереПоступления,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.ОтложитьРезервирование
		|			ИНАЧЕ - Таблица.ОтложитьРезервирование
		|		КОНЕЦ КАК ОтложитьРезервирование,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.КОбеспечению
		|			ИНАЧЕ - Таблица.КОбеспечению
		|		КОНЕЦ КАК КОбеспечению,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.НеОбеспечивать
		|			ИНАЧЕ - Таблица.НеОбеспечивать
		|		КОНЕЦ КАК НеОбеспечивать,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.ЗакрытьГрафикПоступления
		|			ИНАЧЕ - Таблица.ЗакрытьГрафикПоступления
		|		КОНЕЦ КАК ЗакрытьГрафикПоступления,
		|		ВЫБОР
		|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА
		|					Таблица.ЗакрытьГрафикОтгрузки
		|			ИНАЧЕ - Таблица.ЗакрытьГрафикОтгрузки
		|		КОНЕЦ КАК ЗакрытьГрафикОтгрузки
		|	ИЗ
		|		РегистрНакопления.ЗапасыИПотребности КАК Таблица
		|	ГДЕ
		|		Таблица.Регистратор = &Регистратор
		|			И Таблица.Активность) КАК ТаблицаИзменений
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаИзменений.Номенклатура,
		|	ТаблицаИзменений.Характеристика,
		|	ТаблицаИзменений.Склад,
		|	ТаблицаИзменений.Назначение,
		|	ВЫБОР
		|		КОГДА ТаблицаИзменений.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА ТаблицаИзменений.ОтгружаемыйЗаказ
		|		ИНАЧЕ ТаблицаИзменений.Заказ
		|	КОНЕЦ,
		|	ТаблицаИзменений.ДатаСобытия,
		|	ТаблицаИзменений.НаправлениеДеятельностиИзНазначения,
		|	ТаблицаИзменений.ЗаказИзНазначения,
		|	ТаблицаИзменений.ПартнерИзНазначения,
		|	ТаблицаИзменений.КонтролироватьТолькоНаличие
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаИзменений.ВНаличии) <> 0
		|		ИЛИ СУММА(ТаблицаИзменений.Поступит) <> 0
		|		ИЛИ СУММА(ТаблицаИзменений.Заказано) <> 0
		|		ИЛИ СУММА(ТаблицаИзменений.РезервироватьНаСкладе) <> 0
		|		ИЛИ СУММА(ТаблицаИзменений.РезервироватьПоМереПоступления) <> 0
		|		ИЛИ СУММА(ТаблицаИзменений.ОтложитьРезервирование) <> 0
		|		ИЛИ СУММА(ТаблицаИзменений.КОбеспечению) <> 0
		|		ИЛИ СУММА(ТаблицаИзменений.НеОбеспечивать) <> 0
		|		ИЛИ СУММА(ТаблицаИзменений.ЗакрытьГрафикПоступления) <> 0
		|		ИЛИ СУММА(ТаблицаИзменений.ЗакрытьГрафикОтгрузки) <> 0
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад КАК Склад,
		|	Таблица.Назначение КАК Назначение,
		|	Таблица.Заказ КАК Заказ
		|ПОМЕСТИТЬ ЗапасыИПотребностиЗатронутыеЗаказы
		|ИЗ
		|	РегистрНакопления.ЗапасыИПотребности КАК Таблица
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор
		|		И Таблица.Активность
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад КАК Склад,
		|	Таблица.Назначение КАК Назначение,
		|	Таблица.Заказ КАК Заказ
		|ИЗ
		|	ЗапасыИПотребностиПередЗаписью КАК Таблица
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, Заказ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[0].Выбрать();
	ЕстьИзменения = Выборка.Следующий() И Выборка.Количество > 0;
	ПроведениеДокументов.ЗарегистрироватьТаблицуКонтроля(ДополнительныеСвойства, "ЗапасыИПотребностиИзменение", ЕстьИзменения);
	ПроведениеДокументов.ЗарегистрироватьТаблицуКонтроля(ДополнительныеСвойства, "ЗапасыИПотребностиПередЗаписью", ЕстьИзменения);
	ПроведениеДокументов.ЗарегистрироватьТаблицуКонтроля(ДополнительныеСвойства, "ЗапасыИПотребностиЗатронутыеЗаказы", ЕстьИзменения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

