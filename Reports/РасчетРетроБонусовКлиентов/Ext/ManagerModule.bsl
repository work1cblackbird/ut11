//@strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Задает расширенные настройки отчета
//
// Параметры:
//   Настройки - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.Настройки.
//   НастройкиОтчета - см. ВариантыОтчетов.ОписаниеОтчета.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасчетРетроБонусовКлиентов);
	ОписаниеОтчета.ВидимостьПоУмолчанию = Истина;
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область КомандыПодменюОтчеты

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   КлючВарианта - Строка -
//   
//	Возвращаемое значение:
//		СтрокаТаблицыЗначений - описание созданной команды.
//
Функция ДобавитьКомандуРасчетРетроБонусовКлиентов(КомандыОтчетов, КлючВарианта = "") Экспорт
	
	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.РасчетРетроБонусовКлиентов) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		Представление = НСтр("ru = 'Расчет ретро-бонусов клиентов'");
		КомандаОтчет.Менеджер = Метаданные.Отчеты.РасчетРетроБонусовКлиентов.ПолноеИмя();
		КомандаОтчет.Представление = Представление;
		
		КомандаОтчет.МножественныйВыбор = Ложь;
		КомандаОтчет.Важность = "Важное";
		Если ЗначениеЗаполнено(КлючВарианта) Тогда
			КомандаОтчет.КлючВарианта = КлючВарианта;
		КонецЕсли;
		
		КомандаОтчет.Обработчик = "РетроБонусыКлиент.РасчетРетроБонусовКлиентов";
		
		Возврат КомандаОтчет;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. Документы.УсловияРетроБонусовКлиентов.АктуальныеДанные
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
// 
// Возвращаемое значение:
//  Строка - Текст запроса
//
Функция ТекстЗапроса(ПараметрыУсловийРетроБонусов, ПараметрыВарианта) Экспорт
	
	ПоказательПродаж = ПараметрыУсловийРетроБонусов.ПоказательПродаж;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	ТекстыЗапросов = Новый Массив; // Массив Из Строка
	
	Если ПоказательПродаж = ВидыПоказателей.НеИспользуется Тогда
		
		СформироватьТекстыЗапросовБезЦелевогоПоказателя(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательПродаж = ВидыПоказателей.Сумма Тогда
		
		СформироватьТекстыЗапросовПоЦелевомуПоказателюСумма(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательПродаж = ВидыПоказателей.Количество Тогда
		
		СформироватьТекстыЗапросовПоЦелевомуПоказателюКоличество(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательПродаж = ВидыПоказателей.КоличествоСовокупно Тогда
		
		СформироватьТекстыЗапросовПоЦелевомуПоказателюКоличествоСовокупно(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательПродаж = ВидыПоказателей.ПакетноеПредложение Тогда
		
		СформироватьТекстыЗапросовПоЦелевомуПоказателюПакетноеПредложение(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательПродаж = ВидыПоказателей.ПустаяСсылка() Тогда
		
		ШаблонОшибки = НСтр("ru = 'Не заполнен целевой показатель продаж для документа ""%1""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить целевой показатель продаж (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПоказательПродажПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	РазделительПакетаЗапросов = ОбщегоНазначения.РазделительПакетаЗапросов();
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, РазделительПакетаЗапросов);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращаемое значение:
//  Структура - Параметры варианта отчета:
// * КлючВарианта - Строка - Имя варианта в СКД
// * ЭтоРасшифровкаПоДокументам - Булево 
// * ЭтоРасшифровкаПоНоменклатуре - Булево
// * ЭтоРасшифровка - Булево
// * РежимРасшифровки - Булево - Значение флага ДополнительныеСвойства.РежимРасшифровки в настройках компоновщика
// * ПоляРасшифровки - Массив Из ПолеКомпоновкиДанных
// * ВариантМодифицированПользователем - Булево
// 
Функция НовыеПараметрыВарианта() Экспорт
	
	ПараметрыВарианта = Новый Структура;
	ПараметрыВарианта.Вставить("КлючВарианта", "");
	ПараметрыВарианта.Вставить("ЭтоРасшифровкаПоДокументам", Ложь);
	ПараметрыВарианта.Вставить("ЭтоРасшифровкаПоНоменклатуре", Ложь);
	ПараметрыВарианта.Вставить("ЭтоРасшифровка", Ложь);
	ПараметрыВарианта.Вставить("РежимРасшифровки", Ложь);
	ПараметрыВарианта.Вставить("ПоляРасшифровки", Новый Массив);
	ПараметрыВарианта.Вставить("ВариантМодифицированПользователем", Ложь);
	
	Возврат ПараметрыВарианта;
	
КонецФункции

// Возвращает таблицу рассчитанных ретро-бонусов клиентов по указанным условиям с детализацией до документа продажи.
// 
// Параметры:
//  ПараметрыРасчета - см. ПараметрыРасчетаРетроБонусов
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Рассчитанные ретро-бонусы по указанным условиям
//  
Функция РетроБонусыЗаПериодПоДокументамПродажи(ПараметрыРасчета) Экспорт
	
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Отчет.РасчетРетроБонусовКлиентов.МодульМенеджера.РетроБонусыЗаПериодПоДокументамПродажи");
	
	Реквизиты = "Проведен, БезРасчета, Статус, Исправление, ИсправляемыйДокумент";
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыРасчета.ДокументУсловий, Реквизиты);
	Если ЗначенияРеквизитов.Исправление = Истина Тогда
		ИсходныйДокумент = ЗначенияРеквизитов.ИсправляемыйДокумент;
	Иначе
		ИсходныйДокумент = ПараметрыРасчета.ДокументУсловий;
	КонецЕсли;
	ПараметрыУсловий = Документы.УсловияРетроБонусовКлиентов.АктуальныеДанные(ИсходныйДокумент);
	
	// корректировка периода расчета по периоду действия условий
	
	ПустаяДата = '00010101';
	
	Если ПараметрыРасчета.ДатаНачала = ПустаяДата
	 ИЛИ ПараметрыРасчета.ДатаНачала < ПараметрыУсловий.НачалоДействия
	 ИЛИ ПараметрыРасчета.ДатаНачала > ПараметрыУсловий.ОкончаниеДействия Тогда
		
		ПараметрыРасчета.ДатаНачала = ПараметрыУсловий.НачалоДействия;
		
	КонецЕсли;
	
	Если ПараметрыРасчета.ДатаОкончания = ПустаяДата
	 ИЛИ ПараметрыРасчета.ДатаОкончания < ПараметрыУсловий.НачалоДействия
	 ИЛИ ПараметрыРасчета.ДатаОкончания > КонецДня(ПараметрыУсловий.ОкончаниеДействия) Тогда
		
		ПараметрыРасчета.ДатаОкончания = ПараметрыУсловий.ОкончаниеДействия;
		
	КонецЕсли;
	
	ПараметрыВарианта = НовыеПараметрыВарианта();
	ПараметрыВарианта.КлючВарианта = "НачисленияПоДокументам";
	ПараметрыВарианта.ЭтоРасшифровка = Истина;
	ПараметрыВарианта.ЭтоРасшифровкаПоДокументам = Истина;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	ТекстЗапроса = ТекстЗапроса(ПараметрыУсловий, ПараметрыВарианта);
	СхемаКомпоновкиДанных.НаборыДанных.РасчетРетроБонусовКлиентов.Запрос = ТекстЗапроса;
	
	КомпонуемыйВариантОтчета = СхемаКомпоновкиДанных.ВариантыНастроек[ПараметрыВарианта.КлючВарианта];
	
	КомпоновщикНастроекПоВарианту = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекПоВарианту.ЗагрузитьНастройки(КомпонуемыйВариантОтчета.Настройки);
	ИсточникДоступныхНастроекКД = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных);
	КомпоновщикНастроекПоВарианту.Инициализировать(ИсточникДоступныхНастроекКД);
	НастройкиОтчета = КомпоновщикНастроекПоВарианту.ПолучитьНастройки();
	
	УстанавливаемыеПараметры = Новый Соответствие;
	УстанавливаемыеПараметры.Вставить("ДокументУсловийРетроБонусов", ПараметрыРасчета.ДокументУсловий);
	УстанавливаемыеПараметры.Вставить("ИсходныйДокумент", ИсходныйДокумент);
	УстанавливаемыеПараметры.Вставить("Организация", ПараметрыРасчета.Организация);
	УстанавливаемыеПараметры.Вставить("ДатаНачала", ПараметрыРасчета.ДатаНачала);
	УстанавливаемыеПараметры.Вставить("ДатаОкончания", КонецДня(ПараметрыРасчета.ДатаОкончания));
	УстанавливаемыеПараметры.Вставить("Контрагент", ПараметрыРасчета.Контрагент);
	УстанавливаемыеПараметры.Вставить("Партнер", ПараметрыРасчета.Партнер);
	ИсключаемыеХозяйственныеОперации = Отчеты.РасчетРетроБонусовКлиентов.ИсключаемыеХозяйственныеОперации();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета, "ИсключаемыеХозяйственныеОперации", ИсключаемыеХозяйственныеОперации);
	ИсключаемыеНастройкиХозОпераций = Отчеты.РасчетРетроБонусовКлиентов.ИсключаемыеНастройкиХозяйственныхОпераций();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета, "ИсключаемыеНастройкиХозяйственныхОпераций", ИсключаемыеНастройкиХозОпераций);
	
	КомпоновкаДанныхКлиентСервер.УстановитьКоллекциюПараметров(НастройкиОтчета, УстанавливаемыеПараметры);
	
	Если ЗначениеЗаполнено(ПараметрыРасчета.Валюта) Тогда
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(НастройкиОтчета, "Валюта", ПараметрыРасчета.Валюта);
		
	КонецЕсли;
	
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(Замер, 1, "ОпределениеУсловийУстановкаПараметров");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, НастройкиОтчета,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(Замер, ТаблицаРезультат.Количество(), "Компоновка");
	
	// дозаполнение полей по участникам
	
	ДетализацияРасчетаУчастников = ПараметрыУсловий.ДетализацияРасчетаУчастников;
	ДетализацииУчастников = Перечисления.ДетализацияРасчетаУчастниковРетроБонусов;
	
	Если ДетализацияРасчетаУчастников <> ДетализацииУчастников.ПоКонтрагентуКлиенту Тогда
		
		ДокументыПродажи = ОбщегоНазначенияУТ.УникальныеЗначенияИзКолонкиТаблицы(
			ТаблицаРезультат, "ДокументПродажи");
		УчастникиПоДокументамПродажи = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
			ДокументыПродажи, "Контрагент, Партнер");
		
		Для Каждого СтрокаТаблицы Из ТаблицаРезультат Цикл
			
			УчастникиДокумента = УчастникиПоДокументамПродажи[СтрокаТаблицы.ДокументПродажи];
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, УчастникиДокумента);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, 1, "ЗаполнениеУчастников");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

// Параметры расчета ретро бонусов.
// 
// Возвращаемое значение:
//  Структура:
//  * ДокументУсловий - ДокументСсылка.УсловияРетроБонусовКлиентов -
//  * Организация - СправочникСсылка.Организации -
//  * ДатаСозданияДокументов - Дата - Начало периода расчета бонусов
//  * ДатаНачала - Дата - Начало периода расчета бонусов
//  * ДатаОкончания - Дата - Окончание периода расчета бонусов
//  * Контрагент - СправочникСсылка.Контрагенты - Отбор по контрагенту
//  * Партнер - СправочникСсылка.Партнеры - Отбор по клиенту
//  * Валюта - СправочникСсылка.Валюты - Отбор по валюте
// 
Функция ПараметрыРасчетаРетроБонусов() Экспорт
	
	ПустаяДата = Дата(1, 1, 1);
	
	Параметры = Новый Структура;
	Параметры.Вставить("ДокументУсловий", Документы.УсловияРетроБонусовКлиентов.ПустаяСсылка());
	Параметры.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Параметры.Вставить("ДатаСозданияДокументов", ПустаяДата);
	Параметры.Вставить("ДатаНачала", ПустаяДата);
	Параметры.Вставить("ДатаОкончания", ПустаяДата);
	Параметры.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	Параметры.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
	Параметры.Вставить("Валюта", Справочники.Валюты.ПустаяСсылка());
	
	Возврат Параметры;
	
КонецФункции

Функция ИсключаемыеХозяйственныеОперации() Экспорт
	
	Результат = Новый Массив; // Массив Из ПеречислениеСсылка.ХозяйственныеОперации
	Результат.Добавить(Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионера);
	Результат.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	Возврат Результат;
	
КонецФункции

Функция ИсключаемыеНастройкиХозяйственныхОпераций() Экспорт
	
	Результат = Новый Массив; // Массив Из СправочникСсылка.НастройкиХозяйственныхОпераций
	Результат.Добавить(Справочники.НастройкиХозяйственныхОпераций.РеализацияЧерезКомиссионера);
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТекстЗапроса

Функция РазделительПодзапросов()
	
	РазделительПодзапросов = Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
	Возврат РазделительПодзапросов;
	
КонецФункции

Процедура ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, ИмяТаблицы, ИмяТаблицыСвязи = "", ПустыеЗначения = Ложь)
	
	ДетализацияРасчетаУчастников = ПараметрыУсловийРетроБонусов.ДетализацияРасчетаУчастников;
	ДетализацииУчастников = Перечисления.ДетализацияРасчетаУчастниковРетроБонусов;
	
	Если ДетализацияРасчетаУчастников = ДетализацииУчастников.ПоКлиенту Тогда
		
		ПоляУчастники = ИмяТаблицы + ".Партнер КАК Партнер";
		Если ПустыеЗначения Тогда
			
			ПоляУчастники = ПоляУчастники + ",
			|ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент";
			
		КонецЕсли;
		
		ПоляСоединенияПоУчастникам = СтрШаблон("%1.Партнер = %2.Партнер", ИмяТаблицы, ИмяТаблицыСвязи);
		ПоляГруппировкиПоУчастникам = ИмяТаблицы + ".Партнер";
		ПоляИндексированияПоУчастникам = "Партнер";
		
	ИначеЕсли ДетализацияРасчетаУчастников = ДетализацииУчастников.ПоКонтрагенту Тогда
		
		ПоляУчастники = ИмяТаблицы + ".Контрагент КАК Контрагент";
		Если ПустыеЗначения Тогда
			
			ПоляУчастники = ПоляУчастники + ",
			|ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер";
			
		КонецЕсли;
		
		ПоляСоединенияПоУчастникам = СтрШаблон("%1.Контрагент = %2.Контрагент", ИмяТаблицы, ИмяТаблицыСвязи);
		ПоляГруппировкиПоУчастникам = ИмяТаблицы + ".Контрагент";
		ПоляИндексированияПоУчастникам = "Контрагент";
		
	ИначеЕсли ДетализацияРасчетаУчастников = ДетализацииУчастников.ПоКонтрагентуКлиенту Тогда
		
		ПоляУчастники = СтрШаблон(
			"%1.Контрагент КАК Контрагент,
			|%1.Партнер КАК Партнер",
			ИмяТаблицы);
			
		ПоляСоединенияПоУчастникам = СтрШаблон(
			"%1.Контрагент = %2.Контрагент
			|И %1.Партнер = %2.Партнер",
			ИмяТаблицы,
			ИмяТаблицыСвязи);
		
		ПоляГруппировкиПоУчастникам = СтрШаблон(
			"%1.Контрагент,
			|%1.Партнер",
			ИмяТаблицы);
		
		ПоляИндексированияПоУчастникам =
		"Контрагент,
		|Партнер";
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить детализацию участников (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ДетализацияРасчетаУчастниковПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляУчастники", ПоляУчастники);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляСоединенияПоУчастникам", ПоляСоединенияПоУчастникам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляГруппировкиПоУчастникам", ПоляГруппировкиПоУчастникам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляИндексированияПоУчастникам", ПоляИндексированияПоУчастникам);
	
КонецПроцедуры

Процедура ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, ИмяТаблицы, ИмяТаблицыСвязи = "")
	
	ПоказательПродаж = ПараметрыУсловийРетроБонусов.ПоказательПродаж;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если ПоказательПродаж = ВидыПоказателей.Количество
	 ИЛИ ПоказательПродаж = ВидыПоказателей.КоличествоСовокупно
	 ИЛИ ПоказательПродаж = ВидыПоказателей.ПакетноеПредложение Тогда
		
		ПоляТоваров = СтрШаблон(
			"%1.Номенклатура КАК Номенклатура,
			|%1.Характеристика КАК Характеристика",
			ИмяТаблицы);
		
		ПоляСоединенияПоТоварам = СтрШаблон(
			"%1.Номенклатура = %2.Номенклатура
			|И %1.Характеристика = %2.Характеристика",
			ИмяТаблицы,
			ИмяТаблицыСвязи);
		
		ПоляГруппировкиПоТоварам = СтрШаблон(
			"%1.Номенклатура,
			|%1.Характеристика",
			ИмяТаблицы);
			
		ПоляИндексированияПоТоварам =
		"Номенклатура,
		|Характеристика";
		
	Иначе
		
		ПоляТоваров = "NULL КАК Номенклатура";
		ПоляСоединенияПоТоварам = "ИСТИНА";
		ПоляГруппировкиПоТоварам = "NULL";
		ПоляИндексированияПоТоварам = "1";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляТоваров", ПоляТоваров);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляСоединенияПоТоварам", ПоляСоединенияПоТоварам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляГруппировкиПоТоварам", ПоляГруппировкиПоТоварам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляИндексированияПоТоварам", ПоляИндексированияПоТоварам);
	
КонецПроцедуры

Функция ПорцияНарастающегоИтога()
	
	Возврат "100";
	
КонецФункции

Функция СубпорцияНарастающегоИтога()
	
	Возврат "10";
	
КонецФункции

Процедура СформироватьТекстыЗапросовБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаИтоговыеДанныеБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПоЦелевомуПоказателюСумма(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажиБезОтбораПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажиСОтборомПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажиПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПодготовленныеДанныеПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		ДобавитьТекстЗапросаПродажиПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоПорциям",
			"ВТ_ПродажиПоПорциямНарастающийИтог");
		ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоПорциямНарастающийИтог",
			"ВТ_ПорцияПревышенияЛимита");
		ДобавитьТекстЗапросаПорцияПревышенияЛимитаСуммаПродаж(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПорцияПревышенияЛимитаСуммаПродаж",
			"ВТ_ПродажиЗаПорциюПревышенияЛимита",
			ПорцияНарастающегоИтога());
		
		ДобавитьТекстЗапросаПродажиПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоСубпорциям",
			"ВТ_ПродажиПоСубпорциямНарастающийИтог");
		ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоСубпорциямНарастающийИтог",
			"ВТ_СубпорцияПревышенияЛимита");
		ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаПродажиДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаПродажиДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_СубпорцияПревышенияЛимитаПродажиДоСубпорции",
			"ВТ_ПродажиЗаСубпорциюПревышенияЛимита",
			СубпорцияНарастающегоИтога());
		
		ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		
		ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.ПропорциональноВыручке Тогда
		
		ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПоЦелевомуПоказателюКоличество(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	ДобавитьТекстЗапросаТоварыМинимальныйПланПоУпаковкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаМинимальныеПараметрыПоПозиции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажиПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПодготовленныеДанныеОпределениеПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		ДобавитьТекстЗапросаПродажиПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоПорциям",
			"ВТ_ПродажиПоПорциямНарастающийИтог");
		ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоПорциямНарастающийИтог",
			"ВТ_ПорцияПревышенияЛимита");
		ДобавитьТекстЗапросаПорцияПревышенияЛимитаСуммаПродаж(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПорцияПревышенияЛимитаСуммаПродаж",
			"ВТ_ПродажиЗаПорциюПревышенияЛимита",
			ПорцияНарастающегоИтога());
		
		ДобавитьТекстЗапросаПродажиПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоСубпорциям",
			"ВТ_ПродажиПоСубпорциямНарастающийИтог");
		ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоСубпорциямНарастающийИтог",
			"ВТ_СубпорцияПревышенияЛимита");
		ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаПродажиДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаПродажиДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_СубпорцияПревышенияЛимитаПродажиДоСубпорции",
			"ВТ_ПродажиЗаСубпорциюПревышенияЛимита",
			СубпорцияНарастающегоИтога());
		
		ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	КонецЕсли;
	
	ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаОбщееКоличествоПоПозициямДляРасчетаБонуса(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОСуммаБонусаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.ПропорциональноВыручке Тогда
		
		ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПоЦелевомуПоказателюКоличествоСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажиПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажиПоПериодамУсловияПакетаНеВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажиПоПериодамУсловияПакетаВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличествуСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПоЦелевомуПоказателюПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаКратностьПакетаТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПроданоПакетовТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПодготовленныеДанныеПоПакетномуПредложению(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		ДобавитьТекстЗапросаПродажиПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоПорциям",
			"ВТ_ПродажиПоПорциямНарастающийИтог");
		ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоПорциямНарастающийИтог",
			"ВТ_ПорцияПревышенияЛимита");
		ДобавитьТекстЗапросаПорцияПревышенияЛимитаСуммаПродаж(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПорцияПревышенияЛимитаСуммаПродаж",
			"ВТ_ПродажиЗаПорциюПревышенияЛимита",
			ПорцияНарастающегоИтога());
		
		ДобавитьТекстЗапросаПродажиПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоСубпорциям",
			"ВТ_ПродажиПоСубпорциямНарастающийИтог");
		ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ПродажиПоСубпорциямНарастающийИтог",
			"ВТ_СубпорцияПревышенияЛимита");
		ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаПродажиДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаПродажиДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПродажиЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_СубпорцияПревышенияЛимитаПродажиДоСубпорции",
			"ВТ_ПродажиЗаСубпорциюПревышенияЛимита",
			СубпорцияНарастающегоИтога());
		
		ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	КонецЕсли;
	
	ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаОбщееКоличествоПоПозициямДляРасчетаБонуса(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОСуммаБонусаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.ПропорциональноВыручке Тогда
		
		ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РетроБонусыКлиентовУсловия.ДокументУсловий КАК УсловиеРетроБонуса,
	|	РетроБонусыКлиентовУсловия.НачалоДействия КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(РетроБонусыКлиентовУсловия.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
	|	РетроБонусыКлиентовУсловия.УчитыватьНДС КАК УчитыватьНДС,
	|	РетроБонусыКлиентовУсловия.Валюта КАК Валюта,
	|	РетроБонусыКлиентовУсловия.Вид.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	РетроБонусыКлиентовУсловия.Вид.ПоказательПродаж КАК ПоказательПродаж,
	|	РетроБонусыКлиентовУсловия.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	РетроБонусыКлиентовУсловия.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	РетроБонусыКлиентовУсловия.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	РетроБонусыКлиентовУсловия.БонусПроцент КАК БонусПроцент,
	|	РетроБонусыКлиентовУсловия.СуммаПлан КАК СуммаПлан,
	|	РетроБонусыКлиентовУсловия.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	(РетроБонусыКлиентовУсловия.Вид.ПорядокРаспределения = ЗНАЧЕНИЕ(Перечисление.ПорядкиРаспределенияРетроБонусов.FIFO)) КАК РаспределениеПоФИФО,
	|	(РетроБонусыКлиентовУсловия.Товары = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Выбранные)) КАК ОтборТоваровВыбранные,
	|	(РетроБонусыКлиентовУсловия.Товары = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.КромеВыбранных)) КАК ОтборТоваровКромеВыбранных,
	|	(РетроБонусыКлиентовУсловия.Товары = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Все)) КАК ОтборТоваровБезОграничений,
	|	РетроБонусыКлиентовУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.ИНН) КАК ОтборПоИНН,
	|	(РетроБонусыКлиентовУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.Клиенты)
	|		ИЛИ РетроБонусыКлиентовУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.Контрагенты)
	|		ИЛИ РетроБонусыКлиентовУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.СегментыПартнеров)) КАК ОтборПоКонтрагентамПартнерам,
	|	(РетроБонусыКлиентовУсловия.Участники = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Выбранные)) КАК ОтборУчастниковВыбранные,
	|	(РетроБонусыКлиентовУсловия.Участники = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.КромеВыбранных)) КАК ОтборУчастниковКромеВыбранных,
	|	(РетроБонусыКлиентовУсловия.Участники = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Все)) КАК ОтборУчастниковБезОграничений
	|ПОМЕСТИТЬ ВТ_ПараметрыРБ
	|ИЗ
	|	РегистрСведений.РетроБонусыКлиентовУсловия КАК РетроБонусыКлиентовУсловия
	|ГДЕ
	|	РетроБонусыКлиентовУсловия.ДокументУсловий = &ИсходныйДокумент";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Все Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РетроБонусыКлиентовТовары.ДокументУсловий КАК УсловияРетроБонусовПокупателей,
	|	РетроБонусыКлиентовТовары.НачалоДействия КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(РетроБонусыКлиентовТовары.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
	|	РетроБонусыКлиентовТовары.Номенклатура КАК Номенклатура,
	|	РетроБонусыКлиентовТовары.Характеристика КАК Характеристика,
	|	РетроБонусыКлиентовТовары.БазоваяЦена КАК БазоваяЦена,
	|	РетроБонусыКлиентовТовары.БонусПроцент КАК БонусПроцент,
	|	РетроБонусыКлиентовТовары.КоличествоПлан КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&ТаблицаИсточник КАК РетроБонусыКлиентовТовары
	|ГДЕ
	|	&УсловиеПоДокументу
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика";
	
	Если ПараметрыУсловийРетроБонусов.СоставТоваров = Перечисления.СоставыТоваровРетроБонусов.СегментыНоменклатуры
	   И НЕ ПараметрыУсловийРетроБонусов.СегментыЗафиксированы Тогда
		
		// Таблица ВТ_СоставСегментовТоваров будет передана в ПроцессорКомпоновкиДанных через МенеджерВременныхТаблиц
		ТаблицаИсточник = "ВТ_СоставСегментовТоваров";
		УсловиеПоДокументу = "ИСТИНА";
		
	Иначе
		
		ТаблицаИсточник = "РегистрСведений.РетроБонусыКлиентовТовары";
		УсловиеПоДокументу =
		"РетроБонусыКлиентовТовары.ДокументУсловий В
		|			(ВЫБРАТЬ
		|				ВТ_ПараметрыРБ.УсловиеРетроБонуса
		|			ИЗ
		|				ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ)";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДокументу", УсловиеПоДокументу);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаТоварыМинимальныйПланПоУпаковкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_Товары.УсловияРетроБонусовПокупателей КАК УсловияРетроБонусовПокупателей,
	|	ВТ_Товары.ДатаНачала КАК ДатаНачала,
	|	ВТ_Товары.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Характеристика КАК Характеристика,
	|	МИНИМУМ(ВТ_Товары.КоличествоПлан) КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_ТоварыМинимальныйПланПоУпаковкам
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.УсловияРетроБонусовПокупателей,
	|	ВТ_Товары.ДатаНачала,
	|	ВТ_Товары.ДатаОкончания,
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Характеристика";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаМинимальныеПараметрыПоПозиции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.УсловияРетроБонусовПокупателей КАК УсловияРетроБонусовПокупателей,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.ДатаНачала КАК ДатаНачала,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.Номенклатура КАК Номенклатура,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.Характеристика КАК Характеристика,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_Товары.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_Товары.БонусПроцент КАК БонусПроцент
	|ПОМЕСТИТЬ ВТ_ТоварыМинимальныйПараметрыПоПозиции
	|ИЗ
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам КАК ВТ_ТоварыМинимальныйПланПоУпаковкам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ВТ_ТоварыМинимальныйПланПоУпаковкам.УсловияРетроБонусовПокупателей = ВТ_Товары.УсловияРетроБонусовПокупателей
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.ДатаНачала = ВТ_Товары.ДатаНачала
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.ДатаОкончания = ВТ_Товары.ДатаОкончания
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.Номенклатура = ВТ_Товары.Номенклатура
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.Характеристика = ВТ_Товары.Характеристика
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.КоличествоПлан = ВТ_Товары.КоличествоПлан";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РетроБонусыКлиентовДоговорыСоглашения.ДокументУсловий КАК УсловияРетроБонусовПокупателей,
	|	РетроБонусыКлиентовДоговорыСоглашения.Соглашение КАК Соглашение,
	|	РетроБонусыКлиентовДоговорыСоглашения.НачалоДействия КАК НачалоДействия,
	|	РетроБонусыКлиентовДоговорыСоглашения.ОкончаниеДействия КАК ОкончаниеДействия,
	|	РетроБонусыКлиентовДоговорыСоглашения.СуммаПлан КАК СуммаПлан,
	|	РетроБонусыКлиентовДоговорыСоглашения.УчитыватьПродажиПоИндивидуальным КАК УчитыватьПродажиПоИндивидуальным,
	|	РетроБонусыКлиентовДоговорыСоглашения.Соглашение.Типовое КАК ТиповоеСоглашение,
	|	РетроБонусыКлиентовДоговорыСоглашения.Соглашение.Партнер КАК Партнер
	|ПОМЕСТИТЬ ВТ_СоглашенияПредварительно
	|ИЗ
	|	РегистрСведений.РетроБонусыКлиентовДоговорыСоглашения КАК РетроБонусыКлиентовДоговорыСоглашения
	|ГДЕ
	|	РетроБонусыКлиентовДоговорыСоглашения.ДокументУсловий = &ИсходныйДокумент
	|	И РетроБонусыКлиентовДоговорыСоглашения.Соглашение <> ЗНАЧЕНИЕ(Справочник.СоглашенияСКлиентами.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Соглашение,
	|	ТиповоеСоглашение,
	|	УчитыватьПродажиПоИндивидуальным";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_СоглашенияПредварительно.УсловияРетроБонусовПокупателей КАК УсловияРетроБонусовПокупателей,
	|	ВТ_СоглашенияПредварительно.Соглашение КАК Соглашение,
	|	ВТ_СоглашенияПредварительно.НачалоДействия КАК НачалоДействия,
	|	ВТ_СоглашенияПредварительно.ОкончаниеДействия КАК ОкончаниеДействия,
	|	ВТ_СоглашенияПредварительно.СуммаПлан КАК СуммаПлан,
	|	ВТ_СоглашенияПредварительно.ТиповоеСоглашение КАК ТиповоеСоглашение,
	|	ВТ_СоглашенияПредварительно.Партнер КАК Партнер
	|ПОМЕСТИТЬ ВТ_Соглашения
	|ИЗ
	|	ВТ_СоглашенияПредварительно КАК ВТ_СоглашенияПредварительно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_СоглашенияПредварительно.УсловияРетроБонусовПокупателей КАК УсловияРетроБонусовПокупателей,
	|	СоглашенияСКлиентами.Ссылка КАК Соглашение,
	|	ВТ_СоглашенияПредварительно.НачалоДействия КАК НачалоДействия,
	|	ВТ_СоглашенияПредварительно.ОкончаниеДействия КАК ОкончаниеДействия,
	|	ВТ_СоглашенияПредварительно.СуммаПлан КАК СуммаПлан,
	|	СоглашенияСКлиентами.Типовое КАК ТиповоеСоглашение,
	|	СоглашенияСКлиентами.Партнер КАК Партнер
	|ИЗ
	|	ВТ_СоглашенияПредварительно КАК ВТ_СоглашенияПредварительно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ПО ВТ_СоглашенияПредварительно.Соглашение = СоглашенияСКлиентами.Соглашение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоглашенияПредварительно КАК ИндивидуальныеСоглашенияУказанныеНапрямую
	|		ПО СоглашенияСКлиентами.Ссылка = ИндивидуальныеСоглашенияУказанныеНапрямую.Соглашение
	|		И ИндивидуальныеСоглашенияУказанныеНапрямую.ТиповоеСоглашение = ЛОЖЬ
	|ГДЕ
	|	ВТ_СоглашенияПредварительно.ТиповоеСоглашение
	|	И ВТ_СоглашенияПредварительно.УчитыватьПродажиПоИндивидуальным
	|	И ИндивидуальныеСоглашенияУказанныеНапрямую.Соглашение ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Соглашение,
	|	Партнер,
	|	ТиповоеСоглашение";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам КАК КлючАналитики,
	|	РС_АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РС_АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РС_АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВыручкаИСебестоимостьПродаж.Соглашение КАК Соглашение
	|ПОМЕСТИТЬ ВТ_АналитикаПоПартнерамПоТиповымСоглашениям
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РС_АналитикаУчетаПоПартнерам
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = РС_АналитикаУчетаПоПартнерам.КлючАналитики
	|ГДЕ
	|	ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВыручкаИСебестоимостьПродаж.Соглашение В
	|		(ВЫБРАТЬ
	|			ВТ_Соглашения.Соглашение КАК Соглашение
	|		ИЗ
	|			ВТ_Соглашения КАК ВТ_Соглашения
	|		ГДЕ
	|			ВТ_Соглашения.ТиповоеСоглашение)
	|	И РС_АналитикаУчетаПоПартнерам.Организация В (&Организация)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру
	|	И ВыручкаИСебестоимостьПродаж.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	И ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация НЕ В (&ИсключаемыеХозяйственныеОперации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Соглашение";
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	СоставыУчастников = Перечисления.СоставыУчастниковРетроБонусов;
	СоставыСписков = Перечисления.СоставыСписковРетроБонусов;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РетроБонусыКлиентовИНН.ДокументУсловий КАК УсловияРетроБонусовПокупателей,
	|	Контрагенты.Ссылка КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
	|	РетроБонусыКлиентовИНН.НачалоДействия КАК ДатаНачала,
	|	РетроБонусыКлиентовИНН.ОкончаниеДействия КАК ДатаОкончания,
	|	РетроБонусыКлиентовИНН.СуммаПлан КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_УчастникиПредварительно
	|ИЗ
	|	РегистрСведений.РетроБонусыКлиентовИНН КАК РетроБонусыКлиентовИНН
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО РетроБонусыКлиентовИНН.ИНН = Контрагенты.ИНН
	|ГДЕ
	|	РетроБонусыКлиентовИНН.ДокументУсловий В
	|			(ВЫБРАТЬ
	|				ВТ_ПараметрыРБ.УсловиеРетроБонуса
	|			ИЗ
	|				ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|			ГДЕ
	|				ВТ_ПараметрыРБ.ОтборПоИНН)
	|	И &УсловиеОтбораПоКонтрагентуНаСправочник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РетроБонусыКлиентовКонтрагенты.ДокументУсловий,
	|	РетроБонусыКлиентовКонтрагенты.Контрагент,
	|	РетроБонусыКлиентовКонтрагенты.Партнер,
	|	РетроБонусыКлиентовКонтрагенты.НачалоДействия,
	|	РетроБонусыКлиентовКонтрагенты.ОкончаниеДействия,
	|	РетроБонусыКлиентовКонтрагенты.СуммаПлан КАК СуммаПлан
	|ИЗ
	|	РегистрСведений.РетроБонусыКлиентовКонтрагенты КАК РетроБонусыКлиентовКонтрагенты
	|ГДЕ
	|	РетроБонусыКлиентовКонтрагенты.ДокументУсловий В
	|			(ВЫБРАТЬ
	|				ВТ_ПараметрыРБ.УсловиеРетроБонуса
	|			ИЗ
	|				ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|			ГДЕ
	|				ВТ_ПараметрыРБ.ОтборПоКонтрагентамПартнерам)";
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.СегментыПартнеров
	   И НЕ ПараметрыУсловийРетроБонусов.СегментыЗафиксированы Тогда
		
		// Таблица ВТ_СоставСегментовКлиентов будет передана в ПроцессорКомпоновкиДанных через МенеджерВременныхТаблиц
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_СоставСегментовКлиентов.ДокументУсловий КАК УсловияРетроБонусовПокупателей,
		|	ВТ_СоставСегментовКлиентов.Контрагент КАК Контрагент,
		|	ВТ_СоставСегментовКлиентов.Партнер КАК Партнер,
		|	ВТ_СоставСегментовКлиентов.НачалоДействия КАК ДатаНачала,
		|	ВТ_СоставСегментовКлиентов.ОкончаниеДействия КАК ДатаОкончания,
		|	ВТ_СоставСегментовКлиентов.СуммаПлан КАК СуммаПлан
		|ПОМЕСТИТЬ ВТ_УчастникиПредварительно
		|ИЗ
		|	ВТ_СоставСегментовКлиентов КАК ВТ_СоставСегментовКлиентов
		|ГДЕ
		|	&УсловиеОтбораПоПартнеруНаСоставСегментов";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.СоставУчастников = СоставыУчастников.ИНН
	   И ПараметрыУсловийРетроБонусов.Участники = СоставыСписков.КромеВыбранных Тогда
		
		ТекстПодзапросаПустыеИНН =
		"ВЫБРАТЬ
		|	&ИсходныйДокумент КАК УсловияРетроБонусовПокупателей,
		|	Контрагенты.Ссылка КАК Контрагент,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
		|	&ДатаНачала КАК ДатаНачала,
		|	&ДатаОкончания КАК ДатаОкончания,
		|	0 КАК СуммаПлан
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	СОКРЛ(Контрагенты.ИНН) = """"";
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() + ТекстПодзапросаПустыеИНН;
		
	КонецЕсли;
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагентуНаСправочник =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ Контрагенты.Ссылка = &Контрагент
		|КОНЕЦ";
		
		УсловиеОтбораПоПартнеруНаСоставСегментов =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_СоставСегментовКлиентов.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагентуНаСправочник = "ИСТИНА";
		УсловиеОтбораПоПартнеруНаСоставСегментов = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, "&УсловиеОтбораПоКонтрагентуНаСправочник", УсловиеОтбораПоКонтрагентуНаСправочник);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, "&УсловиеОтбораПоПартнеруНаСоставСегментов", УсловиеОтбораПоПартнеруНаСоставСегментов);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПредварительно.УсловияРетроБонусовПокупателей КАК УсловияРетроБонусовПокупателей,
	|	ВТ_УчастникиПредварительно.Контрагент КАК Контрагент,
	|	ВТ_УчастникиПредварительно.Партнер КАК Партнер,
	|	ВТ_УчастникиПредварительно.ДатаНачала КАК ДатаНачала,
	|	ВТ_УчастникиПредварительно.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_УчастникиПредварительно.СуммаПлан КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_Контрагенты
	|ИЗ
	|	ВТ_УчастникиПредварительно КАК ВТ_УчастникиПредварительно
	|ГДЕ
	|	ВТ_УчастникиПредварительно.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И &УсловиеОтбораПоКонтрагенту";
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_УчастникиПредварительно.Контрагент = &Контрагент
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПредварительно.УсловияРетроБонусовПокупателей КАК УсловияРетроБонусовПокупателей,
	|	ВТ_УчастникиПредварительно.Контрагент КАК Контрагент,
	|	ВТ_УчастникиПредварительно.Партнер КАК Партнер,
	|	ВТ_УчастникиПредварительно.ДатаНачала КАК ДатаНачала,
	|	ВТ_УчастникиПредварительно.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_УчастникиПредварительно.СуммаПлан КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_Партнеры
	|ИЗ
	|	ВТ_УчастникиПредварительно КАК ВТ_УчастникиПредварительно
	|ГДЕ
	|	ВТ_УчастникиПредварительно.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И ВТ_УчастникиПредварительно.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И &УсловиеОтбораПоПартнеру";
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_УчастникиПредварительно.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПредварительно.УсловияРетроБонусовПокупателей КАК УсловияРетроБонусовПокупателей,
	|	ВТ_УчастникиПредварительно.Контрагент КАК Контрагент,
	|	ВТ_УчастникиПредварительно.Партнер КАК Партнер,
	|	ВТ_УчастникиПредварительно.ДатаНачала КАК ДатаНачала,
	|	ВТ_УчастникиПредварительно.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_УчастникиПредварительно.СуммаПлан КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_ПартнерыКонтрагенты
	|ИЗ
	|	ВТ_УчастникиПредварительно КАК ВТ_УчастникиПредварительно
	|ГДЕ
	|	ВТ_УчастникиПредварительно.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И ВТ_УчастникиПредварительно.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру";
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_УчастникиПредварительно.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_УчастникиПредварительно.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстыПодзапросов = Новый Массив; // Массив Из Строка
	
	ТекстПодзапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
	|	ДАТАВРЕМЯ(2999, 12, 31) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_АналитикаПоПартнерам
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВТ_ПараметрыРБ.ОтборУчастниковБезОграничений
	|	И АналитикаУчетаПоПартнерам.Организация В(&Организация)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру";
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВТ_Контрагенты.ДатаНачала КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(ВТ_Контрагенты.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Контрагенты КАК ВТ_Контрагенты
	|		ПО АналитикаУчетаПоПартнерам.Контрагент = ВТ_Контрагенты.Контрагент
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация В (&Организация)
	|	И НЕ (АналитикаУчетаПоПартнерам.Контрагент, АналитикаУчетаПоПартнерам.Партнер) В
	|		(ВЫБРАТЬ
	|			ВТ_ПартнерыКонтрагенты.Контрагент КАК Контрагент,
	|			ВТ_ПартнерыКонтрагенты.Партнер КАК Партнер
	|		ИЗ
	|			ВТ_ПартнерыКонтрагенты КАК ВТ_ПартнерыКонтрагенты)";
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВТ_Партнеры.ДатаНачала КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(ВТ_Партнеры.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Партнеры КАК ВТ_Партнеры
	|		ПО АналитикаУчетаПоПартнерам.Партнер = ВТ_Партнеры.Партнер
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация В (&Организация)
	|	И НЕ (АналитикаУчетаПоПартнерам.Контрагент, АналитикаУчетаПоПартнерам.Партнер) В
	|		(ВЫБРАТЬ
	|			ВТ_ПартнерыКонтрагенты.Контрагент КАК Контрагент,
	|			ВТ_ПартнерыКонтрагенты.Партнер КАК Партнер
	|		ИЗ
	|			ВТ_ПартнерыКонтрагенты КАК ВТ_ПартнерыКонтрагенты)";
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВТ_ПартнерыКонтрагенты.ДатаНачала КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(ВТ_ПартнерыКонтрагенты.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПартнерыКонтрагенты КАК ВТ_ПартнерыКонтрагенты
	|		ПО АналитикаУчетаПоПартнерам.Партнер = ВТ_ПартнерыКонтрагенты.Партнер
	|		И АналитикаУчетаПоПартнерам.Контрагент = ВТ_ПартнерыКонтрагенты.Контрагент
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация В (&Организация)";
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Договоры Тогда
		
		ТекстПодзапроса =
		"ВЫБРАТЬ
		|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
		|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
		|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
		|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|	РетроБонусыКлиентовДоговорыСоглашения.НачалоДействия КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(РетроБонусыКлиентовДоговорыСоглашения.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
		|	РетроБонусыКлиентовДоговорыСоглашения.СуммаПлан КАК СуммаПлан
		|ИЗ
		|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РетроБонусыКлиентовДоговорыСоглашения КАК РетроБонусыКлиентовДоговорыСоглашения
		|		ПО АналитикаУчетаПоПартнерам.Договор = РетроБонусыКлиентовДоговорыСоглашения.Договор
		|ГДЕ
		|	АналитикаУчетаПоПартнерам.Организация В (&Организация)
		|	И РетроБонусыКлиентовДоговорыСоглашения.ДокументУсловий = &ИсходныйДокумент
		|	И РетроБонусыКлиентовДоговорыСоглашения.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|	И &УсловиеОтбораПоКонтрагенту
		|	И &УсловиеОтбораПоПартнеру";
		ТекстыПодзапросов.Добавить(ТекстПодзапроса);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ТекстПодзапроса =
		"ВЫБРАТЬ
		|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
		|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
		|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
		|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|	ВТ_Соглашения.НачалоДействия КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(ВТ_Соглашения.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
		|	ВТ_Соглашения.СуммаПлан КАК СуммаПлан
		|ИЗ
		|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Соглашения КАК ВТ_Соглашения
		|		ПО АналитикаУчетаПоПартнерам.Партнер = ВТ_Соглашения.Партнер
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоПартнерамПоТиповымСоглашениям КАК ВТ_АналитикаПоПартнерамПоТиповымСоглашениям
		|		ПО АналитикаУчетаПоПартнерам.КлючАналитики = ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.КлючАналитики
		|ГДЕ
		|	ВТ_Соглашения.ТиповоеСоглашение = ЛОЖЬ
		|	И ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.КлючАналитики ЕСТЬ NULL
		|	И АналитикаУчетаПоПартнерам.Организация В (&Организация)
		|	И &УсловиеОтбораПоКонтрагенту
		|	И &УсловиеОтбораПоПартнеру";
		ТекстыПодзапросов.Добавить(ТекстПодзапроса);
		
		ТекстПодзапроса =
		"ВЫБРАТЬ
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.КлючАналитики КАК КлючАналитики,
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.Организация КАК Организация,
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.Контрагент КАК Контрагент,
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.Партнер КАК Партнер,
		|	ВТ_Соглашения.НачалоДействия КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(ВТ_Соглашения.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
		|	ВТ_Соглашения.СуммаПлан КАК СуммаПлан
		|ИЗ
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям КАК ВТ_АналитикаПоПартнерамПоТиповымСоглашениям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Соглашения КАК ВТ_Соглашения
		|		ПО ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.Соглашение = ВТ_Соглашения.Соглашение";
		ТекстыПодзапросов.Добавить(ТекстПодзапроса);
		
	КонецЕсли;
	
	РазделительПодзапросов = РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыПодзапросов, РазделительПодзапросов);
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ АналитикаУчетаПоПартнерам.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Все Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	АналитикаУчетаНоменклатуры.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_АналитикаУчетаНоменклатуры
	|ИЗ
	|	РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО АналитикаУчетаНоменклатуры.Номенклатура = ВТ_Товары.Номенклатура
	|			И АналитикаУчетаНоменклатуры.Характеристика = ВТ_Товары.Характеристика";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПериодичностьУсловий = ПараметрыУсловийРетроБонусов.ПериодичностьУсловий;
	Периодичности = Перечисления.ПериодичностиРетроБонусов;
	
	ШаблонЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВыручкаИСебестоимостьПродаж.Период КАК Период,
	|	&ВыражениеПериод КАК ПериодРасчета,
	|	ВыручкаИСебестоимостьПродаж.НомерСтроки КАК НомерСтроки,
	|	&ВыражениеДокументПродажи КАК ДокументПродажи,
	|	РС_АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РС_АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РС_АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВыручкаИСебестоимостьПродаж.Договор КАК Договор,
	|	ВыручкаИСебестоимостьПродаж.Соглашение КАК Соглашение,
	|	ВыручкаИСебестоимостьПродаж.Склад КАК Склад,
	|	РС_АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РС_АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	СУММА(ВыручкаИСебестоимостьПродаж.Количество) КАК Количество,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручки) КАК СуммаВыручки,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл) КАК СуммаВыручкиРегл,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВВалютеВзаиморасчетов) КАК СуммаВыручкиВВалютеВзаиморасчетов,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиБезНДС) КАК СуммаВыручкиБезНДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл) КАК СуммаВыручкиРеглБезНДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаБезНДСВВалютеВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетовБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.УчитыватьНДС
	|			ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручки
	|		ИНАЧЕ ВыручкаИСебестоимостьПродаж.СуммаВыручкиБезНДС
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.УчитыватьНДС
	|			ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|		ИНАЧЕ ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл
	|	КОНЕЦ) КАК СуммаРегл,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.УчитыватьНДС
	|			ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВВалютеВзаиморасчетов
	|		ИНАЧЕ ВыручкаИСебестоимостьПродаж.СуммаБезНДСВВалютеВзаиморасчетов
	|	КОНЕЦ) КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПараметрыРБ.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПараметрыРБ.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПараметрыРБ.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПараметрыРБ.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПараметрыРБ.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПараметрыРБ.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПараметрыРБ.УчитыватьНДС КАК УчитыватьНДС,
	|	ВТ_ПараметрыРБ.Валюта КАК ВалютаУсловий,
	|	ВыручкаИСебестоимостьПродаж.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВТ_ПараметрыРБ.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПараметрыРБ.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПараметрыРБ.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПараметрыРБ.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПараметрыРБ.ОтборТоваровВыбранные КАК ОтборТоваровВыбранные,
	|	ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных КАК ОтборТоваровКромеВыбранных,
	|	ВТ_ПараметрыРБ.ОтборТоваровБезОграничений КАК ОтборТоваровБезОграничений,
	|	ВТ_ПараметрыРБ.ОтборУчастниковВыбранные КАК ОтборУчастниковВыбранные,
	|	ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных КАК ОтборУчастниковКромеВыбранных
	|ПОМЕСТИТЬ ВТ_Продажи
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РС_АналитикаУчетаНоменклатуры
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры = РС_АналитикаУчетаНоменклатуры.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоПартнерам КАК ВТ_АналитикаПоПартнерам
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = ВТ_АналитикаПоПартнерам.КлючАналитики
	|			И (ВыручкаИСебестоимостьПродаж.Период МЕЖДУ ВТ_АналитикаПоПартнерам.ДатаНачала И ВТ_АналитикаПоПартнерам.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РС_АналитикаУчетаПоПартнерам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|			ПО ИСТИНА
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = РС_АналитикаУчетаПоПартнерам.КлючАналитики
	|ГДЕ
	|	&УсловиеОтбораПоТипуДокумента
	|	И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.ОтборУчастниковВыбранные
	|			ТОГДА НЕ ВТ_АналитикаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|		КОГДА ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных
	|			ТОГДА ВТ_АналитикаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И &УсловиеОтбораТоваров
	|	И РС_АналитикаУчетаПоПартнерам.Организация В (&Организация)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру
	|	И НЕ ВТ_ПараметрыРБ.УсловиеРетроБонуса ЕСТЬ NULL
	|	И ВыручкаИСебестоимостьПродаж.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	И ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация НЕ В (&ИсключаемыеХозяйственныеОперации)
	|	И ВыручкаИСебестоимостьПродаж.НастройкаХозяйственнойОперации НЕ В (&ИсключаемыеНастройкиХозяйственныхОпераций)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродаж.Период,
	|	&ВыражениеПериод,
	|	ВыручкаИСебестоимостьПродаж.НомерСтроки,
	|	&ВыражениеДокументПродажи,
	|	РС_АналитикаУчетаПоПартнерам.Организация,
	|	РС_АналитикаУчетаПоПартнерам.Контрагент,
	|	РС_АналитикаУчетаПоПартнерам.Партнер,
	|	ВыручкаИСебестоимостьПродаж.Договор,
	|	ВыручкаИСебестоимостьПродаж.Соглашение,
	|	ВыручкаИСебестоимостьПродаж.Склад,
	|	РС_АналитикаУчетаНоменклатуры.Номенклатура,
	|	РС_АналитикаУчетаНоменклатуры.Характеристика,
	|	ВТ_ПараметрыРБ.УсловиеРетроБонуса,
	|	ВТ_ПараметрыРБ.БонусПроцент,
	|	ВТ_ПараметрыРБ.ПоказательПродаж,
	|	ВТ_ПараметрыРБ.ДетализацияРасчетаУчастников,
	|	ВТ_ПараметрыРБ.ПериодичностьУсловий,
	|	ВТ_ПараметрыРБ.ПериодичностьНачислений,
	|	ВТ_ПараметрыРБ.УчитыватьНДС,
	|	ВТ_ПараметрыРБ.Валюта,
	|	ВыручкаИСебестоимостьПродаж.ВалютаВзаиморасчетов,
	|	ВТ_ПараметрыРБ.ЗапретНачисленияСверхПлана,
	|	ВТ_ПараметрыРБ.РаспределениеПоФИФО,
	|	ВТ_ПараметрыРБ.СуммаПлан,
	|	ВТ_ПараметрыРБ.БазаРасчетаПродаж,
	|	ВТ_ПараметрыРБ.ОтборТоваровВыбранные,
	|	ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных,
	|	ВТ_ПараметрыРБ.ОтборТоваровБезОграничений,
	|	ВТ_ПараметрыРБ.ОтборУчастниковВыбранные,
	|	ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных";
	
	ВыраженияДокументПродажи = Новый Массив; // Массив Из Строка
	ВыраженияДокументПродажи.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.РеализацияТоваровУслуг)");
	ВыраженияДокументПродажи.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.КорректировкаРеализации)");
	ВыраженияДокументПродажи.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.АктВыполненныхРабот)");
	ВыраженияДокументПродажи.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.ВозвратТоваровОтКлиента)");
	
	ОтборыПоТипамДокументов = Новый Массив; // Массив Из Строка
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.АктВыполненныхРабот");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента");
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Выбранные Тогда
		
		УсловиеОтбораТоваров =
		"ВТ_ПараметрыРБ.ОтборТоваровВыбранные
		|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.КромеВыбранных Тогда
		
		УсловиеОтбораТоваров =
		"ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных
		|	И НЕ ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	Иначе
		
		УсловиеОтбораТоваров = "ВТ_ПараметрыРБ.ОтборТоваровБезОграничений";
		
	КонецЕсли;
	
	ВыражениеПериод = УсловиеПериодаПоПериодичности(ПараметрыУсловийРетроБонусов, Периодичности, ПериодичностьУсловий);
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстыПодзапросов = Новый Массив; // Массив Из Строка
	НомерПодзапроса = 1;
	Для ИндексТипаДокумента = 0 По ОтборыПоТипамДокументов.ВГраница() Цикл
		
		ВыражениеДокументПродажи = ВыраженияДокументПродажи[ИндексТипаДокумента];
		УсловиеОтбораПоТипуДокумента = ОтборыПоТипамДокументов[ИндексТипаДокумента];
		
		ТекстЗапроса = ШаблонЗапроса;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПериод", ВыражениеПериод);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеДокументПродажи", ВыражениеДокументПродажи);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоТипуДокумента", УсловиеОтбораПоТипуДокумента);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораТоваров", УсловиеОтбораТоваров);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
		
		Если НомерПодзапроса > 1 Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_Продажи", "");
			
		КонецЕсли;
		
		ТекстыПодзапросов.Добавить(ТекстЗапроса);
		НомерПодзапроса = НомерПодзапроса + 1;
		
	КонецЦикла;
	
	РазделительПодзапросов = РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыПодзапросов, РазделительПодзапросов);
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажиБезОтбораПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПериодичностьУсловий = ПараметрыУсловийРетроБонусов.ПериодичностьУсловий;
	Периодичности = Перечисления.ПериодичностиРетроБонусов;
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.Период КАК Период,
	|	ВыручкаИСебестоимостьПродаж.НомерСтроки КАК НомерСтроки,
	|	&ВыражениеПериод КАК ПериодРасчета,
	|	&ВыражениеДокументПродажи КАК ДокументПродажи,
	|	РС_АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РС_АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РС_АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВыручкаИСебестоимостьПродаж.Договор КАК Договор,
	|	ВыручкаИСебестоимостьПродаж.Соглашение КАК Соглашение,
	|	ВыручкаИСебестоимостьПродаж.Склад КАК Склад,
	|	РС_АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РС_АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВыручкаИСебестоимостьПродаж.Количество КАК Количество,
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручки КАК СуммаВыручки,
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл КАК СуммаВыручкиРегл,
	|	ВыручкаИСебестоимостьПродаж.СуммаВВалютеВзаиморасчетов КАК СуммаВыручкиВВалютеВзаиморасчетов,
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл КАК СуммаВыручкиРеглБезНДС,
	|	ВыручкаИСебестоимостьПродаж.СуммаБезНДСВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетовБезНДС,
	|	ВТ_ПараметрыРБ.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПараметрыРБ.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПараметрыРБ.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПараметрыРБ.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПараметрыРБ.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПараметрыРБ.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПараметрыРБ.УчитыватьНДС КАК УчитыватьНДС,
	|	ВТ_ПараметрыРБ.Валюта КАК ВалютаУсловий,
	|	ВТ_ПараметрыРБ.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПараметрыРБ.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПараметрыРБ.СуммаПлан КАК СуммаПланОбщая,
	|	ВТ_АналитикаПоПартнерам.СуммаПлан КАК СуммаПланПоСоглашению,
	|	ВыручкаИСебестоимостьПродаж.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВТ_ПараметрыРБ.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПараметрыРБ.ОтборТоваровВыбранные КАК ОтборТоваровВыбранные,
	|	ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных КАК ОтборТоваровКромеВыбранных,
	|	ВТ_ПараметрыРБ.ОтборТоваровБезОграничений КАК ОтборТоваровБезОграничений,
	|	ВТ_ПараметрыРБ.ОтборУчастниковВыбранные КАК ОтборУчастниковВыбранные,
	|	ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных КАК ОтборУчастниковКромеВыбранных
	|ПОМЕСТИТЬ ВТ_ПродажиБезОтбораПоКонтрагентам
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РС_АналитикаУчетаНоменклатуры
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры = РС_АналитикаУчетаНоменклатуры.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоПартнерам КАК ВТ_АналитикаПоПартнерам
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = ВТ_АналитикаПоПартнерам.КлючАналитики
	|			И (ВыручкаИСебестоимостьПродаж.Период МЕЖДУ ВТ_АналитикаПоПартнерам.ДатаНачала И ВТ_АналитикаПоПартнерам.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РС_АналитикаУчетаПоПартнерам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|			ПО ИСТИНА
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = РС_АналитикаУчетаПоПартнерам.КлючАналитики
	|ГДЕ
	|	&УсловиеОтбораПоТипуДокумента
	|	И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВЫБОР
	|			КОГДА ВТ_ПараметрыРБ.ОтборУчастниковВыбранные
	|				ТОГДА НЕ ВТ_АналитикаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|			КОГДА ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных
	|				ТОГДА ВТ_АналитикаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И &УсловиеОтбораТоваров
	|	И РС_АналитикаУчетаПоПартнерам.Организация В(&Организация)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру
	|	И НЕ ВТ_ПараметрыРБ.УсловиеРетроБонуса ЕСТЬ NULL
	|	И ВыручкаИСебестоимостьПродаж.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	И ВыручкаИСебестоимостьПродаж.НастройкаХозяйственнойОперации НЕ В (&ИсключаемыеНастройкиХозяйственныхОпераций)
	|	И ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация НЕ В (&ИсключаемыеХозяйственныеОперации)";
	
	ВыраженияДокументПродажи = Новый Массив; // Массив Из Строка
	ВыраженияДокументПродажи.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.РеализацияТоваровУслуг)");
	ВыраженияДокументПродажи.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.КорректировкаРеализации)");
	ВыраженияДокументПродажи.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.АктВыполненныхРабот)");
	ВыраженияДокументПродажи.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.ВозвратТоваровОтКлиента)");
	
	ОтборыПоТипамДокументов = Новый Массив; // Массив Из Строка
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.АктВыполненныхРабот");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента");
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Выбранные Тогда
		
		УсловиеОтбораТоваров =
		"ВТ_ПараметрыРБ.ОтборТоваровВыбранные
		|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.КромеВыбранных Тогда
		
		УсловиеОтбораТоваров =
		"ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных
		|	И НЕ ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	Иначе
		
		УсловиеОтбораТоваров = "ВТ_ПараметрыРБ.ОтборТоваровБезОграничений";
		
	КонецЕсли;
	
	ВыражениеПериод = УсловиеПериодаПоПериодичности(ПараметрыУсловийРетроБонусов, Периодичности, ПериодичностьУсловий);
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстыПодзапросов = Новый Массив; // Массив Из Строка
	НомерПодзапроса = 1;
	Для ИндексТипаДокумента = 0 По ОтборыПоТипамДокументов.ВГраница() Цикл
		
		ВыражениеДокументПродажи = ВыраженияДокументПродажи[ИндексТипаДокумента];
		УсловиеОтбораПоТипуДокумента = ОтборыПоТипамДокументов[ИндексТипаДокумента];
		
		ТекстЗапроса = ШаблонЗапроса;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПериод", ВыражениеПериод);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеДокументПродажи", ВыражениеДокументПродажи);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоТипуДокумента", УсловиеОтбораПоТипуДокумента);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораТоваров", УсловиеОтбораТоваров);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
		
		Если НомерПодзапроса > 1 Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_ПродажиБезОтбораПоКонтрагентам", "");
			
		КонецЕсли;
		
		ТекстыПодзапросов.Добавить(ТекстЗапроса);
		НомерПодзапроса = НомерПодзапроса + 1;
		
	КонецЦикла;
	
	РазделительПодзапросов = РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыПодзапросов, РазделительПодзапросов);
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажиСОтборомПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_Продажи.Период КАК Период,
	|	ВТ_Продажи.НомерСтроки КАК НомерСтроки,
	|	ВТ_Продажи.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_Продажи.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_Продажи.Организация КАК Организация,
	|	ВТ_Продажи.Контрагент КАК Контрагент,
	|	ВТ_Продажи.Партнер КАК Партнер,
	|	ВТ_Продажи.Договор КАК Договор,
	|	ВТ_Продажи.Соглашение КАК Соглашение,
	|	ВТ_Продажи.Склад КАК Склад,
	|	ВТ_Продажи.Номенклатура КАК Номенклатура,
	|	ВТ_Продажи.Характеристика КАК Характеристика,
	|	СУММА(ВТ_Продажи.Количество) КАК Количество,
	|	СУММА(ВТ_Продажи.СуммаВыручки) КАК СуммаВыручки,
	|	СУММА(ВТ_Продажи.СуммаВыручкиРегл) КАК СуммаВыручкиРегл,
	|	СУММА(ВТ_Продажи.СуммаВыручкиВВалютеВзаиморасчетов) КАК СуммаВыручкиВВалютеВзаиморасчетов,
	|	СУММА(ВТ_Продажи.СуммаВыручкиБезНДС) КАК СуммаВыручкиБезНДС,
	|	СУММА(ВТ_Продажи.СуммаВыручкиРеглБезНДС) КАК СуммаВыручкиРеглБезНДС,
	|	СУММА(ВТ_Продажи.СуммаВВалютеВзаиморасчетовБезНДС) КАК СуммаВВалютеВзаиморасчетовБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_Продажи.УчитыватьНДС
	|			ТОГДА ВТ_Продажи.СуммаВыручки
	|		ИНАЧЕ ВТ_Продажи.СуммаВыручкиБезНДС
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_Продажи.УчитыватьНДС
	|			ТОГДА ВТ_Продажи.СуммаВыручкиРегл
	|		ИНАЧЕ ВТ_Продажи.СуммаВыручкиРеглБезНДС
	|	КОНЕЦ) КАК СуммаРегл,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_Продажи.УчитыватьНДС
	|			ТОГДА ВТ_Продажи.СуммаВыручкиВВалютеВзаиморасчетов
	|		ИНАЧЕ ВТ_Продажи.СуммаВВалютеВзаиморасчетовБезНДС
	|	КОНЕЦ) КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_Продажи.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_Продажи.БонусПроцент КАК БонусПроцент,
	|	ВТ_Продажи.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_Продажи.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_Продажи.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_Продажи.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_Продажи.УчитыватьНДС КАК УчитыватьНДС,
	|	ВТ_Продажи.ВалютаУсловий КАК ВалютаУсловий,
	|	ВТ_Продажи.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВТ_Продажи.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_Продажи.ОтборТоваровВыбранные КАК ОтборТоваровВыбранные,
	|	ВТ_Продажи.ОтборТоваровКромеВыбранных КАК ОтборТоваровКромеВыбранных,
	|	ВТ_Продажи.ОтборТоваровБезОграничений КАК ОтборТоваровБезОграничений,
	|	ВТ_Продажи.ОтборУчастниковВыбранные КАК ОтборУчастниковВыбранные,
	|	ВТ_Продажи.ОтборУчастниковКромеВыбранных КАК ОтборУчастниковКромеВыбранных,
	|	ВТ_Продажи.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_Продажи.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ПартнерыКонтрагенты.СуммаПлан, 0) <> 0
	|			ТОГДА ВТ_ПартнерыКонтрагенты.СуммаПлан
	|		КОГДА ЕСТЬNULL(ВТ_Партнеры.СуммаПлан, 0) <> 0
	|			ТОГДА ВТ_Партнеры.СуммаПлан
	|		КОГДА ЕСТЬNULL(ВТ_Контрагенты.СуммаПлан, 0) <> 0
	|			ТОГДА ВТ_Контрагенты.СуммаПлан
	|		КОГДА ЕСТЬNULL(ВТ_Продажи.СуммаПланПоСоглашению, 0) <> 0
	|			ТОГДА ВТ_Продажи.СуммаПланПоСоглашению
	|		ИНАЧЕ ЕСТЬNULL(ВТ_Продажи.СуммаПланОбщая, 0)
	|	КОНЕЦ КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_Продажи
	|ИЗ
	|	ВТ_ПродажиБезОтбораПоКонтрагентам КАК ВТ_Продажи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Контрагенты КАК ВТ_Контрагенты
	|		ПО ВТ_Продажи.УсловиеРетроБонуса = ВТ_Контрагенты.УсловияРетроБонусовПокупателей
	|			И ВТ_Продажи.Контрагент = ВТ_Контрагенты.Контрагент
	|			И (ВТ_Продажи.Период МЕЖДУ ВТ_Контрагенты.ДатаНачала И ВТ_Контрагенты.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Партнеры КАК ВТ_Партнеры
	|		ПО ВТ_Продажи.УсловиеРетроБонуса = ВТ_Партнеры.УсловияРетроБонусовПокупателей
	|			И ВТ_Продажи.Партнер = ВТ_Партнеры.Партнер
	|			И (ВТ_Продажи.Период МЕЖДУ ВТ_Партнеры.ДатаНачала И ВТ_Партнеры.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПартнерыКонтрагенты КАК ВТ_ПартнерыКонтрагенты
	|		ПО ВТ_Продажи.УсловиеРетроБонуса = ВТ_ПартнерыКонтрагенты.УсловияРетроБонусовПокупателей
	|			И ВТ_Продажи.Контрагент = ВТ_ПартнерыКонтрагенты.Контрагент
	|			И ВТ_Продажи.Партнер = ВТ_ПартнерыКонтрагенты.Партнер
	|			И (ВТ_Продажи.Период МЕЖДУ ВТ_ПартнерыКонтрагенты.ДатаНачала И ВТ_ПартнерыКонтрагенты.ДатаОкончания)
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Продажи.Период,
	|	ВТ_Продажи.НомерСтроки,
	|	ВТ_Продажи.ПериодРасчета,
	|	ВТ_Продажи.ДокументПродажи,
	|	ВТ_Продажи.Организация,
	|	ВТ_Продажи.Контрагент,
	|	ВТ_Продажи.Партнер,
	|	ВТ_Продажи.Договор,
	|	ВТ_Продажи.Соглашение,
	|	ВТ_Продажи.Склад,
	|	ВТ_Продажи.Номенклатура,
	|	ВТ_Продажи.Характеристика,
	|	ВТ_Продажи.ЗапретНачисленияСверхПлана,
	|	ВТ_Продажи.РаспределениеПоФИФО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ПартнерыКонтрагенты.СуммаПлан, 0) <> 0
	|			ТОГДА ВТ_ПартнерыКонтрагенты.СуммаПлан
	|		КОГДА ЕСТЬNULL(ВТ_Партнеры.СуммаПлан, 0) <> 0
	|			ТОГДА ВТ_Партнеры.СуммаПлан
	|		КОГДА ЕСТЬNULL(ВТ_Контрагенты.СуммаПлан, 0) <> 0
	|			ТОГДА ВТ_Контрагенты.СуммаПлан
	|		КОГДА ЕСТЬNULL(ВТ_Продажи.СуммаПланПоСоглашению, 0) <> 0
	|			ТОГДА ВТ_Продажи.СуммаПланПоСоглашению
	|		ИНАЧЕ ЕСТЬNULL(ВТ_Продажи.СуммаПланОбщая, 0)
	|	КОНЕЦ,
	|	ВТ_Продажи.УсловиеРетроБонуса,
	|	ВТ_Продажи.БонусПроцент,
	|	ВТ_Продажи.ПоказательПродаж,
	|	ВТ_Продажи.ДетализацияРасчетаУчастников,
	|	ВТ_Продажи.ПериодичностьУсловий,
	|	ВТ_Продажи.ПериодичностьНачислений,
	|	ВТ_Продажи.УчитыватьНДС,
	|	ВТ_Продажи.ВалютаУсловий,
	|	ВТ_Продажи.ВалютаВзаиморасчетов,
	|	ВТ_Продажи.БазаРасчетаПродаж,
	|	ВТ_Продажи.ОтборТоваровВыбранные,
	|	ВТ_Продажи.ОтборТоваровКромеВыбранных,
	|	ВТ_Продажи.ОтборТоваровБезОграничений,
	|	ВТ_Продажи.ОтборУчастниковВыбранные,
	|	ВТ_Продажи.ОтборУчастниковКромеВыбранных";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказательПродаж = ПараметрыУсловийРетроБонусов.ПоказательПродаж;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_Продажи.Период КАК Период,
	|	ВТ_Продажи.НомерСтроки КАК НомерСтроки,
	|	ВТ_Продажи.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_Продажи.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_Продажи.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_Продажи.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_Продажи.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	&ВыражениеПериодичностьУсловий КАК ПериодичностьУсловий,
	|	&ВыражениеЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	&ВыражениеРаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	&ВыражениеСуммаПлан КАК СуммаПлан,
	|	&ВыражениеКоличествоПлан КАК КоличествоПлан,
	|	ВТ_Продажи.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_Продажи.Организация КАК Организация,
	|	ВТ_Продажи.Контрагент КАК Контрагент,
	|	ВТ_Продажи.Партнер КАК Партнер,
	|	ВТ_Продажи.Договор КАК Договор,
	|	ВТ_Продажи.Соглашение КАК Соглашение,
	|	ВТ_Продажи.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВТ_Продажи.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Продажи.Характеристика КАК Характеристика,
	|	ВТ_Продажи.Количество КАК Количество,
	|	ВТ_Продажи.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_Продажи.ВалютаУсловий КАК ВалютаУсловий,
	|	ВТ_Продажи.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ВТ_Продажи.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_Продажи.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВТ_Продажи.ВалютаУсловий
	|	КОНЕЦ КАК Валюта,
	|	ВТ_Продажи.Сумма КАК Сумма,
	|	ВТ_Продажи.СуммаРегл КАК СуммаРегл,
	|	ВТ_Продажи.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_Продажи.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_Продажи.СуммаВыручкиРегл КАК СуммаВыручкиРегл,
	|	ВТ_Продажи.СуммаВыручкиВВалютеВзаиморасчетов КАК СуммаВыручкиВВалютеВзаиморасчетов,
	|	ВТ_Продажи.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_Продажи.СуммаВыручкиРеглБезНДС КАК СуммаВыручкиРеглБезНДС,
	|	ВТ_Продажи.СуммаВВалютеВзаиморасчетовБезНДС КАК СуммаВВалютеВзаиморасчетовБезНДС,
	|	&ВыражениеБазоваяЦена КАК БазоваяЦена,
	|	&ВыражениеБонусПроцент КАК БонусПроцент,
	|	&ВыражениеДатаНачала КАК ДатаНачала,
	|	&ВыражениеДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ПроцентСкидки
	|ИЗ
	|	&ТаблицыИсточники КАК ВТ_Продажи
	|ГДЕ
	|	&УсловиеОтбораТоваров
	|	И &УсловиеОтбораПоСоглашениям";
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Выбранные Тогда
		
		ТаблицыИсточники =
		"ВТ_Продажи КАК ВТ_Продажи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
		|		ПО ВТ_Продажи.УсловиеРетроБонуса = ВТ_Товары.УсловияРетроБонусовПокупателей
		|			И ВТ_Продажи.Номенклатура = ВТ_Товары.Номенклатура
		|			И ВТ_Продажи.Характеристика = ВТ_Товары.Характеристика
		|			И (ВТ_Продажи.Период МЕЖДУ ВТ_Товары.ДатаНачала И ВТ_Товары.ДатаОкончания)";
		
		УсловиеОтбораТоваров =
		"ВТ_Продажи.ОтборТоваровВыбранные
		|	И НЕ ВТ_Товары.Номенклатура ЕСТЬ NULL";
		
		Если ПоказательПродаж = ВидыПоказателей.Количество Тогда
			
			// Для ЦПП Количество процент бонуса по товарам определяется далее в ВТ_ПодготовленныеДанныеОпределениеПлана
			ВыражениеБазоваяЦена = "0";
			ВыражениеБонусПроцент = "0";
			ВыражениеКоличествоПлан = "0";
			
		Иначе
			
			ВыражениеБазоваяЦена = "ВТ_Товары.БазоваяЦена";
			ВыражениеБонусПроцент =
			"ВЫБОР
			|	КОГДА ЕСТЬNULL(ВТ_Товары.БонусПроцент, 0) <> 0
			|		ТОГДА ВТ_Товары.БонусПроцент
			|	ИНАЧЕ ВТ_Продажи.БонусПроцент
			|КОНЕЦ";
			ВыражениеКоличествоПлан = "ЕСТЬNULL(ВТ_Товары.КоличествоПлан, 0)";
			
		КонецЕсли;
		
		ВыражениеДатаНачала = "ВТ_Товары.ДатаНачала";
		ВыражениеДатаОкончания = "ВТ_Товары.ДатаОкончания";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.КромеВыбранных Тогда
		
		ТаблицыИсточники =
		"ВТ_Продажи КАК ВТ_Продажи
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
		|		ПО ВТ_Продажи.УсловиеРетроБонуса = ВТ_Товары.УсловияРетроБонусовПокупателей
		|			И ВТ_Продажи.Номенклатура = ВТ_Товары.Номенклатура
		|			И ВТ_Продажи.Характеристика = ВТ_Товары.Характеристика
		|			И (ВТ_Продажи.Период МЕЖДУ ВТ_Товары.ДатаНачала И ВТ_Товары.ДатаОкончания)";
		
		УсловиеОтбораТоваров =
		"ВТ_Продажи.ОтборТоваровКромеВыбранных
		|	И ВТ_Товары.Номенклатура ЕСТЬ NULL";
		
		ВыражениеБазоваяЦена = "0";
		ВыражениеБонусПроцент = "ВТ_Продажи.БонусПроцент";
		ВыражениеДатаНачала = "ВТ_Продажи.Период";
		ВыражениеДатаОкончания = "ВТ_Продажи.Период";
		ВыражениеКоличествоПлан = "0";
		
	Иначе
		
		ТаблицыИсточники = "ВТ_Продажи КАК ВТ_Продажи";
		УсловиеОтбораТоваров = "ВТ_Продажи.ОтборТоваровБезОграничений";
		ВыражениеБазоваяЦена = "0";
		ВыражениеБонусПроцент = "ВТ_Продажи.БонусПроцент";
		ВыражениеДатаНачала = "ВТ_Продажи.Период";
		ВыражениеДатаОкончания = "ВТ_Продажи.Период";
		ВыражениеКоличествоПлан = "0";
		
	КонецЕсли;
	
	Если ПоказательПродаж = ВидыПоказателей.НеИспользуется Тогда
		
		ВыражениеПериодичностьУсловий = "ЗНАЧЕНИЕ(Перечисление.ПериодичностиРетроБонусов.ПустаяСсылка)";
		ВыражениеЗапретНачисленияСверхПлана = "ЛОЖЬ";
		ВыражениеСуммаПлан = "0";
		ВыражениеРаспределениеПоФИФО = "ИСТИНА";
		
	Иначе
		
		ВыражениеПериодичностьУсловий = "ВТ_Продажи.ПериодичностьУсловий";
		ВыражениеЗапретНачисленияСверхПлана = "ВТ_Продажи.ЗапретНачисленияСверхПлана";
		ВыражениеСуммаПлан = "ВТ_Продажи.СуммаПлан";
		ВыражениеРаспределениеПоФИФО = "ВТ_Продажи.РаспределениеПоФИФО";
		
	КонецЕсли;
	
	Если ПоказательПродаж = ВидыПоказателей.Количество Тогда
		
		// Для ЦПП Количество может быть несколько строк товара с разным планом и процентом (прогрессивная шкала)
		//@skip-check bsl-ql-hub - не является запросом
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ", "ВЫБРАТЬ РАЗЛИЧНЫЕ");
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		УсловиеОтбораПоСоглашениям =
		"ВТ_Продажи.Соглашение В
		|	(ВЫБРАТЬ
		|		ВТ_Соглашения.Соглашение
		|	ИЗ
		|		ВТ_Соглашения КАК ВТ_Соглашения)";
		
	Иначе
		
		УсловиеОтбораПоСоглашениям = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицыИсточники КАК ВТ_Продажи", ТаблицыИсточники);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораТоваров", УсловиеОтбораТоваров);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеБазоваяЦена", ВыражениеБазоваяЦена);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеБонусПроцент", ВыражениеБонусПроцент);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеДатаНачала", ВыражениеДатаНачала);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеДатаОкончания", ВыражениеДатаОкончания);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПериодичностьУсловий", ВыражениеПериодичностьУсловий);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеЗапретНачисленияСверхПлана", ВыражениеЗапретНачисленияСверхПлана);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаПлан", ВыражениеСуммаПлан);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеРаспределениеПоФИФО", ВыражениеРаспределениеПоФИФО);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКоличествоПлан", ВыражениеКоличествоПлан);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоСоглашениям", УсловиеОтбораПоСоглашениям);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_УчастникиПериодыДокументы
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПериодыДокументы.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_УчастникиПериодыДокументы.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_УчастникиПериодыДокументы.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_УчастникиПериодыДокументы.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_УчастникиПериодыДокументы.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_УчастникиПериодыДокументы.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_УчастникиПериодыДокументы.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_УчастникиПериодыДокументы.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_УчастникиПериодыДокументы.СуммаПлан КАК СуммаПлан,
	|	ВТ_УчастникиПериодыДокументы.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_УчастникиПериодыДокументы.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_УчастникиПериодыДокументы.Валюта КАК Валюта,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Характеристика КАК Характеристика,
	|	ВТ_Товары.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_Товары.БонусПроцент КАК БонусПроцент,
	|	ВТ_Товары.КоличествоПлан КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_УчастникиПериодыДокументыВсеТовары
	|ИЗ
	|	ВТ_УчастникиПериодыДокументы КАК ВТ_УчастникиПериодыДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ИСТИНА";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_УчастникиПериодыДокументы");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ_УчастникиПериодыДокументыПроданныеТовары
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПериодРасчета КАК ПериодРасчета,
	|	ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка) КАК ДокументПродажи,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.СуммаПлан КАК СуммаПлан,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСКлиентами.ПустаяСсылка) КАК Соглашение,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Валюта КАК Валюта,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Номенклатура КАК Номенклатура,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Характеристика КАК Характеристика,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.БонусПроцент КАК БонусПроцент,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.КоличествоПлан КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_НедостающийСоставПакета
	|ИЗ
	|	ВТ_УчастникиПериодыДокументыВсеТовары КАК ВТ_УчастникиПериодыДокументыВсеТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчастникиПериодыДокументыПроданныеТовары КАК ВТ_УчастникиПериодыДокументыПроданныеТовары
	|	ПО ВТ_УчастникиПериодыДокументыВсеТовары.УсловиеРетроБонуса = ВТ_УчастникиПериодыДокументыПроданныеТовары.УсловиеРетроБонуса
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.Организация = ВТ_УчастникиПериодыДокументыПроданныеТовары.Организация
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.Валюта = ВТ_УчастникиПериодыДокументыПроданныеТовары.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.Номенклатура = ВТ_УчастникиПериодыДокументыПроданныеТовары.Номенклатура
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.Характеристика = ВТ_УчастникиПериодыДокументыПроданныеТовары.Характеристика
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.ПериодРасчета = ВТ_УчастникиПериодыДокументыПроданныеТовары.ПериодРасчета
	|ГДЕ
	|	ВТ_УчастникиПериодыДокументыПроданныеТовары.Номенклатура ЕСТЬ NULL";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_УчастникиПериодыДокументыВсеТовары",
		"ВТ_УчастникиПериодыДокументыПроданныеТовары");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстыПодзапросов = Новый Массив; // Массив Из Строка
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидки.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.Количество КАК Количество,
	|	ВТ_ПроцентСкидки.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	ВТ_ПроцентСкидки.Сумма КАК Сумма,
	|	ВТ_ПроцентСкидки.СуммаРегл КАК СуммаРегл,
	|	ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПроцентСкидки.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ПроцентСкидки.СуммаВыручкиРегл КАК СуммаВыручкиРегл,
	|	ВТ_ПроцентСкидки.СуммаВыручкиВВалютеВзаиморасчетов КАК СуммаВыручкиВВалютеВзаиморасчетов,
	|	ВТ_ПроцентСкидки.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ПроцентСкидки.СуммаВыручкиРеглБезНДС КАК СуммаВыручкиРеглБезНДС,
	|	ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетовБезНДС КАК СуммаВВалютеВзаиморасчетовБезНДС,
	|	ВТ_ПроцентСкидки.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидки.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПроцентСкидки.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПроцентСкидки.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ПроцентСкидки.КоличествоПлан КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_ПроцентСкидкиСДаннымиПоПакету
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстПодзапроса, "ВТ_ПроцентСкидки");
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	ВТ_НедостающийСоставПакета.ПериодРасчета КАК Период,
	|	0 КАК НомерСтроки,
	|	ВТ_НедостающийСоставПакета.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_НедостающийСоставПакета.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_НедостающийСоставПакета.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_НедостающийСоставПакета.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_НедостающийСоставПакета.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_НедостающийСоставПакета.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_НедостающийСоставПакета.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_НедостающийСоставПакета.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_НедостающийСоставПакета.СуммаПлан КАК СуммаПлан,
	|	ВТ_НедостающийСоставПакета.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_НедостающийСоставПакета.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_НедостающийСоставПакета.Договор КАК Договор,
	|	ВТ_НедостающийСоставПакета.Соглашение КАК Соглашение,
	|	ВТ_НедостающийСоставПакета.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВТ_НедостающийСоставПакета.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_НедостающийСоставПакета.Характеристика КАК Характеристика,
	|	0 КАК Количество,
	|	ВТ_НедостающийСоставПакета.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_НедостающийСоставПакета.Валюта КАК Валюта,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаВВалютеВзаиморасчетов,
	|	0 КАК СуммаВыручки,
	|	0 КАК СуммаВыручкиРегл,
	|	0 КАК СуммаВыручкиВВалютеВзаиморасчетов,
	|	0 КАК СуммаВыручкиБезНДС,
	|	0 КАК СуммаВыручкиРеглБезНДС,
	|	0 КАК СуммаВВалютеВзаиморасчетовБезНДС,
	|	ВТ_НедостающийСоставПакета.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_НедостающийСоставПакета.БонусПроцент КАК БонусПроцент,
	|	ВТ_НедостающийСоставПакета.ПериодРасчета КАК ДатаНачала,
	|	ВТ_НедостающийСоставПакета.ПериодРасчета КАК ДатаОкончания,
	|	ВТ_НедостающийСоставПакета.КоличествоПлан КАК КоличествоПлан
	|ИЗ
	|	ВТ_НедостающийСоставПакета КАК ВТ_НедостающийСоставПакета";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстПодзапроса, "ВТ_НедостающийСоставПакета");
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	РазделительПодзапросов = РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыПодзапросов, РазделительПодзапросов);
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаКратностьПакетаТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация КАК Организация,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.КоличествоПлан КАК КоличествоПлан,
	|	СУММА(ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_КратностьПакетаТоваров
	|ИЗ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету КАК ВТ_ПроцентСкидкиСДаннымиПоПакету
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Номенклатура,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Характеристика,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.КоличествоПлан";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПроданоПакетовТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	// Условия на поля Номенклатура и Характеристика необходимы для предотвращения их удаления оптимизатором СКД из предыдущей ВТ
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_КратностьПакетаТоваров.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_КратностьПакетаТоваров.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_КратностьПакетаТоваров.Организация КАК Организация,
	|	ВТ_КратностьПакетаТоваров.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	МИНИМУМ(ВЫБОР
	|		КОГДА ВТ_КратностьПакетаТоваров.Количество = 0
	|			ТОГДА 0
	|		КОГДА ВТ_КратностьПакетаТоваров.КоличествоПлан = 0
	|			ТОГДА ВТ_КратностьПакетаТоваров.Количество
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_КратностьПакетаТоваров.Количество / ВТ_КратностьПакетаТоваров.КоличествоПлан
	|			- 0.5 КАК ЧИСЛО(15, 0))
	|	КОНЕЦ) КАК ПроданоПакетов
	|ПОМЕСТИТЬ ВТ_ПроданоПакетовТоваров
	|ИЗ
	|	ВТ_КратностьПакетаТоваров КАК ВТ_КратностьПакетаТоваров
	|ГДЕ
	|	ВТ_КратностьПакетаТоваров.Номенклатура ЕСТЬ НЕ NULL
	|	И ВТ_КратностьПакетаТоваров.Характеристика ЕСТЬ НЕ NULL
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КратностьПакетаТоваров.УсловиеРетроБонуса,
	|	ВТ_КратностьПакетаТоваров.ПериодРасчета,
	|	ВТ_КратностьПакетаТоваров.Организация,
	|	ВТ_КратностьПакетаТоваров.Валюта,
	|	&ПоляГруппировкиПоУчастникам";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_КратностьПакетаТоваров");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	АВТОНОМЕРЗАПИСИ() КАК Приоритет,
	|	СУММА(ВТ_ПроцентСкидки.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.Сумма
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПревышениеЛимитаОбщая
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПроцентСкидки.Период,
	|	ВТ_ПроцентСкидки.НомерСтроки,
	|	ВТ_ПроцентСкидки.ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.Организация,
	|	ВТ_ПроцентСкидки.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ПроцентСкидки.Договор,
	|	ВТ_ПроцентСкидки.Соглашение,
	|	ВТ_ПроцентСкидки.ДокументПродажи,
	|	ВТ_ПроцентСкидки.Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.СуммаПлан
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРасчета,
	|	УсловиеРетроБонуса,
	|	Организация,
	|	&ПоляИндексированияПоУчастникам,
	|	Период,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Валюта";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажиПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	// Условия на поля Период и НомерСтроки необходимы для предотвращения их удаления оптимизатором СКД из предыдущей ВТ
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПревышениеЛимитаОбщая.ПериодРасчета КАК ПериодРасчета,
	|	ВЫРАЗИТЬ(ВТ_ПревышениеЛимитаОбщая.Приоритет / &ПорцияНарастающегоИтога - 0.5 КАК ЧИСЛО(15, 0))
	|		* &ПорцияНарастающегоИтога КАК ПриоритетПорция,
	|	ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПревышениеЛимитаОбщая.Организация КАК Организация,
	|	ВТ_ПревышениеЛимитаОбщая.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПревышениеЛимитаОбщая.СуммаПлан КАК СуммаПлан,
	|	&ВыражениеКоличествоПлан КАК КоличествоПлан,
	|	0 КАК КоличествоДоПорции,
	|	0 КАК СуммаДоПорции,
	|	СУММА(ВТ_ПревышениеЛимитаОбщая.Количество) КАК Количество,
	|	СУММА(ВТ_ПревышениеЛимитаОбщая.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПродажиПоПорциям
	|ИЗ
	|	ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	|		ПО ВТ_ПревышениеЛимитаОбщая.ПериодРасчета = ВТ_ПодготовленныеДанные.ПериодРасчета
	|			И ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса = ВТ_ПодготовленныеДанные.УсловиеРетроБонуса
	|			И ВТ_ПревышениеЛимитаОбщая.Организация = ВТ_ПодготовленныеДанные.Организация
	|			И ВТ_ПревышениеЛимитаОбщая.Валюта = ВТ_ПодготовленныеДанные.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_ПревышениеЛимитаОбщая.ДокументПродажи = ВТ_ПодготовленныеДанные.ДокументПродажи
	|			И ВТ_ПревышениеЛимитаОбщая.НомерСтроки = ВТ_ПодготовленныеДанные.НомерСтроки
	|
	|ГДЕ
	|	ВТ_ПревышениеЛимитаОбщая.Период ЕСТЬ НЕ NULL
	|	И ВТ_ПревышениеЛимитаОбщая.НомерСтроки ЕСТЬ НЕ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПревышениеЛимитаОбщая.ПериодРасчета,
	|	ВЫРАЗИТЬ(ВТ_ПревышениеЛимитаОбщая.Приоритет / &ПорцияНарастающегоИтога - 0.5 КАК ЧИСЛО(15, 0)) * &ПорцияНарастающегоИтога,
	|	ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса,
	|	ВТ_ПревышениеЛимитаОбщая.Организация,
	|	ВТ_ПревышениеЛимитаОбщая.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам,
	|	ВТ_ПревышениеЛимитаОбщая.СуммаПлан,
	|	&ВыражениеКоличествоПлан
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРасчета,
	|	УсловиеРетроБонуса,
	|	Организация,
	|	Валюта,
	|	&ПоляИндексированияПоУчастникам,
	|	&ПоляИндексированияПоТоварам,
	|	ПриоритетПорция";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательПродаж = ПоказателиПродаж.ПакетноеПредложение Тогда
		ВыражениеКоличествоПлан = "ВТ_ПодготовленныеДанные.ПроданоПакетов * ВТ_ПодготовленныеДанные.КоличествоПлан";
	Иначе
		ВыражениеКоличествоПлан = "ВТ_ПодготовленныеДанные.КоличествоПлан";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКоличествоПлан", ВыражениеКоличествоПлан);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПревышениеЛимитаОбщая", "ВТ_ПодготовленныеДанные");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПревышениеЛимитаОбщая", "ВТ_ПодготовленныеДанные");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПорцияНарастающегоИтога", ПорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажиПоПорциямНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, ТаблицаИсточник, ТаблицаНазначение)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ТаблицаИсточник.ПриоритетПорция КАК ПриоритетПорция,
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ТаблицаИсточник.СуммаПлан КАК СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан,
	|	ТаблицаИсточник.КоличествоДоПорции КАК КоличествоДоПорции,
	|	ТаблицаИсточник.СуммаДоПорции КАК СуммаДоПорции,
	|	СУММА(ТаблицаИсточникЗеркало.Количество) КАК Количество,
	|	СУММА(ТаблицаИсточникЗеркало.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ТаблицаНазначение
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ &ТаблицаИсточник КАК ТаблицаИсточникЗеркало
	|		ПО ТаблицаИсточник.ПриоритетПорция >= ТаблицаИсточникЗеркало.ПриоритетПорция
	|			И ТаблицаИсточник.ПериодРасчета = ТаблицаИсточникЗеркало.ПериодРасчета
	|			И ТаблицаИсточник.УсловиеРетроБонуса = ТаблицаИсточникЗеркало.УсловиеРетроБонуса
	|			И ТаблицаИсточник.Организация = ТаблицаИсточникЗеркало.Организация
	|			И ТаблицаИсточник.Валюта = ТаблицаИсточникЗеркало.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.ПериодРасчета,
	|	ТаблицаИсточник.ПриоритетПорция,
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам,
	|	ТаблицаИсточник.СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан,
	|	ТаблицаИсточник.КоличествоДоПорции,
	|	ТаблицаИсточник.СуммаДоПорции";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ТаблицаНазначение", ТаблицаНазначение);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ТаблицаИсточникЗеркало");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ТаблицаИсточникЗеркало");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПорцияПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, ТаблицаИсточник, ТаблицаНазначение)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	МИНИМУМ(ТаблицаИсточник.ПриоритетПорция) КАК ПриоритетПорция,
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ТаблицаИсточник.СуммаПлан КАК СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_ТаблицаНазначение
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|ГДЕ
	|	&УсловиеПревышениеПлана
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.ПериодРасчета,
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам,
	|	ТаблицаИсточник.СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательПродаж = ПоказателиПродаж.Сумма Тогда
		УсловиеПревышениеПлана = "ТаблицаИсточник.Сумма + ТаблицаИсточник.СуммаДоПорции >= ТаблицаИсточник.СуммаПлан";
	Иначе
		УсловиеПревышениеПлана = "ТаблицаИсточник.Количество + ТаблицаИсточник.КоличествоДоПорции >= ТаблицаИсточник.КоличествоПлан";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПревышениеПлана", УсловиеПревышениеПлана);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ТаблицаНазначение", ТаблицаНазначение);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПорцияПревышенияЛимитаСуммаПродаж(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПорцияПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПорцияПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПорцияПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ПорцияПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПорцияПревышенияЛимита.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_ПорцияПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПорцияПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	0 КАК КоличествоДоСубпорции,
	|	0 КАК СуммаДоСубпорции,
	|	ЕСТЬNULL(ВТ_ПродажиПоПорциямНарастающийИтог.Сумма, 0) КАК СуммаДоПорции,
	|	ЕСТЬNULL(ВТ_ПродажиПоПорциямНарастающийИтог.Количество, 0) КАК КоличествоДоПорции
	|ПОМЕСТИТЬ ВТ_ПорцияПревышенияЛимитаСуммаПродаж
	|ИЗ
	|	ВТ_ПорцияПревышенияЛимита КАК ВТ_ПорцияПревышенияЛимита
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажиПоПорциямНарастающийИтог КАК ВТ_ПродажиПоПорциямНарастающийИтог
	|		ПО ВТ_ПорцияПревышенияЛимита.ПериодРасчета = ВТ_ПродажиПоПорциямНарастающийИтог.ПериодРасчета
	|			И ВТ_ПорцияПревышенияЛимита.УсловиеРетроБонуса = ВТ_ПродажиПоПорциямНарастающийИтог.УсловиеРетроБонуса
	|			И ВТ_ПорцияПревышенияЛимита.Организация = ВТ_ПродажиПоПорциямНарастающийИтог.Организация
	|			И ВТ_ПорцияПревышенияЛимита.Валюта = ВТ_ПродажиПоПорциямНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_ПорцияПревышенияЛимита.ПриоритетПорция - &ПорцияНарастающегоИтога = ВТ_ПродажиПоПорциямНарастающийИтог.ПриоритетПорция";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПорцияПревышенияЛимита", "ВТ_ПродажиПоПорциямНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПорцияПревышенияЛимита", "ВТ_ПродажиПоПорциямНарастающийИтог");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПорцияНарастающегоИтога", ПорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаПродажиДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_СубпорцияПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_СубпорцияПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_СубпорцияПревышенияЛимита.Организация КАК Организация,
	|	ВТ_СубпорцияПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_СубпорцияПревышенияЛимита.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_СубпорцияПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_СубпорцияПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ЕСТЬNULL(ВТ_ПродажиПоСубпорциямНарастающийИтог.СуммаДоПорции, 0) КАК СуммаДоПорции,
	|	ЕСТЬNULL(ВТ_ПродажиПоСубпорциямНарастающийИтог.КоличествоДоПорции, 0) КАК КоличествоДоПорции
	|ПОМЕСТИТЬ ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции
	|ИЗ
	|	ВТ_СубпорцияПревышенияЛимита КАК ВТ_СубпорцияПревышенияЛимита
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажиПоСубпорциямНарастающийИтог КАК ВТ_ПродажиПоСубпорциямНарастающийИтог
	|		ПО ВТ_СубпорцияПревышенияЛимита.ПериодРасчета = ВТ_ПродажиПоСубпорциямНарастающийИтог.ПериодРасчета
	|			И ВТ_СубпорцияПревышенияЛимита.УсловиеРетроБонуса = ВТ_ПродажиПоСубпорциямНарастающийИтог.УсловиеРетроБонуса
	|			И ВТ_СубпорцияПревышенияЛимита.Организация = ВТ_ПродажиПоСубпорциямНарастающийИтог.Организация
	|			И ВТ_СубпорцияПревышенияЛимита.Валюта = ВТ_ПродажиПоСубпорциямНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_СубпорцияПревышенияЛимита.ПриоритетПорция = ВТ_ПродажиПоСубпорциямНарастающийИтог.ПриоритетПорция";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_СубпорцияПревышенияЛимита", "ВТ_ПродажиПоСубпорциямНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_СубпорцияПревышенияЛимита", "ВТ_ПродажиПоСубпорциямНарастающийИтог");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.Организация КАК Организация,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.СуммаПлан КАК СуммаПлан,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.СуммаДоПорции КАК СуммаДоПорции,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.КоличествоДоПорции КАК КоличествоДоПорции,
	|	МАКСИМУМ(ВТ_ПродажиПоСубпорциямНарастающийИтог.ПриоритетПорция) КАК ПриоритетПредыдущаяСубпорция
	|ПОМЕСТИТЬ ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита
	|ИЗ
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции КАК ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажиПоСубпорциямНарастающийИтог КАК ВТ_ПродажиПоСубпорциямНарастающийИтог
	|		ПО ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.ПериодРасчета = ВТ_ПродажиПоСубпорциямНарастающийИтог.ПериодРасчета
	|			И ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.УсловиеРетроБонуса = ВТ_ПродажиПоСубпорциямНарастающийИтог.УсловиеРетроБонуса
	|			И ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.Организация = ВТ_ПродажиПоСубпорциямНарастающийИтог.Организация
	|			И ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.Валюта = ВТ_ПродажиПоСубпорциямНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.ПриоритетПорция > ВТ_ПродажиПоСубпорциямНарастающийИтог.ПриоритетПорция
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.ПериодРасчета,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.УсловиеРетроБонуса,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.Организация,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.ПриоритетПорция,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.СуммаПлан,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.КоличествоПлан,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.СуммаДоПорции,
	|	ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции.КоличествоДоПорции";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции", "ВТ_ПродажиПоСубпорциямНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_СубпорцияПревышенияЛимитаПродажиДоПорции", "ВТ_ПродажиПоСубпорциямНарастающийИтог");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаПродажиДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.СуммаДоПорции КАК СуммаДоПорции,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.КоличествоДоПорции КАК КоличествоДоПорции,
	|	ЕСТЬNULL(ВТ_ПродажиПоСубпорциямНарастающийИтог.Сумма, 0) КАК СуммаДоСубпорции,
	|	ЕСТЬNULL(ВТ_ПродажиПоСубпорциямНарастающийИтог.Количество, 0) КАК КоличествоДоСубпорции
	|ПОМЕСТИТЬ ВТ_СубпорцияПревышенияЛимитаПродажиДоСубпорции
	|ИЗ
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита КАК ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажиПоСубпорциямНарастающийИтог КАК ВТ_ПродажиПоСубпорциямНарастающийИтог
	|		ПО ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.ПериодРасчета = ВТ_ПродажиПоСубпорциямНарастающийИтог.ПериодРасчета
	|			И ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.УсловиеРетроБонуса = ВТ_ПродажиПоСубпорциямНарастающийИтог.УсловиеРетроБонуса
	|			И ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.Организация = ВТ_ПродажиПоСубпорциямНарастающийИтог.Организация
	|			И ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.Валюта = ВТ_ПродажиПоСубпорциямНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.ПриоритетПредыдущаяСубпорция = ВТ_ПродажиПоСубпорциямНарастающийИтог.ПриоритетПорция";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита", "ВТ_ПродажиПоСубпорциямНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита", "ВТ_ПродажиПоСубпорциямНарастающийИтог");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СубпорцияНарастающегоИтога", СубпорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажиЗаПорциюПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, ТаблицаИсточник, ТаблицаНазначение, Порция)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - выбранные поля сочетаются с группировкой путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПревышениеЛимитаОбщая.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПревышениеЛимитаОбщая.Организация КАК Организация,
	|	ВТ_ПревышениеЛимитаОбщая.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПревышениеЛимитаОбщая.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПревышениеЛимитаОбщая.НомерСтроки КАК НомерСтроки,
	|	&ПоляТоваров,
	|	ВТ_ПревышениеЛимитаОбщая.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПревышениеЛимитаОбщая.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПревышениеЛимитаОбщая.Приоритет КАК Приоритет,
	|	ВТ_ПревышениеЛимитаОбщая.СуммаПлан КАК СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан,
	|	ТаблицаИсточник.КоличествоДоПорции КАК КоличествоДоПорции,
	|	ТаблицаИсточник.КоличествоДоСубпорции КАК КоличествоДоСубпорции,
	|	ВТ_ПревышениеЛимитаОбщая.Количество КАК Количество,
	|	ТаблицаИсточник.СуммаДоПорции КАК СуммаДоПорции,
	|	ТаблицаИсточник.СуммаДоСубпорции КАК СуммаДоСубпорции,
	|	ВТ_ПревышениеЛимитаОбщая.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_ТаблицаНазначение
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
	|		ПО ТаблицаИсточник.ПериодРасчета = ВТ_ПревышениеЛимитаОбщая.ПериодРасчета
	|			И ТаблицаИсточник.УсловиеРетроБонуса = ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса
	|			И ТаблицаИсточник.Организация = ВТ_ПревышениеЛимитаОбщая.Организация
	|			И ТаблицаИсточник.Валюта = ВТ_ПревышениеЛимитаОбщая.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ТаблицаИсточник.ПриоритетПорция <= ВТ_ПревышениеЛимитаОбщая.Приоритет
	|			И ТаблицаИсточник.ПриоритетПорция + &ПорцияНарастающегоИтога > ВТ_ПревышениеЛимитаОбщая.Приоритет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Приоритет,
	|	ПериодРасчета,
	|	УсловиеРетроБонуса,
	|	Организация,
	|	Валюта,
	|	&ПоляИндексированияПоУчастникам,
	|	&ПоляИндексированияПоТоварам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ВТ_ПревышениеЛимитаОбщая");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ВТ_ПревышениеЛимитаОбщая");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ТаблицаНазначение", ТаблицаНазначение);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПорцияНарастающегоИтога", Порция);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажиПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВЫРАЗИТЬ(ВТ_ПродажиЗаПорциюПревышенияЛимита.Приоритет / &СубпорцияНарастающегоИтога - 0.5 КАК ЧИСЛО(15, 0))
	|		* &СубпорцияНарастающегоИтога КАК ПриоритетПорция,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.КоличествоДоПорции КАК КоличествоДоПорции,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.СуммаДоПорции КАК СуммаДоПорции,
	|	СУММА(ВТ_ПродажиЗаПорциюПревышенияЛимита.Количество) КАК Количество,
	|	СУММА(ВТ_ПродажиЗаПорциюПревышенияЛимита.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПродажиПоСубпорциям
	|ИЗ
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита КАК ВТ_ПродажиЗаПорциюПревышенияЛимита
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.ПериодРасчета,
	|	ВЫРАЗИТЬ(ВТ_ПродажиЗаПорциюПревышенияЛимита.Приоритет / &СубпорцияНарастающегоИтога - 0.5 КАК ЧИСЛО(15, 0)) * &СубпорцияНарастающегоИтога,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.УсловиеРетроБонуса,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.Организация,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.СуммаПлан,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.КоличествоПлан,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.КоличествоДоПорции,
	|	ВТ_ПродажиЗаПорциюПревышенияЛимита.СуммаДоПорции
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРасчета,
	|	УсловиеРетроБонуса,
	|	Организация,
	|	Валюта,
	|	&ПоляИндексированияПоУчастникам,
	|	&ПоляИндексированияПоТоварам,
	|	ПриоритетПорция";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПродажиЗаПорциюПревышенияЛимита");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПродажиЗаПорциюПревышенияЛимита");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СубпорцияНарастающегоИтога", СубпорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПодзапросаПорцииДоПревышения =
	"ВЫБРАТЬ
	|	ВТ_ПревышениеЛимитаОбщая.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПревышениеЛимитаОбщая.Организация КАК Организация,
	|	ВТ_ПревышениеЛимитаОбщая.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПревышениеЛимитаОбщая.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПревышениеЛимитаОбщая.НомерСтроки КАК НомерСтроки,
	|	&ПоляТоваров,
	|	ВТ_ПревышениеЛимитаОбщая.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПревышениеЛимитаОбщая.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПревышениеЛимитаОбщая.Приоритет КАК Приоритет,
	|	ВТ_ПревышениеЛимитаОбщая.СуммаПлан КАК СуммаПлан,
	|	0 КАК Количество,
	|	0 КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПревышениеЛимитаНарастающийИтог
	|ИЗ
	|	ВТ_СубпорцияПревышенияЛимита КАК ВТ_СубпорцияПревышенияЛимита
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
	|		ПО ВТ_СубпорцияПревышенияЛимита.ПериодРасчета = ВТ_ПревышениеЛимитаОбщая.ПериодРасчета
	|			И ВТ_СубпорцияПревышенияЛимита.УсловиеРетроБонуса = ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса
	|			И ВТ_СубпорцияПревышенияЛимита.Организация = ВТ_ПревышениеЛимитаОбщая.Организация
	|			И ВТ_СубпорцияПревышенияЛимита.Валюта = ВТ_ПревышениеЛимитаОбщая.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_СубпорцияПревышенияЛимита.ПриоритетПорция > ВТ_ПревышениеЛимитаОбщая.Приоритет";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстПодзапросаПорцииДоПревышения,
		"ВТ_СубпорцияПревышенияЛимита",
		"ВТ_ПревышениеЛимитаОбщая");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстПодзапросаПорцииДоПревышения,
		"ВТ_СубпорцияПревышенияЛимита",
		"ВТ_ПревышениеЛимитаОбщая");
	
	ТекстПодзапросаПорцияПревышения =
	"ВЫБРАТЬ
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.НомерСтроки КАК НомерСтроки,
	|	&ПоляТоваров,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.Приоритет КАК Приоритет,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.КоличествоДоПорции + ВТ_ПродажиЗаСубпорциюПревышенияЛимита.КоличествоДоСубпорции
	|		+ СУММА(ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало.Количество) КАК Количество,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.СуммаДоПорции + ВТ_ПродажиЗаСубпорциюПревышенияЛимита.СуммаДоСубпорции
	|		+ СУММА(ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало.Сумма) КАК Сумма
	|ИЗ
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита КАК ВТ_ПродажиЗаСубпорциюПревышенияЛимита
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПродажиЗаСубпорциюПревышенияЛимита КАК ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало
	|		ПО ВТ_ПродажиЗаСубпорциюПревышенияЛимита.Приоритет >= ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало.Приоритет
	|			И ВТ_ПродажиЗаСубпорциюПревышенияЛимита.ПериодРасчета = ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало.ПериодРасчета
	|			И ВТ_ПродажиЗаСубпорциюПревышенияЛимита.УсловиеРетроБонуса = ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало.УсловиеРетроБонуса
	|			И ВТ_ПродажиЗаСубпорциюПревышенияЛимита.Организация = ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало.Организация
	|			И ВТ_ПродажиЗаСубпорциюПревышенияЛимита.Валюта = ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.ПериодРасчета,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.УсловиеРетроБонуса,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.Организация,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.ДокументПродажи,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.НомерСтроки,
	|	&ПоляГруппировкиПоТоварам,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.СуммаПлан,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.ПериодичностьУсловий,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.ДетализацияРасчетаУчастников,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.Приоритет,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.СуммаДоПорции,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.СуммаДоСубпорции,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.КоличествоДоПорции,
	|	ВТ_ПродажиЗаСубпорциюПревышенияЛимита.КоличествоДоСубпорции";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстПодзапросаПорцияПревышения, "ВТ_ПродажиЗаСубпорциюПревышенияЛимита", "ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстПодзапросаПорцияПревышения, "ВТ_ПродажиЗаСубпорциюПревышенияЛимита", "ВТ_ПродажиЗаСубпорциюПревышенияЛимитаЗеркало");
	
	ТекстПодзапросаПорцииПослеПревышения =
	"ВЫБРАТЬ
	|	ВТ_ПревышениеЛимитаОбщая.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПревышениеЛимитаОбщая.Организация КАК Организация,
	|	ВТ_ПревышениеЛимитаОбщая.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПревышениеЛимитаОбщая.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПревышениеЛимитаОбщая.НомерСтроки КАК НомерСтроки,
	|	&ПоляТоваров,
	|	ВТ_ПревышениеЛимитаОбщая.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПревышениеЛимитаОбщая.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПревышениеЛимитаОбщая.Приоритет КАК Приоритет,
	|	ВТ_ПревышениеЛимитаОбщая.СуммаПлан КАК СуммаПлан,
	|	ВТ_СубпорцияПревышенияЛимита.КоличествоПлан + 0.001 КАК Количество,
	|	ВТ_ПревышениеЛимитаОбщая.СуммаПлан + 0.01 КАК Сумма
	|ИЗ
	|	ВТ_СубпорцияПревышенияЛимита КАК ВТ_СубпорцияПревышенияЛимита
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
	|		ПО ВТ_СубпорцияПревышенияЛимита.ПериодРасчета = ВТ_ПревышениеЛимитаОбщая.ПериодРасчета
	|			И ВТ_СубпорцияПревышенияЛимита.УсловиеРетроБонуса = ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса
	|			И ВТ_СубпорцияПревышенияЛимита.Организация = ВТ_ПревышениеЛимитаОбщая.Организация
	|			И ВТ_СубпорцияПревышенияЛимита.Валюта = ВТ_ПревышениеЛимитаОбщая.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_СубпорцияПревышенияЛимита.ПриоритетПорция + &СубпорцияНарастающегоИтога <= ВТ_ПревышениеЛимитаОбщая.Приоритет";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстПодзапросаПорцииПослеПревышения,
		"ВТ_СубпорцияПревышенияЛимита",
		"ВТ_ПревышениеЛимитаОбщая");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстПодзапросаПорцииПослеПревышения,
		"ВТ_СубпорцияПревышенияЛимита",
		"ВТ_ПревышениеЛимитаОбщая");
	
	ТекстЗапроса = ТекстПодзапросаПорцииДоПревышения
		+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()
		+ ТекстПодзапросаПорцияПревышения
		+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()
		+ ТекстПодзапросаПорцииПослеПревышения;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СубпорцияНарастающегоИтога", СубпорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажиПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	&ПоляПериодыТоваров,
	|	СУММА(ВТ_ПроцентСкидки.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.Сумма
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПродажиПоПериодам
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПериодРасчета,
	|	ВТ_ПроцентСкидки.Организация,
	|	ВТ_ПроцентСкидки.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам,
	|	&ПоляГруппировкиПоПериодамТоваров";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ПоказательПродаж = ПараметрыУсловийРетроБонусов.ПоказательПродаж;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	ИмяТаблицы = "ВТ_ПроцентСкидки";
	
	Если ПоказательПродаж = ВидыПоказателей.Количество Тогда
		
		ПоляПериодыТоваров = СтрШаблон(
			"%1.ДатаНачала КАК ДатаНачала,
			|%1.ДатаОкончания КАК ДатаОкончания",
			ИмяТаблицы);
		
		ПоляГруппировкиПоПериодамТоваров = СтрШаблон(
			"%1.ДатаНачала,
			|%1.ДатаОкончания",
			ИмяТаблицы);
		
	Иначе
		
		ПоляПериодыТоваров = "NULL КАК ДатаНачала";
		ПоляГруппировкиПоПериодамТоваров = "NULL";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляПериодыТоваров", ПоляПериодыТоваров);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляГруппировкиПоПериодамТоваров", ПоляГруппировкиПоПериодамТоваров);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажиПоПериодамУсловияПакетаНеВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_УчастникиПериодыДокументыВсеТовары.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Организация КАК Организация,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Валюта КАК Валюта,
	|	&ПоляУчастники
	|ПОМЕСТИТЬ ВТ_ПродажиПоПериодамУсловияПакетаНеВыполнены
	|ИЗ
	|	ВТ_УчастникиПериодыДокументыВсеТовары КАК ВТ_УчастникиПериодыДокументыВсеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажиПоПериодам КАК ВТ_ПродажиПоПериодам
	|		ПО ВТ_УчастникиПериодыДокументыВсеТовары.УсловиеРетроБонуса = ВТ_ПродажиПоПериодам.УсловиеРетроБонуса
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.ПериодРасчета = ВТ_ПродажиПоПериодам.ПериодРасчета
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.Организация = ВТ_ПродажиПоПериодам.Организация
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.Валюта = ВТ_ПродажиПоПериодам.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.Номенклатура = ВТ_ПродажиПоПериодам.Номенклатура
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.Характеристика = ВТ_ПродажиПоПериодам.Характеристика
	|ГДЕ
	|	ВТ_УчастникиПериодыДокументыВсеТовары.КоличествоПлан > ЕСТЬNULL(ВТ_ПродажиПоПериодам.Количество, 0)";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_УчастникиПериодыДокументыВсеТовары", "ВТ_ПродажиПоПериодам");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПродажиПоПериодамУсловияПакетаВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПродажиПоПериодам.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПродажиПоПериодам.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПродажиПоПериодам.Организация КАК Организация,
	|	ВТ_ПродажиПоПериодам.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	СУММА(ВТ_ПродажиПоПериодам.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПродажиПоПериодамУсловияПакетаВыполнены
	|ИЗ
	|	ВТ_ПродажиПоПериодам КАК ВТ_ПродажиПоПериодам
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажиПоПериодамУсловияПакетаНеВыполнены
	|	ПО ВТ_ПродажиПоПериодам.УсловиеРетроБонуса = ВТ_ПродажиПоПериодамУсловияПакетаНеВыполнены.УсловиеРетроБонуса
	|		И ВТ_ПродажиПоПериодам.ПериодРасчета = ВТ_ПродажиПоПериодамУсловияПакетаНеВыполнены.ПериодРасчета
	|		И ВТ_ПродажиПоПериодам.Организация = ВТ_ПродажиПоПериодамУсловияПакетаНеВыполнены.Организация
	|		И ВТ_ПродажиПоПериодам.Валюта = ВТ_ПродажиПоПериодамУсловияПакетаНеВыполнены.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|ГДЕ
	|	ВТ_ПродажиПоПериодамУсловияПакетаНеВыполнены.УсловиеРетроБонуса ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПродажиПоПериодам.УсловиеРетроБонуса,
	|	ВТ_ПродажиПоПериодам.ПериодРасчета,
	|	ВТ_ПродажиПоПериодам.Организация,
	|	ВТ_ПродажиПоПериодам.Валюта,
	|	&ПоляГруппировкиПоУчастникам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПродажиПоПериодам", "ВТ_ПродажиПоПериодамУсловияПакетаНеВыполнены");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПроцентСкидки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВТ_ПроцентСкидки.ВалютаУсловий
	|	КОНЕЦ КАК Валюта,
	|	ВТ_ПроцентСкидки.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.Сумма
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ КАК СуммаПродажи,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВыручки
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВыручкиРегл
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ КАК СуммаВыручки,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВыручкиБезНДС
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВыручкиРеглБезНДС
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетовБезНДС
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ КАК СуммаВыручкиБезНДС,
	|	ВТ_ПроцентСкидки.БонусПроцент КАК БонусПроцент,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.Сумма
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВТ_ПроцентСкидки.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	0 КАК КоличествоПлан,
	|	ВТ_ПродажиПоПериодам.Сумма КАК СуммаПроверки,
	|	0 КАК КоличествоПроверки
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажиПоПериодам КАК ВТ_ПродажиПоПериодам
	|		ПО ВТ_ПроцентСкидки.УсловиеРетроБонуса = ВТ_ПродажиПоПериодам.УсловиеРетроБонуса
	|			И ВТ_ПроцентСкидки.Организация = ВТ_ПродажиПоПериодам.Организация
	|			И ВТ_ПроцентСкидки.ПериодРасчета = ВТ_ПродажиПоПериодам.ПериодРасчета
	|			И &ПоляСоединенияПоУчастникам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки", "ВТ_ПродажиПоПериодам");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПодготовленныеДанныеОпределениеПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидки.Количество КАК Количество,
	|	ВТ_ПроцентСкидки.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	ВТ_ПроцентСкидки.Сумма КАК Сумма,
	|	ВТ_ПроцентСкидки.СуммаРегл КАК СуммаРегл,
	|	ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПроцентСкидки.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ПроцентСкидки.СуммаВыручкиРегл КАК СуммаВыручкиРегл,
	|	ВТ_ПроцентСкидки.СуммаВыручкиВВалютеВзаиморасчетов КАК СуммаВыручкиВВалютеВзаиморасчетов,
	|	ВТ_ПроцентСкидки.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ПроцентСкидки.СуммаВыручкиРеглБезНДС КАК СуммаВыручкиРеглБезНДС,
	|	ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетовБезНДС КАК СуммаВВалютеВзаиморасчетовБезНДС,
	|	ВТ_ПроцентСкидки.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПроцентСкидки.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ПродажиПоПериодам.Количество КАК КоличествоПроверки,
	|	ВТ_ПродажиПоПериодам.Сумма КАК СуммаПродажиВсего,
	|	МАКСИМУМ(ВТ_Товары.КоличествоПлан) КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанныеОпределениеПлана
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажиПоПериодам КАК ВТ_ПродажиПоПериодам
	|		ПО ВТ_ПроцентСкидки.УсловиеРетроБонуса = ВТ_ПродажиПоПериодам.УсловиеРетроБонуса
	|			И ВТ_ПроцентСкидки.ПериодРасчета = ВТ_ПродажиПоПериодам.ПериодРасчета
	|			И ВТ_ПроцентСкидки.Организация = ВТ_ПродажиПоПериодам.Организация
	|			И ВТ_ПроцентСкидки.Валюта = ВТ_ПродажиПоПериодам.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И ВТ_ПроцентСкидки.Номенклатура = ВТ_ПродажиПоПериодам.Номенклатура
	|			И ВТ_ПроцентСкидки.Характеристика = ВТ_ПродажиПоПериодам.Характеристика
	|			И ВТ_ПроцентСкидки.ДатаНачала = ВТ_ПродажиПоПериодам.ДатаНачала
	|			И ВТ_ПроцентСкидки.ДатаОкончания = ВТ_ПродажиПоПериодам.ДатаОкончания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ВТ_ПроцентСкидки.УсловиеРетроБонуса = ВТ_Товары.УсловияРетроБонусовПокупателей
	|			И ВТ_ПроцентСкидки.Номенклатура = ВТ_Товары.Номенклатура
	|			И ВТ_ПроцентСкидки.Характеристика = ВТ_Товары.Характеристика
	|			И ВТ_ПроцентСкидки.ДатаНачала = ВТ_Товары.ДатаНачала
	|			И ВТ_ПроцентСкидки.ДатаОкончания = ВТ_Товары.ДатаОкончания
	|			И ВТ_ПродажиПоПериодам.Количество >= ВТ_Товары.КоличествоПлан
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.Период,
	|	ВТ_ПроцентСкидки.ДокументПродажи,
	|	ВТ_ПроцентСкидки.Организация,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ПроцентСкидки.Договор,
	|	ВТ_ПроцентСкидки.Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика,
	|	ВТ_ПроцентСкидки.НомерСтроки,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.Количество,
	|	ВТ_ПроцентСкидки.Сумма,
	|	ВТ_ПроцентСкидки.СуммаВыручки,
	|	ВТ_ПроцентСкидки.СуммаВыручкиБезНДС,
	|	ВТ_ПроцентСкидки.СуммаПлан,
	|	ВТ_ПроцентСкидки.ДатаНачала,
	|	ВТ_ПроцентСкидки.ДатаОкончания,
	|	ВТ_ПродажиПоПериодам.Количество,
	|	ВТ_ПродажиПоПериодам.Сумма,
	|	ВТ_ПроцентСкидки.ПоказательПродаж,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ПериодРасчета,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.БазаРасчетаПродаж,
	|	ВТ_ПроцентСкидки.Валюта,
	|	ВТ_ПроцентСкидки.СуммаРегл,
	|	ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПроцентСкидки.СуммаВыручкиРегл,
	|	ВТ_ПроцентСкидки.СуммаВыручкиВВалютеВзаиморасчетов,
	|	ВТ_ПроцентСкидки.СуммаВыручкиРеглБезНДС,
	|	ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетовБезНДС";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки", "ВТ_ПродажиПоПериодам");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Период КАК Период,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Договор КАК Договор,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Соглашение КАК Соглашение,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Номенклатура КАК Номенклатура,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Характеристика КАК Характеристика,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Валюта КАК Валюта,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.Сумма
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаРегл
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_Товары.БазоваяЦена, 0) * ВТ_ПодготовленныеДанныеОпределениеПлана.Количество
	|	КОНЕЦ КАК СуммаПродажи,
	|	ВЫБОР
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаВыручки
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаВыручкиРегл
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_Товары.БазоваяЦена, 0) * ВТ_ПодготовленныеДанныеОпределениеПлана.Количество
	|	КОНЕЦ КАК СуммаВыручки,
	|	ВЫБОР
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаВыручкиБезНДС
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаВыручкиРеглБезНДС
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаВВалютеВзаиморасчетовБезНДС
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_Товары.БазоваяЦена, 0) * ВТ_ПодготовленныеДанныеОпределениеПлана.Количество
	|	КОНЕЦ КАК СуммаВыручкиБезНДС,
	|	ВЫБОР
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.Сумма
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаРегл
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_Товары.БазоваяЦена, 0) * ВТ_ПодготовленныеДанныеОпределениеПлана.Количество
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ЕСТЬNULL(ВТ_Товары.БонусПроцент, ВТ_ТоварыМинимальныйПараметрыПоПозиции.БонусПроцент) КАК БонусПроцент,
	|	ЕСТЬNULL(ВТ_Товары.БазоваяЦена, ВТ_ТоварыМинимальныйПараметрыПоПозиции.БазоваяЦена) КАК БазоваяЦена,
	|	0 КАК СуммаПлан,
	|	ЕСТЬNULL(ВТ_Товары.КоличествоПлан, ВТ_ТоварыМинимальныйПараметрыПоПозиции.КоличествоПлан) КАК КоличествоПлан,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаПродажиВсего КАК СуммаПроверки,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.КоличествоПроверки КАК КоличествоПроверки
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	|ИЗ
	|	ВТ_ПодготовленныеДанныеОпределениеПлана КАК ВТ_ПодготовленныеДанныеОпределениеПлана
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ВТ_ПодготовленныеДанныеОпределениеПлана.УсловиеРетроБонуса = ВТ_Товары.УсловияРетроБонусовПокупателей
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.Номенклатура = ВТ_Товары.Номенклатура
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.Характеристика = ВТ_Товары.Характеристика
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.ДатаНачала = ВТ_Товары.ДатаНачала
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.ДатаОкончания = ВТ_Товары.ДатаОкончания
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.КоличествоПлан = ВТ_Товары.КоличествоПлан
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыМинимальныйПараметрыПоПозиции КАК ВТ_ТоварыМинимальныйПараметрыПоПозиции
	|			ПО ВТ_ПодготовленныеДанныеОпределениеПлана.УсловиеРетроБонуса = ВТ_ТоварыМинимальныйПараметрыПоПозиции.УсловияРетроБонусовПокупателей
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.Номенклатура = ВТ_ТоварыМинимальныйПараметрыПоПозиции.Номенклатура
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.Характеристика = ВТ_ТоварыМинимальныйПараметрыПоПозиции.Характеристика
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.ДатаНачала = ВТ_ТоварыМинимальныйПараметрыПоПозиции.ДатаНачала
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.ДатаОкончания = ВТ_ТоварыМинимальныйПараметрыПоПозиции.ДатаОкончания";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанныеОпределениеПлана");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличествуСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Период КАК Период,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Договор КАК Договор,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество КАК Количество,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДатаОкончания КАК ДатаОкончания,
	|	ЕСТЬNULL(ВТ_ПродажиПоПериодамУсловияПакетаВыполнены.Сумма, 0) КАК СуммаПроверки,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.КоличествоПлан КАК КоличествоПлан,
	|	0 КАК КоличествоПроверки,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.Сумма
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена, 0) * ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество
	|	КОНЕЦ КАК СуммаПродажи,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВыручки
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВыручкиРегл
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена, 0) * ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество
	|	КОНЕЦ КАК СуммаВыручки,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВыручкиБезНДС
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВыручкиРеглБезНДС
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВВалютеВзаиморасчетовБезНДС
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена, 0) * ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество
	|	КОНЕЦ КАК СуммаВыручкиБезНДС,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.Сумма
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена, 0) * ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество
	|	КОНЕЦ КАК РасчетнаяБаза
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	|ИЗ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету КАК ВТ_ПроцентСкидкиСДаннымиПоПакету
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажиПоПериодамУсловияПакетаВыполнены КАК ВТ_ПродажиПоПериодамУсловияПакетаВыполнены
	|	ПО  ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса = ВТ_ПродажиПоПериодамУсловияПакетаВыполнены.УсловиеРетроБонуса
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета = ВТ_ПродажиПоПериодамУсловияПакетаВыполнены.ПериодРасчета
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация = ВТ_ПродажиПоПериодамУсловияПакетаВыполнены.Организация
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта = ВТ_ПродажиПоПериодамУсловияПакетаВыполнены.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|ГДЕ
	|	&УсловиеОтбораПустогоДокумента";
	
	Если ПараметрыВарианта.ЭтоРасшифровкаПоНоменклатуре Тогда
		УсловиеОтбораПустогоДокумента = "ИСТИНА";
	Иначе
		УсловиеОтбораПустогоДокумента = "ДокументПродажи <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПустогоДокумента", УсловиеОтбораПустогоДокумента);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ПроцентСкидкиСДаннымиПоПакету",
		"ВТ_ПродажиПоПериодамУсловияПакетаВыполнены");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоПакетномуПредложению(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Период КАК Период,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Договор КАК Договор,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество КАК Количество,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта КАК Валюта,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ПроданоПакетовТоваров.ПроданоПакетов КАК ПроданоПакетов,
	|	0 КАК СуммаПроверки,
	|	ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество, 0) КАК КоличествоПроверки,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.Сумма
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена, 0) * ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество
	|	КОНЕЦ КАК СуммаПродажи,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВыручки
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВыручкиРегл
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена, 0) * ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество
	|	КОНЕЦ КАК СуммаВыручки,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВыручкиБезНДС
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВыручкиРеглБезНДС
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВВалютеВзаиморасчетовБезНДС
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена, 0) * ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество
	|	КОНЕЦ КАК СуммаВыручкиБезНДС,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.Сумма
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена, 0) * ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество
	|	КОНЕЦ КАК РасчетнаяБаза
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	|ИЗ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету КАК ВТ_ПроцентСкидкиСДаннымиПоПакету
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроданоПакетовТоваров КАК ВТ_ПроданоПакетовТоваров
	|	ПО ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса = ВТ_ПроданоПакетовТоваров.УсловиеРетроБонуса
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета = ВТ_ПроданоПакетовТоваров.ПериодРасчета
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация = ВТ_ПроданоПакетовТоваров.Организация
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта = ВТ_ПроданоПакетовТоваров.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|ГДЕ
	|	&УсловиеОтбораПустогоДокумента";
	
	Если ПараметрыВарианта.ЭтоРасшифровкаПоНоменклатуре Тогда
		УсловиеОтбораПустогоДокумента = "ИСТИНА";
	Иначе
		УсловиеОтбораПустогоДокумента = "ДокументПродажи <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПустогоДокумента", УсловиеОтбораПустогоДокумента);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету", "ВТ_ПроданоПакетовТоваров");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказательПродаж = ПараметрыУсловийРетроБонусов.ПоказательПродаж;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанные.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПодготовленныеДанные.Период КАК Период,
	|	ВТ_ПодготовленныеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанные.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПодготовленныеДанные.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанные.Договор КАК Договор,
	|	ВТ_ПодготовленныеДанные.Соглашение КАК Соглашение,
	|	ВТ_ПодготовленныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_ПодготовленныеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПодготовленныеДанные.Характеристика КАК Характеристика,
	|	ВТ_ПодготовленныеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПодготовленныеДанные.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПодготовленныеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПодготовленныеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПодготовленныеДанные.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПодготовленныеДанные.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ПодготовленныеДанные.Валюта КАК Валюта,
	|	ВТ_ПодготовленныеДанные.Количество КАК Количество,
	|	ВТ_ПодготовленныеДанные.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ПодготовленныеДанные.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ПодготовленныеДанные.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ПодготовленныеДанные.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ВТ_ПодготовленныеДанные.СуммаПроверки КАК РасчетнаяБазаВсего,
	|	ВТ_ПодготовленныеДанные.КоличествоПроверки КАК КоличествоВсего,
	|	ВТ_ПодготовленныеДанные.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПодготовленныеДанные.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПодготовленныеДанные.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПодготовленныеДанные.КоличествоПлан КАК КоличествоПлан,
	|	&ВыражениеПриоритет КАК Приоритет,
	|	&ВыражениеСуммаНарастающимИтогом КАК СуммаНарастающимИтогом,
	|	&ВыражениеКоличествоНарастающимИтогом КАК КоличествоНарастающимИтогом,
	|	&ВыражениеПланВыполнен КАК ПланВыполнен,
	|	&ВыражениеПроданоПакетов КАК ПроданоПакетов,
	|	&ВыражениеКоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж
	|ПОМЕСТИТЬ ВТ_ДанныеСУчетомПревышенияЛимита
	|ИЗ
	|	&ТаблицыИсточники КАК ВТ_ПодготовленныеДанные
	|ГДЕ
	|	&УсловиеПоляИндекса";
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПоказательПродаж = ВидыПоказателей.ПакетноеПредложение Тогда
		
		Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
			
			ТаблицыИсточники =
			"ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаНарастающийИтог КАК ВТ_ПревышениеЛимитаНарастающийИтог
			|		ПО ВТ_ПодготовленныеДанные.УсловиеРетроБонуса = ВТ_ПревышениеЛимитаНарастающийИтог.УсловиеРетроБонуса
			|			И ВТ_ПодготовленныеДанные.Организация = ВТ_ПревышениеЛимитаНарастающийИтог.Организация
			|			И ВТ_ПодготовленныеДанные.Валюта = ВТ_ПревышениеЛимитаНарастающийИтог.Валюта
			|			И ВТ_ПодготовленныеДанные.ПериодРасчета = ВТ_ПревышениеЛимитаНарастающийИтог.ПериодРасчета
			|			И ВТ_ПодготовленныеДанные.ДокументПродажи = ВТ_ПревышениеЛимитаНарастающийИтог.ДокументПродажи
			|			И ВТ_ПодготовленныеДанные.НомерСтроки = ВТ_ПревышениеЛимитаНарастающийИтог.НомерСтроки
			|			И &ПоляСоединенияПоТоварам
			|			И &ПоляСоединенияПоУчастникам";
			
			ПраваяТаблица = "ВТ_ПревышениеЛимитаНарастающийИтог";
			
			УсловиеПоляИндекса = "ИСТИНА";
			
		Иначе
			
			ТаблицыИсточники =
			"ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
			|		ПО ВТ_ПодготовленныеДанные.УсловиеРетроБонуса = ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса
			|			И ВТ_ПодготовленныеДанные.Организация = ВТ_ПревышениеЛимитаОбщая.Организация
			|			И ВТ_ПодготовленныеДанные.Валюта = ВТ_ПревышениеЛимитаОбщая.Валюта
			|			И ВТ_ПодготовленныеДанные.ПериодРасчета = ВТ_ПревышениеЛимитаОбщая.ПериодРасчета
			|			И ВТ_ПодготовленныеДанные.ДокументПродажи = ВТ_ПревышениеЛимитаОбщая.ДокументПродажи
			|			И ВТ_ПодготовленныеДанные.НомерСтроки = ВТ_ПревышениеЛимитаОбщая.НомерСтроки
			|			И &ПоляСоединенияПоТоварам
			|			И &ПоляСоединенияПоУчастникам";
			
			ПраваяТаблица = "ВТ_ПревышениеЛимитаОбщая";
			
			// для предотвращения удаления полей оптимизатором СКД из предыдущей ВТ
			УсловиеПоляИндекса =
			"(ВТ_ПревышениеЛимитаОбщая.Период ЕСТЬ НЕ NULL
			|	И ВТ_ПревышениеЛимитаОбщая.НомерСтроки ЕСТЬ НЕ NULL)
			|	ИЛИ ВТ_ПревышениеЛимитаОбщая.ДокументПродажи ЕСТЬ NULL";
			
		КонецЕсли;
		
		ВыражениеПриоритет = ПраваяТаблица + ".Приоритет";
		ВыражениеСуммаНарастающимИтогом = ПраваяТаблица + ".Сумма";
		ВыражениеКоличествоНарастающимИтогом = ПраваяТаблица + ".Количество";
		
		Если ПоказательПродаж = ВидыПоказателей.Сумма Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.СуммаПроверки >= ВТ_ПодготовленныеДанные.СуммаПлан)";
		ИначеЕсли ПоказательПродаж = ВидыПоказателей.Количество Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.КоличествоПроверки >= ВТ_ПодготовленныеДанные.КоличествоПлан)";
		ИначеЕсли ПоказательПродаж = ВидыПоказателей.КоличествоСовокупно Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.СуммаПроверки > 0)";
		ИначеЕсли ПоказательПродаж = ВидыПоказателей.ПакетноеПредложение Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.ПроданоПакетов > 0)";
		Иначе
			ВыражениеПланВыполнен = "ИСТИНА";
		КонецЕсли;
		
	Иначе
		
		ТаблицыИсточники = "ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные";
		ПраваяТаблица = "";
		УсловиеПоляИндекса = "ИСТИНА";
		ВыражениеПриоритет = "0";
		ВыражениеСуммаНарастающимИтогом = "0";
		ВыражениеКоличествоНарастающимИтогом = "0";
		
		Если ПоказательПродаж = ВидыПоказателей.Сумма Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.СуммаПроверки >= ВТ_ПодготовленныеДанные.СуммаПлан)";
		ИначеЕсли ПоказательПродаж = ВидыПоказателей.Количество Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.КоличествоПроверки >= ВТ_ПодготовленныеДанные.КоличествоПлан)";
		ИначеЕсли ПоказательПродаж = ВидыПоказателей.КоличествоСовокупно Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.СуммаПроверки > 0)";
		ИначеЕсли ПоказательПродаж = ВидыПоказателей.ПакетноеПредложение Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.ПроданоПакетов > 0)";
		Иначе
			ВыражениеПланВыполнен = "ИСТИНА";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПоказательПродаж = ВидыПоказателей.ПакетноеПредложение Тогда
		
		ВыражениеПроданоПакетов = "ВТ_ПодготовленныеДанные.ПроданоПакетов";
		ВыражениеКоличествоПланСУчетомКратностиПродаж =
			"ВТ_ПодготовленныеДанные.ПроданоПакетов * ВТ_ПодготовленныеДанные.КоличествоПлан";
		
	Иначе
		
		ВыражениеПроданоПакетов = "0";
		ВыражениеКоличествоПланСУчетомКратностиПродаж = "0";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТаблицыИсточники КАК ВТ_ПодготовленныеДанные",
		ТаблицыИсточники);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеПриоритет",
		ВыражениеПриоритет);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеСуммаНарастающимИтогом",
		ВыражениеСуммаНарастающимИтогом);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеКоличествоНарастающимИтогом",
		ВыражениеКоличествоНарастающимИтогом);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеПланВыполнен",
		ВыражениеПланВыполнен);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеПроданоПакетов",
		ВыражениеПроданоПакетов);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеКоличествоПланСУчетомКратностиПродаж",
		ВыражениеКоличествоПланСУчетомКратностиПродаж);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&УсловиеПоляИндекса",
		УсловиеПоляИндекса);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные", ПраваяТаблица);
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные", ПраваяТаблица);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|			ТОГДА ВТ_ДанныеСУчетомПревышенияЛимита.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДляРасчетаБонуса,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|			ТОГДА 
	|				ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|			ТОГДА 
	|				ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи
	|		ИНАЧЕ 0
	|	КОНЕЦ * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонус
	|ПОМЕСТИТЬ ВТ_ДанныеБезЗапретаПревышения
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеСУчетомПревышенияЛимита");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ЦелевыеПоказатели = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ЦелевыеПоказатели.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	МАКСИМУМ(ТаблицаИсточник.Приоритет) КАК МаксимальныйПриоритет
	|ПОМЕСТИТЬ ВТ_ПриоритетОкругления
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|ГДЕ
	|	ТаблицаИсточник.ПланВыполнен
	|	И ТаблицаИсточник.РасчетнаяБаза > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.ПериодРасчета,
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам";
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		Если (ПараметрыУсловийРетроБонусов.ПоказательПродаж = ЦелевыеПоказатели.Количество
		 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательПродаж = ЦелевыеПоказатели.ПакетноеПредложение) Тогда
			ТаблицаИсточник = "ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса";
		Иначе
			ТаблицаИсточник = "ВТ_ДанныеДляРаспределенияПоФИФО";
		КонецЕсли;
		
	Иначе
		ТаблицаИсточник = "ВТ_ДанныеДляПропорциональногоРаспределения";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	МИНИМУМ(ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ВТ_МинимальныйПриоритетВыполненияПлана
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|ГДЕ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаНарастающимИтогом >= ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеСУчетомПревышенияЛимита");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаНарастающимИтогом КАК СуммаНарастающимИтогом,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет КАК Приоритет,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|			ТОГДА 0
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет > ВТ_МинимальныйПриоритетВыполненияПлана.Приоритет
	|			ТОГДА 0
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.СуммаНарастающимИтогом <= ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан
	|			ТОГДА ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза
	|		ИНАЧЕ ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза - (ВТ_ДанныеСУчетомПревышенияЛимита.СуммаНарастающимИтогом - ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан)
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА НЕ ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|				ТОГДА 0
	|			КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет > ВТ_МинимальныйПриоритетВыполненияПлана.Приоритет
	|				ТОГДА 0
	|			КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.СуммаНарастающимИтогом <= ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан
	|				ТОГДА ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза
	|			ИНАЧЕ ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза - (ВТ_ДанныеСУчетомПревышенияЛимита.СуммаНарастающимИтогом - ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан)
	|		КОНЕЦ * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонус,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусВсего
	|ПОМЕСТИТЬ ВТ_ДанныеДляРаспределенияПоФИФО
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МинимальныйПриоритетВыполненияПлана КАК ВТ_МинимальныйПриоритетВыполненияПлана
	|		ПО ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса = ВТ_МинимальныйПриоритетВыполненияПлана.УсловиеРетроБонуса
	|			И ВТ_ДанныеСУчетомПревышенияЛимита.Организация = ВТ_МинимальныйПриоритетВыполненияПлана.Организация
	|			И &ПоляСоединенияПоУчастникам
	|			И ВТ_ДанныеСУчетомПревышенияЛимита.Валюта = ВТ_МинимальныйПриоритетВыполненияПлана.Валюта
	|			И ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета = ВТ_МинимальныйПриоритетВыполненияПлана.ПериодРасчета";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеСУчетомПревышенияЛимита",
		"ВТ_МинимальныйПриоритетВыполненияПлана");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ЦелевыеПоказатели = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ЦелевыеПоказатели.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПриоритетОкругления.МаксимальныйПриоритет КАК МаксимальныйПриоритет,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаИсточник.Приоритет = ВТ_ПриоритетОкругления.МаксимальныйПриоритет
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаИсточник.РасчетнаяБаза
	|		КОНЕЦ) КАК РасчетнаяБазаКромеМаксимальногоПриоритета,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаИсточник.Приоритет = ВТ_ПриоритетОкругления.МаксимальныйПриоритет
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаИсточник.СуммаБонус
	|		КОНЕЦ) КАК СуммаБонусКромеМаксимальногоПриоритета
	|ПОМЕСТИТЬ ВТ_ОкруглениеРаспределенияПоФИФО
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриоритетОкругления КАК ВТ_ПриоритетОкругления
	|	ПО ТаблицаИсточник.ПериодРасчета = ВТ_ПриоритетОкругления.ПериодРасчета
	|		И ТаблицаИсточник.УсловиеРетроБонуса = ВТ_ПриоритетОкругления.УсловиеРетроБонуса
	|		И ТаблицаИсточник.Организация = ВТ_ПриоритетОкругления.Организация
	|		И &ПоляСоединенияПоУчастникам
	|		И &ПоляСоединенияПоТоварам
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.ПериодРасчета,
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам,
	|	ВТ_ПриоритетОкругления.МаксимальныйПриоритет";
	
	Если (ПараметрыУсловийРетроБонусов.ПоказательПродаж = ЦелевыеПоказатели.Количество
	 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательПродаж = ЦелевыеПоказатели.ПакетноеПредложение) Тогда
		ТаблицаИсточник = "ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса";
	Иначе
		ТаблицаИсточник = "ВТ_ДанныеДляРаспределенияПоФИФО";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ВТ_ПриоритетОкругления");
	
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ВТ_ПриоритетОкругления");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляРаспределенияПоФИФО.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Период КАК Период,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Договор КАК Договор,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Соглашение КАК Соглашение,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Валюта КАК Валюта,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Количество КАК Количество,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.РасчетнаяБаза КАК РасчетнаяБаза,
	|	0 КАК КоличествоПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Количество КАК КоличествоДляРасчетаБонуса,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.Приоритет = ВТ_ОкруглениеРаспределенияПоФИФО.МаксимальныйПриоритет
	|			ТОГДА ВТ_ДанныеДляРаспределенияПоФИФО.СуммаБонусВсего - ВТ_ОкруглениеРаспределенияПоФИФО.СуммаБонусКромеМаксимальногоПриоритета
	|		ИНАЧЕ ВТ_ДанныеДляРаспределенияПоФИФО.СуммаБонус
	|	КОНЕЦ КАК СуммаБонус,
	|	0 КАК ПроданоПакетов
	|ПОМЕСТИТЬ ВТ_ИтоговоеРаспределениеПоФИФО
	|ИЗ
	|	ВТ_ДанныеДляРаспределенияПоФИФО КАК ВТ_ДанныеДляРаспределенияПоФИФО
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОкруглениеРаспределенияПоФИФО КАК ВТ_ОкруглениеРаспределенияПоФИФО
	|	ПО ВТ_ДанныеДляРаспределенияПоФИФО.ПериодРасчета = ВТ_ОкруглениеРаспределенияПоФИФО.ПериодРасчета
	|		И ВТ_ДанныеДляРаспределенияПоФИФО.УсловиеРетроБонуса = ВТ_ОкруглениеРаспределенияПоФИФО.УсловиеРетроБонуса
	|		И ВТ_ДанныеДляРаспределенияПоФИФО.Организация = ВТ_ОкруглениеРаспределенияПоФИФО.Организация
	|		И &ПоляСоединенияПоУчастникам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФО",
		"ВТ_ОкруглениеРаспределенияПоФИФО");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	МИНИМУМ(ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ВТ_МинимальныйПриоритетВыполненияПлана
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|ГДЕ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|	И ВТ_ДанныеСУчетомПревышенияЛимита.РаспределениеПоФИФО
	|	И ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоНарастающимИтогом >= ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеСУчетомПревышенияЛимита");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет КАК Приоритет,
	|	ВТ_МинимальныйПриоритетВыполненияПлана.Приоритет КАК МинимальныйПриоритет,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПроданоПакетов КАК ПроданоПакетов,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет <= ВТ_МинимальныйПриоритетВыполненияПлана.Приоритет
	|			ТОГДА ВЫБОР
	|				КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоНарастающимИтогом <= ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан
	|					ТОГДА ВТ_ДанныеСУчетомПревышенияЛимита.Количество
	|				КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.Количество - (ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоНарастающимИтогом - ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан) < 0
	|					ТОГДА 0
	|				ИНАЧЕ ВТ_ДанныеСУчетомПревышенияЛимита.Количество - (ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоНарастающимИтогом - ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан)
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДляРасчетаБонуса
	|ПОМЕСТИТЬ ВТ_ДанныеДляРаспределенияПоФИФО
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МинимальныйПриоритетВыполненияПлана КАК ВТ_МинимальныйПриоритетВыполненияПлана
	|	ПО ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса = ВТ_МинимальныйПриоритетВыполненияПлана.УсловиеРетроБонуса
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета = ВТ_МинимальныйПриоритетВыполненияПлана.ПериодРасчета
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Организация = ВТ_МинимальныйПриоритетВыполненияПлана.Организация
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Валюта = ВТ_МинимальныйПриоритетВыполненияПлана.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура = ВТ_МинимальныйПриоритетВыполненияПлана.Номенклатура
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика = ВТ_МинимальныйПриоритетВыполненияПлана.Характеристика";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеСУчетомПревышенияЛимита",
		"ВТ_МинимальныйПриоритетВыполненияПлана");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОСуммаБонусаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляРаспределенияПоФИФО.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Период КАК Период,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Договор КАК Договор,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Соглашение КАК Соглашение,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Валюта КАК Валюта,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Количество КАК Количество,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Приоритет КАК Приоритет,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПроданоПакетов КАК ПроданоПакетов,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса = 0
	|			ТОГДА ВЫБОР
	|				КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.ПланВыполнен
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.Количество = 0
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчетаПродаж <> ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|					ТОГДА ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|				ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса * ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена КАК ЧИСЛО(31, 2))
	|			КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса = ВТ_ДанныеДляРаспределенияПоФИФО.Количество
	|				ТОГДА ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи
	|			ИНАЧЕ ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи * ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса / ВТ_ДанныеДляРаспределенияПоФИФО.Количество КАК ЧИСЛО(31, 2))
	|		КОНЕЦ
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса = 0
	|			ТОГДА ВЫБОР
	|				КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.ПланВыполнен
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.Количество = 0
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчетаПродаж <> ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи * ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|				ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса * ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена * ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|			КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса = ВТ_ДанныеДляРаспределенияПоФИФО.Количество
	|				ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи * ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|			ИНАЧЕ ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи * ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса * ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент / 100 / ВТ_ДанныеДляРаспределенияПоФИФО.Количество КАК ЧИСЛО(31, 2))
	|		КОНЕЦ
	|	КОНЕЦ КАК СуммаБонус,
	|	ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса.КоличествоДляРасчетаБонусаВсего КАК КоличествоДляРасчетаБонусаВсего,
	|	ВЫРАЗИТЬ(ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса.КоличествоДляРасчетаБонусаВсего * ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена * ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусВсего
	|ПОМЕСТИТЬ ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса
	|ИЗ
	|	ВТ_ДанныеДляРаспределенияПоФИФО КАК ВТ_ДанныеДляРаспределенияПоФИФО
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса КАК ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса
	|	ПО ВТ_ДанныеДляРаспределенияПоФИФО.ПериодРасчета = ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса.ПериодРасчета
	|		И ВТ_ДанныеДляРаспределенияПоФИФО.УсловиеРетроБонуса = ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса.УсловиеРетроБонуса
	|		И ВТ_ДанныеДляРаспределенияПоФИФО.Организация = ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса.Организация
	|		И ВТ_ДанныеДляРаспределенияПоФИФО.Валюта = ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|		И &ПоляСоединенияПоТоварам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФО",
		"ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса");
	
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФО",
		"ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаОбщееКоличествоПоПозициямДляРасчетаБонуса(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляРаспределенияПоФИФО.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Организация КАК Организация,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	СУММА(ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса) КАК КоличествоДляРасчетаБонусаВсего
	|ПОМЕСТИТЬ ВТ_ОбщееКоличествоПоПозициямДляРасчетаБонуса
	|ИЗ
	|	ВТ_ДанныеДляРаспределенияПоФИФО КАК ВТ_ДанныеДляРаспределенияПоФИФО
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеДляРаспределенияПоФИФО.УсловиеРетроБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Организация,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеДляРаспределенияПоФИФО");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеДляРаспределенияПоФИФО");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Период КАК Период,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Договор КАК Договор,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Соглашение КАК Соглашение,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Валюта КАК Валюта,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Количество КАК Количество,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПроданоПакетов КАК ПроданоПакетов,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Приоритет = ВТ_ОкруглениеРаспределенияПоФИФО.МаксимальныйПриоритет
	|			И ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаБонусВсего - ВТ_ОкруглениеРаспределенияПоФИФО.СуммаБонусКромеМаксимальногоПриоритета
	|		ИНАЧЕ ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаБонус
	|	КОНЕЦ КАК СуммаБонус
	|ПОМЕСТИТЬ ВТ_ИтоговоеРаспределениеПоФИФО
	|ИЗ
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса КАК ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОкруглениеРаспределенияПоФИФО КАК ВТ_ОкруглениеРаспределенияПоФИФО
	|	ПО ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПериодРасчета = ВТ_ОкруглениеРаспределенияПоФИФО.ПериодРасчета
	|		И ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.УсловиеРетроБонуса = ВТ_ОкруглениеРаспределенияПоФИФО.УсловиеРетроБонуса
	|		И ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Организация = ВТ_ОкруглениеРаспределенияПоФИФО.Организация
	|		И &ПоляСоединенияПоУчастникам
	|		И &ПоляСоединенияПоТоварам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса",
		"ВТ_ОкруглениеРаспределенияПоФИФО");
	
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса",
		"ВТ_ОкруглениеРаспределенияПоФИФО");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	МИНИМУМ(ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ВТ_МинимальныйПриоритетВыполненияПлана
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|ГДЕ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|	И ВТ_ДанныеСУчетомПревышенияЛимита.РаспределениеПоФИФО
	|	И ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоНарастающимИтогом >= ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПланСУчетомКратностиПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеСУчетомПревышенияЛимита");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.FIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет КАК Приоритет,
	|	ВТ_МинимальныйПриоритетВыполненияПлана.Приоритет КАК МинимальныйПриоритет,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПроданоПакетов КАК ПроданоПакетов,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет <= ВТ_МинимальныйПриоритетВыполненияПлана.Приоритет
	|			ТОГДА ВЫБОР
	|				КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоНарастающимИтогом <= ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПланСУчетомКратностиПродаж
	|					ТОГДА ВТ_ДанныеСУчетомПревышенияЛимита.Количество
	|				КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.Количество - (ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоНарастающимИтогом - ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПланСУчетомКратностиПродаж) < 0
	|					ТОГДА 0
	|				ИНАЧЕ ВТ_ДанныеСУчетомПревышенияЛимита.Количество - (ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоНарастающимИтогом - ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПланСУчетомКратностиПродаж)
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДляРасчетаБонуса
	|ПОМЕСТИТЬ ВТ_ДанныеДляРаспределенияПоФИФО
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МинимальныйПриоритетВыполненияПлана КАК ВТ_МинимальныйПриоритетВыполненияПлана
	|	ПО ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса = ВТ_МинимальныйПриоритетВыполненияПлана.УсловиеРетроБонуса
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета = ВТ_МинимальныйПриоритетВыполненияПлана.ПериодРасчета
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Организация = ВТ_МинимальныйПриоритетВыполненияПлана.Организация
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Валюта = ВТ_МинимальныйПриоритетВыполненияПлана.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура = ВТ_МинимальныйПриоритетВыполненияПлана.Номенклатура
	|		И ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика = ВТ_МинимальныйПриоритетВыполненияПлана.Характеристика";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеСУчетомПревышенияЛимита",
		"ВТ_МинимальныйПриоритетВыполненияПлана");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.ПропорциональноВыручке Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет КАК Приоритет,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза КАК РасчетнаяБазаИсходная,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего КАК РасчетнаяБазаБезОграничений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК РасчетнаяБазаВсего,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусБезОграничения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан / ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего КАК Коэффициент,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусВсего,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза * ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан / ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего КАК ЧИСЛО(31, 2)) КАК РасчетнаяБаза,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент * ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан / ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонус
	|ПОМЕСТИТЬ ВТ_ДанныеДляПропорциональногоРаспределения
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|ГДЕ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеСУчетомПревышенияЛимита");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.ПропорциональноВыручке Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет КАК Приоритет,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего КАК РасчетнаяБазаВсего,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусБезОграничения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПроданоПакетов КАК ПроданоПакетов,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж
	|ПОМЕСТИТЬ ВТ_ДанныеДляПропорциональногоРаспределения
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|ГДЕ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеСУчетомПревышенияЛимита");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.ПропорциональноВыручке Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Организация КАК Организация,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ВыражениеКоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.БонусПроцент КАК БонусПроцент,
	|	СУММА(ВТ_ДанныеДляПропорциональногоРаспределения.Количество) КАК Количество,
	|	СУММА(ВТ_ДанныеДляПропорциональногоРаспределения.РасчетнаяБаза) КАК РасчетнаяБаза
	|ПОМЕСТИТЬ ВТ_БазаПропорциональногоРаспределения
	|ИЗ
	|	ВТ_ДанныеДляПропорциональногоРаспределения КАК ВТ_ДанныеДляПропорциональногоРаспределения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодРасчета,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.УсловиеРетроБонуса,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Номенклатура,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Характеристика,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Организация,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ВыражениеКоличествоПлан,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.КоличествоПлан,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.БонусПроцент";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательПродаж = ПоказателиПродаж.ПакетноеПредложение Тогда
		ВыражениеКоличествоПлан = "ВТ_ДанныеДляПропорциональногоРаспределения.КоличествоПланСУчетомКратностиПродаж";
	Иначе
		ВыражениеКоличествоПлан = "ВТ_ДанныеДляПропорциональногоРаспределения.КоличествоПлан";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКоличествоПлан", ВыражениеКоличествоПлан);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеДляПропорциональногоРаспределения");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.ПропорциональноВыручке Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_БазаПропорциональногоРаспределения.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_БазаПропорциональногоРаспределения.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_БазаПропорциональногоРаспределения.Номенклатура КАК Номенклатура,
	|	ВТ_БазаПропорциональногоРаспределения.Характеристика КАК Характеристика,
	|	ВТ_БазаПропорциональногоРаспределения.Организация КАК Организация,
	|	ВТ_БазаПропорциональногоРаспределения.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	(ВТ_БазаПропорциональногоРаспределения.КоличествоПлан / ВТ_БазаПропорциональногоРаспределения.Количество) КАК Коэффициент,
	|	ВЫРАЗИТЬ(ВТ_БазаПропорциональногоРаспределения.РасчетнаяБаза * ВТ_БазаПропорциональногоРаспределения.КоличествоПлан / ВТ_БазаПропорциональногоРаспределения.Количество КАК ЧИСЛО(31, 2)) КАК РасчетнаяБазаВсего,
	|	ВЫРАЗИТЬ(ВЫРАЗИТЬ(ВТ_БазаПропорциональногоРаспределения.РасчетнаяБаза * ВТ_БазаПропорциональногоРаспределения.КоличествоПлан / ВТ_БазаПропорциональногоРаспределения.Количество КАК ЧИСЛО(31, 2)) * ВТ_БазаПропорциональногоРаспределения.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусВсего
	|ПОМЕСТИТЬ ВТ_РасчетПропорциональногоРаспределения
	|ИЗ
	|	ВТ_БазаПропорциональногоРаспределения КАК ВТ_БазаПропорциональногоРаспределения";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_БазаПропорциональногоРаспределения");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.ПропорциональноВыручке Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляПропорциональногоРаспределения.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Период КАК Период,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Договор КАК Договор,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Соглашение КАК Соглашение,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Количество КАК Количество,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Валюта КАК Валюта,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.КоличествоПлан КАК КоличествоПлан,
	|	ВЫРАЗИТЬ(ВТ_ДанныеДляПропорциональногоРаспределения.Количество * ВТ_РасчетПропорциональногоРаспределения.Коэффициент КАК ЧИСЛО(15, 3)) КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Приоритет КАК Приоритет,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.РасчетнаяБаза КАК РасчетнаяБазаИсходная,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаБонусБезОграничения КАК СуммаБонусБезОграничения,
	|	ВТ_РасчетПропорциональногоРаспределения.Коэффициент КАК Коэффициент,
	|	ВТ_РасчетПропорциональногоРаспределения.РасчетнаяБазаВсего КАК РасчетнаяБазаВсего,
	|	ВТ_РасчетПропорциональногоРаспределения.СуммаБонусВсего КАК СуммаБонусВсего,
	|	ВЫРАЗИТЬ(ВТ_ДанныеДляПропорциональногоРаспределения.РасчетнаяБаза * ВТ_РасчетПропорциональногоРаспределения.Коэффициент КАК ЧИСЛО(31, 2)) КАК РасчетнаяБаза,
	|	ВЫРАЗИТЬ(ВТ_ДанныеДляПропорциональногоРаспределения.СуммаБонусБезОграничения * ВТ_РасчетПропорциональногоРаспределения.Коэффициент КАК ЧИСЛО(31, 2)) КАК СуммаБонус,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПроданоПакетов КАК ПроданоПакетов
	|ПОМЕСТИТЬ ВТ_ПропорциональноеРаспределениеПоПозициям
	|ИЗ
	|	ВТ_ДанныеДляПропорциональногоРаспределения КАК ВТ_ДанныеДляПропорциональногоРаспределения
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетПропорциональногоРаспределения КАК ВТ_РасчетПропорциональногоРаспределения
	|	ПО ВТ_ДанныеДляПропорциональногоРаспределения.ПериодРасчета = ВТ_РасчетПропорциональногоРаспределения.ПериодРасчета
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.УсловиеРетроБонуса = ВТ_РасчетПропорциональногоРаспределения.УсловиеРетроБонуса
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.Номенклатура = ВТ_РасчетПропорциональногоРаспределения.Номенклатура
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.Характеристика = ВТ_РасчетПропорциональногоРаспределения.Характеристика
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.Организация = ВТ_РасчетПропорциональногоРаспределения.Организация
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.Валюта = ВТ_РасчетПропорциональногоРаспределения.Валюта
	|		И &ПоляСоединенияПоУчастникам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляПропорциональногоРаспределения",
		"ВТ_РасчетПропорциональногоРаспределения");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.ПропорциональноВыручке Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ТаблицаИсточник.Организация КАК Организация,
	|	ВТ_ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПриоритетОкругления.МаксимальныйПриоритет КАК МаксимальныйПриоритет,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ТаблицаИсточник.Приоритет = ВТ_ПриоритетОкругления.МаксимальныйПриоритет
	|				ТОГДА 0
	|			ИНАЧЕ ВТ_ТаблицаИсточник.РасчетнаяБаза
	|		КОНЕЦ) КАК РасчетнаяБазаКромеМаксимальногоПриоритета,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ТаблицаИсточник.Приоритет = ВТ_ПриоритетОкругления.МаксимальныйПриоритет
	|				ТОГДА 0
	|			ИНАЧЕ ВТ_ТаблицаИсточник.СуммаБонус
	|		КОНЕЦ) КАК СуммаБонусКромеМаксимальногоПриоритета
	|ПОМЕСТИТЬ ВТ_ОкруглениеПропорциональногоРаспределения
	|ИЗ
	|	&ТаблицаИсточник КАК ВТ_ТаблицаИсточник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриоритетОкругления КАК ВТ_ПриоритетОкругления
	|	ПО ВТ_ТаблицаИсточник.ПериодРасчета = ВТ_ПриоритетОкругления.ПериодРасчета
	|		И ВТ_ТаблицаИсточник.УсловиеРетроБонуса = ВТ_ПриоритетОкругления.УсловиеРетроБонуса
	|		И ВТ_ТаблицаИсточник.Организация = ВТ_ПриоритетОкругления.Организация
	|		И ВТ_ТаблицаИсточник.Валюта = ВТ_ПриоритетОкругления.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|		И &ПоляСоединенияПоТоварам
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаИсточник.ПериодРасчета,
	|	ВТ_ТаблицаИсточник.УсловиеРетроБонуса,
	|	ВТ_ТаблицаИсточник.Организация,
	|	ВТ_ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоТоварам,
	|	ВТ_ПриоритетОкругления.МаксимальныйПриоритет";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ТаблицаИсточник", "ВТ_ПриоритетОкругления");
	
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ТаблицаИсточник", "ВТ_ПриоритетОкругления");
	
	Если ПараметрыУсловийРетроБонусов.ПоказательПродаж = ВидыПоказателей.Количество
	 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательПродаж = ВидыПоказателей.ПакетноеПредложение Тогда
		
		ТаблицаИсточник = "ВТ_ПропорциональноеРаспределениеПоПозициям";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.ПоказательПродаж = ВидыПоказателей.Сумма Тогда
		
		ТаблицаИсточник = "ВТ_ДанныеДляПропорциональногоРаспределения";
	
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить показатель продаж (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПоказательПродажПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ВидыПоказателей.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения <> ПорядкиРаспределения.ПропорциональноВыручке Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ТаблицаИсточник.Период КАК Период,
	|	ВТ_ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ТаблицаИсточник.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ТаблицаИсточник.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ТаблицаИсточник.Договор КАК Договор,
	|	ВТ_ТаблицаИсточник.Соглашение КАК Соглашение,
	|	ВТ_ТаблицаИсточник.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаИсточник.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ТаблицаИсточник.Характеристика КАК Характеристика,
	|	ВТ_ТаблицаИсточник.СуммаПлан КАК СуммаПлан,
	|	ВТ_ТаблицаИсточник.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ТаблицаИсточник.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ТаблицаИсточник.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ТаблицаИсточник.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ТаблицаИсточник.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ТаблицаИсточник.Количество КАК Количество,
	|	ВТ_ТаблицаИсточник.Валюта КАК Валюта,
	|	ВТ_ТаблицаИсточник.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ТаблицаИсточник.СуммаВыручки КАК СуммаВыручки,
	|	ВТ_ТаблицаИсточник.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ВТ_ТаблицаИсточник.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ТаблицаИсточник.БонусПроцент КАК БонусПроцент,
	|	ВТ_ТаблицаИсточник.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ТаблицаИсточник.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ТаблицаИсточник.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаИсточник.Коэффициент КАК Коэффициент,
	|	ВТ_ТаблицаИсточник.РасчетнаяБазаВсего КАК РасчетнаяБазаВсего,
	|	ВТ_ТаблицаИсточник.СуммаБонусВсего КАК СуммаБонусВсего,
	|	ВТ_ОкруглениеПропорциональногоРаспределения.МаксимальныйПриоритет КАК МаксимальныйПриоритет,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаИсточник.Приоритет = ВТ_ОкруглениеПропорциональногоРаспределения.МаксимальныйПриоритет
	|			ТОГДА ВТ_ТаблицаИсточник.РасчетнаяБазаВсего -
	|				ВТ_ОкруглениеПропорциональногоРаспределения.РасчетнаяБазаКромеМаксимальногоПриоритета
	|		ИНАЧЕ ВТ_ТаблицаИсточник.РасчетнаяБаза
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаИсточник.Приоритет = ВТ_ОкруглениеПропорциональногоРаспределения.МаксимальныйПриоритет
	|			ТОГДА ВТ_ТаблицаИсточник.СуммаБонусВсего -
	|				ВТ_ОкруглениеПропорциональногоРаспределения.СуммаБонусКромеМаксимальногоПриоритета
	|		ИНАЧЕ ВТ_ТаблицаИсточник.СуммаБонус
	|	КОНЕЦ КАК СуммаБонус,
	|	&ВыражениеПроданоПакетов КАК ПроданоПакетов
	|ПОМЕСТИТЬ ВТ_ИтоговоеПропорциональноеРаспределение
	|ИЗ
	|	&ТаблицаИсточник КАК ВТ_ТаблицаИсточник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОкруглениеПропорциональногоРаспределения КАК ВТ_ОкруглениеПропорциональногоРаспределения
	|	ПО ВТ_ТаблицаИсточник.ПериодРасчета = ВТ_ОкруглениеПропорциональногоРаспределения.ПериодРасчета
	|		И ВТ_ТаблицаИсточник.УсловиеРетроБонуса = ВТ_ОкруглениеПропорциональногоРаспределения.УсловиеРетроБонуса
	|		И ВТ_ТаблицаИсточник.Организация = ВТ_ОкруглениеПропорциональногоРаспределения.Организация
	|		И ВТ_ТаблицаИсточник.Валюта = ВТ_ОкруглениеПропорциональногоРаспределения.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|		И &ПоляСоединенияПоТоварам";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательПродаж = ВидыПоказателей.Количество
	 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательПродаж = ВидыПоказателей.ПакетноеПредложение Тогда
		
		ТаблицаИсточник = "ВТ_ПропорциональноеРаспределениеПоПозициям";
		ВыражениеПроданоПакетов = "ВТ_ТаблицаИсточник.ПроданоПакетов";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.ПоказательПродаж = ВидыПоказателей.Сумма Тогда
		
		ТаблицаИсточник = "ВТ_ДанныеДляПропорциональногоРаспределения";
		ВыражениеПроданоПакетов = "0";
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить показатель продаж (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПоказательПродажПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПроданоПакетов", ВыражениеПроданоПакетов);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ТаблицаИсточник",
		"ВТ_ОкруглениеПропорциональногоРаспределения");
	
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ТаблицаИсточник",
		"ВТ_ОкруглениеПропорциональногоРаспределения");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаИтоговыеДанныеБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательПродаж КАК ПоказательПродаж,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ЗНАЧЕНИЕ(Перечисление.ПериодичностиРетроБонусов.ПустаяСсылка) КАК ПериодичностьУсловий,
	|	ЛОЖЬ КАК ЗапретНачисленияСверхПлана,
	|	ИСТИНА КАК ПланВыполнен,
	|	ВТ_ПроцентСкидки.ДокументПродажи КАК ДокументПродажи,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	ВТ_ПроцентСкидки.Контрагент КАК Контрагент,
	|	ВТ_ПроцентСкидки.Партнер КАК Партнер,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВТ_ПроцентСкидки.ВалютаУсловий
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.Сумма
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ КАК СуммаПродажи,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВыручки
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВыручкиРегл
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ КАК СуммаВыручки,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВыручкиБезНДС
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВыручкиРеглБезНДС
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетовБезНДС
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ КАК СуммаВыручкиБезНДС,
	|	ВТ_ПроцентСкидки.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидки.БонусПроцент КАК БонусПроцент,
	|	0 КАК СуммаПлан,
	|	0 КАК КоличествоПлан,
	|	ВТ_ПроцентСкидки.Количество КАК КоличествоДляРасчетаБонуса,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВТ_ПроцентСкидки.Сумма
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаРегл
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.Количество
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ПроцентСкидки.Сумма * ВТ_ПроцентСкидки.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаРеглУчет)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ПроцентСкидки.СуммаРегл * ВТ_ПроцентСкидки.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаВзаиморасчеты)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов * ВТ_ПроцентСкидки.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчетаПродаж = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаПродажРетроБонусов.ВыручкаБазовыеЦены)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ПроцентСкидки.Количество * ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК СуммаБонус,
	|	0 КАК ПроданоПакетов
	|ПОМЕСТИТЬ ВТ_ИтоговыеДанные
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиПродажРетроБонусов;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательПродаж <> ВидыПоказателей.ПакетноеПредложение Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ДанныеБезЗапретаПревышения.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
		|	ВТ_ДанныеБезЗапретаПревышения.ПоказательПродаж КАК ПоказательПродаж,
		|	ВТ_ДанныеБезЗапретаПревышения.Период КАК Период,
		|	ВТ_ДанныеБезЗапретаПревышения.ПериодРасчета КАК ПериодРасчета,
		|	ВТ_ДанныеБезЗапретаПревышения.ДокументПродажи КАК ДокументПродажи,
		|	ВТ_ДанныеБезЗапретаПревышения.Организация КАК Организация,
		|	&ПоляУчастники,
		|	ВТ_ДанныеБезЗапретаПревышения.Договор КАК Договор,
		|	ВТ_ДанныеБезЗапретаПревышения.Соглашение КАК Соглашение,
		|	ВТ_ДанныеБезЗапретаПревышения.Номенклатура КАК Номенклатура,
		|	ВТ_ДанныеБезЗапретаПревышения.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТ_ДанныеБезЗапретаПревышения.Характеристика КАК Характеристика,
		|	ВТ_ДанныеБезЗапретаПревышения.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
		|	ВТ_ДанныеБезЗапретаПревышения.ПериодичностьНачислений КАК ПериодичностьНачислений,
		|	ВТ_ДанныеБезЗапретаПревышения.ПериодичностьУсловий КАК ПериодичностьУсловий,
		|	ВТ_ДанныеБезЗапретаПревышения.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
		|	ВТ_ДанныеБезЗапретаПревышения.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
		|	ВТ_ДанныеБезЗапретаПревышения.Количество КАК Количество,
		|	ВТ_ДанныеБезЗапретаПревышения.Валюта КАК Валюта,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаПродажи КАК СуммаПродажи,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаВыручки КАК СуммаВыручки,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
		|	ВТ_ДанныеБезЗапретаПревышения.БонусПроцент КАК БонусПроцент,
		|	ВТ_ДанныеБезЗапретаПревышения.БазоваяЦена КАК БазоваяЦена,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаПлан КАК СуммаПлан,
		|	ВТ_ДанныеБезЗапретаПревышения.ПланВыполнен КАК ПланВыполнен,
		|	ВТ_ДанныеБезЗапретаПревышения.РасчетнаяБаза КАК РасчетнаяБаза,
		|	ВТ_ДанныеБезЗапретаПревышения.КоличествоПлан КАК КоличествоПлан,
		|	ВТ_ДанныеБезЗапретаПревышения.Количество КАК КоличествоДляРасчетаБонуса,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаБонус КАК СуммаБонус,
		|	0 КАК ПроданоПакетов
		|ПОМЕСТИТЬ ВТ_ИтоговыеДанные
		|ИЗ
		|	ВТ_ДанныеБезЗапретаПревышения КАК ВТ_ДанныеБезЗапретаПревышения";
		
		ПодставитьПоляПоУчастникам(
			ПараметрыУсловийРетроБонусов,
			ТекстЗапроса,
			"ВТ_ДанныеБезЗапретаПревышения",
			"",
			Истина);
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ИтоговоеРаспределениеПоФИФО.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПоказательПродаж КАК ПоказательПродаж,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Период КАК Период,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПериодРасчета КАК ПериодРасчета,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ДокументПродажи КАК ДокументПродажи,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Организация КАК Организация,
		|	&ПоляУчастники,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Договор КАК Договор,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Соглашение КАК Соглашение,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Номенклатура КАК Номенклатура,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Характеристика КАК Характеристика,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПериодичностьНачислений КАК ПериодичностьНачислений,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПериодичностьУсловий КАК ПериодичностьУсловий,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.БазаРасчетаПродаж КАК БазаРасчетаПродаж,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Количество КАК Количество,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Валюта КАК Валюта,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаПродажи КАК СуммаПродажи,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаВыручки КАК СуммаВыручки,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.БонусПроцент КАК БонусПроцент,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.БазоваяЦена КАК БазоваяЦена,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаПлан КАК СуммаПлан,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПланВыполнен КАК ПланВыполнен,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.РасчетнаяБаза КАК РасчетнаяБаза,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.КоличествоПлан КАК КоличествоПлан,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаБонус КАК СуммаБонус,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПроданоПакетов КАК ПроданоПакетов
		|ПОМЕСТИТЬ ВТ_ИтоговыеДанные
		|ИЗ
		|	ВТ_ИтоговоеРаспределениеПоФИФО КАК ВТ_ИтоговоеРаспределениеПоФИФО";
		
		ПодставитьПоляПоУчастникам(
			ПараметрыУсловийРетроБонусов,
			ТекстЗапроса,
			"ВТ_ИтоговоеРаспределениеПоФИФО",
			"",
			Истина);
		
	Иначе
		
		ТекстПодзапросаПланВыполнен =
		"ВЫБРАТЬ
		|	ВТ_ИтоговоеПропорциональноеРаспределение.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПоказательПродаж КАК ПоказательПродаж,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПериодичностьНачислений КАК ПериодичностьНачислений,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПериодичностьУсловий КАК ПериодичностьУсловий,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Период КАК Период,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПериодРасчета КАК ПериодРасчета,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ДокументПродажи КАК ДокументПродажи,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Организация КАК Организация,
		|	&ПоляУчастники,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Договор КАК Договор,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Соглашение КАК Соглашение,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Номенклатура КАК Номенклатура,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Характеристика КАК Характеристика,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаПлан КАК СуммаПлан,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Количество КАК Количество,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Валюта КАК Валюта,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаПродажи КАК СуммаПродажи,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаВыручки КАК СуммаВыручки,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.БазоваяЦена КАК БазоваяЦена,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.БонусПроцент КАК БонусПроцент,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПланВыполнен КАК ПланВыполнен,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.РасчетнаяБаза КАК РасчетнаяБаза,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.КоличествоПлан КАК КоличествоПлан,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаБонус КАК СуммаБонус,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПроданоПакетов КАК ПроданоПакетов
		|ПОМЕСТИТЬ ВТ_ИтоговыеДанные
		|ИЗ
		|	ВТ_ИтоговоеПропорциональноеРаспределение КАК ВТ_ИтоговоеПропорциональноеРаспределение";
		
		ПодставитьПоляПоУчастникам(
			ПараметрыУсловийРетроБонусов,
			ТекстПодзапросаПланВыполнен,
			"ВТ_ИтоговоеПропорциональноеРаспределение",
			"",
			Истина);
		
		ТекстПодзапросаПланНеВыполнен =
		"ВЫБРАТЬ
		|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательПродаж КАК ПоказательПродаж,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументПродажи КАК ДокументПродажи,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
		|	&ПоляУчастники,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручки КАК СуммаВыручки,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
		|	0 КАК РасчетнаяБаза,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
		|	0 КАК КоличествоДляРасчетаБонуса,
		|	0 КАК СуммаБонус,
		|	0 КАК ПроданоПакетов
		|ИЗ
		|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
		|ГДЕ
		|	&УсловиеЗапретНачисленияСверхПлана
		|	И НЕ ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
		|	И НЕ ВТ_ДанныеСУчетомПревышенияЛимита.РаспределениеПоФИФО";
		
		Если ПараметрыУсловийРетроБонусов.ПоказательПродаж = ВидыПоказателей.ПакетноеПредложение Тогда
			УсловиеЗапретНачисленияСверхПлана = "ИСТИНА";
		Иначе
			УсловиеЗапретНачисленияСверхПлана = "ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана";
		КонецЕсли;
		ТекстПодзапросаПланНеВыполнен = СтрЗаменить(
			ТекстПодзапросаПланНеВыполнен, "&УсловиеЗапретНачисленияСверхПлана", УсловиеЗапретНачисленияСверхПлана);
		
		ПодставитьПоляПоУчастникам(
			ПараметрыУсловийРетроБонусов,
			ТекстПодзапросаПланНеВыполнен,
			"ВТ_ДанныеСУчетомПревышенияЛимита",
			"",
			Истина);
		
		ТекстЗапроса = ТекстПодзапросаПланВыполнен
			+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()
			+ ТекстПодзапросаПланНеВыполнен;
		
	КонецЕсли;
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИтоговыеДанные.Период КАК Период,
	|	ИтоговыеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ИтоговыеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ИтоговыеДанные.ПоказательПродаж КАК ПоказательПродаж,
	|	ИтоговыеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ИтоговыеДанные.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ИтоговыеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ИтоговыеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ИтоговыеДанные.ПланВыполнен КАК ПланВыполнен,
	|	ИтоговыеДанные.ДокументПродажи КАК ДокументПродажи,
	|	ИтоговыеДанные.Организация КАК Организация,
	|	ИтоговыеДанные.Контрагент КАК Контрагент,
	|	ИтоговыеДанные.Партнер КАК Партнер,
	|	ИтоговыеДанные.Договор КАК Договор,
	|	ИтоговыеДанные.Соглашение КАК Соглашение,
	|	ИтоговыеДанные.Номенклатура КАК Номенклатура,
	|	ИтоговыеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ИтоговыеДанные.Характеристика КАК Характеристика,
	|	ИтоговыеДанные.Количество КАК КоличествоПродажи,
	|	ИтоговыеДанные.Валюта КАК Валюта,
	|	ИтоговыеДанные.СуммаПродажи КАК СуммаПродажи,
	|	ИтоговыеДанные.СуммаВыручки КАК СуммаВыручки,
	|	ИтоговыеДанные.СуммаВыручкиБезНДС КАК СуммаВыручкиБезНДС,
	|	ИтоговыеДанные.БазоваяЦена КАК БазоваяЦена,
	|	ИтоговыеДанные.Количество * ИтоговыеДанные.БазоваяЦена КАК СуммаВБазовыхЦенах,
	|	ИтоговыеДанные.БонусПроцент КАК ПроцентБонус,
	|	ИтоговыеДанные.СуммаПлан КАК СуммаПлан,
	|	ИтоговыеДанные.КоличествоПлан КАК КоличествоПлан,
	|	ИтоговыеДанные.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ИтоговыеДанные.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
	|	ИтоговыеДанные.СуммаБонус КАК СуммаБонус,
	|	ИтоговыеДанные.ПроданоПакетов КАК ПроданоПакетов
	|{ВЫБРАТЬ
	|	УсловиеРетроБонуса.*,
	|	Период,
	|	ПериодРасчета,
	|	ЗапретНачисленияСверхПлана,
	|	ПериодичностьНачислений,
	|	ПериодичностьУсловий,
	|	ДетализацияРасчетаУчастников,
	|	ПоказательПродаж,
	|	ДокументПродажи.*,
	|	Организация.*,
	|	Контрагент.*,
	|	Партнер.*,
	|	Договор.*,
	|	Соглашение.*,
	|	Номенклатура.*,
	|	ЕдиницаИзмерения.*,
	|	Характеристика.*,
	|	ПланВыполнен,
	|	ПроцентБонус,
	|	КоличествоПродажи,
	|	Валюта,
	|	БазоваяЦена,
	|	СуммаПродажи,
	|	СуммаВыручки,
	|	СуммаВыручкиБезНДС,
	|	СуммаВБазовыхЦенах,
	|	СуммаБонус,
	|	СуммаПлан,
	|	КоличествоПлан,
	|	РасчетнаяБаза,
	|	ПроданоПакетов}
	|ИЗ
	|	ВТ_ИтоговыеДанные КАК ИтоговыеДанные
	|{ГДЕ
	|	ИтоговыеДанные.ДокументПродажи.*,
	|	ИтоговыеДанные.Организация.*,
	|	ИтоговыеДанные.Валюта.*,
	|	ИтоговыеДанные.Контрагент.*,
	|	ИтоговыеДанные.Договор.*,
	|	ИтоговыеДанные.Соглашение.*,
	|	ИтоговыеДанные.ПериодРасчета,
	|	ИтоговыеДанные.Номенклатура.*,
	|	ИтоговыеДанные.Характеристика.*,
	|	ИтоговыеДанные.Партнер.*}";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Функция УсловиеПериодаПоПериодичности(ПараметрыУсловийРетроБонусов, Периодичности, Знач ПериодичностьУсловий)
	
	ВыражениеПериод = "";
	
	Если ПериодичностьУсловий = Периодичности.День Тогда
		
		ВыражениеПериод = "НАЧАЛОПЕРИОДА(ВыручкаИСебестоимостьПродаж.Период, ДЕНЬ)";
		
	ИначеЕсли ПериодичностьУсловий = Периодичности.Неделя Тогда
		
		ВыражениеПериод = "НАЧАЛОПЕРИОДА(ВыручкаИСебестоимостьПродаж.Период, НЕДЕЛЯ)";
		
	ИначеЕсли ПериодичностьУсловий = Периодичности.Месяц Тогда
		
		ВыражениеПериод = "НАЧАЛОПЕРИОДА(ВыручкаИСебестоимостьПродаж.Период, МЕСЯЦ)";
		
	ИначеЕсли ПериодичностьУсловий = Периодичности.Квартал Тогда
		
		ВыражениеПериод = "НАЧАЛОПЕРИОДА(ВыручкаИСебестоимостьПродаж.Период, КВАРТАЛ)";
		
	ИначеЕсли ПериодичностьУсловий = Периодичности.ВесьПериод
		  ИЛИ ПериодичностьУсловий = Перечисления.ПериодичностиРетроБонусов.ПустаяСсылка() Тогда
		
		ВыражениеПериод = "&ДатаНачала";
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить периодичность условий (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПериодичностьУсловийПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Возврат ВыражениеПериод;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли