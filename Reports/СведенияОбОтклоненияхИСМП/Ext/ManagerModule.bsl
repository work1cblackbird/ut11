#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область КомандыПодменюОтчеты

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов.
//
// Возвращаемое значение:
//   СтрокаТаблицыЗначений, Неопределено - в зависимости от факта добавления отчета
//
Функция ДобавитьКомандуОтчета(КомандыОтчетов) Экспорт

	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.СведенияОбОтклоненияхИСМП) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		КомандаОтчет.Менеджер = Метаданные.Отчеты.СведенияОбОтклоненияхИСМП.ПолноеИмя();
		КомандаОтчет.Представление = НСтр("ru='Сведения об отклонениях ИС МП'");
		КомандаОтчет.МножественныйВыбор = Истина;
		КомандаОтчет.Важность = "Обычное";
		КомандаОтчет.ДополнительныеПараметры.Вставить("ИмяКоманды", "СведенияОбОтклоненияхИСМП");
		КомандаОтчет.КлючВарианта = "Основной";
		КомандаОтчет.ЕстьУсловияВидимости = Ложь;
		
		Возврат КомандаОтчет;
		
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки - Структура - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       См. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); 
// Отчет
//   поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Основной");
	
	НастройкиВарианта.ВидимостьПоУмолчанию = Истина;
	НастройкиВарианта.Описание = НСтр("ru= 'Сведения об отклонениях ИС МП'");
	НастройкиВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Сведения об отклонениях
		|ИСМП'");
		
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "РасшифровкаПоКодамМаркировки");
	ОписаниеВарианта.Включен = Ложь;
	
КонецПроцедуры

#КонецОбласти

// Возвращает внешний набор данных для построения отчета.
//
// Параметры:
//  ДокументСсылка - Массив из ДокументСсылка.ОтчетИСМП- массив документов.
//  ДетальныеЗаписи - Булево - получать данные для расшифровки из присоединенных файлов.
//
// Возвращаемое значение:
//  ТаблицаЗначений - внешний набор данных.
//
Функция ДанныеИнформационнойБазы(ДокументСсылка, ДетальныеЗаписи = Ложь) Экспорт
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("КодМаркировки",     ОбщегоНазначения.ОписаниеТипаСтрока(200));
	Результат.Колонки.Добавить("ВидОтклонения",     ОбщегоНазначения.ОписаниеТипаСтрока(255));
	Результат.Колонки.Добавить("РезультатПроверки", ОбщегоНазначения.ОписаниеТипаСтрока(255));
	Результат.Колонки.Добавить("Субъект",           ОбщегоНазначения.ОписаниеТипаСтрока(255));
	Результат.Колонки.Добавить("Нивелировано",      Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("Ссылка",            Новый ОписаниеТипов("ДокументСсылка.ОтчетИСМП"));
	Результат.Колонки.Добавить("АдресОбъекта",      Новый ОписаниеТипов("СправочникСсылка.КлючиАдресовИСМП"));
	Результат.Колонки.Добавить("НомерККТ",          ОбщегоНазначения.ОписаниеТипаСтрока(100));
	Результат.Колонки.Добавить("ИдентификаторВСД",             ОбщегоНазначения.ОписаниеТипаСтрока(36));
	Результат.Колонки.Добавить("ДатаИВремяВыполненияОперации", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	Результат.Колонки.Добавить("НомерДокумента",                ОбщегоНазначения.ОписаниеТипаСтрока(36));
	
	Если Не ДетальныеЗаписи Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИСМППрисоединенныеФайлы.Документ                           КАК Документ,
	|	ИСМППрисоединенныеФайлы.Ссылка                             КАК Ссылка
	|ИЗ
	|	Справочник.ИСМППрисоединенныеФайлы КАК ИСМППрисоединенныеФайлы
	|ГДЕ
	|	ИСМППрисоединенныеФайлы.Документ В (&ДокументСсылка)
	|	И ИСМППрисоединенныеФайлы.Операция = &Операция
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Операция", Перечисления.ВидыОперацийИСМП.ОтчетИСМППолучениеРезультатаВыгрузки);
	
	ДанныеПротокола = Запрос.Выполнить().Выгрузить();
	Для Каждого ЭлементКоллекции Из ДанныеПротокола Цикл
		
		ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ЭлементКоллекции.Ссылка);
		Если ДвоичныеДанные = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлементКоллекции.Документ, "Операция, ВидПродукции");
	
		РезультатЧтенияФайла = ВыгрузкиДанныхИСМП.ПолучитьТаблицуИзФайлаZIPВоВременномХранилище(
			ДвоичныеДанные,
			РеквизитыДокумента.ВидПродукции,
			РеквизитыДокумента.Операция,
			Истина);
		
		Если ЗначениеЗаполнено(РезультатЧтенияФайла.ТекстОшибки) Тогда
			
			ВызватьИсключение РезультатЧтенияФайла.ТекстОшибки;
			
		Иначе
			
			Для Каждого СтрокаПротокола Из РезультатЧтенияФайла.ДанныеВыгрузки Цикл
				
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПротокола);
				НоваяСтрока.Ссылка = ЭлементКоллекции.Документ;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
