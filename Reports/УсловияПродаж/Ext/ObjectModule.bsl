#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - См. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.РазрешеноВыбиратьИНастраиватьВариантыБезСохранения = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета. Содержит в том числе:
//   	* Параметры - Структура - Структура параметров, содержит в том числе:
//   		** ОписаниеКоманды - Структура:
//   			*** ДополнительныеПараметры - Структура:
//   				**** ИмяКоманды - Строка
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды")
			И Параметры.Свойство("ОписаниеКоманды")
			И Параметры.ОписаниеКоманды.ДополнительныеПараметры.Свойство("ИмяКоманды") Тогда 
		
		Если Параметры.ОписаниеКоманды.ДополнительныеПараметры.ИмяКоманды = "УсловияПродаж" Тогда
			ЭтаФорма.ФормаПараметры.Отбор.Вставить("Документ", Параметры.ПараметрКоманды);
		ИначеЕсли Параметры.ОписаниеКоманды.ДополнительныеПараметры.ИмяКоманды = "УсловияПродажПоПартнеру" Тогда
			ЭтаФорма.ФормаПараметры.Отбор.Вставить("Партнер", Параметры.ПараметрКоманды);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	// Если отчет открывается не из документа - нужно показывать только типовые соглашения.
	
	ПараметрЗаполнен = Ложь;
	
	ПараметрСоглашение = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек.ФиксированныеНастройки, "Документ");
	ПараметрЗаполнен   = ПараметрЗаполнен(ПараметрСоглашение);
	
	ПараметрСоглашение = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек.Настройки, "Документ");
	ПараметрЗаполнен   = ПараметрЗаполнен(ПараметрСоглашение) Или ПараметрЗаполнен;
	
	ПараметрПартнер  = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек.ФиксированныеНастройки, "Партнер");
	ПараметрЗаполнен = ПараметрЗаполнен(ПараметрПартнер) Или ПараметрЗаполнен;
	
	ПараметрПартнер  = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек.Настройки, "Партнер");
	ПараметрЗаполнен = ПараметрЗаполнен(ПараметрПартнер) Или ПараметрЗаполнен;
	
	Если Не ПараметрЗаполнен Тогда
		ПараметрТолькоТиповые = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек.Настройки, "ТолькоТиповые");
		Если ПараметрТолькоТиповые <> Неопределено Тогда
			ПараметрТолькоТиповые.Значение      = Истина;
			ПараметрТолькоТиповые.Использование = Истина;
		КонецЕсли;
	КонецЕсли;
	
	СегментыСервер.ВключитьОтборПоСегментуНоменклатурыВСКД(КомпоновщикНастроек);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Осуществляет проверку заполненности параметра компоновки
//
// Параметры:
//	Параметр - ЗначениеПараметраНастроекКомпоновкиДанных - параметр, заполненность которого необходимо проверить.
//
// Возвращаемое значение:
//	Булево - Истина, если параметр заполнен, Ложь, в противном случае.
//
Функция ПараметрЗаполнен(Параметр)
	
	Если Параметр <> Неопределено Тогда
		
		ЗначениеПараметра = Параметр.Значение;
		ТипПараметра      = ТипЗнч(ЗначениеПараметра);
		ПараметрЗаполнен  = ЗначениеЗаполнено(ЗначениеПараметра);
		
		Если ТипПараметра = Тип("СписокЗначений") Тогда
			Если ЗначениеПараметра.Количество() = 0 Тогда
				ПараметрЗаполнен = Ложь;
			Иначе
				ПараметрЗаполнен = Истина;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		ПараметрЗаполнен = Ложь;
		
	КонецЕсли;
	
	Возврат ПараметрЗаполнен;

КонецФункции

#КонецОбласти

#КонецЕсли