#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - См. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Булево -Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	ФормаПараметры = ЭтаФорма.ФормаПараметры;
	
	Если Параметры.Свойство("ПараметрКоманды")
			И Параметры.Свойство("ОписаниеКоманды")
			И Параметры.ОписаниеКоманды.Свойство("ДополнительныеПараметры") Тогда
		
		ПараметрКоманды = Параметры.ПараметрКоманды;
		Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
			Если ПараметрКоманды.Количество() > 0 Тогда
				ПервыйЭлемент = ПараметрКоманды[0];
			Иначе
				ПервыйЭлемент = Неопределено;
			КонецЕсли;
		Иначе
			ПервыйЭлемент = ПараметрКоманды;
		КонецЕсли;
		
		Если ТипЗнч(ПервыйЭлемент) = Тип("ДокументСсылка.ВзаимозачетЗадолженности") Тогда
			ЭтаФорма.ФормаПараметры.Отбор = Новый Структура("ВзаимозачетЗадолженности", ПараметрКоманды);
			ЭтаФорма.ФормаПараметры.КлючНазначенияИспользования = "ВзаимозачетЗадолженности";
			Параметры.КлючНазначенияИспользования = "ВзаимозачетЗадолженности";
		ИначеЕсли ТипЗнч(ПервыйЭлемент) = Тип("ДокументСсылка.СверкаВзаиморасчетов2_4")
			Или ТипЗнч(ПервыйЭлемент) = Тип("ДокументСсылка.СверкаВзаиморасчетов2_5_11") Тогда
			ЭтаФорма.ФормаПараметры.Отбор = Новый Структура("СверкаВзаиморасчетов", ПервыйЭлемент);
			ЭтаФорма.ФормаПараметры.КлючНазначенияИспользования = "СверкаВзаиморасчетов";
			Параметры.КлючНазначенияИспользования = "СверкаВзаиморасчетов";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ФормаПараметры.Свойство("Отбор")
	   И ФормаПараметры.Отбор.Свойство("Документ") Тогда
	   
		Если ТипЗнч(ФормаПараметры.Отбор.Документ) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
			Реквизиты = Документы.ПередачаТоваровМеждуОрганизациями.РеквизитыДокумента(ФормаПараметры.Отбор.Документ);
			
		ИначеЕсли ТипЗнч(ФормаПараметры.Отбор.Документ) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
			Реквизиты = Документы.ОтчетПоКомиссииМеждуОрганизациями.РеквизитыДокумента(ФормаПараметры.Отбор.Документ);
			
		Иначе
			Реквизиты = Неопределено;
			
		КонецЕсли;
		
		Если Реквизиты <> Неопределено Тогда
			Массив = Новый Массив;
			Массив.Добавить(Реквизиты.ОрганизацияОтправитель);
			Массив.Добавить(Реквизиты.ОрганизацияПолучатель);
			ФормаПараметры.Отбор.Вставить("Организация", Массив);
		КонецЕсли;
		
	ИначеЕсли ФормаПараметры.Свойство("Отбор")
		И ФормаПараметры.Отбор.Свойство("ВзаимозачетЗадолженности") Тогда
		ВзаимозачетСсылка = ФормаПараметры.Отбор.ВзаимозачетЗадолженности[0];
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВзаимозачетСсылка, "Дата,ВидОперации,Организация,ОрганизацияКредитор,КонтрагентДебитор,КонтрагентКредитор");
		Если Реквизиты <> Неопределено Тогда
			Если ЗначениеЗаполнено(Реквизиты.Организация) Тогда
				
				Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПереносДолгаПоставщикуМеждуОрганизациями Тогда
					Параметры.КлючВарианта = "РасчетыПоПродажам";
					ФормаПараметры.Отбор.Вставить("Продавец", Реквизиты.Организация);
					Если ЗначениеЗаполнено(Реквизиты.ОрганизацияКредитор) Тогда
						ФормаПараметры.Отбор.Вставить("Покупатель", Реквизиты.ОрганизацияКредитор);
					КонецЕсли;
				КонецЕсли;
				
				Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПереносДолгаКлиентаМеждуОрганизациями Тогда
					Параметры.КлючВарианта = "РасчетыПоЗакупкам";
					ФормаПараметры.Отбор.Вставить("Покупатель", Реквизиты.Организация);
					Если ЗначениеЗаполнено(Реквизиты.ОрганизацияКредитор) Тогда
						ФормаПараметры.Отбор.Вставить("Продавец", Реквизиты.ОрганизацияКредитор);
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			Период = Новый СтандартныйПериод;
			Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
			Период.ДатаНачала = НачалоМесяца(Реквизиты.Дата);
			Период.ДатаОкончания = КонецДня(Реквизиты.Дата);
			ФормаПараметры.Отбор.Вставить("Период", Период);
		КонецЕсли;
		ФормаПараметры.Отбор.Удалить("ВзаимозачетЗадолженности");
		
	ИначеЕсли ФормаПараметры.Свойство("Отбор")
		И ФормаПараметры.Отбор.Свойство("СверкаВзаиморасчетов") Тогда
		Реквизиты = Неопределено;
		Если ТипЗнч(ФормаПараметры.Отбор.СверкаВзаиморасчетов) = Тип("ДокументСсылка.СверкаВзаиморасчетов2_4") Тогда
			Реквизиты = Документы.СверкаВзаиморасчетов2_4.РеквизитыДокумента(ФормаПараметры.Отбор.СверкаВзаиморасчетов);
		ИначеЕсли ТипЗнч(ФормаПараметры.Отбор.СверкаВзаиморасчетов) = Тип("ДокументСсылка.СверкаВзаиморасчетов2_5_11") Тогда
			Реквизиты = Документы.СверкаВзаиморасчетов2_5_11.РеквизитыДокумента(ФормаПараметры.Отбор.СверкаВзаиморасчетов);
		КонецЕсли;
		Если Реквизиты <> Неопределено Тогда
			Если Реквизиты.ТипРасчетов = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом 
				И Реквизиты.ВсегоТиповРасчетов = 1 Тогда
				Параметры.КлючВарианта = "РасчетыПоПродажам";
				ФормаПараметры.Отбор.Вставить("Продавец", Реквизиты.Организация);
				ФормаПараметры.Отбор.Вставить("Покупатель", Реквизиты.Контрагент);
			Иначе
				Параметры.КлючВарианта = "РасчетыПоЗакупкам";
				ФормаПараметры.Отбор.Вставить("Покупатель", Реквизиты.Организация);
				ФормаПараметры.Отбор.Вставить("Продавец", Реквизиты.Контрагент);
			КонецЕсли;
			Период = Новый СтандартныйПериод;
			Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
			Период.ДатаНачала = Реквизиты.НачалоПериода;
			Период.ДатаОкончания = Реквизиты.КонецПериода;
			ФормаПараметры.Отбор.Вставить("Период", Период);
		КонецЕсли;
		ФормаПараметры.Отбор.Удалить("СверкаВзаиморасчетов");
	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	//Предупреждение о невыполенном распределении взаиморасчетов.
	ВзаиморасчетыСервер.ВывестиПредупреждениеОбОбновлении(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли