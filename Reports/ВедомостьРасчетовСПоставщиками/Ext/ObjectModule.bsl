#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - См. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПередЗагрузкойВариантаНаСервере = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета:
//   	* Параметры - Структура:
//   		** ОписаниеКоманды - Структура:
//   			*** ДополнительныеПараметры - Структура.
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	
	Если Параметры.Свойство("ПараметрКоманды")
			И Параметры.Свойство("ОписаниеКоманды")
			И Параметры.ОписаниеКоманды.Свойство("ДополнительныеПараметры") Тогда 
		
		СформироватьПараметрыОтчета(Параметры.ПараметрКоманды, ЭтаФорма.ФормаПараметры, Параметры);
		
		ПараметрКоманды = Параметры.ПараметрКоманды;
		Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
			Если ПараметрКоманды.Количество() > 0 Тогда
				ПервыйЭлемент = ПараметрКоманды[0];
			Иначе
				ПервыйЭлемент = Неопределено;
			КонецЕсли;
		Иначе
			ПервыйЭлемент = ПараметрКоманды;
		КонецЕсли;
		
		Если ТипЗнч(ПервыйЭлемент) = Тип("ДокументСсылка.ВзаимозачетЗадолженности") Тогда
			ЭтаФорма.ФормаПараметры.Отбор = Новый Структура("ВзаимозачетЗадолженности", ПараметрКоманды);
			ЭтаФорма.ФормаПараметры.КлючНазначенияИспользования = "ВзаимозачетЗадолженности";
			Параметры.КлючНазначенияИспользования = "ВзаимозачетЗадолженности";
			
		КонецЕсли;
			
	КонецЕсли;
	
	ФормаПараметры = ЭтаФорма.ФормаПараметры;
	
	Если ФормаПараметры.Свойство("Отбор")
	 И ФормаПараметры.Отбор.Свойство("ВзаимозачетЗадолженности") Тогда
		ВзаимозачетСсылка = ФормаПараметры.Отбор.ВзаимозачетЗадолженности[0];
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВзаимозачетСсылка, "Дата,ВидОперации,Организация,ОрганизацияКредитор,КонтрагентДебитор,КонтрагентКредитор");
		Если Реквизиты <> Неопределено Тогда
			Если ЗначениеЗаполнено(Реквизиты.Организация) Тогда	
				ФормаПараметры.Отбор.Вставить("Организация", Реквизиты.Организация);
				Если ЗначениеЗаполнено(Реквизиты.ОрганизацияКредитор) Тогда
					Отбор = Новый Массив;
					Отбор.Добавить(Реквизиты.Организация);
					Отбор.Добавить(Реквизиты.ОрганизацияКредитор);
					ФормаПараметры.Отбор.Вставить("Организация", Отбор);
				КонецЕсли;
			КонецЕсли;
			Если ЗначениеЗаполнено(Реквизиты.КонтрагентДебитор) Тогда
				КонтрагентДебитор = Реквизиты.КонтрагентДебитор;
				Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда
					КонтрагентДебитор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.КонтрагентДебитор,"Партнер");
				КонецЕсли;
				ОтборПоКонрагенту = КонтрагентДебитор; 
				Если ЗначениеЗаполнено(Реквизиты.КонтрагентКредитор)
					И Реквизиты.КонтрагентКредитор <> Реквизиты.КонтрагентДебитор Тогда
					КонтрагентКредитор = Реквизиты.КонтрагентКредитор;
					Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда
						КонтрагентКредитор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.КонтрагентКредитор,"Партнер");
					КонецЕсли; 
					ОтборПоКонрагенту = Новый Массив;
					ОтборПоКонрагенту.Добавить(КонтрагентДебитор);
					ОтборПоКонрагенту.Добавить(КонтрагентКредитор);
				КонецЕсли;
				Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда
					ФормаПараметры.Отбор.Вставить("Контрагент", ОтборПоКонрагенту);
				Иначе
					ФормаПараметры.Отбор.Вставить("Партнер", ОтборПоКонрагенту);
				КонецЕсли;
			КонецЕсли;
			Период = Новый СтандартныйПериод;
			Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
			Период.ДатаНачала = НачалоМесяца(Реквизиты.Дата);
			Период.ДатаОкончания = КонецДня(Реквизиты.Дата);
			ФормаПараметры.Отбор.Вставить("Период", Период);
		КонецЕсли;
		ФормаПараметры.Отбор.Удалить("ВзаимозачетЗадолженности");
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере
//
Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	
	// Изменение настроек по функциональным опциям
	НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы);
	
	// Установка значений по умолчанию
	УстановитьОбязательныеНастройки(КомпоновщикНастроекФормы, Истина);
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	
	// Сформируем отчет
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	// Определим состав выбранных полей
	МассивВыбранныхПолей = Новый Массив;
	НайтиВыбранныеПоляРекурсивно(НастройкиОтчета.Выбор.Элементы, МассивВыбранныхПолей);
	МассивИменВыбранныхПолей = Новый Массив;
	Для Каждого ВыбранноеПоле Из МассивВыбранныхПолей Цикл
		МассивИменВыбранныхПолей.Добавить(Строка(ВыбранноеПоле.Поле));
	КонецЦикла;
	ПроверитьДополнитьИменаВыбранныхПолей(МассивИменВыбранныхПолей);
	
	// Установим тексты запросов наборов данных:
	// Расчеты по срокам
	НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных; // НаборДанныхОбъединениеСхемыКомпоновкиДанных 
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстЗапросаВтОтборПоСегментуПартнеров());
	ТекстыЗапросов.Добавить(
		ТекстЗапросаРасчетыПоСрокам(
			МассивИменВыбранныхПолей, 
			НастройкиОтчета, 
			СхемаКомпоновкиДанных.ВычисляемыеПоля));
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ";");
	НаборДанных.Элементы.РасчетыПоСрокам.Запрос = ТекстЗапроса;
	
	// План оплат
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстЗапросаВтОтборПоСегментуПартнеров());
	ТекстыЗапросов.Добавить(ТекстЗапросаВтКурсыВалют());
	ТекстыЗапросов.Добавить(
		ТекстЗапросаПланОплат(
			МассивИменВыбранныхПолей, 
			НастройкиОтчета, 
			СхемаКомпоновкиДанных.ВычисляемыеПоля));
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ";");
	НаборДанных.Элементы.ПланОплат.Запрос = ТекстЗапроса;
	
	// План отгрузок
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстЗапросаВтОтборПоСегментуПартнеров());
	ТекстыЗапросов.Добавить(ТекстЗапросаВтКурсыВалют());
	ТекстыЗапросов.Добавить(
		ТекстЗапросаПланОтгрузок(
			МассивИменВыбранныхПолей, 
			НастройкиОтчета, 
			СхемаКомпоновкиДанных.ВычисляемыеПоля));
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ";");
	НаборДанных.Элементы.ПланОтгрузок.Запрос = ТекстЗапроса;
	
	// Расчеты
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстЗапросаВтОтборПоСегментуПартнеров());
	ТекстыЗапросов.Добавить(ТекстЗапросаВтКурсыВалют());
	ТекстыЗапросов.Добавить(ТекстЗапросаРасчеты(МассивИменВыбранныхПолей));
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ";");
	НаборДанных.Элементы.Расчеты.Запрос = ТекстЗапроса;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	//Предупреждение о невыполенном распределении взаиморасчетов.
	ВзаиморасчетыСервер.ВывестиПредупреждениеОбОбновлении(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	// Сообщим форме отчета, что настройки модифицированы
	Если ПользовательскиеНастройкиМодифицированы Тогда
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПользовательскиеНастройкиМодифицированы", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы)
	
	СегментыСервер.ВключитьОтборПоСегментуПартнеровВСКД(КомпоновщикНастроек);
	
КонецПроцедуры

Процедура НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы)
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "Контрагент");
	КонецЕсли;
КонецПроцедуры

Функция ТекстЗапросаРасчетыПоСрокам(МассивВыбранныхПолей, НастройкиОтчета, ВычисляемыеПоля)
	
	ЕстьРесурсЭтогоЗапроса = Ложь;
	ПоляРесурсовОстаткиОбороты = Новый Массив;
	ПоляРесурсовРасчеты = ПоляРесурсовРасчеты(МассивВыбранныхПолей);
	ПоляРесурсовДанныеРегистра = Новый Массив;
	МассивПолей = ПоляРесурсов();
	ШаблонПоля = "
	             |%1 КАК %2";
	Для Каждого ИмяПоля Из МассивПолей Цикл
		Если МассивВыбранныхПолей.Найти(ИмяПоля) <> Неопределено Тогда
			Если ИмяПоля = "ДолгПоставщикаНачальныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|ВЫБОР &ДанныеОтчета
					|	КОГДА 4
					|		ТОГДА РасчетыПоСрокам.ПредоплатаНачальныйОстаток
					|	КОГДА 2
					|		ТОГДА РасчетыПоСрокам.ПредоплатаУпрНачальныйОстаток
					|	ИНАЧЕ РасчетыПоСрокам.ПредоплатаРеглНачальныйОстаток
					|КОНЕЦ КАК ДолгПоставщикаНачальныйОстаток");
				ЕстьРесурсЭтогоЗапроса = Истина;
			ИначеЕсли ИмяПоля = "НашДолгНачальныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|ВЫБОР &ДанныеОтчета
					|	КОГДА 4
					|		ТОГДА РасчетыПоСрокам.ДолгНачальныйОстаток
					|	КОГДА 2
					|		ТОГДА РасчетыПоСрокам.ДолгУпрНачальныйОстаток
					|	ИНАЧЕ РасчетыПоСрокам.ДолгРеглНачальныйОстаток
					|КОНЕЦ КАК НашДолгНачальныйОстаток"); 
				ЕстьРесурсЭтогоЗапроса = Истина;
			ИначеЕсли ИмяПоля = "ДолгПоставщикаКонечныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|ВЫБОР &ДанныеОтчета
					|	КОГДА 4
					|		ТОГДА РасчетыПоСрокам.ПредоплатаКонечныйОстаток
					|	КОГДА 2
					|		ТОГДА РасчетыПоСрокам.ПредоплатаУпрКонечныйОстаток
					|	ИНАЧЕ РасчетыПоСрокам.ПредоплатаРеглКонечныйОстаток
					|КОНЕЦ КАК ДолгПоставщикаКонечныйОстаток"); 
				ЕстьРесурсЭтогоЗапроса = Истина;
			ИначеЕсли ИмяПоля = "НашДолгКонечныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|ВЫБОР &ДанныеОтчета
					|	КОГДА 4
					|		ТОГДА РасчетыПоСрокам.ДолгКонечныйОстаток
					|	КОГДА 2
					|		ТОГДА РасчетыПоСрокам.ДолгУпрКонечныйОстаток
					|	ИНАЧЕ РасчетыПоСрокам.ДолгРеглКонечныйОстаток
					|КОНЕЦ КАК НашДолгКонечныйОстаток"); 
				ЕстьРесурсЭтогоЗапроса = Истина;
			Иначе
				ПоляРесурсовОстаткиОбороты.Добавить(СтрШаблон(ШаблонПоля, "0", ИмяПоля));
			КонецЕсли;
			Если ИмяПоля = "Поставлено" 
				Или ИмяПоля = "Зачтено" 
				Или ИмяПоля = "Оплачено" 
				Или ИмяПоля = "СписаниеПереоценка" Тогда
				ПоляРесурсовДанныеРегистра.Добавить(СтрШаблон(ШаблонПоля, "&" + ИмяПоля, ИмяПоля));
			Иначе 
				ПоляРесурсовДанныеРегистра.Добавить(СтрШаблон(ШаблонПоля, "0", ИмяПоля));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаУчета.Организация КАК Организация,
	|	АналитикаУчета.Партнер КАК Партнер,
	|	АналитикаУчета.Контрагент КАК Контрагент,
	|	АналитикаУчета.Договор КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АналитикаУчета.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_АналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|{ГДЕ
	|	АналитикаУчета.Организация.* КАК Организация,
	|	АналитикаУчета.Партнер.* КАК Партнер,
	|	АналитикаУчета.Контрагент.* КАК Контрагент,
	|	АналитикаУчета.Договор.* КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|	(АналитикаУчета.Партнер В
	|			(ВЫБРАТЬ
	|				ОтборПоСегментуПартнеров.Партнер
	|			ИЗ
	|				ОтборПоСегментуПартнеров
	|			ГДЕ
	|				ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаУчета.Организация                                     КАК Организация,
	|	АналитикаУчета.Партнер                                         КАК Партнер,
	|	АналитикаУчета.Контрагент                                      КАК Контрагент,
	|	АналитикаУчета.Договор                                         КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности                         КАК НаправлениеДеятельности,
	|	РасчетыПоСрокам.ОбъектРасчетов                                 КАК ОбъектРасчетов,
	|	ВЫБОР &ДанныеОтчета
	|		КОГДА 4
	|			ТОГДА РасчетыПоСрокам.Валюта
	|		КОГДА 2
	|			ТОГДА &ВалютаУправленческогоУчета
	|		ИНАЧЕ АналитикаУчета.Организация.ВалютаРегламентированногоУчета
	|	КОНЕЦ                                                          КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)              КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)                     КАК КорПоставщик,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)                  КАК КорОрганизация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)                  КАК КорКонтрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)         КАК КорДоговор,
	|	РасчетыПоСрокам.РасчетныйДокумент                              КАК РасчетныйДокумент,
	|	РасчетыПоСрокам.ДатаВозникновения                              КАК ДатаВозникновения,
	|	РасчетыПоСрокам.ДатаПлановогоПогашения                         КАК ДатаПлановогоПогашения,
	|
	|	NULL                                                           КАК Регистратор,
	|	РасчетыПоСрокам.Регистратор                                    КАК РегистраторРасчетов,
	|	РасчетыПоСрокам.ПериодСекунда                                  КАК ПериодСекунда,
	|
	|	&ПоляРесурсовОстаткиОбороты
	|
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам.ОстаткиИОбороты({&НачалоПериода}, {&КонецПериода}, Авто, ,
	|		АналитикаУчетаПоПартнерам В
	|				(ВЫБРАТЬ
	|					ВТ_АналитикаУчетаПоПартнерам.КлючАналитики
	|				ИЗ
	|					ВТ_АналитикаУчетаПоПартнерам)) КАК РасчетыПоСрокам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|			ПО РасчетыПоСрокам.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|ГДЕ
	|	&ЕстьРесурсЭтогоЗапроса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Организация             КАК Организация,
	|	Расчеты.Партнер                 КАК Партнер,
	|	Расчеты.Контрагент              КАК Контрагент,
	|	Расчеты.Договор                 КАК Договор,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	Расчеты.Валюта                  КАК Валюта,
	|	Расчеты.КорОбъектРасчетов       КАК КорОбъектРасчетов,
	|	Расчеты.КорПоставщик            КАК КорПоставщик,
	|	Расчеты.КорОрганизация          КАК КорОрганизация,
	|	Расчеты.КорКонтрагент           КАК КорКонтрагент,
	|	Расчеты.КорДоговор              КАК КорДоговор,
	|	Расчеты.РасчетныйДокумент       КАК РасчетныйДокумент,
	|	Расчеты.ДатаВозникновения       КАК ДатаВозникновения,
	|	Расчеты.ДатаПлановогоПогашения  КАК ДатаПлановогоПогашения,
	|
	|	Расчеты.Регистратор             КАК Регистратор,
	|	Расчеты.РегистраторРасчетов     КАК РегистраторРасчетов,
	|	Расчеты.ПериодСекунда           КАК ПериодСекунда,
	|
	|	&ПоляРесурсовРасчеты
	|
	|ИЗ (
	|	ВЫБРАТЬ
	|		АналитикаУчета.Организация                                       КАК Организация,
	|		АналитикаУчета.Партнер                                           КАК Партнер,
	|		АналитикаУчета.Контрагент                                        КАК Контрагент,
	|		АналитикаУчета.Договор                                           КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности                           КАК НаправлениеДеятельности,
	|		РасчетыПоСрокам.ОбъектРасчетов                                   КАК ОбъектРасчетов,
	|		ВЫБОР &ДанныеОтчета
	|			КОГДА 4
	|				ТОГДА РасчетыПоСрокам.Валюта
	|			КОГДА 2
	|				ТОГДА &ВалютаУправленческогоУчета
	|			ИНАЧЕ АналитикаУчета.Организация.ВалютаРегламентированногоУчета
	|		КОНЕЦ                                                            КАК Валюта,
	|		РасчетыПоСрокам.КорОбъектРасчетов                                КАК КорОбъектРасчетов,
	|		ЕСТЬNULL(РасчетыПоСрокам.КорАналитикаУчетаПоПартнерам.Партнер, 
	|		         ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))             КАК КорПоставщик,
	|		ЕСТЬNULL(РасчетыПоСрокам.КорАналитикаУчетаПоПартнерам.Организация, 
	|		         ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))          КАК КорОрганизация,
	|		ЕСТЬNULL(РасчетыПоСрокам.КорАналитикаУчетаПоПартнерам.Контрагент, 
	|		         ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))          КАК КорКонтрагент,
	|		ЕСТЬNULL(РасчетыПоСрокам.КорАналитикаУчетаПоПартнерам.Договор, 
	|		         ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК КорДоговор,
	|		РасчетыПоСрокам.РасчетныйДокумент                                КАК РасчетныйДокумент,
	|		РасчетыПоСрокам.ДатаВозникновения                                КАК ДатаВозникновения,
	|		РасчетыПоСрокам.ДатаПлановогоПогашения                           КАК ДатаПлановогоПогашения,
	|		
	|		РасчетыПоСрокам.ДокументРегистратор                              КАК Регистратор,
	|		РасчетыПоСрокам.Регистратор                                      КАК РегистраторРасчетов,
	|		РасчетыПоСрокам.Период                                           КАК ПериодСекунда,
	|		
	|		&ПоляРесурсовДанныеРегистра
	|		
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыПоСрокам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|				ПО РасчетыПоСрокам.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|	{ГДЕ
	|		РасчетыПоСрокам.Период МЕЖДУ &НачалоПериода И &КонецПериода}) КАК Расчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Организация,
	|	Расчеты.Партнер,
	|	Расчеты.Контрагент,
	|	Расчеты.Договор,
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.Валюта,
	|	Расчеты.КорОбъектРасчетов,
	|	Расчеты.КорПоставщик,
	|	Расчеты.КорОрганизация,
	|	Расчеты.КорКонтрагент,
	|	Расчеты.КорДоговор,
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.ДатаВозникновения,
	|	Расчеты.ДатаПлановогоПогашения,
	|	Расчеты.Регистратор,
	|	Расчеты.РегистраторРасчетов,
	|	Расчеты.ПериодСекунда
	|ИМЕЮЩИЕ
	|	(&ОтборыВыбранныхПолей)
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовОстаткиОбороты", СтрСоединить(ПоляРесурсовОстаткиОбороты, ","));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовРасчеты", СтрСоединить(ПоляРесурсовРасчеты, ","));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовДанныеРегистра", СтрСоединить(ПоляРесурсовДанныеРегистра, ","));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьРесурсЭтогоЗапроса", ?(ЕстьРесурсЭтогоЗапроса, "ИСТИНА", "ЛОЖЬ"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Поставлено", ВзаиморасчетыСервер.ШаблонПоляПоставленоПоставщиком());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Зачтено", ВзаиморасчетыСервер.ШаблонПоляЗачтеноПоставщиком());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Оплачено", ВзаиморасчетыСервер.ШаблонПоляОплаченоПоставщику());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&СписаниеПереоценка", ВзаиморасчетыСервер.ШаблонПоляСписаниеПереоценкаЗадолженности());
	
	ВзаиморасчетыСервер.ДобавитьОтборыВыбранныхПолейВЗапрос(ТекстЗапроса, НастройкиОтчета, СхемаКомпоновкиДанных.ВычисляемыеПоля, "Расчеты");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПланОплат(МассивВыбранныхПолей, НастройкиОтчета, ВычисляемыеПоля)
	
	ЕстьРесурсЭтогоЗапроса = Ложь;
	ПоляРесурсовОстаткиОбороты = Новый Массив;
	ПоляРесурсовРасчеты = ПоляРесурсовРасчеты(МассивВыбранныхПолей);
	ПоляРесурсовДанныеРегистра = Новый Массив;
	МассивПолей = ПоляРесурсов();
	ШаблонПоля = "
	             |%1 КАК %2";
	Для Каждого ИмяПоля Из МассивПолей Цикл
		Если МассивВыбранныхПолей.Найти(ИмяПоля) <> Неопределено Тогда
			Если ИмяПоля = "ПлановаяОплатаНачальныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|РасчетыПланОплат.КОплатеНачальныйОстаток *
					|		КурсВалюты.Коэффициент КАК ПлановаяОплатаНачальныйОстаток");
				ЕстьРесурсЭтогоЗапроса = Истина;
			ИначеЕсли ИмяПоля = "ПлановаяОплатаКонечныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|РасчетыПланОплат.КОплатеКонечныйОстаток *
					|		КурсВалюты.Коэффициент КАК ПлановаяОплатаКонечныйОстаток"); 
				ЕстьРесурсЭтогоЗапроса = Истина;
			Иначе
				ПоляРесурсовОстаткиОбороты.Добавить(СтрШаблон(ШаблонПоля, "0", ИмяПоля));
			КонецЕсли;
			Если ИмяПоля = "ЗаказаноКОплате" Тогда
				ПоляРесурсовДанныеРегистра.Добавить("
					|ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(РасчетыПланОплат.ДокументПлан) В (&ТипыДокументовПлана)
					|			И РасчетыПланОплат.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
					|		ТОГДА РасчетыПланОплат.КОплате * КурсВалюты.Коэффициент
					|	ИНАЧЕ 0
					|КОНЕЦ КАК ЗаказаноКОплате");
			Иначе 
				ПоляРесурсовДанныеРегистра.Добавить(СтрШаблон(ШаблонПоля, "0", ИмяПоля));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаУчета.Организация КАК Организация,
	|	АналитикаУчета.Партнер КАК Партнер,
	|	АналитикаУчета.Контрагент КАК Контрагент,
	|	АналитикаУчета.Договор КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АналитикаУчета.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_АналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|{ГДЕ
	|	АналитикаУчета.Организация.* КАК Организация,
	|	АналитикаУчета.Партнер.* КАК Партнер,
	|	АналитикаУчета.Контрагент.* КАК Контрагент,
	|	АналитикаУчета.Договор.* КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|	(АналитикаУчета.Партнер В
	|			(ВЫБРАТЬ
	|				ОтборПоСегментуПартнеров.Партнер
	|			ИЗ
	|				ОтборПоСегментуПартнеров
	|			ГДЕ
	|				ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаУчета.Организация               КАК Организация,
	|	АналитикаУчета.Партнер                   КАК Партнер,
	|	АналитикаУчета.Контрагент                КАК Контрагент,
	|	АналитикаУчета.Договор                   КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	РасчетыПланОплат.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	ВЫБОР &ДанныеОтчета
	|		КОГДА 4
	|			ТОГДА РасчетыПланОплат.Валюта
	|		КОГДА 2
	|			ТОГДА &ВалютаУправленческогоУчета
	|		ИНАЧЕ АналитикаУчета.Организация.ВалютаРегламентированногоУчета
	|	КОНЕЦ                                    КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка) КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)        КАК КорПоставщик,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)     КАК КорОрганизация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)     КАК КорКонтрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК КорДоговор,
	|	РасчетыПланОплат.ДокументПлан            КАК РасчетныйДокумент,
	|	РасчетыПланОплат.ДатаВозникновения       КАК ДатаВозникновения,
	|	РасчетыПланОплат.ДатаПлановогоПогашения  КАК ДатаПлановогоПогашения,
	|
	|	NULL                                     КАК Регистратор,
	|	РасчетыПланОплат.Регистратор             КАК РегистраторРасчетов,
	|	РасчетыПланОплат.ПериодСекунда           КАК ПериодСекунда,
	|
	|	&ПоляРесурсовОстаткиОбороты
	|	
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПланОплат.ОстаткиИОбороты({&НачалоПериода}, {&КонецПериода}, Авто, ,
	|		АналитикаУчетаПоПартнерам В
	|				(ВЫБРАТЬ
	|					ВТ_АналитикаУчетаПоПартнерам.КлючАналитики
	|				ИЗ
	|					ВТ_АналитикаУчетаПоПартнерам)) КАК РасчетыПланОплат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|			ПО РасчетыПланОплат.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсВалюты
	|			ПО (КурсВалюты.Валюта = РасчетыПланОплат.Валюта)
	|				И (КурсВалюты.Организация = АналитикаУчета.Организация)
	|ГДЕ
	|	&ЕстьРесурсЭтогоЗапроса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Организация             КАК Организация,
	|	Расчеты.Партнер                 КАК Партнер,
	|	Расчеты.Контрагент              КАК Контрагент,
	|	Расчеты.Договор                 КАК Договор,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	Расчеты.Валюта                  КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)      КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)             КАК КорПоставщик,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)          КАК КорОрганизация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)          КАК КорКонтрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК КорДоговор,
	|	Расчеты.РасчетныйДокумент       КАК РасчетныйДокумент,
	|	Расчеты.ДатаВозникновения       КАК ДатаВозникновения,
	|	Расчеты.ДатаПлановогоПогашения  КАК ДатаПлановогоПогашения,
	|
	|	Расчеты.Регистратор             КАК Регистратор,
	|	Расчеты.РегистраторРасчетов     КАК РегистраторРасчетов,
	|	Расчеты.ПериодСекунда           КАК ПериодСекунда,
	|
	|	&ПоляРесурсовРасчеты
	|
	|ИЗ (
	|	ВЫБРАТЬ
	|		АналитикаУчета.Организация               КАК Организация,
	|		АналитикаУчета.Партнер                   КАК Партнер,
	|		АналитикаУчета.Контрагент                КАК Контрагент,
	|		АналитикаУчета.Договор                   КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|		РасчетыПланОплат.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		ВЫБОР &ДанныеОтчета
	|			КОГДА 4
	|				ТОГДА РасчетыПланОплат.Валюта
	|			КОГДА 2
	|				ТОГДА &ВалютаУправленческогоУчета
	|			ИНАЧЕ АналитикаУчета.Организация.ВалютаРегламентированногоУчета
	|		КОНЕЦ                                    КАК Валюта,
	|		РасчетыПланОплат.ДокументПлан            КАК РасчетныйДокумент,
	|		РасчетыПланОплат.ДатаВозникновения       КАК ДатаВозникновения,
	|		РасчетыПланОплат.ДатаПлановогоПогашения  КАК ДатаПлановогоПогашения,
	|		
	|		РасчетыПланОплат.ДокументРегистратор     КАК Регистратор,
	|		РасчетыПланОплат.Регистратор             КАК РегистраторРасчетов,
	|		РасчетыПланОплат.Период                  КАК ПериодСекунда,
	|		
	|		&ПоляРесурсовДанныеРегистра
	|		
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПланОплат КАК РасчетыПланОплат
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|				ПО РасчетыПланОплат.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|			ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсВалюты
	|				ПО (КурсВалюты.Валюта = РасчетыПланОплат.Валюта)
	|					И (КурсВалюты.Организация = АналитикаУчета.Организация)
	|	{ГДЕ
	|		РасчетыПланОплат.Период МЕЖДУ &НачалоПериода И &КонецПериода}) КАК Расчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Организация,
	|	Расчеты.Партнер,
	|	Расчеты.Контрагент,
	|	Расчеты.Договор,
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.ДатаВозникновения,
	|	Расчеты.ДатаПлановогоПогашения,
	|	Расчеты.Регистратор,
	|	Расчеты.РегистраторРасчетов,
	|	Расчеты.ПериодСекунда
	|ИМЕЮЩИЕ
	|	(&ОтборыВыбранныхПолей)
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовОстаткиОбороты", СтрСоединить(ПоляРесурсовОстаткиОбороты, ","));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовРасчеты", СтрСоединить(ПоляРесурсовРасчеты, ","));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовДанныеРегистра", СтрСоединить(ПоляРесурсовДанныеРегистра, ","));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьРесурсЭтогоЗапроса", ?(ЕстьРесурсЭтогоЗапроса, "ИСТИНА", "ЛОЖЬ"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ТипыДокументовПлана", ПолучитьТипыДокументовПлана());  
	
	ВзаиморасчетыСервер.ДобавитьОтборыВыбранныхПолейВЗапрос(ТекстЗапроса, НастройкиОтчета, СхемаКомпоновкиДанных.ВычисляемыеПоля, "Расчеты");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПланОтгрузок(МассивВыбранныхПолей, НастройкиОтчета, ВычисляемыеПоля)
	
	ЕстьРесурсЭтогоЗапроса = Ложь;
	ПоляРесурсовОстаткиОбороты = Новый Массив;
	ПоляРесурсовРасчеты = ПоляРесурсовРасчеты(МассивВыбранныхПолей);
	ПоляРесурсовДанныеРегистра = Новый Массив;
	МассивПолей = ПоляРесурсов();
	ШаблонПоля = "
	             |%1 КАК %2";
	Для Каждого ИмяПоля Из МассивПолей Цикл
		Если МассивВыбранныхПолей.Найти(ИмяПоля) <> Неопределено Тогда
			Если ИмяПоля = "ПлановаяПоставкаНачальныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|РасчетыПланОтгрузок.СуммаНачальныйОстаток 
					|	* КурсВалюты.Коэффициент КАК ПлановаяПоставкаНачальныйОстаток");
				ЕстьРесурсЭтогоЗапроса = Истина;
			ИначеЕсли ИмяПоля = "ПлановаяПоставкаКонечныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|РасчетыПланОтгрузок.СуммаКонечныйОстаток
					|	* КурсВалюты.Коэффициент КАК ПлановаяПоставкаКонечныйОстаток");
				ЕстьРесурсЭтогоЗапроса = Истина;
			Иначе
				ПоляРесурсовОстаткиОбороты.Добавить(СтрШаблон(ШаблонПоля, "0", ИмяПоля));
			КонецЕсли;
			Если ИмяПоля = "Заказано" Тогда
				ПоляРесурсовДанныеРегистра.Добавить("
					|ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(РасчетыПланОтгрузок.ДокументПлан) В (&ТипыДокументовПлана)
					|			И РасчетыПланОтгрузок.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
					|		ТОГДА РасчетыПланОтгрузок.Сумма * КурсВалюты.Коэффициент
					|	ИНАЧЕ 0
					|КОНЕЦ КАК Заказано");
			Иначе 
				ПоляРесурсовДанныеРегистра.Добавить(СтрШаблон(ШаблонПоля, "0", ИмяПоля));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаУчета.Организация КАК Организация,
	|	АналитикаУчета.Партнер КАК Партнер,
	|	АналитикаУчета.Контрагент КАК Контрагент,
	|	АналитикаУчета.Договор КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АналитикаУчета.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_АналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|{ГДЕ
	|	АналитикаУчета.Организация.* КАК Организация,
	|	АналитикаУчета.Партнер.* КАК Партнер,
	|	АналитикаУчета.Контрагент.* КАК Контрагент,
	|	АналитикаУчета.Договор.* КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|	(АналитикаУчета.Партнер В
	|			(ВЫБРАТЬ
	|				ОтборПоСегментуПартнеров.Партнер
	|			ИЗ
	|				ОтборПоСегментуПартнеров
	|			ГДЕ
	|				ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаУчета.Организация                  КАК Организация,
	|	АналитикаУчета.Партнер                      КАК Партнер,
	|	АналитикаУчета.Контрагент                   КАК Контрагент,
	|	АналитикаУчета.Договор                      КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	РасчетыПланОтгрузок.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	ВЫБОР &ДанныеОтчета
	|		КОГДА 4
	|			ТОГДА РасчетыПланОтгрузок.Валюта
	|		КОГДА 2
	|			ТОГДА &ВалютаУправленческогоУчета
	|		ИНАЧЕ АналитикаУчета.Организация.ВалютаРегламентированногоУчета
	|	КОНЕЦ                                       КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка) КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)        КАК КорПоставщик,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)     КАК КорОрганизация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)     КАК КорКонтрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК КорДоговор,
	|	РасчетыПланОтгрузок.ДокументПлан            КАК РасчетныйДокумент,
	|	РасчетыПланОтгрузок.ДатаВозникновения       КАК ДатаВозникновения,
	|	РасчетыПланОтгрузок.ДатаПлановогоПогашения  КАК ДатаПлановогоПогашения,
	|
	|	NULL                                        КАК Регистратор,
	|	РасчетыПланОтгрузок.Регистратор             КАК РегистраторРасчетов,
	|	РасчетыПланОтгрузок.ПериодСекунда           КАК ПериодСекунда,
	|
	|	&ПоляРесурсовОстаткиОбороты
	|	
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПланПоставок.ОстаткиИОбороты({&НачалоПериода}, {&КонецПериода}, Авто, ,
	|		АналитикаУчетаПоПартнерам В
	|				(ВЫБРАТЬ
	|					ВТ_АналитикаУчетаПоПартнерам.КлючАналитики
	|				ИЗ
	|					ВТ_АналитикаУчетаПоПартнерам)) КАК РасчетыПланОтгрузок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|			ПО РасчетыПланОтгрузок.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсВалюты
	|			ПО (КурсВалюты.Валюта = РасчетыПланОтгрузок.Валюта)
	|				И (КурсВалюты.Организация = АналитикаУчета.Организация)
	|ГДЕ
	|	&ЕстьРесурсЭтогоЗапроса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Организация             КАК Организация,
	|	Расчеты.Партнер                 КАК Партнер,
	|	Расчеты.Контрагент              КАК Контрагент,
	|	Расчеты.Договор                 КАК Договор,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	Расчеты.Валюта                  КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)      КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)             КАК КорПоставщик,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)          КАК КорОрганизация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)          КАК КорКонтрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК КорДоговор,
	|	Расчеты.РасчетныйДокумент       КАК РасчетныйДокумент,
	|	Расчеты.ДатаВозникновения       КАК ДатаВозникновения,
	|	Расчеты.ДатаПлановогоПогашения  КАК ДатаПлановогоПогашения,
	|
	|	Расчеты.Регистратор             КАК Регистратор,
	|	Расчеты.РегистраторРасчетов     КАК РегистраторРасчетов,
	|	Расчеты.ПериодСекунда           КАК ПериодСекунда,
	|
	|	&ПоляРесурсовРасчеты
	|
	|ИЗ (
	|	ВЫБРАТЬ
	|		АналитикаУчета.Организация                  КАК Организация,
	|		АналитикаУчета.Партнер                      КАК Партнер,
	|		АналитикаУчета.Контрагент                   КАК Контрагент,
	|		АналитикаУчета.Договор                      КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|		РасчетыПланОтгрузок.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		ВЫБОР &ДанныеОтчета
	|			КОГДА 4
	|				ТОГДА РасчетыПланОтгрузок.Валюта
	|			КОГДА 2
	|				ТОГДА &ВалютаУправленческогоУчета
	|			ИНАЧЕ АналитикаУчета.Организация.ВалютаРегламентированногоУчета
	|		КОНЕЦ                                       КАК Валюта,
	|		РасчетыПланОтгрузок.ДокументПлан            КАК РасчетныйДокумент,
	|		РасчетыПланОтгрузок.ДатаВозникновения       КАК ДатаВозникновения,
	|		РасчетыПланОтгрузок.ДатаПлановогоПогашения  КАК ДатаПлановогоПогашения,
	|		
	|		РасчетыПланОтгрузок.ДокументРегистратор     КАК Регистратор,
	|		РасчетыПланОтгрузок.Регистратор             КАК РегистраторРасчетов,
	|		РасчетыПланОтгрузок.Период                  КАК ПериодСекунда,
	|		
	|		&ПоляРесурсовДанныеРегистра
	|		
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПланПоставок КАК РасчетыПланОтгрузок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|				ПО РасчетыПланОтгрузок.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|			ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсВалюты
	|				ПО (КурсВалюты.Валюта = РасчетыПланОтгрузок.Валюта)
	|					И (КурсВалюты.Организация = АналитикаУчета.Организация)
	|	{ГДЕ
	|		РасчетыПланОтгрузок.Период МЕЖДУ &НачалоПериода И &КонецПериода}) КАК Расчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Организация,
	|	Расчеты.Партнер,
	|	Расчеты.Контрагент,
	|	Расчеты.Договор,
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.ДатаВозникновения,
	|	Расчеты.ДатаПлановогоПогашения,
	|	Расчеты.Регистратор,
	|	Расчеты.РегистраторРасчетов,
	|	Расчеты.ПериодСекунда
	|ИМЕЮЩИЕ
	|	(&ОтборыВыбранныхПолей)
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовОстаткиОбороты", СтрСоединить(ПоляРесурсовОстаткиОбороты, ","));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовРасчеты", СтрСоединить(ПоляРесурсовРасчеты, ","));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовДанныеРегистра", СтрСоединить(ПоляРесурсовДанныеРегистра, ","));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьРесурсЭтогоЗапроса", ?(ЕстьРесурсЭтогоЗапроса, "ИСТИНА", "ЛОЖЬ"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ТипыДокументовПлана", ПолучитьТипыДокументовПлана());
	
	ВзаиморасчетыСервер.ДобавитьОтборыВыбранныхПолейВЗапрос(ТекстЗапроса, НастройкиОтчета, СхемаКомпоновкиДанных.ВычисляемыеПоля, "Расчеты");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчеты(МассивВыбранныхПолей)
	
	ЕстьРесурсЭтогоЗапроса = Ложь;
	ПоляРесурсовОстаткиОбороты = Новый Массив;
	МассивПолей = ПоляРесурсов();
	ШаблонПоля = "
	             |%1 КАК %2";
	Для Каждого ИмяПоля Из МассивПолей Цикл
		Если МассивВыбранныхПолей.Найти(ИмяПоля) <> Неопределено Тогда
			Если ИмяПоля = "ОплачиваетсяНачальныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|-РасчетыСПоставщиками.ОплачиваетсяНачальныйОстаток * КурсВалюты.Коэффициент КАК ОплачиваетсяНачальныйОстаток");
				ЕстьРесурсЭтогоЗапроса = Истина;
			ИначеЕсли ИмяПоля = "ОплачиваетсяКонечныйОстаток" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|-РасчетыСПоставщиками.ОплачиваетсяКонечныйОстаток * КурсВалюты.Коэффициент КАК ОплачиваетсяКонечныйОстаток");
				ЕстьРесурсЭтогоЗапроса = Истина;
			ИначеЕсли ИмяПоля = "Оплачивается" Тогда
				ПоляРесурсовОстаткиОбороты.Добавить("
					|-РасчетыСПоставщиками.ОплачиваетсяОборот * КурсВалюты.Коэффициент КАК Оплачивается");
				ЕстьРесурсЭтогоЗапроса = Истина;
			Иначе
				ПоляРесурсовОстаткиОбороты.Добавить(СтрШаблон(ШаблонПоля, "0", ИмяПоля));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаУчета.Организация КАК Организация,
	|	АналитикаУчета.Партнер КАК Партнер,
	|	АналитикаУчета.Контрагент КАК Контрагент,
	|	АналитикаУчета.Договор КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АналитикаУчета.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_АналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|{ГДЕ
	|	АналитикаУчета.Организация.* КАК Организация,
	|	АналитикаУчета.Партнер.* КАК Партнер,
	|	АналитикаУчета.Контрагент.* КАК Контрагент,
	|	АналитикаУчета.Договор.* КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|	(АналитикаУчета.Партнер В
	|			(ВЫБРАТЬ
	|				ОтборПоСегментуПартнеров.Партнер
	|			ИЗ
	|				ОтборПоСегментуПартнеров
	|			ГДЕ
	|				ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаУчета.Организация                  КАК Организация,
	|	АналитикаУчета.Партнер                      КАК Партнер,
	|	АналитикаУчета.Контрагент                   КАК Контрагент,
	|	АналитикаУчета.Договор                      КАК Договор,
	|	АналитикаУчета.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	РасчетыСПоставщиками.ОбъектРасчетов         КАК ОбъектРасчетов,
	|	ВЫБОР &ДанныеОтчета
	|		КОГДА 4
	|			ТОГДА РасчетыСПоставщиками.Валюта
	|		КОГДА 2
	|			ТОГДА &ВалютаУправленческогоУчета
	|		ИНАЧЕ АналитикаУчета.Организация.ВалютаРегламентированногоУчета
	|	КОНЕЦ                                       КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка) КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)        КАК КорПоставщик,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)     КАК КорОрганизация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)     КАК КорКонтрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК КорДоговор,
	|	Неопределено                                КАК РасчетныйДокумент,
	|	ДАТАВРЕМЯ(1,1,1)                            КАК ДатаВозникновения,
	|	ДАТАВРЕМЯ(1,1,1)                            КАК ДатаПлановогоПогашения,
	|
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщиками.Регистратор = НЕОПРЕДЕЛЕНО
	|			ТОГДА NULL
	|		ИНАЧЕ РасчетыСПоставщиками.Регистратор
	|	КОНЕЦ                                       КАК Регистратор,
	|	РасчетыСПоставщиками.Регистратор            КАК РегистраторРасчетов,
	|	РасчетыСПоставщиками.ПериодСекунда          КАК ПериодСекунда,
	|
	|	&ПоляРесурсовОстаткиОбороты
	|	
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты({&НачалоПериода}, {&КонецПериода}, Авто, ,
	|		АналитикаУчетаПоПартнерам В
	|				(ВЫБРАТЬ
	|					ВТ_АналитикаУчетаПоПартнерам.КлючАналитики
	|				ИЗ
	|					ВТ_АналитикаУчетаПоПартнерам)) КАК РасчетыСПоставщиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|			ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсВалюты
	|			ПО (КурсВалюты.Валюта = РасчетыСПоставщиками.Валюта)
	|				И (КурсВалюты.Организация = АналитикаУчета.Организация)
	|ГДЕ
	|	&ЕстьРесурсЭтогоЗапроса
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляРесурсовОстаткиОбороты", СтрСоединить(ПоляРесурсовОстаткиОбороты, ","));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьРесурсЭтогоЗапроса", ?(ЕстьРесурсЭтогоЗапроса, "ИСТИНА", "ЛОЖЬ"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтОтборПоСегментуПартнеров()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Сегменты.Партнер КАК Партнер,
	|	ИСТИНА           КАК ИспользуетсяОтборПоСегментуПартнеров
	|ПОМЕСТИТЬ ОтборПоСегментуПартнеров
	|ИЗ
	|	РегистрСведений.ПартнерыСегмента КАК Сегменты
	|{ГДЕ
	|	Сегменты.Сегмент.* КАК СегментПартнеров,
	|	Сегменты.Партнер.* КАК Партнер}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Партнер,
	|	ИспользуетсяОтборПоСегментуПартнеров
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтКурсыВалют()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация,
	|	КурсВалюты.Валюта  КАК Валюта,
	|	ВЫБОР &ДанныеОтчета
	|		КОГДА 4
	|			ТОГДА 1
	|		КОГДА 2
	|			ТОГДА ЕСТЬNULL(КурсВалюты.КурсЧислитель, 1) * ЕСТЬNULL(КурсВалютыУпр.КурсЗнаменатель, 1) / (ЕСТЬNULL(КурсВалюты.КурсЗнаменатель, 1) * ЕСТЬNULL(КурсВалютыУпр.КурсЧислитель, 1))
	|		ИНАЧЕ ЕСТЬNULL(КурсВалюты.КурсЧислитель, 1) / ЕСТЬNULL(КурсВалюты.КурсЗнаменатель, 1)
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних({(&КонецПериода)}) КАК КурсВалюты
	|			ПО Организации.ВалютаРегламентированногоУчета = КурсВалюты.БазоваяВалюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних({(&КонецПериода)}, Валюта = &ВалютаУправленческогоУчета) КАК КурсВалютыУпр
	|			ПО Организации.ВалютаРегламентированногоУчета = КурсВалютыУпр.БазоваяВалюта
	|{ГДЕ
	|	Организации.Ссылка.* КАК Организация}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Валюта
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТипыДокументовПлана()

	ТекстТиповДокументов = ""; 
	
	
	ТекстТиповДокументов = ТекстТиповДокументов + "ТИП(Документ.ЗаказПоставщику), ";
	ТекстТиповДокументов = ТекстТиповДокументов + "ТИП(Документ.ГрафикИсполненияДоговора)";
	
	Возврат ТекстТиповДокументов;
	
КонецФункции

Процедура СформироватьПараметрыОтчета(ПараметрКоманды, ПараметрыФормы, Параметры)
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		ЭтоМассив = Истина;
		Если ПараметрКоманды.Количество() > 0 Тогда
			ПервыйЭлемент = ПараметрКоманды[0];
		Иначе
			ПервыйЭлемент = Неопределено;
		КонецЕсли;
	Иначе
		ЭтоМассив = Ложь;
		ПервыйЭлемент = ПараметрКоманды;
	КонецЕсли;
	
	Если ТипЗнч(ПервыйЭлемент) = Тип("СправочникСсылка.Партнеры") Тогда
		Если ЭтоМассив Тогда
			ЕстьПодчиненныеПартнеры = Ложь;
			Для Каждого ЭлементПараметраКоманды Из ПараметрКоманды Цикл
				Если ПартнерыИКонтрагенты.ЕстьПодчиненныеПартнеры(ЭлементПараметраКоманды) Тогда
					ЕстьПодчиненныеПартнеры = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ЕстьПодчиненныеПартнеры = ПартнерыИКонтрагенты.ЕстьПодчиненныеПартнеры(ПараметрКоманды);
		КонецЕсли;
		
		Если ЕстьПодчиненныеПартнеры Тогда
			ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных();
			ЭлементОтбора = ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партнер");
			ЗначениеОтбора = ПараметрКоманды;
			Если ЭтоМассив Тогда
				ЗначениеОтбора = Новый СписокЗначений;
				ЗначениеОтбора.ЗагрузитьЗначения(ПараметрКоманды);
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
			Иначе
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
			КонецЕсли;
			ЭлементОтбора.ПравоеЗначение = ЗначениеОтбора;
			ПараметрыФормы.ФиксированныеНастройки = ФиксированныеНастройки;
			Параметры.ФиксированныеНастройки = ФиксированныеНастройки;
			ПараметрыФормы.КлючНазначенияИспользования = "ГруппаПартнеров";
			Параметры.КлючНазначенияИспользования = "ГруппаПартнеров";
		Иначе
			ПараметрыФормы.Отбор = Новый Структура("Партнер", ПараметрКоманды);
			ПараметрыФормы.КлючНазначенияИспользования = ПараметрКоманды;
			Параметры.КлючНазначенияИспользования = ПараметрКоманды;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ПервыйЭлемент) = Тип("СправочникСсылка.ДоговорыКонтрагентов") 
		ИЛИ ТипЗнч(ПервыйЭлемент) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
		ПараметрыФормы.Отбор = Новый Структура("Договор", ПараметрКоманды);
		ПараметрыФормы.КлючНазначенияИспользования = ПараметрКоманды;
		Параметры.КлючНазначенияИспользования = ПараметрКоманды;
	ИначеЕсли ТипЗнч(ПервыйЭлемент) = Тип("СправочникСсылка.ОбъектыРасчетов") Тогда
		Если ЭтоМассив Тогда
			ПараметрыФормы.Отбор = Новый Структура("ОбъектРасчетов", ПараметрКоманды);
			ПараметрыФормы.КлючНазначенияИспользования = ПараметрКоманды;
			Параметры.КлючНазначенияИспользования = ПараметрКоманды;
		Иначе
			ПараметрыФормы.Отбор = Новый Структура("ОбъектРасчетов", ПервыйЭлемент);
			ПараметрыФормы.КлючНазначенияИспользования = ПервыйЭлемент;
			Параметры.КлючНазначенияИспользования = ПервыйЭлемент;
		КонецЕсли;
	ИначеЕсли Не ТипЗнч(ПервыйЭлемент) = Тип("ДокументСсылка.ВзаимозачетЗадолженности") Тогда
		ОбъектРасчетов = ОбъектыРасчетовСервер.ОбъектРасчетовИзСсылки(ПервыйЭлемент);
		ПараметрыФормы.Отбор = Новый Структура("ОбъектРасчетов", ОбъектРасчетов);
		ПараметрыФормы.КлючНазначенияИспользования = ОбъектРасчетов;
		Параметры.КлючНазначенияИспользования = ОбъектРасчетов;
	КонецЕсли;
	
КонецПроцедуры

Процедура НайтиВыбранныеПоляРекурсивно(КоллекцияЭлементов, МассивЭлементов)

	Для каждого Элемент Из КоллекцияЭлементов Цикл
		
		Если ТипЗнч(Элемент) = Тип("ВыбранноеПолеКомпоновкиДанных") Тогда
			Если Элемент.Использование Тогда
				МассивЭлементов.Добавить(Элемент);
			КонецЕсли;
		Иначе
			НайтиВыбранныеПоляРекурсивно(Элемент.Элементы, МассивЭлементов);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Функция ПоляРесурсовРасчеты(МассивВыбранныхПолей)
	
	ПоляРесурсовРасчеты = Новый Массив;
	ШаблонПоля = "
	             |СУММА(Расчеты.%1) КАК %1";
	МассивПолей = ПоляРесурсов();
	
	Для Каждого ИмяПоля Из МассивПолей Цикл
		Если МассивВыбранныхПолей.Найти(ИмяПоля) <> Неопределено Тогда
			ПоляРесурсовРасчеты.Добавить(СтрШаблон(ШаблонПоля, ИмяПоля));
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПоляРесурсовРасчеты;
	
КонецФункции

Функция ПоляРесурсов()
	
	МассивПолей = Новый Массив;
	МассивПолей.Добавить("ДолгПоставщикаНачальныйОстаток");
	МассивПолей.Добавить("НашДолгНачальныйОстаток");
	МассивПолей.Добавить("ПлановаяОплатаНачальныйОстаток");
	МассивПолей.Добавить("ПлановаяПоставкаНачальныйОстаток");
	МассивПолей.Добавить("ОплачиваетсяНачальныйОстаток");
	
	МассивПолей.Добавить("Заказано");
	МассивПолей.Добавить("ЗаказаноКОплате");
	МассивПолей.Добавить("Поставлено");
	МассивПолей.Добавить("Зачтено");
	МассивПолей.Добавить("Оплачено");
	МассивПолей.Добавить("СписаниеПереоценка");
	МассивПолей.Добавить("Оплачивается");
	
	МассивПолей.Добавить("ДолгПоставщикаКонечныйОстаток");
	МассивПолей.Добавить("НашДолгКонечныйОстаток");
	МассивПолей.Добавить("ПлановаяОплатаКонечныйОстаток");
	МассивПолей.Добавить("ПлановаяПоставкаКонечныйОстаток");
	МассивПолей.Добавить("ОплачиваетсяКонечныйОстаток");
	
	Возврат МассивПолей;
	
КонецФункции 

Процедура ПроверитьДополнитьИменаВыбранныхПолей(МассивИменВыбранныхПолей)
	
	ПоляРесурсов = ПоляРесурсов();
	Для Каждого ИмяПоля Из ПоляРесурсов Цикл
		Если СтрНайти(ИмяПоля, "НачальныйОстаток") > 0
			И МассивИменВыбранныхПолей.Найти(ИмяПоля) <> Неопределено Тогда
			ИмяПоляКонечныйОстаток = СтрЗаменить(ИмяПоля, "НачальныйОстаток", "КонечныйОстаток");
			Если ПоляРесурсов.Найти(ИмяПоляКонечныйОстаток) <> Неопределено
				И МассивИменВыбранныхПолей.Найти(ИмяПоляКонечныйОстаток) = Неопределено Тогда
				МассивИменВыбранныхПолей.Добавить(ИмяПоляКонечныйОстаток);
			КонецЕсли;
		КонецЕсли;
		Если СтрНайти(ИмяПоля, "КонечныйОстаток") > 0
			И МассивИменВыбранныхПолей.Найти(ИмяПоля) <> Неопределено Тогда
			ИмяПоляНачальныйОстаток = СтрЗаменить(ИмяПоля, "КонечныйОстаток", "НачальныйОстаток");
			Если ПоляРесурсов.Найти(ИмяПоляНачальныйОстаток) <> Неопределено
				И МассивИменВыбранныхПолей.Найти(ИмяПоляНачальныйОстаток) = Неопределено Тогда
				МассивИменВыбранныхПолей.Добавить(ИмяПоляНачальныйОстаток);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли