

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		
		СписокОтбор = Новый СписокЗначений;
		СписокОтбор.ЗагрузитьЗначения(Параметры.ПараметрКоманды);
		
		Параметры.СписокПараметровВызова = СписокОтбор;
		
	КонецЕсли;
	
	ЗаполнитьТаблицыВыбранныхПолей();
	
	ИспользоватьПартнеровКакКонтрагентов =  ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов");
	
	Если (Параметры.Свойство("ГруппироватьПоПартнеру") И Параметры.ГруппироватьПоПартнеру = Истина)
		ИЛИ Параметры.КлючВарианта = "ПоКонтактнымЛицам" Тогда
		
		Заголовок = НСтр("ru = 'Контактная информация контактных лиц'");
		ГруппироватьПоПартнеру = Истина;
		Элементы.ВыбранныеПоляПартнера.Видимость = Ложь;
		
	ИначеЕсли ИспользоватьПартнеровКакКонтрагентов Тогда
		
		Заголовок = НСтр("ru = 'Контактная информация по контрагентам'");
		
	КонецЕсли;
	
	Если ИспользоватьПартнеровКакКонтрагентов Тогда
		ПартнерыИКонтрагенты.ЗаголовокРеквизитаВЗависимостиОтФОИспользоватьПартнеровКакКонтрагентов(
		                                 ЭтотОбъект, "НастройкиОтчета", НСтр("ru = 'Отбор по контрагентам'"));
		ПартнерыИКонтрагенты.ЗаголовокРеквизитаВЗависимостиОтФОИспользоватьПартнеровКакКонтрагентов(
		                                 ЭтотОбъект, "ВыбранныеПоляПартнераПометка", НСтр("ru = 'Информация о контрагенте'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Если НЕ ПараметрическийВызов Тогда
		
		Настройки = Новый Структура;
		Настройки.Вставить("НастройкиОтбора",Отчет.КомпоновщикНастроек.ПолучитьНастройки());
		
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Отчет.КонтактнаяИнформация", "ФормаОтчета", Настройки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(Настройки)
	
	СхемаДляОтбораПользователей = Отчеты.КонтактнаяИнформация.ПолучитьМакет("ОтборПоПартнерам");
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаДляОтбораПользователей,УникальныйИдентификатор);
	Отчет.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы)); 
	
	ЗначениеНастроек = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Отчет.КонтактнаяИнформация", "ФормаОтчета");
	
	Если НЕ Параметры.СписокПараметровВызова.Количество() > 0 Тогда
		
		Если ЗначениеНастроек <> Неопределено И ЗначениеНастроек.НастройкиОтбора <> Неопределено Тогда
			Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(ЗначениеНастроек.НастройкиОтбора);
			Отчет.КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
		КонецЕсли;
		
		ПредставлениеОтбора = Строка(Отчет.КомпоновщикНастроек.Настройки.Отбор);
		
	Иначе
		
		ПараметрическийВызов = Истина;
		Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
		
		Если ТипЗнч(Параметры.СписокПараметровВызова[0].Значение) = Тип("СправочникСсылка.Партнеры") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Отчет.КомпоновщикНастроек.Настройки.Отбор,"Партнер", Параметры.СписокПараметровВызова, ВидСравненияКомпоновкиДанных.ВСписке);
		ИначеЕсли ТипЗнч(Параметры.СписокПараметровВызова[0].Значение) = Тип("СправочникСсылка.БизнесРегионы") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Отчет.КомпоновщикНастроек.Настройки.Отбор, "БизнесРегион", Параметры.СписокПараметровВызова, ВидСравненияКомпоновкиДанных.ВСписке);
		ИначеЕсли ТипЗнч(Параметры.СписокПараметровВызова[0].Значение) = Тип("СправочникСсылка.СегментыПартнеров") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Отчет.КомпоновщикНастроек.Настройки.Отбор, "Сегмент", Параметры.СписокПараметровВызова, ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
		
		ПредставлениеОтбора = Строка(Отчет.КомпоновщикНастроек.Настройки.Отбор);
		
		ФормированиеПриПараметрическомВызове = Истина;
		Отказ = ОтборыЗаполненыКорректно(ЭтаФорма);
	
		Если Не Отказ Тогда
			СформироватьОтчетСервер();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНастроек_ОтчетКонтактнаяИнформация" Тогда
		ПредставлениеОтбора = Параметр;
		ИзменилисьНастройки = Истина;
		УстановитьСостояниеОтчетНеСформирован();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ВидимостьОтбора") <> Неопределено Тогда
		ВидимостьОтбора = Настройки.Получить("ВидимостьОтбора");
		Элементы.ГруппаНастройкиОтчета.Видимость = ВидимостьОтбора;
		Элементы.ПоказатьСкрытьОтбор.Заголовок = ?(ВидимостьОтбора, НСтр("ru = 'Скрыть настройки'"), НСтр("ru = 'Показать настройки'"));
	КонецЕсли;
	
	ОбработатьНастройкиТабличнойЧасти(Настройки, "ВыбранныеПоляПартнера");
	ОбработатьНастройкиТабличнойЧасти(Настройки, "ВыбраннаяКИКЛ");
	ОбработатьНастройкиТабличнойЧасти(Настройки, "РолиКЛ");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПометкаПриИзменении(Элемент)
	
	УстановитьСостояниеОтчетНеСформирован();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьСкрытьОтбор(Команда)
	
	ВидимостьОтбора = НЕ ВидимостьОтбора;
	Элементы.ГруппаНастройкиОтчета.Видимость = ВидимостьОтбора;
	Элементы.ПоказатьСкрытьОтбор.Заголовок = ?(ВидимостьОтбора, НСтр("ru = 'Скрыть настройки'"), НСтр("ru = 'Показать настройки'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Если Команда.Имя = "ВыбраннаяКИКЛВыбратьВсе" Тогда
		
		ИмяТаблицы = "ВыбраннаяКИКЛ";
		
	ИначеЕсли Команда.Имя = "ВыбранныеПоляПартнераПоляВыбратьВсе" Тогда
		
		ИмяТаблицы = "ВыбранныеПоляПартнера";
		
	ИначеЕсли Команда.Имя = "РолиКЛВыбратьВсе" Тогда
		
		ИмяТаблицы = "РолиКЛ";
		
	КонецЕсли;
	
	УстановитьЗначениеФлажкаПометка(Истина,ЭтаФорма[ИмяТаблицы]);
	УстановитьСостояниеОтчетНеСформирован();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсе(Команда)
	
	Если Команда.Имя = "ВыбраннаяКИКЛИсключитьВсе" Тогда
		
		ИмяТаблицы = "ВыбраннаяКИКЛ";
		
	ИначеЕсли Команда.Имя = "ВыбранныеПоляПартнераИсключитьВсе" Тогда
		
		ИмяТаблицы = "ВыбранныеПоляПартнера";
		
	ИначеЕсли Команда.Имя = "РолиКЛИсключитьВсе" Тогда
		
		ИмяТаблицы = "РолиКЛ";
		
	КонецЕсли;
	
	УстановитьЗначениеФлажкаПометка(Ложь,ЭтаФорма[ИмяТаблицы]);
	УстановитьСостояниеОтчетНеСформирован();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	ОчиститьСообщения();
	Отказ = ОтборыЗаполненыКорректно(ЭтаФорма);
	
	Если Не Отказ Тогда
		СформироватьОтчетСервер();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОтборыЗаполненыКорректно(Форма)

	Отказ = Ложь;
	
	КоличествоВыбранныхКИКЛ  = Форма.ВыбраннаяКИКЛ.НайтиСтроки(Новый Структура("Пометка",Истина)).Количество();
	КоличествоВыбранныхРолей = Форма.РолиКЛ.НайтиСтроки(Новый Структура("Пометка",Истина)).Количество();
	СообщениеВыбранныеКИКЛ   = НСтр("ru = 'Необходимо выбрать хотя бы один вид контактной информации контактного лица'");
	СообщениеВыбранныеРоли   = НСтр("ru = 'Необходимо выбрать хотя бы одну роль контактного лица'");
	
	Если КоличествоВыбранныхКИКЛ = 0 И КоличествоВыбранныхРолей = 0 Тогда
		
		Если Форма.ГруппироватьПоПартнеру Тогда
			
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеВыбранныеКИКЛ,,"ВыбраннаяКИКЛ");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеВыбранныеРоли,,"РолиКЛ");
			
		КонецЕсли;
		
	ИначеЕсли КоличествоВыбранныхКИКЛ > 0 И КоличествоВыбранныхРолей = 0 Тогда
		
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеВыбранныеРоли,,"РолиКЛ");
		
	ИначеЕсли КоличествоВыбранныхКИКЛ = 0 И КоличествоВыбранныхРолей > 0 Тогда
		
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеВыбранныеКИКЛ,,"ВыбраннаяКИКЛ");
		
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаСервере
Процедура СформироватьОтчетСервер()
	
	ТаблицаОтчета.Очистить();
	ОбъектОтчет = РеквизитФормыВЗначение("Отчет");
	Если ФормированиеПриПараметрическомВызове Тогда
		
		КоличествоВыбранныхКИКЛ  = ВыбраннаяКИКЛ.НайтиСтроки(Новый Структура("Пометка",Истина)).Количество();
		КоличествоВыбранныхРолей = РолиКЛ.НайтиСтроки(Новый Структура("Пометка",Истина)).Количество();
		
		Если КоличествоВыбранныхКИКЛ = 0 И КоличествоВыбранныхРолей = 0 И ГруппироватьПоПартнеру Тогда
			УстановитьЗначениеФлажкаПометка(Истина,ВыбраннаяКИКЛ);
			УстановитьЗначениеФлажкаПометка(Истина,РолиКЛ);
		КонецЕсли;
		
		ФормированиеПриПараметрическомВызове = Ложь;
		
	КонецЕсли;
	ОбъектОтчет.СформироватьОтчет(ТаблицаОтчета,СтруктураПараметрыФормированияОтчета());
	Элементы.Результат.ОтображениеСостояния.Видимость = Ложь;
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
	ТаблицаОтчетаРезультат.Очистить();
	ТаблицаОтчетаРезультат.Вывести(ТаблицаОтчета);
	
КонецПроцедуры

&НаСервере
Функция СтруктураПараметрыФормированияОтчета()
	
	СтруктураПараметров = Новый Структура();
	
	СтруктураПараметров.Вставить("ВыбранныеПоляПартнера",РеквизитФормыВЗначение("ВыбранныеПоляПартнера"));
	СтруктураПараметров.Вставить("ВыбраннаяКИКЛ",РеквизитФормыВЗначение("ВыбраннаяКИКЛ"));
	СтруктураПараметров.Вставить("РолиКЛ",РеквизитФормыВЗначение("РолиКЛ"));
	СтруктураПараметров.Вставить("ГруппироватьПоПартнеру",ГруппироватьПоПартнеру);
	СтруктураПараметров.Вставить("ПредставлениеОтбора",ПредставлениеОтбора);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервере
Функция НоваяСтрокаТаблицы(Таблица,Представление,Значение)
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.Представление = Представление;
	НоваяСтрока.Значение      = Значение;
	
	Возврат НоваяСтрока;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗначениеФлажкаПометка(ЗначениеФлажка,Таблица)
	
	Для каждого Элемент Из Таблица Цикл
	
		Элемент.Пометка = ЗначениеФлажка;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыВыбранныхПолей()
	
	НоваяСтрокаТаблицы(ВыбранныеПоляПартнера, НСтр("ru = 'Публичное наименование'"), "НаименованиеПолное");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьБизнесРегионы") Тогда
		 НоваяСтрокаТаблицы(ВыбранныеПоляПартнера, НСтр("ru = 'Бизнес-регион'"), "БизнесРегион");
	КонецЕсли;
	НоваяСтрокаТаблицы(ВыбранныеПоляПартнера, НСтр("ru = 'Основной менеджер'"), "ОсновнойМенеджер");
	НоваяСтрокаТаблицы(ВыбранныеПоляПартнера, НСтр("ru = 'Дата регистрации'"), "ДатаРегистрации");
	Если ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ABCXYZКлассификацияКлиентов) Тогда
		НоваяСтрокаТаблицы(ВыбранныеПоляПартнера, НСтр("ru = 'ABC\XYZ классификация'"), "Классификация");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Представление,
	|	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	|	ВидыКонтактнойИнформации.Тип
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СправочникПартнеры)
	|	И НЕ ВидыКонтактнойИнформации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Представление,
	|	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	|	ВидыКонтактнойИнформации.Тип
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров)
	|	И НЕ ВидыКонтактнойИнформации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РолиКонтактныхЛицПартнеров.Ссылка,
	|	РолиКонтактныхЛицПартнеров.Представление КАК Представление
	|ИЗ
	|	Справочник.РолиКонтактныхЛицПартнеров КАК РолиКонтактныхЛицПартнеров
	|ГДЕ
	|	НЕ РолиКонтактныхЛицПартнеров.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Представление";
	
	МассивРезультатовЗапросов = Запрос.ВыполнитьПакет();
	
	РезультатЗапросаВидыКИПартнера = МассивРезультатовЗапросов[0]; // РезультатЗапроса 
	РезультатЗапросаВидыКИКЛ       = МассивРезультатовЗапросов[1]; // РезультатЗапроса
	РезультатЗапросаРолиКЛ         = МассивРезультатовЗапросов[2]; // РезультатЗапроса  
	
	ВыборкаВидыКИПартнера = РезультатЗапросаВидыКИПартнера.Выбрать();
	ВыборкаВидыКИКЛ       = РезультатЗапросаВидыКИКЛ.Выбрать();
	ВыборкаРолиКЛ         = РезультатЗапросаРолиКЛ.Выбрать();
	
	Пока ВыборкаВидыКИПартнера.Следующий() Цикл
	
		НоваяСтрокаТаблицы(ВыбранныеПоляПартнера, ВыборкаВидыКИПартнера.Представление, ВыборкаВидыКИПартнера.Ссылка);
	
	КонецЦикла;
	
	Элементы.ВыбранныеПоляПартнера.ВысотаВСтрокахТаблицы = ВыбранныеПоляПартнера.Количество() + 1;
	
	Пока ВыборкаВидыКИКЛ.Следующий() Цикл
		
		НоваяСтрокаТаблицы(ВыбраннаяКИКЛ, ВыборкаВидыКИКЛ.Представление, ВыборкаВидыКИКЛ.Ссылка);
		
	КонецЦикла;
	
	Элементы.ВыбраннаяКИКЛ.ВысотаВСтрокахТаблицы = ВыбраннаяКИКЛ.Количество() + 1;
	
	НоваяСтрокаТаблицы(РолиКЛ, НСтр("ru = '<Роль не указана>'"), Справочники.РолиКонтактныхЛицПартнеров.ПустаяСсылка());
	
	Пока ВыборкаРолиКЛ.Следующий() Цикл
		
		НоваяСтрокаТаблицы(РолиКЛ, ВыборкаРолиКЛ.Представление, ВыборкаРолиКЛ.Ссылка);
		
	КонецЦикла;
	
	Элементы.РолиКЛ.ВысотаВСтрокахТаблицы = РолиКЛ.Количество() + 1;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСостояниеОтчетНеСформирован()
	
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	Элементы.Результат.ОтображениеСостояния.Текст = НСтр("ru = 'Отчет не сформирован. Нажмите ""Сформировать"" для получения отчета.'");
	Элементы.Результат.ОтображениеСостояния.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьНастройкиТабличнойЧасти(Настройки, ИмяТаблицы)
	
	Если Настройки.Получить(ИмяТаблицы) <> Неопределено Тогда
		
		Для Каждого СтрокаНастроек Из Настройки.Получить(ИмяТаблицы) Цикл
			
			Если СтрокаНастроек.Пометка Тогда
				
				НайденныеСтроки = ЭтаФорма[ИмяТаблицы].НайтиСтроки(Новый Структура("Значение",СтрокаНастроек.Значение));
				Если НайденныеСтроки.Количество() <> 0 Тогда
					НайденныеСтроки[0].Пометка = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Настройки.Удалить(ИмяТаблицы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
