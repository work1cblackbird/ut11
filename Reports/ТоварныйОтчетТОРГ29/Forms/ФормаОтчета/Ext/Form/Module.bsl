
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Отчет.Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию();
	КонецЕсли;
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов") Тогда
		Отчет.Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию();
	КонецЕсли;
	
	Дата = ТекущаяДатаСеанса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаНачала) И НЕ ЗначениеЗаполнено(Отчет.ДатаОкончания) Тогда
		
		Отчет.ДатаНачала    = НачалоГода(Дата);
		Отчет.ДатаОкончания = Дата;
		
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьЗначениямиПоУмолчанию(Настройки);
	
КонецПроцедуры // ПриЗагрузкеДанныхИзНастроекНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	УстановитьСостояниеОтчетНеСформирован();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьСостояниеОтчетНеСформирован();
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	УстановитьСостояниеОтчетНеСформирован();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	УстановитьСостояниеОтчетНеСформирован();
КонецПроцедуры

&НаКлиенте
Процедура НомерОтчетаПриИзменении(Элемент)
	УстановитьСостояниеОтчетНеСформирован();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Оповещение = Новый ОписаниеОповещения(
		"УстановитьИнтервалЗавершение",
		ЭтотОбъект);
		
	ОбщегоНазначенияУТКлиент.РедактироватьПериод(
		Отчет, 
		Новый Структура("ДатаНачала, ДатаОкончания", "ДатаНачала", "ДатаОкончания"),
		Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(Период, ДополнительныеПараметры) Экспорт 
	
	Если Период <> Неопределено Тогда
		УстановитьСостояниеОтчетНеСформирован();
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет поля отчета значениями по умолчанию если они не заполнены.
//
&НаСервере
Процедура ЗаполнитьЗначениямиПоУмолчанию(Настройки)
	
	Если НЕ ЗначениеЗаполнено(Настройки.Получить("Отчет.Организация")) Тогда
		
		Настройки.Удалить("Отчет.Организация");
		Отчет.Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Отчет.Организация);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Настройки.Получить("Отчет.Склад")) Тогда
		
		Настройки.Удалить("Отчет.Склад");
		Отчет.Склад = ЗначениеНастроекПовтИсп.ПолучитьРозничныйСкладПоУмолчанию(Отчет.Склад);
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьЗначениямиПоУмолчанию()

// Процедура устанавливает отображение состояния "Отчет не сформирован" при изменении полей отчета.
//
&НаКлиенте
Процедура УстановитьСостояниеОтчетНеСформирован()
	
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	Элементы.Результат.ОтображениеСостояния.Текст = НСтр("ru = 'Отчет не сформирован. Нажмите ""Сформировать"" для получения отчета.'");
	Элементы.Результат.ОтображениеСостояния.Видимость = Истина;
	
КонецПроцедуры // УстановитьСостояниеОтчетНеСформирован()

#КонецОбласти

#КонецОбласти
