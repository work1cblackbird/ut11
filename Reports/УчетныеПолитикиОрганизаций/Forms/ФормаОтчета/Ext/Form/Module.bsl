
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		ОрганизацияОсновная = Параметры.ПараметрКоманды;
		Элементы.ОрганизацияОсновная.Видимость = Ложь;
		СформироватьОтчет();
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТаблицаОтчета, "НЕАКТУАЛЬНОСТЬ");
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияОсновнаяПриИзменении(Элемент)
	ОрганизацияНайденная = СписокОрганизаций.НайтиПоЗначению(ОрганизацияОсновная);
	
	Если ОрганизацияНайденная <> Неопределено Тогда
		СписокОрганизаций.Удалить(ОрганизацияНайденная);
	КонецЕсли;

	СформироватьПредставлениеОрганизаций(СписокОрганизаций.ВыгрузитьЗначения(), ПредставлениеОрганизаций);	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТаблицаОтчета, "НЕАКТУАЛЬНОСТЬ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОрганизацийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	ОбработчикЗакрытия = Новый ОписаниеОповещения("ПредставлениеОрганизацийНачалоВыбораЗавершение", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОрганизацияОсновная", ОрганизацияОсновная);
	ПараметрыФормы.Вставить("СписокВыбранныхОрганизаций", СписокОрганизаций.ВыгрузитьЗначения());
	
	ОткрытьФорму("Отчет.УчетныеПолитикиОрганизаций.Форма.ВыборОрганизаций",
		ПараметрыФормы,
		ЭтотОбъект, 
		УникальныйИдентификатор,
		,
		,
		ОбработчикЗакрытия,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОрганизацийОчистка(Элемент, СтандартнаяОбработка)
	
	СписокОрганизаций.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОрганизацийНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Количество() Тогда
		СформироватьПредставлениеОрганизаций(Результат, ПредставлениеОрганизаций);
		СписокОрганизаций.ЗагрузитьЗначения(Результат);
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТаблицаОтчета, "НЕАКТУАЛЬНОСТЬ");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтличияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТаблицаОтчета, "НЕАКТУАЛЬНОСТЬ");
	Элементы.ПредставлениеОрганизаций.Доступность = ПоказатьОтличия;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтчетаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	Если ТипЗнч(Расшифровка) = Тип("Строка") Тогда
		СтандартнаяОбработка = Ложь;
		ИмяФормыСпискаРегистра = СтрШаблон("РегистрСведений.%1.ФормаСписка", Расшифровка);
		ОткрытьФорму(ИмяФормыСпискаРегистра);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	ОчиститьСообщения();
	Если ПоказатьОтличия И НЕ СписокОрганизаций.Количество() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Для сравнения настроек учетной политики требуется выбрать организации.'"),
			, 
			"ПредставлениеОрганизаций",
			,);
	Иначе
		СформироватьОтчет();
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТаблицаОтчета, "НЕИСПОЛЬЗОВАТЬ");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьОтчет()
	
	Если ПроверитьЗаполнение() Тогда
		ТаблицаОтчета.Очистить();
		Отчеты.УчетныеПолитикиОрганизаций.СформироватьОтчетУчетныеПолитикиОрганизаций(ОрганизацияОсновная, 
				СписокОрганизаций.Скопировать(),
				ТаблицаОтчета,
				ПоказатьОтличия);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СформироватьПредставлениеОрганизаций(МассивОрганизаций, ПредставлениеОрганизаций)

	ПредставлениеОрганизаций = РасчетСебестоимостиПрикладныеАлгоритмы.ПредставлениеОрганизаций(МассивОрганизаций, ", ");

КонецПроцедуры

#КонецОбласти

