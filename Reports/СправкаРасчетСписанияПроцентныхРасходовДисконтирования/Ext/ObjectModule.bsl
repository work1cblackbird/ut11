#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрПериод = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ПериодОтчета");
	ПараметрДокумент = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("Документ");
	ПараметрДоговор = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("Договор");
	ПараметрДанныеОтчета = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ДанныеОтчета");
	
	ТаблицаДанныхДисконтирования = ПолучитьДанныеДисконтирования(
		ПараметрПериод.Значение,
		ПараметрДанныеОтчета.Значение,
		?(ПараметрДоговор.Использование, ПараметрДоговор.Значение, Неопределено),
		?(ПараметрДокумент.Использование, ПараметрДокумент.Значение, Неопределено),
		Неопределено);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаДанныхДисконтирования", ТаблицаДанныхДисконтирования);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - См. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		Если ТипЗнч(Параметры.ПараметрКоманды) = Тип("Массив") Тогда
			МассивСсылок = Параметры.ПараметрКоманды;
		Иначе
			МассивСсылок = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Параметры.ПараметрКоманды);
		КонецЕсли;
		
		Если Не ЭтаФорма.ФормаПараметры.Отбор.Свойство("Документ") Тогда
			ЭтаФорма.ФормаПараметры.Отбор.Вставить("Документ", 
				ПолучитьДокументыДисконтирования(МассивСсылок));
			Если МассивСсылок.Количество() > 0 Тогда
				Ссылка = МассивСсылок[0];
				ЭтаФорма.ФормаПараметры.Отбор.Вставить("ПериодОтчета", 
					НачалоМесяца(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Дата")))
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Параметры.Свойство("ЗакрытиеМесяца") И Параметры.ЗакрытиеМесяца Тогда
		
		ЭтаФорма.ФормаПараметры.Отбор.Вставить("Документ", 
			ПолучитьДокументыДисконтирования(Неопределено, Параметры.МассивОрганизаций, Параметры.Период));
		ЭтаФорма.ФормаПараметры.Отбор.Вставить("ПериодОтчета", Параметры.Период);
		ЭтаФорма.КлючТекущегоВарианта = "КонтекстныйВариант";
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьОтчет(ТабличныйДокумент, Период, ОтборДокументы, ДанныеОтчета, ОтборОбъектРасчетов, ЕстьДанныеДляОтображения) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	
	Макет = ПолучитьМакет("Макет");
	
	ОбластьШапкаДвеКолонки = Макет.ПолучитьОбласть("ОбластьШапкаДвеКолонки");
	ОбластьШапкаОднаКолонка = Макет.ПолучитьОбласть("ОбластьШапкаОднаКолонка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
	ОбластьСтрока = Макет.ПолучитьОбласть("ОбластьСтрока");
	ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
	
	ТаблицаДанныхДисконтирования = ПолучитьДанныеДисконтирования(Период, ДанныеОтчета,, ОтборДокументы, ОтборОбъектРасчетов);
	КолонкиСумм = "ФактическаяЗадолженностьБезНДС, 
		|ДисконтированнаяЗадолженностьБезНДС, 
		|РассчитанныйОстатокПроцентов,
		|ИзменениеСуммыПроцентов,
		|ФиксФактическаяЗадолженностьБезНДС, 
		|ФиксДисконтированнаяЗадолженностьБезНДС, 
		|ФиксРассчитанныйОстатокПроцентов,
		|ФиксИзменениеСуммыПроцентов,
		|СуммаДисконтированияОстаток";
	ТаблицаГруппировок = ТаблицаДанныхДисконтирования.Скопировать(,"РасчетныйДокумент, ОбъектРасчетов, Организация," + КолонкиСумм);
	ТаблицаГруппировок.Свернуть("РасчетныйДокумент, ОбъектРасчетов, Организация", КолонкиСумм);
	
	ТаблицаДанныхДисконтирования.Индексы.Добавить("РасчетныйДокумент, ОбъектРасчетов");
	
	Отбор = Новый Структура("РасчетныйДокумент, ОбъектРасчетов");
	
	Для Каждого СтрокаГруппировки Из ТаблицаГруппировок Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаГруппировки);
		СтрокиГрафикаОплаты = ТаблицаДанныхДисконтирования.НайтиСтроки(Отбор);
		
		СтрокаГрафикаОплаты = СтрокиГрафикаОплаты[0];
		РазличаетсяФактическаяЗадолженность = СтрокаГруппировки.ФактическаяЗадолженностьБезНДС <> СтрокаГруппировки.ФиксФактическаяЗадолженностьБезНДС;
		РазличаетсяСтавкаДисконтирования = СтрокаГрафикаОплаты.СтавкаДисконтирования <> СтрокаГрафикаОплаты.ФиксСтавкаДисконтирования;
		РазличаетсяДисконтированнаяЗадолженность = СтрокаГруппировки.ДисконтированнаяЗадолженностьБезНДС <> СтрокаГруппировки.ФиксДисконтированнаяЗадолженностьБезНДС;
		РазличаетсяРассчитанныйОстатокПроцентов = СтрокаГруппировки.РассчитанныйОстатокПроцентов <> СтрокаГруппировки.ФиксРассчитанныйОстатокПроцентов;
		РазличаетсяИзменениеСуммыПроцентов = СтрокаГруппировки.ИзменениеСуммыПроцентов <> СтрокаГруппировки.ФиксИзменениеСуммыПроцентов;
		ВыводитьФиксированные = СтрокаГрафикаОплаты.ВывестиРазличия
			И ( РазличаетсяФактическаяЗадолженность
			Или РазличаетсяСтавкаДисконтирования 
			Или РазличаетсяДисконтированнаяЗадолженность
			Или РазличаетсяРассчитанныйОстатокПроцентов
			Или РазличаетсяИзменениеСуммыПроцентов);
		
		ОбластьШапка = ?(ВыводитьФиксированные, ОбластьШапкаДвеКолонки, ОбластьШапкаОднаКолонка);
		
		ОбластьШапка.Параметры.Заполнить(СтрокаГрафикаОплаты);
		ОбластьШапка.Параметры.Заполнить(СтрокаГруппировки);
		ОбластьШапка.Параметры.ОтчетныйМесяц = Формат(СтрокаГрафикаОплаты.ОтчетнаяДата, НСтр("ru='ДФ=''ММММ гггг ""г.""'''"));
		Если ВыводитьФиксированные Тогда
			
			ОбластьШапка.Области.ФактическаяЗадолженность.ЦветФона = ?(РазличаетсяФактическаяЗадолженность, WebЦвета.Желтый, Новый Цвет);
			ОбластьШапка.Области.СтавкаДисконтирования.ЦветФона = ?(РазличаетсяСтавкаДисконтирования, WebЦвета.Желтый, Новый Цвет);
			ОбластьШапка.Области.ДисконтированнаяЗадолженность.ЦветФона = ?(РазличаетсяДисконтированнаяЗадолженность, WebЦвета.Желтый, Новый Цвет);
			ОбластьШапка.Области.РассчитанныйОстатокПроцентов.ЦветФона = ?(РазличаетсяРассчитанныйОстатокПроцентов, WebЦвета.Желтый, Новый Цвет);
			ОбластьШапка.Области.ИзменениеСуммыПроцентов.ЦветФона = ?(РазличаетсяИзменениеСуммыПроцентов, WebЦвета.Желтый, Новый Цвет);
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ОбластьШапкаТаблицы.Параметры.ОтчетнаяДата = Формат(СтрокаГрафикаОплаты.ОтчетнаяДата, "ДЛФ=Д");
		Если ДанныеОтчета = 1 Тогда
			ОбластьШапкаТаблицы.Параметры.Валюта = СтрокаГрафикаОплаты.Валюта;
		ИначеЕсли ДанныеОтчета = 2 Тогда
			ОбластьШапкаТаблицы.Параметры.Валюта = ЗначениеНастроекПовтИсп.ВалютаУправленческогоУчета();
		ИначеЕсли ДанныеОтчета = 3 Тогда
			ОбластьШапкаТаблицы.Параметры.Валюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(СтрокаГруппировки.Организация);
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Для Каждого СтрокаГрафикаОплаты Из СтрокиГрафикаОплаты Цикл
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаГрафикаОплаты);
			ОбластьСтрока.Параметры.ДатаПлановогоПогашения = Формат(СтрокаГрафикаОплаты.ДатаПлановогоПогашения, "ДЛФ=Д");
			Если СтрокаГрафикаОплаты.ДатаПлановогоПогашения > СтрокаГрафикаОплаты.ОтчетнаяДата Тогда
				ОбластьСтрока.Области.ДатаПлановогоПогашения.ЦветФона = Новый Цвет;
			ИначеЕсли ВыводитьФиксированные Тогда
				ОбластьСтрока.Области.ДатаПлановогоПогашения.ЦветФона = WebЦвета.Желтый;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Заполнить(СтрокаГруппировки);
		ОбластьПодвал.Параметры.ОтчетнаяДата = Формат(СтрокаГрафикаОплаты.ОтчетнаяДата, "ДЛФ=Д");
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		ЕстьДанныеДляОтображения = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаФиксированныхДанных()
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПроцентныеРасходыДисконтирования.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	ПроцентныеРасходыДисконтирования.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ПроцентныеРасходыДисконтирования.Валюта КАК Валюта,
		|	ПроцентныеРасходыДисконтирования.РасчетныйДокумент КАК РасчетныйДокумент,
		|	ПроцентныеРасходыДисконтирования.СтавкаДисконтирования КАК СтавкаДисконтирования,
		|	ВЫБОР &ДанныеОтчета
		|		КОГДА 1
		|			ТОГДА ПроцентныеРасходыДисконтирования.ФактическаяЗадолженностьБезНДС
		|		КОГДА 2
		|			ТОГДА ПроцентныеРасходыДисконтирования.ФактическаяЗадолженностьБезНДСУпр
		|		ИНАЧЕ ПроцентныеРасходыДисконтирования.ФактическаяЗадолженностьБезНДСРегл
		|	КОНЕЦ КАК ФактическаяЗадолженностьБезНДС,
		|	ВЫБОР &ДанныеОтчета
		|		КОГДА 1
		|			ТОГДА ПроцентныеРасходыДисконтирования.ДисконтированнаяЗадолженностьБезНДС
		|		КОГДА 2
		|			ТОГДА ПроцентныеРасходыДисконтирования.ДисконтированнаяЗадолженностьБезНДСУпр
		|		ИНАЧЕ ПроцентныеРасходыДисконтирования.ДисконтированнаяЗадолженностьБезНДСРегл
		|	КОНЕЦ КАК ДисконтированнаяЗадолженностьБезНДС,
		|	ВЫБОР &ДанныеОтчета
		|		КОГДА 1
		|			ТОГДА ПроцентныеРасходыДисконтирования.РассчитанныйОстатокПроцентов
		|		КОГДА 2
		|			ТОГДА ПроцентныеРасходыДисконтирования.РассчитанныйОстатокПроцентовУпр
		|		ИНАЧЕ ПроцентныеРасходыДисконтирования.РассчитанныйОстатокПроцентовРегл
		|	КОНЕЦ КАК РассчитанныйОстатокПроцентов,
		|	ПроцентныеРасходыДисконтирования.Период КАК Период,
		|	ТИПЗНАЧЕНИЯ(ПроцентныеРасходыДисконтирования.Регистратор) = ТИП(Документ.РасчетПроцентныхРасходовДисконтирования) КАК ЭтоРасчетПроцентныхРасходов,
		|	КлючиАналитикиУчетаПоПартнерам.Организация КАК Организация
		|ПОМЕСТИТЬ ВтСписания
		|ИЗ
		|	РегистрНакопления.ПроцентныеРасходыДисконтирования КАК ПроцентныеРасходыДисконтирования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
		|		ПО ПроцентныеРасходыДисконтирования.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
		|ГДЕ
		|	ПроцентныеРасходыДисконтирования.Активность
		|	И ПроцентныеРасходыДисконтирования.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ПроцентныеРасходыДисконтирования.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ТИПЗНАЧЕНИЯ(ПроцентныеРасходыДисконтирования.Регистратор) В (ТИП(Документ.КорректировкаПриобретения), ТИП(Документ.РасчетПроцентныхРасходовДисконтирования))
		|	И &ОтборПоДоговору
		|	И &ОтборПоДокументу
		|	И &ОтборПоОбъектуРасчетов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаПоПартнерам,
		|	ОбъектРасчетов,
		|	Валюта,
		|	РасчетныйДокумент,
		|	Период,
		|	ЭтоРасчетПроцентныхРасходов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВтСписания.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	ВтСписания.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ВтСписания.Валюта КАК Валюта,
		|	ВтСписания.РасчетныйДокумент КАК РасчетныйДокумент,
		|	МАКСИМУМ(ВтСписания.Период) КАК Период,
		|	МАКСИМУМ(ВтСписания.ЭтоРасчетПроцентныхРасходов) КАК ЭтоРасчетПроцентныхРасходов
		|ПОМЕСТИТЬ ВтПериоды
		|ИЗ
		|	ВтСписания КАК ВтСписания
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтСписания.АналитикаУчетаПоПартнерам,
		|	ВтСписания.ОбъектРасчетов,
		|	ВтСписания.Валюта,
		|	ВтСписания.РасчетныйДокумент
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаПоПартнерам,
		|	ОбъектРасчетов,
		|	Валюта,
		|	РасчетныйДокумент,
		|	Период,
		|	ЭтоРасчетПроцентныхРасходов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтСписания.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	ВтСписания.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ВтСписания.Валюта КАК Валюта,
		|	ВтСписания.РасчетныйДокумент КАК РасчетныйДокумент,
		|	ВтСписания.СтавкаДисконтирования КАК СтавкаДисконтирования,
		|	ВтСписания.ФактическаяЗадолженностьБезНДС КАК ФактическаяЗадолженностьБезНДС,
		|	ВтСписания.ДисконтированнаяЗадолженностьБезНДС КАК ДисконтированнаяЗадолженностьБезНДС,
		|	ВтСписания.РассчитанныйОстатокПроцентов КАК РассчитанныйОстатокПроцентов,
		|	ВтСписания.Период КАК Период,
		|	ВтСписания.ЭтоРасчетПроцентныхРасходов КАК ЭтоРасчетПроцентныхРасходов,
		|	ВтСписания.Организация КАК Организация
		|ПОМЕСТИТЬ ВтСписанияДоп
		|ИЗ
		|	ВтСписания КАК ВтСписания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПериоды КАК ВтПериоды
		|		ПО ВтСписания.АналитикаУчетаПоПартнерам = ВтПериоды.АналитикаУчетаПоПартнерам
		|			И ВтСписания.ОбъектРасчетов = ВтПериоды.ОбъектРасчетов
		|			И ВтСписания.Валюта = ВтПериоды.Валюта
		|			И ВтСписания.РасчетныйДокумент = ВтПериоды.РасчетныйДокумент
		|			И ВтСписания.Период = ВтПериоды.Период
		|			И ВтСписания.ЭтоРасчетПроцентныхРасходов = ВтПериоды.ЭтоРасчетПроцентныхРасходов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаПоПартнерам,
		|	ОбъектРасчетов,
		|	Валюта,
		|	РасчетныйДокумент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПроцентныеРасходыДисконтированияОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	ПроцентныеРасходыДисконтированияОстатки.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ВЫБОР &ДанныеОтчета
		|		КОГДА 1
		|			ТОГДА ПроцентныеРасходыДисконтированияОстатки.Валюта
		|		КОГДА 2
		|			ТОГДА &ВалютаУправленческогоУчета
		|		ИНАЧЕ КлючиАналитикиУчетаПоПартнерам.Организация.ВалютаРегламентированногоУчета
		|	КОНЕЦ                                                          КАК Валюта,
		|	ПроцентныеРасходыДисконтированияОстатки.Валюта КАК ВалютаВзаиморасчетов,
		|	ПроцентныеРасходыДисконтированияОстатки.РасчетныйДокумент КАК РасчетныйДокумент,
		|	ВЫБОР &ДанныеОтчета
		|		КОГДА 1
		|			ТОГДА ПроцентныеРасходыДисконтированияОстатки.СуммаДисконтированияОстаток
		|		КОГДА 2
		|			ТОГДА ПроцентныеРасходыДисконтированияОстатки.СуммаДисконтированияУпрОстаток
		|		ИНАЧЕ ПроцентныеРасходыДисконтированияОстатки.СуммаДисконтированияРеглОстаток
		|	КОНЕЦ КАК СуммаДисконтированияОстаток,
		|	КлючиАналитикиУчетаПоПартнерам.Контрагент КАК Контрагент,
		|	КлючиАналитикиУчетаПоПартнерам.Договор КАК Договор,
		|	ДоговорыКонтрагентов.СтавкаДисконтирования КАК СтавкаДисконтирования,
		|	ДоговорыКонтрагентов.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ВтОстатки
		|ИЗ
		|	РегистрНакопления.ПроцентныеРасходыДисконтирования.Остатки(
		|			&КонецПериодаИсключая,
		|			(АналитикаУчетаПоПартнерам, Валюта, ОбъектРасчетов, РасчетныйДокумент) В
		|				(ВЫБРАТЬ
		|					ВтСписанияДоп.АналитикаУчетаПоПартнерам,
		|					ВтСписанияДоп.Валюта,
		|					ВтСписанияДоп.ОбъектРасчетов,
		|					ВтСписанияДоп.РасчетныйДокумент
		|				ИЗ
		|					ВтСписанияДоп)) КАК ПроцентныеРасходыДисконтированияОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|			ПО КлючиАналитикиУчетаПоПартнерам.Договор = ДоговорыКонтрагентов.Ссылка
		|		ПО ПроцентныеРасходыДисконтированияОстатки.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаПоПартнерам,
		|	ОбъектРасчетов,
		|	Валюта,
		|	РасчетныйДокумент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	ВтОстатки.Валюта КАК Валюта,
		|	ВтОстатки.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ВтОстатки.РасчетныйДокумент КАК РасчетныйДокумент,
		|	ВтОстатки.СуммаДисконтированияОстаток КАК СуммаДисконтированияОстаток,
		|	ВтОстатки.Контрагент КАК Контрагент,
		|	ВтОстатки.Договор КАК Договор,
		|	ВтОстатки.СтавкаДисконтирования КАК СтавкаДисконтирования,
		|	ЕСТЬNULL(ВтСписанияДоп.СтавкаДисконтирования, 0) КАК ФиксСтавкаДисконтирования,
		|	ЕСТЬNULL(ВтСписанияДоп.ФактическаяЗадолженностьБезНДС, 0) КАК ФиксФактическаяЗадолженностьБезНДС,
		|	ЕСТЬNULL(ВтСписанияДоп.ДисконтированнаяЗадолженностьБезНДС, 0) КАК ФиксДисконтированнаяЗадолженностьБезНДС,
		|	ЕСТЬNULL(ВтСписанияДоп.РассчитанныйОстатокПроцентов, 0) КАК ФиксРассчитанныйОстатокПроцентов,
		|	ВтСписанияДоп.Период КАК ПериодФиксации,
		|	ВтОстатки.СуммаДисконтированияОстаток - ЕСТЬNULL(ВтСписанияДоп.РассчитанныйОстатокПроцентов, 0) КАК ФиксИзменениеСуммыПроцентов,
		|	&ОтчетнаяДата КАК ОтчетнаяДата,
		|	ВтОстатки.СтавкаНДС КАК СтавкаНДС,
		|	ВтСписанияДоп.Организация КАК Организация
		|ИЗ
		|	ВтОстатки КАК ВтОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСписанияДоп КАК ВтСписанияДоп
		|		ПО ВтОстатки.АналитикаУчетаПоПартнерам = ВтСписанияДоп.АналитикаУчетаПоПартнерам
		|			И ВтОстатки.ВалютаВзаиморасчетов = ВтСписанияДоп.Валюта
		|			И ВтОстатки.ОбъектРасчетов = ВтСписанияДоп.ОбъектРасчетов
		|			И ВтОстатки.РасчетныйДокумент = ВтСписанияДоп.РасчетныйДокумент";
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаДанныхГрафиков()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СуммыДокументовВВалютахУчета.Регистратор КАК Регистратор,
		|	ВЫБОР
		|		КОГДА СУММА(СуммыДокументовВВалютахУчета.СуммаВзаиморасчетов) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(СуммыДокументовВВалютахУчета.СуммаВзаиморасчетов - СуммыДокументовВВалютахУчета.СуммаНДСВзаиморасчетов) / СУММА(СуммыДокументовВВалютахУчета.СуммаВзаиморасчетов) КАК ЧИСЛО(11, 10))
		|	КОНЕЦ КАК КоэффициентСуммыБезНДС
		|ПОМЕСТИТЬ ВтКоэффициентыСуммыНДС
		|ИЗ
		|	РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
		|ГДЕ
		|	СуммыДокументовВВалютахУчета.Активность
		|	И СуммыДокументовВВалютахУчета.Регистратор В
		|			(ВЫБРАТЬ
		|				ВтСписания.РасчетныйДокумент
		|			ИЗ
		|				ВтСписания)
		|
		|СГРУППИРОВАТЬ ПО
		|	СуммыДокументовВВалютахУчета.Регистратор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСПоставщикамиПоСрокамОстатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	РасчетыСПоставщикамиПоСрокамОстатки.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ВЫБОР &ДанныеОтчета
		|		КОГДА 1
		|			ТОГДА РасчетыСПоставщикамиПоСрокамОстатки.Валюта
		|		КОГДА 2
		|			ТОГДА &ВалютаУправленческогоУчета
		|		ИНАЧЕ КлючиАналитикиУчетаПоПартнерам.Организация.ВалютаРегламентированногоУчета
		|	КОНЕЦ                                                          КАК Валюта,
		|	РасчетыСПоставщикамиПоСрокамОстатки.РасчетныйДокумент КАК РасчетныйДокумент,
		|	РасчетыСПоставщикамиПоСрокамОстатки.ДатаПлановогоПогашения КАК ДатаПлановогоПогашения,
		|	РасчетыСПоставщикамиПоСрокамОстатки.ДатаВозникновения КАК ДатаПриобретения,
		|	ВЫБОР &ДанныеОтчета
		|		КОГДА 1
		|			ТОГДА РасчетыСПоставщикамиПоСрокамОстатки.ДолгОстаток
		|		КОГДА 2
		|			ТОГДА РасчетыСПоставщикамиПоСрокамОстатки.ДолгУпрОстаток
		|		ИНАЧЕ РасчетыСПоставщикамиПоСрокамОстатки.ДолгРеглОстаток
		|	КОНЕЦ КАК ДолгОстаток,
		|	РасчетыСПоставщикамиПоСрокамОстатки.ДолгОстаток КАК ДолгОстатокВзаиморасчетов,
		|	ВЫРАЗИТЬ(ВЫБОР &ДанныеОтчета
		|		КОГДА 1
		|			ТОГДА РасчетыСПоставщикамиПоСрокамОстатки.ДолгОстаток
		|		КОГДА 2
		|			ТОГДА РасчетыСПоставщикамиПоСрокамОстатки.ДолгУпрОстаток
		|		ИНАЧЕ РасчетыСПоставщикамиПоСрокамОстатки.ДолгРеглОстаток
		|	КОНЕЦ * ВтКоэффициентыСуммыНДС.КоэффициентСуммыБезНДС КАК ЧИСЛО(31, 2)) КАК ФактическаяЗадолженностьБезНДС,
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщикамиПоСрокамОстатки.ДатаПлановогоПогашения > &ОтчетнаяДата
		|			ТОГДА РАЗНОСТЬДАТ(&ОтчетнаяДата, РасчетыСПоставщикамиПоСрокамОстатки.ДатаПлановогоПогашения, ДЕНЬ)
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК КоличествоДнейДоПлатежа
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам.Остатки(
		|			&КонецПериода,
		|			(АналитикаУчетаПоПартнерам, Валюта, ОбъектРасчетов, РасчетныйДокумент) В
		|				(ВЫБРАТЬ
		|					ВтСписания.АналитикаУчетаПоПартнерам,
		|					ВтСписания.Валюта,
		|					ВтСписания.ОбъектРасчетов,
		|					ВтСписания.РасчетныйДокумент
		|				ИЗ
		|					ВтСписания)) КАК РасчетыСПоставщикамиПоСрокамОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыСуммыНДС КАК ВтКоэффициентыСуммыНДС
		|		ПО РасчетыСПоставщикамиПоСрокамОстатки.РасчетныйДокумент = ВтКоэффициентыСуммыНДС.Регистратор
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
		|		ПО РасчетыСПоставщикамиПоСрокамОстатки.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка";

	Возврат ТекстЗапроса
	
КонецФункции

Функция ПолучитьДанныеДисконтирования(ПараметрПериод, ДанныеОтчета, Договор = Неопределено, Документ = Неопределено, ОбъектРасчетов = Неопределено)
	
	Если ПараметрПериод = Неопределено Тогда
		Период = Дата(1,1,1);
	Иначе
		Период = ПараметрПериод;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаФиксированныхДанных();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериодаИсключая", Новый Граница(КонецМесяца(Период), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ОтчетнаяДата", НачалоДня(КонецМесяца(Период)));
	Запрос.УстановитьПараметр("ДанныеОтчета", ДанныеОтчета);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета", ЗначениеНастроекПовтИсп.ВалютаУправленческогоУчета());
	
	Если Договор <> Неопределено Тогда
		Запрос.УстановитьПараметр("Договор", Договор);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДоговору", "КлючиАналитикиУчетаПоПартнерам.Договор = &Договор");
	Иначе
		Запрос.УстановитьПараметр("ОтборПоДоговору", Истина);
	КонецЕсли;
	
	Если Документ <> Неопределено Тогда
		Запрос.УстановитьПараметр("Документ", Документ);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДокументу", "ПроцентныеРасходыДисконтирования.РасчетныйДокумент В (&Документ)");
	Иначе 
		Запрос.УстановитьПараметр("ОтборПоДокументу", Истина);
	КонецЕсли;
	
	Если ОбъектРасчетов <> Неопределено Тогда
		Запрос.УстановитьПараметр("ОбъектРасчетов", ОбъектРасчетов);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоОбъектуРасчетов", "ПроцентныеРасходыДисконтирования.ОбъектРасчетов = &ОбъектРасчетов");
	Иначе 
		Запрос.УстановитьПараметр("ОтборПоОбъектуРасчетов", Истина);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаФиксированныеДанные = РезультатЗапроса.Выгрузить();
	
	Запрос.Текст = ТекстЗапросаДанныхГрафиков();
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТаблицаДанныеГрафиков = РезультатЗапроса.Выгрузить();
	КолонкиКлючевыхПолей = "АналитикаУчетаПоПартнерам, ОбъектРасчетов, Валюта, РасчетныйДокумент" ;
	ТаблицаДанныеГрафиков.Индексы.Добавить(КолонкиКлючевыхПолей);
	
	ТаблицаРезультат = ТаблицаФиксированныеДанные.СкопироватьКолонки();
	ТаблицаРезультат.Колонки.Добавить("ДатаПриобретения", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаРезультат.Колонки.Добавить("ДатаПлановогоПогашения", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаРезультат.Колонки.Добавить("ФактическаяЗадолженностьБезНДС", ОбщегоНазначения.ОписаниеТипаЧисло(31, 2));
	ТаблицаРезультат.Колонки.Добавить("КоличествоДнейДоПлатежа", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	ТаблицаРезультат.Колонки.Добавить("РассчитанныйОстатокПроцентов", ОбщегоНазначенияУТ.ОписаниеТиповПоТипу(Тип("Число")));
	ТаблицаРезультат.Колонки.Добавить("РассчитанныйОстатокПроцентовВзаиморасчеты", ОбщегоНазначенияУТ.ОписаниеТиповПоТипу(Тип("Число")));
	ТаблицаРезультат.Колонки.Добавить("ДисконтированнаяЗадолженностьБезНДС", ОбщегоНазначения.ОписаниеТипаЧисло(31, 2));
	ТаблицаРезультат.Колонки.Добавить("ИзменениеСуммыПроцентов", ОбщегоНазначения.ОписаниеТипаЧисло(31, 2));
	ТаблицаРезультат.Колонки.Добавить("ВывестиРазличия", Новый ОписаниеТипов("Булево"));
	
	Отбор = Новый Структура(КолонкиКлючевыхПолей);
	КолонкиСумм = 	"СуммаДисконтированияОстаток,
					|ФиксФактическаяЗадолженностьБезНДС,
					|ФиксДисконтированнаяЗадолженностьБезНДС,
					|ФиксРассчитанныйОстатокПроцентов,
					|ФиксИзменениеСуммыПроцентов";
	
	Для Каждого СтрокаФикс Из ТаблицаФиксированныеДанные Цикл 
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаФикс);
		НоваяСтрока = ТаблицаРезультат.Добавить();
		СтрокаСФиксированнымиЗначениями = НоваяСтрока;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаФикс);
		
		СтрокиГрафика = ТаблицаДанныеГрафиков.НайтиСтроки(Отбор);
		ЗаполнитьТекущуюСтроку                    = Истина;
		ФактическаяЗадолженностьБезНДС            = 0;
		РассчитанныйОстатокПроцентов              = 0;
		РассчитанныйОстатокПроцентовВзаиморасчеты = 0;
		КонтрольРассчитанныйОстатокПроцентов      = 0;
		СтрокаГрафикаСМаксимальнымиПроцентами     = Неопределено;
		
		Для Каждого СтрокаГрафика Из СтрокиГрафика Цикл 
			
			Если ЗаполнитьТекущуюСтроку Тогда
				ЗаполнитьТекущуюСтроку = Ложь;
			Иначе
				НоваяСтрока = ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаФикс,, КолонкиСумм);
			КонецЕсли;
			
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаГрафика,, КолонкиКлючевыхПолей);
			ДолгОстатокВзаиморасчетов = СтрокаГрафика.ДолгОстатокВзаиморасчетов;
			Если ТипЗнч(СтрокаФикс.РасчетныйДокумент) = Тип("ДокументСсылка.ПервичныйДокумент") Тогда
				СтавкаНДС = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(СтрокаФикс.СтавкаНДС) / 100;
				НоваяСтрока.ФактическаяЗадолженностьБезНДС = Окр(СтрокаГрафика.ДолгОстаток / (1 + СтавкаНДС), 2);
				ДолгОстатокВзаиморасчетов = Окр(ДолгОстатокВзаиморасчетов / (1 + СтавкаНДС), 2);
			КонецЕсли;
			
			НоваяСтрока.РассчитанныйОстатокПроцентов = НоваяСтрока.ФактическаяЗадолженностьБезНДС 
				*(1 - 1 / Pow(1+НоваяСтрока.СтавкаДисконтирования/100, НоваяСтрока.КоличествоДнейДоПлатежа/365));
			НоваяСтрока.РассчитанныйОстатокПроцентовВзаиморасчеты = ДолгОстатокВзаиморасчетов 
				*(1 - 1 / Pow(1+НоваяСтрока.СтавкаДисконтирования/100, НоваяСтрока.КоличествоДнейДоПлатежа/365));
			
			Если СтрокаГрафикаСМаксимальнымиПроцентами = Неопределено 
				Или НоваяСтрока.РассчитанныйОстатокПроцентов > СтрокаГрафикаСМаксимальнымиПроцентами.РассчитанныйОстатокПроцентов Тогда
				СтрокаГрафикаСМаксимальнымиПроцентами = НоваяСтрока;
			КонецЕсли;
			
			ФактическаяЗадолженностьБезНДС                        = ФактическаяЗадолженностьБезНДС + НоваяСтрока.ФактическаяЗадолженностьБезНДС;
			РассчитанныйОстатокПроцентов                          = РассчитанныйОстатокПроцентов + НоваяСтрока.РассчитанныйОстатокПроцентов;
			РассчитанныйОстатокПроцентовВзаиморасчеты             = РассчитанныйОстатокПроцентовВзаиморасчеты + НоваяСтрока.РассчитанныйОстатокПроцентовВзаиморасчеты;
			НоваяСтрока.РассчитанныйОстатокПроцентовВзаиморасчеты = Окр(НоваяСтрока.РассчитанныйОстатокПроцентовВзаиморасчеты, 2);
			Если НоваяСтрока.РассчитанныйОстатокПроцентовВзаиморасчеты = 0 Тогда
				НоваяСтрока.РассчитанныйОстатокПроцентов          = 0;
			Иначе
				НоваяСтрока.РассчитанныйОстатокПроцентов          = Окр(НоваяСтрока.РассчитанныйОстатокПроцентов, 2);
			КонецЕсли;
			КонтрольРассчитанныйОстатокПроцентов                  = КонтрольРассчитанныйОстатокПроцентов + НоваяСтрока.РассчитанныйОстатокПроцентов;
			НоваяСтрока.ДисконтированнаяЗадолженностьБезНДС       = НоваяСтрока.ФактическаяЗадолженностьБезНДС - НоваяСтрока.РассчитанныйОстатокПроцентов;
		
		КонецЦикла;
		
		РассчитанныйОстатокПроцентов = Окр(РассчитанныйОстатокПроцентов, 2);
		РассчитанныйОстатокПроцентовВзаиморасчеты = Окр(РассчитанныйОстатокПроцентовВзаиморасчеты, 2);
		Если РассчитанныйОстатокПроцентовВзаиморасчеты = 0 Тогда
			РассчитанныйОстатокПроцентов = 0
		КонецЕсли;
		КорректировкаПроцентов = РассчитанныйОстатокПроцентов - КонтрольРассчитанныйОстатокПроцентов;
		Если КорректировкаПроцентов <> 0 Тогда
			СтрокаГрафикаСМаксимальнымиПроцентами.РассчитанныйОстатокПроцентов = СтрокаГрафикаСМаксимальнымиПроцентами.РассчитанныйОстатокПроцентов 
				+ КорректировкаПроцентов;
			СтрокаГрафикаСМаксимальнымиПроцентами.ДисконтированнаяЗадолженностьБезНДС = СтрокаГрафикаСМаксимальнымиПроцентами.ДисконтированнаяЗадолженностьБезНДС 
				- КорректировкаПроцентов;
		КонецЕсли;
		
		ДисконтированнаяЗадолженностьБезНДС = ФактическаяЗадолженностьБезНДС - РассчитанныйОстатокПроцентов;
		
		СтрокаСФиксированнымиЗначениями.ИзменениеСуммыПроцентов = СтрокаФикс.СуммаДисконтированияОстаток 
			- РассчитанныйОстатокПроцентов;
		
		ВывестиРазличия = 
			СтрокаФикс.СтавкаДисконтирования <> СтрокаФикс.ФиксСтавкаДисконтирования
			Или ФактическаяЗадолженностьБезНДС <> СтрокаФикс.ФиксФактическаяЗадолженностьБезНДС
			Или ДисконтированнаяЗадолженностьБезНДС <> СтрокаФикс.ФиксДисконтированнаяЗадолженностьБезНДС
			Или РассчитанныйОстатокПроцентов <> СтрокаФикс.ФиксРассчитанныйОстатокПроцентов
			Или СтрокаСФиксированнымиЗначениями.ИзменениеСуммыПроцентов <> СтрокаФикс.ФиксИзменениеСуммыПроцентов;
		
		СтрокаСФиксированнымиЗначениями.ВывестиРазличия = ВывестиРазличия;
		
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ПолучитьДокументыДисконтирования(РегламентныеОперации, Организации = Неопределено, Период = Неопределено)
	Запрос = Новый Запрос;
	Если Организации <> Неопределено И Период <> Неопределено Тогда
		Запрос.УстановитьПараметр("Организации", Организации);
		Запрос.УстановитьПараметр("Период", КонецМесяца(Период));
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПроцентныеРасходыДисконтирования.РасчетныйДокумент КАК РасчетныйДокумент
			|ИЗ
			|	РегистрНакопления.ПроцентныеРасходыДисконтирования КАК ПроцентныеРасходыДисконтирования
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетПроцентныхРасходовДисконтирования КАК РасчетПроцентныхРасходовДисконтирования
			|		ПО ПроцентныеРасходыДисконтирования.Регистратор = РасчетПроцентныхРасходовДисконтирования.Ссылка
			|ГДЕ
			|	ПроцентныеРасходыДисконтирования.Активность
			|	И РасчетПроцентныхРасходовДисконтирования.Организация В(&Организации)
			|	И РасчетПроцентныхРасходовДисконтирования.Дата = &Период";
	Иначе
		Запрос.УстановитьПараметр("Регистраторы", РегламентныеОперации);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПроцентныеРасходыДисконтирования.РасчетныйДокумент КАК РасчетныйДокумент
			|ИЗ
			|	РегистрНакопления.ПроцентныеРасходыДисконтирования КАК ПроцентныеРасходыДисконтирования
			|ГДЕ
			|	ПроцентныеРасходыДисконтирования.Активность
			|	И ПроцентныеРасходыДисконтирования.Регистратор В(&Регистраторы)";
	КонецЕсли;
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РасчетныйДокумент");
КонецФункции

#КонецОбласти

#КонецЕсли