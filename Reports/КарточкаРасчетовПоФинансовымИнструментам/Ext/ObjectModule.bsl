#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;

	Период = Неопределено;
	Если КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() > 0 Тогда
		МассивДокументов = КомпоновщикНастроек.Настройки.Отбор.Элементы[0].ПравоеЗначение;
		Сверка = Неопределено;
		Если ТипЗнч(МассивДокументов) = Тип("ДокументСсылка.СверкаВзаиморасчетов2_4") И ЗначениеЗаполнено(МассивДокументов) Тогда
			Сверка = МассивДокументов;
		ИначеЕсли ТипЗнч(МассивДокументов) = Тип("СписокЗначений") И МассивДокументов.Количество() = 1 Тогда
			Сверка = МассивДокументов[0].Значение;
		КонецЕсли;
		Если ЗначениеЗаполнено(Сверка) Тогда
			Периоды = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Сверка, "НачалоПериода, КонецПериода");
			Период = Новый СтандартныйПериод();
			Период.ДатаНачала = Периоды.НачалоПериода;
			Период.ДатаОкончания = Периоды.КонецПериода;
			
			КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.Настройки, "Период", Период);
			КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.ПользовательскиеНастройки, "Период", Период);
			ПользовательскиеНастройкиМодифицированы = Истина;
		КонецЕсли;
	КонецЕсли;
	
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.Настройки, "АрендныеОбязательства", Неопределено);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.Настройки, "ОбеспечительныйПлатеж", Неопределено);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.Настройки, "ВыкупнаяСтоимость", Неопределено);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.Настройки, "ВыкупнаяСтоимостьАванс", Неопределено);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.Настройки, "УслугаПоАрендеАванс", Неопределено);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.Настройки, "УслугаПоАренде", Неопределено);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.Настройки, "УслугаПоАренде", Неопределено);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек.Настройки, "НДС", Неопределено);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	НастройкиКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки();
	ПараметрКомпоновки = НастройкиКомпоновщика.ПараметрыДанных.Элементы.Найти("ЗапрещенныеТипыРасчетов");
	Если ПараметрКомпоновки <> Неопределено Тогда
		ПараметрКомпоновки.Использование = Истина;
		ПараметрКомпоновки.Значение.ЗагрузитьЗначения(Документы.СверкаВзаиморасчетов2_5_11.ЗапрещенныеТипыРасчетов());
	КонецЕсли;
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, 
		НастройкиКомпоновщика,
		ДанныеРасшифровки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	ВспомогательныеПараметры = Новый Массив;
	КомпоновкаДанныхСервер.ДобавитьВспомогательныеПараметрыОтчетаПоФункциональнымОпциям(ВспомогательныеПараметры);
	КомпоновкаДанныхСервер.СкрытьВспомогательныеПараметрыОтчета(СхемаКомпоновкиДанных, КомпоновщикНастроек, ДокументРезультат, ВспомогательныеПараметры);
	
	// Сообщим форме отчета, что настройки модифицированы
	Если ПользовательскиеНастройкиМодифицированы Тогда
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПользовательскиеНастройкиМодифицированы", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - см. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПередЗагрузкойВариантаНаСервере = Истина;
	Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина;
	Настройки.События.ПередЗаполнениемПанелиБыстрыхНастроек = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	ФормаПараметры = ЭтаФорма.ФормаПараметры;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда 
		
		ЭтаФорма.НастройкиОтчета.РазрешеноВыбиратьВарианты = Ложь;
		
		ФормаПараметры.Вставить("ПараметрКоманды", Параметры.ПараметрКоманды);
		
		ЗначенияФункциональныхОпций = Новый Структура;
		ЗначенияФункциональныхОпций.Вставить("БазоваяВерсия", ПолучитьФункциональнуюОпцию("БазоваяВерсия"));
		ЗначенияФункциональныхОпций.Вставить("УправлениеТорговлей", ПолучитьФункциональнуюОпцию("УправлениеТорговлей"));
		
		ПараметрКоманды = Параметры.ПараметрКоманды;
		
		Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
			Если ПараметрКоманды.Количество() > 0 Тогда
				ПервыйЭлемент = ПараметрКоманды[0];
			Иначе
				ПервыйЭлемент = Неопределено;
			КонецЕсли;
		Иначе
			ПервыйЭлемент = ПараметрКоманды;
		КонецЕсли;
		
		Если ТипЗнч(ПервыйЭлемент) = Тип("ДокументСсылка.СверкаВзаиморасчетов2_5_11") Тогда
			Если ЗначенияФункциональныхОпций.УправлениеТорговлей
					ИЛИ ЗначенияФункциональныхОпций.БазоваяВерсия Тогда
				Параметры.КлючВарианта = "КарточкаРасчетовПоФинансовымИнструментамУТКонтекст";
			Иначе
				Параметры.КлючВарианта = "КарточкаРасчетовПоФинансовымИнструментамКонтекст";
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере
//
Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	Если НовыеНастройкиКД <> Неопределено Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(НовыеНастройкиКД);
	КонецЕсли;
	
	// Изменение настроек по функциональным опциям
	НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы);
	
	// Установка значений по умолчанию
	УстановитьОбязательныеНастройки(КомпоновщикНастроекФормы, Истина);
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;
КонецПроцедуры

// Вызывается перед загрузкой новых настроек. Используется для изменения схемы компоновки.
//   Например, если схема отчета зависит от ключа варианта или параметров отчета.
//   Чтобы изменения схемы вступили в силу следует вызывать метод ОтчетыСервер.ПодключитьСхему().
//   В ДополнительныеСвойства параметра НовыеНастройкиКД и свойство Настройки компоновщика настроек
//   объекта включены свойства КлючВарианта, КлючПредопределенногоВарианта, КонтекстВарианта 
//   и ФормаПараметрыОтбор.
//
// Параметры:
//   Контекст - Произвольный - 
//       Параметры контекста, в котором используется отчет.
//       Используется для передачи в параметрах метода ОтчетыСервер.ПодключитьСхему().
//   КлючСхемы - Строка -
//       Идентификатор текущей схемы компоновщика настроек.
//       По умолчанию не заполнен (это означает что компоновщик инициализирован на основании основной схемы).
//       Используется для оптимизации, чтобы переинициализировать компоновщик как можно реже.
//       Может не использоваться если переинициализация выполняется безусловно.
//   КлючВарианта - Строка, Неопределено -
//       Имя предопределенного или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов для варианта расшифровки или без контекста.
//   НовыеНастройкиКД - НастройкиКомпоновкиДанных, Неопределено -
//       Настройки варианта отчета, которые будут загружены в компоновщик настроек после его инициализации.
//       Неопределено когда настройки варианта не надо загружать (уже загружены ранее).
//   НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных, Неопределено -
//       Пользовательские настройки, которые будут загружены в компоновщик настроек после его инициализации.
//       Неопределено когда пользовательские настройки не надо загружать (уже загружены ранее).
//
Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	
	Если ТипЗнч(Контекст) = Тип("ФормаКлиентскогоПриложения")
		И НовыеНастройкиКД <> Неопределено Тогда
		Если Контекст.ФормаПараметры.Свойство("ПараметрКоманды") Тогда
			Параметры = Контекст.Параметры;
			СформироватьПараметрыОтчета(Контекст.ФормаПараметры.ПараметрКоманды, Контекст, Параметры, НовыеНастройкиКД);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается до перезаполнения панели настроек формы отчета.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета.
//   ПараметрыЗаполнения - Структура - Параметры, которые будут загружены в отчет:
//   * ОтчетОбъектИлиПолноеИмя - ОтчетОбъект - отчет.
//
Процедура ПередЗаполнениемПанелиБыстрыхНастроек(ЭтаФорма, ПараметрыЗаполнения) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
		Если ТипЗнч(ПараметрыЗаполнения.ОтчетОбъектИлиПолноеИмя) = Тип("Строка") Тогда
			ЭлементыПользовательскихНастроек = КомпоновщикНастроек.Настройки.Отбор.Элементы;
		Иначе
			ОтборОтчета = ПараметрыЗаполнения.ОтчетОбъектИлиПолноеИмя.КомпоновщикНастроек.Настройки.Отбор; // ОтборКомпоновкиДанных -
			ЭлементыПользовательскихНастроек = ОтборОтчета.Элементы;
		КонецЕсли;
		
		Для Каждого ЭлементОтбора Из ЭлементыПользовательскихНастроек Цикл
			Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партнер") Тогда
				ЭлементОтбора.ПредставлениеПользовательскойНастройки = "Контрагент";
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьПараметрыОтчета(ПараметрКоманды, ЭтаФорма, Параметры, НовыеНастройкиКД)
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		Если ПараметрКоманды.Количество() > 0 Тогда
			ПервыйЭлемент = ПараметрКоманды[0];
		Иначе
			ПервыйЭлемент = Неопределено;
		КонецЕсли;
	Иначе
		ПервыйЭлемент = ПараметрКоманды;
	КонецЕсли;
	
	Если ТипЗнч(ПервыйЭлемент) = Тип("ДокументСсылка.СверкаВзаиморасчетов2_5_11") Тогда
		Реквизиты = Неопределено;
		Реквизиты = Документы.СверкаВзаиморасчетов2_5_11.РеквизитыДокумента(ПервыйЭлемент);
		
		Если Реквизиты <> Неопределено Тогда
			Если ЗначениеЗаполнено(Реквизиты.Организация) Тогда
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
					НовыеНастройкиКД.Отбор, 
					"Организация",
					Реквизиты.Организация,
					ВидСравненияКомпоновкиДанных.Равно,,
					Истина);
			КонецЕсли;
			Если ЗначениеЗаполнено(Реквизиты.Контрагент) Тогда
				Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда
					ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
						НовыеНастройкиКД.Отбор, 
						"Контрагент",
						Реквизиты.Контрагент,
						ВидСравненияКомпоновкиДанных.Равно,,
						Истина);
				Иначе
					ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
						НовыеНастройкиКД.Отбор, 
						"Партнер",
						ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Контрагент,"Партнер"),
						ВидСравненияКомпоновкиДанных.Равно,,
						Истина);
				КонецЕсли;
			КонецЕсли;
			Период = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НовыеНастройкиКД, "ПериодОтчета");
			Период.Значение.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
			Период.Значение.ДатаНачала = Реквизиты.НачалоПериода;
			Период.Значение.ДатаОкончания = Реквизиты.КонецПериода;
			Период.Использование = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы)
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "Контрагент");
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы)
	
	СегментыСервер.ВключитьОтборПоСегментуПартнеровВСКД(КомпоновщикНастроек);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
