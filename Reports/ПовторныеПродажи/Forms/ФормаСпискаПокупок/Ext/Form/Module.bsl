#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.Отбор);

	Если Параметры.Свойство("КолвоПокупок") Тогда
		Клиент = Параметры.КолвоПокупок;
	ИначеЕсли Параметры.Свойство("КолвоПокупокВсего") Тогда
		Клиент = Параметры.КолвоПокупокВсего;
	КонецЕсли;
	
	ЗаголовокТекст = НСтр("ru='Список покупок: [Клиент]'");	
	Значения = Новый Структура("Клиент", Клиент);
	Заголовок =  СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ЗаголовокТекст,Значения); 
	ВидПокупок =  Параметры.ВидПокупок;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РезультатВыполнения = Список();
	Если НЕ РезультатВыполнения.Статус = "Выполнено" Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "ФормированиеОтчета");
	КонецЕсли;


КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция Список()
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ФоновоеЗаданиеОтменить(ИдентификаторЗадания);
		ИдентификаторЗадания = Неопределено;
	КонецЕсли;

	ИменаПараметровОтборов = "ДатаНачала,ДатаОкончания,ПериодИспользование,
		|Организация,ОрганизацияИспользование,
		|Менеджер,МенеджерИспользование,Клиент,
		|Номенклатура,НоменклатураИспользование,
		|СегментКлиентов,СегментКлиентовИспользование,
		|СегментНоменклатуры,СегментНоменклатурыИспользование,
		|СуммаПокупок,СуммаПокупокИспользование, ВидПокупок";

	ПараметрыЗапроса = Новый Структура(ИменаПараметровОтборов);
	ЗаполнитьЗначенияСвойств(ПараметрыЗапроса, ЭтаФорма);
	ПараметрыЗапроса.Вставить("ДатаНачалаПериода",ДатаНачала);
	ПараметрыЗапроса.Вставить("ДатаОкончанияПериода",ДатаОкончания);
	
	ПараметрыВыполненияВФоне=ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"Отчеты.ПовторныеПродажи.ЗаполнитьСписокПокупок", 
		ПараметрыЗапроса,
		ПараметрыВыполненияВФоне);
	
	ИдентификаторЗадания = РезультатВыполнения.ИдентификаторЗадания;
	АдресХранилища       = РезультатВыполнения.АдресРезультата;
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		ВывестиСписок();
	КонецЕсли;

	Возврат РезультатВыполнения;
	
КонецФункции

&НаСервере
Процедура ВывестиСписок()
	
	РезультатСписок = ПолучитьИзВременногоХранилища(АдресХранилища);
	УдалитьИзВременногоХранилища(АдресХранилища);
	ИдентификаторЗадания = Неопределено;

	Макет = Отчеты.ПовторныеПродажи.ПолучитьМакет("СписокПокупок");
	
	//Выводим шапку таблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("Шапка");
	Результат.Вывести(ОбластьШапкаТаблицы);
	
	Валюта = Константы.ВалютаУправленческогоУчета.Получить();
	Значения = Новый Структура("Валюта", Валюта);
	Текст = НСтр("ru='Сумма, [Валюта]'");	
	Результат.Область("Сумма").Текст =СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Текст,Значения);

	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	НомерСтр = 0;	
	//Заполняем таблицу
	СписокПокупок = РезультатСписок.СписокПокупок;
	Для Каждого Строка Из СписокПокупок Цикл
		ОбластьСтрока.Параметры.НомерСтр = НомерСтр+1;
		ОбластьСтрока.Параметры.Документ = Строка.Документ;
		РасшифровкаД = Новый Структура ("Документ",Строка.Документ);
		ОбластьСтрока.Параметры.рДокумент = РасшифровкаД;
		
		ОбластьСтрока.Параметры.Сумма= Строка.Сумма;
		НомерСтр = НомерСтр+1;
		Результат.Вывести(ОбластьСтрока);
	КонецЦикла;

	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьИтог.Параметры.Итог = РезультатСписок.Итог.Итог;
	Результат.Вывести(ОбластьИтог);

КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
			ВывестиСписок();
			ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьВыполнениеЗадания",
				ПараметрыОбработчикаОжидания.ТекущийИнтервал,
				Истина);
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ФоновоеЗаданиеОтменить(ИдентификаторЗадания)
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;

	Если Расшифровка.Свойство("Документ") Тогда
		ПоказатьЗначение(,Расшифровка.Документ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти