#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура СформироватьОтчет(Результат, ВыбранныеДокументы) Экспорт

	Результат.Очистить();
	
	Макет = ПолучитьМакет("Макет");
	
	Если ВыводитьСправочники Тогда
		ВывестиИнформациюОСправочнике(Макет, Результат);
	КонецЕсли;
	
	Если ВыводитьДокументы Тогда
		ВывестиИнформациюОДокументах(Макет, Результат, ВыбранныеДокументы);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВывестиИнформациюОСправочнике(Макет, Результат)

	ВывестиОбластьБезПараметров("ПустаяСтрока", Макет, Результат);
	ВывестиОбластьБезПараметров("ЗаголовокСправочник", Макет, Результат);
	ВывестиОбластьБезПараметров("ПустаяСтрока", Макет, Результат);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.ИНН,
	|	Контрагенты.КПП,
	|	СостоянияКонтрагентов.Состояние КАК Проблема
	|ИЗ
	|	РегистрСведений.СостоянияКонтрагентов КАК СостоянияКонтрагентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО СостоянияКонтрагентов.Контрагент = Контрагенты.Ссылка
	|ГДЕ
	|	НЕ Контрагенты.ПометкаУдаления
	|	И НЕ Контрагенты.Предопределенный
	|	И СостоянияКонтрагентов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСуществованияКонтрагента.КонтрагентНеПодлежитПроверке)
	|			И СостоянияКонтрагентов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСуществованияКонтрагента.КонтрагентЕстьВБазеФНС)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВывестиОбластьБезПараметров("ШапкаСправочник", Макет, Результат);
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Цвета = ПроверкаКонтрагентовВызовСервера.ЦветаРезультатовПроверки();
	
	ОбластьСтрокаСправочник = Макет.ПолучитьОбласть("СтрокаСправочник");
	НомерСтроки = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаСправочник.Параметры, Выборка);
		ОбластьСтрокаСправочник.Параметры.НомерСтроки = НомерСтроки;
		Если Выборка.Проблема = Перечисления.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП Тогда
			ОбластьСтрокаСправочник.Области.СтрокаСправочникПроблема.ЦветТекста = Цвета.ЦветТекстаКонтрагентаПрекратившегоДеятельность;
		ИначеЕсли Выборка.Проблема = Перечисления.СостоянияСуществованияКонтрагента.ПустойИННИлиКПП Тогда
			ОбластьСтрокаСправочник.Области.СтрокаСправочникПроблема.ЦветТекста = Цвета.ЦветТекстаКонтрагентаНеЗаполненИННКПП;
		Иначе
			ОбластьСтрокаСправочник.Области.СтрокаСправочникПроблема.ЦветТекста = Цвета.ЦветТекстаНекорректногоКонтрагента;
		КонецЕсли;
		
		Результат.Вывести(ОбластьСтрокаСправочник);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиИнформациюОДокументах(Макет, Результат, ВыбранныеДокументы)
	
	ВывестиОбластьБезПараметров("ПустаяСтрока", Макет, Результат);
	ВывестиОбластьБезПараметров("ЗаголовокДокумент", Макет, Результат);
	ВывестиОбластьБезПараметров("ПустаяСтрока", Макет, Результат);
	
	ТекстУсловияПоТипамДокументов = "";
	
	НеобходимоИли = Ложь;
	Для Каждого ЭлементСписка Из ВыбранныеДокументы Цикл
		
		Если ЭлементСписка.Пометка Тогда
			ТекстУсловияПоТипамДокументов = ТекстУсловияПоТипамДокументов + Символы.ПС
			                                + ?(НеобходимоИли, " ИЛИ ", "")
			                                + "ДокументыСОшибкамиПроверкиКонтрагентов.Документ ССЫЛКА Документ." 
			                                + ЭлементСписка.Значение;
			
			НеобходимоИли = Истина;
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстУсловияПоТипамДокументов) Тогда
		Возврат;
	Иначе
		ТекстУсловияПоТипамДокументов = "И (" + ТекстУсловияПоТипамДокументов + ")";
	КонецЕсли;
	
	ТекстУсловияПоДате = "";
	Если ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		ТекстУсловияПоДате = Символы.ПС + "И ДокументыСОшибкамиПроверкиКонтрагентов.Документ.Дата Между &НачалоПериода И &КонецПериода";
	ИначеЕсли ЗначениеЗаполнено(НачалоПериода) Тогда
		ТекстУсловияПоДате = Символы.ПС + "И ДокументыСОшибкамиПроверкиКонтрагентов.Документ.Дата > &НачалоПериода";
	ИначеЕсли ЗначениеЗаполнено(КонецПериода) Тогда
		ТекстУсловияПоДате = Символы.ПС + "И ДокументыСОшибкамиПроверкиКонтрагентов.Документ.Дата < &КонецПериода";
	КонецЕсли;

	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыСОшибкамиПроверкиКонтрагентов.Документ
	|ИЗ
	|	РегистрСведений.ДокументыСОшибкамиПроверкиКонтрагентов КАК ДокументыСОшибкамиПроверкиКонтрагентов
	|ГДЕ
	|	НЕ ДокументыСОшибкамиПроверкиКонтрагентов.Документ.ПометкаУдаления
	|	%ТекстУсловияПоДате%
	|	%ТекстУсловияВидыДокументов%
	|УПОРЯДОЧИТЬ ПО ДокументыСОшибкамиПроверкиКонтрагентов.Документ.Дата УБЫВ
	|";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ТекстУсловияВидыДокументов%", ТекстУсловияПоТипамДокументов);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ТекстУсловияПоДате%", ТекстУсловияПоДате);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ОбластьСтрокаДокумент = Макет.ПолучитьОбласть("СтрокаДокумент");
	
	Выборка = РезультатЗапроса.Выбрать();
	
	НомерСтроки = 0;
	Пока Выборка.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьСтрокаДокумент.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрокаДокумент.Параметры.Документ = Выборка.Документ;
		
		Результат.Вывести(ОбластьСтрокаДокумент);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиОбластьБезПараметров(ИмяОбласти,Макет,ТаблицаОтчета)

	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	ТаблицаОтчета.Вывести(Область);

КонецПроцедуры

#КонецОбласти

#КонецЕсли