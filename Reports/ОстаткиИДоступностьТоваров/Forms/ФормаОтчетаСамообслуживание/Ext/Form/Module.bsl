#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДоступностьПоДатам = Истина;
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Склад") Тогда
		
		Если ТипЗнч(Параметры.Отбор.Склад) = Тип("СправочникСсылка.Склады") Тогда
			Элементы.Склад.СписокВыбора.Добавить(Параметры.Отбор.Склад);
			Склад = Параметры.Отбор.Склад;
			Элементы.Склад.Доступность = Ложь;
		Иначе
			Элементы.Склад.СписокВыбора.ЗагрузитьЗначения(Параметры.Отбор.Склад.ВыгрузитьЗначения());
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	СкладПриИзмененииСервер();
	УстановитьСостояниеОтчетНеСформирован();
	
КонецПроцедуры

&НаКлиенте
Процедура АртикулПриИзменении(Элемент)
	
	ЭлементыОтбора = Отчет.КомпоновщикНастроек.ФиксированныеНастройки.Отбор;
	Если ПустаяСтрока(Артикул) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементыОтбора, "Номенклатура.Артикул", "", ,,Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементыОтбора, "Номенклатура.Артикул", Артикул,ВидСравненияКомпоновкиДанных.Содержит , , Истина);
	КонецЕсли;
	
	УстановитьСостояниеОтчетНеСформирован();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступностьПоДатамПриИзменении(Элемент)
	
	Для Каждого ЭлементНастроек Из Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементНастроек) = Тип("ГруппировкаКомпоновкиДанных") Тогда
			ЭлементНастроек.Использование = ДоступностьПоДатам;
		КонецЕсли;
	КонецЦикла;
	УстановитьСостояниеОтчетНеСформирован();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СкладПриИзмененииСервер()

	ЭлементыОтбора = Отчет.КомпоновщикНастроек.ФиксированныеНастройки.Отбор;
	СписокОтбора = Новый СписокЗначений;
	МассивДоступныхСкладов = Элементы.Склад.СписокВыбора.ВыгрузитьЗначения();
	
	Если Не ЗначениеЗаполнено(Склад) Тогда
		
		СписокОтбора.ЗагрузитьЗначения(МассивДоступныхСкладов);
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склады.Ссылка КАК Склад
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка В ИЕРАРХИИ(&ВыбранныйСклад)
		|	И Склады.Ссылка В(&ДоступныеСклады)";
		
		Запрос.УстановитьПараметр("ДоступныеСклады",МассивДоступныхСкладов);
		Запрос.УстановитьПараметр("ВыбранныйСклад",Склад);
		
		СписокОтбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад"));
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементыОтбора, "Склад", СписокОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСостояниеОтчетНеСформирован()
	
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	Элементы.Результат.ОтображениеСостояния.Текст = НСтр("ru = 'Отчет не сформирован. Нажмите ""Сформировать"" для получения отчета.'");
	Элементы.Результат.ОтображениеСостояния.Видимость = Истина;
	
КонецПроцедуры

#КонецОбласти
