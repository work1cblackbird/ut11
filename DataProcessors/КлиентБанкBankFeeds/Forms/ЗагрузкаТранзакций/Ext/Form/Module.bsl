
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БанковскийСчетОтбор = Параметры.БанковскийСчет;

	ЗаполнитьНачальныеЗначения(БанковскийСчетОтбор);
	
	ЗагруженныеДокументы.Параметры.УстановитьЗначениеПараметра("ИдОбъектаПоступлениеБезналичныхДС",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПоступлениеБезналичныхДенежныхСредств"));
	ЗагруженныеДокументы.Параметры.УстановитьЗначениеПараметра("ИдОбъектаСписаниеБезналичныхДС",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СписаниеБезналичныхДенежныхСредств"));
		
	ИмяЖурнала = "ЗагруженныеДокументы";
	
	Объект.СоздаватьКонтрагентов = Истина;
	Объект.ПроводитьДокументы = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовЗагруженныхДокументов

&НаКлиенте
Процедура ЗагруженныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияУТКлиент.ИзменитьЭлемент(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагруженныеДокументыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ОбщегоНазначенияУТКлиент.ИзменитьЭлемент(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагруженныеДокументыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ОбщегоНазначенияУТКлиент.УстановитьПометкуУдаления(Элемент, Заголовок)
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагруженныеДокументыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		МассивВыделенныхСтрок = Элементы[ИмяЖурнала].ВыделенныеСтроки;
		
		Для Каждого ВыделеннаяСтрока Из МассивВыделенныхСтрок Цикл 

			ТекущиеДанные = Элементы[ИмяЖурнала].ДанныеСтроки(ВыделеннаяСтрока);
		
			ВыборКонтрагентаНаСервере(
				ТекущиеДанные.ИмяКонтрагента,
				ВыбранноеЗначение,
				ТекущиеДанные.ДанныеВыписки,
				ТекущиеДанные.БанковскийСчет,
				ТекущиеДанные["Ссылка"]);
				
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагруженныеДокументыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскиеСчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияУТКлиент.ИзменитьЭлемент(Элемент);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтметитьСчета(Команда)
	
	Объект.СписокСчетов.Очистить();
	Для Каждого Счет Из Объект.БанковскиеСчета Цикл
		Счет.Пометка = Истина;
		Объект.СписокСчетов.Добавить(Счет.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкиСчетов(Команда)
	
	Объект.СписокСчетов.Очистить();
	Для Каждого Счет Из Объект.БанковскиеСчета Цикл
		Счет.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокСчетов(Команда)
	
	ЗаполнитьБанковскиеСчета();
	
КонецПроцедуры

&НаКлиенте
Процедура Провести(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиДокументы(Элементы.ЗагруженныеДокументы, Заголовок);
	Оповестить("Запись_ДокументОплаты", , Элементы.ЗагруженныеДокументы);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКонтрагента(Команда)
	
	ТекущиеДанные = Элементы[ИмяЖурнала].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Контрагент     = ТекущиеДанные.Контрагент;
	ИмяКонтрагента = ТекущиеДанные.ИмяКонтрагента;
	ДанныеВыписки  = ТекущиеДанные.ДанныеВыписки;
	
	Если ПустыеКлючиРеестра.НайтиПоЗначению(Контрагент) = Неопределено
		И ЗначениеЗаполнено(Контрагент) Тогда
		
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'В документе %1 уже задан контрагент %2. Его можно изменить в форме документа.'"),
				ТекущиеДанные["Ссылка"],
				ТекущиеДанные.Контрагент);
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			ТекстСообщения,
			ТекущиеДанные["Ссылка"],,
			Элементы.ЗагруженныеДокументыКонтрагент.Имя);
		
	ИначеЕсли ПустаяСтрока(ИмяКонтрагента) Тогда
		
		ТекстСообщения = НСтр("ru = 'Неизвестно наименование контрагента, автоматическое создание невозможно.'");
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			ТекстСообщения,
			ТекущиеДанные["Ссылка"],,
			Элементы.ЗагруженныеДокументыКонтрагент.Имя);
		
	Иначе
		
		Если Не ЗначениеЗаполнено(ДанныеВыписки) Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось создать контрагента автоматически.
			|Создайте контрагента вручную и подставьте в документ.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				ТекстСообщения,
				ТекущиеДанные["Ссылка"],,
				Элементы.ЗагруженныеДокументыКонтрагент.Имя);
			Возврат;
		КонецЕсли;
		
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКонтрагента(Команда)
	
	ТекущиеДанные = Элементы[ИмяЖурнала].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Контрагент    = ТекущиеДанные.Контрагент;
	
	Если ПустыеКлючиРеестра.НайтиПоЗначению(Контрагент) = Неопределено
		И ЗначениеЗаполнено(Контрагент) Тогда
		
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'В документе %1 уже задан контрагент %2. Его можно изменить в форме документа.'"),
				ТекущиеДанные["Ссылка"],
				ТекущиеДанные.Контрагент);
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			ТекстСообщения,
			ТекущиеДанные["Ссылка"],,
			Элементы.ЗагруженныеДокументыКонтрагент.Имя);
	Иначе
		
		ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора",, Элементы[ИмяЖурнала]);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДокументы(Команда)
	
	Объект.ДокументыКЗагрузке.Очистить();
	
	ПараметрыЗагрузки = Новый Структура();
	ПараметрыЗагрузки.Вставить("АдресБанковскихСчетов", БанковскиеСчетаДляЗагрузки());
	ПараметрыЗагрузки.Вставить("ДатаНачала", НачалоДня(Объект.ДатаНачала));
	ПараметрыЗагрузки.Вставить("ДатаОкончания", КонецДня(Объект.ДатаОкончания));
	ПараметрыЗагрузки.Вставить("СоздаватьКонтрагентов", Объект.СоздаватьКонтрагентов);
	ПараметрыЗагрузки.Вставить("ПроводитьДокументы", Объект.ПроводитьДокументы);
	ПараметрыЗагрузки.Вставить("ДатаНачала", НачалоДня(Объект.ДатаНачала));
	ПараметрыЗагрузки.Вставить("ЗагрузкаВыполняетсяПриСинхронизации", Ложь);
	ПараметрыЗагрузки.Вставить("РежимЗаполненияКонтрагентаПоQRПлатежу", 0);

	ОбменССервисомBankFeedsКлиент.ЗагрузитьТранзакции(ПараметрыЗагрузки, ЭтотОбъект);	
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетОтборПриИзменении(Элемент)
	
	БанковскийСчетОтборПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура БанковскийСчетОтборПриИзмененииСервер()
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНачальныеЗначения(БанковскийСчет)
	
	ТекущаяДата = ТекущаяДатаСеанса(); 
	
	Объект.ДатаНачала = НачалоДня(КонецДня(ТекущаяДата) - 2*60*60*24);
	Объект.ДатаОкончания = КонецДня(ТекущаяДата);

	ЗаполнитьБанковскиеСчета();	
	
	Если ЗначениеЗаполнено(БанковскийСчет)
		И ЗначениеЗаполнено(БанковскийСчет) Тогда
		
		СтрокиТаблицы = Объект.БанковскиеСчета.НайтиСтроки(Новый Структура("Ссылка", БанковскийСчет));
		Если СтрокиТаблицы.Количество() Тогда
			СтрокиТаблицы[0].Пометка = Истина;
			Объект.СписокСчетов.Добавить(СтрокиТаблицы[0]["Ссылка"]);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьБанковскиеСчета()

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодключенияКБанкамBankFeeds.Организация КАК Организация,
	|	ПодключенияКБанкамBankFeeds.Банк КАК Банк,
	|	ПодключенияКБанкамBankFeeds.НастройкиСервиса КАК НастройкиСервиса,
	|	БанковскиеСчетаОрганизаций.Ссылка КАК Ссылка,
	|	БанковскиеСчетаОрганизаций.НомерСчета КАК НомерСчета,
	|	БанковскиеСчетаОрганизаций.Ссылка КАК БанковскийСчет
	|ИЗ
	|	РегистрСведений.ПодключенияКБанкамBankFeeds КАК ПодключенияКБанкамBankFeeds
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|		ПО ПодключенияКБанкамBankFeeds.Банк = БанковскиеСчетаОрганизаций.Банк
	|		И ПодключенияКБанкамBankFeeds.Организация = БанковскиеСчетаОрганизаций.Владелец
	|ГДЕ
	|	БанковскиеСчетаОрганизаций.ИдентификаторСчетаBankFeeds <> """"
	|	И НЕ БанковскиеСчетаОрганизаций.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодключенияКБанкамBankFeeds.Организация,
	|	ПодключенияКБанкамBankFeeds.Банк,
	|	ПодключенияКБанкамBankFeeds.НастройкиСервиса,
	|	БанковскиеСчетаОрганизаций.Ссылка,
	|	БанковскиеСчетаОрганизаций.НомерСчета,
	|	БанковскиеСчетаОрганизаций.Ссылка
	|ИЗ
	|	РегистрСведений.ПодключенияКБанкамBankFeeds КАК ПодключенияКБанкамBankFeeds
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|		ПО ПодключенияКБанкамBankFeeds.Банк = БанковскиеСчетаОрганизаций.Ссылка
	|		И ПодключенияКБанкамBankFeeds.Организация = БанковскиеСчетаОрганизаций.Владелец
	|ГДЕ
	|	БанковскиеСчетаОрганизаций.ИдентификаторСчетаBankFeeds <> """"";
	
	ПодключенныеБанковскиеСчета = Запрос.Выполнить().Выгрузить();
	
	Объект.БанковскиеСчета.Загрузить(ПодключенныеБанковскиеСчета);
	
КонецПроцедуры	

&НаСервере
Функция БанковскиеСчетаДляЗагрузки()
	
	ТаблицаОтмеченныхСчетов = Объект.БанковскиеСчета.Выгрузить(Новый Структура("Пометка", Истина));	
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаОтмеченныхСчетов);
	
КонецФункции	

&НаСервере
Процедура ВыборКонтрагентаНаСервере(ИмяКонтрагента, Контрагент, ДанныеВыписки, БанковскийСчет, ДокументСсылка)
	
	Если Не ПустаяСтрока(ДанныеВыписки) Тогда
		
		ДанныеДокумента = Новый ТаблицаЗначений();
		
		Если ДанныеДокумента = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ДанныеДокумента.Вставить("Контрагент", Контрагент);
		
		ПодставитьКонтрагентаНаСервере(ИмяКонтрагента, Контрагент, ДанныеДокумента, БанковскийСчет)
		
	Иначе
		
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		
		Попытка
			ДокументОбъект.Заблокировать();
		Исключение
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось изменить документ: %1'"), ДокументОбъект);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;
		
		ДокументОбъект.Контрагент = Контрагент;
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОбменСБанками", Истина);
		ДокументОбъект.ПроверитьЗаполнение();
		Если ДокументОбъект.ДополнительныеСвойства.Свойство("ОшибкиЗаполнения") Тогда
			ДокументОбъект.ОшибкиЗагрузки = СокрЛП(ДокументОбъект.ДополнительныеСвойства.ОшибкиЗаполнения);
		КонецЕсли;
		
		ДокументОбъект.Записать();
		
		ТаблицаФормы = Элементы[ИмяЖурнала]; // ТаблицаФормы
		ТаблицаФормы.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодставитьКонтрагентаНаСервере(ИмяКонтрагента, НайденныйКонтрагент, ДанныеДокумента, БанковскийСчет)
	
	ДокументыВыписки = Объект.ДокументыКЗагрузке.Выгрузить();
	ДокументыВыписки.Добавить();
	ЗаполнитьЗначенияСвойств(ДокументыВыписки[0], ДанныеДокумента);
	
	СчетКонтрагента = НайтиСчетКонтрагента(НайденныйКонтрагент, ДокументыВыписки);
	
	Если СчетКонтрагента = Неопределено Тогда
		СчетКонтрагента =
			КлиентБанкСервер.СоздатьБанковскийСчетКонтрагента(ДокументыВыписки, ДокументыВыписки[0], 
																							НайденныйКонтрагент);
	КонецЕсли;
	
	Партнер = ДенежныеСредстваСервер.ПолучитьПартнераПоКонтрагенту(НайденныйКонтрагент);
	
	ПодставитьКонтрагентаВДокументы(ИмяКонтрагента, НайденныйКонтрагент, СчетКонтрагента, Партнер);
	
	ТаблицаФормы = Элементы[ИмяЖурнала]; // ТаблицаФормы
	ТаблицаФормы.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ПодставитьКонтрагентаВДокументы(ИмяКонтрагента, КонтрагентСсылка, СчетСсылка, ПартнерСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.ИмяКонтрагента = &ИмяКонтрагента
	|	И ДанныеДокумента.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.ИмяКонтрагента = &ИмяКонтрагента
	|	И ДанныеДокумента.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|";
	
	Запрос.УстановитьПараметр("ИмяКонтрагента", ИмяКонтрагента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Попытка
			ДокументОбъект.Заблокировать();
		Исключение
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось изменить документ: %1'"), ДокументОбъект);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;
		
		ДокументОбъект.Контрагент = КонтрагентСсылка;
		ДокументОбъект.БанковскийСчетКонтрагента = СчетСсылка;
		
		ДокументОбъект.Контрагент = КонтрагентСсылка;
		
		Для каждого СтрокаТЧ Из ДокументОбъект.РасшифровкаПлатежа Цикл
			СтрокаТЧ.Партнер = ПартнерСсылка;
		КонецЦикла;
		
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОбменСБанками", Истина);
		ДокументОбъект.ПроверитьЗаполнение();
		Если ДокументОбъект.ДополнительныеСвойства.Свойство("ОшибкиЗаполнения") Тогда
			ДокументОбъект.ОшибкиЗагрузки = СокрЛП(ДокументОбъект.ДополнительныеСвойства.ОшибкиЗаполнения);
		КонецЕсли;
		
		ДокументОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НайтиСчетКонтрагента(Контрагент, ДокументыВыписки)
	
	СтрокаДокумента = ДокументыВыписки[0];
	СтрокаДокумента["НомерСтроки"] = 0;
	СтрокаДокумента.Контрагент = Контрагент;
	
	КлиентБанкСервер.ЗаполнитьКонтрагентов(ДокументыВыписки, ДокументыВыписки);
	
	СчетКонтрагента = ДокументыВыписки[0].СчетКонтрагента;
	Если ЗначениеЗаполнено(СчетКонтрагента) Тогда
		Возврат СчетКонтрагента;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	СписокСчетов = Новый СписокЗначений;
	
	СписокСчетовПоСчету = Справочники.БанковскиеСчетаОрганизаций.БанковскиеСчетаКаталога(БанковскийСчетОтбор);
	
	Если СписокСчетовПоСчету.Количество() <> 0 Тогда
		СписокСчетов.ЗагрузитьЗначения(СписокСчетовПоСчету);
	КонецЕсли;
	
	СписокСчетов.Добавить(БанковскийСчетОтбор);
	СписокСчетов.Добавить(Справочники.БанковскиеСчетаОрганизаций.ПустаяСсылка());
	СписокСчетов.Добавить(Неопределено);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		ЗагруженныеДокументы,
		"БанковскийСчет",
		СписокСчетов,
		ВидСравненияКомпоновкиДанных.ВСписке,,
		ЗначениеЗаполнено(БанковскийСчетОтбор));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		ЗагруженныеДокументы,
		"ОшибкиЗагрузки",,
		ВидСравненияКомпоновкиДанных.Заполнено,,
		ТолькоПлатежиСОшибками = 1);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		ЗагруженныеДокументы,
		"Проведен",
		Ложь,
		ВидСравненияКомпоновкиДанных.Равно,,
		ТолькоПлатежиСОшибками = 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоПлатежиСОшибкамиПриИзменении(Элемент)
	
	ТолькоПлатежиСОшибкамиПриИзмененииСервер();

КонецПроцедуры

&НаСервере
Процедура ТолькоПлатежиСОшибкамиПриИзмененииСервер()
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскиеСчетаПометкаПриИзменении(Элемент)
	
	Объект.СписокСчетов.Очистить();
	Для каждого Счет Из Объект.БанковскиеСчета Цикл
		Если Счет.Пометка Тогда
			Счет.Загружен = Ложь;
			Объект.СписокСчетов.Добавить(Счет.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница.Имя = "СтраницаЗагруженныеДокументы" Тогда
		Если Объект.СписокСчетов.Количество() = 1 Тогда
			Если БанковскийСчетОтбор <> Объект.СписокСчетов[0].Значение Тогда
				БанковскийСчетОтбор = Объект.СписокСчетов[0].Значение;
				УстановитьОтборДинамическихСписков();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

