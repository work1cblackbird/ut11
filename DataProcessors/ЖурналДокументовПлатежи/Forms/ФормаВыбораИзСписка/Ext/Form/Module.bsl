
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа
		Возврат;
	КонецЕсли;
	
	РежимВыбораКассБанковскихСчетов = Параметры.Режим = 1;
	Элементы.ПоказатьЗакрытыеСчета.Видимость = РежимВыбораКассБанковскихСчетов;
	Список = Параметры.Список;
	ПолныйСписок = Параметры.Список.Скопировать();
	
	Элементы.Список.ВысотаВСтрокахТаблицы = Список.Количество();
	
	Параметры.Свойство("Заголовок", ЭтаФорма.Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если РежимВыбораКассБанковскихСчетов Тогда
		ПоказатьСкрытьЗакрытыеБанковскиеСчета();
	Иначе
		Список = ПолныйСписок;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказатьЗакрытыеСчетаПриИзменении(Элемент)
	
	ПоказатьСкрытьЗакрытыеБанковскиеСчета();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Список[ВыбраннаяСтрока].Пометка = Не Список[ВыбраннаяСтрока].Пометка;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура ПометкаПриИзменении(Элемент)
	
	СтрокаСписка = Элементы.Список.ТекущиеДанные;
	НайденноеЗначение = ПолныйСписок.НайтиПоЗначению(СтрокаСписка.Значение);
	НайденноеЗначение.Пометка = СтрокаСписка.Пометка;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОповеститьОВыборе(ПолныйСписок);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПоказатьСкрытьЗакрытыеБанковскиеСчета()
	
	Если Не ПоказатьЗакрытыеСчета Тогда
		
		НовыйСписок = Новый СписокЗначений;
		ТаблицаСчетов = Новый ТаблицаЗначений;
		ТипыКолонки = Новый Массив;
		
		ТипыКолонки.Добавить(Тип("СправочникСсылка.Кассы"));
		ТипыКолонки.Добавить(Тип("СправочникСсылка.БанковскиеСчетаОрганизаций"));
		
		ТаблицаСчетов.Колонки.Добавить("СчетКасса", Новый ОписаниеТипов(ТипыКолонки));
		ТаблицаСчетов.Колонки.Добавить("Пометка", Новый ОписаниеТипов("Булево"));
		
		Для Каждого ТекущееЭлементСписка Из ПолныйСписок Цикл
			
			НоваяСтрока = ТаблицаСчетов.Добавить();
			НоваяСтрока.СчетКасса = ТекущееЭлементСписка.Значение;
			НоваяСтрока.Пометка = ТекущееЭлементСписка.Пометка;
			
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СписокСчетов.СчетКасса КАК СчетКасса,
			|	СписокСчетов.Пометка КАК Пометка
			|ПОМЕСТИТЬ ПолныйСписок
			|ИЗ
			|	&СписокКассСчетов КАК СписокСчетов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПолныйСписок.СчетКасса КАК СчетКасса,
			|	ПолныйСписок.Пометка КАК Пометка,
			|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.Закрыт, ЛОЖЬ) КАК Закрыт
			|ИЗ
			|	ПолныйСписок КАК ПолныйСписок
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
			|		ПО ПолныйСписок.СчетКасса = БанковскиеСчетаОрганизаций.Ссылка";
		
		Запрос.УстановитьПараметр("СписокКассСчетов", ТаблицаСчетов);
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
		
		Пока РезультатЗапроса.Следующий() Цикл
			
			Если Не РезультатЗапроса.Закрыт Тогда
				НовыйСписок.Добавить(РезультатЗапроса.СчетКасса, , РезультатЗапроса.Пометка);
			Иначе
				Если РезультатЗапроса.Пометка Тогда
					ТекущееЗначение = ПолныйСписок.НайтиПоЗначению(РезультатЗапроса.СчетКасса);
					ТекущееЗначение.Пометка = Ложь;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Список = НовыйСписок;
		
	Иначе
		Список = ПолныйСписок;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти