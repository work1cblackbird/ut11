#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ19") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ИНВ19",
			НСтр("ru = 'Сличительная ведомость'"),
			СформироватьПечатнуюФормуИНВ19(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	

КонецПроцедуры

Функция СформироватьПечатнуюФормуИНВ19(СтруктураТипов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСверху = 10;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.ПолеСнизу = 10;
	ТабличныйДокумент.ПолеСправа = 10;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Ложь;
	ТабличныйДокумент.МасштабПечати = 89;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНВ19";
	
	НомерДокумента = 0;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
				
		Если СтруктураОбъектов.Ключ <> "Документ.ИнвентаризационнаяОпись" Тогда 
			ТекстСообщения = НСтр("ru = 'Формирование печатной формы ""ИНВ-19"" доступно только для документов ""%ТипДокумента%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДокумента%", Метаданные.Документы.ИнвентаризационнаяОпись.Синоним);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		КонецЕсли;
		
		Для Каждого ДокументОснование Из СтруктураОбъектов.Значение Цикл
			
			НомерДокумента = НомерДокумента + 1;
			Если НомерДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыИНВ19(ПараметрыПечати, ДокументОснование);	
			Если НЕ ДанныеДляПечати = Неопределено Тогда
				ЗаполнитьТабличныйДокументИНВ19(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ДокументОснование);
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Параметры:
// 	ТабличныйДокумент - ТабличныйДокумент
// 	ДанныеДляПечати - Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатКурсВалюты - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
// 		* РезультатСвязанныеТовары - РезультатЗапроса
//	ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати.
//	ИнвентаризационнаяОпись - ДокументСсылка - ссылка на документ инвентаризационной описи.
//
Процедура ЗаполнитьТабличныйДокументИНВ19(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ИнвентаризационнаяОпись)
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ТаблицаТоваров = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
	
	Если ДанныеДляПечати.РезультатКурсВалюты <> Неопределено И ДанныеДляПечати.РезультатСвязанныеТовары = Неопределено Тогда
		ПечатьПоВидуЦен = Истина;
		КурсВалюты = ДанныеДляПечати.РезультатКурсВалюты.Выбрать();
		Если КурсВалюты.Следующий() Тогда
			КоэффициентПересчета = КурсВалюты.КоэффициентПересчета;
		Иначе
			КоэффициентПересчета = 1;
		КонецЕсли;
	ИначеЕсли ДанныеДляПечати.РезультатКурсВалюты = Неопределено И ДанныеДляПечати.РезультатСвязанныеТовары <> Неопределено Тогда
		ПечатьПоВидуЦен = Ложь;
		КоэффициентПересчета = 1;
	Иначе       		
		ТекстСообщения = НСтр("ru='Неверные данные для печати.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;		
	КонецЕсли;
	
	Если ТаблицаТоваров.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='В рамках периода документа ""%Опись%"" не были оформлены складские акты. Нет данных для формирования печатной формы ""ИНВ-19""'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Опись%", ИнвентаризационнаяОпись);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ИнвентаризационнаяОпись);
		Возврат;
	КонецЕсли;
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьИНВ19.ПФ_MXL_ИНВ19_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапки = Макет.ПолучитьОбласть("ШапкаТаблицы");     
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапки_Лист2 = Макет.ПолучитьОбласть("ШапкаТаблицы_Лист2");     
	МассивСтрок_Лист2 = Новый ТабличныйДокумент;
	ОбластьСтроки_Лист2 = Макет.ПолучитьОбласть("Строка_Лист2");
	ОбластьПодвал_Лист2 = Макет.ПолучитьОбласть("Подвал_Лист2");
	
	Шапка.Следующий();
	
	ОбластьЗаголовок.Параметры.Заполнить(Шапка);
	ДанныеОбласти = Новый Структура;
	ДанныеОбласти.Вставить("ДолжностьМОЛ1", Шапка.ДолжностьКладовщика);
	ДанныеОбласти.Вставить("ФИОМОЛ1", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Кладовщик, Шапка.ДатаДокумента));
	ДанныеОбласти.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	ДанныеОбласти.Вставить("ОснованиеНомер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.ОснованиеНомер));
	НаименованияНаДату = ОрганизацииПовтИсп.НаименованияНаДату(Шапка.Организация, Шапка.ДатаДокумента);
	ДанныеОбласти.Вставить("ОрганизацияПредставление", НаименованияНаДату.НаименованиеСокращенное);
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеОбласти);
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, Шапка.Ссылка);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ИтоговыеСуммы = Новый Структура;
	
	ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаСумма",0);
	
	ИтоговыеСуммы.Вставить("ИтогоПересортИзлишкиКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоПересортИзлишкиСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоПересортНедостачиКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоПересортНедостачиСумма",0);
	
	ИтоговыеСуммы.Вставить("ИтогоПриходИзлишковКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоПриходИзлишковСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоСписаниеНедостачКолонкаКолво",0);
	ИтоговыеСуммы.Вставить("ИтогоСписаниеНедостачКолонкаСумма",0);
	
	НомерСтроки = 0;
	НомерСтраницы = 1;
	
	ОписаниеТиповСумма = РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля();
	
	ТаблицаТоваровРезультат = Новый ТаблицаЗначений;
	ТаблицаТоваровРезультат.Колонки.Добавить("НомерСтроки");
	ТаблицаТоваровРезультат.Колонки.Добавить("НомерСвязаннойСтроки");
	ТаблицаТоваровРезультат.Колонки.Добавить("Номенклатура");
	ТаблицаТоваровРезультат.Колонки.Добавить("Характеристика");
	ТаблицаТоваровРезультат.Колонки.Добавить("Серия");
	ТаблицаТоваровРезультат.Колонки.Добавить("ТоварНаименование");
	ТаблицаТоваровРезультат.Колонки.Добавить("ТоварКод");
	ТаблицаТоваровРезультат.Колонки.Добавить("ЕдиницаИзмеренияКод");
	ТаблицаТоваровРезультат.Колонки.Добавить("ЕдиницаИзмеренияНаименование");
	ТаблицаТоваровРезультат.Колонки.Добавить("КоличествоИзлишков");
	ТаблицаТоваровРезультат.Колонки.Добавить("СуммаИзлишков", ОписаниеТиповСумма);
	ТаблицаТоваровРезультат.Колонки.Добавить("КоличествоНедостачи");
	ТаблицаТоваровРезультат.Колонки.Добавить("СуммаНедостачи", ОписаниеТиповСумма);
	ТаблицаТоваровРезультат.Колонки.Добавить("ПересортИзлишкиКолво");
	ТаблицаТоваровРезультат.Колонки.Добавить("ПересортИзлишкиСумма", ОписаниеТиповСумма);
	ТаблицаТоваровРезультат.Колонки.Добавить("ПересортИзлишкиНомер");
	ТаблицаТоваровРезультат.Колонки.Добавить("ПересортНедостачиКолво");
	ТаблицаТоваровРезультат.Колонки.Добавить("ПересортНедостачиСумма", ОписаниеТиповСумма);
	ТаблицаТоваровРезультат.Колонки.Добавить("ПересортНедостачиНомер");
	ТаблицаТоваровРезультат.Колонки.Добавить("ПриходИзлишковКолво");
	ТаблицаТоваровРезультат.Колонки.Добавить("ПриходИзлишковСумма", ОписаниеТиповСумма);
	ТаблицаТоваровРезультат.Колонки.Добавить("СписаниеНедостачКолонкаКолво");
	ТаблицаТоваровРезультат.Колонки.Добавить("СписаниеНедостачКолонкаСумма", ОписаниеТиповСумма);
	
	Если Не ПечатьПоВидуЦен Тогда
		ТаблицаСвязанныхТоваров = ДанныеДляПечати.РезультатСвязанныеТовары.Выгрузить();
	КонецЕсли;	
	
	// Организовываем таблицу значений с товарами, организуя при этом связанные строки
	Для каждого СтрокаТоваров Из ТаблицаТоваров Цикл
		
		Если СтрокаТоваров.Операция = "1_Списание" Тогда
			НоваяСтрока = НоваяСтрокаТаблицыРезультатов(ТаблицаТоваровРезультат, СтрокаТоваров, НомерСтроки);
			
			НоваяСтрока.КоличествоИзлишков = 0;	
			НоваяСтрока.СуммаИзлишков = 0;	
			
			НоваяСтрока.КоличествоНедостачи = СтрокаТоваров.Количество;	
			НоваяСтрока.СуммаНедостачи = СтрокаТоваров.Стоимость * СтрокаТоваров.Количество * КоэффициентПересчета;	
			
			НоваяСтрока.ПересортИзлишкиКолво = 0;	
			НоваяСтрока.ПересортИзлишкиСумма = 0;	
			НоваяСтрока.ПересортИзлишкиНомер = 0;	
			
			НоваяСтрока.ПересортНедостачиКолво = 0;	
			НоваяСтрока.ПересортНедостачиСумма = 0;	
			НоваяСтрока.ПересортНедостачиНомер = 0;	
			
			НоваяСтрока.ПриходИзлишковКолво = 0;	
			НоваяСтрока.ПриходИзлишковСумма = 0;	
			
			НоваяСтрока.СписаниеНедостачКолонкаКолво = СтрокаТоваров.Количество;	
			НоваяСтрока.СписаниеНедостачКолонкаСумма = СтрокаТоваров.Стоимость * СтрокаТоваров.Количество * КоэффициентПересчета;	
			
			ИтоговыеСуммы.ИтогоРезультатНедостачаКолво = 
				ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + СтрокаТоваров.Количество;
			
			ИтоговыеСуммы.ИтогоРезультатНедостачаСумма = 
				ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СтрокаТоваров.Стоимость * СтрокаТоваров.Количество * КоэффициентПересчета;
			
			ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаКолво = 
				ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаКолво + СтрокаТоваров.Количество;
			
			ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаСумма = 
				ИтоговыеСуммы.ИтогоСписаниеНедостачКолонкаСумма + СтрокаТоваров.Стоимость * СтрокаТоваров.Количество * КоэффициентПересчета;
			
		ИначеЕсли СтрокаТоваров.Операция = "2_Оприходование" Тогда
			НоваяСтрока = НоваяСтрокаТаблицыРезультатов(ТаблицаТоваровРезультат, СтрокаТоваров, НомерСтроки);
			
			НоваяСтрока.КоличествоИзлишков = СтрокаТоваров.Количество;	
			НоваяСтрока.СуммаИзлишков = СтрокаТоваров.Стоимость * СтрокаТоваров.Количество;	
			
			НоваяСтрока.КоличествоНедостачи = 0;	
			НоваяСтрока.СуммаНедостачи = 0;	
			
			НоваяСтрока.ПересортИзлишкиКолво = 0;	
			НоваяСтрока.ПересортИзлишкиСумма = 0;	
			НоваяСтрока.ПересортИзлишкиНомер = 0;	
			
			НоваяСтрока.ПересортНедостачиКолво = 0;	
			НоваяСтрока.ПересортНедостачиСумма = 0;	
			НоваяСтрока.ПересортНедостачиНомер = 0;	
			
			НоваяСтрока.ПриходИзлишковКолво = СтрокаТоваров.Количество;	
			НоваяСтрока.ПриходИзлишковСумма = СтрокаТоваров.Стоимость * СтрокаТоваров.Количество * КоэффициентПересчета;	
			
			НоваяСтрока.СписаниеНедостачКолонкаКолво = 0;	
			НоваяСтрока.СписаниеНедостачКолонкаСумма = 0;
			
			ИтоговыеСуммы.ИтогоРезультатИзлишекКолво = 
				ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + СтрокаТоваров.Количество;
			
			ИтоговыеСуммы.ИтогоРезультатИзлишекСумма = 
				ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СтрокаТоваров.Стоимость * СтрокаТоваров.Количество * КоэффициентПересчета;
			
			ИтоговыеСуммы.ИтогоПриходИзлишковКолво = 
				ИтоговыеСуммы.ИтогоПриходИзлишковКолво + СтрокаТоваров.Количество;
			
			ИтоговыеСуммы.ИтогоПриходИзлишковСумма = 
				ИтоговыеСуммы.ИтогоПриходИзлишковСумма + СтрокаТоваров.Стоимость * СтрокаТоваров.Количество * КоэффициентПересчета;
			
		ИначеЕсли СтрокаТоваров.Операция = "3_ПересортицаСписание" Тогда
			Если ПечатьПоВидуЦен Тогда
				НоваяСтрока = НоваяСтрокаТаблицыРезультатов(ТаблицаТоваровРезультат, СтрокаТоваров, НомерСтроки);
				
				НоваяСтрока.КоличествоИзлишков = 0;	
				НоваяСтрока.СуммаИзлишков = 0;	
				
				НоваяСтрока.КоличествоНедостачи = СтрокаТоваров.Количество;	
				НоваяСтрока.СуммаНедостачи = СтрокаТоваров.Стоимость * КоэффициентПересчета * СтрокаТоваров.Количество;	
				
				НоваяСтрока.ПересортНедостачиКолво = СтрокаТоваров.Количество;	
				НоваяСтрока.ПересортНедостачиСумма = СтрокаТоваров.Стоимость * КоэффициентПересчета * СтрокаТоваров.Количество;
				
				НоваяСтрока.ПересортИзлишкиКолво = 0;	
				НоваяСтрока.ПересортИзлишкиСумма = 0;	
				НоваяСтрока.ПересортИзлишкиНомер = 0;	
				
				НоваяСтрока.ПриходИзлишковКолво = 0;	
				НоваяСтрока.ПриходИзлишковСумма = 0;	
				
				НоваяСтрока.СписаниеНедостачКолонкаКолво = 0;	
				НоваяСтрока.СписаниеНедостачКолонкаСумма = 0;
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Номенклатура", СтрокаТоваров.СвязаннаяНоменклатура);
				СтруктураПоиска.Вставить("Характеристика", СтрокаТоваров.СвязаннаяХарактеристика);
				СтруктураПоиска.Вставить("Серия", СтрокаТоваров.СвязаннаяСерия);
				СтруктураПоиска.Вставить("Операция", "4_ПересортицаОприходование");
				
				СтрокаПересортицы = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска)[0];
				
				НоваяСтрока.НомерСвязаннойСтроки = ТаблицаТоваров.Индекс(СтрокаПересортицы)+1;
				
				ИтоговыеСуммы.ИтогоРезультатНедостачаКолво      = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + СтрокаТоваров.Количество;
				ИтоговыеСуммы.ИтогоРезультатНедостачаСумма      = ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СтрокаТоваров.Стоимость * КоэффициентПересчета * СтрокаТоваров.Количество;
				ИтоговыеСуммы.ИтогоПересортНедостачиКолво       = ИтоговыеСуммы.ИтогоПересортНедостачиКолво + СтрокаТоваров.Количество;
				ИтоговыеСуммы.ИтогоПересортНедостачиСумма       = ИтоговыеСуммы.ИтогоПересортНедостачиСумма + СтрокаТоваров.Стоимость * КоэффициентПересчета * СтрокаТоваров.Количество;
			Иначе
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("НоменклатураСписание", СтрокаТоваров.Номенклатура);
				СтруктураПоиска.Вставить("ХарактеристикаСписание", СтрокаТоваров.Характеристика);
				СтруктураПоиска.Вставить("СерияСписание", СтрокаТоваров.Серия);
				
				МассивСвязанныхТоваров = ТаблицаСвязанныхТоваров.НайтиСтроки(СтруктураПоиска);
				
				Индекс = 0;
				
				Пока СтрокаТоваров.Количество <> 0 И Индекс < МассивСвязанныхТоваров.Количество() Цикл
					
					ТекущийСвязанныйТовар = МассивСвязанныхТоваров[Индекс];
					
					Если ТекущийСвязанныйТовар.Количество = 0 Тогда
						Индекс = Индекс + 1;
						Продолжить;
					КонецЕсли;
					
					// Найдем и добавим оприходованный товар в таблицу результата
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("Номенклатура", ТекущийСвязанныйТовар.НоменклатураОприходование);
					СтруктураПоиска.Вставить("Характеристика", ТекущийСвязанныйТовар.ХарактеристикаОприходование);
					СтруктураПоиска.Вставить("Серия", ТекущийСвязанныйТовар.СерияОприходование);
					СтруктураПоиска.Вставить("Операция", "4_ПересортицаОприходование");
					
					МассивОприходованныхТоваров = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска);
					
					Для Каждого ОприходованныйТовар Из МассивОприходованныхТоваров Цикл
						
						Если СтрокаТоваров.Количество = 0 Тогда
							Прервать;
						КонецЕсли;
						
						Если ОприходованныйТовар.Количество = 0 Тогда
							Продолжить;
						КонецЕсли;
						
						КоличествоРаспределить = Мин(СтрокаТоваров.Количество, ОприходованныйТовар.Количество, ТекущийСвязанныйТовар.Количество);
						
						СуммаНедостачи = СтрокаТоваров.Стоимость * КоличествоРаспределить * КоэффициентПересчета;
						СуммаИзлишков = ОприходованныйТовар.Стоимость * КоличествоРаспределить * КоэффициентПересчета;
						
						// Вычтем распределенное количество
						СтрокаТоваров.Количество = СтрокаТоваров.Количество - КоличествоРаспределить;
						ОприходованныйТовар.Количество = ОприходованныйТовар.Количество - КоличествоРаспределить;
						ТекущийСвязанныйТовар.Количество = ТекущийСвязанныйТовар.Количество - КоличествоРаспределить;
						
						// Строка пересортицы списание
						НоваяСтрокаСписание = НоваяСтрокаТаблицыРезультатов(ТаблицаТоваровРезультат, СтрокаТоваров, НомерСтроки);
						НоваяСтрокаСписание.НомерСвязаннойСтроки = НомерСтроки + 1;
						
						НоваяСтрокаСписание.КоличествоНедостачи = КоличествоРаспределить;	
						НоваяСтрокаСписание.СуммаНедостачи = СуммаНедостачи;
						
						НоваяСтрокаСписание.КоличествоИзлишков = 0;	
						НоваяСтрокаСписание.СуммаИзлишков = 0;
						
						НоваяСтрокаСписание.ПересортНедостачиКолво = КоличествоРаспределить;	
						НоваяСтрокаСписание.ПересортНедостачиСумма = СуммаНедостачи;
						
						НоваяСтрокаСписание.ПересортИзлишкиКолво = 0;	
						НоваяСтрокаСписание.ПересортИзлишкиСумма = 0;	
						НоваяСтрокаСписание.ПересортИзлишкиНомер = 0;	
						
						НоваяСтрокаСписание.ПриходИзлишковКолво = 0;	
						НоваяСтрокаСписание.ПриходИзлишковСумма = 0;
						
						НоваяСтрокаСписание.СписаниеНедостачКолонкаКолво = 0;	
						НоваяСтрокаСписание.СписаниеНедостачКолонкаСумма = 0;
						
						// Строка пересортицы оприходование
						НоваяСтрокаОприходование = НоваяСтрокаТаблицыРезультатов(ТаблицаТоваровРезультат, ОприходованныйТовар, НомерСтроки);
						НоваяСтрокаОприходование.НомерСвязаннойСтроки = НомерСтроки - 1;
						
						НоваяСтрокаОприходование.КоличествоИзлишков = КоличествоРаспределить;	
						НоваяСтрокаОприходование.СуммаИзлишков = СуммаИзлишков;	
						
						НоваяСтрокаОприходование.КоличествоНедостачи = 0;	
						НоваяСтрокаОприходование.СуммаНедостачи = 0;
						
						НоваяСтрокаОприходование.ПересортИзлишкиКолво = КоличествоРаспределить;	
						НоваяСтрокаОприходование.ПересортИзлишкиСумма = СуммаИзлишков;
						
						НоваяСтрокаОприходование.ПриходИзлишковКолво = 0;	
						НоваяСтрокаОприходование.ПриходИзлишковСумма = 0;	
						
						НоваяСтрокаОприходование.СписаниеНедостачКолонкаКолво = 0;	
						НоваяСтрокаОприходование.СписаниеНедостачКолонкаСумма = 0;
						
						НоваяСтрокаОприходование.ПересортНедостачиКолво = 0;	
						НоваяСтрокаОприходование.ПересортНедостачиСумма = 0;	
						НоваяСтрокаОприходование.ПересортНедостачиНомер = 0;
						
						// Итоги
						ИтоговыеСуммы.ИтогоРезультатИзлишекКолво      = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + КоличествоРаспределить;
						ИтоговыеСуммы.ИтогоРезультатИзлишекСумма      = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СуммаИзлишков;
						ИтоговыеСуммы.ИтогоПересортИзлишкиКолво       = ИтоговыеСуммы.ИтогоПересортИзлишкиКолво + КоличествоРаспределить;
						ИтоговыеСуммы.ИтогоПересортИзлишкиСумма       = ИтоговыеСуммы.ИтогоПересортИзлишкиСумма + СуммаИзлишков;
						
						ИтоговыеСуммы.ИтогоРезультатНедостачаКолво      = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + КоличествоРаспределить;
						ИтоговыеСуммы.ИтогоРезультатНедостачаСумма      = ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СуммаНедостачи;
						ИтоговыеСуммы.ИтогоПересортНедостачиКолво       = ИтоговыеСуммы.ИтогоПересортНедостачиКолво + КоличествоРаспределить;
						ИтоговыеСуммы.ИтогоПересортНедостачиСумма       = ИтоговыеСуммы.ИтогоПересортНедостачиСумма + СуммаНедостачи;
						
					КонецЦикла;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
			КонецЕсли;				
		ИначеЕсли СтрокаТоваров.Операция = "4_ПересортицаОприходование" Тогда	
			Если ПечатьПоВидуЦен Тогда
				НоваяСтрока = НоваяСтрокаТаблицыРезультатов(ТаблицаТоваровРезультат, СтрокаТоваров, НомерСтроки);
				
				НоваяСтрока.КоличествоИзлишков = СтрокаТоваров.Количество;	
				НоваяСтрока.СуммаИзлишков = СтрокаТоваров.Стоимость * КоэффициентПересчета * СтрокаТоваров.Количество;	
				
				НоваяСтрока.КоличествоНедостачи = 0;	
				НоваяСтрока.СуммаНедостачи = 0;	
				
				НоваяСтрока.ПересортНедостачиКолво = 0;	
				НоваяСтрока.ПересортНедостачиСумма = 0;	
				НоваяСтрока.ПересортНедостачиНомер = 0;	
				
				НоваяСтрока.ПересортИзлишкиКолво = СтрокаТоваров.Количество;	
				НоваяСтрока.ПересортИзлишкиСумма = СтрокаТоваров.Стоимость * КоэффициентПересчета * СтрокаТоваров.Количество;	
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Номенклатура",СтрокаТоваров.СвязаннаяНоменклатура);
				СтруктураПоиска.Вставить("Характеристика",СтрокаТоваров.СвязаннаяХарактеристика);
				СтруктураПоиска.Вставить("Серия",СтрокаТоваров.СвязаннаяСерия);
				СтруктураПоиска.Вставить("Операция","3_ПересортицаСписание");
				
				СтрокаПересортицы = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска)[0];
				
				НоваяСтрока.НомерСвязаннойСтроки = ТаблицаТоваров.Индекс(СтрокаПересортицы)+1;	
				
				НоваяСтрока.ПриходИзлишковКолво = 0;	
				НоваяСтрока.ПриходИзлишковСумма = 0;	
				
				НоваяСтрока.СписаниеНедостачКолонкаКолво = 0;	
				НоваяСтрока.СписаниеНедостачКолонкаСумма = 0;
				
				ИтоговыеСуммы.ИтогоРезультатИзлишекКолво = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + СтрокаТоваров.Количество;
				ИтоговыеСуммы.ИтогоРезультатИзлишекСумма = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СтрокаТоваров.Стоимость * КоэффициентПересчета *  СтрокаТоваров.Количество;
				ИтоговыеСуммы.ИтогоПересортИзлишкиКолво  = ИтоговыеСуммы.ИтогоПересортИзлишкиКолво + СтрокаТоваров.Количество;
				ИтоговыеСуммы.ИтогоПересортИзлишкиСумма  = ИтоговыеСуммы.ИтогоПересортИзлишкиСумма + СтрокаТоваров.Стоимость * КоэффициентПересчета *  СтрокаТоваров.Количество;
			Иначе
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("НоменклатураОприходование", СтрокаТоваров.Номенклатура);
				СтруктураПоиска.Вставить("ХарактеристикаОприходование", СтрокаТоваров.Характеристика);
				СтруктураПоиска.Вставить("СерияОприходование", СтрокаТоваров.Серия);
				
				МассивСвязанныхТоваров = ТаблицаСвязанныхТоваров.НайтиСтроки(СтруктураПоиска);
				
				Индекс = 0;
				
				Пока СтрокаТоваров.Количество <> 0 И Индекс < МассивСвязанныхТоваров.Количество() Цикл
					
					ТекущийСвязанныйТовар = МассивСвязанныхТоваров[Индекс];
					
					Если ТекущийСвязанныйТовар.Количество = 0 Тогда
						Индекс = Индекс + 1;
						Продолжить;
					КонецЕсли;
					
					// Найдем и добавим оприходованный товар в таблицу результата
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("Номенклатура", ТекущийСвязанныйТовар.НоменклатураСписание);
					СтруктураПоиска.Вставить("Характеристика", ТекущийСвязанныйТовар.ХарактеристикаСписание);
					СтруктураПоиска.Вставить("Серия", ТекущийСвязанныйТовар.СерияСписание);
					СтруктураПоиска.Вставить("Операция", "3_ПересортицаСписание");
					
					МассивСписываемыхТоваров = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска);
					
					Для Каждого СписываемыйТовар Из МассивСписываемыхТоваров Цикл
						
						Если СтрокаТоваров.Количество = 0 Тогда
							Прервать;
						КонецЕсли;
						
						Если СписываемыйТовар.Количество = 0 Тогда
							Продолжить;
						КонецЕсли;
						
						КоличествоРаспределить = Мин(СтрокаТоваров.Количество, СписываемыйТовар.Количество, ТекущийСвязанныйТовар.Количество);
						
						СуммаНедостачи = СтрокаТоваров.Стоимость * КоличествоРаспределить * КоэффициентПересчета;
						СуммаИзлишков = СписываемыйТовар.Стоимость * КоличествоРаспределить * КоэффициентПересчета;
						
						// Вычтем распределенное количество
						СтрокаТоваров.Количество = СтрокаТоваров.Количество - КоличествоРаспределить;
						СписываемыйТовар.Количество = СписываемыйТовар.Количество - КоличествоРаспределить;
						ТекущийСвязанныйТовар.Количество = ТекущийСвязанныйТовар.Количество - КоличествоРаспределить;
						
						// Строка пересортицы списание
						НоваяСтрокаОприходование = НоваяСтрокаТаблицыРезультатов(ТаблицаТоваровРезультат, СтрокаТоваров, НомерСтроки);
						
						НоваяСтрокаОприходование.НомерСвязаннойСтроки = НомерСтроки + 1;
						
						НоваяСтрокаОприходование.КоличествоИзлишков = КоличествоРаспределить;	
						НоваяСтрокаОприходование.СуммаИзлишков = СуммаИзлишков;	
						
						НоваяСтрокаОприходование.КоличествоНедостачи = 0;	
						НоваяСтрокаОприходование.СуммаНедостачи = 0;
						
						НоваяСтрокаОприходование.ПересортИзлишкиКолво = КоличествоРаспределить;	
						НоваяСтрокаОприходование.ПересортИзлишкиСумма = СуммаИзлишков;
						
						НоваяСтрокаОприходование.ПриходИзлишковКолво = 0;	
						НоваяСтрокаОприходование.ПриходИзлишковСумма = 0;	
						
						НоваяСтрокаОприходование.СписаниеНедостачКолонкаКолво = 0;	
						НоваяСтрокаОприходование.СписаниеНедостачКолонкаСумма = 0;
						
						НоваяСтрокаОприходование.ПересортНедостачиКолво = 0;	
						НоваяСтрокаОприходование.ПересортНедостачиСумма = 0;	
						НоваяСтрокаОприходование.ПересортНедостачиНомер = 0;
						
						// Строка пересортицы оприходование
						НоваяСтрокаСписание = НоваяСтрокаТаблицыРезультатов(ТаблицаТоваровРезультат, СписываемыйТовар, НомерСтроки);
						
						НоваяСтрокаСписание.НомерСвязаннойСтроки = НомерСтроки - 1;
						
						НоваяСтрокаСписание.КоличествоНедостачи = КоличествоРаспределить;	
						НоваяСтрокаСписание.СуммаНедостачи = СуммаНедостачи;
						
						НоваяСтрокаСписание.КоличествоИзлишков = 0;	
						НоваяСтрокаСписание.СуммаИзлишков = 0;
						
						НоваяСтрокаСписание.ПересортНедостачиКолво = КоличествоРаспределить;	
						НоваяСтрокаСписание.ПересортНедостачиСумма = СуммаНедостачи;
						
						НоваяСтрокаСписание.ПересортИзлишкиКолво = 0;	
						НоваяСтрокаСписание.ПересортИзлишкиСумма = 0;	
						НоваяСтрокаСписание.ПересортИзлишкиНомер = 0;	
						
						НоваяСтрокаСписание.ПриходИзлишковКолво = 0;	
						НоваяСтрокаСписание.ПриходИзлишковСумма = 0;
						
						НоваяСтрокаСписание.СписаниеНедостачКолонкаКолво = 0;	
						НоваяСтрокаСписание.СписаниеНедостачКолонкаСумма = 0;
						
						// Итоги
						ИтоговыеСуммы.ИтогоРезультатИзлишекКолво 	= ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + КоличествоРаспределить;
						ИтоговыеСуммы.ИтогоРезультатИзлишекСумма 	= ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СуммаИзлишков;
						ИтоговыеСуммы.ИтогоПересортИзлишкиКолво 	= ИтоговыеСуммы.ИтогоПересортИзлишкиКолво + КоличествоРаспределить;
						ИтоговыеСуммы.ИтогоПересортИзлишкиСумма 	= ИтоговыеСуммы.ИтогоПересортИзлишкиСумма + СуммаИзлишков;
						
						ИтоговыеСуммы.ИтогоРезультатНедостачаКолво 	= ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + КоличествоРаспределить;
						ИтоговыеСуммы.ИтогоРезультатНедостачаСумма 	= ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СуммаНедостачи;
						ИтоговыеСуммы.ИтогоПересортНедостачиКолво 	= ИтоговыеСуммы.ИтогоПересортНедостачиКолво + КоличествоРаспределить;
						ИтоговыеСуммы.ИтогоПересортНедостачиСумма 	= ИтоговыеСуммы.ИтогоПересортНедостачиСумма + СуммаНедостачи;
						
					КонецЦикла;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	НомерСтроки = 0;
	
	// Вывод на макет
	Для Каждого СтрокаТовар Из ТаблицаТоваровРезультат Цикл
		
		Если ЗначениеЗаполнено(СтрокаТовар.НомерСвязаннойСтроки) Тогда
			
			Если СтрокаТовар.ПересортНедостачиКолво <> 0 Тогда
				СтрокаТовар.ПересортНедостачиНомер = СтрокаТовар.НомерСвязаннойСтроки;
			ИначеЕсли СтрокаТовар.ПересортИзлишкиКолво <> 0 Тогда
				СтрокаТовар.ПересортИзлишкиНомер = СтрокаТовар.НомерСвязаннойСтроки; 
			КонецЕсли;
		КонецЕсли;
		
		ОбластьСтроки.Параметры.Заполнить(СтрокаТовар);
		ОбластьСтроки_Лист2.Параметры.Заполнить(СтрокаТовар);
		
		Если НомерСтроки = 0 Тогда // первая строка
			
			ТекстСтраница = НСтр("ru='Страница %НомерСтраницы%'", Метаданные.Языки.Русский.КодЯзыка);
			ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",2);
			ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
			ТабличныйДокумент.Вывести(ОбластьШапки);
			
			ТекстСтраница = НСтр("ru='Страница %НомерСтраницы% (продолжение)'", Метаданные.Языки.Русский.КодЯзыка);
			ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",2);
			ОбластьШапки_Лист2.Параметры.НомерСтраницы = ТекстСтраница;
			МассивСтрок_Лист2.Присоединить(ОбластьШапки_Лист2);
			
		Иначе
			
			Если НомерСтроки <> 0 И Не ТабличныйДокумент.ПроверитьВывод(ОбластьСтроки) Тогда
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ТекстСтраница = НСтр("ru='Страница %НомерСтраницы%'", Метаданные.Языки.Русский.КодЯзыка);
				ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",НомерСтраницы);
				ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
				ТабличныйДокумент.Вывести(ОбластьШапки);
				
				МассивСтрок_Лист2.ВывестиГоризонтальныйРазделительСтраниц();
				МассивСтрок_Лист2.Присоединить(ОбластьШапки_Лист2);
			КонецЕсли;
			
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		
		ТабличныйДокумент.Вывести(ОбластьСтроки);
		МассивСтрок_Лист2.Присоединить(ОбластьСтроки_Лист2);
		
	КонецЦикла;
	
	ОбластьПодвал.Параметры.Заполнить(ИтоговыеСуммы);
	ОбластьПодвал_Лист2.Параметры.Заполнить(ИтоговыеСуммы);
	
	ОбластьПодвал_Лист2.Параметры.ДолжностьМОЛ1      = Шапка.ДолжностьКладовщика;
	ОбластьПодвал_Лист2.Параметры.ФИОМОЛ1            = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Кладовщик, Шапка.ДатаДокумента);
	
	ОбластьПодвал.Параметры.ФИОБухгалтера		     = Шапка.ГлавныйБухгалтер;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабличныйДокумент.Вывести(МассивСтрок_Лист2);
	
	ТабличныйДокумент.Вывести(ОбластьПодвал_Лист2);
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
КонецПроцедуры

Функция НоваяСтрокаТаблицыРезультатов(ТаблицаТоваровРезультат, СтрокаТоваров, НомерСтроки)
	НоваяСтрока = ТаблицаТоваровРезультат.Добавить();
	
	НоваяСтрока.Номенклатура = СтрокаТоваров.Номенклатура;
	НоваяСтрока.Характеристика = СтрокаТоваров.Характеристика;
	НоваяСтрока.Серия = СтрокаТоваров.Серия;
	
	ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
	ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = СтрокаТоваров.ЭтоВозвратнаяТара;
	ДополнительныеПараметрыПолученияНаименованияДляПечати.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	НоваяСтрока.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
		СтрокаТоваров.ТоварНаименование,
		СтрокаТоваров.ХарактеристикаПредставление,
		,
		СтрокаТоваров.СерияПредставление,
		ДополнительныеПараметрыПолученияНаименованияДляПечати);
		
	НоваяСтрока.ТоварКод = СтрокаТоваров.ТоварКод;
	НоваяСтрока.ЕдиницаИзмеренияКод = СтрокаТоваров.ЕдиницаИзмеренияКод;
	НоваяСтрока.ЕдиницаИзмеренияНаименование = СтрокаТоваров.ЕдиницаИзмеренияНаименование;
	
	НомерСтроки = НомерСтроки + 1;
	НоваяСтрока.НомерСтроки = НомерСтроки;
	
	Возврат НоваяСтрока;
КонецФункции


#КонецОбласти

#КонецОбласти

#КонецЕсли
