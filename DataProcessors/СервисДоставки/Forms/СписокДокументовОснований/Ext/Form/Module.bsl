#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументыОснования = Неопределено;
	Параметры.Свойство("ДокументыОснования", ДокументыОснования);
	Параметры.Свойство("Режим", РежимМастера);
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	Параметры.Свойство("Отправитель", Отправитель);
	Параметры.Свойство("Получатель", Получатель);
	Параметры.Свойство("ОтправительАдрес", ОтправительАдрес);
	Параметры.Свойство("ПолучательАдрес", ПолучательАдрес);
	Параметры.Свойство("ДатаОтгрузки", ДатаОтгрузки);
	Параметры.Свойство("СпособОтгрузки", СпособОтгрузки);
	Параметры.Свойство("СпособДоставки", СпособДоставки);
	
	Если НЕ ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не выбран тип грузоперевозки'"));
		Отказ = Истина;
		Возврат;
	ИначеЕсли НЕ СервисДоставки.ТипГрузоперевозкиДоступен(ТипГрузоперевозки) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Выбранный тип грузоперевозки не доступен'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоТипуГрузоперевозки();
	
	ЗаполнитьСписокОснований(ДокументыОснования);
	
	Если Параметры.Свойство("ЗаголовокФормы") Тогда
		Параметры.Свойство("ЗаголовокФормы", Заголовок);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	ЗаполнитьСпискиВыбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	КлючеваяОперация = "Обработка.СервисДоставки.СписокДокументовОснований.СписокВыбор.Открыть";
	ОценкаПроизводительностиКлиент.ЗамерВремени(КлючеваяОперация);
	
	ПоказатьЗначение( , Список[ВыбраннаяСтрока].Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ОткрытьФормуВыбораДокументаОснования();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СписокРезультат = Новый Массив();
	Если Модифицированность Тогда
		Для Каждого ТекСтрока Из Список Цикл
			СписокРезультат.Добавить(ТекСтрока.Ссылка);
		КонецЦикла;
		Закрыть(СписокРезультат);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокОснований(ДокументыОснованияСсылки)
	
	Если ЗначениеЗаполнено(ДокументыОснованияСсылки) 
		И ТипЗнч(ДокументыОснованияСсылки) = Тип("Массив")
		И ДокументыОснованияСсылки.Количество() Тогда
	КонецЕсли;
	
	МассивРеквизитовПроверки = СтрРазделить("ДатаОтгрузки,Отправитель,Получатель,ОтправительАдрес,ПолучательАдрес,СпособОтгрузки,СпособДоставки", ",");
	МассивСсылок = Список.Выгрузить().ВыгрузитьКолонку("Ссылка");
	МассивСсылокДляДобавления = Новый Массив();
	
	Для Каждого ТекДокументОснование Из ДокументыОснованияСсылки Цикл
		
		Если МассивСсылок.Найти(ТекДокументОснование) = Неопределено Тогда
			МассивСсылокДляДобавления.Добавить(ТекДокументОснование);
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументыОснования = СервисДоставки.ДокументыОснованияСписок(МассивСсылокДляДобавления);
	
	Для Каждого ТекОснование Из ДокументыОснования Цикл
		
		НоваяСтрока = Список.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекОснование);
		
		Если ДокументыОснования.Колонки.Найти("СуммаДокумента") = Неопределено Тогда
			Элементы.СписокСумма.Видимость = Ложь;
		КонецЕсли;
			
		Если ДокументыОснования.Колонки.Найти("Валюта") = Неопределено Тогда
			Элементы.СписокВалюта.Видимость = Ложь;
		КонецЕсли;
		
		Если ДокументыОснования.Колонки.Найти("Отправитель") = Неопределено Тогда
			Элементы.СписокОтправитель.Видимость = Ложь;
		КонецЕсли;
		
		Если ДокументыОснования.Колонки.Найти("Получатель") = Неопределено Тогда
			Элементы.СписокПолучатель.Видимость = Ложь;
		КонецЕсли;
		
		Если ДокументыОснования.Колонки.Найти("ОтправительАдрес") = Неопределено Тогда
			Элементы.СписокОтправительАдрес.Видимость = Ложь;
		КонецЕсли;
		
		Если ДокументыОснования.Колонки.Найти("ДатаОтгрузки") = Неопределено Тогда
			Элементы.СписокДатаОтгрузки.Видимость = Ложь;
		КонецЕсли;
		
		Если ДокументыОснования.Колонки.Найти("ДатаОтгрузки") = Неопределено Тогда
			Элементы.СписокДатаОтгрузки.Видимость = Ложь;
		КонецЕсли;
		
		Если ДокументыОснования.Колонки.Найти("СпособОтгрузки") = Неопределено Тогда
			Элементы.СписокСпособОтгрузки.Видимость = Ложь;
		КонецЕсли;
		
		Если ДокументыОснования.Колонки.Найти("СпособДоставки") = Неопределено Тогда
			Элементы.СписокСпособДоставки.Видимость = Ложь;
		КонецЕсли;
		
		Если НоваяСтрока.СпособОтгрузки = 2 Тогда
			НоваяСтрока.СпособОтгрузкиПредставление = НСтр("ru='От адреса'");
		ИначеЕсли НоваяСтрока.СпособОтгрузки = 1 Тогда
			НоваяСтрока.СпособОтгрузкиПредставление = НСтр("ru='От терминала'");
		КонецЕсли;
		
		Если НоваяСтрока.СпособДоставки = 2 Тогда
			НоваяСтрока.СпособДоставкиПредставление = НСтр("ru='До адреса'");
		ИначеЕсли НоваяСтрока.СпособДоставки = 1 Тогда
			НоваяСтрока.СпособДоставкиПредставление = НСтр("ru='До терминала'");
		КонецЕсли;
		
		Для Каждого ТекРеквизитПроверки Из МассивРеквизитовПроверки Цикл
			НоваяСтрока[ТекРеквизитПроверки + "Картинка"] = (ЗначениеЗаполнено(НоваяСтрока[ТекРеквизитПроверки]) 
				И ЗначениеЗаполнено(ЭтотОбъект[ТекРеквизитПроверки])
				И НоваяСтрока[ТекРеквизитПроверки] <> ЭтотОбъект[ТекРеквизитПроверки]);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоТипуГрузоперевозки()
	
	Заголовок = СтрШаблон(НСтр("ru = '%1: Основания'"),
		СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(ТипГрузоперевозки));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность();

	Если РежимМастера = 0 Тогда
		
		Элементы.Список.ТолькоПросмотр = Ложь;
		
	ИначеЕсли РежимМастера = 1 Тогда
		
		Элементы.Список.ТолькоПросмотр = Ложь;
		
	Иначе
		
		Элементы.Список.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиВыбора()
	
	СписокВыбораТиповДокументовОснований();
	
КонецПроцедуры

&НаСервере
Процедура СписокВыбораТиповДокументовОснований()
	
	ТипыДокументов = Метаданные.ОпределяемыеТипы.ОснованиеЗаказаСервисДоставки.Тип.Типы();
	
	Для Каждого ТекущийТип Из ТипыДокументов Цикл
		
		ОбъектМетаданных = Метаданные.НайтиПоТипу(ТекущийТип);
		
		Если ОбъектМетаданных <> Неопределено
			И ПравоДоступа("Чтение", ОбъектМетаданных) Тогда
			
			Если ТипГрузоперевозки = СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика() Тогда
				
				Если СервисДоставкиКлиентСервер.ТипыДокументовОснованийКурьерика().Найти(ТекущийТип) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			ПолноеИмя = ОбъектМетаданных.ПолноеИмя();
			Если ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(ОбъектМетаданных) Тогда
				СписокВыбораДокументовОснований.Добавить(ПолноеИмя, ОбъектМетаданных.Синоним);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораДокументаОснования()
	
	Если СписокВыбораДокументовОснований.Количество() > 1 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборТипаОснования", ЭтотОбъект);
		СписокВыбораДокументовОснований.ПоказатьВыборЭлемента(ОписаниеОповещения);
	ИначеЕсли СписокВыбораДокументовОснований.Количество() = 1 Тогда
		ОбработатьВыборТипаОснования(СписокВыбораДокументовОснований[0], Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборТипаОснования(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмяОбъекта = Результат.Значение;
	
	ИмяФормыВыбора = "";
	СервисДоставкиКлиентПереопределяемый.УстановитьИмяФормыВыбораОбъектаПоИмени(ПолноеИмяОбъекта, ИмяФормыВыбора);
	
	Если ИмяФормыВыбора = "" Тогда
		ИмяФормыВыбора = ПолноеИмяОбъекта + ".ФормаВыбора";
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборОснования", ЭтотОбъект, 
													Новый Структура("ИмяРеквизита", "ДокументыОснования"));
	ОткрытьФорму(
		ИмяФормыВыбора,
		ПараметрыОткрытия,
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборОснования(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокОснований(Результат);
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти
