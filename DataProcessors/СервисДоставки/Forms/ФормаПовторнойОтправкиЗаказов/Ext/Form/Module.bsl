
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСписок(
		СписокЗаказов,
		Параметры.СписокЗаказов);
	
	УстановитьДоступностьЭлементовПоЗначениюОпции();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьСостояниеОпцияКурьерика();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбновитьСостояниеОпцииНажатие(Элемент)
	
	ПолучитьСостояниеОпцияКурьерика();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЗаказов

&НаКлиенте
Процедура СписокЗаказовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Идентификатор = СписокЗаказов.НайтиПоИдентификатору(ВыбраннаяСтрока).Значение;
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	ПараметрыОткрытия.Вставить("ОрганизацияБизнесСетиСсылка", Организация);
	ПараметрыОткрытия.Вставить("ИдентификаторЗаказа", Идентификатор);
	ПараметрыОткрытия.Вставить("РежимМастера", СервисДоставкиКлиентСервер.РежимМастераЧерновик());
	
	ОткрытьФорму("Обработка.СервисДоставки.Форма.КарточкаЗаказаКурьерика",
		ПараметрыОткрытия,
		ВладелецФормы,,,,,
		РежимОткрытияОкнаФормы.Независимый)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ИгнорироватьИзменения(Команда)
	
	МассивИдентификаторов = ВыбранныеЗаказы();
	Если МассивИдентификаторов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Обещание = ВопросАсинх(
		СтрШаблон(
			НСтр("ru = 'Изменения товарного состава по выбранным заказам (%1) не будут отправлены в сервис. Продолжить?'"),
			Формат(МассивИдентификаторов.Количество(), НСтр("ru = 'ЧГ=;'"))),
		РежимДиалогаВопрос.ДаНет,,
		КодВозвратаДиалога.Нет);
	
	Ответ = Ждать Обещание;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ИгнорироватьИзмененияНаСервере(МассивИдентификаторов);
		ОбновитьЗаказы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЗаказов(Команда)
	
	ОбновитьЗаказы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИгнорироватьИзмененияНаСервере(МассивИдентификаторов)
	
	Для Каждого Идентификатор Из МассивИдентификаторов Цикл
		
		РегистрыСведений.ДанныеЗаказовСервисДоставки.УстановитьПризнакИзмененияЗаказов(
			Новый Структура("Идентификатор", Идентификатор),
			Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаказы()
	
	СписокЗаказов.Очистить();
	
	ПараметрыОтбораЗаказов = Новый Структура();
	ПараметрыОтбораЗаказов.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	ПараметрыОтбораЗаказов.Вставить("Организация", Организация);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСписок(СписокЗаказов,
		РегистрыСведений.ДанныеЗаказовСервисДоставки.ЗаказыКПовторнойОтправке(ПараметрыОтбораЗаказов));
	
КонецПроцедуры

&НаКлиенте
Функция ВыбранныеЗаказы()
	
	МассивИдентификаторов = Новый Массив;
	
	Для Каждого ЭлементСписка Из СписокЗаказов Цикл
		
		Если ЭлементСписка.Пометка Тогда
			МассивИдентификаторов.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивИдентификаторов;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступностьЭлементовПоЗначениюОпции()
	
	Элементы.ГруппаПодпискаНаСервис.Видимость = ОтображатьУведомлениеПоОпцииКурьерика;
	
КонецПроцедуры

#Область ВыполнитьЗапрос

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
		ИдентификаторЗадания = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыЗапроса(ПараметрыОперации, Отказ)
	
	ПараметрыЗапроса = Новый Структура();
	ПараметрыЗапроса.Вставить("ОрганизацияБизнесСетиСсылка", Организация);
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

&НаСервере
Функция ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ПараметрыОперации)
	
	// Проверка подключения Интернет-поддержки пользователей.
	ИнтернетПоддержкаПодключена 
		= ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	Если Не ИнтернетПоддержкаПодключена Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Отказ = Ложь;
	ПараметрыЗапроса = ПараметрыЗапроса(ПараметрыОперации, Отказ);
	
	Если ПараметрыЗапроса.Свойство("ОрганизацияБизнесСетиСсылка") Тогда
		СервисДоставкиСлужебный.ПроверитьОрганизациюБизнесСети(ПараметрыЗапроса.ОрганизацияБизнесСетиСсылка, Отказ);
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяФоновогоЗадания = "ФоновоеЗадание" + ПараметрыОперации.ИмяПроцедуры;
	ФоновоеЗадание = ЭтотОбъект[ИмяФоновогоЗадания];
	Если ФоновоеЗадание <> Неопределено Тогда
		ОтменитьВыполнениеЗадания(ФоновоеЗадание.ИдентификаторЗадания);
	КонецЕсли;
	
	Задание = Новый Структура("ИмяПроцедуры, Наименование, ПараметрыПроцедуры");
	Задание.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1. %2.'"),
		СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(ТипГрузоперевозки),
		ПараметрыОперации.НаименованиеОперации);
	Задание.ИмяПроцедуры = "СервисДоставки." + ПараметрыОперации.ИмяПроцедуры;
	Задание.ПараметрыПроцедуры = ПараметрыЗапроса;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = Задание.Наименование;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Если ПараметрыОперации.Свойство("ЗапуститьВФоне")
		И ТипЗнч(ПараметрыОперации.ЗапуститьВФоне) = Тип("Булево") Тогда
		ПараметрыВыполнения.ЗапуститьВФоне = ПараметрыОперации.ЗапуститьВФоне;
	КонецЕсли;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(Задание.ИмяПроцедуры,
		Задание.ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗапрос(ПараметрыОперации, Знач ОчищатьСообщения = Истина)
	
	ИнтернетПоддержкаПодключена = Ложь;
	
	Если ОчищатьСообщения = Истина Тогда
		ОчиститьСообщения();
	КонецЕсли;
	
	ИмяФоновогоЗадания = "ФоновоеЗадание" + ПараметрыОперации.ИмяПроцедуры;
	ФоновоеЗадание = ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ПараметрыОперации);
	ЭтотОбъект[ИмяФоновогоЗадания] = ФоновоеЗадание;
	
	Если ИнтернетПоддержкаПодключена = Ложь Тогда
		
		Оповещение = Новый ОписаниеОповещения("ВыполнитьЗапросПродолжение", ЭтотОбъект, ПараметрыОперации);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(Оповещение, ЭтотОбъект);
		Возврат;
		
	Иначе
		
		ПараметрыОперации.Вставить("ФоновоеЗадание", ФоновоеЗадание);
		ВыполнитьЗапросПродолжение(Истина, ПараметрыОперации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяФоновогоЗадания = "ФоновоеЗадание"+ ДополнительныеПараметры.ИмяПроцедуры;
	
	Если Результат = Неопределено Тогда
		
		ТекстСообщения = НСтр("ru = 'Отсутствует подключение к Интернет-поддержке пользователей.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
		
	ИначеЕсли ТипЗнч(Результат) = Тип("Структура")
		И Результат.Свойство("Логин") Тогда
		
		ИнтернетПоддержкаПодключена = Ложь;
		ЭтотОбъект[ИмяФоновогоЗадания] = ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ДополнительныеПараметры);
		ДополнительныеПараметры.Вставить("ФоновоеЗадание", ЭтотОбъект[ИмяФоновогоЗадания]);
		
	КонецЕсли;
	
	Если ЭтотОбъект[ИмяФоновогоЗадания] = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект[ИмяФоновогоЗадания].Статус = "Выполняется" Тогда
		ОжидатьЗавершениеВыполненияЗапроса(ДополнительныеПараметры);
	ИначеЕсли ЭтотОбъект[ИмяФоновогоЗадания].Статус = "Выполнено" Тогда
		ВыполнитьЗапросЗавершение(ЭтотОбъект[ИмяФоновогоЗадания], ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеВыполненияЗапроса(ПараметрыОперации)
	
	Если ПараметрыОперации.ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьПунктыВыдачиКлиента() Тогда
		ВыводитьОкноОжидания = Ложь;
	Иначе
		ВыводитьОкноОжидания = Истина;
	КонецЕсли;
	
	// Инициализация обработчик ожидания завершения.
	ИмяФоновогоЗадания = "ФоновоеЗадание" + ПараметрыОперации.ИмяПроцедуры;
	ФоновоеЗадание = ЭтотОбъект[ИмяФоновогоЗадания];
	ПараметрыОперации.Вставить("ФоновоеЗадание", ФоновоеЗадание);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = ПараметрыОперации.НаименованиеОперации;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ВыводитьОкноОжидания;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Вставить("ИдентификаторЗадания", ФоновоеЗадание.ИдентификаторЗадания);
	
	ОбработкаЗавершения = Новый ОписаниеОповещения("ВыполнитьЗапросЗавершение", ЭтотОбъект, ПараметрыОперации);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, ОбработкаЗавершения,	ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Отказ = Ложь;
	
	ИмяФоновогоЗадания = "ФоновоеЗадание" + ДополнительныеПараметры.ИмяПроцедуры;
	ФоновоеЗадание = ЭтотОбъект[ИмяФоновогоЗадания];
	
	Если Результат = Неопределено
		Или ФоновоеЗадание = Неопределено Тогда
			
		Если ДлительнаяОперацияОтменена(ДополнительныеПараметры.ФоновоеЗадание.ИдентификаторЗадания) Тогда
			
			Модифицированность = Ложь;
			Закрыть();
			
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	СервисДоставкиКлиент.ОбработатьРезультатФоновогоЗадания(Результат, ДополнительныеПараметры, Отказ);
	
	Если Не Отказ
		И Результат.Статус = "Выполнено" Тогда
			
		Если ДополнительныеПараметры.ИмяПроцедуры =
			СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостояниеОпцииКурьерика() Тогда
			
			ЗагрузитьРезультатПолучитьСостояниеОпцииКурьерика(Результат.АдресРезультата);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДлительнаяОперацияОтменена(ИдентификаторЗадания)
	
	Возврат ПараметрыСеанса.ДлительныеОперации.Отмененные.Найти(ИдентификаторЗадания) <> Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьСостояниеОпцияКурьерика()
	
	ПараметрыОперации = Новый Структура("ВыводитьОкноОжидания");
	ПараметрыОперации.Вставить("ИмяПроцедуры", СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостояниеОпцииКурьерика());
	ПараметрыОперации.Вставить("ОрганизацияБизнесСетиСсылка", Организация);
	ПараметрыОперации.Вставить("НаименованиеОперации", НСтр("ru = 'Получение состояния опции Курьерика.'"));
	
	ВыполнитьЗапрос(ПараметрыОперации);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРезультатПолучитьСостояниеОпцииКурьерика(АдресРезультата)
	
	ОперацияВыполнена = Ложь;
	
	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		
		Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
		
		Если ЗначениеЗаполнено(Результат)
			И ТипЗнч(Результат) = Тип("Структура") Тогда
			
			Если Результат.Свойство("ОпцияДоступна") Тогда
				
				ОпцияДоступнаКурьерика = Результат.ОпцияДоступна;
				КомментарийОпцияКурьерика = Результат.Комментарий;
				БалансОпцияКурьерика = Результат.Баланс;
				СрокДействияОпцияКурьерика = ПрочитатьДатуJSON(Результат.СрокДействия, ФорматДатыJSON.ISO);
				
				СервисДоставкиВызовСервера.УстановитьЗаголовокОпцияКурьерика(ЭтотОбъект);
				УстановитьДоступностьЭлементовПоЗначениюОпции();
				
				ОперацияВыполнена = Истина;
				
			КонецЕсли;
			
			СервисДоставки.ОбработатьБлокОшибок(Результат, ОперацияВыполнена);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
