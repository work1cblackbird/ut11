
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ДокументОснование", ДокументОснование);
	
	ЗаполнитьСписокЗаказов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для НомерФоновогоЗадания = 1 По КоличествоФоновыхЗаданийСостоянияЗаказов Цикл
		
		ИмяФоновогоЗадания = "ФоновоеЗаданиеПолучитьСостояния_" + НомерФоновогоЗадания;
		
		Если ЗначениеЗаполнено(ЭтотОбъект[ИмяФоновогоЗадания]) Тогда
		
			ПараметрыОперации = Новый Структура("ИмяПроцедуры, НаименованиеОперации, ВыводитьОкноОжидания");
			ПараметрыОперации.Вставить("ИмяПроцедуры", СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостоянияЗаказовНаДоставку());
			ПараметрыОперации.Вставить("НаименованиеОперации", НСтр("ru = 'Получение списка состояний.'"));
			ПараметрыОперации.Вставить("ИмяФоновогоЗадания", ИмяФоновогоЗадания);
			ПараметрыОперации.Вставить("ВыводитьОкноОжидания", Ложь);
		
			ОжидатьЗавершениеВыполненияЗапроса(ПараметрыОперации);
		
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаЗаказов

&НаКлиенте
Процедура ТаблицаЗаказовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = ТаблицаЗаказов.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("ОрганизацияБизнесСетиСсылка", ТекущаяСтрока.Организация);
	ПараметрыОткрытия.Вставить("ТипГрузоперевозки", ТекущаяСтрока.ТипГрузоперевозки);
	ПараметрыОткрытия.Вставить("ИдентификаторЗаказа", ТекущаяСтрока.Идентификатор);
	ПараметрыОткрытия.Вставить("РежимМастера", СервисДоставкиКлиентСервер.РежимМастераЧерновик());
	
	Если ТекущаяСтрока.ТипГрузоперевозки = СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика() Тогда
		ИмяФормыКарточкиЗаказа = "КарточкаЗаказаКурьерика";
	Иначе
		ИмяФормыКарточкиЗаказа = "КарточкаЗаказа";
	КонецЕсли;
	
	ОткрытьФорму(СтрШаблон("Обработка.СервисДоставки.Форма.%1", ИмяФормыКарточкиЗаказа),
		ПараметрыОткрытия,
		ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокЗаказов()

	ТаблицаЗаказов.Очистить();
	КоличествоФоновыхЗаданийСостоянияЗаказов = 0;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРегистра.ТипГрузоперевозки КАК ТипГрузоперевозки,
	|	ТаблицаРегистра.Организация КАК Организация,
	|	ТаблицаРегистра.Идентификатор КАК Идентификатор,
	|	МАКСИМУМ(ТаблицаРегистра.Представление) КАК Представление
	|ИЗ
	|	РегистрСведений.ДанныеЗаказовСервисДоставки КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.ДокументОснование = &ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРегистра.ТипГрузоперевозки,
	|	ТаблицаРегистра.Организация,
	|	ТаблицаРегистра.Идентификатор
	|
	|УПОРЯДОЧИТЬ ПО
	|	МАКСИМУМ(ТаблицаРегистра.Представление)
	|ИТОГИ
	|ПО
	|	Организация,
	|	ТипГрузоперевозки";

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;

	ДобавляемыеРеквизиты = Новый Массив;

	ВыборкаОрганизация = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	КоличествоФоновыхЗаданийСостоянияЗаказов = ВыборкаОрганизация.Количество();
	
	Для НомерФоновогоЗадания = 1 По КоличествоФоновыхЗаданийСостоянияЗаказов Цикл
		
		ИмяФоновогоЗадания = "ФоновоеЗаданиеПолучитьСостояния_" + НомерФоновогоЗадания;
		НовыйРеквизит = Новый РеквизитФормы(ИмяФоновогоЗадания, Новый ОписаниеТипов(Неопределено));
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
	КонецЦикла;

	ИзменитьРеквизиты(ДобавляемыеРеквизиты);

	НомерФоновогоЗадания = 1;
	ДанныеДляРасчетаСостояний = Новый Массив;

	Пока ВыборкаОрганизация.Следующий() Цикл
		
		ИмяФоновогоЗадания = "ФоновоеЗаданиеПолучитьСостояния_" + НомерФоновогоЗадания;
		
		ОписаниеЗаказовНаДоставку = Новый Структура();
		ОписаниеЗаказовНаДоставку.Вставить("Организация", ВыборкаОрганизация.Организация);
		ОписаниеЗаказовНаДоставку.Вставить("ДанныеГрузоперевозки", Новый Массив());
		ОписаниеЗаказовНаДоставку.Вставить("ИмяФоновогоЗадания", ИмяФоновогоЗадания);
		
		ВыборкаТипГрузоперевозки = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаТипГрузоперевозки.Следующий() Цикл
		
			ДанныеГрузоперевозки = Новый Структура;
			ДанныеГрузоперевозки.Вставить("ТипГрузоперевозки", ВыборкаТипГрузоперевозки.ТипГрузоперевозки);
			ДанныеГрузоперевозки.Вставить("ИдентификаторыЗаказов", Новый Массив);
			
			Выборка = ВыборкаТипГрузоперевозки.Выбрать();
			Пока Выборка.Следующий() Цикл
	
				НоваяСтрока = ТаблицаЗаказов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	
				НоваяСтрока.Грузоперевозчик = СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(
					НоваяСтрока.ТипГрузоперевозки);
	
				ДанныеГрузоперевозки.ИдентификаторыЗаказов.Добавить(Выборка.Идентификатор);
			КонецЦикла;

			ОписаниеЗаказовНаДоставку.ДанныеГрузоперевозки.Добавить(ДанныеГрузоперевозки);
		
		КонецЦикла;
		
		ДанныеДляРасчетаСостояний.Добавить(ОписаниеЗаказовНаДоставку);
		
		НомерФоновогоЗадания = НомерФоновогоЗадания + 1;
		
	КонецЦикла;

	ПолучитьСостоянияВФоне(ДанныеДляРасчетаСостояний);

КонецПроцедуры

#Область ВыполнитьЗапросВФоне

&НаСервере
Процедура ПолучитьСостоянияВФоне(ДанныеДляРасчетаСостояний)
	
	Если ДанныеДляРасчетаСостояний.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	// Проверка подключения Интернет-поддержки пользователей.
	ИнтернетПоддержкаПодключена = ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	Если Не ИнтернетПоддержкаПодключена Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ОписаниеЗаказовНаДоставку Из ДанныеДляРасчетаСостояний Цикл

		ПараметрыОперации = Новый Структура();
		ПараметрыОперации.Вставить("ИмяПроцедуры", СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостоянияЗаказовНаДоставку());
		ПараметрыОперации.Вставить("НаименованиеОперации", НСтр("ru = 'Получение списка состояний заказа.'"));
		ПараметрыОперации.Вставить("ИмяФоновогоЗадания", ОписаниеЗаказовНаДоставку.ИмяФоновогоЗадания);
		ПараметрыОперации.Вставить("Организация", ОписаниеЗаказовНаДоставку.Организация);
		ПараметрыОперации.Вставить("ДанныеГрузоперевозки", ОписаниеЗаказовНаДоставку.ДанныеГрузоперевозки);
		
		ЭтотОбъект[ОписаниеЗаказовНаДоставку.ИмяФоновогоЗадания] = ВыполнитьЗапросВФоне(ПараметрыОперации);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗапросВФоне(ПараметрыОперации)
	
	Отказ = Ложь;
	
	ПараметрыЗапроса = СервисДоставки.НовыйПараметрыЗапросаПолучитьСостояния();
	
	Если ПараметрыОперации.ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостоянияЗаказовНаДоставку() Тогда
		ПараметрыЗапроса.Вставить("ОрганизацияБизнесСетиСсылка", ПараметрыОперации.Организация);
		ПараметрыЗапроса.Вставить("Состояние", Новый Массив());
		ПараметрыЗапроса.Состояние.Добавить(Новый Структура("Идентификатор", -1));
		ПараметрыЗапроса.Вставить("ДанныеГрузоперевозки", ПараметрыОперации.ДанныеГрузоперевозки);
	КонецЕсли;
	
	СервисДоставкиСлужебный.ПроверитьОрганизациюБизнесСети(ПараметрыЗапроса.ОрганизацияБизнесСетиСсылка, Отказ);
	
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ФоновоеЗадание = ЭтотОбъект[ПараметрыОперации.ИмяФоновогоЗадания];
	Если ФоновоеЗадание <> Неопределено Тогда
		ОтменитьВыполнениеЗадания(ФоновоеЗадание.ИдентификаторЗадания);
	КонецЕсли;
	
	Задание = Новый Структура("ИмяПроцедуры, Наименование, ПараметрыПроцедуры");

	Задание.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1. %2'"),
		ПараметрыОперации.Организация,
		ПараметрыОперации.НаименованиеОперации);

	Задание.ИмяПроцедуры = "СервисДоставки." + ПараметрыОперации.ИмяПроцедуры;
	Задание.ПараметрыПроцедуры = ПараметрыЗапроса;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = Задание.Наименование;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	Если ПараметрыОперации.Свойство("ЗапуститьВФоне")
		И ТипЗнч(ПараметрыОперации.ЗапуститьВФоне) = Тип("Булево") Тогда
		ПараметрыВыполнения.ЗапуститьВФоне = ПараметрыОперации.ЗапуститьВФоне;
	КонецЕсли; 
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(Задание.ИмяПроцедуры,
		Задание.ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
		ИдентификаторЗадания = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеВыполненияЗапроса(ПараметрыОперации)
	
	ВыводитьОкноОжидания = ?(ЗначениеЗаполнено(ПараметрыОперации.ВыводитьОкноОжидания), ПараметрыОперации.ВыводитьОкноОжидания, Ложь);

	// Инициализация обработчик ожидания завершения.
	ФоновоеЗадание = ЭтотОбъект[ПараметрыОперации.ИмяФоновогоЗадания];
	ПараметрыОперации.Вставить("ФоновоеЗадание", ФоновоеЗадание);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = ПараметрыОперации.НаименованиеОперации;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ВыводитьОкноОжидания;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Вставить("ИдентификаторЗадания", ФоновоеЗадание.ИдентификаторЗадания);
	
	ОбработкаЗавершения = Новый ОписаниеОповещения("ВыполнитьЗапросЗавершение",
		ЭтотОбъект, ПараметрыОперации);
		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, ОбработкаЗавершения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	// Инициализация.
	Отказ = Ложь;
	ФоновоеЗадание = ЭтотОбъект[ДополнительныеПараметры.ИмяФоновогоЗадания];
	
	// Вывод сообщений из фонового задания.
	СервисДоставкиКлиент.ОбработатьРезультатФоновогоЗадания(Результат, ДополнительныеПараметры, Отказ);
	Если Результат = Неопределено ИЛИ ФоновоеЗадание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка результата поиска.
	Если Не Отказ И Результат.Статус = "Выполнено" Тогда
		Если ЗначениеЗаполнено(Результат.АдресРезультата)
			И ЭтоАдресВременногоХранилища(Результат.АдресРезультата)
			И ДополнительныеПараметры.ФоновоеЗадание.ИдентификаторЗадания
			= ЭтотОбъект[ДополнительныеПараметры.ИмяФоновогоЗадания].ИдентификаторЗадания Тогда
			
			Если ДополнительныеПараметры.ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостоянияЗаказовНаДоставку() Тогда
				
				ЗагрузитьРезультатПолученияСпискаСостояний(Результат.АдресРезультата);
				ЭтотОбъект[ДополнительныеПараметры.ИмяФоновогоЗадания] = Неопределено;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРезультатПолученияСпискаСостояний(АдресРезультата, ОперацияВыполнена = Истина)
	
	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
		Если ЗначениеЗаполнено(Результат) 
			И ТипЗнч(Результат) = Тип("Структура") Тогда
			
			Если Результат.Свойство("Список") Тогда
				
				Для Каждого СтрокаТаблицыЗаказов из ТаблицаЗаказов Цикл
					СостояниеЗаказа = Результат.Список.Получить(СтрокаТаблицыЗаказов.Идентификатор);
					
					Если СостояниеЗаказа <> Неопределено Тогда
						СтрокаТаблицыЗаказов.Состояние = СостояниеЗаказа;
					КонецЕсли;
				КонецЦикла;
				
			Иначе
				ОперацияВыполнена = Ложь;
			КонецЕсли;
			
			СервисДоставки.ОбработатьБлокОшибок(Результат, ОперацияВыполнена);
			
		Иначе
			ОперацияВыполнена = Ложь;
		КонецЕсли;
	Иначе
		ОперацияВыполнена = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
#КонецОбласти
