
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не СервисДоставки.ПравоРаботыССервисомДоставки(Истина) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДеревоЗначенийДляВыбора = Неопределено;
	
	Параметры.Свойство("Представление", Заголовок);
	Параметры.Свойство("ЗначенияДляВыбора", ДеревоЗначенийДляВыбора);
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	
	Если НЕ ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не выбран тип грузоперевозки'"));
		Отказ = Истина;
		Возврат;
	ИначеЕсли НЕ СервисДоставки.ТипГрузоперевозкиДоступен(ТипГрузоперевозки) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Выбранный тип грузоперевозки не доступен'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокПоДеревуЗначений(ДеревоЗначенийДляВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьРодителейСпискаСВыбраннымиСтроками();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПометкаПриИзменении(Элемент)
	
	Узел = Элементы.Список.ТекущиеДанные;
	УстановитьПометкуДляВсехЭлементовСписка(Узел.Пометка, Узел);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
 
&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	Если МодальныйРежим
		Или РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс
		Или ВладелецФормы = Неопределено Тогда
		Закрыть(Список);
	Иначе
		ОповеститьОВыборе(Список);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьПометкуДляВсехЭлементовСписка(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьПометкуДляВсехЭлементовСписка(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьПометкуДляВсехЭлементовСписка(Пометка, Узел = Неопределено)
	
	Если Узел = Неопределено Тогда
		Узел = Список;
	КонецЕсли;
	
	ЭлементыДереваСписка = Узел.ПолучитьЭлементы();
	
	Для Каждого ЭлементДереваСписка Из ЭлементыДереваСписка Цикл
		ЭлементДереваСписка.Пометка = Пометка;
		Если ЭлементДереваСписка.ПолучитьЭлементы().Количество() Тогда
			УстановитьПометкуДляВсехЭлементовСписка(Пометка, ЭлементДереваСписка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПоДеревуЗначений(ДеревоЗначенийДляВыбора)

	Если ДеревоЗначенийДляВыбора <> Неопределено Тогда
		
		ЭлементыДереваСписка = Список.ПолучитьЭлементы();
		ЭлементыДереваСписка.Очистить();
		
		ЭлементыДерева = ДеревоЗначенийДляВыбора.ПолучитьЭлементы();
		
		Для Каждого ТекущийЭлементДерева Из ЭлементыДерева Цикл
			НовыйЭлементДерева = ЭлементыДереваСписка.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйЭлементДерева, ТекущийЭлементДерева);
			
			ЭлементыВеткиДерева = ТекущийЭлементДерева.ПолучитьЭлементы();
			Если ЭлементыВеткиДерева.Количество() Тогда
				ЭлементыНовойВеткиДерева = НовыйЭлементДерева.ПолучитьЭлементы();
				КоличествоВыбранных = 0;
				Для Каждого ЭлементВеткиДерева Из ЭлементыВеткиДерева Цикл
					ЭлементНовойВеткиДерева = ЭлементыНовойВеткиДерева.Добавить();
					ЗаполнитьЗначенияСвойств(ЭлементНовойВеткиДерева, ЭлементВеткиДерева);
					КоличествоВыбранных = КоличествоВыбранных + ?(ЭлементНовойВеткиДерева.Пометка,1,0);
					ЭлементНовойВеткиДерева.НомерКартинки = 2;
				КонецЦикла;
				НовыйЭлементДерева.Пометка = (ЭлементыВеткиДерева.Количество() = КоличествоВыбранных);
				НовыйЭлементДерева.НомерКартинки = 1;
				НовыйЭлементДерева.КоличествоВыбранных = КоличествоВыбранных;
			Иначе
				НовыйЭлементДерева.НомерКартинки = 2;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьРодителейСпискаСВыбраннымиСтроками()
	
	ЭлементыДереваСписка = Список.ПолучитьЭлементы();
	Для Каждого ЭлементДереваСписка Из ЭлементыДереваСписка Цикл
		Если ЭлементДереваСписка.КоличествоВыбранных > 0 
			И ЭлементДереваСписка.Пометка = Ложь Тогда
			Элементы.Список.Развернуть(ЭлементДереваСписка.ПолучитьИдентификатор());
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
	
#КонецОбласти