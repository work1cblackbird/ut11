
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	Параметры.Свойство("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	УстановитьНастройкиПросмотраПоУмолчанию();
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗаголовокГиперссылкиПериода();
	ВыполнитьОбновлениеСпискаЗаказов();
	
	ПодключитьОбработчикОжидания("ВыполнитьЗапросПолучитьСписокСостоянийЗаказов", 0.5, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияТекущаяСтраницаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("МаксимальныйНомерСтраницы", ВсегоСтраниц);
	ПараметрыОткрытияФормы.Вставить("НомерСтраницы", НомерСтраницы);
	
	ОткрытьФорму("Обработка.СервисДоставки.Форма.ПереходКСтраницеПоНомеру",
		ПараметрыОткрытияФормы,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ПослеВыбораНомераСтраницы", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСостоянияЗаказовОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОбновлениеСпискаЗаказов", ЭтотОбъект);
	ОтборСтатус.ПоказатьОтметкуЭлементов(ОбработчикОповещения, НСтр("ru = 'Выберите состояния заказов'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПериодОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОбновлениеСпискаЗаказовПериод", ЭтотОбъект);
	
	ДиалогРедактирования = Новый ДиалогРедактированияСтандартногоПериода;
	ДиалогРедактирования.Период = ОтборПериод;
	ДиалогРедактирования.Показать(ОбработчикОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНомерЗаказаПриИзменении(Элемент)
	
	ВыполнитьОбновлениеСпискаЗаказов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Результат = Новый Структура;
	
	МассивКолонок = НовыйКолонкиТаблицы();
	СтрокаТаблицы = Список.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Для Каждого ИмяКолонки Из МассивКолонок Цикл
		Результат.Вставить(ИмяКолонки, СтрокаТаблицы[ИмяКолонки]);
	КонецЦикла;
	
	ОткрытьФормуПросмотраЗаказа(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСписокЗаказов(Команда)
	
	ВыполнитьОбновлениеСпискаЗаказов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерваяСтраница(Команда)
	
	Если НомерСтраницы > 1 Тогда
		
		НомерСтраницы = 1;
		ВыполнитьОбновлениеСпискаЗаказов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоследняяСтраница(Команда)
	
	Если НомерСтраницы < ВсегоСтраниц Тогда
		
		НомерСтраницы = ВсегоСтраниц;
		ВыполнитьОбновлениеСпискаЗаказов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущаяСтраница(Команда)
	
	Если НомерСтраницы > 1 Тогда
		
		НомерСтраницы = НомерСтраницы - 1;
		ВыполнитьОбновлениеСпискаЗаказов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СледующаяСтраница(Команда)
	
	Если НомерСтраницы < ВсегоСтраниц Тогда
		
		НомерСтраницы = НомерСтраницы + 1;
		ВыполнитьОбновлениеСпискаЗаказов();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьНастройкиПросмотраПоУмолчанию()
	
	НомерСтраницы = 1;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	ОтборПериод.ДатаНачала = НачалоДня(ТекущаяДата) - 3 * 86400;
	ОтборПериод.ДатаОкончания = НачалоДня(ТекущаяДата);
	
КонецПроцедуры

&НаСервере
Функция НовыйКолонкиТаблицы()
	
	Результат = Новый Массив;
	
	МассивКолонок = Список.Выгрузить(Новый Массив).Колонки;
	
	Для Каждого Колонка Из МассивКолонок Цикл
		Результат.Добавить(Колонка.Имя);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуПросмотраЗаказа(ДанныеЗаказа)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ДанныеЗаказа", ДанныеЗаказа);
	ПараметрыОткрытияФормы.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	ПараметрыОткрытияФормы.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ОткрытьФорму("Обработка.СервисДоставки.Форма.ФормаПросмотраЗаказа",
		ПараметрыОткрытияФормы,
		ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросПолучитьСписокСостоянийЗаказов() Экспорт
	
	ПараметрыОперации = Новый Структура("ИмяПроцедуры, НаименованиеОперации, ВыводитьОкноОжидания");
	ПараметрыОперации.ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСписокСостоянийЗаказовИзСервиса();
	ПараметрыОперации.НаименованиеОперации = НСтр("ru = 'Получение списка состояний заказов на доставку.'");
	ПараметрыОперации.ВыводитьОкноОжидания = Ложь;
	
	ВыполнитьЗапрос(ПараметрыОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбновлениеСпискаЗаказов()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	Список.Очистить();
	
	ПараметрыДляПроверки = Новый Структура("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	ПараметрыДляПроверки.Вставить("ИмяФормы", "СписокЗаказов");
	СервисДоставкиКлиент.ПроверитьОрганизациюБизнесСетиСВопросом(ПараметрыДляПроверки, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = Новый Структура("ИмяПроцедуры, НаименованиеОперации, ВыводитьОкноОжидания");
	ПараметрыОперации.ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьЖурналЗаказовНаДоставкуИзСервиса();
	ПараметрыОперации.НаименованиеОперации = НСтр("ru = 'Обновление истории заказов на доставку.'");
	ПараметрыОперации.ВыводитьОкноОжидания = Истина;
	
	ВыполнитьЗапрос(ПараметрыОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокГиперссылкиПериода()
	
	Если Не ЗначениеЗаполнено(ОтборПериод.ДатаНачала)
		И Не ЗначениеЗаполнено(ОтборПериод.ДатаОкончания) Тогда
		ПредставлениеПериода = НСтр("ru = 'все время'");
	Иначе
		ПредставлениеПериода = Строка(ОтборПериод);
	КонецЕсли;
	
	Элементы.ДекорацияПериод.Заголовок = Новый ФорматированнаяСтрока(
		НСтр("ru = 'Заказы за период:'") + " ",
		Новый ФорматированнаяСтрока(ПредставлениеПериода,,,, "Ссылка"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокГиперссылкиСостояний()
	
	СтатусыЗаказов = ВыбранныеСтатусыЗаказов();
	Если СтатусыЗаказов.Количество() = 0 Тогда
		
		ПредставлениеОтбораПоСостояниям = НСтр("ru = 'все заказы'");
		
	ИначеЕсли СтатусыЗаказов.Количество() = 1 Тогда
		
		ПредставлениеОтбораПоСостояниям = СтрШаблон("%1",
			СтатусыЗаказов.Получить(0));
		
	ИначеЕсли СтатусыЗаказов.Количество() = 2 Тогда
		
		ПредставлениеОтбораПоСостояниям = СтрШаблон("%1, %2",
			СтатусыЗаказов.Получить(0),
			СтатусыЗаказов.Получить(1));
			
	ИначеЕсли СтатусыЗаказов.Количество() = 3 Тогда
		
		ПредставлениеОтбораПоСостояниям = СтрШаблон("%1, %2, %3",
			СтатусыЗаказов.Получить(0),
			СтатусыЗаказов.Получить(1),
			СтатусыЗаказов.Получить(2));
			
	Иначе
			
		ПредставлениеОтбораПоСостояниям = СтрШаблон(НСтр("ru = '%1, %2, %3 и еще (%4)'"),
			СтатусыЗаказов.Получить(0),
			СтатусыЗаказов.Получить(1),
			СтатусыЗаказов.Получить(2),
			СтатусыЗаказов.Количество() - 3);
		
	КонецЕсли;
	
	Элементы.ДекорацияСостоянияЗаказов.Заголовок = Новый ФорматированнаяСтрока(
		НСтр("ru = 'Состояния заказов:'") + " ",
		Новый ФорматированнаяСтрока(ПредставлениеОтбораПоСостояниям,,,, "Ссылка"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапрос(ПараметрыОперации)
	
	ИнтернетПоддержкаПодключена = Ложь;
	ОчиститьСообщения();
	
	ИмяФоновогоЗадания = "ФоновоеЗадание" + ПараметрыОперации.ИмяПроцедуры;
	ФоновоеЗадание = ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ПараметрыОперации);
	ЭтотОбъект[ИмяФоновогоЗадания] = ФоновоеЗадание;
	
	Если ИнтернетПоддержкаПодключена = Ложь Тогда
		
		Оповещение = Новый ОписаниеОповещения("ВыполнитьЗапросПродолжение", ЭтотОбъект, ПараметрыОперации);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(Оповещение, ЭтотОбъект);
		Возврат;
		
	Иначе
		
		ПараметрыОперации.Вставить("ФоновоеЗадание", ФоновоеЗадание);
		ВыполнитьЗапросПродолжение(Истина, ПараметрыОперации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяФоновогоЗадания = "ФоновоеЗадание"+ ДополнительныеПараметры.ИмяПроцедуры;
	
	Если Результат = Неопределено Тогда
		
		ТекстСообщения = НСтр("ru = 'Отсутствует подключение к Интернет-поддержке пользователей.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
		
	ИначеЕсли ТипЗнч(Результат) = Тип("Структура")
		И Результат.Свойство("Логин") Тогда
		
		ИнтернетПоддержкаПодключена = Ложь;
		ЭтотОбъект[ИмяФоновогоЗадания] = ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ДополнительныеПараметры);
		ДополнительныеПараметры.Вставить("ФоновоеЗадание", ЭтотОбъект[ИмяФоновогоЗадания]);
		
	КонецЕсли;
	
	Если ЭтотОбъект[ИмяФоновогоЗадания] = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект[ИмяФоновогоЗадания].Статус = "Выполняется" Тогда
		
		ОжидатьЗавершениеВыполненияЗапроса(ДополнительныеПараметры);
		
	ИначеЕсли ЭтотОбъект[ИмяФоновогоЗадания].Статус = "Выполнено" Тогда
		
		ВыполнитьЗапросЗавершение(ЭтотОбъект[ИмяФоновогоЗадания], ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеВыполненияЗапроса(ПараметрыОперации)
	
	ВыводитьОкноОжидания = ?(ЗначениеЗаполнено(ПараметрыОперации.ВыводитьОкноОжидания), 
		ПараметрыОперации.ВыводитьОкноОжидания,
		Ложь);
	
	Если Не ВыводитьОкноОжидания Тогда
		
		Если ПараметрыОперации.ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьЖурналЗаказовНаДоставкуИзСервиса() Тогда
			
			Элементы.СписокОбновитьСписокЗаказов.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИмяФоновогоЗадания = "ФоновоеЗадание" + ПараметрыОперации.ИмяПроцедуры;
	ФоновоеЗадание = ЭтотОбъект[ИмяФоновогоЗадания];
	ПараметрыОперации.Вставить("ФоновоеЗадание", ФоновоеЗадание);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = ПараметрыОперации.НаименованиеОперации;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ВыводитьОкноОжидания;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Вставить("ИдентификаторЗадания", ФоновоеЗадание.ИдентификаторЗадания);
	
	ОбработкаЗавершения = Новый ОписаниеОповещения("ВыполнитьЗапросЗавершение",
		ЭтотОбъект, ПараметрыОперации);
		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, ОбработкаЗавершения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Отказ = Ложь;
	
	ИмяФоновогоЗадания = "ФоновоеЗадание" + ДополнительныеПараметры.ИмяПроцедуры;
	ФоновоеЗадание = ЭтотОбъект[ИмяФоновогоЗадания];
	
	СервисДоставкиКлиент.ОбработатьРезультатФоновогоЗадания(Результат, ДополнительныеПараметры, Отказ);
	Если Результат = Неопределено
		Или ФоновоеЗадание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ
		И Результат.Статус = "Выполнено" Тогда
		
		Если ЗначениеЗаполнено(Результат.АдресРезультата)
			И ЭтоАдресВременногоХранилища(Результат.АдресРезультата)
			И ДополнительныеПараметры.ФоновоеЗадание.ИдентификаторЗадания = ЭтотОбъект[ИмяФоновогоЗадания].ИдентификаторЗадания Тогда
			
			Если ДополнительныеПараметры.ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСписокСостоянийЗаказовИзСервиса() Тогда
				
				ЗагрузитьРезультатПолученияСпискаСостоянийЗаказовНаДоставку(Результат.АдресРезультата);
				УстановитьЗаголовокГиперссылкиСостояний();
				
				Элементы.ДекорацияДлительнаяОперация.Видимость = Ложь;
				
			ИначеЕсли ДополнительныеПараметры.ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьЖурналЗаказовНаДоставкуИзСервиса() Тогда
				
				ЗагрузитьРезультатПолученияЖурналаЗаказовНаДоставку(Результат.АдресРезультата);
				ОбновитьПанельНавигации();
				
				ФоновоеЗаданиеПолучитьЖурналЗаказовНаДоставкуИзСервиса = Неопределено;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРезультатПолученияСпискаСостоянийЗаказовНаДоставку(АдресРезультата, ОперацияВыполнена = Истина)
	
	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		
		Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
		Если ЗначениеЗаполнено(Результат)
			И ТипЗнч(Результат) = Тип("Структура") Тогда
			
			Если Результат.Свойство("Список")
				И ТипЗнч(Результат.Список) = Тип("Массив") Тогда
				
				Для Каждого ТекущаяСтрока Из Результат.Список Цикл
					ОтборСтатус.Добавить(ТекущаяСтрока.status, ТекущаяСтрока.title);
				КонецЦикла;
				
			КонецЕсли;
			
			СервисДоставки.ОбработатьБлокОшибок(Результат, ОперацияВыполнена);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРезультатПолученияЖурналаЗаказовНаДоставку(АдресРезультата, ОперацияВыполнена = Истина)
	
	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		
		Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
		Если ЗначениеЗаполнено(Результат)
			И ТипЗнч(Результат) = Тип("Структура") Тогда
			
			Список.Очистить();
			
			Если Результат.Свойство("Список") Тогда
			
				Если ТипЗнч(Результат.Список) = Тип("Массив") Тогда
					
					Для Каждого ТекущаяСтрока Из Результат.Список Цикл
						
						НоваяСтрока = Список.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
						
						СервисДоставкиПереопределяемый.ОбработатьРезультатСостоянияЗаказаНаДоставку(ТекущаяСтрока);
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Результат.Свойство("Страницы") Тогда
				
				НомерСтраницы = Макс(Результат.Страницы.ТекущаяСтраница, 1);
				ВсегоСтраниц = Мин(Макс(Результат.Страницы.КоличествоСтраниц, 1), 400);
				
				Если ВсегоСтраниц = 400 Тогда
					Элементы.ДекорацияТекущаяСтраница.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
				Иначе
					Элементы.ДекорацияТекущаяСтраница.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
				КонецЕсли;
				
			КонецЕсли;
			
			СервисДоставки.ОбработатьБлокОшибок(Результат, ОперацияВыполнена);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПанельНавигации()
	
	Элементы.ДекорацияТекущаяСтраница.Заголовок = Новый ФорматированнаяСтрока("Страница ",
		Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = '%1 из %2'"), 
			Формат(НомерСтраницы, НСтр("ru = 'ЧН=; ЧГ='")),
			Формат(Макс(ВсегоСтраниц, 1), НСтр("ru = 'ЧН=; ЧГ='"))),,,,
			"Ссылка"));
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ПараметрыОперации)
	
	ИнтернетПоддержкаПодключена = ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	Если Не ИнтернетПоддержкаПодключена Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Отказ = Ложь;
	ПараметрыЗапроса = ПараметрыЗапроса(ПараметрыОперации, Отказ);
	
	Если ПараметрыЗапроса.Свойство("ОрганизацияБизнесСетиСсылка") Тогда
		СервисДоставкиСлужебный.ПроверитьОрганизациюБизнесСети(ПараметрыЗапроса.ОрганизацияБизнесСетиСсылка, Отказ);
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяФоновогоЗадания = "ФоновоеЗадание" + ПараметрыОперации.ИмяПроцедуры;
	ФоновоеЗадание = ЭтотОбъект[ИмяФоновогоЗадания];
	Если ФоновоеЗадание <> Неопределено Тогда
		ОтменитьВыполнениеЗадания(ФоновоеЗадание.ИдентификаторЗадания);
	КонецЕсли;
	
	Задание = Новый Структура("ИмяПроцедуры, Наименование, ПараметрыПроцедуры");
	Задание.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1. %2'"),
		СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(ТипГрузоперевозки),
		ПараметрыОперации.НаименованиеОперации);
	Задание.ИмяПроцедуры = "СервисДоставки." + ПараметрыОперации.ИмяПроцедуры;
	Задание.ПараметрыПроцедуры = ПараметрыЗапроса;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = Задание.Наименование;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	Если ПараметрыОперации.Свойство("ЗапуститьВФоне")
		И ТипЗнч(ПараметрыОперации.ЗапуститьВФоне) = Тип("Булево") Тогда
		ПараметрыВыполнения.ЗапуститьВФоне = ПараметрыОперации.ЗапуститьВФоне;
	КонецЕсли; 
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(Задание.ИмяПроцедуры,
		Задание.ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
		ИдентификаторЗадания = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыЗапроса(ПараметрыОперации, Отказ)
	
	ПараметрыЗапроса = Новый Структура();
	
	ИмяПроцедуры = ПараметрыОперации.ИмяПроцедуры;
	
	Если ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьЖурналЗаказовНаДоставкуИзСервиса() Тогда
		ПараметрыЗапроса = ПараметрыЗапросаПолучитьЖурналЗаказовНаДоставкуИзСервиса(ПараметрыОперации, Отказ);
	КонецЕсли;
	
	ПараметрыЗапроса.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

&НаСервере
Функция ПараметрыЗапросаПолучитьЖурналЗаказовНаДоставкуИзСервиса(ПараметрыОперации, Отказ)
	
	ПараметрыЗапроса = СервисДоставки.НовыйПараметрыЗапросаПолучитьЖурналЗаказовНаДоставкуИзСервиса();
	ПараметрыЗапроса.Страница = НомерСтраницы;
	
	Если ЗначениеЗаполнено(ОтборПериод.ДатаНачала) Тогда
		ПараметрыЗапроса.ДатаСозданияОт = ОтборПериод.ДатаНачала;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборПериод.ДатаОкончания) Тогда
		ПараметрыЗапроса.ДатаСозданияДо = ОтборПериод.ДатаОкончания;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборНомерЗаказа) Тогда
		ПараметрыЗапроса.МассивНомеров.Добавить(ОтборНомерЗаказа);
	КонецЕсли;
	
	СтатусыЗаказов = ВыбранныеСтатусыЗаказов();
	Если СтатусыЗаказов.Количество() > 0 Тогда
		ПараметрыЗапроса.СписокСтатусов = СтатусыЗаказов.ВыгрузитьЗначения();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		ПараметрыЗапроса.ТипГрузоперевозки = ТипГрузоперевозки;
	Иначе
		
		ТекстОшибки = НСтр("ru = 'Не выбран тип грузоперевозки.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Отказ = Истина;
		
	КонецЕсли;
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

&НаСервере
Функция ВыбранныеСтатусыЗаказов()
	
	Результат = Новый СписокЗначений;
	
	Для Каждого Элемент Из ОтборСтатус Цикл
		
		Если Элемент.Пометка Тогда
			Результат.Добавить(Элемент.Значение, Элемент.Представление);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПослеВыбораНомераСтраницы(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НомерСтраницы = Результат;
	ВыполнитьОбновлениеСпискаЗаказов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеСпискаЗаказов(Значение, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Значение) = Тип("СписокЗначений") Тогда
		
		НомерСтраницы = 1;
		
		УстановитьЗаголовокГиперссылкиСостояний();
		ВыполнитьОбновлениеСпискаЗаказов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеСпискаЗаказовПериод(Значение, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Значение) = Тип("СтандартныйПериод") Тогда
		
		НомерСтраницы = 1;
		
		ОтборПериод = Значение;
		
		УстановитьЗаголовокГиперссылкиПериода();
		ВыполнитьОбновлениеСпискаЗаказов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокСостояние.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СостояниеИдентификатор");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "finished";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныйДляВыбораЭлементБЭД);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокСостояние.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СостояниеИдентификатор");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "declined";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненныйРеквизитЦветБЭД);
	
КонецПроцедуры

#КонецОбласти
