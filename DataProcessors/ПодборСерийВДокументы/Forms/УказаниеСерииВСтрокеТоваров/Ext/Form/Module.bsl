
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	РежимОтображенияСерий = "ТолькоОстатки";
	
	ПараметрыУказанияСерий = Параметры.ПараметрыУказанияСерий;
	
	ЗначенияПолейСвязиСтруктура = Новый Структура(СтрСоединить(ПараметрыУказанияСерий.ИменаПолейДополнительные,","));
	ЗначенияПолейСвязиСтруктура.Вставить("Номенклатура");
	ЗначенияПолейСвязиСтруктура.Вставить("Характеристика");
	ЗначенияПолейСвязиСтруктура.Вставить("Склад");
	ЗаполнитьЗначенияСвойств(ЗначенияПолейСвязиСтруктура, Параметры);
	ЗначенияПолейСвязи = Новый ФиксированнаяСтруктура(ЗначенияПолейСвязиСтруктура);
	
	Склад = Параметры.Склад;
	
	Количество = Параметры.Количество;
	РежимПомощника = Параметры.РежимПомощника;

	АвторизованВнешнийПользователь = ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь();
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма, "");
	
	РеквизитыНоменклатуры = Новый ФиксированнаяСтруктура(ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Номенклатура,
		"ВидНоменклатуры,ЕдиницаИзмерения,ОсобенностьУчета,СрокГодности,ЕдиницаИзмеренияСрокаГодности"));
		
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыНоменклатуры); 
	
	НастройкиИспользованияСерий = Новый ФиксированнаяСтруктура(Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий(
																							РеквизитыНоменклатуры.ВидНоменклатуры,
																							ПараметрыУказанияСерий,
																							ЗначенияПолейСвязи));
																							
	НоменклатураСервер.ПроверитьВозможностьОткрытияФормыУказанияСерий(НастройкиИспользованияСерий, ПараметрыУказанияСерий, ЗначенияПолейСвязи);
	
	Распоряжение    = Обработки.ПодборСерийВДокументы.РаспоряжениеПоПараметрамФормы(Параметры);
	ВидНоменклатуры = НастройкиИспользованияСерий.ВладелецСерий;
	
	ПараметрыЗапросаВрем = Новый Структура;
	ПараметрыЗапросаВрем.Вставить("Номенклатура", Параметры.Номенклатура);
	ПараметрыЗапросаВрем.Вставить("Характеристика", Параметры.Характеристика);
	Если Параметры.Свойство("Назначение") Тогда
		Назначение = Параметры.Назначение;
		
		Если ПараметрыУказанияСерий.ИмяПоляСкладОтправитель <> Неопределено
			И ПараметрыУказанияСерий.ИмяПоляСкладПолучатель <> Неопределено Тогда //это перемещение товаров
			Назначение = Параметры.НазначениеОтправителя;
		КонецЕсли;
		
		ПараметрыЗапросаВрем.Вставить("Назначение", Назначение);
		
	Иначе
		ПараметрыЗапросаВрем.Вставить("Назначение", Справочники.Назначения.ПустаяСсылка());
	КонецЕсли;
	ПараметрыЗапросаВрем.Вставить("Склад", Параметры.Склад);
	ПараметрыЗапросаВрем.Вставить("Помещение", Параметры.Помещение);
	ПараметрыЗапросаВрем.Вставить("Регистратор", Параметры.Регистратор);
	ПараметрыЗапросаВрем.Вставить("Распоряжение", Распоряжение);
	
	ПараметрыЗапроса = Новый ФиксированнаяСтруктура(ПараметрыЗапросаВрем);
	
	ВариантПолучениеДанныхИзРегистров = Обработки.ПодборСерийВДокументы.ВариантПолучениеДанныхИзРегистровПоПараметрамФормы(ПараметрыУказанияСерий, 
																															Распоряжение,
																															Параметры.Склад,
																															РеквизитыНоменклатуры.ВидНоменклатуры);
	
	Если Обработки.ПодборСерийВДокументы.ЕстьПраваНаЧтениеДанныхРегистров(ВариантПолучениеДанныхИзРегистров, Склад) Тогда
		ВыполнитьЗапросЗаполненияТаблицыОстатков();
	Иначе
		Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	Заголовки = Обработки.ПодборСерийВДокументы.ЗаголовкиПоВариантуПолучениеДанныхИзРегистров(ВариантПолучениеДанныхИзРегистров);
	
	Элементы.РежимОтображенияСерий.СписокВыбора[0].Представление = Заголовки.ЗаголовокКнопки;
	
	Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
		ЗаголовокСвободногоОстатка = СтрЗаменить(Заголовки.ЗаголовокСвободногоОстатка,"%ЕдиницаИзмерения%", РеквизитыНоменклатуры.ЕдиницаИзмерения);
		Элементы.ОстаткиСерийСвободныйОстаток.Заголовок = ЗаголовокСвободногоОстатка;
	Иначе
		Элементы.ОстаткиСерийСвободныйОстаток.Видимость = Ложь;
		Элементы.РежимОтображенияСерий.Видимость = Ложь;
	КонецЕсли;
	
	Серия = Параметры.Серия;
	ЗаписыватьПоляМетки = Новый Структура("RFIDEPC,RFIDUser", Ложь, Ложь);
	
	Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		Если Описание.ИмяНастройки = "ИспользоватьRFIDМеткиСерии" Тогда
			
			Если Описание.ИмяРеквизита = "RFIDTID" Тогда
				Если Описание.Использование Тогда
					Считыватели = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам("СчитывательRFID");
					Если Считыватели.Количество() = 0 Тогда
						ПодключатьСчитывательRFID = Ложь;
					ИначеЕсли Считыватели.Количество() = 1 Тогда
						ПодключатьСчитывательRFID = Истина;
						СчитывательRFID = Считыватели[0].Ссылка;
					Иначе
						ТекстСообщения = НСтр("ru = 'К рабочему месту подключено несколько считывателей RFID. Работа одновременно с несколькими считывателями не поддерживается. Оставьте только один считываетель.'");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
						ПодключатьСчитывательRFID = Ложь;
					КонецЕсли;
				Иначе
					ПодключатьСчитывательRFID = Ложь;
				КонецЕсли;
				Элементы.СтатусРаботыRFID.Видимость = Описание.Использование;
				
				Элементы.СчитатьRFID.Видимость = Описание.Использование
												 И ПодключатьСчитывательRFID
												 И Не АвторизованВнешнийПользователь;
												 
				Элементы.RFIDМеткаНеЧитаемая.Видимость       = Описание.Использование;
				
			ИначеЕсли (Описание.ИмяРеквизита = "RFIDEPC"
				Или Описание.ИмяРеквизита = "RFIDUser")
				И Описание.Использование Тогда	
				
				ЗаписыватьПоляМетки[Описание.ИмяРеквизита] = Описание.МожноРедактировать;
				
			КонецЕсли;
			
		Иначе
	
			ПолеФормыРеквизит = Элементы[Описание.ИмяРеквизита]; // ПолеФормы
			ПолеФормыОстаткиСерий = Элементы[Обработки.ПодборСерийВДокументы.НазванияЭлементовСерий(Описание.ИмяРеквизита).ОстаткиСерий]; // ПолеФормы
			
			ПолеФормыРеквизит.Видимость                  = Описание.Использование; 
			ПолеФормыОстаткиСерий.Видимость              = Описание.Использование;
			ПолеФормыРеквизит.ТолькоПросмотр             = Не Описание.МожноРедактировать; 	
			ПолеФормыРеквизит.АвтоОтметкаНезаполненного  = Описание.ПроверятьЗаполнение; 	
			
			Если Не ПустаяСтрока(Описание.Формат) Тогда
				ПолеФормыРеквизит.Формат               = Описание.Формат;
				ПолеФормыРеквизит.ФорматРедактирования = Описание.Формат;
				
				ПолеФормыОстаткиСерий.Формат               = Описание.Формат;
				ПолеФормыОстаткиСерий.ФорматРедактирования = Описание.Формат;
			КонецЕсли;
			
			Если Не ПустаяСтрока(Описание.ПредставлениеФорматнойСтрокиВЗаголовке) Тогда
				ПредставлениеЗаголовкаКолонки = НСтр("ru = '%ПредставлениеРеквизита% (%ПредставлениеФормата%)'");
				ПредставлениеЗаголовкаКолонки = СтрЗаменить(ПредставлениеЗаголовкаКолонки, "%ПредставлениеРеквизита%", Описание.ПредставлениеРеквизита);
				ПредставлениеЗаголовкаКолонки = СтрЗаменить(ПредставлениеЗаголовкаКолонки, "%ПредставлениеФормата%", Описание.ПредставлениеФорматнойСтрокиВЗаголовке);
				
				ПолеФормыРеквизит.Заголовок     = ПредставлениеЗаголовкаКолонки; 
				ПолеФормыОстаткиСерий.Заголовок = ПредставлениеЗаголовкаКолонки;
			КонецЕсли;
			
			Если Описание.ИмяРеквизита = "Номер" Тогда
				
				Элементы.СгенерироватьНомер.Видимость        = Элементы.Номер.Видимость;
				Элементы.СгенерироватьНомер.Доступность      = Не Элементы.Номер.ТолькоПросмотр;
				
			КонецЕсли;
			
			Если Не ПустаяСтрока(Описание.ТекстУсловногоОформления) Тогда
				ТекстПодсказки = СтрЗаменить(Описание.ТекстУсловногоОформления, "<","");
				ТекстПодсказки = СтрЗаменить(Описание.ТекстУсловногоОформления, ">","");
				
				ПолеФормыРеквизит.ПодсказкаВвода = Описание.ТекстУсловногоОформления;
				ПолеФормыРеквизит.Подсказка      = ТекстПодсказки;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ЗаписатьВRFID.Видимость = (ЗаписыватьПоляМетки.RFIDEPC
										Или ЗаписыватьПоляМетки.RFIDUser)
										И ПодключатьСчитывательRFID
										И Не АвторизованВнешнийПользователь;
	
	Если Не ПустаяСтрока(РежимПомощника) Тогда
		
		СтруктураРеквизитов = Новый Структура(РеквизитыВводаСерии(НастройкиИспользованияСерий));
		
		СерияНовая               = Параметры.Серия;
		ЗаполнитьРеквизитыПоСерии(СтруктураРеквизитов, СерияНовая, НастройкиИспользованияСерий);
		СерияНоваяКешВвода       = Новый ФиксированнаяСтруктура(СтруктураРеквизитов);
		
		СерияСписываемая = Параметры.СписываемаяСерия;
		ЗаполнитьРеквизитыПоСерии(СтруктураРеквизитов, СерияСписываемая, НастройкиИспользованияСерий);
		СерияСписываемаяКешВвода = Новый ФиксированнаяСтруктура(СтруктураРеквизитов);
		
		Если РежимПомощника = "НоваяСерия" Тогда
			НастроитьФормуПоШагу("Шаг2");
		Иначе
			НастроитьФормуПоШагу("Шаг1");
		КонецЕсли;
		
		Элементы.ОК.Заголовок = НСтр("ru = 'Готово'");
		
	Иначе
		
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииОкончание;
		Элементы.ГруппаНазад.Видимость = Ложь;
		
		НайденныеСтроки = ОстаткиСерий.НайтиСтроки(Новый Структура("Серия",Серия));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы.ОстаткиСерий.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ПечатьЭтикетки.Видимость = Не АвторизованВнешнийПользователь;
	
	ИдентификаторТекущейСтроки = Параметры.ИдентификаторТекущейСтроки;
	
	Если Параметры.ТолькоПросмотр Тогда
		Параметры.ТолькоПросмотр = Ложь; //Для исключения платформенной обработки
		
		Элементы.Номер.ТолькоПросмотр   = Истина;
		Элементы.ГоденДо.ТолькоПросмотр = Истина;
		Элементы.ОК.Доступность         = Ложь;
		
		РежимПросмотра = Истина;
	КонецЕсли;
	
	ЗакрыватьПриВыборе = Ложь;
	
	ЗаполнитьРеквизитыПоСерии(ЭтаФорма, Серия, НастройкиИспользованияСерий);
	ЗаполнитьФлагиРаботыСМеткой();
	
	Если ЗначениеЗаполнено(Параметры.Текст)
		И (Не ЗначениеЗаполнено(Серия) ИЛИ Параметры.Текст <> Наименование) Тогда
		РеквизитыСерииИзСтроки = НоменклатураСервер.РеквизитыСерииИзСтроки(Параметры.Текст, НастройкиИспользованияСерий);
		ЗаполнитьЗначенияСвойств(ЭтаФорма,РеквизитыСерииИзСтроки);
	КонецЕсли;
	
	ПравоДобавленияСерий = ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры);
	
	Если ПравоДобавленияСерий Тогда
		
		// Выведем поля для заполнения доп. реквизитов серий 
		Если ЗначениеЗаполнено(Параметры.Серия) Тогда
			СерияОбъект = Параметры.Серия.ПолучитьОбъект();
		Иначе
			СерияОбъект = Справочники.СерииНоменклатуры.ПустойОбъект(НастройкиИспользованияСерий.ВладелецСерий);
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Объект", СерияОбъект);
		ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
		УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
		
		УправлениеСвойствамиУТ.УстановитьОтметкуНезаполненныхСвойств(ЭтаФорма, СерияОбъект);
		
	КонецЕсли;
	
	УстановитьЗаголовокДекорацииСерия();
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка, Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПравоДобавленияСерий Тогда
		// СтандартныеПодсистемы.Свойства
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.Свойства
	КонецЕсли;
	
	ИдетЗаписьRFID = Ложь;
	
	ПоддерживаемыеТипыОборудования = "СканерШтрихкода";
	
	Если ПодключатьСчитывательRFID Тогда
		ПоддерживаемыеТипыОборудования = ПоддерживаемыеТипыОборудования + ", СчитывательRFID";
	КонецЕсли;
	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, ПоддерживаемыеТипыОборудования);

	ТекущаяДатаПроизводства = ДатаПроизводства;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	ШтрихкодированиеНоменклатурыКлиент.ОтключитьОборудование(Неопределено, Новый Структура("Форма",ЭтаФорма));

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() И НЕ ТолькоПросмотр Тогда
		ЗавершитьПодбор = Ложь;
		
		Если ИмяСобытия = "ScanData" Тогда
			
			Если РежимПросмотра Тогда
				Возврат;
			КонецЕсли;
			
			Если ОбработатьШтрихкоды(МенеджерОборудованияУТКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр)) Тогда
				ЗавершитьПодбор = Истина;
			КонецЕсли;
			
		ИначеЕсли ИмяСобытия = "RFID"
			И Не ИдетЗаписьRFID
			И ШтрихкодированиеНоменклатурыКлиент.ДляОбработкиRFIDНуженСерверныйВызов(Параметр, ЭтаФорма) Тогда
			ОбработатьСчитываниеRFID(Параметр);
		КонецЕсли;
		
		Если ЗавершитьПодбор
			И ПустаяСтрока(РежимПомощника)
			И ОбязательныеРеквизитыЗаполнены(Ложь) Тогда
			ПодключитьОбработчикОжидания("ПодобратьСериюЗавершитьВвод", 0.1, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = "ЗаписьRFID_Серии" Тогда
		RFIDEPC = Параметр.RFIDEPC;
		НайтиСоздатьСерию();
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма,Параметр);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ПравоДобавленияСерий Тогда
		// Проверим заполнение обязательных доп. реквизитов серий
		УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура РежимПросмотраПриИзменении(Элемент)
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОстаткиСерийВыборКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийВыборКлиент()
	
	ОчиститьСообщения();

	ТекущиеДанные = Элементы.ОстаткиСерий.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Выберите серию или введите новую.'");	
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(РежимПомощника)
		И Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииНачало Тогда
		ПерейтиНаСледующийШаг();
	Иначе
		ПодобратьСериюЗавершитьВвод();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура RFIDМеткаНеЧитаемаяПриИзменении(Элемент)
	ЗаполнитьФлагиРаботыСМеткой();
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСерию(Элемент)
	
	ПодобратьСериюСервер(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ГоденДоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИменаПараметров = "ГоденДо, ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности, ФорматДаты, 
						|ИспользоватьДатуПроизводства";
	ПараметрыФормы = Новый Структура(ИменаПараметров);
	
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, ЭтаФорма);
	
	ПараметрыФормы.ФорматДаты                   = Элемент.ФорматРедактирования;
	ПараметрыФормы.ИспользоватьДатуПроизводства = НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ГоденДоНачалоВыбораЗавершение", ЭтотОбъект);
	
	НоменклатураКлиент.ДатаИстеченияСрокаГодностиНачалоВыбора(ЭтаФорма, ПараметрыФормы, ОписаниеОповещения,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГоденДоНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ПодобратьСериюСервер("ГоденДо");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПроизводстваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДатаПроизводстваНачалоВыбораЗавершение", ЭтотОбъект);
	
	НоменклатураКлиент.ДатаПроизводстваНачалоВыбора(ЭтаФорма, ОписаниеОповещения, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПроизводстваНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ПодобратьСериюСервер("ДатаПроизводства");
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	ПодобратьСериюЗавершитьВвод();
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий Тогда
		ОстаткиСерийВыборКлиент();
	Иначе
		
		//++ Локализация
		Если Не ЗначениеЗаполнено(Номер)
			И RFIDМеткаНеЧитаемая Тогда
			Номер = НомерКиЗГИСМ;
		КонецЕсли;
		//-- Локализация
		
		Если Не ОбязательныеРеквизитыЗаполнены(,Истина) Тогда
			Возврат;
		КонецЕсли;
		ПерейтиНаСледующийШаг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ВернутьсяНаПредыдущийШаг();
	
КонецПроцедуры

&НаКлиенте
Процедура СчитатьМетку(Команда)
	ОчиститьСообщения();
	ШтрихкодированиеНоменклатурыКлиент.ОткрытьСессиюСчитывателяRFID(ЭтаФорма);
	ПодключитьОбработчикОжидания("ОтработатьТаймаутОжиданияСчитыванияRFID", 5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВRFID(Команда)
	ИдетЗаписьRFID = Истина;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ДанныеСерии",ДанныеСерии(НастройкиИспользованияСерий, ЭтаФорма));
	ПараметрыЗаписи.Вставить("Форма", ЭтаФорма);
	
	ШтрихкодированиеНоменклатурыКлиент.ЗаписатьДанныеВRFID(Неопределено, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНомер(Команда)
	
	СгенерироватьНомерСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикетки(Команда)
	
	КоличествоЭтикеток = Количество;
	
	Если Не ЗначениеЗаполнено(НастройкиИспользованияСерий.ШаблонЭтикеткиСерии) Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("Назначение", ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
		
		ПараметрыФормы = Новый Структура("Отбор",Отбор);
		
		ОткрытьФорму(
			"Справочник.ШаблоныЭтикетокИЦенников.ФормаВыбора",
			ПараметрыФормы,ЭтаФорма,,,,
			Новый ОписаниеОповещения("ПечатьЗавершение", 
				ЭтотОбъект,
				Новый Структура("КоличествоЭтикеток", КоличествоЭтикеток)),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		Возврат;
		
	КонецЕсли;
	
	ПечатьФрагмент(КоличествоЭтикеток);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект, ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#Область Печать

&НаКлиенте
Процедура ПечатьЗавершение(Результат, ДополнительныеПараметры) Экспорт
  
    Если Не ЗначениеЗаполнено(Результат) Тогда
        Возврат;
    КонецЕсли;
	
	НастройкиИспользованияСерийСтруктура                     = Новый Структура(НастройкиИспользованияСерий);
	НастройкиИспользованияСерийСтруктура.ШаблонЭтикеткиСерии = Результат;
	НастройкиИспользованияСерий                              = Новый ФиксированнаяСтруктура(НастройкиИспользованияСерийСтруктура);
	
    ПечатьФрагмент(ДополнительныеПараметры.КоличествоЭтикеток);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьФрагмент(КоличествоЭтикеток)
    
	Если Не НайтиСоздатьСерию() Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьВводЧисла(
		Новый ОписаниеОповещения(
			"ПечатьФрагментЗавершение", 
			ЭтотОбъект,
			Новый Структура("Серия", Серия)),
		КоличествоЭтикеток,
		НСтр("ru = 'Количество экземпляров'"),
		8,
		0);
		
КонецПроцедуры

&НаКлиенте
Процедура ПечатьФрагментЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) ИЛИ Результат < 1 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("АдресВХранилище", ПодготовитьДанныеДляПечати(Результат, ДополнительныеПараметры.Серия));
    
    СтруктураПараметров.Вставить("ШаблонЭтикетки", НастройкиИспользованияСерий.ШаблонЭтикеткиСерии); 
    СтруктураПараметров.Вставить("НазначениеШаблона", ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
    СтруктураПараметров.Вставить("КоличествоЭкземпляров", 1);
    
    ПараметрКоманды = Новый Массив;
    ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка"));
    
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
        "Обработка.ПечатьЭтикетокИЦенников",
        "ЭтикеткаСерииНоменклатуры",
        ПараметрКоманды,
        ЭтаФорма,
        СтруктураПараметров);
    
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляПечати(КоличествоЭтикеток, Знач Серия)
	
	СерииНоменклатуры = Новый ТаблицаЗначений;
	СерииНоменклатуры.Колонки.Добавить("Серия",		Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	СерииНоменклатуры.Колонки.Добавить("Штрихкод",	Новый ОписаниеТипов("Строка"));
	
	КоличествоЭкз = КоличествоЭтикеток;
	
	Пока КоличествоЭкз > 0 Цикл
		
		КоличествоЭкз = КоличествоЭкз - 1;
		
		НоваяСтрока = СерииНоменклатуры.Добавить();
		НоваяСтрока.Серия = Серия;
		
		ШаблонФорматаДаты = НСтр("ru='ДФ=""%1""'");
		ШаблонФорматаДаты = СтрШаблон(ШаблонФорматаДаты, "ддММггЧЧ");
		
		Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии	И НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
			НоваяСтрока.ШтрихКод = СокрЛП(Номер) + Формат(ГоденДо, ШаблонФорматаДаты);
		ИначеЕсли НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
			НоваяСтрока.ШтрихКод = СокрЛП(Номер);
		Иначе
			НоваяСтрока.ШтрихКод = Формат(ГоденДо,ШаблонФорматаДаты);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(СерииНоменклатуры);
	
КонецФункции

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ШтрихкодыИТорговоеОборудование

&НаКлиенте
Функция ОбработатьШтрихкоды(ДанныеШтрихкодов)
	
	Если ДанныеШтрихкодов.Количество() <> 1 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не поддерживается одновременное распознование нескольких штрих-кодов серий. Сканируйте серии по одной.'");
		ПоказатьПредупреждение(,ТекстСообщения);
		Возврат Ложь;
		
	КонецЕсли;
	
	ОбработатьШтрихкодыСервер(ДанныеШтрихкодов);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ОбработатьШтрихкодыСервер(ДанныеШтрихкодов)
	
	ШтрихкодыПоТипам = ШтрихкодированиеНоменклатурыСервер.СтруктураПоТипамШтрихкодов(ДанныеШтрихкодов);
	
	Если ШтрихкодыПоТипам.БезТипа.Количество() > 0 Тогда
		Штрихкод = ДанныеШтрихкодов[0].Штрихкод;
		
		ПоляИзШтрихкода = НоменклатураКлиентСервер.ИнформацияОСерииИзШтрихкода(Штрихкод, 
																				НастройкиИспользованияСерий.ИспользоватьНомерСерии,
																				НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии);
		Номер   = ПоляИзШтрихкода.Номер;
		ГоденДо = ПоляИзШтрихкода.ГоденДо;
		ПодобратьСериюСервер("");
	КонецЕсли;
	
	ОбработатьШтрихкодыСерверЛокализация(ШтрихкодыПоТипам);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработатьТаймаутОжиданияСчитыванияRFID()
	
	Если ОткрытаСессияСчитывателяRFID Тогда
		ШтрихкодированиеНоменклатурыКлиент.ОтработатьТаймаутОжиданияСчитыванияRFID(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьСчитываниеRFID(ДанныеМеток)
	
	ПараметрыОбработки = ШтрихкодированиеНоменклатурыСервер.ПараметрыОбработкиСчитанныхRFID();
	ЗаполнитьЗначенияСвойств(ПараметрыОбработки,ЭтаФорма);
	
	РезультатОбработки = ШтрихкодированиеНоменклатурыСервер.ОбработатьСчитываниеRFID(ДанныеМеток, ПараметрыОбработки);
	
	Если ЗначениеЗаполнено(РезультатОбработки.ДанныеСерии) Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, РезультатОбработки.ДанныеСерии);
		Если ЗначениеЗаполнено(Серия) Тогда
			СтруктураПоиска = Новый Структура("Серия",Серия);
			НайденныеСтроки = ОстаткиСерий.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				Элементы.ОстаткиСерий.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПодобратьСериюСервер(ВводимыйРеквизит)
	
	Если ВводимыйРеквизит = "ГоденДо"
		Или ВводимыйРеквизит = "ДатаПроизводства" Тогда
		
		НоменклатураКлиентСервер.ПересчитатьДатуСерии(ЭтотОбъект[ВводимыйРеквизит]);
		Если ВводимыйРеквизит = "ДатаПроизводства" Тогда
			ЗаполнитьГоденДоПоДатеПроизводства();
		КонецЕсли;
		
	КонецЕсли;

	Запрос = Новый Запрос;
	ШаблонУсловияПоРеквизиту = " СерииНоменклатуры.%ИмяРеквизита% = &%ИмяРеквизита% ";
	
	МассивУсловийИ   = Новый Массив;
	МассивУсловийИЛИ = Новый Массив;
	
	ПустыеЗначенияРеквизитов = ОбщегоНазначенияУТ.СтруктураСоСвойствамиОбъектаМетаданных(Метаданные.Справочники.СерииНоменклатуры);
	
	Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		Если Описание.ИмяНастройки <> "ИспользоватьRFIDМеткиСерии" Тогда
			Если Описание.Использование Тогда
				ТекстУсловия = СтрЗаменить(ШаблонУсловияПоРеквизиту, "%ИмяРеквизита%", Описание.ИмяРеквизита);
				Запрос.УстановитьПараметр(Описание.ИмяРеквизита, ЭтотОбъект[Описание.ИмяРеквизита]);
				
				Если Описание.ПроверятьУникальностьЗначения Тогда
					МассивУсловийИЛИ.Добавить(ТекстУсловия);
				Иначе
					МассивУсловийИ.Добавить(ТекстУсловия);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
	|	И (&ТекстУсловийИ_
	|		ИЛИ &ТекстУсловийИЛИ_)";
	
	Если МассивУсловийИ.Количество() > 0 Тогда
		ТекстУсловийИ = СтрСоединить(МассивУсловийИ, "И");
	Иначе
		ТекстУсловийИ = "ЛОЖЬ";
	КонецЕсли;
	
	Если МассивУсловийИЛИ.Количество() > 0 Тогда
		ТекстУсловийИЛИ = СтрСоединить(МассивУсловийИЛИ, "ИЛИ");
	Иначе
		ТекстУсловийИЛИ = "ЛОЖЬ";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ТекстУсловийИ_",ТекстУсловийИ);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ТекстУсловийИЛИ_",ТекстУсловийИЛИ);
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", НастройкиИспользованияСерий.ВладелецСерий);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Серия = Выборка.Серия;
	Иначе
		Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьЗаголовокДекорацииСерия();
	
КонецПроцедуры

&НаСервере
Процедура СгенерироватьНомерСервер()
	
	НомерЧислом = Справочники.СерииНоменклатуры.ВычислитьМаксимальныйНомерСерии(ВидНоменклатуры) + 1;
	Номер = Формат(НомерЧислом, "ЧЦ=8; ЧВН=; ЧГ=");
	Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
	УстановитьЗаголовокДекорацииСерия();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФлагиРаботыСМеткой()
	
	ДанныеСерии = ДанныеСерии(НастройкиИспользованияСерий, ЭтотОбъект);
	
	ПараметрыЗаполненияФлаговРаботыСМеткой = ШтрихкодированиеНоменклатурыСервер.ПараметрыЗаполненияФлаговРаботыСМеткой();
	ПараметрыЗаполненияФлаговРаботыСМеткой.ТекущаяМетка = Неопределено;
	ПараметрыЗаполненияФлаговРаботыСМеткой.НастройкиИспользованияСерий = НастройкиИспользованияСерий;
	ПараметрыЗаполненияФлаговРаботыСМеткой.ЗначенияПолейСвязи = ЗначенияПолейСвязи;
	
	ШтрихкодированиеНоменклатурыСервер.ЗаполнитьФлагиРаботыСМеткой(ДанныеСерии, ПараметрыЗаполненияФлаговРаботыСМеткой);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеСерии);
	
	Если RFIDМеткаНеЧитаемая Тогда
		НужноЗаписатьМетку = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДанныеСерии(НастройкиИспользованияСерий, ДанныеДляЗаполнения)
	
	ДанныеСерии = Новый Структура(РеквизитыВводаСерии(НастройкиИспользованияСерий));
	ЗаполнитьЗначенияСвойств(ДанныеСерии, ДанныеДляЗаполнения);
	
	Возврат ДанныеСерии;
	
КонецФункции

&НаКлиенте
Процедура ПодобратьСериюЗавершитьВвод()
	
	Если РежимПросмотра Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ВозвращаемоеЗначение = НоменклатураКлиентСервер.ВыбраннаяСерия();
	
	ТекущиеДанные = Элементы.ОстаткиСерий.ТекущиеДанные;
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий Тогда
		Если ТекущиеДанные = Неопределено Тогда
			ТекстПредупреждения = НСтр("ru = 'Выберите или введите серию.'");	
			ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
		Серия = ТекущиеДанные.Серия;
		
	ИначеЕсли Не ОбязательныеРеквизитыЗаполнены()
		Или Не НайтиСоздатьСерию() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ВозвращаемоеЗначение.ИдентификаторТекущейСтроки = ИдентификаторТекущейСтроки;
	ВозвращаемоеЗначение.Значение                   = Серия;
	ВозвращаемоеЗначение.ИмяТЧ                      = ПараметрыУказанияСерий.ИмяТЧТовары;
	Если Не ПустаяСтрока(РежимПомощника) Тогда
		ВозвращаемоеЗначение.ЗначениеСписываемойСерии = СерияСписываемая;
	КонецЕсли;
	ОповеститьОВыборе(ВозвращаемоеЗначение);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ОбязательныеРеквизитыЗаполнены(ВыводитьСообщения = Истина, ЭтоСписываемаяМетка = Ложь)
	
	Отказ = Ложь;
	
	Если Не ПустаяСтрока(РежимПомощника) 
		И ЭтоСписываемаяМетка 
		И НужноЗаписатьМетку Тогда
		
		ТекстСообщения = НСтр("ru = 'Параметры RFID-метки не соответствуют ожидаемым: либо считана неперсонифицированная метка, либо считана метка с другим GTIN, либо записанный в метку номер не соответствует TID. Считайте другую метку.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
		
	ИначеЕсли НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
		И ЗаполненRFIDTID
		И НужноЗаписатьМетку Тогда
		
		Отказ = Истина;
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Требуется записать RFID-метку.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		Если Описание.Использование
			И Описание.ПроверятьЗаполнение
			И Описание.ИмяНастройки <> "ИспользоватьRFIDМеткиСерии"
			И Не ЗначениеЗаполнено(ЭтотОбъект[Описание.ИмяРеквизита]) Тогда
			
			ТекстСообщения = НСтр("ru = 'Поле ""%ПредставлениеРеквизита%"" не заполнено'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеРеквизита%", Описание.ПредставлениеРеквизита);
			Если ВыводитьСообщения Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Описание.ИмяРеквизита,,Отказ);
			Иначе
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	ОбязательныеРеквизитыЗаполненыЛокализация(ВыводитьСообщения, Отказ);
	
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Функция НайтиСоздатьСерию()
	
	ЗаполнитьФлагиРаботыСМеткой();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Серия) Тогда
		
		ПодобратьСериюСервер("");
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Серия) Тогда
		
		СоздатьСерию();
		
	ИначеЕсли ПравоДобавленияСерий Тогда
	
		СерияОбъект = Серия.ПолучитьОбъект();
		
		// Запишем доп. реквизиты серии
		УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, СерияОбъект);
		
		ЗаполнитьЗначенияСвойств(СерияОбъект, ЭтотОбъект, РеквизитыВводаСерии(НастройкиИспользованияСерий, Истина));
		
		СерияОбъект.Записать();
		
		Серия = СерияОбъект.Ссылка;
		
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(Серия);
	
КонецФункции

&НаСервере
Функция СоздатьСерию()
		
	Если Не ПравоДобавленияСерий Тогда
		
		ТекстСообщения = НСтр("ru = 'В программе еще не зарегистрирована серия %ПредставлениеСерии%. Недостаточно прав для регистрации новой серии.'");
		
		ПредставлениеСерии = НоменклатураКлиентСервер.ПредставлениеСерииБезРасчетаПоШаблонуНаименования(НастройкиИспользованияСерий, ЭтаФорма);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеСерии%", ПредставлениеСерии);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат Ложь;
		
	Иначе
	
		СерияОбъект = Справочники.СерииНоменклатуры.СоздатьЭлемент();
			
		// Запишем доп. реквизиты серии
		УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, СерияОбъект);
		ЗаполнитьЗначенияСвойств(СерияОбъект, ЭтотОбъект, РеквизитыВводаСерии(НастройкиИспользованияСерий,Истина));
		
		СерияОбъект.Записать();
		
		Серия = СерияОбъект.Ссылка;
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ВыполнитьЗапросЗаполненияТаблицыОстатков()
	
	ТекстЗапроса = Обработки.ПодборСерийВДокументы.ТекстЗапросаФормированияТаблицыДанныеРегистров(ВариантПолучениеДанныхИзРегистров, Склад);
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	ДанныеРегистров.Серия КАК Серия,
	|	ДанныеРегистров.СвободныйОстаток КАК СвободныйОстаток,
	|	&ТекстЗапросаРеквизитыСерий
	|ИЗ
	|	ДанныеРегистров КАК ДанныеРегистров
	|ГДЕ
	|	ДанныеРегистров.СвободныйОстаток > 0
	|	ИЛИ &ВсеСерии
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий",
		Обработки.ПодборСерийВДокументы.ТекстЗапросаРеквизитыСерий("ДанныеРегистров", НастройкиИспользованияСерий));
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Для Каждого Параметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
		Запрос.УстановитьПараметр("ВсеСерии", РежимОтображенияСерий = "ВсеСерии");
	Иначе
		Запрос.УстановитьПараметр("ВсеСерии", Истина);
	КонецЕсли;
	
	ОстаткиСерий.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = ОстаткиСерий.Количество();
	
	// Доп. реквизиты
	УправлениеСвойствамиУТ.ДобавитьКолонкиДополнительныхРеквизитов(
		НастройкиИспользованияСерий,
		ЭтаФорма,
		"ОстаткиСерий",
		"ОстаткиСерий",
		"ОстаткиСерийСвободныйОстаток",
		Истина);
	УправлениеСвойствамиУТ.ЗаполнитьКолонкиДополнительныхРеквизитов(
		ЭтаФорма,
		"ОстаткиСерий",
		"Серия");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыВводаСерии(НастройкиИспользованияСерий, ДляЗаполненияОбъекта = Ложь)
	
	РеквизитыВводаСерий = Новый Массив;
	
	Для Каждого Описание ИЗ НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		Если Описание.Использование Тогда
			РеквизитыВводаСерий.Добавить(Описание.ИмяРеквизита);
		КонецЕсли;
	КонецЦикла;
	РеквизитыВводаСерий.Добавить("ВидНоменклатуры");
	РеквизитыВводаСерий.Добавить("Наименование");
	
	Если Не ДляЗаполненияОбъекта
		И НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии Тогда
			РеквизитыВводаСерий.Добавить("Серия");
			РеквизитыВводаСерий.Добавить("НужноЗаписатьМетку");
			РеквизитыВводаСерий.Добавить("ЗаполненRFIDTID");
			РеквизитыВводаСерий.Добавить("СтатусРаботыRFID");
	КонецЕсли;	
	
	Возврат СтрСоединить(РеквизитыВводаСерий, ",");
КонецФункции

&НаСервере
Процедура ПерейтиНаСледующийШаг()
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
		Если НЕ НайтиСоздатьСерию() Тогда
			Возврат;
		КонецЕсли;
		СерияСписываемая = Серия;
	Иначе
		ТекущиеДанные    = ОстаткиСерий.НайтиПоИдентификатору(Элементы.ОстаткиСерий.ТекущаяСтрока);
		СерияСписываемая = ТекущиеДанные.Серия;
	КонецЕсли;
	
	СерияСписываемаяКешВвода = Новый ФиксированнаяСтруктура(ДанныеСерии(НастройкиИспользованияСерий, ЭтаФорма));
	
	НастроитьФормуПоШагу("Шаг2");
	
КонецПроцедуры

&НаСервере
Процедура ВернутьсяНаПредыдущийШаг()
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
		СерияНовая = Серия;
	Иначе
		ТекущиеДанные =ОстаткиСерий.НайтиПоИдентификатору(Элементы.ОстаткиСерий.ТекущаяСтрока);
		СерияНовая = ТекущиеДанные.Серия;
	КонецЕсли;
	
	СерияНоваяКешВвода = Новый ФиксированнаяСтруктура(ДанныеСерии(НастройкиИспользованияСерий, ЭтаФорма));
	
	НастроитьФормуПоШагу("Шаг1");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоШагу(Шаг)
	
	Если Шаг = "Шаг1" Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СерияСписываемаяКешВвода);
		
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииНачало;
		Элементы.Далее.КнопкаПоУмолчанию = Истина;
		
		Элементы.ГоденДо.ТолькоПросмотр = Истина;
		Элементы.ГоденДо.АвтоОтметкаНезаполненного = Ложь;
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Укажите списываемую серию'");
		Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий;
		ИскомаяСерия = СерияСписываемая;
		Элементы.RFIDМеткаНеЧитаемая.Видимость = Истина;
		
		Элементы.ЗаписатьВRFID.Доступность = Ложь;
	Иначе
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СерияНоваяКешВвода);
		
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииОкончание;
		Элементы.ОК.КнопкаПоУмолчанию = Истина;
		
		Элементы.ГоденДо.ТолькоПросмотр = Ложь;
		Элементы.ГоденДо.АвтоОтметкаНезаполненного = Истина;
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Укажите новую серию'");
		Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии;
		ИскомаяСерия = СерияНовая;
		Элементы.RFIDМеткаНеЧитаемая.Видимость = Ложь;
		Элементы.ЗаписатьВRFID.Доступность = Истина;
		
	КонецЕсли;
	
	ЗаполнитьФлагиРаботыСМеткой();
	
	НайденныеСтроки = ОстаткиСерий.НайтиСтроки(Новый Структура("Серия",ИскомаяСерия));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Элементы.ОстаткиСерий.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыПоСерии(Приемник, Знач СерияДляЗаполнения, НастройкиИспользованияСерий)
	
	Если ЗначениеЗаполнено(СерияДляЗаполнения) Тогда
		Если ТипЗнч(СерияДляЗаполнения) = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
			Приемник.Серия = СерияДляЗаполнения;
			СерияСсылка = СерияДляЗаполнения;
		Иначе
			ЗаполнитьЗначенияСвойств(Приемник, СерияДляЗаполнения);
			СерияСсылка = СерияДляЗаполнения.Серия;
		КонецЕсли;
		Если ЗначениеЗаполнено(СерияСсылка) Тогда
			РеквизитыСерии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СерияСсылка, РеквизитыВводаСерии(НастройкиИспользованияСерий, Истина));
			ЗаполнитьЗначенияСвойств(Приемник, РеквизитыСерии);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокДекорацииСерия()
	
	Элементы.ДекорацияСерия.Заголовок = ?(ЗначениеЗаполнено(Серия), НСтр("ru = 'Зарегистрированная серия'"),
		НСтр("ru = 'Новая серия'"));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГоденДоПоДатеПроизводства()
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		
		НовыйГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности);
		
		Если ЗначениеЗаполнено(НовыйГоденДо)
			И (Не ЗначениеЗаполнено(ГоденДо)
				Или ГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ТекущаяДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности)) Тогда
			
			ГоденДо = НовыйГоденДо;
			
		КонецЕсли;
		
	КонецЕсли;
		
	ТекущаяДатаПроизводства = ДатаПроизводства;
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#Область Локализация

&НаКлиенте
Процедура ОбязательныеРеквизитыЗаполненыЛокализация(ВыводитьСообщения, Отказ)
	
	//++ Локализация
	Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		ОбязательныеРеквизитыЗаполненыЛокализацияСервер(ВыводитьСообщения, Отказ);
	КонецЕсли;
	//-- Локализация
	
	Возврат;

КонецПроцедуры

&НаСервере
Процедура ОбработатьШтрихкодыСерверЛокализация(ШтрихкодыПоТипам)
	
	//++ Локализация
	Если ШтрихкодыПоТипам.КиЗ.Количество() > 0 Тогда
		
		НомерКиЗГИСМ = ШтрихкодыПоТипам.КиЗ[0].ШтрихКод;
		Модифицированность = Истина;
		ПодобратьСериюСервер("НомерКиЗГИСМ");
		Если ЗначениеЗаполнено(Серия) Тогда
			ЗаполнитьРеквизитыПоСерии(ЭтаФорма, Серия, НастройкиИспользованияСерий);
		КонецЕсли;
		ЗаполнитьФлагиРаботыСМеткой();
		
	КонецЕсли;
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерКиЗГИСМПриИзменении(Элемент)

//++ Локализация
	Если Не ПустаяСтрока(РежимПомощника)
		И Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииНачало Тогда
		ОчиститьСообщения();
		НомерКиЗГИСМПриИзмененииСервер();
	Иначе
		ПодобратьСериюСервер("НомерКиЗГИСМ");
	КонецЕсли;
//-- Локализация
	
КонецПроцедуры

//++ Локализация

&НаСервере
Процедура НомерКиЗГИСМПриИзмененииСервер()
	
	Если Не ИнтеграцияГИСМВызовСервера.ЭтоНомерКиЗ(НомерКиЗГИСМ) Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма,Новый Структура(РеквизитыВводаСерии(НастройкиИспользованияСерий)),,"НомерКиЗГИСМ");
		Возврат;
	КонецЕсли;
	
	ТекущаяСерияЗаполнена = ЗначениеЗаполнено(Серия);
	
	Если ТекущаяСерияЗаполнена Тогда
		Номер = "";
		ГоденДо = Дата('00010101');
	ИначеЕсли Номер = НомерКиЗГИСМ Тогда
		Номер = "";
	КонецЕсли;
	
	ПодобратьСериюСервер("НомерКиЗГИСМ");
	
	Если ЗначениеЗаполнено(Серия) Тогда
		ЗаполнитьРеквизитыПоСерии(ЭтаФорма, Серия, НастройкиИспользованияСерий);
		ЗаполнитьФлагиРаботыСМеткой();
	Иначе
		Если ТекущаяСерияЗаполнена Тогда
			ЗаполнитьЗначенияСвойств(ЭтаФорма,Новый Структура(РеквизитыВводаСерии(НастройкиИспользованияСерий)),,"НомерКиЗГИСМ");
			ЗаполнитьФлагиРаботыСМеткой();
		КонецЕсли;
	
		Если Не ПустаяСтрока(РежимПомощника) Тогда
			ТекстСообщения = НСтр("ru = 'В программе не зарегистрирована серия с номером %КиЗ% %НомерКиЗГИСМ%.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'В программе еще не зарегистрирована серия с номером %КиЗ% %НомерКиЗГИСМ%. Укажите существующую серию.'");
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КиЗ%", "КиЗ");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерКиЗГИСМ%", СокрЛП(НомерКиЗГИСМ));
		
		Если Не ПустаяСтрока(РежимПомощника) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"НомерКиЗГИСМ");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбязательныеРеквизитыЗаполненыЛокализацияСервер(ВыводитьСообщения, Отказ)
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Если Не ИнтеграцияГИСМВызовСервера.ЭтоНомерКиЗ(НомерКиЗГИСМ) Тогда
			Отказ = Истина;
			Если ВыводитьСообщения Тогда
				ТекстСообщения = НСтр("ru = 'Значение в поле ""Номер %КиЗ%"" не является номером контрольного (идентификационного) знака ГИСМ'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КиЗ%", "КиЗ");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"НомерКиЗГИСМ");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ПустаяСтрока(РежимПомощника) Тогда
		Если Не ЗаполненRFIDTID
			И Не RFIDМеткаНеЧитаемая Тогда
			Если Не ИнтеграцияГИСМУТ.ЭтоМаркировкаПерсонифицированнымиКиЗ(НастройкиИспользованияСерий, ПараметрыУказанияСерий, ЗначенияПолейСвязи) Тогда
				Отказ = Истина;
				Если ВыводитьСообщения Тогда
					ТекстСообщения = НСтр("ru = 'Не считана RFID-метка. При перемаркировке неперсонифицированными %КиЗ% необходимо обязательно считывать метку и записывать EPC.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КиЗ%", "КиЗ");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			ИначеЕсли Не ЗначениеЗаполнено(Номер) Тогда
				Отказ = Истина;
				Если ВыводитьСообщения Тогда
					ТекстСообщения = НСтр("ru = 'Не заполнен номер серии. Перемаркировка осуществляется персонифицированными %КиЗ%, поэтому номер серии записан в RFID-метку КиЗ. Необходимо считать метку RFID-считывателем.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КиЗ%", "КиЗ");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Номер");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИнтеграцияГИСМУТ.ЭтоПоступлениеИзТаможенногоСоюзаМаркированногоТовара(НастройкиИспользованияСерий, ПараметрыУказанияСерий)
		И НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Если Не ЗаполненRFIDTID Тогда
			Отказ = Истина;
			Если ВыводитьСообщения Тогда
				ТекстСообщения = НСтр("ru = 'Не считана RFID-метка. Оформляется ввоз из стран ЕАЭС маркируемых товаров, поэтому считывать RFID-метки обязательно.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		ИначеЕсли Не ЗначениеЗаполнено(Номер)Тогда
			Отказ = Истина;
			Если ВыводитьСообщения Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнен номер серии. Оформляется ввоз из стран ЕАЭС маркируемых товаров, поэтому номер серии записан в RFID-метку %КиЗ%. Необходимо считать метку RFID-считывателем.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КиЗ%", "КиЗ");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

//-- Локализация

#КонецОбласти
