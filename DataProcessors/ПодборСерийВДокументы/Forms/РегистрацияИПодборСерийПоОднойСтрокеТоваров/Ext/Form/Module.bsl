#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

&НаКлиенте
Перем ТекущееКоличество; //кеш количества в текущей строке для расчета количества серий

&НаКлиенте
Перем ТекущаяДатаПроизводства;

&НаКлиенте
Перем НужноЗадаватьВопросПередЗакрытием;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоАдресВременногоХранилища(Параметры.АдресВоВременномХранилище) Тогда
		ТекстСообщения = НСтр("ru='Предусмотрено открытие обработки только из документов.'");
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ПараметрыУказанияСерий    = Параметры.ПараметрыУказанияСерий;
	
	ЗначенияПолейСвязиСтруктура = Новый Структура(СтрСоединить(ПараметрыУказанияСерий.ПоляСвязи,","));
	ЗначенияПолейСвязиСтруктура.Вставить("Номенклатура");
	ЗначенияПолейСвязиСтруктура.Вставить("Характеристика");
	ЗначенияПолейСвязиСтруктура.Вставить("Склад");
	ЗаполнитьЗначенияСвойств(ЗначенияПолейСвязиСтруктура, Параметры);
	ЗначенияПолейСвязи = Новый ФиксированнаяСтруктура(ЗначенияПолейСвязиСтруктура);
	
	РеквизитыНоменклатуры = Новый Структура;
	РеквизитыНоменклатуры.Вставить("ВидНоменклатуры", "ВидНоменклатуры");
	РеквизитыНоменклатуры.Вставить("ЕдиницаИзмеренияПредставление", "ЕдиницаИзмерения.Наименование");
	РеквизитыНоменклатуры.Вставить("СрокГодности", "СрокГодности");
	РеквизитыНоменклатуры.Вставить("ЕдиницаИзмеренияСрокаГодности", "ЕдиницаИзмеренияСрокаГодности");
	РеквизитыНоменклатуры.Вставить("ТипИзмеряемойВеличиныНоменклатуры", "ЕдиницаИзмерения.ТипИзмеряемойВеличины");
	
	РеквизитыНоменклатуры = Новый ФиксированнаяСтруктура(
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗначенияПолейСвязи.Номенклатура, РеквизитыНоменклатуры));
	
	НастройкиИспользованияСерий = Новый ФиксированнаяСтруктура(
		Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий(
			РеквизитыНоменклатуры.ВидНоменклатуры, ПараметрыУказанияСерий, ЗначенияПолейСвязи));
	
	НоменклатураСервер.ПроверитьВозможностьОткрытияФормыУказанияСерий(
		НастройкиИспользованияСерий, ПараметрыУказанияСерий, ЗначенияПолейСвязи);
	
	УстановитьУсловноеОформление();
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	ТолькоРедактированиеКоличества = Параметры.ТолькоРедактированиеКоличества;
	
	АвторизованВнешнийПользователь = ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь();
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма, "Серии");
	
	
	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	КоличествоВДокументе      = Параметры.Количество;
	НомераСтрокПредставление  = Параметры.НомераСтрокДокумента;
	Склад					  = Параметры.Склад;
	Помещение 				  = Параметры.Помещение;
	Регистратор				  = Параметры.Регистратор;
	ЕстьУпаковки = ПараметрыУказанияСерий.ПоляСвязи.Найти("Упаковка") <> Неопределено;
	
	Упаковка                  = Параметры.Упаковка;
	Если Не ЗначениеЗаполнено(Упаковка) Тогда
		Если ЗначениеЗаполнено(Параметры.УпаковкаДляПодстановки) Тогда 
			
			Если РеквизитыНоменклатуры.ТипИзмеряемойВеличиныНоменклатуры <> Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук 
				Или РеквизитыНоменклатуры.ТипИзмеряемойВеличиныНоменклатуры = Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук
				И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.УпаковкаДляПодстановки, "ТипИзмеряемойВеличины") = Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда
				Упаковка = Параметры.УпаковкаДляПодстановки;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	ИсходнаяУпаковка = Упаковка;
	
	Заголовок = НСтр("ru = 'Регистрация серий товаров'");
	
	ТоварПредставление = НоменклатураСервер.ПредставлениеТовараВФормеУказанияСерий(ЗначенияПолейСвязи);
	
	Параметры.Свойство("ЗаголовокКолонкиКоличество", ПараметрЗаголовокКолонкиКоличество);
	
	Элементы.Упаковка.Доступность = Не ЕстьУпаковки;
	
	Элементы.Серии.ИзменятьСоставСтрок              = Не ТолькоПросмотр;
	Элементы.СерииКоличествоУпаковок.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ГруппаКоманднаяПанельТаблицы.Видимость = Не ТолькоПросмотр;
	
	Элементы.Количество.Видимость              = Не ТолькоПросмотр;
	
	Элементы.ОстаткиСерийКоличествоУпаковок.ТолькоПросмотр = ТолькоПросмотр;

	ЗаписыватьПоляМетки = Новый Структура("RFIDEPC,RFIDUser", Ложь, Ложь);
		
	Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		Если Описание.ИмяНастройки = "ИспользоватьRFIDМеткиСерии" Тогда
			
			Если Описание.ИмяРеквизита = "RFIDTID" Тогда
				Если Описание.Использование Тогда
					Считыватели = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам("СчитывательRFID");
					Если Считыватели.Количество() = 0 Тогда
						ПодключатьСчитывательRFID = Ложь;
					ИначеЕсли Считыватели.Количество() = 1 Тогда
						ПодключатьСчитывательRFID = Истина;
						СчитывательRFID = Считыватели[0].Ссылка;
					Иначе
						ТекстСообщения = НСтр("ru = 'К рабочему месту подключено несколько считывателей RFID. Работа одновременно с несколькими считывателями не поддерживается. Оставьте только один считываетель.'");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
						ПодключатьСчитывательRFID = Ложь;
					КонецЕсли;
				Иначе
					ПодключатьСчитывательRFID = Ложь;
				КонецЕсли;
				Элементы.СерииСтатусРаботыRFID.Видимость = Описание.Использование;
				
				Элементы.СчитатьRFID.Видимость = Описание.Использование
												 И ПодключатьСчитывательRFID
												 И Не АвторизованВнешнийПользователь;
				
			ИначеЕсли (Описание.ИмяРеквизита = "RFIDEPC"
				Или Описание.ИмяРеквизита = "RFIDUser")
				И Описание.Использование Тогда	
				
				ЗаписыватьПоляМетки[Описание.ИмяРеквизита] = Описание.МожноРедактировать;
				
			КонецЕсли;
			
		Иначе
			
			НазванияЭлементовСерий = Обработки.ПодборСерийВДокументы.НазванияЭлементовСерий(Описание.ИмяРеквизита);
			
			ПолеФормыСерии        = Элементы[НазванияЭлементовСерий.Серии]; // ПолеФормы
			ПолеФормыОстаткиСерий = Элементы[НазванияЭлементовСерий.ОстаткиСерий]; // ПолеФормы
			
			ПолеФормыСерии.ТолькоПросмотр            = Не Описание.МожноРедактировать; 	
			ПолеФормыСерии.АвтоОтметкаНезаполненного = Описание.ПроверятьЗаполнение; 	
			
			ПолеФормыСерии.Видимость        = Описание.Использование; 
			ПолеФормыОстаткиСерий.Видимость = Описание.Использование;
			
			Если Не ПустаяСтрока(Описание.Формат) Тогда
				ПолеФормыСерии.Формат               = Описание.Формат;
				ПолеФормыСерии.ФорматРедактирования = Описание.Формат;
				ПолеФормыОстаткиСерий.Формат        = Описание.Формат;
			КонецЕсли;	
	
			Если Описание.ИмяРеквизита = "Номер" Тогда
				
				Элементы.СерииЗагрузитьДанныеИзТСД.Видимость = Элементы.СерииНомер.Видимость;
				Элементы.СгенерироватьНомер.Видимость        = Элементы.СерииНомер.Видимость;
				Элементы.ЗаполнитьНомера.Видимость           = Элементы.СерииНомер.Видимость;
				
				Если Не Элементы.СерииНомер.ТолькоПросмотр
					И Элементы.СерииНомер.Видимость Тогда
					Элементы.СерииДобавить.Заголовок = НСтр("ru = 'Ввести номер'");
				Иначе
					Элементы.СерииДобавить.Заголовок = НСтр("ru = 'Ввести'");
				КонецЕсли;
																	
				Элементы.СгенерироватьНомер.Доступность  = Не Элементы.СерииНомер.ТолькоПросмотр;
				Элементы.ЗаполнитьНомера.Доступность     = Не Элементы.СерииНомер.ТолькоПросмотр;
		
			КонецЕсли;
			
			Если Не ПустаяСтрока(Описание.ПредставлениеФорматнойСтрокиВЗаголовке) Тогда
				
				ПредставлениеЗаголовкаКолонки = НСтр("ru = '%ПредставлениеРеквизита% (%ПредставлениеФормата%)'");
				ПредставлениеЗаголовкаКолонки = СтрЗаменить(ПредставлениеЗаголовкаКолонки, "%ПредставлениеРеквизита%", Описание.ПредставлениеРеквизита);
				ПредставлениеЗаголовкаКолонки = СтрЗаменить(ПредставлениеЗаголовкаКолонки, "%ПредставлениеФормата%", Описание.ПредставлениеФорматнойСтрокиВЗаголовке);
				
				ПолеФормыСерии.Заголовок        = ПредставлениеЗаголовкаКолонки; 
				ПолеФормыОстаткиСерий.Заголовок = ПредставлениеЗаголовкаКолонки;
				
			КонецЕсли;

		КонецЕсли;
	КонецЦикла;
	
	Элементы.ЗаписатьВRFID.Видимость = (ЗаписыватьПоляМетки.RFIDEPC
										Или ЗаписыватьПоляМетки.RFIDUser)
										И ПодключатьСчитывательRFID
										И Не АвторизованВнешнийПользователь;
	
	Элементы.ЗаполнитьПоFEFO.Видимость  = НастройкиИспользованияСерий.УчетСерийПоFEFO 
										И Перечисления.СкладскиеОперации.ЕстьОтгрузка(ПараметрыУказанияСерий.СкладскиеОперации)
										И Не ЕстьУпаковки
										И Не ТолькоРедактированиеКоличества;
	
	Элементы.ГруппаПечать.Видимость = Не АвторизованВнешнийПользователь;
	Элементы.ФормаНастроитьПорядокСканированияСерий.Видимость = Не АвторизованВнешнийПользователь;
	Если АвторизованВнешнийПользователь Тогда
		Элементы.СерииЗагрузитьДанныеИзТСД.Видимость = Ложь;
	КонецЕсли;
	
	РежимОтображенияСерий = "СерииВДокументе";
	
	Распоряжение = Обработки.ПодборСерийВДокументы.РаспоряжениеПоПараметрамФормы(Параметры);
	
	ВариантПолучениеДанныхИзРегистров = Обработки.ПодборСерийВДокументы.ВариантПолучениеДанныхИзРегистровПоПараметрамФормы(ПараметрыУказанияСерий,
				Распоряжение,
				Параметры.Склад,
				НастройкиИспользованияСерий.ВладелецСерий);
	Заголовки = Обработки.ПодборСерийВДокументы.ЗаголовкиПоВариантуПолучениеДанныхИзРегистров(ВариантПолучениеДанныхИзРегистров);
	ЗаголовокСвободногоОстаткаПоУмолчанию = Заголовки.ЗаголовокСвободногоОстатка;
	
	Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
		Элементы.РежимОтображенияСерий.СписокВыбора[1].Представление = Заголовки.ЗаголовокКнопки;
	Иначе	
		Элементы.ОстаткиСерийСвободныйОстаток.Видимость = Ложь;
		Элементы.РежимОтображенияСерий.СписокВыбора.Удалить(Элементы.РежимОтображенияСерий.СписокВыбора[1]);
	КонецЕсли;
	
	
	// Ввод серий
	ТаблицаСерий = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,
	|	ТаблицаСерий.КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество,
	|	СУММА(ТаблицаСерий.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	&ТекстЗапросаРеквизитыСерий
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|ГДЕ
	|	(&ИспользоватьКоличествоСерии
	|			ИЛИ ТаблицаСерий.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий",
		Обработки.ПодборСерийВДокументы.ТекстЗапросаРеквизитыСерий("ТаблицаСерий", НастройкиИспользованияСерий));
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаСерий", ТаблицаСерий);
	Запрос.УстановитьПараметр("ИспользоватьКоличествоСерии", НастройкиИспользованияСерий.ИспользоватьКоличествоСерии);
	
	Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Упаковка, ЗначенияПолейСвязи.Номенклатура);
	
	Если Не НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
		
		Если ТолькоРедактированиеКоличества Тогда
			Элементы.СерииКоличествоУпаковок.Вид = ВидПоляФормы.ПолеФлажка;
		Иначе
			Элементы.СерииКоличествоУпаковок.Видимость = Ложь;
		КонецЕсли;
		Элементы.ОстаткиСерийКоличествоУпаковок.Вид = ВидПоляФормы.ПолеФлажка;
		Элементы.Упаковка.Видимость = Ложь;
		
		Если КоэффициентУпаковки <> 1 Тогда
			Упаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Обработки.ПодборСерийВДокументы.ЕстьПраваНаЧтениеДанныхРегистров(ВариантПолучениеДанныхИзРегистров, Склад) Тогда
		Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	ОбновитьКартинкуПечати();
	
	ПравоДобавленияСерий = ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры);
	
	Если Не ПравоДобавленияСерий
			Тогда
		Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий;
		Элементы.СтраницаВводСерии.Видимость = Ложь;
		Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Если Объект.Серии.Итог("КоличествоУпаковок") = 0 Тогда
			Если Элементы.РежимОтображенияСерий.СписокВыбора.НайтиПоЗначению("ТолькоОстатки") <> Неопределено Тогда
				РежимОтображенияСерий = "ТолькоОстатки";
			Иначе
				РежимОтображенияСерий = "ВсеСерии";
			КонецЕсли;
		КонецЕсли; 
		Если ТипЗнч(Склад) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			Заголовок = НСтр("ru = 'Подбор серий по остаткам в производстве'");
		Иначе
			Заголовок = НСтр("ru = 'Подбор серий по остаткам на складе'");
		КонецЕсли;
	КонецЕсли;
	
	УпаковкаПриИзмененииСервер();
		
	// Доп. реквизиты
	УправлениеСвойствамиУТ.ДобавитьКолонкиДополнительныхРеквизитов(
		НастройкиИспользованияСерий,
		ЭтаФорма,
		"Объект.Серии",
		"Серии",
		"СерииКоличествоУпаковок");
	УправлениеСвойствамиУТ.ЗаполнитьКолонкиДополнительныхРеквизитов(
		ЭтаФорма,
		"Объект.Серии",
		"Серия");
	
	Если ТолькоРедактированиеКоличества Тогда
		
		Элементы.СерииДобавить.Видимость = Ложь;
		Элементы.СгенерироватьНомер.Видимость = Ложь;
		Элементы.ЗаполнитьНомера.Видимость = Ложь;
		Элементы.СерииСкопировать.Видимость = Ложь;
		Элементы.СерииИзменить.Видимость = Ложь;
		Элементы.СерииУдалить.Видимость = Ложь;
		Элементы.СерииЗагрузитьДанныеИзТСД.Видимость = Ложь;
		
		Элементы.СерииКонтекстноеМенюДобавить.Видимость = Ложь;
		Элементы.СерииКонтекстноеМенюСкопировать.Видимость = Ложь;
		Элементы.СерииКонтекстноеМенюУдалить.Видимость = Ложь;
			
		Для Каждого Элемент Из Элементы.ОстаткиСерий.ПодчиненныеЭлементы Цикл
			Если Не Элемент = Элементы.ОстаткиСерийКоличествоУпаковок Тогда
				Элемент.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Элемент Из Элементы.Серии.ПодчиненныеЭлементы Цикл
			Если Не Элемент = Элементы.СерииКоличествоУпаковок Тогда
				Элемент.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ОбновитьКартинкуПечати();
	НоменклатураСервер.ЗагрузитьНастройкуРежимСканированияСерий(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИдетЗаписьRFID = Ложь;
	
	ПоддерживаемыеТипыОборудования = "СканерШтрихкода";
	
	Если ПодключатьСчитывательRFID Тогда
		ПоддерживаемыеТипыОборудования = ПоддерживаемыеТипыОборудования + ", СчитывательRFID";
	КонецЕсли;
	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, ПоддерживаемыеТипыОборудования);
	
	НужноЗадаватьВопросПередЗакрытием = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность
		И НужноЗадаватьВопросПередЗакрытием Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОповещениеЗакрытия = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Список серий был изменен.
			|Сохранить изменения?'");
		
		ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(ОповещениеЗакрытия, Отказ, ЗавершениеРаботы, ТекстВопроса,
			ТекстПредупреждения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ШтрихкодированиеНоменклатурыКлиент.ОтключитьОборудование(Неопределено, Новый Структура("Форма",ЭтаФорма));

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИдентификаторТекущейСтроки = ТекущиеДанные.ПолучитьИдентификатор(); 	
	Иначе
		ИдентификаторТекущейСтроки = Неопределено;
	КонецЕсли;
		
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен()
		И НЕ ТолькоПросмотр Тогда
		
		РезультатОбработки = Неопределено;
		
		Если ИмяСобытия = "ScanData" Тогда
			
			ОчиститьСообщения(); 
			РезультатОбработки = ОбработатьШтрихкодыСервер(МенеджерОборудованияУТКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр), КэшированныеЗначения, ИдентификаторТекущейСтроки);
						
		ИначеЕсли ИмяСобытия = "RFID" Тогда
			Если Не ИдетЗаписьRFID
				И ШтрихкодированиеНоменклатурыКлиент.ДляОбработкиRFIDНуженСерверныйВызов(Параметр, ЭтаФорма) Тогда
				ОчиститьСообщения(); 
				РезультатОбработки = ОбработатьСчитываниеRFID(Параметр, ИдентификаторТекущейСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатОбработки <> Неопределено Тогда
			Если РезультатОбработки.ЗакрытьФорму Тогда
				ОчиститьСообщения(); 
				ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании",0.1, Истина);
			Иначе
				Если РезультатОбработки.ИдентификаторТекущейСтроки <> Неопределено Тогда
					Элементы.Серии.ТекущаяСтрока = РезультатОбработки.ИдентификаторТекущейСтроки;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	Если ИмяСобытия = "ЗаписьRFID_Серии" Тогда
		ОчиститьСообщения(); 
		ДанныеСерии = Параметр;
		ТекущиеДанные.RFIDEPC = ДанныеСерии.RFIDEPC;
		ОбработатьЗаписьRFID(ИдентификаторТекущейСтроки);
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		НайденныеСтроки = Объект.Серии.НайтиСтроки(Новый Структура("Серия", Источник));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтрокаСерий = НайденныеСтроки[0];
			ЗаполнитьЗначенияСвойств(СтрокаСерий, Параметр);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗаписьRFID(ИдентификаторТекущейСтроки)
	
	ЗаполнитьФлагиРаботыСМеткой(ИдентификаторТекущейСтроки);
	СохранитьВводСерийСервер(ИдентификаторТекущейСтроки);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура СтраницыСерийПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.СтраницаОстаткиСерий Тогда
		ВыполнитьЗапросЗаполненияТаблицыОстатков();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаОчистка(Элемент, СтандартнаяОбработка)
	
	УпаковкаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	УпаковкаПриИзмененииСервер();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСерии

&НаКлиенте
Процедура СерииПриИзменении(Элемент)
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ИменаПараметров = "ГоденДо, ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности, ФорматДаты, 
						|ИспользоватьДатуПроизводства";
	ПараметрыФормы = Новый Структура(ИменаПараметров);
	
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, РеквизитыНоменклатуры);
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, ТекущиеДанные);
	
	ПараметрыФормы.ФорматДаты                   = Элемент.ФорматРедактирования;
	ПараметрыФормы.ИспользоватьДатуПроизводства = НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии;
	
	ДополнительныеПараметры = Новый Структура("Элемент", Элемент);
	ОписаниеОповещения      = Новый ОписаниеОповещения("СерииГоденДоНачалоВыбораЗавершение", ЭтотОбъект,
										ДополнительныеПараметры);
	
	НоменклатураКлиент.ДатаИстеченияСрокаГодностиНачалоВыбора(ТекущиеДанные, ПараметрыФормы, ОписаниеОповещения,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПодобратьСерию(Элементы.СерииГоденДо);
	Элементы.Серии.ЗакончитьРедактированиеСтроки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииКоличествоУпаковокПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	ТекущаяДатаПроизводства = ТекущиеДанные.ДатаПроизводства;
	
	Если Копирование Тогда
		ТекущееКоличество = 0;
	Иначе
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		
		Если Не НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
			
			ТекущиеДанные = Элемент.ТекущиеДанные;
			
			Если ЕстьЗаполненноеПолеВСтрокеСерии(ТекущиеДанные, НастройкиИспользованияСерий) Тогда
				
				Если ТекущиеДанные.КоличествоУпаковок = 0
					И Не ТолькоРедактированиеКоличества Тогда
					ТекущиеДанные.КоличествоУпаковок = 1;
					
					ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
					СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
					
					ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
					
					ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
				КонецЕсли;

			Иначе
				ТекущиеДанные.КоличествоУпаковок = 0;
				ТекущиеДанные.Количество         = 0;
			КонецЕсли;
		КонецЕсли;
		
		ОбъединитьСтроки(Элементы.Серии.ТекущиеДанные.ПолучитьИдентификатор());
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ВыделенныеСтроки = Новый Массив;
	
	Для Каждого ИДСтроки Из Элементы.Серии.ВыделенныеСтроки Цикл
		
		ВыделенныеСтроки.Добавить(Объект.Серии.НайтиПоИдентификатору(ИДСтроки));
		
	КонецЦикла;	
	
	Для Каждого ТекущиеДанные Из ВыделенныеСтроки Цикл 
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
		
		Если ТолькоРедактированиеКоличества Тогда
			Если ТекущиеДанные.КоличествоУпаковок > 0 Тогда
				ТекущиеДанные.КоличествоУпаковок = 0;
				ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
				СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
				ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
			КонецЕсли;
		Иначе
			 Объект.Серии.Удалить(ТекущиеДанные);	
		КонецЕсли;
		
	КонецЦикла;
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ТолькоРедактированиеКоличества Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииДатаПроизводстваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ДополнительныеПараметры = Новый Структура("Элемент", Элемент);
	ОписаниеОповещения      = Новый ОписаниеОповещения("СерииДатаПроизводстваНачалоВыбораЗавершение", ЭтотОбъект,
										ДополнительныеПараметры);
	
	НоменклатураКлиент.ДатаПроизводстваНачалоВыбора(ТекущиеДанные, ОписаниеОповещения, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииДатаПроизводстваНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПодобратьСерию(Элементы.СерииДатаПроизводства);
	Элементы.Серии.ЗакончитьРедактированиеСтроки(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОстаткиСерий

&НаКлиенте
Процедура ОстаткиСерийКоличествоУпаковокПриИзменении(Элемент)
	Модифицированность = Истина;
	
	ИдентификаторТекущейСтроки = Элементы.ОстаткиСерий.ТекущиеДанные.ПолучитьИдентификатор();
	
 	ОстаткиСерийКоличествоУпаковокПриИзмененииСервер(ИдентификаторТекущейСтроки, КэшированныеЗначения);	
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОтображенияСерийПриИзменении(Элемент)
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	ТекущиеДанные.СвободныйОстаток = ТекущиеДанные.СвободныйОстаток + ТекущееКоличество;
	ТекущиеДанные.СвободныйОстаток = ТекущиеДанные.СвободныйОстаток - ТекущиеДанные.КоличествоУпаковок;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводСерий(Команда)
	ОчиститьСообщения();
	Если Не СохранитьВводСерийСервер() Тогда
		Возврат;
	КонецЕсли;
	Если Не Модифицированность Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзТСД(Команда)
	
	ОчиститьСообщения();
	
	МенеджерОборудованияКлиент.НачатьЗагрузкуДанныеИзТСД(
		Новый ОписаниеОповещения("ЗагрузитьИзТСДЗавершение", ЭтотОбъект),
		УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзТСДЗавершение(Результат, Параметры) Экспорт
	
	Если Результат.Результат Тогда
		
		ЗакрытьФорму = ОбработатьШтрихкодыСервер(Результат, КэшированныеЗначения, Неопределено);
		
		Если ЗакрытьФорму Тогда
			Закрыть(АдресВоВременномХранилище);
		КонецЕсли;
		
	Иначе
		МенеджерОборудованияУТКлиент.СообщитьОбОшибке(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПорядокСканированияСерий(Команда)
	Оповещение = Новый ОписаниеОповещения("НастроитьПорядокСканированияСерийЗавершение",ЭтаФорма);
	
	ОткрытьФорму("Обработка.ПодборСерийВДокументы.Форма.НастройкиСканированияИПечатиЭтикеток",
		Новый Структура("ПечатьНаПринтер",ПечатьНаПринтер),
		ЭтаФорма,
		,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ОчиститьСообщения();
	Оповещение = Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект);
	ЗаголовокФормыВводаСерий = НСтр("ru = 'Введите штрихкод серии'");
	ШтрихкодированиеНоменклатурыКлиент.ПоказатьВводШтрихкода(Оповещение,,ЗаголовокФормыВводаСерий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(ДанныхШтрихкода, ДополнительныеПараметры) Экспорт
		
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИдентификаторТекущейСтроки = ТекущиеДанные.ПолучитьИдентификатор(); 	
	Иначе
		ИдентификаторТекущейСтроки = Неопределено;
	КонецЕсли;
	
	ЗакрытьФорму = ОбработатьШтрихкодыСервер(ДанныхШтрихкода,КэшированныеЗначения, ИдентификаторТекущейСтроки);
	Если ЗакрытьФорму Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСерию(Команда)
	ИзменитьСериюКлиент();
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНомер(Команда)
	
	Результат = ВычислитьМаксимальныйНомерИКоличество(1);
	ТекущаяСтрока = Результат.ТекущаяСтрока;
	Номер = Результат.Номер;
	
	Номер = Номер+1;
	Если Объект.Серии.Количество() > 0
		И Не ЗначениеЗаполнено(Объект.Серии[0].Номер) Тогда
		ТекущиеДанные = Объект.Серии[0];
		Если ТекущиеДанные.КоличествоУпаковок = 0 Тогда
			
			ТекущиеДанные.КоличествоУпаковок = 1; 
			
			ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
			СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
			ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
			
		КонецЕсли;
	Иначе
		Элементы.Серии.ДобавитьСтроку();
		ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока);
	КонецЕсли;
	
	ТекущиеДанные.Номер =  Формат(Номер, "ЧЦ=8; ЧВН=; ЧГ=");
	
	Элементы.Серии.ЗакончитьРедактированиеСтроки(Ложь);
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.Серии.ТекущийЭлемент = Элементы.СерииГоденДо;
	ИначеЕсли НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
		Элементы.Серии.ТекущийЭлемент = Элементы.СерииКоличествоУпаковок;
	КонецЕсли;
	
	СерииПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомера(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КоличествоСерий",Макс(Количество - Объект.Серии.Итог("КоличествоУпаковок"),0)); 
	ПараметрыФормы.Вставить("ИспользоватьКоличество",НастройкиИспользованияСерий.ИспользоватьКоличествоСерии); 
	ПараметрыФормы.Вставить("ВКаждойСерии",ВКаждойСерии); 
	ПараметрыФормы.Вставить("ЕдиницаИзмеренияСтр",ЕдиницаИзмеренияСтр); 
	ПараметрыФормы.Вставить("ВидНоменклатуры",НастройкиИспользованияСерий.ВладелецСерий); 
	
	ОткрытьФорму(
		"Обработка.ПодборСерийВДокументы.Форма.НастройкиЗаполненияНомеров",
		ПараметрыФормы,
		ЭтаФорма,
		,
		,
		,
		Новый ОписаниеОповещения("ЗаполнитьНомераЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
    АктивнаяСтрока = ДобавитьСтрокиНаСервере(Результат);
    
    Элементы.Серии.ЗакончитьРедактированиеСтроки(Ложь);
    
    Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
        Элементы.Серии.ТекущаяСтрока = АктивнаяСтрока;
        Элементы.Серии.ТекущийЭлемент = Элементы.СерииГоденДо;	
    ИначеЕсли НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
        Элементы.Серии.ТекущаяСтрока = АктивнаяСтрока;
        Элементы.Серии.ТекущийЭлемент = Элементы.СерииКоличествоУпаковок;
    КонецЕсли;
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКаждойШт(Команда)
	Печать(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКаждойСерии(Команда)
	Печать(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоFEFO(Команда)
	Если Количество = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'В документе не указано количество товара. Заполнение по FEFO не возможно.'"));
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьПоFEFOНаСервере();
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура СчитатьМетку(Команда)
	ОчиститьСообщения();
	ШтрихкодированиеНоменклатурыКлиент.ОткрытьСессиюСчитывателяRFID(ЭтаФорма);
	ПодключитьОбработчикОжидания("ОтработатьТаймаутОжиданияСчитыванияRFID", 5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВRFID(Команда)
	ОчиститьСообщения(); 
	ИдетЗаписьRFID = Истина;
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ДанныеСерии",Элементы.Серии.ТекущиеДанные);
	ПараметрыЗаписи.Вставить("Форма", ЭтаФорма);
	ШтрихкодированиеНоменклатурыКлиент.ЗаписатьДанныеВRFID(Неопределено, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоСерий.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСерий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Количество");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтличающейсяСтрокиДокумента);

	

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоСерий.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСерий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Количество");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Seagreen);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииСерия.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.Серия");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(WindowsШрифты.DefaultGUIFont, , , Истина, Ложь, Ложь, Ложь, ));
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Новая'"));

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииСерия.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.Серия");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Зарегистрированная'"));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииКоличествоУпаковок.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТолькоРедактированиеКоличества");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Серии.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.КоличествоУпаковок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТолькоРедактированиеКоличества");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	
	//
	
	Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		
		Если Описание.Использование 
			И Не ПустаяСтрока(Описание.ТекстУсловногоОформления) Тогда
			
			Элемент = УсловноеОформление.Элементы.Добавить();
			
			НазванияЭлементовСерий = Обработки.ПодборСерийВДокументы.НазванияЭлементовСерий(Описание.ИмяРеквизита);
			
			ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
			ПолеФормыСерии = Элементы[НазванияЭлементовСерий.Серии]; // ПолеФормы
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ПолеФормыСерии.Имя);
			
			Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
			Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Описание.ТекстУсловногоОформления);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ШтрихкодыИТорговоеОборудование

&НаКлиенте
Процедура ОтработатьТаймаутОжиданияСчитыванияRFID()
	
	Если ОткрытаСессияСчитывателяRFID Тогда
		ШтрихкодированиеНоменклатурыКлиент.ОтработатьТаймаутОжиданияСчитыванияRFID(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьШтрихкодыСервер(ДанныеШтрихкодов,КэшированныеЗначения, ИдентификаторТекущейСтроки)
	
	ШтрихкодыПоТипам = ШтрихкодированиеНоменклатурыСервер.СтруктураПоТипамШтрихкодов(ДанныеШтрихкодов);
		
	ЕстьОшибки = Ложь;
	ОбрабатываемаяСтрока = Неопределено;
	
	Если ШтрихкодыПоТипам.БезТипа.Количество() > 0 Тогда
		ТаблицаШтрихКодов = Новый ТаблицаЗначений;
		ТаблицаШтрихКодов.Колонки.Добавить("Номер",Метаданные.Справочники.СерииНоменклатуры.Реквизиты.Номер.Тип);
		ТаблицаШтрихКодов.Колонки.Добавить("ГоденДо",Новый ОписаниеТипов("Дата"));
		ТаблицаШтрихКодов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
		Для Каждого СтрМас Из ШтрихкодыПоТипам.БезТипа Цикл
			НоваяСтрока            = ТаблицаШтрихКодов.Добавить();
			НоваяСтрока.Количество = СтрМас.Количество;
			
			ПоляИзШтрихкода = НоменклатураКлиентСервер.ИнформацияОСерииИзШтрихкода(СтрМас.Штрихкод, 
			НастройкиИспользованияСерий.ИспользоватьНомерСерии,
			НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии);
			
			НоваяСтрока.Номер   = ПоляИзШтрихкода.Номер;
			НоваяСтрока.ГоденДо = ПоляИзШтрихкода.ГоденДо;
			
			Если ПоляИзШтрихкода.ЕстьОшибка Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не ЕстьОшибки Тогда
			
			ТекстыЗапроса = Новый Массив;
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	Штрихкоды.Номер КАК Номер,
			|	Штрихкоды.ГоденДо КАК ГоденДо,
			|	Штрихкоды.Количество КАК Количество
			|ПОМЕСТИТЬ Штрихкоды
			|ИЗ
			|	&Штрихкоды КАК Штрихкоды";
			
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
			ДобавитьТекстЗапросаНайденныхНомеровСерий(ТекстыЗапроса);
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	СУММА(1) КАК КоличествоНайденныхСерий,
			|	НайденныеНомераДляЗапроса.Номер
			|ПОМЕСТИТЬ КоличествоСерийПоНомеру
			|ИЗ
			|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
			|
			|СГРУППИРОВАТЬ ПО
			|	НайденныеНомераДляЗапроса.Номер";
			
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
			ДобавитьТекстЗапросаКоличестваНайденныхНомеровСерий(ТекстыЗапроса);
			
			ТекстЗапроса = 
			"УНИЧТОЖИТЬ Штрихкоды
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ НайденныеНомераДляЗапроса
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ КоличествоСерийПоНомеру";
			
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
			Запрос = Новый Запрос;
			Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
			
			Запрос.УстановитьПараметр("ВидНоменклатуры",НастройкиИспользованияСерий.ВладелецСерий);
			Запрос.УстановитьПараметр("Штрихкоды",ТаблицаШтрихКодов);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			СрокГодностиЗаполнен = Истина;
			
			Пока Выборка.Следующий() Цикл
				
				ИсключаемыеСвойства	= "";
				СтруктураПоиска		= Новый Структура("Серия, Номер, ГоденДо");
				
				ДобавитьПараметыПоискаСканируемойСерии(СтруктураПоиска, Выборка, ИсключаемыеСвойства);
				
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка, , ИсключаемыеСвойства);
				
				НайденныеСтроки = Объект.Серии.НайтиСтроки(СтруктураПоиска);
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					ОбрабатываемаяСтрока = Объект.Серии.Добавить();
					ЗаполнитьЗначенияСвойств(ОбрабатываемаяСтрока, Выборка);
					
					Если ЗначениеЗаполнено(Выборка.Серия) Тогда
						ЗаполнитьЗначенияСвойств(ОбрабатываемаяСтрока, ПрочитатьДопРеквизитыСерии(Выборка.Серия));
					КонецЕсли;
					Если НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
						ОбрабатываемаяСтрока.КоличествоУпаковок = Выборка.Количество;
					Иначе
						ОбрабатываемаяСтрока.КоличествоУпаковок = 1;
					КонецЕсли;
					
					ПараметрыПересчетаКоличества = Новый Структура("Упаковка,Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
					СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
					
					ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ОбрабатываемаяСтрока, СтруктураДействий, КэшированныеЗначения);
					Модифицированность   = Истина;
					
					Если Не ЗначениеЗаполнено(ОбрабатываемаяСтрока.ГоденДо) Тогда
						СрокГодностиЗаполнен = Ложь;
					КонецЕсли;
				Иначе
					ОбрабатываемаяСтрока = НайденныеСтроки[0];
					Если НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
						
						ТекущееКоличество = ОбрабатываемаяСтрока.КоличествоУпаковок;
						
						ОбрабатываемаяСтрока.КоличествоУпаковок = ОбрабатываемаяСтрока.КоличествоУпаковок + Выборка.Количество;
						
						ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
						СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
						
						ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ОбрабатываемаяСтрока, СтруктураДействий, КэшированныеЗначения);
						
						Модифицированность = Истина;
						
					Иначе
						ТекстСообщения = НСтр("ru = 'Серия с номером %НомерСерии% уже присутствует в списке серий'");
						ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НомерСерии%",Выборка.Номер);
						Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Серии",НайденныеСтроки[0].НомерСтроки,"Номер");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",ЕстьОшибки);
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(ОбрабатываемаяСтрока.ГоденДо) Тогда
						СрокГодностиЗаполнен = Ложь;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	ОбработатьШтрихкодыСерверЛокализация(ИдентификаторТекущейСтроки, КэшированныеЗначения, ШтрихкодыПоТипам, ЕстьОшибки);
	
	ЗакрытьФорму = Ложь;
	
	Если Не ЕстьОшибки
		И РежимСканированияСерий = "ТоварСерияТовар"
		И (СрокГодностиЗаполнен
		Или Не НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии) Тогда
		СохранитьВводСерийСервер();
		Если Не Модифицированность Тогда
			ЗакрытьФорму = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ЗакрытьФорму", ЗакрытьФорму);
	Результат.Вставить("ИдентификаторТекущейСтроки", ?(ОбрабатываемаяСтрока <> Неопределено,
														ОбрабатываемаяСтрока.ПолучитьИдентификатор(),
														Неопределено));
														
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ОбработатьСчитываниеRFID(ДанныеМеток, ИдентификаторТекущейСтроки)
	
	ПараметрыОбработки = ШтрихкодированиеНоменклатурыСервер.ПараметрыОбработкиСчитанныхRFID();
	ЗаполнитьЗначенияСвойств(ПараметрыОбработки, ЭтотОбъект);
	РезультатОбработки = ШтрихкодированиеНоменклатурыСервер.ОбработатьСчитываниеRFID(ДанныеМеток, ПараметрыОбработки, Объект.Серии, ИдентификаторТекущейСтроки);
	
	Если РезультатОбработки.ИдентификаторТекущейСтроки <> Неопределено Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
	Если РезультатОбработки.ДанныеСерии <> Неопределено
		И ЗначениеЗаполнено(РезультатОбработки.ДанныеСерии.Серия) Тогда
		ЗаполнитьЗначенияСвойств(РезультатОбработки.ДанныеСерии, ПрочитатьДопРеквизитыСерии(РезультатОбработки.ДанныеСерии.Серия));
	КонецЕсли;
	
	РезультатОбработки.ДанныеСерии = Неопределено;
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	Возврат РезультатОбработки;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьФлагиРаботыСМеткой(ИдентификаторТекущейСтроки)
	
	Если Не НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Объект.Серии.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	
	ПараметрыЗаполненияФлаговРаботыСМеткой = ШтрихкодированиеНоменклатурыСервер.ПараметрыЗаполненияФлаговРаботыСМеткой();
	ПараметрыЗаполненияФлаговРаботыСМеткой.ЗначенияПолейСвязи = ЗначенияПолейСвязи;
	ПараметрыЗаполненияФлаговРаботыСМеткой.ТекущаяМетка = Неопределено;
	ПараметрыЗаполненияФлаговРаботыСМеткой.НастройкиИспользованияСерий = НастройкиИспользованияСерий;
	
	ШтрихкодированиеНоменклатурыСервер.ЗаполнитьФлагиРаботыСМеткой(ТекущиеДанные, ПараметрыЗаполненияФлаговРаботыСМеткой);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

&НаКлиенте
Процедура Печать(ПечатьКаждойШт)
	
	Если Не ЗначениеЗаполнено(НастройкиИспользованияСерий.ШаблонЭтикеткиСерии) Тогда
		
		ПараметрыФормы = Новый Структура();
		Отбор = Новый Структура;
		Отбор.Вставить("Назначение",ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
		ПараметрыФормы.Вставить("Отбор",Отбор);
		
		ОткрытьФорму(
			"Справочник.ШаблоныЭтикетокИЦенников.ФормаВыбора",
			ПараметрыФормы,ЭтаФорма,,,,
			Новый ОписаниеОповещения("ПечатьЗавершение", 
				ЭтотОбъект,
				Новый Структура("ПечатьКаждойШт", ПечатьКаждойШт)),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		Возврат;
		
	КонецЕсли;
	
	ПечатьФрагмент(ПечатьКаждойШт);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    ПечатьКаждойШт = ДополнительныеПараметры.ПечатьКаждойШт;
    
    Если Не ЗначениеЗаполнено(Результат) Тогда
        Возврат;
    КонецЕсли;
	
	НастройкиИспользованияСерийСтруктура                     = Новый Структура(НастройкиИспользованияСерий);
	НастройкиИспользованияСерийСтруктура.ШаблонЭтикеткиСерии = Результат;
	НастройкиИспользованияСерий                              = Новый ФиксированнаяСтруктура(НастройкиИспользованияСерийСтруктура);
	
    ПечатьФрагмент(ПечатьКаждойШт);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьФрагмент(Знач ПечатьКаждойШт)
    
    Перем ПараметрКоманды, СтруктураПараметров;
    
    СтруктураПараметров = Новый Структура();
    
    Если Модифицированность Тогда
        
        Если СохранитьВводСерийСервер() Тогда
            СтруктураПараметров.Вставить("АдресВХранилище",ПодготовитьДанныеДляПечати(ПечатьКаждойШт,Элементы.Серии.ВыделенныеСтроки));	
        Иначе
            Возврат;
        КонецЕсли;
        
    ИначеЕсли Элементы.Серии.ТекущиеДанные <> Неопределено Тогда
        СтруктураПараметров.Вставить("АдресВХранилище",ПодготовитьДанныеДляПечати(ПечатьКаждойШт,Элементы.Серии.ВыделенныеСтроки));	
    Иначе
        Возврат;		
    КонецЕсли;
    
    СтруктураПараметров.Вставить("ШаблонЭтикетки",НастройкиИспользованияСерий.ШаблонЭтикеткиСерии); 
    СтруктураПараметров.Вставить("НазначениеШаблона",ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
    СтруктураПараметров.Вставить("КоличествоЭкземпляров",1);
    
    ПараметрКоманды = Новый Массив;
    ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка"));
    
    Если ПечатьНаПринтер Тогда
        УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер(
        "Обработка.ПечатьЭтикетокИЦенников", // Для вызова метода менеджера обработки "Печать".
        "ЭтикеткаСерииНоменклатуры",
        ПараметрКоманды,
        СтруктураПараметров);
        
    Иначе
        УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
        "Обработка.ПечатьЭтикетокИЦенников", // Для вызова метода менеджера обработки "Печать".
        "ЭтикеткаСерииНоменклатуры",
        ПараметрКоманды,
        ЭтаФорма,
        СтруктураПараметров); // Форма владелец
        
    КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляПечати(ПечатьКаждойШт,Знач ВыделенныеСтроки)
			
	СерииНоменклатуры = Новый ТаблицаЗначений;
	СерииНоменклатуры.Колонки.Добавить("Серия",		Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	СерииНоменклатуры.Колонки.Добавить("Штрихкод",	Новый ОписаниеТипов("Строка"));
	
	Для Каждого Идентификатор Из ВыделенныеСтроки Цикл
		Строка = Объект.Серии.НайтиПоИдентификатору(Идентификатор);
		
		Если ПечатьКаждойШт Тогда
			КоличествоЭкз = Строка.КоличествоУпаковок;
		Иначе
			КоличествоЭкз = 1;
		КонецЕсли;
		
		Пока КоличествоЭкз > 0 Цикл
			КоличествоЭкз = КоличествоЭкз - 1;
			НоваяСтрока = СерииНоменклатуры.Добавить();
			НоваяСтрока.Серия    = Строка.Серия;
			
			ШаблонФорматаДаты = НСтр("ru='ДФ=""%1""'");
			ШаблонФорматаДаты = СтрШаблон(ШаблонФорматаДаты, "ддММггЧЧ");
			
			Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии 
				И НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
				НоваяСтрока.ШтрихКод = СокрЛП(Строка.Номер) + Формат(Строка.ГоденДо, ШаблонФорматаДаты);
			ИначеЕсли НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
				НоваяСтрока.ШтрихКод = СокрЛП(Строка.Номер);
			Иначе
				НоваяСтрока.ШтрихКод = Формат(Строка.ГоденДо,ШаблонФорматаДаты);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(СерииНоменклатуры);	
КонецФункции

#КонецОбласти

#Область ГенерацияСерий

&НаСервере
Функция ВычислитьМаксимальныйНомерИКоличество(Количество)
	
	МаксимальныйНомерВДокументе = 0;
	
	Для Каждого СтрТабл Из Объект.Серии Цикл
		
		Если СтрДлина(СтрТабл.Номер) > 8 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрТабл.Номер) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерЧислом = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(СтрТабл.Номер);
		
		Если НомерЧислом > МаксимальныйНомерВДокументе Тогда
			МаксимальныйНомерВДокументе = НомерЧислом;
		КонецЕсли;
		
	КонецЦикла;
	
	МаксимальныйНомерИзСправочника = Справочники.СерииНоменклатуры.ВычислитьМаксимальныйНомерСерии(НастройкиИспользованияСерий.ВладелецСерий);
	
	Номер = Макс(МаксимальныйНомерВДокументе, МаксимальныйНомерИзСправочника);
	
	ТекущаяСтрока = Новый Структура;
	ТекущаяСтрока.Вставить("Номенклатура", ЗначенияПолейСвязи.Номенклатура);
	ТекущаяСтрока.Вставить("Упаковка", Упаковка);
	ТекущаяСтрока.Вставить("Количество", Количество);
	ТекущаяСтрока.Вставить("КоличествоУпаковок", Количество);
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка,Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);

	Результат = Новый Структура("Номер, ТекущаяСтрока", Номер, ТекущаяСтрока);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура НастроитьПорядокСканированияСерийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		РежимСканированияСерий = Результат.РежимСканированияСерий;
		Если Результат.ПечатьНаПринтер <> ПечатьНаПринтер Тогда
			ПечатьНаПринтер = Результат.ПечатьНаПринтер;
			ОбновитьКартинкуПечати();
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗапросЗаполненияТаблицыОстатков()
	
	Если Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет
		И Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
		Возврат;
	КонецЕсли;
	
	КоэффицентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Упаковка, ЗначенияПолейСвязи.Номенклатура);
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Номенклатура", ЗначенияПолейСвязи.Номенклатура);
	ПараметрыЗапроса.Вставить("Характеристика", ЗначенияПолейСвязи.Характеристика);
	ПараметрыЗапроса.Вставить("Назначение", НазначениеПоЗначениямПолейСвязи());
	ПараметрыЗапроса.Вставить("Склад", Склад);
	ПараметрыЗапроса.Вставить("Помещение", Помещение);
	ПараметрыЗапроса.Вставить("Регистратор", Регистратор);
	ПараметрыЗапроса.Вставить("Распоряжение", Распоряжение);
	ПараметрыЗапроса.Вставить("КоэффицентУпаковки", КоэффицентУпаковки);
	
	ТекстЗапроса = Обработки.ПодборСерийВДокументы.ТекстЗапросаФормированияТаблицыДанныеРегистров(ВариантПолучениеДанныхИзРегистров, Склад);
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	СерииВДокументе.Серия,
	|	СерииВДокументе.Количество,
	|	СерииВДокументе.КоличествоУпаковок
	|ПОМЕСТИТЬ СерииВДокументе
	|ИЗ
	|	&СерииВДокументе КАК СерииВДокументе
	|ГДЕ
	|	СерииВДокументе.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если РежимОтображенияСерий = "СерииВДокументе" Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	СерииВДокументе.Серия КАК Серия,
		|	ЕСТЬNULL(ДанныеРегистров.СвободныйОстаток, 0) / &КоэффицентУпаковки * &ЗнакОстатка - СерииВДокументе.КоличествоУпаковок КАК СвободныйОстаток,
		|	СерииВДокументе.Количество КАК Количество,
		|	СерииВДокументе.КоличествоУпаковок КАК КоличествоУпаковок,
		|	&ТекстЗапросаРеквизитыСерий
		|ИЗ
		|	СерииВДокументе КАК СерииВДокументе
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеРегистров КАК ДанныеРегистров
		|		ПО (ДанныеРегистров.Серия = СерииВДокументе.Серия)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГоденДо,
		|	Номер";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", 
			Обработки.ПодборСерийВДокументы.ТекстЗапросаРеквизитыСерий("СерииВДокументе", НастройкиИспользованияСерий));
	ИначеЕсли РежимОтображенияСерий = "ТолькоОстатки" Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.СвободныйОстаток) КАК СвободныйОстаток,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	&ТекстЗапросаРеквизитыСерий
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеРегистров.Серия КАК Серия,
		|		ДанныеРегистров.СвободныйОстаток / &КоэффицентУпаковки * &ЗнакОстатка КАК СвободныйОстаток,
		|		0 КАК Количество,
		|		0 КАК КоличествоУпаковок
		|	ИЗ
		|		ДанныеРегистров КАК ДанныеРегистров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СерииВДокументе.Серия,
		|		-СерииВДокументе.КоличествоУпаковок,
		|		СерииВДокументе.Количество,
		|		СерииВДокументе.КоличествоУпаковок
		|	ИЗ
		|		СерииВДокументе КАК СерииВДокументе) КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Серия,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Серия КАК Справочник.СерииНоменклатуры).Номер,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Серия КАК Справочник.СерииНоменклатуры).ГоденДо
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.СвободныйОстаток) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГоденДо,
		|	Номер";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий",
			Обработки.ПодборСерийВДокументы.ТекстЗапросаРеквизитыСерий("ВложенныйЗапрос", НастройкиИспользованияСерий));
	ИначеЕсли РежимОтображенияСерий = "ВсеСерии" Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.СвободныйОстаток) КАК СвободныйОстаток,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	&ТекстЗапросаРеквизитыСерий
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеРегистров.Серия КАК Серия,
		|		ДанныеРегистров.СвободныйОстаток / &КоэффицентУпаковки * &ЗнакОстатка КАК СвободныйОстаток,
		|		0 КАК Количество,
		|		0 КАК КоличествоУпаковок
		|	ИЗ
		|		ДанныеРегистров КАК ДанныеРегистров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СерииВДокументе.Серия,
		|		-СерииВДокументе.КоличествоУпаковок,
		|		СерииВДокументе.Количество,
		|		СерииВДокументе.КоличествоУпаковок
		|	ИЗ
		|		СерииВДокументе КАК СерииВДокументе) КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Серия,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Серия КАК Справочник.СерииНоменклатуры).Номер,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Серия КАК Справочник.СерииНоменклатуры).ГоденДо
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГоденДо,
		|	Номер";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", 
			Обработки.ПодборСерийВДокументы.ТекстЗапросаРеквизитыСерий("ВложенныйЗапрос", НастройкиИспользованияСерий));
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Для Каждого Параметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	Запрос.УстановитьПараметр("ВсеСерии", РежимОтображенияСерий = "ВсеСерии");
	Запрос.УстановитьПараметр("СерииВДокументе", Объект.Серии.Выгрузить());
	
	Если ВариантПолучениеДанныхИзРегистров = "ТоварыКОформлениюПоступления"
		И ПараметрыУказанияСерий.ЭтоОрдер Тогда
		Запрос.УстановитьПараметр("ЗнакОстатка", -1);
	Иначе
		Запрос.УстановитьПараметр("ЗнакОстатка", 1);
	КонецЕсли;	
	
	ОстаткиСерий.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Доп. реквизиты
	УправлениеСвойствамиУТ.ДобавитьКолонкиДополнительныхРеквизитов(
		НастройкиИспользованияСерий,
		ЭтаФорма,
		"ОстаткиСерий",
		"ОстаткиСерий",
		"ОстаткиСерийСвободныйОстаток",
		Истина);
	УправлениеСвойствамиУТ.ЗаполнитьКолонкиДополнительныхРеквизитов(
		ЭтаФорма,
		"ОстаткиСерий",
		"Серия");
		
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаСервере
Процедура ОстаткиСерийКоличествоУпаковокПриИзмененииСервер(ИдентификаторТекущейСтроки, КэшированныеЗначения)
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка,Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);

	ТекущиеДанные = ОстаткиСерий.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
	НайденныеСтроки = Объект.Серии.НайтиСтроки(Новый Структура("Серия", ТекущиеДанные.Серия));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		НайденныеСтроки = Объект.Серии.НайтиСтроки(Новый Структура("Серия",Справочники.СерииНоменклатуры.ПустаяСсылка()));
	КонецЕсли;
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтрокаСерий = НайденныеСтроки[0];
		Если ТекущиеДанные.КоличествоУпаковок = 0 Тогда
			Объект.Серии.Удалить(СтрокаСерий);
			Возврат;
		КонецЕсли;
	ИначеЕсли ТекущиеДанные.КоличествоУпаковок = 0 Тогда
		Возврат;
	Иначе
		СтрокаСерий = Объект.Серии.Добавить();
	КонецЕсли;
		
	ЗаполнитьЗначенияСвойств(СтрокаСерий, ТекущиеДанные);
    ЗаполнитьЗначенияСвойств(СтрокаСерий, ПрочитатьДопРеквизитыСерии(СтрокаСерий.Серия));
	
КонецПроцедуры

&НаСервере
Функция СохранитьВводСерийСервер(СтрокаДляЗаписи = Неопределено)
	
	Если Объект.Серии.Количество() > 0 Тогда
		ПоследняяСтрока = Объект.Серии[Объект.Серии.Количество()-1];
		
		ЕстьЗаполненноеПоле = ЗначениеЗаполнено(ПоследняяСтрока.Серия)
							Или ПоследняяСтрока.КоличествоУпаковок > 1;
		
		Если Не ЕстьЗаполненноеПоле Тогда
			ЕстьЗаполненноеПоле = ЕстьЗаполненноеПолеВСтрокеСерии(ПоследняяСтрока, НастройкиИспользованияСерий);
		КонецЕсли;
		
		Если Не ЕстьЗаполненноеПоле Тогда
			Объект.Серии.Удалить(ПоследняяСтрока);
		КонецЕсли;
		
	КонецЕсли;	
	
	ПараметрыПроверки = Новый Структура();
	ПараметрыПроверки.Вставить("НастройкиИспользованияСерий", НастройкиИспользованияСерий);
	ПараметрыПроверки.Вставить("ПараметрыУказанияСерий", ПараметрыУказанияСерий);
	ПараметрыПроверки.Вставить("ЗначенияПолейСвязи", ЗначенияПолейСвязи);
	ПараметрыПроверки.Вставить("ТолькоРедактированиеКоличества", ТолькоРедактированиеКоличества);
	ПараметрыПроверки.Вставить("Упаковка", Упаковка);
	
	Объект.ПараметрыПроверки = Новый ФиксированнаяСтруктура(ПараметрыПроверки);
	
	Если НЕ (ПроверитьЗаполнение()
	 И УправлениеСвойствамиУТ.ПроверитьЗаполнениеДополнительныхРеквизитов(ЭтаФорма, "Объект.Серии")) Тогда
		Возврат Ложь;
	КонецЕсли;	
			
	НайтиЗарегистрированныеСерии();
	
	ТаблицаВозврата = Новый ТаблицаЗначений;
	ТаблицаВозврата.Колонки.Добавить("Серия",Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаВозврата.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
	ТаблицаВозврата.Колонки.Добавить("КоличествоУпаковок",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));

	КоэффициентИсходнойУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(ИсходнаяУпаковка, ЗначенияПолейСвязи.Номенклатура);
	
	РеквизитыСерии = Новый Массив;
	Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		Если Описание.Использование Тогда
			РеквизитыСерии.Добавить(Описание.ИмяРеквизита);
		КонецЕсли;
	КонецЦикла;
	ИспользуемыеРеквизитыСерии = СтрСоединить(РеквизитыСерии, ",");
	
	Для Каждого СтрТабл Из Объект.Серии Цикл
		
		Если СтрТабл.Количество > 0
			Или ТолькоРедактированиеКоличества Тогда // В режиме ТолькоРедактированиеКоличества нужно также вернуть строки с нулевым количеством
			
			СохранитьСериюПоСтроке(СтрТабл, ИспользуемыеРеквизитыСерии);
			
			НоваяСтрока = ТаблицаВозврата.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрТабл);
			НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество / КоэффициентИсходнойУпаковки;
			
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = ПараметрыУказанияСерий.ИмяТЧСерии
		И ТаблицаВозврата.Количество() = 0 Тогда
		
		НоваяСтрока = ТаблицаВозврата.Добавить();
		НоваяСтрока.КоличествоУпаковок = Количество;
		
		СтруктураРеквизитов = Новый Структура("Упаковка,Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
		СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", СтруктураРеквизитов);
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, Неопределено);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(ТаблицаВозврата,АдресВоВременномХранилище);
	Модифицированность = Ложь;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЕстьЗаполненноеПолеВСтрокеСерии(ОбрабатываемаяСтрока, НастройкиИспользованияСерий)
	
	ЕстьЗаполненноеПоле = Ложь;
	
	Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		
		Если Описание.ИмяНастройки <> "ИспользоватьRFIDМеткиСерии"
			И Описание.Использование
			И ЗначениеЗаполнено(ОбрабатываемаяСтрока[Описание.ИмяРеквизита]) Тогда
			
			ЕстьЗаполненноеПоле = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьЗаполненноеПоле;

КонецФункции

&НаСервере
Процедура СохранитьСериюПоСтроке(ИдентификаторСтроки, ИспользуемыеРеквизитыСерии)

	Если Не ПравоДобавленияСерий Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИдентификаторСтроки) <> Тип("ДанныеФормыЭлементКоллекции") Тогда
		СтрокаТаблицы = Объект.Серии.НайтиПоИдентификатору(ИдентификаторСтроки);
	Иначе
		СтрокаТаблицы = ИдентификаторСтроки; 
	КонецЕсли;

	СправочникОбъект = Неопределено;
	Если Не ЗначениеЗаполнено(СтрокаТаблицы.Серия) Тогда
		
		СправочникОбъект = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		СправочникОбъект.ВидНоменклатуры = НастройкиИспользованияСерий.ВладелецСерий;
		
	КонецЕсли;
	
	Если УправлениеСвойствамиУТ.ЕстьДопРеквизитыВТаблице(ЭтотОбъект, "Объект.Серии") Тогда
		Если СправочникОбъект = Неопределено Тогда
			СправочникОбъект = СтрокаТаблицы.Серия.ПолучитьОбъект();
		КонецЕсли;
		УправлениеСвойствамиУТ.ПеренестиДополнительныеРеквизитыИзФормыВОбъект(СправочникОбъект, ЭтотОбъект, СтрокаТаблицы, "Объект.Серии");
	КонецЕсли;

	Если Не ПустаяСтрока(ИспользуемыеРеквизитыСерии) Тогда
		Если СправочникОбъект = Неопределено Тогда
			РеквизитыСерии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТаблицы.Серия, ИспользуемыеРеквизитыСерии);
			РеквизитыСтроки = Новый Структура(ИспользуемыеРеквизитыСерии);
			ЗаполнитьЗначенияСвойств(РеквизитыСтроки, СтрокаТаблицы, ИспользуемыеРеквизитыСерии);
			Если Не ОбщегоНазначения.ДанныеСовпадают(РеквизитыСерии, РеквизитыСтроки) Тогда
				СправочникОбъект = СтрокаТаблицы.Серия.ПолучитьОбъект();
				ЗаполнитьЗначенияСвойств(СправочникОбъект, СтрокаТаблицы, ИспользуемыеРеквизитыСерии);
			КонецЕсли;
		Иначе
			ЗаполнитьЗначенияСвойств(СправочникОбъект, СтрокаТаблицы, ИспользуемыеРеквизитыСерии);
		КонецЕсли;
	КонецЕсли;

	Если СправочникОбъект <> Неопределено Тогда
		СправочникОбъект.Записать();
		СтрокаТаблицы.Серия = СправочникОбъект.Ссылка;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		НужноЗадаватьВопросПередЗакрытием = Ложь;
		ЗавершитьВводСерий(Неопределено);// Сохранение результатов модификации.
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		
		НужноЗадаватьВопросПередЗакрытием = Ложь;
		Закрыть(Неопределено);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПрочитатьДопРеквизитыСерии(Серия)
	
	Возврат УправлениеСвойствамиУТ.ПрочитатьДопРеквизитыСерии(ЭтотОбъект, "Объект.Серии", Серия);
	
КонецФункции

// Функция-конструктор дополнительных параметров 
// Возвращаемое значение:
// 	Структура - дополнительные параметры:
// 		* Элемент - ГруппаФормы, ТаблицаФормы, ПолеФормы, КнопкаФормы - Элемент формы
// 		* СписокВыбора - СписокЗначений
// 		* ТекущиеДанные - ДанныеФормыЭлементКоллекции
&НаКлиенте
Функция ДополнительныеПараметрыОбработкиЗавершения()
	
	Результат = Новый Структура;
	Результат.Вставить("Элемент");
	Результат.Вставить("СписокВыбора");
	Результат.Вставить("ТекущиеДанные");
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПодобратьСерию(Элемент)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;	
	ВводимыйРеквизит = СтрЗаменить(Элемент.Имя, "Серии", "");	
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные[ВводимыйРеквизит]) Тогда
		ТекущиеДанные.Серия = Неопределено;
		Возврат;
	КонецЕсли;
	
	Если ВводимыйРеквизит = "ГоденДо"
		Или ВводимыйРеквизит = "ДатаПроизводства" Тогда
		НоменклатураКлиентСервер.ПересчитатьДатуСерии(ТекущиеДанные[ВводимыйРеквизит]);
		Если ВводимыйРеквизит = "ДатаПроизводства" Тогда
			ЗаполнитьГоденДоПоДатеПроизводства();
		КонецЕсли;
	КонецЕсли;
	
	ПроверяемыеРеквизиты = Новый Массив;
	
	Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		Если Описание.ИмяНастройки <> "ИспользоватьRFIDМеткиСерии"
			И Описание.Использование
			И Описание.ИмяРеквизита <> ВводимыйРеквизит Тогда
			
			ПроверяемыеРеквизиты.Добавить(Описание.ИмяРеквизита);
		КонецЕсли;
	КонецЦикла;	
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ПараметрыПоиска = Новый Структура(СтрСоединить(ПроверяемыеРеквизиты,","));
	ПараметрыПоиска.Вставить(ВводимыйРеквизит,ТекущиеДанные[ВводимыйРеквизит]);
	
	ПараметрыПоиска.Вставить("ВидНоменклатуры", НастройкиИспользованияСерий.ВладелецСерий);
	ПараметрыПоиска.Вставить("НастройкиИспользованияСерий",НастройкиИспользованияСерий);
	ПараметрыПоиска.Вставить("Отбор", Новый Структура);
	ПараметрыПоиска.Вставить("СтрокаПоиска", Неопределено);
	
	СписокВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.СерииНоменклатуры"),ПараметрыПоиска);
	
	ВыбранныйЭлемент = Неопределено;
	
	Значение = Новый Структура(СтрСоединить(ПроверяемыеРеквизиты,","));
	Значение.Вставить(ВводимыйРеквизит);
	ЗаполнитьЗначенияСвойств(Значение, ТекущиеДанные); 
	Значение.Вставить("Серия", Неопределено);
	
	Наименование = НоменклатураКлиентСервер.ПредставлениеСерииБезРасчетаПоШаблонуНаименования(НастройкиИспользованияСерий, ТекущиеДанные, Истина);
	
	СписокВыбора.Вставить(0, Значение, Наименование);
	
	Если СписокВыбора.Количество() = 1 Тогда
		ВыбранныйЭлемент = СписокВыбора[0];
	ИначеЕсли СписокВыбора.Количество() = 2 Тогда
		
		ПервоеЗначениеВСпискеОтличаетсяОтВторого = СписокВыбора[0].Значение[ВводимыйРеквизит] 
														<> СписокВыбора[1].Значение[ВводимыйРеквизит];
		//
		Если Не ПервоеЗначениеВСпискеОтличаетсяОтВторого Тогда
			Для каждого ИмяРеквизита Из ПроверяемыеРеквизиты Цикл
				Если СписокВыбора[0].Значение[ИмяРеквизита] 
					  <> СписокВыбора[1].Значение[ИмяРеквизита] Тогда
				//
					ПервоеЗначениеВСпискеОтличаетсяОтВторого = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если ПервоеЗначениеВСпискеОтличаетсяОтВторого Тогда
			
			ДополнительныеПараметры = ДополнительныеПараметрыОбработкиЗавершения();
			ДополнительныеПараметры.СписокВыбора = СписокВыбора;
			ДополнительныеПараметры.ТекущиеДанные = ТекущиеДанные;
			ДополнительныеПараметры.Элемент = Элемент;
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодобратьСериюЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			
			ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
		Иначе
			ВыбранныйЭлемент = СписокВыбора[1];
		КонецЕсли;
	ИначеЕсли СписокВыбора.Количество() > 0 Тогда
		
		ДополнительныеПараметры = ДополнительныеПараметрыОбработкиЗавершения();
		ДополнительныеПараметры.СписокВыбора = СписокВыбора;
		ДополнительныеПараметры.ТекущиеДанные = ТекущиеДанные;
		ДополнительныеПараметры.Элемент = Элемент;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодобратьСериюЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
		ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
	КонецЕсли;
	
	ПодобратьСериюФрагмент(ВыбранныйЭлемент, ТекущиеДанные);
	
КонецПроцедуры

// Параметры:
// 	ВыбранныйЭлемент - ГруппаФормы, ТаблицаФормы, ПолеФормы, КнопкаФормы - Элемент формы
// 	ДополнительныеПараметры - см. ДополнительныеПараметрыОбработкиЗавершения
// 
&НаКлиенте
Процедура ПодобратьСериюЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	СписокВыбора = ДополнительныеПараметры.СписокВыбора;
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	Элемент = ДополнительныеПараметры.Элемент;
	
	ПодобратьСериюФрагмент(ВыбранныйЭлемент, ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСериюФрагмент(Знач ВыбранныйЭлемент, Знач ТекущиеДанные)
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ВыбранныйЭлемент.Значение); 
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ПрочитатьДопРеквизитыСерии(ТекущиеДанные.Серия));
		
	Иначе 
		ТекущиеДанные.Серия   = Неопределено; 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСериюКлиент()
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ВидНоменклатуры", НастройкиИспользованияСерий.ВладелецСерий);
	ЗначенияЗаполненияСерии.Вставить("Номер", ТекущиеДанные.Номер);
	ЗначенияЗаполненияСерии.Вставить("ГоденДо", ТекущиеДанные.ГоденДо);
	ЗначенияЗаполненияСерии.Вставить("НомерКИЗГИСМ", ТекущиеДанные.НомерКИЗГИСМ);
	ЗначенияЗаполненияСерии.Вставить("ДатаПроизводства", ТекущиеДанные.ДатаПроизводства);
	ЗначенияЗаполненияСерии.Вставить("ПроизводительЕГАИС", ТекущиеДанные.ПроизводительЕГАИС);
	ЗначенияЗаполненияСерии.Вставить("Справка2ЕГАИС", ТекущиеДанные.Справка2ЕГАИС);
	ЗначенияЗаполненияСерии.Вставить("ПроизводительВЕТИС", ТекущиеДанные.ПроизводительВЕТИС);
	ЗначенияЗаполненияСерии.Вставить("ЗаписьСкладскогоЖурналаВЕТИС", ТекущиеДанные.ЗаписьСкладскогоЖурналаВЕТИС);
	ЗначенияЗаполненияСерии.Вставить("ИдентификаторПартииВЕТИС", ТекущиеДанные.ИдентификаторПартииВЕТИС);
	ЗначенияЗаполненияСерии.Вставить("МаксимальнаяРозничнаяЦенаМОТП", ТекущиеДанные.МаксимальнаяРозничнаяЦенаМОТП);
	ЗначенияЗаполненияСерии.Вставить("RFIDTID", ТекущиеДанные.RFIDTID);
	ЗначенияЗаполненияСерии.Вставить("RFIDUser", ТекущиеДанные.RFIDUser);
	ЗначенияЗаполненияСерии.Вставить("RFIDEPC", ТекущиеДанные.RFIDEPC);
	ЗначенияЗаполненияСерии.Вставить("EPCGTIN", ТекущиеДанные.EPCGTIN);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФорму("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтаФорма, , , , Неопределено,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	Закрыть(АдресВоВременномХранилище);
КонецПроцедуры

&НаСервере
Процедура ОбъединитьСтроки(ИдентификаторТекущейСтроки)
	
	ТекущаяСтрока = Объект.Серии.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	
	РеквизитыПроверяемыеВместе        = Новый Массив;
	РеквизитыПроверяемыеПоОтдельности = Новый Массив;
	НадоУдалятьТекущуюСтроку          = Ложь;
	
	Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		Если Описание.ИмяНастройки = "ИспользоватьRFIDМеткиСерии" Тогда
			Продолжить;
		КонецЕсли;
	
		Если Описание.Использование Тогда
			Если Описание.ПроверятьУникальностьЗначения Тогда
				РеквизитыПроверяемыеПоОтдельности.Добавить(Описание.ИмяРеквизита);
			Иначе
				РеквизитыПроверяемыеВместе.Добавить(Описание.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из Объект.Серии Цикл
		Если Строка.ПолучитьИдентификатор() = ИдентификаторТекущейСтроки Тогда
		 	Продолжить;
		КонецЕсли;
		
		СтрокаСовпадает = Ложь;
		
		Для Каждого ИмяРеквизита Из РеквизитыПроверяемыеПоОтдельности Цикл
			Если ТекущаяСтрока[ИмяРеквизита] = Строка[ИмяРеквизита] Тогда
				СтрокаСовпадает = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не СтрокаСовпадает Тогда
			СтрокаСовпадает = ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ТекущаяСтрока, Строка, РеквизитыПроверяемыеВместе);
		КонецЕсли;	
		
		Если СтрокаСовпадает Тогда
			
			Если НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
				Строка.Количество = Строка.Количество + ТекущаяСтрока.Количество;
				Строка.КоличествоУпаковок = Строка.КоличествоУпаковок + ТекущаяСтрока.КоличествоУпаковок;
			КонецЕсли;
			
			НадоУдалятьТекущуюСтроку = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НадоУдалятьТекущуюСтроку Тогда
		Объект.Серии.Удалить(ТекущаяСтрока);
	Иначе
		ЗаполнитьФлагиРаботыСМеткой(ИдентификаторТекущейСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКартинкуПечати()
	Если ПечатьНаПринтер Тогда
		Элементы.ГруппаПечать.Картинка = БиблиотекаКартинок.ПечатьСразу;
	Иначе
	    Элементы.ГруппаПечать.Картинка = БиблиотекаКартинок.Печать;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокиНаСервере(Результат)
	
	Если Объект.Серии.Количество() > 0
		И Не ЗначениеЗаполнено(Объект.Серии[0].Номер) Тогда
		
		Объект.Серии.Удалить(0);
		
	КонецЕсли;

    КолСерий = Результат.КоличествоСерий;
    ВКаждойСерии = Результат.ВКаждойСерии;
    ВКаждойСерииКоличество = Результат.ВКаждойСерииКоличество;
	
	АктивнаяСтрока = Неопределено;
	
	ПараметрыСтроки = Новый Структура;
	ПараметрыСтроки.Вставить("Номенклатура",       ЗначенияПолейСвязи.Номенклатура);
	ПараметрыСтроки.Вставить("Упаковка",           Упаковка);
	ПараметрыСтроки.Вставить("Количество",         ВКаждойСерииКоличество);
	ПараметрыСтроки.Вставить("КоличествоУпаковок", ВКаждойСерииКоличество);
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ПараметрыСтроки, СтруктураДействий, Неопределено);
	
	СтруктураДопРеквизитов = УправлениеСвойствамиУТ.ПрочитатьДопРеквизитыСерии(ЭтотОбъект, "Объект.Серии", Результат);
	
	Если Результат.СпособНумерацииСерий = 0 И Результат.ОграничениеГенерацииНомеров = 0 Тогда
	
	    СтруктураВозврата = ВычислитьМаксимальныйНомерИКоличество(ВКаждойСерииКоличество);
		
		Номер = СтруктураВозврата.Номер;

		Пока КолСерий > 0 Цикл
			                             
			КолСерий = КолСерий-1;
			Номер = Номер+1;
			ТекущаяСтрока = Объект.Серии.Добавить();
			   
			Если АктивнаяСтрока = Неопределено Тогда
				АктивнаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
			КонецЕсли;
			
			ТекущаяСтрока.Номер = Формат(Номер, "ЧЦ=8; ЧВН=; ЧГ=");
			
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ПараметрыСтроки); 
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураДопРеквизитов); 
			

		КонецЦикла;	
		
	Иначе
		
		Если Результат.СпособНумерацииСерий = 0 И Результат.ОграничениеГенерацииНомеров = 1 Тогда
		
			ТаблицаНомеров = Справочники.СерииНоменклатуры.СгенерироватьНомераСерийВДиапазоне(
				НастройкиИспользованияСерий.ВладелецСерий,
				Результат.НачальныйНомер,
				Результат.КонечныйНомер,
				КолСерий);
		
			Если ТаблицаНомеров.Количество() < КолСерий Тогда
				ТаблицаНомеров.Очистить();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В указанном диапазоне недостаточно свободных номеров.'"));
			КонецЕсли;
			
		Иначе
			
			ТаблицаНомеров = Справочники.СерииНоменклатуры.ПолучитьНомераСерийВДиапазоне(
				НастройкиИспользованияСерий.ВладелецСерий,
				Результат.НачальныйНомер,
				Результат.КонечныйНомер);
			
		КонецЕсли;
			
		Для Каждого ТекСтр Из ТаблицаНомеров Цикл
			
			СуществующиеСтроки = Объект.Серии.НайтиСтроки(Новый Структура("Номер", ТекСтр.Номер));
			
			Если СуществующиеСтроки.Количество() > 0 Тогда 
				
				ТекущаяСтрока = СуществующиеСтроки[0];
				
				ТекущаяСтрока.Количество = ТекущаяСтрока.Количество + ПараметрыСтроки.Количество;
				ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.КоличествоУпаковок + ПараметрыСтроки.КоличествоУпаковок;
				
			Иначе
				
				ТекущаяСтрока = Объект.Серии.Добавить();
				
				ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекСтр);
				ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ПараметрыСтроки); 
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураДопРеквизитов); 
			
			Если АктивнаяСтрока = Неопределено Тогда
				АктивнаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
			КонецЕсли;
						
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат АктивнаяСтрока;
	
КонецФункции

&НаСервере
Процедура НайтиЗарегистрированныеСерии()
	
	// Если ревизит не используется - он должен быть очищен
	Для Каждого СтрТабл Из Объект.Серии Цикл
		
		Если Не ЗначениеЗаполнено(СтрТабл.Серия) Тогда
			
			Для Каждого Реквизит Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
				
				Если Не Реквизит.Использование Тогда
					СтрТабл[Реквизит.ИмяРеквизита] = Неопределено;
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;		
		
	КонецЦикла;
	                                           
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Серии.Серия КАК Серия,
	|	Серии.НомерСтроки КАК НомерСтроки,
	|	&ТекстЗапросаПолейСерий
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|ГДЕ
	|	Серии.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникСерии.Ссылка КАК Серия,
	|	Серии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Серии КАК Серии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СправочникСерии
	|		ПО &ТекстУсловийПоПолямСУникальностьюЗначения
	|				ИЛИ (&ТекстУсловийПоПолямСУникальностьюПоСовокупностиЗначений)
	|ГДЕ
	|	СправочникСерии.ВидНоменклатуры = &ВидНоменклатуры";
	
	МассивУсловийПоПолямСУникальностьюЗначения               = Новый Массив;
	МассивУсловийПоПолямСУникальностьюПоСовокупностиЗначений = Новый Массив;
	
	ШаблонУсловия = " Серии.%ИмяРеквизита% = СправочникСерии.%ИмяРеквизита% ";
	
	Для Каждого Реквизит Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
		
		Если Реквизит.Использование
			И Реквизит.ИмяНастройки <> "ИспользоватьRFIDМеткиСерии" Тогда
			
			ТекстУсловия = СтрЗаменить(ШаблонУсловия, "%ИмяРеквизита%", Реквизит.ИмяРеквизита);
			
			Если Реквизит.ПроверятьУникальностьЗначения Тогда
				МассивУсловийПоПолямСУникальностьюЗначения.Добавить(ТекстУсловия);	
			Иначе
				МассивУсловийПоПолямСУникальностьюПоСовокупностиЗначений.Добавить(ТекстУсловия);	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивУсловийПоПолямСУникальностьюЗначения.Количество() > 0 Тогда	
		ТекстУсловийПоПолямСУникальностьюЗначения
			= СтрСоединить(МассивУсловийПоПолямСУникальностьюЗначения, "ИЛИ");
	Иначе
		ТекстУсловийПоПолямСУникальностьюЗначения = "ЛОЖЬ";
	КонецЕсли;
	
	
	Если МассивУсловийПоПолямСУникальностьюПоСовокупностиЗначений.Количество() > 0 Тогда	
		ТекстУсловийПоПолямСУникальностьюПоСовокупностиЗначений
			= СтрСоединить(МассивУсловийПоПолямСУникальностьюПоСовокупностиЗначений, "И");
	Иначе
		ТекстУсловийПоПолямСУникальностьюПоСовокупностиЗначений = "ЛОЖЬ";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаПолейСерий",
				Обработки.ПодборСерийВДокументы.ТекстЗапросаРеквизитыСерий("Серии", НастройкиИспользованияСерий, Ложь, Ложь));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстУсловийПоПолямСУникальностьюЗначения",
												ТекстУсловийПоПолямСУникальностьюЗначения);
												
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстУсловийПоПолямСУникальностьюПоСовокупностиЗначений",
												ТекстУсловийПоПолямСУникальностьюПоСовокупностиЗначений);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ВидНоменклатуры",НастройкиИспользованияСерий.ВладелецСерий);
	Запрос.УстановитьПараметр("Серии",Объект.Серии.Выгрузить());

	ВыборкаПоСсылкам = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаПоСсылкам.Следующий() Цикл
		Объект.Серии[ВыборкаПоСсылкам.НомерСтроки-1].Серия = ВыборкаПоСсылкам.Серия;
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьПоFEFOНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеРегистров.Серия КАК Серия,
	|	ДанныеРегистров.Серия.Номер КАК Номер,
	|	ДанныеРегистров.Серия.ГоденДо КАК ГоденДо,
	|	СУММА(ДанныеРегистров.СвободныйОстаток) КАК Количество,
	|	ДанныеРегистров.Серия.НомерКиЗГИСМ КАК НомерКиЗГИСМ,
	|	ДанныеРегистров.Серия.RFIDTID КАК RFIDTID,
	|	ДанныеРегистров.Серия.RFIDUser КАК RFIDUser,
	|	ДанныеРегистров.Серия.RFIDEPC КАК RFIDEPC,
	|	ДанныеРегистров.Серия.EPCGTIN КАК EPCGTIN,
	|	ДанныеРегистров.Серия.RFIDМеткаНеЧитаемая КАК RFIDМеткаНеЧитаемая,
	|	ДанныеРегистров.Серия.ДатаПроизводства КАК ДатаПроизводства,
	|	ДанныеРегистров.Серия.ПроизводительЕГАИС КАК ПроизводительЕГАИС,
	|	ДанныеРегистров.Серия.Справка2ЕГАИС КАК Справка2ЕГАИС,
	|	ДанныеРегистров.Серия.ПроизводительВЕТИС КАК ПроизводительВЕТИС,
	|	ДанныеРегистров.Серия.ЗаписьСкладскогоЖурналаВЕТИС КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ДанныеРегистров.Серия.ИдентификаторПартииВЕТИС КАК ИдентификаторПартииВЕТИС,
	|	ДанныеРегистров.Серия.МаксимальнаяРозничнаяЦенаМОТП КАК МаксимальнаяРозничнаяЦенаМОТП
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Серия КАК Серия,
	|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток КАК СвободныйОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				Номенклатура = &Номенклатура
	|					И Характеристика = &Характеристика
	|					И Назначение = &Назначение
	|					И Склад = &Склад
	|					И Помещение = &Помещение) КАК ТоварыНаСкладахОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыНаСкладах.Серия,
	|		ВЫБОР
	|			КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТоварыНаСкладах.ВНаличии + ТоварыНаСкладах.КОтгрузке
	|			ИНАЧЕ ТоварыНаСкладах.ВНаличии - ТоварыНаСкладах.КОтгрузке
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	|	ГДЕ
	|		ТоварыНаСкладах.Номенклатура = &Номенклатура
	|		И ТоварыНаСкладах.Характеристика = &Характеристика
	|		И ТоварыНаСкладах.Назначение = &Назначение
	|		И ТоварыНаСкладах.Склад = &Склад
	|		И ТоварыНаСкладах.Помещение = &Помещение
	|		И ТоварыНаСкладах.Регистратор = &Регистратор) КАК ДанныеРегистров
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистров.Серия,
	|	ДанныеРегистров.Серия.Номер,
	|	ДанныеРегистров.Серия.ГоденДо,
	|	ДанныеРегистров.Серия.НомерКиЗГИСМ,
	|	ДанныеРегистров.Серия.RFIDTID,
	|	ДанныеРегистров.Серия.RFIDUser,
	|	ДанныеРегистров.Серия.RFIDEPC,
	|	ДанныеРегистров.Серия.EPCGTIN,
	|	ДанныеРегистров.Серия.RFIDМеткаНеЧитаемая,
	|	ДанныеРегистров.Серия.ДатаПроизводства,
	|	ДанныеРегистров.Серия.ПроизводительЕГАИС,
	|	ДанныеРегистров.Серия.Справка2ЕГАИС,
	|	ДанныеРегистров.Серия.ПроизводительВЕТИС,
	|	ДанныеРегистров.Серия.ЗаписьСкладскогоЖурналаВЕТИС,
	|	ДанныеРегистров.Серия.ИдентификаторПартииВЕТИС,
	|	ДанныеРегистров.Серия.МаксимальнаяРозничнаяЦенаМОТП
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеРегистров.СвободныйОстаток) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо";
	
	Запрос.УстановитьПараметр("Номенклатура", ЗначенияПолейСвязи.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", ЗначенияПолейСвязи.Характеристика);
	Запрос.УстановитьПараметр("Назначение", НазначениеПоЗначениямПолейСвязи());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Помещение", Помещение);
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	КоличествоКРаспределению = Количество*КоэффициентУпаковки;
	Объект.Серии.Очистить();
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
			
		Пока Выборка.Следующий() И КоличествоКРаспределению > 0 Цикл
				
			КоличествоПоСтроке =  Мин(Выборка.Количество, КоличествоКРаспределению);
			КоличествоКРаспределению = КоличествоКРаспределению - КоличествоПоСтроке;
			
			НоваяСтрока = Объект.Серии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПрочитатьДопРеквизитыСерии(НоваяСтрока.Серия));

			
			НоваяСтрока.Количество = КоличествоПоСтроке;
			НоваяСтрока.КоличествоУпаковок = КоличествоПоСтроке/КоэффициентУпаковки;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого Строка Из ОстаткиСерий Цикл
			Строка.СвободныйОстаток = Строка.СвободныйОстаток + Строка.Количество/КоэффициентУпаковки;
			Строка.КоличествоУпаковок = 0;
			Строка.Количество = 0;
		КонецЦикла;
		
		Пока Выборка.Следующий() И КоличествоКРаспределению > 0 Цикл
			
			Отбор = Новый Структура("Серия", Выборка.Серия);			
			МассивСтрок = ОстаткиСерий.НайтиСтроки(Отбор);
			Если МассивСтрок.Количество() <> 0 Тогда
				
				КоличествоПоСтроке =  Мин(Выборка.Количество, КоличествоКРаспределению);
				КоличествоКРаспределению = КоличествоКРаспределению - КоличествоПоСтроке;
				
				СтрокаСерий = МассивСтрок[0];	
				СтрокаСерий.Количество = КоличествоПоСтроке;
				СтрокаСерий.КоличествоУпаковок = КоличествоПоСтроке/КоэффициентУпаковки;
								
				СтрокаСерий.СвободныйОстаток = СтрокаСерий.СвободныйОстаток - КоличествоПоСтроке/КоэффициентУпаковки;
				
				НоваяСтрока = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСерий);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ПрочитатьДопРеквизитыСерии(НоваяСтрока.Серия));
							
			Иначе		
				
				КоличествоПоСтроке =  Мин(Выборка.Количество, КоличествоКРаспределению);
				КоличествоКРаспределению = КоличествоКРаспределению - КоличествоПоСтроке;
				
				НоваяСтрока = ОстаткиСерий.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ПрочитатьДопРеквизитыСерии(НоваяСтрока.Серия));
				
				НоваяСтрока.СвободныйОстаток = Выборка.Количество/КоэффициентУпаковки;
				НоваяСтрока.Количество = КоличествоПоСтроке;
				НоваяСтрока.КоличествоУпаковок = КоличествоПоСтроке/КоэффициентУпаковки;
								
				НоваяСтрока.СвободныйОстаток = НоваяСтрока.СвободныйОстаток - КоличествоПоСтроке/КоэффициентУпаковки;
					
				НоваяСтрокаСерии = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НоваяСтрока);
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, ПрочитатьДопРеквизитыСерии(НоваяСтрокаСерии.Серия));
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиПоУпаковке()
	
	ЗаголовокКоличествоВДокументе = НСтр("ru = 'Необходимо зарегистрировать, %ЕдиницаИзмерения%'");
	ЗаголовокКоличествоСерий      = НСтр("ru = 'Зарегистрировано серий, %ЕдиницаИзмерения%'");
	Если ЗначениеЗаполнено(ПараметрЗаголовокКолонкиКоличество) Тогда
		ЗаголовокКолонкиКоличество = ПараметрЗаголовокКолонкиКоличество; 
	Иначе
		ЗаголовокКолонкиКоличество = НСтр("ru = 'Количество'"); 
	КонецЕсли;
	ЗаголовокКолонкиКоличество    = ЗаголовокКолонкиКоличество + ", %ЕдиницаИзмерения%"; 
	ЗаголовокКомандыПечати        = НСтр("ru = 'Этикетки для каждой(ого) %ЕдиницаИзмерения%'");
	
	Если ЗначениеЗаполнено(Упаковка) Тогда
		
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокКомандыПечати        = СтрЗаменить(ЗаголовокКомандыПечати,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокСвободногоОстатка    = СтрЗаменить(ЗаголовокСвободногоОстаткаПоУмолчанию,"%ЕдиницаИзмерения%", Упаковка);
		ЕдиницаИзмеренияСтр           = Упаковка;
	    
	Иначе
		
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКомандыПечати        = СтрЗаменить(ЗаголовокКомандыПечати,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокСвободногоОстатка    = СтрЗаменить(ЗаголовокСвободногоОстаткаПоУмолчанию,"%ЕдиницаИзмерения%", РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЕдиницаИзмеренияСтр 		  = РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление;
		
	КонецЕсли;
	
	Если Не НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
		ЗаголовокКолонкиКоличество = " ";
	КонецЕсли;
	
	Элементы.СерииКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	Элементы.Количество.Заголовок              = ЗаголовокКоличествоВДокументе;
	Элементы.КоличествоСерий.Заголовок         = ЗаголовокКоличествоСерий;
	Элементы.ПечатьКаждойШт.Заголовок		     = ЗаголовокКомандыПечати;

	Элементы.ОстаткиСерийСвободныйОстаток.Заголовок   = ЗаголовокСвободногоОстатка;
	Элементы.ОстаткиСерийКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	
КонецПроцедуры

&НаСервере
Процедура УпаковкаПриИзмененииСервер()
	
	КоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Упаковка, ЗначенияПолейСвязи.Номенклатура);
	
	Для Каждого ТекСтр Из Объект.Серии Цикл
		ТекСтр.КоличествоУпаковок = ТекСтр.Количество / КоэффициентУпаковки;
	КонецЦикла;
	
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
	
	Количество = КоличествоВДокументе / КоэффициентУпаковки;
	
	УстановитьЗаголовкиПоУпаковке();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГоденДоПоДатеПроизводства()
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		
		ГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ТекущиеДанные.ДатаПроизводства,
																		РеквизитыНоменклатуры.СрокГодности,
																		РеквизитыНоменклатуры.ЕдиницаИзмеренияСрокаГодности);
		
		Если ЗначениеЗаполнено(ГоденДо)
			И (Не ЗначениеЗаполнено(ТекущиеДанные.ГоденДо)
				Или ТекущиеДанные.ГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ТекущаяДатаПроизводства,
																		РеквизитыНоменклатуры.СрокГодности,
																		РеквизитыНоменклатуры.ЕдиницаИзмеренияСрокаГодности)) Тогда
			
			ТекущиеДанные.ГоденДо = ГоденДо;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущаяДатаПроизводства = ТекущиеДанные.ДатаПроизводства;
	
КонецПроцедуры

&НаСервере
Функция НазначениеПоЗначениямПолейСвязи()
	
	Если ПараметрыУказанияСерий.ИмяПоляСкладОтправитель <> Неопределено
		И ПараметрыУказанияСерий.ИмяПоляСкладПолучатель <> Неопределено Тогда
		Возврат ЗначенияПолейСвязи.НазначениеОтправителя;
	ИначеЕсли ЗначенияПолейСвязи.Свойство("Назначение") Тогда
		Возврат ЗначенияПолейСвязи.Назначение;
	Иначе
		Возврат Справочники.Назначения.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Локализация

&НаСервере
Процедура ОбработатьШтрихкодыСерверЛокализация(ИдентификаторТекущейСтроки, КэшированныеЗначения, ШтрихкодыПоТипам, ЕстьОшибки)
	
	//++ Локализация
	Если ШтрихкодыПоТипам.КиЗ.Количество() > 0 Тогда
		
		Для Каждого СтрМас Из ШтрихкодыПоТипам.КиЗ Цикл
			
			ПолучитьИнформациюПоКиЗДобавитьСерию(СтрМас.ШтрихКод, ИдентификаторТекущейСтроки, КэшированныеЗначения);
			Модифицированность = Истина;
			
		КонецЦикла;
		
	КонецЕсли;
	//-- Локализация
	Возврат;

КонецПроцедуры

&НаСервере
Процедура ДобавитьТекстЗапросаНайденныхНомеровСерий(ТекстыЗапроса)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
	|	Штрихкоды.Номер,
	|	ЕСТЬNULL(СерииНоменклатуры.ГоденДо, Штрихкоды.ГоденДо) КАК ГоденДо,
	|	ЕСТЬNULL(СерииНоменклатуры.ДатаПроизводства, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПроизводства,
	|	Штрихкоды.Количество
	|ПОМЕСТИТЬ НайденныеНомераДляЗапроса
	|ИЗ
	|	Штрихкоды КАК Штрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО Штрихкоды.Номер = СерииНоменклатуры.Номер
	|			И (Штрихкоды.ГоденДо = СерииНоменклатуры.ГоденДо
	|				ИЛИ Штрихкоды.ГоденДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|			И (СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры)";
	
	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
	|	Штрихкоды.Номер,
	|	ЕСТЬNULL(СерииНоменклатуры.ГоденДо, Штрихкоды.ГоденДо) КАК ГоденДо,
	|	ЕСТЬNULL(СерииНоменклатуры.ДатаПроизводства, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПроизводства,
	|	ЕСТЬNULL(СерииНоменклатуры.ПроизводительЕГАИС, ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)) КАК ПроизводительЕГАИС,
	|	ЕСТЬNULL(СерииНоменклатуры.Справка2ЕГАИС, ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)) КАК Справка2ЕГАИС,
	|	ЕСТЬNULL(СерииНоменклатуры.ИдентификаторПартииВЕТИС, НЕОПРЕДЕЛЕНО) КАК ИдентификаторПартииВЕТИС,
	|	ЕСТЬNULL(СерииНоменклатуры.ПроизводительВЕТИС, ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка)) КАК ПроизводительВЕТИС,
	|	ЕСТЬNULL(СерииНоменклатуры.ЗаписьСкладскогоЖурналаВЕТИС, ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)) КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ЕСТЬNULL(СерииНоменклатуры.МаксимальнаяРозничнаяЦенаМОТП, НЕОПРЕДЕЛЕНО) КАК МаксимальнаяРозничнаяЦенаМОТП,
	|	Штрихкоды.Количество
	|ПОМЕСТИТЬ НайденныеНомераДляЗапроса
	|ИЗ
	|	Штрихкоды КАК Штрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО Штрихкоды.Номер = СерииНоменклатуры.Номер
	|			И (Штрихкоды.ГоденДо = СерииНоменклатуры.ГоденДо
	|				ИЛИ Штрихкоды.ГоденДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|			И (СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры)";
	//-- Локализация
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТекстЗапросаКоличестваНайденныхНомеровСерий(ТекстыЗапроса)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.Серия
	|	КОНЕЦ КАК Серия,
	|	НайденныеНомераДляЗапроса.Номер,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.ГоденДо
	|	КОНЕЦ КАК ГоденДо,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.ДатаПроизводства
	|	КОНЕЦ КАК ДатаПроизводства,
	|	НайденныеНомераДляЗапроса.Количество
	|ИЗ
	|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоСерийПоНомеру КАК КоличествоСерийПоНомеру
	|		ПО НайденныеНомераДляЗапроса.Номер = КоличествоСерийПоНомеру.Номер";
	
	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.Серия
	|	КОНЕЦ КАК Серия,
	|	НайденныеНомераДляЗапроса.Номер,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.ГоденДо
	|	КОНЕЦ КАК ГоденДо,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.ДатаПроизводства
	|	КОНЕЦ КАК ДатаПроизводства,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.ПроизводительЕГАИС
	|	КОНЕЦ КАК ПроизводительЕГАИС,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.Справка2ЕГАИС
	|	КОНЕЦ КАК Справка2ЕГАИС,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НайденныеНомераДляЗапроса.ИдентификаторПартииВЕТИС
	|	КОНЕЦ КАК ИдентификаторПартииВЕТИС,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.ПроизводительВЕТИС
	|	КОНЕЦ КАК ПроизводительВЕТИС,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.ЗаписьСкладскогоЖурналаВЕТИС
	|	КОНЕЦ КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НайденныеНомераДляЗапроса.МаксимальнаяРозничнаяЦенаМОТП
	|	КОНЕЦ КАК МаксимальнаяРозничнаяЦенаМОТП,
	|	НайденныеНомераДляЗапроса.Количество
	|ИЗ
	|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоСерийПоНомеру КАК КоличествоСерийПоНомеру
	|		ПО НайденныеНомераДляЗапроса.Номер = КоличествоСерийПоНомеру.Номер";
	//-- Локализация
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПараметыПоискаСканируемойСерии(ПараметрыПоиска, ДанныеСерии, ИсключаемыеСвойства)
	
	ПараметрыПоиска.Вставить("ДатаПроизводства");
	
	//++ Локализация
	ИдентификаторПартииВЕТИС		= ?(ЗначениеЗаполнено(ДанныеСерии.ИдентификаторПартииВЕТИС),
										ДанныеСерии.ИдентификаторПартииВЕТИС,
										Метаданные.ОпределяемыеТипы.СтрокаВЕТИС.Тип.ПривестиЗначение());
	МаксимальнаяРозничнаяЦенаМОТП	= ?(ЗначениеЗаполнено(ДанныеСерии.МаксимальнаяРозничнаяЦенаМОТП),
										ДанныеСерии.МаксимальнаяРозничнаяЦенаМОТП,
										Метаданные.ОпределяемыеТипы.ДенежнаяСуммаНеотрицательная.Тип.ПривестиЗначение());
	
	ИменаИсключаемыхСвойств = Новый Массив;
	
	Если Не ЗначениеЗаполнено(ИдентификаторПартииВЕТИС) Тогда
		ИменаИсключаемыхСвойств.Добавить("ИдентификаторПартииВЕТИС");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(МаксимальнаяРозничнаяЦенаМОТП) Тогда
		ИменаИсключаемыхСвойств.Добавить("МаксимальнаяРозничнаяЦенаМОТП");
	КонецЕсли;
	
	Если ИменаИсключаемыхСвойств.Количество() > 0 Тогда
		ИсключаемыеСвойства = СтрСоединить(ИменаИсключаемыхСвойств, ",")
	КонецЕсли;
	
	ПараметрыПоиска.Вставить("ПроизводительЕГАИС");
	ПараметрыПоиска.Вставить("Справка2ЕГАИС");
	ПараметрыПоиска.Вставить("ИдентификаторПартииВЕТИС", ИдентификаторПартииВЕТИС);
	ПараметрыПоиска.Вставить("ПроизводительВЕТИС");
	ПараметрыПоиска.Вставить("ЗаписьСкладскогоЖурналаВЕТИС");
	ПараметрыПоиска.Вставить("МаксимальнаяРозничнаяЦенаМОТП", МаксимальнаяРозничнаяЦенаМОТП);
	//-- Локализация
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНомерКИЗГИСМПриИзменении(Элемент)

	//++ Локализация
	ОчиститьСообщения(); 
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	ТекущиеДанные.Серия = Неопределено;
	ПолучитьИнформациюПоКиЗДобавитьСерию(ТекущиеДанные.НомерКИЗГИСМ, ТекущиеДанные.ПолучитьИдентификатор(), КэшированныеЗначения);
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

&НаСервере
Процедура ПолучитьИнформациюПоКиЗДобавитьСерию(НомерКиЗ, ИдентификаторТекущейСтроки, КэшированныеЗначения)
	
	Если Не ИнтеграцияГИСМВызовСервера.ЭтоНомерКиЗ(НомерКиЗ) Тогда
		ТекстСообщения = НСтр("ru = 'Введенные данные не являются номером %Парам1%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Парам1%", "КиЗ");
		НомерКиЗ = "";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ИнформацияПоКиЗ = ИнтеграцияГИСМ.ИнформацияОКиЗПоНомеру(НомерКиЗ);
	ИнформацияПоКиЗ.НомерКиЗ = НомерКиЗ;
	
	ПараметрыОбработки = ШтрихкодированиеНоменклатурыСервер.ПараметрыОбработкиСчитанныхRFID();
	ЗаполнитьЗначенияСвойств(ПараметрыОбработки, ЭтотОбъект);
	ОбработаннаяСтрока = ИнтеграцияГИСМУТ.ДобавитьСериюПоИнформацииПоКиЗ(ИнформацияПоКиЗ, ПараметрыОбработки, Объект.Серии, ИдентификаторТекущейСтроки);
	
	Если ЗначениеЗаполнено(ОбработаннаяСтрока.Серия) Тогда
		ЗаполнитьЗначенияСвойств(ОбработаннаяСтрока, ПрочитатьДопРеквизитыСерии(ОбработаннаяСтрока.Серия));
	КонецЕсли;
	
	Если ИдентификаторТекущейСтроки <> Неопределено Тогда
	
		ТекущиеДанные = Объект.Серии.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
		Если Не НастройкиИспользованияСерий.ИспользоватьКоличествоСерии
			И ЗначениеЗаполнено(ТекущиеДанные.Номер)
			Или ЗначениеЗаполнено(ТекущиеДанные.НомерКИЗГИСМ)
			Или ЗначениеЗаполнено(ТекущиеДанные.ГоденДо) Тогда
			Если ТекущиеДанные.КоличествоУпаковок = 0
				И Не ТолькоРедактированиеКоличества Тогда
				ТекущиеДанные.КоличествоУпаковок = 1;
				
				СтруктураРеквизитов = Новый Структура("Упаковка,Номенклатура", Упаковка, ЗначенияПолейСвязи.Номенклатура);
				СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", СтруктураРеквизитов);
				
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти
