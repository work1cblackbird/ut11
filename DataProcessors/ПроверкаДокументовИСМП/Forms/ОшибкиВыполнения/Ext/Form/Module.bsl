
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолноеИмяОбъекта = РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	
	Параметры.Свойство("РезультатПроверки", РезультатПроверки);
	Параметры.Свойство("Документ",          Документ);
	
	Если РезультатПроверки = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРезультатыПроверок(РезультатПроверки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗаполнитьРезультатыПроверок"
		И Источник = Документ Тогда
		ЗаполнитьРезультатыПроверок(Параметр);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияПроверкаФорматаЭлектронногоДокументаВНастройкахЭДООбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = ОбщегоНазначенияБЭДКлиент.НовыеПараметрыОткрытияФормы();
	ПараметрыОткрытия.Вставить("Источник", Контрагент);
	НастройкиЭДОКлиент.ОткрытьФормуНастроекЭДО(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНаличиеОшибокВКодахМаркировкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьНаличиеОшибокВКодахМаркировки();
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияФоноваяПроверкаЭДНажатие(Элемент)
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияПанелиАдминистрирования", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияИСМП.Форма.НастройкиИСМП",, ЭтотОбъект,,,, ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьПовторнуюПроверку(Команда)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма",    ВладелецФормы);
	ПараметрыОповещения.Вставить("Документ", Документ);
	ПараметрыОповещения.Вставить("ЭтоФоноваяПроверкаДокумента", Ложь);
	ПараметрыОповещения.Вставить("ДополнитьРезультатДаннымиКомандыФормы", Истина);
	ПараметрыОповещения.Вставить("ЗапуститьПовторнуюПроверку", Истина);
	ПараметрыОповещения.Вставить("ФормаОшибок", ЭтотОбъект);
	
	СоответствиеТребованиямГИСМТКлиент.ПроверитьДокументНаСоответствиеТребованиямГИСМТ(ПараметрыОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПроверку(Команда)
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Документ",            РезультатПроверки.Документ);
	ПараметрыИзменения.Вставить("ПроверкаОтключена",   Не РезультатПроверки.ПроверкаОтключена);
	ПараметрыИзменения.Вставить("ИдентификаторЗаписи", РезультатПроверки.ИдентификаторЗаписи);
	
	ДанныеДляИзменения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыИзменения);
	
	СоответствиеТребованиямГИСМТВызовСервера.ОтключитьПроверку(ДанныеДляИзменения);
	
	РезультатПроверки.ПроверкаОтключена = Не РезультатПроверки.ПроверкаОтключена;
	
	Элементы.ФормаОтключитьПроверку.Заголовок = СоответствиеТребованиямГИСМТКлиентСервер.ЗаголовокКомандыПроверкаОтключена(
		РезультатПроверки.ПроверкаОтключена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРезультатыПроверок(РезультатПроверки)
	
	Статус   = РезультатПроверки.Статус;
	
	ВозможенЭДО = Метаданные.ОпределяемыеТипы.ОснованияЭлектронныхДокументовЭДО.Тип.СодержитТип(ТипЗнч(Документ));
	
	Если ВозможенЭДО Тогда
		СтатусДокументооборота     = ОбменСКонтрагентами.СтатусДокументооборота(Документ);
		СтатусЭДО = СтатусДокументооборота.Статус;
		ЭлектронныйДокумент = СтатусДокументооборота.ЭлектронныйДокумент;
	КонецЕсли;
	
	РеквизитыДокумента = СоответствиеТребованиямГИСМТ.РеквизитыДокумента(Документ);
	Организация = РеквизитыДокумента.Организация;
	Контрагент  = РеквизитыДокумента.Контрагент;
	
	СформироватьЗаголовкиФормы();
	
	РезультатыПроверок         = Новый Соответствие;
	ПроверкиСОшибкамиПроцесса  = Новый Массив;
	
	Если РезультатПроверки.Свойство("Результаты") И ТипЗнч(РезультатПроверки.Результаты) = Тип("ХранилищеЗначения") Тогда
		
		Результаты = РезультатПроверки.Результаты.Получить();
		
		РезультатыПроверок         = Результаты.РезультатыПроверок;
		ПроверкиСОшибкамиПроцесса  = Результаты.ПроверкиСОшибкамиПроцесса;
		
	КонецЕсли;
	
	ВидимостьИДоступностьКомандыПовторнойПроверки(РезультатПроверки, Результаты);
	ВидимостьЗаголовкаПоСтатусу();
	НастроитьВидимостьФоновойПроверкиЭД(ЭтотОбъект);
	
	ИдентификаторыПроверок = СоответствиеТребованиямГИСМТ.ИдентификаторыПроверок();
	
	ИдентификаторыПроверокСОшибками = Новый Соответствие;
	Для Каждого ИдентификаторПроверки Из ПроверкиСОшибкамиПроцесса Цикл
		
		ИдентификаторыПроверокСОшибками[ИдентификаторПроверки] = Истина;
		
		Если ИдентификаторПроверки = ИдентификаторыПроверок.НаличиеОшибокВКодахМаркировки Тогда
			
			ОшибкиВКодахМаркировки.Загрузить(
				РезультатыПроверок[ИдентификаторПроверки]);
		
		ИначеЕсли СтрНайти(ИдентификаторПроверки, "КодОшибкиГИСМТ") > 0 Тогда
			
			ОбщиеОшибки.Добавить(
				РезультатыПроверок[ИдентификаторПроверки]);
			ИдентификаторыПроверокСОшибками.Вставить(ИдентификаторыПроверок.ПрочаяПроверкаГИСМТ, Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ИдентификаторПроверкиКлючЗначение Из ИдентификаторыПроверок Цикл
		ИдентификаторПроверки = ИдентификаторПроверкиКлючЗначение.Значение;
		Если ИдентификаторыПроверокСОшибками[ИдентификаторПроверки] = Неопределено Тогда
			СпрятатьГруппуПроверкиПоИдентификатору(ИдентификаторПроверки);
		Иначе
			СформироватьПредставлениеОшибки(ИдентификаторПроверки, РезультатыПроверок);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВидимостьИДоступностьКомандыПовторнойПроверки(РезультатПроверки, Результаты)
	
	Если РезультатПроверки.Статус = Перечисления.СтатусыОбработкиДокументовИСМП.ЗавершеноСОшибкойТаймаута Тогда
		Элементы.ВыполнитьПовторнуюПроверку.Видимость = Ложь;
		Возврат;
	ИначеЕсли РезультатПроверки.СтатусОтправки = Перечисления.СтатусОтправкиГИСМТ.ДоставленВГИСМТ Тогда
		
		НадписьПовторнаяПроверкаНевозможна = Новый Массив;
		
		НедоступныеОшибки = СоответствиеТребованиямГИСМТ.ОшибкиНедоступныеДляПовторнойОтправкиДокумента();
		Для Каждого КодОшибки Из Результаты.КодыОшибок Цикл
			ОписаниеОшибки = НедоступныеОшибки[КодОшибки];
			Если ОписаниеОшибки <> Неопределено Тогда
				НадписьПовторнаяПроверкаНевозможна.Добавить(Символы.ПС);
				СтрокаСообщение = СтрШаблон(
				НСтр("ru = '- для кода ошибки %1 (%2) недоступна повторная проверка'"),
					КодОшибки, ОписаниеОшибки);
				НадписьПовторнаяПроверкаНевозможна.Добавить(СтрокаСообщение);
			КонецЕсли;
		КонецЦикла;
		
		Если НадписьПовторнаяПроверкаНевозможна.Количество() = 0 Тогда
		
			ОсталосьСекунд = Результаты.ДатаПоследнейОшибки - ТекущаяДатаСеанса() + 4*60*60;
			
			Если ОсталосьСекунд > 0 Тогда
				
				// Время
				Время = Цел(ОсталосьСекунд / 3600);
				
				Если Время > 0 Тогда
					ТипВремени = НСтр("ru = ';%1 час;;%1 часа;%1 часов;%1 часа'");
				Иначе
					Время = Цел(ОсталосьСекунд/60);
					ТипВремени = НСтр("ru = ';%1 минута;;%1 минуты;%1 минут;%1 минуты'");
				КонецЕсли;
				
				ПредставлениеВремени = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(ТипВремени, Время);
				
				НадписьПовторнаяПроверкаНевозможна.Добавить(Символы.ПС);
				СтрокаСообщение = СтрШаблон(
				НСтр("ru = '- повторная проверка возможна через %1'"),
					ПредставлениеВремени);
					
				НадписьПовторнаяПроверкаНевозможна.Добавить(СтрокаСообщение);
			КонецЕсли;
		
		КонецЕсли;
		
		Если НадписьПовторнаяПроверкаНевозможна.Количество() > 0 Тогда
			НадписьПовторнаяПроверкаНевозможна.Вставить(0,НСтр("ru = 'Отправить УПД на повторную проверку невозможно по причине:'"));
			Элементы.ВыполнитьПовторнуюПроверкуРасширеннаяПодсказка.Заголовок = Новый ФорматированнаяСтрока(НадписьПовторнаяПроверкаНевозможна);
			Элементы.ВыполнитьПовторнуюПроверку.Доступность = Ложь;
		КонецЕсли;
		
		ЗаголовокКоманды = НСтр("ru = 'Отправить УПД на повторную обработку в ГИС МТ'");
		
	ИначеЕсли РезультатПроверки.ВыполненаПредварительнаяПроверка Тогда
		ЗаголовокКоманды = НСтр("ru = 'Отправить УПД на повторную предварительную проверку в ГИС МТ'");
	Иначе
		ЗаголовокКоманды = НСтр("ru = 'Выполнить повторную проверку в ГИС МТ'");
	КонецЕсли;
	
	Элементы.ВыполнитьПовторнуюПроверку.Заголовок = Новый ФорматированнаяСтрока(ЗаголовокКоманды);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаголовкиФормы()
	
	Если ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		ПроверенныйДокументСсылка = ЭлектронныйДокумент;
		ПроверенныйДокументПредставление = Лев(РезультатПроверки.Идентификатор, 57) + "...";
	Иначе
		ПроверенныйДокументСсылка = Документ;
		ПроверенныйДокументПредставление = Строка(Документ);
	КонецЕсли;
	

	Если Статус = Перечисления.СтатусыОбработкиДокументовИСМП.ЗавершеноСОшибкой
		Или Статус = Перечисления.СтатусыОбработкиДокументовИСМП.ЗавершеноСОшибкойТаймаута Тогда
		
		Заголовок = НСтр("ru = 'Требования ГИС МТ не выполнены'");
		
		НадписьДекорацияЗавершеноСОшибкой = Новый Массив;
		НадписьДекорацияЗавершеноСОшибкой.Добавить(НСтр("ru = 'При проверке документа'"));
		НадписьДекорацияЗавершеноСОшибкой.Добавить(" ");
		НадписьДекорацияЗавершеноСОшибкой.Добавить(
			
			Новый ФорматированнаяСтрока(
				ПроверенныйДокументПредставление,,,,
				ПолучитьНавигационнуюСсылку(ПроверенныйДокументСсылка)));
		НадписьДекорацияЗавершеноСОшибкой.Добавить(" ");
		НадписьДекорацияЗавершеноСОшибкой.Добавить(НСтр("ru = 'найдены ошибки.'"));
		
		Если ЭтоВходящийЭД Тогда
			
			Если СтатусЭДО = "Получен" Тогда
				НадписьДекорацияЗавершеноСОшибкой.Добавить(Символы.ПС);
				НадписьДекорацияЗавершеноСОшибкой.Добавить(НСтр("ru = 'Документ не может быть утвержден.'"));
			КонецЕсли;
			
		Иначе
			
			Если    СтатусЭДО = "ЭДОНеИспользуется"
				Или СтатусЭДО = "ЭДОНеНастроен"
				Или СтатусЭДО = "НеНачат" Тогда
				НадписьДекорацияЗавершеноСОшибкой.Добавить(Символы.ПС);
				НадписьДекорацияЗавершеноСОшибкой.Добавить(НСтр("ru = 'Документ не может быть отправлен.'"));
			КонецЕсли;
			
		КонецЕсли;
		
		Элементы.ДекорацияЗавершеноСОшибкой.Заголовок = Новый ФорматированнаяСтрока(НадписьДекорацияЗавершеноСОшибкой);
		
	ИначеЕсли Статус = Перечисления.СтатусыОбработкиДокументовИСМП.ЗавершеноСПредупреждением Тогда
		
		Заголовок = НСтр("ru = 'Рекомендации ГИС МТ'");
		
		НадписьДекорацияЗавершеноСПредупреждением = Новый Массив;
		
		Если ЭтоВходящийЭД Тогда
			
			Если СтатусЭДО = "Получен" Тогда
				НадписьДекорацияЗавершеноСОшибкой.Добавить(Символы.ПС);
				НадписьДекорацияЗавершеноСОшибкой.Добавить(НСтр("ru = 'Перед утверждением электронного документа'"));
			Иначе
				НадписьДекорацияЗавершеноСПредупреждением.Добавить(НСтр("ru = 'По документу'"));
			КонецЕсли;
			
		Иначе
			
			Если    СтатусЭДО = "ЭДОНеИспользуется"
				Или СтатусЭДО = "ЭДОНеНастроен"
				Или СтатусЭДО = "НеНачат" Тогда
				НадписьДекорацияЗавершеноСПредупреждением.Добавить(НСтр("ru = 'Перед отправкой документа'"));
			Иначе
				НадписьДекорацияЗавершеноСПредупреждением.Добавить(НСтр("ru = 'По документу'"));
			КонецЕсли;
			
		КонецЕсли;
		
		НадписьДекорацияЗавершеноСПредупреждением.Добавить(" ");
		НадписьДекорацияЗавершеноСПредупреждением.Добавить(
			Новый ФорматированнаяСтрока(
				Строка(Документ),,,,
				ПолучитьНавигационнуюСсылку(Документ)));
		НадписьДекорацияЗавершеноСПредупреждением.Добавить(" ");
		НадписьДекорацияЗавершеноСПредупреждением.Добавить(НСтр("ru = 'рекомендуется'"));
		НадписьДекорацияЗавершеноСПредупреждением.Добавить(Символы.ПС);
		НадписьДекорацияЗавершеноСПредупреждением.Добавить(НСтр("ru = 'выполнить действия:'"));
		Элементы.ДекорацияЗавершеноСПредупреждением.Заголовок = Новый ФорматированнаяСтрока(НадписьДекорацияЗавершеноСПредупреждением);
		
	КонецЕсли;
	
	Элементы.ФормаОтключитьПроверку.Заголовок = СоответствиеТребованиямГИСМТКлиентСервер.ЗаголовокКомандыПроверкаОтключена(
		РезультатПроверки.ПроверкаОтключена);;
	
КонецПроцедуры

&НаСервере
Процедура ВидимостьЗаголовкаПоСтатусу()
	
	Если Статус = Перечисления.СтатусыОбработкиДокументовИСМП.ЗавершеноСОшибкой
		Или Статус = Перечисления.СтатусыОбработкиДокументовИСМП.ЗавершеноСОшибкойТаймаута Тогда
		
		Элементы.ГруппаЗаголовокЗавершеноСОшибкой.Видимость         = Истина;
		Элементы.ГруппаЗаголовокЗавершеноСПредупреждением.Видимость = Ложь;
		
	ИначеЕсли Статус = Перечисления.СтатусыОбработкиДокументовИСМП.ЗавершеноСПредупреждением Тогда
		
		Элементы.ГруппаЗаголовокЗавершеноСОшибкой.Видимость         = Ложь;
		Элементы.ГруппаЗаголовокЗавершеноСПредупреждением.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьВидимостьФоновойПроверкиЭД(Форма)
	Форма.Элементы.ГруппаФоноваяПроверкаЭД.Видимость = Не ФоноваяПроверкаДокументовВключена();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФоноваяПроверкаДокументовВключена()
	Возврат ИнтеграцияИСМПКлиентСерверПовтИсп.ФоноваяПроверкаДокументовГИСМТРазрешена();
КонецФункции

&НаСервере
Процедура СформироватьПредставлениеОшибки(ИдентификаторПроверки, РезультатыПроверок)
	
	НадписьДляДекорацииСОшибкой = Новый Массив;
	
	ЗначениеПроверки = РезультатыПроверок[ИдентификаторПроверки];
	
	Если ИдентификаторПроверки = ИдентификаторыПроверок.НаличиеРегистрацииОрганизацииВГИСМТ Тогда
		
		Если ЗначениеПроверки = Неопределено Тогда
			НадписьДляДекорацииСОшибкой.Добавить(НСтр("ru = 'Отсутствует регистрация организации'"));
			НадписьДляДекорацииСОшибкой.Добавить(" ");
			НадписьДляДекорацииСОшибкой.Добавить(
				Новый ФорматированнаяСтрока(
					Строка(Организация),,,,
					ПолучитьНавигационнуюСсылку(Организация)));
			НадписьДляДекорацииСОшибкой.Добавить(" ");
			НадписьДляДекорацииСОшибкой.Добавить(НСтр("ru = 'в ГИС МТ'"));
		Иначе
			НадписьДляДекорацииСОшибкой.Добавить(ЗначениеПроверки);
		КонецЕсли;
	ИначеЕсли ИдентификаторПроверки = ИдентификаторыПроверок.НаличиеРегистрацииКонтрагентаВГИСМТ Тогда
		Если ЗначениеПроверки = Неопределено Тогда
			НадписьДляДекорацииСОшибкой.Добавить(НСтр("ru = 'Отсутствует регистрация контрагента'"));
			НадписьДляДекорацииСОшибкой.Добавить(" ");
			НадписьДляДекорацииСОшибкой.Добавить(
				Новый ФорматированнаяСтрока(
					Строка(Контрагент),,,,
					ПолучитьНавигационнуюСсылку(Контрагент)));
			НадписьДляДекорацииСОшибкой.Добавить(" ");
			НадписьДляДекорацииСОшибкой.Добавить(НСтр("ru = 'в ГИС МТ'"));
		Иначе
			НадписьДляДекорацииСОшибкой.Добавить(ЗначениеПроверки);	
		КонецЕсли;
		
	ИначеЕсли ИдентификаторПроверки = ИдентификаторыПроверок.НаличиеИдентификатораЭДОЛайтУОрганизации Тогда
		
		НадписьДляДекорацииСОшибкой.Добавить(НСтр("ru = 'В личном кабинете ГИС МТ у организации'"));
		НадписьДляДекорацииСОшибкой.Добавить(" ");
		НадписьДляДекорацииСОшибкой.Добавить(
			Новый ФорматированнаяСтрока(
				Строка(Организация),,,,
				ПолучитьНавигационнуюСсылку(Организация)));
		НадписьДляДекорацииСОшибкой.Добавить(" ");
		НадписьДляДекорацииСОшибкой.Добавить(НСтр("ru = 'отсутствует идентификатор ЭДО Лайт'"));
		
	ИначеЕсли ИдентификаторПроверки = ИдентификаторыПроверок.НаличиеИдентификатораЭДОЛАйтУКонтрагента Тогда
		
		НадписьДляДекорацииСОшибкой.Добавить(НСтр("ru = 'В личном кабинете ГИС МТ у контрагента'"));
		НадписьДляДекорацииСОшибкой.Добавить(" ");
		НадписьДляДекорацииСОшибкой.Добавить(
			Новый ФорматированнаяСтрока(
				Строка(Контрагент),,,,
				ПолучитьНавигационнуюСсылку(Контрагент)));
		НадписьДляДекорацииСОшибкой.Добавить(" ");
		НадписьДляДекорацииСОшибкой.Добавить(НСтр("ru = 'отсутствует идентификатор ЭДО Лайт'"));
		
	ИначеЕсли ИдентификаторПроверки = ИдентификаторыПроверок.НаличиеОшибокВКодахМаркировки Тогда
		
		КоличествоОшибокКМ = ОшибкиВКодахМаркировки.Количество();
		
		НадписьДляДекорацииСОшибкой.Добавить(НСтр("ru = 'Коды маркировки с'"));
		НадписьДляДекорацииСОшибкой.Добавить(" ");
		НадписьДляДекорацииСОшибкой.Добавить(
			Новый ФорматированнаяСтрока(
				СтрШаблон(НСтр("ru = 'ошибками (%1)'"), КоличествоОшибокКМ),,,,
				ИдентификаторПроверки));
	
	ИначеЕсли ИдентификаторПроверки = ИдентификаторыПроверок.ПрочаяПроверкаГИСМТ Тогда
		
		НадписьДляДекорацииСОшибкой = СформироватьПредставлениеПрочаяПроверкаГИСМТ();
		
	ИначеЕсли ИдентификаторПроверки = ИдентификаторыПроверок.ПроверкаФорматаЭлектронногоДокументаВНастройкахЭДО Тогда
		
		НадписьДляДекорацииСОшибкой =
			Новый ФорматированнаяСтрока(
				СтрШаблон(НСтр("ru = 'Поменяйте формат электронного документа на один из доступных: %1'"), РезультатыПроверок[ИдентификаторПроверки])); 
		Элементы.ДекорацияПроверкаФорматаЭлектронногоДокументаВНастройкахЭДО.РасширеннаяПодсказка.Заголовок = НадписьДляДекорацииСОшибкой;
		
		Возврат;
		
	Иначе
		
		НадписьДляДекорацииСОшибкой = РезультатыПроверок[ИдентификаторПроверки];
		
	КонецЕсли;
	
	Если НадписьДляДекорацииСОшибкой = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы[СтрШаблон("Декорация%1", ИдентификаторПроверки)].Заголовок = Новый ФорматированнаяСтрока(НадписьДляДекорацииСОшибкой);
	
КонецПроцедуры

&НаСервере
Функция СформироватьПредставлениеПрочаяПроверкаГИСМТ()
	
	НадписьДляДекорацииСОшибкой = Новый Массив;
	НадписьДляДекорацииСОшибкой.Добавить("Во время проверки в ГИС МТ найдены ошибки:");
	
	Для Каждого ЭлементСписка Из ОбщиеОшибки Цикл
		НадписьДляДекорацииСОшибкой.Добавить(Символы.ПС);
		НадписьДляДекорацииСОшибкой.Добавить("-");
		НадписьДляДекорацииСОшибкой.Добавить(" ");
		НадписьДляДекорацииСОшибкой.Добавить(Строка(ЭлементСписка.Значение));
	КонецЦикла;
	
	Возврат НадписьДляДекорацииСОшибкой;
	
КонецФункции

&НаСервере
Процедура СпрятатьГруппуПроверкиПоИдентификатору(ИдентификаторПроверки)
	ГруппаПроверки = Элементы.Найти(СтрШаблон("ГруппаПроверки%1", ИдентификаторПроверки));
	Если ГруппаПроверки <> Неопределено Тогда
		ГруппаПроверки.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНаличиеОшибокВКодахМаркировки()
	
	ОшибкиКМ = Новый Массив;
	Для Каждого Строка Из ОшибкиВКодахМаркировки Цикл
		ОшибкиКМ.Добавить(
			Новый Структура("Штрихкод, Описание",
				Строка.Штрихкод, Строка.Описание));
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОшибкиКМ", ОшибкиКМ);
	ПараметрыФормы.Вставить("Документ", Документ);
	
	ОткрытьФорму(
		СтрШаблон("%1.Форма.НаличиеОшибокВКодахМаркировки", ПолноеИмяОбъекта),
		ПараметрыФормы,
		ЭтотОбъект,
		,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПанелиАдминистрирования(Результат, ДополнительныеПараметры) Экспорт
	НастроитьВидимостьФоновойПроверкиЭД(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти
