#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  См. Справочники.Назначения.МакетФормыВыбораНазначений
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	
	// Все назначения для поля Назначение в шапке.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ВсеНазначения", Ложь, "Объект.Назначение");
	
	Возврат МакетФормы;
	
КонецФункции

// Параметры:
//  Параметры - Структура - состоит из:
//   *НастройкиКомпоновкиДанных - НастройкиКомпоновкиДанных
//   *СхемаКомпоновкиДанных - СхемаКомпоновкиДанных
//  АдресРезультата - Строка
//  АдресДополнительногоРезультата - Строка
Процедура ОбновитьЗапланированныеЗакупки(Знач Параметры, Знач АдресРезультата, Знач АдресДополнительногоРезультата = "") Экспорт
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("Обработка.ФормированиеЗаказовПоставщикуПоПлану.Форма.Команда.Далее");
	
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	СхемаКомпоновкиДанных = Параметры.СхемаКомпоновкиДанных;
	
	МакетКомпоновкиДанных = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СхемаКомпоновкиДанных, Параметры.НастройкиКомпоновкиДанных, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений") , Ложь, );
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновкиДанных,,, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	ТаблицаРезультата = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют") Тогда
		
		Если ТаблицаРезультата.Колонки.Найти("Валюта") = Неопределено Тогда
			ТаблицаРезультата.Колонки.Добавить("Валюта", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
		КонецЕсли; 
		ТаблицаРезультата.ЗаполнитьЗначения(ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета(), "Валюта");
	
	КонецЕсли;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, ТаблицаРезультата.Количество());
	
	ПоместитьВоВременноеХранилище(ТаблицаРезультата, АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли