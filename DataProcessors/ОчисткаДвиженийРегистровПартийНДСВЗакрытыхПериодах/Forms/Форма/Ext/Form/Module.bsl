
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПроверитьДатыЗапретаИзменения(); // определяет первый разрешенный для изменения период
	ПервыйНезакрытыйПериод = ДатаЗапрета;
	
	ПодсчетКоличестваЗаписей();
	ОбновитьСтатистику();
	
	Элементы.НадписьПредупреждение.Заголовок =
		НСтр("ru = 'Перед выполнением операции рекомендуется сделать резервную копию базы!
			|Для восстановления удаленных движений потребуется перезакрытие всех предыдущих периодов
			|или перенос движений из резервной копии базы.'");
	
КонецПроцедуры

&НаКлиенте
Процедура ПервыйНезакрытыйПериодПриИзменении(Элемент)
	
	ПервыйНезакрытыйПериод = НачалоМесяца(ПервыйНезакрытыйПериод);
	
	ОбновитьСтатистику();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьДвижения(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьДвиженияНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьДатыЗапретаИзменения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПериодПроверки = Дата(1,1,1);
	
	// Проверим настройку дат запрета изменения данных.
	РасшифровкаЗапрета = Новый ТаблицаЗначений;
	РасшифровкаЗапрета.Колонки.Добавить("Организация", 			Новый ОписаниеТипов("СправочникСсылка.Организации"));
	РасшифровкаЗапрета.Колонки.Добавить("РегламентныеОперации", Новый ОписаниеТипов("Дата"));
	РасшифровкаЗапрета.Колонки.Добавить("БухгалтерскийУчет", 	Новый ОписаниеТипов("Дата"));
	РасшифровкаЗапрета.Колонки.Добавить("МеждународныйУчет", 	Новый ОписаниеТипов("Дата"));
	
	РазделыДляПроверки = Новый Массив;
	РазделыДляПроверки.Добавить("РегламентныеОперации");
	РазделыДляПроверки.Добавить("БухгалтерскийУчет");
	
	ТаблицаДанных = ДатыЗапретаИзменения.ШаблонДанныхДляПроверки();
	
	Для Каждого ТекущаяОрганизация Из Справочники.Организации.ДоступныеОрганизации() Цикл
		
		НоваяСтрока = РасшифровкаЗапрета.Добавить();
		НоваяСтрока.Организация = ТекущаяОрганизация;
		
		Для Каждого ТекущийРаздел Из РазделыДляПроверки Цикл
			
			НоваяСтрока = ТаблицаДанных.Добавить();
			НоваяСтрока.Дата   = ПериодПроверки;
			НоваяСтрока.Раздел = ТекущийРаздел;
			НоваяСтрока.Объект = ТекущаяОрганизация;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаДанных.Сортировать("Объект, Раздел");
	
	ОписаниеДанных = Новый Структура("НоваяВерсия, Данные", Ложь, "");
	ОписаниеОшибки = Новый Структура;
	ДатаЗапрета	   = Дата(1,1,1); // первый разрешенный период
	
	ИзмененияЗапрещены = ДатыЗапретаИзменения.НайденЗапретИзмененияДанных(ТаблицаДанных, ОписаниеДанных, ОписаниеОшибки);
	
	Если ИзмененияЗапрещены Тогда
		
		// Получим описание всех установленных дат запрета, в т.ч. меньших даты начала расчета.
		ТаблицаДанных.ЗаполнитьЗначения(Дата(1,1,2), "Дата");
		ОписаниеОшибки = Новый Структура;
		
		ДатыЗапретаИзменения.НайденЗапретИзмененияДанных(ТаблицаДанных, ОписаниеДанных, ОписаниеОшибки);
		
		Для Каждого СтрокаЗапрета Из ОписаниеОшибки.Запреты Цикл
			
			ТекущийЗапрет = КонецМесяца(СтрокаЗапрета.ДатаЗапрета) + 1;
			
			Если НЕ ЗначениеЗаполнено(ДатаЗапрета) Тогда
				ДатаЗапрета = ТекущийЗапрет;
			Иначе
				ДатаЗапрета = Макс(ДатаЗапрета, ТекущийЗапрет);
			КонецЕсли;
			
			СтрокаРасшифровки = РасшифровкаЗапрета.Найти(СтрокаЗапрета.Объект, "Организация");
			СтрокаРасшифровки[СтрокаЗапрета.Раздел] = ТекущийЗапрет;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ДатаЗапрета = НачалоМесяца(ДатаЗапрета);
	
КонецПроцедуры

&НаСервере
Процедура ПодсчетКоличестваЗаписей()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(*) КАК Количество
	|	ИЗ
	|		РегистрСведений.ДетализацияСебестоимостиТоваров КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОЛИЧЕСТВО(*) КАК Количество
	|	ИЗ
	|		РегистрСведений.ДетализацияСебестоимостиТоваровПостатейныеЗатраты КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОЛИЧЕСТВО(*) КАК Количество
	|	ИЗ
	|		РегистрСведений.ДетализацияСебестоимостиТоваровПостатейныеЗатратыНЗП КАК Т) КАК Т";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	КоличествоДанных = Выборка.Количество;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатистику()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(Т.Период, МЕСЯЦ)) КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Т.Период) КАК Период
	|	ИЗ
	|		РегистрСведений.ДетализацияСебестоимостиТоваров КАК Т
	|	ГДЕ
	|		Т.Период < &ПервыйНезакрытыйПериод
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МАКСИМУМ(Т.Период)
	|	ИЗ
	|		РегистрСведений.ДетализацияСебестоимостиТоваровПостатейныеЗатраты КАК Т
	|	ГДЕ
	|		Т.Период < &ПервыйНезакрытыйПериод
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МАКСИМУМ(Т.Период)
	|	ИЗ
	|		РегистрСведений.ДетализацияСебестоимостиТоваровПостатейныеЗатратыНЗП КАК Т
	|	ГДЕ
	|		Т.Период < &ПервыйНезакрытыйПериод) КАК Т";
	
	Запрос.УстановитьПараметр("ПервыйНезакрытыйПериод", ПервыйНезакрытыйПериод);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.Период) Тогда
		ПоследнийСохраняемыйПериод = Выборка.Период;
	Иначе
		ПоследнийСохраняемыйПериод = Дата(1,1,1);
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(*) КАК Количество
	|	ИЗ
	|		РегистрСведений.ДетализацияСебестоимостиТоваров КАК Т
	|	ГДЕ
	|		Т.Период < &ПоследнийСохраняемыйПериод
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОЛИЧЕСТВО(*) КАК Количество
	|	ИЗ
	|		РегистрСведений.ДетализацияСебестоимостиТоваровПостатейныеЗатраты КАК Т
	|	ГДЕ
	|		Т.Период < &ПоследнийСохраняемыйПериод
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОЛИЧЕСТВО(*) КАК Количество
	|	ИЗ
	|		РегистрСведений.ДетализацияСебестоимостиТоваровПостатейныеЗатратыНЗП КАК Т
	|	ГДЕ
	|		Т.Период < &ПоследнийСохраняемыйПериод) КАК Т";
	
	Запрос.УстановитьПараметр("ПоследнийСохраняемыйПериод", ПоследнийСохраняемыйПериод);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	КоличествоКУдалению = Выборка.Количество;
	
	ПроцентОчистки = ?(КоличествоДанных = 0, 0, 100 * КоличествоКУдалению / КоличествоДанных);
	
	Элементы.НадписьСтатистика.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Всего записей в регистрах партий НДС: %1, будет удалено записей: %2 (%3%)'"),
		Формат(КоличествоДанных, "ЧН=0"),
		Формат(КоличествоКУдалению, "ЧН=0"),
		Формат(ПроцентОчистки, "ЧДЦ=2; ЧН=0"));
		
	Элементы.ПервыйНезакрытыйПериод.Подсказка = НСтр("ru = 'Самый ранний период, для которого еще возможно выполнение операций закрытие месяца'");
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДвиженияНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивРегистров = Новый Массив;
	МассивРегистров.Добавить(Метаданные.РегистрыСведений.ДетализацияСебестоимостиТоваров.Имя);
	МассивРегистров.Добавить(Метаданные.РегистрыСведений.ДетализацияСебестоимостиТоваровПостатейныеЗатраты.Имя);
	МассивРегистров.Добавить(Метаданные.РегистрыСведений.ДетализацияСебестоимостиТоваровПостатейныеЗатратыНЗП.Имя);
	
	Запрос = Новый Запрос;
	ШаблонТекстаЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Период
	|ИЗ
	|	ИмяРегистра КАК Т
	|ГДЕ
	|	Т.Период < &ПоследнийСохраняемыйПериод
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|";
	
	Запрос.УстановитьПараметр("ПоследнийСохраняемыйПериод", ПоследнийСохраняемыйПериод);
	
	МинПериод  = Дата(1,1,1);
	МаксПериод = Дата(1,1,1);
	
	ВремяНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Для Каждого ИмяРегистра Из МассивРегистров Цикл
		
		Запрос.Текст = СтрЗаменить(ШаблонТекстаЗапроса, "ИмяРегистра", "РегистрСведений." + ИмяРегистра);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
		ДатыЗапретаИзмененияУТ.ОтключитьПроверкуДатыЗапретаИзменения(НаборЗаписей);
		
		Пока Выборка.Следующий() Цикл
			
			УправлениеДоступом.ОтключитьОбновлениеКлючейДоступа(Истина);
			
			МинПериод  = ?(ЗначениеЗаполнено(МинПериод), Мин(МинПериод, Выборка.Период), Выборка.Период);
			МаксПериод = ?(ЗначениеЗаполнено(МаксПериод), Макс(МаксПериод, Выборка.Период), Выборка.Период);
			
			Попытка
				
				НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
				
				НаборЗаписей.Записать(Истина);
			
				УправлениеДоступом.ОтключитьОбновлениеКлючейДоступа(Ложь);
				
			Исключение
				
				УправлениеДоступом.ОтключитьОбновлениеКлючейДоступа(Ложь);
				
				ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				
				ВызватьИсключение ТекстОшибки;
				
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ВремяВыполнения = (ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНачала) / 1000;
	
	ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Удалено записей %1 за период с %2 по %3; время удаления: %4'"),
		Формат(КоличествоКУдалению, "ЧН=0"),
		РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(МинПериод),
		РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(МаксПериод),
		РасчетСебестоимостиПротоколРасчета.ПредставлениеВремени(ВремяВыполнения));
	
	ЗаписьЖурналаРегистрации(
		"ОчисткаДвиженийРегистровПартийНДСВЗакрытыхПериодах",
		УровеньЖурналаРегистрации.Информация,,,
		ТекстДляПротокола);
	
	ОбщегоНазначения.СообщитьПользователю(ТекстДляПротокола);
	
	ПодсчетКоличестваЗаписей();
	ОбновитьСтатистику();
	
КонецПроцедуры

#КонецОбласти
