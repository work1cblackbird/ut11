
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ФизическиеЛицаЛокализация.РеквизитыПечатиЗаявленияНаВозвратОбработатьВидДокумента(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Параметры.ДатаДокумента) Тогда // запуск обработки без необходимых параметров
		ТекстПредупреждения = НСтр("ru = 'Обработка не предназначена для интерактивного открытия!'");
		Возврат;
	Иначе
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,,"ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,КлючНазначенияИспользования");
		Если ДатаДокумента = Дата(1,1,1) Тогда
			ДатаДокумента = ТекущаяДатаСеанса();
		КонецЕсли;
		
		Элементы.Покупатель.СписокВыбора.Добавить(Контрагент, Контрагент);
		
		Если Не Контрагент.Пустая() Тогда
			
			КонтрагентЯвляетсяФизическимЛицом = (ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент,"ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо);
			ЗаполнитьДанныеДокументовКонтрагента();
			
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьПричиныВозвратаСписокВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ПринудительноЗакрытьФорму Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И Не СохранитьПараметры И НЕ ЗавершениеРаботы Тогда
		
		Отказ = Истина;
		
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Закрыть", НСтр("ru = 'Закрыть'"));
		СписокКнопок.Добавить("НеЗакрывать", НСтр("ru = 'Не закрывать'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru = 'Реквизиты печати заявления на возврат были изменены. Закрыть без сохранения реквизитов?'"),
			СписокКнопок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = "НеЗакрывать" Тогда
		
		СохранитьПараметры = Ложь;
		
	ИначеЕсли ОтветНаВопрос = "Закрыть" Тогда
		
		ПринудительноЗакрытьФорму = Истина;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если СохранитьПараметры И НЕ ЗавершениеРаботы Тогда
		
		СтруктураПараметров = ИзменяемыеРеквизиты(ЭтаФорма);
		ОповеститьОВыборе(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	Если ВидДокументаПокупателя <> ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка") Тогда
		МассивНайденныхСтрок = ДанныеДокументовУдостоверяющихЛичность.НайтиСтроки(Новый Структура("ВидДокумента", ВидДокументаПокупателя));
		Если МассивНайденныхСтрок.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(ЭтаФорма, МассивНайденныхСтрок[0]);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидДокументаСписокВыбора()
	
	ВидДокументаТекущееЗначение = ВидДокументаПокупателя;
	
	Элементы.ВидДокумента.СписокВыбора.Очистить();
	Элементы.ВидДокумента.СписокВыбора.Добавить(Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка(),"   ");
	
	Если ЗначениеЗаполнено(Покупатель) Тогда
		Для каждого СтрокаТаблицы Из ДанныеДокументовУдостоверяющихЛичность Цикл
			Элементы.ВидДокумента.СписокВыбора.Добавить(СтрокаТаблицы.ВидДокумента, СтрокаТаблицы.Наименование);
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидДокументаТекущееЗначение) Тогда
		МассивНайденныхСтрок = ДанныеДокументовУдостоверяющихЛичность.НайтиСтроки(Новый Структура("ВидДокумента", ВидДокументаТекущееЗначение));
		Если МассивНайденныхСтрок.Количество() = 0 Тогда
			Элементы.ВидДокумента.СписокВыбора.Добавить(ВидДокументаТекущееЗначение,ВидДокументаТекущееЗначение);
		КонецЕсли;
	КонецЕсли;
	
	ТекстПоследнегоЭлементаСписка = ?(Элементы.ВидДокумента.СписокВыбора.Количество() = 1,Нстр("ru = 'Выбрать вид документа'"),Нстр("ru = 'Выбрать другой вид документа'"));
	Элементы.ВидДокумента.СписокВыбора.Добавить(Неопределено,ТекстПоследнегоЭлементаСписка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		Результат = Неопределено;

		ОткрытьФорму("Справочник.ВидыДокументовФизическихЛиц.ФормаВыбора", , ЭтаФорма,,,, Новый ОписаниеОповещения("ВидДокументаОбработкаВыбораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаОбработкаВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если Результат <> Неопределено Тогда
        ВидДокументаПокупателя = Результат;
        Если ЗначениеЗаполнено(Покупатель) Тогда
            МассивНайденныхСтрок = ДанныеДокументовУдостоверяющихЛичность.НайтиСтроки(Новый Структура("ВидДокумента", ВидДокументаПокупателя));
            Если МассивНайденныхСтрок.Количество() > 0 Тогда
                ЗаполнитьЗначенияСвойств(ЭтаФорма, МассивНайденныхСтрок[0]);
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ТолькоПросмотр Тогда
		
		Отказ = Ложь;
		
		Если ЗначениеЗаполнено(ВидДокументаПокупателя) Тогда
			
			ОчиститьСообщения();
			
			ТекстОшибки = "";
			Отказ = Не ФизическиеЛицаКлиентСерверУТ.СерияДокументаУказанаПравильно(ВидДокументаПокупателя, СерияДокументаПокупателя, ТекстОшибки) Или Отказ;
			Если Не ПустаяСтрока(ТекстОшибки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "СерияДокументаПокупателя");
			КонецЕсли;
			
			ТекстОшибки = "";
			Отказ = Не ФизическиеЛицаКлиентСерверУТ.НомерДокументаУказанПравильно(ВидДокументаПокупателя, НомерДокументаПокупателя, ТекстОшибки) Или Отказ;
			Если Не ПустаяСтрока(ТекстОшибки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "НомерДокументаПокупателя");
			КонецЕсли;
			
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		СохранитьПараметры = Истина;
		Если КонтрагентЯвляетсяФизическимЛицом Тогда
			СохранитьДанныеДокументаКонтрагента();
		КонецЕсли;
		
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Функция ИзменяемыеРеквизиты(Источник)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ДатаРожденияПокупателя",              Источник.ДатаРожденияПокупателя);
	СтруктураПараметров.Вставить("Покупатель",                          Источник.Покупатель);
	СтруктураПараметров.Вставить("ПричинаВозврата",                     Источник.ПричинаВозврата);
	СтруктураПараметров.Вставить("ВидДокументаПокупателя",              Источник.ВидДокументаПокупателя);
	СтруктураПараметров.Вставить("СерияДокументаПокупателя",            Источник.СерияДокументаПокупателя);
	СтруктураПараметров.Вставить("НомерДокументаПокупателя",            Источник.НомерДокументаПокупателя);
	СтруктураПараметров.Вставить("ДатаВыдачиДокументаПокупателя",       Источник.ДатаВыдачиДокументаПокупателя);
	СтруктураПараметров.Вставить("СрокДействияДокументаПокупателя",     Источник.СрокДействияДокументаПокупателя);
	СтруктураПараметров.Вставить("КемВыданДокументПокупателя",          Источник.КемВыданДокументПокупателя);
	СтруктураПараметров.Вставить("КодПодразделенияДокументаПокупателя", Источник.КодПодразделенияДокументаПокупателя);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеДокументовКонтрагента()

	ДанныеДокументовУдостоверяющихЛичность.Очистить();
		
	Если Контрагент.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК СерияДокументаПокупателя,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК НомерДокументаПокупателя,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачиДокументаПокупателя,
	|	ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействияДокументаПокупателя,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыданДокументПокупателя,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделенияДокументаПокупателя,
	|	ВидыДокументовФизическихЛиц.Наименование
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			ТИПЗНАЧЕНИЯ(Физлицо) = ТИП(Справочник.Контрагенты)
	|				И Физлицо = &Контрагент
	|				И ЯвляетсяДокументомУдостоверяющимЛичность) КАК ДокументыФизическихЛицСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыДокументовФизическихЛиц КАК ВидыДокументовФизическихЛиц
	|		ПО ДокументыФизическихЛицСрезПоследних.ВидДокумента = ВидыДокументовФизическихЛиц.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументыФизическихЛицСрезПоследних.Период УБЫВ";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДатаДокумента", ?(ЗначениеЗаполнено(ДатаДокумента),ДатаДокумента,ТекущаяДатаСеанса()));
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДокументовУдостоверяющихЛичность.Загрузить(Результат.Выгрузить());
	ЗаполнитьВидДокументаСписокВыбора();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПричиныВозвратаСписокВыбора()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.ПричинаВозврата КАК ПричинаВозврата 
	|ИЗ (
	|	ВЫБРАТЬ
	|		ЗаявкаНаВозврат.ПричинаВозврата КАК ПричинаВозврата
	|	ИЗ
	|		Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|	ГДЕ
	|		ЗаявкаНаВозврат.ПричинаВозврата <> """"
	|		И ЗаявкаНаВозврат.Проведен
	|		И &УсловиеТаблицаВозвратов
	|) КАК ВложенныйЗапрос
	|УПОРЯДОЧИТЬ ПО
	|	ПричинаВозврата ВОЗР
	|";
	
	ТекстТаблицыВозвратов = "И ИСТИНА";
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтКлиента) Тогда
		
		ТекстТаблицыВозвратов ="
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Возврат.ПричинаВозврата КАК ПричинаВозврата
		|	ИЗ
		|		Документ.ВозвратТоваровОтКлиента КАК Возврат
		|	ГДЕ
		|		Возврат.ПричинаВозврата <> """"
		|		И Возврат.Проведен";
		
	КонецЕСли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &УсловиеТаблицаВозвратов", ТекстТаблицыВозвратов);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ПричиныВозврата = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПричинаВозврата");
	Элементы.ПричинаВозврата.СписокВыбора.Очистить();
	Элементы.ПричинаВозврата.СписокВыбора.ЗагрузитьЗначения(ПричиныВозврата);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеДокументаКонтрагента()
	
	НеобходимВопрос = Ложь;
	
	Если ЗначениеЗаполнено(ВидДокументаПокупателя) И ЗначениеЗаполнено(Покупатель) И Покупатель = Элементы.Покупатель.СписокВыбора[0].Представление Тогда
		
		МассивНайденныхСтрок = ДанныеДокументовУдостоверяющихЛичность.НайтиСтроки(Новый Структура("ВидДокумента", ВидДокументаПокупателя));
		
		Если МассивНайденныхСтрок.Количество() > 0 Тогда
			Если МассивНайденныхСтрок[0].СерияДокументаПокупателя <> СерияДокументаПокупателя ИЛИ
				 МассивНайденныхСтрок[0].НомерДокументаПокупателя <> НомерДокументаПокупателя ИЛИ
				 МассивНайденныхСтрок[0].ДатаВыдачиДокументаПокупателя <> ДатаВыдачиДокументаПокупателя ИЛИ
				 МассивНайденныхСтрок[0].СрокДействияДокументаПокупателя <> СрокДействияДокументаПокупателя ИЛИ
				 МассивНайденныхСтрок[0].КемВыданДокументПокупателя <> КемВыданДокументПокупателя ИЛИ
				 МассивНайденныхСтрок[0].КодПодразделенияДокументаПокупателя <> КодПодразделенияДокументаПокупателя Тогда
				
				НеобходимВопрос = Истина;
			КонецЕсли;
				
		ИначеЕсли ЗначениеЗаполнено(СерияДокументаПокупателя) ИЛИ
				ЗначениеЗаполнено(НомерДокументаПокупателя) ИЛИ
				ЗначениеЗаполнено(ДатаВыдачиДокументаПокупателя) ИЛИ
				ЗначениеЗаполнено(СрокДействияДокументаПокупателя) ИЛИ
				ЗначениеЗаполнено(КемВыданДокументПокупателя) ИЛИ
				ЗначениеЗаполнено(КодПодразделенияДокументаПокупателя) Тогда
				
				НеобходимВопрос = Истина;
				
		КонецЕсли;
		
		Если НеобходимВопрос Тогда
			
			ПоказатьВопрос(
				Новый ОписаниеОповещения("СохранитьДанныеДокументаКонтрагентаВопросЗавершение", ЭтотОбъект),
				НСтр("ru = 'Вы хотите записать информацию о данных документа удостоверяющего личность?'"),
				РежимДиалогаВопрос.ДаНет);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеДокументаКонтрагентаВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ВыполнитьЗаписьДокументаУдостоверяющегоЛичность();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаписьДокументаУдостоверяющегоЛичность()

	МенеджерЗаписи = РегистрыСведений.ДокументыФизическихЛиц.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период                                   = ДатаДокумента;
	МенеджерЗаписи.Физлицо                                  = Контрагент;
	МенеджерЗаписи.ВидДокумента                             = ВидДокументаПокупателя;
	МенеджерЗаписи.Серия                                    = СерияДокументаПокупателя;
	МенеджерЗаписи.Номер                                    = НомерДокументаПокупателя;
	МенеджерЗаписи.ДатаВыдачи                               = ДатаВыдачиДокументаПокупателя;
	МенеджерЗаписи.СрокДействия                             = СрокДействияДокументаПокупателя;
	МенеджерЗаписи.КемВыдан                                 = КемВыданДокументПокупателя;
	МенеджерЗаписи.КодПодразделения                         = КодПодразделенияДокументаПокупателя;
	МенеджерЗаписи.ЯвляетсяДокументомУдостоверяющимЛичность = Истина;
	МенеджерЗаписи.Записать();

КонецПроцедуры

#КонецОбласти

#КонецОбласти
