
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.СтраницаДействия.ТекущаяСтраница = Элементы.Выполняется;
	
	ИдентификаторЗапроса = Параметры.Идентификатор;
	КодВалюты            = Параметры.КодВалюты;
	СтатусЗапроса        = Параметры.СтатусЗапроса;
	
	Параметры.Свойство("Организация", Организация);
	
	Если Параметры.Свойство("КодВалютыДокумента") И Параметры.КодВалютыДокумента <> ""
		И Параметры.КодВалютыДокумента <> Неопределено Тогда
		ВалютаДокумента = ОбщегоНазначенияБЭД.НайтиСсылку("Валюты", Параметры.КодВалютыДокумента);
	Иначе
		ВалютаДокумента = ОбщегоНазначенияБЭД.НайтиСсылку("Валюты", Параметры.КодВалюты);
	КонецЕсли;
		
	УстановитьВидимостьКомандОтмены(ЭтотОбъект, СтатусЗапроса);
	
	ПолучениеДанных = Истина;
	
	ВыполнитьЗапросВСервисе();
	
	Элементы.ОткрытьЖурналРегистрации.Видимость = Пользователи.ЭтоПолноправныйПользователь();
	Элементы.ДекорацияОтступОшибкаДействияПовторить.Видимость         = Элементы.ОткрытьЖурналРегистрации.Видимость;
	
	МетаданныеДокумента = КоммерческиеПредложенияСлужебный.МетаданныеПоОпределяемомуТипу("КоммерческоеПредложениеКлиенту");
	
	Если МетаданныеДокумента <> Неопределено Тогда
		
		ИмяМенеджераДокумента = Неопределено;
		Если Метаданные.Документы.Содержит(МетаданныеДокумента) Тогда
			ИмяМенеджераДокумента = "Документ." + МетаданныеДокумента.Имя;
		ИначеЕсли Метаданные.Справочники.Содержит(МетаданныеДокумента) Тогда
			ИмяМенеджераДокумента = "Справочник." + МетаданныеДокумента.Имя;
		Иначе
			Возврат;
		КонецЕсли;
		
		ИмяФормыКП = ИмяМенеджераДокумента + ".ФормаОбъекта";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Интервал = 1;
	
	ВыполнениеОперацииЗавершение = Новый ОписаниеОповещения(
		"ПрочитатьЗапросКоммерческихПредложенийЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ВыполнениеОперацииЗавершение,
		ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененСтатусЗапросаКоммерческихПредложений" 
		И Источник = ИдентификаторЗапроса Тогда
		
		Если Параметр = "СнятСРассмотрения" Тогда 
			УстановитьВидимостьКомандОтмены(ЭтотОбъект, 1);
		ИначеЕсли Параметр = "НеОбработан" Тогда 
			УстановитьВидимостьКомандОтмены(ЭтотОбъект, 0);
		КонецЕсли;
		
		Модифицированность = Ложь;
	КонецЕсли;
	
	Если ИмяСобытия = "ОбновленоДеревоЗапросаКП"
		И Источник = ИдентификаторЗапроса Тогда
		
		ЗагрузитьДеревоДокумента(Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияФайлыНажатие(Элемент)
	Если ЕстьПрисоединенныеФайлы Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ИдентификаторЗапроса" , ИдентификаторЗапроса);
		ПараметрыОткрытия.Вставить("АдресДереваДокумента" , ПолучитьАдресДереваДокумента());
		
		
		ОткрытьФорму("Обработка.ЗапросыКоммерческихПредложений.Форма.ПросмотрПрикрепленныхФайлов",
					ПараметрыОткрытия,
					ЭтотОбъект,
					,,,,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПокупательНажатие(Элемент, СтандартнаяОбработка)
		СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	
	ПараметрыОткрытия = БизнесСетьКлиентСервер.ОписаниеИдентификацииОрганизацииКонтрагентов();
	ПараметрыОткрытия.ЭтоКонтрагент = Истина;
	ПараметрыОткрытия.ИНН = ИНН;
	ПараметрыОткрытия.КПП = КПП;
	
	БизнесСетьСлужебныйКлиент.ОткрытьПрофильУчастника(ПараметрыОткрытия);

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьУчетныйДокумент(Команда)
	
	Если ИдентификаторЗадания = Неопределено Тогда 
		СохранитьЗапросУКлиента(Элементы.УчетныйДокумент, Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтветитНаЗапрос(Команда)
	
	Если ИдентификаторЗадания <> Неопределено Или ПолучениеДанных Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьЗапросУКлиента(Элементы.ОтветитНаЗапрос, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСРассмотрения(Команда)
	
	Если ПолучениеДанных Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСостояниеЗапроса(ИдентификаторЗапроса, Истина);
	Оповестить("ИзмененСтатусЗапросаКоммерческихПредложений", "СнятСРассмотрения", ИдентификаторЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьЗапрос(Команда)
	
	Если ИдентификаторЗадания <> Неопределено Или ПолучениеДанных Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьЗапросУКлиента(Элементы.СохранитьЗапрос, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьНеОбработан(Команда)
	
	УстановитьСостояниеЗапроса(ИдентификаторЗапроса, Ложь);
	Оповестить("ИзмененСтатусЗапросаКоммерческихПредложений", "НеОбработан", ИдентификаторЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ПовторитьЗагрузку(Команда)
	
	Если ПолучениеДанных Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницаДействия.ТекущаяСтраница = Элементы.Выполняется;
	
	ПолучениеДанных = Истина;
	
	ВыполнитьЗапросВСервисе();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Интервал = 1;
	
	ВыполнениеОперацииЗавершение = Новый ОписаниеОповещения(
		"ПрочитатьЗапросКоммерческихПредложенийЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ВыполнениеОперацииЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурнал(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Данные", НаименованиеФоновогоЗаданияПолучениеДанных);
	
	ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьАдресДереваДокумента()

	Возврат ПоместитьВоВременноеХранилище(ДеревоДокумента);

КонецФункции

&НаСервере
Процедура ЗагрузитьДеревоДокумента(АдресРезультата)
	
	ДеревоДокумента = ПолучитьИзВременногоХранилища(АдресРезультата);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьКомандОтмены(Форма, Параметр)
	
	Если Параметр = 1 Тогда
		Форма.Элементы.Команды.ТекущаяСтраница = Форма.Элементы.НеОбработан;
	ИначеЕсли Параметр = 0 Тогда
		Форма.Элементы.Команды.ТекущаяСтраница = Форма.Элементы.СнятьСРассмотрения;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСостояниеЗапроса(ИдентификаторЗапроса, СнятьСРассмотрения = Истина)
	
	Статус = ?(СнятьСРассмотрения, Перечисления.СтатусыЗапросаКоммерческихПредложенийДляПоиска.НеРассматривать, Перечисления.СтатусыЗапросаКоммерческихПредложенийДляПоиска.ПустаяСсылка());
	КоммерческиеПредложенияСлужебный.УстановитьСтатусЗапросаВПоиске(ИдентификаторЗапроса, Статус);
	
	ИдентификаторЗадания = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьЗапросКоммерческихПредложенийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПолучениеДанных = Ложь;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ЗаполнитьДанныеЗапроса(Результат.АдресРезультата);
		
	Иначе
		
		
		Элементы.СтраницаДействия.ТекущаяСтраница = Элементы.Ошибка;
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеЗапроса(АдресРезультата)
	
	ДеревоДокумента = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если ТипЗнч(ДеревоДокумента) <> Тип("ДеревоЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНаОснованииДерева(ДеревоДокумента);
	
	УчетныйДокумент = ДокументОснованиеПоИдентификаторуЗапроса(ИдентификаторЗапроса);
	
	Элементы.ГруппаДействия.Видимость = Истина;
	Элементы.ГруппаУчетныйДокумент.Видимость = Ложь;
	
	Если ЗначениеЗаполнено(УчетныйДокумент) Тогда
		Элементы.ГруппаДействия.Видимость = Ложь;
		Элементы.ГруппаУчетныйДокумент.Видимость = Истина;
		
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(НСтр("ru = 'Учетный документ:'"));
		МассивСтрок.Добавить(" ");
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Строка(УчетныйДокумент),,,, ПолучитьНавигационнуюСсылку(УчетныйДокумент)));
		МассивСтрок.Добавить(" (");
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("Перезаполнить",,,, "Перезаполнить"));
		МассивСтрок.Добавить(")");
		
		Элементы.УчетныйДокумент.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
	КонецЕсли;
	
	Элементы.ТоварыМаксимальнаяЦена.Заголовок = СтрШаблон(НСтр("ru = 'Максимальная цена (%1)'"), Валюта);
	
	Элементы.СтраницаДействия.ТекущаяСтраница = Элементы.Выполнено;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаОснованииДерева(ДанныеВходящегоДокумента)

	Валюта = ОбщегоНазначенияБЭД.НайтиСсылку("Валюты",
		Строка(ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.ВалютаКод")));
		
	Если Валюта <> ВалютаДокумента И ЗначениеЗаполнено(ВалютаДокумента) Тогда
		Элементы.НадписьВалюта.Заголовок = СтрШаблон(НСтр("ru = 'Валюта: %1 (запрос размещен в %2)'"), Валюта, ВалютаДокумента);
	Иначе
		Элементы.НадписьВалюта.Заголовок = СтрШаблон(НСтр("ru = 'Валюта: %1'"), Валюта);
	КонецЕсли;
		
	РеквизитыОрганизации = КоммерческиеПредложенияДокументы.ПолучательОтправительПоДаннымЭД(ДанныеВходящегоДокумента, "Организация");
	Покупатель = РеквизитыОрганизации.Наименование;
	ИНН = РеквизитыОрганизации.ИНН;
	КПП = РеквизитыОрганизации.КПП;
	
	Операция = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.ПриемПередачаНаКомиссию");
	
	Если Операция = Истина Тогда
		ХозяйственнаяОперация = Перечисления.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию;
	Иначе
		ХозяйственнаяОперация = Перечисления.ВидыОперацийКоммерческихПредложений.ЗакупкаУПоставщика;
	КонецЕсли;
	
	МожетОбеспечиватьсяЧастично  = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.ВсеИлиНичего");
	Налогообложение              = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.ТолькоСНДС");
	
	Если ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "АдресДоставки") Тогда
		АдресПоставки    = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "АдресДоставки.Представление");
	КонецЕсли;
	
	//КонтактноеЛицо
	ДанныеКонтактногоЛица = КоммерческиеПредложенияДокументы.СтруктураПоГруппеДерева(ДанныеВходящегоДокумента, "КонтактноеЛицо");
	КонтактноеЛицо = ДанныеКонтактногоЛица.ФИО;
	
	ПодстрокиКонтактнойИнформации = Новый Массив;
	Если ДанныеКонтактногоЛица.Свойство("ЭлектроннаяПочта") И ДанныеКонтактногоЛица.ЭлектроннаяПочта <> Неопределено Тогда
		ПодстрокиКонтактнойИнформации.Добавить(СтрШаблон(НСтр("ru='email: %1'"), ДанныеКонтактногоЛица.ЭлектроннаяПочта));
	КонецЕсли;
	
	Если ДанныеКонтактногоЛица.Свойство("Телефон") И ДанныеКонтактногоЛица.Телефон <> Неопределено Тогда
		ПодстрокиКонтактнойИнформации.Добавить(СтрШаблон(НСтр("ru='телефон: %1'"), ДанныеКонтактногоЛица.Телефон));
	КонецЕсли;
	
	Если ПодстрокиКонтактнойИнформации.Количество() Тогда
		СтрокаКонтактнойИнформации = СтрСоединить(ПодстрокиКонтактнойИнформации, ", ");
		КонтактноеЛицо = СтрШаблон("%1 (%2)", КонтактноеЛицо, СтрокаКонтактнойИнформации);
	КонецЕсли;
	
	ДатаНачалаПубликации                = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.ДатаНачалаСбора");
	ДатаОкончанияПубликации             = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.ДатаОкончанияСбора");
	ДатаОкончанияРассмотрения           = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.ДатаОкончанияРассмотрения");
	УсловиеПоставкиТекст                = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.УсловияДоставки");
	УсловияОплатыТекст                  = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.УсловияОплаты");
	ПрочаяДополнительнаяИнформацияТекст = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(ДанныеВходящегоДокумента, "УсловияИПоложения.УсловияПрочие");
	
	Товары.Очистить();
	
	// Сведения таблицы.
	СведенияОТоварах = ДанныеВходящегоДокумента.Строки.Найти("Товары", "ПолныйПуть");
	Для Каждого СведенияОТоваре Из СведенияОТоварах.Строки Цикл
		НоваяСтрока = Товары.Добавить();
		НоваяСтрока.ИдентификаторСтрокиЗапроса = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
					"Товары.НомерСтроки.ИдентификаторСтроки");
		НоваяСтрока.НомерСтрокиЗапроса = СведенияОТоваре.Значение;
		
		НоваяСтрока.НоменклатураПокупателяПредставление = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
					"Товары.НомерСтроки.Товар.НоменклатураНаименование");
		
		ЕдиницаИзмеренияПредставление = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
					"Товары.НомерСтроки.ЛогистическаяУпаковка.Описание");
		
		Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияПредставление) Тогда
			ЕдиницаИзмеренияПредставление = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
						"Товары.НомерСтроки.Товар.ЕдиницаИзмеренияНаименование");
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияПредставление) Тогда
			ЕдиницаИзмеренияПредставление = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
						"Товары.НомерСтроки.Товар.ЕдиницаИзмеренияКодОКЕИ");
		КонецЕсли;
		
		НоваяСтрока.ЕдиницаИзмеренияПредставление = ЕдиницаИзмеренияПредставление;
		
		Если ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
				"Товары.НомерСтроки.Товар.Сервис1СНоменклатура") = "Номенклатура" Тогда
			НоваяСтрока.НоменклатураВСервисеИдентификатор = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
						"Товары.НомерСтроки.Товар.Сервис1СНоменклатура.Номенклатура.ИдентификаторНоменклатуры");
			НоваяСтрока.ХарактеристикаВСервисеИдентификатор = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
						"Товары.НомерСтроки.Товар.Сервис1СНоменклатура.Номенклатура.ИдентификаторХарактеристики");
		ИначеЕсли ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
				"Товары.НомерСтроки.Товар.Сервис1СНоменклатура") = "Рубрика" Тогда
			НоваяСтрока.КатегорияВСервисеИдентификатор = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
						"Товары.НомерСтроки.Товар.Сервис1СНоменклатура.Рубрика.ИдентификаторРубрики");
			НоваяСтрока.КатегорияВСервисеПредставление = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
						"Товары.НомерСтроки.Товар.Сервис1СНоменклатура.Рубрика.НаименованиеРубрики");
		КонецЕсли;
		
		НоваяСтрока.Количество = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
					"Товары.НомерСтроки.Количество");
		НоваяСтрока.МаксимальнаяЦена = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
					"Товары.НомерСтроки.Цена");
		
		Если ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,"Товары.НомерСтроки.СрокПоставки") = "" Тогда
			ВариантУказанияСрокаПоставки = Перечисления.ВариантыСроковПоставкиКоммерческихПредложений.НеУказывается;
		ИначеЕсли ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,"Товары.НомерСтроки.СрокПоставки") = "НаДату" Тогда
			ВариантУказанияСрокаПоставки = Перечисления.ВариантыСроковПоставкиКоммерческихПредложений.УказываетсяНаОпределеннуюДату;
			НоваяСтрока.СрокПоставки = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
						"Товары.НомерСтроки.СрокПоставки.НаДату");
		Иначе
			ВариантУказанияСрокаПоставки = Перечисления.ВариантыСроковПоставкиКоммерческихПредложений.УказываетсяВДняхСМоментаЗаказа;
			НоваяСтрока.СрокПоставки = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(СведенияОТоваре,
						"Товары.НомерСтроки.СрокПоставки.ВДнях");
		КонецЕсли;
		
	КонецЦикла;
	
	СведенияОФайлах = ДанныеВходящегоДокумента.Строки.Найти("ПрисоединенныеФайлы", "ПолныйПуть");
	ЕстьПрисоединенныеФайлы = Ложь;
	
	Если ЗначениеЗаполнено(СведенияОФайлах.Значение) Тогда
		
		Элементы.ДекорацияФайлы.Заголовок = СтрШаблон(НСтр("ru = 'Файлы (%1)'"), СведенияОФайлах.Строки.Количество());
		ЕстьПрисоединенныеФайлы = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьЗапросУКлиента(Элемент, ОтветитьНаЗапрос = Ложь)
	
	ОчиститьСообщения();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДополнительныеПараметры = Новый Структура;
	
	Если Элемент <> Неопределено Тогда
		Элемент.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
		ДополнительныеПараметры.Вставить("ИмяРеквизита", Элемент.Имя);
	Иначе
		ДополнительныеПараметры.Вставить("ИмяРеквизита", Неопределено);
	КонецЕсли;

	ДополнительныеПараметры.Вставить("СоздатьНаОсновании", ОтветитьНаЗапрос);
	
	ВыполнениеОперацииЗавершение = Новый ОписаниеОповещения(
		"СохранениеЗапросаКоммерческихПредложенийЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПолучениеДанных = Истина;
	
	ДлительнаяОперация = ВыполнитьСохранениеДокумента();
	
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ВыполнениеОперацииЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранениеЗапросаКоммерческихПредложенийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПолучениеДанных = Ложь;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		УчетныйДокумент = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(УчетныйДокумент) Тогда
			
			Оповестить("ИзмененСтатусЗапросаКоммерческихПредложений", "Сохранен", ИдентификаторЗапроса);
			
			Если ДополнительныеПараметры.СоздатьНаОсновании Тогда
				
				ПараметрыОткрытия = Новый Структура("Основание", УчетныйДокумент);
				ОткрытьФорму(ИмяФормыКП, ПараметрыОткрытия,, ИдентификаторЗапроса)
				
			Иначе
				ПоказатьЗначение(, УчетныйДокумент);
			КонецЕсли;
			
			Если Окно <> Неопределено Тогда
				Закрыть();
			КонецЕсли;
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось сохранить запрос коммерческих предложений'"))
		КонецЕсли;
	Иначе
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		
	КонецЕсли;
	
	Если ДополнительныеПараметры.ИмяРеквизита <> Неопределено Тогда
		Элементы[ДополнительныеПараметры.ИмяРеквизита].Картинка = Новый Картинка;
	Иначе
		ПоказатьОповещениеПользователя(НСтр("ru = 'Успешно'"),, НСтр("ru = 'Документ успешно обновлен'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьСохранениеДокумента()
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Дерево", ДеревоДокумента);
	ПараметрыПроцедуры.Вставить("УчетныйДокумент"   , УчетныйДокумент);
	
	НаименованиеФоновогоЗадания = НСтр("ru = 'Сохранение запроса коммерческих предложений'");
	ИмяПроцедуры = "Обработки.ЗапросыКоммерческихПредложений.СохранитьЗапросУКлиента";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеФоновогоЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаСервере
Функция ДокументОснованиеПоИдентификаторуЗапроса(ИдентификаторЗКПВСервисе)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивИменДокументовОснований = Новый Массив;
	
	Для Каждого ТипДокументаОснования Из Метаданные.ОпределяемыеТипы.ЗапросКоммерческогоПредложенияОтКлиента.Тип.Типы() Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипДокументаОснования);
		
		Если МетаданныеДокумента = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Если Не ОбщегоНазначения.ЭтоДокумент(МетаданныеДокумента) Тогда
			Возврат  Неопределено;
		КонецЕсли;
		
		Если МетаданныеДокумента.Реквизиты.Найти("ИдентификаторСервиса") = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		МассивИменДокументовОснований.Добавить(МетаданныеДокумента.ПолноеИмя());
		
	КонецЦикла;
	
	Если МассивИменДокументовОснований.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "";
	Инд = 1;
	
	Для Каждого ИмяДокументаОснования Из МассивИменДокументовОснований Цикл
		
		Если Инд > 1 Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка
		|ИЗ
		|	&ИмяДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.ИдентификаторСервиса = &ИдентификаторЗКПВСервисе";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяДокумента", ИмяДокументаОснования);
		
		Инд = Инд + 1;
		
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ИдентификаторЗКПВСервисе", ИдентификаторЗКПВСервисе);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Ссылка;
	
КонецФункции

&НаСервере
Процедура ВыполнитьЗапросВСервисе()
	
	Перем ПараметрыВыполнения, ПараметрыПроцедуры;
	
	ПараметрыПроцедуры = Новый Структура;
	
	ПараметрыПроцедуры.Вставить("Идентификатор", ИдентификаторЗапроса);
	ПараметрыПроцедуры.Вставить("КодВалюты",     КодВалюты);
	ПараметрыПроцедуры.Вставить("Организация",   Организация);
	
	НаименованиеФоновогоЗаданияПолучениеДанных = НСтр("ru = 'Получение запроса коммерческих предложений из сервиса 1С:Бизнес-Сеть'");
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеФоновогоЗаданияПолучениеДанных;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("Обработки.ЗапросыКоммерческихПредложений.ДанныеЗапросаКоммерческихПредложенийВСервисе",
	ПараметрыПроцедуры, ПараметрыВыполнения);

КонецПроцедуры



#КонецОбласти