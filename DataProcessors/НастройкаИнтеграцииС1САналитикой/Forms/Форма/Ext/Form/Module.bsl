#Область ОписаниеПеременных

&НаКлиенте
Перем МожноЗакрытьФорму;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Значения реквизитов формы
	СоставНабораКонстантФормы = СоставНабораКонстант(НаборКонстант);
	
	РежимРаботы = Новый Структура;
	РежимРаботы.Вставить("СоставНабораКонстантФормы", Новый ФиксированнаяСтруктура(СоставНабораКонстантФормы));
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	АдресСервера = Обработки.НастройкаИнтеграцииС1САналитикой.АдресСервера();
	АдресСервераСохраненный = АдресСервера;
	СерверСистемыАналитикиДоступен = УстановитьАдресСервераАналитики(АдресСервера);
	УстановитьВидимостьНедоступностиСервера1САналитики(ЭтотОбъект);
	
	ЭтоФайловаяБаза = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Обновление состояния элементов
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекстВопроса = "";
		Если НаборКонстант.ИспользоватьИнтеграциюС1САналитикой И ПустаяСтрока(АдресСервера) И МожноЗакрытьФорму = Неопределено Тогда
			ДополнительныйПараметр = "ПустойАдрес";
			ТекстВопроса =	НСтр("ru='При включенной интеграции с 1С:Аналитикой адрес сервера не может быть пустым. Интеграция будет выключена. Продолжить?'");
		ИначеЕсли НаборКонстант.ИспользоватьИнтеграциюС1САналитикой И АдресСервераСохраненный <> АдресСервера И МожноЗакрытьФорму = Неопределено Тогда
			ДополнительныйПараметр = "АдресИзменен";
			ТекстВопроса = НСтр("ru='Адрес сервера системы аналитики изменен. Сохранить изменения?'");
		КонецЕсли;
			
		Если Не ПустаяСтрока(ТекстВопроса) Тогда 
			ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, ДополнительныйПараметр), ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьИнтеграциюС1САналитикаПриИзменении(Элемент)
	
	Если НаборКонстант.ИспользоватьИнтеграциюС1САналитикой = Ложь И Не ПустаяСтрока(АдресСервера) Тогда
		ТекстВопроса = НСтр("ru = 'При выключении интеграции будет очишен адрес сервера системы аналитики. Продолжить?'");

		Оповещение = Новый ОписаниеОповещения("ПослеПодтвержденияВыключенияИнтеграции", ЭтотОбъект, Элемент);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераПриИзменении(Элемент)
	АдресСервераПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьАдрес(Команда)
	
	СерверСистемыАналитикиДоступен = УстановитьАдресСервераАналитики(АдресСервера);
	УстановитьВидимостьНедоступностиСервера1САналитики(ЭтотОбъект);
	Если СерверСистемыАналитикиДоступен Тогда
		АдресСервераСохраненный = АдресСервера;
		Элементы.УстановитьАдрес.Доступность = Ложь;
	Иначе
		ОповеститьОНедоступностиСервера();
	КонецЕсли;
	
	УстановитьДоступность();
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробноОСервисе(Команда)
	
	ИнформационнаяСсылка = "https://v8.1c.ru/platforma/1s-analitika/";
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(ИнформационнаяСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СкачатьСерверАналитики(Команда)
	ИнформационнаяСсылка = "https://releases.1c.ru/project/Analytics";
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(ИнформационнаяСсылка);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУправлениеСистемойАналитики(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьКопированиеПанелей", Истина);
	
	ОткрытьФорму("Обработка.УправлениеПанелями1САналитики.Форма.КопированиеПанелей", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУправлениеДополнительнымиИсточниками(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьДополнительныеИсточники", Истина);
	
	ОткрытьФорму("Обработка.УправлениеПанелями1САналитики.Форма.ДополнительныеИсточники", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьНедоступностиСервера1САналитики(Форма)
	
	ЗначениеКонстанты = Форма.НаборКонстант.ИспользоватьИнтеграциюС1САналитикой;
	Форма.Элементы.ГруппаСистемаАналитикиНедоступна.Видимость = ЗначениеКонстанты И Не Форма.СерверСистемыАналитикиДоступен;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если ЭтоФайловаяБаза Тогда
		
		ТолькоПросмотр = ЭтоФайловаяБаза;
		Для Каждого Элемент Из Элементы Цикл
			Если Элемент.Вид = ВидДекорацииФормы.Надпись Тогда
				Продолжить;
			КонецЕсли;
			
			Элемент.Доступность = Ложь;
		КонецЦикла;

		Элементы.ГруппаДекорацияСистемаАналитикиНедоступнаВФайловомВарианте.Видимость = Истина;
		
	Иначе
	
		Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьИнтеграциюС1САналитикой" Или РеквизитПутьКДанным = "" Тогда
			ЗначениеКонстанты = НаборКонстант.ИспользоватьИнтеграциюС1САналитикой;
			Элементы.АдресСервера.Доступность = ЗначениеКонстанты;
			Элементы.ГруппаУправлениеСистемойАналитики.Доступность = ЗначениеКонстанты И СерверСистемыАналитикиДоступен;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если КонстантаИмя <> "" Тогда
		Если ОбновлятьИнтерфейс Тогда
			ОбновитьИнтерфейсПрограммы();
		Иначе
			УстановитьДоступность();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	ОбновитьИнтерфейс();
	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервереБезКонтекста
Функция УстановитьАдресСервераАналитики(АдресСервера)
	
	Возврат Обработки.НастройкаИнтеграцииС1САналитикой.УстановитьАдресСервера(АдресСервера);
	
КонецФункции

&НаКлиенте
Процедура ОповеститьОНедоступностиСервера()
	
	СообщениеОбОшибке = НСтр("ru = 'Сервер 1С:Аналитика не обнаружен.'");

	Если ЗначениеЗаполнено(АдресСервера) Тогда
		СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Сервер 1С:Аналитика по адресу ""%1"" не обнаружен.'"), АдресСервера);
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Поставляемые панели 1С:Аналитика'"),,
		СообщениеОбОшибке,
		БиблиотекаКартинок.ДиалогВосклицание);
	
КонецПроцедуры

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным, ПеречитыватьФорму = Истина)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	МассивЧастейРеквизитПутьКДанным = СтрРазделить(РеквизитПутьКДанным, ".");
	КонстантаИмя = "";
	Если МассивЧастейРеквизитПутьКДанным.Количество() = 2
			И НРег(МассивЧастейРеквизитПутьКДанным[0]) = НРег("НаборКонстант") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = МассивЧастейРеквизитПутьКДанным[1];
	КонецЕсли;
	
	// Сохранение значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Функция СоставНабораКонстант(Набор)
	
	Результат = Новый Структура;
		
	Для Каждого МетаКонстанта Из Метаданные.Константы Цикл
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Набор, МетаКонстанта.Имя) Тогда
			Результат.Вставить(МетаКонстанта.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура АдресСервераПриИзмененииНаСервере()
	СерверСистемыАналитикиДоступен = ПроверитьДоступностьСервераАналитикиАдресу(АдресСервера);
	Элементы.ГруппаСистемаАналитикиНедоступна.Видимость = Не СерверСистемыАналитикиДоступен;
	Элементы.УстановитьАдрес.Доступность = СерверСистемыАналитикиДоступен И АдресСервера <> АдресСервераСохраненный;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьДоступностьСервераАналитикиАдресу(АдресСервера)
	
	Возврат Обработки.НастройкаИнтеграцииС1САналитикой.ПроверитьДоступностьСервераАналитикиАдресу(АдресСервера);
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если ДополнительныеПараметры = "ПустойАдрес" Тогда
			НаборКонстант.ИспользоватьИнтеграциюС1САналитикой = Ложь;
			Элемент = Элементы.ИспользоватьИнтеграциюС1САналитика;
			ПриИзмененииРеквизита(Элемент);
			ОчиститьАдресСервер();
		ИначеЕсли ДополнительныеПараметры = "АдресИзменен" Тогда
			СерверСистемыАналитикиДоступен = УстановитьАдресСервераАналитики(АдресСервера);
			УстановитьВидимостьНедоступностиСервера1САналитики(ЭтотОбъект);
			Если Не СерверСистемыАналитикиДоступен Тогда
				ОповеститьОНедоступностиСервера();
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ОбновитьИнтерфейсПрограммы();
		
		МожноЗакрытьФорму = Истина;
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		
		Если ДополнительныеПараметры = "АдресИзменен" Тогда
			
			МожноЗакрытьФорму = Истина;
			Закрыть();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияВыключенияИнтеграции(Ответ, ДополнительныйПараметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		АдресСервера = "";
		ОчиститьАдресСервер();
		ПриИзмененииРеквизита(ДополнительныйПараметры);
	Иначе 
		НаборКонстант.ИспользоватьИнтеграциюС1САналитикой = Не НаборКонстант.ИспользоватьИнтеграциюС1САналитикой;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьАдресСервер()
	Обработки.НастройкаИнтеграцииС1САналитикой.ОчиститьАдресСервера();
КонецПроцедуры

#КонецОбласти