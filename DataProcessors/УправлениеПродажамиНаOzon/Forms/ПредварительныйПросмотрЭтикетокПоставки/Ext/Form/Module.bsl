
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ПечатныеДокументы.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПечатьСразу = Параметры.ПечатьСразу;
	
	Для Каждого КлючЗначение Из Параметры.ПечатныеДокументы Цикл
		СтрокаТаблицыЗначений               = ОбъектыДляПечати.Добавить();
		СтрокаТаблицыЗначений.Пометка       = Ложь;
		СтрокаТаблицыЗначений.НомерПоставки = КлючЗначение.Ключ;
		СтрокаТаблицыЗначений.Адрес         = КлючЗначение.Значение;
		
		Если ЗначениеЗаполнено(СтрокаТаблицыЗначений.Адрес) 
				И ЭтоАдресВременногоХранилища(СтрокаТаблицыЗначений.Адрес) Тогда
			СтрокаТаблицыЗначений.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ОбъектыДляПечати.Сортировать("НомерПоставки");
	
	Если ОбъектыДляПечати.Количество() = 1 Тогда
		Элементы.ГруппаФлажки.Видимость     = Ложь;
		Элементы.ОбъектыДляПечати.Видимость = Ложь;
		
		ПоказатьДокумент(ОбъектыДляПечати[0].Адрес);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПечатьСразу Тогда
		Отказ = Истина;
		Печать();
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъектыДляПечати

&НаКлиенте
Процедура ОбъектыДляПечатиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьДокумент(ТекущиеДанные.Адрес);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПечать(Команда)
	
	Печать();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаТаблицыЗначений Из ОбъектыДляПечати Цикл
		СтрокаТаблицыЗначений.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаТаблицыЗначений Из ОбъектыДляПечати Цикл
		СтрокаТаблицыЗначений.Пометка = Ложь;
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПоказатьДокумент(Адрес)
	
	ПотокДанных = Новый ПотокВПамяти;
	
	Если ЗначениеЗаполнено(Адрес) 
			И ЭтоАдресВременногоХранилища(Адрес) Тогда
		Попытка
			ЗаписьДанных = Новый ЗаписьДанных(ПотокДанных);
			ЗаписьДанных.Записать(ПолучитьИзВременногоХранилища(Адрес));
			ЗаписьДанных.Закрыть();
		Исключение
			ПотокДанных = Новый ПотокВПамяти;
		КонецПопытки;
	КонецЕсли;
		
	ПредварительныйПросмотр.Прочитать(ПотокДанных);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура Печать()
	
	#Если ВебКлиент Тогда
		ТекстОшибки = НСтр("ru = 'Печать документов в Web-клиенте не доступна.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		
	#Иначе
		Для Каждого СтрокаТаблицыЗначений Из ОбъектыДляПечати Цикл
			Если СтрокаТаблицыЗначений.Пометка
					И ЗначениеЗаполнено(СтрокаТаблицыЗначений.Адрес) 
					И ЭтоАдресВременногоХранилища(СтрокаТаблицыЗначений.Адрес) Тогда
				Попытка
					ДокументPDF = Новый ДокументPDF;
					ПотокДанных = Новый ПотокВПамяти;
					
					ЗаписьДанных = Новый ЗаписьДанных(ПотокДанных);
					Ждать ЗаписьДанных.ЗаписатьАсинх(ПолучитьИзВременногоХранилища(СтрокаТаблицыЗначений.Адрес));
					Ждать ЗаписьДанных.ЗакрытьАсинх();
					
					ДокументPDF.Прочитать(ПотокДанных);
					ДокументPDF.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
					
				Исключение
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не удалось напечатать документ по номеру поставки %1 по причине %2'"), 
						СтрокаТаблицыЗначений.НомерПоставки,
						ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
						
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти
