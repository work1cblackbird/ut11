
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЗаполнитьЗначенияСвойств(Запись, Параметры);
	
	МенеджерЗаписи = РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.УчетнаяЗаписьМаркетплейса = Запись.УчетнаяЗаписьМаркетплейса;
	МенеджерЗаписи.ВидОбъектаМаркетплейса = Запись.ВидОбъектаМаркетплейса;
	МенеджерЗаписи.Номенклатура = Запись.Номенклатура;
	МенеджерЗаписи.Характеристика = Запись.Характеристика;
	МенеджерЗаписи.Упаковка = Запись.Упаковка;
	МенеджерЗаписи.ОбъектПубликации = Запись.ОбъектПубликации;
	МенеджерЗаписи.Прочитать();

	Если МенеджерЗаписи.Выбран() Тогда
		ЗаполнитьЗначенияСвойств(Запись, МенеджерЗаписи);
		СписокАтрибутовСертификата = МенеджерЗаписи.ДанныеОбъекта.Получить();
		Если СписокАтрибутовСертификата = Неопределено Тогда
			СписокАтрибутовСертификата = ЗаполнитьСписокАтрибутовСертификата(Запись);
		КонецЕсли;
	Иначе
		ЭтоНовый = Истина;
		Запись.НаименованиеОбъектаМаркетплейса  = Запись.ОбъектПубликации;
		Запись.ПредставлениеОбъектаМаркетплейса = Запись.НаименованиеОбъектаМаркетплейса;
		СписокАтрибутовСертификата = ЗаполнитьСписокАтрибутовСертификата(Запись);
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СписокАтрибутовСертификата);

	УстановитьЗаголовокФормы(ЭтоНовый);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "УстановленоСоответствиеТиповСертификатов" Тогда
		ПерезаполнитьТипСертификата();
	ИначеЕсли ИмяСобытия = "Запись_СертификатНоменклатуры" Или ИмяСобытия = "Запись_Файл" Тогда
		ПриСозданииНаСервере(Ложь, Истина);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипСертификатаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ВариантПолученияЗначений = "ТипыСертификатов";
	ОткрытьФормуВыбораЗначенияАтрибута(ВариантПолученияЗначений);

КонецПроцедуры

&НаКлиенте
Процедура ТипСоответствияТребованиямНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ВариантПолученияЗначений = "ТипыСоответствияТребованиям";
	ОткрытьФормуВыбораЗначенияАтрибута(ВариантПолученияЗначений);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрисоединенныеФайлы(Команда)

	ПараметрыФормы = Новый Структура("ВладелецФайла", Запись.ОбъектПубликации);
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточку(Команда)

	ПоказатьЗначение(, Запись.ОбъектПубликации);

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)

	ОчиститьСообщения();

	Отказ = Ложь;

	ШаблонОшибки = НСтр("ru = 'Поле <%1> не заполнено.'");
	ОбязательныеАтрибутыСертификата = ИнтеграцияСМаркетплейсомOzonКлиентСервер.ОбязательныеАтрибутыСертификата();

	Для Каждого Атрибут Из ОбязательныеАтрибутыСертификата Цикл
		ЭтоПериодДействия = Ложь;
		Если Атрибут.Ключ = "ДатаНачалаСрокаДействия" Тогда
			ЭтоПериодДействия = Истина;
			ОтказКэш = Отказ;
		КонецЕсли;

		СтруктураЗаписи = Новый Структура(Атрибут.Ключ);
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Запись, Атрибут.Ключ)
			И Не ЗначениеЗаполнено(Запись[Атрибут.Ключ]) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки,
					Атрибут.Значение),, "Запись." + Атрибут.Ключ,, Отказ);
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтотОбъект, Атрибут.Ключ)
			И Не ЗначениеЗаполнено(ЭтотОбъект[Атрибут.Ключ]) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки,
					Атрибут.Значение),, Атрибут.Ключ,, Отказ);
		КонецЕсли;

		Если ЭтоПериодДействия И Отказ Тогда
			Отказ = ОтказКэш;
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Необходимо заполнить значение в сертификате номенклатуры.'"));
		КонецЕсли;
	КонецЦикла;

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ЗаписатьИзмененияНаСервере();
	ЭтоНовый = Ложь;
	Оповестить("Запись_СертификатНоменклатурыOzon");
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура НастройкаСоответствияТиповСертификатов(Команда)

	ПараметрыФормы = Новый Структура("УчетнаяЗаписьМаркетплейса", Запись.УчетнаяЗаписьМаркетплейса);
	ОткрытьФорму("Обработка.УправлениеПродажамиНаOzon.Форма.СопоставлениеТиповСертификатов", ПараметрыФормы);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗаголовокФормы(ЭтоНовый)

	Если ЭтоНовый Тогда
		Элементы.ДекорацияПодсказка.Видимость = Истина;
		Заголовок = НСтр("ru = 'Данные по сертификату (создание)'");
	Иначе
		Элементы.ДекорацияПодсказка.Видимость = Ложь;
		Заголовок = НСтр("ru = 'Данные по сертификату'");
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьСписокАтрибутовСертификата(Запись)

	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("УчетнаяЗаписьМаркетплейса", Запись.УчетнаяЗаписьМаркетплейса);
	Запрос.Параметры.Вставить("Сертификат", Запись.ОбъектПубликации);
	Запрос.Параметры.Вставить("РасширенияИзображенийСертификатов", ИнтеграцияСМаркетплейсомOzonСервер.РасширенияИзображений(Истина));
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(СправСертификатыНоменклатуры.Ссылка) КАК НаименованиеСертификата,
		|	СправСертификатыНоменклатуры.Номер КАК НомерСертификата,
		|	СправСертификатыНоменклатуры.ДатаНачалаСрокаДействия КАК ДатаНачалаСрокаДействия,
		|	ВЫБОР
		|		КОГДА СправСертификатыНоменклатуры.Бессрочный
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ СправСертификатыНоменклатуры.ДатаОкончанияСрокаДействия
		|	КОНЕЦ КАК ДатаОкончанияСрокаДействия,
		|	СправСертификатыНоменклатуры.ТипСертификата КАК ТипСертификата1С,
		|	ЕСТЬNULL(СоответствияОбъектовМаркетплейсов.ИдентификаторОбъектаМаркетплейса, """") КАК ИдентификаторТипаСертификата,
		|	ЕСТЬNULL(СоответствияОбъектовМаркетплейсов.НаименованиеОбъектаМаркетплейса, """") КАК НаименованиеТипаСертификата,
		|	СправСертификатыНоменклатуры.СтатусРосаккредитации КАК СтатусРосаккредитации,
		|	СправСертификатыНоменклатуры.ДатаОбновленияСтатусаРосаккредитации КАК ДатаОбновленияСтатусаРосаккредитации
		|ИЗ
		|	Справочник.СертификатыНоменклатуры КАК СправСертификатыНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствияОбъектовМаркетплейсов КАК СоответствияОбъектовМаркетплейсов
		|		ПО (СоответствияОбъектовМаркетплейсов.УчетнаяЗаписьМаркетплейса = &УчетнаяЗаписьМаркетплейса)
		|			И (СоответствияОбъектовМаркетплейсов.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.ТипСертификата))
		|			И СправСертификатыНоменклатуры.ТипСертификата = СоответствияОбъектовМаркетплейсов.Объект1С
		|ГДЕ
		|	СправСертификатыНоменклатуры.Ссылка = &Сертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СправПрисоединенныеФайлы.Ссылка КАК ПрисоединенныйФайл
		|ИЗ
		|	Справочник.СертификатыНоменклатурыПрисоединенныеФайлы КАК СправПрисоединенныеФайлы
		|ГДЕ
		|	СправПрисоединенныеФайлы.ВладелецФайла = &Сертификат
		|	И НЕ СправПрисоединенныеФайлы.ПометкаУдаления
		|	И СправПрисоединенныеФайлы.Расширение В(&РасширенияИзображенийСертификатов)";

	ПакетЗапроса = Запрос.ВыполнитьПакет();

	СписокАтрибутовСертификата = ИнтеграцияСМаркетплейсомOzonСервер.НовыйСписокАтрибутовСертификата();

	ВыборкаДанныхСертификата = ПакетЗапроса[ПакетЗапроса.ВГраница() - 1].Выбрать();
	Если ВыборкаДанныхСертификата.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СписокАтрибутовСертификата, ВыборкаДанныхСертификата);
	КонецЕсли;

	ВыборкаПрисоединенныхФайлов = ПакетЗапроса[ПакетЗапроса.ВГраница()].Выбрать();
	Пока ВыборкаПрисоединенныхФайлов.Следующий() Цикл
		СписокАтрибутовСертификата.ПрисоединенныеФайлы.Добавить(ВыборкаПрисоединенныхФайлов.ПрисоединенныйФайл);
	КонецЦикла;

	Возврат СписокАтрибутовСертификата;

КонецФункции

&НаСервере
Процедура ПерезаполнитьТипСертификата()

	МенеджерЗаписи = РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.УчетнаяЗаписьМаркетплейса = Запись.УчетнаяЗаписьМаркетплейса;
	МенеджерЗаписи.ВидОбъектаМаркетплейса = Запись.ВидОбъектаМаркетплейса;
	МенеджерЗаписи.Номенклатура = Запись.Номенклатура;
	МенеджерЗаписи.Характеристика = Запись.Характеристика;
	МенеджерЗаписи.Упаковка = Запись.Упаковка;
	МенеджерЗаписи.ОбъектПубликации = Запись.ОбъектПубликации;
	МенеджерЗаписи.Прочитать();

	Если МенеджерЗаписи.Выбран() Тогда
		СписокАтрибутовСертификатаИзБазы = МенеджерЗаписи.ДанныеОбъекта.Получить();
		ЗаполнитьЗначенияСвойств(СписокАтрибутовСертификата, СписокАтрибутовСертификатаИзБазы, "ИдентификаторТипаСертификата, НаименованиеТипаСертификата");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СписокАтрибутовСертификата, "ИдентификаторТипаСертификата, НаименованиеТипаСертификата");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()

	Если Запись.Статус.Пустая() Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.ОбъектПубликации, "ПометкаУдаления, Статус, Бессрочный, ДатаОкончанияСрокаДействия");

		Если Реквизиты.ПометкаУдаления Или Реквизиты.Статус = Перечисления.СтатусыСертификатовНоменклатуры.Недействующий
			Или Не Реквизиты.Бессрочный И Реквизиты.ДатаОкончанияСрокаДействия < НачалоДня(ТекущаяДатаСеанса()) Тогда
			СтатусПубликации = Перечисления.СтатусыОбъектовМаркетплейсаOzon.НеИспользуется;
		Иначе
			СтатусПубликации = Перечисления.СтатусыОбъектовМаркетплейсаOzon.КПубликации;
		КонецЕсли;
	Иначе
		СтатусПубликации = Запись.Статус;
	КонецЕсли;

	Если ЭтоНовый И СтатусПубликации = Перечисления.СтатусыОбъектовМаркетплейсаOzon.НеИспользуется Тогда
		Возврат;
	КонецЕсли;

	КодОшибки = "";
	МассивОшибок = Новый Массив;

	Если СписокАтрибутовСертификата.Свойство("СтатусРосаккредитации")
		И СписокАтрибутовСертификата.Свойство("ДатаОбновленияСтатусаРосаккредитации") Тогда
		ДействительныеСтатусыРосаккредитации = НоменклатураКлиентСерверЛокализация.ДействительныеСтатусыРосаккредитации();
		СертификатДействует = НЕ ЗначениеЗаполнено(СписокАтрибутовСертификата.СтатусРосаккредитации)
			ИЛИ ДействительныеСтатусыРосаккредитации.Найти(СписокАтрибутовСертификата.СтатусРосаккредитации) <> Неопределено;

		Если НЕ СертификатДействует Тогда
			ТекстОшибки = ИнтеграцияСМаркетплейсомOzonСервер.ТекстОшибкиПроверкиСертификатаВРосаккредитации(СписокАтрибутовСертификата.СтатусРосаккредитации,
				СписокАтрибутовСертификата.ДатаОбновленияСтатусаРосаккредитации);
			МассивОшибок.Добавить(ТекстОшибки);
		КонецЕсли;
	КонецЕсли;

	Если СписокАтрибутовСертификата.ПрисоединенныеФайлы.Количество() = 0 Тогда
		КодОшибки = ИнтеграцияСМаркетплейсомOzonСервер.КодыОшибокРегистраСтатусовПубликацииТоваров().ОшибкаЗаполненияДанных;
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствуют присоединенные файлы требуемого формата: %1.'"),
			СтрСоединить(ИнтеграцияСМаркетплейсомOzonСервер.РасширенияИзображений(Истина), ", "));;
		МассивОшибок.Добавить(ТекстОшибки);
	КонецЕсли;

	ОписаниеОшибки = СтрСоединить(МассивОшибок, Символы.ПС);

	НачатьТранзакцию();
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon");
		ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗаписьМаркетплейса", Запись.УчетнаяЗаписьМаркетплейса);
		ЭлементБлокировкиДанных.УстановитьЗначение("ВидОбъектаМаркетплейса", Запись.ВидОбъектаМаркетплейса);
		ЭлементБлокировкиДанных.УстановитьЗначение("ОбъектПубликации", Запись.ОбъектПубликации);
		БлокировкаДанных.Заблокировать();

		НаборЗаписей = РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(Запись.УчетнаяЗаписьМаркетплейса);
		НаборЗаписей.Отбор.ВидОбъектаМаркетплейса.Установить(Запись.ВидОбъектаМаркетплейса);
		НаборЗаписей.Отбор.ОбъектПубликации.Установить(Запись.ОбъектПубликации);
		НаборЗаписей.Прочитать();

		ДобавитьЗапись = Истина;
		Для Каждого ЗаписьНабора Из НаборЗаписей Цикл
			ЗаписьНабора.ДанныеОбъекта = Новый ХранилищеЗначения(СписокАтрибутовСертификата);
			ЗаписьНабора.КодОшибки = КодОшибки;
			ЗаписьНабора.ОписаниеОшибки = ОписаниеОшибки;
			ЗаписьНабора.ДатаОбновления = ТекущаяДатаСеанса();
			ЗаписьНабора.Статус = СтатусПубликации;

			Если ЗаписьНабора.Номенклатура = Запись.Номенклатура И ЗаписьНабора.Характеристика = Запись.Характеристика
				И ЗаписьНабора.Упаковка = Запись.Упаковка Тогда
				ДобавитьЗапись = Ложь;
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, Запись,, "КодОшибки, ОписаниеОшибки, ДатаОбновления, Статус");
			КонецЕсли;
		КонецЦикла;

		Если ДобавитьЗапись Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Запись);
			НоваяЗапись.ДанныеОбъекта = Новый ХранилищеЗначения(СписокАтрибутовСертификата);
			НоваяЗапись.КодОшибки = КодОшибки;
			НоваяЗапись.ОписаниеОшибки = ОписаниеОшибки;
			НоваяЗапись.ДатаОбновления = ТекущаяДатаСеанса();
			НоваяЗапись.Статус = СтатусПубликации;
		КонецЕсли;

		НаборЗаписей.Записать();

		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();

		ЗаписьЖурналаРегистрации(ИнтеграцияСМаркетплейсомOzonСервер.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,,,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;

	УстановитьЗаголовокФормы(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораЗначенияАтрибута(ВариантПолученияЗначений)

	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("УчетнаяЗаписьМаркетплейса", Запись.УчетнаяЗаписьМаркетплейса);

	Если ВариантПолученияЗначений = "ТипыСертификатов" Тогда
		ПараметрыВыбора.Вставить("ВариантПолученияЗначений", ВариантПолученияЗначений);
		ПараметрыВыбора.Вставить("НаименованиеАтрибутаМаркетплейса", НСтр("ru = 'Тип сертификата'"));
		ПараметрыВыбора.Вставить("Описание", НСтр("ru = 'Выбор типа сертификата маркетплейса'"));
		ПараметрыВыбора.Вставить("ТекущееЗначениеАтрибута", НаименованиеТипаСертификата);
		ПараметрыВыбора.Вставить("ИдентификаторТекущегоЗначенияАтрибута", ИдентификаторТипаСертификата);
	Иначе // ВариантПолученияЗначений = "ТипыСоответствияТребованиям"
		ПараметрыВыбора.Вставить("ВариантПолученияЗначений", ВариантПолученияЗначений);
		ПараметрыВыбора.Вставить("НаименованиеАтрибутаМаркетплейса", НСтр("ru = 'Тип соответствия требованиям'"));
		ПараметрыВыбора.Вставить("Описание", НСтр("ru = 'Выбор типа соответствия требованиям сертификации маркетплейса'"));
		ПараметрыВыбора.Вставить("ТекущееЗначениеАтрибута", НаименованиеТипаСоответствияТребованиям);
		ПараметрыВыбора.Вставить("ИдентификаторТекущегоЗначенияАтрибута", ИдентификаторТипаСоответствияТребованиям);
	КонецЕсли;

	ДополнительныеПараметры = Новый Структура("ВариантПолученияЗначений", ВариантПолученияЗначений);
	ОбработчикВыбораЗначения = Новый ОписаниеОповещения("ВыборЗначенияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.УправлениеПродажамиНаOzon.Форма.ВыборЗначенияМаркетплейса",
			ПараметрыВыбора, ЭтотОбъект,,,, ОбработчикВыбораЗначения);

КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначенияЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	АдресХранилищаДоступныхЗначений = Результат.АдресХранилищаДоступныхЗначений;

	Если ДополнительныеПараметры.ВариантПолученияЗначений = "ТипыСертификатов" Тогда
		ИдентификаторТипаСертификата = Результат.ИдентификаторЗначенияАтрибута;
		НаименованиеТипаСертификата = Результат.ЗначениеАтрибута;
		
		СписокАтрибутовСертификата.Вставить("ИдентификаторТипаСертификата", ИдентификаторТипаСертификата);
		СписокАтрибутовСертификата.Вставить("НаименованиеТипаСертификата", НаименованиеТипаСертификата);
	Иначе
		ИдентификаторТипаСоответствияТребованиям = Результат.ИдентификаторЗначенияАтрибута;
		НаименованиеТипаСоответствияТребованиям = Результат.ЗначениеАтрибута;

		СписокАтрибутовСертификата.Вставить("ИдентификаторТипаСоответствияТребованиям", ИдентификаторТипаСоответствияТребованиям);
		СписокАтрибутовСертификата.Вставить("НаименованиеТипаСоответствияТребованиям", НаименованиеТипаСоответствияТребованиям);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
