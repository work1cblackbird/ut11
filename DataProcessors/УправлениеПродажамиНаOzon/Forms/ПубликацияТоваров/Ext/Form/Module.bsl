
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УчетнаяЗаписьМаркетплейса = Параметры.УчетнаяЗаписьМаркетплейса;
	
	Если Не ЗначениеЗаполнено(УчетнаяЗаписьМаркетплейса) Тогда
		УчетнаяЗаписьМаркетплейса = Справочники.УчетныеЗаписиМаркетплейсов.ОсновнаяУчетнаяЗапись(ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.МаркетплейсOzon"));
	КонецЕсли;

	ОбновлениеДанныхРазрешено = ИнтеграцияСМаркетплейсомOzonВызовСервера.ОбновленияДанныхТорговойПлощадкиРазрешено(УчетнаяЗаписьМаркетплейса);

	ИнициализироватьПараметрыОтображенияОстатковЦен();
	УстановитьПараметрыСпискаТоваров();
	ОбновитьКнопкуОтбораПоСтатусу(Команды.ПоказатьВсе.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьДоступностьВидимостьЭлементов();
	ОбновитьСтатистикуТоваров();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)

	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровВДокументПродажи.Форма.Форма" Тогда	// Подобрать
		ОбработкаВыбораПодборДлительнаяОперация(ВыбранноеЗначение);

	ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.УправлениеПродажамиНаOzon.Форма.НастройкаОтображенияОстатков" Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
			ПараметрыОтображенияОстатковЦен = Новый Структура;
			ПараметрыОтображенияОстатковЦенПеременная = ВыбранноеЗначение.ПараметрыОтображенияОстатковЦен;
			Для Каждого КлючЗначение Из ПараметрыОтображенияОстатковЦенПеременная Цикл
				Если ТипЗнч(КлючЗначение.Значение) = Тип("Массив") Тогда
					ПараметрыОтображенияОстатковЦен.Вставить(КлючЗначение.Ключ, ОбщегоНазначенияКлиент.СкопироватьРекурсивно(КлючЗначение.Значение));
				ИначеЕсли ПараметрыОтображенияОстатковЦен.Свойство(КлючЗначение.Ключ) Тогда
					ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыОтображенияОстатковЦен[КлючЗначение.Ключ], КлючЗначение.Значение, Истина);
				Иначе
					ПараметрыОтображенияОстатковЦен.Вставить(КлючЗначение.Ключ, ОбщегоНазначенияКлиент.СкопироватьРекурсивно(КлючЗначение.Значение));
				КонецЕсли;
			КонецЦикла;

			УстановитьПараметрыСпискаТоваров();
			УстановитьВидимостьКолонокЦеныОстатки();
		КонецЕсли;

	ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровПоОтбору.Форма.Форма" Тогда	// Добавить по отбору
		ОбработкаВыбораПодборДлительнаяОперация(ВыбранноеЗначение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "УчетнаяЗаписьДеактивирована" Тогда
		Если Параметр = УчетнаяЗаписьМаркетплейса Тогда
			УчетнаяЗаписьМаркетплейса = ПредопределенноеЗначение("Справочник.УчетныеЗаписиМаркетплейсов.ПустаяСсылка");
			УчетнаяЗаписьПриИзменении(Неопределено);
		КонецЕсли;

	ИначеЕсли ИмяСобытия = "Запись_УчетныеЗаписиМаркетплейсов" Тогда
		Если Параметр = УчетнаяЗаписьМаркетплейса Тогда
			ОбновлениеДанныхРазрешено = ИнтеграцияСМаркетплейсомOzonВызовСервера.ОбновленияДанныхТорговойПлощадкиРазрешено(УчетнаяЗаписьМаркетплейса);
			УстановитьДоступностьВидимостьЭлементов();
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ИзмененаВалютаУчетнойЗаписиМаркетплейса" И Параметр.УчетнаяЗаписьМаркетплейса = УчетнаяЗаписьМаркетплейса Тогда
		ВалютаУчетнойЗаписи = Строка(Параметр.ВалютаУчета);
		ОбновитьИнформационноеПолеОстаткиЦены();
		Товары.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.НастройкиУчетнойЗаписи.Вставить("ВалютаУчета", Параметр.ВалютаУчета);
		ОбновитьДанныеСписка(Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	Если Не ЗавершениеРаботы Тогда
		СохранитьДанныеФормы();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УчетнаяЗаписьПриИзменении(Элемент)

	УчетнаяЗаписьПриИзмененииНаСервере();
	УстановитьДоступностьВидимостьЭлементов();
	ОбновитьСтатистикуТоваров();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)

	ОбновитьИнформационноеПолеОстаткиЦены();

	УстановитьДоступностьЭлементовДляСтатуса();

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТоварыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)

	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Обработка.УправлениеПродажамиНаOzon.Форма.ПубликацияТоваров.ДополнениеДанныхДинСпискаПоТоварам");

	ТекущаяДата = ТекущаяДатаСеанса();
	ТаблицаТоваров = ИнтеграцияСМаркетплейсомOzonСервер.СведенияОВыгруженныхДанных();

	Для Каждого КлючЗаписи Из Строки.ПолучитьКлючи() Цикл
		НоваяСтрока = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, КлючЗаписи);
	КонецЦикла;

	ПараметрыОтображенияОстатковЦен = Настройки.ДополнительныеСвойства.ПараметрыОтображенияОстатковЦен;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "";

	Если ПараметрыОтображенияОстатковЦен.ОстатокПоУчету.ОтображатьВТаблице
			Или ПараметрыОтображенияОстатковЦен.ОстатокПоУчету.ОтображатьВИнформационномПоле Тогда
		СопоставленныеСклады = ИнтеграцияСМаркетплейсамиСервер.ПолучитьСопоставленныеСклады(Настройки.ДополнительныеСвойства.УчетнаяЗаписьМаркетплейса, Ложь, Истина);
		Запрос.УстановитьПараметр("ТаблицаСкладов", СопоставленныеСклады);

		ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ВЫРАЗИТЬ(ТаблицаСкладов.Склад КАК Справочник.Склады) КАК Склад,
			|	ВЫРАЗИТЬ(ТаблицаСкладов.ИспользуетсяДляСхемыРаботыFBO КАК БУЛЕВО) КАК ИспользуетсяДляСхемыРаботыFBO,
			|	ВЫРАЗИТЬ(ТаблицаСкладов.ИспользуетсяДляСхемыРаботыFBS КАК БУЛЕВО) КАК ИспользуетсяДляСхемыРаботыFBS,
			|	ВЫРАЗИТЬ(ТаблицаСкладов.ИспользуетсяДляСхемыРаботыDBS КАК БУЛЕВО) КАК ИспользуетсяДляСхемыРаботыDBS
			|ПОМЕСТИТЬ СопоставленныеСклады
			|ИЗ
			|	&ТаблицаСкладов КАК ТаблицаСкладов
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СопоставленныеСклады.Склад КАК Склад,
			|	МАКСИМУМ(СопоставленныеСклады.ИспользуетсяДляСхемыРаботыFBO) КАК ИспользуетсяДляСхемыРаботыFBO,
			|	МАКСИМУМ(СопоставленныеСклады.ИспользуетсяДляСхемыРаботыFBS) КАК ИспользуетсяДляСхемыРаботыFBS,
			|	МАКСИМУМ(СопоставленныеСклады.ИспользуетсяДляСхемыРаботыDBS) КАК ИспользуетсяДляСхемыРаботыDBS
			|ПОМЕСТИТЬ ТаблицаСкладов
			|ИЗ
			|	СопоставленныеСклады КАК СопоставленныеСклады
			|СГРУППИРОВАТЬ ПО
			|	СопоставленныеСклады.Склад
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ СопоставленныеСклады" 
			
			+ ОбщегоНазначения.РазделительПакетаЗапросов();
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаТоваров.УчетнаяЗаписьМаркетплейса КАК Справочник.УчетныеЗаписиМаркетплейсов) КАК УчетнаяЗаписьМаркетплейса,
		|	ВЫРАЗИТЬ(ТаблицаТоваров.ВидОбъектаМаркетплейса КАК Перечисление.ВидыОбъектовМаркетплейсов) КАК ВидОбъектаМаркетплейса,
		|	ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ВЫРАЗИТЬ(ТаблицаТоваров.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
		|	ВЫРАЗИТЬ(ТаблицаТоваров.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения) КАК Упаковка
		|ПОМЕСТИТЬ ТоварыБезЦен
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Упаковка КАК Упаковка,
		|	ВидыЦен.Ссылка КАК ВидЦены,
		|	&РеквизитОстатка КАК ОстатокПоУчету,
		|	&ПоляДляЦенообразованияВыборка
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	ТоварыБезЦен КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЦен КАК ВидыЦен
		|		ПО ВидыЦен.Ссылка В (&ВидыЦен)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВидыНоменклатуры.Ссылка = ТаблицаТоваров.Номенклатура.ВидНоменклатуры)
		|		&ТаблицаОстатка
		|	ИНДЕКСИРОВАТЬ ПО
		|		&ПоляДляИндексирования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЦеныНоменклатуры.*
		|ПОМЕСТИТЬ ЦеныТоваров
		|	ИЗ
		|		&ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|	ИНДЕКСИРОВАТЬ ПО
		|		&ПоляДляИндексирования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Упаковка КАК Упаковка,
		|	ТаблицаТоваров.ОстатокПоУчету КАК ОстатокПоУчету,
		|	&РеквизитыЗапроса
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныТоваров КАК ТоварыСЦенами
		|		ПО &УсловиеСоединенияЦеныНоменклатуры
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Характеристика,
		|	ТаблицаТоваров.Упаковка,
		|	ТаблицаТоваров.ОстатокПоУчету";

	НастройкаЦенообразования = ЦенообразованиеКлиентСервер.НастройкиДляВременнойТаблицыСДополнениемДляЦенообразования();
	НастройкаЦенообразования.ИсточникТоваров = "ТаблицаТоваров";
	НастройкаЦенообразования.ПриемникТоваров = "";
	НастройкаЦенообразования.ПолеСерия = "";

	ИспользуетсяЦенообразование25 = Настройки.ДополнительныеСвойства.ИспользуетсяЦенообразование25;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ПоляДляИндексирования",
		ЦенообразованиеКлиентСервер.ТекстЗапросаРегистрСведенийЦеныНоменклатурыИндексирование(ИспользуетсяЦенообразование25));

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ЦеныНоменклатуры",
		ЦенообразованиеКлиентСервер.ТекстЗапросаРегистрСведенийЦеныНоменклатуры("ТаблицаТоваров",
			"&ДатаЦен",
			Новый Структура("ВТаблице", "ВидЦены"),
			ИспользуетсяЦенообразование25));

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&УсловиеСоединенияЦеныНоменклатуры",
		ЦенообразованиеКлиентСервер.ТекстЗапросаРегистрСведенийЦеныНоменклатурыУсловиеСоединения(
		"ТаблицаТоваров",
		"ТоварыСЦенами",
		"ТаблицаТоваров.ВидЦены",
		ИспользуетсяЦенообразование25));

	ТекстЗамены = ЦенообразованиеКлиентСервер.ТекстПолейДляЦенообразования(НастройкаЦенообразования,,
			ИспользуетсяЦенообразование25);
	Если ЗначениеЗаполнено(ТекстЗамены) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляДляЦенообразованияВыборка", ТекстЗамены);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляДляЦенообразованияВыборка", "ИСТИНА");
	КонецЕсли;

	РеквизитыЗапроса = Новый Массив;
	НастройкиУчетнойЗаписи = Настройки.ДополнительныеСвойства.НастройкиУчетнойЗаписи;
	ВидыЦен = НастройкиУчетнойЗаписи.ВидыЦен;

	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("Запрос", Запрос);
	СтруктураПараметров.Вставить("РеквизитыЗапроса", РеквизитыЗапроса);
	СтруктураПараметров.Вставить("ПараметрыОтображенияОстатковЦен", ПараметрыОтображенияОстатковЦен);
	СтруктураПараметров.Вставить("НастройкиУчетнойЗаписи", НастройкиУчетнойЗаписи);

	МассивИменПолейЦен = Новый Массив;

	// Выгружаемые виды цен
	СтруктураПараметров.Вставить("ВидЦен", ВидыЦен.ВидЦеныСУчетомСкидок);
	СтруктураПараметров.Вставить("ИмяРеквизита", "ЦенаСоСкидкой");
	ДобавитьПолучениеЦеныВТекстЗапроса(СтруктураПараметров);
	МассивИменПолейЦен.Добавить(СтруктураПараметров.ИмяРеквизита);

	СтруктураПараметров.Вставить("ВидЦен", ВидыЦен.ВидЦеныДоСкидок);
	СтруктураПараметров.Вставить("ИмяРеквизита", "ЦенаДоСкидки");
	ДобавитьПолучениеЦеныВТекстЗапроса(СтруктураПараметров);
	МассивИменПолейЦен.Добавить(СтруктураПараметров.ИмяРеквизита);

	СтруктураПараметров.Вставить("ВидЦен", ВидыЦен.ВидЦеныМинимальныхЦен);
	СтруктураПараметров.Вставить("ИмяРеквизита", "МинимальнаяЦена");
	ДобавитьПолучениеЦеныВТекстЗапроса(СтруктураПараметров);
	МассивИменПолейЦен.Добавить(СтруктураПараметров.ИмяРеквизита);

	// Загружаемые виды цен
	СтруктураПараметров.Вставить("ВидЦен", ВидыЦен.ВидЦеныСАкциямиПродавца);
	СтруктураПараметров.Вставить("ИмяРеквизита", "ЦенаСУчетомАкцийПродавца");
	ДобавитьПолучениеЦеныВТекстЗапроса(СтруктураПараметров);
	МассивИменПолейЦен.Добавить(СтруктураПараметров.ИмяРеквизита);

	СтруктураПараметров.Вставить("ВидЦен", ВидыЦен.ВидЦеныСоВсемиАкциями);
	СтруктураПараметров.Вставить("ИмяРеквизита", "ЦенаСУчетомВсехАкций");
	ДобавитьПолучениеЦеныВТекстЗапроса(СтруктураПараметров);
	МассивИменПолейЦен.Добавить(СтруктураПараметров.ИмяРеквизита);

	СтруктураПараметров.Вставить("ВидЦен", ВидыЦен.ВидЦеныРекомендованный);
	СтруктураПараметров.Вставить("ИмяРеквизита", "РекомендованнаяЦена");
	ДобавитьПолучениеЦеныВТекстЗапроса(СтруктураПараметров);
	МассивИменПолейЦен.Добавить(СтруктураПараметров.ИмяРеквизита);

	СтруктураПараметров.Вставить("ВидЦен", ВидыЦен.ВидЦеныПоставщика);
	СтруктураПараметров.Вставить("ИмяРеквизита", "ЦенаПоставщика");
	ДобавитьПолучениеЦеныВТекстЗапроса(СтруктураПараметров);
	МассивИменПолейЦен.Добавить(СтруктураПараметров.ИмяРеквизита);

	// Остаток
	Если ПараметрыОтображенияОстатковЦен.ОстатокПоУчету.ОтображатьВТаблице
			Или ПараметрыОтображенияОстатковЦен.ОстатокПоУчету.ОтображатьВИнформационномПоле Тогда
		ТекстРеквизитаОстатка = 
			"СУММА(ВЫБОР
			|			КОГДА СтатусыПубликации.ПродаетсяПоСхемеРаботыFBO И ЕСТЬNULL(ТаблицаСкладов.ИспользуетсяДляСхемыРаботыFBO, ЛОЖЬ)
			|					ИЛИ СтатусыПубликации.ПродаетсяПоСхемеРаботыFBS И ЕСТЬNULL(ТаблицаСкладов.ИспользуетсяДляСхемыРаботыFBS, ЛОЖЬ)
			|					ИЛИ СтатусыПубликации.ПродаетсяПоСхемеРаботыDBS И ЕСТЬNULL(ТаблицаСкладов.ИспользуетсяДляСхемыРаботыDBS, ЛОЖЬ)
			|				ТОГДА ЕСТЬNULL(ИсточникОстатков.ВНаличииОстаток - ИсточникОстатков.РезервироватьНаСкладеОстаток - ИсточникОстатков.РезервироватьПоМереПоступленияОстаток, 0) 
			|						/ ВЫБОР
			|							КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 0
			|								ТОГДА 1
			|							ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
			|						КОНЕЦ
			|			ИНАЧЕ 0
			|		КОНЕЦ)";
		ТекстРеквизитаОстатка = СтрЗаменить(ТекстРеквизитаОстатка,
			"&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"(ВЫБОР
				|	КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
				|		ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
				|	ИНАЧЕ ТаблицаТоваров.Упаковка
				|КОНЕЦ)",
				"ТаблицаТоваров.Номенклатура"));
			
		ТекстТаблицыОстатка = "
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыИПотребности.Остатки(,
			|		(Номенклатура, Характеристика, Склад, Назначение) В(
			|			ВЫБРАТЬ РАЗЛИЧНЫЕ
			|				ТаблицаТоваров.Номенклатура КАК Номенклатура,
			|				ТаблицаТоваров.Характеристика КАК Характеристика,
			|				ТаблицаСкладов.Склад КАК Склад,
			|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
			|			ИЗ
			|				ТоварыБезЦен КАК ТаблицаТоваров
			|					ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСкладов КАК ТаблицаСкладов
			|					ПО (ИСТИНА))) КАК ИсточникОстатков
			|		ПО ИсточникОстатков.Номенклатура = ТаблицаТоваров.Номенклатура
			|			И ИсточникОстатков.Характеристика = ТаблицаТоваров.Характеристика
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon КАК СтатусыПубликации
			|		ПО ТаблицаТоваров.УчетнаяЗаписьМаркетплейса = СтатусыПубликации.УчетнаяЗаписьМаркетплейса
			|			И ТаблицаТоваров.ВидОбъектаМаркетплейса = СтатусыПубликации.ВидОбъектаМаркетплейса
			|			И ТаблицаТоваров.Номенклатура = СтатусыПубликации.Номенклатура
			|			И ТаблицаТоваров.Характеристика = СтатусыПубликации.Характеристика
			|			И ТаблицаТоваров.Упаковка = СтатусыПубликации.Упаковка
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСкладов КАК ТаблицаСкладов
			|		ПО ТаблицаСкладов.Склад = ИсточникОстатков.Склад
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТоваров.Номенклатура,
			|	ТаблицаТоваров.Характеристика,
			|	ТаблицаТоваров.Упаковка,
			|	&ГруппировкиДляЦенообразованияВыборка";

		ТекстЗамены = ЦенообразованиеКлиентСервер.ТекстПолейДляЦенообразования(НастройкаЦенообразования, Истина,
			ИспользуетсяЦенообразование25);
		Если ЗначениеЗаполнено(ТекстЗамены) Тогда
			ТекстЗамены = ТекстЗамены + ", ВидыЦен.Ссылка";
		Иначе
			ТекстЗамены = "ВидыЦен.Ссылка";
		КонецЕсли;
		
		ТекстТаблицыОстатка = СтрЗаменить(ТекстТаблицыОстатка, "&ГруппировкиДляЦенообразованияВыборка", ТекстЗамены);
	Иначе
		ТекстРеквизитаОстатка = "0";
		ТекстТаблицыОстатка = "";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РеквизитОстатка", ТекстРеквизитаОстатка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаОстатка", ТекстТаблицыОстатка);

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&РеквизитыЗапроса",
		СтрСоединить(РеквизитыЗапроса, "," + Символы.ПС));

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковкиЦены",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТоварыСЦенами.Упаковка",
			"ТоварыСЦенами.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковкиТовара",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));

	БазоваяВалюта = ЗначениеНастроекПовтИсп.БазоваяВалютаПоУмолчанию();

	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДатаЦен", ТекущаяДата);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	Запрос.УстановитьПараметр("БазоваяВалюта", БазоваяВалюта);
	Запрос.УстановитьПараметр("ВидыЦен", ИнтеграцияСМаркетплейсомOzonСервер.ИспользуемыеВидыЦен(Настройки.ДополнительныеСвойства.УчетнаяЗаписьМаркетплейса));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;

	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("УчетнаяЗаписьМаркетплейса", Настройки.ДополнительныеСвойства.УчетнаяЗаписьМаркетплейса);
	СтруктураОтбора.Вставить("ВидОбъектаМаркетплейса", ПредопределенноеЗначение("Перечисление.ВидыОбъектовМаркетплейсов.Товар"));
	СтруктураОтбора.Вставить("Номенклатура");
	СтруктураОтбора.Вставить("Характеристика");
	СтруктураОтбора.Вставить("Упаковка");
	СтруктураОтбора.Вставить("ОбъектПубликации", Неопределено);

	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураОтбора.Номенклатура = Выборка.Номенклатура;
		СтруктураОтбора.Характеристика = Выборка.Характеристика;
		СтруктураОтбора.Упаковка = Выборка.Упаковка;
		КлючЗаписи = РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.СоздатьКлючЗаписи(СтруктураОтбора);
		ДанныеСтрокиСписка = Строки[КлючЗаписи].Данные;

		Для Каждого ИмяПоляЦены Из МассивИменПолейЦен Цикл
			ДанныеСтрокиСписка[ИмяПоляЦены] = РаботаСКурсамиВалютУТ.ПересчитатьВВалюту(Выборка[ИмяПоляЦены], БазоваяВалюта,
					Выборка[ИмяПоляЦены + "Валюта"], НастройкиУчетнойЗаписи.ВалютаУчета, ТекущаяДата);
		КонецЦикла;

		ДанныеСтрокиСписка.ОстатокПоУчету = Выборка.ОстатокПоУчету;
	КонецЦикла;

	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ТаблицаТоваров.Количество());

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = Истина;

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);

	ОткрытьФорму("РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.Форма.ФормаЗаписи", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)

	Отказ = Истина;
	
	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.Товары.ВыделенныеСтроки.Количество() = 1 Тогда
		ТекстВопроса = НСтр("ru = 'Удалить выбранный товар?'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Удалить выбранные товары?'");
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("УдалитьТоварЗавершение", ЭтотОбъект,);
	ПоказатьВопрос(ОповещениеОЗавершении, 
		ТекстВопроса, 
		РежимДиалогаВопрос.ДаНет, 
		, 
		КодВозвратаДиалога.Нет, 
		НСтр("ru = 'Публикация товаров'"), 
		КодВозвратаДиалога.Нет);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТоварыСОшибками

&НаКлиенте
Процедура ТоварыСОшибкамиПриАктивизацииСтроки(Элемент)

	ТекущиеДанные = Элементы.ТоварыСОшибками.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УчетнаяЗаписьВыбрана = Не УчетнаяЗаписьМаркетплейса.Пустая();
	
	Элементы.ТоварыСОшибкамиИзменитьТовар.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ТоварыСОшибкамиУдалитьТовар.Доступность = УчетнаяЗаписьВыбрана И ТекущиеДанные.ДоступноУдаление;
	Элементы.ТоварыСОшибкамиКонтекстноеМенюУдалить.Доступность = УчетнаяЗаписьВыбрана И ТекущиеДанные.ДоступноУдаление;
	Элементы.ТоварыСОшибкамиОтправитьНаМодерацию.Доступность = УчетнаяЗаписьВыбрана И ОбновлениеДанныхРазрешено;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСОшибкамиПередУдалением(Элемент, Отказ)

	Отказ = Истина;
	
	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.Товары.ВыделенныеСтроки.Количество() = 1 Тогда
		ТекстВопроса = НСтр("ru = 'Удалить выбранный товар?'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Удалить выбранные товары?'");
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("УдалитьТоварЗавершение", ЭтотОбъект,);
	ПоказатьВопрос(ОповещениеОЗавершении, 
		ТекстВопроса, 
		РежимДиалогаВопрос.ДаНет, 
		, 
		КодВозвратаДиалога.Нет, 
		НСтр("ru = 'Публикация товаров'"), 
		КодВозвратаДиалога.Нет);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьТовар(Команда)

	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.Форма.ФормаЗаписи.ОткрытиеФормы");

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);

	ОткрытьФорму("РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.Форма.ФормаЗаписи", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСсылкеНаТовар(Команда)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Или ПустаяСтрока(ТекущиеДанные.SKU) Тогда
		Возврат;
	КонецЕсли;

	НавигационнаяСсылка = ИнтеграцияСМаркетплейсомOzonКлиентСервер.НавигационнаяСсылкаНаТовар(ТекущиеДанные.SKU);
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(НавигационнаяСсылка);

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаМодерацию(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	ОтправитьНаМодерациюВФоне(Элементы.Товары.ВыделенныеСтроки);

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаМодерациюТоварыСОшибками(Команда)
	
	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();
	ОтправитьНаМодерациюВФоне(Элементы.ТоварыСОшибками.ВыделенныеСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = Ложь;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;

	НастройкиУчетнойЗаписи = ИнтеграцияСМаркетплейсомOzonВызовСервера.НастройкиУчетнойЗаписи(УчетнаяЗаписьМаркетплейса);
	ВалютаРУ = ЗначениеНастроекКлиентСерверПовтИсп.ВалютаРегламентированногоУчетаОрганизации(НастройкиУчетнойЗаписи.Организация);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация",                         НастройкиУчетнойЗаписи.Организация);
	ПараметрыФормы.Вставить("ЦенаВключаетНДС",                     Истина);
	ПараметрыФормы.Вставить("ВозвращатьМногооборотнуюТару",        Ложь);
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры",             Новый ФиксированныйМассив(ИнтеграцияСМаркетплейсомOzonКлиентСервер.ОтборПоНоменклатуре()));
	ПараметрыФормы.Вставить("СкрыватьРучныеСкидки",                Истина);
	ПараметрыФормы.Вставить("СкрыватьКнопкуЗапрашиватьКоличество", Истина);
	ПараметрыФормы.Вставить("ОстаткиПоВсемСкладам",                Истина);
	ПараметрыФормы.Вставить("ИспользоватьДатыОтгрузки",            Ложь);
	ПараметрыФормы.Вставить("Валюта",                              ВалютаРУ);
	ПараметрыФормы.Вставить("Заголовок",                           НСтр("ru = 'Публикация товаров на Ozon'"));
	ПараметрыФормы.Вставить("ЗаголовокКнопкиПеренести",            НСтр("ru = 'Перенести для публикации'"));
	ПараметрыФормы.Вставить("Дата",                                ОбщегоНазначенияКлиент.ДатаСеанса());
	ПараметрыФормы.Вставить("Документ",                            ПредопределенноеЗначение("Документ.УстановкаЦенНоменклатуры.ПустаяСсылка"));
	ПараметрыФормы.Вставить("ПараметрыУказанияСерий",              ПараметрыУказанияСерий);
	ПараметрыФормы.Вставить("ПодборВариантовОбеспечения",          Ложь);
	ПараметрыФормы.Вставить("ВидЦены",                             НастройкиУчетнойЗаписи.ВидыЦен.ВидЦеныСУчетомСкидок);
	ПараметрыФормы.Вставить("РежимПодбораБезСоглашенийСКлиентами", Истина);
	ПараметрыФормы.Вставить("РежимПодбораБезКоличественныхПараметров", Истина);
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров",   Истина);
	ПараметрыФормы.Вставить("НеРазбиватьНаборыПоКомплектующим",    Истина);
	ПараметрыФормы.Вставить("УчетнаяЗаписьМаркетплейса",           УчетнаяЗаписьМаркетплейса);

	ОткрытьФорму("Обработка.ПодборТоваровВДокументПродажи.Форма", ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеКатегорий(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);
	ОткрытьФорму("Обработка.УправлениеПродажамиНаOzon.Форма.СопоставлениеКатегорий", ПараметрыФормы);
	Оповестить("ОткрытиеФормыСопоставленияКатегорий", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОстатки(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	ПоказатьОповещениеПользователя(НСтр("ru = 'Выгрузка остатков'"),, НСтр("ru = 'Запущена фоновая выгрузка остатков товаров на маркетплейс.'"));

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	ДополнительныеПараметры = ИнтеграцияСМаркетплейсомOzonКлиент.НовоеОписаниеПараметровДействия();
	ДополнительныеПараметры.ОписаниеДействия = НСтр("ru = 'Выгрузка остатков'");
	ДополнительныеПараметры.УспешныйРезультат = НСтр("ru = 'Завершена выгрузка остатков товаров на маркетплейс'");
	ДополнительныеПараметры.РезультатСОшибками = НСтр("ru = 'При выгрузке остатков товаров на маркетплейс возникли ошибки'");

	ДлительнаяОперация = ВыгрузитьОстаткиНаСервере(УчетнаяЗаписьМаркетплейса, Элементы.Товары.ВыделенныеСтроки, УникальныйИдентификатор);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЦены(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	ПоказатьОповещениеПользователя(НСтр("ru = 'Выгрузка цен'"),, НСтр("ru = 'Запущена фоновая выгрузка цен товаров на маркетплейс.'"));

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	ДополнительныеПараметры = ИнтеграцияСМаркетплейсомOzonКлиент.НовоеОписаниеПараметровДействия();
	ДополнительныеПараметры.ОписаниеДействия = НСтр("ru = 'Выгрузка цен'");
	ДополнительныеПараметры.УспешныйРезультат = НСтр("ru = 'Завершена выгрузка цен товаров на маркетплейс'");
	ДополнительныеПараметры.РезультатСОшибками = НСтр("ru = 'При выгрузке цен товаров на маркетплейс возникли ошибки'");

	ДлительнаяОперация = ВыгрузитьЦеныНаСервере(УчетнаяЗаписьМаркетплейса, Элементы.Товары.ВыделенныеСтроки, УникальныйИдентификатор);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОстатки(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка остатков'"),, НСтр("ru = 'Запущена фоновая загрузка остатков товаров с маркетплейса.'"));

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	ДополнительныеПараметры = ИнтеграцияСМаркетплейсомOzonКлиент.НовоеОписаниеПараметровДействия();
	ДополнительныеПараметры.ОписаниеДействия = НСтр("ru = 'Загрузка остатков'");
	ДополнительныеПараметры.УспешныйРезультат = НСтр("ru = 'Завершена загрузка остатков товаров с маркетплейса'");
	ДополнительныеПараметры.РезультатСОшибками = НСтр("ru = 'При загрузке остатков товаров с маркетплейса возникли ошибки'");

	ДлительнаяОперация = ЗагрузитьОстаткиНаСервере(УчетнаяЗаписьМаркетплейса, Элементы.Товары.ВыделенныеСтроки, УникальныйИдентификатор);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЦены(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка цен'"),, НСтр("ru = 'Запущена фоновая загрузка цен товаров с маркетплейса.'"));

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Загрузка цен'");
	ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Завершена фоновая загрузка цен товаров с маркетплейса.'");

	ДлительнаяОперация = ЗагрузитьЦеныНаСервере(УчетнаяЗаписьМаркетплейса, Элементы.Товары.ВыделенныеСтроки);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Неопределено, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбновлениеТоварногоКаталога(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	ПоказатьОповещениеПользователя(НСтр("ru = 'Обновление товарного каталога'"),, НСтр("ru = 'Запущено фоновое обновление товарного каталога.'"));

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Обновление товарного каталога'");
	ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Завершено фоновое обновление товарного каталога.'");

	ДлительнаяОперация = ВыполнитьОбновлениеТоварногоКаталогаНаСервере(УчетнаяЗаписьМаркетплейса);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Неопределено, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьИнформационнуюПанель(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();
	ПараметрыФормы = Новый Структура("УчетнаяЗаписьМаркетплейса, ПараметрыОтображенияОстатковЦен", УчетнаяЗаписьМаркетплейса, ПараметрыОтображенияОстатковЦен);
	ОткрытьФорму("Обработка.УправлениеПродажамиНаOzon.Форма.НастройкаОтображенияОстатков", ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибок(Команда)

	ПриАктивацииГиперСсылкиНаПанели("КнопкаИсправлениеОшибок");
	Элементы.ПодсказкаПросмотрИРедактированиеТоваров.Видимость = Ложь;
	Элементы.ПодсказкаИсправлениеОшибок.Видимость = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПросмотрИРедактированиеТоваров(Команда)

	ПриАктивацииГиперСсылкиНаПанели("КнопкаПросмотрИРедактированиеТоваров");
	Элементы.ПодсказкаПросмотрИРедактированиеТоваров.Видимость = Истина;
	Элементы.ПодсказкаИсправлениеОшибок.Видимость = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоОтбору(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("УникальныйИдентификатор",		 УникальныйИдентификатор);
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры",		 Новый ФиксированныйМассив(ИнтеграцияСМаркетплейсомOzonКлиентСервер.ОтборПоНоменклатуре()));
	ПараметрыФормы.Вставить("ПодбиратьНоменклатуруПартнера", Ложь);
	ПараметрыФормы.Вставить("ИспользуетсяЦенообразование25", ЦенообразованиеКлиент.ИспользуетсяЦенообразование25(ОбщегоНазначенияКлиент.ДатаСеанса()));
	ПараметрыФормы.Вставить("Заголовок",					 НСтр("ru = 'Публикация товаров на Ozon'"));
	ПараметрыФормы.Вставить("ЗаголовокКнопкиПеренести",		 НСтр("ru = 'Перенести для публикации'"));
	ПараметрыФормы.Вставить("РежимВыбора",					 Истина);
	ПараметрыФормы.Вставить("УчетнаяЗаписьМаркетплейса",	 УчетнаяЗаписьМаркетплейса);

	ОткрытьФорму("Обработка.ПодборТоваровПоОтбору.Форма.Форма", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруГотовы(Команда)

	УстановитьОтборТоваровПоМаркеру("МаркерСтатуса", 3, Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруОшибка(Команда)

	УстановитьОтборТоваровПоМаркеру("МаркерСтатуса", 0, Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруВПроцессе(Команда)

	УстановитьОтборТоваровПоМаркеру("МаркерСтатуса", 1, Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруВАрхиве(Команда)

	УстановитьОтборТоваровПоМаркеру("МаркерСтатуса", 2, Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруИзмененыРеквизиты(Команда)

	УстановитьОтборТоваровПоМаркеру("ИзмененыРеквизиты", Истина, Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)

	УстановитьОтборТоваровПоМаркеру("", "", Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВАрхив(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПеренестиВАрхивЗавершение", ЭтотОбъект,);
	ПоказатьВопрос(ОповещениеОЗавершении, 
		НСтр("ru = 'После отправки товаров в архив их возврат возможен только из личного кабинета. Продолжить?'"), 
		РежимДиалогаВопрос.ДаНет, 
		, 
		КодВозвратаДиалога.Нет, 
		НСтр("ru = 'Публикация товаров'"), 
		КодВозвратаДиалога.Нет);

КонецПроцедуры

&НаКлиенте
Процедура ВернутьИзАрхива(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	ДополнительныеПараметры = ИнтеграцияСМаркетплейсомOzonКлиент.НовоеОписаниеПараметровДействия();
	ДополнительныеПараметры.ОписаниеДействия = НСтр("ru = 'Возврат из архива'");
	ДополнительныеПараметры.УспешныйРезультат = НСтр("ru = 'Товар возвращен из архива'");
	ДополнительныеПараметры.РезультатСОшибками = НСтр("ru = 'При возврате товаров из архива возникли ошибки'");

	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтотОбъект, ДополнительныеПараметры);
	ДлительнаяОперация = ВернутьИзАрхиваНаСервере(УчетнаяЗаписьМаркетплейса, Элементы.Товары.ВыделенныеСтроки, УникальныйИдентификатор);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКУстановкеЦен(Команда)

	ПараметрыОткрытияФормы = ПараметрыОткрытияПрайсЛиста(УчетнаяЗаписьМаркетплейса, Элементы.Товары.ВыделенныеСтроки);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтотОбъект);
	ОткрытьФорму("Обработка.ПрайсЛист.Форма", ПараметрыОткрытияФормы, ЭтотОбъект,,,, ОповещениеОЗавершении);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеСписка(Команда)

	Элементы.Товары.Обновить();
	ОбновитьСтатистикуТоваров();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатистику(Команда)

	ОбновитьСтатистикуТоваров();

КонецПроцедуры

&НаКлиенте
Процедура ИмпортироватьДанныеТоваровСТорговойПлощадки(Команда)

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Возврат;
	КонецЕсли;

	ДанныеВыделенныхСтрок = Элементы.Товары.ВыделенныеСтроки;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);
	ПараметрыФормы.Вставить("ВариантЗагрузкиДанных",     0);
	ПараметрыФормы.Вставить("ЗагрузитьЦеныПродажи",      Истина);
	ПараметрыФормы.Вставить("ЗагрузитьИзображения",      Истина);
	ПараметрыФормы.Вставить("ДанныеВыделенныхСтрок",     ДанныеВыделенныхСтрок);
	
	ОткрытьФорму("Обработка.УправлениеПродажамиНаOzon.Форма.ИмпортДанныхТоваровСТорговойПлощадки", ПараметрыФормы,, УчетнаяЗаписьМаркетплейса.УникальныйИдентификатор());

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриАктивацииГиперСсылкиНаПанели(ИмяАктивнойКнопки)

	МассивИменКнопокПанели = Новый Массив;
	МассивИменКнопокПанели.Добавить("КнопкаПросмотрИРедактированиеТоваров");
	МассивИменКнопокПанели.Добавить("КнопкаИсправлениеОшибок");

	Для Каждого ЭлементМассива Из МассивИменКнопокПанели Цикл
		Если ЭлементМассива = ИмяАктивнойКнопки Тогда
			Элементы[ЭлементМассива].ЦветТекста = ЦветаСтиля.ЦветРамки;
		Иначе
			Элементы[ЭлементМассива].ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
		КонецЕсли;
	КонецЦикла;

	ИмяСтраницы = СтрЗаменить(ИмяАктивнойКнопки, "Кнопка", "Страница");
	Элементы.Страницы.ТекущаяСтраница = Элементы[ИмяСтраницы];

КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПараметрыОтображенияОстатковЦен()

	ПараметрыОтображенияОстатковЦен = ИнтеграцияСМаркетплейсомOzonСервер.НовыеПараметрыОтображенияОстатковЦен(УчетнаяЗаписьМаркетплейса);
	ПараметрыОтображенияОстатковЦенПеременная = ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить(ИмяФормы,
		"ПараметрыОтображенияОстатковЦен", ПараметрыОтображенияОстатковЦен);
	Для Каждого КлючЗначение Из ПараметрыОтображенияОстатковЦенПеременная Цикл
		Если ТипЗнч(КлючЗначение.Значение) = Тип("Массив") Тогда
			ПараметрыОтображенияОстатковЦен.Вставить(КлючЗначение.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(КлючЗначение.Значение));
		ИначеЕсли ПараметрыОтображенияОстатковЦен.Свойство(КлючЗначение.Ключ) Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыОтображенияОстатковЦен[КлючЗначение.Ключ], КлючЗначение.Значение, Истина);
		Иначе		
			ПараметрыОтображенияОстатковЦен.Вставить(КлючЗначение.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(КлючЗначение.Значение));
		КонецЕсли;
	КонецЦикла;

	СтрокаПолей = "ОстатокПоУчету,ОстатокНаOzon,ОстатокFBO,ОстатокFBS,ЦенаСоСкидкой,ЦенаДоСкидки,МинимальнаяЦена,ЦенаСУчетомАкцийПродавца,ЦенаСУчетомВсехАкций,РекомендованнаяЦена,ЦенаПоставщика";
	СписокПолей = СтрРазделить(СтрокаПолей, ",");
	Для Каждого ЭлементКоллекции Из СписокПолей Цикл
		ПолеНабораДанных = Товары.Поля.Найти(ЭлементКоллекции);
		Если ПолеНабораДанных <> Неопределено Тогда
			ПолеНабораДанных.ОграничениеИспользования.Группировка = Истина;
			ПолеНабораДанных.ОграничениеИспользования.Порядок = Истина;
			ПолеНабораДанных.ОграничениеИспользования.Условие = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКолонокЦеныОстатки()

	// Управление содержанием информационных надписей

	ОбновитьИнформационноеПолеОстаткиЦены();

	// Управление списком колонок таблицы товаров

	ВыводитьОстатокПоУчету = ПараметрыОтображенияОстатковЦен.ОстатокПоУчету.ОтображатьВТаблице;
	ВыводитьОстатокНаOzon = ПараметрыОтображенияОстатковЦен.ОстатокНаOzon.ОтображатьВТаблице;
	ВыводитьОстатокFBO = ПараметрыОтображенияОстатковЦен.ОстатокFBO.ОтображатьВТаблице;
	ВыводитьОстатокFBS = ПараметрыОтображенияОстатковЦен.ОстатокFBS.ОтображатьВТаблице;

	Элементы.ТоварыОстатокПоУчету.Видимость = ВыводитьОстатокПоУчету;
	Элементы.ТоварыОстатокНаOzon.Видимость = ВыводитьОстатокНаOzon;
	Элементы.ТоварыРезервОбщийOzon.Видимость = ВыводитьОстатокНаOzon;
	Элементы.ТоварыОстатокFBO.Видимость = ВыводитьОстатокFBO;
	Элементы.ТоварыРезервFBO.Видимость = ВыводитьОстатокFBO;
	Элементы.ТоварыОстатокFBS.Видимость = ВыводитьОстатокFBS;
	Элементы.ТоварыРезервFBS.Видимость = ВыводитьОстатокFBS;

	Элементы.ТоварыЦенаСоСкидкой.Видимость = ПараметрыОтображенияОстатковЦен.ЦенаСоСкидкой.ОтображатьВТаблице;
	Элементы.ТоварыЦенаДоСкидки.Видимость = ПараметрыОтображенияОстатковЦен.ЦенаДоСкидки.ОтображатьВТаблице;
	Элементы.ТоварыМинимальнаяЦена.Видимость = ПараметрыОтображенияОстатковЦен.МинимальнаяЦена.ОтображатьВТаблице;
	Элементы.ТоварыЦенаСУчетомАкцийПродавца.Видимость = ПараметрыОтображенияОстатковЦен.ЦенаСУчетомАкцийПродавца.ОтображатьВТаблице;
	Элементы.ТоварыЦенаСУчетомВсехАкций.Видимость = ПараметрыОтображенияОстатковЦен.ЦенаСУчетомВсехАкций.ОтображатьВТаблице;
	Элементы.ТоварыРекомендованнаяЦена.Видимость = ПараметрыОтображенияОстатковЦен.РекомендованнаяЦена.ОтображатьВТаблице;
	Элементы.ТоварыЦенаПоставщика.Видимость = ПараметрыОтображенияОстатковЦен.ЦенаПоставщика.ОтображатьВТаблице;

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСпискаТоваров()

	Товары.Параметры.УстановитьЗначениеПараметра("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);
	ТоварыСОшибками.Параметры.УстановитьЗначениеПараметра("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);
	
	ПостфиксНеиспользуемойКатегории = ИнтеграцияСМаркетплейсомOzonСервер.ПостфиксНеиспользуемойКатегории();
	Товары.Параметры.УстановитьЗначениеПараметра("ПризнакНеиспользуемойКатегории", ПостфиксНеиспользуемойКатегории);
	ТоварыСОшибками.Параметры.УстановитьЗначениеПараметра("ПризнакНеиспользуемойКатегории", ПостфиксНеиспользуемойКатегории);

	ПостфиксУстаревшейКатегории = ИнтеграцияСМаркетплейсомOzonСервер.ПостфиксУстаревшейКатегории();
	Товары.Параметры.УстановитьЗначениеПараметра("ПризнакУстаревшейКатегории", ПостфиксУстаревшейКатегории);
	ТоварыСОшибками.Параметры.УстановитьЗначениеПараметра("ПризнакУстаревшейКатегории", ПостфиксУстаревшейКатегории);

	СвойстваСпискаТоваров = Товары.КомпоновщикНастроек.Настройки.ДополнительныеСвойства;
	СвойстваСпискаТоваров.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);
	СвойстваСпискаТоваров.Вставить("ПараметрыОтображенияОстатковЦен", ПараметрыОтображенияОстатковЦен);

	НастройкиУчетнойЗаписи = ИнтеграцияСМаркетплейсомOzonСервер.НастройкиУчетнойЗаписиСЗагружаемымиВидамиЦен(УчетнаяЗаписьМаркетплейса);
	СвойстваСпискаТоваров.Вставить("НастройкиУчетнойЗаписи", НастройкиУчетнойЗаписи);

	ВалютаУчетнойЗаписи = Строка(НастройкиУчетнойЗаписи.ВалютаУчета); // Строка

	СвойстваСпискаТоваров.Вставить("ИспользуетсяЦенообразование25", ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25(ТекущаяДатаСеанса()));

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформационноеПолеОстаткиЦены()

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ИнформацияПоЦенам = "";
		ИнформацияПоОстаткам = "";

		ИнформацияПоОстаткамДоп = "";
		Элементы.ГруппаИнформацияПоОстаткам.Доступность = Ложь;

		ИнформацияПоЦенамДоп = "";
		Элементы.ГруппаИнформацияПоЦенам.Доступность = Ложь;

		Возврат;
	КонецЕсли;

	// Остатки
	ВыводимыеПоказатели = Новый Массив;
	Для Каждого Показатель Из ПараметрыОтображенияОстатковЦен.ОстаткиИнфоПоля Цикл
		ПредставлениеОстатка = ПараметрыОтображенияОстатковЦен[Показатель].Наименование + ": " + Формат(ТекущиеДанные[Показатель], "ЧН=; ЧГ=") + " " + ТекущиеДанные.Упаковка;
		ВыводимыеПоказатели.Добавить(ПредставлениеОстатка);
	КонецЦикла;
	Если ВыводимыеПоказатели.Количество() = 0 Тогда
		ИнформацияПоОстаткам = "";
	Иначе
		ИнформацияПоОстаткам = СтрСоединить(ВыводимыеПоказатели, ", ");
	КонецЕсли;

	ВыводимыеПоказатели = Новый Массив;
	Для Каждого Показатель Из ПараметрыОтображенияОстатковЦен.ОстаткиПодсказки Цикл
		ПредставлениеОстатка = ПараметрыОтображенияОстатковЦен[Показатель].Наименование + ": " + Формат(ТекущиеДанные[Показатель], "ЧН=; ЧГ=") + " " + ТекущиеДанные.Упаковка;
		ВыводимыеПоказатели.Добавить(ПредставлениеОстатка);
	КонецЦикла;
	Если ВыводимыеПоказатели.Количество() = 0 Тогда
		ИнформацияПоОстаткамДоп = "";
		Элементы.ГруппаИнформацияПоОстаткам.Доступность = Ложь;
	Иначе
		ИнформацияПоОстаткамДоп = СтрСоединить(ВыводимыеПоказатели, Символы.ПС);
		Элементы.ГруппаИнформацияПоОстаткам.Доступность = Истина;
	КонецЕсли;

	// Цены
	ВыводимыеПоказатели = Новый Массив;
	Для Каждого Показатель Из ПараметрыОтображенияОстатковЦен.ЦеныИнфоПоля Цикл
		ПредставлениеОстатка = ПараметрыОтображенияОстатковЦен[Показатель].Наименование + ": " + Формат(ТекущиеДанные[Показатель], "ЧДЦ=2; ЧН=; ЧГ=") + " " + ВалютаУчетнойЗаписи;
		ВыводимыеПоказатели.Добавить(ПредставлениеОстатка);
	КонецЦикла;
	Если ВыводимыеПоказатели.Количество() = 0 Тогда
		ИнформацияПоЦенам = "";
	Иначе
		ИнформацияПоЦенам = СтрСоединить(ВыводимыеПоказатели, ", ");
	КонецЕсли;

	ВыводимыеПоказатели = Новый Массив;
	Для Каждого Показатель Из ПараметрыОтображенияОстатковЦен.ЦеныПодсказки Цикл
		ПредставлениеОстатка = ПараметрыОтображенияОстатковЦен[Показатель].Наименование + ": " + Формат(ТекущиеДанные[Показатель], "ЧДЦ=2; ЧН=; ЧГ=") + " " + ВалютаУчетнойЗаписи;
		ВыводимыеПоказатели.Добавить(ПредставлениеОстатка);
	КонецЦикла;
	Если ВыводимыеПоказатели.Количество() = 0 Тогда
		ИнформацияПоЦенамДоп = "";
		Элементы.ГруппаИнформацияПоЦенам.Доступность = Ложь;
	Иначе
		ИнформацияПоЦенамДоп = СтрСоединить(ВыводимыеПоказатели, Символы.ПС);
		Элементы.ГруппаИнформацияПоЦенам.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементовДляСтатуса()

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	УчетнаяЗаписьВыбрана = Не УчетнаяЗаписьМаркетплейса.Пустая();
	СтатусВАрхиве        = (ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбъектовМаркетплейсаOzon.ВАрхиве"));

	Элементы.ТоварыИзменить.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ТоварыУдалить.Доступность = УчетнаяЗаписьВыбрана И ТекущиеДанные.ДоступноУдаление;
	Элементы.УдалитьТовар.Доступность = УчетнаяЗаписьВыбрана И ТекущиеДанные.ДоступноУдаление;
	Элементы.ТоварыКонтекстноеМенюУдалить.Доступность = УчетнаяЗаписьВыбрана И ТекущиеДанные.ДоступноУдаление;
	Элементы.ОтправитьНаМодерацию.Доступность = УчетнаяЗаписьВыбрана И ОбновлениеДанныхРазрешено;
	Элементы.ПеренестиВАрхив.Доступность = УчетнаяЗаписьВыбрана И ОбновлениеДанныхРазрешено 
		И (Не СтатусВАрхиве И Не ПустаяСтрока(ТекущиеДанные.ИдентификаторТовара)
			Или Элементы.Товары.ВыделенныеСтроки.Количество() > 1);
	
	Элементы.ПерейтиКСсылкеНаТовар.Доступность = Не ПустаяСтрока(ТекущиеДанные.SKU);
	Элементы.ТоварыКонтекстноеМенюПерейтиКСсылкеНаТовар.Доступность = Не ПустаяСтрока(ТекущиеДанные.SKU);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатистикуТоваров()

	Если УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Элементы.ГруппаСтатистикаПоВыгрузке.Видимость = Ложь;
		Возврат;
	КонецЕсли;

	ОбновитьСтатистикуТоваровПродолжениеНаСервере();
    ОчиститьСообщения();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьСтатистикуТоваровПродолжение", ЭтотОбъект);
	ДлительнаяОперация = ПолучитьСчетчикВыгрузки(УчетнаяЗаписьМаркетплейса, УникальныйИдентификатор);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатистикуТоваровПродолжение(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") 
			И Результат.Статус = "Выполнено" 
			И Результат.Свойство("АдресРезультата") Тогда
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если РезультатОперации.ЗначениеУстановлено Тогда
			Если РезультатОперации.ОбщийЛимитСоздания <= 0 Тогда
				ШаблонСообщения =
					НСтр("ru = 'Возможны публикация %1 новых позиций и обновление %3 позиций. Сброс счетчиков будет выполнен %4'");
			Иначе
				ШаблонСообщения =
					НСтр("ru = 'Возможны публикация %1 новых позиций из доступных %2 позиций и обновление %3 позиций. Сброс счетчиков будет выполнен %4'");
			КонецЕсли;

			ИнформацияПоСчетчикуТоваров = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения,
				РезультатОперации.СуточныйОстатокСоздания,
				РезультатОперации.ОбщийОстатокСоздания,
				РезультатОперации.СуточныйЛимитОбновления,
				РезультатОперации.ВремяСбросаСчетчиков);
		Иначе
			ИнформацияПоСчетчикуТоваров = "";
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатистикуТоваровПродолжениеНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ВложенныйЗапрос.ЗагруженСОшибками) КАК ЗагруженСОшибками,
	|	СУММА(ВложенныйЗапрос.КПубликации) КАК КПубликации,
	|	СУММА(ВложенныйЗапрос.ИзмененыРеквизиты) КАК ИзмененыРеквизиты
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 101
	|		КОЛИЧЕСТВО(ИСТИНА) КАК ЗагруженСОшибками,
	|		0 КАК КПубликации,
	|		0 КАК ИзмененыРеквизиты
	|	ИЗ
	|		РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon КАК СтатусыПубликации
	|	ГДЕ
	|		СтатусыПубликации.УчетнаяЗаписьМаркетплейса = &УчетнаяЗаписьМаркетплейса
	|		И СтатусыПубликации.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбъектовМаркетплейсаOzon.ЗагруженСОшибками)
	|		И СтатусыПубликации.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Товар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 101
	|		КОЛИЧЕСТВО(ИСТИНА),
	|		0,
	|		0
	|	ИЗ
	|		РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon КАК СтатусыПубликации
	|	ГДЕ
	|		СтатусыПубликации.УчетнаяЗаписьМаркетплейса = &УчетнаяЗаписьМаркетплейса
	|		И СтатусыПубликации.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Товар)
	|		И НЕ СтатусыПубликации.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОбъектовМаркетплейсаOzon.ЗагруженСОшибками), ЗНАЧЕНИЕ(Перечисление.СтатусыОбъектовМаркетплейсаOzon.ВАрхиве))
	|		И (ВЫРАЗИТЬ(СтатусыПубликации.КодОшибки КАК СТРОКА(1024))) <> """"
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 101
	|		0,
	|		КОЛИЧЕСТВО(ИСТИНА),
	|		0
	|	ИЗ
	|		РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon КАК СтатусыПубликации
	|	ГДЕ
	|		СтатусыПубликации.УчетнаяЗаписьМаркетплейса = &УчетнаяЗаписьМаркетплейса
	|		И СтатусыПубликации.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбъектовМаркетплейсаOzon.КПубликации)
	|		И СтатусыПубликации.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Товар)
	|		И (ВЫРАЗИТЬ(СтатусыПубликации.КодОшибки КАК СТРОКА(1024))) = """"
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 101
	|		0,
	|		КОЛИЧЕСТВО(ИСТИНА),
	|		0
	|	ИЗ
	|		РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon КАК СтатусыПубликации
	|	ГДЕ
	|		СтатусыПубликации.УчетнаяЗаписьМаркетплейса = &УчетнаяЗаписьМаркетплейса
	|		И СтатусыПубликации.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбъектовМаркетплейсаOzon.НаМодерации)
	|		И СтатусыПубликации.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Товар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 101
	|		0,
	|		0,
	|		КОЛИЧЕСТВО(ИСТИНА)
	|	ИЗ
	|		РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon КАК СтатусыПубликации
	|	ГДЕ
	|		СтатусыПубликации.УчетнаяЗаписьМаркетплейса = &УчетнаяЗаписьМаркетплейса
	|		И СтатусыПубликации.ИзмененыРеквизиты = ИСТИНА
	|		И СтатусыПубликации.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Товар)) КАК ВложенныйЗапрос";
	Запрос.УстановитьПараметр("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Элементы.ГруппаСтатистикаПоВыгрузке.Видимость = Ложь;
		Возврат;
	КонецЕсли;

	Элементы.ГруппаСтатистикаПоВыгрузке.Видимость = Истина;
	Выборка = Результат.Выбрать();
	Выборка.Следующий();

	ПредставлениеПревышенияСчетчика = НСтр("ru = 'более 100 позиций'");

	ОжидаютИсправленияОшибок = НСтр("ru = 'Ожидают исправления ошибок:'") + " ";
	Если Выборка.ЗагруженСОшибками <= 100 Тогда
		МассивСклонений = ПолучитьСклоненияСтрокиПоЧислу("позиция", Выборка.ЗагруженСОшибками, "",
			"ЧС=Количественное", "ПД=Именительный; ПЧ=Число", "L=ru_RU; ЧН=; ЧГ=");
		ОжидаютИсправленияОшибок = ОжидаютИсправленияОшибок + МассивСклонений[0];
	Иначе
		ОжидаютИсправленияОшибок = ОжидаютИсправленияОшибок + ПредставлениеПревышенияСчетчика;
	КонецЕсли;

	ПодготовленыКПубликации = НСтр("ru = 'В процессе обработки:'") + " ";
	Если Выборка.КПубликации <= 100 Тогда
		МассивСклонений = ПолучитьСклоненияСтрокиПоЧислу("позиция", Выборка.КПубликации, "",
			"ЧС=Количественное", "ПД=Именительный; ПЧ=Число", "L=ru_RU; ЧН=; ЧГ=");
		ПодготовленыКПубликации = ПодготовленыКПубликации + МассивСклонений[0];
	Иначе
		ПодготовленыКПубликации = ПодготовленыКПубликации + ПредставлениеПревышенияСчетчика;
	КонецЕсли;

	ОбнаруженыИзмененияРеквизитов = НСтр("ru = 'Изменены реквизиты:'") + " ";
	Если Выборка.ИзмененыРеквизиты <= 100 Тогда
		МассивСклонений = ПолучитьСклоненияСтрокиПоЧислу("позиция", Выборка.ИзмененыРеквизиты, "",
			"ЧС=Количественное", "ПД=Именительный; ПЧ=Число", "L=ru_RU; ЧН=; ЧГ=");
		ОбнаруженыИзмененияРеквизитов = ОбнаруженыИзмененияРеквизитов + МассивСклонений[0];
	Иначе
		ОбнаруженыИзмененияРеквизитов = ОбнаруженыИзмененияРеквизитов + ПредставлениеПревышенияСчетчика;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеФормы(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") 
			И Результат.Статус = "Выполнено"
			И Результат.Свойство("АдресРезультата") Тогда
		РезультатДействия = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		ИнтеграцияСМаркетплейсомOzonКлиент.ВывестиСостояние(РезультатДействия, ДополнительныеПараметры, Истина);
	КонецЕсли;

	Элементы.Товары.Обновить();
	Элементы.ТоварыСОшибками.Обновить();
	ТоварыПриАктивизацииСтроки(Элементы.Товары);
	ТоварыСОшибкамиПриАктивизацииСтроки(Элементы.ТоварыСОшибками);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборТоваровПоМаркеру(Поле, Значение, ИмяКоманды)

	ИдентификаторОтбора = "ОтборПоМаркеру";
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Товары,, ИдентификаторОтбора);
	
	Если Не ПустаяСтрока(Поле) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Товары,
			Поле,
			Значение,
			ВидСравненияКомпоновкиДанных.Равно,
			ИдентификаторОтбора,,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;

	ОбновитьКнопкуОтбораПоСтатусу(ИмяКоманды);

КонецПроцедуры

&НаСервере
Процедура ОбновитьКнопкуОтбораПоСтатусу(ИмяКоманды)

	Команда = Команды.Найти(ИмяКоманды);
	Если Команда = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.ОтборПоМаркерам.Заголовок = Команда.Заголовок;
	Элементы.ОтборПоМаркерам.Картинка = Команда.Картинка;

КонецПроцедуры

// Функция - Таблица товаров из выделенных строк
//  Возвращает заполненную таблицу товаров по переданному массиву ключей строк (выделенных строк дин.списка).
// Параметры:
//  ВыделенныеСтроки			 - Массив - Ключей строк, обязательно содержащие реквизиты Номенклатура, Характеристика и Упаковка.
//  УчетнаяЗаписьМаркетплейса - СправочникСсылка.УчетныеЗаписиМаркетплейсов - Учетная запись для дозаполнения колонки таблицы товаров.
//  ВидОбъектаМаркетплейса - ПеречислениеСсылка.ВидыОбъектовМаркетплейсов - Вид объекта для дозаполнения колонки таблицы товаров.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - См.описание в ИнтеграцияСМаркетплейсомOzonСервер.СведенияОВыгруженныхДанных().
//
&НаСервереБезКонтекста
Функция ТаблицаТоваровИзВыделенныхСтрок(ЗНАЧ ВыделенныеСтроки, УчетнаяЗаписьМаркетплейса = Неопределено, ВидОбъектаМаркетплейса = Неопределено)

	ТаблицаТоваров = ИнтеграцияСМаркетплейсомOzonСервер.СведенияОВыгруженныхДанных();
	Для Каждого КлючЗаписи Из ВыделенныеСтроки Цикл
		НоваяСтрока = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, КлючЗаписи, "Номенклатура, Характеристика, Упаковка");
	КонецЦикла;
	Если ЗначениеЗаполнено(УчетнаяЗаписьМаркетплейса) Тогда
		ТаблицаТоваров.ЗаполнитьЗначения(УчетнаяЗаписьМаркетплейса, "УчетнаяЗаписьМаркетплейса");
	КонецЕсли;
	Если ЗначениеЗаполнено(ВидОбъектаМаркетплейса) Тогда
		ТаблицаТоваров.ЗаполнитьЗначения(ВидОбъектаМаркетплейса, "ВидОбъектаМаркетплейса");
	Иначе
		ТаблицаТоваров.ЗаполнитьЗначения(ПредопределенноеЗначение("Перечисление.ВидыОбъектовМаркетплейсов.Товар"), "ВидОбъектаМаркетплейса");
	КонецЕсли;

	Возврат ТаблицаТоваров;

КонецФункции

&НаКлиенте
Процедура ОбработкаВыбораПодборДлительнаяОперация(ВыбранноеЗначение)

	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.УправлениеПродажамиНаOzon.Форма.ПубликацияТоваров.ПодборТоваров");

	ДлительнаяОперация = ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);

	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработкаВыбораПодборДлительнаяОперацияЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)

	ТаблицаТоваров = ИнтеграцияСМаркетплейсомOzonСервер.НоваяТаблицаПубликацииТоваров();

	ПодобранныеТовары = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	Для Каждого СтрокаТовара Из ПодобранныеТовары Цикл
		НоваяСтрока = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовара);
	КонецЦикла;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ОбработкаВыбораПодбор";
	НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Обработка подбора товаров'");

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне();
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеФоновогоЗадания;

	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода,
			ТаблицаТоваров, УчетнаяЗаписьМаркетплейса);

КонецФункции

&НаКлиенте
Процедура ОбработкаВыбораПодборДлительнаяОперацияЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт

	Элементы.Товары.Обновить();

	ОписаниеДействия = НСтр("ru = 'Добавление товаров'");
	ДобавлениеЗаписейВыполнено = Ложь;

	Если ТипЗнч(Результат) = Тип("Структура") 
			И Результат.Статус = "Выполнено"
			И Результат.Свойство("АдресРезультата") Тогда
		Результат = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		ДобавлениеЗаписейВыполнено = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "ДобавлениеЗаписейВыполнено", ДобавлениеЗаписейВыполнено);

		СообщениеПользователю = "";
		Если Результат.Свойство("СообщениеПользователю", СообщениеПользователю) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПользователю);
		КонецЕсли;
	КонецЕсли;

	Если ДобавлениеЗаписейВыполнено Тогда
		Состояние(ОписаниеДействия,, НСтр("ru = 'Добавлены подобранные товары'"));
	Иначе
		Состояние(ОписаниеДействия,, НСтр("ru = 'Не найдены товары для добавления'"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаМодерациюВФоне(ВыделенныеСтроки)

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	ДополнительныеПараметры = ИнтеграцияСМаркетплейсомOzonКлиент.НовоеОписаниеПараметровДействия();
	ДополнительныеПараметры.ОписаниеДействия = НСтр("ru = 'Отправка товаров на модерацию'");
	ДополнительныеПараметры.УспешныйРезультат = НСтр("ru = 'Товары отправлены на модерацию'");
	ДополнительныеПараметры.РезультатСОшибками = НСтр("ru = 'При отправке товаров на модерацию возникли ошибки'");

	ДлительнаяОперация = ОтправитьНаМодерациюНаСервере(УчетнаяЗаписьМаркетплейса, ВыделенныеСтроки);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтправитьНаМодерациюНаСервере(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки)

	ТаблицаТоваров = ТаблицаТоваровИзВыделенныхСтрок(ВыделенныеСтроки);

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне();
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Публикация товаров.'");

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ВыполнитьПубликациюТоваровСУстановкойСтатусаКПубликации";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса, ТаблицаТоваров);

КонецФункции

&НаСервереБезКонтекста
Функция УдалитьТоварыНаСервере(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки, УникальныйИдентификатор)

	ТаблицаТоваров = ТаблицаТоваровИзВыделенныхСтрок(ВыделенныеСтроки);

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Удалить товары.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.УдалитьСписокТоваровБезSKUИзАрхива";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса, ТаблицаТоваров);

КонецФункции

&НаСервереБезКонтекста
Функция ВыгрузитьОстаткиНаСервере(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки, УникальныйИдентификатор)

	ТаблицаТоваров = ТаблицаТоваровИзВыделенныхСтрок(ВыделенныеСтроки);

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Выгрузить остатки товаров.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ВыгрузитьОстаткиТоваров";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса, ТаблицаТоваров, Ложь, Ложь);

КонецФункции

&НаСервереБезКонтекста
Функция ВыгрузитьЦеныНаСервере(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки, УникальныйИдентификатор)

	ТаблицаТоваров = ТаблицаТоваровИзВыделенныхСтрок(ВыделенныеСтроки);

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Выгрузить цены товаров.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ВыгрузитьЦеныТоваров";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса, ТаблицаТоваров, Ложь);

КонецФункции

&НаСервереБезКонтекста
Функция ЗагрузитьОстаткиНаСервере(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки, УникальныйИдентификатор)

	ТаблицаТоваров = ТаблицаТоваровИзВыделенныхСтрок(ВыделенныеСтроки);

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Загрузить остатки товаров.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ЗагрузитьОстаткиТоваров";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса, ТаблицаТоваров);

КонецФункции

&НаСервереБезКонтекста
Функция ЗагрузитьЦеныНаСервере(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки)

	ТаблицаТоваров = ТаблицаТоваровИзВыделенныхСтрок(ВыделенныеСтроки);

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Загрузить цены товаров.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ЗагрузитьЦеныТоваров";
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса, ТаблицаТоваров);

КонецФункции

&НаСервереБезКонтекста
Функция ВыполнитьОбновлениеТоварногоКаталогаНаСервере(УчетнаяЗаписьМаркетплейса)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Выполнить обновление товарного каталога.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ОбновитьТоварныйКаталогРегламентнымЗаданием";
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса);

КонецФункции

&НаКлиенте
Процедура ПеренестиВАрхивЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОчиститьСообщения();
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

		ДлительнаяОперация = ВыгрузитьНулевыеОстатки(УчетнаяЗаписьМаркетплейса, Элементы.Товары.ВыделенныеСтроки, УникальныйИдентификатор);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Неопределено, ПараметрыОжидания);

		ДополнительныеПараметры = ИнтеграцияСМаркетплейсомOzonКлиент.НовоеОписаниеПараметровДействия();
		ДополнительныеПараметры.ОписаниеДействия = НСтр("ru = 'Перенос в архив'");
		ДополнительныеПараметры.УспешныйРезультат = НСтр("ru = 'Товар перенесен в архив'");
		ДополнительныеПараметры.РезультатСОшибками = НСтр("ru = 'При переносе товаров в архив возникли ошибки'");

		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтотОбъект, ДополнительныеПараметры);
		ДлительнаяОперация = ПеренестиВАрхивНаСервере(УчетнаяЗаписьМаркетплейса, Элементы.Товары.ВыделенныеСтроки, УникальныйИдентификатор);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыгрузитьНулевыеОстатки(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки, УникальныйИдентификатор)

	ТаблицаТоваров = ТаблицаТоваровИзВыделенныхСтрок(ВыделенныеСтроки);

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Выгрузить нулевые остатки товаров.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ВыгрузитьОстаткиТоваров";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса, ТаблицаТоваров, Истина);

КонецФункции

&НаСервереБезКонтекста
Функция ПеренестиВАрхивНаСервере(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки, УникальныйИдентификатор)

	ТаблицаТоваров = ТаблицаТоваровИзВыделенныхСтрок(ВыделенныеСтроки);

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Перенести товары в архив.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ПеренестиСписокТоваровВАрхив";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса, ТаблицаТоваров);

КонецФункции

&НаСервереБезКонтекста
Функция ВернутьИзАрхиваНаСервере(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки, УникальныйИдентификатор)

	ТаблицаТоваров = ТаблицаТоваровИзВыделенныхСтрок(ВыделенныеСтроки);

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Вернуть товары из архива.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ВернутьСписокТоваровИзАрхива";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса, ТаблицаТоваров);

КонецФункции

&НаКлиенте
Процедура УдалитьТоварЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОчиститьСообщения();
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

		ДополнительныеПараметры = ИнтеграцияСМаркетплейсомOzonКлиент.НовоеОписаниеПараметровДействия();
		ДополнительныеПараметры.ОписаниеДействия = НСтр("ru = 'Удаление товара'");
		ДополнительныеПараметры.УспешныйРезультат = НСтр("ru = 'Товар удален'");
		ДополнительныеПараметры.РезультатСОшибками = НСтр("ru = 'Товар не удален'");

		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтотОбъект, ДополнительныеПараметры);
		ДлительнаяОперация = УдалитьТоварыНаСервере(УчетнаяЗаписьМаркетплейса, Элементы.Товары.ВыделенныеСтроки, УникальныйИдентификатор);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСчетчикВыгрузки(УчетнаяЗаписьМаркетплейса, УникальныйИдентификатор)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Получить счетчик выгрузки товаров.'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ПолучитьСчетчикВыгрузкиИзСервиса";
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса);

КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьПолучениеЦеныВТекстЗапроса(СтруктураПараметров)

	Если (СтруктураПараметров.ПараметрыОтображенияОстатковЦен[СтруктураПараметров.ИмяРеквизита].ОтображатьВТаблице = Ложь
		И СтруктураПараметров.ПараметрыОтображенияОстатковЦен[СтруктураПараметров.ИмяРеквизита].ОтображатьВТаблице = Ложь)
		Или СтруктураПараметров.ВидЦен.Пустая() Тогда
		СтруктураПараметров.РеквизитыЗапроса.Добавить("0 КАК " + СтруктураПараметров.ИмяРеквизита);
		СтруктураПараметров.РеквизитыЗапроса.Добавить("&БазоваяВалюта КАК " + СтруктураПараметров.ИмяРеквизита + "Валюта");
		Возврат;
	КонецЕсли;

	ТекстРеквизита = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"	МАКСИМУМ(ВЫБОР
		|				КОГДА ТоварыСЦенами.ВидЦены = &%1
		|					ТОГДА ЕСТЬNULL(ТоварыСЦенами.Цена, 0)
		|							* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковкиТовара, 1)
		|							/ ВЫБОР
		|								КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковкиЦены, 1) = 0
		|									ТОГДА 1
		|								ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковкиЦены, 1)
		|							КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ)", 
		СтруктураПараметров.ИмяРеквизита);

	СтруктураПараметров.Запрос.УстановитьПараметр(СтруктураПараметров.ИмяРеквизита, СтруктураПараметров.ВидЦен);
	СтруктураПараметров.РеквизитыЗапроса.Добавить(ТекстРеквизита + " КАК " + СтруктураПараметров.ИмяРеквизита);
	СтруктураПараметров.РеквизитыЗапроса.Добавить("МАКСИМУМ(ЕСТЬNULL(ТоварыСЦенами.Валюта, &БазоваяВалюта))" + " КАК " + СтруктураПараметров.ИмяРеквизита + "Валюта");

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыОткрытияПрайсЛиста(УчетнаяЗаписьМаркетплейса, ЗНАЧ ВыделенныеСтроки);

	Товары = Новый Массив;
	Для Каждого КлючЗаписи Из ВыделенныеСтроки Цикл
		Товары.Добавить(КлючЗаписи.Номенклатура);
	КонецЦикла;
	ВидыЦен = ИнтеграцияСМаркетплейсомOzonСервер.ИспользуемыеВидыЦен(УчетнаяЗаписьМаркетплейса);
	Возврат Новый Структура("Номенклатура, ВидыЦен, УчетнаяЗаписьМаркетплейса", Товары, ВидыЦен, УчетнаяЗаписьМаркетплейса);

КонецФункции

&НаСервере
Процедура СохранитьДанныеФормы()

	ОбщегоНазначения.ХранилищеНастроекДанныхФормСохранить(ИмяФормы, "ПараметрыОтображенияОстатковЦен",
		ПараметрыОтображенияОстатковЦен);

КонецПроцедуры

&НаСервере
Процедура УчетнаяЗаписьПриИзмененииНаСервере()
	
	ОбновлениеДанныхРазрешено = ИнтеграцияСМаркетплейсомOzonВызовСервера.ОбновленияДанныхТорговойПлощадкиРазрешено(УчетнаяЗаписьМаркетплейса);
	
	ИнициализироватьПараметрыОтображенияОстатковЦен();
	УстановитьПараметрыСпискаТоваров();
	ОбновитьКнопкуОтбораПоСтатусу(Команды.ПоказатьВсе.Имя);

	Заголовок = НСтр("ru = 'Публикация товаров на Ozon'");
	Если Не УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Заголовок = Заголовок + " - " + УчетнаяЗаписьМаркетплейса;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьВидимостьЭлементов()

	УстановитьВидимостьКолонокЦеныОстатки();
	
	УчетнаяЗаписьВыбрана = Не УчетнаяЗаписьМаркетплейса.Пустая();
	СтрокаТаблицыВыбрана = Элементы.Товары.ТекущаяСтрока <> Неопределено;
	
	Элементы.ТоварыСоздать.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ТоварыИзменить.Доступность = СтрокаТаблицыВыбрана И УчетнаяЗаписьВыбрана;
	Элементы.ТоварыУдалить.Доступность = СтрокаТаблицыВыбрана И УчетнаяЗаписьВыбрана;
	Элементы.ТоварыПодбор.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ТоварыДобавитьПоОтбору.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ОтобратьПоМаркеруИзмененыРеквизиты.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ОтобратьПоМаркеруГотовы.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ОтобратьПоМаркеруОшибка.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ОтобратьПоМаркеруВПроцессе.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ОтобратьПоМаркеруВАрхиве.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ПоказатьВсе.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ПерейтиКСсылкеНаТовар.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ОтправитьНаМодерацию.Доступность = СтрокаТаблицыВыбрана И УчетнаяЗаписьВыбрана И ОбновлениеДанныхРазрешено;
	Элементы.ВыгрузитьОстатки.Доступность = УчетнаяЗаписьВыбрана И ОбновлениеДанныхРазрешено;
	Элементы.ВыгрузитьЦены.Доступность = УчетнаяЗаписьВыбрана И ОбновлениеДанныхРазрешено;
	Элементы.ОбновитьОстаткиТоваровСМП.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ОбновитьЦеныТоваровСМП.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ВыполнитьОбновлениеТоварногоКаталога.Доступность = УчетнаяЗаписьВыбрана;
	Элементы.ПеренестиВАрхив.Доступность = СтрокаТаблицыВыбрана И УчетнаяЗаписьВыбрана И ОбновлениеДанныхРазрешено;
	Элементы.НастроитьИнформационнуюПанель.Доступность = УчетнаяЗаписьВыбрана;

	СтрокаТаблицыВыбрана = Элементы.ТоварыСОшибками.ТекущаяСтрока <> Неопределено;
	Элементы.ТоварыСОшибкамиИзменитьТовар.Доступность = СтрокаТаблицыВыбрана И УчетнаяЗаписьВыбрана;
	Элементы.ТоварыСОшибкамиУдалитьТовар.Доступность = СтрокаТаблицыВыбрана И УчетнаяЗаписьВыбрана;
	Элементы.ТоварыСОшибкамиОтправитьНаМодерацию.Доступность = СтрокаТаблицыВыбрана И УчетнаяЗаписьВыбрана И ОбновлениеДанныхРазрешено;

КонецПроцедуры

#КонецОбласти
