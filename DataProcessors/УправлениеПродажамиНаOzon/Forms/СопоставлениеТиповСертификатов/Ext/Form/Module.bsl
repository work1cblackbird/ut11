
#Область ОписаниеПеременных

&НаКлиенте
Перем ЭтоЗакрытиеФормы;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);

	Заголовок = НСтр("ru = 'Сопоставление типов сертификатов'");
	Если Не УчетнаяЗаписьМаркетплейса.Пустая() Тогда
		Заголовок = Заголовок + " - " + УчетнаяЗаписьМаркетплейса;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ЗаполнитьТипыСертификатов();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если Модифицированность Тогда
		Оповещение = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросСохраненияИзменений", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
		Отказ = Истина;
	Иначе
		ЭтоЗакрытиеФормы = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаТиповСертификатов

&НаКлиенте
Процедура ТаблицаТиповСертификатовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если Поле.Имя = "ТаблицаТиповСертификатовНаименованиеТипаСертификатаМаркетплейса" Тогда
		ОткрытьФормуВыбораЗначенияАтрибута(ВыбраннаяСтрока);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТиповСертификатовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТиповСертификатовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)

	ЗаписатьИзмененияНаСервере();
	Оповестить("УстановленоСоответствиеТиповСертификатов");

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзмененияИЗакрыть(Команда)

	ЗаписатьИзмененияНаСервере();
	Модифицированность = Ложь;
	Оповестить("УстановленоСоответствиеТиповСертификатов");
	Закрыть();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьТипыСертификатов()

	ДлительнаяОперация = ПолучитьТипыСертификатовНаСервере();

	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗаполнитьТипыСертификатовЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция ПолучитьТипыСертификатовНаСервере()

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ЗаполнитьТаблицуТиповСертификатов";
	НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Заполнение типов сертификатов'");

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеФоновогоЗадания;

	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, УчетнаяЗаписьМаркетплейса);

КонецФункции

&НаКлиенте
Процедура ЗаполнитьТипыСертификатовЗавершение(Результат, Параметры) Экспорт

	ОчиститьСообщения();

	Если Результат <> Неопределено И Результат.Статус = "Выполнено" Тогда
		ЗаполнитьТипыСертификатовЗавершениеНаСервере(Результат.АдресРезультата);
	ИначеЕсли ЭтоЗакрытиеФормы <> Истина Тогда
		ШаблонОшибки = НСтр("ru = 'Не удалось получить типы сертификатов по причине: %1. Подробнее см. журнал регистрации.'");
		ПредставлениеНеизвестнойОшибки = НСтр("ru = 'Неизвестная ошибка выполнения операции'");
		ПодробноеПредставлениеОшибки = ?(Результат = Неопределено, ПредставлениеНеизвестнойОшибки, Результат.ПодробноеПредставлениеОшибки);
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонОшибки,
				ПодробноеПредставлениеОшибки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;

	Элементы.ДекорацияДлительноеОжидание.Видимость = Ложь;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыСертификатовЗавершениеНаСервере(АдресХранилища)

	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	УдалитьИзВременногоХранилища(АдресХранилища);

	ТаблицаТиповСертификатовРезультат = Результат.ТаблицаТиповСертификатов; 
	ТаблицаТиповСертификатовРезультат.Колонки.Добавить("ИзмененоЗначение", Новый ОписаниеТипов("Булево"));
	ЗначениеВРеквизитФормы(ТаблицаТиповСертификатовРезультат, "ТаблицаТиповСертификатов");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораЗначенияАтрибута(ИдентификаторСтроки)

	ТекущиеДанные = ТаблицаТиповСертификатов.НайтиПоИдентификатору(ИдентификаторСтроки);

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("ВариантПолученияЗначений", "ТипыСертификатов");
	ПараметрыВыбора.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);
	ПараметрыВыбора.Вставить("НаименованиеАтрибутаМаркетплейса", НСтр("ru = 'Тип сертификата'"));
	ШаблонОписания = НСтр("ru = 'Выбор значения маркетплейса для значения типа сертификата 1С <%1>'");
	ПараметрыВыбора.Вставить("Описание",
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОписания, ТекущиеДанные.ТипСертификата1С));
	ПараметрыВыбора.Вставить("ТекущееЗначениеАтрибута", ТекущиеДанные.НаименованиеТипаСертификатаМаркетплейса);
	ПараметрыВыбора.Вставить("ИдентификаторТекущегоЗначенияАтрибута", ТекущиеДанные.ИдентификаторТипаСертификатаМаркетплейса);

	Если ЗначениеЗаполнено(АдресХранилищаДоступныхЗначений) Тогда
		ПараметрыВыбора.Вставить("АдресХранилищаДоступныхЗначений", АдресХранилищаДоступныхЗначений);
	КонецЕсли;

	ДополнительныеПараметры = Новый Структура("ТекущиеДанные", ТекущиеДанные);

	ОбработчикВыбораЗначения = Новый ОписаниеОповещения("ВыборЗначенияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.УправлениеПродажамиНаOzon.Форма.ВыборЗначенияМаркетплейса",
			ПараметрыВыбора, ЭтотОбъект,,,, ОбработчикВыбораЗначения);

КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначенияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	АдресХранилищаДоступныхЗначений = Результат.АдресХранилищаДоступныхЗначений;

	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	ТекущиеДанные.ИдентификаторТипаСертификатаМаркетплейса = Результат.ИдентификаторЗначенияАтрибута;
	ТекущиеДанные.НаименованиеТипаСертификатаМаркетплейса = Результат.ЗначениеАтрибута;
	ТекущиеДанные.ИзмененоЗначение = Истина;

	Модифицированность = Истина;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()

	ВидОбъектаМаркетплейса = ПредопределенноеЗначение("Перечисление.ВидыОбъектовМаркетплейсов.ТипСертификата");
	ДатаАктуальности = ТекущаяДатаСеанса();

	НаборЗаписей = РегистрыСведений.СоответствияОбъектовМаркетплейсов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(УчетнаяЗаписьМаркетплейса);
	НаборЗаписей.Отбор.ВидОбъектаМаркетплейса.Установить(ВидОбъектаМаркетплейса);

	Для Каждого СтрокаТипаСертификата Из ТаблицаТиповСертификатов Цикл
		Если Не ЗначениеЗаполнено(СтрокаТипаСертификата.ИдентификаторТипаСертификатаМаркетплейса) Тогда
			Продолжить;
		КонецЕсли;

		Запись = НаборЗаписей.Добавить();
		Запись.УчетнаяЗаписьМаркетплейса = УчетнаяЗаписьМаркетплейса;
		Запись.ВидОбъектаМаркетплейса = ВидОбъектаМаркетплейса;
		Запись.Объект1С = СтрокаТипаСертификата.ТипСертификата1С;
		Запись.ИдентификаторОбъектаМаркетплейса = СтрокаТипаСертификата.ИдентификаторТипаСертификатаМаркетплейса;
		Запись.НаименованиеОбъектаМаркетплейса = СтрокаТипаСертификата.НаименованиеТипаСертификатаМаркетплейса;
		Запись.ДатаАктуальности = ДатаАктуальности;
	КонецЦикла;

	НаборЗаписей.Записать();
	
	ЗаписатьИзмененияДляЗаписейСертификатов(ТаблицаТиповСертификатов.Выгрузить());

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьИзмененияДляЗаписейСертификатов(ТаблицаТиповСертификатов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;  
	Запрос.УстановитьПараметр("ТаблицаИзменений", ТаблицаТиповСертификатов);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаИзменений.ТипСертификата1С КАК СТРОКА(50)) КАК ТипСертификата1С,
		|	ТаблицаИзменений.ИдентификаторТипаСертификатаМаркетплейса КАК ИдентификаторТипаСертификатаМаркетплейса,
		|	ТаблицаИзменений.НаименованиеТипаСертификатаМаркетплейса КАК НаименованиеТипаСертификатаМаркетплейса
		|ПОМЕСТИТЬ ТаблицаИзменений
		|ИЗ
		|	&ТаблицаИзменений КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.ИзмененоЗначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатусыПубликацииСертификатов.УчетнаяЗаписьМаркетплейса КАК УчетнаяЗаписьМаркетплейса,
		|	СтатусыПубликацииСертификатов.ВидОбъектаМаркетплейса КАК ВидОбъектаМаркетплейса,
		|	СтатусыПубликацииСертификатов.Номенклатура КАК Номенклатура,
		|	СтатусыПубликацииСертификатов.Характеристика КАК Характеристика,
		|	СтатусыПубликацииСертификатов.Упаковка КАК Упаковка,
		|	СтатусыПубликацииСертификатов.ОбъектПубликации КАК ОбъектПубликации,
		|	ТаблицаИзменений.ИдентификаторТипаСертификатаМаркетплейса КАК ИдентификаторТипаСертификатаМаркетплейса,
		|	ТаблицаИзменений.НаименованиеТипаСертификатаМаркетплейса КАК НаименованиеТипаСертификатаМаркетплейса,
		|	СтатусыПубликацииТоваров.НаименованиеОбъектаМаркетплейса КАК НаименованиеТовара,
		|	СтатусыПубликацииТоваров.ИдентификаторПубликации КАК ИдентификаторПубликацииТовара,
		|	ПРЕДСТАВЛЕНИЕ(СтатусыПубликацииСертификатов.ОбъектПубликации) КАК ПредставлениеСертификата
		|ИЗ
		|	Справочник.СертификатыНоменклатуры КАК СертификатыНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаИзменений КАК ТаблицаИзменений
		|		ПО СертификатыНоменклатуры.ТипСертификата = ТаблицаИзменений.ТипСертификата1С
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon КАК СтатусыПубликацииСертификатов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon КАК СтатусыПубликацииТоваров
		|			ПО СтатусыПубликацииСертификатов.УчетнаяЗаписьМаркетплейса = СтатусыПубликацииТоваров.УчетнаяЗаписьМаркетплейса
		|				И (СтатусыПубликацииТоваров.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Товар))
		|				И СтатусыПубликацииСертификатов.Номенклатура = СтатусыПубликацииТоваров.Номенклатура
		|				И СтатусыПубликацииСертификатов.Характеристика = СтатусыПубликацииТоваров.Характеристика
		|				И СтатусыПубликацииСертификатов.Упаковка = СтатусыПубликацииТоваров.Упаковка
		|		ПО СертификатыНоменклатуры.Ссылка = СтатусыПубликацииСертификатов.ОбъектПубликации
		|			И (СтатусыПубликацииСертификатов.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Сертификат))
		|ГДЕ
		|	СертификатыНоменклатуры.ПубликуетсяВСервисах
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаИзменений";
	
	ВыборкаСертификатов = Запрос.Выполнить().Выбрать();
	Пока ВыборкаСертификатов.Следующий() Цикл  
		Попытка  
			МенеджерЗаписи = РегистрыСведений.СтатусыПубликацииОбъектовМаркетплейсаOzon.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаСертификатов); 
			МенеджерЗаписи.Прочитать();
			
			Если МенеджерЗаписи.Выбран() Тогда
				ДанныеОбъекта = МенеджерЗаписи.ДанныеОбъекта.Получить();
				ДанныеОбъекта.Вставить("ИдентификаторТипаСертификата", ВыборкаСертификатов.ИдентификаторТипаСертификатаМаркетплейса);
				ДанныеОбъекта.Вставить("НаименованиеТипаСертификата", ВыборкаСертификатов.НаименованиеТипаСертификатаМаркетплейса);
				МенеджерЗаписи.ДанныеОбъекта = Новый ХранилищеЗначения(ДанныеОбъекта);
				МенеджерЗаписи.Записать();
			КонецЕсли;
		Исключение     
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось записать изменения для сертификата <%1> по товару маркетплейса <%2> по причине: %3'", 
					ОбщегоНазначения.КодОсновногоЯзыка()),
				ВыборкаСертификатов.ПредставлениеСертификата,
				ВыборкаСертификатов.НаименованиеТовара + " (" + ВыборкаСертификатов.ИдентификаторПубликацииТовара + ")",
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
			ЗаписьЖурналаРегистрации(ИнтеграцияСМаркетплейсомOzonСервер.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстОшибки);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопросСохраненияИзменений(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзмененияИЗакрыть(Неопределено);
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
