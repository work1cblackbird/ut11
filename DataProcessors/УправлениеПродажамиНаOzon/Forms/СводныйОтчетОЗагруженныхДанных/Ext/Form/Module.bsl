
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Параметры.УчетнаяЗапись) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НастройкиУчетнойЗаписи      = Справочники.УчетныеЗаписиМаркетплейсов.НастройкиУчетнойЗаписи(Параметры.УчетнаяЗапись);
	ЗначенияФункциональныхОпций = ИнтеграцияСМаркетплейсамиСервер.ПолучитьФункциональныеОпции(НастройкиУчетнойЗаписи.Соглашение);
	
	СхемаКомпоновкиДанных = Обработки.УправлениеПродажамиНаOzon.ПолучитьМакет("СводныйОтчетОЗагруженныхДанных");
	
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"СопоставленныеДанные", 
		Параметры.ТаблицаСопоставленияДанных.Выгрузить().Скопировать(), 
		Истина);
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"ЗагруженныеОбъекты", 
		Параметры.ЗагруженныеОбъекты, 
		Истина);
		
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"СпособОтраженияПродажFBO", 
		НастройкиУчетнойЗаписи.СпособОтраженияПродажFBO, 
		Истина);
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"СпособОтраженияПродажFBS", 
		НастройкиУчетнойЗаписи.СпособОтраженияПродажFBS, 
		Истина);
	
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"Организация", 
		НастройкиУчетнойЗаписи.Организация, 
		Истина);
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"Партнер", 
		НастройкиУчетнойЗаписи.Партнер, 
		Истина);
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"Контрагент", 
		НастройкиУчетнойЗаписи.Контрагент, 
		Истина);
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"Соглашение", 
		?(ЗначенияФункциональныхОпций.ИспользоватьСоглашенияСКлиентами, 
			НастройкиУчетнойЗаписи.Соглашение, 
			Справочники.СоглашенияСКлиентами.ПустаяСсылка()),
		Истина);
		
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"ПродажиРазделяютсяПоДоговорам", 
		?(ЗначенияФункциональныхОпций.ИспользуютсяДоговорыКонтрагентов, 
			НастройкиУчетнойЗаписи.ПродажиРазделяютсяПоДоговорам, 
			Ложь), 
		Истина);
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"ДоговорПродажиЧерезСкладыТорговойПлощадки", 
		?(ЗначенияФункциональныхОпций.ИспользуютсяДоговорыКонтрагентов, 
			НастройкиУчетнойЗаписи.ДоговорПродажиЧерезСкладыТорговойПлощадки, 
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка()), 
		Истина);
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"ДоговорПродажиЧерезСкладыСобственные", 
		?(ЗначенияФункциональныхОпций.ИспользуютсяДоговорыКонтрагентов, 
			НастройкиУчетнойЗаписи.ДоговорПродажиЧерезСкладыСобственные, 
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка()),
		Истина);
	
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"КомментарийНевыкупТоваров",
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '(Озон) %1. Невыкуп товаров'"),
			Параметры.УчетнаяЗапись) + "%", Истина);
	КомпоновкаДанныхСервер.УстановитьПараметрСКД(СхемаКомпоновкиДанных, 
		"КомментарийВозвратТоваров",
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '(Озон) %1. Возврат товаров'"),
			Параметры.УчетнаяЗапись) + "%", Истина);
			
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	Для Каждого ЭлементСтруктуры Из Настройки.Структура Цикл
		Если ТипЗнч(ЭлементСтруктуры) = Тип("ГруппировкаКомпоновкиДанных") Тогда
			Если ЭлементСтруктуры.Имя = "РеализацияВПути"
					И НастройкиУчетнойЗаписи.СпособОтраженияПродажFBS <> "РеализацияВПути" Тогда
				ЭлементСтруктуры.Использование = Ложь;
			ИначеЕсли ЭлементСтруктуры.Имя = "Комиссия"
						И НастройкиУчетнойЗаписи.СпособОтраженияПродажFBO <> "Комиссия"
						И НастройкиУчетнойЗаписи.СпособОтраженияПродажFBS <> "Комиссия" Тогда
				ЭлементСтруктуры.Использование = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, 
		КомпоновщикНастроек.ПолучитьНастройки(), 
		,,
		Тип("ГенераторМакетаКомпоновкиДанных"));
		
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,, Истина);
	
	Результат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти
