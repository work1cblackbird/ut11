#Область ОписаниеПеременных

&НаКлиенте
Перем ЗначениеВыбрано;

&НаКлиенте
Перем ЭтоЗакрытиеФормы;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("ВариантПолученияЗначений", ВариантПолученияЗначений);
	Если ПустаяСтрока(ВариантПолученияЗначений) Тогда
		ВариантПолученияЗначений = "ЗначенияАтрибутов";
	КонецЕсли;
	Параметры.Свойство("УчетнаяЗаписьМаркетплейса", УчетнаяЗаписьМаркетплейса);
	Параметры.Свойство("ИдентификаторКатегорииМаркетплейса", ИдентификаторКатегорииМаркетплейса);
	Параметры.Свойство("ИдентификаторАтрибутаМаркетплейса", ИдентификаторАтрибутаМаркетплейса);
	Параметры.Свойство("НаименованиеАтрибутаМаркетплейса", НаименованиеАтрибутаМаркетплейса);
	Параметры.Свойство("ТекущееЗначениеАтрибута", ТекущееЗначениеАтрибута);
	Параметры.Свойство("Описание", Описание);
	Параметры.Свойство("ИдентификаторТекущегоЗначенияАтрибута", ИдентификаторТекущегоЗначенияАтрибута);
	Параметры.Свойство("АдресХранилищаДоступныхЗначений", АдресХранилищаДоступныхЗначений);

	Если ЗначениеЗаполнено(АдресХранилищаДоступныхЗначений) Тогда
		ТаблицаЗначенийАтрибута = ПолучитьИзВременногоХранилища(АдресХранилищаДоступныхЗначений);
		Если ТаблицаЗначенийАтрибута <> Неопределено Тогда
			ЗначениеВРеквизитФормы(ТаблицаЗначенийАтрибута, "ЗначенияМаркетплейса");

			СпозиционироватьсяНаТекущемЗначении();

			Элементы.ДекорацияДлительнаяОперация.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;

	Элементы.ДекорацияОписание.Заголовок = Описание;

	ШаблонЗаголовка = НСтр("ru = 'Выбор значения для атрибута <%1>'");
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, НаименованиеАтрибутаМаркетплейса);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ЗначениеВыбрано = Ложь;

	Если Не ЗначенияМаркетплейса.Количество() Тогда
		ЗаполнитьЗначенияМаркетплейса();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	ЭтоЗакрытиеФормы = Истина;

	Если Не ЗначениеВыбрано Тогда
		Оповестить("ЗакрытиеВыбораЗначений", АдресХранилищаДоступныхЗначений, ВладелецФормы.УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗначенияМаркетплейса

&НаКлиенте
Процедура ЗначенияМаркетплейсаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = ЗначенияМаркетплейса.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ОбработатьВыборЗначения(ТекущиеДанные, ЗакрыватьПриВыборе);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)

	ТекущиеДанные = Элементы.ЗначенияМаркетплейса.ТекущиеДанные;

	ОбработатьВыборЗначения(ТекущиеДанные);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьЗначенияМаркетплейса()

	Если ВариантПолученияЗначений = "ТипыСертификатов" Тогда
		ИдентификаторКэшаВладельцаЗначений = "ТипыСертификатов";
	ИначеЕсли ВариантПолученияЗначений = "ТипыСоответствияТребованиям" Тогда
		ИдентификаторКэшаВладельцаЗначений = "ТипыСоответствияТребованиям";
	Иначе
		ИдентификаторКэшаВладельцаЗначений = "АтрибутКатегории_"
			+ ИдентификаторКатегорииМаркетплейса
			+ "_"
			+ ИдентификаторАтрибутаМаркетплейса;
	КонецЕсли;

	ДанныеКэша = ИнтеграцияСМаркетплейсомOzonКлиент.ПолучитьДанныеИзКэшаКатегорий(ИдентификаторКэшаВладельцаЗначений);
	
	ДанныеФормы = Новый Структура("ИдентификаторКатегорииМаркетплейса, ИдентификаторАтрибутаМаркетплейса,
			|НаименованиеАтрибутаМаркетплейса, УчетнаяЗаписьМаркетплейса, УникальныйИдентификатор");
	ЗаполнитьЗначенияСвойств(ДанныеФормы, ЭтотОбъект);

	ДлительнаяОперация = ЗаполнитьДоступныеЗначенияАтрибутаКатегорииНаСервере(ДанныеФормы, ВариантПолученияЗначений, ДанныеКэша);

	ДополнительныеПараметры  = Новый Структура("ИдентификаторЗадания", ИдентификаторКэшаВладельцаЗначений);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗаполнитьДоступныеЗначенияАтрибутаКатегорииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьДоступныеЗначенияАтрибутаКатегорииНаСервере(ДанныеФормы, ВариантПолученияЗначений, ДанныеКэша = Неопределено)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ДанныеФормы.УникальныйИдентификатор);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	Если ВариантПолученияЗначений = "ТипыСертификатов" Тогда
		НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Заполнение типов сертификатов'");
		ПараметрыАтрибута = Неопределено;
	ИначеЕсли ВариантПолученияЗначений = "ТипыСоответствияТребованиям" Тогда
		НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Заполнение типов соответствия требованиям сертификации'");
		ПараметрыАтрибута = Неопределено;
	Иначе
		НаименованиеФоновогоЗадания = НСтр("ru = 'Ozon. Заполнение доступных значений атрибута ""%1""'");
		ПараметрыАтрибута = ИнтеграцияСМаркетплейсомOzonСервер.НовыеПараметрыЗапросаЗначенийАтрибута();
		ЗаполнитьЗначенияСвойств(ПараметрыАтрибута, ДанныеФормы);
	КонецЕсли;

	ИмяМетода = "ИнтеграцияСМаркетплейсомOzonСервер.ДоступныеЗначенияВыбора";

	ПараметрыВыполнения.НаименованиеФоновогоЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НаименованиеФоновогоЗадания,
			ДанныеФормы.НаименованиеАтрибутаМаркетплейса);

	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода,
			ПараметрыАтрибута, ДанныеФормы.УчетнаяЗаписьМаркетплейса, ВариантПолученияЗначений, ДанныеКэша);

КонецФункции 

&НаКлиенте
Процедура ЗаполнитьДоступныеЗначенияАтрибутаКатегорииЗавершение(Результат, ДополнительныеПараметры) Экспорт

	ОчиститьСообщения();

	Если Результат <> Неопределено И Результат.Статус = "Выполнено" Тогда
		ДанныеКэша = Неопределено;    
		ЗаполнитьДоступныеЗначенияАтрибутаКатегорииЗавершениеНаСервере(Результат.АдресРезультата,
				ДополнительныеПараметры.ИдентификаторЗадания, ДанныеКэша);

		Если ЗначениеЗаполнено(ДанныеКэша) Тогда
			ИнтеграцияСМаркетплейсомOzonКлиент.СохранитьДанныеВКэшКатегорий(ДанныеКэша,
					ДополнительныеПараметры.ИдентификаторЗадания);
			ДанныеКэша = Неопределено;
		КонецЕсли;
	ИначеЕсли ЭтоЗакрытиеФормы <> Истина Тогда
		ШаблонОшибки = НСтр("ru = 'Не удалось получить доступные значения атрибута ""%1"" по причине: %2. Подробнее см. журнал регистрации.'");
		ПредставлениеНеизвестнойОшибки = НСтр("ru = 'Неизвестная ошибка выполнения операции'");
		ПодробноеПредставлениеОшибки = ?(Результат = Неопределено, ПредставлениеНеизвестнойОшибки, Результат.ПодробноеПредставлениеОшибки);
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонОшибки,
				НаименованиеАтрибутаМаркетплейса,
				ПодробноеПредставлениеОшибки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;

	Элементы.ДекорацияДлительнаяОперация.Видимость = Ложь;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеЗначенияАтрибутаКатегорииЗавершениеНаСервере(АдресХранилища, ИдентификаторЗадания, ДанныеКэша)

	Если ИдентификаторЗадания = ИдентификаторКэшаВладельцаЗначений Тогда
		Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
		УдалитьИзВременногоХранилища(АдресХранилища);

		ДанныеКэша = Результат.ДанныеКэша;

		ТаблицаЗначенийВыбора = Результат.ТаблицаЗначенийВыбора;
		ЗначениеВРеквизитФормы(ТаблицаЗначенийВыбора, "ЗначенияМаркетплейса");

		АдресХранилища = ?(ЗначениеЗаполнено(АдресХранилищаДоступныхЗначений), АдресХранилищаДоступныхЗначений, Новый УникальныйИдентификатор);
		АдресХранилищаДоступныхЗначений = ПоместитьВоВременноеХранилище(ТаблицаЗначенийВыбора, АдресХранилища);

		СпозиционироватьсяНаТекущемЗначении();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СпозиционироватьсяНаТекущемЗначении()

	Отбор = Неопределено;

	Если ЗначениеЗаполнено(ИдентификаторТекущегоЗначенияАтрибута) Тогда 
		Отбор = Новый Структура("ИдентификаторЗначенияАтрибута", ИдентификаторТекущегоЗначенияАтрибута);
	ИначеЕсли ЗначениеЗаполнено(ТекущееЗначениеАтрибута) Тогда
		Отбор = Новый Структура("ЗначениеАтрибута", ТекущееЗначениеАтрибута);
	КонецЕсли;

	Если Отбор <> Неопределено Тогда
		ИдентификаторТекущейСтроки = 0;
		СтрокиЗначения = ЗначенияМаркетплейса.НайтиСтроки(Отбор);
		Если СтрокиЗначения.Количество() Тогда
			ИдентификаторТекущейСтроки = СтрокиЗначения[0].ПолучитьИдентификатор();
		КонецЕсли;

		Если ЗначениеЗаполнено(ИдентификаторТекущейСтроки) Тогда
			Элементы.ЗначенияМаркетплейса.ТекущаяСтрока = ИдентификаторТекущейСтроки;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборЗначения(ВыбранноеЗначение, ЗакрыватьФорму = Истина)

	Если ВыбранноеЗначение = Неопределено Тогда 
		Возврат;
	КонецЕсли;

	ЗначениеВыбрано = Истина;

	Результат = Новый Структура;
	Результат.Вставить("ИдентификаторЗначенияАтрибута", ВыбранноеЗначение.ИдентификаторЗначенияАтрибута);
	Результат.Вставить("ЗначениеАтрибута", ВыбранноеЗначение.ЗначениеАтрибута);

	Если ЗакрыватьПриВыборе Тогда
		Результат.Вставить("АдресХранилищаДоступныхЗначений", АдресХранилищаДоступныхЗначений);
	Иначе
		ОповеститьОВыборе(Результат);
		Результат = Неопределено;
	КонецЕсли;

	Если ЗакрыватьФорму Тогда
		Закрыть(Результат);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
