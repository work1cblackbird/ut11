#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СтруктураЗаполненияПриходногоОрдера() Экспорт
	
	Структура = Новый Структура;
	
	Структура.Вставить("Распоряжение",               Неопределено);
	Структура.Вставить("Отправитель",                Неопределено);
	Структура.Вставить("ЗакрыватьГрафикПоступления", Неопределено);
	Структура.Вставить("Склад",                      Неопределено);
	Структура.Вставить("Помещение",                  Неопределено);
	Структура.Вставить("ЗонаПриемки",                Неопределено);
	Структура.Вставить("ДатаВходящегоДокумента",     Неопределено);
	Структура.Вставить("НомерВходящегоДокумента",    Неопределено);
	Структура.Вставить("ДатаПоступления",            Неопределено);
	Структура.Вставить("ХозяйственнаяОперация",      Неопределено);
	
	Возврат Структура;
	
КонецФункции

Функция СтруктураЗаполненияРасходногоОрдера() Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Склад");
	СтруктураПараметров.Вставить("Помещение");
	СтруктураПараметров.Вставить("Получатель");
	СтруктураПараметров.Вставить("ЗонаОтгрузки");
	СтруктураПараметров.Вставить("ЗаданиеНаПеревозку");
	СтруктураПараметров.Вставить("РаспоряженияНаОтгрузку", Новый Массив);
	СтруктураПараметров.Вставить("ФоновоеЗадание", Ложь);

	Возврат СтруктураПараметров
	
КонецФункции

#Если НЕ МобильныйАвтономныйСервер Тогда

#Область СчетчикиПриемка

Функция РаспоряженияНаПриемку(Склад, ДатаПоступления, СостояниеПоступленияФильтр) Экспорт
	
	ИспользоватьСтатусыПриходныхОрдеров = ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыПриходныхОрдеров", Новый Структура("Склад", Склад));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыКПоступлениюОстаткиТекущие.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКПоступлениюОстаткиТекущие.Отправитель КАК Отправитель,
	|	ТоварыКПоступлениюОстаткиТекущие.Номенклатура КАК Номенклатура,
	|	ТоварыКПоступлениюОстаткиТекущие.Характеристика КАК Характеристика,
	|	ТоварыКПоступлениюОстаткиТекущие.Назначение КАК Назначение,
	|	ТоварыКПоступлениюОстаткиТекущие.Склад КАК Склад,
	|	ТоварыКПоступлениюОстаткиТекущие.КОформлениюОрдеровОстаток КАК КОформлениюОрдеровОстаток,
	|	ТоварыКПоступлениюОстаткиТекущие.КОформлениюПоступленийПоОрдерамОстаток КАК КОформлениюПоступленийПоОрдерамОстаток,
	|	ТоварыКПоступлениюОстаткиТекущие.ПринимаетсяОстаток КАК ПринимаетсяОстаток,
	|	ТоварыКПоступлениюОстаткиТекущие.ХозяйственнаяОперация КАК ХозяйственнаяОперацияДляФильтра
	|ПОМЕСТИТЬ ТоварыКПоступлениюОстаткиТекущие
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(, Склад = &Склад) КАК ТоварыКПоступлениюОстаткиТекущие
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад,
	|	ДокументПоступления,
	|	Отправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлениюОрдеровОбороты.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлениюОрдеровОбороты.Характеристика КАК Характеристика,
	|	ТоварыКОформлениюОрдеровОбороты.Назначение КАК Назначение,
	|	ТоварыКОформлениюОрдеровОбороты.Склад КАК Склад,
	|	ТоварыКОформлениюОрдеровОбороты.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКОформлениюОрдеровОбороты.Отправитель КАК Отправитель,
	|	ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровОборот КАК КОформлениюОрдеровОборот,
	|	ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход КАК КОформлениюОрдеровПриход,
	|	ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровРасход КАК КОформлениюОрдеровРасход,
	|	ТоварыКОформлениюОрдеровОбороты.ПринимаетсяОборот КАК ПринимаетсяОборот,
	|	ТоварыКОформлениюОрдеровОбороты.ПринимаетсяПриход КАК ПринимаетсяПриход,
	|	ТоварыКОформлениюОрдеровОбороты.ПринимаетсяРасход КАК ПринимаетсяРасход
	|ПОМЕСТИТЬ ТоварыКОформлениюОрдеровОбороты
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Обороты(, , , &ФильтрОборотов) КАК ТоварыКОформлениюОрдеровОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад,
	|	ДокументПоступления,
	|	Отправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКПоступлениюОстаткиНаДату.Отправитель КАК Отправитель,
	|	ТоварыКПоступлениюОстаткиНаДату.Номенклатура КАК Номенклатура,
	|	ТоварыКПоступлениюОстаткиНаДату.Характеристика КАК Характеристика,
	|	ТоварыКПоступлениюОстаткиНаДату.Назначение КАК Назначение,
	|	МИНИМУМ(ТоварыКПоступлениюОстаткиНаДату.Серия) КАК Серия,
	|	ТоварыКПоступлениюОстаткиНаДату.Склад КАК Склад,
	|	ТоварыКПоступлениюОстаткиНаДату.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	СУММА(ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток) КАК КОформлениюОрдеровОстаток,
	|	МАКСИМУМ(ТоварыКПоступлениюОстаткиНаДату.КОформлениюПоступленийПоОрдерамОстаток) КАК КОформлениюПоступленийПоОрдерамОстаток,
	|	СУММА(ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток) КАК ПринимаетсяОстаток
	|ПОМЕСТИТЬ ТоварыКПоступлениюОстаткиНаДату
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(
	|			&ДатаПоступления,
	|			(Номенклатура, Характеристика, Назначение, Склад, ДокументПоступления, Отправитель, ХозяйственнаяОперация) В
	|				(ВЫБРАТЬ
	|					ФильтрТоваровКПоступлению.Номенклатура,
	|					ФильтрТоваровКПоступлению.Характеристика,
	|					ФильтрТоваровКПоступлению.Назначение,
	|					ФильтрТоваровКПоступлению.Склад,
	|					ФильтрТоваровКПоступлению.ДокументПоступления,
	|					ФильтрТоваровКПоступлению.Отправитель,
	|					ФильтрТоваровКПоступлению.ХозяйственнаяОперацияДляФильтра КАК ХозяйственнаяОперация 
	|				ИЗ
	|					ТоварыКПоступлениюОстаткиТекущие КАК ФильтрТоваровКПоступлению)) КАК ТоварыКПоступлениюОстаткиНаДату
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКПоступлениюОстаткиНаДату.Характеристика,
	|	ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления,
	|	ТоварыКПоступлениюОстаткиНаДату.Номенклатура,
	|	ТоварыКПоступлениюОстаткиНаДату.Отправитель,
	|	ТоварыКПоступлениюОстаткиНаДату.Склад,
	|	ТоварыКПоступлениюОстаткиНаДату.ХозяйственнаяОперация,
	|	ТоварыКПоступлениюОстаткиНаДату.Назначение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад,
	|	ДокументПоступления,
	|	Отправитель,
	|	ХозяйственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Распоряжение КАК Распоряжение,
	|	ВложенныйЗапрос.Отправитель КАК Отправитель,
	|	ВложенныйЗапрос.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВложенныйЗапрос.НомерВходящегоДокумента = """"
	|				ТОГДА ВложенныйЗапрос.Номер
	|			ИНАЧЕ ВложенныйЗапрос.НомерВходящегоДокумента
	|		КОНЕЦ) КАК Номер,
	|	МАКСИМУМ(ВложенныйЗапрос.Дата) КАК Дата,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерВходящегоДокумента) КАК НомерВходящегоДокумента,
	|	МАКСИМУМ(ВложенныйЗапрос.ДатаВходящегоДокумента) КАК ДатаВходящегоДокумента,
	|	МИНИМУМ(ВложенныйЗапрос.Перепоставка) КАК Перепоставка,
	|	МИНИМУМ(ВложенныйЗапрос.Состояние) КАК Состояние,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.ВПроцессеПриемки)
	|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.ОжидаетсяПриемка)
	|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.Перепоставка)
	|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 4
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.ОжидаетсяОформлениеНакладных)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК СостояниеПоступления,
	|	ВложенныйЗапрос.ТипДокумента КАК ТипДокумента,
	|	ВЫБОР
	|		КОГДА НЕ ВложенныйЗапрос.Распоряжение.Менеджер ЕСТЬ NULL
	|			ТОГДА ВложенныйЗапрос.Распоряжение.Менеджер
	|		ИНАЧЕ ВложенныйЗапрос.Распоряжение.Ответственный
	|	КОНЕЦ КАК Ответственный,
	|	&ОтветственныйЗаголовок КАК ОтветственныйЗаголовок
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Распоряжение,
	|		ТоварыКПоступлениюОстаткиНаДату.Отправитель КАК Отправитель,
	|		ТоварыКПоступлениюОстаткиНаДату.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Номер КАК СТРОКА(11))
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.ДоговорыКонтрагентов).Номер КАК СТРОКА(11))
	|			ИНАЧЕ ЕСТЬNULL(РеестрДокументов.НомерДокументаИБ, """")
	|		КОНЕЦ КАК Номер,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Дата
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.ДоговорыКонтрагентов).Дата
	|			ИНАЧЕ ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1, 1, 1))
	|		КОНЕЦ КАК Дата,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|					ИЛИ ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА """"
	|			ИНАЧЕ ЕСТЬNULL(РеестрДокументов.НомерПервичногоДокумента, """")
	|		КОНЕЦ КАК НомерВходящегоДокумента,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|					ИЛИ ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|			ИНАЧЕ ЕСТЬNULL(РеестрДокументов.ДатаПервичногоДокумента, ДАТАВРЕМЯ(1, 1, 1))
	|		КОНЕЦ КАК ДатаВходящегоДокумента,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Наименование
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.ДоговорыКонтрагентов).Наименование
	|			КОГДА &УсловиеИспользованияХозяйственнойОперацииРеестра
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(РеестрДокументов.ХозяйственнаяОперация)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТИПЗНАЧЕНИЯ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления))
	|		КОНЕЦ КАК ТипДокумента,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток - ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток < 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК Перепоставка,
	|		ВЫБОР
	|			КОГДА &УсловиеСостояниеВПроцессеПриемки
	|				ТОГДА 1
	|			КОГДА &УсловиеСостояниеОжидаетсяПриемка
	|				ТОГДА 2
	|			КОГДА &УсловиеСостояниеПерепоставка
	|				ТОГДА 3
	|			КОГДА ЕСТЬNULL(ТоварыКПоступлениюОстаткиНаДату.КОформлениюПоступленийПоОрдерамОстаток, 0) <> 0
	|				ТОГДА 4
	|			КОГДА &УсловиеСостояниеДопустимоеОтклонение
	|				ТОГДА 6
	|			ИНАЧЕ 404
	|		КОНЕЦ КАК Состояние
	|	ИЗ
	|		ТоварыКПоступлениюОстаткиНаДату КАК ТоварыКПоступлениюОстаткиНаДату
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКПоступлениюОстаткиТекущие КАК ТоварыКПоступлениюОстаткиТекущие
	|			ПО ТоварыКПоступлениюОстаткиНаДату.Номенклатура = ТоварыКПоступлениюОстаткиТекущие.Номенклатура
	|				И ТоварыКПоступлениюОстаткиНаДату.Характеристика = ТоварыКПоступлениюОстаткиТекущие.Характеристика
	|				И ТоварыКПоступлениюОстаткиНаДату.Назначение = ТоварыКПоступлениюОстаткиТекущие.Назначение
	|				И ТоварыКПоступлениюОстаткиНаДату.Отправитель = ТоварыКПоступлениюОстаткиТекущие.Отправитель
	|				И ТоварыКПоступлениюОстаткиНаДату.Склад = ТоварыКПоступлениюОстаткиТекущие.Склад
	|				И ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления = ТоварыКПоступлениюОстаткиТекущие.ДокументПоступления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКОформлениюОрдеровОбороты КАК ТоварыКОформлениюОрдеровОбороты
	|			ПО ТоварыКПоступлениюОстаткиНаДату.Номенклатура = ТоварыКОформлениюОрдеровОбороты.Номенклатура
	|				И ТоварыКПоступлениюОстаткиНаДату.Характеристика = ТоварыКОформлениюОрдеровОбороты.Характеристика
	|				И ТоварыКПоступлениюОстаткиНаДату.Назначение = ТоварыКОформлениюОрдеровОбороты.Назначение
	|				И ТоварыКПоступлениюОстаткиНаДату.Отправитель = ТоварыКОформлениюОрдеровОбороты.Отправитель
	|				И ТоварыКПоступлениюОстаткиНаДату.Склад = ТоварыКОформлениюОрдеровОбороты.Склад
	|				И ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления = ТоварыКОформлениюОрдеровОбороты.ДокументПоступления
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|			ПО ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления = РеестрДокументов.Ссылка
	|				И (НЕ РеестрДокументов.ДополнительнаяЗапись)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДоговорыКонтрагентов.Ссылка,
	|		ДоговорыКонтрагентов.Партнер,
	|		ДоговорыКонтрагентов.ХозяйственнаяОперация,
	|		ВЫРАЗИТЬ(ДоговорыКонтрагентов.Номер КАК СТРОКА(11)),
	|		ДоговорыКонтрагентов.Дата,
	|		"""",
	|		ДАТАВРЕМЯ(1, 1, 1),
	|		ДоговорыКонтрагентов.Наименование,
	|		ЛОЖЬ,
	|		5
	|	ИЗ
	|		Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|	ГДЕ
	|		ДоговорыКонтрагентов.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных)
	|		И ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|		И НЕ ДоговорыКонтрагентов.ПометкаУдаления) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Распоряжение,
	|	ВложенныйЗапрос.Отправитель,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	ВложенныйЗапрос.ТипДокумента,
	|	ВЫБОР
	|		КОГДА НЕ ВложенныйЗапрос.Распоряжение.Менеджер ЕСТЬ NULL
	|			ТОГДА ВложенныйЗапрос.Распоряжение.Менеджер
	|		ИНАЧЕ ВложенныйЗапрос.Распоряжение.Ответственный
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ВложенныйЗапрос.Состояние) В (&УсловиеПоСостоянию)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтветственныйЗаголовок", НСтр("ru = '""Менеджер""'"));

	УсловиеИспользованияХозяйственнойОперацииРеестра = "ТИПЗНАЧЕНИЯ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления) = ТИП(Документ.ПрочееОприходованиеТоваров)";
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеИспользованияХозяйственнойОперацииРеестра", УсловиеИспользованияХозяйственнойОперацииРеестра);
	
	ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		
		УсловиеСостояниеОжидаетсяПриемка = "ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток > ВЫБОР
			|			КОГДА ТоварыКПоступлениюОстаткиНаДату.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины
			|					В (&МерныеТипыЕдиницИзмерений)
			|				ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100
			|					* ЕСТЬNULL(ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход,0)
			|			ИНАЧЕ 0
			|		КОНЕЦ
			|	И ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток = 0";
		
		УсловиеСостояниеПерепоставка = "ТоварыКПоступлениюОстаткиТекущие.КОформлениюОрдеровОстаток < ВЫБОР
			|			КОГДА ТоварыКПоступлениюОстаткиНаДату.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины
			|					В (&МерныеТипыЕдиницИзмерений)
			|				ТОГДА - &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100
			|					* ЕСТЬNULL(ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход,0)
			|			ИНАЧЕ 0
			|		КОНЕЦ
			|	И ТоварыКПоступлениюОстаткиТекущие.ПринимаетсяОстаток = 0";
		
		УсловиеСостояниеВПроцессеПриемки = "ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток > 0";
		
		УсловиеСостояниеДопустимоеОтклонение = "ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток <= ВЫБОР
			|			КОГДА ТоварыКПоступлениюОстаткиНаДату.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В(&МерныеТипыЕдиницИзмерений)
			|				ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100
			|					* ЕСТЬNULL(ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход, 0)
			|			ИНАЧЕ 0
			|		КОНЕЦ
			|		И ТоварыКПоступлениюОстаткиТекущие.КОформлениюОрдеровОстаток >= ВЫБОР
			|			КОГДА ТоварыКПоступлениюОстаткиНаДату.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В(&МерныеТипыЕдиницИзмерений)
			|				ТОГДА -&ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100
			|					* ЕСТЬNULL(ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход, 0)
			|			ИНАЧЕ 0
			|		КОНЕЦ
			|		И ТоварыКПоступлениюОстаткиТекущие.ПринимаетсяОстаток = 0";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеОжидаетсяПриемка", 	УсловиеСостояниеОжидаетсяПриемка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеПерепоставка", 		УсловиеСостояниеПерепоставка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеВПроцессеПриемки", 	УсловиеСостояниеВПроцессеПриемки);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеДопустимоеОтклонение",УсловиеСостояниеДопустимоеОтклонение);
		
		ФильтрОборотов =
		"				(Номенклатура, Характеристика, Назначение, Склад, ДокументПоступления, Отправитель) В
		|					(ВЫБРАТЬ
		|						ТоварыКПоступлениюОстаткиТекущие.Номенклатура,
		|						ТоварыКПоступлениюОстаткиТекущие.Характеристика,
		|						ТоварыКПоступлениюОстаткиТекущие.Назначение,
		|						ТоварыКПоступлениюОстаткиТекущие.Склад,
		|						ТоварыКПоступлениюОстаткиТекущие.ДокументПоступления,
		|						ТоварыКПоступлениюОстаткиТекущие.Отправитель
		|					ИЗ
		|						ТоварыКПоступлениюОстаткиТекущие КАК ТоварыКПоступлениюОстаткиТекущие)";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ФильтрОборотов", ФильтрОборотов);
		
	Иначе
		
		УсловиеСостояниеОжидаетсяПриемка = "ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток > 0
											|	И ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток = 0";
		
		УсловиеСостояниеПерепоставка = "ТоварыКПоступлениюОстаткиТекущие.КОформлениюОрдеровОстаток < 0
											|	И ТоварыКПоступлениюОстаткиТекущие.ПринимаетсяОстаток = 0";
		
		УсловиеСостояниеВПроцессеПриемки = "ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток > 0";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеПерепоставка", УсловиеСостояниеПерепоставка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеОжидаетсяПриемка", УсловиеСостояниеОжидаетсяПриемка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеВПроцессеПриемки", УсловиеСостояниеВПроцессеПриемки);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеДопустимоеОтклонение","ЛОЖЬ");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ФильтрОборотов", "ЛОЖЬ");
		
	КонецЕсли;
	
	ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
	Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",
		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
	Запрос.УстановитьПараметр("МерныеТипыЕдиницИзмерений",
		Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Если ЗначениеЗаполнено(ДатаПоступления) Тогда
		Запрос.УстановитьПараметр("ДатаПоступления", КонецДня(ДатаПоступления)); 
	Иначе
		Запрос.УстановитьПараметр("ДатаПоступления", ДатаПоступления); 
	КонецЕсли;
	
	СостоянияПоступления = Новый Массив;
	
	СоответствиеСостоянийИндексов = Новый Соответствие;
	
	СоответствиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.ВПроцессеПриемки, 1);
	СоответствиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.ОжидаетсяПриемка, 2);
	СоответствиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.Перепоставка, 3);
	СоответствиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.ОжидаетсяОформлениеНакладных, 4);
	СоответствиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.ПустаяСсылка(),5);

	Если СостояниеПоступленияФильтр = "" Тогда
		Для Каждого ЗначениеПеречисления Из Перечисления.СостоянияПоступленияТоваров Цикл 
			СостоянияПоступления.Добавить(СоответствиеСостоянийИндексов.Получить(ЗначениеПеречисления));	
		КонецЦикла;
		СостоянияПоступления.Добавить(СоответствиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров.ПустаяСсылка()));
	ИначеЕсли СостояниеПоступленияФильтр = "ВсеКПриемке" Тогда
		СостоянияПоступления.Добавить(СоответствиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров.ОжидаетсяПриемка));
		СостоянияПоступления.Добавить(СоответствиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров.ВПроцессеПриемки));
		СостоянияПоступления.Добавить(СоответствиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров.ПустаяСсылка()));
	Иначе
		СостоянияПоступления.Добавить(СоответствиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров.ОжидаетсяПриемка));
	КонецЕсли;
	
	СостоянияПоступления.Добавить(404);
	
	Запрос.УстановитьПараметр("УсловиеПоСостоянию", СостоянияПоступления);
	
	Возврат Запрос;
	
КонецФункции

Функция ТоварыКРазмещениюПоЯчейкам() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.СкладскаяГруппаНоменклатуры КАК СкладскаяГруппаНоменклатуры,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Упаковка КАК Упаковка,
		|	ВложенныйЗапрос.СкладскаяГруппаУпаковок КАК СкладскаяГруппаУпаковок,
		|	ВложенныйЗапрос.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ВложенныйЗапрос.Размещается КАК Размещается,
		|	ВложенныйЗапрос.ОшибкаВУпаковке КАК ОшибкаВУпаковке,
		|	ВложенныйЗапрос.ОшибкаВОбластиХранения КАК ОшибкаВОбластиХранения,
		|	ВложенныйЗапрос.ОшибкаВНоменклатуре КАК ОшибкаВНоменклатуре,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	ВложенныйЗапрос.Назначение КАК Назначение,
		|	ВложенныйЗапрос.Номенклатура КАК Ссылка
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
		|		ТоварыВЯчейкахОстатки.Номенклатура.СкладскаяГруппа КАК СкладскаяГруппаНоменклатуры,
		|		ТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
		|		ВЫБОР
		|			КОГДА ТоварыВЯчейкахОстатки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		|				ТОГДА ВЫБОР
		|						КОГДА ТоварыВЯчейкахОстатки.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|							ТОГДА ТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмерения
		|						ИНАЧЕ ТоварыВЯчейкахОстатки.Упаковка
		|					КОНЕЦ
		|			ИНАЧЕ ТоварыВЯчейкахОстатки.Номенклатура.ЕдиницаИзмерения
		|		КОНЕЦ КАК Упаковка,
		|		ВЫБОР
		|			КОГДА ТоварыВЯчейкахОстатки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		|				ТОГДА ЕСТЬNULL(ТоварыВЯчейкахОстатки.Упаковка.СкладскаяГруппа, ЗНАЧЕНИЕ(Справочник.СкладскиеГруппыУпаковок.ПустаяСсылка))
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СкладскиеГруппыУпаковок.ПустаяСсылка)
		|		КОНЕЦ КАК СкладскаяГруппаУпаковок,
		|		ТоварыВЯчейкахОстатки.ВНаличииОстаток - ТоварыВЯчейкахОстатки.КОтборуОстаток КАК КоличествоУпаковок,
		|		ТоварыВЯчейкахОстатки.КОтборуОстаток КАК Размещается,
		|		ВЫБОР
		|			КОГДА ТоварыВЯчейкахОстатки.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|						И НЕ ТоварыВЯчейкахОстатки.Упаковка.Безразмерная
		|						И (ТоварыВЯчейкахОстатки.Упаковка.Высота = 0
		|							ИЛИ ТоварыВЯчейкахОстатки.Упаковка.Ширина = 0
		|							ИЛИ ТоварыВЯчейкахОстатки.Упаковка.Глубина = 0
		|							ИЛИ ТоварыВЯчейкахОстатки.Упаковка.Объем = 0
		|								И ЕСТЬNULL(ТоварыВЯчейкахОстатки.Номенклатура.СкладскаяГруппа.ОграничиватьПоОбъему, ИСТИНА))
		|					ИЛИ ТоварыВЯчейкахОстатки.Упаковка.Вес = 0
		|						И ЕСТЬNULL(ТоварыВЯчейкахОстатки.Номенклатура.СкладскаяГруппа.ОграничиватьПоВесу, ИСТИНА)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК ОшибкаВУпаковке,
		|		ВЫБОР
		|			КОГДА ТоварыВЯчейкахОстатки.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|				ТОГДА ЕСТЬNULL(ТоварыВЯчейкахОстатки.Номенклатура.СкладскаяГруппа.ОграничиватьПоВесу, ИСТИНА)
		|							И НЕ ТоварыВЯчейкахОстатки.Номенклатура.ВесИспользовать
		|						ИЛИ ЕСТЬNULL(ТоварыВЯчейкахОстатки.Номенклатура.СкладскаяГруппа.ОграничиватьПоОбъему, ИСТИНА)
		|							И НЕ ТоварыВЯчейкахОстатки.Номенклатура.ОбъемИспользовать
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК ОшибкаВНоменклатуре,
		|		ВЫБОР
		|			КОГДА ПравилаРазмещенияТоваровВЯчейках.ОбластьХранения ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК ОшибкаВОбластиХранения,
		|		ТоварыВЯчейкахОстатки.Серия КАК Серия,
		|		ТоварыВЯчейкахОстатки.Назначение КАК Назначение
		|	ИЗ
		|		РегистрНакопления.ТоварыВЯчейках.Остатки(, Ячейка = &ЗонаПриемки) КАК ТоварыВЯчейкахОстатки
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаРазмещенияТоваровВЯчейках КАК ПравилаРазмещенияТоваровВЯчейках
		|			ПО ТоварыВЯчейкахОстатки.Номенклатура.СкладскаяГруппа = ПравилаРазмещенияТоваровВЯчейках.СкладскаяГруппаНоменклатуры
		|				И (ВЫБОР
		|					КОГДА ТоварыВЯчейкахОстатки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		|						ТОГДА ЕСТЬNULL(ТоварыВЯчейкахОстатки.Упаковка.СкладскаяГруппа, ЗНАЧЕНИЕ(Справочник.СкладскиеГруппыУпаковок.ПустаяСсылка))
		|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СкладскиеГруппыУпаковок.ПустаяСсылка)
		|				КОНЕЦ = ПравилаРазмещенияТоваровВЯчейках.СкладскаяГруппаУпаковок)
		|				И ТоварыВЯчейкахОстатки.Ячейка.Владелец = ПравилаРазмещенияТоваровВЯчейках.Склад
		|				И ТоварыВЯчейкахОстатки.Ячейка.Помещение = ПравилаРазмещенияТоваровВЯчейках.Помещение) КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.КоличествоУпаковок > 0";
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область СчетчикиОтгрузка

Функция СписокРаспоряженийНаОтгрузку(Склад) Экспорт
	
	Запрос = Новый Запрос;
	
	// Кэшируем текущие параметры
	ПараметрыРаспоряженияНаОтгрузку = Новый Структура("Склад, ЗаданиеНаПеревозку, ДатаОтгрузки");
	ЗаполнитьЗначенияСвойств(ПараметрыРаспоряженияНаОтгрузку, Запрос.Параметры);
	ПараметрыРаспоряженияНаОтгрузку.Вставить("ОтображениеДеталейОтгрузка", Ложь);
	ПараметрыРаспоряженияНаОтгрузку = Новый ФиксированнаяСтруктура(ПараметрыРаспоряженияНаОтгрузку);
	
	ТекстЗапроса = "";
	
	ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Номенклатура     КАК Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика   КАК Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение       КАК Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия            КАК Серия,
		|	ТоварыКОтгрузкеОбороты.Склад            КАК Склад,
		|	ТоварыКОтгрузкеОбороты.КОтгрузкеПриход  КАК Количество
		|
		|ПОМЕСТИТЬ ТоварыКОтгрузкеОбороты
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			,
		|			&УсловиеСоединенияОбороты) КАК ТоварыКОтгрузкеОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	Если НЕ Ложь Тогда
		
		Если СкладыСервер.НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку(Склад) Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СостоянияИРеквизитыДоставки.Распоряжение КАК ДокументОтгрузки,
			|	СостоянияИРеквизитыДоставки.ПолучательОтправитель КАК Получатель
			|ПОМЕСТИТЬ ВТРаспоряженияСДоставкойПоЗаданиям
			|ИЗ
			|	РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыКДоставке КАК ОтказОтПеревозки
			|		ПО (ОтказОтПеревозки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка))
			|			И СостоянияИРеквизитыДоставки.Склад = ОтказОтПеревозки.Склад
			|			И (ОтказОтПеревозки.Распоряжение = СостоянияИРеквизитыДоставки.Распоряжение)
			|ГДЕ
			|	СостоянияИРеквизитыДоставки.Склад = &Склад
			|	И СостоянияИРеквизитыДоставки.СпособДоставки В(&СпособыДоставки)
			|	И ОтказОтПеревозки.Распоряжение ЕСТЬ NULL
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВложенныйЗапрос.ДокументОтгрузки КАК ДокументОтгрузки,
			|	ВложенныйЗапрос.Получатель КАК Получатель,
			|	МИНИМУМ(ВложенныйЗапрос.Состояние) КАК Состояние
			|ПОМЕСТИТЬ ВТРаспоряженияКОтгрузке
			|ИЗ
			|	(ВЫБРАТЬ
			|		РаспоряженияКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
			|		РаспоряженияКОтгрузке.Получатель КАК Получатель,
			|		РаспоряженияКОтгрузке.Номенклатура КАК Номенклатура,
			|		РаспоряженияКОтгрузке.Характеристика КАК Характеристика,
			|		РаспоряженияКОтгрузке.Назначение КАК Назначение,
			|		РаспоряженияКОтгрузке.Серия КАК Серия,
			|		ВЫБОР
			|			КОГДА &ОжидаетсяОтбор
			|				ТОГДА 0
			|			КОГДА РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
			|				ТОГДА 1
			|			КОГДА РаспоряженияКОтгрузке.СобраноОстаток <> 0
			|				ТОГДА 2
			|			КОГДА РаспоряженияКОтгрузке.КОформлениюОстаток <> 0
			|				ТОГДА 3
			|			ИНАЧЕ 404
			|		КОНЕЦ КАК Состояние
			|	ИЗ
			|		РегистрНакопления.ТоварыКОтгрузке.Остатки(&ДатаОтгрузки, Склад = &Склад) КАК РаспоряженияКОтгрузке
			|	ГДЕ &УсловиеТоварыКОтбору) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.ДокументОтгрузки,
			|	ВложенныйЗапрос.Получатель
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ДокументОтгрузки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка КАК Ссылка,
			|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение,
			|	ЗаданиеНаПеревозкуРаспоряжения.ПолучательОтправитель КАК ПолучательОтправитель
			|ПОМЕСТИТЬ ВТОтборЗаданияНаПеревозку
			|ИЗ
			|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
			|ГДЕ
			|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Проведен
			|	И ЗаданиеНаПеревозкуРаспоряжения.Склад = &Склад
			|	И ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.КПогрузке))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Распоряжение
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТИПЗНАЧЕНИЯ(ЗаданияНаПеревозку.Распоряжение) КАК ТипДокумента,
			|	ЗаданияНаПеревозку.Распоряжение КАК Распоряжение,
			|	ЗаданияНаПеревозку.Ссылка КАК ЗаданиеНаПеревозку,
			|	ЗаданияНаПеревозку.Распоряжение.Номер КАК Номер,
			|	ЗаданияНаПеревозку.Распоряжение.Дата КАК Дата,
			|	ЗаданияНаПеревозку.ПолучательОтправитель КАК Получатель,
			|	ВЫБОР
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ КАК Состояние,
			|	1 КАК ИндексКартинки
			|ИЗ
			|	ВТОтборЗаданияНаПеревозку КАК ЗаданияНаПеревозку
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРаспоряженияКОтгрузке КАК ВТРаспоряженияКОтгрузке
			|		ПО (ВТРаспоряженияКОтгрузке.ДокументОтгрузки = ЗаданияНаПеревозку.Распоряжение)
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаданияНаПеревозку.Распоряжение,
			|	ЗаданияНаПеревозку.Распоряжение.Номер,
			|	ЗаданияНаПеревозку.Распоряжение.Дата,
			|	ЗаданияНаПеревозку.ПолучательОтправитель,
			|	ЗаданияНаПеревозку.Ссылка
			|
			|ИМЕЮЩИЕ
			|	ВЫБОР
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ В (&Состояния)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТИПЗНАЧЕНИЯ(РаспоряженияКОтгрузке.ДокументОтгрузки)
			|,
			|	РаспоряженияКОтгрузке.ДокументОтгрузки,
			|	ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка),
			|	ЕСТЬNULL(РеестрДокументов.НомерДокументаИБ, """"),
			|	ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1,1,1)),
			|	РаспоряженияКОтгрузке.Получатель,
			|	ВЫБОР
			|		КОГДА РаспоряженияКОтгрузке.Состояние = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА РаспоряженияКОтгрузке.Состояние = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА РаспоряженияКОтгрузке.Состояние = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА РаспоряженияКОтгрузке.Состояние = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ,
			|	0
			|ИЗ
			|	ВТРаспоряженияКОтгрузке КАК РаспоряженияКОтгрузке
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
			|		ПО РаспоряженияКОтгрузке.ДокументОтгрузки = РеестрДокументов.Ссылка
			|			И (НЕ РеестрДокументов.ДополнительнаяЗапись)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаспоряженияСДоставкойПоЗаданиям КАК ВТРаспоряженияСДоставкойПоЗаданиям
			|		ПО РаспоряженияКОтгрузке.ДокументОтгрузки = ВТРаспоряженияСДоставкойПоЗаданиям.ДокументОтгрузки
			|ГДЕ
			|	ВТРаспоряженияСДоставкойПоЗаданиям.ДокументОтгрузки ЕСТЬ NULL
			|	И ВЫБОР
			|			КОГДА РаспоряженияКОтгрузке.Состояние = 0
			|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|			КОГДА РаспоряженияКОтгрузке.Состояние = 1
			|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|			КОГДА РаспоряженияКОтгрузке.Состояние = 2
			|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|			КОГДА РаспоряженияКОтгрузке.Состояние = 3
			|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|		КОНЕЦ В (&Состояния)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата";
			
			СпособыДоставки = ДоставкаТоваровКлиентСервер.СпособыДоставкиДоКлиентаСНашимУчастием(
				ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками"));
			
			Запрос.УстановитьПараметр("СпособыДоставки", СпособыДоставки);
						
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВложенныйЗапрос.ДокументОтгрузки КАК Распоряжение,
			|	ВложенныйЗапрос.Получатель КАК Получатель,
			|	ВЫБОР
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ КАК Состояние
			|ПОМЕСТИТЬ РаспоряженияИСостояния
			|ИЗ
			|	(ВЫБРАТЬ
			|		РаспоряженияКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
			|		РаспоряженияКОтгрузке.Получатель КАК Получатель,
			|		РаспоряженияКОтгрузке.Номенклатура КАК Номенклатура,
			|		РаспоряженияКОтгрузке.Характеристика КАК Характеристика,
			|		РаспоряженияКОтгрузке.Назначение КАК Назначение,
			|		РаспоряженияКОтгрузке.Серия КАК Серия,
			|		ВЫБОР
			|			КОГДА &ОжидаетсяОтбор
			|				ТОГДА 0
			|			КОГДА РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
			|				ТОГДА 1
			|			КОГДА РаспоряженияКОтгрузке.СобраноОстаток <> 0
			|				ТОГДА 2
			|			КОГДА РаспоряженияКОтгрузке.КОформлениюОстаток <> 0
			|				ТОГДА 3
			|			ИНАЧЕ 404
			|		КОНЕЦ КАК Состояние
			|	ИЗ
			|		РегистрНакопления.ТоварыКОтгрузке.Остатки(&ДатаОтгрузки, Склад = &Склад) КАК РаспоряженияКОтгрузке
			|	ГДЕ &УсловиеТоварыКОтбору) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.ДокументОтгрузки,
			|	ВложенныйЗапрос.Получатель
			|
			|ИМЕЮЩИЕ
			|	ВЫБОР
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ В (&Состояния)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РаспоряженияИСостояния.Распоряжение КАК Распоряжение,
			|	РаспоряженияИСостояния.Получатель КАК Получатель,
			|	ЕСТЬNULL(РеестрДокументов.НомерДокументаИБ, """") КАК Номер,
			|	ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1,1,1)) КАК Дата,
			|	ТИПЗНАЧЕНИЯ(РаспоряженияИСостояния.Распоряжение)
			| 	КАК ТипДокумента,
			|	РаспоряженияИСостояния.Состояние,
			|	ВЫБОР
			|		КОГДА НЕ РаспоряженияИСостояния.Распоряжение.Менеджер ЕСТЬ NULL
			|			ТОГДА РаспоряженияИСостояния.Распоряжение.Менеджер
			|		ИНАЧЕ РаспоряженияИСостояния.Распоряжение.Ответственный
			|	КОНЕЦ КАК Ответственный,
			|	0 КАК ИндексКартинки,
			|	&ОтветственныйЗаголовок КАК ОтветственныйЗаголовок
			|ИЗ
			|	РаспоряженияИСостояния КАК РаспоряженияИСостояния
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
			|		ПО РаспоряженияИСостояния.Распоряжение = РеестрДокументов.Ссылка
			|			И (НЕ РеестрДокументов.ДополнительнаяЗапись)
			|
			|УПОРЯДОЧИТЬ ПО
			|	РеестрДокументов.ДатаДокументаИБ";
		КонецЕсли; 
	
	Иначе // ОтображениеДеталейОтгрузка
	
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.ДокументОтгрузки КАК Распоряжение,
		|	ВложенныйЗапрос.Получатель КАК Получатель,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 0
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
		|	КОНЕЦ КАК Состояние
		|ПОМЕСТИТЬ РаспоряженияИСостояния
		|ИЗ
		|	(ВЫБРАТЬ
		|		РаспоряженияКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|		РаспоряженияКОтгрузке.Получатель КАК Получатель,
		|		РаспоряженияКОтгрузке.Номенклатура КАК Номенклатура,
		|		РаспоряженияКОтгрузке.Характеристика КАК Характеристика,
		|		РаспоряженияКОтгрузке.Назначение КАК Назначение,
		|		РаспоряженияКОтгрузке.Серия КАК Серия,
		|		ВЫБОР
		|			КОГДА &ОжидаетсяОтбор
		|				ТОГДА 0
		|			КОГДА РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
		|				ТОГДА 1
		|			КОГДА РаспоряженияКОтгрузке.СобраноОстаток <> 0
		|				ТОГДА 2
		|			КОГДА РаспоряженияКОтгрузке.КОформлениюОстаток <> 0
		|				ТОГДА 3
		|			ИНАЧЕ 404
		|		КОНЕЦ КАК Состояние
		|	ИЗ
		|		РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|				&ДатаОтгрузки,
		|				Склад = &Склад
		|					И ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК ДокументОтгрузки
		|						ИЗ
		|							Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|						ГДЕ
		|							ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &ЗаданиеНаПеревозку)) КАК РаспоряженияКОтгрузке
		|	ГДЕ &УсловиеТоварыКОтбору) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ДокументОтгрузки,
		|	ВложенныйЗапрос.Получатель
		|
		|ИМЕЮЩИЕ
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 0
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
		|	КОНЕЦ В (&Состояния)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТИПЗНАЧЕНИЯ(РаспоряженияИСостояния.Распоряжение)
		| 	КАК ТипДокумента,
		|	3 КАК ИндексКартинки,
		|	РаспоряженияИСостояния.Распоряжение,
		|	&ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|	РаспоряженияИСостояния.Получатель,
		|	ЕСТЬNULL(РеестрДокументов.НомерДокументаИБ, """") КАК Номер,
		|	ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1,1,1)) КАК Дата,
		|	РаспоряженияИСостояния.Состояние,
		|	1 КАК Порядок
		|ИЗ
		|	РаспоряженияИСостояния КАК РаспоряженияИСостояния
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|		ПО РаспоряженияИСостояния.Распоряжение = РеестрДокументов.Ссылка
		|			И (НЕ РеестрДокументов.ДополнительнаяЗапись)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТИПЗНАЧЕНИЯ(ЗаданиеНаПеревозку.Ссылка),
		|	2,
		|	ЗаданиеНаПеревозку.Ссылка,
		|	ЗаданиеНаПеревозку.Ссылка,
		|	НЕОПРЕДЕЛЕНО,
		|	"""",
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка),
		|	0
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
		|ГДЕ
		|	ЗаданиеНаПеревозку.Ссылка = &ЗаданиеНаПеревозку
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	Дата";
		
	КонецЕсли;
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		
		ОжидаетсяОтбор = 
		"		&ОформлятьСначалаНакладные
		|			И ВЫБОР
		|				КОГДА РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.КОформлениюОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток >= 0
		|					ТОГДА РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.КОформлениюОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток
		|				ИНАЧЕ -(РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.КОформлениюОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток)
		|			КОНЕЦ > ВЫБОР
		|				КОГДА РаспоряженияКОтгрузке.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|					ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ТоварыКОтгрузкеОбороты.Количество
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЛИ НЕ &ОформлятьСначалаНакладные
		|			И ВЫБОР
		|				КОГДА РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток >= 0
		|					ТОГДА РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток
		|				ИНАЧЕ -(РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток)
		|			КОНЕЦ > ВЫБОР
		|				КОГДА РаспоряженияКОтгрузке.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|					ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ТоварыКОтгрузкеОбороты.Количество
		|				ИНАЧЕ 0
		|			КОНЕЦ";
				
		УсловиеТоварыКОтбору = "
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКОтгрузкеОбороты КАК ТоварыКОтгрузкеОбороты
		|		ПО РаспоряженияКОтгрузке.ДокументОтгрузки = ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|			И РаспоряженияКОтгрузке.Номенклатура = ТоварыКОтгрузкеОбороты.Номенклатура
		|			И РаспоряженияКОтгрузке.Характеристика = ТоварыКОтгрузкеОбороты.Характеристика
		|			И РаспоряженияКОтгрузке.Назначение = ТоварыКОтгрузкеОбороты.Назначение
		|			И РаспоряженияКОтгрузке.Серия = ТоварыКОтгрузкеОбороты.Серия
		|			И РаспоряженияКОтгрузке.Склад = ТоварыКОтгрузкеОбороты.Склад
		|ГДЕ
		|
		|	РаспоряженияКОтгрузке.КОформлениюОстаток >
		|		ВЫБОР
		|			КОГДА РаспоряженияКОтгрузке.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|				ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ТоварыКОтгрузкеОбороты.Количество
		|					ИНАЧЕ 0
		|		КОНЕЦ
		|
		|	ИЛИ РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
		|	ИЛИ РаспоряженияКОтгрузке.СобраноОстаток <> 0
		|	ИЛИ (&ОжидаетсяОтбор)";
		
		УсловиеТоварыКОтбору = СтрЗаменить(УсловиеТоварыКОтбору,"&ОжидаетсяОтбор", ОжидаетсяОтбор);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ГДЕ &УсловиеТоварыКОтбору", УсловиеТоварыКОтбору);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОжидаетсяОтбор", ОжидаетсяОтбор);
		Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
		Запрос.УстановитьПараметр("МерныеТипыЕдиницИзмерений", Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
	Иначе
		
		ОжидаетсяОтбор = 
		"&ОформлятьСначалаНакладные
		|			И РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.КОформлениюОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток > 0
		|		ИЛИ НЕ &ОформлятьСначалаНакладные
		|			И РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток > 0";
		
		УсловиеТоварыКОтбору = 
		"ГДЕ 
		|	(РаспоряженияКОтгрузке.КОформлениюОстаток <> 0
		|			ИЛИ (&ОжидаетсяОтбор)
		|			ИЛИ РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
		|			ИЛИ РаспоряженияКОтгрузке.СобраноОстаток <> 0)";
		
		УсловиеТоварыКОтбору = СтрЗаменить(УсловиеТоварыКОтбору,"&ОжидаетсяОтбор", ОжидаетсяОтбор);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ГДЕ &УсловиеТоварыКОтбору", УсловиеТоварыКОтбору);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОжидаетсяОтбор", ОжидаетсяОтбор);
		
	КонецЕсли;
	

	УсловиеСоединенияОбороты = "Склад = &Склад"; 
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОтветственныйЗаголовок", НСтр("ru = '""Менеджер""'"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеСоединенияОбороты", УсловиеСоединенияОбороты);
	
	Запрос.Текст = ТекстЗапроса;
	Возврат Запрос;
	
КонецФункции

Функция СписокТоваровНаОтгрузкуПриемку(ТипДокумента, Распоряжение) Экспорт
	
	Если ТипДокумента = 1 Тогда 
								
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыКПоступлениюОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлениюОстатки.Характеристика КАК Характеристика,
		|	ТоварыКПоступлениюОстатки.Назначение КАК Назначение,
		|	ТоварыКПоступлениюОстатки.Серия КАК Серия,
		|	ТоварыКПоступлениюОстатки.Склад КАК Склад,
		|	ТоварыКПоступлениюОстатки.КОформлениюОрдеровОстаток КАК КоличествоУпаковок,
		|	ТоварыКПоступлениюОстатки.Номенклатура.ЕдиницаИзмерения КАК Упаковка
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(, ДокументПоступления = &ДокументПоступления) КАК ТоварыКПоступлениюОстатки
		|ГДЕ
		|	ТоварыКПоступлениюОстатки.КОформлениюОрдеровОстаток > 0";
			
		Запрос.УстановитьПараметр("ДокументПоступления", Распоряжение);
			
		Возврат Запрос.Выполнить().Выгрузить();
		
	Иначе
				
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыКОтгрузкеОстатки.Склад КАК Склад,
		|	ТоварыКОтгрузкеОстатки.Получатель КАК Получатель,
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузкеОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузкеОстатки.Назначение КАК Назначение,
		|	ТоварыКОтгрузкеОстатки.Серия КАК Серия,
		|	ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток КАК КоличествоУпаковок,
		|	ТоварыКОтгрузкеОстатки.Номенклатура.ЕдиницаИзмерения КАК Упаковка
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(, ДокументОтгрузки = &ДокументОтгрузки) КАК ТоварыКОтгрузкеОстатки
		|ГДЕ
		|	ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток > 0";
		
		Запрос.УстановитьПараметр("ДокументОтгрузки", Распоряжение);
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецФункции	
		
#КонецОбласти

Функция ПолитикаУчетаСерий(ВидНоменклатуры, Склад) Экспорт
	
	ЗначенияПолейСвязи = Новый Структура();
	ЗначенияПолейСвязи.Вставить("Склад", Склад);
	
	НастройкиИспользованияСерий = Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий(ВидНоменклатуры,,ЗначенияПолейСвязи);
	
	Возврат НастройкиИспользованияСерий.ПолитикаУчетаСерий;

КонецФункции

#КонецЕсли

#Область СчетчикиПриемка

Функция СписокЗаданийНаРазмещение() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументОтборРазмещениеТоваров.Ссылка КАК Ссылка,
		|	ДокументОтборРазмещениеТоваров.ПометкаУдаления КАК ПометкаУдаления,
		|	ДокументОтборРазмещениеТоваров.Номер КАК Номер,
		|	ДокументОтборРазмещениеТоваров.Дата КАК Дата,
		|	ДокументОтборРазмещениеТоваров.Проведен КАК Проведен,
		|	ДокументОтборРазмещениеТоваров.ВидОперации КАК ВидОперации,
		|	ДокументОтборРазмещениеТоваров.ЗонаПриемки КАК ЗонаПриемки,
		|	ДокументОтборРазмещениеТоваров.Исполнитель КАК Исполнитель,
		|	ДокументОтборРазмещениеТоваров.Комментарий КАК Комментарий,
		|	ДокументОтборРазмещениеТоваров.Статус КАК Статус,
		|	ДокументОтборРазмещениеТоваров.ОбъемРазмещение КАК ОбъемРазмещение,
		|	ДокументОтборРазмещениеТоваров.ВесРазмещение КАК ВесРазмещение,
		|	&ИсполнительЗаголовок КАК ИсполнительЗаголовок
		|ИЗ
		|	Документ.ОтборРазмещениеТоваров КАК ДокументОтборРазмещениеТоваров
		|ГДЕ
		|	ДокументОтборРазмещениеТоваров.ЗонаПриемки = &ЗонаПриемки
		|	И ДокументОтборРазмещениеТоваров.Склад = &Склад
		|	И &УсловиеИсполнитель
		|	И &УсловиеСтатус
		|	И &УсловиеПомещение
		|	И ДокументОтборРазмещениеТоваров.Проведен
		|	И НЕ ДокументОтборРазмещениеТоваров.ПометкаУдаления"; 
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсполнительЗаголовок", НСтр("ru = '""Кладовщик""'"));	
	Возврат Запрос;
	
КонецФункции

Функция СписокПриходныхОрдеров() Экспорт

	#Если НЕ МобильныйАвтономныйСервер Тогда

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	ПриходныйОрдерНаТовары.Номер КАК Номер,
	|	ПриходныйОрдерНаТовары.Дата КАК Дата,
	|	ПриходныйОрдерНаТовары.Комментарий КАК Комментарий,
	|	ПриходныйОрдерНаТовары.Статус КАК Статус,
	|	ПриходныйОрдерНаТовары.Помещение КАК Помещение,  
	|	ПриходныйОрдерНаТовары.Отправитель КАК Отправитель,
	|	ПриходныйОрдерНаТовары.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ПриходныйОрдерНаТовары.НомерВходящегоДокумента = """"
	|			ТОГДА ПриходныйОрдерНаТовары.Номер
	|		ИНАЧЕ ПриходныйОрдерНаТовары.НомерВходящегоДокумента
	|	КОНЕЦ КАК НомерВходящегоДокумента,
	|	ВЫБОР
	|		КОГДА ПриходныйОрдерНаТовары.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПриходныйОрдерНаТовары.Дата
	|		ИНАЧЕ ПриходныйОрдерНаТовары.ДатаВходящегоДокумента
	|	КОНЕЦ КАК ДатаВходящегоДокумента,
	|	ПриходныйОрдерНаТовары.Исполнитель КАК Исполнитель,
	|	&ИсполнительЗаголовок КАК ИсполнительЗаголовок,
	|	ПриходныйОрдерНаТовары.Распоряжение КАК Распоряжение
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|ГДЕ
	|	ПриходныйОрдерНаТовары.Склад = &Склад
	|	И &УсловиеПомещение
	|	И &УсловиеИсполнитель
	|	И &УсловиеСтатус
	|	И НЕ ПриходныйОрдерНаТовары.ПометкаУдаления
	|	И ПриходныйОрдерНаТовары.Проведен";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсполнительЗаголовок", НСтр("ru = '""Кладовщик""'"));
	Возврат Запрос;	
		
	#Иначе  

	Запрос = Новый Запрос;
	Запрос.Текст = 

	"ВЫБРАТЬ
	|	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	ПриходныйОрдерНаТовары.Номер КАК Номер,
	|	ПриходныйОрдерНаТовары.Дата КАК Дата,
	|	ПриходныйОрдерНаТовары.Комментарий КАК Комментарий,
	|	ПриходныйОрдерНаТовары.Статус КАК Статус,
	|	ПриходныйОрдерНаТовары.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА ПриходныйОрдерНаТовары.НомерВходящегоДокумента = """"
	|			ТОГДА ПриходныйОрдерНаТовары.Номер
	|		ИНАЧЕ ПриходныйОрдерНаТовары.НомерВходящегоДокумента
	|	КОНЕЦ КАК НомерВходящегоДокумента,
	|	ВЫБОР
	|		КОГДА ПриходныйОрдерНаТовары.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПриходныйОрдерНаТовары.Дата
	|		ИНАЧЕ ПриходныйОрдерНаТовары.ДатаВходящегоДокумента
	|	КОНЕЦ КАК ДатаВходящегоДокумента,
	|	ПриходныйОрдерНаТовары.Исполнитель КАК Исполнитель,
	|	&ИсполнительЗаголовок КАК ИсполнительЗаголовок
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|ГДЕ
	|	ПриходныйОрдерНаТовары.Склад = &Склад
	|	И &УсловиеПомещение
	|	И &УсловиеИсполнитель
	|	И &УсловиеСтатус
	|	И НЕ ПриходныйОрдерНаТовары.ПометкаУдаления
	|	И ПриходныйОрдерНаТовары.Проведен";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсполнительЗаголовок", НСтр("ru = '""Кладовщик""'"));
	Возврат Запрос; 
	
	#КонецЕсли 
	
КонецФункции

#КонецОбласти 

#Область СчетчикиОтгрузка

Функция СписокРасходныхОрдеров() Экспорт
	
	#Если НЕ МобильныйАвтономныйСервер Тогда

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТовары.Номер КАК Номер,
	|	РасходныйОрдерНаТовары.Дата КАК Дата,
	|	РасходныйОрдерНаТовары.Комментарий КАК Комментарий,
	|	РасходныйОрдерНаТовары.Статус КАК Статус,
	|	РасходныйОрдерНаТовары.Помещение КАК Помещение,
	|	РасходныйОрдерНаТовары.Получатель КАК Получатель,
	|	РасходныйОрдерНаТовары.Ответственный КАК Ответственный,
	|	&ОтветственныйЗаголовок КАК ОтветственныйЗаголовок
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Склад = &Склад
	|	И &УсловиеПомещение
	|	И &УсловиеСтатус   
	|	И &УсловиеОтветственный
	|	И НЕ РасходныйОрдерНаТовары.ПометкаУдаления
	|	И РасходныйОрдерНаТовары.Проведен";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтветственныйЗаголовок", НСтр("ru = '""Кладовщик""'"));	
	Возврат Запрос; 
	
	#Иначе 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТовары.Номер КАК Номер,
	|	РасходныйОрдерНаТовары.Дата КАК Дата,
	|	РасходныйОрдерНаТовары.Комментарий КАК Комментарий,
	|	РасходныйОрдерНаТовары.Статус КАК Статус,
	|	РасходныйОрдерНаТовары.Помещение КАК Помещение,
	|	РасходныйОрдерНаТовары.Ответственный КАК Ответственный,
	|	&ОтветственныйЗаголовок КАК ОтветственныйЗаголовок
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Склад = &Склад
	|	И &УсловиеПомещение
	|	И &УсловиеСтатус  
	|	И &УсловиеОтветственный
	|	И НЕ РасходныйОрдерНаТовары.ПометкаУдаления
	|	И РасходныйОрдерНаТовары.Проведен";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтветственныйЗаголовок", НСтр("ru = '""Кладовщик""'"));
	Возврат Запрос; 
	
	#КонецЕсли 
	
КонецФункции

Функция СписокЗаданийНаОтбор() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументОтборРазмещениеТоваров.Ссылка КАК Ссылка,
	|	ДокументОтборРазмещениеТоваров.ПометкаУдаления КАК ПометкаУдаления,
	|	ДокументОтборРазмещениеТоваров.Номер КАК Номер,
	|	ДокументОтборРазмещениеТоваров.Дата КАК Дата,
	|	ДокументОтборРазмещениеТоваров.Проведен КАК Проведен,
	|	ДокументОтборРазмещениеТоваров.ВидОперации КАК ВидОперации,
	|	ДокументОтборРазмещениеТоваров.ЗонаПриемки КАК ЗонаПриемки,
	|	ДокументОтборРазмещениеТоваров.Исполнитель КАК Ответственный,
	|	ДокументОтборРазмещениеТоваров.Комментарий КАК Комментарий,
	|	ДокументОтборРазмещениеТоваров.Статус КАК Статус,
	|	ДокументОтборРазмещениеТоваров.ОбъемРазмещение КАК ОбъемРазмещение,
	|	ДокументОтборРазмещениеТоваров.ВесРазмещение КАК ВесРазмещение,
	|	&ИсполнительЗаголовок КАК ИсполнительЗаголовок
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров КАК ДокументОтборРазмещениеТоваров
	|ГДЕ
	|	ДокументОтборРазмещениеТоваров.ЗонаОтгрузки = &ЗонаОтгрузки
	|	И ДокументОтборРазмещениеТоваров.Склад = &Склад
	|	И &УсловиеИсполнитель
	|	И &УсловиеСтатус
	|	И &УсловиеПомещение
	|	И ДокументОтборРазмещениеТоваров.Проведен
	|	И НЕ ДокументОтборРазмещениеТоваров.ПометкаУдаления
	|	И ДокументОтборРазмещениеТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Отбор)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсполнительЗаголовок", НСтр("ru = '""Кладовщик""'"));	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти 

#Область СчетчикиПрочиеОперации

Функция СписокПересчетов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПересчетТоваров.Ссылка КАК Ссылка,
	|	ПересчетТоваров.Номер КАК Номер,
	|	ПересчетТоваров.Дата КАК Дата,
	|	ПересчетТоваров.Исполнитель КАК Исполнитель,
	|	ПересчетТоваров.Комментарий КАК Комментарий,
	|	ПересчетТоваров.Склад КАК Склад,
	|	ПересчетТоваров.Статус КАК Статус,
	|	&ИсполнительЗаголовок КАК ИсполнительЗаголовок
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|ГДЕ
	|	ПересчетТоваров.Проведен
	|	И &УсловиеИсполнитель
	|	И НЕ ПересчетТоваров.ПометкаУдаления
	|	И ПересчетТоваров.Склад = &Склад
	|	И ПересчетТоваров.Статус = &Статус
	|	И &УсловиеПомещение";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсполнительЗаголовок", НСтр("ru = '""Кладовщик""'"));	
	Возврат Запрос;
	
КонецФункции

Функция СписокЗаданийНаПеремещение() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументОтборРазмещениеТоваров.Ссылка КАК Ссылка,
		|	ДокументОтборРазмещениеТоваров.ПометкаУдаления КАК ПометкаУдаления,
		|	ДокументОтборРазмещениеТоваров.Номер КАК Номер,
		|	ДокументОтборРазмещениеТоваров.Дата КАК Дата,
		|	ДокументОтборРазмещениеТоваров.Проведен КАК Проведен,
		|	ДокументОтборРазмещениеТоваров.ВидОперации КАК ВидОперации,
		|	ДокументОтборРазмещениеТоваров.ЗонаПриемки КАК ЗонаПриемки,
		|	ДокументОтборРазмещениеТоваров.Исполнитель КАК Исполнитель,
		|	ДокументОтборРазмещениеТоваров.Комментарий КАК Комментарий,
		|	ДокументОтборРазмещениеТоваров.Статус КАК Статус,
		|	ДокументОтборРазмещениеТоваров.ОбъемРазмещение КАК ОбъемРазмещение,
		|	ДокументОтборРазмещениеТоваров.ВесРазмещение КАК ВесРазмещение,
		|	&ИсполнительЗаголовок КАК ИсполнительЗаголовок
		|ИЗ
		|	Документ.ОтборРазмещениеТоваров КАК ДокументОтборРазмещениеТоваров
		|ГДЕ
		|	ДокументОтборРазмещениеТоваров.ВидОперации = Значение(Перечисление.ВидыОперацийОтбораРазмещенияТоваров.Перемещение)
		|	И ДокументОтборРазмещениеТоваров.Склад = &Склад
		|	И &УсловиеИсполнитель
		|	И &УсловиеПомещение
		|	И &УсловиеСтатус
		|	И ДокументОтборРазмещениеТоваров.Проведен
		|	И НЕ ДокументОтборРазмещениеТоваров.ПометкаУдаления";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсполнительЗаголовок", НСтр("ru = '""Кладовщик""'"));
	Возврат Запрос;
	
КонецФункции

Функция СписокБлокировок() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	БлокировкиСкладскихЯчеек.Ячейка КАК Ячейка,
		|	БлокировкиСкладскихЯчеек.ТипБлокировки КАК ТипБлокировки,
		|	ВЫБОР
		|		КОГДА БлокировкиСкладскихЯчеек.Регистратор ССЫЛКА Документ.УстановкаБлокировокЯчеек
		|			ТОГДА ВЫРАЗИТЬ(БлокировкиСкладскихЯчеек.Регистратор КАК Документ.УстановкаБлокировокЯчеек).Ответственный
		|		КОГДА БлокировкиСкладскихЯчеек.Регистратор ССЫЛКА Документ.ПересчетТоваров
		|			ТОГДА ВЫРАЗИТЬ(БлокировкиСкладскихЯчеек.Регистратор КАК Документ.ПересчетТоваров).Ответственный
		|	КОНЕЦ КАК Ответственный
		|ИЗ
		|	РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиСкладскихЯчеек
		|ГДЕ
		|	БлокировкиСкладскихЯчеек.Активность
		|	И БлокировкиСкладскихЯчеек.Ячейка.Владелец = &Склад
		|	И &УсловиеПомещение";
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

Функция СвойстваСклада(Склад) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Склады.ИспользоватьАдресноеХранение КАК ИспользоватьАдресноеХранение,
		|	Склады.ИспользоватьОрдернуюСхемуПриПоступлении КАК ИспользоватьОрдернуюСхемуПриПоступлении,
		|	Склады.ИспользоватьСкладскиеПомещения КАК ИспользоватьСкладскиеПомещения
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка = &Склад";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СвойстваСклада = Новый Структура;
		СвойстваСклада.Вставить("ИспользоватьАдресноеХранение", ВыборкаДетальныеЗаписи.ИспользоватьАдресноеХранение);
		СвойстваСклада.Вставить("ИспользоватьОрдернуюСхемуПриПоступлении", ВыборкаДетальныеЗаписи.ИспользоватьОрдернуюСхемуПриПоступлении);
		СвойстваСклада.Вставить("ИспользоватьСкладскиеПомещения", ВыборкаДетальныеЗаписи.ИспользоватьСкладскиеПомещения);
	КонецЦикла;
	
	Возврат СвойстваСклада;
	
КонецФункции

Функция НайтиТоварПоШК(ЗначениеШтрихкода) Экспорт
	
	СтруктураТовара = Новый Структура;
	СтруктураТовара.Вставить("Номенклатура", "");
	СтруктураТовара.Вставить("Характеристика", "");
	СтруктураТовара.Вставить("Упаковка", "");
	СтруктураТовара.Вставить("Количество", 1);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ШтрихкодыНоменклатуры.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ШтрихкодыНоменклатуры.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ ШтрихкодыНоменклатуры.Упаковка
		|	КОНЕЦ КАК Упаковка
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", ЗначениеШтрихкода);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураТовара, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	Возврат СтруктураТовара;
	
КонецФункции

Функция ПолучитьПараметрыСерииПоШК(ШКСерии, ВладелецСерий) Экспорт
	#Если НЕ МобильныйАвтономныйСервер Тогда
	НастройкиИспользованияСерий = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВладелецСерий, "ИспользоватьНомерСерии, ИспользоватьСрокГодностиСерии");
	
	СтруктураШК = Новый Структура;
	СтруктураШК.Вставить("Количество", 1);
	СтруктураШК.Вставить("Штрихкод", ШКСерии);
	
	ДанныеШтрихкодов = Новый Массив;
	ДанныеШтрихкодов.Добавить(СтруктураШК);
	
	ШтрихкодыПоТипам = ШтрихкодированиеНоменклатурыСервер.СтруктураПоТипамШтрихкодов(ДанныеШтрихкодов);
		
	ЕстьОшибки = Ложь;
	ОбрабатываемаяСтрока = Неопределено;
	
	Если ШтрихкодыПоТипам.БезТипа.Количество() > 0 Тогда
		ТаблицаШтрихКодов = Новый ТаблицаЗначений;
		ТаблицаШтрихКодов.Колонки.Добавить("Номер",Метаданные.Справочники.СерииНоменклатуры.Реквизиты.Номер.Тип);
		ТаблицаШтрихКодов.Колонки.Добавить("ГоденДо",Новый ОписаниеТипов("Дата"));
		ТаблицаШтрихКодов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
		Для Каждого СтрМас Из ШтрихкодыПоТипам.БезТипа Цикл
			НоваяСтрока            = ТаблицаШтрихКодов.Добавить();
			НоваяСтрока.Количество = СтрМас.Количество;
			
			ПоляИзШтрихкода = НоменклатураКлиентСервер.ИнформацияОСерииИзШтрихкода(СтрМас.Штрихкод, 
			НастройкиИспользованияСерий.ИспользоватьНомерСерии,
			НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии);
			
			НоваяСтрока.Номер   = ПоляИзШтрихкода.Номер;
			НоваяСтрока.ГоденДо = ПоляИзШтрихкода.ГоденДо;
			
			Если ПоляИзШтрихкода.ЕстьОшибка Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Штрихкоды.Номер КАК Номер,
	|	Штрихкоды.ГоденДо КАК ГоденДо,
	|	Штрихкоды.Количество КАК Количество
	|ПОМЕСТИТЬ Штрихкоды
	|ИЗ
	|	&Штрихкоды КАК Штрихкоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
	|	Штрихкоды.Номер КАК Номер,
	|	ЕСТЬNULL(СерииНоменклатуры.ГоденДо, Штрихкоды.ГоденДо) КАК ГоденДо,
	|	ЕСТЬNULL(СерииНоменклатуры.ДатаПроизводства, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПроизводства,
	|	Штрихкоды.Количество КАК Количество
	|ИЗ
	|	Штрихкоды КАК Штрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО Штрихкоды.Номер = СерииНоменклатуры.Номер
	|			И (Штрихкоды.ГоденДо = СерииНоменклатуры.ГоденДо
	|				ИЛИ Штрихкоды.ГоденДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|			И (СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры)";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВладелецСерий);
	Запрос.УстановитьПараметр("Штрихкоды", ТаблицаШтрихКодов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ПараметрыСерии = ПараметрыСерии();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыСерии, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	Возврат ПараметрыСерии;
	#КонецЕсли
КонецФункции

Функция ПолучитьВидНоменклатуры(Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.ВидНоменклатуры;
	КонецЦикла;
	
	Возврат Справочники.ВидыНоменклатуры.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьРеквизитСправочника(Ссылка, ИмяРеквизита) Экспорт
	
	Возврат Ссылка[ИмяРеквизита];
	
КонецФункции

Функция ПараметрыСерии()
	
	ПараметрыСерии = Новый Структура;
	ПараметрыСерии.Вставить("ГоденДо",);
	ПараметрыСерии.Вставить("ДатаПроизводства",);
	ПараметрыСерии.Вставить("Количество",);
	ПараметрыСерии.Вставить("Номер",);
	ПараметрыСерии.Вставить("Серия",);
	
	Возврат ПараметрыСерии;
	
КонецФункции

Функция НайтиЯчейкуСервер(Склад, Помещение, Штрихкод) Экспорт
	
	СтруктураЯчейки = НайтиЯчейкуПоКоду(Склад, Помещение, Штрихкод);
	
	Если ЗначениеЗаполнено(СтруктураЯчейки.Ячейка) Тогда
		Возврат СтруктураЯчейки;
	КонецЕсли;
	
	#Если НЕ МобильныйАвтономныйСервер Тогда
	СтруктураЯчейки = РабочееМестоРаботникаСкладаПрограммныйИнтерфейс.НайтиЯчейкуПоШтрихкоду(Склад,
	Помещение, Штрихкод, Истина);
	#КонецЕсли
	
	Возврат СтруктураЯчейки;
	
КонецФункции

Функция НайтиЯчейкуПоКоду(Склад, Помещение, Штрихкод)
	
	СтруктураЯчейки = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СкладскиеЯчейки.Ссылка КАК Ячейка
		|ИЗ
		|	Справочник.СкладскиеЯчейки КАК СкладскиеЯчейки
		|ГДЕ
		|	СкладскиеЯчейки.Код = &Код
		|	И СкладскиеЯчейки.Владелец = &Склад
		|	И СкладскиеЯчейки.Помещение = &Помещение";
	
	Запрос.УстановитьПараметр("Код", Штрихкод);
	Запрос.УстановитьПараметр("Помещение", Помещение);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		СтруктураЯчейки.Вставить("Ячейка", Справочники.СкладскиеЯчейки.ПустаяСсылка());
		Возврат СтруктураЯчейки;
		
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураЯчейки.Вставить("Ячейка", ВыборкаДетальныеЗаписи.Ячейка);
		Возврат СтруктураЯчейки;
		
	КонецЦикла;
	
КонецФункции

Функция МаркиОтсканированы(Номенклатура, КоличествоУпаковок, Упаковка, ШтрихкодыУпаковок) Экспорт
	
	ОсобенностьУчета = ПолучитьРеквизитСправочника(Номенклатура, "ОсобенностьУчета");
	Если ЗначениеЗаполнено(ОсобенностьУчета) Тогда
		
		Для Каждого Строка Из ШтрихкодыУпаковок Цикл
			
			
			
		КонецЦикла;
		
		Возврат Истина;
		
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции   

#КонецОбласти

#КонецЕсли