
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказыватьФотоТоваров = Параметры.ПоказыватьФотоТоваров;
	Склад     = Параметры.Склад;
	Помещение = Параметры.Помещение;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьПредставлениеОтбораСклад();
	СформироватьПредставлениеОтбораПомещение();
	
	ОбновитьСписокСостояний();
	
	ОбновитьДанныеФормыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("Справочник.Склады.Форма.ФормаВыбораМРМ") Тогда
		
		Склад = ВыбранноеЗначение;
		СформироватьПредставлениеОтбораСклад();
		ОбновитьДанныеФормы();
		
	КонецЕсли;
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("Справочник.СкладскиеПомещения.Форма.ФормаВыбораМРМ") Тогда
		
		Помещение = ВыбранноеЗначение;
		СформироватьПредставлениеОтбораПомещение();
		ОбновитьДанныеФормы();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРаспоряжений

&НаКлиенте
Процедура СписокРаспоряженийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Элементы.СписокРаспоряжений.ТекущиеДанные;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Склад", Склад);
	СтруктураЗаполнения.Вставить("Помещение", Помещение);
	СтруктураЗаполнения.Вставить("Распоряжение", ТекущаяСтрока.Распоряжение);
	СтруктураЗаполнения.Вставить("Получатель", ТекущаяСтрока.Получатель);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипДокумента", 2);

	ПараметрыФормы.Вставить("СтруктураЗаполнения", СтруктураЗаполнения);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);

	Описание = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтаФорма);
	
	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.Товары",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтборыОткрытьСклад(Команда)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытияФормы.Вставить("МножественныйВыбор", Ложь);
	ПараметрыОткрытияФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыОткрытияФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
		
	Отбор = Новый Структура();
	Отбор.Вставить("ИспользоватьОрдернуюСхемуПриОтгрузке", Истина);
	ПараметрыОткрытияФормы.Вставить("Отбор", Отбор);
		
	ОткрытьФорму(
		"Справочник.Склады.Форма.ФормаВыбораМРМ",
		ПараметрыОткрытияФормы,
		ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОтборыОткрытьПомещение(Команда)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытияФормы.Вставить("МножественныйВыбор", Ложь);
	ПараметрыОткрытияФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	
	Отбор = Новый Структура();
	Отбор.Вставить("Владелец", Склад);
	ПараметрыОткрытияФормы.Вставить("Отбор", Отбор);
	
	ОткрытьФорму(
		"Справочник.СкладскиеПомещения.Форма.ФормаВыбораМРМ",
		ПараметрыОткрытияФормы,
		ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Команда)
	ОбновитьДанныеФормы();
	СформироватьПредставлениеОтбораСклад();
КонецПроцедуры 

&НаКлиенте
Процедура ДатаПоступленияПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыОчиститьСклад(Команда)
	
	Склад = Неопределено;
	СформироватьПредставлениеОтбораСклад();
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыОчиститьПомещение(Команда)

	Помещение = Неопределено;
	СформироватьПредставлениеОтбораПомещение();
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыОчиститьДату(Команда)
	
	ДатаОтгрузки = Неопределено;
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПоступленияФильтрПриИзменении(Элемент)
	
	СформироватьПредставлениеОтбораСклад();
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОтгрузку(Команда)
		
	СтруктураЗаполнения = ПолучитьСтруктуруЗаполненияОрдера();
	
	ЗаполнитьЗначенияСвойств(СтруктураЗаполнения, ЭтаФорма);
	
	ТекущаяСтрока = Элементы.СписокРаспоряжений.ТекущиеДанные;   
	
	КоличествоТоваров = ПолучитьКоличествоТоваров(ТекущаяСтрока.Распоряжение);

	Если КоличествоТоваров = 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = НСтр("ru = 'Нет товаров для отрузки'");
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;

	СтруктураЗаполнения.РаспоряженияНаОтгрузку.Добавить(ТекущаяСтрока.Распоряжение);
	СтруктураЗаполнения.Получатель = ТекущаяСтрока.Получатель;
	
	Описание = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураЗаполнения", СтруктураЗаполнения);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);

	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.РасходныйОрдер",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьДанныеФормы(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбновитьДанныеФормыСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормыСервер()
	
	ЗаполнитьСписокРаспоряжений();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРаспоряжений()	
	#Если НЕ МобильныйАвтономныйСервер Тогда
	Если Не ЗначениеЗаполнено(Склад) Тогда
		СписокРаспоряжений.Очистить();
		Возврат;
	КонецЕсли;
	
	Если Не Пользователи.ЭтоПолноправныйПользователь(Неопределено) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склады.Ссылка
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка = &Склад";
		
		Запрос.УстановитьПараметр("Склад", Склад);
		
		Если Запрос.Выполнить().Пустой() Тогда
			СписокРаспоряжений.Очистить();
			Возврат;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	 
	Запрос = Обработки.МобильноеРабочееМестоКладовщика.СписокРаспоряженийНаОтгрузку(Склад);
	
	Запрос.УстановитьПараметр("Склад", 				Склад);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", Документы.ЗаданиеНаПеревозку.ПустаяСсылка());
	Запрос.УстановитьПараметр("ДатаОтгрузки", 		?(ЗначениеЗаполнено(ДатаОтгрузки), КонецДня(ДатаОтгрузки) + 1, ДатаОтгрузки));
	ОформлятьСначалаНакладные = Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить() = Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаНакладные;
	Запрос.УстановитьПараметр("ОформлятьСначалаНакладные", ОформлятьСначалаНакладные);
	Запрос.УстановитьПараметр("ОтображениеДеталейОтгрузка", Ложь);
	
	Состояния = Новый Массив;
	Если СостояниеОтгрузки = "ВсеВРаботе" Тогда 
		Состояния.Добавить(Перечисления.СостоянияОтбораТоваров.ВПроцессеОтбора);
		Состояния.Добавить(Перечисления.СостоянияОтбораТоваров.ОжидаетсяОтбор);
		Состояния.Добавить(Перечисления.СостоянияОтбораТоваров.ОжидаетсяОтгрузка);
	ИначеЕсли СостояниеОтгрузки = "" Тогда
		Для Каждого Значение Из Перечисления.СостоянияОтбораТоваров Цикл 
			Состояния.Добавить(Значение);
		КонецЦикла;
	Иначе
		Состояния.Добавить(Перечисления.СостоянияОтбораТоваров[СостояниеОтгрузки]);
	КонецЕсли;
	Запрос.УстановитьПараметр("Состояния", Состояния);
	
	СписокРаспоряжений.Загрузить(Запрос.Выполнить().Выгрузить());	
	#КонецЕсли 
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеОтбораСклад()
	
	ПредставленияОтборов = "";
	Если ЗначениеЗаполнено(Склад) Тогда
		ПредставленияОтборов = Склад;
		Элементы.КомандаОтборыОткрыть.ЦветТекста = WebЦвета.Черный;
		Элементы.КомандаОтборыОчистить.Видимость = Истина;
		Элементы.РамкаОтборыОткрыть.Картинка = БиблиотекаКартинок.РамкаМенюЧерная;
	Иначе
		ПредставленияОтборов = НСтр("ru = 'Склад'");
		Элементы.КомандаОтборыОткрыть.ЦветТекста = WebЦвета.ТемноСерый;
		Элементы.КомандаОтборыОчистить.Видимость = Ложь;
		Элементы.РамкаОтборыОткрыть.Картинка = БиблиотекаКартинок.РамкаМенюСерая;
	КонецЕсли;
	
	Если Склад["ЭтоГруппа"] Тогда
		ИспользоватьСкладскиеПомещения = Ложь;
	Иначе
		ИспользоватьСкладскиеПомещения = Склад["ИспользоватьСкладскиеПомещения"];
	КонецЕсли;
	Элементы.ГруппаКомандаОтборыОткрыть2.Видимость    = ИспользоватьСкладскиеПомещения;
	Элементы.КомандаОтборыОчиститьПомещение.Видимость = ИспользоватьСкладскиеПомещения;
	
	Элементы.КомандаОтборыОткрыть.Заголовок = ПредставленияОтборов;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПредставлениеОтбораПомещение()
	
	ПредставленияОтборов = "";
	Если ЗначениеЗаполнено(Помещение) Тогда
		ПредставленияОтборов = Помещение;
		Элементы.КомандаОтборыОткрытьПомещение.ЦветТекста = WebЦвета.Черный;
		Элементы.КомандаОтборыОчиститьПомещение.Видимость = Истина;
		Элементы.РамкаОтборыОткрыть2.Картинка = БиблиотекаКартинок.РамкаМенюЧерная;
	Иначе
		ПредставленияОтборов = НСтр("ru = 'Помещение'");
		Элементы.КомандаОтборыОткрытьПомещение.ЦветТекста = WebЦвета.ТемноСерый;
		Элементы.КомандаОтборыОчиститьПомещение.Видимость = Ложь;
		Элементы.РамкаОтборыОткрыть2.Картинка = БиблиотекаКартинок.РамкаМенюСерая;
	КонецЕсли;
	
	Элементы.КомандаОтборыОткрытьПомещение.Заголовок = ПредставленияОтборов;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруЗаполненияОрдера()
	
	Возврат Обработки.МобильноеРабочееМестоКладовщика.СтруктураЗаполненияРасходногоОрдера();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКоличествоТоваров(Распоряжение)
	
	РезультатЗапроса = Обработки.МобильноеРабочееМестоКладовщика.СписокТоваровНаОтгрузкуПриемку(2, Распоряжение);

	Возврат РезультатЗапроса.Количество();
	
КонецФункции

&НаСервере
Процедура ОбновитьСписокСостояний()
	
	ИспользоватьСтатусыРасходныхОрдеров = ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыРасходныхОрдеров", 
																			Новый Структура("Склад", Склад));
	
	Элементы.Состояние.СписокВыбора.Очистить();
	
	Если ИспользоватьСтатусыРасходныхОрдеров Тогда
		Элементы.Состояние.СписокВыбора.Добавить("ВсеВРаботе", НСтр("ru = 'Все в работе'"));		
		Элементы.Состояние.СписокВыбора.Добавить("ОжидаетсяОтбор", НСтр("ru = 'Ожидается отбор'"));
		Элементы.Состояние.СписокВыбора.Добавить("ОжидаетсяОтгрузка", НСтр("ru = 'Ожидается отгрузка'"));		
		Элементы.Состояние.СписокВыбора.Добавить("ОжидаетсяОформлениеНакладных", НСтр("ru = 'Ожидается оформление накладных'"));
		Элементы.Состояние.СписокВыбора.Добавить("", НСтр("ru = 'Все'"));
		СостояниеОтгрузки = "ВсеВРаботе";
	Иначе
		Элементы.Состояние.СписокВыбора.Добавить("ОжидаетсяОтбор", НСтр("ru = 'Ожидается отбор'"));
		Элементы.Состояние.СписокВыбора.Добавить("ОжидаетсяОформлениеНакладных", НСтр("ru = 'Ожидается оформление накладных'"));
		Элементы.Состояние.СписокВыбора.Добавить("", НСтр("ru = 'Все'"));		
		СостояниеОтгрузки = "ОжидаетсяОтбор";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти