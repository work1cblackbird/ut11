
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Литерал = "Ссылка";
	Ссылка = Параметры[Литерал];
	ПоказыватьФотоТоваров = Параметры.ПоказыватьФотоТоваров;
	
	//++ Локализация
	
	ИспользоватьУчетМаркируемойПродукции = Константы.ВестиУчетМаркируемойПродукцииИСМП.Получить();
	ПроверкаИПодборПродукцииИСМППереопределяемый.ПриОпределенииОрганизации(Ссылка, Организация);
	
	ЕстьМаркируемаяПродукция = Ложь;
	ВидыПродукцииИСМП = МобильноеРабочееМестоКладовщикаЛокализация.ВидыПродукцииИСМП();
	ПроверкаИПодборПродукцииИСМППереопределяемый.ЕстьМаркируемаяПродукцияВКоллекции(ТоварыОтобрать, ВидыПродукцииИСМП, ЕстьМаркируемаяПродукция);
	Если НЕ ЕстьМаркируемаяПродукция Тогда
		ПроверкаИПодборПродукцииИСМППереопределяемый.ЕстьМаркируемаяПродукцияВКоллекции(ТоварыОтобрано, ВидыПродукцииИСМП, ЕстьМаркируемаяПродукция);
	КонецЕсли;
	
	//-- Локализация
	
	ЗаполнитьФорму();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОформитьМеню("Отобрать")
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["СтраницаИнформация"] Тогда
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		ОформитьМеню("Отобрать");
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Информация(Команда)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["СтраницаИнформация"];
	СкрытьМеню();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВРазделОтобрать(Команда)
	ОформитьМеню("Отобрать");
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВРазделОтобрано(Команда)
	ОформитьМеню("Отобрано");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОтобратьВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Описание = Новый ОписаниеОповещения("ОбновитьФорму", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Номенклатура", Элемент.ТекущиеДанные.Номенклатура);
	ПараметрыФормы.Вставить("Характеристика", Элемент.ТекущиеДанные.Характеристика);
	ПараметрыФормы.Вставить("Серия", Элемент.ТекущиеДанные.Серия);
	ПараметрыФормы.Вставить("Назначение", Элемент.ТекущиеДанные.Назначение);
	ПараметрыФормы.Вставить("Упаковка", Элемент.ТекущиеДанные.Упаковка);
	ПараметрыФормы.Вставить("Количество", Элемент.ТекущиеДанные.КоличествоУпаковок);
	ПараметрыФормы.Вставить("Режим", "ОтборИзЯчейки");
	ПараметрыФормы.Вставить("НомерСтроки", ТоварыОтобрать.Индекс(Элементы.ТоварыОтобрать.ТекущиеДанные));
	ПараметрыФормы.Вставить("Склад", Склад);
	ПараметрыФормы.Вставить("Помещение", Помещение);
	ПараметрыФормы.Вставить("Ячейка", Элемент.ТекущиеДанные.Ячейка);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);

	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.КарточкаТовара",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОтобраноВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Описание = Новый ОписаниеОповещения("ОбновитьФорму", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Номенклатура", Элемент.ТекущиеДанные.Номенклатура);
	ПараметрыФормы.Вставить("Характеристика", Элемент.ТекущиеДанные.Характеристика);
	ПараметрыФормы.Вставить("Серия", Элемент.ТекущиеДанные.Серия);
	ПараметрыФормы.Вставить("Упаковка", Элемент.ТекущиеДанные.Упаковка);
	ПараметрыФормы.Вставить("Количество", Элемент.ТекущиеДанные.КоличествоУпаковок);
	ПараметрыФормы.Вставить("Режим", "РедактированиеОтборИзЯчейки");
	ПараметрыФормы.Вставить("НомерСтроки", ТоварыОтобрано.Индекс(Элементы.ТоварыОтобрано.ТекущиеДанные));
	ПараметрыФормы.Вставить("Склад", Склад);
	ПараметрыФормы.Вставить("Помещение", Помещение);
	ПараметрыФормы.Вставить("Ячейка", Элемент.ТекущиеДанные.Ячейка);
	ПараметрыФормы.Вставить("Назначение", Элемент.ТекущиеДанные.Назначение);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);

	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.КарточкаТовара",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьОтбор(Команда)
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить("Завершить", НСтр("ru = 'Завершить'"));
	СписокЗначений.Добавить("Продолжить", НСтр("ru = 'Продолжить'"));
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Завершить отбор?'"), СписокЗначений, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	ЗаполнитьЗонуПриемки();
КонецПроцедуры

&НаКлиенте
Процедура СобратьВсе(Команда)
	СобратьВсеНаСервере();
	ОформитьМеню("Принято");
КонецПроцедуры

&НаКлиенте
Процедура Сканировать(Команда)
	
	СтандартнаяОбработка = Ложь;
	
	Описание = Новый ОписаниеОповещения("РезультатПоискаЯчейки", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипПоиска", "ПоискЯчейки");
	ПараметрыФормы.Вставить("Склад", Склад);
	ПараметрыФормы.Вставить("Помещение", Помещение);
	ПараметрыФормы.Вставить("ДокументСсылка", Ссылка);
	ПараметрыФормы.Вставить("ШтрихкодыУпаковок", ШтрихкодыУпаковок);
	
	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.СканированиеШтрихкода",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПоискаЯчейки(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Описание = Новый ОписаниеОповещения("ЗавершитьРазмещениеВЯчейку", ЭтаФорма);
	
	ТоварыВЯчейке = Новый Массив;
	
	Для Каждого Строка Из ТоварыОтобрать Цикл
		
		Если Строка.Ячейка = Результат Тогда
			
			Структура = СтруктураТоваров();
			ЗаполнитьЗначенияСвойств(Структура, Строка);
			
			ТоварыВЯчейке.Добавить(Структура);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ячейка",      Результат);
	ПараметрыФормы.Вставить("Товары",      ТоварыВЯчейке);
	ПараметрыФормы.Вставить("Склад",       Склад);
	ПараметрыФормы.Вставить("Помещение",   Помещение);
	ПараметрыФормы.Вставить("ТипОперации", 2);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);

	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.РазмещениеВЯчейки",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРазмещениеВЯчейку(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗавершитьРазмещениеВЯчейкуНаСервере(Результат);
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьРазмещениеВЯчейкуНаСервере(Результат)
	
	ТаблицаТовары = ТоварыОтобрать.Выгрузить();
	
	МассивРазмещений = Результат.МассивРазмещений;
	Ячейка = Результат.Ячейка;
	
	// Массив структур
	Для Каждого Строка Из МассивРазмещений Цикл
		
		Если Строка.КоличествоУпаковок <= 0 Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ТоварыОтобрано.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		Если ЗначениеЗаполнено(Строка.ЯчейкаЗамена) Тогда
			НоваяСтрока.Ячейка = Строка.ЯчейкаЗамена;
		КонецЕсли;
		
		ОтборПоиска = Новый Структура;
		ОтборПоиска.Вставить("Номенклатура",   Строка.Номенклатура);
		ОтборПоиска.Вставить("Характеристика", Строка.Характеристика);
		ОтборПоиска.Вставить("Серия",          Строка.Серия);
		ОтборПоиска.Вставить("Упаковка",       Строка.Упаковка);
		ОтборПоиска.Вставить("Ячейка",         Ячейка);
		
		МассивКПоступлению = ТаблицаТовары.НайтиСтроки(ОтборПоиска);
		Для Каждого СтрокаПоиск Из МассивКПоступлению Цикл
			СтрокаПоиск.КоличествоУпаковок = СтрокаПоиск.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
			СтрокаПоиск.Количество = СтрокаПоиск.КоличествоУпаковок;
		КонецЦикла;
		
	КонецЦикла;
	
	Сч = 0;
	Пока Сч < ТаблицаТовары.Количество() Цикл
		
		Если ТаблицаТовары[Сч].КоличествоУпаковок <= 0 Тогда
			ТаблицаТовары.Удалить(ТаблицаТовары[Сч]);
		Иначе
			Сч = Сч + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	ТоварыОтобрать.Загрузить(ТаблицаТовары);
	
КонецПроцедуры

&НаКлиенте
Функция СтруктураТоваров()
	
	Структура = Новый Структура;
	Структура.Вставить("Номенклатура","");
	Структура.Вставить("Характеристика","");
	Структура.Вставить("Серия","");
	Структура.Вставить("Упаковка","");
	Структура.Вставить("КоличествоУпаковок","");
	Структура.Вставить("Назначение","");
	
	Возврат Структура;
	
КонецФункции

&НаКлиенте
Процедура КодыМаркировки(Команда)
	Описание = Новый ОписаниеОповещения("ИзменитьШтрихкодыУпаковок", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ШтрихкодыУпаковок", ШтрихкодыУпаковок);
	
	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.СписокКодовМаркировки",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элементы.КодыМаркировки.Видимость = ИспользоватьУчетМаркируемойПродукции И ЕстьМаркируемаяПродукция;
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьМеню(ИмяВкладки)
	
	ПоказатьМеню();
	
	Элементы.РамкаОтобрать.Картинка = БиблиотекаКартинок.РамкаМенюБелая;
	Элементы.КомандаОтобрать.ЦветТекста = WebЦвета.ТемноСерый;
	
	Элементы.РамкаОтобрано.Картинка = БиблиотекаКартинок.РамкаМенюБелая;
	Элементы.КомандаОтобрано.ЦветТекста = WebЦвета.ТемноСерый;
	
	Элементы["Команда" + ИмяВкладки].ЦветТекста = WebЦвета.Черный;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["Страница" + ИмяВкладки];
	
	Если ИмяВкладки = "Отобрать" Тогда
		Элементы.РамкаОтобрать.Картинка = БиблиотекаКартинок.РамкаМенюЧерная;
	ИначеЕсли ИмяВкладки = "Отобрано" Тогда
		Элементы.РамкаОтобрано.Картинка = БиблиотекаКартинок.РамкаМенюЧерная;
	КонецЕсли;
	
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаголовкиКомандМеню()
	Элементы.КомандаОтобрать.Заголовок = СтрШаблон(НСтр("ru = 'Отобрать (%1)'"), ТоварыОтобрать.Количество());
	Элементы.КомандаОтобрано.Заголовок = СтрШаблон(НСтр("ru = 'Отобрано (%1)'"), ТоварыОтобрано.Количество());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорму()
	
	СтруктураДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Склад, Комментарий, Помещение, ЗонаОтгрузки, Исполнитель, ТоварыОтбор");
	
	Склад       = СтруктураДокумента.Склад;
	Комментарий = СтруктураДокумента.Комментарий;
	Помещение   = СтруктураДокумента.Помещение;
	ЗонаОтгрузки = СтруктураДокумента.ЗонаОтгрузки;
	Исполнитель = СтруктураДокумента.Исполнитель;
	
	Для Каждого Строка Из СтруктураДокумента.ТоварыОтбор.Выгрузить() Цикл
		
		Если Строка.КоличествоОтобрано > 0 Тогда
			НоваяСтрока = ТоварыОтобрано.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.Количество = Строка.КоличествоОтобрано;
			НоваяСтрока.КоличествоУпаковок = Строка.КоличествоУпаковокОтобрано;
		Иначе
			НоваяСтрока = ТоварыОтобрать.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.Количество = Строка.Количество;
			НоваяСтрока.КоличествоУпаковок = Строка.КоличествоУпаковок;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗакончитьОтборНаСервере()
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	
	ДокументОбъект.Статус      = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок;
	ДокументОбъект.Помещение   = Помещение;
	ДокументОбъект.Комментарий = Комментарий;
	ДокументОбъект.ЗонаОтгрузки = ЗонаОтгрузки;
	ДокументОбъект.Исполнитель = Исполнитель;
	
	ДокументОбъект.ТоварыОтбор.Очистить();
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ИспользоватьСкладскиеПомещения")
		И Помещение.Пустая() Тогда
		
		Сообщить("Не выбрано помещение");
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["СтраницаИнформация"];
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ЗонаОтгрузки.Пустая() Тогда
		
		Сообщить("Не выбрана зона отгрузки");
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["СтраницаИнформация"];
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Для Каждого Строка Из ТоварыОтобрано Цикл
		
		НоваяСтрока = ДокументОбъект.ТоварыОтбор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка); 
		
		КоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Строка.Упаковка, Строка.Номенклатура);
		
		НоваяСтрока.КоличествоОтобрано = Строка.КоличествоУпаковок * КоэффициентУпаковки;
		НоваяСтрока.КоличествоУпаковокОтобрано = Строка.КоличествоУпаковок;
		
		НоваяСтрока.Количество = НоваяСтрока.КоличествоОтобрано;
		НоваяСтрока.КоличествоУпаковок = НоваяСтрока.КоличествоУпаковокОтобрано;
		
	КонецЦикла;
	
	ПараметрыУказанияСерий = Документы.ОтборРазмещениеТоваров.ПараметрыУказанияСерий(ДокументОбъект);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий.Отбор);
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьЗонуПриемки()
	
	ЗонаОтгрузки = Справочники.СкладскиеЯчейки.ЗонаПриемкиПоУмолчанию(Склад, Помещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьМеню()

	Элементы.ГруппаМеню.Видимость = Истина;
	Элементы.ГруппаКоманды.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьМеню()

	Элементы.ГруппаМеню.Видимость = Ложь;
	Элементы.ГруппаКоманды.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СобратьВсеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыКПоступлениюОстатки.ДокументПоступления КАК ДокументПоступления,
		|	ТоварыКПоступлениюОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлениюОстатки.Характеристика КАК Характеристика,
		|	ТоварыКПоступлениюОстатки.Назначение КАК Назначение,
		|	ТоварыКПоступлениюОстатки.Склад КАК Склад,
		|	ТоварыКПоступлениюОстатки.Отправитель КАК Отправитель,
		|	ТоварыКПоступлениюОстатки.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ТоварыКПоступлениюОстатки.Серия КАК Серия,
		|	ТоварыКПоступлениюОстатки.КОформлениюОрдеровОстаток КАК Количество,
		|	ТоварыКПоступлениюОстатки.КОформлениюОрдеровОстаток КАК КоличествоУпаковок,
		|	ТоварыКПоступлениюОстатки.Номенклатура.ЕдиницаИзмерения КАК Упаковка
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(, ДокументПоступления = &ДокументПоступления) КАК ТоварыКПоступлениюОстатки
		|ГДЕ
		|	ТоварыКПоступлениюОстатки.КОформлениюОрдеровОстаток > 0";
	
	Запрос.УстановитьПараметр("ДокументПоступления", РаспоряжениеНаОтгрузку);
	
	Остатки = Запрос.Выполнить().Выгрузить();
	ТоварыОтобрано.Загрузить(Остатки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПриемку(Команда)
	
	ИндексСтроки = ТоварыОтобрано.Индекс(Элементы.ТоварыОтобрано.ТекущиеДанные);
	
	Если ИндексСтроки < 0 Тогда
		Возврат;
	КонецЕсли;
	
	КоэффициентУпаковки = ПолучитьКоэффициентУпаковкиСервер(ТоварыОтобрано[ИндексСтроки].Номенклатура, ТоварыОтобрано[ИндексСтроки].Упаковка);
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",   ТоварыОтобрано[ИндексСтроки].Номенклатура);
	СтруктураПоиска.Вставить("Характеристика", ТоварыОтобрано[ИндексСтроки].Характеристика);
	СтруктураПоиска.Вставить("Серия",          ТоварыОтобрано[ИндексСтроки].Серия);
	СтруктураПоиска.Вставить("Упаковка",       ТоварыОтобрано[ИндексСтроки].Упаковка);
	СтруктураПоиска.Вставить("Назначение",     ТоварыОтобрано[ИндексСтроки].Назначение);
	СтруктураПоиска.Вставить("Ячейка",         ТоварыОтобрано[ИндексСтроки].Ячейка);
	
	РезультатПоиска = ТоварыОтобрать.НайтиСтроки(СтруктураПоиска);
	Если РезультатПоиска.Количество() > 0 Тогда
		РезультатПоиска[0].КоличествоУпаковок = РезультатПоиска[0].КоличествоУпаковок + ТоварыОтобрано[ИндексСтроки].КоличествоУпаковок;
		РезультатПоиска[0].Количество = РезультатПоиска[0].КоличествоУпаковок * КоэффициентУпаковки;
	Иначе
		НоваяСтрока = ТоварыОтобрать.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТоварыОтобрано[ИндексСтроки]);
		НоваяСтрока.Количество = НоваяСтрока.КоличествоУпаковок * КоэффициентУпаковки;
	КонецЕсли;
	
	ТоварыОтобрано.Удалить(ИндексСтроки);
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьФормуНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФормуНаСервере(Результат)
	
	Литерал = "НомерСтроки";
	НомерСтроки = Результат[Литерал];
	
	КоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Результат.Упаковка, Результат.Номенклатура);
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Результат.Номенклатура);
	СтруктураПоиска.Вставить("Характеристика", Результат.Характеристика);
	СтруктураПоиска.Вставить("Серия", Результат.Серия);
	СтруктураПоиска.Вставить("Упаковка", Результат.Упаковка);
	СтруктураПоиска.Вставить("Назначение", Результат.Назначение); 
	СтруктураПоиска.Вставить("Ячейка", Результат.Ячейка);
	
	Если Результат.Режим = "РедактированиеОтборИзЯчейки" Тогда
		
		ИсходноеКоличество = ТоварыОтобрано[Результат.НомерСтроки].КоличествоУпаковок;
		Количество = Результат.КоличествоУпаковок * КоэффициентУпаковки;
		
		ТоварыОтобрано[Результат.НомерСтроки].Упаковка           = Результат.Упаковка;
		ТоварыОтобрано[Результат.НомерСтроки].КоличествоУпаковок = Результат.КоличествоУпаковок;
		ТоварыОтобрано[Результат.НомерСтроки].Количество         = ТоварыОтобрано[Результат.НомерСтроки].КоличествоУпаковок * КоэффициентУпаковки;
		ТоварыОтобрано[Результат.НомерСтроки].Серия              = Результат.Серия;
		ТоварыОтобрано[Результат.НомерСтроки].Назначение         = Результат.Назначение;
		
		РезультатПоиска = ТоварыОтобрать.НайтиСтроки(СтруктураПоиска);
		Если РезультатПоиска.Количество() > 0 Тогда
			РезультатПоиска[0].КоличествоУпаковок = РезультатПоиска[0].КоличествоУпаковок +  ИсходноеКоличество - Результат.КоличествоУпаковок;
			РезультатПоиска[0].Количество = РезультатПоиска[0].КоличествоУпаковок * КоэффициентУпаковки;
		ИначеЕсли ИсходноеКоличество - Результат.КоличествоУпаковок > 0 Тогда
			НоваяСтрока = ТоварыОтобрать.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Результат);
			НоваяСтрока.КоличествоУпаковок = ИсходноеКоличество - Результат.КоличествоУпаковок;
			НоваяСтрока.Количество         = НоваяСтрока.КоличествоУпаковок * КоэффициентУпаковки;
		КонецЕсли;
		
	Иначе
		
		ТоварыОтобрать[НомерСтроки].Упаковка = Результат.Упаковка;
		ТоварыОтобрать[НомерСтроки].КоличествоУпаковок = ТоварыОтобрать[НомерСтроки].КоличествоУпаковок - Результат.КоличествоУпаковок;
		ТоварыОтобрать[НомерСтроки].Количество = ТоварыОтобрать[НомерСтроки].КоличествоУпаковок * КоэффициентУпаковки;
		
		Если ТоварыОтобрать[НомерСтроки].КоличествоУпаковок <= 0 Тогда
			ТоварыОтобрать.Удалить(НомерСтроки);
		КонецЕсли;
		
		РезультатПоиска = ТоварыОтобрано.НайтиСтроки(СтруктураПоиска);
		Если РезультатПоиска.Количество() > 0 Тогда
			РезультатПоиска[0].КоличествоУпаковок = РезультатПоиска[0].КоличествоУпаковок + Результат.КоличествоУпаковок;
			РезультатПоиска[0].Количество = РезультатПоиска[0].КоличествоУпаковок * КоэффициентУпаковки;
		ИначеЕсли Результат.КоличествоУпаковок > 0 Тогда
			НоваяСтрока = ТоварыОтобрано.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Результат);
			НоваяСтрока.Количество = НоваяСтрока.КоличествоУпаковок * КоэффициентУпаковки;
		КонецЕсли;
		
	КонецЕсли;
	
	Сч = 0;
	Пока Сч < ТоварыОтобрать.Количество() Цикл
		Если ТоварыОтобрать[Сч].Количество <= 0 Тогда
			ТоварыОтобрать.Удалить(Сч);
		Иначе
			Сч = Сч + 1;
		КонецЕсли;
	КонецЦикла;
	
	Сч = 0;
	Пока Сч < ТоварыОтобрано.Количество() Цикл
		Если ТоварыОтобрано[Сч].Количество <= 0 Тогда
			ТоварыОтобрано.Удалить(Сч);
		Иначе
			Сч = Сч + 1;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = "Завершить" Тогда
		
		ОтборЗавершен = ЗакончитьОтборНаСервере();
		
		Если ОтборЗавершен Тогда
			Закрыть();
		КонецЕсли;
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКоэффициентУпаковкиСервер(Номенклатура, Упаковка)
	
	Возврат Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Упаковка, Номенклатура);
	
КонецФункции

&НаКлиенте
Процедура ИзменитьШтрихкодыУпаковок(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьШтрихкодыУпаковокНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьШтрихкодыУпаковокНаСервере(Результат) Экспорт
	
	ШтрихкодыУпаковок.Очистить();
	ШтрихкодыУпаковок.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

#КонецОбласти
