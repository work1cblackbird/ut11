
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипПоиска = Параметры.ТипПоиска;
	Если Параметры.Свойство("Склад") Тогда
		Склад = Параметры.Склад;
	КонецЕсли;
	
	Если Параметры.Свойство("Помещение") Тогда
		Помещение = Параметры.Помещение;
	КонецЕсли;
	
	Если Параметры.Свойство("ДокументСсылка") Тогда
		Ссылка = Параметры.ДокументСсылка;
	КонецЕсли;
	
	Если Параметры.Свойство("ШтрихкодыУпаковок") Тогда
		ШтрихкодыУпаковок.Загрузить(Параметры.ШтрихкодыУпаковок.Выгрузить());
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если МобильныйКлиент Тогда
	ТекущийЭлемент = Элементы.Штрихкод;
	НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" И МенеджерОборудованияУТКлиент.ЕстьНеобработанноеСобытие() Тогда

			ОбработатьШтрихкоды(МенеджерОборудованияУТКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
			
		КонецЕсли;
		
	КонецЕсли;
	
	//++Локализация
	ОбщегоНазначенияСобытияФормИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	//--Локализация
	
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НайтиПоШтрихкоду(Команда)
	
	ОбработатьШтрихкод();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗаголовок()
	
	Если ТипПоиска = "ПоискЯчейки" Тогда
		Элементы.Заголовок.Заголовок = НСтр("ru = 'Отсканируйте штрихкод ячейки'");
	ИначеЕсли ТипПоиска = "ПоискНоменклатуры" Тогда
		Элементы.Заголовок.Заголовок = НСтр("ru = 'Отсканируйте штрихкод номенклатуры'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиЯчейкуСервер(Склад, Помещение, Штрихкод)
	
	Возврат Обработки.МобильноеРабочееМестоКладовщика.НайтиЯчейкуСервер(Склад, Помещение, Штрихкод);
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиТоварСервер(Штрихкод)
	
	Возврат Обработки.МобильноеРабочееМестоКладовщика.НайтиТоварПоШК(Штрихкод);
	
КонецФункции

// Обработать штрихкоды.
// 
// Параметры:
//  ДанныеШтрихкодов - Массив, Структура - Данные штрихкодов:
// * Штрихкод - Строка -
// * Количество - Число -
&НаКлиенте
Процедура ОбработатьШтрихкоды(ДанныеШтрихкодов)
	
	ТекстСообщенияПользователю = "";
	
	Если ТипЗнч(ДанныеШтрихкодов) = Тип("Массив") Тогда
			МассивШтрихкодов = ДанныеШтрихкодов;
		Иначе
			МассивШтрихкодов = Новый Массив;
			МассивШтрихкодов.Добавить(ДанныеШтрихкодов);
	КонецЕсли;
	
	Если ТипПоиска = "ПоискЯчейки" Тогда
		РезультатПоискаЯчейки = НайтиЯчейкуСервер(Склад, Помещение, МассивШтрихкодов[0].ШтрихКод);
		ШтрихкодЯчейки = ЗначениеЗаполнено(РезультатПоискаЯчейки.Ячейка);
		
		Если ШтрихкодЯчейки Тогда
			Закрыть(РезультатПоискаЯчейки.Ячейка);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ШтрихкодированиеНоменклатурыКлиент.ШтрихкодыВалидны(ДанныеШтрихкодов) Тогда

		СтруктураТовара = НайтиТоварСервер(МассивШтрихкодов[0].ШтрихКод);
		
		Если ЗначениеЗаполнено(СтруктураТовара.Номенклатура) Тогда
			Закрыть(СтруктураТовара);
			Возврат;
		Иначе
			//++Локализация
			ОбработатьКодМаркировки(ДанныеШтрихкодов, ТекстСообщенияПользователю);
			//--Локализация
		КонецЕсли;
		
	Иначе
		//++Локализация
		ОбработатьКодМаркировки(ДанныеШтрихкодов, ТекстСообщенияПользователю);
		//--Локализация
		
		Если ЗначениеЗаполнено(СтруктураТовара.Номенклатура) И ТекстСообщенияПользователю = "" Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не (ЗначениеЗаполнено(СтруктураТовара.Номенклатура) И ТекстСообщенияПользователю = "") Тогда
		 ТекстСообщенияПользователю = НСтр("ru = 'Штрихкод не распознан'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстСообщенияПользователю) Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ТекстСообщенияПользователю;
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

//++Локализация
Функция ПоискДублейШКУпаковок(ШтрихкодУпаковки)
	
	ЕстьДубль = МобильноеРабочееМестоКладовщикаЛокализация.ПоискДублейШКУпаковок(ШтрихкодыУпаковок, ШтрихкодУпаковки);
	Возврат ЕстьДубль;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьКодМаркировки(ИсходныеДанные, ТекстСообщенияПользователю = "") Экспорт
	
	Если ИсходныеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПересчетТоваров") Тогда
		ТекстСообщенияПользователю = НСтр("ru = 'Штрихкод не распознан'");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		ТекстСообщенияПользователю = НСтр("ru = 'Штрихкод не распознан'");
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования = ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования(ЭтотОбъект);
	ПараметрыСканирования.Организация = Организация;
	ПараметрыСканирования.Владелец = Организация;
	
	ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ДекодироватьШтрихкодДанныхBase64(ИсходныеДанные);
	
	РезультатОбработки = МобильноеРабочееМестоКладовщикаЛокализация.ОбработатьВводШтрихкода(Ссылка, ИсходныеДанные, Неопределено, ПараметрыСканирования);
	
	ПараметрыЗавершенияВводаШтрихкода = ПараметрыЗавершенияВводаШтрихкода(ИсходныеДанные, РезультатОбработки, ПараметрыСканирования);
	ШтрихкодированиеОбщегоНазначенияИСКлиент.ЗавершитьОбработкуШтрихкода(ПараметрыЗавершенияВводаШтрихкода);
	
	Если РезультатОбработки.Свойство("ТребуетсяАвторизацияИСМП") Тогда
		Если РезультатОбработки.ТребуетсяАвторизацияИСМП Тогда
			РезультатОбработки.ТекстОшибки = НСтр("ru = 'Требуется авторизация ИС МП'");
		КонецЕсли;
	КонецЕсли;
	
	Если РезультатОбработки.ТребуетсяОбработкаШтрихкода Тогда
		РезультатОбработки.ТекстОшибки = НСтр("ru = 'Штрихкод не распознан'");
	КонецЕсли;
	
	ТекстСообщенияПользователю = РезультатОбработки.ТекстОшибки;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыЗавершенияВводаШтрихкода(ИсходныеДанные, РезультатОбработки, ПараметрыСканирования)
	
	ПараметрыЗавершенияВводаШтрихкода = ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыЗавершенияОбработкиШтрихкода();
	ПараметрыЗавершенияВводаШтрихкода.РезультатОбработкиШтрихкода   = РезультатОбработки;
	ПараметрыЗавершенияВводаШтрихкода.Форма                         = ЭтотОбъект;
	ПараметрыЗавершенияВводаШтрихкода.ПараметрыСканирования         = ПараметрыСканирования;
	ПараметрыЗавершенияВводаШтрихкода.ДанныеШтрихкода               = ИсходныеДанные;
	
	Возврат ПараметрыЗавершенияВводаШтрихкода;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ОткрытьФормуУточненияДанных()
	
	ШтрихкодированиеИСКлиент.Подключаемый_ОткрытьФормуУточненияДанных(ЭтотОбъект, ОписаниеОповещенияОбработкиКодаМаркировки());
	
КонецПроцедуры

&НаКлиенте
Функция ОписаниеОповещенияОбработкиКодаМаркировки()
	
	Возврат Новый ОписаниеОповещения("ОбработатьКодМаркировки", ЭтотОбъект);
	
КонецФункции
//--Локализация

&НаКлиенте
Процедура ПослеОбработкиШтрихкодов(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураТовара = Новый Структура;
	СтруктураТовара.Вставить("Номенклатура", "");
	СтруктураТовара.Вставить("Характеристика", "");
	СтруктураТовара.Вставить("Упаковка", "");
	СтруктураТовара.Вставить("Серия", "");
	СтруктураТовара.Вставить("Количество", 1);
	СтруктураТовара.Вставить("ШтрихкодУпаковки", "");
	СтруктураТовара.Вставить("ТипУпаковки", "");
	
	ЗаполнитьЗначенияСвойств(СтруктураТовара, Результат.ДанныеШтрихкода);
	
	СтруктураТовара.Количество = ?(СтруктураТовара.Количество = 0, 1, СтруктураТовара.Количество);
	
	//++Локализация
	
	ЕстьДубль = ПоискДублейШКУпаковок(СтруктураТовара.ШтрихкодУпаковки);
	
	Если ЕстьДубль Тогда
		ТекстСообщенияПользователю = НСтр("ru = 'Код маркировки отсканирован ранее'");
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ТекстСообщенияПользователю;
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	//--Локализация
	
	Если ЗначениеЗаполнено(СтруктураТовара.Номенклатура) Или ЗначениеЗаполнено(СтруктураТовара.ШтрихкодУпаковки) Тогда
		Закрыть(СтруктураТовара);
	КонецЕсли;
	
КонецПроцедуры

//++Локализация
&НаКлиенте
Процедура ОбработкаКодаМаркировкиВыполнитьДействие(ДанныеДляВыполненияДействия, ДополнительныеПараметры) Экспорт
	
	РезультатВыбора             = ДанныеДляВыполненияДействия.РезультатВыбора;
	РезультатОбработкиШтрихкода = ДанныеДляВыполненияДействия.РезультатОбработкиШтрихкода;
	КэшированныеЗначения        = ДанныеДляВыполненияДействия.КэшированныеЗначения;
	ПараметрыСканирования       = ДанныеДляВыполненияДействия.ПараметрыСканирования;
	
	Литерал = "Действие";
	Действие = ДанныеДляВыполненияДействия[Литерал];
	РезультатОбработкиШтрихкода = ОбработкаКодаМаркировкиВыполнитьДействиеСервер(Действие, РезультатВыбора, РезультатОбработкиШтрихкода, ПараметрыСканирования, КэшированныеЗначения);
	
	ПараметрыЗавершенияВводаШтрихкода = ПараметрыЗавершенияВводаШтрихкода(
		ДанныеДляВыполненияДействия.ИсходныеДанные, РезультатОбработкиШтрихкода, ДанныеДляВыполненияДействия.ПараметрыСканирования);
	ШтрихкодированиеОбщегоНазначенияИСКлиент.ЗавершитьОбработкуШтрихкода(ПараметрыЗавершенияВводаШтрихкода);
	
КонецПроцедуры

&НаСервере
Функция ОбработкаКодаМаркировкиВыполнитьДействиеСервер(Действие, РезультатВыбора, РезультатОбработкиШтрихкода, ПараметрыСканирования, КэшированныеЗначения)
	
	ПараметрыОбработкиВыбора    = ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьПараметрыОбработкиВыбора(РезультатВыбора, РезультатОбработкиШтрихкода, КэшированныеЗначения);
	РезультатОбработкиШтрихкода = ШтрихкодированиеИС.ВыполнитьДействие(ЭтотОбъект, Действие, ПараметрыОбработкиВыбора);
	
	РезультатОбработкиШтрихкода.ИзмененныеСтроки  = Новый Массив;
	РезультатОбработкиШтрихкода.ДобавленныеСтроки = Новый Массив;
	
	Возврат РезультатОбработкиШтрихкода;
	
КонецФункции
//--Локализация

&НаКлиенте
Процедура ОбработатьШтрихкод()
	
	Если ТипПоиска = "ПоискЯчейки" Тогда
		
		РезультатПоиска = НайтиЯчейкуСервер(Склад, Помещение, Штрихкод);
		
		Если ЗначениеЗаполнено(РезультатПоиска.Ячейка) Тогда
			Закрыть(РезультатПоиска.Ячейка);
		Иначе
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = НСтр("ru = 'Ячейка не найдена'");
			СообщениеПользователю.Сообщить();
		КонецЕсли;
		
	ИначеЕсли ТипПоиска = "ПоискНоменклатуры" Тогда
		
		ШтрихКодСтруктура = Новый Структура("Штрихкод, Количество", Штрихкод, 1);
		
		ОбработатьШтрихкоды(ШтрихКодСтруктура);
		
	КонецЕсли;
	
КонецПроцедуры

#Если МобильныйКлиент Тогда

&НаКлиенте
Процедура СканированиеШтрихКодов(Команда)
	
	Если СредстваМультимедиа.ПоддерживаетсяСканированиеШтрихКодов() Тогда
		
		ОбработчикСканирования = Новый ОписаниеОповещения("ОбработкаСканирования", ЭтаФорма);
		
		СредстваМультимедиа.ПоказатьСканированиеШтрихКодов(НСтр("ru='Наведите камеру на штрихкод'"),
			ОбработчикСканирования,
			,
			ТипШтрихКода.Линейный);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСканирования(ШтрихкодКамера, Результат, Сообщение, ДополнительныеПараметры) Экспорт

	Если Результат Тогда
		
		СредстваМультимедиа.ВоспроизвестиЗвуковоеОповещение(ЗвуковоеОповещение.ПоУмолчанию,Истина);
		СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
		
		Штрихкод = ШтрихкодКамера;
		ОбработатьШтрихкод();
		
	Иначе
		
		Сообщение = НСтр("ru='Ошибка обработки штрих кода'");
		
	КонецЕсли;
КонецПроцедуры

#КонецЕсли

#КонецОбласти