
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Ссылка = Параметры.Ссылка;     

	ПоказыватьФотоТоваров = Параметры.ПоказыватьФотоТоваров;
	
	ЗаполнитьФорму();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОформитьМеню("Разместить")
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" И МенеджерОборудованияУТКлиент.ЕстьНеобработанноеСобытие() Тогда
			
			// Преобразуем предварительно к ожидаемому формату
			Если Параметр[1] = Неопределено Тогда
				Штрихкод = Параметр[0];
			Иначе
				Штрихкод = Параметр[1][1];
			КонецЕсли;
			
			ЭтоЯчейка = Ложь;
			ЭтоТовар = Ложь;
			
			РезультатПоискаЯчейки = НайтиЯчейкуСервер(Склад, Помещение, Штрихкод);
			ШтрихкодЯчейки = ЗначениеЗаполнено(РезультатПоискаЯчейки.Ячейка);
			
			Если ШтрихкодЯчейки Тогда
				ОткрытьФормуЯчейки(РезультатПоискаЯчейки.Ячейка);
			Иначе
				ПараметрыКарточкаТовара = НайтиТоварСервер(Штрихкод);
				ШтрихкодНоменклатуры = ЗначениеЗаполнено(ПараметрыКарточкаТовара.Номенклатура);
				
				Если ШтрихкодНоменклатуры Тогда
					
					Описание = Новый ОписаниеОповещения("ОбновитьФорму", ЭтаФорма);
					
					ПараметрыФормы = Новый Структура;
					ПараметрыФормы.Вставить("Номенклатура", ПараметрыКарточкаТовара.Номенклатура);
					ПараметрыФормы.Вставить("Характеристика", ПараметрыКарточкаТовара.Характеристика);
					ПараметрыФормы.Вставить("Упаковка", ПараметрыКарточкаТовара.Упаковка);
					ПараметрыФормы.Вставить("Количество", ПараметрыКарточкаТовара.Количество);
					ПараметрыФормы.Вставить("Режим", "РазмещениеВЯчейку");
					ПараметрыФормы.Вставить("НомерСтроки", 0);
					ПараметрыФормы.Вставить("Склад", Склад);
					ПараметрыФормы.Вставить("Помещение", Помещение);
					ПараметрыФормы.Вставить("ЭтоСканирование", Истина);
					ПараметрыФормы.Вставить("Ячейка", Неопределено);
					ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
					
					ОткрытьФорму(
					"Обработка.МобильноеРабочееМестоКладовщика.Форма.КарточкаТовара",ПараметрыФормы,
					ЭтаФорма,,,,Описание,
					РежимОткрытияОкнаФормы.Независимый);
				Иначе
					СообщениеПользователю = Новый СообщениеПользователю;
					СообщениеПользователю.Текст = НСтр("ru = 'Штрихкод не найден:'") + Штрихкод;
					СообщениеПользователю.Сообщить();
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерейтиВРазделРазместить(Команда)
	ОформитьМеню("Разместить");
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВРазделРазмещено(Команда)
	ОформитьМеню("Размещено");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Описание = Новый ОписаниеОповещения("ОбновитьФорму", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Номенклатура", Элемент.ТекущиеДанные.Номенклатура);
	ПараметрыФормы.Вставить("Характеристика", Элемент.ТекущиеДанные.Характеристика);
	ПараметрыФормы.Вставить("Серия", Элемент.ТекущиеДанные.Серия);
	ПараметрыФормы.Вставить("Назначение", Элемент.ТекущиеДанные.Назначение);
	ПараметрыФормы.Вставить("Упаковка", Элемент.ТекущиеДанные.Упаковка);
	ПараметрыФормы.Вставить("Количество", Элемент.ТекущиеДанные.КоличествоУпаковок);
	ПараметрыФормы.Вставить("Режим", "РазмещениеВЯчейку");
	ПараметрыФормы.Вставить("НомерСтроки", ТоварыРазместить.Индекс(Элементы.ТоварыРазместить.ТекущиеДанные));
	ПараметрыФормы.Вставить("Склад", Склад);
	ПараметрыФормы.Вставить("Помещение", Помещение);
	ПараметрыФормы.Вставить("Ячейка", Элемент.ТекущиеДанные.Ячейка);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	
	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.КарточкаТовара",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыРазмещеноВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Описание = Новый ОписаниеОповещения("ОбновитьФорму", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Номенклатура", Элемент.ТекущиеДанные.Номенклатура);
	ПараметрыФормы.Вставить("Характеристика", Элемент.ТекущиеДанные.Характеристика);
	ПараметрыФормы.Вставить("Серия", Элемент.ТекущиеДанные.Серия);
	ПараметрыФормы.Вставить("Упаковка", Элемент.ТекущиеДанные.Упаковка);
	ПараметрыФормы.Вставить("Количество", Элемент.ТекущиеДанные.КоличествоУпаковок);
	ПараметрыФормы.Вставить("Режим", "РедактированиеРазмещениеПоЯчейкам");
	ПараметрыФормы.Вставить("НомерСтроки", ТоварыРазмещено.Индекс(Элементы.ТоварыРазмещено.ТекущиеДанные));
	ПараметрыФормы.Вставить("Склад", Склад);
	ПараметрыФормы.Вставить("Помещение", Помещение);
	ПараметрыФормы.Вставить("Ячейка", Элемент.ТекущиеДанные.Ячейка);
	ПараметрыФормы.Вставить("Назначение", Элемент.ТекущиеДанные.Назначение);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	
	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.КарточкаТовара",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРазмещение(Команда)
	
	Если ТоварыРазместить.Количество() = 0 и ТоварыРазмещено.Количество() = 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = НСтр("ru = 'Нет товаров для размещения'");
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить("Завершить", НСтр("ru = 'Завершить'"));
	СписокЗначений.Добавить("Продолжить", НСтр("ru = 'Продолжить'"));
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Завершить размещение?'"), СписокЗначений, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	ЗаполнитьЗонуПриемки();
КонецПроцедуры

&НаКлиенте
Процедура СобратьВсе(Команда)
	СобратьВсеНаСервере();
	ОформитьМеню("Размещено");
КонецПроцедуры

&НаКлиенте
Процедура Сканировать(Команда)
	
	Описание = Новый ОписаниеОповещения("ОткрытьФормуЯчейки", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипПоиска", "ПоискЯчейки");
	ПараметрыФормы.Вставить("Склад", Склад);
	ПараметрыФормы.Вставить("Помещение", Помещение);
	
	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.СканированиеШтрихкода",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЯчейки(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Описание = Новый ОписаниеОповещения("ЗавершитьРазмещениеВЯчейку", ЭтаФорма);
	
	ТоварыВЯчейке = Новый Массив;
	
	Для Каждого Строка Из ТоварыРазместить Цикл
		
		Если Строка.Ячейка = Результат Тогда
			
			Структура = СтруктураТоваров();
			ЗаполнитьЗначенияСвойств(Структура, Строка);
			
			ТоварыВЯчейке.Добавить(Структура);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ячейка",      Результат);
	ПараметрыФормы.Вставить("Товары",      ТоварыВЯчейке);
	ПараметрыФормы.Вставить("Склад",       Склад); 
	ПараметрыФормы.Вставить("Помещение",   Помещение);
	ПараметрыФормы.Вставить("ТипОперации", 1);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	
	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоКладовщика.Форма.РазмещениеВЯчейки",ПараметрыФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРазмещениеВЯчейку(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗавершитьРазмещениеВЯчейкуНаСервере(Результат);
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьРазмещениеВЯчейкуНаСервере(Результат)
	
	ТаблицаТовары = ТоварыРазместить.Выгрузить();
	
	МассивРазмещений = Результат.МассивРазмещений;
	Ячейка = Результат.Ячейка;
	
	// Массив структур
	Для Каждого Строка Из МассивРазмещений Цикл
		
		Если Строка.КоличествоУпаковок <= 0 Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		КоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Строка.Упаковка, Строка.Номенклатура);
		
		НоваяСтрока = ТоварыРазмещено.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.Количество = НоваяСтрока.КоличествоУпаковок * КоэффициентУпаковки;
		
		Если ЗначениеЗаполнено(Строка.ЯчейкаЗамена) Тогда
			НоваяСтрока.Ячейка = Строка.ЯчейкаЗамена;
		КонецЕсли;
		
		ОтборПоиска = Новый Структура;
		ОтборПоиска.Вставить("Номенклатура",   Строка.Номенклатура);
		ОтборПоиска.Вставить("Характеристика", Строка.Характеристика);
		ОтборПоиска.Вставить("Серия",          Строка.Серия);
		ОтборПоиска.Вставить("Упаковка",       Строка.Упаковка);
		ОтборПоиска.Вставить("Ячейка",         Ячейка);
		
		МассивРазместить = ТаблицаТовары.НайтиСтроки(ОтборПоиска);
		Для Каждого СтрокаПоиск Из МассивРазместить Цикл
			СтрокаПоиск.КоличествоУпаковок = СтрокаПоиск.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
			СтрокаПоиск.Количество = СтрокаПоиск.КоличествоУпаковок;
		КонецЦикла;
		
	КонецЦикла;
	
	Сч = 0;
	Пока Сч < ТаблицаТовары.Количество() Цикл
		
		Если ТаблицаТовары[Сч].КоличествоУпаковок <= 0 Тогда
			ТаблицаТовары.Удалить(ТаблицаТовары[Сч]);
		Иначе
			Сч = Сч + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	ТоварыРазместить.Загрузить(ТаблицаТовары);
	
КонецПроцедуры

&НаКлиенте
Функция СтруктураТоваров()
	
	Структура = Новый Структура;
	Структура.Вставить("Номенклатура","");
	Структура.Вставить("Характеристика","");
	Структура.Вставить("Серия","");
	Структура.Вставить("Упаковка","");
	Структура.Вставить("КоличествоУпаковок","");
	Структура.Вставить("Назначение","");
	
	Возврат Структура;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОформитьМеню(ИмяВкладки)
	
	ПоказатьМеню();
	
	Элементы.РамкаРазместить.Картинка = БиблиотекаКартинок.РамкаМенюБелая;
	Элементы.КомандаРазместить.ЦветТекста = WebЦвета.ТемноСерый;
	
	Элементы.РамкаРазмещено.Картинка = БиблиотекаКартинок.РамкаМенюБелая;
	Элементы.КомандаРазмещено.ЦветТекста = WebЦвета.ТемноСерый;
	
	Если ИмяВкладки = "Разместить" Тогда
		Элементы.РамкаРазместить.Картинка = БиблиотекаКартинок.РамкаМенюЧерная;
		Элементы.КомандаРазместить.ЦветТекста = WebЦвета.Черный;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРазместить;
	ИначеЕсли ИмяВкладки = "Размещено" Тогда
		Элементы.РамкаРазмещено.Картинка = БиблиотекаКартинок.РамкаМенюЧерная; 
		Элементы.КомандаРазмещено.ЦветТекста = WebЦвета.Черный;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРазмещено;
	КонецЕсли;
	
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаголовкиКомандМеню()
	Элементы.КомандаРазместить.Заголовок = СтрШаблон(НСтр("ru = 'Разместить (%1)'"), ТоварыРазместить.Количество());
	Элементы.КомандаРазмещено.Заголовок = СтрШаблон(НСтр("ru = 'Размещено (%1)'"), ТоварыРазмещено.Количество());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорму()
	
	СтруктураДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
		"Склад, Комментарий, Помещение, ЗонаПриемки, Исполнитель, ТоварыРазмещение");
	
	Склад       = СтруктураДокумента.Склад;
	Комментарий = СтруктураДокумента.Комментарий;
	Помещение   = СтруктураДокумента.Помещение;
	ЗонаПриемки = СтруктураДокумента.ЗонаПриемки;
	Исполнитель = СтруктураДокумента.Исполнитель;
	
	Для Каждого Строка Из СтруктураДокумента.ТоварыРазмещение.Выгрузить() Цикл
		
		Разместить         = Строка.Количество - Строка.КоличествоРазмещено;
		РазместитьУпаковок = Строка.КоличествоУпаковок - Строка.КоличествоУпаковокРазмещено;
		
		Если Строка.КоличествоРазмещено > 0 Тогда
			НоваяСтрока = ТоварыРазмещено.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.Количество = Строка.КоличествоРазмещено;
			НоваяСтрока.КоличествоУпаковок = Строка.КоличествоУпаковокРазмещено;
		ИначеЕсли Разместить > 0 Тогда
			НоваяСтрока = ТоварыРазместить.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Упаковка) Тогда
				НоваяСтрока.Упаковка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура, "ЕдиницаИзмерения");
			КонецЕсли;
			НоваяСтрока.Количество = Разместить;
			НоваяСтрока.КоличествоУпаковок = РазместитьУпаковок;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьФормуНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФормуНаСервере(Результат)
	
	Литерал = "НомерСтроки";
	НомерСтроки = Результат[Литерал];
	
	КоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Результат.Упаковка, Результат.Номенклатура);
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Результат.Номенклатура);
	СтруктураПоиска.Вставить("Характеристика", Результат.Характеристика);
	СтруктураПоиска.Вставить("Серия", Результат.Серия);
	СтруктураПоиска.Вставить("Упаковка", Результат.Упаковка);
	СтруктураПоиска.Вставить("Назначение", Результат.Назначение); 
	СтруктураПоиска.Вставить("Ячейка", Результат.Ячейка);
	
	Если Результат.Режим = "РедактированиеРазмещениеПоЯчейкам" Тогда
		
		ИсходноеКоличество = ТоварыРазмещено[Результат.НомерСтроки].КоличествоУпаковок;
		Количество = Результат.КоличествоУпаковок * КоэффициентУпаковки;
		
		ТоварыРазмещено[Результат.НомерСтроки].Упаковка           = Результат.Упаковка;
		ТоварыРазмещено[Результат.НомерСтроки].КоличествоУпаковок = Результат.КоличествоУпаковок;
		ТоварыРазмещено[Результат.НомерСтроки].Количество         = ТоварыРазмещено[Результат.НомерСтроки].КоличествоУпаковок * КоэффициентУпаковки;
		ТоварыРазмещено[Результат.НомерСтроки].Серия              = Результат.Серия;
		ТоварыРазмещено[Результат.НомерСтроки].Назначение         = Результат.Назначение;
		
		РезультатПоиска = ТоварыРазместить.НайтиСтроки(СтруктураПоиска);
		Если РезультатПоиска.Количество() > 0 Тогда
			РезультатПоиска[0].КоличествоУпаковок = РезультатПоиска[0].КоличествоУпаковок +  ИсходноеКоличество - Результат.КоличествоУпаковок;
			РезультатПоиска[0].Количество = РезультатПоиска[0].КоличествоУпаковок * КоэффициентУпаковки;
		ИначеЕсли ИсходноеКоличество - Результат.КоличествоУпаковок > 0 Тогда
			НоваяСтрока = ТоварыРазместить.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Результат);
			НоваяСтрока.КоличествоУпаковок = ИсходноеКоличество - Результат.КоличествоУпаковок;
			НоваяСтрока.Количество         = НоваяСтрока.КоличествоУпаковок * КоэффициентУпаковки;
		КонецЕсли;
		
	Иначе
		
		ТоварыРазместить[НомерСтроки].Упаковка = Результат.Упаковка;
		ТоварыРазместить[НомерСтроки].КоличествоУпаковок = ТоварыРазместить[НомерСтроки].КоличествоУпаковок - Результат.КоличествоУпаковок;
		ТоварыРазместить[НомерСтроки].Количество = ТоварыРазместить[НомерСтроки].КоличествоУпаковок * КоэффициентУпаковки;
		
		Если ТоварыРазместить[НомерСтроки].КоличествоУпаковок <= 0 Тогда
			ТоварыРазместить.Удалить(НомерСтроки);
		КонецЕсли; 
		
		РезультатПоиска = ТоварыРазмещено.НайтиСтроки(СтруктураПоиска);
		Если РезультатПоиска.Количество() > 0 Тогда
			РезультатПоиска[0].КоличествоУпаковок = РезультатПоиска[0].КоличествоУпаковок + Результат.КоличествоУпаковок;
			РезультатПоиска[0].Количество = РезультатПоиска[0].КоличествоУпаковок * КоэффициентУпаковки;
		ИначеЕсли Результат.КоличествоУпаковок > 0 Тогда
			НоваяСтрока = ТоварыРазмещено.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Результат);
			НоваяСтрока.Количество = НоваяСтрока.КоличествоУпаковок * КоэффициентУпаковки;
		КонецЕсли;
		
	КонецЕсли;
	
	Сч = 0;
	Пока Сч < ТоварыРазместить.Количество() Цикл
		Если ТоварыРазместить[Сч].Количество <= 0 Тогда
			ТоварыРазместить.Удалить(Сч);
		Иначе
			Сч = Сч + 1;
		КонецЕсли;
	КонецЦикла;
	
	Сч = 0;
	Пока Сч < ТоварыРазмещено.Количество() Цикл
		Если ТоварыРазмещено[Сч].Количество <= 0 Тогда
			ТоварыРазмещено.Удалить(Сч);
		Иначе
			Сч = Сч + 1;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаСервере
Функция ЗакончитьРазмещениеНаСервере()
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	
	ДокументОбъект.Помещение   = Помещение;
	ДокументОбъект.Комментарий = Комментарий;
	ДокументОбъект.ЗонаПриемки = ЗонаПриемки;
	ДокументОбъект.Исполнитель = Исполнитель;
	
	ДокументОбъект.ТоварыРазмещение.Очистить();
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ИспользоватьСкладскиеПомещения")
		И Помещение.Пустая() Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = НСтр("ru = 'Не выбрано помещение'");
		СообщениеПользователю.Сообщить();
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["СтраницаИнформация"];
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ЗонаПриемки.Пустая() Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = НСтр("ru = 'Не выбрана зона приемки'");
		СообщениеПользователю.Сообщить();
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["СтраницаИнформация"];
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Для Каждого Строка Из ТоварыРазмещено Цикл
		
		НоваяСтрока = ДокументОбъект.ТоварыРазмещение.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.КоличествоРазмещено = Строка.Количество;
		НоваяСтрока.КоличествоУпаковокРазмещено = Строка.КоличествоУпаковок;
		НоваяСтрока.Количество = Строка.Количество;
		НоваяСтрока.КоличествоУпаковок = Строка.КоличествоУпаковок;
		
	КонецЦикла;
	
	Для Каждого Строка Из ТоварыРазместить Цикл
		
		НоваяСтрока = ДокументОбъект.ТоварыРазмещение.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.Количество = Строка.Количество;
		НоваяСтрока.КоличествоУпаковок = Строка.КоличествоУпаковок;
		
	КонецЦикла;
	
	ПараметрыУказанияСерий = Документы.ОтборРазмещениеТоваров.ПараметрыУказанияСерий(ДокументОбъект);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий.Размещение);
	
	Если ТоварыРазместить.Количество() = 0 Тогда
		ДокументОбъект.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоБезОшибок;
	ИначеЕсли ТоварыРазмещено.Количество() = 0 Тогда
		ДокументОбъект.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.Подготовлено;
	Иначе
		ДокументОбъект.Статус = Перечисления.СтатусыОтборовРазмещенийТоваров.ВыполненоСОшибками;
	КонецЕсли;
		
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Информация(Команда)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["СтраницаИнформация"];
	СкрытьМеню();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["СтраницаИнформация"] Тогда
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		ОформитьМеню("Размещено");
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьЗонуПриемки()
	
	ЗонаПриемки = Справочники.СкладскиеЯчейки.ЗонаПриемкиПоУмолчанию(Склад, Помещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьМеню()

	Элементы.ГруппаМеню.Видимость = Истина;
	Элементы.ГруппаКоманды.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьМеню()

	Элементы.ГруппаМеню.Видимость = Ложь;
	Элементы.ГруппаКоманды.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СобратьВсеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыКПоступлениюОстатки.ДокументПоступления КАК ДокументПоступления,
		|	ТоварыКПоступлениюОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлениюОстатки.Характеристика КАК Характеристика,
		|	ТоварыКПоступлениюОстатки.Назначение КАК Назначение,
		|	ТоварыКПоступлениюОстатки.Склад КАК Склад,
		|	ТоварыКПоступлениюОстатки.Отправитель КАК Отправитель,
		|	ТоварыКПоступлениюОстатки.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ТоварыКПоступлениюОстатки.Серия КАК Серия,
		|	ТоварыКПоступлениюОстатки.КОформлениюОрдеровОстаток КАК Количество,
		|	ТоварыКПоступлениюОстатки.КОформлениюОрдеровОстаток КАК КоличествоУпаковок,
		|	ТоварыКПоступлениюОстатки.Номенклатура.ЕдиницаИзмерения КАК Упаковка
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(, ДокументПоступления = &ДокументПоступления) КАК ТоварыКПоступлениюОстатки
		|ГДЕ
		|	ТоварыКПоступлениюОстатки.КОформлениюОрдеровОстаток > 0";
	
	Запрос.УстановитьПараметр("ДокументПоступления", РаспоряжениеНаПоступление);
	
	Остатки = Запрос.Выполнить().Выгрузить();
	ТоварыРазмещено.Загрузить(Остатки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРазмещение(Команда)
	
	ИндексСтроки = ТоварыРазмещено.Индекс(Элементы.ТоварыРазмещено.ТекущиеДанные);
	
	Если ИндексСтроки < 0 Тогда
		Возврат;
	КонецЕсли;
	
	КоэффициентУпаковки = ПолучитьКоэффициентУпаковкиСервер(ТоварыРазмещено[ИндексСтроки].Номенклатура, ТоварыРазмещено[ИндексСтроки].Упаковка);
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",   ТоварыРазмещено[ИндексСтроки].Номенклатура);
	СтруктураПоиска.Вставить("Характеристика", ТоварыРазмещено[ИндексСтроки].Характеристика);
	СтруктураПоиска.Вставить("Серия",          ТоварыРазмещено[ИндексСтроки].Серия);
	СтруктураПоиска.Вставить("Упаковка",       ТоварыРазмещено[ИндексСтроки].Упаковка);
	СтруктураПоиска.Вставить("Ячейка",         ТоварыРазмещено[ИндексСтроки].Ячейка);
	СтруктураПоиска.Вставить("Назначение",     ТоварыРазмещено[ИндексСтроки].Назначение);
	
	РезультатПоиска = ТоварыРазместить.НайтиСтроки(СтруктураПоиска);
	Если РезультатПоиска.Количество() > 0 Тогда
		РезультатПоиска[0].КоличествоУпаковок = РезультатПоиска[0].КоличествоУпаковок + ТоварыРазмещено[ИндексСтроки].КоличествоУпаковок;
		РезультатПоиска[0].Количество = РезультатПоиска[0].КоличествоУпаковок * КоэффициентУпаковки;
	Иначе
		НоваяСтрока = ТоварыРазместить.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТоварыРазмещено[ИндексСтроки]);
		НоваяСтрока.Количество = НоваяСтрока.КоличествоУпаковок * КоэффициентУпаковки;
	КонецЕсли;
	
	ТоварыРазмещено.Удалить(ИндексСтроки);
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКоэффициентУпаковкиСервер(Номенклатура, Упаковка)
	
	Возврат Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Упаковка, Номенклатура);
	
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = "Завершить" Тогда
		
		РазмещениеЗавершено = ЗакончитьРазмещениеНаСервере();
		
		Если РазмещениеЗавершено Тогда
			Закрыть();
		КонецЕсли;
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиЯчейкуСервер(Склад, Помещение, Штрихкод)
	Возврат Обработки.МобильноеРабочееМестоКладовщика.НайтиЯчейкуСервер(Склад, Помещение, Штрихкод);
КонецФункции

&НаСервереБезКонтекста
Функция НайтиТоварСервер(Штрихкод)
	Возврат Обработки.МобильноеРабочееМестоКладовщика.НайтиТоварПоШК(Штрихкод);
КонецФункции

#КонецОбласти
