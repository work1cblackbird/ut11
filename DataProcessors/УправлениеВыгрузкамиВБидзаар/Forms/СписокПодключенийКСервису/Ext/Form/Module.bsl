#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ВидЭТП = ИнтеграцияСЭлектроннымиТорговымиПлощадками.ПолучитьВидЭТПИлиРазделУчета(Параметры.РазделУчета);
	КоличествоПодключений = Справочники.УчетныеЗаписиЭлектронныхТорговыхПлощадок.КоличествоПодключений(ВидЭТП);
	
	Если Параметры.РазделУчета = ИнтеграцияСЭлектроннымиТорговымиПлощадкамиКлиентСервер.РазделУчетаПоставщики() Тогда
		РазделУчетаПредставление = НСтр("ru = 'Продажи'");
	ИначеЕсли Параметры.РазделУчета = ИнтеграцияСЭлектроннымиТорговымиПлощадкамиКлиентСервер.РазделУчетаПокупатели() Тогда
		РазделУчетаПредставление = НСтр("ru = 'Закупки'");
	КонецЕсли;
	Заголовок = СтрШаблон("%1 (%2)", Заголовок, РазделУчетаПредставление);
	
	УстановитьПараметрыДинамическогоСписка(ВидЭТП);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПараметрыФормы = Новый Структура("РазделУчета", Параметры.РазделУчета);

	Если КоличествоПодключений = 0 Тогда
		ОткрытьФорму("Обработка.УправлениеВыгрузкамиВБидзаар.Форма.НастройкаПодключения", ПараметрыФормы, ВладелецФормы);
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ЗакрытьФормуСпискаПодключений" Тогда
		Закрыть();
	ИначеЕсли ИмяСобытия = "Бидзаар_УчетнаяЗаписьАктивация" Или ИмяСобытия = "Бидзаар_УчетнаяЗаписьДеактивация" Тогда
		Элементы.СписокПодключений.Обновить();
	ИначеЕсли ИмяСобытия = "ВывестиСообщение" И ЗначениеЗаполнено(Параметр) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Параметр);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокПодключенийПередНачаломИзменения(Элемент, Отказ)

	Отказ = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключить(Команда)

	ПараметрыФормы = Новый Структура("РазделУчета", Параметры.РазделУчета);
	ОткрытьФорму("Обработка.УправлениеВыгрузкамиВБидзаар.Форма.НастройкаПодключения", ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНастройкиАвторизации(Команда)
	
	ТекущиеДанные = Элементы.СписокПодключений.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Организация, РазделУчета", ТекущиеДанные.Организация, Параметры.РазделУчета);
	ОткрытьФорму("Обработка.УправлениеВыгрузкамиВБидзаар.Форма.НастройкаПодключения", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиАвторизации(Команда)

	Оповещение = Новый ОписаниеОповещения("ОчиститьНастройкиЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Настройки авторизации будут удалены, что приведет к невозможности управления выгрузкой товаров текущей учетной записи.
			|Очистить настройки?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаКлиенте
Процедура ОчиститьНастройкиЗавершение(Результат, Параметры) Экспорт 

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ТекущиеДанные = Элементы.СписокПодключений.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ОчисткаУспешна = ОчиститьНастройкиНаСервере(ТекущиеДанные.Ссылка);

	Если ОчисткаУспешна Тогда
		Элементы.СписокПодключений.Обновить();
		ПараметрВидЭТП = СписокПодключений.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВидЭТП"));
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ВидЭТП", ?(ПараметрВидЭТП = Неопределено, Неопределено, ПараметрВидЭТП.Значение));
		ПараметрыОповещения.Вставить("Организация", ТекущиеДанные.Организация);
		Оповестить("Бидзаар_УчетнаяЗаписьДеактивация", ПараметрыОповещения, ТекущиеДанные.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ОчиститьНастройкиНаСервере(УчетнаяЗаписьЭТП)

	ОчисткаУспешна = ИнтеграцияСЭлектроннымиТорговымиПлощадками.ОчиститьНастройкиУчетнойЗаписи(УчетнаяЗаписьЭТП);

	Возврат ОчисткаУспешна;

КонецФункции

&НаСервере
Процедура УстановитьПараметрыДинамическогоСписка(ВидЭТП)

	СписокПодключений.Параметры.УстановитьЗначениеПараметра("ВидЭТП", ВидЭТП);

	СвойстваСписка = СписокПодключений.КомпоновщикНастроек.Настройки.ДополнительныеСвойства;
	СвойстваСписка.Вставить("ВидЭТП", ВидЭТП);

КонецПроцедуры

#КонецОбласти