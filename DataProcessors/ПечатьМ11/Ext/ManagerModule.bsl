#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  ПараметрыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыПечати
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"М11",
			НСтр("ru='Требование-накладная (М-11)'"),
			СформироватьПечатнуюФормуМ11(
				СтруктураТипов,
				ОбъектыПечати,
				ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры // Печать()

// Функция формирует печатную форму "М-11"
// Параметры:
//  СтруктураТипов - Структура -
//  ОбъектыПечати - СписокЗначений Из ДокументСсылка.ПеремещениеТоваров - ссылки на печатаемые объекты
//  ПараметрыПечати - Структура - дополнительные настройки печати
//  Возвращаемое значение:
//   ТабличныйДокумент - табличный документ куда сформирована печатная форма.
Функция СформироватьПечатнуюФормуМ11(СтруктураТипов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_М11";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		КонецЕсли;
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыМ11(
			ПараметрыПечати,
			СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументМ11(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // СформироватьПечатнуюФормуСчетНаОплату()

// Процедура заполняет табличный документ "М-11"
//
Процедура ЗаполнитьТабличныйДокументМ11(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)

	ШаблонОшибкиТовары = НСтр("ru = 'В документе %1 отсутствуют товары. Печать М-11 не требуется'");

	ТоварКод = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(ТоварКод) Тогда
		ТоварКод = "Код";
	КонецЕсли;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьМ11.ПФ_MXL_М11");

	ВыводитьНДИГК = Ложь;

	ПервыйДокумент = Истина;
	ВыборкаДокументы = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоТабличнымЧастям = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СтруктураОтбора = Новый Структура("Ссылка");

	Пока ВыборкаДокументы.Следующий() Цикл

		СтруктураОтбора.Ссылка = ВыборкаДокументы.Ссылка;
		ВыборкаПоТабличнымЧастям.Сбросить();
		Если Не ВыборкаПоТабличнымЧастям.НайтиСледующий(СтруктураОтбора) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибкиТовары, ВыборкаДокументы.Ссылка),
				ВыборкаДокументы.Ссылка);
			Продолжить;
		КонецЕсли;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		ВыборкаПоСкладам = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаПоСкладам.Следующий() Цикл

			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;

			ПервыйДокумент = Ложь;
			
			// Вывод шапки.
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьШапка,
				ВыборкаДокументы.Ссылка);
			ОбластьШапка.Параметры.Заголовок = НСтр("ru = 'ТРЕБОВАНИЕ-НАКЛАДНАЯ №'")
				+ ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер, Ложь, Истина);
			ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
			ОбластьШапка.Параметры.Заполнить(ВыборкаПоСкладам);

			СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаДокументы.Организация,
				ВыборкаДокументы.ДатаДокумента);
			ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
				СведенияОбОрганизации);
			ОбластьШапка.Параметры.КодОКПО = СведенияОбОрганизации.КодПоОКПО;
			ТабличныйДокумент.Вывести(ОбластьШапка);

			Если ВыводитьНДИГК Тогда

				ВыборкаПоНДИГКОтправителя = ВыборкаПоСкладам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				НомерСтраницы   = 1;
				
				ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
				ТабличныйДокумент.Вывести(ОбластьПодпись);

				Пока ВыборкаПоНДИГКОтправителя.Следующий() Цикл

					ВыборкаПоНДИГКПолучателя = ВыборкаПоНДИГКОтправителя.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

					Пока ВыборкаПоНДИГКПолучателя.Следующий() Цикл	
						
						// Создаем массив для проверки вывода
						МассивВыводимыхОбластей = Новый Массив;

						ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыНДИГК");
						ШапкаТаблицы.Параметры.Заполнить(ВыборкаДокументы);
						ШапкаТаблицы.Параметры.Заполнить(ВыборкаПоНДИГКПолучателя);
						ШапкаТаблицы.Параметры.ПредставлениеПодразделения = ВыборкаДокументы.Подразделение;

						ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
						
						// Области многострочной части документа
						ОбластьМакета	= Макет.ПолучитьОбласть("Строка");
						ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");

						МассивВыводимыхОбластей.Добавить(ОбластьПодпись);
						МассивВыводимыхОбластей.Добавить(ШапкаТаблицы);
						МассивВыводимыхОбластей.Добавить(ЗаголовокТаблицы);
						МассивВыводимыхОбластей.Добавить(ОбластьМакета);
						МассивВыводимыхОбластей.Добавить(ОбластьПодвал);

						Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
							НомерСтраницы = НомерСтраницы + 1;
							ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							ШапкаТаблицы.Параметры.Заполнить(Новый Структура("НомерСтраницыШапка", "Страница "
								+ НомерСтраницы));
							ТабличныйДокумент.Вывести(ШапкаТаблицы);
							ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
						Иначе
							ТабличныйДокумент.Вывести(ШапкаТаблицы);
							ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
						КонецЕсли;

						НомерСтроки = 0;

						ВыборкаПоСтрокам = ВыборкаПоНДИГКПолучателя.Выбрать();
						КоличествоСтрок = ВыборкаПоСтрокам.Количество();
						Пока ВыборкаПоСтрокам.Следующий() Цикл

							Область = Макет.ПолучитьОбласть("Строка");
							Область.Параметры.Заполнить(ВыборкаПоСтрокам);

							НомерСтроки = НомерСтроки + 1;

							МассивВыводимыхОбластей.Очистить();
							МассивВыводимыхОбластей.Добавить(Область);

							Если НомерСтроки = КоличествоСтрок Тогда
								МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
							КонецЕсли;

							Если ТоварКод = "Артикул" Тогда
								Область.Параметры.НоменклатурныйНомер = ВыборкаПоСтрокам.НоменклатурныйНомерАртикул;
							Иначе
								Область.Параметры.НоменклатурныйНомер = ВыборкаПоСтрокам.НоменклатурныйНомерКод;
							КонецЕсли;

							ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
							ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();

							Область.Параметры.МатериалНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
							СокрЛП(ВыборкаПоСтрокам.НоменклатураНаименование), СокрЛП(ВыборкаПоСтрокам.Характеристика), , ,
								ДопПараметрыПредставлениеНоменклатуры);

							Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
								НомерСтраницы = НомерСтраницы + 1;
								ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								СтруктураПараметров = Новый Структура;
								СтруктураПараметров.Вставить("НомерСтраницы", "Страница " + НомерСтраницы);
								ЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
								ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
							КонецЕсли;

							ТабличныйДокумент.Вывести(Область);

						КонецЦикла;

					КонецЦикла;

				КонецЦикла;
				
				// Вывод подвала.
				ОбластьПодвал.Параметры.ДолжностьОтправителя = ВыборкаПоСкладам.ДолжностьКладовщикаОтправителя;
				ОбластьПодвал.Параметры.ФИООтправителя = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(
					ВыборкаПоСкладам.КладовщикОтправитель, ВыборкаДокументы.ДатаДокумента);
				ТабличныйДокумент.Вывести(ОбластьПодвал);

			Иначе

				НомерСтраницы   = 1;
				НомерСтроки = 0;
				
				// Создаем массив для проверки вывода
				МассивВыводимыхОбластей = Новый Массив;

				ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");

				ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
				ШапкаТаблицы.Параметры.Заполнить(ВыборкаДокументы);
				ШапкаТаблицы.Параметры.Заполнить(ВыборкаПоСкладам);
				ШапкаТаблицы.Параметры.ПредставлениеПодразделения = ВыборкаДокументы.Подразделение;
				ТабличныйДокумент.Вывести(ШапкаТаблицы);

				ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
				ТабличныйДокумент.Вывести(ОбластьПодпись);

				// Выводим заголовок таблицы
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
				ТабличныйДокумент.Вывести(ЗаголовокТаблицы);

				ВыборкаПоСтрокам = ВыборкаПоСкладам.Выбрать();
				КоличествоСтрок = ВыборкаПоСтрокам.Количество();
				Пока ВыборкаПоСтрокам.Следующий() Цикл

					Область = Макет.ПолучитьОбласть("Строка");
					Область.Параметры.Заполнить(ВыборкаПоСтрокам);

					НомерСтроки = НомерСтроки + 1;

					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(Область);

					Если НомерСтроки = КоличествоСтрок Тогда
						МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
					КонецЕсли;

					Если ТоварКод = "Артикул" Тогда
						Область.Параметры.НоменклатурныйНомер = ВыборкаПоСтрокам.НоменклатурныйНомерАртикул;
					Иначе
						Область.Параметры.НоменклатурныйНомер = ВыборкаПоСтрокам.НоменклатурныйНомерКод;
					КонецЕсли;

					ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
					ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();

					Область.Параметры.МатериалНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СокрЛП(ВыборкаПоСтрокам.НоменклатураНаименование), СокрЛП(ВыборкаПоСтрокам.Характеристика), , ,
						ДопПараметрыПредставлениеНоменклатуры);

					Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						СтруктураПараметров = Новый Структура;
						СтруктураПараметров.Вставить("НомерСтраницы", "Страница " + НомерСтраницы);
						ЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
						ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
					КонецЕсли;

					ТабличныйДокумент.Вывести(Область);

				КонецЦикла;
				
				// Вывод подвала.
				ОбластьПодвал.Параметры.ДолжностьОтправителя = ВыборкаПоСкладам.ДолжностьКладовщикаОтправителя;
				ОбластьПодвал.Параметры.ФИООтправителя = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(
					ВыборкаПоСкладам.КладовщикОтправитель, ВыборкаДокументы.ДатаДокумента);
				ТабличныйДокумент.Вывести(ОбластьПодвал);

			КонецЕсли;

		КонецЦикла;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати,
			ВыборкаДокументы.Ссылка);

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
