#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ПараметрыОперации")
		ИЛИ НЕ Параметры.ПараметрыОперации.Свойство("ДокументСсылка") Тогда
		
		Возврат;
	КонецЕсли;
	
	Если Параметры.ПараметрыОперации.Свойство("Контрагент") Тогда
		ЮрФизЛицоКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ПараметрыОперации.Контрагент, "ЮрФизЛицо");
		Если ЮрФизЛицоКонтрагента = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент") Тогда
			Параметры.ПараметрыОперации.Контрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
		КонецЕсли; 
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ВыбраннаяФорма = "Форма";
	
	Параметры.Вставить(
		"ПодключенноеОборудованиеПечатиЧеков",
		ФормированиеФискальныхЧековСервер.ПодключенноеОборудованиеПечатиЧеков(Параметры.ПараметрыОперации));
	
	Если НЕ ВалютаДокументаВалютаРеглУчета(Параметры.ПараметрыОперации) Тогда
		ВыбраннаяФорма = "ОшибкаИспользуемойВалюты";
	ИначеЕсли НЕ ПодключенноеОборудованиеНастроено(Параметры.ПодключенноеОборудованиеПечатиЧеков) Тогда
		ВыбраннаяФорма = "ОшибкаПодключенияККТ";
	Иначе
		ФормированиеФискальныхЧековСервер.ОбработкаПолученияФормыПредпросмотрЧека(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВалютаДокументаВалютаРеглУчета(ОсновыеПараметрыОперации)
	
	ВалютаДокументаВалютаРеглУчета = Истина;
	
	#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
		ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ОсновыеПараметрыОперации.ДокументСсылка.Организация);

		Если ТипЗнч(ОсновыеПараметрыОперации.ДокументСсылка) = Тип("ДокументСсылка.ВзаимозачетЗадолженности") Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
						   |	""Дт"" КАК Сторона,
			               |	ДебиторскаяЗадолженность.ОбъектРасчетов КАК ОбъектРасчетов,
			               |	ДебиторскаяЗадолженность.ОбъектРасчетов.Валюта КАК Валюта
			               |ИЗ
			               |	Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
			               |ГДЕ
			               |	ДебиторскаяЗадолженность.Ссылка = &ДокументСсылка
			               |	И НЕ ДебиторскаяЗадолженность.ОбъектРасчетов.ТипОбъектаРасчетов В (ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Заказ), ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Договор))
			               |	И ДебиторскаяЗадолженность.ОбъектРасчетов.Валюта <> &ВалютаРегламентированногоУчета
			               |
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
						   |	""Кт"" КАК Сторона,
			               |	КредиторскаяЗадолженность.ОбъектРасчетов,
			               |	КредиторскаяЗадолженность.ОбъектРасчетов.Валюта
			               |ИЗ
			               |	Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК КредиторскаяЗадолженность
			               |ГДЕ
			               |	КредиторскаяЗадолженность.Ссылка = &ДокументСсылка
			               |	И НЕ КредиторскаяЗадолженность.ОбъектРасчетов.ТипОбъектаРасчетов В (ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Заказ), ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Договор))
			               |	И КредиторскаяЗадолженность.ОбъектРасчетов.Валюта <> &ВалютаРегламентированногоУчета";
			
			Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегл);
			Запрос.УстановитьПараметр("ДокументСсылка", ОсновыеПараметрыОперации.ДокументСсылка);
			Результат = Запрос.Выполнить();
			Если Не Результат.Пустой() Тогда
				ВалютаДокументаВалютаРеглУчета = Ложь;
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(ОсновыеПараметрыОперации.Валюта)
			И ЗначениеЗаполнено(ОсновыеПараметрыОперации.ВалютаВзаиморасчетов) Тогда

			Если ОсновыеПараметрыОперации.Валюта <> ВалютаРегл
				ИЛИ ОсновыеПараметрыОперации.ВалютаВзаиморасчетов <> ВалютаРегл Тогда

				ВалютаДокументаВалютаРеглУчета = Ложь;
			КонецЕсли;

		ИначеЕсли ЗначениеЗаполнено(ОсновыеПараметрыОперации.Валюта) Тогда

			Если ОсновыеПараметрыОперации.Валюта <> ВалютаРегл Тогда
				ВалютаДокументаВалютаРеглУчета = Ложь;
			КонецЕсли;

		Иначе

			ВалютаДокументаВалютаРеглУчета = Ложь;

		КонецЕсли;
	
	#КонецЕсли
	
	Возврат ВалютаДокументаВалютаРеглУчета;
	
КонецФункции

Функция ПодключенноеОборудованиеНастроено(ПодключенноеОборудованиеПечатиЧеков)
	
	Возврат ПодключенноеОборудованиеПечатиЧеков.Количество() > 0;
	
КонецФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СогласиеНаОбработкуПерсональныхДанных") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СогласиеНаОбработкуПерсональныхДанных",
			НСтр("ru = 'Согласие на обработку персональных данных'"),
			СформироватьПечатнуюФормуСогласиеНаОбработкуПерсональныхДанных(МассивОбъектов, ПараметрыПечати, ПараметрыПечати),
			,
			"Обработка.ПредпросмотрЧека.СогласиеНаОбработкуПерсональныхДанных");
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуСогласиеНаОбработкуПерсональныхДанных(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПредпросмотрЧека.ПФ_MXL_СогласиеНаОбработкуПерсональныхДанных");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПредпросмотрЧека_СогласиеНаОбработкуПерсональныхДанных";
	
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабличныйДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ОписаниеСогласия");
	ТабличныйДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ПостояннаяЧастьПерсональныхДанных");
	ТабличныйДокумент.Вывести(Область);
	
	Если ПараметрыПечати.ТипПерсональныхДанных = "ИНН" Тогда
		Область = Макет.ПолучитьОбласть("ПерсональныеДанныеИНН");
		ТабличныйДокумент.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("ПерсональныеДанныеПаспортныеДанные");
		ТабличныйДокумент.Вывести(Область);
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Подвал");
	ТабличныйДокумент.Вывести(Область);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли