
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт

КонецПроцедуры

#КонецОбласти

// Определяет состав документов и хозяйственных операций, доступных для отображения в рабочем месте.
//
// Параметры:
//  ОтборХозяйственныеОперации		 - СписокЗначений - список значений типа ПеречислениеСсылка.ХозяйственныеОперации
//  ОтборТипыДокументов				 - СписокЗначений - список значений типа СправочникСсылка.ИдентификаторыОбъектовМетаданных
//  КлючНазначенияИспользования		 - Строка - ключ рабочего места для которого вызывается функция.
// 
// Возвращаемое значение:
//   См. ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы 
//
Функция ИнициализироватьХозяйственныеОперацииИДокументы(ОтборХозяйственныеОперации, ОтборТипыДокументов, КлючНазначенияИспользования) Экспорт
	
	ХозяйственныеОперацииИДокументы = ХозяйственныеОперацииИДокументы();
	
	Если КлючНазначенияИспользования = "ДокументыИнтеркампани" Тогда
		КлючНастроек = "";
	Иначе
		КлючНастроек = КлючНазначенияИспользования;
	КонецЕсли;
	
	ТаблицаЗначенийДоступно = ОбщегоНазначенияУТ.ДоступныеХозяйственныеОперацииИДокументы(ХозяйственныеОперацииИДокументы,
		ОтборХозяйственныеОперации, ОтборТипыДокументов, КлючНастроек);
	
	Возврат ТаблицаЗначенийДоступно;
	
КонецФункции

#Область ФормированиеГиперссылкиВЖурналеДокументовЗакупки

// Возвращает текст запроса, который используется для получения данных об оформляемых отчетах
// по комиссиям между организациями.
//
// Параметры:
//	ПараметрыЗапроса - Структура - параметры запроса.
//
// Возвращаемое значение:
//	Строка - текст запроса, который используется для получения данных об оформляемых отчетах
//		по комиссиям между организациями.
//
Функция ТекстЗапросаОформляемыеОтчетыПоКомиссии(ПараметрыЗапроса = Неопределено) Экспорт
	
	ЭтоРасчетГиперссылки = ЗначениеЗаполнено(ПараметрыЗапроса) И ПараметрыЗапроса.Свойство("ЭтоРасчетГиперссылки")
		И ПараметрыЗапроса.ЭтоРасчетГиперссылки;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов.ВладелецТовара КАК Комитент,
	|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов.Организация КАК Комиссионер,
	|	ТоварыКОформлениюОтчетовКомитентуОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлениюОтчетовКомитентуОбороты.НомерГТД КАК НомерГТД,
	|	СУММА(ТоварыКОформлениюОтчетовКомитентуОбороты.КоличествоОборот) КАК КоличествоОборот,
	|	СУММА(ТоварыКОформлениюОтчетовКомитентуОбороты.КоличествоСписаноОборот) КАК КоличествоСписаноОборот
	|ПОМЕСТИТЬ ВТКОформлениюОбороты
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Обороты(
	|			&НачГраница,
	|			&КонГраница,
	|			,
	|			ВидЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|				И (ВидЗапасов.ВладелецТовара = &Комитент
	|					ИЛИ НЕ &УстановленОтборПоКомитенту)
	|				И (ВидЗапасов.Организация = &Комиссионер
	|					ИЛИ НЕ &УстановленОтборПоКомиссионеру)) КАК ТоварыКОформлениюОтчетовКомитентуОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлениюОтчетовКомитентуОбороты.НомерГТД,
	|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов.ВладелецТовара,
	|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов.Организация,
	|	ТоварыКОформлениюОтчетовКомитентуОбороты.АналитикаУчетаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Комитент,
	|	Комиссионер,
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	УслугиКОформлениюОтчетов.АналитикаУчетаНоменклатуры.МестоХранения	КАК Комитент,
	|	УслугиКОформлениюОтчетов.Организация								КАК Комиссионер,
	|	УслугиКОформлениюОтчетов.АналитикаУчетаНоменклатуры					КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТУслугиКОформлениюОбороты
	|ИЗ
	|	РегистрНакопления.УслугиКОформлениюОтчетовПринципалу.Обороты(
	|			&НачГраница,
	|			&КонГраница,
	|			,
	|			АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)
	|			И (АналитикаУчетаНоменклатуры.МестоХранения = &Комитент
	|				ИЛИ НЕ &УстановленОтборПоКомитенту)
	|			И (Организация = &Комиссионер
	|				ИЛИ НЕ &УстановленОтборПоКомиссионеру)) КАК УслугиКОформлениюОтчетов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Комитент,
	|	Комиссионер,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыПереданныеНаКомиссиюОстатки.Организация КАК Комитент,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.МестоХранения КАК Комиссионер,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТоварыПереданныеНаКомиссиюОстатки.НомерГТД КАК НомерГТД,
	|	СУММА(ТоварыПереданныеНаКомиссиюОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТПереданныеОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(
	|			&КонГраница,
	|			АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)
	|				И (Организация = &Комитент
	|					ИЛИ НЕ &УстановленОтборПоКомитенту)
	|				И (АналитикаУчетаНоменклатуры.Организация = &Комиссионер
	|					ИЛИ НЕ &УстановленОтборПоКомиссионеру)) КАК ТоварыПереданныеНаКомиссиюОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыПереданныеНаКомиссиюОстатки.Организация,
	|	ТоварыПереданныеНаКомиссиюОстатки.НомерГТД,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.МестоХранения,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Серия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереданныеОстатки.Комитент КАК Комитент,
	|	ПереданныеОстатки.Комиссионер КАК Комиссионер,
	|	КлючиАналитикиУчетаНоменклатуры.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ПереданныеОстатки.НомерГТД КАК НомерГТД,
	|	СУММА(ПереданныеОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТПереданныеОстаткиПоАналитикамКОформлению
	|ИЗ
	|	ВТПереданныеОстатки КАК ПереданныеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ПереданныеОстатки.Номенклатура = КлючиАналитикиУчетаНоменклатуры.Номенклатура
	|			И ПереданныеОстатки.Характеристика = КлючиАналитикиУчетаНоменклатуры.Характеристика
	|			И ПереданныеОстатки.Серия = КлючиАналитикиУчетаНоменклатуры.Серия
	|			И ПереданныеОстатки.Назначение = КлючиАналитикиУчетаНоменклатуры.Назначение
	|			И ПереданныеОстатки.Комитент = КлючиАналитикиУчетаНоменклатуры.МестоХранения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереданныеОстатки.НомерГТД,
	|	ПереданныеОстатки.Комитент,
	|	ПереданныеОстатки.Комиссионер,
	|	КлючиАналитикиУчетаНоменклатуры.КлючАналитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Комитент,
	|	Комиссионер,
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	УслугиКОформлениюОтчетов.АналитикаУчетаНоменклатуры.МестоХранения	КАК Комитент,
	|	УслугиКОформлениюОтчетов.Организация								КАК Комиссионер,
	|	УслугиКОформлениюОтчетов.АналитикаУчетаНоменклатуры					КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТУслугиКОформлениюОстатки
	|ИЗ
	|	РегистрНакопления.УслугиКОформлениюОтчетовПринципалу.Остатки(
	|			&КонГраница,
	|			АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)
	|			И (АналитикаУчетаНоменклатуры.МестоХранения = &Комитент
	|				ИЛИ НЕ &УстановленОтборПоКомитенту)
	|			И (Организация = &Комиссионер
	|				ИЛИ НЕ &УстановленОтборПоКомиссионеру)) КАК УслугиКОформлениюОтчетов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Комитент,
	|	Комиссионер,
	|	АналитикаУчетаНоменклатуры";
	
	ТекстЗапросаВТОтборыКОформлению =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КОформлениюОбороты.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	КОформлениюОбороты.НомерГТД	КАК НомерГТД,
	|	ВидыЗапасов.Ссылка			КАК ВидЗапасов,
	|	ИСТИНА						КАК ЭтоТовар
	|ПОМЕСТИТЬ ВТОтборыКОформлению
	|ИЗ
	|	ВТКОформлениюОбороты КАК КОформлениюОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереданныеОстаткиПоАналитикамКОформлению КАК ПереданныеПоАналитикамКОформлению
	|		ПО КОформлениюОбороты.Комитент = ПереданныеПоАналитикамКОформлению.Комитент
	|			И КОформлениюОбороты.Комиссионер = ПереданныеПоАналитикамКОформлению.Комиссионер
	|			И КОформлениюОбороты.АналитикаУчетаНоменклатуры = ПереданныеПоАналитикамКОформлению.АналитикаУчетаНоменклатуры
	|			И КОформлениюОбороты.НомерГТД = ПереданныеПоАналитикамКОформлению.НомерГТД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО КОформлениюОбороты.Комитент = ВидыЗапасов.ВладелецТовара
	|			И КОформлениюОбороты.Комиссионер = ВидыЗапасов.Организация
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И (ЕСТЬNULL(ПереданныеПоАналитикамКОформлению.КоличествоОстаток, 0) > 0
	|				И КОформлениюОбороты.КоличествоОборот > 0
	|				И &ОтобратьПоПродаже
	|			ИЛИ ЕСТЬNULL(ПереданныеПоАналитикамКОформлению.КоличествоОстаток, 0) > 0
	|				И КОформлениюОбороты.КоличествоСписаноОборот > 0
	|				И &ОтобратьПоСписанию
	|			ИЛИ КОформлениюОбороты.КоличествоОборот < 0
	|				И &ОтобратьПоПродаже
	|			ИЛИ КОформлениюОбороты.КоличествоСписаноОборот < 0
	|				И &ОтобратьПоСписанию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	УслугиКОформлениюОбороты.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО	КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО	КАК ВидЗапасов,
	|	ЛОЖЬ			КАК ЭтоТовар
	|ИЗ
	|	ВТУслугиКОформлениюОбороты КАК УслугиКОформлениюОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУслугиКОформлениюОстатки КАК УслугиКОформлениюОстатк
	|		ПО УслугиКОформлениюОбороты.Комитент = УслугиКОформлениюОстатк.Комитент
	|			И УслугиКОформлениюОбороты.Комиссионер = УслугиКОформлениюОстатк.Комиссионер
	|			И УслугиКОформлениюОбороты.АналитикаУчетаНоменклатуры = УслугиКОформлениюОстатк.АналитикаУчетаНоменклатуры";
	
	Если ЭтоРасчетГиперссылки Тогда
		ТекстЗапросаВТОтборыКОформлению = СтрЗаменить(ТекстЗапросаВТОтборыКОформлению, "ПОМЕСТИТЬ ВТОтборыКОформлению", "");
	Иначе	
		ТекстЗапросаВТОтборыКОформлению = СтрЗаменить(ТекстЗапросаВТОтборыКОформлению, "ПЕРВЫЕ 1", "");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстЗапросаВТОтборыКОформлению;
	
	Если Не ЭтоРасчетГиперссылки Тогда 
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() +
		"ВЫБРАТЬ
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов КАК ВидЗапасов,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.Валюта КАК Валюта,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов.Организация КАК Комиссионер,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов.ВладелецТовара КАК Комитент,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов.Договор КАК Договор,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов.ВидЦены КАК ВидЦены,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.ВидЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.НомерГТД КАК НомерГТД,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.КоличествоОборот КАК КоличествоОборот,
		|	ТоварыКОформлениюОтчетовКомитентуОбороты.КоличествоСписаноОборот КАК КоличествоСписаноОборот
		|ПОМЕСТИТЬ ВТКОформлениюОборотыДетализация
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Обороты(
		|			&НачГраница,
		|			&КонГраница,
		|			,
		|			(АналитикаУчетаНоменклатуры, НомерГТД, ВидЗапасов) В
		|				(ВЫБРАТЬ
		|					ВТОтборыКОформлению.АналитикаУчетаНоменклатуры,
		|					ВТОтборыКОформлению.НомерГТД,
		|					ВТОтборыКОформлению.ВидЗапасов
		|				ИЗ
		|					ВТОтборыКОформлению
		|				ГДЕ
		|					ВТОтборыКОформлению.ЭтоТовар)) КАК ТоварыКОформлениюОтчетовКомитентуОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОформлениюОбороты.Валюта КАК Валюта,
		|	КОформлениюОбороты.Комиссионер КАК Комиссионер,
		|	КОформлениюОбороты.Комитент КАК Комитент,
		|	КОформлениюОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	КОформлениюОбороты.ВидЗапасов КАК ВидЗапасов,
		|	КОформлениюОбороты.Договор КАК Договор,
		|	КОформлениюОбороты.ВидЦены КАК ВидЦены,
		|	КОформлениюОбороты.НомерГТД КАК НомерГТД,
		|	КОформлениюОбороты.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями) КАК ХозяйственнаяОперация,
		|	&ТекстОтчетОПродажах КАК ТипДокумента,
		|	КОформлениюОбороты.КоличествоОборот КАК КоличествоОстаток,
		|	0 КАК КоличествоСписано
		|ПОМЕСТИТЬ ТоварыКОформлению
		|ИЗ
		|	ВТКОформлениюОборотыДетализация КАК КОформлениюОбороты
		|ГДЕ
		|	КОформлениюОбороты.КоличествоОборот <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОформлениюОбороты.Валюта,
		|	КОформлениюОбороты.Комиссионер,
		|	КОформлениюОбороты.Комитент,
		|	КОформлениюОбороты.АналитикаУчетаНоменклатуры,
		|	КОформлениюОбороты.ВидЗапасов,
		|	КОформлениюОбороты.Договор,
		|	КОформлениюОбороты.ВидЦены,
		|	КОформлениюОбороты.НомерГТД,
		|	КОформлениюОбороты.НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании),
		|	&ТекстОтчетОСписании,
		|	0,
		|	КОформлениюОбороты.КоличествоСписаноОборот
		|ИЗ
		|	ВТКОформлениюОборотыДетализация КАК КОформлениюОбороты
		|ГДЕ
		|	КОформлениюОбороты.КоличествоСписаноОборот <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УслугиКОформлениюОстатки.Валюта,
		|	УслугиКОформлениюОстатки.Организация,
		|	УслугиКОформлениюОстатки.АналитикаУчетаНоменклатуры.МестоХранения,
		|	УслугиКОформлениюОстатки.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями),
		|	&ТекстОтчетОПродажах,
		|	УслугиКОформлениюОстатки.КоличествоОстаток,
		|	0
		|ИЗ
		|	РегистрНакопления.УслугиКОформлениюОтчетовПринципалу.Остатки(
		|			&КонГраница,
		|			АналитикаУчетаНоменклатуры В
		|				(ВЫБРАТЬ
		|					ВТОтборыКОформлению.АналитикаУчетаНоменклатуры
		|				ИЗ
		|					ВТОтборыКОформлению
		|				ГДЕ
		|					НЕ ВТОтборыКОформлению.ЭтоТовар)) КАК УслугиКОформлениюОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТоварыКОформлению.Валюта КАК Валюта,
		|	ТоварыКОформлению.Комиссионер КАК Комиссионер,
		|	ТоварыКОформлению.Комитент КАК Комитент,
		|	ТоварыКОформлению.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ТоварыКОформлению.ТипДокумента КАК ТипДокумента,
		|	ТоварыКОформлению.Договор КАК Договор,
		|	ТоварыКОформлению.ВидЦены КАК ВидЦены,
		|	ВЫБОР
		|		КОГДА ТоварыКОформлению.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ТоварыКОформлению.НалогообложениеНДС
		|		ИНАЧЕ ЕСТЬNULL(УчетныеПолитики.НалогообложениеНДСПоУмолчанию, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
		|	КОНЕЦ КАК НалогообложениеНДС
		|ИЗ
		|	ТоварыКОформлению КАК ТоварыКОформлению
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиОрганизаций КАК УчетныеПолитики
		|		ПО ТоварыКОформлению.Комиссионер = УчетныеПолитики.Организация";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст гиперссылки перехода из журнала документов в рабочее место оформления отчетов по комиссии.
//
// Параметры:
//	Параметры - Структура - параметры формирования текста гиперссылки.
//
// Возвращаемое значение:
//	ФорматированнаяСтрока, Неопределено - текст гиперссылки перехода в рабочее место оформления отчетов по комиссии.
//
Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	ХозяйственныеОперацииИДокументы = Параметры.ХозяйственныеОперацииИДокументы;
	
	Отбор = Новый Структура("Отбор, КлючНазначенияИспользования", Истина, "ОтчетПоКомиссииМеждуОрганизациями");
	ХозяйственныеОперацииОтчетов = ХозяйственныеОперацииИДокументы.НайтиСтроки(Отбор);
	
	Если ХозяйственныеОперацииОтчетов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Отбор = Новый Структура("Отбор, ПолноеИмяДокумента", Истина, "Документ.ОтчетПоКомиссииМеждуОрганизациями");
	ОтобратьПоПродаже = ХозяйственныеОперацииИДокументы.НайтиСтроки(Отбор).Количество() > 0;
	
	Отбор = Новый Структура("Отбор, ПолноеИмяДокумента", Истина, "Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	ОтобратьПоСписанию = ХозяйственныеОперацииИДокументы.НайтиСтроки(Отбор).Количество() > 0;
	
	ТекстЗапроса = ТекстЗапросаОформляемыеОтчетыПоКомиссии(Параметры);
	
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	ТекстГиперссылки    = НСтр("ru = 'Отчеты по комиссии'");
	ТекстОтчетОПродажах = НСтр("ru='Отчет о продажах'");
	ТекстОтчетОСписании = НСтр("ru='Отчет о списании'");
	
	Запрос.УстановитьПараметр("Комитент", Параметры.Организация);
	Запрос.УстановитьПараметр("УстановленОтборПоКомитенту", ЗначениеЗаполнено(Параметры.Организация));
	Запрос.УстановитьПараметр("Комиссионер", Неопределено);
	Запрос.УстановитьПараметр("УстановленОтборПоКомиссионеру", Ложь);
	Запрос.УстановитьПараметр("НачГраница", Неопределено);
	Запрос.УстановитьПараметр("КонГраница", Неопределено);
	Запрос.УстановитьПараметр("ТекстОтчетОПродажах", ТекстОтчетОПродажах);
	Запрос.УстановитьПараметр("ТекстОтчетОСписании", ТекстОтчетОСписании);
	Запрос.УстановитьПараметр("ОтобратьПоПродаже", ОтобратьПоПродаже);
	Запрос.УстановитьПараметр("ОтобратьПоСписанию", ОтобратьПоСписанию);
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки, , , ,
			"Обработка.ЖурналДокументовИнтеркампани.Форма.РабочееМестоОтчетыПоКомиссии");
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки, , ЦветаСтиля.НезаполненноеПолеТаблицы, ,
			"Обработка.ЖурналДокументовИнтеркампани.Форма.РабочееМестоОтчетыПоКомиссии");
	КонецЕсли;
	
КонецФункции

Функция СформироватьГиперссылкуСмТакжеВРаботе(Параметры) Экспорт
	ХозяйственныеОперацииИДокументы = ХозяйственныеОперацииИДокументы();
	НайденныеСтроки = ХозяйственныеОперацииИДокументы.НайтиСтроки(
		Новый Структура("КлючНазначенияИспользования", Параметры.КлючНазначенияИспользования));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//Все строки с одинаковым ключом должны иметь одинаковый заголовок рабочего места 
	СтрокаПоКлючуНазначенияИспользования = НайденныеСтроки[0];
	
	Возврат Новый ФорматированнаяСтрока(СтрокаПоКлючуНазначенияИспользования.ЗаголовокРабочегоМеста, , , ,
				"Обработка.ЖурналДокументовИнтеркампани.Форма.ФормаСписка");
КонецФункции

#КонецОбласти

Функция ХозяйственныеОперацииИДокументы()
	
	Перем Строка, СтрокаВозвратТоваровМеждуОрганизациями, СтрокаОтчетПоКомиссииМеждуОрганизациями, СтрокаОтчетПоКомиссииМеждуОрганизациямиОСписании, СтрокаПередачаТоваровМеждуОрганизациями, ХозяйственныеОперацииИДокументы;
	
	ХозяйственныеОперацииИДокументы = ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы();
	
	// ВозвратТоваровМеждуОрганизациями
	
	СтрокаВозвратТоваровМеждуОрганизациями = ХозяйственныеОперацииИДокументы.Добавить();
	
	Строка = СтрокаВозвратТоваровМеждуОрганизациями;
	Строка.КлючНазначенияИспользования = "ВозвратТоваровМеждуОрганизациями";
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями;
	Строка.ДобавитьКнопкуСоздать       = Истина;
	Строка.ТипДокумента                = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями");
	Строка.ПолноеИмяДокумента          = "Документ.ВозвратТоваровМеждуОрганизациями";
	Строка.ЗаголовокРабочегоМеста      = НСтр("ru = 'Документы между организациями (возвраты)'");
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка, СтрокаВозвратТоваровМеждуОрганизациями);
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями;
	
	// ОтчетПоКомиссииМеждуОрганизациями
	
	СтрокаОтчетПоКомиссииМеждуОрганизациями = ХозяйственныеОперацииИДокументы.Добавить();
	
	Строка = СтрокаОтчетПоКомиссииМеждуОрганизациями;
	Строка.КлючНазначенияИспользования = "ОтчетПоКомиссииМеждуОрганизациями";
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями;
	Строка.ДобавитьКнопкуСоздать       = Истина;
	Строка.ТипДокумента                = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями");
	Строка.ПолноеИмяДокумента          = "Документ.ОтчетПоКомиссииМеждуОрганизациями";
	Строка.ЗаголовокРабочегоМеста      = НСтр("ru = 'Документы между организациями (отчеты по комиссии)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Обработка.ЖурналДокументовИнтеркампани";
	
	// ОтчетПоКомиссииМеждуОрганизациямиОСписании
	
	СтрокаОтчетПоКомиссииМеждуОрганизациямиОСписании = ХозяйственныеОперацииИДокументы.Добавить();
	
	Строка = СтрокаОтчетПоКомиссииМеждуОрганизациямиОСписании;
	Строка.КлючНазначенияИспользования = "ОтчетПоКомиссииМеждуОрганизациями";
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании;
	Строка.ДобавитьКнопкуСоздать       = Истина;
	Строка.ТипДокумента                = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	Строка.ПолноеИмяДокумента          = "Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании";
	Строка.ЗаголовокРабочегоМеста      = НСтр("ru = 'Документы между организациями (отчеты по комиссии о списании)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Обработка.ЖурналДокументовИнтеркампани";
	
	// ПередачаТоваровМеждуОрганизациями
	
	СтрокаПередачаТоваровМеждуОрганизациями = ХозяйственныеОперацииИДокументы.Добавить();
	
	Строка = СтрокаПередачаТоваровМеждуОрганизациями;
	Строка.КлючНазначенияИспользования = "ПередачаТоваровМеждуОрганизациями";
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	Строка.ДобавитьКнопкуСоздать       = Истина;
	Строка.ТипДокумента                = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями");
	Строка.ПолноеИмяДокумента          = "Документ.ПередачаТоваровМеждуОрганизациями";
	Строка.ЗаголовокРабочегоМеста      = НСтр("ru = 'Документы между организациями (передачи)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.ПередачаТоваровМеждуОрганизациями";
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка, СтрокаПередачаТоваровМеждуОрганизациями);
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию;
	
	
	Возврат ХозяйственныеОперацииИДокументы;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьГиперссылкуКОформлениюФоновоеЗадание(Параметры, АдресХранилища) Экспорт
	
	КОформлению = ОбщегоНазначенияУТ.СформироватьГиперссылкуКОформлению(Параметры[0], Параметры[1]);
	ПоместитьВоВременноеХранилище(КОформлению, АдресХранилища);
	
КонецПроцедуры

Процедура ПриОпределенииКомандПодключенныхКОбъекту(Команды) Экспорт
	
КонецПроцедуры

Функция РезультатФоновыхЗаданий()
	                                       
	Результат = Новый Структура();
	Результат.Вставить("ЛишниеРезервы");
	Результат.Вставить("КОформлениюЗаПериод");
	Результат.Вставить("ЕстьТоварыКОформлениюПередачПередВыкупом");
	
	Возврат Результат;
	
КонецФункции

Функция ЕстьТоварыКОформлениюПередачПередВыкупом(Параметры)
	
	Если Параметры.Свойство("ОформлятьВыкупы")
		И Параметры.ОформлятьВыкупы Тогда
		
		Запрос = Новый Запрос;
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизаций.Организация КАК Организация,
		|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
		|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
		|	СУММА(РезервыТоваровОрганизаций.Количество) КАК Количество
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
		|ГДЕ
		|	РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И РезервыТоваровОрганизаций.Организация <> РезервыТоваровОрганизаций.КорОрганизация
		|	И РезервыТоваровОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
		|	И &МестоХранения
		|	И &ВладелецТовара
		|	И &ОрганизацияРезерва
		|
		|СГРУППИРОВАТЬ ПО
		|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизаций.НомерГТД,
		|	РезервыТоваровОрганизаций.Организация,
		|	РезервыТоваровОрганизаций.ВидЗапасов
		|
		|ИМЕЮЩИЕ
		|	СУММА(РезервыТоваровОрганизаций.Количество) > 0";
		
		Если ЗначениеЗаполнено(Параметры.Получатель) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОрганизацияРезерва", "РезервыТоваровОрганизаций.Организация = &Организация");
			
			Запрос.УстановитьПараметр("Организация", Параметры.Получатель);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОрганизацияРезерва", "ИСТИНА");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Отправитель) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВладелецТовара", "РезервыТоваровОрганизаций.ВидЗапасов.ВладелецТовара = &ВладелецТовара");
			
			Запрос.УстановитьПараметр("ВладелецТовара", Параметры.Отправитель);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВладелецТовара", "ИСТИНА");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.МестоХранения) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&МестоХранения", "РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения = &МестоХранения");
			
			Запрос.УстановитьПараметр("МестоХранения", Параметры.МестоХранения);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&МестоХранения", "ИСТИНА");
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		
		ЕстьТоварыКОформлениюПередачПередВыкупом = Не Запрос.Выполнить().Пустой();
		
	Иначе
		ЕстьТоварыКОформлениюПередачПередВыкупом = Ложь;
	КонецЕсли;

	Возврат ЕстьТоварыКОформлениюПередачПередВыкупом;
	
КонецФункции

// Распределить резервы по периодам.
// 
// Параметры:
//  Параметры - Структура - параметров
//  АдресВременногоХранилища - УникальныйИдентификатор, Строка - Адрес временного хранилища
Процедура РаспределитьРезервыПоПериодам(Параметры, АдресВременногоХранилища) Экспорт

	Результат = РегистрыНакопления.РезервыТоваровОрганизаций.РаспределитьРезервыПоПериодам();
		
	Если Результат <> "Ошибка" Тогда
		ЗаполнитьКОформлениюЗаПериод(Параметры, АдресВременногоХранилища);
	Иначе
		Результат = РезультатФоновыхЗаданий();
		Результат.ЛишниеРезервы                            = "Ошибка";
		Результат.КОформлениюЗаПериод                      = Неопределено;
		Результат.ЕстьТоварыКОформлениюПередачПередВыкупом = Ложь;
		ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);
	КонецЕсли;	
	
КонецПроцедуры

// Параметры:
// 	Параметры - Структура - где:
// * МестоХранения - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.СтруктураПредприятия, СправочникСсылка.Склады - 
// * Получатель - СправочникСсылка.Организации
// * Отправитель - СправочникСсылка.Организации, СправочникСсылка.Партнеры - 
// * Период - СтандартныйПериод
// * ОформлятьВыкупы - Булево
// * ОформлятьПередачи - Булево
//  АдресВременногоХранилища - УникальныйИдентификатор, Строка - Адрес временного хранилища
Процедура ЗаполнитьКОформлениюЗаПериод(Параметры, АдресВременногоХранилища) Экспорт
	
	Результат = РезультатФоновыхЗаданий();
	
	Если Параметры.Свойство("ОформлятьПередачи") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ОформлятьПередачи", Параметры.ОформлятьПередачи); 
		Запрос.УстановитьПараметр("ОформлятьВыкупы", Параметры.ОформлятьВыкупы); 
		
		НачалоПериода = НачалоМесяца(Параметры.Период.ДатаНачала);
		КонецПериода  = ?(ЗначениеЗаполнено(Параметры.Период.ДатаОкончания), КонецМесяца(Параметры.Период.ДатаОкончания), Параметры.Период.ДатаОкончания);
		
		Запрос.УстановитьПараметр("НачалоПериода",                 НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода",                  КонецПериода);
		Запрос.УстановитьПараметр("Отправитель",                   Параметры.Отправитель);
		Запрос.УстановитьПараметр("Получатель",                    Параметры.Получатель);
		Запрос.УстановитьПараметр("МестоХранения",                 Параметры.МестоХранения);
		
		Запрос.Текст = ЗапасыСервер.ТекстЗапросаОформленияПоРезервамТоваровОрганизаций(Запрос, "ВыборкаПоШапке");
		
		КОформлениюЗаПериод = Запрос.Выполнить().Выгрузить();
		Результат.КОформлениюЗаПериод                      = КОформлениюЗаПериод;
	КонецЕсли;
	
	Результат.ЛишниеРезервы                            = РегистрыНакопления.РезервыТоваровОрганизаций.ЕстьЛишниеРезервы(Истина);
	Результат.ЕстьТоварыКОформлениюПередачПередВыкупом = ЕстьТоварыКОформлениюПередачПередВыкупом(Параметры);
	
	ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища); 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
