#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПравоОформленияВозврата = ПравоДоступа("Добавление", Метаданные.Документы.ВозвратТоваровОтКлиента);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Элементы,
	"ТаблицаКОформлениюОформитьВозврат",
	"Доступность",
	ПравоОформленияВозврата);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Элементы,
	"ТаблицаКОформлениюОформитьВсеВозвраты",
	"Доступность",
	ПравоОформленияВозврата);
	
	Склад = Параметры.Склад;
	ЗаполнитьТаблицуКОформлению();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОформитьВозврат(Команда)
	
	Если Элементы.ТаблицаКОформлению.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаИД Из Элементы.ТаблицаКОформлению.ВыделенныеСтроки Цикл
		
		Организация      = Элементы.ТаблицаКОформлению.ДанныеСтроки(СтрокаИД).Организация;
		Комиссионер      = Элементы.ТаблицаКОформлению.ДанныеСтроки(СтрокаИД).Комиссионер;
		Соглашение       = Элементы.ТаблицаКОформлению.ДанныеСтроки(СтрокаИД).Соглашение;
		
		Попытка
			СоздатьДокументВозвратТоваров(Организация, Комиссионер, Соглашение);
		Исключение	
			ТекстСообщения = СтрШаблон(НСтр("ru='Не удалось создать документ возврата по причине: %1.'"), КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	ЗаполнитьТаблицуКОформлению();
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьВсеВозвраты(Команда)
	
	Для Каждого Строка Из ТаблицаКОформлению Цикл
		
		СоздатьДокументВозвратТоваров(Строка.Организация, Строка.Комиссионер, Строка.Соглашение);
		
	КонецЦикла;
	
	ЗаполнитьТаблицуКОформлению();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуКОформлению()
	
	Запрос = Новый Запрос;
	Запрос.Текст = Обработки.ПанельАдминистрированияУчетПрослеживаемыхТоваров.СформироватьТекстЗапросаТаблицаВозвратыТоваровОтКомиссионеров();
	
	Запрос.УстановитьПараметр("ДатаПрослеживаемости", Константы.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров.Получить());
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаКОформлению.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументВозвратТоваров(Организация, Комиссионер, Соглашение)
	
	ДокументВозврат = Документы.ВозвратТоваровОтКлиента.СоздатьДокумент();
	ДокументВозврат.Дата                  = ТекущаяДатаСеанса();
	ДокументВозврат.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера;
	ДокументВозврат.Организация           = Организация;
	ДокументВозврат.Партнер               = Комиссионер;
	ДокументВозврат.Соглашение            = Соглашение;
	ДокументВозврат.Склад                 = Склад;
	ДокументВозврат.ВариантПриемкиТоваров = Константы.ВариантПриемкиТоваров.Получить();
	
	ДокументВозврат.ЗаполнитьУсловияПродажПоСоглашению();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
		|	ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
		|	ТоварыПереданныеНаКомиссиюОстатки.КоличествоОстаток КАК Количество,
		|	ТоварыПереданныеНаКомиссиюОстатки.НомерГТД КАК НомерГТД,
		|	ТоварыПереданныеНаКомиссиюОстатки.КоличествоОстаток КАК КоличествоУпаковок,
		|	ТоварыПереданныеНаКомиссиюОстатки.КоличествоОстаток КАК КоличествоПоРНПТ,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(
		|			,
		|			Соглашение = &Соглашение
		|				И Организация = &Организация
		|				И АналитикаУчетаНоменклатуры.МестоХранения = &МестоХранения) КАК ТоварыПереданныеНаКомиссиюОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		|			И ТоварыПереданныеНаКомиссиюОстатки.Соглашение.ВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦены
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних(,
		|			Страна = &СтранаРегистрации ИЛИ Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтавкиНДСНоменклатуры
		|		ПО ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС.СрезПоследних(, Страна = &СтранаРегистрации) КАК ОсновныеСтавкиНДС
		|		ПО Истина
		|ГДЕ
		|	ТоварыПереданныеНаКомиссиюОстатки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И НЕ ЕСТЬNULL(ТоварыПереданныеНаКомиссиюОстатки.НомерГТД.ТипНомераГТД, ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.ПустаяСсылка)) В
		|			(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
		|	И ЕСТЬNULL(ТоварыПереданныеНаКомиссиюОстатки.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
		|	И ЕСТЬNULL(ТоварыПереданныеНаКомиссиюОстатки.Соглашение.КомиссионерВедетУчетПоРНПТ, ЛОЖЬ)
		|	И ТоварыПереданныеНаКомиссиюОстатки.КоличествоОстаток > 0";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("МестоХранения", Комиссионер);
	Запрос.УстановитьПараметр("Соглашение", Соглашение);
	Запрос.УстановитьПараметр("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(Организация));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаТовары =ДокументВозврат.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовары, ВыборкаДетальныеЗаписи);
		
		// пересчет цен и сумм в зависимости от включения НДС в цену
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ДокументВозврат);
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
		
		Если ДокументВозврат.ЦенаВключаетНДС Тогда
			СтруктураДействий.Вставить("ПересчитатьСумму");
			СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
		КонецЕсли;
		
		Для Каждого Строка Из ДокументВозврат.Товары Цикл
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
		КонецЦикла;
		
		// сумма документа
		ДокументВозврат.СуммаДокумента = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(ДокументВозврат.Товары, ДокументВозврат.ЦенаВключаетНДС);
		
	КонецЦикла;
	
	ПараметрыЗаполнения = Документы.ВозвратТоваровОтКлиента.ПараметрыЗаполненияНалогообложенияНДСПродажи(ДокументВозврат);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи(Неопределено, ПараметрыЗаполнения);
	
	ПродажиСервер.ЗаполнитьРеализацииИЦены(ДокументВозврат, "Товары");
	
	// Разделение документов по подразделениям
	
	МассивПодразделений = ПодразделенияВДокументахОснованиях(ДокументВозврат);
	Для Каждого ПодразделениеДокумента Из МассивПодразделений Цикл
		
		НовыйВозврат = ДокументВозврат.Скопировать();
		ЗаполнитьЗначенияСвойств(НовыйВозврат, ДокументВозврат);
		
		Сч = 0;
		Пока Сч < НовыйВозврат.Товары.Количество() Цикл
			ПодразделениеВТабЧасти = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НовыйВозврат.Товары[Сч].ДокументРеализации, "Подразделение");
			ЦенаВключаетНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НовыйВозврат.Товары[Сч].ДокументРеализации, "ЦенаВключаетНДС");
			НовыйВозврат.ЦенаВключаетНДС = ЦенаВключаетНДС;
			Если ПодразделениеДокумента = ПодразделениеВТабЧасти Тогда
				Сч = Сч + 1;
			Иначе
				НовыйВозврат.Товары.Удалить(Сч);
			КонецЕсли;
			
		КонецЦикла;
		
		// сумма документа
		НовыйВозврат.СуммаДокумента = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(НовыйВозврат.Товары, НовыйВозврат.ЦенаВключаетНДС);
		НовыйВозврат.Подразделение  = ПодразделениеДокумента;
		
		НовыйВозврат.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры

Функция ПодразделенияВДокументахОснованиях(ДокументВозврат)
	
	МассивПодразделений = Новый Массив;
	
	Для Каждого Строка Из ДокументВозврат.Товары Цикл 
		
		Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.ДокументРеализации, "Подразделение");
		
		Если МассивПодразделений.Найти(Подразделение) = Неопределено Тогда
			МассивПодразделений.Добавить(Подразделение);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивПодразделений;
	
КонецФункции

#КонецОбласти