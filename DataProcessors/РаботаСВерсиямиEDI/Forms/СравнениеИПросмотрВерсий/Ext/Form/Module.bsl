#Область ОписаниеПеременных

&НаКлиенте
Перем ДлительныеОперацииФормы;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыводитьТолькоРазличия = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("РаботаСВерсиямиEDI", "ВыводитьТолькоРазличия");
	
	ПрочитатьПараметрыОткрытияФормы();
	
	УстановитьНачальноеОформлениеФормы();
	
	ДлительнаяОперацияФормированияСпискаВерсии = ЗапуститьФормированиеСпискаВерсийДокумента(
		ПараметрыФормированияДлительнойОперации(ЭтотОбъект),
		УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыФормированияДлительнойОперации(Форма)
	
	ПараметрыФормирования = Новый Структура;
	ПараметрыФормирования.Вставить("ТипДокумента",                        Форма.ТипДокумента);
	ПараметрыФормирования.Вставить("Документ",                            Форма.Документ);
	ПараметрыФормирования.Вставить("ДокументСсылка",                      Форма.ДокументСсылка);
	ПараметрыФормирования.Вставить("Версия",                              Форма.Версия);
	ПараметрыФормирования.Вставить("ВерсияДляСравнения",                  Форма.ВерсияДляСравнения);
	ПараметрыФормирования.Вставить("Организация",                         Форма.Организация);
	ПараметрыФормирования.Вставить("ПараметрыОпределенияДоступныхКоманд", ПараметрыОпределенияДоступныхКоманд(Форма));
	
	Возврат ПараметрыФормирования;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДлительныеОперацииФормы = Новый Массив;
	
	ОжидатьФормированиеСпискаВерсий();
	ОбновитьОтображениеФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимПросмотраПриИзменении(Элемент)
	
	Если РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраПросмотр() Тогда
		
		СформироватьПредставлениеВерсии();
		
	ИначеЕсли РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() Тогда
		
		Если ЗначениеЗаполнено(ВерсияДляСравнения)
			И ЗначениеЗаполнено(Версия) 
			И ВерсияДляСравнения = Версия Тогда
			
			ВерсияДляСравнения = "";
			
		КонецЕсли;
		
		СформироватьСравнениеВерсий();
		
	КонецЕсли;
	
	ОбновитьОтображениеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВерсияПросмотраОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = НавигационнаяСсылкаИзменитьВерсиюПросмотра() Тогда
		
		ДанныеПросмотраАктуальны = Ложь;
		ДанныеСравненияАктуальны = Ложь;
		
		СтандартнаяОбработка = Ложь;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяРеквизита", "Версия");
		
		ПараметрыВыбораВерсииДокумента = РаботаСВерсиямиEDIКлиент.НовыйПараметрыВыбораВерсииДокумента(ЭтаФорма);
		ПараметрыВыбораВерсииДокумента.ТипДокумента                     = ТипДокумента;
		ПараметрыВыбораВерсииДокумента.Документ                         = Документ;
		ПараметрыВыбораВерсииДокумента.ОписаниеОповещения               = Новый ОписаниеОповещения("ПриВыбореНовойВерсииДляПросмотра", ЭтотОбъект, ДополнительныеПараметры);
		ПараметрыВыбораВерсииДокумента.Заголовок                        = СтрШаблон(НСтр("ru = 'Версии документа %1'"), ПредставлениеДокумента);
		ПараметрыВыбораВерсииДокумента.Версия                           = Версия;
		ПараметрыВыбораВерсииДокумента.АктуальнаяВерсия                 = АктуальнаяВерсия;
		ПараметрыВыбораВерсииДокумента.ПрисланнаяНаСогласованиеВерсия   = ПрисланнаяНаСогласованиеВерсия;
		ПараметрыВыбораВерсииДокумента.СостояниеРедактированияДокумента = СостояниеРедактированияДокумента;
		ПараметрыВыбораВерсииДокумента.Организация                      = Организация;
		
		Если РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() Тогда
			ПараметрыВыбораВерсииДокумента.ВерсияДляСравнения = ВерсияДляСравнения;
		КонецЕсли;
		
		РаботаСВерсиямиEDIКлиент.ОткрытьФормуВыбораВерсии(ПараметрыВыбораВерсииДокумента);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = НавигационнаяСсылкаИзменитьВерсиюДляСравнения() Тогда
		
		ДанныеСравненияАктуальны = Ложь;
		СтандартнаяОбработка = Ложь;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяРеквизита", "ВерсияДляСравнения");
		
		ПараметрыВыбораВерсииДокумента = РаботаСВерсиямиEDIКлиент.НовыйПараметрыВыбораВерсииДокумента(ЭтаФорма);
		ПараметрыВыбораВерсииДокумента.ТипДокумента                     = ТипДокумента;
		ПараметрыВыбораВерсииДокумента.Документ                         = Документ;
		ПараметрыВыбораВерсииДокумента.ОписаниеОповещения               = Новый ОписаниеОповещения("ПриВыбореНовойВерсииДляПросмотра", ЭтотОбъект, ДополнительныеПараметры);
		ПараметрыВыбораВерсииДокумента.Заголовок                        = СтрШаблон(НСтр("ru = 'Версии документа %1'"), ПредставлениеДокумента);
		ПараметрыВыбораВерсииДокумента.Версия                           = ВерсияДляСравнения;
		ПараметрыВыбораВерсииДокумента.ВерсияДляСравнения               = Версия;
		ПараметрыВыбораВерсииДокумента.АктуальнаяВерсия                 = АктуальнаяВерсия;
		ПараметрыВыбораВерсииДокумента.ПрисланнаяНаСогласованиеВерсия   = ПрисланнаяНаСогласованиеВерсия;
		ПараметрыВыбораВерсииДокумента.СостояниеРедактированияДокумента = СостояниеРедактированияДокумента;
		ПараметрыВыбораВерсииДокумента.Организация                      = Организация;
		
		РаботаСВерсиямиEDIКлиент.ОткрытьФормуВыбораВерсии(ПараметрыВыбораВерсииДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьТолькоРазличияПриИзменении(Элемент)
	
	ВыводитьТолькоРазличияПриИзмененииНаСервере(ВыводитьТолькоРазличия);
	
	Если ДанныеСравненияАктуальны Тогда
		
		ОбновитьОтображениеФормы();
		
	Иначе
		
		ДанныеСравненияАктуальны = Ложь;
		СформироватьСравнениеВерсий();
		ОбновитьОтображениеФормы();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПредыдущаяВерсия(Команда)
	
	Если ПустаяСтрока(ПредыдущаяВерсия) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПросмотраАктуальны = Ложь;
	ДанныеСравненияАктуальны = Ложь;
	
	Версия = ПредыдущаяВерсия;

	СформироватьСтроковыеПредставленияВерсий();
	СформироватьПредставлениеВерсии();
	
КонецПроцедуры

&НаКлиенте
Процедура СледующаяВерсия(Команда)
	
	Если ПустаяСтрока(СледующаяВерсия) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПросмотраАктуальны = Ложь;
	ДанныеСравненияАктуальны = Ложь;
	
	Версия = СледующаяВерсия;

	СформироватьСтроковыеПредставленияВерсий();
	СформироватьПредставлениеВерсии();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоменятьВерсииМестами(Команда)
	
	ВременнаяВерсия    = Версия;
	Версия             = ВерсияДляСравнения;
	ВерсияДляСравнения = ВременнаяВерсия;
	
	ДанныеСравненияАктуальны = Ложь;
	ДанныеПросмотраАктуальны = Ложь;
	
	СформироватьСтроковыеПредставленияВерсий();
	ОбновитьОтображениеФормы();
	СформироватьСравнениеВерсий();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДоступноеДействиеПросмотр(ИмяКоманды)
	ВыполнитьКомандуСервиса(ДоступныеКомандыПросмотр, ИмяКоманды.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДоступноеДействиеСравнение(ИмяКоманды)
	ВыполнитьКомандуСервиса(ДоступныеКомандыСравнение, ИмяКоманды.Имя);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаСФормой

// Обрабатывает параметры, переданные в форму
// В параметры формы можно передать следующие значения:
//  ПредставлениеДокумента           - Строка - используется для вывода представления документа в тело отчета.
//  Заголовок                        - Строка - можно установить заголовок формы, если не задан, то в качестве заголовка используется представление документа.
//  РежимПросмотра                   - Строка - влияет на состав команд по переносу одной из версий в документ, может принимать следующие значения:
//            * "Просмотр"  - отчет откроется в режиме просмотра версии. Если состояние редактирования документа не равно
//                        "РассмотрениеПрисланнойВерсии" то Требуется передача параметра "Версия". Иначе требуется указать параметры "ПрисланнаяНаСогласованиеВерсия" и "АктуальнаяВерсия".
//            * "Сравнение" - отчет откроется в режиме сравнения версий. Если состояние редактирования документа не равно
//                        "РассмотрениеПрисланнойВерсии" то Требуется передача параметра "ВерсияДляСравнения". Иначе требуется указать параметры "ПрисланнаяНаСогласованиеВерсия" и "АктуальнаяВерсия".
//  ТипДокумента                     - Строка - имя типа документа для которого формируется отчет.
//  Версия                           - Строка - идентификатор версии, которая будет выведена для просмотра или как "версия 1" для сравнения.
//     Если в параметр СостояниеРедактированияДокумента передано значение РассмотрениеПрисланнойВерсии, то заполнять не нужно.
//  ВерсияДляСравнения               - Строка - идентификатор версии, которая будет выведена для сравнения как "версия 2". 
//     Требуется заполнить если в параметр СостояниеРедактированияДокумента передано значение "Сравнение".
//     Если в параметр СостояниеРедактированияДокумента передано значение "РассмотрениеПрисланнойВерсии", то заполнять не нужно.
//  АктуальнаяВерсия                 - Строка - идентификатор актуальной версии. Используется только, если в параметр
//     параметр СостояниеРедактированияДокумента передано значение РассмотрениеПрисланнойВерсии. Будет выведена при открытии отчета как версия для просмотра.
//  ПрисланнаяНаСогласованиеВерсия    - Строка - идентификатор присланной на сравнение версии. Используется только, если в параметр
//     параметр СостояниеРедактированияДокумента передано значение РассмотрениеПрисланнойВерсии.  Будет установлена в отчет как версия для сравнения.
//  СостояниеРедактированияДокумента  - Строка - влияет на состав команд по переносу одной из версий в документ, может принимать следующие значения:
//            * "НеДоступен"                   - команды по переносу одной из версий в документ доступны не будут.
//            * "Редактируется"                - команды по переносу одной из версий в документ будут доступны. 
//            * "РассмотрениеПрисланнойВерсии" - форма отчета будет настроена для просмотра и сравнения присланной на согласование версии. 
//     Требуется передача параметров "ПрисланнаяНаСогласованиеВерсия" и "АктуальнаяВерсия"
//  Организация                       - Произвольный - данные об организации документа.
//
&НаСервере
Процедура ПрочитатьПараметрыОткрытияФормы()
	
	Параметры.Свойство("ПредставлениеДокумента"           , ПредставлениеДокумента);
	Параметры.Свойство("ПредставлениеДокумента"           , Заголовок);
	Параметры.Свойство("РежимПросмотра"                   , РежимПросмотра);
	Параметры.Свойство("ТипДокумента"                     , ТипДокумента);
	Параметры.Свойство("Документ"                         , Документ);
	Параметры.Свойство("ДокументСсылка"                   , ДокументСсылка);
	Параметры.Свойство("Версия"                           , Версия);
	Параметры.Свойство("АктуальнаяВерсия"                 , АктуальнаяВерсия);
	Параметры.Свойство("ВерсияДляСравнения"               , ВерсияДляСравнения);
	Параметры.Свойство("ПрисланнаяНаСогласованиеВерсия"   , ПрисланнаяНаСогласованиеВерсия);
	Параметры.Свойство("СостояниеРедактированияДокумента" , СостояниеРедактированияДокумента);
	Параметры.Свойство("Организация"                      , Организация);
	
	Если ПустаяСтрока(Заголовок) 
		И Не ПустаяСтрока(ПредставлениеДокумента) Тогда
		Заголовок = ПредставлениеДокумента;
	КонецЕсли;
	
	Если ПустаяСтрока(Заголовок) И ПустаяСтрока(ПредставлениеДокумента) И ЗначениеЗаполнено(ДокументСсылка) Тогда
		
		ПредставлениеДокумента = ПредставлениеДокумента(ДокументСсылка);
		Заголовок              = ПредставлениеДокумента;
		
	КонецЕсли;
	
	Если СостояниеРедактированияДокумента = РаботаСВерсиямиEDIКлиентСервер.СостояниеДокументаРассмотрениеПрисланнойВерсии() Тогда
		
		Если ЗначениеЗаполнено(ПрисланнаяНаСогласованиеВерсия) Тогда
			ВызватьИсключение НСтр("ru = 'Не передана присланная на согласование версия. Работа по анализу присланной версии невозможна.'");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(АктуальнаяВерсия) Тогда
			ВызватьИсключение НСтр("ru = 'Не передана актуальная версия. Работа в форме невозможна. Работа по анализу присланной версии невозможна.'");
		КонецЕсли;
		
		Версия             = ПрисланнаяНаСогласованиеВерсия;
		ВерсияДляСравнения = АктуальнаяВерсия;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНачальноеОформлениеФормы()
	
	Элементы.ГруппаСтраницы.ОтображениеСтраниц                    = ОтображениеСтраницФормы.Нет;
	Элементы.ГруппаСтраницыНавигации.ОтображениеСтраниц           = ОтображениеСтраницФормы.Нет;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеФормы()
	
	// Установка выбранной страницы
	Если РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраПросмотр() Тогда
		УстанавливаемаяСтраницаДоступныхДействий = Элементы.ГруппаДоступныеДействияСтраницаПросмотр;
		ТаблицаКоманд = ДоступныеКомандыПросмотр;
		Если Не ДанныеПросмотраАктуальны Тогда
			УстанавливаемаяСтраница = Элементы.ГруппаНечегоПоказывать;
		Иначе
			УстанавливаемаяСтраница = Элементы.ГруппаПросмотрВерсии;
		КонецЕсли;
	ИначеЕсли РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() Тогда
		УстанавливаемаяСтраницаДоступныхДействий = Элементы.ГруппаДоступныеДействияСтраницаСравнение;
		ТаблицаКоманд = ДоступныеКомандыСравнение;
		Если Не ЗначениеЗаполнено(Версия)
			Или Не ЗначениеЗаполнено(ВерсияДляСравнения) Тогда
			УстанавливаемаяСтраница = Элементы.ГруппаНечегоПоказывать;
		ИначеЕсли Не ДанныеСравненияАктуальны Тогда
			УстанавливаемаяСтраница = Элементы.ГруппаНечегоПоказывать;
		ИначеЕсли ВыводитьТолькоРазличия Тогда 
			УстанавливаемаяСтраница = Элементы.ГруппаСравнениеВерсийТолькоРазличия;
		Иначе
			УстанавливаемаяСтраница = Элементы.ГруппаСравнениеВерсий;
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаСтраницы", "ТекущаяСтраница",
		УстанавливаемаяСтраница);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаДоступныеДействияСтраницы", 
		"ТекущаяСтраница", УстанавливаемаяСтраницаДоступныхДействий);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаДоступныеДействияСтраницаПросмотр", 
		"Видимость", РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраПросмотр());
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаДоступныеДействияСтраницаСравнение", 
		"Видимость", РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение());
		
	Если УстанавливаемаяСтраница = Элементы.ГруппаНечегоПоказывать Тогда
		УстановитьНеактуальностьОтчета();
	КонецЕсли;
	
	// Установка выбранной навигации страницы
	Если Не ДлительныеОперацииФормы.Количество() = 0 Тогда
		
		УстанавливаемаяСтраницаНавигации = Элементы.ГруппаДлительнаяОперация;
		
	ИначеЕсли РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраПросмотр() Тогда
		УстанавливаемаяСтраницаНавигации = Элементы.ГруппаНавигацияПросмотр;
	ИначеЕсли РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() Тогда
		УстанавливаемаяСтраницаНавигации = Элементы.ГруппаНавигацияСравнение;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаСтраницыНавигации", "ТекущаяСтраница",
		УстанавливаемаяСтраницаНавигации);
	
	// Доступность перехода к предыдущей и следующей версиям
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПредыдущаяВерсия", "Доступность",
		Не ПустаяСтрока(ПредыдущаяВерсия));
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СледующаяВерсия", "Доступность",
		Не ПустаяСтрока(СледующаяВерсия));
	
	// Строковое представление версии
	УстановитьПредставлениеВерсии("ДекорацияВерсияПросмотра",  Версия, СтроковоеПредставлениеВерсии, НавигационнаяСсылкаИзменитьВерсиюПросмотра(), НСтр("ru = 'Версия'"));
	УстановитьПредставлениеВерсии("ДекорацияСравнениеВерсия1", Версия, СтроковоеПредставлениеВерсии, НавигационнаяСсылкаИзменитьВерсиюПросмотра(), НСтр("ru = 'Версия 1'"));
	УстановитьПредставлениеВерсии("ДекорацияСравнениеВерсия2", ВерсияДляСравнения, СтроковоеПредставлениеВерсииДляСравнения, НавигационнаяСсылкаИзменитьВерсиюДляСравнения(), НСтр("ru = 'Версия 2'"));
	
	// Команды сравнения
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ПеренестиВДокументВерсию", "Заголовок",
		?(РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраПросмотр(), 
			НСтр("ru = 'Перенести в документ версию'"), 
			НСтр("ru = 'Перенести в документ версию 1'")));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ПеренестиВДокументВерсию", "Видимость", Не АктуальнаяВерсия = Версия);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ПеренестиВДокументСравниваемуюВерсию", "Видимость",
		Не АктуальнаяВерсия = ВерсияДляСравнения И РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "СогласоватьПрисланнуюВерсию", "Видимость", 
		Не ПустаяСтрока(ПрисланнаяНаСогласованиеВерсия)
			И Не ДействиеСогласоватьЗаказ.Пустая()
			И (Версия = ПрисланнаяНаСогласованиеВерсия Или ВерсияДляСравнения = ПрисланнаяНаСогласованиеВерсия));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ОтменитьЗаказ", "Видимость", 
		Не ДействиеОтменитьЗаказ.Пустая());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ПродолжитьРедактироватьТекущуюВерсию", "Видимость", 
		Не ПустаяСтрока(ПрисланнаяНаСогласованиеВерсия));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ПеренестиВДокументПрисланнуюВерсию", "Видимость", 
		Не ПустаяСтрока(ПрисланнаяНаСогласованиеВерсия)
			И Версия = ПрисланнаяНаСогласованиеВерсия 
			Или (РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() И ВерсияДляСравнения = ПрисланнаяНаСогласованиеВерсия));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ВернутьсяКПросмотруПрисланнойВерсии", "Видимость", 
		Не ПустаяСтрока(ПрисланнаяНаСогласованиеВерсия)
			И Не Версия = ПрисланнаяНаСогласованиеВерсия 
			И Не (РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() И ВерсияДляСравнения = ПрисланнаяНаСогласованиеВерсия));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ВернутьсяКСравнениюПрисланнойИТекущейВерсии", "Видимость", 
		Не ПустаяСтрока(ПрисланнаяНаСогласованиеВерсия)
		И Не РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение()
			Или (Не Версия = ПрисланнаяНаСогласованиеВерсия И Не ВерсияДляСравнения = ПрисланнаяНаСогласованиеВерсия)
			Или (Не Версия = АктуальнаяВерсия И Не ВерсияДляСравнения = АктуальнаяВерсия));
	
	КоличествоКоманд = ТаблицаКоманд.Количество();
	
	Если КоличествоКоманд = 0 Тогда
		Элементы.ДоступныеДействия.Видимость = Ложь;
	Иначе
		Элементы.ДоступныеДействия.Видимость = Истина;
		Элементы.ДоступныеДействия.Заголовок = СтрШаблон(НСтр("ru = 'Доступные действия (%1)'"), Строка(КоличествоКоманд));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНеактуальностьОтчета()
	
	ОтображениеСостояния = Элементы.НечегоПоказывать.ОтображениеСостояния;
	
	Если РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраПросмотр() Тогда
		Если Не ЗначениеЗаполнено(Версия) Тогда
			Текст =  НСтр("ru = 'Печатная форма документа не сформирована. Выберите отображаемую версию.'");
		ИначеЕсли Не ДанныеПросмотраАктуальны Тогда
			Текст =  НСтр("ru = 'Выполняется формирование печатной формы документа выбранной версии.'");
		КонецЕсли;
	ИначеЕсли РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() Тогда
		Если Не ЗначениеЗаполнено(Версия)
			И Не ЗначениеЗаполнено(ВерсияДляСравнения) Тогда
			Текст =  НСтр("ru = 'Отчет о сравнении версий документа не сформирован. Выберите сравниваемые версии.'");
		ИначеЕсли Не ЗначениеЗаполнено(Версия) Тогда
			Текст =  НСтр("ru = 'Отчет о сравнении версий документа не сформирован. Выберите версию 1.'");
		ИначеЕсли Не ЗначениеЗаполнено(ВерсияДляСравнения) Тогда
			Текст =  НСтр("ru = 'Отчет о сравнении версий документа не сформирован. Выберите версию 2.'");
		ИначеЕсли Не ДанныеСравненияАктуальны  Тогда
			Текст =  НСтр("ru = 'Выполняется формирование отчета о сравнении версий.'");
		КонецЕсли;
	КонецЕсли;
	
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	ОтображениеСостояния.Текст                          = Текст;
	ОтображениеСостояния.Видимость                      = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредставлениеВерсии(ИмяЭлементаФормы, ИдентификаторВерсии, СтроковоеПредставление, НавигационнаяСсылка, Префикс)
	
	ВерсияСтрокой = СтроковоеПредставление;
	
	Если СостояниеРедактированияДокумента = РаботаСВерсиямиEDIКлиентСервер.СостояниеДокументаРассмотрениеПрисланнойВерсии() Тогда
		
		Если ИдентификаторВерсии = АктуальнаяВерсия Тогда
			 ВерсияСтрокой = НСтр("ru = 'текущая'");
		КонецЕсли;
		
		Если ИдентификаторВерсии = ПрисланнаяНаСогласованиеВерсия Тогда
			 ВерсияСтрокой = НСтр("ru = 'присланная на согласование'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() Тогда
		ТекстВерсии =  СтрШаблон("%1 - %2", Префикс, ВерсияСтрокой);
	Иначе
		ТекстВерсии =  СтрШаблон("%1 %2", Префикс, ВерсияСтрокой);
	КонецЕсли;
	
	Если ПустаяСтрока(ИдентификаторВерсии) Тогда
		Текст = СтрШаблон(НСтр("ru = 'Не выбрано, <a href = ""%1"">выбрать</a>'"), НавигационнаяСсылка);
	Иначе
		Текст = СтрШаблон(НСтр("ru = '%1, <a href = ""%2"">изменить</a>'"), ТекстВерсии, НавигационнаяСсылка);
	КонецЕсли;
	
	ЗаголовокВерсии = СтроковыеФункцииКлиент.ФорматированнаяСтрока(Текст);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлементаФормы, "Заголовок",
		ЗаголовокВерсии);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыводитьТолькоРазличияПриИзмененииНаСервере(ВыводитьТолькоРазличия)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("РаботаСВерсиямиEDI", "ВыводитьТолькоРазличия", ВыводитьТолькоРазличия);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСтроковыеПредставленияВерсии(ИдентификаторВерсии, СтроковоеПредставлениеВыбраннойВерсии)
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ИдентификаторВерсии", ИдентификаторВерсии);
	
	НайденныеСтроки = ВерсииДокумента.НайтиСтроки(СтруктураОтбора);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		СтроковоеПредставлениеВыбраннойВерсии = "";
	Иначе
		СтроковоеПредставлениеВыбраннойВерсии = НайденныеСтроки[0].ПредставлениеВерсии;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСтроковыеПредставленияВерсий()
	
	СформироватьСтроковыеПредставленияВерсии(Версия            , СтроковоеПредставлениеВерсии);
	СформироватьСтроковыеПредставленияВерсии(ВерсияДляСравнения, СтроковоеПредставлениеВерсииДляСравнения);
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьПредыдущуюИСледующуюВерсию()
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ИдентификаторВерсии", Версия);
	
	НайденныеСтроки = ВерсииДокумента.НайтиСтроки(СтруктураОтбора);
	
	ПредыдущаяВерсия = "";
	СледующаяВерсия  = "";
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИндексСтроки = ВерсииДокумента.Индекс(НайденныеСтроки[0]);
	
	Если Не ИндексСтроки = 0 Тогда
		СледующаяВерсия = ВерсииДокумента[ИндексСтроки - 1].ИдентификаторВерсии;
	КонецЕсли;
	
	Если Не ИндексСтроки = ВерсииДокумента.Количество() - 1 Тогда
		ПредыдущаяВерсия = ВерсииДокумента[ИндексСтроки + 1].ИдентификаторВерсии;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПредставлениеВерсии

&НаСервереБезКонтекста
Функция ЗапуститьФормированиеПредставленияВерсии(ПараметрыФормирования, УникальныйИдентификаторФормы)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификаторФормы);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование представления версии'");
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "Обработки.РаботаСВерсиямиEDI.СформироватьПредставлениеВерсии", ПараметрыФормирования);
	
КонецФункции

&НаКлиенте
Процедура СформироватьПредставлениеВерсии()
	
	Если ДанныеПросмотраАктуальны Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперацияФормированияПредставленияВерсии = ЗапуститьФормированиеПредставленияВерсии(ПараметрыФормированияДлительнойОперации(ЭтотОбъект),
	                                                                                             УникальныйИдентификатор);
	ОжидатьФормированиеПредставленияВерсии();
	ОбновитьОтображениеФормы();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыОпределенияДоступныхКоманд(Форма)
	
	ПараметрыОпределенияДоступныхКоманд = РаботаСВерсиямиEDIКлиентСервер.НовыйПараметрыОпределенияДоступныхКоманд();
	
	ПараметрыОпределенияДоступныхКоманд.РежимПросмотра                           = Форма.РежимПросмотра;
	ПараметрыОпределенияДоступныхКоманд.СостояниеРедактированияДокумента         = Форма.СостояниеРедактированияДокумента;
	ПараметрыОпределенияДоступныхКоманд.СтроковоеПредставлениеВерсии             = Форма.СтроковоеПредставлениеВерсии;
	ПараметрыОпределенияДоступныхКоманд.СтроковоеПредставлениеВерсииДляСравнения = Форма.СтроковоеПредставлениеВерсииДляСравнения;
	ПараметрыОпределенияДоступныхКоманд.АктуальнаяВерсия                         = Форма.АктуальнаяВерсия;
	ПараметрыОпределенияДоступныхКоманд.Версия                                   = Форма.Версия;
	ПараметрыОпределенияДоступныхКоманд.ВерсияДляСравнения                       = Форма.ВерсияДляСравнения;
	ПараметрыОпределенияДоступныхКоманд.ПрисланнаяВерсия                         = Форма.ПрисланнаяНаСогласованиеВерсия;
	
	Возврат ПараметрыОпределенияДоступныхКоманд;
	
КонецФункции

&НаКлиенте
Процедура ОжидатьФормированиеПредставленияВерсии()
	
	ОбновитьОтображениеФормы();
	
	Если ДлительнаяОперацияФормированияПредставленияВерсии = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗафиксироватьДлительнуюОперацию(ДлительнаяОперацияФормированияПредставленияВерсии);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ПредставлениеВерсии, "ФормированиеОтчета");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеФормированияПредставленияВерсии", ЭтотОбъект);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ПолучатьРезультат    = Истина;
	ПараметрыОжидания.ВыводитьСообщения    = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперацияФормированияПредставленияВерсии, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеФормированияПредставленияВерсии(РезультатВыполнения, ДополнительныеПараметры) Экспорт 
	
	ДанныеПросмотраАктуальны = Истина;
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ПредставлениеВерсии, "НеИспользовать");
	
	ЗавершитьДлительнуюОперацию(ДлительнаяОперацияФормированияПредставленияВерсии);
	
	Если РезультатВыполнения = Неопределено  Или Не РезультатВыполнения.Статус = "Выполнено" Тогда
		
		ОтображениеСостояния = Элементы.ПредставлениеВерсии.ОтображениеСостояния;
		ОтображениеСостояния.Видимость                      = Истина;
		ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
		ОтображениеСостояния.Картинка                       = Новый Картинка;
		ОтображениеСостояния.Текст                          = НСтр("ru = 'При обращении к сервису 1С:EDI произошла ошибка. Не удалось сформировать отчет'");
		
		ОбновитьОтображениеФормы();
		Возврат;
	КонецЕсли;
	
	ПослеФормированияПредставленияВерсииНаСервере(РезультатВыполнения.АдресРезультата);
	ОбновитьОтображениеФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПослеФормированияПредставленияВерсииНаСервере(АдресРезультата)
	
	ДанныеВерсии = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ПредставлениеВерсии.Очистить();
	ПредставлениеВерсии.Вывести(ДанныеВерсии.ПечатнаяФорма);
	
	ПрочитатьКоманды(ДоступныеКомандыПросмотр, ДанныеВерсии.Команды, Элементы.ГруппаДоступныеДействияСтраницаПросмотр, 
		"Просмотр");
	
	ПересчитатьПредыдущуюИСледующуюВерсию();
	
КонецПроцедуры

#КонецОбласти

#Область СравнениеВерсий

&НаСервереБезКонтекста
Функция ЗапуститьФормированиеСравненияВерсий(ПараметрыФормирования, УникальныйИдентификаторФормы)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификаторФормы);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование списка версий'");
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "Обработки.РаботаСВерсиямиEDI.СформироватьСравнениеВерсий", ПараметрыФормирования);
	
КонецФункции

&НаКлиенте
Процедура СформироватьСравнениеВерсий()
	
	Если ДанныеСравненияАктуальны Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Версия) 
		Или Не ЗначениеЗаполнено(ВерсияДляСравнения) Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперацияФормированияСравненияВерсий = ЗапуститьФормированиеСравненияВерсий(
		ПараметрыФормированияДлительнойОперации(ЭтотОбъект), 
		УникальныйИдентификатор);
		
	ОжидатьФормированиеСравненияВерсий();
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьФормированиеСравненияВерсий()
	
	ОбновитьОтображениеФормы();
	
	Если ДлительнаяОперацияФормированияСравненияВерсий = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗафиксироватьДлительнуюОперацию(ДлительнаяОперацияФормированияСравненияВерсий);

	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.СравнениеВерсий, "ФормированиеОтчета");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеФормированияСравненияВерсий", ЭтотОбъект);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ПолучатьРезультат    = Истина;
	ПараметрыОжидания.ВыводитьСообщения    = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперацияФормированияСравненияВерсий, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеФормированияСравненияВерсий(РезультатВыполнения, ДополнительныеПараметры) Экспорт 
	
	ДанныеСравненияАктуальны = Истина;
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.СравнениеВерсий, "НеИспользовать");
	
	ЗавершитьДлительнуюОперацию(ДлительнаяОперацияФормированияСравненияВерсий);

	Если РезультатВыполнения = Неопределено  Или Не РезультатВыполнения.Статус = "Выполнено" Тогда
		
		ОтображениеСостояния = Элементы.СравнениеВерсий.ОтображениеСостояния;
		ОтображениеСостояния.Видимость                      = Истина;
		ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
		ОтображениеСостояния.Картинка                       = Новый Картинка;
		ОтображениеСостояния.Текст                          = НСтр("ru = 'При обращении к сервису 1С:EDI произошла ошибка. Не удалось сформировать отчет'");
		
		ОбновитьОтображениеФормы();
		
		Возврат;
	КонецЕсли;
	
	ПослеФормированияСравненияВерсийНаСервере(РезультатВыполнения.АдресРезультата);
	ОбновитьОтображениеФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПослеФормированияСравненияВерсийНаСервере(АдресРезультата)
	
	ДанныеВерсии = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	СравнениеВерсий              = ДанныеВерсии.ОтчетОСравненииПолный;
	СравнениеВерсийТолькоОтличия = ДанныеВерсии.ОтчетОСравненииТолькоОтличия;
	
	ПрочитатьКоманды(ДоступныеКомандыСравнение, ДанныеВерсии.Команды, Элементы.ГруппаДоступныеДействияСтраницаСравнение, 
		"Сравнение");

КонецПроцедуры

#КонецОбласти

#Область ВерсииДокумента

&НаСервереБезКонтекста
Функция ЗапуститьФормированиеСпискаВерсийДокумента(ПараметрыФормирования, УникальныйИдентификаторФормы)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификаторФормы);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование сравнения версий'");
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "Обработки.РаботаСВерсиямиEDI.СформироватьСписокВерсий", ПараметрыФормирования);
	
КонецФункции

&НаКлиенте
Процедура ОжидатьФормированиеСпискаВерсий()
	
	Если ДлительнаяОперацияФормированияСпискаВерсии = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗафиксироватьДлительнуюОперацию(ДлительнаяОперацияФормированияСпискаВерсии);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеФормированияСпискаВерсий", ЭтотОбъект);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ПолучатьРезультат    = Истина;
	ПараметрыОжидания.ВыводитьСообщения    = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперацияФормированияСпискаВерсии, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Процедура ПослеФормированияСпискаВерсийНаСервере(АдресРезультата)
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат; // Сервис недоступен
	КонецЕсли;
	
	ДанныеВерсий                   = РезультатВыполнения.ДанныеВерсий;
	АктуальнаяВерсия               = РезультатВыполнения.АктуальнаяВерсия;
	ПрисланнаяНаСогласованиеВерсия = РезультатВыполнения.ПрисланнаяНаСогласованиеВерсия;
	ДействиеОтменитьЗаказ          = РезультатВыполнения.ДействиеОтменитьЗаказ;
	ДействиеСогласоватьЗаказ       = РезультатВыполнения.ДействиеСогласоватьЗаказ;
	
	ВерсииДокумента.Очистить();
	
	Для каждого ДанныеВерсии Из ДанныеВерсий Цикл
		ЗаполнитьЗначенияСвойств(ВерсииДокумента.Добавить(), ДанныеВерсии);
	КонецЦикла;
	
	Если РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраПросмотр() Тогда
		
		ДлительнаяОперацияФормированияПредставленияВерсии = ЗапуститьФормированиеПредставленияВерсии(
			ПараметрыФормированияДлительнойОперации(ЭтотОбъект),
			УникальныйИдентификатор);
			
	ИначеЕсли РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() Тогда
			
		ДлительнаяОперацияФормированияСравненияВерсий = ЗапуститьФормированиеСравненияВерсий(
			ПараметрыФормированияДлительнойОперации(ЭтотОбъект), 
			УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеФормированияСпискаВерсий(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	ЗавершитьДлительнуюОперацию(ДлительнаяОперацияФормированияСпискаВерсии);
	
	Если РезультатВыполнения = Неопределено  Или Не РезультатВыполнения.Статус = "Выполнено" Тогда
		ОбновитьОтображениеФормы();
		Возврат;
	КонецЕсли;
	
	ПослеФормированияСпискаВерсийНаСервере(РезультатВыполнения.АдресРезультата);
	
	СформироватьСтроковыеПредставленияВерсий();
	ОбновитьОтображениеФормы();
	
	ОжидатьФормированиеПредставленияВерсии();
	ОжидатьФормированиеСравненияВерсий();
	
КонецПроцедуры

#КонецОбласти

#Область ЛокализацияЗначений

&НаКлиентеНаСервереБезКонтекста
Функция НавигационнаяСсылкаИзменитьВерсиюПросмотра()
	
	Возврат "ИзменитьВерсиюПросмотра";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НавигационнаяСсылкаИзменитьВерсиюДляСравнения()
	
	Возврат "ИзменитьВерсиюДляСравнения";
	
КонецФункции

#КонецОбласти

#Область ВыборВерсииДляПросмотра

&НаКлиенте
Процедура ПриВыбореНовойВерсииДляПросмотра(ВыбраннаяВерсия, ДополнительныеПараметры) Экспорт 
	
	Если ВыбраннаяВерсия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект[ДополнительныеПараметры.ИмяРеквизита] = ВыбраннаяВерсия;
	
	СформироватьСтроковыеПредставленияВерсий();
	
	Если РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраПросмотр() Тогда
		ДанныеПросмотраАктуальны = Ложь;
		СформироватьПредставлениеВерсии();
	ИначеЕсли РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение() Тогда
		ДанныеСравненияАктуальны = Ложь;
		СформироватьСравнениеВерсий();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаКомандДоступныхДействий

&НаСервере
Процедура ПрочитатьКоманды(ТаблицаКоманд, НаборКоманд, Расположение, Постфикс)
	
	Для каждого Команда Из ТаблицаКоманд Цикл
		
		ИмяКоманды = Команда.ИмяКоманды;
		
		ЭлементФормы = Элементы.Найти(ИмяКоманды);
		
		Если Не ЭлементФормы = Неопределено Тогда
			Элементы.Удалить(ЭлементФормы);
		КонецЕсли;
		
		КомандаФормы = Команды.Найти(ИмяКоманды);
		
		Если Не КомандаФормы = Неопределено Тогда
			Команды.Удалить(КомандаФормы);
		КонецЕсли;
		
	КонецЦикла;
	
	НомерКоманды = 0;
	
	Для каждого Команда Из НаборКоманд Цикл
		
		НомерКоманды = НомерКоманды + 1;
		
		НоваяКоманда = ТаблицаКоманд.Добавить();
		НоваяКоманда.Команда            = Команда.Команда;
		НоваяКоманда.Заголовок          = Команда.Представление;
		НоваяКоманда.Пояснение          = Команда.Пояснение;
		НоваяКоманда.Картинка           = Команда.Картинка;
		НоваяКоманда.СценарийВыполнения = Команда.СценарийВыполнения;
		НоваяКоманда.URL                = Команда.URL;
		НоваяКоманда.ИмяКоманды         = СтрШаблон("ДоступноеДействие%1_%2", Постфикс, Формат(НомерКоманды, "ЧГ=;"));
		
		КомандаФормы = Команды.Добавить(НоваяКоманда.ИмяКоманды);
		КомандаФормы.Действие    = "Подключаемый_ДоступноеДействие" + Постфикс;
		КомандаФормы.Заголовок   = НоваяКоманда.Заголовок;
		КомандаФормы.Картинка    = НоваяКоманда.Картинка;
		КомандаФормы.Отображение = ОтображениеКнопки.КартинкаИТекст;
		КомандаФормы.Подсказка   = НоваяКоманда.Пояснение;
		
		ЭлементФормы = Элементы.Добавить(НоваяКоманда.ИмяКоманды, Тип("КнопкаФормы"), Расположение);
		ЭлементФормы.Вид                  = ВидКнопкиФормы.Гиперссылка;
		ЭлементФормы.ИмяКоманды           = НоваяКоманда.ИмяКоманды;
		ЭлементФормы.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		
	КонецЦикла
	
КонецПроцедуры

&НаКлиенте
Функция НовыйВыполняемаяОперация()
	
	ВыполняемаяОперация = Новый Структура;
	
	ВыполняемаяОперация.Вставить("Команда"  , Неопределено);
	ВыполняемаяОперация.Вставить("Сценарий" , Неопределено);
	ВыполняемаяОперация.Вставить("Версия"   , "");
	
	Возврат ВыполняемаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьКомандуСервиса(ТаблицаКоманд, ИмяКоманды)
	
	ОписаниеКоманды = ТаблицаКоманд.НайтиСтроки(Новый Структура("ИмяКоманды", ИмяКоманды))[0];
	
	Если ОписаниеКоманды.СценарийВыполнения = ПредопределенноеЗначение("Перечисление.СценарииВыполненияКомандEDI.СкачатьВерсиюИзСервиса") Тогда
		ПараметрыURL = ДокументыEDIИнтеграцияКлиент.ПараметрыURL(ОписаниеКоманды.URL);
		
		ВерсияДокумента = "";
		ПараметрыURL.Свойство("versionId", ВерсияДокумента);
		
		ВыполняемаяОперация = НовыйВыполняемаяОперация();
		ВыполняемаяОперация.Команда  = ОписаниеКоманды.Команда;
		ВыполняемаяОперация.Версия   = ВерсияДокумента;
		ВыполняемаяОперация.Сценарий = ОписаниеКоманды.СценарийВыполнения;

		Закрыть(ВыполняемаяОперация);
		
	ИначеЕсли Не ОписаниеКоманды.СценарийВыполнения = ПредопределенноеЗначение("Перечисление.СценарииВыполненияКомандEDI.ПерейтиКСравнениюВерсий") Тогда
		
		ВыполняемаяОперация = НовыйВыполняемаяОперация();
		ВыполняемаяОперация.Команда  = ОписаниеКоманды.Команда;
		ВыполняемаяОперация.Сценарий = ОписаниеКоманды.СценарийВыполнения;
		
		Закрыть(ВыполняемаяОперация);
		
	ИначеЕсли ОписаниеКоманды.Команда = ПредопределенноеЗначение("Перечисление.КомандыПроцессаЗаказаEDI.ПерейтиКСравнениюВерсийЗаказаПоставщику")
		Или ОписаниеКоманды.Команда = ПредопределенноеЗначение("Перечисление.КомандыПроцессаЗаказаEDI.ПерейтиКСравнениюВерсийЗаказаКлиента") Тогда
		
		ПараметрыURL = ДокументыEDIИнтеграцияКлиент.ПараметрыURL(ОписаниеКоманды.URL);
		
		Версия             = "";
		ВерсияДляСравнения = "";
		ПараметрыURL.Свойство("fromVersionId" , Версия);
		ПараметрыURL.Свойство("toVersionId"   , ВерсияДляСравнения);
		
		РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраСравнение();
		
		СформироватьСравнениеВерсий();
		ОбновитьОтображениеФормы();

	ИначеЕсли ОписаниеКоманды.Команда = ПредопределенноеЗначение("Перечисление.КомандыПроцессаЗаказаEDI.ПерейтиКПросмотруВерсииЗаказаКлиента")
		Или ОписаниеКоманды.Команда = ПредопределенноеЗначение("Перечисление.КомандыПроцессаЗаказаEDI.ПерейтиКПросмотруВерсииЗаказаПоставщику") Тогда
		
		ПараметрыURL = ДокументыEDIИнтеграцияКлиент.ПараметрыURL(ОписаниеКоманды.URL);
		
		Версия             = "";
		ВерсияДляСравнения = "";
		ПараметрыURL.Свойство("versionId" , Версия);
		
		РежимПросмотра = РаботаСВерсиямиEDIКлиентСервер.РежимПросмотраПросмотр();

		СформироватьПредставлениеВерсии();
		ОбновитьОтображениеФормы();

	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область ДлительныеОперации

&НаКлиенте
Процедура ЗафиксироватьДлительнуюОперацию(ДлительнаяОперация)
	
	ДлительныеОперацииФормы.Добавить(ДлительнаяОперация.ИдентификаторЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьДлительнуюОперацию(ДлительнаяОперация)
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИндексДлительнойОперации = ДлительныеОперацииФормы.Найти(ДлительнаяОперация.ИдентификаторЗадания);
	
	Если ИндексДлительнойОперации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииФормы.Удалить(ИндексДлительнойОперации);
	
КонецПроцедуры

#КонецОбласти

#Область ПредставлениеДокумента

&НаСервере
Функция ПредставлениеДокумента(Документ)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат "";
	КонецЕсли;
	
	МетаданныеДокумента = Документ.Метаданные();
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Номер, Дата");
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПрефиксацияОбъектов") Тогда
		ОбщийМодульПрефиксацияОбъектовКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПрефиксацияОбъектовКлиентСервер");
		ДанныеДокумента.Номер = ОбщийМодульПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.Номер, 
			Истина, Истина);
	КонецЕсли;
	
	ПредставлениеОбъекта = МетаданныеДокумента.ПредставлениеОбъекта;
	
	Если ПустаяСтрока(ПредставлениеОбъекта) Тогда
		ПредставлениеОбъекта =МетаданныеДокумента.Представление();
	КонецЕсли;
	
	Возврат СтрШаблон(НСтр("ru = '%1 №%2 от %3'"), ПредставлениеОбъекта, ДанныеДокумента.Номер,
		Формат(ДанныеДокумента.Дата, "ДЛФ=DD;"));
	
КонецФункции

#КонецОбласти

#КонецОбласти