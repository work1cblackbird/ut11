
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	ЗаполнитьСписокВыбораДляДоговораПодключения();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоговорПодключенияКПлатежнойСистемеПриИзменении(Элемент)
	
	ОчиститьСообщения();
	ДоговорПодключенияКПлатежнойСистемеПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Загрузить(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура ЗагрузитьНаСервере()
	
	РезультатЗапросаОтчета = СверкаВзаиморасчетовСБПc2b.ЗапросОтчетаПоСверкеОпераций(
		Объект.НастройкаПодключения,
		НачалоДня(Объект.ДатаНач),
		КонецДня(Объект.ДатаКон));
	
	Если ЗначениеЗаполнено(РезультатЗапросаОтчета.КодОшибки) Тогда
		ОбщегоНазначения.СообщитьПользователю(РезультатЗапросаОтчета.СообщениеОбОшибке);
		Возврат;
	КонецЕсли;
	
	Если РезультатЗапросаОтчета.СтатусОперации <> СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииВыполнена() Тогда
		
		НастройкиВызова = СистемаБыстрыхПлатежейСлужебный.НовыйИтеративныйВызовОперации(180);
		
		Пока СистемаБыстрыхПлатежейСлужебный.ВозможенВызовОперации(НастройкиВызова) Цикл
			
			РезультатЗапросаСтатуса = СверкаВзаиморасчетовСБПc2b.СостояниеОтчетаПоСверкеОпераций(
				Объект.НастройкаПодключения,
				РезультатЗапросаОтчета.ПараметрыЗапроса,
				30);
			
			Если РезультатЗапросаСтатуса.СтатусОперации <> СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииВыполняется() Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЗначениеЗаполнено(РезультатЗапросаСтатуса.КодОшибки) Тогда
			ОбщегоНазначения.СообщитьПользователю(РезультатЗапросаСтатуса.СообщениеОбОшибке);
			Возврат;
		КонецЕсли;
		
	Иначе
		РезультатЗапросаСтатуса = РезультатЗапросаОтчета;
	КонецЕсли;
		
	СоздатьДокументОтчетБанкаПоОперациямЭквайринга(РезультатЗапросаСтатуса.ДанныеОпераций);
	
КонецПроцедуры

&НаСервере
Процедура ДоговорПодключенияКПлатежнойСистемеПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ДоговорПодключенияКПлатежнойСистеме) Тогда
		Объект.НастройкаПодключения = РозничныеПродажиЛокализация.НастройкаПодключения(Объект.ДоговорПодключенияКПлатежнойСистеме);
		Отказ = Ложь;
		Обработки.ЗагрузкаОтчетаБанкаПоСБП.ОбработкаПроверкиЗаполненияДоговораИНастройкиПодключения(Объект, Отказ, Истина);
	Иначе
		Объект.НастройкаПодключения = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументОтчетБанкаПоОперациямЭквайринга(ДанныеОпераций)
	
	НомерСтрокиПоТерминалу = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДоговорыЭквайринга.Ссылка КАК ДоговорЭквайринга,
	|	ДоговорыЭквайринга.Организация КАК Организация,
	|	ДоговорыЭквайринга.Организация.ИНН КАК ИННОрганизации,
	|	ДоговорыЭквайринга.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	ЕСТЬNULL(ДоговорыЭквайринга.БанковскийСчет.Банк.Код, ДоговорыЭквайринга.БанковскийСчет.БИКБанка) КАК БИКБанка,
	|	ДоговорыЭквайринга.БанковскийСчет.НомерСчета КАК НомерСчетаБанка,
	|	ДоговорыЭквайринга.СтатьяРасходов КАК СтатьяРасходов,
	|	ДоговорыЭквайринга.АналитикаРасходов КАК АналитикаРасходов,
	|	ДоговорыЭквайринга.ПодразделениеРасходов КАК Подразделение,
	|	ДоговорыЭквайринга.СпособОтраженияКомиссии = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияЭквайринговойКомиссии.ВОтчете) КАК ОтражатьКОмиссию,
	|	ДоговорыЭквайринга.ДетальнаяСверкаТранзакций КАК ДетальнаяСверкаТранзакций
	|ИЗ
	|	Справочник.ДоговорыЭквайринга КАК ДоговорыЭквайринга
	|ГДЕ
	|	ДоговорыЭквайринга.Ссылка = &ДоговорЭквайринга
	|";
	Запрос.УстановитьПараметр("ДоговорЭквайринга", Объект.ДоговорПодключенияКПлатежнойСистеме);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если Объект.ПроводитьДокументыПриЗагрузке Тогда
		РежимЗаписиДок = РежимЗаписиДокумента.Проведение;
	Иначе
		РежимЗаписиДок = РежимЗаписиДокумента.Запись;
	КонецЕсли;
	
	ДокументОбъект = Документы.ОтчетБанкаПоОперациямЭквайринга.СоздатьДокумент();
	ДокументОбъект.Дата              = ТекущаяДатаСеанса();
	ДокументОбъект.ДоговорЭквайринга = Объект.ДоговорПодключенияКПлатежнойСистеме;
	ДокументОбъект.Организация       = Выборка.Организация;
	ДокументОбъект.Валюта            = Выборка.Валюта;
	
	СуммаКомиссии = 0;
	
	Для Каждого ДанныеОперации Из ДанныеОпераций Цикл
		
		НомерСтрокиПоТерминалу = НомерСтрокиПоТерминалу + 1;
		
		Если Не ЗначениеЗаполнено(ДанныеОперации.ТипОперации) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru='В данных сверки банка по операциям СБП (""Строка отчета"" №%1) не указан тип операции. ""Строка отчета"" №%1 не загружен.'"),
					НомерСтрокиПоТерминалу));
			Продолжить;
		ИначеЕсли ВРег(СокрЛП(ДанныеОперации.ТипОперации)) = ВРег("Оплата") Тогда
			СтрТаблЧасть = ДокументОбъект.Покупки.Добавить();
		ИначеЕсли ВРег(СокрЛП(ДанныеОперации.ТипОперации)) = ВРег("Возврат") Тогда
			СтрТаблЧасть = ДокументОбъект.Возвраты.Добавить();
		Иначе
			Продолжить;
		КонецЕсли;
		
		СтрТаблЧасть.ДатаПлатежа             = МестноеВремя(ДанныеОперации.ДатаОперации, ЧасовойПоясСеанса());
		СтрТаблЧасть.Сумма                   = ДанныеОперации.Сумма;
		
		ПараметрыОперации = Новый Структура;
		ПараметрыОперации.Вставить("ИдентификаторОперации", ДанныеОперации.Идентификатор);
		ПараметрыОперации.Вставить("ИдентификаторОплаты", ДанныеОперации.ИдентификаторОплаты);
		СтрТаблЧасть.ИдентификаторОплатыСБП = ПереводыСБПc2b.ИдентификаторыОперации(ПараметрыОперации);
		
		СуммаКомиссии = СуммаКомиссии + ДанныеОперации.СуммаКомиссии;
		
	КонецЦикла;

	Если ДокументОбъект.Покупки.Количество() + ДокументОбъект.Возвраты.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='При загрузке данных сверки в документе ""Отчет банка по электронным платежным операциям"" не заполнены платежи. Документ не создан.'"));
		Возврат;
	КонецЕсли;

	Попытка
				
		Если Выборка.ОтражатьКомиссию И СуммаКомиссии <> 0 Тогда
			ДокументОбъект.СуммаКомиссии     = СуммаКомиссии;
			ДокументОбъект.СтатьяРасходов    = Выборка.СтатьяРасходов;
			ДокументОбъект.АналитикаРасходов = Выборка.АналитикаРасходов;
			ДокументОбъект.Подразделение     = Выборка.Подразделение;
		КонецЕсли;
		
		ДокументОбъект.ОтражатьКомиссию = Выборка.ОтражатьКомиссию;
		ДокументОбъект.ДетальнаяСверкаТранзакций = Выборка.ДетальнаяСверкаТранзакций;
		ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
		
		Если РежимЗаписиДок = РежимЗаписиДокумента.Проведение И Не ДокументОбъект.ПроверитьЗаполнение() Тогда
			РежимЗаписиДок = РежимЗаписиДокумента.Запись;
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДок);
		
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru='%1 документ ""Отчет банка по электронным платежным операциям"" №%2 от %3.'"),
			?(РежимЗаписиДок = РежимЗаписиДокумента.Запись, "Записан", "Проведен"),
			ДокументОбъект.Номер,
			ДокументОбъект.Дата));
			
	Исключение
		
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
			НСтр("ru='Документ ""Отчет банка по электронным платежным операциям"" №%1 от %2 не %3. Произошли ошибки при %4.'"),
			ДокументОбъект.Номер,
			ДокументОбъект.Дата,
			?(РежимЗаписиДок = РежимЗаписиДокумента.Запись, "записан", "проведен"),
			?(РежимЗаписиДок = РежимЗаписиДокумента.Запись, "записи", "проведении")));
			
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораДляДоговораПодключения()

	Элементы.ДоговорПодключенияКПлатежнойСистеме.СписокВыбора.Очистить();
	
	Если ПереводыСБПc2b.ПереводыСБПДоступны() Тогда
		ДействующиеДоговора = РегистрыСведений.НастройкиИнтеграцииСПлатежнымиСистемамиУТ.ДействующиеДоговораСНастройкамиИнтеграции();
		Для Каждого ДействующийДоговор Из ДействующиеДоговора Цикл
			Элементы.ДоговорПодключенияКПлатежнойСистеме.СписокВыбора.Добавить(ДействующийДоговор.Договор);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
