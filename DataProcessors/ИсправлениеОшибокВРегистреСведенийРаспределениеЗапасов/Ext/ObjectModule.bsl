#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОшибкиПроверкиКорректностиЗаписейРегистраСведенийРаспределениеЗапасовВФоне(Параметры, АдресРезультата) Экспорт
	
	ТаблицаОшибокВременная = Новый ТаблицаЗначений();
	ТаблицаОшибокВременная.Колонки.Добавить("Номенклатура");
	ТаблицаОшибокВременная.Колонки.Добавить("Характеристика");
	ТаблицаОшибокВременная.Колонки.Добавить("Склад");
	ТаблицаОшибокВременная.Колонки.Добавить("Назначение");
	Пакет = РаспределениеЗапасов.ОшибкиПроверкиКорректностиЗаписейРегистраСведенийРаспределениеЗапасов();
	Для Счетчик = 2 По Пакет.Количество() Цикл
		Таблица = Пакет[Счетчик - 1].Выгрузить();
		Для Каждого Строка Из Таблица Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаОшибокВременная.Добавить(), Строка);
		КонецЦикла;
	КонецЦикла;
	ТаблицаОшибокВременная.Свернуть("Номенклатура,Характеристика,Склад,Назначение");
	ПоместитьВоВременноеХранилище(ТаблицаОшибокВременная, АдресРезультата);
	
КонецПроцедуры

Процедура ИсправитьОшибкиРегистраСведенийРаспределениеЗапасовВФоне(Параметры, АдресРезультата) Экспорт
	
	Таблица = Параметры.Аналитики;
	
	СообщенияОбработки = Новый Массив();
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.ЗаказНаОтгрузку КАК Ссылка
		|ИЗ
		|	РегистрСведений.РаспределениеЗапасов КАК Таблица
		|ГДЕ
		|	Таблица.Номенклатура = &Номенклатура
		|		И Таблица.Характеристика = &Характеристика
		|		И Таблица.Склад = &Склад
		|		И Таблица.Назначение = &Назначение
		|		И Таблица.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО";
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		
		ТранзакцияЗафиксирована = Истина;
		НачатьТранзакцию();
		Попытка
			
			БлокировкаДанных = Новый БлокировкаДанных();
			
			ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.РаспределениеЗапасов");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура", СтрокаТаблицы.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", СтрокаТаблицы.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Склад", СтрокаТаблицы.Склад);
			БлокировкаДанных.Заблокировать();
			
			Запрос.УстановитьПараметр("Номенклатура", СтрокаТаблицы.Номенклатура);
			Запрос.УстановитьПараметр("Характеристика", СтрокаТаблицы.Характеристика);
			Запрос.УстановитьПараметр("Склад", СтрокаТаблицы.Склад);
			Запрос.УстановитьПараметр("Назначение", СтрокаТаблицы.Назначение);
			Заказы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			Набор = РаспределениеЗапасов.ОбновлениеИБПоТовару(СтрокаТаблицы);
			Набор.Записать();
			
			ЗаказыПосле = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			Для Каждого Ссылка Из ЗаказыПосле Цикл
				Заказы.Добавить(Ссылка);
			КонецЦикла;
			
			РаспределениеЗапасов.ИсключитьСсылкиТребующиеОтложенногоОбновления(Заказы);
			
			РегистрыКОтражению = СостоянияДокументов.РегистрыКОтражениюСостоянияЗаказов();
			РегистрыКОтражению.СостоянияЗаказовКлиентов    = Истина;
			РегистрыКОтражению.СостоянияВнутреннихЗаказов  = Истина;
			
			СостоянияДокументов.ДобавитьЗаданияКОтражениюСостоянияЗаказов(Неопределено, Заказы,, РегистрыКОтражению);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТранзакцияЗафиксирована = Ложь;
			ТекстСообщения = НСтр("ru = 'Задание распределения запасов завершилось неудачно по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			СобытиеЖурнала = НСтр("ru = 'Распределение запасов'", ОбщегоНазначения.КодОсновногоЯзыка());
			ЗаписьЖурналаРегистрации(СобытиеЖурнала,
			                         УровеньЖурналаРегистрации.Ошибка,
			                         Метаданные.РегистрыСведений.РаспределениеЗапасов,
			                         ,
			                         ТекстСообщения);
			
		КонецПопытки;
		
		Если ТранзакцияЗафиксирована Тогда
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Обработан. Товар: %1, %2, Склад: %3, Назначение:%4'"),
				СтрокаТаблицы.Номенклатура,
				СтрокаТаблицы.Характеристика,
				СтрокаТаблицы.Склад,
				СтрокаТаблицы.Назначение);
			СообщенияОбработки.Добавить(ТекстСообщения);
			
		Иначе
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Ошибка обработки. Товар: %1, %2, Склад: %3, Назначение:%4'"),
				СтрокаТаблицы.Номенклатура,
				СтрокаТаблицы.Характеристика,
				СтрокаТаблицы.Склад,
				СтрокаТаблицы.Назначение);
			СообщенияОбработки.Добавить(ТекстСообщения);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Результат = Новый Структура("Сообщения", СообщенияОбработки);
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры



#КонецОбласти

#КонецЕсли