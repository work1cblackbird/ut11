#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполнить по входящим данным.
// 
// Параметры:
//  Основание - СправочникСсылка.Склады - заполнение при выборе склада
//            - ОпределяемыйТип.ДокументыСПредварительнойПередачейМеждуОрганизациями - при открытии из основания
Процедура Заполнить(Основание) Экспорт
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.Склады") Тогда
		Склад = Основание;
		ЗаполнитьНастройкиПодсистем();
		ЗаполнитьДокументыОснования();
	Иначе
		ДокументОснование = Основание;
		Склад = СкладИзДокументаОснования(Основание);
		ЗаполнитьНастройкиПодсистем();
		ДокументыОснования.Очистить();
		ДокументыОснования.Добавить().ДокументОснование = Основание;
	КонецЕсли;
	ЗаполнитьТоварыОснования();
	ЗаполнитьШтрихкодыУпаковок();
	ЗаполнитьДокументыПередачи();
	РежимОжидания = ДокументыПередачи.Количество() > 0;
	
	Если Не РежимОжидания Тогда
		Обработки.ОформлениеПередачиТоваровМеждуОрганизациями.РаспределитьПоПартиям(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Требуется оформление передачи товаров.
// 
// Возвращаемое значение:
//  Булево - собственных остатков ГосИС не хватает для оформления документа
Функция ТребуетсяОформлениеПередачиТоваров() Экспорт
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Организация)
				И СтрокаТЧ.Организация <> СтрокаТЧ.ОрганизацияПолучатель Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// Возможно оформление передачи товаров.
// 
// Возвращаемое значение:
//  Булево - собственных остатков ГосИС не хватает для оформления документа, распределение остатков неуспешно
Функция ВозможноОформлениеПередачиТоваров() Экспорт
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		Если СтрокаТЧ.Организация <> СтрокаТЧ.ОрганизацияПолучатель Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполнить документы-основания по складу.
// 
Процедура ЗаполнитьДокументыОснования()
	
	МассивОснований = Обработки.ОформлениеПередачиТоваровМеждуОрганизациями.ДокументыКРасчетуПередачиМеждуОрганизациями(ЭтотОбъект);
	ДокументыОснования.Очистить();
	Для Каждого Основание Из МассивОснований Цикл
		ДокументыОснования.Добавить().ДокументОснование = Основание;
	КонецЦикла;
	
КонецПроцедуры

Функция СкладИзДокументаОснования(ДокументОснование)
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВнутреннееПотребление") Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Склад");
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Склад");
	
	
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Склад");
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Склад");
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваровХранителю") Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Склад");
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "СкладОтправитель");
	
	
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Склад");
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Склад");
	
	
	КонецЕсли;
	
	Возврат Склад;
	
КонецФункции

Процедура ЗаполнитьТоварыОснования()
	
	Товары.Загрузить(
		Обработки.ОформлениеПередачиТоваровМеждуОрганизациями.ТоварыКРасчетуПередачиМеждуОрганизациями(
			ДокументыОснования.ВыгрузитьКолонку("ДокументОснование"), Склад));
	
КонецПроцедуры

Процедура ЗаполнитьШтрихкодыУпаковок()
	
	ШтрихкодыУпаковок.Загрузить(
		Обработки.ОформлениеПередачиТоваровМеждуОрганизациями.ШтрихкодыУпаковокКПередачеМеждуОрганизациями(
			ДокументыОснования.ВыгрузитьКолонку("ДокументОснование"), НастройкиЕГАИС.Выгрузить()));
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиПодсистем()
	
	НастройкиЕГАИС.Очистить();
	НастройкиВЕТИС.Очистить();
	НастройкиСАТУРН.Очистить();
	НастройкиЗЕРНО.Очистить();
	НастройкиПередачиМеждуОрганизациями.Очистить();
	
	Если ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлассификаторОрганизацийЕГАИС.Ссылка     КАК ОрганизацияЕГАИС,
		|	КлассификаторОрганизацийЕГАИС.Контрагент КАК Организация
		|ИЗ
		|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|ГДЕ
		|	КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &Склад
		|	И КлассификаторОрганизацийЕГАИС.Контрагент ССЫЛКА Справочник.Организации
		|	И КлассификаторОрганизацийЕГАИС.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НастройкиЕГАИС.Добавить(), Выборка);
		КонецЦикла;
		Если НастройкиЕГАИС.Количество() = 1 Тогда
			НастройкиЕГАИС.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПодконтрольныхТоваровВЕТИС") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ХозяйствующиеСубъектыВЕТИСПредприятия.Предприятие КАК Предприятие,
		|	ХозяйствующиеСубъектыВЕТИС.Ссылка КАК ХозяйствующийСубъект,
		|	ХозяйствующиеСубъектыВЕТИС.Контрагент КАК Организация
		|ИЗ
		|	Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ХозяйствующиеСубъектыВЕТИСПредприятия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС КАК ХозяйствующиеСубъектыВЕТИС
		|		ПО ХозяйствующиеСубъектыВЕТИСПредприятия.Ссылка = ХозяйствующиеСубъектыВЕТИС.Ссылка
		|ГДЕ
		|	ХозяйствующиеСубъектыВЕТИСПредприятия.ТорговыйОбъект = &Склад
		|	И ХозяйствующиеСубъектыВЕТИС.Контрагент ССЫЛКА Справочник.Организации
		|	И ХозяйствующиеСубъектыВЕТИС.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НастройкиВЕТИС.Добавить(), Выборка);
		КонецЦикла;
		Если НастройкиВЕТИС.Количество() = 1 Тогда
			НастройкиВЕТИС.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПестицидовАгрохимикатовТукосмесейСАТУРН") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлассификаторОрганизацийСАТУРНМестаХранения.МестоХранения КАК МестоХранения,
		|	КлассификаторОрганизацийСАТУРН.Ссылка КАК ОрганизацияСАТУРН,
		|	ВЫБОР
		|		КОГДА КлассификаторОрганизацийСАТУРН.Контрагент ССЫЛКА Справочник.Организации
		|			И КлассификаторОрганизацийСАТУРН.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|		ТОГДА КлассификаторОрганизацийСАТУРН.Контрагент
		|		ИНАЧЕ Организации.Ссылка
		|	КОНЕЦ КАК Организация
		|ИЗ
		|	Справочник.КлассификаторОрганизацийСАТУРН.МестаХранения КАК КлассификаторОрганизацийСАТУРНМестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийСАТУРН КАК КлассификаторОрганизацийСАТУРН
		|		ПО КлассификаторОрганизацийСАТУРНМестаХранения.Ссылка = КлассификаторОрганизацийСАТУРН.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО Организации.ИНН = КлассификаторОрганизацийСАТУРН.ИНН
		|ГДЕ
		|	КлассификаторОрганизацийСАТУРНМестаХранения.ТорговыйОбъект = &Склад
		|	И НЕ (Организации.Ссылка ЕСТЬ NULL
		|		И ВЫРАЗИТЬ(КлассификаторОрганизацийСАТУРН.Контрагент КАК Справочник.Организации) = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НастройкиСАТУРН.Добавить(), Выборка);
		КонецЦикла;
		Если НастройкиСАТУРН.Количество() = 1 Тогда
			НастройкиСАТУРН.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетЗернаИПродуктовПереработкиЗЕРНО") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлючиАдресовЗЕРНООператорыАдреса.Ссылка КАК КлючАдреса
		|ИЗ
		|	Справочник.КлючиАдресовЗЕРНО.ОператорыАдреса КАК КлючиАдресовЗЕРНООператорыАдреса
		|ГДЕ
		|	КлючиАдресовЗЕРНООператорыАдреса.СкладКонтрагент = &Склад";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НастройкиЗЕРНО.Добавить(), Выборка);
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец КАК Организация,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец КАК ОрганизацияПолучатель,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа) КАК Запретить,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта КАК Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор КАК Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены КАК ВидЦены
	|ИЗ
	|	РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваровМеждуОрганизациями
	|ГДЕ
	|	НастройкаПередачиТоваровМеждуОрганизациями.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)";
	НастройкиПередачиМеждуОрганизациями.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьДокументыПередачи()
	
	ДокументыПередачи.Очистить();
	МассивОснований = Обработки.ОформлениеПередачиТоваровМеждуОрганизациями.ДокументыВПроцессеПередачиМеждуОрганизациями(ЭтотОбъект);
	Для Каждого Основание Из МассивОснований Цикл
		ЗаполнитьЗначенияСвойств(ДокументыПередачи.Добавить(), Основание);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли