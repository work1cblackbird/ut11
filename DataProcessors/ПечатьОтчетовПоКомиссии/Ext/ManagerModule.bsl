#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетКомиссионера") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОтчетКомиссионера",
			НСтр("ru='Отчет комиссионера'"),
			СформироватьПечатнуюФормуОтчетПоКомиссии(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетКомиссионераСписание") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОтчетКомиссионераСписание",
			НСтр("ru='Отчет комиссионера'"),
			СформироватьПечатнуюФормуОтчетПоКомиссииСписание(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетКомитентуОЗакупках") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОтчетКомитентуОЗакупках",
			НСтр("ru='Отчет комитенту о закупках'"),
			СформироватьПечатнуюФормуОтчетПоЗакупке(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, СтруктураТипов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

#Область Печать_ОтчетПоКомиссии

Функция СформироватьПечатнуюФормуОтчетПоКомиссии(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПоКомиссии";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		Если СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионераОСписании"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитентуОСписании"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитентуОЗакупках" Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссии(ПараметрыПечати,
																						СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОтчетПоКомиссииОПродажах(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуОтчетПоКомиссииСписание(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПоКомиссииСписание";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		Если СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионера"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитенту"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитентуОЗакупках" Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссииОСписании(ПараметрыПечати,
																								СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОтчетПоКомиссииОСписании(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати);
		КонецЦикла;
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьРеквизитыШапкиОтчетПоКомиссии(ДанныеПечати, Заголовок, Макет, ТабличныйДокумент)
	
	// Выводим общие реквизиты шапки
	СведенияОКомитенте		= ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Комитент, ДанныеПечати.Дата);
	СведенияОКомиссионере	= ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Комиссионер, ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент,
																	Макет,
																	ОбластьМакета,
																	ДанныеПечати.Ссылка);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(
		"ТекстЗаголовка",
		ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, Заголовок));
	СтруктураПараметров.Вставить(
		"ПредставлениеКомитента",
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомитенте, "ПолноеНаименование,"));
	СтруктураПараметров.Вставить(
		"ПредставлениеКомиссионера",
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ПолноеНаименование,"));
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

// Параметры:
//	ДанныеПечати        - ВыборкаИзРезультатаЗапроса -
//	ВыборкаПоДокументам - ВыборкаИзРезультатаЗапроса -
//	Макет               - ТабличныйДокумент - Макет печатной формы
//	ТабличныйДокумент   - ТабличныйДокумент -
//	ЕстьРНПТ            - Булево -
//
Процедура ЗаполнитьРеквизитыПодвалаОтчетПоКомисии(ДанныеПечати,
													ВыборкаПоДокументам,
													Макет,
													ТабличныйДокумент,
													ЕстьРНПТ)
	
	Если ЕстьРНПТ Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалРНПТ");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СуммаКомитентаВсего",			ВыборкаПоДокументам.СуммаКомитента);
	СтруктураПараметров.Вставить("СуммаПродажиВсего",			ВыборкаПоДокументам.СуммаПродажи);
	СтруктураПараметров.Вставить("СуммаВознагражденияВсего",	ВыборкаПоДокументам.СуммаВознаграждения);
	
	Если ВыборкаПоДокументам.СуммаПродажи < 0 Тогда
		ТекстИтоговаяСтрока = НСтр("ru = 'Всего возвращено наименований'", ОбщегоНазначения.КодОсновногоЯзыка());
	Иначе
		ТекстИтоговаяСтрока = НСтр("ru = 'Всего продано наименований'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	СтруктураПараметров.Вставить(
		"ИтоговаяСтрока",
		ТекстИтоговаяСтрока + " " + ВыборкаПоДокументам.Выбрать().Количество()
		+ ", " + НСтр("ru = 'на сумму'", ОбщегоНазначения.КодОсновногоЯзыка()) + " "
		+ ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоДокументам.СуммаПродажи, ДанныеПечати.Валюта));
	
	СтруктураПараметров.Вставить(
		"СуммаПрописью",
		РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ВыборкаПоДокументам.СуммаПродажи, ДанныеПечати.Валюта));
	
	Если ДанныеПечати.СуммаВознаграждения <> 0 Тогда
		СтруктураПараметров.Вставить(
			"СуммаВознаграждения",
			НСтр("ru = 'Сумма комиссионного вознаграждения составила'", ОбщегоНазначения.КодОсновногоЯзыка()) + " "
			+ ?(ДанныеПечати.СуммаВознаграждения < 0, НСтр("ru = 'минус'", ОбщегоНазначения.КодОсновногоЯзыка()) + " ", "")
			+ РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ДанныеПечати.СуммаВознаграждения, ДанныеПечати.Валюта));
	КонецЕсли;
	
	СтруктураПараметров.Вставить(
		"ПредставительКомитента",
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомитента, ДанныеПечати.Дата));
	
	СтруктураПараметров.Вставить(
		"ПредставительКомиссионера",
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомиссионера, ДанныеПечати.Дата));
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Функция ОбластиСтрокЗаполненныеПоПараметрам(НомерСтроки,
											СтрокаТовары,
											ПрослеживаемыеКомплектующие,
											Макет,
											ИмяКолонкиКодов,
											ЕстьРНПТ)
	
	ВыводимыеОбласти = Новый Массив;
	
	ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
	ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
							СтрокаТовары.ТоварНаименование,
							Строка(СтрокаТовары.Характеристика),
							,
							,
							ДопПараметрыПредставлениеНоменклатуры);
	
	ЦенаКомитента	= ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.СуммаКомитента / СтрокаТовары.Количество, 2, 1));
	ЦенаПродажи		= ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.СуммаПродажи / СтрокаТовары.Количество, 2, 1));
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НомерСтроки",			НомерСтроки);
	СтруктураПараметров.Вставить("ТоварНаименование",	ТоварНаименование);
	СтруктураПараметров.Вставить("ЦенаКомитента",		ЦенаКомитента);
	СтруктураПараметров.Вставить("ЦенаПродажи",			ЦенаПродажи);
	
	Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
		СтруктураПараметров.Вставить("Артикул", СтрокаТовары[ИмяКолонкиКодов]);
	КонецЕсли;
	
	ОбластьСтрока = ПолучитьОбластьСтрокиТоваров(Макет, ИмяКолонкиКодов, ЕстьРНПТ);
	ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
	ОбластьСтрока.Параметры.Заполнить(СтруктураПараметров);
	
	Если ЕстьРНПТ
		И (ТипЗнч(СтрокаТовары.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионера")
			Или ТипЗнч(СтрокаТовары.Ссылка) = Тип("ДокументСсылка.ОтчетКомитенту"))
		И ЗначениеЗаполнено(СтрокаТовары.НомерГТД)
		И СтрокаТовары.ТипНомераГТД <> Перечисления.ТипыНомеровГТД.НомерГТД Тогда
		
		Если СтрокаТовары.ТипНомераГТД = Перечисления.ТипыНомеровГТД.НомерРНПТ Тогда
			ДанныеНомераРНПТ = Новый Структура("НомерРНПТ, КоличествоПоРНПТ, ЕдиницаИзмеренияТНВЭД");
			ДанныеНомераРНПТ.НомерРНПТ				= СокрЛП(СтрокаТовары.НомерРНПТ);
			ДанныеНомераРНПТ.КоличествоПоРНПТ		= СтрокаТовары.КоличествоПоРНПТ;
			ДанныеНомераРНПТ.ЕдиницаИзмеренияТНВЭД	= СокрЛП(СтрокаТовары.ЕдиницаИзмеренияТНВЭД);
			
			ОбластьСтрока.Параметры.Заполнить(ДанныеНомераРНПТ);
			
			ВыводимыеОбласти.Добавить(ОбластьСтрока);
		Иначе
			ОтборСтрок = Новый Структура("НомерГТД", СтрокаТовары.НомерГТД);
			СтрокиКомплекта = ПрослеживаемыеКомплектующие.НайтиСтроки(ОтборСтрок);
			
			НомерСтрокиКомплекта = 1;
			
			Для Каждого СтрокаКомплекта Из СтрокиКомплекта Цикл
				ДанныеНомераРНПТ = Новый Структура("НомерРНПТ, КоличествоПоРНПТ, ЕдиницаИзмеренияТНВЭД");
				ДанныеНомераРНПТ.НомерРНПТ				= СокрЛП(СтрокаКомплекта.НомерРНПТ);
				ДанныеНомераРНПТ.КоличествоПоРНПТ		= СтрокаТовары.Количество * СтрокаКомплекта.КоличествоПоРНПТ;
				ДанныеНомераРНПТ.ЕдиницаИзмеренияТНВЭД	= СокрЛП(СтрокаКомплекта.ЕдиницаИзмеренияТНВЭД);
				
				Если НомерСтрокиКомплекта = 1 Тогда
					ОбластьСтрока.Параметры.Заполнить(ДанныеНомераРНПТ);
					
					ВыводимыеОбласти.Добавить(ОбластьСтрока);
				Иначе
					ОбластьСтрокаКомплектующие = ПолучитьОбластьСтрокиКомплектующих(Макет, ИмяКолонкиКодов);
					ОбластьСтрокаКомплектующие.Параметры.Заполнить(ДанныеНомераРНПТ);
					
					ВыводимыеОбласти.Добавить(ОбластьСтрокаКомплектующие);
				КонецЕсли;
				
				НомерСтрокиКомплекта = НомерСтрокиКомплекта + 1;
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		Если ЕстьРНПТ Тогда
			ДанныеНомераРНПТ = Новый Структура("НомерРНПТ, КоличествоПоРНПТ, ЕдиницаИзмеренияТНВЭД",
												"-", 0, "-");
			ОбластьСтрока.Параметры.Заполнить(ДанныеНомераРНПТ);
		КонецЕсли;
		
		ВыводимыеОбласти.Добавить(ОбластьСтрока);
	КонецЕсли;
	
	Возврат ВыводимыеОбласти;
	
КонецФункции

Функция ОбластиСтрокЗаполненныеПоПараметрамДляДокументовСписания(НомерСтроки,
																СтрокаТовары,
																ПрослеживаемыеКомплектующие,
																Макет,
																ИмяКолонкиКодов,
																ЕстьРНПТ)
	
	ВыводимыеОбласти = Новый Массив;
	
	ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
	ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
							СтрокаТовары.ТоварНаименование,
							Строка(СтрокаТовары.Характеристика),
							,
							,
							ДопПараметрыПредставлениеНоменклатуры);
	
	Цена = ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.Сумма / СтрокаТовары.Количество, 2, 1));
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НомерСтроки",			НомерСтроки);
	СтруктураПараметров.Вставить("ТоварНаименование",	ТоварНаименование);
	СтруктураПараметров.Вставить("Цена",				Цена);
	
	Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
		СтруктураПараметров.Вставить("Артикул", СтрокаТовары[ИмяКолонкиКодов]);
	КонецЕсли;
	
	ОбластьСтрока = ПолучитьОбластьСтрокиТоваров(Макет, ИмяКолонкиКодов, ЕстьРНПТ);
	ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
	ОбластьСтрока.Параметры.Заполнить(СтруктураПараметров);
	
	Если ЕстьРНПТ
		И (ТипЗнч(СтрокаТовары.Ссылка) = Тип("ДокументСсылка.ОтчетКомитентуОСписании")
			Или ТипЗнч(СтрокаТовары.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании"))
		И ЗначениеЗаполнено(СтрокаТовары.НомерГТД)
		И СтрокаТовары.ТипНомераГТД <> Перечисления.ТипыНомеровГТД.НомерГТД Тогда
		
		Если СтрокаТовары.ТипНомераГТД = Перечисления.ТипыНомеровГТД.НомерРНПТ Тогда
			ДанныеНомераРНПТ = Новый Структура("НомерРНПТ, КоличествоПоРНПТ, ЕдиницаИзмеренияТНВЭД");
			ДанныеНомераРНПТ.НомерРНПТ				= СокрЛП(СтрокаТовары.НомерРНПТ);
			ДанныеНомераРНПТ.КоличествоПоРНПТ		= СтрокаТовары.КоличествоПоРНПТ;
			ДанныеНомераРНПТ.ЕдиницаИзмеренияТНВЭД	= СокрЛП(СтрокаТовары.ЕдиницаИзмеренияТНВЭД);
			
			ОбластьСтрока.Параметры.Заполнить(ДанныеНомераРНПТ);
			
			ВыводимыеОбласти.Добавить(ОбластьСтрока);
		Иначе
			ОтборСтрок = Новый Структура("НомерГТД", СтрокаТовары.НомерГТД);
			СтрокиКомплекта = ПрослеживаемыеКомплектующие.НайтиСтроки(ОтборСтрок);
			
			НомерСтрокиКомплекта = 1;
			
			Для Каждого СтрокаКомплекта Из СтрокиКомплекта Цикл
				ДанныеНомераРНПТ = Новый Структура("НомерРНПТ, КоличествоПоРНПТ, ЕдиницаИзмеренияТНВЭД");
				ДанныеНомераРНПТ.НомерРНПТ				= СокрЛП(СтрокаКомплекта.НомерРНПТ);
				ДанныеНомераРНПТ.КоличествоПоРНПТ		= СтрокаТовары.Количество * СтрокаКомплекта.КоличествоПоРНПТ;
				ДанныеНомераРНПТ.ЕдиницаИзмеренияТНВЭД	= СокрЛП(СтрокаКомплекта.ЕдиницаИзмеренияТНВЭД);
				
				Если НомерСтрокиКомплекта = 1 Тогда
					ОбластьСтрока.Параметры.Заполнить(ДанныеНомераРНПТ);
					
					ВыводимыеОбласти.Добавить(ОбластьСтрока);
				Иначе
					ОбластьСтрокаКомплектующие = ПолучитьОбластьСтрокиКомплектующих(Макет, ИмяКолонкиКодов);
					ОбластьСтрокаКомплектующие.Параметры.Заполнить(ДанныеНомераРНПТ);
					
					ВыводимыеОбласти.Добавить(ОбластьСтрокаКомплектующие);
				КонецЕсли;
				
				НомерСтрокиКомплекта = НомерСтрокиКомплекта + 1;
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		Если ЕстьРНПТ Тогда
			ДанныеНомераРНПТ = Новый Структура("НомерРНПТ, КоличествоПоРНПТ, ЕдиницаИзмеренияТНВЭД",
												"-", 0, "-");
			ОбластьСтрока.Параметры.Заполнить(ДанныеНомераРНПТ);
		КонецЕсли;
		
		ВыводимыеОбласти.Добавить(ОбластьСтрока);
	КонецЕсли;
	
	Возврат ВыводимыеОбласти;
	
КонецФункции

Функция ТаблицаДляПечатиОтчетаСРНПТ(ДокСсылка)
	
	ИменаИзмерений	= "АналитикаУчетаНоменклатуры, Номенклатура, Характеристика, Упаковка, Цена, ЦенаПродажи";
	ИменаРесурсов	= "КоличествоУпаковок, Количество, СуммаСНДС, СуммаПродажи, СуммаВознаграждения";
	
	Товары = ДокСсылка.Товары.Выгрузить(); 
	Товары.Свернуть(ИменаИзмерений, ИменаРесурсов);
	
	ТоварыСвернутыеБезЦены = Товары.Скопировать();
	ТоварыСвернутыеБезЦены.Свернуть("АналитикаУчетаНоменклатуры", "КоличествоУпаковок, Количество");
	
	ВидыЗапасов = ДокСсылка.ВидыЗапасов.Выгрузить();
	ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, НомерГТД", "Количество, КоличествоПоРНПТ");
	ВидыЗапасов.Колонки.Добавить("ОстатокПоСтроке");
	ВидыЗапасов.Колонки.Добавить("ОстатокПоРНПТ");
	
	Для Каждого СтрокаЗапасов Из ВидыЗапасов Цикл
		СтрокаЗапасов.ОстатокПоСтроке	= СтрокаЗапасов.Количество;
		СтрокаЗапасов.ОстатокПоРНПТ		= СтрокаЗапасов.КоличествоПоРНПТ;
	КонецЦикла;
	
	ТаблицаДляПечатиОтчетаСРНПТ = Новый ТаблицаЗначений();
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("Ссылка");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("Номенклатура");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("ТоварНаименование");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("Код");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("Артикул");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("ЕдиницаИзмеренияНаименование");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("ЕдиницаИзмеренияТНВЭД");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("Характеристика");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("Упаковка");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("Количество");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("КоличествоПоРНПТ");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("НомерГТД");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("НомерРНПТ");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("ТипНомераГТД");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("Цена");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("ЦенаПродажи");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("СуммаКомитента");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("СуммаПродажи");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("СуммаВознаграждения");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("ДатаСчетаФактуры");
	ТаблицаДляПечатиОтчетаСРНПТ.Колонки.Добавить("Покупатель");
	
	НомерСтроки = 0;
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Структура = Новый Структура();
		Структура.Вставить("АналитикаУчетаНоменклатуры", СтрокаТовары.АналитикаУчетаНоменклатуры);
		СтрокиВидовЗапасов = ВидыЗапасов.НайтиСтроки(Структура);
		СтрокиСвернутыеБезЦены = ТоварыСвернутыеБезЦены.НайтиСтроки(Структура);
		СтруктураДляРаспределения = Новый Структура();
		СтруктураДляРаспределения.Вставить("Номенклатура",СтрокаТовары.Номенклатура);
		СтруктураДляРаспределения.Вставить("Характеристика",СтрокаТовары.Характеристика);
		ТаблицаРаспределенныхСтроки = ТаблицаДляПечатиОтчетаСРНПТ.Скопировать();
		ТаблицаРаспределенныхСтроки.Свернуть("Номенклатура, Характеристика","Количество");
		РаспределенныеСтроки  = ТаблицаРаспределенныхСтроки.НайтиСтроки(СтруктураДляРаспределения);
		
		Если РаспределенныеСтроки.Количество()= 0 Тогда 
			РаспределенноеКоличество = 0;
		Иначе
			РаспределенноеКоличество = РаспределенныеСтроки[0].Количество;
		КонецЕсли;
		КоличествоУпаковокОстаток = СтрокиСвернутыеБезЦены[0].КоличествоУпаковок - РаспределенноеКоличество;
		РаспределенноеКоличествоПоСтрокеТоваров =0;
		
		Для каждого СтрокаВидовЗапасов Из СтрокиВидовЗапасов Цикл
			Если СтрокаВидовЗапасов.ОстатокПоСтроке>0 И РаспределенноеКоличествоПоСтрокеТоваров<СтрокаТовары.КоличествоУпаковок Тогда
				НомерСтроки = НомерСтроки+1;
				НоваяСтрока = ТаблицаДляПечатиОтчетаСРНПТ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовары,
				"Номенклатура,Характеристика,Упаковка,Цена");
				
				ТоварНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"НаименованиеПолное");
				Код = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"Код"); 
				Артикул = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"Артикул");
				ЕдиницаИзмеренияНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"ЕдиницаИзмерения");
				КодТНВЭД =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"КодТНВЭД");				
				Если КодТНВЭД<>Неопределено Тогда
					ЕдиницаИзмеренияТНВЭД =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КодТНВЭД,"ЕдиницаИзмерения"); 
				КонецЕсли;
				Если ЕдиницаИзмеренияНоменклатуры<>Неопределено Тогда
					ЕдиницаИзмеренияНоменклатурыНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЕдиницаИзмеренияНоменклатуры,"Наименование");
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СтрокаТовары.Упаковка) Тогда
					ЕдиницаИзмеренияНаименование = ЕдиницаИзмеренияНоменклатурыНаименование;
				Иначе
					ЕдиницаИзмеренияНаименование = СтрокаТовары.Упаковка;
				КонецЕсли;
				
				НоваяСтрока.Ссылка = ДокСсылка;
				НоваяСтрока.ТоварНаименование = ТоварНаименование;
				НоваяСтрока.Код = Код; 
				НоваяСтрока.Артикул = Артикул; 
				НоваяСтрока.ЕдиницаИзмеренияНаименование = ЕдиницаИзмеренияНаименование; 
				
				// распределим количество упаковок
				КоличествоУпаковокТовары = СтрокаТовары.КоличествоУпаковок;
				КоличествоЕдиницТовары = СтрокаТовары.Количество;
				КоличествоЕдиницВидыЗапасов = СтрокаВидовЗапасов.ОстатокПоСтроке;
				Если КоличествоЕдиницВидыЗапасов<>0 Тогда  
					Пропорция = КоличествоЕдиницТовары/КоличествоЕдиницВидыЗапасов;
				Иначе
					Пропорция = 1;
				КонецЕсли;
				Если Пропорция>1 Тогда
					КоличествоУпаковокВидыЗапасов = Цел(КоличествоУпаковокТовары/Пропорция);
				Иначе
					КоличествоУпаковокВидыЗапасов = Цел(КоличествоЕдиницВидыЗапасов*Пропорция);
				КонецЕсли;
				Если РаспределенноеКоличество+КоличествоУпаковокВидыЗапасов <= КоличествоУпаковокОстаток Тогда
					НоваяСтрока.Количество = КоличествоУпаковокВидыЗапасов;
				Иначе
					НоваяСтрока.Количество = КоличествоУпаковокОстаток;
				КонецЕсли;
				РаспределенноеКоличество = РаспределенноеКоличество + НоваяСтрока.Количество;
				РаспределенноеКоличествоПоСтрокеТоваров = РаспределенноеКоличествоПоСтрокеТоваров +  НоваяСтрока.Количество;
				СтрокаВидовЗапасов.ОстатокПоСтроке = СтрокаВидовЗапасов.ОстатокПоСтроке - КоличествоЕдиницТовары; 
				КоличествоУпаковокОстаток = КоличествоУпаковокОстаток - НоваяСтрока.Количество;
				
				ПропорцияПоРНПТ = КоличествоЕдиницВидыЗапасов/КоличествоЕдиницТовары;
				
				Если ПропорцияПоРНПТ>1 Тогда
					КоличествоПоРНПТ = Цел(СтрокаВидовЗапасов.КоличествоПоРНПТ/ПропорцияПоРНПТ);
				Иначе
					КоличествоПоРНПТ  = СтрокаВидовЗапасов.ОстатокПоРНПТ;
				КонецЕсли;
				
				СтрокаВидовЗапасов.ОстатокПоРНПТ = СтрокаВидовЗапасов.ОстатокПоРНПТ - КоличествоПоРНПТ;
				
				НоваяСтрока.КоличествоПоРНПТ = КоличествоПоРНПТ;
				НоваяСтрока.НомерГТД = СтрокаВидовЗапасов.НомерГТД;
				Если КодТНВЭД<>Неопределено И ЕдиницаИзмеренияТНВЭД<>Неопределено Тогда
					НоваяСтрока.ЕдиницаИзмеренияТНВЭД = ЕдиницаИзмеренияТНВЭД;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(НоваяСтрока.НомерГТД) Тогда
					РеквизитыНомераГТД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаВидовЗапасов.НомерГТД,
																					"Код, ТипНомераГТД");
					НоваяСтрока.НомерРНПТ		= РеквизитыНомераГТД.Код;
					НоваяСтрока.ТипНомераГТД	= РеквизитыНомераГТД.ТипНомераГТД;
				КонецЕсли;
				
				НоваяСтрока.СуммаКомитента = (СтрокаТовары.СуммаСНДС/СтрокаТовары.КоличествоУпаковок)* НоваяСтрока.Количество;
				НоваяСтрока.СуммаПродажи =  (СтрокаТовары.СуммаПродажи/СтрокаТовары.КоличествоУпаковок)* НоваяСтрока.Количество;
				НоваяСтрока.СуммаВознаграждения =  (СтрокаТовары.СуммаВознаграждения/СтрокаТовары.КоличествоУпаковок)* НоваяСтрока.Количество;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаДляПечатиОтчетаСРНПТ;
	
КонецФункции

Функция ТаблицаДляПечатиОтчетаОСписанииСРНПТ(ДокСсылка)
	
	ИменаИзмерений	= "АналитикаУчетаНоменклатуры, Номенклатура, Характеристика, Упаковка, Цена";
	ИменаРесурсов	= "КоличествоУпаковок, Количество";
	
	Товары = ДокСсылка.Товары.Выгрузить();
	Товары.Свернуть(ИменаИзмерений, ИменаРесурсов);
	
	ТоварыСвернутыеБезЦены = Товары.Скопировать();
	ТоварыСвернутыеБезЦены.Свернуть("АналитикаУчетаНоменклатуры", "КоличествоУпаковок, Количество");
	
	ВидыЗапасов = ДокСсылка.ВидыЗапасов.Выгрузить();
	ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, НомерГТД", "Количество, КоличествоПоРНПТ");
	ВидыЗапасов.Колонки.Добавить("ОстатокПоСтроке");
	ВидыЗапасов.Колонки.Добавить("ОстатокПоРНПТ");
	
	Для Каждого Стр Из ВидыЗапасов Цикл
		Стр.ОстатокПоСтроке = Стр.Количество;
		Стр.ОстатокПоРНПТ = Стр.КоличествоПоРНПТ;
	КонецЦикла;
	
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ = Новый ТаблицаЗначений();
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("Ссылка");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("Номенклатура");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("ТоварНаименование");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("Код");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("Артикул");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("ЕдиницаИзмеренияНаименование");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("ЕдиницаИзмеренияТНВЭД");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("Характеристика");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("Упаковка");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("Количество");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("КоличествоПоРНПТ");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("НомерГТД");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("НомерРНПТ");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("ТипНомераГТД");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("Цена");
	ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Колонки.Добавить("Сумма");
	
	НомерСтроки = 0;
	
	Для каждого СтрокаТовары Из Товары Цикл
		
		Структура = Новый Структура();
		Структура.Вставить("АналитикаУчетаНоменклатуры", СтрокаТовары.АналитикаУчетаНоменклатуры);
		СтрокиВидовЗапасов = ВидыЗапасов.НайтиСтроки(Структура);
		СтрокиСвернутыеБезЦены = ТоварыСвернутыеБезЦены.НайтиСтроки(Структура);
		СтруктураДляРаспределения = Новый Структура();
		СтруктураДляРаспределения.Вставить("Номенклатура",СтрокаТовары.Номенклатура);
		СтруктураДляРаспределения.Вставить("Характеристика",СтрокаТовары.Характеристика);
		ТаблицаРаспределенныхСтроки = ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Скопировать();
		ТаблицаРаспределенныхСтроки.Свернуть("Номенклатура, Характеристика","Количество");
		РаспределенныеСтроки  = ТаблицаРаспределенныхСтроки.НайтиСтроки(СтруктураДляРаспределения);
		
		Если РаспределенныеСтроки.Количество()= 0 Тогда 
			РаспределенноеКоличество = 0;
		Иначе
			РаспределенноеКоличество = РаспределенныеСтроки[0].Количество;
		КонецЕсли;
		КоличествоУпаковокОстаток = СтрокиСвернутыеБезЦены[0].КоличествоУпаковок - РаспределенноеКоличество;
		РаспределенноеКоличествоПоСтрокеТоваров =0;
		
		Для каждого СтрокаВидовЗапасов Из СтрокиВидовЗапасов Цикл
			Если СтрокаВидовЗапасов.ОстатокПоСтроке>0 И РаспределенноеКоличествоПоСтрокеТоваров<СтрокаТовары.КоличествоУпаковок Тогда
				НомерСтроки = НомерСтроки+1;
				НоваяСтрока = ТаблицаДляПечатиОтчетаОСписанииСРНПТ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовары,
				"Номенклатура,Характеристика,Упаковка,Цена");
				
				ТоварНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"НаименованиеПолное");
				Код = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"Код"); 
				Артикул = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"Артикул");
				ЕдиницаИзмеренияНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"ЕдиницаИзмерения");
				КодТНВЭД =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура,"КодТНВЭД");				
				Если КодТНВЭД<>Неопределено Тогда
					ЕдиницаИзмеренияТНВЭД =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КодТНВЭД,"ЕдиницаИзмерения"); 
				КонецЕсли;
				Если ЕдиницаИзмеренияНоменклатуры<>Неопределено Тогда
					ЕдиницаИзмеренияНоменклатурыНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЕдиницаИзмеренияНоменклатуры,"Наименование");
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СтрокаТовары.Упаковка) Тогда
					ЕдиницаИзмеренияНаименование = ЕдиницаИзмеренияНоменклатурыНаименование; 	
				Иначе
					ЕдиницаИзмеренияНаименование = СтрокаТовары.Упаковка;
				КонецЕсли;
				
				НоваяСтрока.Ссылка = ДокСсылка;
				НоваяСтрока.ТоварНаименование = ТоварНаименование; 
				НоваяСтрока.Код = Код; 
				НоваяСтрока.Артикул = Артикул; 
				НоваяСтрока.ЕдиницаИзмеренияНаименование = ЕдиницаИзмеренияНаименование; 
				
				// распределим количество упаковок
				КоличествоУпаковокТовары = СтрокаТовары.КоличествоУпаковок;
				КоличествоЕдиницТовары = СтрокаТовары.Количество;
				КоличествоЕдиницВидыЗапасов = СтрокаВидовЗапасов.ОстатокПоСтроке;
				Если КоличествоЕдиницВидыЗапасов<>0 Тогда  
					Пропорция = КоличествоЕдиницТовары/КоличествоЕдиницВидыЗапасов;
				Иначе
					Пропорция = 1;
				КонецЕсли;
				Если Пропорция>1 Тогда
					КоличествоУпаковокВидыЗапасов = Цел(КоличествоУпаковокТовары/Пропорция);
				Иначе
					КоличествоУпаковокВидыЗапасов = Цел(КоличествоЕдиницВидыЗапасов*Пропорция);
				КонецЕсли;
				Если РаспределенноеКоличество+КоличествоУпаковокВидыЗапасов <= КоличествоУпаковокОстаток Тогда
					НоваяСтрока.Количество = КоличествоУпаковокВидыЗапасов;
				Иначе
					НоваяСтрока.Количество = КоличествоУпаковокОстаток;
				КонецЕсли;
				РаспределенноеКоличество = РаспределенноеКоличество + НоваяСтрока.Количество;
				РаспределенноеКоличествоПоСтрокеТоваров = РаспределенноеКоличествоПоСтрокеТоваров +  НоваяСтрока.Количество;
				СтрокаВидовЗапасов.ОстатокПоСтроке = СтрокаВидовЗапасов.ОстатокПоСтроке - КоличествоЕдиницТовары; 
				КоличествоУпаковокОстаток = КоличествоУпаковокОстаток - НоваяСтрока.Количество;
				
				ПропорцияПоРНПТ = КоличествоЕдиницВидыЗапасов/КоличествоЕдиницТовары;
				
				Если ПропорцияПоРНПТ>1 Тогда
					КоличествоПоРНПТ = Цел(СтрокаВидовЗапасов.КоличествоПоРНПТ/ПропорцияПоРНПТ);
				Иначе
					КоличествоПоРНПТ  = СтрокаВидовЗапасов.ОстатокПоРНПТ;
				КонецЕсли;
				
				СтрокаВидовЗапасов.ОстатокПоРНПТ = СтрокаВидовЗапасов.ОстатокПоРНПТ - КоличествоПоРНПТ;
				
				НоваяСтрока.КоличествоПоРНПТ = КоличествоПоРНПТ;
				НоваяСтрока.НомерГТД = СтрокаВидовЗапасов.НомерГТД;
				Если КодТНВЭД<>Неопределено И ЕдиницаИзмеренияТНВЭД<>Неопределено Тогда
					НоваяСтрока.ЕдиницаИзмеренияТНВЭД = ЕдиницаИзмеренияТНВЭД;
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(НоваяСтрока.НомерГТД) Тогда
					РеквизитыНомераГТД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаВидовЗапасов.НомерГТД,
																					"Код, ТипНомераГТД");
					НоваяСтрока.НомерРНПТ		= РеквизитыНомераГТД.Код;
					НоваяСтрока.ТипНомераГТД	= РеквизитыНомераГТД.ТипНомераГТД;
				КонецЕсли;
				
				НоваяСтрока.Сумма = НоваяСтрока.Количество*СтрокаТовары.Цена; 
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаДляПечатиОтчетаОСписанииСРНПТ;
	
КонецФункции

// Параметры:
//	ТабличныйДокумент - ТабличныйДокумент -
//	ДанныеДляПечати   - Структура - Содержит в себе данные по шапке документа, табличной части, заголовку отчета:
//		* РезультатПоШапке          - РезультатЗапроса -
//		* РезультатПоТабличнойЧасти - РезультатЗапроса -
//		* Заголовок                 - Строка -
//	ОбъектыПечати     - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//
Процедура ЗаполнитьТабличныйДокументОтчетПоКомиссииОПродажах(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати) 
	
	Заголовок			= ДанныеДляПечати.Заголовок;
	ДанныеПечати		= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам	= ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДанныеПрослеживаемостиДокументов	= Неопределено;
	ПрослеживаемыеКомплектующие			= Неопределено;
	
	ДанныеДляПечати.Свойство("ДанныеПрослеживаемостиДокументов",	ДанныеПрослеживаемостиДокументов);
	ДанныеДляПечати.Свойство("ПрослеживаемыеКомплектующие",			ПрослеживаемыеКомплектующие);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОтчетовПоКомиссии.ПФ_MXL_ОтчетПоКомиссии");
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов();
	ИмяКолонкиКодов				= КолонкаКодов.ИмяКолонки;
	ПредставлениеКолонкиКодов	= КолонкаКодов.ПредставлениеКолонки;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент		= Ложь;
		НомерСтрокиНачало	= ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаПоДокументам.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		
		Если ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			
			// Выводим общие реквизиты шапки
			ЗаполнитьРеквизитыШапкиОтчетПоКомиссии(ДанныеПечати, Заголовок, Макет, ТабличныйДокумент);
			
			ЕстьРНПТ = Ложь;
			
			Если ДанныеПрослеживаемостиДокументов <> Неопределено Тогда
				СтрокиДокументов = ДанныеПрослеживаемостиДокументов.НайтиСтроки(СтруктураПоиска);
				Если СтрокиДокументов.Количество() > 0 Тогда
					ЕстьРНПТ = СтрокиДокументов[0].ЕстьРНПТ;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура;
			
			// Выводим заголовок таблицы
			Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
				Если ЕстьРНПТ Тогда
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодамиРНПТ");
				Иначе
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодами");
				КонецЕсли;
				
				СтруктураПараметров.Вставить("ИмяКолонкиКодов", ПредставлениеКолонкиКодов);
			Иначе
				Если ЕстьРНПТ Тогда
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыРНПТ");
				Иначе
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
				КонецЕсли;
			КонецЕсли;
			
			СтруктураПараметров.Вставить("Валюта", ДанныеПечати.Валюта);
			
			ЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			НомерСтроки = 0;
			
			Если ЕстьРНПТ
				И ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ОтчетКомитенту") Тогда
				
				ТаблицаТоваровСРНПТ = ТаблицаДляПечатиОтчетаСРНПТ(ДанныеПечати.Ссылка);
				
				Для Каждого СтрокаТовары Из ТаблицаТоваровСРНПТ Цикл
					НомерСтроки = НомерСтроки + 1;
					
					ВыводимыеОбласти = ОбластиСтрокЗаполненныеПоПараметрам(
											НомерСтроки,
											СтрокаТовары,
											ПрослеживаемыеКомплектующие,
											Макет,
											ИмяКолонкиКодов,
											Истина);
					
					Для Каждого ОбластьМакета Из ВыводимыеОбласти Цикл
						ТабличныйДокумент.Вывести(ОбластьМакета);
					КонецЦикла;
				КонецЦикла;
				
			Иначе
				
				СтрокаТовары = ВыборкаПоДокументам.Выбрать();
				
				Пока СтрокаТовары.Следующий() Цикл
					НомерСтроки = НомерСтроки + 1;
					
					ВыводимыеОбласти = ОбластиСтрокЗаполненныеПоПараметрам(
											НомерСтроки,
											СтрокаТовары,
											ПрослеживаемыеКомплектующие,
											Макет,
											ИмяКолонкиКодов,
											ЕстьРНПТ);
					
					Для Каждого ОбластьМакета Из ВыводимыеОбласти Цикл
						ТабличныйДокумент.Вывести(ОбластьМакета);
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
			
			ЗаполнитьРеквизитыПодвалаОтчетПоКомисии(
				ДанныеПечати,
				ВыборкаПоДокументам,
				Макет,
				ТабличныйДокумент,
				ЕстьРНПТ);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабличныйДокумент,
				НомерСтрокиНачало,
				ОбъектыПечати,
				ДанныеПечати.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//	ДанныеПечати        - ВыборкаИзРезультатаЗапроса -
//	ВыборкаПоДокументам - ВыборкаИзРезультатаЗапроса -
//	Макет               - ТабличныйДокумент - Макет печатной формы
//	ТабличныйДокумент   - ТабличныйДокумент -
//	ЕстьРНПТ            - Булево -
//
Процедура ЗаполнитьРеквизитыПодвалаОтчетПоКомиссииОСписании(ДанныеПечати,
															ВыборкаПоДокументам,
															Макет,
															ТабличныйДокумент,
															ЕстьРНПТ)
	
	Если ЕстьРНПТ Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалРНПТ");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СуммаВсего", ВыборкаПоДокументам.Сумма);
	
	СтруктураПараметров.Вставить(
		"ИтоговаяСтрока",
		НСтр("ru = 'Всего списано наименований'", ОбщегоНазначения.КодОсновногоЯзыка()) + " "
		+ ВыборкаПоДокументам.Выбрать().Количество()
		+ ?(ВыборкаПоДокументам.Сумма <> 0, ", " + НСтр("ru = 'на сумму'", ОбщегоНазначения.КодОсновногоЯзыка()) + " ", "")
		+ ?(ВыборкаПоДокументам.Сумма <> 0, ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоДокументам.Сумма, ДанныеПечати.Валюта), ""));
	
	СтруктураПараметров.Вставить(
		"СуммаПрописью",
		РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ВыборкаПоДокументам.Сумма, ДанныеПечати.Валюта));
	
	СтруктураПараметров.Вставить(
		"ПредставительКомитента",
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомитента, ДанныеПечати.Дата));
	
	СтруктураПараметров.Вставить(
		"ПредставительКомиссионера",
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомиссионера, ДанныеПечати.Дата));
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

// Параметры:
//	ТабличныйДокумент - ТабличныйДокумент -
//	ДанныеДляПечати   - Структура - Содержит в себе данные по шапке документа, табличной части, заголовку отчета:
//		* РезультатПоШапке          - РезультатЗапроса -
//		* РезультатПоТабличнойЧасти - РезультатЗапроса -
//		* Заголовок                 - Строка -
//	ОбъектыПечати     - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//
Процедура ЗаполнитьТабличныйДокументОтчетПоКомиссииОСписании(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати) 
	
	Заголовок			= ДанныеДляПечати.Заголовок;
	ДанныеПечати		= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам	= ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДанныеПрослеживаемостиДокументов	= Неопределено;
	ПрослеживаемыеКомплектующие			= Неопределено;
	
	ДанныеДляПечати.Свойство("ДанныеПрослеживаемостиДокументов",	ДанныеПрослеживаемостиДокументов);
	ДанныеДляПечати.Свойство("ПрослеживаемыеКомплектующие",			ПрослеживаемыеКомплектующие);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОтчетовПоКомиссии.ПФ_MXL_ОтчетПоКомиссииОСписании");
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов();
	ИмяКолонкиКодов				= КолонкаКодов.ИмяКолонки;
	ПредставлениеКолонкиКодов	= КолонкаКодов.ПредставлениеКолонки;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент		= Ложь;
		НомерСтрокиНачало	= ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаПоДокументам.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		
		Если ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			
			// Выводим общие реквизиты шапки
			ЗаполнитьРеквизитыШапкиОтчетПоКомиссии(ДанныеПечати, Заголовок, Макет, ТабличныйДокумент);
			
			ЕстьРНПТ = Ложь;
			
			Если ДанныеПрослеживаемостиДокументов <> Неопределено Тогда
				СтрокиДокументов = ДанныеПрослеживаемостиДокументов.НайтиСтроки(СтруктураПоиска);
				Если СтрокиДокументов.Количество() > 0 Тогда
					ЕстьРНПТ = СтрокиДокументов[0].ЕстьРНПТ;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура;
			
			// Выводим заголовок таблицы
			Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
				Если ЕстьРНПТ Тогда
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодамиРНПТ");
				Иначе
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодами");
				КонецЕсли;
				СтруктураПараметров.Вставить("ИмяКолонкиКодов", ПредставлениеКолонкиКодов);
			Иначе
				Если ЕстьРНПТ Тогда
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыРНПТ");
				Иначе
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
				КонецЕсли;
			КонецЕсли;
			
			СтруктураПараметров.Вставить("Валюта", ДанныеПечати.Валюта);
			
			ЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			НомерСтроки = 0;
			
			Если ЕстьРНПТ
				И ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ОтчетКомитентуОСписании") Тогда
				
				ТаблицаТоваровСРНПТ = ТаблицаДляПечатиОтчетаОСписанииСРНПТ(ДанныеПечати.Ссылка);
				
				Для Каждого СтрокаТовары Из ТаблицаТоваровСРНПТ Цикл
					НомерСтроки = НомерСтроки + 1;
					
					ВыводимыеОбласти = ОбластиСтрокЗаполненныеПоПараметрамДляДокументовСписания(
											НомерСтроки,
											СтрокаТовары,
											ПрослеживаемыеКомплектующие,
											Макет,
											ИмяКолонкиКодов,
											Истина);
					
					Для Каждого ОбластьМакета Из ВыводимыеОбласти Цикл
						ТабличныйДокумент.Вывести(ОбластьМакета);
					КонецЦикла;
				КонецЦикла;
				
			Иначе
				
				СтрокаТовары = ВыборкаПоДокументам.Выбрать();
				
				Пока СтрокаТовары.Следующий() Цикл
					НомерСтроки = НомерСтроки + 1;
					
					ВыводимыеОбласти = ОбластиСтрокЗаполненныеПоПараметрамДляДокументовСписания(
											НомерСтроки,
											СтрокаТовары,
											ПрослеживаемыеКомплектующие,
											Макет,
											ИмяКолонкиКодов,
											ЕстьРНПТ);
					
					Для Каждого ОбластьМакета Из ВыводимыеОбласти Цикл
						ТабличныйДокумент.Вывести(ОбластьМакета);
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
			
			ЗаполнитьРеквизитыПодвалаОтчетПоКомиссииОСписании(
				ДанныеПечати,
				ВыборкаПоДокументам,
				Макет,
				ТабличныйДокумент,
				ЕстьРНПТ);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабличныйДокумент,
				НомерСтрокиНачало,
				ОбъектыПечати,
				ДанныеПечати.Ссылка);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуОтчетПоЗакупке(СтруктураТипов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПоЗакупкам";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		Если СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионераОСписании"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитентуОСписании"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионера"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитенту" Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОтчетПоЗакупкам(ПараметрыПечати,
																						СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОтчетПоЗакупкам(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Параметры:
//	ТабличныйДокумент - ТабличныйДокумент -
//	ДанныеДляПечати   - Структура - Содержит в себе данные по шапке документа, табличной части, заголовку отчета:
//		* РезультатПоШапке          - РезультатЗапроса -
//		* РезультатПоТабличнойЧасти - РезультатЗапроса -
//		* Заголовок                 - Строка -
//	ОбъектыПечати     - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//
Процедура ЗаполнитьТабличныйДокументОтчетПоЗакупкам(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати) 
	
	Заголовок			= ДанныеДляПечати.Заголовок;
	ДанныеПечати		= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам	= ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДанныеПрослеживаемостиДокументов	= Неопределено;
	ПрослеживаемыеКомплектующие			= Неопределено;
	
	ДанныеДляПечати.Свойство("ДанныеПрослеживаемостиДокументов",	ДанныеПрослеживаемостиДокументов);
	ДанныеДляПечати.Свойство("ПрослеживаемыеКомплектующие",			ПрослеживаемыеКомплектующие);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОтчетовПоКомиссии.ПФ_MXL_ОтчетКомитентуОЗакупках");
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов();
	ИмяКолонкиКодов				= КолонкаКодов.ИмяКолонки;
	ПредставлениеКолонкиКодов	= КолонкаКодов.ПредставлениеКолонки;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент		= Ложь;
		НомерСтрокиНачало	= ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаПоДокументам.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		
		Если ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			
			// Выводим общие реквизиты шапки
			ЗаполнитьРеквизитыШапкиОтчетПоЗакупкам(ДанныеПечати, Заголовок, Макет, ТабличныйДокумент);
			
			ЕстьРНПТ = Ложь;
			
			Если ДанныеПрослеживаемостиДокументов <> Неопределено Тогда
				СтрокиДокументов = ДанныеПрослеживаемостиДокументов.НайтиСтроки(СтруктураПоиска);
				Если СтрокиДокументов.Количество() > 0 Тогда
					ЕстьРНПТ = СтрокиДокументов[0].ЕстьРНПТ;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура;
			
			// Выводим заголовок таблицы
			Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
				Если ЕстьРНПТ Тогда
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодамиРНПТ");
				Иначе
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодами");
				КонецЕсли;
				
				СтруктураПараметров.Вставить("ИмяКолонкиКодов", ПредставлениеКолонкиКодов);
			Иначе
				Если ЕстьРНПТ Тогда
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыРНПТ");
				Иначе
					ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
				КонецЕсли;
			КонецЕсли;
			
			СуммаВознаграждения = ?(ДанныеПечати.ЕстьСтавкаВознаграждения, НСтр("ru = 'Сумма (с НДС)'"), НСтр("ru = 'Сумма'"));
			
			СтруктураПараметров.Вставить("Валюта",				ДанныеПечати.Валюта);
			СтруктураПараметров.Вставить("СуммаВознаграждения",	СуммаВознаграждения);
			
			ЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			// Выводим многострочную часть документа
			Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
				Если ЕстьРНПТ Тогда
					ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСКодамиРНПТ");
					ОбластьСтрокаКомплектующие = Макет.ПолучитьОбласть("СтрокаСКодамиРНПТКомплектующие");
				Иначе
					ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСКодами");
				КонецЕсли;
			Иначе
				Если ЕстьРНПТ Тогда
					ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаРНПТ");
					ОбластьСтрокаКомплектующие = Макет.ПолучитьОбласть("СтрокаРНПТКомплектующие");
				Иначе
					ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				КонецЕсли;
			КонецЕсли;
			
			НомерСтроки = 0;
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
				ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
				
				ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
										СтрокаТовары.ТоварНаименование,
										Строка(СтрокаТовары.Характеристика),
										,
										,
										ДопПараметрыПредставлениеНоменклатуры);
				
				ЦенаКомитента		= ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.СуммаКомитента / СтрокаТовары.Количество, 2, 1));
				СведенияОПоставщике	= ФормированиеПечатныхФорм.СведенияОЮрФизЛице(СтрокаТовары.Поставщик, ДанныеПечати.Дата);
				//++ Локализация
				ПредставлениеСчетаФактурыВыданного = ?(СтрокаТовары.СчетФактураВыданныйПредставлениеНомера = NULL,
														"-",
														СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
															НСтр("ru = '№ %1 от %2'", ОбщегоНазначения.КодОсновногоЯзыка()),
															СтрокаТовары.СчетФактураВыданныйПредставлениеНомера,
															Формат(СтрокаТовары.СчетФактураВыданныйДата, "ДЛФ=DD")));
				//-- Локализация
				
				СтруктураПараметров = Новый Структура;
				СтруктураПараметров.Вставить("НомерСтроки",			НомерСтроки);
				СтруктураПараметров.Вставить("ТоварНаименование",	ТоварНаименование);
				СтруктураПараметров.Вставить("ЦенаКомитента",		ЦенаКомитента);
				СтруктураПараметров.Вставить("ПредставлениеПоставщика",
											ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование"));
				//++ Локализация
				СтруктураПараметров.Вставить("СчетФактураВыданный",	ПредставлениеСчетаФактурыВыданного);
				//-- Локализация
				
				Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
					СтруктураПараметров.Вставить("Артикул", СтрокаТовары[ИмяКолонкиКодов]);
				КонецЕсли;
				
				ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
				ОбластьСтрока.Параметры.Заполнить(СтруктураПараметров);
				
				Если ЕстьРНПТ
					И ТипЗнч(СтрокаТовары.Ссылка) = Тип("ДокументСсылка.ОтчетКомитентуОЗакупках")
					И ЗначениеЗаполнено(СтрокаТовары.НомерГТД)
					И СтрокаТовары.ТипНомераГТД <> Перечисления.ТипыНомеровГТД.НомерГТД Тогда
					
					Если СтрокаТовары.ТипНомераГТД = Перечисления.ТипыНомеровГТД.НомерРНПТ Тогда
						ДанныеНомераРНПТ = Новый Структура("НомерРНПТ, КоличествоПоРНПТ, ЕдиницаИзмеренияТНВЭД");
						ДанныеНомераРНПТ.НомерРНПТ				= СокрЛП(СтрокаТовары.НомерРНПТ);
						ДанныеНомераРНПТ.КоличествоПоРНПТ		= СтрокаТовары.КоличествоПоРНПТ;
						ДанныеНомераРНПТ.ЕдиницаИзмеренияТНВЭД	= СокрЛП(СтрокаТовары.ЕдиницаИзмеренияТНВЭД);
						
						ОбластьСтрока.Параметры.Заполнить(ДанныеНомераРНПТ);
						
						ТабличныйДокумент.Вывести(ОбластьСтрока);
					Иначе
						ОтборСтрок = Новый Структура("НомерГТД", СтрокаТовары.НомерГТД);
						СтрокиКомплекта = ПрослеживаемыеКомплектующие.НайтиСтроки(ОтборСтрок);
						
						НомерСтрокиКомплекта = 1;
						
						Для Каждого СтрокаКомплекта Из СтрокиКомплекта Цикл
							ДанныеНомераРНПТ = Новый Структура("НомерРНПТ, КоличествоПоРНПТ, ЕдиницаИзмеренияТНВЭД");
							ДанныеНомераРНПТ.НомерРНПТ				= СокрЛП(СтрокаКомплекта.НомерРНПТ);
							ДанныеНомераРНПТ.КоличествоПоРНПТ		= СтрокаТовары.Количество * СтрокаКомплекта.КоличествоПоРНПТ;
							ДанныеНомераРНПТ.ЕдиницаИзмеренияТНВЭД	= СокрЛП(СтрокаКомплекта.ЕдиницаИзмеренияТНВЭД);
							
							Если НомерСтрокиКомплекта = 1 Тогда
								ОбластьСтрока.Параметры.Заполнить(ДанныеНомераРНПТ);
								
								ТабличныйДокумент.Вывести(ОбластьСтрока);
							Иначе
								ОбластьСтрокаКомплектующие.Параметры.Заполнить(ДанныеНомераРНПТ);
								
								ТабличныйДокумент.Вывести(ОбластьСтрокаКомплектующие);
							КонецЕсли;
							
							НомерСтрокиКомплекта = НомерСтрокиКомплекта + 1;
						КонецЦикла;
					КонецЕсли;
					
				Иначе
					Если ЕстьРНПТ Тогда
						ДанныеНомераРНПТ = Новый Структура("НомерРНПТ, КоличествоПоРНПТ, ЕдиницаИзмеренияТНВЭД",
															"-", 0, "-");
						ОбластьСтрока.Параметры.Заполнить(ДанныеНомераРНПТ);
					КонецЕсли;
					
					ТабличныйДокумент.Вывести(ОбластьСтрока);
				КонецЕсли;
				
			КонецЦикла;
			
			ЗаполнитьРеквизитыПодвалаОтчетПоЗакупкам(
				ДанныеПечати,
				ВыборкаПоДокументам,
				Макет,
				ТабличныйДокумент,
				ЕстьРНПТ);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабличныйДокумент,
				НомерСтрокиНачало,
				ОбъектыПечати,
				ДанныеПечати.Ссылка);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//	ДанныеПечати        - ВыборкаИзРезультатаЗапроса -
//	ВыборкаПоДокументам - ВыборкаИзРезультатаЗапроса -
//	Макет               - ТабличныйДокумент - Макет печатной формы
//	ТабличныйДокумент   - ТабличныйДокумент -
//	ЕстьРНПТ            - Булево -
//
Процедура ЗаполнитьРеквизитыПодвалаОтчетПоЗакупкам(ДанныеПечати, ВыборкаПоДокументам, Макет, ТабличныйДокумент, ЕстьРНПТ)
	
	Если ЕстьРНПТ Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалРНПТ");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СуммаКомитентаВсего",			ВыборкаПоДокументам.СуммаКомитента);
	СтруктураПараметров.Вставить("СуммаНДС",					ВыборкаПоДокументам.СуммаНДС);
	СтруктураПараметров.Вставить("СуммаСНДСВсего",				ВыборкаПоДокументам.СуммаСНДС);
	СтруктураПараметров.Вставить("СуммаВознагражденияВсего",	ВыборкаПоДокументам.СуммаВознаграждения);
	СтруктураПараметров.Вставить("ПроцентВознаграждения",		ДанныеПечати.ПроцентВознаграждения);
	
	ТекстИтоговаяСтрока = НСтр("ru = 'Всего закуплено наименований'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	СтруктураПараметров.Вставить(
		"ИтоговаяСтрока",
		ТекстИтоговаяСтрока + " " + ВыборкаПоДокументам.Выбрать().Количество()
		+ ", " + НСтр("ru = 'на сумму'", ОбщегоНазначения.КодОсновногоЯзыка()) + " "
		+ ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоДокументам.СуммаСНДС, ДанныеПечати.Валюта)
		+ ", " + ?(ДанныеПечати.ПродажаОблагаетсяНДС,
					НСтр("ru = 'в том числе НДС'",
					ОбщегоНазначения.КодОсновногоЯзыка())
		+ " " + ФормированиеПечатныхФорм.ФорматСумм(
					ВыборкаПоДокументам.СуммаНДС, ДанныеПечати.Валюта),
					НСтр("ru = 'НДС не облагается'")));
		
	СтруктураПараметров.Вставить(
		"СуммаПрописью",
		РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ВыборкаПоДокументам.СуммаСНДС, ДанныеПечати.Валюта));
	
	Если ДанныеПечати.СуммаВознаграждения <> 0 Тогда
		СтруктураПараметров.Вставить(
			"СуммаВознаграждения",
			НСтр("ru = 'Сумма комиссионного вознаграждения составила'", ОбщегоНазначения.КодОсновногоЯзыка()) + " "
			+ ?(ДанныеПечати.СуммаВознаграждения < 0, НСтр("ru = 'минус'", ОбщегоНазначения.КодОсновногоЯзыка()) + " ", "")
			+ РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(ДанныеПечати.СуммаВознаграждения, ДанныеПечати.Валюта)
			+ ", " + ?(ДанныеПечати.ЕстьСтавкаВознаграждения,
						НСтр("ru = 'в том числе НДС'",
						ОбщегоНазначения.КодОсновногоЯзыка())
			+ " " + РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(
						ДанныеПечати.СуммаНДСВознаграждения, ДанныеПечати.Валюта),
						НСтр("ru = 'НДС не облагается'"))
			+ " (" + ДанныеПечати.ПроцентВознаграждения + "%" + " "
			+ НСтр("ru = 'от суммы закупки)'", ОбщегоНазначения.КодОсновногоЯзыка()));
	КонецЕсли;
	
	СтруктураПараметров.Вставить(
		"ПредставительКомитента",
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомитента, ДанныеПечати.Дата));
	СтруктураПараметров.Вставить(
		"ПредставительКомиссионера",
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставительКомиссионера, ДанныеПечати.Дата));
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыШапкиОтчетПоЗакупкам(ДанныеПечати, Заголовок, Макет, ТабличныйДокумент)
	
	// Выводим общие реквизиты шапки
	СведенияОКомитенте = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Комитент, ДанныеПечати.Дата);
	СведенияОКомиссионере = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Комиссионер, ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	
	ПредставлениеДоговора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '№ %1 от %2'", ОбщегоНазначения.КодОсновногоЯзыка()), ДанныеПечати.Договор.Номер, Формат(ДанныеПечати.Договор.Дата, "ДЛФ=DD"));
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ТекстЗаголовка", ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, Заголовок));
	СтруктураПараметров.Вставить("ПредставлениеКомитента", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомитенте, "ПолноеНаименование"));
	СтруктураПараметров.Вставить("ПредставлениеКомиссионера", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ПолноеНаименование"));
	СтруктураПараметров.Вставить("ПредставлениеДоговора", ПредставлениеДоговора);
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Функция ПолучитьОбластьСтрокиТоваров(Макет, ИмяКолонкиКодов, ЕстьРНПТ)
	
	Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
		Если ЕстьРНПТ Тогда
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСКодамиРНПТ");
		Иначе
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСКодами");
		КонецЕсли;
	Иначе
		Если ЕстьРНПТ Тогда
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаРНПТ");
		Иначе
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОбластьСтрока;
	
КонецФункции

Функция ПолучитьОбластьСтрокиКомплектующих(Макет, ИмяКолонкиКодов)
	
	Если ЗначениеЗаполнено(ИмяКолонкиКодов) Тогда
		ОбластьСтрокаКомплектующие = Макет.ПолучитьОбласть("СтрокаСКодамиРНПТКомплектующие");
	Иначе
		ОбластьСтрокаКомплектующие = Макет.ПолучитьОбласть("СтрокаРНПТКомплектующие");
	КонецЕсли;
	
	Возврат ОбластьСтрокаКомплектующие;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли