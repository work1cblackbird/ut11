
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОрганизацииСАТУРН.Очистить();
	Если Параметры.Свойство("ОрганизацииСАТУРН") И ЗначениеЗаполнено(Параметры.ОрганизацииСАТУРН) Тогда
		Если ТипЗнч(Параметры.ОрганизацииСАТУРН) = Тип("Массив") Тогда
			ОрганизацииСАТУРН.ЗагрузитьЗначения(Параметры.ОрганизацииСАТУРН);
		ИначеЕсли ТипЗнч(Параметры.ОрганизацииСАТУРН) = Тип("СписокЗначений") Тогда
			ОрганизацииСАТУРН.ЗагрузитьЗначения(Параметры.ОрганизацииСАТУРН.ВыгрузитьЗначения());
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьСписокПроблем();
	
	СтандартныеПодсистемыСервер.СброситьРазмерыИПоложениеОкна(ЭтотОбъект);
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ХранитьФайлыВТомахНаДиске" Тогда
		
		ОткрытьФорму("Обработка.ПанельАдминистрированияБСП.Форма.НастройкиРаботыСФайлами");
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЕстьСообщенияОжидающиеОтправки" Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		СтруктураОтбораОрганизаций = ИнтеграцияСАТУРНКлиентСервер.СтруктураОтбораОрганизаций(ОрганизацииСАТУРН);
		ПараметрыОткрытияФормы.Вставить("СтруктураОтбораОрганизаций", СтруктураОтбораОрганизаций);
		ОткрытьФорму("РегистрСведений.ОчередьСообщенийСАТУРН.ФормаСписка", ПараметрыОткрытияФормы, ВладелецФормы);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "НастройкаРегламентногоОбменаДанными"
		Или НавигационнаяСсылкаФорматированнойСтроки = "НастройкаЗагрузкаСтатусовНакладных"
		Или НавигационнаяСсылкаФорматированнойСтроки = "НастройкаЗагрузкаИмпортируемыхПартий" Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		СтруктураОтбораОрганизаций = ИнтеграцияСАТУРНКлиентСервер.СтруктураОтбораОрганизаций(ОрганизацииСАТУРН);
		ПараметрыОткрытияФормы.Вставить("СтруктураОтбораОрганизаций", СтруктураОтбораОрганизаций);
		ОткрытьФорму("Справочник.НастройкиРегламентныхЗаданийСАТУРН.Форма.ФормаНастроек", ПараметрыОткрытияФормы, ЭтотОбъект);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ВыполнитьОбмен" Тогда
		
		ИнтеграцияСАТУРНКлиент.ВыполнитьОбмен(
			ВладелецФормы,
			ИнтеграцияСАТУРНКлиент.ОрганизацииДляОбмена(ЭтотОбъект));
		
	Иначе
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Неизвестная ссылка: %1'"),
			НавигационнаяСсылкаФорматированнойСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСписокПроблем();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписокПроблем()
	
	РезультатыЗапроса = ИнтеграцияСАТУРН.СостояниеОбмена(ОрганизацииСАТУРН.ВыгрузитьЗначения());
	
	ПроверитьХранениеФайловВТомахНаДиске();
	ПроверитьСообщенияОжидающиеОтправки(РезультатыЗапроса);
	ПроверитьНастройкиРегламентныхЗаданийОбмена(РезультатыЗапроса);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьХранениеФайловВТомахНаДиске()
	
	ИдентификаторПроблемы = "ХранитьФайлыВТомахНаДиске";
	ИмяЭлемента           = "ХранитьФайлыВТомахНаДиске";
	
	Элементы["Группа" + ИмяЭлемента].Видимость = Не СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации()
		И Не ИнтеграцияИС.ХранитьФайлыВТомахНаДиске();
	
	Если Элементы["Группа" + ИмяЭлемента].Видимость Тогда
		
		Элементы[ИмяЭлемента].Заголовок = Новый ФорматированнаяСтрока(
			НСтр("ru='Рекомендуется настроить хранение файлов в томах на диске'"),,,,
			ИдентификаторПроблемы);
		
		ТекстПодсказки = НСтр("ru='Файлы обмена могут занимать значительный объем данных в базе.
			|Для уменьшения объема базы данных, файлы необходимо хранить в томах на диске.'");
		
		Если Не ИнтеграцияИС.ПравоДоступаПанельАдминистрированиеБСП() Тогда
			
			Элементы[ИмяЭлемента].Доступность = Ложь;
			ТекстПодсказки = ТекстПодсказки + Символы.ПС
				+ НСтр("ru='У Вас недостачно прав для выполнения данной операции, обратитесь к администратору.'");
			
		КонецЕсли;
		
		Элементы[ИмяЭлемента].РасширеннаяПодсказка.Заголовок = ТекстПодсказки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСообщенияОжидающиеОтправки(РезультатыЗапроса)
	
	ИдентификаторПроблемы = "ЕстьСообщенияОжидающиеОтправки";
	ИмяЭлемента           = "ЕстьСообщенияОжидающиеОтправки";
	
	Выборка = РезультатыЗапроса[ИдентификаторПроблемы].Выбрать();
	
	Элементы["Группа" + ИмяЭлемента].Видимость = Выборка.Количество() > 0;
	
	Если Элементы["Группа" + ИмяЭлемента].Видимость Тогда
		
		Выборка.Следующий();
		
		Элементы[ИмяЭлемента].Заголовок = Новый ФорматированнаяСтрока(
			СтрШаблон(
				НСтр("ru='Есть сообщения ожидающие отправки (%1)'"),
				Выборка.КоличествоСообщений),,,,
			ИдентификаторПроблемы);
		
		СтрокаЗаголовка = Новый Массив;
		СтрокаЗаголовка.Добавить(
			Новый ФорматированнаяСтрока(
				НСтр("ru = 'Не все подготовленные для отправки сообщения доставлены в ФГИС ""Сатурн"".
					|Рекомендуется'")));
		СтрокаЗаголовка.Добавить(" ");
		СтрокаЗаголовка.Добавить(
			Новый ФорматированнаяСтрока(
				Нстр("ru='выполнить обмен'"),,,, "ВыполнитьОбмен"));
		СтрокаЗаголовка.Добавить(".");
		
		Элементы[ИмяЭлемента + "РасширеннаяПодсказка"].Заголовок = Новый ФорматированнаяСтрока(СтрокаЗаголовка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНастройкиРегламентныхЗаданийОбмена(РезультатыЗапроса)
	
	ИдентификаторПроблемы = "НастройкаРегламентногоОбменаДанными";
	ИмяЭлемента           = "НастройкаРегламентногоОбменаДанными";
	
	Элементы["Группа" + ИмяЭлемента].Видимость = Не (РезультатыЗапроса[ИдентификаторПроблемы].Пустой()
		Или ИнтеграцияИС.РегЗаданияНастроены(РезультатыЗапроса, ИдентификаторПроблемы));
	
	Если Элементы["Группа" + ИмяЭлемента].Видимость Тогда
		
		Элементы[ИмяЭлемента].Заголовок = Новый ФорматированнаяСтрока(
			НСтр("ru='Рекомендуется настроить регламентное задание для обмена с ФГИС ""Сатурн""'"),,,,
			ИдентификаторПроблемы);
		
	КонецЕсли;
	
	ИдентификаторПроблемы = "НастройкаЗагрузкаСтатусовНакладных";
	ИмяЭлемента           = "НастройкаЗагрузкаСтатусовНакладных";
	
	Элементы["Группа" + ИмяЭлемента].Видимость = Не (РезультатыЗапроса[ИдентификаторПроблемы].Пустой()
		Или ИнтеграцияИС.РегЗаданияНастроены(РезультатыЗапроса, ИдентификаторПроблемы));
	
	Если Элементы["Группа" + ИмяЭлемента].Видимость Тогда
		
		Элементы[ИмяЭлемента].Заголовок = Новый ФорматированнаяСтрока(
			НСтр("ru='Рекомендуется настроить регламентное задание для загрузки статусов накладных'"),,,,
			ИдентификаторПроблемы);
		
	КонецЕсли;
	
	ИдентификаторПроблемы = "НастройкаЗагрузкаИмпортируемыхПартий";
	ИмяЭлемента           = "НастройкаЗагрузкаИмпортируемыхПартий";
	
	Элементы["Группа" + ИмяЭлемента].Видимость = Не (РезультатыЗапроса[ИдентификаторПроблемы].Пустой()
		Или ИнтеграцияИС.РегЗаданияНастроены(РезультатыЗапроса, ИдентификаторПроблемы));
	
	Если Элементы["Группа" + ИмяЭлемента].Видимость Тогда
		
		Элементы[ИмяЭлемента].Заголовок = Новый ФорматированнаяСтрока(
			НСтр("ru='Рекомендуется настроить регламентное задание для загрузки импортируемых партий'"),,,,
			ИдентификаторПроблемы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти