
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НаправлениеДокумента = Параметры.ПараметрыСоздания.НаправлениеДокумента;
	Если Не Параметры.ПараметрыСоздания.Свойство("СозданныеДокументы") Тогда
		// Может уже быть заполнено, если вызвали из формы одиночного документа
		РаспознаваниеДокументовКомплекты.ОбновитьИЗаполнитьСвязанныеИСозданныеДокументы(Параметры.ПараметрыСоздания);
	КонецЕсли;
	
	УправлениеФормой();
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СоздатьДокументПриИзменении(Элемент)
	
	Ид = Число(СтрРазделить(Элемент.Имя, "_")[1]);
	НастроитьРеквизитыИИхДоступность(Ид);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбработатьДокументы(Команда)
	
	Для Каждого СтрокаРеквизитов Из РеквизитыДокументовНаФорме Цикл
		ДанныеСозданного = Параметры.ПараметрыСоздания.СозданныеДокументы[СтрокаРеквизитов.ТипДокумента];
		ЗаполнитьЗначенияСвойств(ДанныеСозданного, СтрокаРеквизитов, "СоздатьДокумент, ДокументНайден, СканУжеПрикреплен");
		Если СтрокаРеквизитов.СканУжеПрикреплен Тогда
			ДанныеСозданного.ПрикрепитьСкан = Ложь;
		Иначе
			ДанныеСозданного.ПрикрепитьСкан = СтрокаРеквизитов.ПрикрепитьСкан;
		КонецЕсли;
	КонецЦикла;
	
	Закрыть(Параметры.ПараметрыСоздания);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	НомерДокумента = Число(СтрРазделить(Команда.Имя, "_")[1]);
	ОткрытьСозданныйДокумент(РеквизитыДокументовНаФорме[НомерДокумента].Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СкопироватьЭлементыРекурсивно(ИсходнаяГруппа, ГруппаДляВставки, СтрокаРеквизитов, Ид)
	
	НоваяГруппа = Элементы.Добавить(ИсходнаяГруппа.Имя + "_" + Ид, Тип("ГруппаФормы"), ГруппаДляВставки);
	НоваяГруппа.Вид = ИсходнаяГруппа.Вид;
	ЗаполнитьЗначенияСвойств(НоваяГруппа, ИсходнаяГруппа, "Отображение, Группировка, ОтображатьЗаголовок");
	
	Для Каждого ЭлементГруппы Из ИсходнаяГруппа.ПодчиненныеЭлементы Цикл
		Если ЭлементГруппы.Имя = "ГруппаОткрытьДокумент" И Не ЗначениеЗаполнено(СтрокаРеквизитов.Ссылка)
			Или ЭлементГруппы.Имя = "СоздатьДокумент" И ЗначениеЗаполнено(СтрокаРеквизитов.Ссылка) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(ЭлементГруппы) = Тип("ГруппаФормы") Тогда
			СкопироватьЭлементыРекурсивно(ЭлементГруппы, НоваяГруппа, СтрокаРеквизитов, Ид);
		ИначеЕсли ТипЗнч(ЭлементГруппы) = Тип("ПолеФормы") Тогда
			НовыйЭлемент = Элементы.Добавить(ЭлементГруппы.Имя + "_" + Ид, Тип("ПолеФормы"), НоваяГруппа);
			НовыйЭлемент.Вид = ЭлементГруппы.Вид;
			НовыйЭлемент.ПутьКДанным = СтрЗаменить(ЭлементГруппы.ПутьКДанным, "0", Строка(Ид));
			ЗаполнитьЗначенияСвойств(НовыйЭлемент, ЭлементГруппы, , "Вид, ПутьКДанным");
			Если ЭлементГруппы.Имя = "СоздатьДокумент" Тогда
				НовыйЭлемент.УстановитьДействие("ПриИзменении", "СоздатьДокументПриИзменении");
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементГруппы) = Тип("ДекорацияФормы") Тогда
			НовыйЭлемент = Элементы.Добавить(ЭлементГруппы.Имя + "_" + Ид, Тип("ДекорацияФормы"), НоваяГруппа);
			НовыйЭлемент.Вид = ЭлементГруппы.Вид;
			ЗаполнитьЗначенияСвойств(НовыйЭлемент, ЭлементГруппы);
		ИначеЕсли ТипЗнч(ЭлементГруппы) = Тип("КнопкаФормы") Тогда
			НовоеИмяКоманды = ЭлементГруппы.Имя + "_" + Ид;
			НоваяКоманда = Команды.Добавить(НовоеИмяКоманды);
			// У копируемой кнопки ИмяКоманды должно совпадать с действием
			НоваяКоманда.Действие = ЭлементГруппы.ИмяКоманды;
			
			НовыйЭлемент = Элементы.Добавить(НовоеИмяКоманды, Тип("КнопкаФормы"), НоваяГруппа);
			НовыйЭлемент.Вид = ЭлементГруппы.Вид;
			НовыйЭлемент.ИмяКоманды = НовоеИмяКоманды;
			НовыйЭлемент.Заголовок = ЭлементГруппы.Заголовок;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	ТипыДокументов = РаспознаваниеДокументовКомплектыКлиентСервер.СоздаваемыеДокументыКомплекта(Параметры.ПараметрыСоздания);
	
	Ид = -1;
	Для Каждого ТипДокумента Из ТипыДокументов Цикл
		Ид = Ид + 1;
		
		// Добавление реквизитов
		СтрокаРеквизитов = РеквизитыДокументовНаФорме.Добавить();
		ДанныеСозданного = Параметры.ПараметрыСоздания.СозданныеДокументы[ТипДокумента];
		ЗаполнитьЗначенияСвойств(СтрокаРеквизитов, ДанныеСозданного);
		СтрокаРеквизитов.ТипДокумента = ТипДокумента;
		
		// Добавление элементов формы
		РаспознаваниеДокументовКомплекты.СкопироватьЭлементыФормыРекурсивно(ЭтотОбъект, Элементы.ГруппаДокумент, Элементы.ГруппаДетально, Ид);
		
		Если Ид = 0 Тогда
			ДанныеЗаголовка = ДанныеСвязанногоРаспознанногоДокумента(ТипДокумента, Истина);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаРеквизитов.Ссылка) Тогда
			Элементы["СоздатьДокумент_" + Ид].Видимость = Ложь;
			Элементы["ОткрытьДокумент_" + Ид].Заголовок = РаспознаваниеДокументовКомплектыКлиентСервер.ОтрезатьВремяУДаты(
				Строка(СтрокаРеквизитов.Ссылка));
		Иначе
			Если Ид = 0 Тогда
				ДанныеРаспознанного = ДанныеЗаголовка;
			Иначе
				ДанныеРаспознанного = ДанныеСвязанногоРаспознанногоДокумента(ТипДокумента);
			КонецЕсли;
			Элементы["ГруппаОткрытьДокумент_" + Ид].Видимость = Ложь;
			Элементы["СоздатьДокумент_" + Ид].Заголовок = Элементы["СоздатьДокумент_" + Ид].Заголовок +
				" """ + ТипДокумента + """" + СтрШаблон(НСтр("ru = ' № %1 от %2'"),
					СокрЛП(ДанныеРаспознанного.НомерДокумента),
					Формат(ДанныеРаспознанного.ДатаДокумента, "ДФ=dd.MM.yyyy")
				);
		КонецЕсли;
		
		Если СтрокаРеквизитов.СканУжеПрикреплен Тогда
			Элементы["ПрикрепитьСкан_" + Ид].Доступность = Ложь;
		Иначе
			Элементы["ДекорацияСканПрикреплен_" + Ид].Видимость = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы["РазделениеДокументов_" + Ид].Видимость = Ложь;
	Элементы.ГруппаДокумент.Видимость = Ложь;
	
	// Формируем заголовок
	Если НаправлениеДокумента = Перечисления.НаправленияРаспознанногоДокумента.Входящий Тогда
		СтрокаТипДокумента = НСтр("ru = 'Поступление'");
		ВОтКонтрагента = НСтр("ru = 'от '") + ДанныеЗаголовка.Контрагент;
	Иначе
		СтрокаТипДокумента = НСтр("ru = 'Реализация'");
		ВОтКонтрагента = НСтр("ru = 'в '") + ДанныеЗаголовка.Контрагент;
	КонецЕсли;
	ЭтотОбъект.Заголовок = СтрШаблон(НСтр("ru = '%1 от %2 %3'"),
		СтрокаТипДокумента, Формат(ДанныеЗаголовка.ДатаДокумента, "ДФ=dd.MM.yyyy"), ВОтКонтрагента);
	
КонецПроцедуры

&НаСервере
Функция ДанныеСвязанногоРаспознанногоДокумента(ТипДокумента, ДляЗаголовка = Ложь)
	
	Результат = Неопределено;
	НужныеРеквизиты = "НомерДокумента, ДатаДокумента";
	Если ДляЗаголовка Тогда
		НужныеРеквизиты = НужныеРеквизиты + ", Контрагент";
	КонецЕсли;
	
	ПодходящиеТипы = РаспознаваниеДокументовКомплектыКлиентСервер.ПодходящиеТипыРаспознанногоДокумента(ТипДокумента);
	
	Для Каждого ЭтотТип Из ПодходящиеТипы Цикл
		ЭтотРаспознанный = Параметры.ПараметрыСоздания.РаспознанныеДокументыПоТипам[ЭтотТип];
		Если ЭтотРаспознанный = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭтотРаспознанный, НужныеРеквизиты);
		Прервать;
	КонецЦикла;
	
	Если Результат = Неопределено Тогда
		Результат = Новый Структура(НужныеРеквизиты);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()

	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ПолноеИмяФормы = Метаданные.Обработки.РаспознаваниеДокументов.Формы.СозданиеКомплекта.ПолноеИмя();
		ХранилищеСистемныхНастроек.Удалить(ПолноеИмяФормы, "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСозданныйДокумент(ДокументСсылка)
	ПерейтиПоНавигационнойСсылке(ПолучитьНавигационнуюСсылку(ДокументСсылка));
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРеквизитыИИхДоступность(Ид)
	
	ДолжныБытьДоступныСледующие = Неопределено;
	Пока Ид < РеквизитыДокументовНаФорме.Количество() Цикл
		СтрокаРеквизитов = РеквизитыДокументовНаФорме[Ид];
		
		Если ДолжныБытьДоступныСледующие = Неопределено Тогда
			ДолжныБытьДоступныСледующие = СтрокаРеквизитов.СоздатьДокумент;
			СтрокаРеквизитов.ПрикрепитьСкан = СтрокаРеквизитов.СоздатьДокумент;
			Элементы["ПрикрепитьСкан_" + Ид].Доступность = СтрокаРеквизитов.СоздатьДокумент;
		Иначе
			Если Не СтрокаРеквизитов.ДокументНайден Тогда
				СтрокаРеквизитов.СоздатьДокумент = ДолжныБытьДоступныСледующие;
				СтрокаРеквизитов.ПрикрепитьСкан = ДолжныБытьДоступныСледующие;
				Элементы["ПрикрепитьСкан_" + Ид].Доступность = ДолжныБытьДоступныСледующие;
			КонецЕсли;
		КонецЕсли;
		
		Ид = Ид + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
