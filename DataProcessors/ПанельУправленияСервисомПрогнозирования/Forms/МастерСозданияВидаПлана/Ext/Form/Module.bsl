
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ТипПлана = Перечисления.ТипыПланов.ПланПродаж;
	Если Не Параметры.ИспользоватьПланированиеПродаж Тогда
		ТипПлана = Перечисления.ТипыПланов.ПланПродажПоКатегориям;
		СписокТиповПланов = Элементы.ТипПлана.СписокВыбора;
		НеИспользуемыйТипПлана = СписокТиповПланов.НайтиПоЗначению(Перечисления.ТипыПланов.ПланПродаж);
		СписокТиповПланов.Удалить(НеИспользуемыйТипПлана);
	ИначеЕсли Не Параметры.ИспользоватьПланированиеПродажПоКатегориям Тогда
		СписокТиповПланов = Элементы.ТипПлана.СписокВыбора;
		НеИспользуемыйТипПлана = СписокТиповПланов.НайтиПоЗначению(Перечисления.ТипыПланов.ПланПродажПоКатегориям);
		СписокТиповПланов.Удалить(НеИспользуемыйТипПлана);
	КонецЕсли;
	
	ТекстВариантыПрогнозированияПоКатегориям = НСтр("ru = 'Выбранный вариант определяет, в каком виде данные прогнозов будут выводиться для анализа:
		| %1 Только по категориям   - данные выводятся по категориям.
		| %1 С разбивкой по товарам - данные выводятся по товарам.'");
	ТекстВариантыПрогнозированияПоКатегориям = СтрШаблон(ТекстВариантыПрогнозированияПоКатегориям, Символ(8226));
	Элементы.ДекорацияВариантПрогнозированияПоКатегориям.Подсказка = ТекстВариантыПрогнозированияПоКатегориям;
	
	СценарийПрогнозирования = Параметры.СценарийПрогнозирования;
	Периодичность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СценарийПрогнозирования, "Периодичность");
	КоличествоПериодовПрогнозирования = 5;
	
	ПересчитатьПоследнююИзвестнуюДатуПродажи();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Функция СоздатьНаСервере()
	
	НовыйВидПланов = Справочники.ВидыПланов.СоздатьЭлемент();
	
	ЗначенияВидовПлановПоУмолчанию = СервисПрогнозированияПереопределяемыйКлиентСервер.ЗначенияВидаПлановПоУмолчанию();
	
	ЗаполнитьЗначенияСвойств(НовыйВидПланов, ЗначенияВидовПлановПоУмолчанию, , "Периодичность");
	
	НовыйВидПланов.Владелец = СценарийПрогнозирования;
	НовыйВидПланов.ТипПлана = ТипПлана;
	
	НовыйВидПланов.Наименование = Наименование;
	НовыйВидПланов.КоличествоПериодов = КоличествоПериодовПрогнозирования;
	НовыйВидПланов.Периодичность = Периодичность;
	НовыйВидПланов.НачалоПрогнозирования = ДатаНачалаПрогнозирования;
	
	НовыйВидПланов.ЗаполнятьПоХарактеристикамНоменклатуры = ДетализацияПоХарактеристике;
	НовыйВидПланов.ЗаполнятьПартнера                      = Не ДетализацияПоКлиентам;
	НовыйВидПланов.ЗаполнятьПартнераВТЧ                   = ДетализацияПоКлиентам;
	НовыйВидПланов.ЗаполнятьСклад                         = Не ДетализацияПоСкладам;
	НовыйВидПланов.ЗаполнятьСкладВТЧ                      = ДетализацияПоСкладам;
	
	НовыйВидПланов.ЗаполнятьПоФормуле = Ложь;
	НовыйВидПланов.ЗаполнятьПоДаннымСервиса = Истина;
	
	Если ТипПлана = Перечисления.ТипыПланов.ПланПродажПоКатегориям Тогда
		НовыйВидПланов.ВариантПрогнозированияПоКатегориям = ВариантПрогнозированияПоКатегориям;
	КонецЕсли;
	
	НовыйВидПланов.Записать();
	
	Возврат НовыйВидПланов.Ссылка;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаНачалаПрогнозированияПриИзменении(Элемент)
	ПересчитатьПоследнююИзвестнуюДатуПродажи();
КонецПроцедуры

&НаКлиенте
Процедура ТипПланаПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	ОчиститьСообщения();
	
	Если ПроверитьЗаполнение() Тогда
		НовыйВидПланов = СоздатьНаСервере();
		
		ПараметрыОповещения = Новый Структура("НовыйВидПланов", НовыйВидПланов);
		Оповестить("СозданиеВидаПлана", ПараметрыОповещения, ВладелецФормы);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ДетализацияПоХарактеристике.Видимость = ТипПлана = Перечисления.ТипыПланов.ПланПродаж;
	Элементы.ДетализацияПоКлиентам.Видимость = ТипПлана = Перечисления.ТипыПланов.ПланПродаж;
	Элементы.ГруппаВариантПрогнозированияПоКатегориям.Видимость = ТипПлана = Перечисления.ТипыПланов.ПланПродажПоКатегориям;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьПоследнююИзвестнуюДатуПродажи()
	
	ПоследняяИзвестнаяПродажа = СервисПрогнозированияПереопределяемый.ПоследняяИзвестнаяДатаПродажи();
	
КонецПроцедуры

#КонецОбласти
