#Область ПрограммныйИнтерфейс

// Возвращаемое значение:
//  Структура:
//   * СДиска             - Булево - файл выбирается с компьютера пользователя, по умолчанию всегда используется.
//   * ПрисоединенныйФайл - Булево - файл выбирается из присоединенных файлов.
//   * ПечатнаяФорма      - Булево - файл подготавливается путем формирования и преобразования печатной формы.
//
&НаКлиенте
Функция НовыеВариантыВыбораФайла() Экспорт
	
	ВариантыВыбораФайла = Новый Структура;
	
	ВариантыВыбораФайла.Вставить("ПечатнаяФорма", Ложь);
	ВариантыВыбораФайла.Вставить("ПрисоединенныйФайл", Ложь);
	ВариантыВыбораФайла.Вставить("СДиска", Истина);
	
	Возврат ВариантыВыбораФайла;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращаемое значение:
//  Структура:
//   * ОбработчикЗавершения - Неопределено - Значение по умолчанию
//                          - ОписаниеОповещения - Обработчик, который будет вызван после подготовки файла
//   * Данные               - Неопределено - значение по умолчанию.
//                          - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО - объект, к которому готовится файл.
//                          - Структура:
//                            * ОбъектУчета - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО - объект, к которому
//                                                                                                готовится файл.
//
&НаКлиенте
Функция ПараметрыПодготовкиФайла() Экспорт // АПК:78 - исключение для вызова клиентских методов.
	
	ПараметрыПодготовки = Новый Структура;
	ПараметрыПодготовки.Вставить("ОбработчикЗавершения", Неопределено);
	ПараметрыПодготовки.Вставить("Данные",               Неопределено);
	
	Возврат ПараметрыПодготовки;
	
КонецФункции

// Параметры:
//  ПараметрыПодготовки - см. ПараметрыПодготовкиФайла
//
&НаКлиенте
Процедура ЗапроситьИПодготовитьФайл(ПараметрыПодготовки) Экспорт // АПК:78 - исключение для вызова клиентских методов.
	
	ВариантыВыбораФайла = НовыеВариантыВыбораФайла();
	
	ВариантВыбораФайлаПоУмолчанию = "СДиска";
	
	ОбменСКонтрагентамиКлиентПереопределяемый.ПриОпределенииВариантовВыбораФайлаДляДоговорногоДокументаПДФ_А3(
		ВариантыВыбораФайла, ВариантВыбораФайлаПоУмолчанию);
		
	ИспользуемыеВариантыВыбораФайла = Новый Массив; // Массив Из Строка
	
	Для Каждого ВариантВыбораФайла Из ВариантыВыбораФайла Цикл
		Если ВариантВыбораФайла.Значение = Истина Тогда
			ИспользуемыеВариантыВыбораФайла.Добавить(ВариантВыбораФайла.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	КоличествоВариантовВыбораФайла = ИспользуемыеВариантыВыбораФайла.Количество();
	
	Если КоличествоВариантовВыбораФайла = 0 Тогда
		Возврат;
	Иначе
		СвойстваВариантовВыбора = НовыеСвойстваВариантовВыбора();
		СвойстваВариантовВыбора.ИспользуемыеВариантыВыбораФайла = ИспользуемыеВариантыВыбораФайла;
		СвойстваВариантовВыбора.ВариантВыбораФайлаПоУмолчанию   = ВариантВыбораФайлаПоУмолчанию;
		СвойстваВариантовВыбора.КоличествоВариантовВыбораФайла  = КоличествоВариантовВыбораФайла;
		
		ПодготовитьФайл(СвойстваВариантовВыбора, ПараметрыПодготовки);
	КонецЕсли;
	
КонецПроцедуры

// Возвращаемое значение:
//  Структура:
//  * Имя      - Строка - Имя файла.
//  * Хранение - Строка - Адрес временного хранилища двоичных данных файла.
//
&НаКлиенте
Функция НовыеПараметрыФайла() Экспорт // АПК:78 - исключение для вызова клиентских методов.
	
	ПараметрыФайла = Новый Структура;
	ПараметрыФайла.Вставить("Имя", "");
	ПараметрыФайла.Вставить("Хранение", "");
	
	Возврат ПараметрыФайла;
	
КонецФункции

// Параметры:
//  ОбработчикЗавершения - ОписаниеОповещения - содержит описание процедуры, которая будет вызвана после загрузки файла
//
&НаКлиенте
Процедура ЗапроситьФайлСДиска(ОбработчикЗавершения) Экспорт
	
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru = 'Файл PDF'") + " (*.pdf)|*.pdf";
	ПараметрыЗагрузки.Диалог.Заголовок = НСтр("ru = 'Выберите договорный документ'");
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОбработчикЗавершения, ПараметрыЗагрузки);
	
КонецПроцедуры

// Параметры:
//  ИмяФайла - Строка
//
//  Возвращаемое значение:
//  Булево - Истина, если проверка провалена
//
&НаКлиенте
Функция ПроверкаРасширенияФайлаПровалена(ИмяФайла) Экспорт
	
	РасширениеФайла = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла);
	
	Если РаботаСФайламиБЭДКлиентСервер.ЭтоРасширениеФайлаPDF(РасширениеФайла) Тогда
		Возврат Ложь;
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Расширение файла должно быть "".pdf"".'"));
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//  Структура:
//   * ИспользуемыеВариантыВыбораФайла - Массив Из Строка
//   * ВариантВыбораФайлаПоУмолчанию   - Строка
//   * КоличествоВариантовВыбораФайла  - Число
//
&НаКлиенте
Функция НовыеСвойстваВариантовВыбора()
	
	СвойстваВариантовВыбора = Новый Структура;
	СвойстваВариантовВыбора.Вставить("ИспользуемыеВариантыВыбораФайла", Новый Массив);
	СвойстваВариантовВыбора.Вставить("ВариантВыбораФайлаПоУмолчанию",   "");
	СвойстваВариантовВыбора.Вставить("КоличествоВариантовВыбораФайла",  0);
	
	Возврат СвойстваВариантовВыбора;
	
КонецФункции

// Параметры:
//  СвойстваВариантовВыбора - см. НовыеСвойстваВариантовВыбора
//  ПараметрыПодготовки     - см. ПараметрыПодготовкиФайла
//
&НаКлиенте
Процедура ПодготовитьФайл(СвойстваВариантовВыбора, ПараметрыПодготовки)
	
	Если СвойстваВариантовВыбора.КоличествоВариантовВыбораФайла = 1
		И СвойстваВариантовВыбора.ИспользуемыеВариантыВыбораФайла[0] = "СДиска" Тогда
			
		ПоказатьСправкуОФормате(ПараметрыПодготовки.ОбработчикЗавершения);
		
	Иначе
		
		Если ТипЗнч(ПараметрыПодготовки.Данные) = Тип("Структура") Тогда
			ОбъектУчета = ПараметрыПодготовки.Данные.ОбъектУчета;
		Иначе
			ОбъектУчета = ПараметрыПодготовки.Данные;
		КонецЕсли;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ОбъектУчета", ОбъектУчета);
		ПараметрыОткрытия.Вставить("ИспользуемыеВариантыВыбораФайла",
															СвойстваВариантовВыбора.ИспользуемыеВариантыВыбораФайла);
		ПараметрыОткрытия.Вставить("ВариантВыбораФайлаПоУмолчанию",
															СвойстваВариантовВыбора.ВариантВыбораФайлаПоУмолчанию);
		
		ОткрытьФорму("Обработка.ФорматДоговорныйДокумент101.Форма.ФормаВыбораФайла", ПараметрыОткрытия, , , , ,
			ПараметрыПодготовки.ОбработчикЗавершения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	КонецЕсли;
	
КонецПроцедуры

// Показывает пользователю справку о формате договорного документа PDF/A3.
// 
// Параметры:
//  ОписаниеОповещенияОЗавершении - ОписаниеОповещения - будет вызвана после ответа на вопрос.
//
&НаКлиенте
Процедура ПоказатьСправкуОФормате(ОписаниеОповещенияОЗавершении)
	
	ПараметрыПриложенияПДФ_А3 = ПараметрыПриложенияПДФ_А3();
	БольшеНеЗадаватьЭтотВопрос = ПараметрыПриложенияПДФ_А3.БольшеНеЗадаватьЭтотВопрос;
	
	Если НЕ БольшеНеЗадаватьЭтотВопрос Тогда
		
		ТекстВопроса = 
			НСтр("ru = 'Договорный документ составляется из двух частей:
			|1. Файла договора в формате PDF, выбираемого с компьютера.
			|2. Автоматически генерируемого XML-вложения, сформированного по данным документа учета.
			|Сейчас будет предложено выбрать файл договора в формате PDF.
			|
			|Продолжить?'");
			
		ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
		ПараметрыВопроса.Заголовок = НСтр("ru = 'Формат договорного документа PDF/A3'");
		ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Истина;
		ПараметрыВопроса.БлокироватьВесьИнтерфейс = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ОписаниеОповещенияОЗавершении", ОписаниеОповещенияОЗавершении);
		
		ИмяПроцедуры = "ПоказатьСправкуОФорматеЗавершение";
		ОписаниеОповещения = Новый ОписаниеОповещения(ИмяПроцедуры, ЭтотОбъект, ДополнительныеПараметры);
		
		СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(
			ОписаниеОповещения, 
			ТекстВопроса, 
			РежимДиалогаВопрос.ДаНет, 
			ПараметрыВопроса);
		
	Иначе

		ЗапроситьФайлСДиска(ОписаниеОповещенияОЗавершении);
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры приложения по формату PDF/A3.
// 
// Возвращаемое значение:
//  см. НовыйПараметрыПриложенияПДФ_А3
//
&НаКлиенте
Функция ПараметрыПриложенияПДФ_А3()
	
	ИмяПараметра = "ЭлектронноеВзаимодействие.СправкаПоФорматуПДФ_А3";
	ПараметрыПриложенияПДФ_А3 = ПараметрыПриложения[ИмяПараметра]; // Неопределено,
																   // Структура: *БольшеНеЗадаватьЭтотВопрос - Булево
	
	Если ПараметрыПриложенияПДФ_А3 = Неопределено Тогда
		ПараметрыПриложенияПДФ_А3 = НовыйПараметрыПриложенияПДФ_А3();
		ПараметрыПриложения.Вставить(ИмяПараметра, ПараметрыПриложенияПДФ_А3);
	КонецЕсли;
	
	Возврат ПараметрыПриложенияПДФ_А3;
	
КонецФункции

// Новые параметры приложения по формату PDF/A3.
// 
// Возвращаемое значение:
//  Структура - новые параметры приложения по формату PDF/A3:
//    * БольшеНеЗадаватьЭтотВопрос - Булево
//
&НаКлиенте
Функция НовыйПараметрыПриложенияПДФ_А3()
	
	НовыеПараметры = Новый Структура;
	НовыеПараметры.Вставить("БольшеНеЗадаватьЭтотВопрос", Ложь);
	
	Возврат НовыеПараметры;
	
КонецФункции

// После ответа на вопрос.
// 
// Параметры:
//  Результат - Неопределено
//            - Структура:
//              * Значение - КодВозвратаДиалога
//              * БольшеНеЗадаватьЭтотВопрос - Булево
//              
//  ДополнительныеПараметры - Структура:
//  * ОписаниеОповещенияОЗавершении - ОписаниеОповещения
//
&НаКлиенте
Процедура ПоказатьСправкуОФорматеЗавершение(Результат, ДополнительныеПараметры) Экспорт

	ПараметрыПриложенияПДФ_А3 = ПараметрыПриложенияПДФ_А3();

	Если Результат <> Неопределено И Результат.Значение = КодВозвратаДиалога.Да Тогда
		
		ПараметрыПриложенияПДФ_А3.БольшеНеЗадаватьЭтотВопрос = Результат.БольшеНеЗадаватьЭтотВопрос;
		ЗапроситьФайлСДиска(ДополнительныеПараметры.ОписаниеОповещенияОЗавершении);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти