
#Область ОписаниеПеременных

&НаКлиенте
Перем СоответствиеВиджетовИменСтраниц;

&НаКлиенте
Перем СоответствиеВиджетовРазделов;

&НаКлиенте
Перем СоответствиеРазделовРеквизитов;

&НаКлиенте
Перем СоответствиеРеквизитовРазделов;

&НаКлиенте
Перем СоответствиеВиджетовРазделовПоУмолчанию;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СброситьРазмерыИПоложениеОкна();
	ОбработатьПереданныеПараметры();
	УправлениеДоступностью(ЭтотОбъект, СоответствиеВиджетовИменСтраниц());
	ОпределитьВидимостьРазделовПоПравам();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДанныеСопоставлений = СоответствияВиджетовЭлементамФормы();
	СоответствиеВиджетовИменСтраниц         = ДанныеСопоставлений.СоответствиеВиджетовИменСтраниц;
	СоответствиеВиджетовРазделов            = ДанныеСопоставлений.СоответствиеВиджетовРазделов;
	СоответствиеРазделовРеквизитов          = ДанныеСопоставлений.СоответствиеРазделовРеквизитов;
	СоответствиеРеквизитовРазделов          = ДанныеСопоставлений.СоответствиеРеквизитовРазделов;
	СоответствиеВиджетовРазделовПоУмолчанию = ДанныеСопоставлений.СоответствиеВиджетовРазделовПоУмолчанию;
	
	УстановитьТекущуюСтраницуВиджета(СоответствиеВиджетовИменСтраниц);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаВиджетовПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиТаблицыВиджетов", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоследниеСобытияЗакупкиПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВРаботеЗакупкиПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклоненияПриВыполненииЗакупкиПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АрхивЗакупкиПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоследниеСобытияПродажиПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВРаботеПродажиПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклоненияПриВыполненииПродажиПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АрхивПродажиПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольПоступленийПросроченоПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольПоступленийСегодняПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольПоступленийЗавтраПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольПоступленийТриДняПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольПоступленийНеделяПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольОтгрузокПросроченоПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольОтгрузокСегодняПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольОтгрузокЗавтраПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольОтгрузокТриДняПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольОтгрузокНеделяПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказПоставщикуПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиТорговоеПредложениеПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураКонтрагентовПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПриИзменении(Элемент)
	
	ПриИзмененииИспользованияРаздела(Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОк(Команда)
	
	ВозвращаемыеДанные = Новый Структура;
	
	ИспользуемыеРазделы = Новый Массив;
	
	Для Каждого ДанныеВиджета Из ТаблицаВиджетов Цикл
		
		Если ДанныеВиджета.Выбран Тогда
			
			РазделыВиджета =  СоответствиеВиджетовРазделов.Получить(ДанныеВиджета.Виджет);
			Если РазделыВиджета = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого РазделВиджета Из РазделыВиджета Цикл
				Если ВыбранныеРазделы.НайтиПоЗначению(РазделВиджета) <> Неопределено Тогда
					ИспользуемыеРазделы.Добавить(РазделВиджета);
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВозвращаемыеДанные.Вставить("ВыбранныеВиджеты",    ТекущиеДелаEDIКлиент.ВыбранныеВТаблицеВиджеты(ТаблицаВиджетов));
	ВозвращаемыеДанные.Вставить("ВыбранныеРазделы", ИспользуемыеРазделы);
	
	Закрыть(ВозвращаемыеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияДанныхФормы

&НаСервере
Процедура ОбработатьПереданныеПараметры()

	Если ТипЗнч(Параметры.ВыбранныеВиджеты) <> Тип("Массив") Тогда
		
		ВыбранныеВиджеты = Новый Массив;
		
	Иначе
		
		ВыбранныеВиджеты = Параметры.ВыбранныеВиджеты;
		
	КонецЕсли;
	
	ТекущийВиджет             = Параметры.ТекущийВиджет;
	ОтображатьТаблицуВиджетов = Параметры.ОтображатьТаблицуВиджетов;
	
	ТекущиеДелаEDI.ЗаполнитьТаблицуВиджетов(ТаблицаВиджетов, ВыбранныеВиджеты);
	УстановитьТекущийВиджет();
	
	СоответствиеРазделовРеквизитов = СоответствиеРазделовРеквизитов();
	Для Каждого ВыбранныйРаздел Из Параметры.ВыбранныеРазделы Цикл
		ИмяРеквизита = СоответствиеРазделовРеквизитов.Получить(ВыбранныйРаздел);
		Если ИмяРеквизита <> Неопределено Тогда
			ЭтотОбъект[ИмяРеквизита] = Истина;
		КонецЕсли;
		ВыбранныеРазделы.Добавить(ВыбранныйРаздел);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущийВиджет()
	
	Для Каждого СтрокаТаблицы Из ТаблицаВиджетов Цикл
		
		Если ЗначениеЗаполнено(ТекущийВиджет) Тогда
			Если ТекущийВиджет = СтрокаТаблицы.Виджет Тогда
				УстановитьТекущуюСтрокуТаблицыВиджетов(ЭтотОбъект, СтрокаТаблицы.ПолучитьИдентификатор());
				Возврат;
			КонецЕсли;
		Иначе
			ТекущийВиджет = СтрокаТаблицы.Виджет;
			УстановитьТекущуюСтрокуТаблицыВиджетов(ЭтотОбъект, СтрокаТаблицы.ПолучитьИдентификатор());
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтрокуТаблицыВиджетов(Форма, ИдентификаторСтроки)
	
	Форма.Элементы.ТаблицаВиджетов.ТекущаяСтрока = ИдентификаторСтроки;
	
КонецПроцедуры

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить("Обработка.ТекущиеДелаEDI.Форма.НастройкиВиджетов", "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФоры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма, СоответствиеВиджетовИменСтраниц)
	
	УправлениеОтображениемТаблицыВиджетов(Форма);
	УстановитьДоступностьЭлементовРазделов(Форма, СоответствиеВиджетовИменСтраниц);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементовРазделов(Форма, СоответствиеВиджетовИменСтраниц)

	Элементы = Форма.Элементы;
	
	Для Каждого СтрокаТаблицы Из Форма.ТаблицаВиджетов Цикл
		
		ИмяЭлемента = СоответствиеВиджетовИменСтраниц.Получить(СтрокаТаблицы.Виджет);
		Если ИмяЭлемента = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Элементы[ИмяЭлемента].Доступность = СтрокаТаблицы.Выбран;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеОтображениемТаблицыВиджетов(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Форма.ОтображатьТаблицуВиджетов Тогда
		
		Элементы.ГруппаТаблицаВиджетов.Видимость                       = Истина;
		Элементы.ДекорацияУправлениеВидимостьюТаблицыВиджетов.Заголовок = Новый ФорматированнаяСтрока(НСтр("ru = 'Скрыть все виджеты'"),,,,"СкрытьТаблицуВиджетов");
		
	Иначе
		
		Элементы.ГруппаТаблицаВиджетов.Видимость                       = Ложь;
		Элементы.ДекорацияУправлениеВидимостьюТаблицыВиджетов.Заголовок = Новый ФорматированнаяСтрока(НСтр("ru = 'Показать все виджеты'"),,,,"ПоказатьТаблицуВиджетов");
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокЧтоВыбираем()
	
	ЗаголовокДекорации = "";
	
	Если ТекущийВиджет = ПредопределенноеЗначение("Перечисление.ДоступныеВиджетыТекущихДелEDI.Купить") Тогда
		ЗаголовокДекорации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выберите отображаемые команды виджета ""%1""'"), Строка(ТекущийВиджет));
	Иначе
		ЗаголовокДекорации =СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выберите отображаемые разделы виджета ""%1""'"), Строка(ТекущийВиджет));;
	КонецЕсли;
	
	Элементы.ДекорацияЗаголовокВыберитеРазделы.Заголовок = ЗаголовокДекорации;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтраницуВиджета(СоответствиеВиджетовИменСтраниц)
	
	Если Не ЗначениеЗаполнено(ТекущийВиджет) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницыНастройкиПоВиджетам.ТекущаяСтраница = Элементы[СоответствиеВиджетовИменСтраниц.Получить(ТекущийВиджет)];
	УстановитьЗаголовокЧтоВыбираем();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаДействийПользователя

&НаКлиенте
Процедура ДекорацияВидНастроекОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "СкрытьТаблицуВиджетов" Тогда
		
		ОтображатьТаблицуВиджетов = Ложь;
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьТаблицуВиджетов" Тогда
		
		ОтображатьТаблицуВиджетов = Истина;
		
	КонецЕсли;
	
	УправлениеОтображениемТаблицыВиджетов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиТаблицыВиджетов()

	ТекущиеДанные = Элементы.ТаблицаВиджетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийВиджет = ТекущиеДанные.Виджет;
	УстановитьТекущуюСтраницуВиджета(СоответствиеВиджетовИменСтраниц);

КонецПроцедуры

&НаКлиенте
Функция ПриИзмененииИспользованияРаздела(Элемент)
	
	ЗначениеРаздела = СоответствиеРеквизитовРазделов.Получить(Элемент.Имя);
	Если ЗначениеРаздела <> Неопределено Тогда
		ЭлементСписка = ВыбранныеРазделы.НайтиПоЗначению(ЗначениеРаздела);
		Если ЭтотОбъект[Элемент.Имя] Тогда
			Если ЭлементСписка = Неопределено Тогда
				ВыбранныеРазделы.Добавить(ЗначениеРаздела);
			КонецЕсли;
		Иначе
			Если ЭлементСписка <> Неопределено Тогда
				ВыбранныеРазделы.Удалить(ЭлементСписка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли
	
КонецФункции

#КонецОбласти

#Область ПриИзмененииСоставаВиджетов

&НаКлиенте
Процедура ТаблицаВиджетовВыбранПриИзменении(Элемент)
	
	УправлениеДоступностью(ЭтотОбъект, СоответствиеВиджетовИменСтраниц);
	УстановитьРазделыВиджетаПоУмолчаниюПриВключении();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРазделыВиджетаПоУмолчаниюПриВключении()
	
	Если Не ЗначениеЗаполнено(ТекущийВиджет) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ТаблицаВиджетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийВиджет = ТекущиеДанные.Виджет;
	
	Если Не ТекущиеДанные.Выбран Тогда
		Возврат;
	КонецЕсли;
	
	РазделыТекущегоВиджета = СоответствиеВиджетовРазделов.Получить(ТекущийВиджет);
	
	Если РазделыТекущегоВиджета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьХотьОдинВключенныйРаздел = Ложь;
	Для Каждого РазделТекущегоВиджета Из РазделыТекущегоВиджета Цикл
		
		ИмяРеквизитаТекущегоРаздела = СоответствиеРазделовРеквизитов.Получить(РазделТекущегоВиджета);
		Если ИмяРеквизитаТекущегоРаздела = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭтотОбъект[ИмяРеквизитаТекущегоРаздела] Тогда
			ЕстьХотьОдинВключенныйРаздел = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ЕстьХотьОдинВключенныйРаздел Тогда
		
		РазделыПоУмолчаниюТекущегоВиджета = СоответствиеВиджетовРазделовПоУмолчанию.Получить(ТекущийВиджет);
		
		Если РазделыПоУмолчаниюТекущегоВиджета = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Для Каждого РазделПоУмолчанию Из РазделыПоУмолчаниюТекущегоВиджета Цикл
			
			ИмяРеквизитаТекущегоРаздела = СоответствиеРазделовРеквизитов.Получить(РазделПоУмолчанию);
			Если ИмяРеквизитаТекущегоРаздела = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ЭтотОбъект[ИмяРеквизитаТекущегоРаздела] = Истина;
			ВыбранныеРазделы.Добавить(РазделПоУмолчанию);
			
		КонецЦикла
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОписаниеРазличныхСоответствий

&НаСервере
Функция СоответствияВиджетовЭлементамФормы()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("СоответствиеВиджетовИменСтраниц",         СоответствиеВиджетовИменСтраниц());
	СтруктураВозврата.Вставить("СоответствиеВиджетовРазделов",            СоответствиеВиджетовРазделов());
	СтруктураВозврата.Вставить("СоответствиеВиджетовРазделовПоУмолчанию", СоответствиеВиджетовРазделовПоУмолчанию());
	СтруктураВозврата.Вставить("СоответствиеРазделовРеквизитов",          СоответствиеРазделовРеквизитов());
	СтруктураВозврата.Вставить("СоответствиеРеквизитовРазделов",          СоответствиеРеквизитовРазделов());
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Функция СоответствиеВиджетовИменСтраниц()
	
	СоответствиеВиджетовИменСтраниц = Новый Соответствие;
	
	Для Инд =1 По Перечисления.ДоступныеВиджетыТекущихДелEDI.Количество() Цикл
		
		ЗначениеПеречисления = Перечисления.ДоступныеВиджетыТекущихДелEDI.Получить(Инд - 1);
		ИмяЭлемента = "СтраницаВиджет" + ЗначениеПеречисления.Метаданные().ЗначенияПеречисления.Получить(Инд -1).Имя;
		СоответствиеВиджетовИменСтраниц.Вставить(ЗначениеПеречисления, ИмяЭлемента);
		
	КонецЦикла;
	
	Возврат СоответствиеВиджетовИменСтраниц;
	
КонецФункции

&НаСервере
Функция СоответствиеВиджетовРазделов()
	
	СоответствиеВиджетовРазделов = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы Из ТаблицаВиджетов Цикл
		
		СоответствиеВиджетовРазделов.Вставить(СтрокаТаблицы.Виджет, ТекущиеДелаEDIКлиентСервер.РазделыВиджета(СтрокаТаблицы.Виджет));
		
	КонецЦикла;
	
	Возврат СоответствиеВиджетовРазделов;
	
КонецФункции

&НаСервере
Функция СоответствиеВиджетовРазделовПоУмолчанию()
	
	СоответствиеВиджетовРазделовПоУмолчанию = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы Из ТаблицаВиджетов Цикл
		
		СоответствиеВиджетовРазделовПоУмолчанию.Вставить(СтрокаТаблицы.Виджет, ТекущиеДелаEDI.РазделыПоУмолчанию(СтрокаТаблицы.Виджет));
		
	КонецЦикла;
	
	Возврат СоответствиеВиджетовРазделовПоУмолчанию;
	
КонецФункции 

&НаСервере
Функция СоответствиеРазделовРеквизитов()
	
	СоответствиеРазделовРеквизитов = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы Из ТаблицаВиджетов Цикл
		
		Для Каждого РазделВиджета Из ТекущиеДелаEDIКлиентСервер.РазделыВиджета(СтрокаТаблицы.Виджет) Цикл
			Если ТекущиеДелаEDI.РазделВиджетаДоступенПоПравам(РазделВиджета) Тогда
				СоответствиеРазделовРеквизитов.Вставить(РазделВиджета, ОбщегоНазначения.ИмяЗначенияПеречисления(РазделВиджета));
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат СоответствиеРазделовРеквизитов;
	
КонецФункции

&НаСервере
Функция СоответствиеРеквизитовРазделов()
	
	СоответствиеРеквизитовРазделов = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы Из ТаблицаВиджетов Цикл
		
		Для Каждого РазделВиджета Из ТекущиеДелаEDIКлиентСервер.РазделыВиджета(СтрокаТаблицы.Виджет) Цикл
			Если ТекущиеДелаEDI.РазделВиджетаДоступенПоПравам(РазделВиджета) Тогда
				СоответствиеРеквизитовРазделов.Вставить(ОбщегоНазначения.ИмяЗначенияПеречисления(РазделВиджета), РазделВиджета);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат СоответствиеРеквизитовРазделов;
	
КонецФункции

&НаСервере
Процедура ОпределитьВидимостьРазделовПоПравам()

	СоответствиеРазделовРеквизитов = СоответствиеРазделовРеквизитов();
	
	Для Каждого МетаданныеЗначенияПеречисления Из Метаданные.Перечисления.РазделыВиджетовEDI.ЗначенияПеречисления Цикл
		
		ИмяЗначенияПеречисления = МетаданныеЗначенияПеречисления.Имя;
		ЗначениеПеречисления = Перечисления.РазделыВиджетовEDI[ИмяЗначенияПеречисления];
		
		Если СоответствиеРазделовРеквизитов.Получить(ЗначениеПеречисления) = Неопределено Тогда
			ЭтаФорма[ИмяЗначенияПеречисления] = Ложь;
			Элементы[ИмяЗначенияПеречисления].Видимость = Ложь; 
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
