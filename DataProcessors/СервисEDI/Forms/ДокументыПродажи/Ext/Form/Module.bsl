
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АвтоНавигационнаяСсылка = Ложь;
	НавигационнаяСсылка = "e1cib/app/" + ЭтотОбъект.ИмяФормы;
	
	ИнициализироватьДанныеФормы();
	
	УстановитьУсловноеОформление();
	
	ДокументыEDI.УстановитьОтборыПриСозданииНаСервере(ЭтотОбъект);
	ДокументыEDIКлиентСервер.УправлениеОтображениемПанелиОтбораРеестрДокументов(ЭтотОбъект);
	ДокументыEDIИнтеграция.СформироватьЗаголовокСмотриТакже(ЭтотОбъект, Перечисления.КатегорииДокументовEDI.Продажа);
	ДокументыEDIИнтеграция.ФормаСпискаПрикладныхОбъектовЗаполнитьОрганизацииТребующиеПовторногоПодключения(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	ДокументыEDI.ПередЗагрузкойДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДокументыEDIКлиент.СвернутьАрхивДеревоСтатусов(ЭтотОбъект, ДеревоСтатусов);
	Если Не УстановкаОтбораПоСтатусамТипамВыполнялась Тогда
		УстановитьОтборПоТипуДокументовСтатусам();
	КонецЕсли;
	
	ДокументыEDIИнтеграцияКлиент.ПроверитьОрганизацииТребующиеПовторногоПодключения(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ЗаказПоставщику"
		Или ИмяСобытия = "Запись_РеестрДокументов" Тогда
		
		ОбработатьОповещениеОЗаписиДокументаЖурнала();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МенеджерПриИзменении(Элемент)
	
	ПриИзмененииОтбораПоМенеджеруСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПриИзмененииОтбораПоОрганизацииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусСоответствияПриИзменении(Элемент)
	
	ПриИзмененииОтбораПоСтатусуСоответствия();
	
КонецПроцедуры

&НаКлиенте
Процедура ПлановаяДатаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОповещениеОФормированииПериодаПлановойДаты = Новый ОписаниеОповещения("ПлановаяДатаПослеВыбора", ЭтотОбъект);
	
	ДокументыEDIКлиент.ПлановаяДатаОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ОповещениеОФормированииПериодаПлановойДаты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлановаяДатаОчистка(Элемент, СтандартнаяОбработка)
	
	ПлановаяДатаПериод.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	ПлановаяДатаПериод.ДатаНачала    = Дата(1, 1, 1);
	ПлановаяДатаПериод.ДатаОкончания = Дата(1, 1, 1);
	
	УстановитьОтборПоПлановойДате();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСмотриТакжеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ДокументыEDIИнтеграцияКлиент.ДекорацияСмотриТакжеОбработкаНавигационнойСсылки(ЭтотОбъект,
	                                                                              Элемент,
	                                                                              НавигационнаяСсылкаФорматированнойСтроки, 
	                                                                              СтандартнаяОбработка, 
	                                                                              ПредопределенноеЗначение("Перечисление.КатегорииДокументовEDI.Продажа"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Для каждого ЭлементКоллекции Из Строки Цикл
		
		ДанныеСтроки = ЭлементКоллекции.Значение.Данные;
		
		ДанныеДокумента = ДокументыEDI.ДанныеДокументаДляФормированияСостояния();
		ДанныеДокумента.ТекущийСтатус                                  = ДанныеСтроки.ТекущийСтатус;
		ДанныеДокумента.ПредыдущийСтатус                               = ДанныеСтроки.ПредыдущийСтатус;
		ДанныеДокумента.ПоследнееДействие                              = ДанныеСтроки.ПоследнееДействие;
		ДанныеДокумента.СторонаВыполнившаяДействие                     = ДанныеСтроки.СторонаВыполнившаяДействие;
		ДанныеДокумента.ДатаТекущегоСтатуса                            = ДанныеСтроки.ДатаТекущегоСтатуса;
		ДанныеДокумента.ДатаУточнениеСостоянияПоДаннымСтороныУчастника = ДанныеСтроки.ДатаУточнениеСостоянияПоДаннымСтороныУчастника;
		ДанныеДокумента.УточнениеСостоянияПоДаннымСтороныУчастника     = ДанныеСтроки.УточнениеСостоянияПоДаннымСтороныУчастника;
		ДанныеДокумента.ТипДокумента                                   = ДанныеСтроки.ТипДокумента;
		
		ДанныеСтроки.Состояние = ДокументыEDI.ПредставлениеСостоянияДокумента(ДанныеДокумента);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ДокументыEDIКлиент.ИзменитьЭлемент(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДокументыEDIКлиент.ИзменитьЭлемент(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоСтатусов

&НаКлиенте
Процедура ДеревоСтатусовВыбранПриИзменении(Элемент)
	
	ДокументыEDIКлиент.ДеревоСтатусовВыбранПриИзменении(ЭтотОбъект, Элемент);
	ДокументыEDIКлиентСервер.УправлениеОтображениемПанелиОтбораРеестрДокументов(ЭтотОбъект);
	УстановитьОтборПоТипуДокументовСтатусам();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВидимостьПанелиОтборов(Команда)
	
	ОтборПоСтатусамОтображается = Не ОтборПоСтатусамОтображается;
	
	ДокументыEDIКлиентСервер.УправлениеОтображениемПанелиОтбораРеестрДокументов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеИзСервиса(Команда)
	
	Если Не ОбновлениеВыполняется
		И (ОбщегоНазначенияКлиент.ДатаСеанса() > ДатаПредыдущегоОбновления + 15) Тогда
		НачатьОбновлениеДанныхИзСервиса();
	КонецЕсли;
	
КонецПроцедуры

#Область ДеревоСтатусов

&НаКлиенте
Процедура СнятьВсеСтатусы(Команда)
	
	ДокументыEDIКлиент.ИзменитьФлажкиПодчиненныхПриИзмененииРодителя(Ложь, ДеревоСтатусов);
	ДокументыEDIКлиентСервер.УправлениеОтображениемПанелиОтбораРеестрДокументов(ЭтотОбъект);
	УстановитьОтборПоТипуДокументовСтатусам();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеСтатусы(Команда)
	
	ДокументыEDIКлиент.ИзменитьФлажкиПодчиненныхПриИзмененииРодителя(Истина, ДеревоСтатусов);
	ДокументыEDIКлиентСервер.УправлениеОтображениемПанелиОтбораРеестрДокументов(ЭтотОбъект);
	УстановитьОтборПоТипуДокументовСтатусам();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСтатусыНаНашейСтороне(Команда)
	
	ДокументыEDIКлиентСервер.УстановитьПометкиДеревоСтатусовСогласноВыбраннымСтатусам(
		ДеревоСтатусов,
		ДокументыEDIКлиентСервер.МассивСтатусовНаСторонеПродавца());
	ДокументыEDIКлиентСервер.УправлениеОтображениемПанелиОтбораРеестрДокументов(ЭтотОбъект);
	УстановитьОтборПоТипуДокументовСтатусам();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСтатусыНаСторонеКонтрагента(Команда)
	
	ДокументыEDIКлиентСервер.УстановитьПометкиДеревоСтатусовСогласноВыбраннымСтатусам(
		ДеревоСтатусов,
		ДокументыEDIКлиентСервер.МассивСтатусовНаСторонеПокупателя());
	ДокументыEDIКлиентСервер.УправлениеОтображениемПанелиОтбораРеестрДокументов(ЭтотОбъект);
	УстановитьОтборПоТипуДокументовСтатусам();
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	ОчиститьСообщения();
	
	Результат = ДокументыEDIИнтеграцияКлиент.РезультатПодготовкиЗагрузкиДокументовИзСервиса(ЭтотОбъект);
	
	Если Результат.КоличествоКЗагрузке > 0 Тогда
		 ДокументыEDIИнтеграцияКлиент.ЗагрузитьОбновитьПрикладныеДокументыИзСписка(Результат, ЭтотОбъект, Элементы.Список);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Список

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Оповещение = Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект);
	
	ДокументыEDIКлиент.РедактироватьПериод(Период, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьОтображаемыеДанные();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеДанныхИзСервиса

&НаКлиенте
Процедура НачатьОбновлениеДанныхИзСервиса()
	
	ЗаголовокОповещения = ЗаголовокОповещенияОбновлениеИзСервиса();
	ТекстСообщения = НСтр("ru = 'Начато обновление данных документов в сервисе'");
	
	ПоказатьОповещениеПользователя(ЗаголовокОповещения,
	                               , 
	                               ТекстСообщения, 
	                               Неопределено, 
	                               СтатусОповещенияПользователя.Информация);
	
	ДлительнаяОперация = РезультатОбновленияДанныхИзСервисаДлительнаяОперация();
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеВыполняется = Истина;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭлементСписок",       Элементы.Список);
	ДополнительныеПараметры.Вставить("НавигационнаяСсылка", Неопределено);
	Если ЭтотОбъект.Окно <> Неопределено Тогда
		ДополнительныеПараметры.НавигационнаяСсылка = Окно.ПолучитьНавигационнуюСсылку();
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ОбновитьДанныеИзСервисаЗавершение(ДлительнаяОперация, ДополнительныеПараметры);
	ИначеЕсли ДлительнаяОперация.Статус = "Выполняется" Тогда
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьДанныеИзСервисаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РезультатОбновленияДанныхИзСервисаДлительнаяОперация()
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Организации", ОбновлениеДанныхEDI.ОрганизацииПодключенныеКEDI());
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление реестра документов EDI'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("РегистрыСведений.СостоянияДокументовEDI.ОбновитьДанныеИзСервиса",
		ПараметрыПроцедуры, ПараметрыВыполнения);
		
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьДанныеИзСервисаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновлениеВыполняется = Ложь;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаголовокОповещения = ЗаголовокОповещенияОбновлениеИзСервиса();
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Не Результат.Статус = "Выполнено" Тогда
		Возврат;
	КонецЕсли;
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	ШаблонСообщения = НСтр("ru = 'Обновлено записей - %1. %2'");
	КоличествоЗаписей = РезультатВыполнения.КоличествоЗаписей;
	
	Если РезультатВыполнения.Ошибки.Количество() > 0 Тогда
		ТекстПроблемы = НСтр("ru = 'Не удалось выполнить все действия. Технические подробности для администратора в журнале регистрации.'");
		КартинкаОповещения = БиблиотекаКартинок.Ошибка32;
		СтатусОповещения   = СтатусОповещенияПользователя.Важное;
	Иначе
		ТекстПроблемы      = "";
		КартинкаОповещения = Неопределено;
		СтатусОповещения   = СтатусОповещенияПользователя.Информация;
	КонецЕсли;
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, КоличествоЗаписей, ТекстПроблемы);
	
	ПоказатьОповещениеПользователя(ЗаголовокОповещения,
	                               ДополнительныеПараметры.НавигационнаяСсылка, 
	                               ТекстСообщения, 
	                               КартинкаОповещения, 
	                               СтатусОповещения);

	ДополнительныеПараметры.ЭлементСписок.Обновить();
	ДатаПредыдущегоОбновления = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	Если РазделениеВключено Тогда
		ПодключитьОбработчикОжидания("ПроверитьНеобходимостьОбновленияДанныхИзСервиса", 150, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеобходимостьОбновленияДанныхИзСервиса()

	Если Не РазделениеВключено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбновлениеВыполняется
		И (ОбщегоНазначенияКлиент.ДатаСеанса() > ДатаПредыдущегоОбновления + 15) Тогда
		НачатьОбновлениеДанныхИзСервиса();
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ПроверитьНеобходимостьОбновленияДанныхИзСервиса", 150, Истина);
	
КонецПроцедуры

&НаКлиенте
Функция ЗаголовокОповещенияОбновлениеИзСервиса()
	
	Возврат НСтр("ru = 'Обновление данных из 1C: EDI'");
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СписокУсловноеОформление = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
	СписокУсловноеОформление.Элементы.Очистить();
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект,
		"Список.ДатаДокумента",
		"ДатаДокумента");
	
	ДокументыEDI.УстановитьУсловноеОформлениеПлановаяДатаВыполнения(ЭтотОбъект, СписокУсловноеОформление);
	ДокументыEDI.УстановитьУсловноеОформлениеСостояние(ЭтотОбъект, СписокУсловноеОформление);
	ДокументыEDI.УстановитьУсловноеОформлениеДеревоСтатусов(ЭтотОбъект, УсловноеОформление);
	ДокументыEDIИнтеграция.УстановитьУсловноеОформлениеЗагруженныйДокумент(ЭтотОбъект, СписокУсловноеОформление)
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьДанныеФормы()
	
	ТекущаяДата = НачалоДня(ТекущаяДатаСеанса());
	РазделениеВключено = ОбщегоНазначения.РазделениеВключено();
	
	КартинкаВлево = БиблиотекаКартинок.ПереместитьВлево;
	КартинкаВправо = БиблиотекаКартинок.ПереместитьВправо;
	
	ДокументыEDI.ПостроитьДеревоСтатусов(ДеревоСтатусов);
	ДокументыEDI.ЗаполнитьТаблицуОтбораДокументовПродажи(ТипыДокументов);
	
	ДокументыEDI.ЗаполнитьСписокВыбораПлановаяДата(ЭтотОбъект);
	
	ОтборПоСтатусамОтображается = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоТипуДокументовСтатусам()
	
	ДокументыEDI.УстановитьОтборПоДокументамСтатусам(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ДокументыEDI.СохранитьНастройкиВыбранныхСтатусов(Настройки, ДеревоСтатусов);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьОповещениеОЗаписиДокументаЖурнала()
	
	ОбновитьОтображаемыеДанные();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображаемыеДанные()
	
	ДокументыEDI.ОбновитьСписокДокументов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Период = ВыбранноеЗначение;
	УстановитьОтборПоПериоду();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоПериоду()
	
	ДокументыEDI.УстановитьОтборПоПериоду(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоПлановойДате()
	
	ДокументыEDI.УстановитьОтборПоПлановойДате(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлановаяДатаПослеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		УстановитьОтборПоПлановойДате();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОтбораПоМенеджеруСервер()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
	                                                                        "Менеджер",
	                                                                        Менеджер,
	                                                                        ВидСравненияКомпоновкиДанных.Равно,
	                                                                        ,
	                                                                        ЗначениеЗаполнено(Менеджер));
	
	ДокументыEDI.ЗаполнитьКоличествоВДеревеСтатусов(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОтбораПоОрганизацииСервер()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
	                                                                        "Организация",
	                                                                        Организация,
	                                                                        ВидСравненияКомпоновкиДанных.Равно,
	                                                                        ,
	                                                                        ЗначениеЗаполнено(Организация));
	
	ДокументыEDI.ЗаполнитьКоличествоВДеревеСтатусов(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОтбораПоСтатусуСоответствия()
	
	ДокументыEDIИнтеграция.УстановитьОтборСтатусСоответствияПрикладногоОбъекта(ЭтотОбъект);
	
	ДокументыEDI.ЗаполнитьКоличествоВДеревеСтатусов(ЭтотОбъект)
	
КонецПроцедуры

#КонецОбласти

