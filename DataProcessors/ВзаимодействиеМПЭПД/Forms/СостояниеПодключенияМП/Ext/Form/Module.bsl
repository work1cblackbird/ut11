
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользуетсяНесколькоОрганизаций = ОбщегоНазначенияБЭД.ИспользуетсяНесколькоОрганизаций();
	Элементы.ТекущаяУчетнаяЗаписьЭДО.Видимость = ИспользуетсяНесколькоОрганизаций;
	Элементы.МобильныеУстройстваОрганизация.Видимость = ИспользуетсяНесколькоОрганизаций;
	
	ТекущаяОрганизация = Параметры.Организация;
	
	ЗаполнитьДанныеОрганизаций();
	ЗаполнитьДанныеПользователей();
	СоздатьТаблицуИндексовКартинок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриИзмененииОрганизации();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = СервисВзаимодействияМПЭПДКлиент.ИмяОповещенияОбОбновленииСпискаМобильныхУстройств() Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура") Тогда
			СтруктураОбработкиОповещенияОНовомСостоянии = Новый ФиксированнаяСтруктура(Параметр);
		Иначе
			СтруктураОбработкиОповещенияОНовомСостоянии = Неопределено;
		КонецЕсли;
		
		ЗаполнитьТаблицуДанныхОрганизаций();
		ОбновитьВсеОрганизации = Истина;
		ОбновитьМобильныеПриложенияКлиент(ОбновитьВсеОрганизации);
		
	ИначеЕсли ИмяСобытия = СервисВзаимодействияМПЭПДКлиент.ИмяОповещенияОбИзмененииУстройства() Тогда
		
		ИзменитьЗаписьТаблицыПоСтруктуреДочернейФормы(Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекущаяУчетнаяЗаписьЭДОПриИзменении(Элемент)
	
	ПриИзмененииОрганизации();

КонецПроцедуры

&НаКлиенте
Процедура ОтображатьПриостановленыеПриИзменении(Элемент)
	
	ИзменитьОтображениеПриостановленных();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМобильныеУстройства

&НаКлиенте
Процедура МобильныеУстройстваВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Элементы.МобильныеУстройства.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьМобильноеПриложениеКлиент(ТекущаяСтрока.Идентификатор, ТекущаяСтрока.ИдентификаторЭДО,
		ТекущаяСтрока.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура МобильныеУстройстваПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.МобильныеУстройства.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДоступностьКнопокУправленияУстройством(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтключитьВсехПользователей(Команда)
	
	Если Не ЗначениеЗаполнено(ТекущаяОрганизация) Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрокУчетныхЗаписей = УчетныеЗаписиМПЭПД.НайтиСтроки(Новый Структура("Организация", ТекущаяОрганизация));
	
	Для Каждого СтрокаУчетнойЗаписи Из МассивСтрокУчетныхЗаписей Цикл
		
		Если СтрокаУчетнойЗаписи.Всего = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураДанныхОрганизации = Новый Структура();
		СтруктураДанныхОрганизации.Вставить("Организация", СтрокаУчетнойЗаписи.Организация);
		СтруктураДанныхОрганизации.Вставить("Всего", СтрокаУчетнойЗаписи.Всего);
		СтруктураДанныхОрганизации.Вставить("ИдентификаторСтроки", СтрокаУчетнойЗаписи.ПолучитьИдентификатор());
		СтруктураДанныхОрганизации.Вставить("ДатаОбновления", СтрокаУчетнойЗаписи.ДатаОбновления);
		СтруктураДанныхОрганизации.Вставить("ВсегоУведомлений", СтрокаУчетнойЗаписи.ВсегоУведомлений);
		СтруктураДанныхОрганизации.Вставить("ИдентификаторЭДО", СтрокаУчетнойЗаписи.УчетнаяЗаписьЭДО);
	
		УдалитьОрганизациюКлиент(СтруктураДанныхОрганизации);
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьПользователя(Команда)

	ИдентификаторЭДО = "";
	Идентификатор = "";
	Если ЗначениеЗаполнено(ТекущаяОрганизация) Тогда 
		МассивСтрокУчетныхЗаписей = УчетныеЗаписиМПЭПД.НайтиСтроки(Новый Структура("Организация", ТекущаяОрганизация));
		Если МассивСтрокУчетныхЗаписей.Количество() = 1 Тогда
			ИдентификаторЭДО = МассивСтрокУчетныхЗаписей[0].УчетнаяЗаписьЭДО;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Идентификатор", Идентификатор);
	ПараметрыФормы.Вставить("УчетнаяЗаписьЭДО", ИдентификаторЭДО);
	ПараметрыФормы.Вставить("Организация", ТекущаяОрганизация);
	СервисВзаимодействияМПЭПДКлиент.ОткрытьФормуПользователяМобильногоУстройства(ПараметрыФормы, ЭтотОбъект);
			
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьМобильныеПриложения(Команда)
	
	ОбновитьМобильныеПриложенияКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПользователя(Команда)
	
	ТекущаяСтрока = Элементы.МобильныеУстройства.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтключитьПользователяКлиент(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПользователя(Команда)
	
	ТекущаяСтрока = Элементы.МобильныеУстройства.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьМобильноеПриложениеКлиент(ТекущаяСтрока.Идентификатор, ТекущаяСтрока.ИдентификаторЭДО, ТекущаяСтрока.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура Приостановить(Команда)
	
	ТекущаяСтрока = Элементы.МобильныеУстройства.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПриостановитьРаботуПользователяКлиент(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура Возобновить(Команда)
	
	ТекущаяСтрока = Элементы.МобильныеУстройства.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСостояниеПользователяПодключенКлиент(ТекущаяСтрока);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиенте
Функция ПолучитьВсеИдентификаторыЭДО(Организация, ТолькоСНастроеннымВзаимодействием)
	
	МассивИдентификаторов = Новый Массив;
	
	МассивСтрокУчетныхЗаписей = УчетныеЗаписиМПЭПД.НайтиСтроки(Новый Структура("Организация", Организация));
	Для Каждого СтрокаУчетнойЗаписи Из МассивСтрокУчетныхЗаписей Цикл
		Если ТолькоСНастроеннымВзаимодействием 
			И СтрокаУчетнойЗаписи.Настроено = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если МассивИдентификаторов.Найти(СтрокаУчетнойЗаписи.УчетнаяЗаписьЭДО) = Неопределено Тогда
			МассивИдентификаторов.Добавить(СтрокаУчетнойЗаписи.УчетнаяЗаписьЭДО);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивИдентификаторов;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииОрганизации()

	УстановитьТекущийОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПрочитанныеУведомленияЗавершение(ОжиданиеРезультата, ПараметрыЦикла) Экспорт
	
	Если СервисВзаимодействияМПЭПДКлиент.ОбработатьОшибку(ОжиданиеРезультата) Тогда
		Возврат;
	КонецЕсли;

	Если ОжиданиеРезультата.Статус = "Выполнено" Тогда
		РезультатПроцедуры = ПолучитьИзВременногоХранилища(ОжиданиеРезультата.АдресРезультата);
		Если РезультатПроцедуры Тогда
			УстановитьТекущийОтбор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступностьКнопокУправленияУстройством(ТекущиеДанные)
	
	Если ТекущиеДанные = Неопределено Тогда
		
		МобильныеУстройстваВозобновить = Истина;
		МобильныеУстройстваПриостановить = Истина;
		МобильныеУстройстваОтключить = Истина;
		
	Иначе
		
		Состояние = ТекущиеДанные.Состояние;
		Если Состояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.ОжидаетсяПодключение") Тогда
			МобильныеУстройстваВозобновить = Ложь;
			МобильныеУстройстваПриостановить = Ложь;
			МобильныеУстройстваОтключить = Ложь;
		ИначеЕсли Состояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.ПодключениеНеВыполнено") Тогда 
			МобильныеУстройстваВозобновить = Ложь;
			МобильныеУстройстваПриостановить = Ложь;
			МобильныеУстройстваОтключить = Истина;
		ИначеЕсли Состояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Подключен") Тогда 
			МобильныеУстройстваВозобновить = Ложь;
			МобильныеУстройстваПриостановить = Истина;
			МобильныеУстройстваОтключить = Истина;
		ИначеЕсли Состояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Приостановлен") Тогда 
			МобильныеУстройстваВозобновить = Истина;
			МобильныеУстройстваПриостановить = Ложь;
			МобильныеУстройстваОтключить = Истина;
		ИначеЕсли Состояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Недоступен") Тогда 
			МобильныеУстройстваВозобновить = Истина;
			МобильныеУстройстваПриостановить = Ложь;
			МобильныеУстройстваОтключить = Истина;
		Иначе
			// Черновик и пустая ссылка
			МобильныеУстройстваВозобновить = Ложь;
			МобильныеУстройстваПриостановить = Ложь;
			МобильныеУстройстваОтключить = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.МобильныеУстройстваВозобновить.Доступность = МобильныеУстройстваВозобновить;
	Элементы.МобильныеУстройстваПриостановить.Доступность = МобильныеУстройстваПриостановить;
	Элементы.МобильныеУстройстваОтключить.Доступность = МобильныеУстройстваОтключить;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущийОтбор()

	Если ЗначениеЗаполнено(ТекущаяОрганизация) Тогда
		НовыйОтбор = Новый Структура("Организация", ТекущаяОрганизация);
		Элементы.МобильныеУстройства.ОтборСтрок = Новый ФиксированнаяСтруктура(НовыйОтбор);
	Иначе
		Элементы.МобильныеУстройства.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьВременныеДанныеОрганизации(ИдентификаторЭДО)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПодключенныеМПЭПД.ИдентификаторМП КАК ИдентификаторМП
	|ИЗ
	|	РегистрСведений.ПодключенныеМПЭПД КАК ПодключенныеМПЭПД
	|ГДЕ
	|	ПодключенныеМПЭПД.ИдентификаторЭДО = &ИдентификаторЭДО";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ИдентификаторЭДО", ИдентификаторЭДО);
	НашлиЗаписи = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы Из НашлиЗаписи Цикл
		ЗаписьРегистра = РегистрыСведений.ПодключенныеМПЭПД.ПараметрыЗаписиРегистра(ИдентификаторЭДО,
			СтрокаТаблицы.ИдентификаторМП);
		РегистрыСведений.ПодключенныеМПЭПД.УдалитьЗапись(ЗаписьРегистра, Истина);
	КонецЦикла;
	
	ЗаполнитьДанныеОрганизаций();
	ЗаполнитьДанныеПользователей()
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПользователей()
	
	Отбор = Неопределено;
	
	ВсеМП = СервисВзаимодействияМПЭПД.СписокПодключенныхМП(Отбор, ОтображатьПриостановленые);
	МобильныеУстройства.Загрузить(ВсеМП);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОрганизаций()
	
	УчетныеЗаписиМПЭПД.Очистить();
	СписокВыбора = Элементы.ТекущаяУчетнаяЗаписьЭДО.СписокВыбора;
	СписокВыбора.Очистить();
	
	ТаблицаВыборки = СервисВзаимодействияМПЭПД.СписокПодключенныхУчетныхЗаписейЭДО(Истина);
	УчетныеЗаписиМПЭПД.Загрузить(ТаблицаВыборки);
	ТаблицаВыборки.Сортировать("Настроено УБЫВ");

	Для Каждого СтрокаТаблицы Из ТаблицаВыборки Цикл
		Представление = СокрЛП(СтрокаТаблицы.Организация);
		
		Если СписокВыбора.НайтиПоЗначению(СтрокаТаблицы.Организация) = Неопределено Тогда
			СписокВыбора.Добавить(СтрокаТаблицы.Организация, Представление);
		КонецЕсли;
	КонецЦикла;

	Если УчетныеЗаписиМПЭПД.Количество() > 0 И Не ЗначениеЗаполнено(ТекущаяОрганизация) Тогда
		ТекущаяОрганизация = УчетныеЗаписиМПЭПД[0].Организация;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДанныхОрганизаций() 
	
	ТаблицаВыборки = СервисВзаимодействияМПЭПД.СписокПодключенныхУчетныхЗаписейЭДО(Истина);
	УчетныеЗаписиМПЭПД.Загрузить(ТаблицаВыборки);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОтображениеПриостановленных()
	
	ЗаполнитьДанныеПользователей();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьТаблицуИндексовКартинок()
	
	МетаданныеПеречисления = Перечисления.СостояниеМПЭПД.ПустаяСсылка().Метаданные();
	Для Каждого ЗначениеПеречисления Из МетаданныеПеречисления.ЗначенияПеречисления Цикл
		СостояниеТекстом = ЗначениеПеречисления.Имя;
		Состояние = Перечисления.СостояниеМПЭПД[СостояниеТекстом];
		ИндексКартинки = Перечисления.СостояниеМПЭПД.ПолучитьИндексКартинки(Состояние);
		
		НоваяСтрока = ТаблицаИндексовКартинок.Добавить();
		НоваяСтрока.Состояние = Состояние;
		НоваяСтрока.ИндексКартинки = ИндексКартинки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИндексКартинкиСостояния(Состояние)
	
	СтруктураОтбора = Новый Структура("Состояние", Состояние);
	МассивНайденныхСтрок = ТаблицаИндексовКартинок.НайтиСтроки(СтруктураОтбора);
	
	Если МассивНайденныхСтрок.Количество() = 0 Тогда
		Возврат 1;
	Иначе
		Возврат МассивНайденныхСтрок[0].ИндексКартинки;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьЗаписьТаблицыПоСтруктуреДочернейФормы(Структура)
	
	Идентификатор = Структура.Идентификатор;
	НоваяЗапись = Структура.НоваяЗапись;
	Удалить = Структура.Удалить;
	
	СтруктураОтбора = Новый Структура("Идентификатор", Идентификатор);
	МассивНайденныхСтрок = МобильныеУстройства.НайтиСтроки(СтруктураОтбора);
	
	Если МассивНайденныхСтрок.Количество() = 0 И Не НоваяЗапись Тогда
		ЗаполнитьДанныеПользователей();
		Возврат;
	ИначеЕсли Удалить Тогда
		СтрокаДляИзменения = МассивНайденныхСтрок[0];
		МобильныеУстройства.Удалить(СтрокаДляИзменения);
		Возврат;
	ИначеЕсли МассивНайденныхСтрок.Количество() = 0 Тогда
		СтрокаДляИзменения = МобильныеУстройства.Добавить();
		СтрокаДляИзменения.Идентификатор = Идентификатор;
	Иначе
		СтрокаДляИзменения = МассивНайденныхСтрок[0];
	КонецЕсли;
	
	СтруктураИзмененныхПолей = Структура.СтруктураИзмененныхПолей;
	Для Каждого КлючЗначение Из СтруктураИзмененныхПолей Цикл
		СтрокаДляИзменения[КлючЗначение.Ключ] = КлючЗначение.Значение;
		
		// Для состояния определяется индекс картинки
		Если КлючЗначение.Ключ = "Состояние" Тогда
			ИндексКартинки = ПолучитьИндексКартинкиСостояния(КлючЗначение.Значение);
			СтрокаДляИзменения.ИндексКартинки = ИндексКартинки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаписьПодключенныхМПЭПД(ИдентификаторЭДО, Идентификатор)
	
	СервисВзаимодействияМПЭПДКлиент.УдалитьЗаписьПодключенныхМПЭПД(ИдентификаторЭДО, Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьМобильноеПриложениеКлиент(Идентификатор, ИдентификаторЭДО, Организация)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Идентификатор", Идентификатор);
	ПараметрыФормы.Вставить("УчетнаяЗаписьЭДО", ИдентификаторЭДО);
	ПараметрыФормы.Вставить("Организация", Организация);
	
	СервисВзаимодействияМПЭПДКлиент.ОткрытьФормуПользователяМобильногоУстройства(ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры
		
#КонецОбласти

#Область АссинхронныеСценарии

&НаКлиенте
Процедура ОбновитьМобильныеПриложенияКлиент(ОбновитьВсеОрганизации = Ложь)
	
	Если ОбновлениеОтображенияВыполняется Тогда
		Возврат;
	КонецЕсли;
	
	ОтключитьОбработчикОжидания("ОбработчикОжиданияПерезапускаОбновленияСпискаУстройств");
	ОбновлениеОтображенияВыполняется = Истина;
	
	Если ЗначениеЗаполнено(ТекущаяОрганизация)
		И Не ОбновитьВсеОрганизации Тогда
		МассивОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекущаяОрганизация);
	Иначе
		МассивОрганизаций = Новый Массив;
		Для Каждого СтрокаУчетныхЗаписей Из УчетныеЗаписиМПЭПД Цикл
			Если СтрокаУчетныхЗаписей.Настроено = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если МассивОрганизаций.Найти(СтрокаУчетныхЗаписей.Организация) = Неопределено Тогда
				МассивОрганизаций.Добавить(СтрокаУчетныхЗаписей.Организация);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивОрганизаций.Количество() = 0 Тогда
		ОбновлениеОтображенияВыполняется = Ложь;
		УспешностьОбновления = Ложь;
		ОповеститьОНовомСостоянииДочернююФорму(УспешностьОбновления);
		Возврат;
	КонецЕсли;
	
	Для Каждого Организация Из МассивОрганизаций Цикл	
			
		ПараметрыЦикла = Новый Структура;
		ПараметрыЦикла.Вставить("ЭтапЦикла", "Начало");
		ПараметрыЦикла.Вставить("Организация", Организация);
		
		СервисВзаимодействияМПЭПДКлиент.НачатьАссинхронныйСценарий(
			Новый ОписаниеОповещения("СценарийОбновитьСписокМобильныхУстройств", ЭтотОбъект, ПараметрыЦикла));
	КонецЦикла;
			
КонецПроцедуры

&НаКлиенте
Функция СценарийОбновитьСписокМобильныхУстройств(ОжиданиеРезультата, ПараметрыЦикла) Экспорт
	
	Результат = Истина;
	
	Если СервисВзаимодействияМПЭПДКлиент.ОбработатьОшибку(ОжиданиеРезультата) Тогда
		Возврат Результат;
	КонецЕсли;

	ЭтапЦикла = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЦикла, "ЭтапЦикла");
	
	Если ЭтапЦикла = "Начало" Тогда
		ПараметрыЦикла.Вставить("ЭтапЦикла", "ЗаполнитьСписок");
		
		ТолькоСНастроеннымВзаимодействием = Истина;
		МассивИдентификаторЭДО = ПолучитьВсеИдентификаторыЭДО(ПараметрыЦикла.Организация, ТолькоСНастроеннымВзаимодействием);
		
		ПараметрыЗадания = СервисВзаимодействияМПЭПДКлиент.МассивИзЗначений(МассивИдентификаторЭДО);
		СервисВзаимодействияМПЭПДКлиент.НовоеФоновоеЗадание("СервисВзаимодействияМПЭПД.СервисПолучитьПользователей",
				ПараметрыЗадания, ПараметрыЦикла, УникальныйИдентификатор);
	КонецЕсли;
	
	Если ЭтапЦикла = "ЗаполнитьСписок" Тогда
		
		ОбновлениеОтображенияВыполняется = Ложь;
		
		ОбновлениеВыполнено = Ложь;
		Если ОжиданиеРезультата <> Неопределено Тогда
			
			Если ОжиданиеРезультата.Статус = "Выполнено" Тогда
				СтруктураРезультата = ПолучитьИзВременногоХранилища(ОжиданиеРезультата.АдресРезультата);
				Если СтруктураРезультата.УспешностьЗагрузки Тогда
					ОбновлениеВыполнено = Истина;
					ЗаполнитьДанныеПользователей();
					СостояниеРегистрацииУстройстваПодчиненойФормыИзменилось = СостояниеРегистрацииУстройстваПодчиненойФормыИзменилось();
					Если СостояниеРегистрацииУстройстваПодчиненойФормыИзменилось Тогда
						ОповеститьОНовомСостоянииДочернююФорму(ОбновлениеВыполнено);
					КонецЕсли;
					Если СтруктураРезультата.ЕстьУстройстваОжидающиеПодключение Тогда
						ПодключитьОбработчикОжидания("ОбработчикОжиданияПерезапускаОбновленияСпискаУстройств", 15, Истина);
						Возврат Истина;
					КонецЕсли;					
				КонецЕсли;
			Иначе
				СервисВзаимодействияМПЭПДКлиент.ОбработатьОшибку(ОжиданиеРезультата.КраткоеПредставлениеОшибки);
			КонецЕсли;
			
		КонецЕсли;
		
		Результат = ОбновлениеВыполнено;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработчикОжиданияПерезапускаОбновленияСпискаУстройств()
	
	ОбновитьВсеОрганизации = Истина;
	ОбновитьМобильныеПриложенияКлиент(ОбновитьВсеОрганизации);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОНовомСостоянииДочернююФорму(УспешностьОбновления)
	
	Если СтруктураОбработкиОповещенияОНовомСостоянии <> Неопределено Тогда
		
		Идентификатор = СтруктураОбработкиОповещенияОНовомСостоянии.Идентификатор;
		
		Если УспешностьОбновления Тогда 
			МассивСтрок = МобильныеУстройства.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
			Если МассивСтрок.Количество() > 0 Тогда
				НовоеСостояние = МассивСтрок[0].Состояние;
				ИдентификаторМП = МассивСтрок[0].ИдентификаторМП;
			Иначе
				НовоеСостояние = Неопределено;
				ИдентификаторМП = Неопределено;
			КонецЕсли;
		Иначе
			НовоеСостояние = Неопределено;
			ИдентификаторМП = Неопределено;
		КонецЕсли;
		
		СтруктураДанныхОповещения = Новый Структура;
		СтруктураДанныхОповещения.Вставить("НовоеСостояние", НовоеСостояние);
		СтруктураДанныхОповещения.Вставить("Идентификатор", Идентификатор);
		СтруктураДанныхОповещения.Вставить("ИдентификаторМП", ИдентификаторМП);
		
		ИмяОповещенияОЗавершенииРегистрации = СервисВзаимодействияМПЭПДКлиент.ИмяОповещенияОЗавершенииРегистрации();
		
		Оповестить(ИмяОповещенияОЗавершенииРегистрации, СтруктураДанныхОповещения);
		
	КонецЕсли;
	
	СтруктураОбработкиОповещенияОНовомСостоянии = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Функция СостояниеРегистрацииУстройстваПодчиненойФормыИзменилось()
	
	Если СтруктураОбработкиОповещенияОНовомСостоянии = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Идентификатор = СтруктураОбработкиОповещенияОНовомСостоянии.Идентификатор;
	МассивСтрок = МобильныеУстройства.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	Если МассивСтрок.Количество() > 0 Тогда
		Состояние = МассивСтрок[0].Состояние;
	Иначе
		СтруктураОбработкиОповещенияОНовомСостоянии = Неопределено;
		Возврат Ложь;
	КонецЕсли;
	
	СостояниеРегистрацииИзменилось = 
		Состояние <> ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.ОжидаетсяПодключение");
	
	Возврат СостояниеРегистрацииИзменилось;
	
КонецФункции

&НаКлиенте
Процедура УдалитьОрганизациюКлиент(СтруктураДанныхОрганизации)
	
	Если СтруктураДанныхОрганизации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УчетныеЗаписиМП = Новый Массив;
	НашлиСтроки = МобильныеУстройства.НайтиСтроки(Новый Структура("Организация",
		СтруктураДанныхОрганизации.Организация));
	Для Каждого СтрокаМассива Из НашлиСтроки Цикл
		НоваяСтрока = Новый Структура();
		НоваяСтрока.Вставить("ИдентификаторМП", СтрокаМассива.ИдентификаторМП);
		НоваяСтрока.Вставить("ИдентификаторЭДО", СтрокаМассива.ИдентификаторЭДО);
		НоваяСтрока.Вставить("Идентификатор", СтрокаМассива.Идентификатор);
		УчетныеЗаписиМП.Добавить(НоваяСтрока);
	КонецЦикла;
	
	ПараметрыЦикла = Новый Структура;
	ПараметрыЦикла.Вставить("ЭтапЦикла", "Начало");
	ПараметрыЦикла.Вставить("Организация", СтруктураДанныхОрганизации.Организация);
	ПараметрыЦикла.Вставить("УчетныеЗаписи", УчетныеЗаписиМП);
	
	СервисВзаимодействияМПЭПДКлиент.НачатьАссинхронныйСценарий(
		Новый ОписаниеОповещения("СценарийОтключениеУчетнойЗаписи", ЭтотОбъект, ПараметрыЦикла));

КонецПроцедуры

&НаКлиенте
Функция СценарийОтключениеУчетнойЗаписи(ОжиданиеРезультата, ПараметрыЦикла) Экспорт
	
	Результат = Истина;
	
	Если СервисВзаимодействияМПЭПДКлиент.ОбработатьОшибку(ОжиданиеРезультата) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ЭтапЦикла = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЦикла, "ЭтапЦикла");
	
	Если ЭтапЦикла = "Начало" Тогда
		ПараметрыЦикла.Вставить("ЭтапЦикла", "ВопросУдаленияУчетнойЗаписиЭДО");
		
		СписокКоманд = Новый СписокЗначений();
		СписокКоманд.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'ОК'"));
		СписокКоманд.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(СервисВзаимодействияМПЭПДКлиент.РезультатАссинхронныйСценарий(ПараметрыЦикла),
					НСтр("ru = 'От организации будут отключены все мобильные устройства.
					|
					|Продолжить?'"),
					СписокКоманд, , , НСтр("ru = 'Отключение пользователей'"));
	КонецЕсли;
				
	Если ЭтапЦикла = "ВопросУдаленияУчетнойЗаписиЭДО" И ОжиданиеРезультата = КодВозвратаДиалога.Да Тогда
		ПараметрыЦикла.Вставить("ЭтапЦикла", "ПолучениеМаркера");
		
		КонтекстДиагностики = ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики();
		
		СинхронизацияЭДОКлиент.АвторизоватьсяВСервисеЭлектронногоДокументооборота(
			СервисВзаимодействияМПЭПДКлиент.РезультатАссинхронныйСценарий(ПараметрыЦикла),
			КонтекстДиагностики, ПараметрыЦикла.УчетныеЗаписи);
	КонецЕсли;
	
	Если ЭтапЦикла = "ПолучениеМаркера" Тогда
		ДанныеМаркера = ОжиданиеРезультата.КлючиСинхронизации[ПараметрыЦикла.ИдентификаторЭДО];
		Если ДанныеМаркера = Неопределено Тогда
			ПараметрыЦикла.Вставить("ЭтапЦикла", "Диагностика");
			ПоказатьВопрос(СервисВзаимодействияМПЭПДКлиент.РезультатАссинхронныйСценарий(ПараметрыЦикла), 
							НСтр("ru = 'Не удалось авторизоваться на сервере. Провести диагностику?'"),
							РежимДиалогаВопрос.ДаНет);
		Иначе
			ПараметрыЦикла.Вставить("ЭтапЦикла", "УдалениеМПЭПД");
			
			//@skip-check unknown-method-property
			ПараметрыЗадания = СервисВзаимодействияМПЭПДКлиент.МассивИзЗначений(ПараметрыЦикла.УчетныеЗаписи);
			СервисВзаимодействияМПЭПДКлиент.НовоеФоновоеЗадание("СервисВзаимодействияМПЭПД.СервисУдалитьСписокВодителей",
				ПараметрыЗадания, ПараметрыЦикла, УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтапЦикла = "Диагностика" И ОжиданиеРезультата = КодВозвратаДиалога.Да Тогда
		ПараметрыДиагностики = ДиагностикаЭДОКлиентСервер.НовыеПараметрыВыполненияДиагностики();
		ПараметрыДиагностики.Отбор.УчетнаяЗапись.Добавить(ПараметрыЦикла.ИдентификаторЭДО);
		ДиагностикаЭДОКлиент.ВыполнитьДиагностику(ПараметрыДиагностики);
	КонецЕсли;
	
	Если ЭтапЦикла = "УдалениеМПЭПД" Тогда
		Если ОжиданиеРезультата.Статус = "Выполнено" Тогда
			РезультатПроцедуры = ПолучитьИзВременногоХранилища(ОжиданиеРезультата.АдресРезультата);
			Если Не РезультатПроцедуры Тогда
				ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Не удалось успешно завершить операцию.'"));
			Иначе
				ОчиститьВременныеДанныеОрганизации(ПараметрыЦикла.Организация);
				ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Организация отключена от сервиса взаимодействия с мобильными устройствами.'"));
			КонецЕсли;
		Иначе
			СервисВзаимодействияМПЭПДКлиент.ОбработатьОшибку(ОжиданиеРезультата.КраткоеПредставлениеОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОтключитьПользователяКлиент(ТекущаяСтрока)

	Если ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.ОжидаетсяПодключение") Тогда
		ПоказатьПредупреждение(, Нстр("ru='Невозможно удалить устройство ожидающее подключение, дождитесь состояния ""Не подключено""'"));
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Черновик")
		Или ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.ПустаяСсылка") Тогда
		ТекстВопроса = НСтр("ru = 'Мобильное устройство будет отключено, запись об устройстве будет удалена.
		|
		|Продолжить?'");
		Структура = Новый Структура;
		Структура.Вставить("ИдентификаторЭДО", ТекущаяСтрока.ИдентификаторЭДО);
		Структура.Вставить("Идентификатор", ТекущаяСтрока.Идентификатор);
		Оповещение = Новый ОписаниеОповещения("ВопросОбУдаленииЧерновикаЗавершение", ЭтотОбъект, Структура);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ПараметрыЦикла = Новый Структура;
		ПараметрыЦикла.Вставить("ЭтапЦикла", "Начало");
		ПараметрыЦикла.Вставить("ИдентификаторЭДО", ТекущаяСтрока.ИдентификаторЭДО);
		ПараметрыЦикла.Вставить("Идентификатор", ТекущаяСтрока.Идентификатор);
		ПараметрыЦикла.Вставить("ИдентификаторМП", ТекущаяСтрока.ИдентификаторМП);
		ПараметрыЦикла.Вставить("ТекущиеДанные", ТекущаяСтрока);
		
		СервисВзаимодействияМПЭПДКлиент.НачатьАссинхронныйСценарий(
			Новый ОписаниеОповещения("СценарийОтключенияПользователя", ЭтотОбъект, ПараметрыЦикла));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВопросОбУдаленииЧерновикаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		УдалитьЗаписьПодключенныхМПЭПД(ДополнительныеПараметры.ИдентификаторЭДО, ДополнительныеПараметры.Идентификатор);
		
		Строка = МобильныеУстройства.НайтиСтроки(Новый Структура("Идентификатор",
			ДополнительныеПараметры.Идентификатор));
		МобильныеУстройства.Удалить(Строка[0]);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СценарийОтключенияПользователя(ОжиданиеРезультата, ПараметрыЦикла) Экспорт
	
	Результат = Истина;
	ЭтапЦикла = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЦикла, "ЭтапЦикла");
	
	Если ЭтапЦикла = "Начало" Тогда
		
		ПараметрыЦикла.Вставить("ЭтапЦикла", "УдалитьВодителя");

		СписокКоманд = Новый СписокЗначений();
		СписокКоманд.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'ОК'"));
		СписокКоманд.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(СервисВзаимодействияМПЭПДКлиент.РезультатАссинхронныйСценарий(ПараметрыЦикла),
					НСтр("ru = 'Мобильное устройство будет отключено, запись об устройстве будет удалена.
					|
					|Продолжить?'"),
					СписокКоманд, , , НСтр("ru = 'Отключение устройства'"));
	КонецЕсли;
	
	Если ЭтапЦикла = "УдалитьВодителя" Тогда
		Если ОжиданиеРезультата = КодВозвратаДиалога.Да Тогда
			ПараметрыЦикла.Вставить("ЭтапЦикла", "Завершить");
			
			ПараметрыЗадания = СервисВзаимодействияМПЭПДКлиент.МассивИзЗначений(ПараметрыЦикла.ИдентификаторЭДО,
				ПараметрыЦикла.ИдентификаторМП, ПараметрыЦикла.Идентификатор);
			СервисВзаимодействияМПЭПДКлиент.НовоеФоновоеЗадание("СервисВзаимодействияМПЭПД.СервисУдалитьВодителя",
				ПараметрыЗадания, ПараметрыЦикла, УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтапЦикла = "Завершить" Тогда
		Если ОжиданиеРезультата.Статус = "Выполнено" Тогда
			РезультатПроцедуры = ПолучитьИзВременногоХранилища(ОжиданиеРезультата.АдресРезультата);
			Если РезультатПроцедуры <> Истина Тогда
				ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Не удалось отключить устройство на сервере взаимодействия с мобильными устройствами.'"));
			Иначе
				ЗаполнитьДанныеПользователей();
			КонецЕсли;
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(ОжиданиеРезультата.КраткоеПредставлениеОшибки);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПриостановитьРаботуПользователяКлиент(ТекущаяСтрока)

	Если ТекущаяСтрока.Состояние <> ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Подключен") Тогда
		ПоказатьПредупреждение(, Нстр("ru='Приостановить работу можно только подключенного и работающего мобильного устройства.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыЦикла = Новый Структура;
	ПараметрыЦикла.Вставить("ЭтапЦикла", "Начало");
	ПараметрыЦикла.Вставить("ИдентификаторЭДО", ТекущаяСтрока.ИдентификаторЭДО);
	ПараметрыЦикла.Вставить("Идентификатор", ТекущаяСтрока.Идентификатор);
	ПараметрыЦикла.Вставить("ИдентификаторМП", ТекущаяСтрока.ИдентификаторМП);
	ПараметрыЦикла.Вставить("ТекущиеДанные", ТекущаяСтрока);
	ПараметрыЦикла.Вставить("ПеревестиНаСостояние", ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Приостановлен"));
	
	СервисВзаимодействияМПЭПДКлиент.НачатьАссинхронныйСценарий(
		Новый ОписаниеОповещения("СценарийИзмененияСостоянияПользователя", ЭтотОбъект, ПараметрыЦикла));

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСостояниеПользователяПодключенКлиент(ТекущаяСтрока)

	Если ТекущаяСтрока.Состояние <> ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Приостановлен") Тогда
		ПоказатьПредупреждение(, Нстр("ru='Возобновить работу устройства можно только если она приостановлена.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыЦикла = Новый Структура;
	ПараметрыЦикла.Вставить("ЭтапЦикла", "Начало");
	ПараметрыЦикла.Вставить("ИдентификаторЭДО", ТекущаяСтрока.ИдентификаторЭДО);
	ПараметрыЦикла.Вставить("Идентификатор", ТекущаяСтрока.Идентификатор);
	ПараметрыЦикла.Вставить("ИдентификаторМП", ТекущаяСтрока.ИдентификаторМП);
	ПараметрыЦикла.Вставить("ТекущиеДанные", ТекущаяСтрока);
	ПараметрыЦикла.Вставить("ПеревестиНаСостояние", ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Подключен"));
	
	СервисВзаимодействияМПЭПДКлиент.НачатьАссинхронныйСценарий(
		Новый ОписаниеОповещения("СценарийИзмененияСостоянияПользователя", ЭтотОбъект, ПараметрыЦикла));

КонецПроцедуры

&НаКлиенте
Функция СценарийИзмененияСостоянияПользователя(ОжиданиеРезультата, ПараметрыЦикла) Экспорт
	
	Результат = Истина;
	ЭтапЦикла = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЦикла, "ЭтапЦикла");
	
	Если ЭтапЦикла = "Начало" Тогда
		ПараметрыЦикла.Вставить("ЭтапЦикла", "ИзменитьСостояниеРаботыПользователя");

		СписокКоманд = Новый СписокЗначений();
		СписокКоманд.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'ОК'"));
		СписокКоманд.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Отмена'"));
		
		Если ПараметрыЦикла.ПеревестиНаСостояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Приостановлен") Тогда
			ТекстВопроса =  НСтр("ru = 'Работа устройства будет приостановлена, документы на него автоматически распределяться не будут
			|
			|Продолжить?'");
			ЗаголовокВопроса = НСтр("ru = 'Приостановка работы устройства'");
		Иначе
			ТекстВопроса =  НСтр("ru = 'Работа устройства будет возобновлена, документы на него начнут автоматически распределяться
			|
			|Продолжить?'");
			ЗаголовокВопроса = НСтр("ru = 'Возобновление работы устройства'");
		КонецЕсли;
		
		ПоказатьВопрос(СервисВзаимодействияМПЭПДКлиент.РезультатАссинхронныйСценарий(ПараметрыЦикла),
					ТекстВопроса, СписокКоманд, , , ЗаголовокВопроса);
	КонецЕсли;
	
	Если ЭтапЦикла = "ИзменитьСостояниеРаботыПользователя" Тогда
		Если ОжиданиеРезультата <> КодВозвратаДиалога.Да Тогда
			Результат = Ложь;
			Возврат Результат;
		КонецЕсли;
		
		ПараметрыЦикла.Вставить("ЭтапЦикла", "Завершение");
		ПараметрыЗадания = СервисВзаимодействияМПЭПДКлиент.МассивИзЗначений(ПараметрыЦикла.ИдентификаторЭДО,
			ПараметрыЦикла.ИдентификаторМП);
		
		Если ПараметрыЦикла.ПеревестиНаСостояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Приостановлен") Тогда
			СервисВзаимодействияМПЭПДКлиент.НовоеФоновоеЗадание(
				"СервисВзаимодействияМПЭПД.СервисПриостановитьРаботуВодителя", ПараметрыЗадания, ПараметрыЦикла,
					УникальныйИдентификатор);
		Иначе
			СервисВзаимодействияМПЭПДКлиент.НовоеФоновоеЗадание(
				"СервисВзаимодействияМПЭПД.СервисВозбновитьРаботуПользователя", ПараметрыЗадания, ПараметрыЦикла,
					УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтапЦикла = "Завершение" Тогда
		Если ОжиданиеРезультата.Статус = "Выполнено" Тогда
			РезультатПроцедуры = ПолучитьИзВременногоХранилища(ОжиданиеРезультата.АдресРезультата);
			Если РезультатПроцедуры <> Истина Тогда
				Если ПараметрыЦикла.ПеревестиНаСостояние = ПредопределенноеЗначение("Перечисление.СостояниеМПЭПД.Приостановлен") Тогда
					ТекстПредупреждения =  НСтр("ru = 'Не удалось приостановить работу пользователя на сервере взаимодействия с мобильными устройствами.'")
				Иначе
					ТекстПредупреждения =  НСтр("ru = 'Не удалось возобновить работу пользователя на сервере взаимодействия с мобильными устройствами.'")
				КонецЕсли;
				ПоказатьПредупреждение(, ТекстПредупреждения);
			Иначе
				ПараметрыЦикла.ТекущиеДанные.Состояние = ПараметрыЦикла.ПеревестиНаСостояние;
				ИндексКартинки = ПолучитьИндексКартинкиСостояния(ПараметрыЦикла.ПеревестиНаСостояние);
				ПараметрыЦикла.ТекущиеДанные.ИндексКартинки = ИндексКартинки;
				ТекущиеДанные = Элементы.МобильныеУстройства.ТекущиеДанные;
				ДоступностьКнопокУправленияУстройством(ТекущиеДанные);
			КонецЕсли;
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(ОжиданиеРезультата.КраткоеПредставлениеОшибки);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти
