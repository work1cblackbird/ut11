
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Документ", Документ);
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("НаименованиеТекущегоМП", НаименованиеТекущегоМП);
	Параметры.Свойство("ИдентификаторЗаписиТекущегоМП", ИдентификаторЗаписиТекущегоМП);
	Параметры.Свойство("ЗаголовокПользователяМП", Элементы.ПользовательМП.Заголовок);
	Параметры.Свойство("ИдентификаторЭДО", ИдентификаторЭДО);
	Параметры.Свойство("ДоступенОтказ", ДоступенОтказ);
	
	ТолькоИзДокумента = Неопределено;
	Параметры.Свойство("ТолькоИзДокумента", ТолькоИзДокумента);
	
	Если ТолькоИзДокумента = Истина Тогда
		СклонениеПользователяМП = ПолучитьСклоненияСтрокиПоЧислу("", 0, Элементы.ПользовательМП.Заголовок,
			"ЧС=Количественное", "ПД=Родительный")[0];
		СклонениеПользователяМП = СтрЗаменить(СклонениеПользователяМП, "0 ", "");
	
		Элементы.ПользовательМП.Подсказка = "Пользователем мобильного приложения можно выбрать только из "
			 + НРег(СклонениеПользователяМП) + ", указанных в документе";
	КонецЕсли;
	
	ПользователиМП = Неопределено;
	Если Параметры.Свойство("ПользователиМП", ПользователиМП) И ТипЗнч(ПользователиМП) = Тип("Массив") Тогда
		Счетчик = 0;
		СоответствиеДанных = Новый Соответствие;
		Для Каждого СтруктураПользовательМП Из ПользователиМП Цикл
			СоответствиеДанных.Вставить(Счетчик, СтруктураПользовательМП);
			Элементы.ПользовательМП.СписокВыбора.Добавить(Счетчик, 
				СтруктураПользовательМП.Фамилия + " "
				+ СтруктураПользовательМП.Имя + " "
				+ СтруктураПользовательМП.Отчество);
			Счетчик = Счетчик + 1;
		КонецЦикла;
		ДанныеПользователейМП = Новый ФиксированноеСоответствие(СоответствиеДанных);
	КонецЕсли;
	
	Если Элементы.ПользовательМП.СписокВыбора.Количество() > 0 Тогда
		ОбновитьИнформациюОМобильномПриложении();
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Элементы.ФормаОтказатьсяОтПеревозки.Видимость = ДоступенОтказ;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПользовательМППриИзменении(Элемент)
	
	ОбновитьИнформациюОМобильномПриложении();
	
КонецПроцедуры


&НаКлиенте
Процедура НадписьОМобильномПриложенииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки,
	СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьДанныеМП" Тогда
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("УчетнаяЗаписьЭДО", ИдентификаторЭДО);
		ПараметрыФормы.Вставить("Организация", Организация);
		ПараметрыФормы.Вставить("Идентификатор", ИдентификаторЗаписиМП);
		
		СервисВзаимодействияМПЭПДКлиент.ОткрытьФормуПользователяМобильногоУстройства(ПараметрыФормы);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторМПОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗаписьЭДО", ИдентификаторЭДО);
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("Идентификатор", ИдентификаторЗаписиМП);
	
	СервисВзаимодействияМПЭПДКлиент.ОткрытьФормуПользователяМобильногоУстройства(ПараметрыФормы);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отвязать(Команда)
	
	Результат = СервисОтвязатьДокумент();
	
	Если Результат = Истина Тогда
		Оповестить("МПОтвязаноОтДокумента", , Документ);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура Подключить(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗаписьЭДО", ИдентификаторЭДО);
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("ДанныеВодителя", ДанныеПользователейМП.Получить(НомерПользователяМП));
	
	СервисВзаимодействияМПЭПДКлиент.ОткрытьФормуПользователяМобильногоУстройства(ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтПеревозки(Команда)
	
	ОповещениеПослеВводаТекста = Новый ОписаниеОповещения("ОтправитьУОУ_ПослеВводаТекстаУточнения", ЭтотОбъект);
	ПоказатьВводСтроки(ОповещениеПослеВводаТекста, "", "Текст запроса уточнения (отклонения)", , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если ИдентификаторЗаписиТекущегоМП <> ИдентификаторЗаписиМП Тогда
		Результат = СервисИзменитьДокумент();
		Если Результат = Истина Тогда
			Если ВладелецФормы <> Неопределено Тогда
				ИдентификаторАдресаХранилища = ВладелецФормы.УникальныйИдентификатор;
			Иначе
				ИдентификаторАдресаХранилища = Новый УникальныйИдентификатор();	
			КонецЕсли;
			Параметр = ПараметрОповещенияФормыДокумента(ИдентификаторАдресаХранилища);
			Если Параметр <> Неопределено Тогда
				Оповестить("МППривязаноКДокументу", Параметр, Документ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Закрыть();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьИнформациюОМобильномПриложении()

	СтруктураПользователяМП = ДанныеПользователейМП.Получить(НомерПользователяМП);
	Отбор = Новый Структура;
	Отбор.Вставить("Фамилия", СтруктураПользователяМП.Фамилия);
	Отбор.Вставить("Имя", СтруктураПользователяМП.Имя);
	Отбор.Вставить("Отчество", СтруктураПользователяМП.Отчество);
	Отбор.Вставить("ИдентификаторЭДО", ИдентификаторЭДО);
	
	ТаблицаМП = СервисВзаимодействияМПЭПД.СписокПодключенныхМП(Отбор);
	
	Если ТаблицаМП.Количество() = 0 Тогда
		Элементы.ФормаПодключить.КнопкаПоУмолчанию = Истина;
		Элементы.ФормаВыбрать.Видимость = Ложь;
		Элементы.ФормаОтвязать.Видимость = Ложь;
		МассивПодстрок = Новый Массив;
		МассивПодстрок.Добавить(Новый ФорматированнаяСтрока("Мобильное приложение не подключено", , ЦветаСтиля.ЦветНекорректныхДанныхЭПД));
		НадписьОМобильномПриложении = Новый ФорматированнаяСтрока(МассивПодстрок);
		Элементы.ИдентификаторЗаписиМП.Видимость = Ложь;
	Иначе
		СоответствиеДанныеМП = Новый Соответствие;
		Элементы.ИдентификаторЗаписиМП.СписокВыбора.Очистить();
		Для Каждого СтрокаМП Из ТаблицаМП Цикл
			Элементы.ИдентификаторЗаписиМП.СписокВыбора.Добавить(СтрокаМП.Идентификатор, СтрокаМП.Наименование);
			СтруктураМП = Новый Структура;
			Для Каждого Колонка Из ТаблицаМП.Колонки Цикл
				СтруктураМП.Вставить(Колонка.Имя, СтрокаМП[Колонка.Имя]);
			КонецЦикла;
			СоответствиеДанныеМП.Вставить(СтрокаМП.Идентификатор, СтруктураМП);
		КонецЦикла;
		ДанныеМП = Новый ФиксированноеСоответствие(СоответствиеДанныеМП);
		
		ИдентификаторЗаписиМП = Элементы.ИдентификаторЗаписиМП.СписокВыбора.Получить(0).Значение;
		Элементы.ИдентификаторЗаписиМП.Видимость = Элементы.ИдентификаторЗаписиМП.СписокВыбора.Количество() > 1;
		Элементы.НадписьОМобильномПриложении.Видимость = Элементы.ИдентификаторЗаписиМП.СписокВыбора.Количество() = 1;
		Элементы.ФормаОтвязать.Доступность = ИдентификаторЗаписиТекущегоМП = ИдентификаторЗаписиМП;
		Элементы.ФормаВыбрать.Доступность = ИдентификаторЗаписиТекущегоМП <> ИдентификаторЗаписиМП;
		МассивПодстрок = Новый Массив;
		МассивПодстрок.Добавить(Новый ФорматированнаяСтрока("Мобильное приложение подключено. ", , ЦветаСтиля.ЦветТекстаВыполненныйШагЭПД));
		МассивПодстрок.Добавить(Новый ФорматированнаяСтрока("Посмотреть данные", , , , "ОткрытьДанныеМП"));
		НадписьОМобильномПриложении = Новый ФорматированнаяСтрока(МассивПодстрок);	
		
		Элементы.ФормаВыбрать.КнопкаПоУмолчанию = Истина;
		Элементы.ФормаПодключить.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СервисОтвязатьДокумент()
	
	ЭД = ИнтеграцияЭДО.ОсновнойЭлектронныйДокументОбъектаУчета(Документ);
	
	Результат = СервисВзаимодействияМПЭПД.СервисИзменитьДокумент(
			ИдентификаторЭДО, 
			ЭД.ИдентификаторДокументооборота,
			,
			,
			Документ);	
			
	Если Результат = Истина Тогда
		ЗаписьРеестраЭПД = РегистрыСведений.РеестрЭПД.СоздатьМенеджерЗаписи();
		ЗаписьРеестраЭПД.Ссылка = Документ;
		ЗаписьРеестраЭПД.Прочитать();
		Если ЗаписьРеестраЭПД.Выбран() Тогда
			ЗаписьРеестраЭПД.МобильноеПриложение = "Отключено";
			ЗаписьРеестраЭПД.НаименованиеМП = Неопределено;
			ЗаписьРеестраЭПД.ИдентификаторЗаписиМП = Неопределено;
			ЗаписьРеестраЭПД.Записать();
		КонецЕсли;
		ИдентификаторЗаписиТекущегоМП = Неопределено;
		ОбновитьИнформациюОМобильномПриложении();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПараметрОповещенияФормыДокумента(ИдентификаторАдресаХранилища)
	
	Результат = Неопределено;
	
	СтруктураМП = ДанныеМП.Получить(ИдентификаторЗаписиМП);
	Если СтруктураМП <> Неопределено Тогда
		Результат = Новый Структура;
		Результат.Вставить("МПИдентификатор", СтруктураМП.ИдентификаторМП);
		Результат.Вставить("МПИдентификаторЗаписи", СтруктураМП.Наименование);
		Результат.Вставить("МПНаименование", СтруктураМП.Наименование);
		Результат.Вставить("МПТелефон", СтруктураМП.Телефоны);
		ФотоДвоичныеДанные = СтруктураМП.Фото.Получить();
		Если ФотоДвоичныеДанные <> Неопределено Тогда		
			Результат.Вставить("МПФото", ПоместитьВоВременноеХранилище(СтруктураМП.Фото.Получить(), ИдентификаторАдресаХранилища));
		Иначе
			Результат.Вставить("МПФото", "");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

&НаКлиенте
Процедура ОтправитьУОУ_ПослеВводаТекстаУточнения(Текст, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Текст) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если УстановитьТитулУОУ() = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыДокумента = ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(Документ, "ТекущийПолученныйТитул");
	
	НаборДействий = Новый Соответствие();
	
	ДействиеОтклонить = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отклонить");
	
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ДействиеОтклонить);
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Отправить"));
	
	ПараметрыВыполненияДействийПоЭДО = ЭлектронныеДокументыЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();	
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ОбъектыУчета.Добавить(Документ);
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	
	ДополнительныеПараметрыОтклонения = ЭлектронныеДокументыЭДОКлиентСервер.НовыеДополнительныеПараметрыДействия();
	ДополнительныеПараметрыОтклонения.Вставить("Комментарий", Текст);
	ДополнительныеПараметрыОтклонения.Вставить("ЭлементДляОтклонения", РеквизитыДокумента.ТекущийПолученныйТитул);
	ПараметрыВыполненияДействийПоЭДО.ДополнительныеПараметрыДействий.Вставить(ДействиеОтклонить, ДополнительныеПараметрыОтклонения);
	
	ДополнительныеПараметрыУспешногоЗавершения = Новый Структура;
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("ЭтоИсправление", Ложь);
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("НаборДействий", НаборДействий);
	ДополнительныеПараметрыУспешногоЗавершения.Вставить("ТекущийТитул", );
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоИсправление", Ложь);
	ДополнительныеПараметры.Вставить("ОповещениеУспешногоЗавершения",
		Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, 
									ДополнительныеПараметрыУспешногоЗавершения));

	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ИнтерфейсДокументовЭДОКлиент, ДополнительныеПараметры);
	
	ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	ДействиеОтправить = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отправить");
	КоличествоОтправлено = Результат.ОбработаноПоДействиям.Получить(ДействиеОтправить);
	
	Если КоличествоОтправлено <> Неопределено И КоличествоОтправлено > 0 Тогда
		Шаблон = НСтр("ru = 'Титул ""%1"" отправлен'");
		ТекстОповещения = СтрШаблон(Шаблон, ДополнительныеПараметры.ТекущийТитул);		
		ЗаголовокОповещения = НСтр("ru = 'Электронные документы'");	
		ДействиеПриНажатии = Неопределено;
		КартинкаОповещения = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО48;

		#Если Не МобильноеПриложениеКлиент Тогда
		ПоказатьОповещениеПользователя(ЗаголовокОповещения, ДействиеПриНажатии, ТекстОповещения, КартинкаОповещения,
			СтатусОповещенияПользователя.Важное);
		#КонецЕсли
	Иначе
		Доступность = Истина;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Функция УстановитьТитулУОУ()
	
	Результат = Ложь;
	
	ДокументОбъект = Документ.ПолучитьОбъект();
	
	ТитулУОУ = ПолучитьТитулУОУ(Документ);
	
	Если ЗначениеЗаполнено(ТитулУОУ) Тогда
		ДокументОбъект.ТекущийТитул = ТитулУОУ;
		ДокументОбъект.Записать();
		
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТитулУОУ(Документ)
	
	Результат = Неопределено;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЭлектроннаяТранспортнаяНакладная") Тогда
		Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ОткП");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СервисИзменитьДокумент()
	
	ЭД = ИнтеграцияЭДО.ОсновнойЭлектронныйДокументОбъектаУчета(Документ);
	
	СтруктураМП = ДанныеМП.Получить(ИдентификаторЗаписиМП);
	
	ВыбранныйИдентификаторМП = СтруктураМП.ИдентификаторМП;
	
	Результат = СервисВзаимодействияМПЭПД.СервисИзменитьДокумент(
			ИдентификаторЭДО, 
			ЭД.ИдентификаторДокументооборота,
			ВыбранныйИдентификаторМП,
			,
			Документ);	
			
	Если Результат = Истина Тогда
		ЗаписьРеестраЭПД = РегистрыСведений.РеестрЭПД.СоздатьМенеджерЗаписи();
		ЗаписьРеестраЭПД.Ссылка = Документ;
		ЗаписьРеестраЭПД.Прочитать();
		Если ЗаписьРеестраЭПД.Выбран() Тогда
			ЗаписьРеестраЭПД.МобильноеПриложение = ВыбранныйИдентификаторМП;
			ЗаписьРеестраЭПД.ИдентификаторЗаписиМП = ИдентификаторЗаписиМП;
			ЗаписьРеестраЭПД.НаименованиеМП = СтруктураМП.Наименование;
			ЗаписьРеестраЭПД.Записать();
		КонецЕсли;	
		ИдентификаторЗаписиТекущегоМП = ВыбранныйИдентификаторМП;
		ОбновитьИнформациюОМобильномПриложении();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти