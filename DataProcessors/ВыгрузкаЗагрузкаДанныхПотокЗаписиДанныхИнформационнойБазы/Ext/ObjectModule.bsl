#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ТекущаяИнициализация; // Булево
Перем ТекущийПотокЗаписи; // ЗаписьXML
Перем ТекущийСчетчикОбъектов; 
Перем ТекущийСериализатор;
Перем ТекущийФайловыйПоток;
Перем ТекущееИмяФайла;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОткрытьФайл(Знач ИмяФайла, Знач Сериализатор = Неопределено, ТипОбъектаДанных = Неопределено) Экспорт
	
	Если ТекущаяИнициализация Тогда
		ВызватьИсключение НСтр("ru = 'Объект уже был инициализирован ранее'");
	КонецЕсли;
		
	Если Сериализатор = Неопределено Тогда
		ТекущийСериализатор = СериализаторXDTO;
	Иначе
		ТекущийСериализатор = Сериализатор;
	КонецЕсли;
	
	ТекущееИмяФайла = ИмяФайла;
	ТекущийФайловыйПоток = ФайловыеПотоки.ОткрытьДляЗаписи(ИмяФайла);
	
	ТекущийПотокЗаписи = Новый ЗаписьXML();
	ТекущийПотокЗаписи.ОткрытьПоток(ТекущийФайловыйПоток);
	ТекущийПотокЗаписи.ЗаписатьОбъявлениеXML();
		
	ТекущийПотокЗаписи.ЗаписатьНачалоЭлемента("Data");
	
	Если ЗначениеЗаполнено(ТипОбъектаДанных) Тогда
		
		ТекущийПотокЗаписи.ЗаписатьАтрибут("Type", ТипОбъектаДанных);
		
	Иначе
		
		ТекущийПотокЗаписи.ЗаписатьАтрибут("Type", ВыгрузкаЗагрузкаДанныхСлужебный.InfobaseData());
		
	КонецЕсли;
	
	ПрефиксыПространствИмен = ВыгрузкаЗагрузкаДанныхСлужебный.ПрефиксыПространствИмен();
	Для Каждого ПрефиксПространстваИмен Из ПрефиксыПространствИмен Цикл
		ТекущийПотокЗаписи.ЗаписатьСоответствиеПространстваИмен(ПрефиксПространстваИмен.Значение, ПрефиксПространстваИмен.Ключ);
	КонецЦикла;
	
	ТекущийСчетчикОбъектов = 0;
		
	ТекущаяИнициализация = Истина;
	
КонецПроцедуры

Процедура ЗаписатьОбъектДанныхИнформационнойБазы(Объект, Артефакты) Экспорт
	
	ТекущийПотокЗаписи.ЗаписатьНачалоЭлемента("DumpElement");
	
	Если Артефакты.Количество() > 0 Тогда
		
		ТекущийПотокЗаписи.ЗаписатьНачалоЭлемента("Artefacts");
		Для Каждого Артефакт Из Артефакты Цикл 
			
			ФабрикаXDTO.ЗаписатьXML(ТекущийПотокЗаписи, Артефакт);
			
		КонецЦикла;
		ТекущийПотокЗаписи.ЗаписатьКонецЭлемента();
		
	КонецЕсли;
	
	Попытка
		
		ТекущийСериализатор.ЗаписатьXML(ТекущийПотокЗаписи, Объект);
		
	Исключение
		
		ИсходныйТекстОшибки = ТехнологияСервиса.ПодробныйТекстОшибки(ИнформацияОбОшибке());
		ИсходныйТекстОшибкиБезНедопустимыхСимволов = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(
			ИсходныйТекстОшибки,
			Символ(65533));
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'При выгрузке объекта %1 произошла ошибка: %2'"),
			Объект,
			ИсходныйТекстОшибкиБезНедопустимыхСимволов);
		
	КонецПопытки;
	
	ТекущийПотокЗаписи.ЗаписатьКонецЭлемента();
	
	ТекущийСчетчикОбъектов = ТекущийСчетчикОбъектов + 1;
	
КонецПроцедуры

// Количество объектов.
// 
// Возвращаемое значение:
//  Число
Функция КоличествоОбъектов() Экспорт
	
	Возврат ТекущийСчетчикОбъектов;
	
КонецФункции

Процедура Закрыть() Экспорт
	
	ТекущийПотокЗаписи.ЗаписатьКонецЭлемента();
	ТекущийПотокЗаписи.Закрыть();
	ТекущийФайловыйПоток.Закрыть();
	
КонецПроцедуры

// Имя файла.
// 
// Возвращаемое значение:
//  Строка
Функция ИмяФайла() Экспорт
	
	Возврат ТекущееИмяФайла;
	
КонецФункции

// Размер больше рекомендуемого.
// 
// Возвращаемое значение:
//  Булево
Функция РазмерБольшеРекомендуемого() Экспорт
	
	Возврат ТекущийФайловыйПоток.Размер() > 100 * 1024 * 1024; // 100 Мб
	
КонецФункции

#КонецОбласти

#Область Инициализация

ТекущаяИнициализация = Ложь;

#КонецОбласти

#КонецЕсли