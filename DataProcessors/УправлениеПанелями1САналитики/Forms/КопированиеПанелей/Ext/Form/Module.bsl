#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресСервера = СистемаАналитики.ПолучитьАдресСервераСистемыАналитики(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВыполнитьОбновлениеИзАналитики();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПереключательИсточникНастроекПриИзменении(Элемент)  
	
	Если ИсточникИзФайла = 0 Тогда
		Элементы.АдресСервераГиперссылка.Видимость = Истина;
		Элементы.ФайлПанелей.Видимость = Ложь;
	Иначе
		Элементы.АдресСервераГиперссылка.Видимость = Ложь;
		Элементы.ФайлПанелей.Видимость = Истина;
	КонецЕсли;
	
	ВладельцыПанелейИсточника = "";
	ВыбранныеВладельцыИсточник.Очистить();
	ОбновитьТаблицуВладельцевИсточника();
	ОбновитьДеревоПанелейИсточника();
	РазвернутьПанельИсточник();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлПанелейНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ФайлПанелейРасширениеПодключено",
		ЭтотОбъект);
	
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлПанелейОчистка(Элемент, СтандартнаяОбработка)
	
	ВладельцыПанелейИсточника = "";
	ВыбранныеВладельцыИсточник.Очистить();
	ВладельцыАналитикиИзФайла.Очистить();
	ДашбордыИзФайла.Очистить();
	ДиаграммыИзФайла.Очистить();
	ОбъектыАналитикиИзФайла.Очистить();
	ПанелиИзФайла.Очистить();
	ПапкиИзФайла.Очистить();
	ТаблицаВладельцевИсточник.Очистить();
	ПанелиИсточник.ПолучитьЭлементы().Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераГиперссылкаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИнформационнаяСсылка = АдресСервера;
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(ИнформационнаяСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВладельцыПанелейПриемникаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВоВременномХранилище", ТаблицуФормыВоВременноеХранилище(ТаблицаВладельцевПриемник));
	
	ОткрытьФорму("Обработка.УправлениеПанелями1САналитики.Форма.ОтборПоВладельцам",
				ПараметрыФормы,
				ЭтотОбъект,,,,
				Новый ОписаниеОповещения("ОбновитьВыбранныхВладельцевПриемник", ЭтотОбъект), 
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВладельцыПанелейИсточникаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВоВременномХранилище", ТаблицуФормыВоВременноеХранилище(ТаблицаВладельцевИсточник));
	
	ОткрытьФорму("Обработка.УправлениеПанелями1САналитики.Форма.ОтборПоВладельцам",
				ПараметрыФормы,
				ЭтотОбъект,,,,
				Новый ОписаниеОповещения("ОбновитьВыбранныхВладельцевИсточник", ЭтотОбъект), 
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВладельцыПанелейИсточникаОчистка(Элемент, СтандартнаяОбработка)
	
	Если ВыбранныеВладельцыИсточник.Количество() Тогда
		ВладельцыПанелейИсточникаОчисткаСервер();
		РазвернутьПанельИсточник();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВладельцыПанелейПриемникаОчистка(Элемент, СтандартнаяОбработка)
	
	Если ВыбранныеВладельцыПриемник.Количество() Тогда
		ВладельцыПанелейПриемникаОчисткаСервер();
		РазвернутьПанельПриемник();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьПанелиИзАналитики(Команда)
	
	ВыполнитьОбновлениеИзАналитики();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьПанель(Команда)
	
	ПроверитьЗаполнение();
	
	ВыбранныйОбъект = Элементы.ПанелиИсточник.ТекущиеДанные;
	
	Если ИсточникИзФайла Тогда
		Если ВыбранныйОбъект = Неопределено 
			Или ВыбранныйОбъект.Тип <> "chart" И ВыбранныйОбъект.Тип <> "dashboard" И ВыбранныйОбъект.Тип <> "folder" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выберите панель или папку в источнике'"));
			Возврат;
		КонецЕсли;
	Иначе
		Если ВыбранныйОбъект.Тип = "folder" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Копирование папки возможно только из файла'"));
			Возврат;
		ИначеЕсли  ВыбранныйОбъект.Тип <> "chart" И ВыбранныйОбъект.Тип <> "dashboard" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выберите панель в источнике'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ИдентификаторОбъекта = ВыбранныйОбъект.Идентификатор;
	
	ПроверкаКПереносуПанелей = ПроверкаКПереносуПанелей(ИдентификаторОбъекта);
	
	ВозможныеВладельцы = ПроверкаКПереносуПанелей.ВозможныеВладельцы;
	ЕстьДоступныеКПереносу = ПроверкаКПереносуПанелей.ЕстьДоступныеКПереносу;
	ЕстьНедоступныеДляПереноса = ПроверкаКПереносуПанелей.ЕстьНедоступныеДляПереноса;
	ЕстьЗамещаемые = ПроверкаКПереносуПанелей.ЕстьЗамещаемые;
	
	Если (ЕстьДоступныеКПереносу И ЕстьНедоступныеДляПереноса) Или ЕстьЗамещаемые Тогда
		
		Если ЕстьНедоступныеДляПереноса И ЕстьЗамещаемые Тогда
			ТекстВопроса = НСтр("ru = 'Есть недоступные объекты к переносу и замещаемые объекты. Продолжить?'");
		ИначеЕсли ЕстьНедоступныеДляПереноса И Не ЕстьЗамещаемые Тогда
			ТекстВопроса = НСтр("ru = 'Есть недоступные объекты к переносу. Продолжить?'");
		ИначеЕсли Не ЕстьНедоступныеДляПереноса И ЕстьЗамещаемые Тогда
			ТекстВопроса = НСтр("ru = 'Есть замещаемые объекты. Продолжить?'");
		КонецЕсли;
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ИдентификаторОбъекта", ИдентификаторОбъекта);
		ПараметрыОповещения.Вставить("ВозможныеВладельцы", ВозможныеВладельцы);
		Оповещение = Новый ОписаниеОповещения("ПослеПодтвержденияПереносаПанелей", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли ИсточникИзФайла И ВозможныеВладельцы.Количество() > 1 Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("АдресВоВременномХранилище", ПоместитьВоВременноеХранилище(ВозможныеВладельцы, УникальныйИдентификатор));
		
		ОткрытьФорму("Обработка.УправлениеПанелями1САналитики.Форма.ВыборВладельцаДляПанелей",
					ПараметрыФормы,
					ЭтотОбъект,,,,
					Новый ОписаниеОповещения("ВладелецДляНовыхПанелейВыбран", ЭтотОбъект, ИдентификаторОбъекта), 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли ИсточникИзФайла И ВозможныеВладельцы.Количество() Тогда
					
		ВыполнитьКопированиеПанели(ИдентификаторОбъекта, ВозможныеВладельцы[0]);
					
	Иначе
					
		ВыполнитьКопированиеПанели(ИдентификаторОбъекта, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура СоздатьСсылкуНаПанель(Команда)
	
	ПроверитьЗаполнение();
	
	ВыбранныйОбъект = Элементы.ПанелиИсточник.ТекущиеДанные;
	
	Если ИсточникИзФайла Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Для панелей из файла нельзя создавать ссылку'"));
		Возврат;
	КонецЕсли;
	
	Если ВыбранныйОбъект = Неопределено 
		Или ВыбранныйОбъект.Тип <> "chart" И ВыбранныйОбъект.Тип <> "dashboard" И ВыбранныйОбъект.Тип <> "folder" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выберите панель или папку в источнике'"));
		Возврат;
	КонецЕсли;
	
	ИдентификаторОбъекта = ВыбранныйОбъект.Идентификатор;
	
	ПроверкаКСозданиюСсылок = ПроверкаКСозданиюСсылок(ИдентификаторОбъекта);
	ЕстьДоступныеКОбработке = ПроверкаКСозданиюСсылок.ЕстьДоступныеКОбработке;
	ЕстьНедоступныеКОбработке = ПроверкаКСозданиюСсылок.ЕстьНедоступныеКОбработке;
	
	Если ЕстьДоступныеКОбработке И ЕстьНедоступныеКОбработке Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеПодтвержденияСозданиеСсылкиНаПанель", ЭтотОбъект, ИдентификаторОбъекта);
		ТекстВопроса = НСтр("ru = 'Для некоторых владельцев нельзя создать ссылки. Создать ссылки для остальных?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе	
		ВыполнитьСозданиеСсылкиНаПанель(ИдентификаторОбъекта);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьСсылкиНаВсеПанели(Команда)
	
	ПроверитьЗаполнение();
	
	Если ИсточникИзФайла Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Для панелей из файла нельзя создавать ссылку'"));
		Возврат;
	КонецЕсли;
	
	ПроверкаКСозданиюСсылок = ПроверкаКСозданиюСсылок();
	ЕстьДоступныеКОбработке = ПроверкаКСозданиюСсылок.ЕстьДоступныеКОбработке;
	ЕстьНедоступныеКОбработке = ПроверкаКСозданиюСсылок.ЕстьНедоступныеКОбработке;
	
	Если ЕстьДоступныеКОбработке И ЕстьНедоступныеКОбработке Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеПодтвержденияСозданиеСсылокНаВсеПанели", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'На некоторые объекты нельзя создать ссылки. Создать ссылки на остальные?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьСозданиеСсылокНаПанели();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиВсехВладельцев(Команда)
	
	СохранитьНастройкиВладельцевВФайл();
	
КонецПроцедуры 

&НаКлиенте
Процедура СохранитьНастройкиВыбранныхВладельцев(Команда)
	
	СохранитьНастройкиВладельцевВФайл(Истина); 
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПанельПриемник(Команда)
	
	ПроверитьЗаполнение();
	
	ВыбранныйОбъект = Элементы.ПанелиПриемник.ТекущиеДанные;
	
	Если ВыбранныйОбъект = Неопределено
		Или ВыбранныйОбъект.Тип <> "chart" И ВыбранныйОбъект.Тип <> "dashboard" И ВыбранныйОбъект.Тип <> "folder" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выберите панель или папку в источнике'"));
		Возврат;
	КонецЕсли;
	
	ИдентификаторСтроки = ВыбранныйОбъект.ИдентификаторСтроки;
	
	Если Не МожноУдалить(ИдентификаторСтроки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Удаление невозможно, объект подключен через общий доступ или через вышестоящую папку'"));
		Возврат;
	КонецЕсли;

	Если ВыбранныйОбъект.Тип = "folder" Тогда
		ТекстВопроса = НСтр("ru = 'Папка и вложенные объекты будут удалены, продолжить?'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Объект будет удален, продолжить?'");
	КонецЕсли;

	Оповещение = Новый ОписаниеОповещения("ПослеПодтвержденияУдаленияПанели", ЭтотОбъект, ИдентификаторСтроки);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДлительныеОперации

#Область ОбновлениеИзАналитики

&НаКлиенте
Процедура ВыполнитьОбновлениеИзАналитики()
	
	ДлительнаяОперация = ЗагрузитьДанныеПанелейНаСервере();
	Если ДлительнаяОперация <> Неопределено Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновлениеИзАналитикиВыполнено", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.Заголовок = НСтр("ru = 'Обновление панелей из Аналитики'");
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьДанныеПанелейНаСервере()
	
	ПараметрыЗадания = ПараметрыОбновленияИзАналитики();
	
	ИмяМетода = "Обработки.УправлениеПанелями1САналитики.ЗагрузитьДанныеПанелей";
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление панелей из Аналитики'");
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(НастройкиЗапуска, ИмяМетода, ПараметрыЗадания);
	
КонецФункции

&НаСервере
Функция ПараметрыОбновленияИзАналитики()
	
	ПараметрыОбновленияИзАналитики = Обработки.УправлениеПанелями1САналитики.ПараметрыОбновленияИзАналитики();
	ПараметрыОбновленияИзАналитики.ВладельцыАналитики = РеквизитФормыВЗначение("ВладельцыАналитики");
	ПараметрыОбновленияИзАналитики.Дашборды = РеквизитФормыВЗначение("Дашборды");
	ПараметрыОбновленияИзАналитики.Диаграммы = РеквизитФормыВЗначение("Диаграммы");
	ПараметрыОбновленияИзАналитики.ОбъектыАналитики = РеквизитФормыВЗначение("ОбъектыАналитики");
	ПараметрыОбновленияИзАналитики.Панели = РеквизитФормыВЗначение("Панели");
	ПараметрыОбновленияИзАналитики.Папки = РеквизитФормыВЗначение("Папки");
	
	Возврат ПараметрыОбновленияИзАналитики;
	
КонецФункции

&НаКлиенте
Процедура ОбновлениеИзАналитикиВыполнено(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если Результат.Свойство("Сообщения") И Результат.Сообщения <> Неопределено Тогда
			Для каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		Если Результат.Свойство("Статус") Тогда
			Если Результат.Статус = "Ошибка" Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
			ИначеЕсли Результат.Статус = "Выполнено" Тогда
				ЗаполнитьДанныеПослеОбновленияИзАналитики(Результат.АдресРезультата);
				
				ОбновитьПанелиПриемник();
				Если Не ИсточникИзФайла Тогда
					ОбновитьПанельИсточник();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПослеОбновленияИзАналитики(АдресРезультата)
	
	СтруктураРезультата = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ВладельцыАналитики, СтруктураРезультата.ВладельцыАналитики);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Дашборды, СтруктураРезультата.Дашборды);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Диаграммы, СтруктураРезультата.Диаграммы);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ОбъектыАналитики, СтруктураРезультата.ОбъектыАналитики);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Панели, СтруктураРезультата.Панели);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Папки, СтруктураРезультата.Папки);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Коллекция, Таблица)
	
	Коллекция.Очистить();
	
	Для Каждого Строка Из Таблица Цикл
		НоваяСтрока = Коллекция.Добавить();
		Для Каждого Колонка Из Таблица.Колонки Цикл //КолонкаТаблицыЗначений
			Если Колонка.Имя = "ПрочиеПоля" Тогда
				НоваяСтрока[Колонка.Имя].Загрузить(Строка[Колонка.Имя]);
			Иначе
				НоваяСтрока[Колонка.Имя] = Строка[Колонка.Имя];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЧтениеИзФайла

&НаКлиенте
Процедура ВыполнитьЧтениеИзФайла(АдресХранилища)
	
	ДлительнаяОперация = ЧтениеИзФайлаНаСервере(АдресХранилища);
	Если ДлительнаяОперация <> Неопределено Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЧтениеИзФайлаЗавершено", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.Заголовок = НСтр("ru = 'Чтение панелей из файла'");
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЧтениеИзФайлаНаСервере(АдресХранилища)
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ПараметрыЧтениеИзФайла", ПараметрыЧтениеИзФайла());
	ПараметрыЗадания.Вставить("Содержимое", СодержимоеВременногоФайла(АдресХранилища));
	
	ИмяМетода = "Обработки.УправлениеПанелями1САналитики.ЗагрузитьПанелиИсточникаИзJSON";
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Чтение панелей из файла'");
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(НастройкиЗапуска, ИмяМетода, ПараметрыЗадания);
	
КонецФункции

&НаСервере
Функция ПараметрыЧтениеИзФайла()
	
	ПараметрыЧтениеИзФайла = Обработки.УправлениеПанелями1САналитики.ПараметрыЧтениеИзФайла();
	ПараметрыЧтениеИзФайла.ВладельцыАналитикиИзФайла = РеквизитФормыВЗначение("ВладельцыАналитикиИзФайла");
	ПараметрыЧтениеИзФайла.ДашбордыИзФайла = РеквизитФормыВЗначение("ДашбордыИзФайла");
	ПараметрыЧтениеИзФайла.ДиаграммыИзФайла = РеквизитФормыВЗначение("ДиаграммыИзФайла");
	ПараметрыЧтениеИзФайла.ОбъектыАналитикиИзФайла = РеквизитФормыВЗначение("ОбъектыАналитикиИзФайла");
	ПараметрыЧтениеИзФайла.ПанелиИзФайла = РеквизитФормыВЗначение("ПанелиИзФайла");
	ПараметрыЧтениеИзФайла.ПапкиИзФайла = РеквизитФормыВЗначение("ПапкиИзФайла");
	
	Возврат ПараметрыЧтениеИзФайла;
	
КонецФункции

&НаСервереБезКонтекста
Функция СодержимоеВременногоФайла(Адрес)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	Данные = ПолучитьИзВременногоХранилища(Адрес); //ДвоичныеДанные
	Данные.Записать(ИмяВременногоФайла);
	
	НовыйТекстовыйДокумент = Новый ТекстовыйДокумент();
	НовыйТекстовыйДокумент.Прочитать(ИмяВременногоФайла, КодировкаТекста.UTF8);
	Содержимое = НовыйТекстовыйДокумент.ПолучитьТекст();
	
	УдалитьИзВременногоХранилища(Адрес);
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат Содержимое;
	
КонецФункции

&НаКлиенте
Процедура ЧтениеИзФайлаЗавершено(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если Результат.Свойство("Сообщения") И Результат.Сообщения <> Неопределено Тогда
			Для каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		Если Результат.Свойство("Статус") Тогда
			Если Результат.Статус = "Ошибка" Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
			ИначеЕсли Результат.Статус = "Выполнено" Тогда
				ЗаполнитьДанныеПослеЧтениеИзФайла(Результат.АдресРезультата);
				ОбновитьТаблицуВладельцевИсточника();
				ОбновитьДеревоПанелейИсточника();
				РазвернутьПанельИсточник();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПослеЧтениеИзФайла(АдресРезультата)
	
	СтруктураРезультата = ПолучитьИзВременногоХранилища(АдресРезультата);

	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ВладельцыАналитикиИзФайла, СтруктураРезультата.ВладельцыАналитикиИзФайла);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ДашбордыИзФайла, СтруктураРезультата.ДашбордыИзФайла);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ДиаграммыИзФайла, СтруктураРезультата.ДиаграммыИзФайла);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ОбъектыАналитикиИзФайла, СтруктураРезультата.ОбъектыАналитикиИзФайла);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ПанелиИзФайла, СтруктураРезультата.ПанелиИзФайла);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ПапкиИзФайла, СтруктураРезультата.ПапкиИзФайла);
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеСсылки

&НаКлиенте
Процедура ВыполнитьСозданиеСсылкиНаПанель(ИдентификаторОбъекта)
	
	ДлительнаяОперация = СоздатьСсылкуНаПанельНаСервере(ИдентификаторОбъекта);
	Если ДлительнаяОперация <> Неопределено Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("СозданиеСсылкиНаПанельЗавершено", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.Заголовок = НСтр("ru = 'Создание ссылки на панель'");
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьСсылкуНаПанельНаСервере(ИдентификаторОбъекта)
	
	ПараметрыЗадания = ПараметрыСозданияСсылки(ИдентификаторОбъекта);
	
	ИмяМетода = "Обработки.УправлениеПанелями1САналитики.СоздатьСсылкуНаПанель";
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Создание ссылки на панель'");
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(НастройкиЗапуска, ИмяМетода, ПараметрыЗадания);
	
КонецФункции

&НаСервере
Функция ПараметрыСозданияСсылки(ИдентификаторОбъекта)
	
	ПараметрыСозданияСсылки = Обработки.УправлениеПанелями1САналитики.ПараметрыСозданияСсылки();
	ПараметрыСозданияСсылки.ВыбранныеВладельцыПриемник = ВыбранныеВладельцыПриемник;
	ПараметрыСозданияСсылки.ИдентификаторОбъекта = ИдентификаторОбъекта;
	ПараметрыСозданияСсылки.ПанелиИсточник = РеквизитФормыВЗначение("ПанелиИсточник");
	ПараметрыСозданияСсылки.Панели = РеквизитФормыВЗначение("Панели");
	ПараметрыСозданияСсылки.Дашборды = РеквизитФормыВЗначение("Дашборды");
	ПараметрыСозданияСсылки.Диаграммы = РеквизитФормыВЗначение("Диаграммы");
	ПараметрыСозданияСсылки.Папки = РеквизитФормыВЗначение("Папки");
	ПараметрыСозданияСсылки.ВладельцыАналитики = РеквизитФормыВЗначение("ВладельцыАналитики");
	ПараметрыСозданияСсылки.ОбъектыАналитики = РеквизитФормыВЗначение("ОбъектыАналитики");
	
	Возврат ПараметрыСозданияСсылки;
	
КонецФункции

&НаКлиенте
Процедура СозданиеСсылкиНаПанельЗавершено(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если Результат.Свойство("Сообщения") И Результат.Сообщения <> Неопределено Тогда
			Для каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		Если Результат.Свойство("Статус") Тогда
			Если Результат.Статус = "Ошибка" Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
			ИначеЕсли Результат.Статус = "Выполнено" Тогда
				ЗаполнитьДанныеПослеСозданияСсылки(Результат.АдресРезультата);
				ОбновитьПанелиПриемник();
				ОбновитьДеревоПанелейПриемника(); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПослеСозданияСсылки(АдресРезультата)
	
	СтруктураРезультата = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Дашборды, СтруктураРезультата.Дашборды);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Диаграммы, СтруктураРезультата.Диаграммы);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ОбъектыАналитики, СтруктураРезультата.ОбъектыАналитики);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Панели, СтруктураРезультата.Панели);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Папки, СтруктураРезультата.Папки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияСозданиеСсылкиНаПанель(Ответ, ИдентификаторОбъекта) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнитьСозданиеСсылкиНаПанель(ИдентификаторОбъекта);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеСсылок

&НаКлиенте
Процедура ВыполнитьСозданиеСсылокНаПанели()
	
	ДлительнаяОперация = СоздатьСсылкиНаПанелиНаСервере();
	Если ДлительнаяОперация <> Неопределено Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("СозданиеСсылокНаПанелиЗавершено", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.Заголовок = НСтр("ru = 'Создание ссылок на панели'");
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьСсылкиНаПанелиНаСервере()
	
	ПараметрыЗадания = ПараметрыСозданияСсылок();
	
	ИмяМетода = "Обработки.УправлениеПанелями1САналитики.СоздатьСсылкиНаПанели";
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Создание ссылок на панели'");
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(НастройкиЗапуска, ИмяМетода, ПараметрыЗадания);
	
КонецФункции

&НаСервере
Функция ПараметрыСозданияСсылок()
	
	ПараметрыСозданияСсылок = Обработки.УправлениеПанелями1САналитики.ПараметрыСозданияСсылок();
	ПараметрыСозданияСсылок.ВыбранныеВладельцыПриемник = ВыбранныеВладельцыПриемник;
	ПараметрыСозданияСсылок.ПанелиИсточник = РеквизитФормыВЗначение("ПанелиИсточник");
	ПараметрыСозданияСсылок.Панели = РеквизитФормыВЗначение("Панели");
	ПараметрыСозданияСсылок.Дашборды = РеквизитФормыВЗначение("Дашборды");
	ПараметрыСозданияСсылок.Диаграммы = РеквизитФормыВЗначение("Диаграммы");
	ПараметрыСозданияСсылок.Папки = РеквизитФормыВЗначение("Папки");
	ПараметрыСозданияСсылок.ВладельцыАналитики = РеквизитФормыВЗначение("ВладельцыАналитики");
	ПараметрыСозданияСсылок.ОбъектыАналитики = РеквизитФормыВЗначение("ОбъектыАналитики");
	
	Возврат ПараметрыСозданияСсылок;
	
КонецФункции

&НаКлиенте
Процедура СозданиеСсылокНаПанелиЗавершено(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если Результат.Свойство("Сообщения") И Результат.Сообщения <> Неопределено Тогда
			Для каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		Если Результат.Свойство("Статус") Тогда
			Если Результат.Статус = "Ошибка" Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
			ИначеЕсли Результат.Статус = "Выполнено" Тогда
				ЗаполнитьДанныеПослеОбработкиОбъектов(Результат.АдресРезультата);
				ОбновитьПанелиПриемник();
				ОбновитьДеревоПанелейПриемника(); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПослеОбработкиОбъектов(АдресРезультата)
	
	СтруктураРезультата = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Дашборды, СтруктураРезультата.Дашборды);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Диаграммы, СтруктураРезультата.Диаграммы);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ОбъектыАналитики, СтруктураРезультата.ОбъектыАналитики);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Панели, СтруктураРезультата.Панели);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Папки, СтруктураРезультата.Папки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияСозданиеСсылокНаВсеПанели(Ответ, ДопПараметр) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнитьСозданиеСсылокНаПанели();
	КонецЕсли;  
	
КонецПроцедуры
 
#КонецОбласти

#Область Копирование

&НаКлиенте
Процедура ВыполнитьКопированиеПанели(ИдентификаторОбъекта, ВыбранныйВладелец)
	
	ДлительнаяОперация = ВыполнитьКопированиеПанелиНаСервере(ИдентификаторОбъекта, ВыбранныйВладелец);
	Если ДлительнаяОперация <> Неопределено Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("КопированиеПанелиЗавершено", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.Заголовок = НСтр("ru = 'Копирование панели'");
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьКопированиеПанелиНаСервере(ИдентификаторОбъекта, ВыбранныйВладелец)
	
	ПараметрыЗадания = ПараметрыКопированияПанелей(ИдентификаторОбъекта, ВыбранныйВладелец);
	
	ИмяМетода = "Обработки.УправлениеПанелями1САналитики.СкопироватьПанель";
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Копирование панели'");
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(НастройкиЗапуска, ИмяМетода, ПараметрыЗадания);
	
КонецФункции

&НаСервере
Функция ПараметрыКопированияПанелей(ИдентификаторОбъекта, ВыбранныйВладелец)
	
	ПараметрыКопированияПанелей = Обработки.УправлениеПанелями1САналитики.ПараметрыКопированияПанелей();

	ПараметрыКопированияПанелей.ИдентификаторОбъекта = ИдентификаторОбъекта;
	ПараметрыКопированияПанелей.ВыбранныйВладелец = ВыбранныйВладелец;
	
	ПараметрыКопированияПанелей.ИзФайла = ИсточникИзФайла;
	ПараметрыКопированияПанелей.ВыбранныеВладельцыПриемник = ВыбранныеВладельцыПриемник;
	ПараметрыКопированияПанелей.ПанелиИсточник = РеквизитФормыВЗначение("ПанелиИсточник");
	ПараметрыКопированияПанелей.Панели = РеквизитФормыВЗначение("Панели");
	ПараметрыКопированияПанелей.Дашборды = РеквизитФормыВЗначение("Дашборды");
	ПараметрыКопированияПанелей.Диаграммы = РеквизитФормыВЗначение("Диаграммы");
	ПараметрыКопированияПанелей.Папки = РеквизитФормыВЗначение("Папки");
	ПараметрыКопированияПанелей.ВладельцыАналитики = РеквизитФормыВЗначение("ВладельцыАналитики");
	ПараметрыКопированияПанелей.ОбъектыАналитики = РеквизитФормыВЗначение("ОбъектыАналитики");
	
	Если ИсточникИзФайла Тогда 
		ПараметрыКопированияПанелей.ДашбордыИсточник = РеквизитФормыВЗначение("ДашбордыИзФайла");
	Иначе
		ПараметрыКопированияПанелей.ДашбордыИсточник = РеквизитФормыВЗначение("Дашборды");
	КонецЕсли;
	Если ИсточникИзФайла Тогда 
		ПараметрыКопированияПанелей.ДиаграммыИсточник = РеквизитФормыВЗначение("ДиаграммыИзФайла");
	Иначе
		ПараметрыКопированияПанелей.ДиаграммыИсточник = РеквизитФормыВЗначение("Диаграммы");
	КонецЕсли;
	Если ИсточникИзФайла Тогда 
		ПараметрыКопированияПанелей.ПапкиИсточник = РеквизитФормыВЗначение("ПапкиИзФайла");
	Иначе
		ПараметрыКопированияПанелей.ПапкиИсточник = РеквизитФормыВЗначение("Папки");
	КонецЕсли;
	Если ИсточникИзФайла Тогда 
		ПараметрыКопированияПанелей.ОбъектыАналитикиИсточник = РеквизитФормыВЗначение("ОбъектыАналитикиИзФайла");
	Иначе
		ПараметрыКопированияПанелей.ОбъектыАналитикиИсточник = РеквизитФормыВЗначение("ОбъектыАналитики");
	КонецЕсли;
	
	Возврат ПараметрыКопированияПанелей;
	
КонецФункции

&НаКлиенте
Процедура КопированиеПанелиЗавершено(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если Результат.Свойство("Сообщения") И Результат.Сообщения <> Неопределено Тогда
			Для каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		Если Результат.Свойство("Статус") Тогда
			Если Результат.Статус = "Ошибка" Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
			ИначеЕсли Результат.Статус = "Выполнено" Тогда
				ЗаполнитьДанныеПослеКопированияПанели(Результат.АдресРезультата);
				ОбновитьПанелиПриемник();
				ОбновитьДеревоПанелейПриемника(); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПослеКопированияПанели(АдресРезультата)
	
	СтруктураРезультата = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Дашборды, СтруктураРезультата.Дашборды);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Диаграммы, СтруктураРезультата.Диаграммы);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ОбъектыАналитики, СтруктураРезультата.ОбъектыАналитики);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Панели, СтруктураРезультата.Панели);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Папки, СтруктураРезультата.Папки);

КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияПереносаПанелей(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВозможныеВладельцы = ДополнительныеПараметры.ВозможныеВладельцы;
		Если ИсточникИзФайла И ВозможныеВладельцы.Количество() > 1 Тогда
			ВыборВладельцаДляПанелей(ДополнительныеПараметры)
		Иначе
			ИдентификаторОбъекта = ДополнительныеПараметры.ИдентификаторОбъекта;
			ВыполнитьКопированиеПанели(ИдентификаторОбъекта, Неопределено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВладельцаДляПанелей(ДополнительныеПараметры) Экспорт 
	
	ВозможныеВладельцы = ДополнительныеПараметры.ВозможныеВладельцы;
	
	Если ВозможныеВладельцы.Количество() > 1 Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("АдресВоВременномХранилище", ПоместитьВоВременноеХранилище(ВозможныеВладельцы, УникальныйИдентификатор));
		
		ОткрытьФорму("Обработка.УправлениеПанелями1САналитики.Форма.ВыборВладельцаДляПанелей",
					ПараметрыФормы,
					ЭтотОбъект,,,,
					Новый ОписаниеОповещения("ВладелецДляНовыхПанелейВыбран", ЭтотОбъект, ДополнительныеПараметры.ИдентификаторОбъекта), 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецДляНовыхПанелейВыбран(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьКопированиеПанели(ДополнительныеПараметры, Результат);
	
КонецПроцедуры

#КонецОбласти

#Область Удаление

&НаКлиенте
Процедура ВыполнитьУдалениеПанели(ИдентификаторСтроки)
	
	ДлительнаяОперация = УдалитьПанельНаСервере(ИдентификаторСтроки);
	Если ДлительнаяОперация <> Неопределено Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("УдалениеПанелиЗавершено", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.Заголовок = НСтр("ru = 'Удаление панели'");
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УдалитьПанельНаСервере(ИдентификаторСтроки)
	
	ПараметрыЗадания = ПараметрыУдалениеПанели(ИдентификаторСтроки);
	
	ИмяМетода = "Обработки.УправлениеПанелями1САналитики.УдалитьПанель";
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Удаление панели'");
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(НастройкиЗапуска, ИмяМетода, ПараметрыЗадания);
	
КонецФункции

&НаСервере
Функция ПараметрыУдалениеПанели(ИдентификаторСтроки)
	
	ПараметрыСозданияСсылки = Обработки.УправлениеПанелями1САналитики.ПараметрыУдаленияПанели();
	ПараметрыСозданияСсылки.ИдентификаторСтроки = ИдентификаторСтроки;
	ПараметрыСозданияСсылки.ПанелиИсточник = РеквизитФормыВЗначение("ПанелиИсточник");
	ПараметрыСозданияСсылки.ПанелиПриемник = РеквизитФормыВЗначение("ПанелиПриемник");
	ПараметрыСозданияСсылки.Панели = РеквизитФормыВЗначение("Панели");
	ПараметрыСозданияСсылки.Дашборды = РеквизитФормыВЗначение("Дашборды");
	ПараметрыСозданияСсылки.Диаграммы = РеквизитФормыВЗначение("Диаграммы");
	ПараметрыСозданияСсылки.Папки = РеквизитФормыВЗначение("Папки");
	ПараметрыСозданияСсылки.ВладельцыАналитики = РеквизитФормыВЗначение("ВладельцыАналитики");
	ПараметрыСозданияСсылки.ОбъектыАналитики = РеквизитФормыВЗначение("ОбъектыАналитики");
	
	Возврат ПараметрыСозданияСсылки;
	
КонецФункции

&НаКлиенте
Процедура УдалениеПанелиЗавершено(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если Результат.Свойство("Сообщения") И Результат.Сообщения <> Неопределено Тогда
			Для каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		Если Результат.Свойство("Статус") Тогда
			Если Результат.Статус = "Ошибка" Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
			ИначеЕсли Результат.Статус = "Выполнено" Тогда
				ЗаполнитьДанныеПослеУдалениеПанели(Результат.АдресРезультата);
				ОбновитьПанелиПриемник();
				ОбновитьДеревоПанелейПриемника(); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПослеУдалениеПанели(АдресРезультата)
	
	СтруктураРезультата = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Дашборды, СтруктураРезультата.Дашборды);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Диаграммы, СтруктураРезультата.Диаграммы);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(ОбъектыАналитики, СтруктураРезультата.ОбъектыАналитики);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Панели, СтруктураРезультата.Панели);
	ЗаполнитьКоллекциюФормыПоТаблицеЗначений(Папки, СтруктураРезультата.Папки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияУдаленияПанели(Ответ, ИдентификаторСтроки) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнитьУдалениеПанели(ИдентификаторСтроки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура ОбновитьПанелиПриемник()
	
	ОбновитьТаблицуВладельцевПриемника();
	ОбновитьДеревоПанелейПриемника();
	РазвернутьПанельПриемник(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПанельИсточник()
	
	ОбновитьТаблицуВладельцевИсточника();
	ОбновитьДеревоПанелейИсточника();
	РазвернутьПанельИсточник();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуВладельцевПриемника()
	
	ТаблицаВладельцевПриемник.Очистить();
	
	Для Каждого Пользователь Из ВладельцыАналитики Цикл
		НоваяСтрока = ТаблицаВладельцевПриемник.Добавить();
		НоваяСтрока.Владелец = Пользователь.OwnerName;
		Если ВыбранныеВладельцыПриемник.НайтиПоЗначению(НоваяСтрока.Владелец) = Неопределено Тогда
			НоваяСтрока.Пометка = Ложь;
		Иначе
			НоваяСтрока.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаВладельцевПриемник.Сортировать("Владелец");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуВладельцевИсточника()
	
	ТаблицаВладельцевИсточник.Очистить();
	
	ТаблицаВладельцев = ?(ИсточникИзФайла, ВладельцыАналитикиИзФайла, ВладельцыАналитики);
	
	Для Каждого Пользователь Из ТаблицаВладельцев Цикл
		НоваяСтрока = ТаблицаВладельцевИсточник.Добавить();
		НоваяСтрока.Владелец = Пользователь.OwnerName;
		Если ВыбранныеВладельцыИсточник.НайтиПоЗначению(НоваяСтрока.Владелец) = Неопределено Тогда
			НоваяСтрока.Пометка = Ложь;
		Иначе
			НоваяСтрока.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаВладельцевИсточник.Сортировать("Владелец");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоПанелейПриемника()
	
	ПанелиПриемник.ПолучитьЭлементы().Очистить();
	Для Каждого Панель Из Панели Цикл
		
		Если ВыбранныеВладельцыПриемник.НайтиПоЗначению(Панель.OwnerName) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		КорневаяПапка = Обработки.УправлениеПанелями1САналитики.НайтиПоИдентификатору(Папки, Панель.Data_RootFolderId);
		Если КорневаяПапка <> Неопределено Тогда 
			КореньДерева = ПанелиПриемник.ПолучитьЭлементы().Добавить();
			КореньДерева.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			КореньДерева.Название = Панель.OwnerName;
			КореньДерева.ВладелецПанели = Панель.Owner; 
			КореньДерева.Идентификатор = Панель.Data_RootFolderId;
			
			ЗаполнитьЭлементыПанели(КорневаяПапка, КореньДерева.ПолучитьЭлементы(), Ложь, Панель.Owner, Новый Соответствие());
		КонецЕсли;
	КонецЦикла;
	
	СортироватьДанныеФормыДерево("ПанелиПриемник");
	
КонецПроцедуры

&НаСервере 
Процедура ОбновитьДеревоПанелейИсточника()
	
	Если ИсточникИзФайла Тогда
		ТаблицаПанелей = ПанелиИзФайла;
		ТаблицаПапок = ПапкиИзФайла;
	Иначе
		ТаблицаПанелей = Панели;
		ТаблицаПапок = Папки;
	КонецЕсли;
	
	ПанелиИсточник.ПолучитьЭлементы().Очистить();
	УчитыватьФильтр = ВыбранныеВладельцыИсточник.Количество() > 0;
	Для Каждого Панель Из ТаблицаПанелей Цикл
		
		Если УчитыватьФильтр И ВыбранныеВладельцыИсточник.НайтиПоЗначению(Панель.OwnerName) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		КорневаяПапка =  Обработки.УправлениеПанелями1САналитики.НайтиПоИдентификатору(ТаблицаПапок, Панель.Data_RootFolderId);
		Если КорневаяПапка <> Неопределено Тогда 
			КореньДерева = ПанелиИсточник.ПолучитьЭлементы().Добавить();
			КореньДерева.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			КореньДерева.Название = Панель.OwnerName;
			КореньДерева.ВладелецПанели = Панель.Owner;
			КореньДерева.Идентификатор = Панель.Data_RootFolderId;

			ЗаполнитьЭлементыПанели(КорневаяПапка, КореньДерева.ПолучитьЭлементы(), ИсточникИзФайла, Панель.Owner, Новый Соответствие());
		КонецЕсли;
	КонецЦикла;
	
	СортироватьДанныеФормыДерево("ПанелиИсточник");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлементыПанели(СтрокаПапки, ЭлементыДерева, ИзФайла, ИдВладельца, ИдентификаторыПапок)
	
	ТаблицаДиаграмм = ?(ИзФайла, ДиаграммыИзФайла, Диаграммы);
	ТаблицаДашбордов = ?(ИзФайла, ДашбордыИзФайла, Дашборды);
	ТаблицаПапок = ?(ИзФайла, ПапкиИзФайла, Папки);
	
	Для Каждого ИдентификаторПодпапки Из СтрокаПапки.Data_FolderIds Цикл
		Если ИдентификаторыПапок.Получить(ИдентификаторПодпапки) <> Неопределено Тогда // иначе бесконечный цикл
			Прервать;
		КонецЕсли;
		ИдентификаторыПапок.Вставить(ИдентификаторПодпапки, Истина);
		
		СтрокаПодпапки = ТаблицаПапок.НайтиСтроки(Новый Структура("Id", ИдентификаторПодпапки.Значение));
		Если СтрокаПодпапки.Количество() Тогда
			Папка = СтрокаПодпапки[0];
			КартинкаПанели = БиблиотекаКартинок.Папка;
			СтрокаДерева = ЭлементыДерева.Добавить();
			СтрокаДерева.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			ЗаполнитьСтрокуДерева(СтрокаДерева, Папка, ИдВладельца, КартинкаПанели, ИзФайла);
	
			ЗаполнитьЭлементыПанели(Папка, СтрокаДерева.ПолучитьЭлементы(), ИзФайла, ИдВладельца, ИдентификаторыПапок);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ИдентификаторФайла Из СтрокаПапки.Data_FileIds Цикл
		Идентификатор = ИдентификаторФайла.Значение;
		
		СтрокиДиаграмм = ТаблицаДиаграмм.НайтиСтроки(Новый Структура("Id", Идентификатор));
		Если СтрокиДиаграмм.Количество() Тогда 
			Диаграмма = СтрокиДиаграмм[0];
			КартинкаПанели = БиблиотекаКартинок.Диаграмма; 
			СтрокаДерева = ЭлементыДерева.Добавить();
			СтрокаДерева.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			ЗаполнитьСтрокуДерева(СтрокаДерева, Диаграмма, ИдВладельца, КартинкаПанели, ИзФайла);
			Продолжить;
		КонецЕсли;
		
		СтрокиДашбордов = ТаблицаДашбордов.НайтиСтроки(Новый Структура("Id", Идентификатор));
		Если СтрокиДашбордов.Количество() Тогда
			Дашборд = СтрокиДашбордов[0];
			КартинкаПанели = БиблиотекаКартинок.ОформлениеКвадратыПустые; 
			СтрокаДерева = ЭлементыДерева.Добавить();
			СтрокаДерева.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			ЗаполнитьСтрокуДерева(СтрокаДерева, Дашборд, ИдВладельца, КартинкаПанели, ИзФайла);
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуДерева(СтрокаДерева, Источник, ИдВладельца, КартинкаПанели, ИзФайла)
	
	СтрокаДерева.Название = Источник.Name;
	СтрокаДерева.ВладелецИдентификатор = Источник.Owner;
	СтрокаДерева.Идентификатор = Источник.Id;
	СтрокаДерева.ВладелецИмя = Источник.OwnerName;
	СтрокаДерева.КартинкаПанели = КартинкаПанели;
	СтрокаДерева.Тип = Источник.Type;
	СтрокаДерева.ДатаИзменения = МеткаВремениВДату(Источник.Updated);
	СтрокаДерева.ВладелецПанели = ИдВладельца;
	
	Если Источник.Owner <> ИдВладельца Тогда
		СтрокаДерева.ЭтоСсылка = Истина;
		Если Не ИзФайла Тогда
			СтрокаДерева.КартинкаСсылки = БиблиотекаКартинок.ПолучитьНавигационнуюСсылку;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлПанелейРасширениеПодключено(Результат, ДополнительныеПараметры) Экспорт 
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Фильтр =  НСтр("ru='Файл панелей'") + " (*.json)|*.json";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите путь к файлу панелей'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ФайлПанелейПоказатьДиалогЗавершение",
		ЭтотОбъект);
		
	ДиалогОткрытияФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ФайлПанелейПоказатьДиалогЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФайлПанелей = ВыбранныеФайлы[0];
	
	ОписаниеФайла = Ждать ПоместитьФайлНаСерверАсинх(, , , ФайлПанелей);
	
	Если ОписаниеФайла <> Неопределено Тогда
		ВыполнитьЧтениеИзФайла(ОписаниеФайла.Адрес);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Процедура СортироватьДанныеФормыДерево(ИмяРеквизита)
	
	Дерево = РеквизитФормыВЗначение(ИмяРеквизита);
	Дерево.Строки.Сортировать("Название", Истина);
	ЗначениеВДанныеФормы(Дерево, ЭтотОбъект[ИмяРеквизита]);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МеткаВремениВДату(МеткаВремениСтр)
	
	Если ЗначениеЗаполнено(МеткаВремениСтр) Тогда
		Возврат МестноеВремя('19700101' + Число(МеткаВремениСтр) / 1000)
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверкаКСозданиюСсылок(Знач ИдентификаторСтроки = Неопределено)
	
	Дерево = РеквизитФормыВЗначение("ПанелиИсточник");
	СтрокиКОбработке = Обработки.УправлениеПанелями1САналитики.СтрокиДереваКОбработке(Дерево, ИдентификаторСтроки);
	
	ЕстьНедоступныеКОбработке = Ложь;
	ЕстьДоступныеКОбработке = Ложь;
	
	Для Каждого Панель Из Панели Цикл
		Если ВыбранныеВладельцыПриемник.НайтиПоЗначению(Панель.OwnerName) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Переносы = Обработки.УправлениеПанелями1САналитики.Переносы(Панель, СтрокиКОбработке, ИсточникИзФайла, Диаграммы, Дашборды, Папки);
		Для Каждого Строка Из СтрокиКОбработке Цикл
			
			Перенос = Переносы.Получить(Строка);
			Если Перенос = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не Перенос.ВозможенКакСсылка Тогда
				ЕстьНедоступныеКОбработке = Истина;
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = СтрШаблон(НСтр("ru = 'В приемнике ""%1"" уже есть объект: %2'"), Панель.OwnerName, Строка.Название);
				Сообщение.Сообщить();
			Иначе
				ЕстьДоступныеКОбработке = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Результат = Новый Структура();
	Результат.Вставить("ЕстьДоступныеКОбработке", ЕстьДоступныеКОбработке);
	Результат.Вставить("ЕстьНедоступныеКОбработке", ЕстьНедоступныеКОбработке);
	
	Возврат Результат;
	
КонецФункции	

&НаСервере
Функция ПроверкаКПереносуПанелей(Знач ИдентификаторСтроки)
	
	СортировкаПапок = Новый ТаблицаЗначений(); // для сортировки папок по уровню
	СортировкаПапок.Колонки.Добавить("ПоляПапки");
	СортировкаПапок.Колонки.Добавить("Уровень");
	
	Дерево = РеквизитФормыВЗначение("ПанелиИсточник");
	СтрокиКПереносу = Обработки.УправлениеПанелями1САналитики.СтрокиДереваКОбработке(Дерево, ИдентификаторСтроки);
	
	ЕстьДоступныеКПереносу = Ложь;
	ЕстьНедоступныеДляПереноса = Ложь;
	ЕстьЗамещаемые = Ложь;
	ВозможныеВладельцы = Новый Массив;
	
	Для Каждого Панель Из Панели Цикл
		
		Если ВыбранныеВладельцыПриемник.НайтиПоЗначению(Панель.OwnerName) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
				
		Переносы = Обработки.УправлениеПанелями1САналитики.Переносы(Панель, СтрокиКПереносу, ИсточникИзФайла, Диаграммы, Дашборды, Папки);
		
		Для Каждого Строка Из СтрокиКПереносу Цикл //СтрокаДереваЗначений
			
			Перенос = Переносы.Получить(Строка);
			
			СтрокаТип = Строка.Тип;
			СтрокаИдентификатор = Строка.Идентификатор;
			СтрокаНазвание = Строка.Название;
			
			Если Перенос.ВозможенКакНовый Тогда
				ЕстьДоступныеКПереносу = Истина;
				
				Если ИсточникИзФайла Тогда
					Если ВозможныеВладельцы.Найти(Панель.OwnerName) = Неопределено Тогда
						ВозможныеВладельцы.Добавить(Панель.OwnerName);
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Перенос.ВозможенСЗамещением Тогда
				Если ИсточникИзФайла Тогда
					Если ВозможныеВладельцы.Найти(Панель.OwnerName) = Неопределено Тогда
						ВозможныеВладельцы.Добавить(Панель.OwnerName);
					КонецЕсли;
				КонецЕсли;
				
				Если СтрокаТип = "folder" Тогда
					ЕстьЗамещаемые = Истина;
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст = СтрШаблон(НСтр("ru = 'Объект ""%1"" уже есть в приемнике ""%2"", он будет заменен'"), СтрокаНазвание, Панель.OwnerName);
					Сообщение.Сообщить();
				Иначе
					Если Обработки.УправлениеПанелями1САналитики.РодительскаяПапкаМожетБытьПеренесена(Строка, Переносы) Тогда
						ЕстьЗамещаемые = Истина;
						Сообщение = Новый СообщениеПользователю();
						Сообщение.Текст = СтрШаблон(НСтр("ru = 'Объект ""%1"" уже есть в приемнике ""%2"", он будет заменен'"), СтрокаНазвание, Панель.OwnerName);
						Сообщение.Сообщить();
					Иначе
						ЕстьНедоступныеДляПереноса = Истина;
						Сообщение = Новый СообщениеПользователю();
						Сообщение.Текст = СтрШаблон(НСтр("ru = 'Объект ""%1"" находится в папке, которая не может быть перенесена'"), СтрокаНазвание);
						Сообщение.Сообщить();
					КонецЕсли;
				КонецЕсли;
			Иначе
				// объект принадлежит другому рабочему столу
				ИмяВладельцаСуществующегоОбъекта = ИмяВладельцаСуществующегоОбъекта(СтрокаИдентификатор, СтрокаТип);
				
				ЕстьНедоступныеДляПереноса = Истина;
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = СтрШаблон(НСтр("ru = 'Объект ""%1"" находится в папке у владельца ""%2"" и не может быть перенесен'"), СтрокаНазвание, ИмяВладельцаСуществующегоОбъекта);
				Сообщение.Сообщить();
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ИсточникИзФайла Тогда
		Для Каждого ОбъектИсточник Из СтрокиКПереносу Цикл //СтрокаДереваЗначений
			Если ОбъектИсточник.Тип = "chart" Тогда
				ТаблицаПоиска = Диаграммы;
			ИначеЕсли ОбъектИсточник.Тип = "dashboard" Тогда
				ТаблицаПоиска = Дашборды;
			ИначеЕсли ОбъектИсточник.Тип = "folder" Тогда
				ТаблицаПоиска = Папки;
			КонецЕсли;
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Id", ОбъектИсточник.Идентификатор);
			РезультатПоиска = ТаблицаПоиска.НайтиСтроки(СтруктураПоиска);
			Если РезультатПоиска.Количество() Тогда
				СуществующийОбъект = РезультатПоиска[0];
				Если ВыбранныеВладельцыПриемник.НайтиПоЗначению(СуществующийОбъект.OwnerName) = Неопределено Тогда
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст = СтрШаблон(НСтр("ru = 'Объект ""%1"" уже прикреплен к владельцу ""%2"", для этого владельца будет создана ссылка, т.к. объект будет прикреплен к новому владельцу'"), СуществующийОбъект.Name, СуществующийОбъект.OwnerName);
					Сообщение.Сообщить();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Результат = Новый Структура();
	Результат.Вставить("ЕстьДоступныеКПереносу", ЕстьДоступныеКПереносу);
	Результат.Вставить("ЕстьНедоступныеДляПереноса", ЕстьНедоступныеДляПереноса);
	Результат.Вставить("ЕстьЗамещаемые", ЕстьЗамещаемые);
	Результат.Вставить("ВозможныеВладельцы", ВозможныеВладельцы);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяВладельцаСуществующегоОбъекта(ИдентификаторОбъекта, ТипОбъекта)
	
	Если ТипОбъекта = "chart" Тогда
		Таблица = Диаграммы;
	ИначеЕсли ТипОбъекта = "dashboard" Тогда
		Таблица = Дашборды;
	ИначеЕсли ТипОбъекта = "folder" Тогда
		Таблица = Папки;
	КонецЕсли;
	
	РезультатПоиска = Таблица.НайтиСтроки(Новый Структура("Id", ИдентификаторОбъекта));
	Если РезультатПоиска.Количество() Тогда
		Возврат РезультатПоиска[0].OwnerName;
	Иначе
		Возврат ""
	КонецЕсли; 
	
КонецФункции

&НаСервере
Функция НастройкиПанелейJSON()
	
	Если ИсточникИзФайла Тогда
		ВладельцыАналитикиКСохранению = ВладельцыАналитикиИзФайла;
		ПанелиКСохранению = ПанелиИзФайла;
		ПапкиКСохранению = ПапкиИзФайла;
		ДиаграммыКСохранению = ДиаграммыИзФайла;
		ДашбордыКСохранению = ДашбордыИзФайла;
		ОбъектыАналитикиКСохранению = ОбъектыАналитикиИзФайла;
	Иначе
		ВладельцыАналитикиКСохранению = ВладельцыАналитики;
		ПанелиКСохранению = Панели;
		ПапкиКСохранению = Папки;
		ДиаграммыКСохранению = Диаграммы;
		ДашбордыКСохранению = Дашборды;
		ОбъектыАналитикиКСохранению = ОбъектыАналитики;
	КонецЕсли;
	
	Возврат Обработки.УправлениеПанелями1САналитики.НастройкиПанелейJSON(
					ВладельцыАналитикиКСохранению,
					ПанелиКСохранению,
					ПапкиКСохранению,
					ДиаграммыКСохранению,
					ДашбордыКСохранению,
					ОбъектыАналитикиКСохранению); 
	
КонецФункции

&НаСервере
Функция НастройкиВыбранныхВладельцевJSON()
	
	Если ИсточникИзФайла Тогда
		ПанелиКСохранению = ПанелиИзФайла;
		ВыбранныеВладельцыКСохранению = ВыбранныеВладельцыИсточник;
		ВладельцыАналитикиКСохранению = ВладельцыАналитикиИзФайла;
		ПапкиКСохранению = ПапкиИзФайла;
		ДиаграммыКСохранению = ДиаграммыИзФайла;
		ДашбордыКСохранению = ДашбордыИзФайла;
		ОбъектыАналитикиКСохранению = ОбъектыАналитикиИзФайла;
	Иначе
		ПанелиКСохранению = Панели;
		ВыбранныеВладельцыКСохранению = ВыбранныеВладельцыИсточник;
		ВладельцыАналитикиКСохранению = ВладельцыАналитики;
		ПапкиКСохранению = Папки;
		ДиаграммыКСохранению = Диаграммы;
		ДашбордыКСохранению = Дашборды;
		ОбъектыАналитикиКСохранению = ОбъектыАналитики;
	КонецЕсли;
	
	Возврат Обработки.УправлениеПанелями1САналитики.НастройкиВыбранныхВладельцевJSON(
					ПанелиКСохранению,
					ВыбранныеВладельцыКСохранению,
					ВладельцыАналитикиКСохранению,
					ПапкиКСохранению,
					ДиаграммыКСохранению,
					ДашбордыКСохранению,
					ОбъектыАналитикиКСохранению);
	
КонецФункции

&НаКлиенте
Процедура РазвернутьПанельПриемник()
	
	Если ПанелиПриемник.ПолучитьЭлементы().Количество() Тогда 
		Элементы.ПанелиПриемник.Развернуть(ПанелиПриемник.ПолучитьЭлементы()[0].ПолучитьИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьПанельИсточник()
	
	Если ПанелиИсточник.ПолучитьЭлементы().Количество() Тогда
		Элементы.ПанелиИсточник.Развернуть(ПанелиИсточник.ПолучитьЭлементы()[0].ПолучитьИдентификатор()); 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиВладельцевВФайл(ТолькоВыбранногоПользователя = Ложь)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СохранитьНастройкиВладельцевРасширениеПодключено",
		ЭтотОбъект,
		ТолькоВыбранногоПользователя);
	
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиВладельцевРасширениеПодключено(Результат, ДополнительныеПараметры) Экспорт 
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Фильтр =  НСтр("ru='Файл панелей'") + " (*.json)|*.json";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите путь к файлу панелей'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СохранитьНастройкиВладельцевПоказатьДиалогЗавершение",
		ЭтотОбъект,
		ДополнительныеПараметры);
		
	ДиалогОткрытияФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиВладельцевПоказатьДиалогЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры Тогда
		Содержимое = НастройкиВыбранныхВладельцевJSON();
	Иначе
		Содержимое = НастройкиПанелейJSON();
	КонецЕсли;
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Содержимое); 
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, АдресВоВременномХранилище, ВыбранныеФайлы[0]);
	
КонецПроцедуры

&НаСервере
Функция ТаблицуФормыВоВременноеХранилище(Знач Таблица)
	Возврат ПоместитьВоВременноеХранилище(Таблица.Выгрузить(), УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ОбновитьВыбранныхВладельцевИсточник(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьВыбранныхВладельцевИсточникСервер(Результат);
	РазвернутьПанельИсточник();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВыбранныхВладельцевИсточникСервер(Результат)
	
	Если ЭтоАдресВременногоХранилища(Результат) Тогда
		Таблица = ПолучитьИзВременногоХранилища(Результат); // ТаблицаЗначений -
		ТаблицаВладельцевИсточник.Загрузить(Таблица);
		
		ВыбранныеВладельцыИсточник.Очистить();
		Для Каждого Строка Из ТаблицаВладельцевИсточник Цикл
			Если Строка.Пометка Тогда
				ВыбранныеВладельцыИсточник.Добавить(Строка.Владелец);
			КонецЕсли;
		КонецЦикла;
		
		Если ВыбранныеВладельцыИсточник.Количество() Тогда
			ВладельцыПанелейИсточника = СтрСоединить(ВыбранныеВладельцыИсточник.ВыгрузитьЗначения(), ";")
		Иначе
			ВладельцыПанелейИсточника = "";
		КонецЕсли;
		
		ОбновитьДеревоПанелейИсточника();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыбранныхВладельцевПриемник(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьВыбранныхВладельцевПриемникСервер(Результат);
	РазвернутьПанельПриемник();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВыбранныхВладельцевПриемникСервер(Результат)
	
	Если ЭтоАдресВременногоХранилища(Результат) Тогда
		Таблица = ПолучитьИзВременногоХранилища(Результат); // ТаблицаЗначений -
		ТаблицаВладельцевПриемник.Загрузить(Таблица);
		
		ВыбранныеВладельцыПриемник.Очистить();
		Для Каждого Строка Из ТаблицаВладельцевПриемник Цикл
			Если Строка.Пометка Тогда
				ВыбранныеВладельцыПриемник.Добавить(Строка.Владелец);
			КонецЕсли;
		КонецЦикла;
		
		Если ВыбранныеВладельцыПриемник.Количество() Тогда
			ВладельцыПанелейПриемника = СтрСоединить(ВыбранныеВладельцыПриемник.ВыгрузитьЗначения(), ";");
		Иначе
			ВладельцыПанелейПриемника = "";
		КонецЕсли;
		
		ОбновитьДеревоПанелейПриемника();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВладельцыПанелейИсточникаОчисткаСервер()
	
	ВыбранныеВладельцыИсточник.Очистить();
	Для Каждого Строка Из ТаблицаВладельцевИсточник Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;

	ОбновитьДеревоПанелейИсточника();
КонецПроцедуры

&НаСервере
Процедура ВладельцыПанелейПриемникаОчисткаСервер()
	
	ВыбранныеВладельцыПриемник.Очистить();
	Для Каждого Строка Из ТаблицаВладельцевПриемник Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;
		
	ОбновитьДеревоПанелейПриемника();
	
КонецПроцедуры

&НаСервере
Функция МожноУдалить(ИдентификаторСтроки)
	
	МожноУдалить = Истина;
	
	Дерево = РеквизитФормыВЗначение("ПанелиПриемник");
	СтрокаДерева = Дерево.Строки.Найти(ИдентификаторСтроки, "ИдентификаторСтроки", Истина); //СтрокаДереваЗначений
	
	Панель = Обработки.УправлениеПанелями1САналитики.НайтиПоИдентификатору(Панели, СтрокаДерева.ВладелецПанели, "Owner");

	Если СтрокаДерева.ЭтоСсылка И СтрокаДерева.Родитель.Идентификатор <> Панель.Data_RootFolderId Тогда
		МожноУдалить = Ложь;
	КонецЕсли;
			
	Возврат МожноУдалить;
	
КонецФункции

#КонецОбласти

#КонецОбласти