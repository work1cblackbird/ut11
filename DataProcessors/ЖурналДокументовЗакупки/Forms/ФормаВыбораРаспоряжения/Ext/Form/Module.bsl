
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОтборСписка = Параметры.Отбор;
	Регистратор = Параметры.Регистратор;
	Склад       = Параметры.Склад;
	ДокументыОснования = Параметры.ДокументыОснования;
	МножественныйВыбор = Параметры.МножественныйВыбор;
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Элементы.СписокРаспоряженийВыбран.Видимость = МножественныйВыбор;
	
	Для каждого ЭлементТаблицы из Элементы.СписокРаспоряжений.ПодчиненныеЭлементы цикл
		ЭлементТаблицы.ТолькоПросмотр = Истина;
	КонецЦикла;
	
	Элементы.СписокРаспоряженийВыбран.ТолькоПросмотр = Не МножественныйВыбор;
	
	Элементы.ПоказатьВсе.Видимость = НЕ Параметры.СкрыватьДопОтборы;
	
	ЗаполнитьСписокРаспоряжений();
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьВсеПриИзменении(Элемент)
	
	ЗаполнитьСписокРаспоряжений()
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если МножественныйВыбор Тогда
		ПеренестиВДокумент = Истина;
		Закрыть(КодВозвратаДиалога.Да);
	ИначеЕсли ОбщегоНазначенияУТКлиент.ПроверитьНаличиеВыделенныхВСпискеСтрок(Элементы.СписокРаспоряжений) Тогда
		Закрыть(Новый Структура("ЗаказПоставщику, ПорядокРасчетов", 
			                Элементы.СписокРаспоряжений.ТекущиеДанные.Ссылка,
			                Элементы.СписокРаспоряжений.ТекущиеДанные.ПорядокРасчетов));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Не МножественныйВыбор Тогда
		Закрыть(Новый Структура("ЗаказПоставщику, ПорядокРасчетов", 
			                Элементы.СписокРаспоряжений.ТекущиеДанные.Ссылка,
			                Элементы.СписокРаспоряжений.ТекущиеДанные.ПорядокРасчетов));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЗакрытьФорму Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И НЕ ПеренестиВДокумент Тогда
		
		ЕстьИзменения = Ложь;
		
		ВыбранныеСтроки = СписокРаспоряжений.НайтиСтроки(Новый Структура("Выбран", Истина));
		Если ВыбранныеСтроки.Количество() <> ДокументыОснования.Количество() Тогда
			ЕстьИзменения = Истина;
		ИначеЕсли ВыбранныеСтроки.Количество() = 0 ИЛИ ДокументыОснования.Количество() = 0 Тогда
			
			ЕстьИзменения = Истина;
			
		Иначе
			Для Каждого ВыбраннаяСтрока Из ВыбранныеСтроки Цикл
				Если ДокументыОснования.НайтиПоЗначению(ВыбраннаяСтрока.Ссылка) = Неопределено Тогда
					ЕстьИзменения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если ЕстьИзменения Тогда
			ТекстВопроса = НСтр("ru = 'Состав документов-оснований был изменен. Принять изменения?'");
			ОбработчикОповещения = Новый ОписаниеОповещения("ВопросОПринятииИзмененийПриОтвете", ЭтаФорма);
			ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
			Отказ = Истина;
		КонецЕсли;
		
	ИначеЕсли ПеренестиВДокумент  Тогда
		
		ПеренестиВДокумент();
		Отказ = Истина;
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокРаспоряжений()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОснованияДокумента.ДокументОснование
	|ПОМЕСТИТЬ ВыбранныеДокументы
	|ИЗ
	|	&ОснованияДокумента КАК ОснованияДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаЗаказы.ЗаказПоставщику КАК ЗаказПоставщику,
	|	СУММА(ТаблицаЗаказы.КОформлению) КАК КОформлению
	|ПОМЕСТИТЬ
	|	ВтТаблицаЗаказы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|		ЗаказыОстатки.КОформлениюОстаток КАК КОформлению
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				,
	|				ВЫБОР
	|					КОГДА &ИспользоватьОтборы
	|						ТОГДА ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Организация = &Организация
	|							И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Контрагент = &Контрагент
	|							И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Договор = &Договор
	|							И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ВариантПриемкиТоваров = &ВариантПриемкиТоваров
	|							И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Партнер = &Партнер
	|							И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Соглашение = &Соглашение
	|							И (ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ЦенаВключаетНДС = &ЦенаВключаетНДС ИЛИ &ЦенаВключаетНДС = НЕОПРЕДЕЛЕНО)
	|							И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ВернутьМногооборотнуюТару = &ВернутьМногооборотнуюТару
	|							И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ТребуетсяЗалогЗаТару = &ТребуетсяЗалогЗаТару
	|							И ((ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Валюта = &Валюта
	|								И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).НалогообложениеНДС = &НалогообложениеНДС
	|								И (ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).НаправлениеДеятельности В (&НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|									ИЛИ &БезОтбораПоНаправлениямДеятельности)
	|								) ИЛИ ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи))
	|							И (НЕ &ПроверятьГФУПодразделение
	|								ИЛИ (ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ГруппаФинансовогоУчета В (&ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|									И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Подразделение В (&Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))))
	|							И (Склад = &Склад
	|								ИЛИ Склад В ИЕРАРХИИ (&Склад)
	|								ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|							И ВЫБОР КОГДА &ИспользоватьОтборОперацииССамозанятым
	|								ТОГДА ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ОперацияССамозанятым = &ОперацияССамозанятым
	|								ИНАЧЕ ИСТИНА
	|							КОНЕЦ)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ЗаказыОстатки
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|		ВЫБРАТЬ
	|			ЗаказыДвижения.ЗаказПоставщику,
	|			ВЫБОР
	|				КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА -ЗаказыДвижения.КОформлению
	|				ИНАЧЕ ЗаказыДвижения.КОформлению
	|			КОНЕЦ
	|		ИЗ
	|			РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыДвижения
	|		ГДЕ
	|			ЗаказыДвижения.Регистратор = &Регистратор
	|			И ВЫБОР
	|					КОГДА &ИспользоватьОтборы
	|						ТОГДА ЗаказыДвижения.Активность
	|							И ЗаказыДвижения.ЗаказПоставщику.Организация = &Организация
	|							И ЗаказыДвижения.ЗаказПоставщику.Контрагент = &Контрагент
	|							И ЗаказыДвижения.ЗаказПоставщику.Договор = &Договор
	|							И ЗаказыДвижения.ЗаказПоставщику.ВариантПриемкиТоваров = &ВариантПриемкиТоваров
	|							И ЗаказыДвижения.ЗаказПоставщику.Партнер = &Партнер
	|							И ЗаказыДвижения.ЗаказПоставщику.Соглашение = &Соглашение
	|							И (ЗаказыДвижения.ЗаказПоставщику.ЦенаВключаетНДС = &ЦенаВключаетНДС ИЛИ &ЦенаВключаетНДС = НЕОПРЕДЕЛЕНО)
	|							И ЗаказыДвижения.ЗаказПоставщику.ВернутьМногооборотнуюТару = &ВернутьМногооборотнуюТару
	|							И ЗаказыДвижения.ЗаказПоставщику.ТребуетсяЗалогЗаТару = &ТребуетсяЗалогЗаТару
	|							И ((ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Валюта = &Валюта
	|								И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).НалогообложениеНДС = &НалогообложениеНДС
	|								И (ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).НаправлениеДеятельности В (&НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|									ИЛИ &БезОтбораПоНаправлениямДеятельности)
	|								) ИЛИ ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи))
	|							И (НЕ &ПроверятьГФУПодразделение
	|								ИЛИ (ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ГруппаФинансовогоУчета В (&ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|									И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Подразделение В (&Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))))
	|							И (ЗаказыДвижения.Склад = &Склад
	|								ИЛИ ЗаказыДвижения.Склад В ИЕРАРХИИ (&Склад)
	|								ИЛИ ЗаказыДвижения.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|							И ВЫБОР КОГДА &ИспользоватьОтборОперацииССамозанятым
	|								ТОГДА ЗаказыДвижения.ЗаказПоставщику.ОперацияССамозанятым = &ОперацияССамозанятым
	|								ИНАЧЕ ИСТИНА
	|							КОНЕЦ)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ТаблицаЗаказы
	|ГДЕ
	|	ТаблицаЗаказы.КОформлению > 0
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказы.ЗаказПоставщику
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаказПоставщику
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПоставщикам.Ссылка КАК Ссылка,
	|	ТИПЗНАЧЕНИЯ(ЗаказыПоставщикам.Ссылка) КАК ТипРаспоряжения,
	|	ЗаказыПоставщикам.Дата КАК Дата,
	|	ЗаказыПоставщикам.Номер КАК Номер,
	|	ЗаказыПоставщикам.Партнер КАК Партнер,
	|	ЗаказыПоставщикам.Контрагент КАК Контрагент,
	|	ЗаказыПоставщикам.Договор КАК Договор,
	|	ЗаказыПоставщикам.Соглашение КАК Соглашение,
	|	ЗаказыПоставщикам.Организация КАК Организация,
	|	ЗаказыПоставщикам.Склад КАК Склад,
	|	ЗаказыПоставщикам.Валюта КАК Валюта,
	|	ЗаказыПоставщикам.Менеджер КАК Менеджер,
	|	ЗаказыПоставщикам.Статус КАК Статус,
	|	ЗаказыПоставщикам.СуммаДокумента КАК СуммаДокумента,
	|	ЗаказыПоставщикам.Приоритет КАК Приоритет,
	|	ЗаказыПоставщикам.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗаказыПоставщикам.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЗаказыПоставщикам.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЗаказыПоставщикам.ПорядокРасчетов КАК ПорядокРасчетов,
	|	ЗаказыПоставщикам.Комментарий КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ЗаказыПоставщикам.Приоритет В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					Приоритеты.Ссылка КАК Приоритет
	|				ИЗ
	|					Справочник.Приоритеты КАК Приоритеты
	|				УПОРЯДОЧИТЬ ПО
	|					Приоритеты.РеквизитДопУпорядочивания)
	|			ТОГДА 0
	|		КОГДА ЗаказыПоставщикам.Приоритет В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					Приоритеты.Ссылка КАК Приоритет
	|				ИЗ
	|					Справочник.Приоритеты КАК Приоритеты
	|				УПОРЯДОЧИТЬ ПО
	|					Приоритеты.РеквизитДопУпорядочивания УБЫВ)
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КартинкаПриоритета,
	|	ВЫБОР
	|		КОГДА ВыбранныеДокументы.ДокументОснование ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Выбран
	|
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказыПоставщикам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаказы КАК ТаблицаЗаказы
	|		ПО ЗаказыПоставщикам.Ссылка = ТаблицаЗаказы.ЗаказПоставщику
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВыбранныеДокументы КАК ВыбранныеДокументы
	|	ПО ЗаказыПоставщикам.Ссылка = ВыбранныеДокументы.ДокументОснование
	|
	|ГДЕ 
	|	ЕСТЬNULL(ТаблицаЗаказы.КОформлению,0) > 0
	|	И &УсловиеХозяйственнойОперации
	|";
	
	
	ХозяйственнаяОперация = Неопределено;
	
	Если ОтборСписка.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация) Тогда
		
		Условие = "ЗаказыПоставщикам.ХозяйственнаяОперация В (&СписокХозяйственныхОпераций)";
		
		Если ЗначениеЗаполнено(ХозяйственнаяОперация) Тогда
			
			Запрос.УстановитьПараметр("СписокХозяйственныхОпераций", ОтборСписка.ХозяйственнаяОперация);
			
		Иначе
			
			СписокОпераций = Новый СписокЗначений;
			СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
			
			Условие = "НЕ"+ " " + Условие;
			Запрос.УстановитьПараметр("СписокХозяйственныхОпераций", СписокОпераций);
			
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеХозяйственнойОперации", Условие);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеХозяйственнойОперации" , "ИСТИНА");
	КонецЕсли;
	
	ИспользоватьОтборы = НЕ ПоказатьВсе;
	Запрос.УстановитьПараметр("ИспользоватьОтборы", ИспользоватьОтборы);
	
	ХозяйственнаяОперацияДокумента = Неопределено;
	ОтборСписка.Свойство("ХозяйственнаяОперацияДокумента", ХозяйственнаяОперацияДокумента);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияДокумента", ХозяйственнаяОперацияДокумента);
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи Тогда
		Запрос.УстановитьПараметр("Валюта",						Неопределено);
		Запрос.УстановитьПараметр("НалогообложениеНДС",			Неопределено);
		Запрос.УстановитьПараметр("НаправлениеДеятельности",	Неопределено);
		Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",		Неопределено);
		Запрос.УстановитьПараметр("ПроверятьГФУПодразделение",	ЛОЖЬ);
		Запрос.УстановитьПараметр("БезОтбораПоНаправлениямДеятельности", Ложь);
	Иначе
		Запрос.УстановитьПараметр("Валюта",						ОтборСписка.Валюта);
		Запрос.УстановитьПараметр("НалогообложениеНДС",			ОтборСписка.НалогообложениеНДС);
		Запрос.УстановитьПараметр("НаправлениеДеятельности",	ОтборСписка.НаправлениеДеятельности);
		Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",		ОтборСписка.ГруппаФинансовогоУчета);
		Запрос.УстановитьПараметр("ПроверятьГФУПодразделение",	ОтборСписка.ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказам
			И ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет"));
	
		Если ОтборСписка.ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказам 
			И ОтборСписка.НаправлениеДеятельности = Справочники.НаправленияДеятельности.ПустаяСсылка() Тогда
			Запрос.УстановитьПараметр("БезОтбораПоНаправлениямДеятельности", Истина);
		Иначе
			Запрос.УстановитьПараметр("БезОтбораПоНаправлениямДеятельности", Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация",				ОтборСписка.Организация);
	Запрос.УстановитьПараметр("Контрагент",					ОтборСписка.Контрагент);
	Запрос.УстановитьПараметр("Партнер",					ОтборСписка.Партнер);
	Запрос.УстановитьПараметр("Соглашение",					ОтборСписка.Соглашение);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",			ОтборСписка.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару",	ОтборСписка.ВернутьМногооборотнуюТару);
	Запрос.УстановитьПараметр("ТребуетсяЗалогЗаТару",		ОтборСписка.ТребуетсяЗалогЗаТару);
	Запрос.УстановитьПараметр("Договор",					ОтборСписка.Договор);
	Запрос.УстановитьПараметр("ВариантПриемкиТоваров",		ОтборСписка.ВариантПриемкиТоваров);
	Запрос.УстановитьПараметр("Подразделение",				ОтборСписка.Подразделение);
	
	ТаблицаОснованийДокумента = Новый ТаблицаЗначений();
	ТаблицаОснованийДокумента.Колонки.Добавить("ДокументОснование", 
		Новый ОписаниеТипов("ДокументСсылка.ЗаказПоставщику
		|"));
	
	Для Каждого ЭлементСписка Из ДокументыОснования Цикл
		НоваяСтрока = ТаблицаОснованийДокумента.Добавить();
		НоваяСтрока.ДокументОснование = ЭлементСписка.Значение;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ОснованияДокумента", ТаблицаОснованийДокумента);
	
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	ОперацияССамозанятым = Неопределено;
	ОтборСписка.Свойство("ОперацияССамозанятым", ОперацияССамозанятым);
	Запрос.УстановитьПараметр("ИспользоватьОтборОперацииССамозанятым", 
		?(ОперацияССамозанятым = Неопределено, Ложь, Истина));
	Запрос.УстановитьПараметр("ОперацияССамозанятым", ОперацияССамозанятым);
	
	Результат = Запрос.Выполнить();
	СписокРаспоряжений.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОПринятииИзмененийПриОтвете(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент()
	
	МассивВыбранныхДокументов = Новый Массив;
	ВыбранныеСтроки = СписокРаспоряжений.НайтиСтроки(Новый Структура("Выбран", Истина));
	Для Каждого ВыбраннаяСтрока Из ВыбранныеСтроки Цикл
		МассивВыбранныхДокументов.Добавить(ВыбраннаяСтрока.Ссылка);
	КонецЦикла;
	
	ЗакрытьФорму = Истина;
	ОповеститьОВыборе(МассивВыбранныхДокументов);
	
КонецПроцедуры

#КонецОбласти