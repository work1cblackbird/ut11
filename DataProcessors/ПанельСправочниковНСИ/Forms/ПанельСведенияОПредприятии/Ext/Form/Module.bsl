
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	УправлениеЭлементами();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		// Изменены настройки программы в панелях администрирования
		УправлениеЭлементами();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбщиеСправочники

&НаКлиенте
Процедура ОткрытьКассуККМ(Команда)
	
	ОткрытьФорму("Справочник.КассыККМ.ФормаОбъекта", Новый Структура("Ключ", КассаККМ()));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСклад(Команда)
	
	ОткрытьФорму("Справочник.Склады.ФормаОбъекта", Новый Структура("Ключ", Склад()));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОрганизацию(Команда)
	
	ОткрытьФорму("Справочник.Организации.ФормаОбъекта", Новый Структура("Ключ", Организация()));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСвойствоБанковскийСчет(Команда)
		
	ОткрытьФорму("Справочник.БанковскиеСчетаОрганизаций.ФормаОбъекта",
		Новый Структура("Ключ", ПолучитьПервыйБанковскийСчетОрганизацииНаСервере()),
		ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСвойствоКасса(Команда)
	
	ОткрытьФорму("Справочник.Кассы.ФормаОбъекта",
		Новый Структура("Ключ", ПолучитьПервуюКассуНаСервере()),
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВалюту(Команда)
	
	ВалютаУправленческогоУчета = Валюта();
	Если Не ЗначениеЗаполнено(ВалютаУправленческогоУчета) Тогда
		ВызватьИсключение НСтр("ru = 'Для продолжения необходимо заполнить константу ""Валюта управленческого учета"".
		|Для настройки необходимо перейти в раздел ""НСИ и администрирование""-""Предприятие""-""Валюты"".'");
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Валюты.ФормаОбъекта", Новый Структура("Ключ", ВалютаУправленческогоУчета));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеЭлементами()

	// Функциональные опции
	ИспользоватьНесколькоОрганизаций     = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	ИспользоватьНесколькоВалют           = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	ИспользоватьНесколькоСкладов         = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов");
	ИспользоватьНесколькоКассККМ         = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКассККМ");
	ИспользоватьНесколькоКасс            = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКасс");
	ИспользоватьНесколькоРасчетныхСчетов = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоРасчетныхСчетов");
	ИспользоватьРозничныеПродажи         = ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи");

	// Право чтения
	ПравоДоступаОрганизации = ПравоДоступа("Просмотр", Метаданные.Справочники.Организации);
	ПравоДоступаВалюты      = ПравоДоступа("Просмотр", Метаданные.Справочники.Валюты);
	ПравоДоступаСклады      = ПравоДоступа("Просмотр", Метаданные.Справочники.Склады);
	ПравоДоступаКассыККМ    = ПравоДоступа("Просмотр", Метаданные.Справочники.КассыККМ);
	
	//БанковскийСчетИКасса
	Элементы.ГруппаНастроекБанковскиеСчета.Видимость = НЕ ИспользоватьНесколькоРасчетныхСчетов;
	Элементы.ГруппаНастроекКассы.Видимость           = НЕ ИспользоватьНесколькоКасс;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"СведенияОбОрганизации", "Видимость", Не ИспользоватьНесколькоОрганизаций И ПравоДоступаОрганизации);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаВалюты", "Видимость", Не ИспользоватьНесколькоВалют И ПравоДоступаВалюты);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаНастройкаСкладскогоУчета", "Видимость", Не ИспользоватьНесколькоСкладов И ПравоДоступаСклады);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаНастройкаКассыККМ", "Видимость", Не ИспользоватьНесколькоКассККМ И ПравоДоступаКассыККМ И ИспользоватьРозничныеПродажи);
	
	ЕстьДанныеДляОтображения = Элементы.ГруппаОрганизации.Видимость
		ИЛИ Элементы.ГруппаНастроекБанковскиеСчета.Видимость
		ИЛИ Элементы.ГруппаНастроекКассы.Видимость
		ИЛИ Элементы.ГруппаВалюты.Видимость
		ИЛИ Элементы.ГруппаНастройкаСкладскогоУчета.Видимость
		ИЛИ Элементы.ГруппаНастройкаКассыККМ.Видимость;
		
	Если ЕстьДанныеДляОтображения Тогда
		Элементы.ГруппаНеУстановленыНеобходимыеНастройки.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#Область Прочее

&НаСервереБезКонтекста
Функция Склад()
	Возврат Справочники.Склады.СкладПоУмолчанию();
КонецФункции

&НаСервереБезКонтекста
Функция Валюта()
	Возврат ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета();
КонецФункции

&НаСервереБезКонтекста
Функция Организация()
	Возврат Справочники.Организации.ПолучитьОрганизациюПоУмолчанию();
КонецФункции

&НаСервереБезКонтекста
Функция КассаККМ()
	Возврат Справочники.КассыККМ.КассаККМПоУмолчанию();
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПервуюКассуНаСервере()
	
	Возврат ЗначениеНастроекПовтИсп.ПолучитьКассуОрганизацииПоУмолчанию()
	
КонецФункции // ПолучитьПервуюКассуНаСервере()

&НаСервереБезКонтекста
Функция ПолучитьПервыйБанковскийСчетОрганизацииНаСервере()

	Возврат ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию();

КонецФункции // ПолучитьПервыйБанковскийСчетОрганизацииНаСервере()

#КонецОбласти

#КонецОбласти
