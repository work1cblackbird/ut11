#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДанныеУчетныхЗаписей = Неопределено;
	Если Не Параметры.Свойство("ДанныеУчетныхЗаписей", ДанныеУчетныхЗаписей) Тогда
		ДанныеУчетныхЗаписей = ИнтерфейсДокументовЭДО.ДанныеОтбораНастройкиОтправкиПолучения();
	КонецЕсли;
	ЗаполнитьДеревоНастроек(ДанныеУчетныхЗаписей);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройки

&НаКлиенте
Процедура НастройкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.НастройкиОрганизация Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура НастройкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент = Элементы.НастройкиОрганизация Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПодчиненныеСтроки = Элемент.ТекущиеДанные.ПолучитьЭлементы();
	ТекущийРодитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
	Если Элемент.ТекущийЭлемент = Элементы.НастройкиВыполнятьОбмен Тогда
		Если Элемент.ТекущиеДанные.ВыполнятьОбмен = ВариантыВыполненияОбмена().ПоПодчиненным Тогда

			Элемент.ТекущиеДанные.ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять;
		КонецЕсли;
		Если ТекущийРодитель <> Неопределено Тогда
			ТекущийРодитель.ВыполнятьОбмен = ВариантыВыполненияОбмена().ПоПодчиненным;
			ПодчиненныеСтрокиРодителя = ТекущийРодитель.ПолучитьЭлементы();
			ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять;
			Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтрокиРодителя Цикл
				ВыполнятьОбмен = ВыполнятьОбмен + ПодчиненнаяСтрока.ВыполнятьОбмен;
			КонецЦикла;
			Если ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять Тогда
				ТекущийРодитель.ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять;
			ИначеЕсли ВыполнятьОбмен = ПодчиненныеСтрокиРодителя.Количество() Тогда
				ТекущийРодитель.ВыполнятьОбмен = ВариантыВыполненияОбмена().Выполнять;
			КонецЕсли;
		КонецЕсли;
		Если ПодчиненныеСтроки.Количество() > 1 Тогда
			Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
				ЗаполнитьЗначенияСвойств(ПодчиненнаяСтрока, Элемент.ТекущиеДанные, "ВыполнятьОбмен");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СнятьФлажки(Команда)
	ОбработатьФлажкиДереваНастроек(Настройки.ПолучитьЭлементы(), Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	ПараметрыЗакрытия = ПрочитатьНастройки();
	ЗаписатьСохраненыеНастройки(ПараметрыЗакрытия);
	Закрыть(ПараметрыЗакрытия);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ОбработатьФлажкиДереваНастроек(Настройки.ПолучитьЭлементы(), Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПолучить(Команда)
	ПараметрыЗакрытия = ПрочитатьНастройки();
	ЗаписатьСохраненыеНастройки(ПараметрыЗакрытия);
	Если ПараметрыЗакрытия.УчетныеЗаписиОбмена.Количество() = 0 Тогда
		ПараметрыЗакрытия = Неопределено;
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВариантыВыполненияОбмена()
	Возврат Новый Структура("НеВыполнять, Выполнять, ПоПодчиненным", 0, 1, 2);
КонецФункции

&НаСервере
Функция ПрочитатьСохраненыеНастройки(ДанныеПоУмолчанию)
	Возврат ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяФормы, "Отборы", ДанныеПоУмолчанию);
КонецФункции

&НаСервере
Процедура ЗаписатьСохраненыеНастройки(ПараметрыЗакрытия)
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяФормы, "Отборы", ПараметрыЗакрытия);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоНастроек(ДанныеУчетныхЗаписей)
	
	ДеревоНастроек = РеквизитФормыВЗначение("Настройки");
	ДеревоНастроек.Строки.Очистить();
	Сертификаты.Очистить();

	Для Каждого ДанныеОрганизации Из ДанныеУчетныхЗаписей Цикл
		НастройкаОрганизации = ДеревоНастроек.Строки.Добавить();
		НастройкаОрганизации.Организация = ДанныеОрганизации.Ключ;
		НастройкаОрганизации.ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять;
		Если ДанныеОрганизации.Значение.Количество() > 1 Тогда
			Для Каждого УчетнаяЗапись Из ДанныеОрганизации.Значение Цикл
				НастройкаИдентификаторЭДО = НастройкаОрганизации.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НастройкаИдентификаторЭДО, УчетнаяЗапись);
				НастройкаИдентификаторЭДО.Организация = УчетнаяЗапись.Наименование;
				НастройкаИдентификаторЭДО.УчетнаяЗапись = УчетнаяЗапись.ИдентификаторЭДО;
				НастройкаИдентификаторЭДО.ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять;
				Для Каждого Сертификат Из УчетнаяЗапись.Сертификаты Цикл
					СтрокаСертификата = Сертификаты.Добавить();
					СтрокаСертификата.Организация = УчетнаяЗапись.ИдентификаторЭДО;
					СтрокаСертификата.Сертификат = Сертификат.Сертификат;
					СтрокаСертификата.Отпечаток = Сертификат.Отпечаток;
				КонецЦикла;
			КонецЦикла;
		Иначе
			НастройкаОрганизации.УчетнаяЗапись = ДанныеОрганизации.Значение[0].ИдентификаторЭДО;
			Для Каждого Сертификат Из ДанныеОрганизации.Значение[0].Сертификаты Цикл
				СтрокаСертификата = Сертификаты.Добавить();
				СтрокаСертификата.Организация = НастройкаОрганизации.УчетнаяЗапись;
				СтрокаСертификата.Сертификат = Сертификат.Сертификат;
				СтрокаСертификата.Отпечаток = Сертификат.Отпечаток;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДеревоНастроек, "Настройки");
	ДанныеПоУмолчанию = ПрочитатьНастройки();
	СохраненныеНастройки = ПрочитатьСохраненыеНастройки(ДанныеПоУмолчанию);
	
	УчетныеЗаписиОбмена = СохраненныеНастройки.УчетныеЗаписиОбмена;

	Для Каждого СтрокаДерева Из Настройки.ПолучитьЭлементы() Цикл 
		ОтборСтрок = Новый Структура("Организация", СтрокаДерева.Организация);
		Если СтрокаДерева.ПолучитьЭлементы().Количество() = 0 Тогда
			Если УчетныеЗаписиОбмена.Найти(СтрокаДерева.УчетнаяЗапись) = Неопределено Тогда
				СтрокаДерева.ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять;
			Иначе
				СтрокаДерева.ВыполнятьОбмен = ВариантыВыполненияОбмена().Выполнять;
			КонецЕсли;
		Иначе
			ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять;
			Для Каждого СтрокаУчетнойЗаписи Из СтрокаДерева.ПолучитьЭлементы() Цикл
				Если УчетныеЗаписиОбмена.Найти(СтрокаУчетнойЗаписи.УчетнаяЗапись) = Неопределено Тогда
					СтрокаУчетнойЗаписи.ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять;
				Иначе
					СтрокаУчетнойЗаписи.ВыполнятьОбмен = ВариантыВыполненияОбмена().Выполнять;
				КонецЕсли;
				ВыполнятьОбмен = ВыполнятьОбмен + СтрокаУчетнойЗаписи.ВыполнятьОбмен;
				ОтборСтрок.Вставить("Организация", СтрокаУчетнойЗаписи.Организация);
			КонецЦикла;
			Если ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять Тогда
				СтрокаДерева.ВыполнятьОбмен = ВариантыВыполненияОбмена().НеВыполнять;
			ИначеЕсли СтрокаДерева.ПолучитьЭлементы().Количество() = ВыполнятьОбмен Тогда
				СтрокаДерева.ВыполнятьОбмен = ВариантыВыполненияОбмена().Выполнять;
			Иначе
				СтрокаДерева.ВыполнятьОбмен = ВариантыВыполненияОбмена().ПоПодчиненным;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФлажкиДереваНастроек(ВыбранныеЭлементы, Флажок)
	Для Каждого СтрокаДерева Из ВыбранныеЭлементы Цикл
		СтрокаДерева.ВыполнятьОбмен  = Флажок;
		Подчиненные = СтрокаДерева.ПолучитьЭлементы();
		Если Подчиненные.Количество() <> 0 Тогда
			ОбработатьФлажкиДереваНастроек(Подчиненные, Флажок);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПрочитатьНастройки()
	ПараметрыНастройки = Новый Структура;
	РезультатПолученияОтпечатков = КриптографияБЭДКлиентСервер.НовыйРезультатПолученияОтпечатков();
	РезультатПолученияОтпечатков.Доступность = Истина;

	УчетныеЗаписиОбмена = Новый Массив;
	Для Каждого СтрокаОрганизации Из Настройки.ПолучитьЭлементы() Цикл
		УчетныеЗаписи = СтрокаОрганизации.ПолучитьЭлементы();
		Если УчетныеЗаписи.Количество() = 0 Тогда
			Если СтрокаОрганизации.ВыполнятьОбмен = ВариантыВыполненияОбмена().Выполнять Тогда
				УчетныеЗаписиОбмена.Добавить(СтрокаОрганизации.УчетнаяЗапись);
				ОтборСтрок = Новый Структура("Организация", СтрокаОрганизации.УчетнаяЗапись);
				СертификатыОрганизации = Сертификаты.НайтиСтроки(ОтборСтрок);
				Для Каждого СтрокаСертификата Из СертификатыОрганизации Цикл
					РезультатПолученияОтпечатков.Отпечатки.Добавить(СтрокаСертификата.Отпечаток);
				КонецЦикла;
			КонецЕсли;
		Иначе
			Для Каждого СтрокаУчетнойЗаписи Из УчетныеЗаписи Цикл
				Если СтрокаУчетнойЗаписи.ВыполнятьОбмен = ВариантыВыполненияОбмена().Выполнять Тогда
					УчетныеЗаписиОбмена.Добавить(СтрокаУчетнойЗаписи.УчетнаяЗапись);
					ОтборСтрок = Новый Структура("Организация", СтрокаУчетнойЗаписи.УчетнаяЗапись);
					СертификатыОрганизации = Сертификаты.НайтиСтроки(ОтборСтрок);
					Для Каждого СтрокаСертификата Из СертификатыОрганизации Цикл
						РезультатПолученияОтпечатков.Отпечатки.Добавить(СтрокаСертификата.Отпечаток);
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыНастройки = Новый Структура("РезультатПолученияОтпечатков,УчетныеЗаписиОбмена",
		РезультатПолученияОтпечатков, УчетныеЗаписиОбмена);
	Возврат ПараметрыНастройки;
КонецФункции

#КонецОбласти