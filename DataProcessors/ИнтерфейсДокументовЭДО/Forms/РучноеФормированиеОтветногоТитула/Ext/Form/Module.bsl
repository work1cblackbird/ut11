#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОшибкиПриФормированииДокументов = ПолучитьИзВременногоХранилища(Параметры.АдресСведенийОбОшибках);
	ЭлектронныйДокумент = ОшибкиПриФормированииДокументов[0].ОшибкаФормированияВПрикладнойЧасти.ЭлектронныйДокумент;
	Покупатель = ЭлектронныйДокумент.Организация;
	СоставительДокумента = Покупатель;
	СоставительДокументаНаименование = СоставительДокументаНаименование(СоставительДокумента);
	Элементы.СоставительДокументаДоверенность.Видимость = Ложь;
	Элементы.ГруппаОснованиеСоставителя.Видимость = Ложь;
	
	Данные = ОбменСКонтрагентами.ДанныеЭлектронногоДокумента(ЭлектронныйДокумент);
	ДеревоДанных = Данные.ДанныеОтправителя.Содержание;
	ФорматОтвета = ФорматыЭДО.ФорматОтветногоТитула(Данные.ДанныеОтправителя.Формат);
	Форматы = ЭлектронныеДокументыЭДО.ПоддерживаемыеФорматы();
	ЭтоУПД = ФорматОтвета = Форматы.ФНС.УПД2019.ИнформацияПокупателя;
	ЭтоУПД_5_02 = ФорматОтвета = Форматы.ФНС.УПД_5_02.ИнформацияПокупателя;
	ЭтоДополнительныеСведения = ФорматОтвета = Форматы.ФНС.АКтОРасхождениях.ДополнительныеСведения;
	
	Если ЭтоУПД Или ЭтоУПД_5_02 Тогда
		
		Элементы.ГруппаУПД2019.Видимость = Истина;
		Элементы.ГруппаУКД2020.Видимость = Ложь;
		Элементы.ГруппаДокументОРасхождениях.Видимость = Ложь;
		Элементы.ГруппаДополнительныеСведения.Видимость = Ложь;
		
		ПутьТовары = "СведенияОТоварах";
		ПутьНомерГосКонтракта = "ДополнительныеСведенияОбУчастниках.ЗакупкаДляГосударственныхНужд.НомерГосКонтракта";
		ПутьИдентификаторГосКонтракта = "ДополнительныеСведенияОбУчастниках.ИдентификаторГосКонтракта";
		Если ФорматОтвета = Форматы.ФНС.УПД_5_02.ИнформацияПокупателя Тогда
			ПутьТовары = "ТаблицаСчетаФактуры.СведенияОбОтгруженныхПозициях";
			ПутьНомерГосКонтракта =
				"СведенияОСчетеФактуре.ДополнительныеСведенияОбУчастниках.СведенияОГосКонтракте.НомерКонтракта";
			ПутьИдентификаторГосКонтракта =
				"СведенияОСчетеФактуре.ДополнительныеСведенияОбУчастниках.ИдентификаторГосКонтракта";	
		КонецЕсли;
		
		ТаблицаТоваровЭД = ЭлектронноеВзаимодействие.ДанныеЭлементаДереваЭлектронногоДокумента(
			ДеревоДанных, ПутьТовары);
		
		Для каждого Строка Из ТаблицаТоваровЭД Цикл
			СтрокаДенежныеОбязательства = ДенежныеОбязательства.Добавить();
			СтрокаДенежныеОбязательства.НомерСтрокиИнформацииПродавца = ТаблицаТоваровЭД.Индекс(Строка) + 1;	
		КонецЦикла;
		
		НомерГосКонтракта = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(
			ДеревоДанных, ПутьНомерГосКонтракта);
		ИдентификаторГосКонтракта = ЭлектронноеВзаимодействие.ЗначениеРеквизитаВДереве(
			ДеревоДанных, ПутьИдентификаторГосКонтракта);
		Если ЗначениеЗаполнено(НомерГосКонтракта) И ЗначениеЗаполнено(ИдентификаторГосКонтракта) Тогда
			ЗакупкаДляГосударственныхНужд = Истина;	
		КонецЕсли;
		
		Элементы.ГруппаЗакупкаДляГосударственныхНужд.Видимость = ЗакупкаДляГосударственныхНужд;
		Если ЭтоУПД_5_02 Тогда
			Элементы.ДокументОРасхожденияхВид.Видимость = Ложь;
		КонецЕсли;
		
		КодИтога = "1";
	
	ИначеЕсли ЭтоДополнительныеСведения Тогда
		
		Элементы.ГруппаУКД2020.Видимость = Ложь;
		Элементы.ГруппаУПД2019.Видимость = Ложь;
		Элементы.ГруппаДополнительныеСведения.Видимость = Истина;
		
		ФормированиеДополнительныхСведений = ЭлектронноеВзаимодействие.ДанныеЭлементаДереваЭлектронногоДокумента(
			ДеревоДанных, "ФормированиеДополнительныхСведений");			
		ПредставленияВариантов =
			ИнтерфейсДокументовЭДОКлиентСервер.ПредставленияВариантовФормированияДополнительныхСведенийАктаОРасхождениях();
		ВариантФормированияДополнительныхСведений = ПредставленияВариантов[ФормированиеДополнительныхСведений];
		
		Элементы.СодержаниеДополнительныхСведений.Подсказка = СтрШаблон("%1 '%2'",
			Элементы.СодержаниеДополнительныхСведений.Подсказка,
			ВариантФормированияДополнительныхСведений);
	
	Иначе
		
		Элементы.ГруппаУКД2020.Видимость = Истина;
		Элементы.ГруппаУПД2019.Видимость = Ложь;
		Элементы.ГруппаДополнительныеСведения.Видимость = Ложь;
		
		СодержаниеОперации_УКД = "С изменением стоимости согласен";	
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Элементы.ГруппаЗакупкаДляГосударственныхНужд.Видимость = Ложь;
	Элементы.ГруппаДокументОРасхождениях.Видимость = Ложь;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СоставительДокументаПриИзменении(Элемент)
	
	ЭлементОснования = Элементы.СоставительДокументаДоверенность;
	Если ЭтоУПД_5_02 Тогда
		ЭлементОснования = Элементы.ГруппаОснованиеСоставителя;
	КонецЕсли;	
	
	Если СоставительДокумента <> Покупатель Тогда
		ЭлементОснования.Видимость = Истина;	
	Иначе
		ЭлементОснования.Видимость = Ложь;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СоставительДокумента) Тогда
		СоставительДокументаНаименование = СоставительДокументаНаименование(СоставительДокумента);
	Иначе
		СоставительДокументаНаименование = "";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЕстьДокументОРасхожденияхПриИзменении(Элемент)
	
	ЕстьДокументОРасхожденияхПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЕстьДокументОРасхожденияхПриИзмененииНаСервере()
	
	Элементы.ГруппаДокументОРасхождениях.Видимость = ЕстьДокументОРасхождениях; 
	
	Если ЕстьДокументОРасхождениях Тогда
		КодИтога = "2";
		Элементы.ЕстьДокументОРасхождениях.ЦветТекстаЗаголовка = ЦветаСтиля.ЦветАкцента; 
	Иначе
		КодИтога = "1";
		Элементы.ЕстьДокументОРасхождениях.ЦветТекстаЗаголовка = ЦветаСтиля.ЦветТекстаФормы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодИтогаПриИзменении(Элемент)
	
	Если КодИтога = "2" Тогда
		ЕстьДокументОРасхождениях = Истина;
		Элементы.ГруппаДокументОРасхождениях.Видимость = ЕстьДокументОРасхождениях;
	Иначе
		ЕстьДокументОРасхождениях = Ложь;
		Элементы.ГруппаДокументОРасхождениях.Видимость = ЕстьДокументОРасхождениях;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодписатьИОтправить(Команда)
	Если ПроверкаЗаполнения() Тогда
		СтруктураОтвета = ИнтерфейсДокументовЭДОКлиентСервер.ДанныеРучногоФормированияТитула(ЭтотОбъект);
		ПодписатьИОтправитьДокумент(СтруктураОтвета);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СоставительДокументаНаименование(Знач СоставительДокумента)
	СведенияОПокупателе = ЭлектронноеВзаимодействие.СтруктураДанныхЮрФизЛица();
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьДанныеЮрФизЛица(СоставительДокумента, СведенияОПокупателе);
	НаименованиеСоставителяДокумента = СведенияОПокупателе.ПолноеНаименование + ?(ЗначениеЗаполнено(
		СведенияОПокупателе.КПП), СтрШаблон(НСтр("ru = ', ИНН/КПП %1/%2'"), СведенияОПокупателе.ИНН,
		СведенияОПокупателе.КПП), СтрШаблон(НСтр("ru = ', ИНН %1'"), СведенияОПокупателе.ИНН));
		
	Возврат НаименованиеСоставителяДокумента;
КонецФункции

&НаКлиенте
Функция ПроверкаЗаполнения()
	
	СписокОшибок.Очистить();
	
	Если ЭтоУПД Тогда		
		ПроверкаЗаполненияУПД2019();		
	ИначеЕсли ЭтоУПД_5_02 Тогда
		ПроверкаЗаполненияУПД_5_02();
	ИначеЕсли ЭтоДополнительныеСведения Тогда	
		ПроверкаЗаполненияДополнительныхСведений();
	Иначе
		ПроверкаЗаполненияУКД2020();
	КонецЕсли;
	
	Если СписокОшибок.Количество() > 0 Тогда
		Для Каждого Ошибка Из СписокОшибок Цикл
			ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.Значение, ,
			Ошибка.Представление);	
		КонецЦикла;
		
		Возврат Ложь;
	Иначе
		Возврат Истина;	
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПроверкаЗаполненияУПД2019()
	
	Если Не ЗначениеЗаполнено(КодИтога) Тогда
			СписокОшибок.Добавить(Элементы.КодИтога.Заголовок 
				+ НСтр("ru = ': значение не заполнено'"), Элементы.КодИтога.Имя);	
	КонецЕсли;
	
	Если СоставительДокумента <> Покупатель Тогда
		Если Не ЗначениеЗаполнено(СоставительДокументаДоверенность) Тогда
			СписокОшибок.Добавить(Элементы.СоставительДокументаДоверенность.Заголовок 
				+ НСтр("ru = ': значение не заполнено'"), Элементы.СоставительДокументаДоверенность.Имя);	
		КонецЕсли;		
	КонецЕсли;
	
	Если ЗакупкаДляГосударственныхНужд Тогда
		ПроверкаЗаполненияГруппы(Элементы.ГруппаЗакупкаДляГосударственныхНужд);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЗаполненияУПД_5_02()
	
	Если Не ЗначениеЗаполнено(ДатаПолученияТоваров) Тогда
		СписокОшибок.Добавить(Элементы.ДатаПолученияТоваров.Заголовок 
			+ НСтр("ru = ': значение не заполнено'"), Элементы.ДатаПолученияТоваров.Имя);	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КодИтога) Тогда
		СписокОшибок.Добавить(Элементы.КодИтога.Заголовок 
			+ НСтр("ru = ': значение не заполнено'"), Элементы.КодИтога.Имя);	
	КонецЕсли;
	
	Если СоставительДокумента <> Покупатель Тогда
		Если Не ЗначениеЗаполнено(ОснованиеСоставителяНаименование) Тогда
			СписокОшибок.Добавить(Элементы.ОснованиеСоставителяНаименование.Заголовок 
				+ НСтр("ru = ': значение не заполнено'"), Элементы.ОснованиеСоставителяНаименование.Имя);	
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОснованиеСоставителяНомер) Тогда
			СписокОшибок.Добавить(Элементы.ОснованиеСоставителяНомер.Заголовок 
				+ НСтр("ru = ': значение не заполнено'"), Элементы.ОснованиеСоставителяНомер.Имя);	
		КонецЕсли;	
		Если Не ЗначениеЗаполнено(ОснованиеСоставителяДата) Тогда
			СписокОшибок.Добавить(Элементы.ОснованиеСоставителяДата.Заголовок 
				+ НСтр("ru = ': значение не заполнено'"), Элементы.ОснованиеСоставителяДата.Имя);	
		КонецЕсли;
	КонецЕсли;
	
	Если ЗакупкаДляГосударственныхНужд Тогда
		ПроверкаЗаполненияГруппы(Элементы.ГруппаЗакупкаДляГосударственныхНужд);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЗаполненияУКД2020()
	
	Если Не ЗначениеЗаполнено(ДатаСогласования) Тогда
			СписокОшибок.Добавить(Элементы.ДатаСогласования.Заголовок 
				+ НСтр("ru = ': значение не заполнено'"), Элементы.ДатаСогласования.Имя);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СодержаниеОперации_УКД) Тогда
		СписокОшибок.Добавить(Элементы.СодержаниеОперации_УКД.Заголовок 
			+ НСтр("ru = ': значение не заполнено'"), Элементы.СодержаниеОперации_УКД.Имя);
	КонецЕсли;
		
	Если СоставительДокумента <> Покупатель Тогда
		Если Не ЗначениеЗаполнено(СоставительДокументаДоверенность) Тогда
			СписокОшибок.Добавить(Элементы.СоставительДокументаДоверенность.Заголовок 
				+ НСтр("ru = ': значение не заполнено'"), Элементы.СоставительДокументаДоверенность.Имя);	
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЗаполненияДополнительныхСведений()
	
	Если Не ЗначениеЗаполнено(СодержаниеДополнительныхСведений) Тогда
		СписокОшибок.Добавить(Элементы.СодержаниеДополнительныхСведений.Заголовок 
			+ НСтр("ru = ': значение не заполнено'"), Элементы.СодержаниеДополнительныхСведений.Имя);	
	КонецЕсли;
		
	Если СоставительДокумента <> Покупатель Тогда
		Если Не ЗначениеЗаполнено(СоставительДокументаДоверенность) Тогда
			СписокОшибок.Добавить(Элементы.СоставительДокументаДоверенность.Заголовок 
				+ НСтр("ru = ': значение не заполнено'"), Элементы.СоставительДокументаДоверенность.Имя);	
		КонецЕсли;		
	КонецЕсли;	
			
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЗаполненияГруппы(ГруппаФормы)
			
	НеобязательныеРеквизиты = Новый Массив;
	НеобязательныеРеквизиты.Добавить("КодЗакупки");
	НеобязательныеРеквизиты.Добавить("НомерБюджетногоОбязательстваПокупателя");
	НеобязательныеРеквизиты.Добавить("ОКТМОМестаПоставки");
	НеобязательныеРеквизиты.Добавить("ПредельнаяДатаОплаты");
	НеобязательныеРеквизиты.Добавить("НомерДенежногоОбязательства");
	НеобязательныеРеквизиты.Добавить("ОчередностьПлатежа");
	НеобязательныеРеквизиты.Добавить("ВидПлатежа");
	
	Для Каждого ЭлементГруппы Из ГруппаФормы.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(ЭлементГруппы) = Тип("ГруппаФормы") Тогда 
			Если ЗначениеЗаполнено(ЭлементГруппы.ПодчиненныеЭлементы) Тогда
				ПроверкаЗаполненияГруппы(ЭлементГруппы);
			КонецЕсли;
		Иначе
			Если НеобязательныеРеквизиты.Найти(ЭлементГруппы.Имя) = Неопределено Тогда
				Если Не ЗначениеЗаполнено(ЭтотОбъект[ЭлементГруппы.Имя]) Тогда 
				СписокОшибок.Добавить(ЭлементГруппы.Заголовок + НСтр("ru = ': значение не заполнено'"), ЭлементГруппы.Имя);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьИОтправитьДокумент(СтруктураОтвета)
	
	НаборДействий = Новый Соответствие;
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Утвердить"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.СформироватьОтвет"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Подписать"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отправить"));
		
	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект);
	
	ПараметрыВыполненияДействийПоЭДО = ЭлектронныеДокументыЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ЭлектронныеДокументы.Добавить(ЭлектронныйДокумент);
	ПараметрыВыполненияДействийПоЭДО.ДанныеРучногоФормированияТитула = СтруктураОтвета;
	
	ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда 
		
		Если Результат.Свойство("ОшибкиФормирования") И Результат.ОшибкиФормирования.Количество() Тогда		
			
			Для Каждого Ошибка Из Результат.ОшибкиФормирования[0].ОшибкиДанных.ЗаполнениеДанных Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ТекстОшибки);	
			КонецЦикла;
			
		ИначеЕсли Результат.Свойство("КонтекстДиагностики")
			И ОбработкаНеисправностейБЭДКлиентСервер.ЕстьОшибки(Результат.КонтекстДиагностики) Тогда
			
			ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(Результат.КонтекстДиагностики);		
		Иначе
			Оповестить(ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияТекущихДелЭДО());
			Оповестить("УдалитьИзСпискаДокументовДляФормированияОтветногоТитула", ЭлектронныйДокумент);
			
			ПараметрыСобытия = ИнтерфейсДокументовЭДОКлиент.НовыеПараметрыСобытияОбновленияСостоянияЭДО();
			ПараметрыСобытия.ЭлектронныеДокументы.Добавить(ЭлектронныйДокумент);
			Оповестить(ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияСостоянияЭДО(), ПараметрыСобытия);
			
			Если Открыта() Тогда
				Закрыть(Истина);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти
