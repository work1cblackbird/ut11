#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("Организация", Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеОрганизации = ИнтеграцияЭДО.РегистрационныеДанныеОрганизации(Организация);
	
	ДанныеОрганизации.Свойство("Наименование", НаименованиеОрганизации);
	ДанныеОрганизации.Свойство("Город", МестоИзданияПриказа);
	ДанныеОрганизации.Свойство("Должность", ДолжностьРуководителя);
	
	Если НЕ ЗначениеЗаполнено(МестоИзданияПриказа) Тогда
		ДанныеОрганизации.Свойство("Регион", МестоИзданияПриказа);
	КонецЕсли;
	МестоИзданияПриказа = "г. " + МестоИзданияПриказа;
	ДатаПриказа = ТекущаяДатаСеанса();
	ДатаВступленияВСилу = ТекущаяДатаСеанса();

	ЧастиИмени = Новый Структура;
	ЧастиИмени.Вставить("Фамилия",  ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОрганизации, "Фамилия", ""));
	ЧастиИмени.Вставить("Имя",      ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОрганизации, "Имя", ""));
	ЧастиИмени.Вставить("Отчество", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОрганизации, "Отчество", ""));
	
	ФИОРуководителя = ИнициалыФамилия(ЧастиИмени);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если ПараметрыЗаполнены() Тогда
		СформироватьПоложение();
	Иначе
		Оповещение = Новый ОписаниеОповещения("ПослеПринятияРешенияОФормировании", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru='Заполнены не все поля. Продолжить?'"), 
						РежимДиалогаВопрос.ОКОтмена,,,
						НСтр("ru='Проверка заполнения'")); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует краткое представление из полного имени физического лица.
//
// Параметры:
//  ФамилияИмяОтчество - Структура:
//                        * Фамилия  - Строка
//                        * Имя      - Строка
//                        * Отчество - Строка
//
// Возвращаемое значение:
//  Строка - фамилия и инициалы. Например, "В. И. Пупкин".
//
// Пример:
//  Результат = ФизическиеЛицаКлиентСервер.ФамилияИнициалы("Пупкин Василий Иванович"); 
//  - возвращает "В. И. Пупкин".
//
&НаСервере
Функция ИнициалыФамилия(ФамилияИмяОтчество)
	
	Фамилия = ФамилияИмяОтчество.Фамилия;
	Имя = ФамилияИмяОтчество.Имя;
	Отчество = ФамилияИмяОтчество.Отчество;
	
	Если ПустаяСтрока(Имя) Тогда
		Возврат Фамилия;
	КонецЕсли;
	
	Если ПустаяСтрока(Отчество) Тогда
		Возврат СтрШаблон("%1. %2", Лев(Имя, 1), Фамилия);
	КонецЕсли;
	
	Возврат СтрШаблон("%1. %2. %3", Лев(Имя, 1), Лев(Отчество, 1), Фамилия);
	
КонецФункции

&НаКлиенте
Процедура ПослеПринятияРешенияОФормировании(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.ОК Тогда 
		СформироватьПоложение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПоложение()
	
	ПараметрыЗаполнения = Новый Структура;
	
	ПараметрыЗаполнения.Вставить("НаименованиеОрганизации", НаименованиеОрганизации);
	ПараметрыЗаполнения.Вставить("НомерПриказа", НомерПриказа);
	ПараметрыЗаполнения.Вставить("ДатаПриказа", Формат(ДатаПриказа, "ДЛФ=D"));
	ПараметрыЗаполнения.Вставить("МестоИзданияПриказа", МестоИзданияПриказа);
	ПараметрыЗаполнения.Вставить("ДанныеАдминистратора", ДанныеАдминистратора);
	ПараметрыЗаполнения.Вставить("ДатаВступленияВСилу", Формат(ДатаВступленияВСилу, "ДЛФ=D"));
	ПараметрыЗаполнения.Вставить("ДанныеУполномоченногоЛица", ДанныеУполномоченногоЛица);   
	ПараметрыЗаполнения.Вставить("ДолжностьРуководителя", ДолжностьРуководителя);
	ПараметрыЗаполнения.Вставить("ФИОРуководителя", ФИОРуководителя);
	ПараметрыЗаполнения.Вставить("Организация", Организация);
	ПараметрыЗаполнения.Вставить("ФИОСотрудника", НСтр("ru = 'Ф.И.О. сотрудника'"));
	
	ПоложениеОбИспользованииПЭП_УНЭП = ШаблонПоложенияОбИспользованииПЭП_УНЭП(ПараметрыЗаполнения);

	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("Приказ,ПриложениеКПриказу,Приложение1,Приложение2");
	ОписаниеПечатнойФормы = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, "Приказ"); 
	ОписаниеПечатнойФормы.ТабличныйДокумент = ПоложениеОбИспользованииПЭП_УНЭП.Получить("Приказ");
	ОписаниеПечатнойФормы.СинонимМакета = НСтр("ru = 'Приказ'");

	ОписаниеПечатнойФормы = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, "ПриложениеКПриказу"); 
	ОписаниеПечатнойФормы.ТабличныйДокумент = ПоложениеОбИспользованииПЭП_УНЭП.Получить("ПриложениеКПриказу");
	ОписаниеПечатнойФормы.СинонимМакета = НСтр("ru = 'Приложение к приказу'");
	
	ОписаниеПечатнойФормы = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, "Приложение1"); 
	ОписаниеПечатнойФормы.ТабличныйДокумент = ПоложениеОбИспользованииПЭП_УНЭП.Получить("Приложение1");
	ОписаниеПечатнойФормы.СинонимМакета = НСтр("ru = 'Приложение 1'");
	
	ОписаниеПечатнойФормы = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, "Приложение2"); 
	ОписаниеПечатнойФормы.ТабличныйДокумент = ПоложениеОбИспользованииПЭП_УНЭП.Получить("Приложение2");
	ОписаниеПечатнойФормы.СинонимМакета = НСтр("ru = 'Приложение 2'");
	
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыЗаполнены()
	
	ПроверяемыеРеквизиты = Новый Массив;
	
	ПроверяемыеРеквизиты.Добавить("НаименованиеОрганизации");
	ПроверяемыеРеквизиты.Добавить("НомерПриказа");
	ПроверяемыеРеквизиты.Добавить("ДатаПриказа");
	ПроверяемыеРеквизиты.Добавить("МестоИзданияПриказа");
	ПроверяемыеРеквизиты.Добавить("ДанныеАдминистратора");
	ПроверяемыеРеквизиты.Добавить("ДатаВступленияВСилу");
	ПроверяемыеРеквизиты.Добавить("ДанныеУполномоченногоЛица");   
	ПроверяемыеРеквизиты.Добавить("ДолжностьРуководителя");
	ПроверяемыеРеквизиты.Добавить("ФИОРуководителя");
	ПроверяемыеРеквизиты.Добавить("Организация");
	
	Для Каждого ПроверяемыйРеквизит Из ПроверяемыеРеквизиты Цикл
		Если Не ЗначениеЗаполнено(ЭтотОбъект[ПроверяемыйРеквизит]) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;

КонецФункции

&НаСервереБезКонтекста
Функция ШаблонПоложенияОбИспользованииПЭП_УНЭП(ПараметрыЗаполнения)
	
	ДолжностьРуководителя = Неопределено;
	ПараметрыЗаполнения.Свойство("ДолжностьРуководителя", ДолжностьРуководителя);
	Если ЗначениеЗаполнено(ДолжностьРуководителя) Тогда
		МассивСклоненийДолжности = ПолучитьСклоненияСтроки(ДолжностьРуководителя, , "ПД=Родительный;");
		Если МассивСклоненийДолжности.Количество() > 0 Тогда
			ПараметрыЗаполнения.Вставить("ДолжностиРуководителя", МассивСклоненийДолжности[0]);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НастройкиВнутреннегоЭДОСлужебный.ШаблонПоложенияОбИспользованииПЭП_УНЭП(ПараметрыЗаполнения);
	
КонецФункции

#КонецОбласти
