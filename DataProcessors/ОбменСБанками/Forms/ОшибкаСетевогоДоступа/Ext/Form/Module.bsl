  
 #Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	КлючСохраненияПоложенияОкна = Новый УникальныйИдентификатор();
	
	Если Параметры.Свойство("ПараметрОповещенияЗакрытия") Тогда
		ПараметрОповещенияЗакрытия = Параметры.ПараметрОповещенияЗакрытия;
	КонецЕсли; 
			
	КоллекцияТиповОшибок = Новый Структура;
	
	Для Каждого Элемент Из Параметры.КоллекцияОшибок Цикл
		
		НастройкиПоТипамОшибок = Неопределено;
		Если НЕ КоллекцияТиповОшибок.Свойство(Элемент.ТипОшибки, НастройкиПоТипамОшибок) Тогда
			НастройкиПоТипамОшибок = Новый Структура("ТипОшибки, НастройкиОбмена", 
				ОбменСБанкамиСлужебныйКлиентСервер.ДеталиОшибкиИнтернетСоединения(Элемент.ТипОшибки), Новый Массив);
			КоллекцияТиповОшибок.Вставить(Элемент.ТипОшибки, НастройкиПоТипамОшибок);	
		КонецЕсли;
		
		ДанныеНастройки = Новый Структура;
		
		Если ЗначениеЗаполнено(Элемент.НастройкаОбмена) Тогда
			ЗначениеРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Элемент.НастройкаОбмена,"Банк,ПрограммаБанка,АдресСервера");
		Иначе
			ЗначениеРеквизитов = Новый Структура("Банк,ПрограммаБанка,АдресСервера");
			ЗаполнитьЗначенияСвойств(ЗначениеРеквизитов, Элемент);
		КонецЕсли; 
		
		ДанныеНастройки.Вставить("НаименованиеБанка", "");
		Если ЗначениеЗаполнено(ЗначениеРеквизитов.Банк) Тогда
			ДанныеНастройки.НаименованиеБанка = ОбменСБанкамиСлужебныйВызовСервера.РеквизитыБанка(ЗначениеРеквизитов.Банк.Код).Наименование;
		КонецЕсли;
		
		Если ЗначениеРеквизитов.ПрограммаБанка = Перечисления.ПрограммыБанка.СбербанкОнлайн Тогда
			
			ПолныйАдресСервиса = ОбменСБанкамиСлужебныйВызовСервера.ПолныйАдресСервисаСбербанк();
			
			ЭлектронноеВзаимодействие.ОбработатьОшибку(НСтр("ru = 'Ошибка сетевой доступности при обращении к серверу банка'"), 
				НастройкиПоТипамОшибок.ТипОшибки.КраткоеПредставлениеТипаОшибки, "", "ОбменСБанками", Элемент.НастройкаОбмена);
		Иначе
			ПолныйАдресСервиса = ЗначениеРеквизитов.АдресСервера;
		КонецЕсли;
		
		СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(ПолныйАдресСервиса);
		ДанныеНастройки.Вставить("АдресСервиса", СтрШаблон("%1://%2",СтруктураURI.Схема,СтруктураURI.ИмяСервера));
		ДанныеНастройки.Вставить("ПолныйАдресСервиса", ПолныйАдресСервиса);
		
		ДанныеНастройки.Вставить("КраткоеПредставлениеОшибки", Элемент.КраткоеПредставлениеОшибки);
		
		НастройкиПоТипамОшибок.НастройкиОбмена.Добавить(ДанныеНастройки);
		
	КонецЦикла;
		 	
	РазобратьОшибки();
					
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПродолжитьЗакрыть(Команда)
	
	Закрыть(ПараметрОповещенияЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетДляАдминистратораНажатие(Элемент)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ИнформацияДляАдминистратора);
	ТекстовыйДокумент.Показать(НСтр("ru = 'Информация для администратора'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РазобратьОшибки()
	
	ЕстьИнформацияДляАдминистратора = Ложь;
	
	ДанныеДляАдминистратора = Новый Массив;
	ДанныеДляАдминистратора.Добавить(
		НСтр("ru = 'При подключении к 1С:ДиректБанку возникли проблемы с интернет-соединением.'") + Символы.ПС);
	
	ПолныеАдресаСервисов = Новый Массив;
	
	Для каждого ЭлементКоллекции Из КоллекцияТиповОшибок Цикл
		
		ЕстьИнформацияДляАдминистратора = ЕстьИнформацияДляАдминистратора 
			ИЛИ ЗначениеЗаполнено(ЭлементКоллекции.Значение.ТипОшибки.РекомендацияАдминистратору);
		
		СформироватьЭлементыФормыТипаОшибки(ЭлементКоллекции);
		
		ГруппаСписокНастроек = Элементы.Найти("ГруппаСписокНастроек" + ЭлементКоллекции.Ключ);
		
		Если ЭлементКоллекции.Значение.НастройкиОбмена.Количество()
			И НЕ ЭлементКоллекции.Ключ = "НаличиеИнтернетСоединения" Тогда
			Для каждого НастройкаОбмена Из ЭлементКоллекции.Значение.НастройкиОбмена Цикл
				
				ПостфиксЭлементаФормы = "_" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
				ГруппаСервис = Элементы.Добавить("ГруппаСервисы" + ПостфиксЭлементаФормы, Тип("ГруппаФормы"),
				ГруппаСписокНастроек);
				ГруппаСервис.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				ГруппаСервис.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
				ГруппаСервис.ОтображатьЗаголовок = Ложь;
				
				ДекорацияКартинка = Элементы.Добавить("ДекорацияКартинкаСервис" + ПостфиксЭлементаФормы,
				Тип("ДекорацияФормы"), ГруппаСервис);
				ДекорацияКартинка.Вид = ВидДекорацииФормы.Картинка;
				ДекорацияКартинка.Картинка = БиблиотекаКартинок.ПримечаниеЖурналаРегистрации;
				ДекорацияКартинка.Ширина = 3;
				
				ДекорацияТекст = Элементы.Добавить("ДекорацияТекстСервис" + ПостфиксЭлементаФормы,
				Тип("ДекорацияФормы"), ГруппаСервис);
				ДекорацияТекст.Вид = ВидДекорацииФормы.Надпись;
				ДекорацияТекст.ЦветТекста = WebЦвета.Серый;
				
				ПредставлениеБанка = НастройкаОбмена.НаименованиеБанка;
				Если ЭлементКоллекции.Ключ = "АктивностьСервисов" Тогда
					ПредставлениеБанка =  СтрШаблон(НСтр("ru = '%1 <код состояния: %2>'"), 
													ПредставлениеБанка, НастройкаОбмена.КраткоеПредставлениеОшибки);	
				ИначеЕсли ЭлементКоллекции.Ключ = "ДоступностьСервисов" Тогда
					ПредставлениеБанка = СтрШаблон(НСтр("ru = '%1 <адрес сервиса: %2>'"), 
													ПредставлениеБанка, НастройкаОбмена.АдресСервиса);
				КонецЕсли;
				
				ДекорацияТекст.Заголовок = ПредставлениеБанка;
				
				ПолныеАдресаСервисов.Добавить(Символы.Таб + НастройкаОбмена.ПолныйАдресСервиса);
				
			КонецЦикла;
		КонецЕсли;
			
		Если ЗначениеЗаполнено(ЭлементКоллекции.Значение.ТипОшибки.РекомендацияАдминистратору) Тогда
			ДанныеДляАдминистратора.Добавить(ЭлементКоллекции.Значение.ТипОшибки.РекомендацияАдминистратору);
			
			Если ЭлементКоллекции.Ключ = "ДоступностьСервисов" Тогда
				ДанныеДляАдминистратора.Добавить(СтрСоединить(ПолныеАдресаСервисов, Символы.ПС));
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

	Если ЕстьИнформацияДляАдминистратора Тогда
		ДанныеДляАдминистратора.Добавить(ОбменСБанкамиСлужебныйВызовСервера.СформироватьРекомендацииПроверкиСетевойДоступности());		
		ИнформацияДляАдминистратора = СтрСоединить(ДанныеДляАдминистратора, Символы.ПС);
	КонецЕсли;
	
	Элементы.ОтчетДляАдминистратора.Видимость = ЕстьИнформацияДляАдминистратора;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЭлементыФормыТипаОшибки(ЭлементКоллекцииОшибок)
	
	ОсновнаяГруппа = Элементы.ОсновнаяГруппа;

	ГруппаТипаОшибки = Элементы.Добавить("ГруппаТипОшибки" + ЭлементКоллекцииОшибок.Ключ, 
		Тип("ГруппаФормы"), ОсновнаяГруппа);
	ЗаполнитьЗначенияСвойств(ГруппаТипаОшибки, Элементы.ГруппаТипОшибки, ,
		"Имя,Видимость,ПутьКДаннымЗаголовка");
	
	ГруппаЗаголовокТипОшибки = Элементы.Добавить("ГруппаЗаголовокТипОшибки" + ЭлементКоллекцииОшибок.Ключ, 
		Тип("ГруппаФормы"), ГруппаТипаОшибки);
	ЗаполнитьЗначенияСвойств(ГруппаЗаголовокТипОшибки, Элементы.ГруппаОписаниеОшибки, ,
		"Имя,Видимость,ПутьКДаннымЗаголовка");
	
	ДекорацияЗаголовокКартинка = Элементы.Добавить("ДекорацияКартинка" + ЭлементКоллекцииОшибок.Ключ, 
		Тип("ДекорацияФормы"), ГруппаЗаголовокТипОшибки);
	ЗаполнитьЗначенияСвойств(ДекорацияЗаголовокКартинка, Элементы.ОписаниеОшибкиКартинка, ,"Имя");
	
	ДекорацияЗаголовокТекст = Элементы.Добавить("ДекорацияЗаголовок" + ЭлементКоллекцииОшибок.Ключ, 
		Тип("ДекорацияФормы"), ГруппаЗаголовокТипОшибки);
	ЗаполнитьЗначенияСвойств(ДекорацияЗаголовокТекст, Элементы.ОписаниеОшибкиТекст, ,
		"Имя,Видимость,Заголовок");
	ДекорацияЗаголовокТекст.Заголовок = ЭлементКоллекцииОшибок.Значение.ТипОшибки.КраткоеПредставлениеТипаОшибки;
	
	
	ГруппаСписокНастроек = Элементы.Добавить("ГруппаСписокНастроек" + ЭлементКоллекцииОшибок.Ключ, 
		Тип("ГруппаФормы"), ГруппаТипаОшибки);
	ЗаполнитьЗначенияСвойств(ГруппаСписокНастроек, Элементы.ГруппаСписокНастроек, ,
		"Имя,Видимость,ПутьКДаннымЗаголовка");
	
	
	ГруппаРекомендацияПоОшибке = Элементы.Добавить("ГруппаРекомендацияПоОшибке" + ЭлементКоллекцииОшибок.Ключ, 
		Тип("ГруппаФормы"), ГруппаТипаОшибки);
	ЗаполнитьЗначенияСвойств(ГруппаРекомендацияПоОшибке, Элементы.ГруппаРекомендацияПоОшибке, ,
		"Имя,Видимость,ПутьКДаннымЗаголовка");
	
	ОтступРекомендацияПоОшибке = Элементы.Добавить("ОтступРекомендацияПоОшибке" + ЭлементКоллекцииОшибок.Ключ, 
		Тип("ДекорацияФормы"), ГруппаРекомендацияПоОшибке);
	ЗаполнитьЗначенияСвойств(ОтступРекомендацияПоОшибке, Элементы.ОтступРекомендацияПоОшибке, ,
		"Имя,Видимость,Заголовок");
	
	ГруппаРекомендацияПоОшибкеТекст = Элементы.Добавить("ГруппаРекомендацияПоОшибкеТекст" + ЭлементКоллекцииОшибок.Ключ, 
		Тип("ГруппаФормы"), ГруппаРекомендацияПоОшибке);
	ЗаполнитьЗначенияСвойств(ГруппаРекомендацияПоОшибкеТекст, Элементы.ГруппаРекомендацияПоОшибкеТекст, ,
		"Имя,Видимость,ПутьКДаннымЗаголовка");
	
	РекомендацияПоОшибкеТекст = Элементы.Добавить("РекомендацияПоОшибкеТекст" + ЭлементКоллекцииОшибок.Ключ, 
		Тип("ДекорацияФормы"), ГруппаРекомендацияПоОшибкеТекст);
	ЗаполнитьЗначенияСвойств(РекомендацияПоОшибкеТекст, Элементы.РекомендацияПоОшибкеТекст, ,
		"Имя,Видимость,Заголовок");
	
	РекомендацияПоОшибкеТекст.Заголовок = ЭлементКоллекцииОшибок.Значение.ТипОшибки.РекомендацияПользователю;
	
КонецПроцедуры

#КонецОбласти	
	