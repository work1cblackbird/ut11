
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОткрыватьОкноВоВнешнемБраузере = Ложь;
	Если ЗначениеЗаполнено(Параметры.URL) Тогда
		
		URL = Параметры.URL;
		
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.НастройкаОбмена) Тогда
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("URL", "");
		ДополнительныеПараметры.Вставить("НастройкаОбмена", Неопределено);
		ДополнительныеПараметры.Вставить("ИдентификаторСессии", "");
		ДополнительныеПараметры.Вставить("СообщенияОбменаВСтатусеНеПодтвержден", Неопределено);
		ДополнительныеПараметры.Вставить("ИмяПроцедурыПослеПодтвержденияКодомИзSMS", "");
		
		Если ЗначениеЗаполнено(Параметры.ИмяПроцедурыПослеПодтвержденияКодомИзSMS) Тогда
			ДополнительныеПараметры.Вставить("ИмяПроцедурыПослеПодтвержденияКодомИзSMS", Параметры.ИмяПроцедурыПослеПодтвержденияКодомИзSMS);
		КонецЕсли;
		Если ЗначениеЗаполнено(Параметры.РезультатОперацииПослеПодтвержденияКодомИзSMS) Тогда
			ДополнительныеПараметры.Вставить("РезультатОперацииПослеПодтвержденияКодомИзSMS", Параметры.РезультатОперацииПослеПодтвержденияКодомИзSMS);
		КонецЕсли;
		Если ЗначениеЗаполнено(Параметры.ДополнительныеПараметрыФоновыхЗаданий) Тогда
			ДополнительныеПараметры.Вставить("ДополнительныеПараметрыФоновыхЗаданий", Параметры.ДополнительныеПараметрыФоновыхЗаданий);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, Параметры); 
		Банк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДополнительныеПараметры.НастройкаОбмена, "Банк");
		БИК = ОбменСБанкамиСлужебный.БИК(Банк);
		ОткрыватьОкноВоВнешнемБраузере = ОбменСБанкамиСлужебныйПовтИсп.ОткрыватьОкноПодтвержденияSMSВоВнешнемБраузере(БИК);
		
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Новый УникальныйИдентификатор();
	Если ОткрыватьОкноВоВнешнемБраузере Тогда
		
		Элементы.ПолеHTML.Видимость = Ложь;
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ВыполнениеЗадания;
		Элементы.Ошибка.Видимость = Ложь;
		
	Иначе
		
		HTML = URL;
		Элементы.Страницы.Видимость = Ложь;
		
	КонецЕсли;
	
	// Зададим время, через которое после открытия окна, 1С начнет опрашивать банк о новых документах
	КоличествоСекунд = 5;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОткрыватьОкноВоВнешнемБраузере Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПерейтиПоСсылке", 0.5, Истина);
	КонецЕсли;
	Если ДополнительныеПараметры <> Неопределено Тогда
		ПодключитьОбработчикОжидания("Подключаемый_НачалоПолученияДокументов", КоличествоСекунд, Истина);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ПерейтиПоСсылке()
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(URL);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОшибку(ЗаголовокОшибки, ТекстОшибки) 

	Элементы.ВыполнениеЗадания.Видимость = Ложь;
	Элементы.Ошибка.Видимость = Истина;
	Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ВыполнениеЗадания;
	МассивСтрок = Новый Массив();
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ЗаголовокОшибки, ОбщегоНазначенияКлиент.ШрифтСтиля("ЖирныйШрифтБЭД")));
	МассивСтрок.Добавить(Символы.ПС);
	МассивСтрок.Добавить(ТекстОшибки);
	Элементы.ДекорацияТекстОшибки.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок)
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НачалоПолученияДокументов()
	
	ДополнительныеПараметры.Вставить("ВидОперации", НСтр("ru = 'Получение новых документов из банка'"));
	
	Результат = ОбменСБанкамиСлужебныйВызовСервера.ЗапускЗаданияПоПолучениюНовыхДокументовИзБанка(
		ДополнительныеПараметры.НастройкаОбмена, ДополнительныеПараметры.ИдентификаторСессии);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	Оповещение = Новый ОписаниеОповещения("ПослеПолученияНовыхДокументовИзБанка", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияНовыхДокументовИзБанка(РезультатЗадания, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗадания = Неопределено Тогда // задание было отменено пользователем
		
		ВидОперации = НСтр("ru = 'Получение новых документов из банка'");
		ОбменСБанкамиСлужебныйКлиент.ОбработатьОшибку(ВидОперации,НСтр("ru = 'Задание было отменено'"),
			НСтр("ru = 'Задание было отменено'"), ДополнительныеПараметры.НастройкаОбмена);
		Возврат;
		
	ИначеЕсли РезультатЗадания.Статус = "Ошибка" Тогда
		
		ВидОперации = НСтр("ru = 'Получение новых документов из банка'");
		ОбменСБанкамиСлужебныйКлиент.ОбработатьОшибку(ВидОперации, РезультатЗадания.ПодробноеПредставлениеОшибки,
			РезультатЗадания.КраткоеПредставлениеОшибки, ДополнительныеПараметры.НастройкаОбмена);
		ПоказатьОшибку(ВидОперации, РезультатЗадания.ПодробноеПредставлениеОшибки);
		Возврат;
		
	КонецЕсли;
		
	РезультатОперации = ПолучитьИзВременногоХранилища(РезультатЗадания.АдресРезультата);
	УдалитьИзВременногоХранилища(РезультатЗадания.АдресРезультата);

	ДополнительныеПараметры.Вставить("ОбработчикПослеАутентификации", Новый ОписаниеОповещения(
		"ПродолжитьВзаимодействиеПослеПолученияМаркераБанка", ЭтотОбъект, ДополнительныеПараметры));
	
	Если ОбменСБанкамиСлужебныйКлиент.ВыполнитьПовторнуюАутентификацию(РезультатОперации, ДополнительныеПараметры) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СообщенияОбменаВСтатусеПодтвержден = Новый Массив;

	// Заполним массив документами, явно возвращаемыми фоновым заданием
	МассивДокументовСсылки = Новый Массив;
	Для Каждого ЭлементСоответствия Из РезультатОперации.ПараметрОповещения Цикл
		МассивДокументовСсылки.Добавить(ЭлементСоответствия.Ключ);
	КонецЦикла;

	Если Не ДополнительныеПараметры.Свойство("ЗапросНаОтзывЭД") Тогда
		
		РеквизитыЭлектронныхДокументов = ОбменСБанкамиСлужебныйВызовСервера.РеквизитыЭлектронныхДокументов(
			МассивДокументовСсылки);
		Для Каждого РеквизитыЭлектронногоДокумента Из РеквизитыЭлектронныхДокументов Цикл
		
			ОбработатьСтатусыДокументов(
				РеквизитыЭлектронногоДокумента, СообщенияОбменаВСтатусеПодтвержден, ДополнительныеПараметры);
		
		КонецЦикла;
		
	КонецЕсли;
	
	// Проверим, что сообщения обмена возможно уже имеют нужный нам статус. Например, "Запрос на отзыв ЭД".
	// Так как "Запрос на отзыв ЭД", полученный в фоновом задании ОбменСБанкамиСлужебный.ПолучитьНовыеДокументыИзБанка, не
	// возвращается в РезультатЗадания.ПараметрОповещения, но по факту это фоновое задание могло получить новый статус
	// документа "Запрос на отзыв ЭД". Поэтому нужно принудительно проверить актуальный статус документа Запрос на отзыв.
	Если ДополнительныеПараметры.СообщенияОбменаВСтатусеНеПодтвержден.Количество() > 0 
		ИЛИ СообщенияОбменаВСтатусеПодтвержден.Количество() = 0 Тогда
		
		РеквизитыЭлектронныхДокументов = ОбменСБанкамиСлужебныйВызовСервера.РеквизитыЭлектронныхДокументов(
			ДополнительныеПараметры.СообщенияОбменаВСтатусеНеПодтвержден, Ложь);
		Для Каждого РеквизитыЭлектронногоДокумента Из РеквизитыЭлектронныхДокументов Цикл
		
			ОбработатьСтатусыДокументов(
				РеквизитыЭлектронногоДокумента, СообщенияОбменаВСтатусеПодтвержден, ДополнительныеПараметры);
		
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДополнительныеПараметры.СообщенияОбменаВСтатусеНеПодтвержден.Количество() = 0 Тогда
		
		Оповестить("ОбновитьСостояниеОбменСБанками");
		ИмяПроцедурыПослеПодтвержденияКодомИзSMS = Неопределено;
		РезультатОперацииПослеПодтвержденияКодомИзSMS = Неопределено;
		
		Если ДополнительныеПараметры.Свойство(
				"ИмяПроцедурыПослеПодтвержденияКодомИзSMS",
				ИмяПроцедурыПослеПодтвержденияКодомИзSMS)
			И ДополнительныеПараметры.Свойство(
				"РезультатОперацииПослеПодтвержденияКодомИзSMS",
				РезультатОперацииПослеПодтвержденияКодомИзSMS) Тогда
			
			ОповещениеПослеПодтвержденияКодомИзSMS = Новый ОписаниеОповещения(
				ИмяПроцедурыПослеПодтвержденияКодомИзSMS,
				ОбменСБанкамиСлужебныйКлиент, 
				ДополнительныеПараметры.ДополнительныеПараметрыФоновыхЗаданий);
			ВыполнитьОбработкуОповещения(
				ОповещениеПослеПодтвержденияКодомИзSMS, РезультатОперацииПослеПодтвержденияКодомИзSMS);
			
		КонецЕсли;
		
		Если СообщенияОбменаВСтатусеПодтвержден.Количество() > 0 Тогда  
			
			Число = ?(СообщенияОбменаВСтатусеПодтвержден.Количество() > 1, 2, 1);
			СтрокаСообщения = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru=';Документ %1 подтвержден SMS-кодом;Документы %1 подтверждены SMS-кодом;
					|Документы %1 подтверждены SMS-кодом;Документы %1 подтверждены SMS-кодом;'"), Число);
			// Так как выше для формирования текста мы использовали числа(1,2), 
			// но теперь они нам не нужны, то удалим их из текста
			СтрокаСообщения = СтрЗаменить(СтрокаСообщения, " 1", "");
			СтрокаСообщения = СтрЗаменить(СтрокаСообщения, " 2", "");
			ПоказатьОповещениеПользователя(СтрокаСообщения);  
			
		КонецЕсли;
	
		Если Открыта() Тогда
			
			ИдентификаторЗадания = Неопределено;
			Закрыть();
			
		КонецЕсли;
		
		ОбменСБанкамиСлужебныйКлиент.ВывестиСообщениеОбОтклоненныхДокументах(ДополнительныеПараметры);
		
	Иначе
		
		ОбновитьИнтервалОжидания(КоличествоСекунд);
		ПодключитьОбработчикОжидания("Подключаемый_НачалоПолученияДокументов", КоличествоСекунд, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтатусыДокументов(РеквизитыЭлектронногоДокумента, СообщенияОбменаВСтатусеПодтвержден, ДополнительныеПараметры)
	
	// Найдем документы, которые были успешно подписаны и удалим их из массива СообщенияОбменаВСтатусеНеПодтвержден
	Если РеквизитыЭлектронногоДокумента.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОбменСБанками.ОжидаетсяИсполнение")
		ИЛИ РеквизитыЭлектронногоДокумента.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОбменСБанками.ЧастичноПодтвержден") 
		ИЛИ РеквизитыЭлектронногоДокумента.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОбменСБанками.ОжидаетсяВыписка") 
		ИЛИ РеквизитыЭлектронногоДокумента.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОбменСБанками.ПлатежИсполнен") Тогда
		
		ИндексДокумента = ДополнительныеПараметры.СообщенияОбменаВСтатусеНеПодтвержден.Найти(РеквизитыЭлектронногоДокумента.СообщениеОбмена);
		
		Если ИндексДокумента <> Неопределено Тогда
			
			ДополнительныеПараметры.СообщенияОбменаВСтатусеНеПодтвержден.Удалить(ИндексДокумента);
			СообщенияОбменаВСтатусеПодтвержден.Добавить(РеквизитыЭлектронногоДокумента.СообщениеОбмена);
			
		КонецЕсли;
		
	КонецЕсли; 

	// Найдем ошибочные документы и удалим их из массива СообщенияОбменаВСтатусеНеПодтвержден   
	Если РеквизитыЭлектронногоДокумента.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОбменСБанками.Отклонен")
		ИЛИ РеквизитыЭлектронногоДокумента.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОбменСБанками.Аннулирован")
		ИЛИ РеквизитыЭлектронногоДокумента.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОбменСБанками.ОшибкаПередачи") Тогда
		
		ИндексДокумента = ДополнительныеПараметры.СообщенияОбменаВСтатусеНеПодтвержден.Найти(РеквизитыЭлектронногоДокумента.СообщениеОбмена);
		
		Если ИндексДокумента <> Неопределено Тогда
			
			ДополнительныеПараметры.СообщенияОбменаВСтатусеНеПодтвержден.Удалить(ИндексДокумента); 
			Если НЕ ДополнительныеПараметры.Свойство("ДокументыОтклоненныеБанком") Тогда
				ДополнительныеПараметры.Вставить("ДокументыОтклоненныеБанком", Новый Массив);
			КонецЕсли;
			Если ДополнительныеПараметры.ДокументыОтклоненныеБанком.Найти(РеквизитыЭлектронногоДокумента.СсылкаНаОбъект) = Неопределено Тогда
				ДополнительныеПараметры.ДокументыОтклоненныеБанком.Добавить(РеквизитыЭлектронногоДокумента.СсылкаНаОбъект);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьВзаимодействиеПослеПолученияМаркераБанка(Маркер, ДополнительныеПараметры) Экспорт

	ДополнительныеПараметры.Вставить("ИдентификаторСессии", Маркер);
	Если ДополнительныеПараметры.ВидОперации = НСтр("ru = 'Получение новых документов из банка'") Тогда
		
		УникальныйИдентификаторЗадания = Новый УникальныйИдентификатор();
		Результат = ОбменСБанкамиСлужебныйВызовСервера.ЗапускЗаданияПоПолучениюНовыхДокументовИзБанка(
			ДополнительныеПараметры.НастройкаОбмена, ДополнительныеПараметры.ИдентификаторСессии);
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		Оповещение = Новый ОписаниеОповещения("ПослеПолученияНовыхДокументовИзБанка", ЭтотОбъект, ДополнительныеПараметры);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат, Оповещение, ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтервалОжидания(КоличествоСекунд)
	
	КоличествоСекунд = КоличествоСекунд / 1.2;
	Если КоличествоСекунд < 3 Тогда
		КоличествоСекунд = 3;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти