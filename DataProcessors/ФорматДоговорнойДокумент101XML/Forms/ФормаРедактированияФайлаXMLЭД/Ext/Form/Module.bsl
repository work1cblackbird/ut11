#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МасштабHTML = 100;
	
	АдресДанныхXML = Параметры.АдресДанныхXML;
	АдресТаблицыФрагментов = Параметры.АдресТаблицыФрагментов;
	ДобавленныйФайл = Параметры.ДобавленныйФайл;
	ИдентификаторОсновногоФайла = Параметры.ИдентификаторОсновногоФайла;
	ОбъектУчета = Параметры.ОбъектУчета;
	Предупреждения = Параметры.Предупреждения;
	Режим = Параметры.Режим;
	
	Если Режим = "РедактированиеXML" Тогда
		Элементы.ФормаОтправитьЭД.Видимость = Ложь;
		Элементы.ОК.Видимость = Истина;
		Элементы.ОК.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	ЗаполнитьДанные(АдресТаблицыФрагментов, ДобавленныйФайл, АдресДанныхXML);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Предупреждения <> Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'При формировании фрагментов есть предупреждения:'"));
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Предупреждения);
	КонецЕсли;
	
	Если Не ДобавленныйФайл = Неопределено Тогда
		Оповестить("РедактированиеФайлаЭДО",,ДобавленныйФайл);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	Если Не ДобавленныйФайл = Неопределено Тогда
		Оповестить("РедактированиеФайлаЭДО",,ДобавленныйФайл);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если Не ДобавленныйФайл = Неопределено Тогда
		Оповестить("ЗавершениеРедактированияФайлаЭДО",,ДобавленныйФайл);  
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" Тогда
		Если Не ЗначениеЗаполнено(Источник)
			Или (ТипЗнч(Источник) = Тип("Массив")
			И Источник.Количество() = 0) Тогда 
			Возврат;
		КонецЕсли;
		
		СсылкаНаФайл = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
		Если ТипЗнч(СсылкаНаФайл) <> Тип("СправочникСсылка.ДоговорыКонтрагентовПрисоединенныеФайлы") Тогда
			Возврат;
		КонецЕсли; 
		
		Событие = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметр, "Событие" , "");
		Если (Событие = "ФайлРедактировался" Или Событие = "ДанныеФайлаИзменены") И СсылкаНаФайл = ДобавленныйФайл Тогда
			ЗаполнитьДанные(Неопределено, ДобавленныйФайл, Неопределено);
			ДобавленныйФайл = СсылкаНаФайл;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МасштабHTMLПриИзменении(Элемент)
	Элементы.Предпросмотр.Документ.body.style.zoom = Формат(МасштабHTML,"ЧДЦ=0; ЧГ=")+"%"; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаРеквизитов

&НаКлиенте
Процедура ТаблицаРеквизитовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Фрагмент = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(Фрагмент.СодержаниеФрагмента) Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Содержание фрамента не может быть пустым.'"));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьXML(Команда)
	
	ОчиститьСообщения();
	
	ПредставлениеДокумента = ОбновитьXMLНаСервере();
	
	Предпросмотр = ПредставлениеДокумента;
	
	ПодключитьОбработчикОжидания("ОбновитьМасштаб", 0.1, Истина);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЭД(Команда)
	
	ОчиститьСообщения();
	НадоОповещать = ДобавленныйФайл = Неопределено;
	Ошибки = ПроверитьТиповыеФрагментыНаСервере();
	
	Если Ошибки <> Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'При формировании фрагментов есть предупреждения:'"));
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	Иначе
		Если НадоОповещать Тогда
			ПараметрыОповещения = Новый Структура;
			ПараметрыОповещения.Вставить("ВладелецФайла", ОбъектУчета);
			ПараметрыОповещения.Вставить("Файл"         , ДобавленныйФайл);
			ПараметрыОповещения.Вставить("ЭтоНовый"     , Истина);
			Оповестить("Запись_Файл", ПараметрыОповещения, ДобавленныйФайл);
		КонецЕсли; 
		Если Не НадоОповещать Тогда
			ОбновитьДанныеФайла(Ошибки);
			ОсвободитьФайл(); 
			Оповестить("Запись_Файл");	
			Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ДобавленныйФайл);
		КонецЕсли;
		Закрыть(ДобавленныйФайл);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда) 
	
	ОчиститьСообщения();
	Ошибки = ПроверитьТиповыеФрагментыНаСервере();
	
	Если Ошибки <> Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'При формировании фрагментов есть предупреждения:'"));
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	Иначе
			
		ОбновитьДанныеФайла(Ошибки);
		Если Ошибки <> Неопределено Тогда
			Возврат;
		КонецЕсли;

		ОсвободитьФайл();

		Если ПризнакОтправкиФайлаЭДО(ДобавленныйФайл) Тогда
			АннулироватьЭДО();
			Оповестить("Запись_Файл", Новый Структура("Событие", "ВерсияСохранена"), ДобавленныйФайл);
		КонецЕсли;
		
		ОповеститьОбИзменении(ДобавленныйФайл);
		Оповестить("Запись_Файл", Новый Структура("Событие", "ДанныеФайлаИзменены"), ДобавленныйФайл);
		Оповестить("Запись_Файл", Новый Структура("Событие", "ФайлРедактировался"), ДобавленныйФайл);
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменаОтправки(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДанные(АдресТаблицыФрагментов, ДобавленныйФайл, АдресДанныхXML)
	
	Если ЗначениеЗаполнено(АдресДанныхXML) Тогда
		ДанныеФайла = ПолучитьИзВременногоХранилища(АдресДанныхXML);
	Иначе
		ДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ДобавленныйФайл);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресТаблицыФрагментов) Тогда
		ТаблицаФрагментов = ПолучитьИзВременногоХранилища(АдресТаблицыФрагментов);
		ТаблицаРеквизитов.Загрузить(ТаблицаФрагментов);
	Иначе
		ТаблицаФрагментов = Обработки.ФорматДоговорнойДокумент101XML.ЗагрузкаXMLВТаблицуФрагментов(ДанныеФайла);
		Если ТаблицаФрагментов = Неопределено
			Или ТаблицаФрагментов.Количество() = 0 Тогда
			ТекстОшибки = НСтр("ru = 'Нет данных по фрагментам. Неверный формат файла либо файл пустой.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
			ТаблицаРеквизитов.Очистить();
			Элементы.ФормаОтправитьЭД.Доступность = Ложь;
			Элементы.ОбновитьXML.Доступность = Ложь;
		Иначе
			ТаблицаРеквизитов.Загрузить(ТаблицаФрагментов);
		КонецЕсли;
	КонецЕсли;
	
	ДанныеПреобразования = Обработки.ФорматДоговорныйДокументИнформацияОтправителяЭДО.ПредставлениеДанныхДокумента(ДанныеФайла);
	
	Предпросмотр = ДанныеПреобразования.ПредставлениеДокумента;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьXMLНаСервере()
	
	ПредставлениеДокумента = Предпросмотр;
	
	Ошибки = Неопределено;
	
	ДвоичныеДанныеXML = Обработки.ФорматДоговорнойДокумент101XML.СформироватьXMLПоДоговору(ОбъектУчета, ТаблицаРеквизитов.Выгрузить(), ИдентификаторОсновногоФайла, Ошибки);
	
	Если Ошибки = Неопределено Тогда 
		Если ДобавленныйФайл <> Неопределено Тогда
			Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанныеXML);
			ИнформацияОФайле = Новый Структура();
			ИнформацияОФайле.Вставить("АдресФайлаВоВременномХранилище", Адрес);
			ИнформацияОФайле.Вставить("АдресВременногоХранилищаТекста", Адрес);
				
			РаботаСФайлами.ОбновитьФайл(ДобавленныйФайл, ИнформацияОФайле);
		КонецЕсли;
	Иначе
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'При формировании XML файла произошли следующие ошибки:'"));
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
			
		Возврат ПредставлениеДокумента;
	КонецЕсли;
	
	ДанныеПреобразования = Обработки.ФорматДоговорныйДокументИнформацияОтправителяЭДО.ПредставлениеДанныхДокумента(ДвоичныеДанныеXML);
	
	Возврат ДанныеПреобразования.ПредставлениеДокумента;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьМасштаб()
	Элементы.Предпросмотр.Документ.body.style.zoom = Формат(МасштабHTML,"ЧДЦ=0; ЧГ=")+"%"; 
	Элементы.ГруппаДокумента.ТекущаяСтраница = Элементы.СтраницаПредпросмотра;
КонецПроцедуры

&НаСервере
Функция ПроверитьТиповыеФрагментыНаСервере()
	
	Ошибки = Обработки.ФорматДоговорнойДокумент101XML.ПроверитьЗаполненностьТиповыхФрагментов(ТаблицаРеквизитов);
	
	Если ДобавленныйФайл = Неопределено И Ошибки = Неопределено Тогда
		
		ДвоичныеДанныеXML = Обработки.ФорматДоговорнойДокумент101XML.СформироватьXMLПоДоговору(ОбъектУчета, ТаблицаРеквизитов, ИдентификаторОсновногоФайла, Ошибки);
		
		Если Ошибки = Неопределено Тогда
			Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанныеXML);
			ДобавленныйФайл = ДобавитьФайлКДоговору(ОбъектУчета, ИдентификаторОсновногоФайла, Адрес);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ошибки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьФайлКДоговору(Договор, ИдентификаторОсновногоФайла, АдресДанных)
	
	ПараметрыФайла = РаботаСФайлами.ПараметрыДобавленияФайла();
	
	ПараметрыФайла.ВладелецФайлов = Договор;
	ПараметрыФайла.Автор = Пользователи.ТекущийПользователь();
	ПараметрыФайла.ИмяБезРасширения = ИдентификаторОсновногоФайла;
	ПараметрыФайла.РасширениеБезТочки = "xml";
	ДобавленныйФайл = РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресДанных);
	
	Возврат ДобавленныйФайл;
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеФайла(Ошибки)
	
	Если ЗначениеЗаполнено(ДобавленныйФайл.Редактирует) Тогда
		ДвоичныеДанныеXML = Обработки.ФорматДоговорнойДокумент101XML.СформироватьXMLПоДоговору(ОбъектУчета, ТаблицаРеквизитов.Выгрузить(), ИдентификаторОсновногоФайла, Ошибки);
		Если Ошибки = Неопределено Тогда			
			Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанныеXML);			
		Иначе
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'При формировании XML файла произошли следующие ошибки:'"));
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
			Возврат;
		КонецЕсли;
	Иначе
		ДвоичныеДанныеXML = РаботаСФайлами.ДвоичныеДанныеФайла(ДобавленныйФайл);
		Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанныеXML);
	КонецЕсли;

	ИнформацияОФайле = Новый Структура();
	ИнформацияОФайле.Вставить("АдресФайлаВоВременномХранилище", Адрес);
	ИнформацияОФайле.Вставить("АдресВременногоХранилищаТекста", Адрес);
	ИнформацияОФайле.Вставить("ИмяБезРасширения", ИдентификаторОсновногоФайла);
		
	РаботаСФайлами.ОбновитьФайл(ДобавленныйФайл, ИнформацияОФайле);  
	
КонецПроцедуры

&НаСервере
Процедура ОсвободитьФайл()
	
	Если ЗначениеЗаполнено(ДобавленныйФайл.Редактирует) 
		И ДобавленныйФайл.Редактирует = Пользователи.ТекущийПользователь() Тогда 
		НачатьТранзакцию();
		Попытка
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировкиДанных = БлокировкаДанных.Добавить(Метаданные.НайтиПоТипу(ТипЗнч(ДобавленныйФайл)).ПолноеИмя());
			ЭлементБлокировкиДанных.УстановитьЗначение("Ссылка", ДобавленныйФайл);
			БлокировкаДанных.Заблокировать();
			
			ФайлОбъект = ДобавленныйФайл.Ссылка.ПолучитьОбъект();
			
			ЗаблокироватьДанныеДляРедактирования(ФайлОбъект.Ссылка, , УникальныйИдентификатор);
			ФайлОбъект.Редактирует = Справочники.Пользователи.ПустаяСсылка();
			ФайлОбъект.ДатаЗаема = Дата("00010101000000");
			ФайлОбъект.Записать();
			
			РаботаСФайламиПереопределяемый.ПриОсвобожденииФайла(ДобавленныйФайл, УникальныйИдентификатор);
			РазблокироватьДанныеДляРедактирования(ДобавленныйФайл, УникальныйИдентификатор);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			РазблокироватьДанныеДляРедактирования(ДобавленныйФайл, УникальныйИдентификатор);
			ВызватьИсключение;
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АннулироватьЭДО()
	
	ОбменСКонтрагентамиУТВызовСервера.ОбновитьСостояниеОтправленногоФайлаДоговорногоДокумента(ДобавленныйФайл, Ложь);
	ДоговорОбъект = ОбъектУчета.ПолучитьОбъект();
	ДоговорОбъект.ДополнительныеСвойства.Вставить("ОбменСКонтрагентами", Новый Структура());
	ДоговорОбъект.ДополнительныеСвойства.ОбменСКонтрагентами.Вставить("ОписаниеИзменений", Новый Структура());
	ДоговорОбъект.ДополнительныеСвойства.ОбменСКонтрагентами.ОписаниеИзменений.Вставить("УчаствуетВОбмене", Истина);
	ДоговорОбъект.ДополнительныеСвойства.ОбменСКонтрагентами.ОписаниеИзменений.Вставить("ИзмененыКлючевыеДанные", Истина);
	СостояниеЭлектронногоДокумента = ОбменСКонтрагентами.СтатусДокументооборота(ОбъектУчета);
	ДоговорОбъект.ДополнительныеСвойства.ОбменСКонтрагентами.ОписаниеИзменений.Вставить("СостояниеЭлектронногоДокумента", СостояниеЭлектронногоДокумента.Статус);
		 
	ИнтеграцияЭДО.ПриЗаписиСправочникаОбъектаУчетаЭДО(ДоговорОбъект, Ложь);
	
КонецПроцедуры
		
&НаСервереБезКонтекста
Функция ПризнакОтправкиФайлаЭДО(Файл)
	Возврат Файл.ОтправленПолученЭД;
КонецФункции

#КонецОбласти