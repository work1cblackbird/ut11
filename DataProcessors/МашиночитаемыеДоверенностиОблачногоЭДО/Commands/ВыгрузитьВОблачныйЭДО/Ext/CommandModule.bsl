// @strict-types

#Область ОбработчикиСобытий

// Параметры:
//  ПараметрКоманды - СправочникСсылка.МЧД003
//  ПараметрыВыполненияКоманды - ПараметрыВыполненияКоманды
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	КонтекстВыгрузки = НовыйКонтекстВыгрузкиДоверенностей();
	КонтекстВыгрузки.Доверенность = ПараметрКоманды;
	
	Если ТипЗнч(ПараметрыВыполненияКоманды.Источник) = Тип("ФормаКлиентскогоПриложения") Тогда
		КонтекстВыгрузки.ФормаВладелец = ПараметрыВыполненияКоманды.Источник;
		КонтекстВыгрузки.ИдентификаторФормы = ПараметрыВыполненияКоманды.Источник.УникальныйИдентификатор;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ВыгрузитьВОблачныйЭДОПослеВыбораУчетныхЗаписей", ЭтотОбъект, КонтекстВыгрузки);
	
	ЗаголовокФормы = НСтр("ru = 'Выбор учетных записей для выгрузки доверенности.'");
	
	ИнтеграцияОблачногоЭДОКлиент.ОткрытьФормуВыбораУчетныхЗаписейОблачногоЭДО(Оповещение,
		КонтекстВыгрузки.ФормаВладелец, ЗаголовокФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//  Структура:
//  * Доверенность - см. ОбработкаКоманды.ПараметрКоманды
//  * ФормаВладелец - Неопределено,ФормаКлиентскогоПриложения
//  * ИдентификаторФормы - Неопределено,УникальныйИдентификатор
&НаКлиенте
Функция НовыйКонтекстВыгрузкиДоверенностей()
	Контекст = Новый Структура;
	Контекст.Вставить("Доверенность", Неопределено);
	Контекст.Вставить("ФормаВладелец", Неопределено);
	Контекст.Вставить("ИдентификаторФормы", Неопределено);
	Возврат Контекст;
КонецФункции

// Параметры:
//  КлючиУчетныхЗаписей - Неопределено,Массив из РегистрСведенийКлючЗаписи.УчетныеЗаписиОблачногоЭДО
//  КонтекстВыгрузки - см. НовыйКонтекстВыгрузкиДоверенностей
&НаКлиенте
Процедура ВыгрузитьВОблачныйЭДОПослеВыбораУчетныхЗаписей(КлючиУчетныхЗаписей, КонтекстВыгрузки) Экспорт
	
	Если Не ЗначениеЗаполнено(КлючиУчетныхЗаписей) Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ВыгрузитьВОблачныйЭДОВФоне(КлючиУчетныхЗаписей,
		КонтекстВыгрузки.Доверенность, КонтекстВыгрузки.ИдентификаторФормы);
	
	Оповещение = Новый ОписаниеОповещения("ВыгрузитьВОблачныйЭДОЗавершение", ЭтотОбъект, КонтекстВыгрузки);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(КонтекстВыгрузки.ФормаВладелец);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

// Параметры:
//  КлючиУчетныхЗаписей - Массив из РегистрСведенийКлючЗаписи.УчетныеЗаписиОблачногоЭДО
//  Доверенность - см. ОбработкаКоманды.ПараметрКоманды
//  ИдентификаторФормы - УникальныйИдентификатор
// 
// Возвращаемое значение:
//  См. ДлительныеОперации.ВыполнитьФункцию
&НаСервере
Функция ВыгрузитьВОблачныйЭДОВФоне(Знач КлючиУчетныхЗаписей, Знач Доверенность, Знач ИдентификаторФормы)
	
	ИдентификаторыУчетныхЗаписей = ОбщегоНазначения.ВыгрузитьКолонку(КлючиУчетныхЗаписей, "Идентификатор"); // Массив из см. РегистрСведений.УчетныеЗаписиОблачногоЭДО.Идентификатор
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	
	// См. Обработки.МашиночитаемыеДоверенностиОблачногоЭДО.ВыгрузитьВОблачныйЭДО
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполненияВФоне,
		"Обработки.МашиночитаемыеДоверенностиОблачногоЭДО.ВыгрузитьВОблачныйЭДО",
		ИдентификаторыУчетныхЗаписей, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Доверенность));
	
	Возврат ДлительнаяОперация;
	
КонецФункции

// Параметры:
//  ДлительнаяОперация - см. ДлительныеОперации.ВыполнитьФункцию
//  КонтекстВыгрузки - см. НовыйКонтекстВыгрузкиДоверенностей
&НаКлиенте
Процедура ВыгрузитьВОблачныйЭДОЗавершение(ДлительнаяОперация, КонтекстВыгрузки) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		РезультатВыгрузки = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата); // См. Обработки.МашиночитаемыеДоверенностиОблачногоЭДО.ВыгрузитьВОблачныйЭДО
		ЕстьОшибки = РезультатВыгрузки.ЕстьОшибки;
		КонтекстДиагностики = РезультатВыгрузки.КонтекстДиагностики;
	Иначе
		ЕстьОшибки = Истина;
		КонтекстДиагностики = ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики();
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Не удалось выгрузить машиночитаемую доверенность %1 в облачный ЭДО.'"),
			КонтекстВыгрузки.Доверенность);
		ПодробныйТекстОшибки = ТекстОшибки;
		Если ЗначениеЗаполнено(ДлительнаяОперация.ПодробноеПредставлениеОшибки) Тогда
			ПодробныйТекстОшибки = ПодробныйТекстОшибки + Символы.ПС + ДлительнаяОперация.ПодробноеПредставлениеОшибки;
		КонецЕсли;
		Если ЗначениеЗаполнено(ДлительнаяОперация.КраткоеПредставлениеОшибки) Тогда
			ТекстОшибки = ТекстОшибки + Символы.ПС + ДлительнаяОперация.КраткоеПредставлениеОшибки;
		КонецЕсли;
		Ошибка = ОбработкаНеисправностейБЭДКлиент.НоваяОшибка(НСтр("ru = 'Выгрузка МЧД в облачный ЭДО.'"),
			ОбработкаНеисправностейБЭДКлиентСервер.ВидОшибкиНеизвестнаяОшибка(), ПодробныйТекстОшибки, ТекстОшибки);
		ПодсистемыБЭД = ОбщегоНазначенияБЭДКлиентСервер.ПодсистемыБЭД();
		ОбработкаНеисправностейБЭДКлиент.ДобавитьОшибку(КонтекстДиагностики, Ошибка,
			ПодсистемыБЭД.ИнтеграцияОблачногоЭДО);
	КонецЕсли;
	
	ТекстОповещения = НСтр("ru = 'Выгрузка МЧД в облачный ЭДО.'");
	Если ЕстьОшибки Тогда
		ТекстПояснения  = НСтр("ru = 'При выгрузке возникли ошибки.'");
		КартинкаОповещения = БиблиотекаКартинок.КрасныйКрестБЭД;
	Иначе
		ТекстПояснения  = НСтр("ru = 'Выгрузка завершена успешно.'");
		КартинкаОповещения = БиблиотекаКартинок.Успешно32;
	КонецЕсли;
	
	НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(КонтекстВыгрузки.Доверенность);
	ПоказатьОповещениеПользователя(ТекстОповещения, НавигационнаяСсылка, ТекстПояснения, КартинкаОповещения);
	
	ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(КонтекстДиагностики);
	
КонецПроцедуры

#КонецОбласти
