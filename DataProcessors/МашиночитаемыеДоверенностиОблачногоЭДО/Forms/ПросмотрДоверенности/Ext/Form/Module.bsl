// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДанныеПросмотра();
	
	НастроитьОформлениеФормы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДанныеПросмотра()
	
	ПолучитьДанныеПросмотраВФоне();
	
	ЗаполнитьДанныеПросмотраИзФона();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПросмотраВФоне()
	
	Если Не ЗначениеЗаполнено(Организация)
		ИЛИ Не ЗначениеЗаполнено(НомерДоверенности)
		ИЛИ Не ЗначениеЗаполнено(ИННДоверителя) Тогда
		ДлительнаяОперацияФормы = Неопределено;
		Возврат;
	КонецЕсли;
	
	// См. Обработки.МашиночитаемыеДоверенностиОблачногоЭДО.ДанныеДляПросмотраДоверенности
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ДлительнаяОперацияФормы = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"Обработки.МашиночитаемыеДоверенностиОблачногоЭДО.ДанныеДляПросмотраДоверенности",
		Организация, НомерДоверенности, ИННДоверителя);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПросмотраИзФона()
	
	Если ДлительнаяОперацияФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ДлительнаяОперацияФормы; // См. ДлительныеОперации.ВыполнитьФункцию
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		Возврат;
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ОбщегоНазначения.СообщитьПользователю(ДлительнаяОперация.КраткоеПредставлениеОшибки);
		Возврат;
	ИначеЕсли ДлительнаяОперация.Статус = "Отменено" Тогда
		ТекстСообщение = НСтр("ru = 'Получение данных для просмотра доверенности отменено пользователем или администратором.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщение);
		Возврат;
	ИначеЕсли ДлительнаяОперация.Статус <> "Выполнено" Тогда
		ТекстСообщение = СтрШаблон(НСтр("ru = 'Неизвестный статус длительной операции: ""%1"".'"),
			ДлительнаяОперация.Статус);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщение);
		Возврат;
	КонецЕсли;
	
	ДанныеДляПросмотра = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата); // См. Обработки.МашиночитаемыеДоверенностиОблачногоЭДО.ДанныеДляПросмотраДоверенности
	УдалитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
	
	ВизуализацияДоверенности = ДанныеДляПросмотра.Визуализация;
	
	СтатусыДоверенности = ДанныеДляПросмотра.СтатусыДоверенности;
	Подписана = СтатусыДоверенности.Подписана;
	Верна = СтатусыДоверенности.Верна;
	Отозвана = СтатусыДоверенности.Отозвана;
	ДатаОтзыва = СтатусыДоверенности.ДатаОтзыва;
	СтатусВРеестреФНС = СтатусыДоверенности.СтатусВРеестреФНС;
	
	ДлительнаяОперацияФормы = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОформлениеФормы()
	
	НастроитьОформлениеГруппыСтатусов();
	
	НастроитьОтображениеКоманд();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОформлениеГруппыСтатусов()
	
	Элементы.ГруппаНеверна.Видимость = Ложь;
	
	Элементы.ГруппаПометкаОтозвана.Видимость = Отозвана;
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	Если Отозвана И ДатаОтзыва > ТекущаяДатаСеанса Тогда
		ТекстЗаголовка = НСтр("ru = 'Будет отозвана'");
		Элементы.ДекорацияПометкаОтозвана.Заголовок = ТекстЗаголовка + " " + Формат(ДатаОтзыва, "ДЛФ=Д");
		Элементы.ДекорацияПометкаОтозванаКартинка.Картинка = БиблиотекаКартинок.ОформлениеЗнакВосклицательныйЗнак;
	ИначеЕсли Отозвана И ДатаОтзыва <= ТекущаяДатаСеанса Тогда
		Элементы.ГруппаСтатусы.ЦветФона = ЦветаСтиля.ЦветФонаВниманиеМЧД;
	КонецЕсли;
	
	Если Не Подписана Тогда
		Элементы.ДекорацияПодписана.Заголовок = НСтр("ru = 'Требуется подписать'");
		Элементы.ГруппаСтатусы.ЦветФона = ЦветаСтиля.ЦветФонаНедействительнаяМЧД;
	Иначе
		Элементы.ДекорацияПодписана.Заголовок = НСтр("ru = 'Подписана'");
		Элементы.ГруппаСтатусы.ЦветФона = ЦветаСтиля.ЦветФонаДействительнаяМЧД;		
	КонецЕсли;
	
	Если (Не Верна) И Подписана Тогда
		Элементы.ГруппаСтатусы.ЦветФона = ЦветаСтиля.ЦветФонаНедействительнаяМЧД;
		Элементы.ГруппаНеверна.Видимость = Истина;
	КонецЕсли;
	
	Если Верна Тогда
		Элементы.ДекорацияНеверна.Заголовок = НСтр("ru = 'Верна'");
		Элементы.ГруппаНеверна.Видимость = Истина;
		Элементы.ДекорацияВернаКартинка.Картинка = БиблиотекаКартинок.ОформлениеЗнакФлажок;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтатусВРеестреФНС) Тогда
		ТекстЗаголовка = НСтр("ru = 'В реестре ФНС: %1'");
		Элементы.ГруппаСтатусВРеестреФНС.Видимость = Истина;
		Элементы.ДекорацияСтатусВРеестреФНС.Заголовок = СтрШаблон(ТекстЗаголовка, СтатусВРеестреФНС);
	Иначе
		Элементы.ГруппаСтатусВРеестреФНС.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтображениеКоманд()
	
	Элементы.КнопкаОтозвать.Видимость = ЗначениеЗаполнено(СтатусВРеестреФНС)
		И СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Зарегистрировано
		ИЛИ СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ДатаНачалаДействияНеНаступила
		ИЛИ СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаОтзыва;
	
	СкрытьКнопкуПометитьОтозванной = ЗначениеЗаполнено(СтатусВРеестреФНС)
		И СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отозвано
		ИЛИ СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ИстекСрокДействия
		ИЛИ СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОтправленоЗаявлениеНаОтзыв;
	Элементы.КнопкаПометитьОтозванной.Видимость = Не СкрытьКнопкуПометитьОтозванной;
	
	ВидимостьКомандВыгрузки =
		СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОтправленоЗаявлениеНаОтзыв
		Или СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отозвано;
	Элементы.КнопкаВыгрузитьЗаявлениеНаОтмену.Видимость = ВидимостьКомандВыгрузки;
	Элементы.КнопкаВыгрузитьПодписьЗаявленияНаОтмену.Видимость = ВидимостьКомандВыгрузки;
	
	Если Отозвана Тогда
		Элементы.КнопкаПометитьОтозванной.Заголовок = НСтр("ru = 'Вернуть в работу'");
	Иначе
		Элементы.КнопкаПометитьОтозванной.Заголовок = НСтр("ru = 'Пометить отозванной'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
