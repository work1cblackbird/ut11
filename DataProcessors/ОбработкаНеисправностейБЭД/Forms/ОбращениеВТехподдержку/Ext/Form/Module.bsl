
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("ТекстОбращения", ТекстОбращения) Тогда
		Элементы.ТекстОбращения.Видимость = Ложь;
		Элементы.ТекстОбращенияНадпись.Видимость = Ложь;
		Элементы.ТекстОбращенияНадписьНеизвестнаяОшибка.Видимость = Истина;
	КонецЕсли;
	
	Параметры.Свойство("КонтекстДиагностики", КонтекстДиагностики);
	Параметры.Свойство("АдресФайлаДляТехПоддержки", АдресФайлаДляТехПоддержки);
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.ИнтеграцияСКоннект") Тогда
		Элементы.Группа1СКоннект.Видимость = Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СообщенияВСлужбуТехническойПоддержки") Тогда
		Элементы.ГруппаСайтИТС.Видимость = Истина;
		Элементы.ГруппаЭлектроннаяПочта.Видимость = Ложь;
	Иначе
		Элементы.ГруппаСайтИТС.Видимость = Ложь;
		Элементы.ГруппаЭлектроннаяПочта.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбработкаНеисправностейБЭДКлиент.ЗаполнитьДанныеСлужбыПоддержки(ТелефонСлужбыПоддержки,
		АдресЭлектроннойПочтыСлужбыПоддержки);
	Элементы.Техподдержка.Заголовок =
		ОбработкаНеисправностейБЭДКлиент.СформироватьГиперссылкуДляОбращенияВСлужбуПоддержки(
			НСтр("ru = 'Вопросы и ответы'"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресЭлектроннойПочтыСлужбыПоддержкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("mailto://" + АдресЭлектроннойПочтыСлужбыПоддержки);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстОбращенияНадписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияБЭДКлиент.СкопироватьВБуферОбмена(ТекстОбращения, 
		НСтр("ru = 'Текст обращения скопирован в буфер обмена'"));
	
КонецПроцедуры

&НаКлиенте
Процедура АрхивСТехИнформациейНадписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайла();
	ПараметрыСохранения.Диалог.Фильтр = НСтр("ru = 'Архивы zip(*.zip)|*.zip'");
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, АдресФайлаДляТехПоддержки, НСтр("ru = 'Отчет об ошибках.zip'"),
		ПараметрыСохранения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьСообщениеВСлужбуТехническойПоддержки(Команда)
	
	Если ТипЗнч(КонтекстДиагностики) = Тип("Структура") И Не ЗначениеЗаполнено(ТекстОбращения) Тогда
		ТекстОбращения = ТекстОбращенияПоКонтекстуДиагностики();
	КонецЕсли;
	
	Если СтрНайти(ТекстОбращения, Символы.ПС) = 0 Тогда
		Тема = Лев(ТекстОбращения, 500);
	Иначе
		Тема = Лев(ТекстОбращения, СтрНайти(ТекстОбращения, Символы.ПС));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Тема) Тогда
		Тема = НСтр("ru = 'Ошибка при работе с ЭДО'");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ТекстОбращения) Тогда
		ТекстОбращения = НСтр("ru = '<Опишите ошибку при работе с ЭДО>'");
	КонецЕсли;
	
	МодульСообщенияВСлужбуТехническойПоддержкиКлиентСервер =
	ОбщегоНазначенияКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиКлиентСервер");
	
	ДанныеСообщения = МодульСообщенияВСлужбуТехническойПоддержкиКлиентСервер.ДанныеСообщения();
	ДанныеСообщения.Получатель                    = "edo";
	ДанныеСообщения.Тема                          = Тема;
	ДанныеСообщения.Сообщение                     = ТекстОбращения;
	ДанныеСообщения.ИспользоватьСтандартныйШаблон = Истина;
	
	МодульСообщенияВСлужбуТехническойПоддержкиКлиент = 
	ОбщегоНазначенияКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиКлиент");
	
	МодульСообщенияВСлужбуТехническойПоддержкиКлиент.ОтправитьСообщение(
		ДанныеСообщения,
		,
		Неопределено,
		Новый ОписаниеОповещения("ПриЗавершенииОтправкиСообщенияВТехПоддержку", ЭтотОбъект));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриЗавершенииОтправкиСообщенияВТехПоддержку(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат.КодОшибки) Тогда
		ПоказатьПредупреждение(, Результат.СообщениеОбОшибке);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ТекстОбращенияПоКонтекстуДиагностики()
	
	Если КонтекстДиагностики.Свойство("Диагностика") И ТипЗнч(КонтекстДиагностики.Диагностика) = Тип("Структура") Тогда
		Диагностика = КонтекстДиагностики.Диагностика;
	Иначе
		Возврат "";
	КонецЕсли;
	Если Диагностика.Свойство("Ошибки") И ТипЗнч(Диагностика.Ошибки) = Тип("Массив") Тогда
		Ошибки = Диагностика.Ошибки;
	Иначе
		Возврат "";
	КонецЕсли;
	ТекстыОбращения = Новый Массив;
	Если Ошибки.Количество() > 1 Тогда
		ТекстыОбращения.Добавить(НСтр("ru = 'При работе с ЭДО произошли ошибки:'"));
	Иначе
		ТекстыОбращения.Добавить(НСтр("ru = 'При работе с ЭДО произошла ошибка:'"));
	КонецЕсли;

	Для Каждого Ошибка Из Ошибки Цикл
		Если ТипЗнч(Ошибка) = Тип("Структура") Тогда
			Если Ошибка.Свойство("ВидОперации") И Ошибка.Свойство("КраткоеПредставлениеОшибки") Тогда
				Если Ошибка.Свойство("УчетнаяЗапись") И ЗначениеЗаполнено(Ошибка.УчетнаяЗапись) Тогда
					ТекстыОбращения.Добавить(
					СтрШаблон(НСтр("ru = ' -При выполнении операции ""%1"" с учетной записью %2 произошла ошибка ""%3""'"),
						Ошибка.ВидОперации, Ошибка.УчетнаяЗапись, Ошибка.КраткоеПредставлениеОшибки));
				Иначе
					ТекстыОбращения.Добавить( 
					СтрШаблон(НСтр("ru = ' -При выполнении операции ""%1"" произошла ошибка ""%2""'"),
						Ошибка.ВидОперации, Ошибка.КраткоеПредставлениеОшибки));
				КонецЕсли;
			КонецЕсли;
			Если Ошибка.Свойство("ПодробноеПредставлениеОшибки") 
				И ЗначениеЗаполнено(Ошибка.ПодробноеПредставлениеОшибки)
				И Ошибка.ПодробноеПредставлениеОшибки <> Ошибка.КраткоеПредставлениеОшибки Тогда
					ТекстыОбращения.Добавить(Ошибка.ПодробноеПредставлениеОшибки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат СтрСоединить(ТекстыОбращения, Символы.ПС);
	
КонецФункции

#КонецОбласти


