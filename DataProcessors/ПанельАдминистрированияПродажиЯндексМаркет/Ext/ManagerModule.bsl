#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Обновляет служебные данные по количеству документов, удовлетворяющих условиям выборки.
//
// Параметры:
//   ДанныеСчетчиков        - Структура - данные по количеству документов:
//     * ИдентификаторЗадания - Строка - идентификатор задания;
//     * ОтгрузитьПоставки    - Число - количество заявок на поставку;
//     * ОтгрузитьПродажи     - Число - количество заказов отгрузки с собственных складов;
//     * ПринятьВозвраты      - Число - количество заявок на возврат.
//   ДанныеТорговойПлощадки - Структура - данные торговой площадки, 
//                              см. Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.РабочееМестоУправленияПродажами.
// Возвращаемое значение:
//   Структура - данные по количеству документов:
//     * ИдентификаторЗадания - Строка - идентификатор задания;
//     * ОтгрузитьПоставки    - Число - количество заявок на поставку;
//     * ОтгрузитьПродажи     - Число - количество заказов отгрузки с собственных складов;
//     * ПринятьВозвраты      - Число - количество заявок на возврат.
//
Функция ПолучитьСчетчики(Знач ДанныеСчетчиков, Знач ДанныеТорговойПлощадки) Экспорт

	Если ДанныеСчетчиков = Неопределено Тогда
		ДанныеСчетчиков = Новый Структура;
		ДанныеСчетчиков.Вставить("ИдентификаторЗадания",    "");
		ДанныеСчетчиков.Вставить("ОтгрузитьПоставки",       0);
		ДанныеСчетчиков.Вставить("ОформитьРаспоряжения",    0);
		ДанныеСчетчиков.Вставить("ПринятьВозвратыПоставок", 0);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Организация", ДанныеТорговойПлощадки.Организация);
	Запрос.УстановитьПараметр("Партнер",     ДанныеТорговойПлощадки.Партнер);
	Запрос.УстановитьПараметр("Контрагент",  ДанныеТорговойПлощадки.Контрагент);

	// ДанныеСчетчиков.ОтгрузитьПоставки
	Запрос.УстановитьПараметр("Договор", ДанныеТорговойПлощадки.ДоговорКомиссия);
	Запрос.Текст = ТекстЗапросаДокументыПродажиКОформлению();

	ТребуетсяПерезаполнение = (ДанныеСчетчиков.ОтгрузитьПоставки <> -1);
	ДанныеСчетчиков.ОтгрузитьПоставки = 0;
	Если ТребуетсяПерезаполнение Тогда
		ВыборкаРезультата = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультата.Следующий() Тогда
			ДанныеСчетчиков.ОтгрузитьПоставки = ВыборкаРезультата.Количество;
		КонецЕсли;
	КонецЕсли;

	// ДанныеСчетчиков.ПринятьВозвратыПоставок
	Запрос.УстановитьПараметр("Договор", ДанныеТорговойПлощадки.ДоговорКомиссия);
	Запрос.Текст = ТекстЗапросаДокументыВозвратыКОформлению();

	ТребуетсяПерезаполнение = (ДанныеСчетчиков.ПринятьВозвратыПоставок <> -1);
	ДанныеСчетчиков.ПринятьВозвратыПоставок = 0;
	Если ТребуетсяПерезаполнение Тогда
		ВыборкаРезультата = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультата.Следующий() Тогда
			ДанныеСчетчиков.ПринятьВозвратыПоставок = ВыборкаРезультата.Количество;
		КонецЕсли;
	КонецЕсли;
	
	// ДанныеСчетчиков.ОформитьРаспоряжения     
	ИспользуемыеХозОперации = Новый СписокЗначений(); 
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РазборкаТоваров); 
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеЗаСчетРасходов);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПеремещениеТоваров);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.СборкаТоваров);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства);
	ИспользуемыеХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой);

	ТекстЗапросаРасчетаСостояний = ТекстЗапросаДокументыРаспоряженияКОформлению(ДанныеТорговойПлощадки.Организация,ИспользуемыеХозОперации,ДанныеТорговойПлощадки.СкладОтгрузки).ТекстЗапросаРасчетаСостояний;
	Запрос = Новый Запрос(ТекстЗапросаРасчетаСостояний);
	ПараметрыОтбора = НакладныеСервер.ПараметрыОтбораРаспоряжений(ДанныеТорговойПлощадки.Организация);
	НакладныеСервер.ДобавитьПараметрыОтбораПоРееструДокументов(Запрос, ПараметрыОтбора);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	        
	ТипыЗаказов = Новый Массив;
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление"));
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказНаПеремещение"));
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказНаСборку"));

	
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Организация",     ДанныеТорговойПлощадки.Организация);
	Запрос.УстановитьПараметр("Склад",           ДанныеТорговойПлощадки.СкладОтгрузки);
	Запрос.УстановитьПараметр("ХозОперация",     ИспользуемыеХозОперации.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ТипыЗаказов",     ТипыЗаказов);  
	Запрос.УстановитьПараметр("Менеджер",        Справочники.Пользователи.ПустаяСсылка());
	Запрос.УстановитьПараметр("Распоряжения",    Новый СписокЗначений());	 
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ДоступностьАктовОРасхождениях = ПолучитьФункциональнуюОпцию("ИспользоватьАктыРасхожденийПослеПеремещения");
	Запрос.УстановитьПараметр("ОтбиратьПоРаспоряжениям", Ложь);
	Запрос.УстановитьПараметр("АктыОРасхожденияхДоступны", ДоступностьАктовОРасхождениях);
	
	ТекстЗапросаСпискаРаспоряжений = ТекстЗапросаДокументыРаспоряженияКОформлению(ДанныеТорговойПлощадки.Организация,ИспользуемыеХозОперации,ДанныеТорговойПлощадки.СкладОтгрузки).ТекстЗапросаСпискаРаспоряжений;
	Запрос.Текст = ТекстЗапросаСпискаРаспоряжений; 
	
	ТребуетсяПерезаполнение = (ДанныеСчетчиков.ОформитьРаспоряжения <> -1);
	ДанныеСчетчиков.ОформитьРаспоряжения = 0;
	Если ТребуетсяПерезаполнение Тогда
		ВыгрузкаРезультата = Запрос.Выполнить().Выгрузить();
		ДанныеСчетчиков.ОформитьРаспоряжения = ВыгрузкаРезультата.Количество();
	КонецЕсли;  
	
	Возврат ДанныеСчетчиков;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаДокументыПродажиКОформлению()

	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаПереопределяемый.Распоряжение КАК Ссылка,
		|	ТаблицаПереопределяемый.Склад КАК Склад
		|ПОМЕСТИТЬ ВтОткрытыеЗаказыКлиентов
		|ИЗ
		|	РегистрСведений.РаспоряженияНаОтгрузкуКВыполнению КАК ТаблицаПереопределяемый
		|ГДЕ
		|	(ТаблицаПереопределяемый.Распоряжение ССЫЛКА Документ.ЗаказКлиента
		|	ИЛИ ТаблицаПереопределяемый.Распоряжение ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента)
		|	И ТаблицаПереопределяемый.Организация = &Организация
		|	И ТаблицаПереопределяемый.Партнер = &Партнер
		|	И ТаблицаПереопределяемый.Контрагент = &Контрагент
		|	И ВЫБОР
		|		КОГДА ТаблицаПереопределяемый.Распоряжение ССЫЛКА Документ.ЗаказКлиента
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаПереопределяемый.Распоряжение КАК Документ.ЗаказКлиента).Договор
		|		КОГДА ТаблицаПереопределяемый.Распоряжение ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаПереопределяемый.Распоряжение КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Договор
		|	КОНЕЦ = &Договор
		|	И ТаблицаПереопределяемый.СостояниеКОформлению <> ЗНАЧЕНИЕ(Перечисление.СостояниеОформленияДокументовПоРаспоряжению.Оформлены)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаспоряженияНаОтгрузку.Распоряжение КАК Ссылка,
		|	РаспоряженияНаОтгрузку.Склад КАК Склад
		|ПОМЕСТИТЬ ВТОстаткиПоЗаказуКлиента
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаОтгрузку.Обороты(
		|			,
		|			,
		|			,
		|			Распоряжение В
		|					(ВЫБРАТЬ
		|						Отбор.Ссылка
		|					ИЗ
		|						ВТОткрытыеЗаказыКлиентов КАК Отбор)
		|				И Склад В
		|					(ВЫБРАТЬ
		|						Отбор.Склад
		|					ИЗ
		|						ВтОткрытыеЗаказыКлиентов КАК Отбор)) КАК РаспоряженияНаОтгрузку
		|ГДЕ
		|	РаспоряженияНаОтгрузку.КОформлениюОборот > 0
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВтДокументыОформленияПереопределяемый.Склад КАК Склад
		|ПОМЕСТИТЬ ВтДокументыОформленияСклады
		|ИЗ
		|	ВтОстаткиПоЗаказуКлиента КАК ВтДокументыОформленияПереопределяемый
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаспоряженияНаОтгрузкуПереопределяемый.Распоряжение КАК ЗаказКлиента,
		|	РаспоряженияНаОтгрузкуПереопределяемый.Склад КАК Склад
		|ПОМЕСТИТЬ ВтДокументыОтобранные
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаОтгрузку КАК РаспоряженияНаОтгрузкуПереопределяемый
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОформленияСклады КАК ВтДокументыОформленияСкладыПереопределяемый
		|		ПО (ВтДокументыОформленияСкладыПереопределяемый.Склад = РаспоряженияНаОтгрузкуПереопределяемый.Склад)
		|ГДЕ
		|	РаспоряженияНаОтгрузкуПереопределяемый.Активность
		|	И РаспоряженияНаОтгрузкуПереопределяемый.КОформлению < 0
		|	И РаспоряженияНаОтгрузкуПереопределяемый.ВидДвиженияРегистра = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженияНакопления.Расход)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаказКлиента,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаПереопределяемый.Ссылка КАК ЗаказКлиента,
		|	ТаблицаПереопределяемый.Склад КАК Склад
		|ПОМЕСТИТЬ ВтЕстьНакладные
		|ИЗ
		|	ВтОстаткиПоЗаказуКлиента КАК ТаблицаПереопределяемый
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОтобранные КАК ДокументыОтобранныеПереопределяемый
		|		ПО ТаблицаПереопределяемый.Ссылка = ДокументыОтобранныеПереопределяемый.ЗаказКлиента
		|		И ТаблицаПереопределяемый.Склад = ДокументыОтобранныеПереопределяемый.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаказКлиента,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаПереопределяемый.Ссылка КАК Ссылка,
		|	ТаблицаПереопределяемый.Склад КАК Склад
		|ПОМЕСТИТЬ ВтСостояниеНакладной
		|ИЗ
		|	ВтОстаткиПоЗаказуКлиента КАК ТаблицаПереопределяемый
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЕстьНакладные КАК ТаблицаЕстьНакладныеПереопределяемый
		|		ПО (ТаблицаЕстьНакладныеПереопределяемый.ЗаказКлиента = ТаблицаПереопределяемый.Ссылка)
		|		И (ТаблицаЕстьНакладныеПереопределяемый.Склад = ТаблицаПереопределяемый.Склад)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаПереопределяемый.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТаблицаПереопределяемый.Склад КАК Склад,
		|	ТаблицаПереопределяемый.Номенклатура КАК Номенклатура,
		|	ТаблицаПереопределяемый.Характеристика КАК Характеристика,
		|	ТаблицаПереопределяемый.Серия КАК Серия,
		|	ТаблицаПереопределяемый.Назначение КАК Назначение,
		|	ТаблицаПереопределяемый.КОтгрузкеОстаток -
		|		ТаблицаПереопределяемый.СобраноОстаток = ТаблицаПереопределяемый.КОформлениюОстаток КАК ОстаткиРавны
		|ПОМЕСТИТЬ ВтОстаткиТоварыКОтгрузке
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(, (ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		|	ИЛИ ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|	ИЛИ ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
		|	ИЛИ ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю)
		|	И ВЫБОР
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаказКлиента).Организация
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Организация
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Организация
		|	КОНЕЦ = &Организация
		|	И ВЫБОР
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаказКлиента).Партнер
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Партнер
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Партнер
		|	КОНЕЦ = &Партнер
		|	И ВЫБОР
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаказКлиента).Контрагент
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Контрагент
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Контрагент
		|	КОНЕЦ = &Контрагент
		|	И ВЫБОР
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаказКлиента).Договор
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Договор
		|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
		|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Договор
		|	КОНЕЦ = &Договор) КАК ТаблицаПереопределяемый
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОтгрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаПереопределяемый.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТаблицаПереопределяемый.Склад КАК Склад
		|ПОМЕСТИТЬ ВтДокументыОтгрузки
		|ИЗ
		|	ВтОстаткиТоварыКОтгрузке КАК ТаблицаПереопределяемый
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОтгрузки,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВтДокументыОтгрузкиПереопределяемый.Склад КАК Склад
		|ПОМЕСТИТЬ ВтДокументыОтгрузкиСклады
		|ИЗ
		|	ВтДокументыОтгрузки КАК ВтДокументыОтгрузкиПереопределяемый
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыКОтгрузкеПереопределяемый.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузкеПереопределяемый.Склад КАК Склад
		|ПОМЕСТИТЬ ВтТоварыКОтгрузкеПереопределяемый
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузкеПереопределяемый
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОтгрузкиСклады КАК ВтДокументыОтгрузкиСкладыПереопределяемый
		|		ПО (ВтДокументыОтгрузкиСкладыПереопределяемый.Склад = ТоварыКОтгрузкеПереопределяемый.Склад)
		|ГДЕ
		|	ТоварыКОтгрузкеПереопределяемый.Активность
		|	И ТоварыКОтгрузкеПереопределяемый.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеПереопределяемый.ДокументОтгрузки,
		|	ТоварыКОтгрузкеПереопределяемый.Склад
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКОтгрузкеПереопределяемый.КОтгрузке) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеПереопределяемый.ДокументОтгрузки,
		|	ТоварыКОтгрузкеПереопределяемый.Склад
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузкеПереопределяемый
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОтгрузкиСклады КАК ВтДокументыОтгрузкиСкладыПереопределяемый
		|		ПО (ВтДокументыОтгрузкиСкладыПереопределяемый.Склад = ТоварыКОтгрузкеПереопределяемый.Склад)
		|ГДЕ
		|	ТоварыКОтгрузкеПереопределяемый.Активность
		|	И ТоварыКОтгрузкеПереопределяемый.КОтгрузке > 0
		|	И ТоварыКОтгрузкеПереопределяемый.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеПереопределяемый.ДокументОтгрузки,
		|	ТоварыКОтгрузкеПереопределяемый.Склад
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКОтгрузкеПереопределяемый.Собрано) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОтгрузки,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаПереопределяемый.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТаблицаПереопределяемый.Склад КАК Склад
		|ПОМЕСТИТЬ ВтЕстьОрдера
		|ИЗ
		|	ВтДокументыОтгрузки КАК ТаблицаПереопределяемый
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТоварыКОтгрузкеПереопределяемый КАК ВтТоварыКОтгрузкеПереопределяемый
		|		ПО ТаблицаПереопределяемый.Склад = ВтТоварыКОтгрузкеПереопределяемый.Склад
		|		И ТаблицаПереопределяемый.ДокументОтгрузки = ВтТоварыКОтгрузкеПереопределяемый.ДокументОтгрузки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОтгрузки,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаПереопределяемый.ДокументОтгрузки КАК Ссылка
		|ПОМЕСТИТЬ ВтСостояниеОрдера
		|ИЗ
		|	ВтОстаткиТоварыКОтгрузке КАК ТаблицаПереопределяемый
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЕстьОрдера КАК ТаблицаЕстьОрдераПереопределяемый
		|		ПО (ТаблицаЕстьОрдераПереопределяемый.ДокументОтгрузки = ТаблицаПереопределяемый.ДокументОтгрузки)
		|		И (ТаблицаЕстьОрдераПереопределяемый.Склад = ТаблицаПереопределяемый.Склад)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыПереопределяемый
		|		ПО (СпрСкладыПереопределяемый.Ссылка = ТаблицаПереопределяемый.Склад)
		|		И (СпрСкладыПереопределяемый.ИспользоватьОрдернуюСхемуПриОтгрузке)
		|		И (СпрСкладыПереопределяемый.ДатаНачалаОрдернойСхемыПриОтгрузке <= &ТекущаяДата)
		|ГДЕ
		|	ВЫБОР
		|		КОГДА ТаблицаЕстьОрдераПереопределяемый.ДокументОтгрузки ЕСТЬ NULL
		|		И НЕ СпрСкладыПереопределяемый.Ссылка ЕСТЬ NULL
		|			ТОГДА 1
		|		КОГДА ТаблицаПереопределяемый.ОстаткиРавны
		|			ТОГДА 0
		|		ИНАЧЕ 3
		|	КОНЕЦ > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТаблицаПереопределяемый.ДокументОтгрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ВтСостояниеНакладнойПереопределяемый.Ссылка ЕСТЬ NULL
		|			ТОГДА ВтСостояниеОрдераПереопределяемый.Ссылка
		|		ИНАЧЕ ВтСостояниеНакладнойПереопределяемый.Ссылка
		|	КОНЕЦ КАК ДокументОтгрузки
		|ПОМЕСТИТЬ ВтНовыеОрдера
		|ИЗ
		|	ВтСостояниеНакладной КАК ВтСостояниеНакладнойПереопределяемый
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВтСостояниеОрдера КАК ВтСостояниеОрдераПереопределяемый
		|		ПО ВтСостояниеНакладнойПереопределяемый.Ссылка = ВтСостояниеОрдераПереопределяемый.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОтгрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1001
		|	КОЛИЧЕСТВО(*) КАК Количество
		|ИЗ
		|	ВтНовыеОрдера КАК ТоварыКОтгрузкеПереопределяемый
		|ГДЕ
		|	НЕ ТоварыКОтгрузкеПереопределяемый.ДокументОтгрузки ЕСТЬ NULL";

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаДокументыВозвратыКОформлению()

	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Таблица.ДокументПоступления КАК ДокументПоступления,
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Назначение КАК Назначение,
		|	Таблица.Склад КАК Склад,
		|	0 КАК СостояниеПоступления,
		|	Таблица.КОформлениюНакладныхПоРаспоряжениюОстаток КАК КОформлениюНакладных,
		|	Таблица.КОформлениюПоступленийПоОрдерамОстаток КАК КОформлениюПоступленийПоОрдерам,
		|	Таблица.КОформлениюОрдеровОстаток КАК КОформлениюОрдеров
		|ПОМЕСТИТЬ ВтДокументыОформленияПоОстаткам
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(, (ДокументПоступления ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|	ИЛИ ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|	ИЛИ ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровОтХранителя
		|	И ВЫРАЗИТЬ(ДокументПоступления КАК
		|		Документ.ПоступлениеТоваровОтХранителя).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя))
		|	И ВЫБОР
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Организация
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Организация
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровОтХранителя
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ПоступлениеТоваровОтХранителя).Организация
		|	КОНЕЦ = &Организация
		|	И ВЫБОР
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Партнер
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ВозвратТоваровОтКлиента).Партнер
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровОтХранителя
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ПоступлениеТоваровОтХранителя).Партнер
		|	КОНЕЦ = &Партнер
		|	И ВЫБОР
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Контрагент
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ВозвратТоваровОтКлиента).Контрагент
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровОтХранителя
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ПоступлениеТоваровОтХранителя).Контрагент
		|	КОНЕЦ = &Контрагент
		|	И ВЫБОР
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Договор
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ВозвратТоваровОтКлиента).Договор
		|		КОГДА ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровОтХранителя
		|			ТОГДА ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ПоступлениеТоваровОтХранителя).Договор
		|	КОНЕЦ = &Договор) КАК Таблица
		|ГДЕ
		|	Таблица.КОформлениюНакладныхПоРаспоряжениюОстаток > 0
		|	ИЛИ Таблица.КОформлениюПоступленийПоОрдерамОстаток > 0
		|	ИЛИ Таблица.КОформлениюОрдеровОстаток > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПоступления,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.ДокументПоступления КАК ДокументПоступления,
		|	Таблица.Склад КАК Склад,
		|	СУММА(Таблица.КОформлениюНакладных) КАК КОформлениюНакладныхВсего,
		|	СУММА(Таблица.КОформлениюПоступленийПоОрдерам) КАК КОформлениюПоступленийПоОрдерамВсего,
		|	СУММА(Таблица.КОформлениюОрдеров) КАК КОформлениюОрдеровВсего
		|ПОМЕСТИТЬ ВтДокументыОформленияОстаткиВсего
		|ИЗ
		|	ВтДокументыОформленияПоОстаткам КАК Таблица
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ДокументПоступления,
		|	Таблица.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПоступления,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Таблица.ДокументПоступления КАК ДокументПоступления,
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Назначение КАК Назначение,
		|	Таблица.Склад КАК Склад,
		|	МАКСИМУМ(Таблица.КОформлениюНакладных) КАК КОформлениюНакладных,
		|	МАКСИМУМ(Таблица.КОформлениюПоступленийПоОрдерам) КАК КОформлениюПоступленийПоОрдерам,
		|	МАКСИМУМ(Таблица.КОформлениюОрдеров) КАК КОформлениюОрдеров,
		|	ЕСТЬNULL(ТаблицаОстаткиВсего.КОформлениюНакладныхВсего, 0) КАК КОформлениюНакладныхВсего,
		|	ЕСТЬNULL(ТаблицаОстаткиВсего.КОформлениюПоступленийПоОрдерамВсего, 0) КАК КОформлениюПоступленийПоОрдерамВсего,
		|	ЕСТЬNULL(ТаблицаОстаткиВсего.КОформлениюОрдеровВсего, 0) КАК КОформлениюОрдеровВсего
		|ПОМЕСТИТЬ ВтДокументыОформления
		|ИЗ
		|	(ВЫБРАТЬ
		|		Таблица.ДокументПоступления КАК ДокументПоступления,
		|		Таблица.Номенклатура КАК Номенклатура,
		|		Таблица.Характеристика КАК Характеристика,
		|		Таблица.Назначение КАК Назначение,
		|		Таблица.Склад КАК Склад,
		|		Таблица.КОформлениюНакладных КАК КОформлениюНакладных,
		|		Таблица.КОформлениюПоступленийПоОрдерам КАК КОформлениюПоступленийПоОрдерам,
		|		Таблица.КОформлениюОрдеров КАК КОформлениюОрдеров
		|	ИЗ
		|		ВтДокументыОформленияПоОстаткам КАК Таблица
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Таблица.ДокументПоступления,
		|		Таблица.Номенклатура,
		|		Таблица.Характеристика,
		|		Таблица.Назначение,
		|		Таблица.Склад,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению КАК Таблица
		|	ГДЕ
		|		Таблица.ДокументПоступления В
		|			(ВЫБРАТЬ
		|				ТаблицаДокументов.ДокументПоступления
		|			ИЗ
		|				ВтДокументыОформленияПоОстаткам КАК ТаблицаДокументов)) КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДокументыОформленияОстаткиВсего КАК ТаблицаОстаткиВсего
		|		ПО Таблица.ДокументПоступления = ТаблицаОстаткиВсего.ДокументПоступления
		|		И Таблица.Склад = ТаблицаОстаткиВсего.Склад
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ДокументПоступления,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Склад,
		|	ЕСТЬNULL(ТаблицаОстаткиВсего.КОформлениюНакладныхВсего, 0),
		|	ЕСТЬNULL(ТаблицаОстаткиВсего.КОформлениюПоступленийПоОрдерамВсего, 0),
		|	ЕСТЬNULL(ТаблицаОстаткиВсего.КОформлениюОрдеровВсего, 0)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПоступления,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Таблица.ДокументПоступления КАК Ссылка,
		|	Таблица.Склад КАК Склад
		|ПОМЕСТИТЬ ВтДокументыССостояниями
		|ИЗ
		|	ВтДокументыОформления КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению КАК ТаблицаОрдераПереопределяемый
		|		ПО Таблица.ДокументПоступления = ТаблицаОрдераПереопределяемый.ДокументПоступления
		|		И Таблица.Номенклатура = ТаблицаОрдераПереопределяемый.Номенклатура
		|		И Таблица.Характеристика = ТаблицаОрдераПереопределяемый.Характеристика
		|		И Таблица.Назначение = ТаблицаОрдераПереопределяемый.Назначение
		|		И Таблица.Склад = ТаблицаОрдераПереопределяемый.Склад
		|		И (ТаблицаОрдераПереопределяемый.Активность)
		|		И (ТаблицаОрдераПереопределяемый.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|		И (ТаблицаОрдераПереопределяемый.Регистратор ССЫЛКА Документ.ПриходныйОрдерНаТовары)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению КАК ТаблицаНакладныеПереопределяемый
		|		ПО Таблица.ДокументПоступления = ТаблицаНакладныеПереопределяемый.ДокументПоступления
		|		И Таблица.Номенклатура = ТаблицаНакладныеПереопределяемый.Номенклатура
		|		И Таблица.Характеристика = ТаблицаНакладныеПереопределяемый.Характеристика
		|		И Таблица.Назначение = ТаблицаНакладныеПереопределяемый.Назначение
		|		И Таблица.Склад = ТаблицаНакладныеПереопределяемый.Склад
		|		И (ТаблицаНакладныеПереопределяемый.Активность)
		|		И (ТаблицаНакладныеПереопределяемый.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента)
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ДокументПоступления,
		|	Таблица.Склад
		|ИМЕЮЩИЕ
		|	НЕ (МАКСИМУМ(ВЫБОР
		|		КОГДА Таблица.ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|		ИЛИ Таблица.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровОтХранителя
		|			ТОГДА 4
		|		КОГДА Таблица.КОформлениюНакладных = 0
		|			ТОГДА 0
		|		КОГДА Таблица.КОформлениюНакладных > 0
		|		И ЕСТЬNULL(ТаблицаНакладныеПереопределяемый.КОформлениюНакладныхПоРаспоряжению, 0) = 0
		|			ТОГДА 1
		|		КОГДА Таблица.КОформлениюНакладных > 0
		|		И ЕСТЬNULL(ТаблицаНакладныеПереопределяемый.КОформлениюНакладныхПоРаспоряжению, 0) > 0
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ) В (0, 4)
		|	И МАКСИМУМ(ВЫБОР
		|		КОГДА НЕ Таблица.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|		ИЛИ Таблица.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|		И Таблица.Склад.ДатаНачалаОрдернойСхемыПриПоступлении > &ТекущаяДата
		|			ТОГДА 4
		|		КОГДА ЕСТЬNULL(ТаблицаОрдераПереопределяемый.КОформлениюПоступленийПоОрдерам, 0) = 0
		|		И Таблица.КОформлениюОрдеров = 0
		|			ТОГДА 0
		|		КОГДА Таблица.КОформлениюОрдеров > 0
		|		И ЕСТЬNULL(ТаблицаОрдераПереопределяемый.КОформлениюПоступленийПоОрдерам, 0) = 0
		|			ТОГДА 1
		|		КОГДА ЕСТЬNULL(ТаблицаОрдераПереопределяемый.КОформлениюПоступленийПоОрдерам, 0) > 0
		|			ТОГДА 3
		|		ИНАЧЕ 0
		|	КОНЕЦ) В (0, 4))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1001
		|	КОЛИЧЕСТВО(*) КАК Количество
		|ИЗ
		|	ВтДокументыССостояниями КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК Реестр
		|		ПО Таблица.Ссылка = Реестр.Ссылка
		|		И Таблица.Склад = Реестр.МестоХранения.Ключ";

	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаДокументыРаспоряженияКОформлению(Организация,ИспользуемыеХозОперации,Склад)
	
	ПараметрыОтбора = НакладныеСервер.ПараметрыОтбораРаспоряжений(Организация,,, ИспользуемыеХозОперации,); 
	
	ТекстыЗапросов = Новый Структура("ТекстЗапросаРасчетаСостояний,ТекстЗапросаСпискаРаспоряжений");
	
	Пакет = Новый Массив;
	Выборка = Новый Массив;
	Состояния = НакладныеСервер.СостоянияПоХозоперациям(ИспользуемыеХозОперации.ВыгрузитьЗначения());
	Для Каждого КЗ Из Состояния Цикл
		Пакет.Добавить(НакладныеСервер.ТекстЗапросаСостояний(КЗ.Ключ, ПараметрыОтбора, КЗ.Значение));
		
		Если КЗ.Ключ = "СостоянияРасходныхОрдеров" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияРасходныхОрдеров.Распоряжение КАК Распоряжение,
			|	СостоянияРасходныхОрдеров.Склад КАК Склад,
			|	СостоянияРасходныхОрдеров.Склад КАК Отправитель,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЗаказНаВнутреннееПотребление)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ СостоянияРасходныхОрдеров.Получатель
			|	КОНЕЦ КАК Получатель,
			|	ВЫБОР
			|		КОГДА ИСТИНА
			|			ТОГДА NULL
			|	КОНЕЦ КАК ХозОперация,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) В (&ТипыЗаказов)
			|			ТОГДА 0
			|		ИНАЧЕ 4
			|	КОНЕЦ КАК СостояниеНакладной,
			|	СостоянияРасходныхОрдеров.Состояние КАК СостояниеРасходногоОрдера,
			|	ВЫБОР
			|		КОГДА СпрСкладыПолучатель.Ссылка ЕСТЬ NULL
			|				ИЛИ ВЫБОР
			|					КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЗаказНаПеремещение)
			|						ТОГДА ВЫРАЗИТЬ(СостоянияРасходныхОрдеров.Распоряжение КАК Документ.ЗаказНаПеремещение).ВариантПриемкиТоваров
			|					КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЗаказНаСборку)
			|						ТОГДА ВЫРАЗИТЬ(СостоянияРасходныхОрдеров.Распоряжение КАК Документ.ЗаказНаСборку).ВариантПриемкиТоваров
			|				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеПриходногоОрдера,
			|	ИСТИНА КАК НакладнаяНаОтгрузку,
			|	ЛОЖЬ КАК НакладнаяНаПриемку
			|ИЗ
			|	ВТСостоянияРасходныхОрдеров КАК СостоянияРасходныхОрдеров
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыПолучатель
			|		ПО (СпрСкладыПолучатель.Ссылка = СостоянияРасходныхОрдеров.Получатель)
			|			И (СпрСкладыПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении)
			|			И (СпрСкладыПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении <= &НачалоТекущегоДня)");
		ИначеЕсли КЗ.Ключ = "СостоянияПриходныхОрдеров" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияПриходныхОрдеров.Распоряжение КАК Распоряжение,
			|	СостоянияПриходныхОрдеров.Склад КАК Склад,
			|	ВЫБОР
			|		КОГДА СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ПрочееОприходованиеТоваров
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ СостоянияПриходныхОрдеров.Отправитель
			|	КОНЕЦ КАК Отправитель,
			|	СостоянияПриходныхОрдеров.Склад КАК Получатель,
			|	ВЫБОР
			|		КОГДА ИСТИНА
			|			ТОГДА NULL
			|	КОНЕЦ КАК ХозОперация,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияПриходныхОрдеров.Распоряжение) В (&ТипыЗаказов)
			|			ТОГДА 0
			|		ИНАЧЕ 4
			|	КОНЕЦ КАК СостояниеНакладной,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|				ИЛИ ВЫБОР
			|					КОГДА СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.СборкаТоваров
			|						ТОГДА ВЫБОР
			|								КОГДА ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.СборкаТоваров).ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
			|									ТОГДА НЕОПРЕДЕЛЕНО
			|								ИНАЧЕ ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.СборкаТоваров).ВариантПриемкиТоваров
			|							КОНЕЦ
			|				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеРасходногоОрдера,
			|	СостоянияПриходныхОрдеров.Состояние КАК СостояниеПриходногоОрдера,
			|	ЛОЖЬ КАК НакладнаяНаОтгрузку,
			|	ИСТИНА КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияПриходныхОрдеров КАК СостоянияПриходныхОрдеров
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = СостоянияПриходныхОрдеров.Отправитель)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)
			|ГДЕ
			|	НЕ СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ЗаказНаПеремещение
			|	И НЕ СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ПеремещениеТоваров
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СостоянияПриходныхОрдеров.Распоряжение,
			|	СостоянияПриходныхОрдеров.Отправитель,
			|	СостоянияПриходныхОрдеров.Отправитель,
			|	СостоянияПриходныхОрдеров.Склад,
			|	NULL,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияПриходныхОрдеров.Распоряжение) В (&ТипыЗаказов)
			|			ТОГДА 0
			|		ИНАЧЕ 4
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|				ИЛИ ВЫБОР
			|					КОГДА СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ПеремещениеТоваров
			|						ТОГДА ВЫБОР
			|								КОГДА НЕ ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.ПеремещениеТоваров).ПеремещениеПоЗаказам
			|									ТОГДА НЕОПРЕДЕЛЕНО
			|								ИНАЧЕ ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.ПеремещениеТоваров).ВариантПриемкиТоваров
			|							КОНЕЦ
			|				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		ИНАЧЕ 0
			|	КОНЕЦ,
			|	СостоянияПриходныхОрдеров.Состояние,
			|	ИСТИНА,
			|	ЛОЖЬ
			|ИЗ
			|	ВтСостоянияПриходныхОрдеров КАК СостоянияПриходныхОрдеров
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = СостоянияПриходныхОрдеров.Отправитель)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)
			|ГДЕ
			|	СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ЗаказНаПеремещение
			|		ИЛИ СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ПеремещениеТоваров
			|");
		ИначеЕсли КЗ.Ключ = "СостоянияПеремещений" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияПеремещений.Распоряжение КАК Распоряжение,
			|	ДокЗаказНаПеремещение.СкладОтправитель КАК Склад,
			|	ДокЗаказНаПеремещение.СкладОтправитель КАК Отправитель,
			|	ДокЗаказНаПеремещение.СкладПолучатель КАК Получатель,
			|	NULL КАК ХозОперация,
			|	СостоянияПеремещений.Состояние КАК СостояниеНакладной,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|			ТОГДА 4
			|		КОГДА СостоянияПеремещений.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеРасходногоОрдера,
			|	ВЫБОР
			|		КОГДА СпрСкладыПолучатель.Ссылка ЕСТЬ NULL
			|				ИЛИ ДокЗаказНаПеремещение.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		КОГДА СостоянияПеремещений.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеПриходногоОрдера,
			|	ИСТИНА КАК НакладнаяНаОтгрузку,
			|	ЛОЖЬ КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияПеремещений КАК СостоянияПеремещений
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК ДокЗаказНаПеремещение
			|		ПО СостоянияПеремещений.Распоряжение = ДокЗаказНаПеремещение.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = ДокЗаказНаПеремещение.СкладОтправитель)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыПолучатель
			|		ПО (СпрСкладыПолучатель.Ссылка = ДокЗаказНаПеремещение.СкладПолучатель)
			|			И (СпрСкладыПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении)
			|			И (СпрСкладыПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении <= &НачалоТекущегоДня)");
		ИначеЕсли КЗ.Ключ = "СостоянияСборок" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияСборок.Распоряжение КАК Распоряжение,
			|	ДокЗаказНаСборку.Склад КАК Склад,
			|	ДокЗаказНаСборку.Склад КАК Отправитель,
			|	ДокЗаказНаСборку.Склад КАК Получатель,
			|	NULL КАК ХозОперация,
			|	СостоянияСборок.Состояние КАК СостояниеНакладной,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|			ТОГДА 4
			|		КОГДА СостоянияСборок.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеРасходногоОрдера,
			|	ВЫБОР
			|		КОГДА СпрСкладыПолучатель.Ссылка ЕСТЬ NULL
			|				ИЛИ ДокЗаказНаСборку.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		КОГДА СостоянияСборок.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеПриходногоОрдера,
			|	ИСТИНА КАК НакладнаяНаОтгрузку,
			|	ИСТИНА КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияСборок КАК СостоянияСборок
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДокЗаказНаСборку
			|		ПО СостоянияСборок.Распоряжение = ДокЗаказНаСборку.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = ДокЗаказНаСборку.Склад)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыПолучатель
			|		ПО (СпрСкладыПолучатель.Ссылка = ДокЗаказНаСборку.Склад)
			|			И (СпрСкладыПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении)
			|			И (СпрСкладыПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении <= &НачалоТекущегоДня)");
		ИначеЕсли КЗ.Ключ = "СостоянияВнутреннихПотреблений" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияВнутреннихПотреблений.Распоряжение КАК Распоряжение,
			|	СостоянияВнутреннихПотреблений.Склад КАК Склад,
			|	СостоянияВнутреннихПотреблений.Склад КАК Отправитель,
			|	НЕОПРЕДЕЛЕНО КАК Получатель,
			|	ВЫБОР
			|		КОГДА ИСТИНА
			|			ТОГДА NULL
			|	КОНЕЦ КАК ХозОперация,
			|	СостоянияВнутреннихПотреблений.Состояние КАК СостояниеНакладной,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|			ТОГДА 4
			|		КОГДА СостоянияВнутреннихПотреблений.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеРасходногоОрдера,
			|	4 КАК СостояниеПриходногоОрдера,
			|	ИСТИНА КАК НакладнаяНаОтгрузку,
			|	ЛОЖЬ КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияВнутреннихПотреблений КАК СостоянияВнутреннихПотреблений
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = СостоянияВнутреннихПотреблений.Склад)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)");

		КонецЕсли;
		
	КонецЦикла;
	
	ТекстыЗапросов.ТекстЗапросаРасчетаСостояний = СтрСоединить(Пакет, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	ТекстыЗапросов.ТекстЗапросаСпискаРаспоряжений =
		СтрЗаменить(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Распоряжение КАК Ссылка,
		|	ВложенныйЗапрос.Склад КАК Склад,
		|	ВложенныйЗапрос.Отправитель КАК Отправитель,
		|	ВложенныйЗапрос.Получатель КАК Получатель,
		|	ВложенныйЗапрос.ХозОперация КАК ХозОперация,
		|	МАКСИМУМ(ВложенныйЗапрос.СостояниеНакладной) КАК СостояниеНакладной,
		|	МАКСИМУМ(ВложенныйЗапрос.СостояниеРасходногоОрдера) КАК СостояниеОрдераНаОтгрузку,
		|	МАКСИМУМ(ВложенныйЗапрос.СостояниеПриходногоОрдера) КАК СостояниеОрдераНаПриемку,
		|	МАКСИМУМ(ВложенныйЗапрос.НакладнаяНаОтгрузку) КАК НакладнаяНаОтгрузку,
		|	МАКСИМУМ(ВложенныйЗапрос.НакладнаяНаПриемку) КАК НакладнаяНаПриемку
		|ПОМЕСТИТЬ ВтОстаткиСостояния
		|ИЗ
		|	ТекстЗапросаВложенный КАК ВложенныйЗапрос
		|ГДЕ
		|	НЕ &ОтбиратьПоРаспоряжениям ИЛИ ВложенныйЗапрос.Распоряжение В (&Распоряжения)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Распоряжение,
		|	ВложенныйЗапрос.Склад,
		|	ВложенныйЗапрос.Отправитель,
		|	ВложенныйЗапрос.Получатель,
		|	ВложенныйЗапрос.ХозОперация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РеестрДокументов.НомерДокументаИБ КАК Номер,
		|	ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1,1,1)) КАК Дата,
		|	ТИПЗНАЧЕНИЯ(РеестрДокументов.Ссылка) КАК ТипРаспоряжения,
		|	ОстаткиСостояния.СостояниеНакладной КАК СостояниеНакладной,
		|	ОстаткиСостояния.СостояниеОрдераНаОтгрузку КАК СостояниеОрдераНаОтгрузку,
		|	ОстаткиСостояния.СостояниеОрдераНаПриемку КАК СостояниеОрдераНаПриемку,
		|	ОстаткиСостояния.НакладнаяНаОтгрузку КАК НакладнаяНаОтгрузку,
		|	ОстаткиСостояния.НакладнаяНаПриемку КАК НакладнаяНаПриемку,
		|	РеестрДокументов.Организация КАК Организация,
		|	РеестрДокументов.Подразделение КАК Подразделение,
		|	ОстаткиСостояния.Склад КАК Склад,
		|	ОстаткиСостояния.Отправитель КАК Отправитель,
		|	ОстаткиСостояния.Получатель КАК Получатель,
		|	РеестрДокументов.Ответственный КАК Менеджер,
		|	ЕСТЬNULL(ОстаткиСостояния.ХозОперация, РеестрДокументов.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
		|	ОстаткиСостояния.Ссылка КАК Ссылка,
		|	РеестрДокументов.Комментарий КАК Комментарий
		|ИЗ
		|	ВтОстаткиСостояния КАК ОстаткиСостояния
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|		ПО ОстаткиСостояния.Ссылка = РеестрДокументов.Ссылка
		|			И (НЕ РеестрДокументов.ДополнительнаяЗапись)
		|ГДЕ
		|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиСостояния.Ссылка) В(
		|					ТИП(Документ.ЗаказНаПеремещение),
		|					ТИП(Документ.ПеремещениеТоваров)) ТОГДА
		|				НЕ &ОтбиратьПоСкладу ИЛИ ОстаткиСостояния.Склад В (&Склад)
		|				И (&АктыОРасхожденияхДоступны
		|					ИЛИ ОстаткиСостояния.СостояниеНакладной <> 0 И ОстаткиСостояния.СостояниеНакладной <> 4
		|					ИЛИ ОстаткиСостояния.СостояниеОрдераНаОтгрузку <> 0 И ОстаткиСостояния.СостояниеОрдераНаОтгрузку <> 4)
		|			ИНАЧЕ		
		|				ИСТИНА
		|			КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата", "ТекстЗапросаВложенный", "(" + СтрСоединить(Выборка, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()) + ")");   
		
		Возврат ТекстыЗапросов;

КонецФункции     	

#КонецОбласти

#КонецЕсли
