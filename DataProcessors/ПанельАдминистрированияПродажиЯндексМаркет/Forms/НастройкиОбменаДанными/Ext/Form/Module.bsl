
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УчетнаяЗапись                = Параметры.УчетнаяЗаписьМаркетплейса;
	ПоказыватьВыборУчетнойЗаписи = Параметры.ПоказыватьВыборУчетнойЗаписи;

	Если Не ЗначениеЗаполнено(УчетнаяЗапись) И Не ПоказыватьВыборУчетнойЗаписи Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ИнициализироватьФормуПоУчетнойЗаписи();
	КонецЕсли;    
	
	Если ПоказыватьВыборУчетнойЗаписи Тогда
		Элементы.ГруппаШапка.ТекущаяСтраница       = Элементы.ГруппаВыборУчетнойЗаписи;
		Элементы.ФормаСохранитьНастройки.Видимость = Ложь;
	Иначе
		Элементы.ГруппаШапка.ТекущаяСтраница       = Элементы.ГруппаБезВыбораУчетнойЗаписи;
		Элементы.ФормаСохранитьНастройки.Видимость = Истина;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры   

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_УчетныеЗаписиМаркетплейсов" 
			И Параметр = УчетнаяЗапись Тогда
		ИнициализироватьФормуПоУчетнойЗаписи();
		УстановитьВидимостьДоступность();
		
		Если Не Элементы.Страницы.ТекущаяСтраница.Видимость Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеМагазина;
			УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
		КонецЕсли;
	
	ИначеЕсли ИмяСобытия = "Запись_НаборКонстант" 
				И (Источник = "ИспользоватьОтгрузкуБезПереходаПраваСобственности"
					Или Источник = "ИспользоватьКорректировкиРеализаций"
					Или Источник = "ИспользоватьКомиссиюПриПродажах" 
					Или Источник = "ИспользоватьПартнеровКакКонтрагентов"
					Или Источник = "ИспользоватьСоглашенияСКлиентами"
					Или Источник = "ИспользоватьДоговорыСКлиентами") Тогда
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПродажи Тогда
			УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
		КонецЕсли;
	
	ИначеЕсли ИмяСобытия = "Запись_Партнеры" 
				И (Параметр = Партнер
					Или Параметр = РозничныйПартнер) Тогда
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПродажи Тогда
			УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
		КонецЕсли;
	
	ИначеЕсли ИмяСобытия = "Запись_Контрагенты" 
				И (Параметр = Контрагент
					Или Параметр = РозничныйКонтрагент) Тогда
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПродажи Тогда
			УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
		КонецЕсли;
	
	ИначеЕсли ИмяСобытия = "ТорговыеПредложения_ПослеЗаписи" Тогда
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПродажи Тогда
			УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УчетнаяЗаписьПриИзменении(Элемент)

	УстановитьВидимостьДоступность(ТекущийЭлемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)

	УстановитьВидимостьДоступность(ТекущаяСтраница.Имя);

КонецПроцедуры

&НаКлиенте
Процедура СхемаРаботыПриИзменении(Элемент)

	УстановитьВидимостьДоступность(ТекущийЭлемент.Имя);

КонецПроцедуры

&НаКлиенте
Процедура СпособОтраженияПродажРеализацияПриИзменении(Элемент)

	УстановитьВидимостьДоступность(Элементы.СтраницаПродажи.Имя);

КонецПроцедуры

&НаКлиенте
Процедура СпособОтраженияПродажКомиссияПриИзменении(Элемент)

	УстановитьВидимостьДоступность(Элементы.СтраницаПродажи.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ЗаполнитьУсловияПродажПоУмолчанию(Истина);
	УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ЗаполнитьДоговорПоУмолчанию(Истина);
	УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорВзаимозачетыСоздание(Элемент, СтандартнаяОбработка)
	
	ПродажиКлиент.ОткрытьФормуСозданияДоговора(ЭтотОбъект, 
		Элемент, 
		"ДоговорВзаимозачеты", 
		Партнер, 
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеКомиссияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(СоглашениеКомиссия) Тогда
		ЗаполнитьУсловияПродажПоСоглашению(Истина);
	КонецЕсли;
	
	УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеКомиссияНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ДанныеФормыСтруктура = Новый Структура;
	ДанныеФормыСтруктура.Вставить("Партнер",    Партнер);
	ДанныеФормыСтруктура.Вставить("Контрагент", Контрагент);
	
	ПараметрыВыбораСоглашения = ПродажиКлиент.ПараметрыНачалаВыбораСоглашенияСКлиентом();
	
	ПараметрыВыбораСоглашения.Элемент               = Элемент;
	ПараметрыВыбораСоглашения.Организация           = Организация;
	ПараметрыВыбораСоглашения.Партнер               = Партнер;
	ПараметрыВыбораСоглашения.Документ              = СоглашениеКомиссия;
	ПараметрыВыбораСоглашения.ДатаДокумента         = ОбщегоНазначенияУТВызовСервера.ДатаСеанса();
	ПараметрыВыбораСоглашения.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию");
	ПараметрыВыбораСоглашения.КомиссионныеПродажи25 = Истина;
	ПараметрыВыбораСоглашения.ДанныеФормыСтруктура  = ДанныеФормыСтруктура;
	
	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Организация",           Организация));
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию")));
	Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
	ПродажиКлиент.НачалоВыбораСоглашенияСКлиентом(ПараметрыВыбораСоглашения, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКомиссияСоздание(Элемент, СтандартнаяОбработка)
	
	ПродажиКлиент.ОткрытьФормуСозданияДоговора(ЭтотОбъект, 
		Элемент, 
		"ДоговорКомиссия", 
		Партнер, 
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РозничныйПартнерПриИзменении(Элемент)
	
	ЗаполнитьУсловияПродажПоУмолчанию(Ложь);
	УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура РозничныйКонтрагентПриИзменении(Элемент)
	
	ЗаполнитьДоговорПоУмолчанию(Ложь);
	УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеРеализацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(СоглашениеРеализация) Тогда
		ЗаполнитьУсловияПродажПоСоглашению(Ложь);
	КонецЕсли;
	
	УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеРеализацияНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)

	ДанныеФормыСтруктура = Новый Структура;
	ДанныеФормыСтруктура.Вставить("Партнер",    РозничныйПартнер);
	ДанныеФормыСтруктура.Вставить("Контрагент", РозничныйКонтрагент);
	
	ПараметрыВыбораСоглашения = ПродажиКлиент.ПараметрыНачалаВыбораСоглашенияСКлиентом();
	
	ПараметрыВыбораСоглашения.Элемент               = Элемент;
	ПараметрыВыбораСоглашения.Организация           = Организация;
	ПараметрыВыбораСоглашения.Партнер               = РозничныйПартнер;
	ПараметрыВыбораСоглашения.Документ              = СоглашениеРеализация;
	ПараметрыВыбораСоглашения.ДатаДокумента         = ОбщегоНазначенияУТВызовСервера.ДатаСеанса();
	ПараметрыВыбораСоглашения.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияКлиенту");
	ПараметрыВыбораСоглашения.ДанныеФормыСтруктура  = ДанныеФормыСтруктура;
	
	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Организация",           Организация));
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияКлиенту")));
	Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
	ПродажиКлиент.НачалоВыбораСоглашенияСКлиентом(ПараметрыВыбораСоглашения, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорРеализацияСоздание(Элемент, СтандартнаяОбработка)
	
	ПродажиКлиент.ОткрытьФормуСозданияДоговора(ЭтотОбъект, 
		Элемент, 
		"ДоговорРеализация", 
		РозничныйПартнер, 
		СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьСкрытьПодсказку(Команда)
	
	Элементы.ГруппаСпособОтраженияПродажКомментарий.Видимость = Не Элементы.ГруппаСпособОтраженияПродажКомментарий.Видимость;
	Элементы.ПоказатьСкрытьПодсказку.Заголовок                = ?(Элементы.ГруппаСпособОтраженияПродажКомментарий.Видимость,
																	НСтр("ru = 'Скрыть подсказку'"),
																	НСтр("ru = 'Показать подсказку'"));
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)

	СменитьСтраницу("_Назад");

КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)

	СменитьСтраницу("_Далее");

КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)

	Если СохранитьНаСервере() Тогда
		Закрыть(УчетнаяЗапись);
		ОповеститьОбИзменении(УчетнаяЗапись);
		Оповестить("ЯндексМаркет_НастройкиОбменаДанными", УчетнаяЗапись);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеПолученияРекомендованныхСвязей(Команда)

	ПрефиксРасписания      = "ЯндексМаркет_ПолучениеРекомендацийПоСклейкеТовараЯндексМаркет_";
	НаименованиеРасписания = ПрефиксыРегламентныхЗаданий.НайтиПоЗначению(ПрефиксРасписания).Представление;

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",        УчетнаяЗапись);
	ПараметрыОткрытия.Вставить("ИмяМетаданных",                    "ПолучениеРекомендацийПоСклейкеТовараЯндексМаркет");
	ПараметрыОткрытия.Вставить("Наименование",                     НаименованиеРасписания);
	ПараметрыОткрытия.Вставить("Префикс",                          ПрефиксРасписания);  
	ПараметрыОткрытия.Вставить("ОткрыватьПодОграниченнымиПравами", Истина);

	ОткрытьФорму("Справочник.УчетныеЗаписиМаркетплейсов.Форма.РегламентноеЗадание",
		ПараметрыОткрытия,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбновлениеНастроекРегламентногоЗаданияЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеОтправкиНаМодерациюСвязейТоваров(Команда)
	
	ПрефиксРасписания      = "ЯндексМаркет_ОтправкаНаМодерациюСвязейТоваровЯндексМаркет_";
	НаименованиеРасписания = ПрефиксыРегламентныхЗаданий.НайтиПоЗначению(ПрефиксРасписания).Представление;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",        УчетнаяЗапись);
	ПараметрыОткрытия.Вставить("ИмяМетаданных",                    "ОтправкаНаМодерациюСвязейТоваровЯндексМаркет");
	ПараметрыОткрытия.Вставить("Наименование",                     НаименованиеРасписания);
	ПараметрыОткрытия.Вставить("Префикс",                          ПрефиксРасписания); 
	ПараметрыОткрытия.Вставить("ОткрыватьПодОграниченнымиПравами", Истина);
		
	ОткрытьФорму("Справочник.УчетныеЗаписиМаркетплейсов.Форма.РегламентноеЗадание",
		ПараметрыОткрытия,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбновлениеНастроекРегламентногоЗаданияЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеПолученияСтатусовМодерации(Команда)

	ПрефиксРасписания      = "ЯндексМаркет_ПолучениеСтатусовМодерацииТоваровЯндексМаркет_";
	НаименованиеРасписания = ПрефиксыРегламентныхЗаданий.НайтиПоЗначению(ПрефиксРасписания).Представление;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",        УчетнаяЗапись);
	ПараметрыОткрытия.Вставить("ИмяМетаданных",                    "ПолучениеСтатусовМодерацииТоваровЯндексМаркет");
	ПараметрыОткрытия.Вставить("Наименование",                     НаименованиеРасписания);
	ПараметрыОткрытия.Вставить("Префикс",                          ПрефиксРасписания);     
	ПараметрыОткрытия.Вставить("ОткрыватьПодОграниченнымиПравами", Истина);

	ОткрытьФорму("Справочник.УчетныеЗаписиМаркетплейсов.Форма.РегламентноеЗадание", 
		ПараметрыОткрытия,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбновлениеНастроекРегламентногоЗаданияЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеВыгрузкиЦен(Команда)

	ПрефиксРасписания      = "ЯндексМаркет_ВыгрузкаУстановленныхЦенЯндексМаркет_";
	НаименованиеРасписания = ПрефиксыРегламентныхЗаданий.НайтиПоЗначению(ПрефиксРасписания).Представление;

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",        УчетнаяЗапись);
	ПараметрыОткрытия.Вставить("ИмяМетаданных",                    "ВыгрузкаУстановленныхЦенЯндексМаркет");
	ПараметрыОткрытия.Вставить("Наименование",                     НаименованиеРасписания);
	ПараметрыОткрытия.Вставить("Префикс",                          ПрефиксРасписания);  
	ПараметрыОткрытия.Вставить("ОткрыватьПодОграниченнымиПравами", Истина);

	ОткрытьФорму("Справочник.УчетныеЗаписиМаркетплейсов.Форма.РегламентноеЗадание", 
		ПараметрыОткрытия,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбновлениеНастроекРегламентногоЗаданияЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыЦен(Команда)

	ОткрытьФорму("Справочник.ВидыЦен.Форма.ФормаСписка",
		,
		ЭтотОбъект,
		Истина);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеОбновленияЦен(Команда)

	ОткрытьФорму("Справочник.ВидыЦен.Форма.ФормаНастройкиРасписанияАвтообновленияЦен",
		,
		ЭтотОбъект,
		Истина);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеВыгрузкиОстатковТоваров(Команда)
	
	ПрефиксРасписания      = "ЯндексМаркет_ВыгрузкаОстатковТоваровЯндексМаркет_";
	НаименованиеРасписания = ПрефиксыРегламентныхЗаданий.НайтиПоЗначению(ПрефиксРасписания).Представление;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",        УчетнаяЗапись);
	ПараметрыОткрытия.Вставить("ИмяМетаданных",                    "ВыгрузкаОстатковТоваровЯндексМаркет");
	ПараметрыОткрытия.Вставить("Наименование",                     НаименованиеРасписания);
	ПараметрыОткрытия.Вставить("Префикс",                          ПрефиксРасписания);  
	ПараметрыОткрытия.Вставить("ОткрыватьПодОграниченнымиПравами", Истина);
	
	ОткрытьФорму("Справочник.УчетныеЗаписиМаркетплейсов.Форма.РегламентноеЗадание",
		ПараметрыОткрытия,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбновлениеНастроекРегламентногоЗаданияЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеЗагрузкиДанныхОПродажах(Команда)
	
	ПрефиксРасписания      = "ЯндексМаркет_ЗагрузкаДанныхОПродажах_";
	НаименованиеРасписания = ПрефиксыРегламентныхЗаданий.НайтиПоЗначению(ПрефиксРасписания).Представление;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",        УчетнаяЗапись);
	ПараметрыОткрытия.Вставить("ИмяМетаданных",                    "ЗагрузкаИнформацииОПродажахТоваровЧерезТорговуюПлощадку");
	ПараметрыОткрытия.Вставить("Наименование",                     НаименованиеРасписания);
	ПараметрыОткрытия.Вставить("Префикс",                          ПрефиксРасписания);  
	ПараметрыОткрытия.Вставить("ОткрыватьПодОграниченнымиПравами", Истина);
	
	ОткрытьФорму("Справочник.УчетныеЗаписиМаркетплейсов.Форма.РегламентноеЗадание",
		ПараметрыОткрытия,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбновлениеНастроекРегламентногоЗаданияЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность(ТекущийЭлементИмя = Неопределено)
	
	Если ТекущийЭлементИмя = Элементы.УчетнаяЗапись.Имя 
			Или ТекущийЭлементИмя = Неопределено Тогда
		Элементы.ФормаДалее.Доступность = ЗначениеЗаполнено(УчетнаяЗапись);
	КонецЕсли;
	
	Если ТекущийЭлементИмя = Элементы.СхемаРаботы.Имя 
			Или ТекущийЭлементИмя = Неопределено Тогда
		Элементы.СтраницаОстаткиТоваров.Видимость = (СхемаРаботы = ПредопределенноеЗначение("Перечисление.СхемыРаботыТорговыхПлощадок.FBS"))
														Или (СхемаРаботы = ПредопределенноеЗначение("Перечисление.СхемыРаботыТорговыхПлощадок.Express"));
		Элементы.СтраницаПродажи.Видимость		  = (СхемаРаботы = ПредопределенноеЗначение("Перечисление.СхемыРаботыТорговыхПлощадок.FBO"));
	КонецЕсли;
	
	Если Элементы.ГруппаШапка.ТекущаяСтраница = Элементы.ГруппаВыборУчетнойЗаписи Тогда
		Элементы.ФормаДалее.КнопкаПоУмолчанию = Элементы.ФормаДалее.Доступность;
		Возврат;
		
	ИначеЕсли ТекущийЭлементИмя = Неопределено Тогда
		ТекущийЭлементИмя = Элементы.Страницы.ТекущаяСтраница.Имя;
	КонецЕсли;
	
	Если ТекущийЭлементИмя = Элементы.СтраницаДанныеМагазина.Имя Тогда
		Элементы.ФормаНазад.Доступность = ПоказыватьВыборУчетнойЗаписи;
		Элементы.ФормаДалее.Доступность = Истина;
		
	ИначеЕсли ТекущийЭлементИмя = Элементы.СтраницаПубликацияТоваров.Имя Тогда
		Элементы.ФормаНазад.Доступность = Истина;
		Элементы.ФормаДалее.Доступность = Истина;
	
	ИначеЕсли ТекущийЭлементИмя = Элементы.СтраницаЦены.Имя Тогда
		Элементы.ФормаНазад.Доступность = Истина;
		Элементы.ФормаДалее.Доступность = Элементы.СтраницаОстаткиТоваров.Видимость Или Элементы.СтраницаПродажи.Видимость;
		
	ИначеЕсли ТекущийЭлементИмя = Элементы.СтраницаОстаткиТоваров.Имя Тогда
		Элементы.ФормаНазад.Доступность = Истина;
		Элементы.ФормаДалее.Доступность = Ложь;
		
	ИначеЕсли ТекущийЭлементИмя = Элементы.СтраницаПродажи.Имя Тогда
		УстановитьПривилегированныйРежим(Истина);
		ИспользоватьОтгрузкуБезПереходаПраваСобственности = ПолучитьФункциональнуюОпцию("ИспользоватьОтгрузкуБезПереходаПраваСобственности");
		ИспользоватьКорректировкиРеализаций               = ПолучитьФункциональнуюОпцию("ИспользоватьКорректировкиРеализаций");
		ИспользоватьКомиссиюПриПродажах                   = ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах");
		ИспользоватьПартнеровКакКонтрагентов              = ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов");
		ИспользоватьСоглашенияСКлиентами                  = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
		ИспользоватьДоговорыСКлиентами                    = ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСКлиентами");
		УстановитьПривилегированныйРежим(Ложь);
		
		КонстантыСервиса                 = ИнтеграцияСЯндексМаркетКлиентСервер.КонстантыСервиса();
		СпособОтраженияПродаж_Реализация = КонстантыСервиса.СпособОтраженияПродажРеализация;
		СпособОтраженияПродаж_Комиссия   = КонстантыСервиса.СпособОтраженияПродажКомиссия;
		
		Элементы.СпособОтраженияПродажРеализация.Доступность                   = ИспользоватьОтгрузкуБезПереходаПраваСобственности;
		Элементы.ГруппаСпособОтраженияПродажРеализацияНеДоступен.Видимость     = Не ИспользоватьОтгрузкуБезПереходаПраваСобственности;
		Элементы.ГруппаСпособОтраженияПродажРеализацияОграничения.Видимость    = ИспользоватьОтгрузкуБезПереходаПраваСобственности 
																					И Не ИспользоватьКорректировкиРеализаций;
		Элементы.СпособОтраженияПродажКомиссия.Доступность                     = ИспользоватьКомиссиюПриПродажах;
		Элементы.ГруппаСпособОтраженияПродажКомиссияНеДоступен.Видимость       = Не ИспользоватьКомиссиюПриПродажах;
		
		Элементы.ГруппаСкладОтгрузки.Видимость                                 = (СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация);
		
		Элементы.ДекорацияСпособОтраженияПродажКомментарийРеализация.Видимость = (СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация);
		Элементы.ДекорацияСпособОтраженияПродажКомментарийКомиссия.Видимость   = (СпособОтраженияПродаж = СпособОтраженияПродаж_Комиссия);
		
		Элементы.ГруппаСведенияОЮридическомЛице.Доступность  = ИспользоватьОтгрузкуБезПереходаПраваСобственности 
																		И (СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация)
																	Или ИспользоватьКомиссиюПриПродажах 
																		И (СпособОтраженияПродаж = СпособОтраженияПродаж_Комиссия);
		Элементы.ДекорацияПартнер.Заголовок                  = ?(СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация, 
																	НСтр("ru = 'Партнер:'"), 
																	НСтр("ru = 'Комиссионер:'"));
		Элементы.ДекорацияПартнер.Ширина                     = ?(СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация, 8, 9);
		Элементы.Партнер.Ширина                              = ?(СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация, 26, 25);
		Элементы.ГруппаКонтрагент.Видимость                  = Не ИспользоватьПартнеровКакКонтрагентов;
		Элементы.ДекорацияКонтрагент.Ширина                  = ?(СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация, 8, 9);
		Элементы.Контрагент.Ширина                           = ?(СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация, 26, 25);
		Элементы.ГруппаДоговорВзаимозачеты.Видимость         = (СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация);
		Элементы.ГруппаСоглашениеДоговорКомиссия.Видимость   = (СпособОтраженияПродаж = СпособОтраженияПродаж_Комиссия);
		Элементы.ГруппаСоглашениеКомиссия.Видимость          = ИспользоватьСоглашенияСКлиентами;
		Элементы.ГруппаДоговорКомиссия.Доступность           = ЗначениеЗаполнено(Организация)
																И ЗначениеЗаполнено(Партнер)
																И (ЗначениеЗаполнено(Контрагент)
																	Или ИспользоватьПартнеровКакКонтрагентов);
		Элементы.ГруппаДоговорКомиссия.Видимость             = ИспользоватьДоговорыСКлиентами
																И (ИспользоватьСоглашенияСКлиентами
																		И ЗначениеЗаполнено(СоглашениеКомиссия)
																		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СоглашениеКомиссия, "ИспользуютсяДоговорыКонтрагентов")
																	Или Не ИспользоватьСоглашенияСКлиентами);

		Элементы.ГруппаСведенияОРозничномПокупателе.Видимость   = (СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация);
		Элементы.ГруппаСведенияОРозничномПокупателе.Доступность = ИспользоватьОтгрузкуБезПереходаПраваСобственности;
		Элементы.ГруппаРозничныйКонтрагент.Видимость            = Не ИспользоватьПартнеровКакКонтрагентов;
		Элементы.ГруппаСоглашениеРеализация.Видимость           = ИспользоватьСоглашенияСКлиентами;
		Элементы.ГруппаДоговорРеализация.Доступность            = ЗначениеЗаполнено(Организация)
																	И ЗначениеЗаполнено(РозничныйПартнер)
																	И (ЗначениеЗаполнено(РозничныйКонтрагент)
																		Или ИспользоватьПартнеровКакКонтрагентов);
		Элементы.ГруппаДоговорРеализация.Видимость              = ИспользоватьДоговорыСКлиентами
																	И (ИспользоватьСоглашенияСКлиентами
																		И ЗначениеЗаполнено(СоглашениеРеализация)
																		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СоглашениеРеализация, "ИспользуютсяДоговорыКонтрагентов")
																			Или Не ИспользоватьСоглашенияСКлиентами);
		
		Элементы.ГруппаРегламентноеЗаданиеПродажи.Доступность   = ИспользоватьОтгрузкуБезПереходаПраваСобственности 
																		И (СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация)
																	Или ИспользоватьКомиссиюПриПродажах 
																		И (СпособОтраженияПродаж = СпособОтраженияПродаж_Комиссия);
		Элементы.ДекорацияРегламентноеЗаданиеПродажи1.Картинка  = ?(СпособОтраженияПродаж = СпособОтраженияПродаж_Реализация, 
																		БиблиотекаКартинок.Этап4СинийБЭД, 
																		БиблиотекаКартинок.Этап3СинийБЭД);
		
		Элементы.ФормаНазад.Доступность = Истина;
		Элементы.ФормаДалее.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.ФормаДалее.КнопкаПоУмолчанию              = Элементы.ФормаДалее.Доступность;
	Элементы.ФормаСохранитьНастройки.КнопкаПоУмолчанию = Не Элементы.ФормаДалее.Доступность;

КонецПроцедуры

&НаСервере
Процедура ИнициализироватьФормуПоУчетнойЗаписи()
	
	ПараметрыВыбора = Новый Структура("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
	ДанныеВыбора    = Перечисления.СхемыРаботыТорговыхПлощадок.ПолучитьДанныеВыбора(ПараметрыВыбора);
	
	Элементы.СхемаРаботы.СписокВыбора.Очистить();
	Для Каждого ЗначениеВыбора Из ДанныеВыбора Цикл
		Элементы.СхемаРаботы.СписокВыбора.Добавить(ЗначениеВыбора.Значение, ЗначениеВыбора.Представление);
	КонецЦикла;   
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеУчетнойЗаписи = ИнтеграцияСЯндексМаркетСервер.ДанныеУчетнойЗаписиЯндексМаркет(УчетнаяЗапись);
	УстановитьПривилегированныйРежим(Ложь);
	
	ВключенаСинхронизация    = Не ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки; 
	Организация              = ДанныеУчетнойЗаписи.Организация;
	СхемаРаботы              = ДанныеУчетнойЗаписи.СхемаРаботы;
	ИдентификаторАккаунта    = ДанныеУчетнойЗаписи.ИдентификаторАккаунта;
	ИдентификаторКабинета    = ДанныеУчетнойЗаписи.ИдентификаторКабинета;
	ИдентификаторКампании    = ДанныеУчетнойЗаписи.ИдентификаторМагазина;
	НомерМагазина            = ДанныеУчетнойЗаписи.ИдентификаторКлиента;
	Логин                    = ИнтеграцияСЯндексМаркетСервер.ДанныеАвторизацииЛогин(ИдентификаторАккаунта); 
	ДополнительнаяИнформация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'ID кампании - %1, авторизация под %2'"),
									ИдентификаторКампании,
									Логин);
	ИсточникКатегории        = ДанныеУчетнойЗаписи.ИсточникКатегории;
	ЦенаПродажи              = ДанныеУчетнойЗаписи.ЦенаПродажи;

	СпособОтраженияПродаж    = ДанныеУчетнойЗаписи.СпособОтраженияПродаж;
	СкладОтгрузки            = ДанныеУчетнойЗаписи.СкладОтгрузки;
	Партнер                  = ДанныеУчетнойЗаписи.Партнер;
	Контрагент               = ДанныеУчетнойЗаписи.Контрагент;
	ДоговорВзаимозачеты      = ДанныеУчетнойЗаписи.ДоговорВзаимозачеты;
	СоглашениеКомиссия       = ДанныеУчетнойЗаписи.СоглашениеКомиссия;
	ДоговорКомиссия          = ДанныеУчетнойЗаписи.ДоговорКомиссия;
	РозничныйПартнер         = ДанныеУчетнойЗаписи.РозничныйПартнер;
	РозничныйКонтрагент      = ДанныеУчетнойЗаписи.РозничныйКонтрагент;
	СоглашениеРеализация     = ДанныеУчетнойЗаписи.СоглашениеРеализация;
	ДоговорРеализация        = ДанныеУчетнойЗаписи.ДоговорРеализация;

	ЗаполнитьСкладПоУчетнойЗаписи();
	ЗаполнитьИнформациюПоРегламентнымЗаданиям(Истина);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСкладПоУчетнойЗаписи()

	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СоответствияОбъектовМаркетплейсов.ИдентификаторОбъектаМаркетплейса КАК ИдентификаторОбъектаМаркетплейса,
		|	СоответствияОбъектовМаркетплейсов.НаименованиеОбъектаМаркетплейса КАК НаименованиеОбъектаМаркетплейса,
		|	СоответствияОбъектовМаркетплейсов.Объект1С КАК Склад
		|ИЗ
		|	РегистрСведений.СоответствияОбъектовМаркетплейсов КАК СоответствияОбъектовМаркетплейсов
		|ГДЕ
		|	СоответствияОбъектовМаркетплейсов.УчетнаяЗаписьМаркетплейса = &УчетнаяЗапись
		|	И СоответствияОбъектовМаркетплейсов.ВидОбъектаМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовМаркетплейсов.Склад)";

	Запрос.Параметры.Вставить("УчетнаяЗапись",          УчетнаяЗапись);
	Запрос.УстановитьПараметр("ВидОбъектаМаркетплейса", Перечисления.ВидыОбъектовМаркетплейсов.Склад);

	ВыборкаДанных = Запрос.Выполнить().Выбрать();
		
	Если ВыборкаДанных.Следующий() Тогда
		Склад               = ВыборкаДанных.Склад;
		ИдентификаторСклада = ВыборкаДанных.ИдентификаторОбъектаМаркетплейса;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СохранитьНаСервере()   
	
	Результат = Ложь;

	Попытка
		Результат = ОбновитьДанныеУчетнойЗаписи();
		
		Если СхемаРаботы = Перечисления.СхемыРаботыТорговыхПлощадок.FBS
				Или СхемаРаботы = Перечисления.СхемыРаботыТорговыхПлощадок.Express Тогда
			ЗаписатьСоответствиеСкладов();
		КонецЕсли;

	Исключение
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При сохранении настроек учетной записи ""%1"" возникли ошибки: %2'",
				ОбщегоНазначения.КодОсновногоЯзыка()),
			УчетнаяЗапись,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Возврат Ложь;
	КонецПопытки;

	Возврат Результат;

КонецФункции

&НаСервере
Функция ОбновитьДанныеУчетнойЗаписи()  
	
	Результат = Ложь;
	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.УчетныеЗаписиМаркетплейсов");
		ЭлементБлокировкиДанных.УстановитьЗначение("Ссылка", УчетнаяЗапись);
		БлокировкаДанных.Заблокировать();

		Если СхемаРаботы = Перечисления.СхемыРаботыТорговыхПлощадок.FBO Тогда
			КонстантыСервиса = ИнтеграцияСЯндексМаркетКлиентСервер.КонстантыСервиса();
			
			Если СпособОтраженияПродаж = КонстантыСервиса.СпособОтраженияПродажРеализация Тогда
				СоглашениеКомиссия = Справочники.СоглашенияСКлиентами.ПустаяСсылка();
				ДоговорКомиссия    = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			Иначе
				СкладОтгрузки        = Справочники.Склады.ПустаяСсылка();
				ДоговорВзаимозачеты  = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
				РозничныйПартнер     = Справочники.Партнеры.ПустаяСсылка();
				РозничныйКонтрагент  = Справочники.Контрагенты.ПустаяСсылка();
				СоглашениеРеализация = Справочники.СоглашенияСКлиентами.ПустаяСсылка();
				ДоговорРеализация    = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			КонецЕсли;
			
		Иначе
			СкладОтгрузки        = Справочники.Склады.ПустаяСсылка();
			Партнер              = Справочники.Партнеры.ПустаяСсылка();
			Контрагент           = Справочники.Контрагенты.ПустаяСсылка();
			СоглашениеКомиссия   = Справочники.СоглашенияСКлиентами.ПустаяСсылка();
			ДоговорКомиссия      = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			ДоговорВзаимозачеты  = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			РозничныйПартнер     = Справочники.Партнеры.ПустаяСсылка();
			РозничныйКонтрагент  = Справочники.Контрагенты.ПустаяСсылка();
			СоглашениеРеализация = Справочники.СоглашенияСКлиентами.ПустаяСсылка();
			ДоговорРеализация    = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
		
		УчетнаяЗаписьОбъект                                           = УчетнаяЗапись.ПолучитьОбъект();
		УчетнаяЗаписьОбъект.Организация                               = Организация;
		УчетнаяЗаписьОбъект.ИсточникКатегории                         = ИсточникКатегории;
		УчетнаяЗаписьОбъект.ИдентификаторАккаунта                     = ИдентификаторАккаунта;
		УчетнаяЗаписьОбъект.ИдентификаторКабинета                     = ИдентификаторКабинета;
		УчетнаяЗаписьОбъект.ИдентификаторМагазина                     = ИдентификаторКампании;
		УчетнаяЗаписьОбъект.ИдентификаторКлиента                      = НомерМагазина;
		УчетнаяЗаписьОбъект.СхемаРаботы                               = СхемаРаботы;
		УчетнаяЗаписьОбъект.НеОбновлятьДанныеТорговойПлощадки         = Не ВключенаСинхронизация;
		
		УчетнаяЗаписьОбъект.Партнер                                   = Партнер;
		УчетнаяЗаписьОбъект.Контрагент                                = Контрагент;
		УчетнаяЗаписьОбъект.Соглашение                                = СоглашениеКомиссия;
		УчетнаяЗаписьОбъект.ДоговорПродажиЧерезСкладыТорговойПлощадки = ДоговорКомиссия;
		
		УчетнаяЗаписьОбъект.ИзменитьДополнительнуюНастройку("СпособОтраженияПродаж", СпособОтраженияПродаж);
		УчетнаяЗаписьОбъект.ИзменитьДополнительнуюНастройку("СкладОтгрузки",         СкладОтгрузки);
		УчетнаяЗаписьОбъект.ИзменитьДополнительнуюНастройку("ДоговорВзаимозачеты",   ДоговорВзаимозачеты);
		УчетнаяЗаписьОбъект.ИзменитьДополнительнуюНастройку("РозничныйПартнер",      РозничныйПартнер);
		УчетнаяЗаписьОбъект.ИзменитьДополнительнуюНастройку("РозничныйКонтрагент",   РозничныйКонтрагент);
		УчетнаяЗаписьОбъект.ИзменитьДополнительнуюНастройку("СоглашениеРеализация",  СоглашениеРеализация);
		УчетнаяЗаписьОбъект.ИзменитьДополнительнуюНастройку("ДоговорРеализация",     ДоговорРеализация);
		
		ТабличнаяЧастьВидовЦен = УчетнаяЗаписьОбъект.ВидыЦен; 
		СтрЦенаПродажи         = НСтр("ru = 'Цена продажи'");
		СтрокаЦеныПродажи      = ТабличнаяЧастьВидовЦен.Найти(СтрЦенаПродажи, "ИмяНастройки");
		
		Если СтрокаЦеныПродажи = Неопределено Тогда
			СтрокаЦеныПродажи              = ТабличнаяЧастьВидовЦен.Добавить();
			СтрокаЦеныПродажи.ИмяНастройки = СтрЦенаПродажи;
			СтрокаЦеныПродажи.ВидЦены      = ЦенаПродажи;
		Иначе
			СтрокаЦеныПродажи.ВидЦены = ЦенаПродажи;
		КонецЕсли;
		
		УчетнаяЗаписьОбъект.Записать();
		
		Результат = Истина;
		ЗафиксироватьТранзакцию(); 
		
	Исключение
		ОтменитьТранзакцию();  
		
		СообщениеПользователю = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());  
		СтрокаПоиска = НСтр("ru = 'У пользователя недостаточно прав на исполнение операции над базой данных.'");
		
		Если СтрНайти(СообщениеПользователю, СтрокаПоиска) > 0 Тогда 
			СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У пользователя недостаточно прав на исполнение операции над базой данных. Проверьте доступность работы с организацией ""%1"" в настройках профиля доступа.'"), 
				Организация);
		КонецЕсли;    
		
		ОбщегоНазначения.СообщитьПользователю(СообщениеПользователю);
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаписатьСоответствиеСкладов()

	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СоответствияОбъектовМаркетплейсов");
		ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
		ЭлементБлокировкиДанных.УстановитьЗначение("ВидОбъектаМаркетплейса",    Перечисления.ВидыОбъектовМаркетплейсов.Склад);
		БлокировкаДанных.Заблокировать();

		НаборЗаписей = РегистрыСведений.СоответствияОбъектовМаркетплейсов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.УчетнаяЗаписьМаркетплейса.Установить(УчетнаяЗапись);
		НаборЗаписей.Отбор.ВидОбъектаМаркетплейса.Установить(Перечисления.ВидыОбъектовМаркетплейсов.Склад);
		НаборЗаписей.Прочитать();
	
		Если НаборЗаписей.Количество() > 0 Тогда
			Запись = НаборЗаписей[0];
		Иначе
			Запись = НаборЗаписей.Добавить();
		КонецЕсли;
	
		Запись.УчетнаяЗаписьМаркетплейса        = УчетнаяЗапись;
		Запись.ВидОбъектаМаркетплейса           = ПредопределенноеЗначение("Перечисление.ВидыОбъектовМаркетплейсов.Склад");
		Запись.ИдентификаторОбъектаМаркетплейса = ИдентификаторСклада;
		Запись.Объект1С                         = Склад;
		Запись.НаименованиеОбъектаМаркетплейса  = СокрЛП(Склад);
		Запись.ДатаАктуальности                 = ТекущаяДатаСеанса();
	
		НаборЗаписей.Записать();
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ОбщегоНазначения.СообщитьПользователю(
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Функция СоответствиеПереключенияСтраниц()

	СоответствиеПереключенияСтраниц = Новый Соответствие;
	
	СоответствиеПереключенияСтраниц.Вставить("СтраницаДанныеМагазина_Далее",    "СтраницаПубликацияТоваров");
	СоответствиеПереключенияСтраниц.Вставить("СтраницаПубликацияТоваров_Назад", "СтраницаДанныеМагазина");
	СоответствиеПереключенияСтраниц.Вставить("СтраницаПубликацияТоваров_Далее", "СтраницаЦены");
	СоответствиеПереключенияСтраниц.Вставить("СтраницаЦены_Назад",              "СтраницаПубликацияТоваров");
	СоответствиеПереключенияСтраниц.Вставить("СтраницаЦены_Далее",              "СтраницаОстаткиТоваров");
	СоответствиеПереключенияСтраниц.Вставить("СтраницаОстаткиТоваров_Назад",    "СтраницаЦены");
	СоответствиеПереключенияСтраниц.Вставить("СтраницаОстаткиТоваров_Далее",    "СтраницаПродажи");
	СоответствиеПереключенияСтраниц.Вставить("СтраницаПродажи_Назад",           "СтраницаОстаткиТоваров");
	
	Возврат СоответствиеПереключенияСтраниц;

КонецФункции

&НаКлиенте
Процедура СменитьСтраницу(Постфикс)
	
	ОчиститьСообщения();
	
	Если Элементы.ГруппаШапка.ТекущаяСтраница = Элементы.ГруппаВыборУчетнойЗаписи
			И Постфикс = "_Далее" Тогда       
		Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда  
			ТекстОшибки = НСтр("ru = 'Выберите магазин'",);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Иначе
			Элементы.ГруппаШапка.ТекущаяСтраница       = Элементы.ГруппаБезВыбораУчетнойЗаписи;
			Элементы.ФормаСохранитьНастройки.Видимость = Истина;
			
			ИнициализироватьФормуПоУчетнойЗаписи();
			УстановитьВидимостьДоступность();
		КонецЕсли;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанныеМагазина
				И Постфикс = "_Назад" Тогда
		Элементы.ГруппаШапка.ТекущаяСтраница       = Элементы.ГруппаВыборУчетнойЗаписи;
		Элементы.ФормаНазад.Доступность            = Ложь;
		Элементы.ФормаСохранитьНастройки.Видимость = Ложь;
		
	Иначе
		СоответствиеПереключенияСтраниц   = СоответствиеПереключенияСтраниц();
		Элементы.Страницы.ТекущаяСтраница = Элементы[СоответствиеПереключенияСтраниц[Элементы.Страницы.ТекущаяСтраница.Имя + Постфикс]];
		Если Не Элементы.Страницы.ТекущаяСтраница.Видимость Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы[СоответствиеПереключенияСтраниц[Элементы.Страницы.ТекущаяСтраница.Имя + Постфикс]];
		КонецЕсли;
		
		УстановитьВидимостьДоступность(Элементы.Страницы.ТекущаяСтраница.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеНастроекРегламентногоЗаданияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	ЗаполнитьИнформациюПоРегламентнымЗаданиям();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюПоРегламентнымЗаданиям(ЗаполнитьПрефиксы = Ложь)

	СписокОбновляемыхЭлементов = Новый СписокЗначений;
	СписокОбновляемыхЭлементов.Добавить("ДекорацияРасписаниеПолученияРекомендованныхСвязей",   "ЯндексМаркет_ПолучениеРекомендацийПоСклейкеТовараЯндексМаркет_");
	СписокОбновляемыхЭлементов.Добавить("ДекорацияРасписаниеОтправкиНаМодерациюСвязейТоваров", "ЯндексМаркет_ОтправкаНаМодерациюСвязейТоваровЯндексМаркет_");
	СписокОбновляемыхЭлементов.Добавить("ДекорацияРасписаниеПолученияСтатусовМодерации",       "ЯндексМаркет_ПолучениеСтатусовМодерацииТоваровЯндексМаркет_");
	СписокОбновляемыхЭлементов.Добавить("ДекорацияРасписаниеВыгрузкиЦен",                      "ЯндексМаркет_ВыгрузкаУстановленныхЦенЯндексМаркет_");
	СписокОбновляемыхЭлементов.Добавить("ДекорацияРасписаниеВыгрузкиОстатков",                 "ЯндексМаркет_ВыгрузкаОстатковТоваровЯндексМаркет_");
	СписокОбновляемыхЭлементов.Добавить("ДекорацияРасписаниеЗагрузкиДанныхОПродажах",          "ЯндексМаркет_ЗагрузкаДанныхОПродажах_");
    
    УстановитьПривилегированныйРежим(Истина);
	ПрефиксыРегламентныхЗаданий          = ИнтеграцияСЯндексМаркетСервер.ПрефиксыРегламентныхЗаданий();  
	СостояниеРегламентныхЗаданийМагазина = ИнтеграцияСЯндексМаркетСервер.ПолучитьСостоянияРегламентныхЗаданийМагазина(УчетнаяЗапись, ПрефиксыРегламентныхЗаданий);
	ОтключенныеРегламентныеЗадания       = СостояниеРегламентныхЗаданийМагазина.ОтключенныеРегламентныеЗадания;
    УстановитьПривилегированныйРежим(Ложь);

	Для Каждого ОбновляемыйЭлемент Из СписокОбновляемыхЭлементов Цикл
		ЭлементОбновления           = Элементы[ОбновляемыйЭлемент.Значение];
		ЭлементОбновления.Видимость = (ОтключенныеРегламентныеЗадания.НайтиПоЗначению(ОбновляемыйЭлемент.Представление) <> Неопределено);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУсловияПродажПоУмолчанию(Комиссия = Истина)
	
	ИспользоватьСоглашенияСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
	РеквизитПартнер                  = ?(Комиссия, Партнер, РозничныйПартнер);
	РеквизитКонтрагент               = ?(Комиссия, Контрагент, РозничныйКонтрагент);
	РеквизитСоглашение               = ?(Комиссия, СоглашениеКомиссия, СоглашениеРеализация);
	ХозяйственнаяОперация            = ?(Комиссия, Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию, Перечисления.ХозяйственныеОперации.РеализацияКлиенту);

	Если ЗначениеЗаполнено(РеквизитПартнер) Или Не ИспользоватьСоглашенияСКлиентами Тогда
		ПараметрыОтбора = Новый Структура();
		ПараметрыОтбора.Вставить("ХозяйственныеОперации", ХозяйственнаяОперация);
		ПараметрыОтбора.Вставить("ВыбранноеСоглашение",   РеквизитСоглашение);
		ПараметрыОтбора.Вставить("КомиссионныеПродажи25", Комиссия);
		
		УсловияПродажПоУмолчанию = ПродажиСервер.ПолучитьУсловияПродажПоУмолчанию(РеквизитПартнер, ПараметрыОтбора);
		
		Если УсловияПродажПоУмолчанию <> Неопределено Тогда
			Если Не ИспользоватьСоглашенияСКлиентами 
					Или (РеквизитСоглашение <> УсловияПродажПоУмолчанию.Соглашение 
							И ЗначениеЗаполнено(УсловияПродажПоУмолчанию.Соглашение)) Тогда
				РеквизитСоглашение = УсловияПродажПоУмолчанию.Соглашение;
				ЗаполнитьУсловияПродаж(УсловияПродажПоУмолчанию);
			Иначе
				РеквизитСоглашение = УсловияПродажПоУмолчанию.Соглашение;
			КонецЕсли;
			
			Если Не УсловияПродажПоУмолчанию.Типовое
					 И ЗначениеЗаполнено(УсловияПродажПоУмолчанию.Контрагент) Тогда
				РеквизитКонтрагент = УсловияПродажПоУмолчанию.Контрагент;
			Иначе
				ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(РеквизитПартнер, РеквизитКонтрагент);
			КонецЕсли;
			
		Иначе
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(РеквизитПартнер, РеквизитКонтрагент);
			РеквизитСоглашение = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если Комиссия Тогда
		Контрагент         = РеквизитКонтрагент;
		СоглашениеКомиссия = РеквизитСоглашение;
	Иначе
		РозничныйКонтрагент  = РеквизитКонтрагент;
		СоглашениеРеализация = РеквизитСоглашение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУсловияПродаж(Знач УсловияПродаж, Комиссия = Истина)
	
	Если УсловияПродаж <> Неопределено Тогда                        
		РеквизитПартнер    = ?(Комиссия, Партнер, РозничныйПартнер);
		РеквизитКонтрагент = ?(Комиссия, Контрагент, РозничныйКонтрагент);
		РеквизитСоглашение = ?(Комиссия, СоглашениеКомиссия, СоглашениеРеализация);
		РеквизитДоговор    = ?(Комиссия, ДоговорКомиссия, ДоговорРеализация);
		
		Если Не УсловияПродаж.Типовое
				 И ЗначениеЗаполнено(УсловияПродаж.Контрагент) Тогда
			РеквизитКонтрагент = УсловияПродаж.Контрагент;
		Иначе
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(РеквизитПартнер, РеквизитКонтрагент);
		КонецЕсли;
		
		Если УсловияПродаж.ИспользуютсяДоговорыКонтрагентов <> Неопределено 
				И УсловияПродаж.ИспользуютсяДоговорыКонтрагентов Тогда
			Объект = Новый Структура;
			Объект.Вставить("Организация", Организация);
			Объект.Вставить("Партнер",     РеквизитПартнер);
			Объект.Вставить("Контрагент",  РеквизитКонтрагент);
			Объект.Вставить("Соглашение",  РеквизитСоглашение);
			Объект.Вставить("Договор",     РеквизитДоговор);
			
			РеквизитДоговор = ПродажиСервер.ПолучитьДоговорПоУмолчанию(
				Объект,
				Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию,
				,
				,
				УсловияПродаж.НоваяСхемаКомиссии);
		КонецЕсли;
	КонецЕсли;
	
	Если Комиссия Тогда
		Контрагент      = РеквизитКонтрагент;
		ДоговорКомиссия = РеквизитДоговор;
	Иначе
		РозничныйКонтрагент = РеквизитКонтрагент;
		ДоговорРеализация   = РеквизитДоговор;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУсловияПродажПоСоглашению(Комиссия = Истина)
	
	УстановитьПривилегированныйРежим(Истина);
	
	РеквизитСоглашение = ?(Комиссия, СоглашениеКомиссия, СоглашениеРеализация);
	УсловияПродаж      = ПродажиСервер.ПолучитьУсловияПродаж(РеквизитСоглашение);
	
	Если Организация <> Неопределено Тогда
		УсловияПродаж.Организация = Организация;
	КонецЕсли;
	
	ЗаполнитьУсловияПродаж(УсловияПродаж, Комиссия);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоговорПоУмолчанию(Комиссия = Истина)
	
	РеквизитПартнер    = ?(Комиссия, Партнер, РозничныйПартнер);
	РеквизитКонтрагент = ?(Комиссия, Контрагент, РозничныйКонтрагент);
	РеквизитСоглашение = ?(Комиссия, СоглашениеКомиссия, СоглашениеРеализация);
	РеквизитДоговор    = ?(Комиссия, ДоговорКомиссия, ДоговорРеализация);
	
	Если ЗначениеЗаполнено(РеквизитКонтрагент) Тогда
		Объект = Новый Структура;
		Объект.Вставить("Организация", Организация);
		Объект.Вставить("Партнер",     РеквизитПартнер);
		Объект.Вставить("Контрагент",  РеквизитКонтрагент);
		Объект.Вставить("Соглашение",  РеквизитСоглашение);
		Объект.Вставить("Договор",     РеквизитДоговор);
		
		РеквизитДоговор = ПродажиСервер.ПолучитьДоговорПоУмолчанию(
			Объект,
			Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию,
			,
			,
			Истина);
	КонецЕсли;
	
	Если Комиссия Тогда
		ДоговорКомиссия = РеквизитДоговор;
	Иначе
		ДоговорРеализация = РеквизитДоговор;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
