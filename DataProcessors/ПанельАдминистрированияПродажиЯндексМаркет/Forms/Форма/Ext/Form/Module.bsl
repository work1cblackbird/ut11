
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОткрытьИзРазделаАдминистрирования = Параметры.ОткрытьИзРазделаАдминистрирования;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.ПриОткрытии");
	
	ОбновитьДанныеФормы();
	
	Если Элементы.ГруппаАккаунты.ПодчиненныеЭлементы.Количество() <= 2 Тогда
		ДобавитьАккаунтЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_УчетныеЗаписиМаркетплейсов" Тогда
		Если ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметр, "ВидМаркетплейса") = ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.МаркетплейсЯндексМаркет") Тогда
			ОбновитьДанныеФормы(ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметр, "ИдентификаторАккаунта"));
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ЯндексМаркет_ПодключениеКСервису" Тогда
		Если ЗначениеЗаполнено(Параметр) Тогда
			ОбновитьДанныеФормы(Параметр);
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ЯндексМаркет_ОчиститьНастройкиПодключения" Тогда
		Если ЗначениеЗаполнено(Параметр) Тогда
			УдалитьАккаунтЗавершение(КодВозвратаДиалога.Да, Параметр);
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ЯндексМаркет_ОбновитьНастройкиПодключения" Тогда
		Если ЗначениеЗаполнено(Параметр) Тогда
			ОбновитьДанныеФормы(Параметр);
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ЯндексМаркет_НастройкиОбменаДанными" Тогда
		Если ЗначениеЗаполнено(Параметр) Тогда
			ДобавитьИзменитьЭлементыФормыМагазин(ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметр, "ИдентификаторАккаунта"), Параметр);
		КонецЕсли;
    КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьАккаунт(Команда)
	
	ДобавитьАккаунтЗавершение();
	
КонецПроцедуры   

&НаКлиенте
Процедура УдалитьАккаунт(Команда)
	
	ИдентификаторАккаунта = СтрЗаменить(ТекущийЭлемент.Имя, "УдалитьАккаунт_", "");
	НайденныеСтроки       = Магазины.НайтиСтроки(Новый Структура("ИдентификаторАккаунта", ИдентификаторАккаунта));
	
	Если НайденныеСтроки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;

	ОповещениеОЗавершении = Новый ОписаниеОповещения("УдалитьАккаунтЗавершение", ЭтотОбъект, ИдентификаторАккаунта);
	ПоказатьВопрос(ОповещениеОЗавершении, 
		НСтр("ru = 'Удалить аккаунт из списка доступных подключений?'"), 
		РежимДиалогаВопрос.ДаНет, 
		, 
		КодВозвратаДиалога.Нет, 
		НСтр("ru = 'Яндекс Маркет'"), 
		КодВозвратаДиалога.Нет);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтатусАвторизации(Команда)   

	ИдентификаторАккаунта = СтрЗаменить(ТекущийЭлемент.Имя, "ПоказатьСтатусАвторизации_", "");
	
	Если ЗначениеЗаполнено(ИдентификаторАккаунта) Тогда
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ИдентификаторАккаунта", ИдентификаторАккаунта);
		
		ОткрытьФорму("Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.ТекущееСостояниеАвторизации", 
			ПараметрыОткрытия, 
			ЭтотОбъект, 
			Истина,,,
			, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюОМагазинах(Команда)

	ОчиститьСообщения();
	ИдентификаторАккаунта = СтрЗаменить(ТекущийЭлемент.Имя, "ОбновитьИнформациюОМагазинах_", "");
	
	Если ЗначениеЗаполнено(ИдентификаторАккаунта) Тогда
		ДлительнаяОперация    = ОбновитьИнформациюОМагазинахНаСервере(ИдентификаторАккаунта);
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьИнформациюОМагазинахЗавершение", ЭтотОбъект, ИдентификаторАккаунта);
		
		Если ДлительнаяОперация.Статус = "Выполнено" Тогда
			ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
			
		Иначе
			ПараметрыОжидания 								   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
			ПараметрыОжидания.ВыводитьОкноОжидания 			   = Истина;
			ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Определение списка магазинов, доступных пользователю.'");
			ПараметрыОжидания.ОповещениеПользователя.Показать  = Истина;
			ПараметрыОжидания.ОповещениеПользователя.Текст 	   = НСтр("ru = 'Яндекс Маркет'");
			ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Получен список магазинов, доступных пользователю.'");
			ПараметрыОжидания.ОповещениеПользователя.Картинка  = БиблиотекаКартинок.ЛоготипЯндексID;
			
			ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПубликациюТоваров(Команда)
	
	ИдентификаторУчетнойЗаписи = СтрЗаменить(ТекущийЭлемент.Имя, "ВойтиВМагазин_", "");
	УчетнаяЗапись              = ПолучитьСсылкуПоИдентификатору(ИдентификаторУчетнойЗаписи);
	
	Если ЗначениеЗаполнено(УчетнаяЗапись) Тогда  
		ДанныеУчетнойЗаписи = ДанныеУчетнойЗаписи(УчетнаяЗапись); 
		
		Если Не ДанныеУчетнойЗаписи.ПометкаУдаления Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);

			ОткрытьФорму("Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.РабочееМестоУправленияПродажами", 
				ПараметрыОткрытия, 
				, 
				ИдентификаторУчетнойЗаписи);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьМагазин(Команда)
	
	ИдентификаторУчетнойЗаписи = СтрЗаменить(ТекущийЭлемент.Имя, "НастроитьМагазин_", "");
	УчетнаяЗапись              = ПолучитьСсылкуПоИдентификатору(ИдентификаторУчетнойЗаписи);
	
	Если ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ДанныеУчетнойЗаписи = ДанныеУчетнойЗаписи(УчетнаяЗапись);
		
		Если Не ДанныеУчетнойЗаписи.ПометкаУдаления Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
			
			ОткрытьФорму("Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.НастройкиОбменаДанными", 
				ПараметрыОткрытия, 
				, 
				ИдентификаторУчетнойЗаписи);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзбранное(Команда)
	
	ИдентификаторУчетнойЗаписи = СтрЗаменить(ТекущийЭлемент.Имя, "ИзменитьИзбранное_", "");
	ИзменитьИзбранноеНаСервере(ИдентификаторУчетнойЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеФормы(Знач ИдентификаторАккаунта = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетныеЗаписиМаркетплейсов.Ссылка КАК Ссылка,
		|	УчетныеЗаписиМаркетплейсов.Наименование КАК Наименование,
		|	УчетныеЗаписиМаркетплейсов.ПометкаУдаления КАК ПометкаУдаления,
		|	УчетныеЗаписиМаркетплейсов.Организация КАК Организация,
		|	УчетныеЗаписиМаркетплейсов.ИсточникКатегории КАК ИсточникКатегории,
		|	ЕСТЬNULL(ВидыЦенМаркетплейсов.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) КАК ЦенаПродажи,
		|	УчетныеЗаписиМаркетплейсов.СхемаРаботы КАК СхемаРаботы,
		|	УчетныеЗаписиМаркетплейсов.ИдентификаторАккаунта КАК ИдентификаторАккаунта,
		|	УчетныеЗаписиМаркетплейсов.ИдентификаторКабинета КАК ИдентификаторКабинета,
		|	УчетныеЗаписиМаркетплейсов.ИдентификаторМагазина КАК ИдентификаторМагазина,
		|	УчетныеЗаписиМаркетплейсов.ИдентификаторКлиента КАК ИдентификаторКлиента,
		|	УчетныеЗаписиМаркетплейсов.НеОбновлятьДанныеТорговойПлощадки КАК НеОбновлятьДанныеТорговойПлощадки,
		|	ВЫБОР
		|		КОГДА УчетныеЗаписиМаркетплейсов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|				И УчетныеЗаписиМаркетплейсов.ИдентификаторАккаунта <> """"
		|				И УчетныеЗаписиМаркетплейсов.ИдентификаторКабинета <> """"
		|				И УчетныеЗаписиМаркетплейсов.ИдентификаторМагазина <> """"
		|				И УчетныеЗаписиМаркетплейсов.ИдентификаторКлиента <> """"
		|				И УчетныеЗаписиМаркетплейсов.СхемаРаботы <> ЗНАЧЕНИЕ(Перечисление.СхемыРаботыТорговыхПлощадок.ПустаяСсылка)
		|				И ВидыЦенМаркетплейсов.ВидЦены <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОбязательныеРеквизитыЗаполнены,
		|	ИСТИНА КАК ОбязательныеЗаданияВключены
		|ИЗ
		|	Справочник.УчетныеЗаписиМаркетплейсов КАК УчетныеЗаписиМаркетплейсов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УчетныеЗаписиМаркетплейсов.ВидыЦен КАК ВидыЦенМаркетплейсов
		|		ПО УчетныеЗаписиМаркетплейсов.Ссылка = ВидыЦенМаркетплейсов.Ссылка
		|			И (ВидыЦенМаркетплейсов.ИмяНастройки = &ИмяНастройки)
		|ГДЕ
		|	УчетныеЗаписиМаркетплейсов.ВидМаркетплейса = ЗНАЧЕНИЕ(Перечисление.ВидыМаркетплейсов.МаркетплейсЯндексМаркет)
		|	И (УчетныеЗаписиМаркетплейсов.ИдентификаторАккаунта = &ИдентификаторАккаунта
		|			ИЛИ &ИдентификаторАккаунта = НЕОПРЕДЕЛЕНО)
		|
		|УПОРЯДОЧИТЬ ПО
		|	УчетныеЗаписиМаркетплейсов.Наименование";
	
	Запрос.УстановитьПараметр("ИдентификаторАккаунта", ИдентификаторАккаунта);
	Запрос.Параметры.Вставить("ИмяНастройки",          НСтр("ru = 'Цена продажи'"));
	
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	
	Для Каждого СтрокаТаблицыЗначений Из Магазины Цикл
		Если ИдентификаторАккаунта <> Неопределено 
			 И СтрокаТаблицыЗначений.ИдентификаторАккаунта <> ИдентификаторАккаунта Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТаблицыЗначений.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицыЗначений.Активность = Ложь;
	КонецЦикла;
	
	АккаунтыИзХранилища = ИнтеграцияСЯндексМаркетСервер.ПолучитьСписокАккаунтов();
	Аккаунты            = Новый Массив;

	Для Каждого Аккаунт Из АккаунтыИзХранилища Цикл
		Аккаунты.Добавить(Аккаунт.Идентификатор);

		Если ИдентификаторАккаунта <> Неопределено 
			 И Аккаунт.Идентификатор <> ИдентификаторАккаунта Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавитьИзменитьЭлементыФормыАккаунт(Аккаунт);
		ВсегоМагазинов = 0;
		
		ВыборкаДанных.Сбросить();
		Пока ВыборкаДанных.НайтиСледующий(Новый Структура("ИдентификаторАккаунта", Аккаунт.Идентификатор)) Цикл
			ДобавитьИзменитьЭлементыФормыМагазин(ВыборкаДанных.ИдентификаторАккаунта, ВыборкаДанных.Ссылка, ВыборкаДанных);
			ВсегоМагазинов = ВсегоМагазинов + 1;
		КонецЦикла;
		
		Если ВсегоМагазинов > 0 Тогда
			Элементы["ГруппаАккаунт_" + Аккаунт.Идентификатор].ЗаголовокСвернутогоОтображения = Элементы["ГруппаАккаунт_" + Аккаунт.Идентификатор].Заголовок + " (" + Формат(ВсегоМагазинов, "ЧГ=0") + ")";
			Элементы["УдалитьАккаунт_" + Аккаунт.Идентификатор].Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТаблицыЗначений Из Магазины Цикл
		Если ИдентификаторАккаунта <> Неопределено 
			 И СтрокаТаблицыЗначений.ИдентификаторАккаунта <> ИдентификаторАккаунта Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТаблицыЗначений.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не СтрокаТаблицыЗначений.Активность Тогда
			ИдентификаторУчетнойЗаписи = СтрЗаменить(СтрокаТаблицыЗначений.Ссылка.УникальныйИдентификатор(), "-", "_");
			УдалитьПодчиненныеЭлементыФормы("ГруппаМагазин_" + ИдентификаторУчетнойЗаписи);
			
			СтрокаТаблицыЗначений.ИдентификаторАккаунта = "";
			СтрокаТаблицыЗначений.Ссылка                = ПредопределенноеЗначение("Справочник.УчетныеЗаписиМаркетплейсов.ПустаяСсылка");
			СтрокаТаблицыЗначений.Представление         = "";
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементКоллекции Из Элементы.ГруппаАккаунты.ПодчиненныеЭлементы Цикл
		Если СтрНачинаетсяС(ЭлементКоллекции.Имя, "ГруппаАккаунт_")
			 И Аккаунты.Найти(СтрЗаменить(ЭлементКоллекции.Имя, "ГруппаАккаунт_", "")) = Неопределено Тогда
			УдалитьПодчиненныеЭлементыФормы(Элементы[СтрЗаменить(ЭлементКоллекции.Имя, "ГруппаАккаунт_", "ДекорацияАккаунтОтступ3_")]);
			УдалитьПодчиненныеЭлементыФормы(ЭлементКоллекции);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДанныеУчетнойЗаписи(УчетнаяЗапись)  
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеУчетнойЗаписи = ИнтеграцияСЯндексМаркетВызовСервера.ДанныеУчетнойЗаписиЯндексМаркет(УчетнаяЗапись); 
	УстановитьПривилегированныйРежим(Ложь);  
	
	Возврат ДанныеУчетнойЗаписи; 
	
КонецФункции

&НаСервере
Процедура ДобавитьИзменитьЭлементыФормыАккаунт(Знач Аккаунт)
	
	ИдентификаторАккаунта = Аккаунт.Идентификатор;
	НайденныеСтроки       = Магазины.НайтиСтроки(Новый Структура("ИдентификаторАккаунта", ИдентификаторАккаунта));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		СтрокаТаблицыЗначений                       = Магазины.Добавить();
		СтрокаТаблицыЗначений.Активность            = Истина;
		СтрокаТаблицыЗначений.ИдентификаторАккаунта = ИдентификаторАккаунта;
		СтрокаТаблицыЗначений.Ссылка                = ПредопределенноеЗначение("Справочник.УчетныеЗаписиМаркетплейсов.ПустаяСсылка");
		СтрокаТаблицыЗначений.Представление         = Аккаунт.Наименование;

		ГруппаАккаунт = Элементы.Добавить("ГруппаАккаунт_" + ИдентификаторАккаунта, Тип("ГруппаФормы"), Элементы.ГруппаАккаунты);
		ЗаполнитьЗначенияСвойств(ГруппаАккаунт, Элементы.ГруппаАккаунт,, "Имя, Заголовок, ПутьКДаннымЗаголовка, Видимость");
		
		ГруппаКоманднаяПанельАккаунт = Элементы.Добавить("ГруппаКоманднаяПанельАккаунт_" + ИдентификаторАккаунта, Тип("ГруппаФормы"), ГруппаАккаунт);
		ЗаполнитьЗначенияСвойств(ГруппаКоманднаяПанельАккаунт, Элементы.ГруппаКоманднаяПанельАккаунт,, "Имя, ПутьКДаннымЗаголовка");
		
			ПоказатьСтатусАвторизации = Элементы.Добавить("ПоказатьСтатусАвторизации_" + ИдентификаторАккаунта, Тип("КнопкаФормы"), ГруппаКоманднаяПанельАккаунт);
			ЗаполнитьЗначенияСвойств(ПоказатьСтатусАвторизации, Элементы.ПоказатьСтатусАвторизации,, "Имя");
			
			ОбновитьИнформациюОМагазинах = Элементы.Добавить("ОбновитьИнформациюОМагазинах_" + ИдентификаторАккаунта, Тип("КнопкаФормы"), ГруппаКоманднаяПанельАккаунт);
			ЗаполнитьЗначенияСвойств(ОбновитьИнформациюОМагазинах, Элементы.ОбновитьИнформациюОМагазинах,, "Имя");
		
			УдалитьАккаунт = Элементы.Добавить("УдалитьАккаунт_" + ИдентификаторАккаунта, Тип("КнопкаФормы"), ГруппаКоманднаяПанельАккаунт);
			ЗаполнитьЗначенияСвойств(УдалитьАккаунт, Элементы.УдалитьАккаунт,, "Имя");
		
		ДекорацияАккаунтОтступ2 = Элементы.Добавить("ДекорацияАккаунтОтступ2_" + ИдентификаторАккаунта, Тип("ДекорацияФормы"), ГруппаАккаунт);
		ЗаполнитьЗначенияСвойств(ДекорацияАккаунтОтступ2, Элементы.ДекорацияАккаунтОтступ2,, "Имя");
		
		ГруппаМагазины = Элементы.Добавить("ГруппаМагазины_" + ИдентификаторАккаунта, Тип("ГруппаФормы"), ГруппаАккаунт);
		ЗаполнитьЗначенияСвойств(ГруппаМагазины, Элементы.ГруппаМагазины,, "Имя, ПутьКДаннымЗаголовка");
		
		ДекорацияАккаунтОтступ3 = Элементы.Добавить("ДекорацияАккаунтОтступ3_" + ИдентификаторАккаунта, Тип("ДекорацияФормы"), Элементы.ГруппаАккаунты);
		ЗаполнитьЗначенияСвойств(ДекорацияАккаунтОтступ3, Элементы.ДекорацияАккаунтОтступ3,, "Имя");
	КонецЕсли;

	Элементы["ГруппаАккаунт_" + ИдентификаторАккаунта].Заголовок                = Аккаунт.Наименование;
	Элементы["ПоказатьСтатусАвторизации_" + ИдентификаторАккаунта].Картинка     = ?(Аккаунт.ТребуетсяАвторизация, БиблиотекаКартинок.ВажностьНовостиВажная, Новый Картинка());
	Элементы["ПоказатьСтатусАвторизации_" + ИдентификаторАккаунта].Заголовок    = ?(Аккаунт.ТребуетсяАвторизация, НСтр("ru = 'Требуется авторизация'"), НСтр("ru = 'Состояние авторизации'"));
	Элементы["ОбновитьИнформациюОМагазинах_" + ИдентификаторАккаунта].Видимость = Не Аккаунт.ТребуетсяАвторизация;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзменитьЭлементыФормыМагазин(Знач ИдентификаторАккаунта, Знач УчетнаяЗапись, Знач ДанныеУчетнойЗаписи = Неопределено)
	
	Если ДанныеУчетнойЗаписи = Неопределено Тогда
		ДанныеУчетнойЗаписи = ДанныеУчетнойЗаписи(УчетнаяЗапись);
	КонецЕсли;
	
	ИдентификаторУчетнойЗаписи = СтрЗаменить(УчетнаяЗапись.УникальныйИдентификатор(), "-", "_");
	Представление              = СокрЛП(УчетнаяЗапись);
	НайденныеСтроки            = Магазины.НайтиСтроки(Новый Структура("ИдентификаторАккаунта, Ссылка", ИдентификаторАккаунта, УчетнаяЗапись));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		СтрокаТаблицыЗначений                       = Магазины.Добавить();
		СтрокаТаблицыЗначений.Активность            = Истина;
		СтрокаТаблицыЗначений.ИдентификаторАккаунта = ИдентификаторАккаунта;
		СтрокаТаблицыЗначений.Ссылка                = УчетнаяЗапись;
		СтрокаТаблицыЗначений.Представление         = Представление;

		ГруппаМагазин = Элементы.Добавить("ГруппаМагазин_" + ИдентификаторУчетнойЗаписи, Тип("ГруппаФормы"), Элементы["ГруппаМагазины_" + ИдентификаторАккаунта]);
		ЗаполнитьЗначенияСвойств(ГруппаМагазин, Элементы.ГруппаМагазин,, "Имя, ПутьКДаннымЗаголовка, Видимость");
		
			ДекорацияМагазинОтступ1 = Элементы.Добавить("ДекорацияМагазинОтступ1_" + ИдентификаторУчетнойЗаписи, Тип("ДекорацияФормы"), ГруппаМагазин);
			ЗаполнитьЗначенияСвойств(ДекорацияМагазинОтступ1, Элементы.ДекорацияМагазинОтступ1,, "Имя");
		
			ДекорацияМагазин = Элементы.Добавить("ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи, Тип("ДекорацияФормы"), ГруппаМагазин);
			ЗаполнитьЗначенияСвойств(ДекорацияМагазин, Элементы.ДекорацияМагазин,, "Имя, Картинка");
		
			ГруппаМагазинПредставление = Элементы.Добавить("ГруппаМагазинПредставление_" + ИдентификаторУчетнойЗаписи, Тип("ГруппаФормы"), ГруппаМагазин);
			ЗаполнитьЗначенияСвойств(ГруппаМагазинПредставление, Элементы.ГруппаМагазинПредставление,, "Имя, ПутьКДаннымЗаголовка");
			
				Магазин = Элементы.Добавить("Магазин_" + ИдентификаторУчетнойЗаписи, Тип("ПолеФормы"), ГруппаМагазинПредставление);
				ЗаполнитьЗначенияСвойств(Магазин, Элементы.Магазин,, "Имя, ПутьКДанным");
				Магазин.ПутьКДанным = "Магазины[" + Формат(Магазины.Индекс(СтрокаТаблицыЗначений), "ЧН=; ЧГ=0") + "].Представление";
			
				ДекорацияРасшифровка = Элементы.Добавить("ДекорацияРасшифровка_" + ИдентификаторУчетнойЗаписи, Тип("ДекорацияФормы"), ГруппаМагазинПредставление);
				ЗаполнитьЗначенияСвойств(ДекорацияРасшифровка, Элементы.ДекорацияРасшифровка,, "Имя");
			
			ДекорацияМагазинОтступ2 = Элементы.Добавить("ДекорацияМагазинОтступ2_" + ИдентификаторУчетнойЗаписи, Тип("ДекорацияФормы"), ГруппаМагазин);
			ЗаполнитьЗначенияСвойств(ДекорацияМагазинОтступ2, Элементы.ДекорацияМагазинОтступ2,, "Имя");
		
			ГруппаКоманднаяПанельМагазин = Элементы.Добавить("ГруппаКоманднаяПанельМагазин_" + ИдентификаторУчетнойЗаписи, Тип("ГруппаФормы"), ГруппаМагазин);
			ЗаполнитьЗначенияСвойств(ГруппаКоманднаяПанельМагазин, Элементы.ГруппаКоманднаяПанельМагазин,, "Имя, ПутьКДаннымЗаголовка");
			
				ИзменитьИзбранное = Элементы.Добавить("ИзменитьИзбранное_" + ИдентификаторУчетнойЗаписи, Тип("КнопкаФормы"), ГруппаКоманднаяПанельМагазин);
				ЗаполнитьЗначенияСвойств(ИзменитьИзбранное, Элементы.ИзменитьИзбранное,, "Имя");
				
				ВойтиВМагазин = Элементы.Добавить("ВойтиВМагазин_" + ИдентификаторУчетнойЗаписи, Тип("КнопкаФормы"), ГруппаКоманднаяПанельМагазин);
				ЗаполнитьЗначенияСвойств(ВойтиВМагазин, Элементы.ВойтиВМагазин,, "Имя");
				
				НастроитьМагазин = Элементы.Добавить("НастроитьМагазин_" + ИдентификаторУчетнойЗаписи, Тип("КнопкаФормы"), ГруппаКоманднаяПанельМагазин);
				ЗаполнитьЗначенияСвойств(НастроитьМагазин, Элементы.НастроитьМагазин,, "Имя");
				
		Если Избранное.НайтиПоЗначению(УчетнаяЗапись) <> Неопределено Тогда
			Элементы.Переместить(ГруппаМагазин, ГруппаМагазин.Родитель, Элементы.ГруппаМагазин);
			Элементы["ИзменитьИзбранное_" + ИдентификаторУчетнойЗаписи].Картинка = БиблиотекаКартинок.ДобавитьВИзбранное;
		КонецЕсли;
				
	Иначе
		НайденныеСтроки[0].Активность    = Истина;
		НайденныеСтроки[0].Представление = Представление;
	КонецЕсли;
	
	Если ДанныеУчетнойЗаписи.ПометкаУдаления Тогда
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Картинка      = БиблиотекаКартинок.СтатусРаспознаванияДокументаОшибка;
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Подсказка     = НСтр("ru = 'Магазин отсутствует в кабинете торговой площадки'");
		Элементы["ДекорацияРасшифровка_" + ИдентификаторУчетнойЗаписи].Заголовок = НСтр("ru = 'магазин отсутствует в кабинете торговой площадки'");
	ИначеЕсли ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки Тогда
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Картинка      = БиблиотекаКартинок.УстановитьСтатусЗаказаЗакрыт;
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Подсказка     = НСтр("ru = 'Обмен данными с магазином запрещен'");
		Элементы["ДекорацияРасшифровка_" + ИдентификаторУчетнойЗаписи].Заголовок = НСтр("ru = 'обмен данными с магазином запрещен'");
	ИначеЕсли Не ДанныеУчетнойЗаписи.ОбязательныеРеквизитыЗаполнены Тогда
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Картинка      = БиблиотекаКартинок.Предупреждение;
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Подсказка     = НСтр("ru = 'Требуется настройка'");
		Элементы["ДекорацияРасшифровка_" + ИдентификаторУчетнойЗаписи].Заголовок = НСтр("ru = 'требуется настройка'");
	ИначеЕсли Не ДанныеУчетнойЗаписи.ОбязательныеЗаданияВключены Тогда
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Картинка      = БиблиотекаКартинок.РегламентноеЗадание;
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Подсказка     = НСтр("ru = 'Отключены обязательные регламентные задания'");
		Элементы["ДекорацияРасшифровка_" + ИдентификаторУчетнойЗаписи].Заголовок = НСтр("ru = 'отключены обязательные задания'");
	Иначе
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Картинка      = БиблиотекаКартинок.СтатусРаспознаванияДокументаОбработан;
		Элементы["ДекорацияМагазин_" + ИдентификаторУчетнойЗаписи].Подсказка     = "";
		Элементы["ДекорацияРасшифровка_" + ИдентификаторУчетнойЗаписи].Заголовок = НСтр("ru = 'готов к работе'");
	КонецЕсли;
	
	Элементы["ИзменитьИзбранное_" + ИдентификаторУчетнойЗаписи].Доступность = Не ДанныеУчетнойЗаписи.ПометкаУдаления;
	Элементы["ВойтиВМагазин_" + ИдентификаторУчетнойЗаписи].Доступность     = Элементы["ОбновитьИнформациюОМагазинах_" + ИдентификаторАккаунта].Видимость
																		      И Не ДанныеУчетнойЗаписи.ПометкаУдаления; 
	Элементы["ВойтиВМагазин_" + ИдентификаторУчетнойЗаписи].Видимость       = Не ОткрытьИзРазделаАдминистрирования;
	Элементы["НастроитьМагазин_" + ИдентификаторУчетнойЗаписи].Доступность  = Не ДанныеУчетнойЗаписи.ПометкаУдаления;
	
КонецПроцедуры

&НаСервере 
Процедура ИзменитьИзбранноеНаСервере(Знач ИдентификаторУчетнойЗаписи)
	
	УчетнаяЗапись    = ПолучитьСсылкуПоИдентификатору(ИдентификаторУчетнойЗаписи);
	ГруппаМагазин    = Элементы["ГруппаМагазин_" + ИдентификаторУчетнойЗаписи];
	ЭлементКоллекции = Избранное.НайтиПоЗначению(УчетнаяЗапись);
	
	Если ЭлементКоллекции = Неопределено Тогда
		Избранное.Добавить(УчетнаяЗапись);
		Элементы["ИзменитьИзбранное_" + ИдентификаторУчетнойЗаписи].Картинка = БиблиотекаКартинок.ДобавитьВИзбранное;
		
	Иначе                                 
		Избранное.Удалить(ЭлементКоллекции);
		Элементы["ИзменитьИзбранное_" + ИдентификаторУчетнойЗаписи].Картинка = БиблиотекаКартинок.Избранное;
	КонецЕсли;

КонецПроцедуры

&НаСервере 
Процедура УдалитьПодчиненныеЭлементыФормы(Знач ЭлементФормы)
	
	Если ТипЗнч(ЭлементФормы) = Тип("ГруппаФормы") Тогда
		Для Каждого ЭлементКоллекции Из ЭлементФормы.ПодчиненныеЭлементы Цикл
			Элементы.Удалить(ЭлементКоллекции);
		КонецЦикла;
	КонецЕсли;
	
	Элементы.Удалить(ЭлементФормы);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСсылкуПоИдентификатору(Знач ИдентификаторУчетнойЗаписи)
	
	УчетнаяЗапись = Неопределено;
	
	Попытка
		ИдентификаторУчетнойЗаписи = СтрЗаменить(ИдентификаторУчетнойЗаписи, "_", "-");
		УчетнаяЗапись = Справочники.УчетныеЗаписиМаркетплейсов.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторУчетнойЗаписи));
	Исключение
		УчетнаяЗапись = Неопределено;
	КонецПопытки;

	Возврат УчетнаяЗапись;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьАккаунтЗавершение()
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.ПодключениеКСервису",
		, 
		ЭтотОбъект, 
		Истина,,,
		, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры   

&НаКлиенте
Процедура УдалитьАккаунтЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		НайденныеСтроки = Магазины.НайтиСтроки(Новый Структура("ИдентификаторАккаунта", ДополнительныеПараметры));
		
		Для Каждого СтрокаТаблицыЗначений Из НайденныеСтроки Цикл
			СтрокаТаблицыЗначений.ИдентификаторАккаунта = "";
			СтрокаТаблицыЗначений.Ссылка                = ПредопределенноеЗначение("Справочник.УчетныеЗаписиМаркетплейсов.ПустаяСсылка");
			СтрокаТаблицыЗначений.Представление         = "";
		КонецЦикла;
		
		УдалитьАккаунтНаСервере(ДополнительныеПараметры);
		ОбновитьДанныеФормы(ДополнительныеПараметры);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьАккаунтНаСервере(Знач ИдентификаторАккаунта)
	
	ИнтеграцияСЯндексМаркетСервер.УдалитьДанныеАвторизации(ИдентификаторАккаунта);
	
КонецПроцедуры

&НаСервере
Функция ОбновитьИнформациюОМагазинахНаСервере(Знач ИдентификаторАккаунта)
	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Определение списка магазинов, доступных пользователю.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;
	
	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ПолучитьМагазиныЯндексМаркет";
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		ИдентификаторАккаунта);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьИнформациюОМагазинахЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		ИначеЕсли Результат.Статус = "Выполнено" 
		 		  И Результат.Свойство("АдресРезультата") Тогда
			Ошибка = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(Результат.АдресРезультата);
			
			Если Не ПустаяСтрока(Ошибка.КодОшибки) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ОписаниеОшибки);
			Иначе
				ОбновитьДанныеФормы(ДополнительныеПараметры);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
