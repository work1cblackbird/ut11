
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПодсказкиЭлементовПоУмолчанию();

	УчетнаяЗапись = Справочники.УчетныеЗаписиМаркетплейсов.ОсновнаяУчетнаяЗапись(
		ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.МаркетплейсOzon"));
	ОбновитьСписокУчетныхЗаписей(УчетнаяЗапись);
	ЗаполнитьДанныеПоТорговойПлощадке();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если НЕ ПодключениеКСервисуВыполнено Тогда
		ПодключитьОбработчикОжидания("ОткрытьФормуПодключенияКСервису", 0.1, Истина);
	КонецЕсли;

	ОбновитьСчетчики();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Запись_УчетныеЗаписиМаркетплейсов" И Параметр = УчетнаяЗапись Тогда
		ЗаполнитьДанныеПоТорговойПлощадке();
		ОбновитьСчетчики();

	ИначеЕсли ИмяСобытия = "Запись_НаборКонстант"
	  И (Источник = "ИспользованиеСоглашенийСКлиентами"
			Или Источник = "ИспользоватьКомиссиюПриПродажах"
			Или Источник = "ИспользоватьЗаказыКлиентов"
			Или Источник = "ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов") Тогда
		ОчиститьСообщения();
		ЗаполнитьДанныеПоТорговойПлощадке();
		ОбновитьСчетчики();

	ИначеЕсли ИмяСобытия = "Запись_НаборКонстант"
	  И Источник = "ИспользоватьНесколькоСкладов" Тогда
		ПолучитьЗначенияФункциональныхОпций();

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)

	УчетнаяЗаписьИзНастроек = Настройки.Получить("УчетнаяЗапись");
	Если УчетнаяЗаписьИзНастроек <> Неопределено 
	  И Не ОбщегоНазначения.СсылкаСуществует(УчетнаяЗаписьИзНастроек) Тогда
		Настройки.Удалить("УчетнаяЗапись");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)

	ЗаполнитьДанныеПоТорговойПлощадке();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УчетнаяЗаписьПриИзменении(Элемент)

	ОчиститьСообщения();

	ЗаполнитьДанныеПоТорговойПлощадке();

	ОбновитьСчетчики();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область УправлениеОсновнымиНастройками

&НаКлиенте
Процедура ОткрытьНастройкиОбменаДанными(Команда)

	ОчиститьСообщения();

	ПараметрыФормы = Новый Структура("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
	ОткрытьФорму("Обработка.УправлениеПродажамиНаOzon.Форма.НастройкиИнтеграции", ПараметрыФормы);
	Оповестить("ОткрытиеФормыНастроекОбменаOzon", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПубликациюТоваровНаТорговойПлощадке(Команда)

	ОчиститьСообщения();

	ПараметрыФормы = Новый Структура("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
	ОткрытьФорму("Обработка.УправлениеПродажамиНаOzon.Форма.ПубликацияТоваров", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрайсЛист(Команда)

	ОчиститьСообщения();

	ВидыЦенУчетныхЗаписейOzon = ВидыЦенУчетныхЗаписейOzon();
	Если ВидыЦенУчетныхЗаписейOzon.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'В настройках синхронизации с маркетплейсом Ozon не указаны выгружаемые виды цен, а также не созданы виды цен для загрузки данных с маркетплейса Ozon.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;

	ПараметрыФормы = Новый Структура("ВидыЦен", ВидыЦенУчетныхЗаписейOzon);
	ОткрытьФорму("Обработка.ПрайсЛист.Форма.Форма", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКомандыФормы(Команда)

	ОчиститьСообщения();

	ЗаполнитьДанныеПоТорговойПлощадке();

	ОбновитьСчетчики();

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкуПринадлежностиТоваровСхемамРаботы(Команда)

	ОчиститьСообщения();

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗаписьТорговойПлощадки", УчетнаяЗапись);
	ОткрытьФорму("Обработка.УправлениеПродажамиНаOzon.Форма.НастройкиПринадлежностиТоваровСхемамРаботы",
		ПараметрыФормы);

КонецПроцедуры

#КонецОбласти

#Область РазделПоставки

&НаКлиенте
Процедура ОткрытьДокументыПоставок(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Обработка.ЖурналДокументовПродажи.Форма.СписокДокументов";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПоставкамиМП");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьАнализОстатковИПланированиеПоставокТоваров(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Обработка.УправлениеПродажамиНаOzon.Форма.ПланированиеПоставокНаСкладыТорговойПлощадки";

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗаписьТорговойПлощадки", УчетнаяЗапись);

	ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПоставокЗаявкиНаПоставку(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Документ.ЗаказКлиента.Форма.ФормаСпискаДокументов";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПоставкамиМП",
		"РаботаСПоставкамиМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПоставокЗаявкиНаПоставкуКОформлению(Команда)

	ОчиститьСообщения();

	// В заголовке команды счетчик заполняется по алгоритму.
	ИмяОткрываемойФормы = "Обработка.ЖурналДокументовПродажи.Форма.КОформлениюНакладных";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПоставкамиМП",
		"РаботаСПоставкамиМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПоставокАктыРасхождений(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Документ.АктОРасхожденияхПослеОтгрузки.Форма.ФормаСписка";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПоставкамиМП",
		"РаботаСПоставкамиМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПоставокЗаявкиНаВозврат(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Документ.ЗаявкаНаВозвратТоваровОтКлиента.Форма.ФормаСпискаДокументов";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПоставкамиМП",
		"РаботаСПоставкамиМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПоставокЗаявкиНаВозвратКОформлению(Команда)

	ОчиститьСообщения();

	// В заголовке команды счетчик заполняется по алгоритму.
	ИмяОткрываемойФормы = "Обработка.ЖурналДокументовПродажи.Форма.КОформлениюНакладныхВозвратов";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПоставкамиМП",
		"РаботаСПоставкамиМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗаявкуНаПоставку(Команда)

	ОчиститьСообщения();

	ПараметрыФормы = ИнтеграцияСМаркетплейсамиКлиент.ПараметрыФормыВыгрузкиЗагрузки(УчетнаяЗапись);

	ПараметрыФормы.ЗаголовокФормы          = НСтр("ru = 'Выгрузка заявки на поставку в файл'");

	ПараметрыФормы.ИмяОбъектаМетаданных    = "Обработка.УправлениеПродажамиНаOzon";
	ПараметрыФормы.ИмяТабличнойЧасти       = "ДанныеПоставок";
	ПараметрыФормы.ИмяМакетаСШаблоном      = "ПФ_MXL_ВыгрузкаВФайлЗаявкаНаПоставку";

	ПараметрыФормы.ЭтоЗагрузкаДанных       = Ложь;
	ПараметрыФормы.ВариантВыгрузкиЗагрузки = "ВнешнийФайл";

	ПараметрыФормы.СсылкаНаОбъект          = ПредопределенноеЗначение("Документ.ЗаказКлиента.ПустаяСсылка");
	ПараметрыФормы.СсылкаНаОбъектЗаголовок = НСтр("ru = 'Заявка на поставку'");

	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Организация", "ДанныеТорговойПлощадки.Организация"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Партнер",     "ДанныеТорговойПлощадки.Партнер"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Контрагент",  "ДанныеТорговойПлощадки.Контрагент"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Договор",     "ДанныеТорговойПлощадки.ДоговорПродажиЧерезСкладыТорговойПлощадки"));

	ПараметрыФормы.СсылкаНаОбъектПараметрыВыбора = ПараметрыВыбора;

	Подсказка = "	"
		+ НСтр("ru = '1. В личном кабинете Ozon в разделе ""FBO"" выбрать ""Заявки на поставку"".
					|	2. Использовать команду ""Создать заявку"" или открыть нужную заявку на поставку из списка ""Новые"".
					|	3. В открытой заявке перейти в раздел ""Товары"" с помощью команды ""Назад"", если документ позиционируется на другом разделе.
					|	4. Использовать команду ""Загрузить товары из XLS"", по которой в диалоге выбрать загружаемый файл, ранее сохраненный из учетной системы 1С.
					|	5. Проверить содержимое таблицы на соответствие выгруженным из учетной системы 1С данным или проанализировать выданные ошибки загрузки файла, исправить заявку в учетной системе 1С, повторно сохранить данные в файл и повторить действия с первого пункта.
					|	6. Подтвердить загрузку командой ""Добавить в заявку"".
					|	7. При необходимости скорректировать данные по товарам. В учетной системе 1С данные заявки на поставку будут скорректированы при загрузке поставок.
					|	8. Продолжить оформление заявки на поставку в соответствии с требуемыми шагами.
					|	9. После оформления заявки на поставку ее номер необходимо заполнить реквизит ""Номер по данным клиента"" в соответствующем документе учетной системы 1С.'")
					+ Символы.ПС + "	<a href=""https://seller-edu.ozon.ru/fbo/process-details""> %1</a>
					|
					|	<a href=""https://seller.ozon.ru/app/supply/orders?filter=New""> %2</a>";

	Подсказка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Подсказка,
		НСтр("ru = 'Подробнее о заявках на поставки в базе знаний'"),
		НСтр("ru = 'Перейти в раздел документов ""Новые""'"));

	ПараметрыФормы.ПодсказкаВариантаВыгрузкиЗагрузкиЧерезФайл = Подсказка;

	Пояснение = НСтр("ru = 'В сформированном файле необходимо проверить заполнение колонок ""Артикул"" и ""Количество"".'")
		+ Символы.ПС + НСТР("ru = 'В выгружаемом документе необходимо проверить и заполнить реквизит ""Номер по данным клиента"" после оформления заявки на поставку в личном кабинете Ozon.'");
	ПараметрыФормы.ПояснениеВариантаВыгрузкиЗагрузкиЧерезФайл = Пояснение;

	ИнтеграцияСМаркетплейсамиКлиент.ОткрытьФормуВыгрузкиЗагрузкиДанных(ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПоставки(Команда)

	ОчиститьСообщения();

	ПараметрыФормы = ИнтеграцияСМаркетплейсамиКлиент.ПараметрыФормыВыгрузкиЗагрузки(УчетнаяЗапись);

	ПараметрыФормы.ЗаголовокФормы               = НСтр("ru = 'Загрузка заявки на поставку и поставок'");

	ПараметрыФормы.ИмяОбъектаМетаданных         = "Обработка.УправлениеПродажамиНаOzon";
	ПараметрыФормы.ИмяТабличнойЧасти            = "ДанныеПоставок";
	ПараметрыФормы.ИмяМакетаСШаблоном           = "ЗагрузкаИзФайлаЗаявкаНаПоставку";

	ПараметрыФормы.ЭтоЗагрузкаДанных            = Истина;
	ПараметрыФормы.ВариантВыгрузкиЗагрузки      = "ВнешнийФайл";
	ПараметрыФормы.ЗагружатьНезаполненныеСтроки = Истина;

	ПараметрыФормы.СсылкаНаОбъект               = ПредопределенноеЗначение("Документ.ЗаказКлиента.ПустаяСсылка");
	ПараметрыФормы.СсылкаНаОбъектЗаголовок      = НСтр("ru = 'Заявка на поставку'");

	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Организация", "ДанныеТорговойПлощадки.Организация"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Партнер",     "ДанныеТорговойПлощадки.Партнер"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Контрагент",  "ДанныеТорговойПлощадки.Контрагент"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Договор",     "ДанныеТорговойПлощадки.ДоговорПродажиЧерезСкладыТорговойПлощадки"));

	ПараметрыФормы.СсылкаНаОбъектПараметрыВыбора = ПараметрыВыбора;
	ПараметрыФормы.СсылкаНаОбъектЗаписыватьЗагружаемыйФайл = Истина;

	Подсказка = "	"
		+ НСтр("ru = '1. В личном кабинете Ozon в разделе ""FBO"" выбрать ""Заявки на поставку"".
					|	2. Открыть нужную заявку на поставку из списка ""Подготовка к поставкам"".
					|	3. В открытой заявке перейти в раздел ""Товары"".
					|	4. Использовать команду ""Скачать расширенный XLS"", по которой будет сохранен файл с данными по поставкам в каталог скачиваемых файлов, настроенный по умолчанию для используемого браузера.'")
					+ Символы.ПС + "	<a href=""https://seller-edu.ozon.ru/fbo/process-details""> %1</a>
					|
					|	<a href=""https://seller.ozon.ru/app/supply/orders?filter=SupplyPreparation""> %2</a>";

	Подсказка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Подсказка,
		НСтр("ru = 'Подробнее о заявках на поставки в базе знаний'"),
		НСтр("ru = 'Перейти в раздел документов ""Подготовка к поставкам""'"));

	ПараметрыФормы.ПодсказкаВариантаЗагрузкиИзМакета          = Подсказка;
	ПараметрыФормы.ПодсказкаВариантаВыгрузкиЗагрузкиЧерезФайл = Подсказка;

	ПараметрыФормы.ИмяФормыСопоставленияДанных =
		"Обработка.УправлениеПродажамиНаOzon.Форма.ИмпортДанныхТоваровСТорговойПлощадки";
	ПараметрыФормы.ПодсказкаОткрытияФормыСопоставленияДанных =
		НСтр("ru = 'Открывает форму импорта товаров с торговой площадки'");

	ПараметрыФормы.ИмяФормыДополнительныхНастроек =
		"Обработка.УправлениеПродажамиНаOzon.Форма.ВыгрузкаЗагрузкаДанныхЗаполнениеЗначенийДополнительныхНастроек";

	ЗаголовокФормыПараметров = ?(ЗначенияФункциональныхОпций.ИспользоватьНесколькоСкладов,
								 НСтр("ru = 'Указать номер заявки на поставку и склад отгрузки'"),
								 НСтр("ru = 'Указать номер заявки на поставку'"));
	ПараметрыФормы.ПараметрыФормыДополнительныхНастроек.УчетнаяЗапись = УчетнаяЗапись;
	ПараметрыФормы.ПараметрыФормыДополнительныхНастроек.ЗаголовокФормы = ЗаголовокФормыПараметров;
	ПараметрыФормы.ПараметрыФормыДополнительныхНастроек.ВариантНастроек = "ЗагрузкаЗаявкиНаПоставку";

	ИнтеграцияСМаркетплейсамиКлиент.ОткрытьФормуВыгрузкиЗагрузкиДанных(ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗаявкуНаВозврат(Команда)

	ОчиститьСообщения();

	ПараметрыФормы = ИнтеграцияСМаркетплейсамиКлиент.ПараметрыФормыВыгрузкиЗагрузки(УчетнаяЗапись);

	ПараметрыФормы.ЗаголовокФормы          = НСтр("ru = 'Выгрузка заявки на возврат товара со стока'");

	ПараметрыФормы.ИмяОбъектаМетаданных    = "Обработка.УправлениеПродажамиНаOzon";
	ПараметрыФормы.ИмяТабличнойЧасти       = "ДанныеЗаявокНаВозврат";
	ПараметрыФормы.ИмяМакетаСШаблоном      = "ПФ_MXL_ВыгрузкаВФайлЗаявкаНаВозврат";

	ПараметрыФормы.ЭтоЗагрузкаДанных       = Ложь;
	ПараметрыФормы.СсылкаНаОбъект          = ПредопределенноеЗначение("Документ.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка");
	ПараметрыФормы.СсылкаНаОбъектЗаголовок = НСтр("ru = 'Заявка на возврат'");

	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Организация", "ДанныеТорговойПлощадки.Организация"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Партнер",     "ДанныеТорговойПлощадки.Партнер"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Контрагент",  "ДанныеТорговойПлощадки.Контрагент"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Договор",     "ДанныеТорговойПлощадки.ДоговорПродажиЧерезСкладыТорговойПлощадки"));

	ПараметрыФормы.СсылкаНаОбъектПараметрыВыбора = ПараметрыВыбора;

	Подсказка = "	"
		+ НСтр("ru = '1. В личном кабинете в разделе ""FBO"" в подразделе ""Вывоз и утилизация"" перейти к списку документов ""Со стока"".
					|	2. Используя команду ""Создать заявку"", выберите тип товаров на вывоз ""Со стока"".
					|	3. Выберите склад, откуда нужно вывезти товары.
					|	4. Загрузите файл, сохраненный из учетной системы 1С.
					|	Важно, чтобы в файле была заполнена колонка ""Идентификатор заявки на поставку"".
					|	Данные по этой колонке берутся из файла с остатками на складе Ozon, скачанного в личном кабинете, и используются для создания заявки на поставку в учетной системе 1С путем загрузки из файла.
					|	Файл с остатками при загрузке заявки на возврат из файла сохраняется в присоединенные файлы документа.'")
					+ Символы.ПС + "	<a href=""https://seller-edu.ozon.ru/fbo/warehouses/zabrat-tovary-so-sklada""> %1</a>
					|
					|	<a href=""https://seller.ozon.ru/app/supply/returns?tab=Stock""> %2</a>";

	Подсказка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Подсказка,
		НСтр("ru = 'Подробнее о возврате товара со склада Ozon'"),
		НСтр("ru = 'Перейти к созданию заявки на возврат товара со стока'"));

	Пояснение =
		НСтр("ru = 'В выгружаемом документе необходимо обеспечить наличие присоединенного файла с остатками на складе Ozon. Из этого файла берется информация о договоре, складе и об идентификаторах заявок на поставку.'");

	ПараметрыФормы.ПодсказкаВариантаВыгрузкиЗагрузкиЧерезФайл = Подсказка;
	ПараметрыФормы.ПояснениеВариантаВыгрузкиЗагрузкиЧерезФайл = Пояснение;

	ПараметрыФормы.ИмяФормыДополнительныхНастроек =
		"Обработка.УправлениеПродажамиНаOzon.Форма.ВыгрузкаЗагрузкаДанныхЗаполнениеЗначенийДополнительныхНастроек";

	ЗаголовокФормыПараметров = НСтр("ru = 'Выбрать файл с остатками на складе Ozon'");
	ПараметрыФормы.ПараметрыФормыДополнительныхНастроек.УчетнаяЗапись = УчетнаяЗапись;
	ПараметрыФормы.ПараметрыФормыДополнительныхНастроек.ЗаголовокФормы = ЗаголовокФормыПараметров;
	ПараметрыФормы.ПараметрыФормыДополнительныхНастроек.ВариантНастроек = "ВыгрузкаЗаявкиНаВозврат";

	ИнтеграцияСМаркетплейсамиКлиент.ОткрытьФормуВыгрузкиЗагрузкиДанных(ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаявкуНаВозврат(Команда)

	ОчиститьСообщения();

	ПараметрыФормы = ИнтеграцияСМаркетплейсамиКлиент.ПараметрыФормыВыгрузкиЗагрузки(УчетнаяЗапись);

	ПараметрыФормы.ЗаголовокФормы          = НСтр("ru = 'Загрузка заявки на возврат товара со стока'");

	ПараметрыФормы.ИмяОбъектаМетаданных    = "Обработка.УправлениеПродажамиНаOzon";
	ПараметрыФормы.ИмяТабличнойЧасти       = "ДанныеЗаявокНаВозврат";
	ПараметрыФормы.ИмяМакетаСШаблоном      = "ЗагрузкаИзФайлаЗаявкаНаВозврат";

	ПараметрыФормы.ЭтоЗагрузкаДанных       = Истина;
	ПараметрыФормы.ВариантВыгрузкиЗагрузки = "ВнешнийФайл";

	ПараметрыФормы.СсылкаНаОбъект          = ПредопределенноеЗначение("Документ.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка");
	ПараметрыФормы.СсылкаНаОбъектЗаголовок = НСтр("ru = 'Заявка на возврат'");

	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Организация", "ДанныеТорговойПлощадки.Организация"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Партнер",     "ДанныеТорговойПлощадки.Партнер"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Контрагент",  "ДанныеТорговойПлощадки.Контрагент"));
	ПараметрыВыбора.Добавить(Новый Структура("Имя, ПутьКДанным",
		"Договор",     "ДанныеТорговойПлощадки.ДоговорПродажиЧерезСкладыТорговойПлощадки"));

	ПараметрыФормы.СсылкаНаОбъектПараметрыВыбора = ПараметрыВыбора;
	ПараметрыФормы.СсылкаНаОбъектЗаписыватьЗагружаемыйФайл = Истина;

	Подсказка = "	"
		+ НСтр("ru = '1. В личном кабинете в разделе ""FBO"" в подразделе ""Вывоз и утилизация"" перейти к списку документов ""Со стока"".
					|	2. Используя команду ""Скачать остатки"", выбрать нужный склад и тип стока, после чего использовать команду ""Сформировать файл"".'")
					+ Символы.ПС + "	<a href=""https://seller-edu.ozon.ru/fbo/warehouses/zabrat-tovary-so-sklada""> %1</a>
					|
					|	<a href=""https://seller.ozon.ru/app/supply/returns?tab=Stock""> %2</a>";

	Подсказка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Подсказка,
		НСтр("ru = 'Подробнее о возврате товара со склада Ozon'"),
		НСтр("ru = 'Перейти к скачиванию остатков для создания заявки на возврат товара со стока'"));

	Пояснение = Символы.ПС
		+ НСтр("ru = 'В процессе загрузки необходимо заполнить колонку ""Количество на вывоз"", данные из которой будут загружены в документ учетной системы 1С. Строки с пустым значением в указанной колонке будут пропущены при заполнении документа.
			|Загружаемый файл будет сохранен в присоединенные файлы документа для получения информации об идентификаторе заявки на поставку в случае выполнения обратной выгрузки заявки на возврат в файл.'");

	ПараметрыФормы.ПодсказкаВариантаЗагрузкиИзМакета          = Подсказка;
	ПараметрыФормы.ПодсказкаВариантаВыгрузкиЗагрузкиЧерезФайл = Подсказка;
	ПараметрыФормы.ПояснениеВариантаВыгрузкиЗагрузкиЧерезФайл = Пояснение;

	ПараметрыФормы.ИмяФормыСопоставленияДанных =
		"Обработка.УправлениеПродажамиНаOzon.Форма.ИмпортДанныхТоваровСТорговойПлощадки";
	ПараметрыФормы.ПодсказкаОткрытияФормыСопоставленияДанных =
		НСтр("ru = 'Открывает форму импорта товаров с торговой площадки'");

	Если ЗначенияФункциональныхОпций.ИспользоватьНесколькоСкладов Тогда
		ПараметрыФормы.ИмяФормыДополнительныхНастроек =
			"Обработка.УправлениеПродажамиНаOzon.Форма.ВыгрузкаЗагрузкаДанныхЗаполнениеЗначенийДополнительныхНастроек";
		ЗаголовокФормыПараметров = НСтр("ru = 'Указать склад приемки'");
		ПараметрыФормы.ПараметрыФормыДополнительныхНастроек.УчетнаяЗапись = УчетнаяЗапись;
		ПараметрыФормы.ПараметрыФормыДополнительныхНастроек.ЗаголовокФормы = ЗаголовокФормыПараметров;
		ПараметрыФормы.ПараметрыФормыДополнительныхНастроек.ВариантНастроек = "ЗагрузкаЗаявкиНаВозврат";
	КонецЕсли;

	ИнтеграцияСМаркетплейсамиКлиент.ОткрытьФормуВыгрузкиЗагрузкиДанных(ПараметрыФормы);

КонецПроцедуры

#КонецОбласти

#Область РазделПродажи

&НаКлиенте
Процедура ОткрытьДокументыПродаж(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Обработка.ЖурналДокументовПродажи.Форма.СписокДокументов";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПродажамиМП");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПродажССобственныхСкладовВсеЗаказы(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "РегистрСведений.ЗаказыТорговыхПлощадок.Форма.ФормаСпискаЗаказов";

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗапись", УчетнаяЗапись);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "FBS" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

	ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы,, "FBS");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПродажССобственныхСкладовКОформлению(Команда)

	ОчиститьСообщения();

	// В заголовке команды счетчик заполняется по алгоритму.
	ИмяОткрываемойФормы = "Обработка.ЖурналДокументовПродажи.Форма.КОформлениюНакладных";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПродажамиМП",
		"РаботаСПродажамиМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПродажССобственныхСкладовВсеЗаказыOzon(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Обработка.УправлениеПродажамиНаOzon.Форма.СписокЗаказов";

	ЗаголовокФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Заказы, отгружаемые со складов продавца <%1>'"), ДанныеТорговойПлощадки.ПостфиксЗаголовкаФормы);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗапись",               УчетнаяЗапись);
	ПараметрыФормы.Вставить("ЗаголовокФормы",              ЗаголовокФормы);
	ПараметрыФормы.Вставить("ЭтоFBO",                      Ложь);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "FBS" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

	ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы,, "FBS");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПродажПередачаВДоставку(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Обработка.ЖурналДокументовПродажи.Форма.СписокДокументов";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПродажамиПередачаВДоставкуМП");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПродажСоСкладовТорговойПлощадкиЗаказы(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Обработка.УправлениеПродажамиНаOzon.Форма.СписокЗаказов";

	ЗаголовокФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Заказы, отгружаемые со складов торговой площадки <%1>'"), ДанныеТорговойПлощадки.ПостфиксЗаголовкаФормы);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяЗапись",               УчетнаяЗапись);
	ПараметрыФормы.Вставить("ЗаголовокФормы",              ЗаголовокФормы);
	ПараметрыФормы.Вставить("ЭтоFBO",                      Истина);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "FBO" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

	ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы,, "FBO");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПродажЗаявкиНаВозврат(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Документ.ЗаявкаНаВозвратТоваровОтКлиента.Форма.ФормаСпискаДокументов";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПродажамиМП",
		"РаботаСПродажамиМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПродажЗаявкиНаВозвратКОформлению(Команда)

	ОчиститьСообщения();

	// В заголовке команды счетчик заполняется по алгоритму.
	ИмяОткрываемойФормы = "Обработка.ЖурналДокументовПродажи.Форма.КОформлениюНакладныхВозвратов";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПродажамиМП",
		"РаботаСПродажамиМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПродажКОформлениюОтчетов(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Обработка.ЖурналДокументовОтчетыКомиссионеров.Форма.КОформлениюОтчетовКомиссионеров";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "РаботаСПродажамиМП",
		"РаботаСПродажамиМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОтчетыОРеализациях(Команда)

	ОчиститьСообщения();

	ПараметрыФормы = ИнтеграцияСМаркетплейсамиКлиент.ПараметрыФормыВыгрузкиЗагрузки(УчетнаяЗапись);

	ПараметрыФормы.ИмяОбъектаМетаданных         = "Обработка.УправлениеПродажамиНаOzon";
	ПараметрыФормы.ИмяТабличнойЧасти            = "ДанныеОРеализованныхТоварах";
	ПараметрыФормы.ИмяМакетаСШаблоном           = "ЗагрузкаИзФайлаПозаказныйОтчетОРеализованныхТоварах";

	ПараметрыФормы.ЭтоЗагрузкаДанных            = Истина;
	ПараметрыФормы.ВариантВыгрузкиЗагрузки      = "ВнешнийФайл";
	ПараметрыФормы.ЗагружатьНезаполненныеСтроки = Истина;
	
	Если ДанныеТорговойПлощадки.СпособОтраженияПродажFBS = "РеализацияВПути"
			Или ДанныеТорговойПлощадки.СпособОтраженияПродажFBO = "Комиссия" 
					И ДанныеТорговойПлощадки.СпособОтраженияПродажFBS = "Комиссия" 
					И ДанныеТорговойПлощадки.ПродажиРазделяютсяПоДоговорам Тогда
		ПараметрыФормы.ЗаголовокФормы               = НСтр("ru = 'Загрузка позаказного отчета о реализованных товарах'");
		ПараметрыФормы.ДоступныИнтеграционныеМетоды = Ложь;
		
		Подсказка = "	"
			+ НСтр("ru = '1. В личном кабинете Ozon в разделе ""Финансы"" в подразделе ""Документы"" активизировать список документов ""Отчеты о реализации"".
						|	2. В списке документов ""Отчеты о реализации"" найти документ ""Позаказный отчет о реализации"" за нужный период.
						|	3. Для выбранного документа нажать пиктограмму загрузки или установить пометку и выполнить команду ""Скачать"".'")
						+ Символы.ПС + "	<a href=""https://seller-edu.ozon.ru/finances-documents/documents/otchet-o-realizacii-tovarov-zakazy""> %1</a>
						|
						|	<a href=""https://seller.ozon.ru/app/finances/documents?type=realizationReports""> %2</a>";

		Подсказка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Подсказка,
			НСтр("ru = 'Подробнее об отчете в базе знаний'"),
			НСтр("ru = 'Перейти в раздел документов ""Отчеты о реализации""'"));
	Иначе
		ПараметрыФормы.ЗаголовокФормы               = НСтр("ru = 'Загрузка отчета о реализованных товарах'");
		ПараметрыФормы.ДоступныИнтеграционныеМетоды = Истина;
		
		Подсказка = "	"
			+ НСтр("ru = '1. В личном кабинете Ozon в разделе ""Финансы"" в подразделе ""Документы"" активизировать список документов ""Отчеты о реализации"".
						|	2. В списке документов ""Отчеты о реализации"" найти документ ""Отчет о реализации товара"" за нужный период.
						|	3. Для выбранного документа нажать пиктограмму загрузки или установить пометку и выполнить команду ""Скачать"".'")
						+ Символы.ПС + "	<a href=""https://seller-edu.ozon.ru/finances-documents/documents/otchet-o-realizacii-tovarov""> %1</a>
						|
						|	<a href=""https://seller.ozon.ru/app/finances/documents?type=realizationReports""> %2</a>";

		Подсказка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Подсказка,
			НСтр("ru = 'Подробнее о позаказном отчете в базе знаний'"),
			НСтр("ru = 'Перейти в раздел документов ""Отчеты о реализации""'"));

		ПояснениеAPI = Символы.ПС
			+ НСтр("ru = 'Данные для загрузки могут отсутствовать, если выбран период, за который еще не сформирован отчетный документ, или торговая площадка не возвращает данные из-за изменений в интеграционных методах.'");
		ПараметрыФормы.ПояснениеВариантаВыгрузкиЗагрузкиЧерезAPI = ПояснениеAPI;
	КонецЕсли;

	ПараметрыФормы.ПодсказкаВариантаЗагрузкиИзМакета          = Подсказка;
	ПараметрыФормы.ПодсказкаВариантаВыгрузкиЗагрузкиЧерезФайл = Подсказка;

	ПараметрыФормы.ВидПериода   = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"); 
	ПараметрыФормы.ДатаВПериоде = ДобавитьМесяц(ОбщегоНазначенияКлиент.ДатаСеанса(), -1);

	ПараметрыФормы.ИмяФормыСопоставленияДанных =
		"Обработка.УправлениеПродажамиНаOzon.Форма.ИмпортДанныхТоваровСТорговойПлощадки";
	ПараметрыФормы.ПодсказкаОткрытияФормыСопоставленияДанных =
		НСтр("ru = 'Открывает форму импорта товаров с торговой площадки'");

	ПараметрыФормы.ИмяФормыПослеЗагрузкиДанных               = "Обработка.УправлениеПродажамиНаOzon.Форма.СводныйОтчетОЗагруженныхДанных";
	ПараметрыФормы.ПодсказкаОткрытияФормыПослеЗагрузкиДанных = НСтр("ru = 'Отчет о загрузке данных'");

	ИнтеграцияСМаркетплейсамиКлиент.ОткрытьФормуВыгрузкиЗагрузкиДанных(ПараметрыФормы);

КонецПроцедуры

#КонецОбласти

#Область РазделВзаиморасчеты

&НаКлиенте
Процедура ОткрытьДокументыПриобретенияУслуг(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Документ.ПриобретениеУслугПрочихАктивов.ФормаСписка";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "ВзаиморасчетыМП",
		"ВзаиморасчетыМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыВзаимозачетаЗадолженности(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Документ.ВзаимозачетЗадолженности.ФормаСписка";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "ВзаиморасчетыМП",
		"ВзаиморасчетыМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыПлатежей(Команда)

	ОчиститьСообщения();

	ИмяОткрываемойФормы = "Обработка.ЖурналДокументовБезналичныеПлатежи.Форма.ФормаСписка";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "ВзаиморасчетыМП",
		"ВзаиморасчетыМП" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументыСверкиВзаиморасчетов(Команда)

	ОчиститьСообщения();
	ИмяОткрываемойФормы = "Документ.СверкаВзаиморасчетов2_5_11.ФормаСписка";
	ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, "ВзаиморасчетыOzon",
		"ВзаиморасчетыOzon" + ДанныеТорговойПлощадки.ИдентификаторКлиента);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьЗначенияФункциональныхОпций()

	ЗначенияФункциональныхОпций = Новый Структура;
	ЗначенияФункциональныхОпций.Вставить("ИспользоватьЗаказыКлиентов",
		ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыКлиентов"));
	ЗначенияФункциональныхОпций.Вставить("ИспользоватьЗаказыКлиентовСоСклада",
		ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыКлиентов")
			И (ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента")
				Или ПолучитьФункциональнуюОпцию("ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента")));
	ЗначенияФункциональныхОпций.Вставить("ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов",
		ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов"));
	ЗначенияФункциональныхОпций.Вставить("ИспользоватьКомиссиюПриПродажах",
		ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах"));
	ЗначенияФункциональныхОпций.Вставить("ИспользоватьСоглашенияСКлиентами",
		ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами"));
	ЗначенияФункциональныхОпций.Вставить("ИспользоватьНесколькоСкладов",
		ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов"));

КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокУчетныхЗаписей(УчетнаяЗаписьПоУмолчанию = Неопределено)

	Если Не ЗначениеЗаполнено(УчетнаяЗаписьПоУмолчанию) Тогда
		УчетнаяЗапись = Справочники.УчетныеЗаписиМаркетплейсов.ОсновнаяУчетнаяЗапись(
			ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.МаркетплейсOzon"));
	КонецЕсли;

	ПодключениеКСервисуВыполнено = ЗначениеЗаполнено(УчетнаяЗапись);
	Если Не ПодключениеКСервисуВыполнено Тогда
		СписокНастроекПодключенияКСервису = ИнтеграцияСМаркетплейсомOzonСервер.СписокНастроекПодключенияКСервису();
		ПодключениеКСервисуВыполнено = (СписокНастроекПодключенияКСервису.Количество() > 0);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоТорговойПлощадке()

	ПолучитьЗначенияФункциональныхОпций();

	// Заполнить данные из настроек интеграции.
	ДанныеТорговойПлощадки = Справочники.УчетныеЗаписиМаркетплейсов.НастройкиУчетнойЗаписи(УчетнаяЗапись);

	Заголовок = НСтр("ru = 'Управление продажами на Ozon'");
	Если Не УчетнаяЗапись.Пустая() Тогда
		Заголовок = Заголовок + " - " + УчетнаяЗапись;
	КонецЕсли;

	УстановитьВидимостьДоступностьЭлементов();
	УстановитьУсловноеОформление();

КонецПроцедуры

&НаСервере
Процедура ПодсказкиЭлементовПоУмолчанию()

	Для Каждого Команда Из Команды Цикл 
		ПодсказкиЭлементовПоУмолчанию.Добавить(Команда.Имя, Команда.Подсказка);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()

	ДоступноИспользованиеПрайсЛиста          = ПравоДоступа("Использование", Метаданные.Обработки.ПрайсЛист);
	ДоступноИспользованиеЖурналаПродаж       = ПравоДоступа("Использование", Метаданные.Обработки.ЖурналДокументовПродажи);
	ДоступенПросмотрЗаказовКлиента           = ПравоДоступа("Просмотр", Метаданные.Документы.ЗаказКлиента);
	ДоступенПросмотрАктовРасхождений         = ПравоДоступа("Просмотр", Метаданные.Документы.АктОРасхожденияхПослеОтгрузки);
	ДоступенПросмотрЗаявокНаВозврат          = ПравоДоступа("Просмотр", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента);
	ДоступноИспользованиеОтчетовКомиссионера = ПравоДоступа("Использование", Метаданные.Обработки.ЖурналДокументовОтчетыКомиссионеров);

	ДоступенПросмотрПриобретенияУслуг        = ПравоДоступа("Просмотр", Метаданные.Документы.ПриобретениеУслугПрочихАктивов);
	ДоступенПросмотрВзаимозачета             = ПравоДоступа("Просмотр", Метаданные.Документы.ВзаимозачетЗадолженности);
	ДоступенПросмотрСверокВзаиморасчетов     = ПравоДоступа("Просмотр", Метаданные.Документы.СверкаВзаиморасчетов2_4);
	ДоступноИспользованиеБезналичныхПлатежей = ПравоДоступа("Использование", Метаданные.Обработки.ЖурналДокументовБезналичныеПлатежи);

	ДоступноОформлениеЗаказовКлиентов = ЗначенияФункциональныхОпций.ИспользоватьЗаказыКлиентов;
	
	ДоступноОформлениеЗаявокНаВозврат = ЗначенияФункциональныхОпций.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов;

	Элементы.ОткрытьНастройкуПринадлежностиТоваровСхемамРаботы.Доступность = Не УчетнаяЗапись.Пустая();

	Элементы.ОткрытьПрайсЛист.Доступность = ДоступноИспользованиеПрайсЛиста;

	Элементы.ОткрытьАнализОстатковИПланированиеПоставокТоваров.Доступность = Не УчетнаяЗапись.Пустая();

	ГруппаПоставкиДоступность = Не УчетнаяЗапись.Пустая()
		И ЗначенияФункциональныхОпций.ИспользоватьКомиссиюПриПродажах
		И ДанныеТорговойПлощадки.СпособОтраженияПродажFBO = "Комиссия";
	УправлениеДоступностьюПодчиненныхЭлементов(Элементы.ГруппаПоставки, ГруппаПоставкиДоступность);

	Если ГруппаПоставкиДоступность Тогда
		Элементы.ОткрытьДокументыПоставок.Доступность                            = ДоступноИспользованиеЖурналаПродаж;
		Элементы.ОткрытьДокументыПоставокЗаявкиНаПоставкуКОформлению.Доступность = ДоступноИспользованиеЖурналаПродаж;
		Элементы.ОткрытьДокументыПоставокЗаявкиНаВозвратКОформлению.Доступность  = ДоступноИспользованиеЖурналаПродаж;
		Элементы.ОткрытьДокументыПоставокЗаявкиНаПоставку.Доступность            = ДоступенПросмотрЗаказовКлиента;
		Элементы.ВыгрузитьЗаявкуНаПоставку.Доступность                           = ДоступенПросмотрЗаказовКлиента
																					И ДоступноОформлениеЗаказовКлиентов;
		Элементы.ЗагрузитьПоставки.Доступность                                   = ДоступенПросмотрЗаказовКлиента;
		Элементы.ОткрытьДокументыПоставокАктыРасхождений.Доступность             = ДоступенПросмотрАктовРасхождений;
		Элементы.ОткрытьДокументыПоставокЗаявкиНаВозврат.Доступность             = ДоступенПросмотрЗаявокНаВозврат;
		Элементы.ВыгрузитьЗаявкуНаВозврат.Доступность                            = ДоступенПросмотрЗаявокНаВозврат
																					И ДоступноОформлениеЗаявокНаВозврат;
		Элементы.ЗагрузитьЗаявкуНаВозврат.Доступность                            = ДоступенПросмотрЗаявокНаВозврат
																					И ДоступноОформлениеЗаявокНаВозврат;
	КонецЕсли;

	ГруппаПродажиДоступность = Не УчетнаяЗапись.Пустая()
		И (ДанныеТорговойПлощадки.СпособОтраженияПродажFBO <> "НеИспользуются"
		Или ДанныеТорговойПлощадки.СпособОтраженияПродажFBS <> "НеИспользуются");
	УправлениеДоступностьюПодчиненныхЭлементов(Элементы.ГруппаПродажи, ГруппаПродажиДоступность);

	Если ГруппаПродажиДоступность Тогда
		Элементы.ОткрытьДокументыПродаж.Доступность                                 = ДоступноИспользованиеЖурналаПродаж;
		Элементы.ОткрытьДокументыПродажССобственныхСкладовКОформлению.Доступность   = ДоступноИспользованиеЖурналаПродаж
													И ДанныеТорговойПлощадки.СпособОтраженияПродажFBS <> "НеИспользуются";
		Элементы.ОткрытьДокументыПродажССобственныхСкладовВсеЗаказы.Доступность     = ДоступенПросмотрЗаказовКлиента
													И ДанныеТорговойПлощадки.СпособОтраженияПродажFBS <> "НеИспользуются";
		Элементы.ОткрытьДокументыПродажССобственныхСкладовВсеЗаказыOzon.Доступность = ДоступенПросмотрЗаказовКлиента
													И ДанныеТорговойПлощадки.СпособОтраженияПродажFBS <> "НеИспользуются";
		Элементы.ОткрытьДокументыПродажКОформлениюОтчетов.Доступность               = (ДанныеТорговойПлощадки.СпособОтраженияПродажFBO = "Комиссия"
													Или ДанныеТорговойПлощадки.СпособОтраженияПродажFBS = "Комиссия");
		Элементы.ОткрытьДокументыПродажКОформлениюОтчетов.Доступность               = ДоступноИспользованиеОтчетовКомиссионера;
		Элементы.ОткрытьДокументыПродажЗаявкиНаВозврат.Доступность                  = ДоступенПросмотрЗаявокНаВозврат;
		Элементы.ОткрытьДокументыПродажЗаявкиНаВозвратКОформлению.Доступность       = ДоступноИспользованиеЖурналаПродаж;
		Элементы.ЗагрузитьОтчетыОРеализациях.Доступность                            = ДоступноИспользованиеОтчетовКомиссионера
														И (ДанныеТорговойПлощадки.СпособОтраженияПродажFBO = "Комиссия"
															Или ДанныеТорговойПлощадки.СпособОтраженияПродажFBS = "Комиссия")
													Или ДоступноИспользованиеЖурналаПродаж
														И ДанныеТорговойПлощадки.СпособОтраженияПродажFBS = "РеализацияВПути";

		Элементы.ГруппаКОформлениюОтчетовОПродажах.Видимость =
			ДанныеТорговойПлощадки.СпособОтраженияПродажFBO = "Комиссия"
				Или ДанныеТорговойПлощадки.СпособОтраженияПродажFBS = "Комиссия";

		Элементы.ОткрытьДокументыПродажСоСкладовТорговойПлощадкиЗаказы.Доступность  = Элементы.ГруппаПоставки.Доступность;

		Элементы.ГруппаДокументыПродажПередачаВДоставку.Видимость                   = ДанныеТорговойПлощадки.СпособОтраженияПродажFBS = "Комиссия";
		Элементы.ОткрытьДокументыПродажПередачаВДоставку.Доступность                = ДоступноИспользованиеЖурналаПродаж;
	КонецЕсли;

	ГруппаВзаиморасчетыДоступность = Не УчетнаяЗапись.Пустая();
	УправлениеДоступностьюПодчиненныхЭлементов(Элементы.ГруппаВзаиморасчеты, ГруппаВзаиморасчетыДоступность);

	Если ГруппаВзаиморасчетыДоступность Тогда
		Элементы.ОткрытьДокументыПриобретенияУслуг.Доступность         = ДоступенПросмотрПриобретенияУслуг;
		Элементы.ОткрытьДокументыВзаимозачетаЗадолженности.Доступность = ДоступенПросмотрВзаимозачета;
		Элементы.ОткрытьДокументыОплаты.Доступность                    = ДоступноИспользованиеБезналичныхПлатежей;
		Элементы.ОткрытьДокументыСверкиВзаиморасчетов.Доступность      = ДоступенПросмотрСверокВзаиморасчетов;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УправлениеДоступностьюПодчиненныхЭлементов(Знач Элемент, ДоступностьЭлементов)

	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Элемент, "ЦветТекста") Тогда
		Элемент.ЦветТекста = ?(ДоступностьЭлементов, ЦветаСтиля.ГиперссылкаЦвет, ЦветаСтиля.ЦветНеАктивнойСтроки);
	КонецЕсли;

	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Элемент, "ПодчиненныеЭлементы") Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ПодчиненныйЭлемент Из Элемент.ПодчиненныеЭлементы Цикл
		ПодчиненныйЭлемент.Доступность = ДоступностьЭлементов;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПодчиненныйЭлемент, "ЦветТекста") Тогда
			ПодчиненныйЭлемент.ЦветТекста = ?(ДоступностьЭлементов, ЦветаСтиля.ГиперссылкаЦвет, ЦветаСтиля.ЦветНеАктивнойСтроки);
		КонецЕсли;
		УправлениеДоступностьюПодчиненныхЭлементов(ПодчиненныйЭлемент, ДоступностьЭлементов)
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	МассивЭлементовНеактивных = Новый Массив;

	Если Не ЗначенияФункциональныхОпций.ИспользоватьЗаказыКлиентов Тогда
		МассивЭлементовНеактивных.Добавить(Элементы.ОткрытьДокументыПоставокЗаявкиНаПоставку);
		МассивЭлементовНеактивных.Добавить(Элементы.ВыгрузитьЗаявкуНаПоставку);
		МассивЭлементовНеактивных.Добавить(Элементы.ОткрытьДокументыПродажССобственныхСкладовВсеЗаказы);
		МассивЭлементовНеактивных.Добавить(Элементы.ОткрытьДокументыПродажССобственныхСкладовВсеЗаказыOzon);
	ИначеЕсли Не ЗначенияФункциональныхОпций.ИспользоватьЗаказыКлиентовСоСклада Тогда
		МассивЭлементовНеактивных.Добавить(Элементы.ОткрытьДокументыПродажССобственныхСкладовВсеЗаказы);
		МассивЭлементовНеактивных.Добавить(Элементы.ОткрытьДокументыПродажССобственныхСкладовВсеЗаказыOzon);
	КонецЕсли;

	Если Не ЗначенияФункциональныхОпций.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов Тогда
		МассивЭлементовНеактивных.Добавить(Элементы.ОткрытьДокументыПоставокЗаявкиНаВозврат);
		МассивЭлементовНеактивных.Добавить(Элементы.ОткрытьДокументыПродажЗаявкиНаВозврат);
	КонецЕсли;

	Для Каждого Элемент Из МассивЭлементовНеактивных Цикл
		Элемент.ЦветТекста = ЦветаСтиля.ЦветНеАктивнойСтроки;
	КонецЦикла;

	МассивЭлементовПодсказки = Новый Массив;
	МассивЭлементовПодсказки.Добавить(Элементы.ОткрытьДокументыПоставокЗаявкиНаПоставку);
	МассивЭлементовПодсказки.Добавить(Элементы.ОткрытьДокументыПродажССобственныхСкладовВсеЗаказы);
	МассивЭлементовПодсказки.Добавить(Элементы.ОткрытьДокументыПоставокЗаявкиНаВозврат);
	МассивЭлементовПодсказки.Добавить(Элементы.ОткрытьДокументыПродажЗаявкиНаВозврат);

	Для Каждого Элемент Из МассивЭлементовПодсказки Цикл
		Команда = Команды.Найти(Элемент.ИмяКоманды);
		Если Команда = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если Элемент.ЦветТекста = ЦветаСтиля.ЦветНеАктивнойСтроки Тогда
			Команда.Подсказка = НСтр("ru = 'Использование документов этого вида отключено'");
		Иначе
			ЭлементПодсказки = ПодсказкиЭлементовПоУмолчанию.НайтиПоЗначению(Элемент.ИмяКоманды);
			Если ЭлементПодсказки <> Неопределено Тогда
				Команда.Подсказка = ЭлементПодсказки.Представление;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСчетчики()

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	ДанныеСчетчиков = Новый Структура;

	Если Элементы.ОткрытьДокументыПоставокЗаявкиНаПоставкуКОформлению.Доступность Тогда
		ДанныеСчетчиков.Вставить("ОтгрузитьПоставки", 0);
	Иначе
		ДанныеСчетчиков.Вставить("ОтгрузитьПоставки", -1);
	КонецЕсли;

	Если Элементы.ОткрытьДокументыПродажССобственныхСкладовКОформлению.Доступность Тогда
		ДанныеСчетчиков.Вставить("ОтгрузитьПродажи", 0);
	Иначе
		ДанныеСчетчиков.Вставить("ОтгрузитьПродажи", -1);
	КонецЕсли;

	Если Элементы.ОткрытьДокументыПоставокЗаявкиНаВозвратКОформлению.Доступность Тогда
		ДанныеСчетчиков.Вставить("ПринятьВозвратыПоставок", 0);
	Иначе
		ДанныеСчетчиков.Вставить("ПринятьВозвратыПоставок", -1);
	КонецЕсли;

	Если Элементы.ОткрытьДокументыПродажЗаявкиНаВозвратКОформлению.Доступность Тогда
		ДанныеСчетчиков.Вставить("ПринятьВозвратыПродаж", 0);
	Иначе
		ДанныеСчетчиков.Вставить("ПринятьВозвратыПродаж", -1);
	КонецЕсли;

	ДанныеСчетчиков.Вставить("ИдентификаторЗадания", Новый УникальныйИдентификатор());

	ОбновитьЗаголовкиГиперссылок(ДанныеСчетчиков, Истина);

	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьСчетчикиЗавершение", ЭтотОбъект,
		Новый Структура("ИдентификаторЗадания", ДанныеСчетчиков.ИдентификаторЗадания));
	ДлительнаяОперация = ПолучитьСчетчики(ДанныеСчетчиков, ДанныеТорговойПлощадки);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСчетчики(ДанныеСчетчиков, ДанныеТорговойПлощадки)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(
		ДанныеТорговойПлощадки.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания =
		НСтр("ru = 'Ozon. Пересчет счетчиков рабочего места управления продажами'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	ИмяМетода = "Обработки.ПанельАдминистрированияПродажиНаOzon.ПолучитьСчетчики";
	Результат = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		ИмяМетода,
		ДанныеСчетчиков,
		ДанныеТорговойПлощадки);

	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ОбновитьСчетчикиЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт

	Если Результат <> Неопределено
	  И Результат.Статус = "Выполнено"
	  И Результат.Свойство("АдресРезультата") Тогда

		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если РезультатОперации.ИдентификаторЗадания <> ДополнительныеПараметры.ИдентификаторЗадания Тогда
			Возврат;
		КонецЕсли;

		ОбновитьЗаголовкиГиперссылок(РезультатОперации);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовкиГиперссылок(ДанныеСчетчиков, ЭтоЗапускОбновления = Ложь)

	Если ДанныеСчетчиков.Свойство("ОтгрузитьПоставки") Тогда
		Элемент = Элементы.ОткрытьДокументыПоставокЗаявкиНаПоставкуКОформлению;
		ЦветТекста = ЦветаСтиля.ЦветНеАктивнойСтроки;

		Если ЭтоЗапускОбновления Тогда
			ПредставлениеСчетчика = "...";
		Иначе
			ПредставлениеСчетчика = ?(ДанныеСчетчиков.ОтгрузитьПоставки > 1000,
									  Строка(1000) + "+",
									  ДанныеСчетчиков.ОтгрузитьПоставки);

			Если Элемент.Доступность И ДанныеСчетчиков.ОтгрузитьПоставки > 0 Тогда
				ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
			КонецЕсли;
		КонецЕсли;

		ШаблонЗаголовка = НСтр("ru = 'Отгрузить (%1)'");
		Элемент.Заголовок =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, ПредставлениеСчетчика);
		Элемент.ЦветТекста = ЦветТекста;
	КонецЕсли;

	Если ДанныеСчетчиков.Свойство("ОтгрузитьПродажи") Тогда
		Элемент = Элементы.ОткрытьДокументыПродажССобственныхСкладовКОформлению;
		ЦветТекста = ЦветаСтиля.ЦветНеАктивнойСтроки;

		Если ЭтоЗапускОбновления Тогда
			ПредставлениеСчетчика = "...";
		Иначе
			ПредставлениеСчетчика = ?(ДанныеСчетчиков.ОтгрузитьПродажи > 1000,
									  Строка(1000) + "+",
									  ДанныеСчетчиков.ОтгрузитьПродажи);

			Если Элемент.Доступность И ДанныеСчетчиков.ОтгрузитьПродажи > 0 Тогда
				ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
			КонецЕсли;
		КонецЕсли;

		ШаблонЗаголовка = НСтр("ru = 'Отгрузить (%1)'");
		Элемент.Заголовок =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, ПредставлениеСчетчика);
		Элемент.ЦветТекста = ЦветТекста;
	КонецЕсли;

	Если ДанныеСчетчиков.Свойство("ПринятьВозвратыПоставок") Тогда
		Элемент = Элементы.ОткрытьДокументыПоставокЗаявкиНаВозвратКОформлению;
		ЦветТекста = ЦветаСтиля.ЦветНеАктивнойСтроки;

		Если ЭтоЗапускОбновления Тогда
			ПредставлениеСчетчика = "...";
		Иначе
			ПредставлениеСчетчика = ?(ДанныеСчетчиков.ПринятьВозвратыПоставок > 1000,
									  Строка(1000) + "+",
									  ДанныеСчетчиков.ПринятьВозвратыПоставок);

			Если Элемент.Доступность И ДанныеСчетчиков.ПринятьВозвратыПоставок > 0 Тогда
				ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
			КонецЕсли;
		КонецЕсли;

		ШаблонЗаголовка = НСтр("ru = 'Принять (%1)'");
		Элемент.Заголовок =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, ПредставлениеСчетчика);
		Элемент.ЦветТекста = ЦветТекста;
	КонецЕсли;

	Если ДанныеСчетчиков.Свойство("ПринятьВозвратыПродаж") Тогда
		Элемент = Элементы.ОткрытьДокументыПродажЗаявкиНаВозвратКОформлению;
		ЦветТекста = ЦветаСтиля.ЦветНеАктивнойСтроки;

		Если ЭтоЗапускОбновления Тогда
			ПредставлениеСчетчика = "...";
		Иначе
			ПредставлениеСчетчика = ?(ДанныеСчетчиков.ПринятьВозвратыПродаж > 1000,
									  Строка(1000) + "+",
									  ДанныеСчетчиков.ПринятьВозвратыПродаж);

			Если Элемент.Доступность И ДанныеСчетчиков.ПринятьВозвратыПродаж > 0 Тогда
				ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
			КонецЕсли;
		КонецЕсли;

		ШаблонЗаголовка = НСтр("ru = 'Принять (%1)'");
		Элемент.Заголовок =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, ПредставлениеСчетчика);
		Элемент.ЦветТекста = ЦветТекста;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСДополнениемПараметров(ИмяОткрываемойФормы, КлючНазначенияФормы, КлючНазначенияИспользования = "")

	ДополнительныеСвойства = Новый Структура;
	ДополнительныеСвойства.Вставить("ДанныеТорговойПлощадки", ДанныеТорговойПлощадки);
	ДополнительныеСвойства.Вставить("КлючНазначенияФормы",    КлючНазначенияФормы);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УникальныйИдентификаторФормы", Ложь);
	Если Не ПустаяСтрока(КлючНазначенияИспользования) Тогда
		ПараметрыФормы.Вставить("КлючНазначенияИспользования", КлючНазначенияИспользования);
	КонецЕсли;

	ИнтеграцияСМаркетплейсамиКлиент.ДополнитьПараметрыФормы(
		ПараметрыФормы,
		ДополнительныеСвойства,
		ИмяОткрываемойФормы);

	ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы,, ПараметрыФормы.УникальныйИдентификаторФормы);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПодключенияКСервису()

	ИмяОткрываемойФормы = "Обработка.УправлениеПродажамиНаOzon.Форма.ПодключениеКСервису";
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодключениеКСервисуЗавершение", ЭтотОбъект);

	ОткрытьФорму(ИмяОткрываемойФормы,, ЭтотОбъект,,,, ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры

&НаКлиенте
Процедура ПодключениеКСервисуЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Не ПодключениеКСервисуВыполнено Тогда
		Закрыть();
	Иначе
		ОбновитьСписокУчетныхЗаписей(УчетнаяЗапись);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидыЦенУчетныхЗаписейOzon()

	Возврат Справочники.УчетныеЗаписиМаркетплейсов.ВидыЦенУчетныхЗаписейМаркетплейса(Перечисления.ВидыМаркетплейсов.МаркетплейсOzon);

КонецФункции

#КонецОбласти
