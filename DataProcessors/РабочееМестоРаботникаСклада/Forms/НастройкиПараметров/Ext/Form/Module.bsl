
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодключаемоеОборудование") Тогда
		ТекстИсключения = НСтр("ru = 'В настройках программы отключено использование подключаемого оборудования. Использовать мобильные рабочие места работников склада можно только при использовании подключаемого оборудования.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	НоваяЗапись =  Параметры.Ключ.Пустой();
	
	Если НоваяЗапись Тогда
		Запись.Пользователь = Параметры.Пользователь;
		Запись.ОткрываемаяФорма = Параметры.ОткрываемаяФорма;
		
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СтруктураПараметров = ТекущийОбъект.Параметры.Получить();
	
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура")
		И СтруктураПараметров.Свойство("Склад")
		И СтруктураПараметров.Свойство("Помещение") Тогда
		
		Склад = СтруктураПараметров.Склад;
		Помещение = СтруктураПараметров.Помещение;
		
		Если Не СтруктураПараметров.Свойство("РазрешениеЭкрана") Тогда
			РазрешениеЭкрана = Перечисления.РазрешенияЭкрана.Разрешение320х320;
		Иначе
			РазрешениеЭкрана = СтруктураПараметров.РазрешениеЭкрана;
		КонецЕсли;
		
		Если Не СтруктураПараметров.Свойство("ПорядокОбработкиСкладскогоЗадания") Тогда
			ПорядокОбработкиСкладскогоЗадания = Перечисления.ПорядокОбработкиСкладскогоЗадания.ЯчейкаТовар;
		Иначе
			ПорядокОбработкиСкладскогоЗадания = СтруктураПараметров.ПорядокОбработкиСкладскогоЗадания;
		КонецЕсли;
		
	КонецЕсли;
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Склад", Склад);
	СтруктураПараметров.Вставить("Помещение", Помещение);
	СтруктураПараметров.Вставить("РазрешениеЭкрана", РазрешениеЭкрана);
	СтруктураПараметров.Вставить("ПорядокОбработкиСкладскогоЗадания", ПорядокОбработкиСкладскогоЗадания);
	
	ТекущийОбъект.Параметры = Новый ХранилищеЗначения(СтруктураПараметров);
	ТекущийОбъект.ТекстовоеПредставлениеПараметров = СкладыСервер.ПолучитьПредставлениеСклада(Склад, Помещение);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не СкладыСервер.ИспользоватьСкладскиеПомещения(Склад) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Помещение");
	КонецЕсли;
	
	ШаблонОшибкиРеквизитаТЧ = НСтр("ru='Не заполнена колонка ""Рабочий участок"" в строке %НомерСтроки% списка ""Рабочие участки""'");
	
	Для Каждого СтрТабл Из РабочиеУчастки Цикл
		
		Если Не ЗначениеЗаполнено(СтрТабл.РабочийУчасток) Тогда
			
			НомерСтроки = РабочиеУчастки.Индекс(СтрТабл) + 1;
			
			ТекстСообщения = СтрЗаменить(ШаблонОшибкиРеквизитаТЧ, "%НомерСтроки%", НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РабочиеУчастки", НомерСтроки, "РабочийУчасток");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ИсключитьПользователяИзРаботниковУчастка(РабочийУчасток, РаботникУчастка)
	
	РабочийУчастокОбъект = РабочийУчасток.ПолучитьОбъект();
	
	СтрокаТЧ = РабочийУчастокОбъект.РаботникиУчастка.Найти(РаботникУчастка, "РаботникУчастка");
	Если Не (СтрокаТЧ = Неопределено) Тогда
		РабочийУчастокОбъект.РаботникиУчастка.Удалить(СтрокаТЧ);
		РабочийУчастокОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Пройти по строкам таблицы рабочих участков до изменения, если рабочий участок
	// отсутствует в таблице после изменения, надо исключить пользователя из списка работников.
	
	ПараметрыОтбора = Новый Структура("РабочийУчасток");
	
	Для каждого СтрокаТабл Из РабочиеУчасткиДоИзменения Цикл
		
		ПараметрыОтбора.РабочийУчасток = СтрокаТабл.РабочийУчасток;
		
		МассивСтрок = РабочиеУчастки.НайтиСтроки(ПараметрыОтбора);
		Если МассивСтрок.Количество() = 0 Тогда // рабочий участок был удален из списка
			ИсключитьПользователяИзРаботниковУчастка(СтрокаТабл.РабочийУчасток, Запись.Пользователь);
		КонецЕсли;
		
	КонецЦикла;
	
	// Добавить пользователя в список работников участка для всех указанных участков.
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РабочиеУчастки.РабочийУчасток
	|ПОМЕСТИТЬ ТекущиеРабочиеУчастки
	|ИЗ
	|	&РабочиеУчастки КАК РабочиеУчастки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеРабочиеУчастки.РабочийУчасток КАК РабочийУчасток
	|ИЗ
	|	ТекущиеРабочиеУчастки КАК ТекущиеРабочиеУчастки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РабочиеУчастки.РаботникиУчастка КАК РабочиеУчасткиВБазе
	|		ПО ТекущиеРабочиеУчастки.РабочийУчасток = РабочиеУчасткиВБазе.Ссылка
	|			И (РабочиеУчасткиВБазе.РаботникУчастка = &Пользователь)
	|ГДЕ
	|	РабочиеУчасткиВБазе.Ссылка ЕСТЬ NULL ";
	
	ТаблицаУчастков = РабочиеУчастки.Выгрузить();
	
	ТаблицаУчастков.Свернуть("РабочийУчасток");
	
	Запрос.УстановитьПараметр("РабочиеУчастки", ТаблицаУчастков);
	Запрос.УстановитьПараметр("Пользователь", ТекущийОбъект.Пользователь);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СправочникОбъект = Выборка.РабочийУчасток.ПолучитьОбъект(); // СправочникОбъект.РабочиеУчастки
		НоваяСтрока = СправочникОбъект.РаботникиУчастка.Добавить();
		НоваяСтрока.РаботникУчастка = ТекущийОбъект.Пользователь;
		
		СправочникОбъект.Записать();
	КонецЦикла;
	
	// Установить для указанного пользователя интерфейс версии 8.2, т.к. МРМ в Такси недоступно.
	ИдентификаторПользователяИБ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Пользователь, "ИдентификаторПользователяИБ");
	ИмяПользователя = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдентификаторПользователяИБ).Имя;
	Если Не РабочееМестоРаботникаСкладаСервер.ВариантИнтерфейсаКлиентскогоПриложенияВерсии8_2(ИмяПользователя) Тогда 
		РабочееМестоРаботникаСкладаСервер.УстановитьВариантИнтерфейсаКлиентскогоПриложенияВерсии8_2(ИмяПользователя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	СтруктураИзмерений = Новый Структура;
	СтруктураИзмерений.Вставить("Пользователь", Запись.Пользователь);
	СтруктураИзмерений.Вставить("ОткрываемаяФорма", Запись.ОткрываемаяФорма);
	
	Оповестить("Запись_НастройкиОткрытияФормПриНачалеРаботыСистемы", ПараметрыЗаписи, СтруктураИзмерений);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	СкладПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ЗаполнитьРабочиеУчастки();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура СкладПриИзмененииСервер()
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад,Помещение", Склад,Помещение));
	
	ЗаполнитьРабочиеУчастки();
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	СтруктураПараметровФормы = ОткрытиеФормПриНачалеРаботыСистемыКлиентСерверПереопределяемый.НастройкиФормы(Запись.ОткрываемаяФорма);
	ПараметрЗапуска = СтруктураПараметровФормы.ПараметрЗапуска;
	
	СтароеЗначениеСклад = Склад;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов") Тогда
		Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	Иначе
		СтруктураЗаполнения = Новый Структура("Склад");
		ОбщегоНазначенияУТ.ОбработкаЗаполнения(СтруктураЗаполнения, Неопределено, Неопределено);
		Склад = СтруктураЗаполнения.Склад;
	КонецЕсли;
	
	Если СтароеЗначениеСклад <> Склад Тогда
		Помещение = Справочники.СкладскиеПомещения.ПустаяСсылка();
		РабочиеУчастки.Очистить();
	КонецЕсли;
	
	СкладПриИзмененииСервер();
	
	РабочиеУчасткиДоИзменения.Загрузить(РабочиеУчастки.Выгрузить())
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРабочиеУчастки()
	
	Если Не СкладыСервер.ИспользоватьРабочиеУчастки(Склад, Помещение) Тогда
		РабочиеУчастки.Очистить();
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РабочиеУчасткиРаботникиУчастка.Ссылка КАК РабочийУчасток
	|ИЗ
	|	Справочник.РабочиеУчастки.РаботникиУчастка КАК РабочиеУчасткиРаботникиУчастка
	|ГДЕ
	|	РабочиеУчасткиРаботникиУчастка.РаботникУчастка = &РаботникУчастка
	|	И РабочиеУчасткиРаботникиУчастка.Ссылка.Владелец = &Склад
	|	И РабочиеУчасткиРаботникиУчастка.Ссылка.Помещение = &Помещение
	|
	|УПОРЯДОЧИТЬ ПО
	|	РабочиеУчасткиРаботникиУчастка.Ссылка.Наименование";
	
	Запрос.УстановитьПараметр("РаботникУчастка", Запись.Пользователь);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Помещение", Помещение);
	
	РабочиеУчастки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	
	СкладПриИзмененииСервер();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
