#Область ОписаниеПеременных

&НаКлиенте
Перем ЗакрытиеРазрешено;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УстановитьВидимостьРазделов();
	УстановитьУсловноеОформление();
	Сотрудник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "ФизическоеЛицо");
	ТипСотрудника = Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки.ТипСотрудникаКурьер();
	Элементы.ТекущийПользователь.Заголовок = Сотрудник;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		ТекстПредупреждения = НСтр("ru = 'Закрыть приложение?'");
		Отказ = Истина;
	ИначеЕсли ЗакрытиеРазрешено=Неопределено Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Закрыть приложение?'"), Режим, 0);
		
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("Справочник.Склады.Форма.ФормаВыбора") Тогда
		
		ТекущийСклад = ВыбранноеЗначение;
		СфомироватьПредставлениеОтборов();
		ОбновитьКонтактнуюИнформациюСклада();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СфомироватьПредставлениеОтборов();
	ОбновитьКонтактнуюИнформациюСклада();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРаспоряжений

&НаКлиенте
Процедура СписокРаспоряженийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.СписокРаспоряжений.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.СписокРаспоряженийАдресДоставкиПредставление Тогда
		ПоказатьКарту(ТекущаяСтрока);
	Иначе
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Распоряжение", ТекущаяСтрока.Распоряжение);
		ПараметрыОткрытияФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
			
		ОткрытьФорму(
			"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.КарточкаРаспоряжения",
			ПараметрыОткрытияФормы,
			ЭтаФорма,,,,,
			РежимОткрытияОкнаФормы.Независимый);
		
		КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Диспетчирование(Команда)
	ПерейтиВРаздел("Диспетчирование");
	ОбновитьКоличествоРаспоряженийДиспетчер();
КонецПроцедуры

&НаКлиенте
Процедура Сборка(Команда)
	ПерейтиВРаздел("Сборка");
	ОбновитьКоличествоРаспоряженийСборка();
КонецПроцедуры

&НаКлиенте
Процедура Доставка(Команда)
	ПерейтиВРаздел("Доставка");
	ОбновитьКоличествоРаспоряженийДоставка();
КонецПроцедуры

&НаКлиенте
Процедура Архив(Команда)
	
	ОбновитьДанныеАрхива();
	ПерейтиВРаздел("Архив");
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	ПерейтиВРаздел("Настройки");
КонецПроцедуры

&НаКлиенте
Процедура Выйти(Команда)
	ЗавершитьРаботуСистемы(Истина);
КонецПроцедуры

&НаКлиенте
Процедура НазначитьСборщика(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.НазначитьСборщика");
	
	Описание = Новый ОписаниеОповещения("ОбновитьКоличествоРаспоряженийДиспетчер", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЭтоКонтроль", Ложь);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
	
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.ДиспетчерНазначитьСборщика",ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольСборки(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.КонтрольСборки");
	
	Описание = Новый ОписаниеОповещения("ОбновитьКоличествоРаспоряженийДиспетчер", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЭтоКонтроль", Истина);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
	
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.ДиспетчерНазначитьСборщика",ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьКурьера(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.НазначитьКурьера");
	
	Описание = Новый ОписаниеОповещения("ОбновитьКоличествоРаспоряженийДиспетчер", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЭтоКонтроль", Ложь);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
	
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.ДиспетчерНазначитьКурьера",ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры

&НаКлиенте
Процедура КонтрольДоставки(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.КонтрольДоставки");
	
	Описание = Новый ОписаниеОповещения("ОбновитьКоличествоРаспоряженийДиспетчер", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЭтоКонтроль", Истина);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
	
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.ДиспетчерНазначитьКурьера",ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.ОбновитьФорму");
	
	Если Элементы.Разделы.ТекущаяСтраница = Элементы.РазделАрхив Тогда
		ОбновитьДанныеАрхива();
	Иначе
		ОбновитьКоличествоРаспоряженийДиспетчер(); 
		ОбновитьКоличествоРаспоряженийСборка();
		ОбновитьКоличествоРаспоряженийДоставка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКОтборам(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
		
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.СписокРаспоряженийАрхив",
		ПараметрыФормы,
		ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.Независимый);
		
КонецПроцедуры

&НаКлиенте
Процедура ОтборыОткрыть(Команда)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытияФормы.Вставить("МножественныйВыбор", Ложь);
	ПараметрыОткрытияФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыОткрытияФормы.Вставить("Отбор", Новый Структура("Ссылка", ДоступныеСклады()));
	
	ОткрытьФорму(
		"Справочник.Склады.Форма.ФормаВыбора",
		ПараметрыОткрытияФормы,
		ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыОчистить(Команда)
	
	ТекущийСклад = Неопределено;
	СфомироватьПредставлениеОтборов();
	ОбновитьКонтактнуюИнформациюСклада();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПерейтиВРаздел(ИмяРаздела)
	
	Если ИмяРаздела = "Диспетчирование" Тогда
		ИмяКартинки       = "ЗакладкаДиспетчированиеАктивнаяСборкаИДоставка";
		ИмяЭлементаРаздел = "РазделДиспетчирование";
		ИмяГруппы         = "ГруппаДиспетчирование";
	ИначеЕсли ИмяРаздела = "Сборка" Тогда
		ИмяКартинки       = "ЗакладкаСборкаАктивнаяСборкаИДоставка";
		ИмяЭлементаРаздел = "РазделСборка";
		ИмяГруппы         = "ГруппаСборка";
	ИначеЕсли ИмяРаздела = "Доставка" Тогда
		ИмяКартинки       = "ЗакладкаДоставкаАктивнаяСборкаИДоставка";
		ИмяЭлементаРаздел = "РазделДоставка";
		ИмяГруппы         = "ГруппаДоставка";
	ИначеЕсли ИмяРаздела = "Архив" Тогда
		ИмяКартинки       = "ЗакладкаАрхивАктивнаяСборкаИДоставка";
		ИмяЭлементаРаздел = "РазделАрхив";
		ИмяГруппы         = "ГруппаАрхив";
	ИначеЕсли ИмяРаздела = "Настройки" Тогда
		ИмяКартинки       = "ЗакладкаНастройкиАктивнаяСборкаИДоставка";
		ИмяЭлементаРаздел = "РазделНастройки";
		ИмяГруппы         = "ГруппаНастройки";	
	КонецЕсли;
	
	// Изменение иконки меню
	Элементы.Диспетчирование.Картинка = БиблиотекаКартинок.ЗакладкаДиспетчированиеСборкаИДоставка;
	Элементы.Сборка.Картинка          = БиблиотекаКартинок.ЗакладкаСборкаСборкаИДоставка;
	Элементы.Доставка.Картинка        = БиблиотекаКартинок.ЗакладкаДоставкаСборкаИДоставка;
	Элементы.Архив.Картинка           = БиблиотекаКартинок.ЗакладкаАрхивСборкаИДоставка;
	Элементы.Настройки.Картинка       = БиблиотекаКартинок.ЗакладкаНастройкиСборкаИДоставка;
	
	Элементы[ИмяРаздела].Картинка     = БиблиотекаКартинок[ИмяКартинки];
	
	// Установка видимости раздела
	Элементы.РазделДиспетчирование.Видимость = Ложь;
	Элементы.РазделСборка.Видимость          = Ложь;
	Элементы.РазделДоставка.Видимость        = Ложь;
	Элементы.РазделАрхив.Видимость           = Ложь;
	Элементы.РазделНастройки.Видимость       = Ложь;
	
	Элементы[ИмяЭлементаРаздел].Видимость           = Истина;
	
	// Подсветка меню
	Белый  = WebЦвета.Белый;
	Желтый = WebЦвета.СветлоЗолотистый;
	
	Элементы.Диспетчирование.ЦветФона = Белый;
	Элементы.Сборка.ЦветФона          = Белый;
	Элементы.Доставка.ЦветФона        = Белый; 
	Элементы.Архив.ЦветФона           = Белый; 
	Элементы.Настройки.ЦветФона       = Белый; 
	
	Элементы[ИмяРаздела].ЦветФона     = Желтый;
	
	Элементы.ГруппаДиспетчирование.ЦветФона  = Белый;
	Элементы.ГруппаСборка.ЦветФона           = Белый;
	Элементы.ГруппаДоставка.ЦветФона         = Белый;
	Элементы.ГруппаАрхив.ЦветФона            = Белый;
	Элементы.ГруппаНастройки.ЦветФона        = Белый;

	Элементы[ИмяГруппы].ЦветФона = Желтый;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьСборку(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.НачатьСборку");
	
	Описание = Новый ОписаниеОповещения("ОбновитьКоличествоРаспоряженийСборка", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
	
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.СписокРаспоряженийКСборке",ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);
		
КонецПроцедуры

&НаКлиенте
Процедура Собирается(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.Собирается");
	
	Описание = Новый ОписаниеОповещения("ОбновитьКоличествоРаспоряженийСборка", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
	
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.СписокРаспоряженийСобирается",ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);
		
КонецПроцедуры

&НаКлиенте
Процедура НачатьДоставку(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.НачатьДоставку");
	
	Описание = Новый ОписаниеОповещения("ОбновитьКоличествоРаспоряженийДоставка", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
		
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.СписокРаспоряженийКДоставке",
		ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры

&НаКлиенте
Процедура Доставляется(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.Доставляется");
	
	Описание = Новый ОписаниеОповещения("ОбновитьКоличествоРаспоряженийДоставка", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
		
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.СписокРаспоряженийДоставляется",
		ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);
		
КонецПроцедуры

&НаКлиенте
Процедура ВернутьВМагазин(Команда)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочийСтол.ВернутьВМагазин");
	
	Описание = Новый ОписаниеОповещения("ОбновитьКоличествоРаспоряженийДоставка", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
		
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.СписокРаспоряженийВозврат",
		ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРазделов()

	РолиСотрудника = РегистрыСведений.СотрудникиМагазинов.ПолучитьДоступныеРоли(Пользователи.ТекущийПользователь());
	
	Элементы.ГруппаДиспетчирование.Видимость = РолиСотрудника.Диспетчер;
	Элементы.ГруппаСборка.Видимость = РолиСотрудника.Сборщик;
	Элементы.ГруппаДоставка.Видимость = РолиСотрудника.Курьер;
	
	Желтый = WebЦвета.СветлоЗолотистый;
	
	Если РолиСотрудника.Диспетчер Тогда
		Элементы.РазделДиспетчирование.Видимость = Истина;
		Элементы.Диспетчирование.Картинка        = БиблиотекаКартинок.ЗакладкаДиспетчированиеАктивнаяСборкаИДоставка;
		Элементы.ГруппаДиспетчирование.ЦветФона  = Желтый;
		ОбновитьКоличествоРаспоряженийДиспетчерСервер();
		Возврат;
	КонецЕсли;
	
	Если РолиСотрудника.Сборщик Тогда
		Элементы.РазделСборка.Видимость          = Истина;
		Элементы.Диспетчирование.Картинка        = БиблиотекаКартинок.ЗакладкаСборкаАктивнаяСборкаИДоставка;
		Элементы.ГруппаСборка.ЦветФона           = Желтый;
		ОбновитьКоличествоРаспоряженийСборкаСервер();
		Возврат;
	КонецЕсли;
	
	Если РолиСотрудника.Курьер Тогда
		Элементы.РазделДоставка.Видимость        = Истина;
		Элементы.Диспетчирование.Картинка        = БиблиотекаКартинок.ЗакладкаДоставкаАктивнаяСборкаИДоставка;
		Элементы.ГруппаДоставка.ЦветФона         = Желтый;
		ОбновитьКоличествоРаспоряженийДоставкаСервер();
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоРаспоряженийДиспетчер(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбновитьКоличествоРаспоряженийДиспетчерСервер();	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоРаспоряженийДиспетчерСервер()
	
	ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "ФизическоеЛицо");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиМагазинов.Сотрудник КАК Сотрудник,
		|	СотрудникиМагазинов.Склад КАК Склад,
		|	СотрудникиМагазинов.Курьер КАК Курьер,
		|	СотрудникиМагазинов.Сборщик КАК Сборщик,
		|	СотрудникиМагазинов.Диспетчер КАК Диспетчер,
		|	ВЫБОР
		|		КОГДА ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина ЕСТЬ NULL
		|			ТОГДА Склады.ВМагазинеПоддерживаетсяСборкаЗаказов
		|		ИНАЧЕ ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина.ВМагазинеПоддерживаетсяСборкаЗаказов
		|	КОНЕЦ КАК СборкаДоступна,
		|	ВЫБОР
		|		КОГДА ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина ЕСТЬ NULL
		|			ТОГДА Склады.ВМагазинеПоддерживаетсяДоставкаСвоимиКурьерами
		|		ИНАЧЕ ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина.ВМагазинеПоддерживаетсяДоставкаСвоимиКурьерами
		|	КОНЕЦ КАК ДоставкаДоступна
		|ПОМЕСТИТЬ ВТСклады
		|ИЗ
		|	РегистрСведений.СотрудникиМагазинов КАК СотрудникиМагазинов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИзмененияФорматовМагазинов.СрезПоследних КАК ИсторияИзмененияФорматовМагазиновСрезПоследних
		|			ПО Склады.Ссылка = ИсторияИзмененияФорматовМагазиновСрезПоследних.Склад
		|		ПО СотрудникиМагазинов.Склад = Склады.Ссылка
		|ГДЕ
		|	СотрудникиМагазинов.Сотрудник = &Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Количество
		|ИЗ
		|	ВТСклады КАК ВТСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|		ПО ВТСклады.Склад = СтатусыСборкиИДоставки.Распоряжение.Склад
		|ГДЕ
		|	СтатусыСборкиИДоставки.Статус = &КСборке
		|	И СтатусыСборкиИДоставки.Распоряжение.Сборщик = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И ВТСклады.СборкаДоступна = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Количество
		|ИЗ
		|	ВТСклады КАК ВТСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|		ПО ВТСклады.Склад = СтатусыСборкиИДоставки.Распоряжение.Склад
		|ГДЕ
		|	СтатусыСборкиИДоставки.Статус В(&СтатусыКСборкеСобирается)
		|	И СтатусыСборкиИДоставки.Распоряжение.Сборщик <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И ВТСклады.СборкаДоступна = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Количество
		|ИЗ
		|	ВТСклады КАК ВТСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|		ПО ВТСклады.Склад = СтатусыСборкиИДоставки.Распоряжение.Склад
		|ГДЕ
		|	СтатусыСборкиИДоставки.Статус В(&СтатусыНазначитьКурьера)
		|	И СтатусыСборкиИДоставки.Распоряжение.Курьер = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И ВТСклады.ДоставкаДоступна = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Количество
		|ИЗ
		|	ВТСклады КАК ВТСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|		ПО ВТСклады.Склад = СтатусыСборкиИДоставки.Распоряжение.Склад
		|ГДЕ
		|	СтатусыСборкиИДоставки.Статус В(&СтатусыКонтролироватьДоставку)
		|	И СтатусыСборкиИДоставки.Распоряжение.Курьер <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И ВТСклады.ДоставкаДоступна = ИСТИНА";
	
	Запрос.УстановитьПараметр("КСборке", Перечисления.СтатусыСборкиИДоставки.КСборке);
	Запрос.УстановитьПараметр("Сотрудник", ФизическоеЛицо);
	
	СтатусыКСборкеСобирается = Новый Массив;
	СтатусыКСборкеСобирается.Добавить(Перечисления.СтатусыСборкиИДоставки.КСборке);
	СтатусыКСборкеСобирается.Добавить(Перечисления.СтатусыСборкиИДоставки.Собирается);
	
	Запрос.УстановитьПараметр("СтатусыКСборкеСобирается", СтатусыКСборкеСобирается);
	
	СтатусыНазначитьКурьера = Новый Массив;
	СтатусыНазначитьКурьера.Добавить(Перечисления.СтатусыСборкиИДоставки.КСборке);
	СтатусыНазначитьКурьера.Добавить(Перечисления.СтатусыСборкиИДоставки.Собирается);
	СтатусыНазначитьКурьера.Добавить(Перечисления.СтатусыСборкиИДоставки.Собран);
	СтатусыНазначитьКурьера.Добавить(Перечисления.СтатусыСборкиИДоставки.ГотовКДоставке);
	СтатусыНазначитьКурьера.Добавить(Перечисления.СтатусыСборкиИДоставки.Обрабатывается);
	
	Запрос.УстановитьПараметр("СтатусыНазначитьКурьера", СтатусыНазначитьКурьера);
	
	СтатусыКонтролироватьДоставку = Новый Массив;
	СтатусыКонтролироватьДоставку.Добавить(Перечисления.СтатусыСборкиИДоставки.КСборке);
	СтатусыКонтролироватьДоставку.Добавить(Перечисления.СтатусыСборкиИДоставки.Собирается);
	СтатусыКонтролироватьДоставку.Добавить(Перечисления.СтатусыСборкиИДоставки.Собран);
	СтатусыКонтролироватьДоставку.Добавить(Перечисления.СтатусыСборкиИДоставки.ГотовКДоставке);
	СтатусыКонтролироватьДоставку.Добавить(Перечисления.СтатусыСборкиИДоставки.Обрабатывается);
	СтатусыКонтролироватьДоставку.Добавить(Перечисления.СтатусыСборкиИДоставки.Доставляется);
	
	Запрос.УстановитьПараметр("СтатусыКонтролироватьДоставку", СтатусыКонтролироватьДоставку);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	РаспоряженияСборщик         = Результаты[1].Выгрузить();
	РаспоряженияСборщикКонтроль = Результаты[2].Выгрузить();
	РаспоряженияКурьер          = Результаты[3].Выгрузить();
	РаспоряженияКурьерКонтроль  = Результаты[4].Выгрузить();

	Если РаспоряженияСборщик.Количество() > 0 Тогда
		Элементы.НазначитьСборщика1.Заголовок = РаспоряженияСборщик[0].Количество;
	Иначе
		Элементы.НазначитьСборщика1.Заголовок = 0;
	КонецЕсли;
	
	Если РаспоряженияСборщикКонтроль.Количество() > 0 Тогда
		Элементы.КонтрольСборки1.Заголовок = РаспоряженияСборщикКонтроль[0].Количество;
	Иначе
		Элементы.КонтрольСборки1.Заголовок = 0;
	КонецЕсли;
	
	Если РаспоряженияКурьер.Количество() > 0 Тогда
		Элементы.НазначитьКурьера1.Заголовок = РаспоряженияКурьер[0].Количество;
	Иначе
		Элементы.НазначитьКурьера1.Заголовок = 0;
	КонецЕсли;
	
	Если РаспоряженияКурьерКонтроль.Количество() > 0 Тогда
		Элементы.КонтрольДоставки1.Заголовок = РаспоряженияКурьерКонтроль[0].Количество;
	Иначе
		Элементы.КонтрольДоставки1.Заголовок = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоРаспоряженийСборка(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбновитьКоличествоРаспоряженийСборкаСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоРаспоряженийСборкаСервер()
	
	ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "ФизическоеЛицо");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиМагазинов.Сотрудник КАК Сотрудник,
		|	СотрудникиМагазинов.Склад КАК Склад,
		|	СотрудникиМагазинов.Курьер КАК Курьер,
		|	СотрудникиМагазинов.Сборщик КАК Сборщик,
		|	СотрудникиМагазинов.Диспетчер КАК Диспетчер,
		|	ВЫБОР
		|		КОГДА ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина ЕСТЬ NULL
		|			ТОГДА Склады.ВМагазинеПоддерживаетсяСборкаЗаказов
		|		ИНАЧЕ ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина.ВМагазинеПоддерживаетсяСборкаЗаказов
		|	КОНЕЦ КАК СборкаДоступна,
		|	ВЫБОР
		|		КОГДА ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина ЕСТЬ NULL
		|			ТОГДА Склады.ВМагазинеПоддерживаетсяДоставкаСвоимиКурьерами
		|		ИНАЧЕ ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина.ВМагазинеПоддерживаетсяДоставкаСвоимиКурьерами
		|	КОНЕЦ КАК ДоставкаДоступна
		|ПОМЕСТИТЬ ВТСклады
		|ИЗ
		|	РегистрСведений.СотрудникиМагазинов КАК СотрудникиМагазинов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИзмененияФорматовМагазинов.СрезПоследних КАК ИсторияИзмененияФорматовМагазиновСрезПоследних
		|			ПО Склады.Ссылка = ИсторияИзмененияФорматовМагазиновСрезПоследних.Склад
		|		ПО СотрудникиМагазинов.Склад = Склады.Ссылка
		|ГДЕ
		|	СотрудникиМагазинов.Сотрудник = &Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Количество
		|ИЗ
		|	ВТСклады КАК ВТСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|		ПО ВТСклады.Склад = СтатусыСборкиИДоставки.Распоряжение.Склад
		|ГДЕ
		|	СтатусыСборкиИДоставки.Статус = &КСборке
		|	И ВТСклады.СборкаДоступна = ИСТИНА
		|	И (СтатусыСборкиИДоставки.Распоряжение.Сборщик = &Сотрудник
		|			ИЛИ СтатусыСборкиИДоставки.Распоряжение.Сборщик = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Количество
		|ИЗ
		|	ВТСклады КАК ВТСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|		ПО ВТСклады.Склад = СтатусыСборкиИДоставки.Распоряжение.Склад
		|ГДЕ
		|	ВТСклады.СборкаДоступна = ИСТИНА
		|	И СтатусыСборкиИДоставки.Распоряжение.Сборщик = &Сотрудник
		|	И СтатусыСборкиИДоставки.Статус = &Собирается";
	
	Запрос.УстановитьПараметр("КСборке", Перечисления.СтатусыСборкиИДоставки.КСборке);
	Запрос.УстановитьПараметр("Сотрудник", ФизическоеЛицо);
	Запрос.УстановитьПараметр("Собирается", Перечисления.СтатусыСборкиИДоставки.Собирается);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	РаспоряженияНачать     = Результаты[1].Выгрузить();
	РаспоряженияСобирается = Результаты[2].Выгрузить();
	
	Если РаспоряженияНачать.Количество() > 0 Тогда
		Элементы.НачатьСборку1.Заголовок = РаспоряженияНачать[0].Количество;
	Иначе
		Элементы.НачатьСборку1.Заголовок = 0;
	КонецЕсли;
	
	Если РаспоряженияСобирается.Количество() > 0 Тогда
		Элементы.Собирается1.Заголовок = РаспоряженияСобирается[0].Количество;
	Иначе
		Элементы.Собирается1.Заголовок = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоРаспоряженийДоставка(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбновитьКоличествоРаспоряженийДоставкаСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоРаспоряженийДоставкаСервер()
	
	ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "ФизическоеЛицо");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиМагазинов.Сотрудник КАК Сотрудник,
		|	СотрудникиМагазинов.Склад КАК Склад,
		|	СотрудникиМагазинов.Курьер КАК Курьер,
		|	СотрудникиМагазинов.Сборщик КАК Сборщик,
		|	СотрудникиМагазинов.Диспетчер КАК Диспетчер,
		|	ВЫБОР
		|		КОГДА ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина ЕСТЬ NULL
		|			ТОГДА Склады.ВМагазинеПоддерживаетсяСборкаЗаказов
		|		ИНАЧЕ ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина.ВМагазинеПоддерживаетсяСборкаЗаказов
		|	КОНЕЦ КАК СборкаДоступна,
		|	ВЫБОР
		|		КОГДА ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина ЕСТЬ NULL
		|			ТОГДА Склады.ВМагазинеПоддерживаетсяДоставкаСвоимиКурьерами
		|		ИНАЧЕ ИсторияИзмененияФорматовМагазиновСрезПоследних.ФорматМагазина.ВМагазинеПоддерживаетсяДоставкаСвоимиКурьерами
		|	КОНЕЦ КАК ДоставкаДоступна
		|ПОМЕСТИТЬ ВТСклады
		|ИЗ
		|	РегистрСведений.СотрудникиМагазинов КАК СотрудникиМагазинов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИзмененияФорматовМагазинов.СрезПоследних КАК ИсторияИзмененияФорматовМагазиновСрезПоследних
		|			ПО Склады.Ссылка = ИсторияИзмененияФорматовМагазиновСрезПоследних.Склад
		|		ПО СотрудникиМагазинов.Склад = Склады.Ссылка
		|ГДЕ
		|	СотрудникиМагазинов.Сотрудник = &Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ЗоныДоставкиКурьеров.ЗонаДоставки) КАК КоличествоЗонДоставки
		|ПОМЕСТИТЬ ДоступныеЗоны
		|ИЗ
		|	РегистрСведений.ЗоныДоставкиКурьеров КАК ЗоныДоставкиКурьеров
		|ГДЕ
		|	ЗоныДоставкиКурьеров.Курьер = &Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Количество
		|ИЗ
		|	ВТСклады КАК ВТСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|		ПО ВТСклады.Склад = СтатусыСборкиИДоставки.Распоряжение.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗоныДоставкиКурьеров КАК ЗоныДоставкиКурьеров
		|		ПО (СтатусыСборкиИДоставки.Распоряжение.ЗонаДоставки = ЗоныДоставкиКурьеров.ЗонаДоставки)
		|			И (ЗоныДоставкиКурьеров.Курьер = &Сотрудник),
		|	ДоступныеЗоны КАК ДоступныеЗоны
		|ГДЕ
		|	СтатусыСборкиИДоставки.Статус В(&СтатусыНачатьДоставку)
		|	И ВТСклады.ДоставкаДоступна = ИСТИНА
		|	И ВЫБОР
		|			КОГДА ДоступныеЗоны.КоличествоЗонДоставки > 0
		|				ТОГДА ЗоныДоставкиКурьеров.ЗонаДоставки = СтатусыСборкиИДоставки.Распоряжение.ЗонаДоставки
		|						ИЛИ СтатусыСборкиИДоставки.Распоряжение.Курьер = &Сотрудник
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И (СтатусыСборкиИДоставки.Распоряжение.Курьер = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|			ИЛИ СтатусыСборкиИДоставки.Распоряжение.Курьер = &Сотрудник)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Количество
		|ИЗ
		|	ВТСклады КАК ВТСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|		ПО ВТСклады.Склад = СтатусыСборкиИДоставки.Распоряжение.Склад
		|ГДЕ
		|	ВТСклады.ДоставкаДоступна = ИСТИНА
		|	И СтатусыСборкиИДоставки.Распоряжение.Курьер = &Сотрудник
		|	И СтатусыСборкиИДоставки.Статус В(&Доставляется)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Количество
		|ИЗ
		|	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|ГДЕ
		|	СтатусыСборкиИДоставки.Распоряжение.Курьер = &Сотрудник
		|	И СтатусыСборкиИДоставки.Статус В(&Отменен)";
	
	Запрос.УстановитьПараметр("СтатусыНачатьДоставку", СкладыСервер.СтатусыРаспоряженийДляНачалаДоставкиКурьером());
	Запрос.УстановитьПараметр("Сотрудник", ФизическоеЛицо);
	Запрос.УстановитьПараметр("Доставляется", СкладыСервер.СтатусыРаспоряженийПриДоставкеКурьером());
	Запрос.УстановитьПараметр("Отменен", СкладыСервер.СтатусыРаспоряженийОтмененных());
	
	Результаты = Запрос.ВыполнитьПакет();
	
	РаспоряженияНачать     = Результаты[2].Выгрузить();
	РаспоряженияДоставляются = Результаты[3].Выгрузить();
	РаспоряженияОтменены = Результаты[4].Выгрузить();
	
	Если РаспоряженияНачать.Количество() > 0 Тогда
		Элементы.НачатьДоставку1.Заголовок = РаспоряженияНачать[0].Количество;
	Иначе
		Элементы.НачатьДоставку1.Заголовок = 0;
	КонецЕсли;
	
	Если РаспоряженияДоставляются.Количество() > 0 Тогда
		Элементы.Доставляется1.Заголовок = РаспоряженияДоставляются[0].Количество;
	Иначе
		Элементы.Доставляется1.Заголовок = 0;
	КонецЕсли;
	
	Если РаспоряженияОтменены.Количество() > 0 Тогда
		Элементы.ВернутьВМагазин1.Заголовок = РаспоряженияОтменены[0].Количество;
	Иначе
		Элементы.ВернутьВМагазин1.Заголовок = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКарту(Данные)
 
#Если МобильныйКлиент Тогда
	СписокМестоположений = Новый СписокЗначений;
	СписокМестоположений.Добавить(ПолучитьКоординатыКлиента(Данные)); 
	ПоказатьНаКарте(СписокМестоположений);
#КонецЕсли
	 
 КонецПроцедуры

&НаКлиенте
Функция ПолучитьКоординатыКлиента(Данные)
	
	Координаты = Новый Структура();
	
#Если МобильныйКлиент Тогда
		
	Координаты = Неопределено;
	СтруктураДанныхАдреса = Новый Структура();
	СтруктураДанныхАдреса.Вставить("Представление", Данные.АдресДоставкиПредставление);
	
	ДанныеАдреса = Новый ДанныеАдреса(СтруктураДанныхАдреса);
	Координаты = ПолучитьМестоположениеПоАдресу(ДанныеАдреса);
#КонецЕсли
	 
	Возврат Координаты;
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеАрхива()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатусыСборкиИДоставки.Распоряжение КАК Распоряжение,
	               |	СтатусыСборкиИДоставки.Статус КАК Статус,
	               |	Документы.Склад КАК Склад,
	               |	Документы.Номер КАК Номер,
	               |	Документы.ДатаОтгрузки КАК ДатаДоставки,
	               |	Документы.ВремяДоставкиС КАК ВремяДоставкиС,
	               |	Документы.ВремяДоставкиПо КАК ВремяДоставкиПо,
	               |	Документы.СуммаДокумента КАК СуммаДокумента,
	               |	Документы.АдресДоставки КАК АдресДоставкиПредставление,
	               |	Документы.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	               |	Документы.ДополнительнаяИнформацияПоДоставке КАК ДополнительнаяИнформацияПоДоставке,
	               |	Документы.Валюта КАК Валюта
	               |ПОМЕСТИТЬ ВременнаяТаблицаРаспоряжения
	               |ИЗ
	               |	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК Документы
	               |		ПО ((ВЫРАЗИТЬ(СтатусыСборкиИДоставки.Распоряжение КАК Документ.ЗаказКлиента)) = Документы.Ссылка)
	               |ГДЕ
	               |	СтатусыСборкиИДоставки.Статус В(&Статусы)
	               |	И Документы.Курьер = &Сотрудник
	               |	И Документы.Проведен
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СтатусыСборкиИДоставки.Распоряжение,
	               |	СтатусыСборкиИДоставки.Статус,
	               |	Документы.Склад,
	               |	Документы.Номер,
	               |	Документы.Дата,
	               |	Документы.ВремяДоставкиС,
	               |	Документы.ВремяДоставкиПо,
	               |	Документы.СуммаДокумента,
	               |	Документы.АдресДоставки,
	               |	Документы.АдресДоставкиЗначенияПолей,
	               |	Документы.ДополнительнаяИнформацияПоДоставке,
	               |	Документы.Валюта
	               |ИЗ
	               |	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документы
	               |		ПО ((ВЫРАЗИТЬ(СтатусыСборкиИДоставки.Распоряжение КАК Документ.РеализацияТоваровУслуг)) = Документы.Ссылка)
	               |ГДЕ
	               |	СтатусыСборкиИДоставки.Статус В(&Статусы)
	               |	И Документы.Курьер = &Сотрудник
	               |	И Документы.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(1) КАК КоличествоРаспоряжений
	               |ИЗ
	               |	ВременнаяТаблицаРаспоряжения КАК Распоряжения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 20
	               |	Распоряжения.Распоряжение КАК Распоряжение,
	               |	Распоряжения.Статус КАК Статус,
	               |	Распоряжения.Склад КАК Склад,
	               |	Распоряжения.Номер КАК Номер,
	               |	Распоряжения.ДатаДоставки КАК ДатаДоставки,
	               |	Распоряжения.ВремяДоставкиС КАК ВремяДоставкиС,
	               |	Распоряжения.ВремяДоставкиПо КАК ВремяДоставкиПо,
	               |	Распоряжения.СуммаДокумента КАК СуммаДокумента,
	               |	Распоряжения.АдресДоставкиПредставление КАК АдресДоставкиПредставление,
	               |	Распоряжения.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	               |	Распоряжения.ДополнительнаяИнформацияПоДоставке КАК Комментарий,
	               |	Распоряжения.Валюта КАК Валюта
	               |ИЗ
	               |	ВременнаяТаблицаРаспоряжения КАК Распоряжения
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаДоставки УБЫВ,
	               |	ВремяДоставкиПо УБЫВ";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Статусы", СкладыСервер.СтатусыРаспоряженийЗавершенных());
	
	Результаты = Запрос.ВыполнитьПакет();
	
	КоличествоРаспоряжений = 0;
	Если Не Результаты[1].Пустой() Тогда
		КоличествоРаспоряжений = Результаты[1].Выгрузить()[0].КоличествоРаспоряжений;
	КонецЕсли;
	
	ВыборкаПоРаспоряжениям = Результаты[2].Выбрать();
	
	СписокРаспоряжений.Очистить();
	Пока ВыборкаПоРаспоряжениям.Следующий() Цикл
		
		НоваяСтрока = СписокРаспоряжений.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоРаспоряжениям);
		
		Если ЗначениеЗаполнено(НоваяСтрока.Комментарий) Тогда
			НоваяСтрока.КомментарийКартинка = 1;
		КонецЕсли;
		
		Модуль = Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки;
		
		НоваяСтрока.ДатаВремяДоставкиПредставление = Модуль.ДатаВремяДоставкиПредставление(НоваяСтрока);
		НоваяСтрока.СуммаПредставление = Модуль.СуммаПредставление(НоваяСтрока);
		
	КонецЦикла;
	
	Элементы.КоличествоРаспоряженийАрхив.Заголовок = КоличествоРаспоряжений;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗакрытиеРазрешено = Истина;
		ЗавершитьРаботуСистемы(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформациюСклада()
	
	Элементы.АдресЗначение.Заголовок = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ТекущийСклад, Справочники.ВидыКонтактнойИнформации.АдресСклада,,Истина);
	Элементы.ТелефонЗначение.Заголовок = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ТекущийСклад, Справочники.ВидыКонтактнойИнформации.ТелефонСклада,,Истина);
	
КонецПроцедуры

&НаСервере
Процедура СфомироватьПредставлениеОтборов()
	
	ПредставленияОтборов = "";
	Если ЗначениеЗаполнено(ТекущийСклад) Тогда
		ПредставленияОтборов = ТекущийСклад;
		Элементы.КомандаОтборыОткрыть.ЦветТекста = WebЦвета.Черный;
		Элементы.ГруппаКомандаОтборыКоличествоОчистить.Видимость = Истина;
		Элементы.РамкаОтборыОткрыть.Картинка = БиблиотекаКартинок.РамкаМенюЧерная;
	Иначе
		ПредставленияОтборов = НСтр("ru='Выбрать магазин/склад'");
		Элементы.КомандаОтборыОткрыть.ЦветТекста = WebЦвета.Серый;
		Элементы.ГруппаКомандаОтборыКоличествоОчистить.Видимость = Ложь;
		Элементы.РамкаОтборыОткрыть.Картинка = БиблиотекаКартинок.РамкаМенюСерая;
	КонецЕсли;
	
	Элементы.КомандаОтборыОткрыть.Заголовок = ПредставленияОтборов;
	
КонецПроцедуры

&НаСервере
Функция ДоступныеСклады()
	
	Возврат СкладыСервер.ДоступныеСкладыСотрудникаПоТипуСотрудника(Сотрудник, ТипСотрудника);
	
КонецФункции

#КонецОбласти

#КонецОбласти