
#Область ОбработчикиСобытийФормы
// Код процедур и функций

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	Сотрудник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "ФизическоеЛицо");
	ПоказыватьФотоТоваров = Параметры.ПоказыватьФотоТоваров;
	ТекущийСклад = Параметры.ТекущийСклад;
	ТипСотрудника = Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки.ТипСотрудникаСборщик();
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	ТекущаяВкладка = Настройки.Получить("ТекущаяВкладка");
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОформитьМеню();
	СфомироватьПредставлениеОтборов();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("Справочник.Склады.Форма.ФормаВыбора") Тогда
		
		ТекущийСклад = ВыбранноеЗначение;
		СфомироватьПредставлениеОтборов();
		ОбновитьДанныеФормы();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРаспоряженийНазначенныеМне

&НаКлиенте
Процедура СписокРаспоряженийНазначенныеМнеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.СписокРаспоряженийНазначенныеМне.ТекущиеДанные;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Заказ", Элемент.ТекущиеДанные.Распоряжение);
	ПараметрыОткрытияФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	
	Описание = Новый ОписаниеОповещения("ОбновитьФорму", ЭтаФорма);
	
	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочееМестоСборщика",
	ПараметрыОткрытияФормы,
	ЭтаФорма,,,,Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРаспоряженийНераспределенные

&НаКлиенте
Процедура СписокРаспоряженийНераспределенныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.СписокРаспоряженийНазначенныеМне.ТекущиеДанные;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Заказ", Элемент.ТекущиеДанные.Распоряжение);
	ПараметрыОткрытияФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	
	Описание = Новый ОписаниеОповещения("ОбновитьФорму", ЭтаФорма);
	
	ОткрытьФорму(
	"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.РабочееМестоСборщика",
	ПараметрыОткрытияФормы,
	ЭтаФорма,,,, Описание,
	РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтборыОчистить(Команда)
	
	ТекущийСклад = Неопределено;
	СфомироватьПредставлениеОтборов();
	ОбновитьДанныеФормы();

КонецПроцедуры

&НаКлиенте
Процедура ОтборыОткрыть(Команда)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытияФормы.Вставить("МножественныйВыбор", Ложь);
	ПараметрыОткрытияФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыОткрытияФормы.Вставить("Отбор", Новый Структура("Ссылка", ДоступныеСклады()));
	
	ОткрытьФорму(
		"Справочник.Склады.Форма.ФормаВыбора",
		ПараметрыОткрытияФормы,
		ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаНазначенныеМне(Команда)
	
	Если ТекущаяВкладка = 1 Тогда
		ПерейтиНаВкладку(0);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаНераспределенные(Команда)
	
	Если ТекущаяВкладка = 0 Тогда
		ПерейтиНаВкладку(1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВзятьВРаботу(Команда)
	
	ТекущаяСтрока = Элементы.СписокРаспоряженийНераспределенные.ТекущиеДанные;
	НазначитьСнятьСотрудника(ТекущаяСтрока.Распоряжение, ТипСотрудника, Сотрудник);
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаСервере
Процедура НазначитьСнятьСотрудника(Распоряжение, ТипСотрудника, Сотрудник = Неопределено);
	
	Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки.НазначитьСнятьСотрудника(Распоряжение,
									ТипСотрудника,
									Сотрудник);
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСМеня(Команда)
	
	ТекущаяСтрока = Элементы.СписокРаспоряженийНазначенныеМне.ТекущиеДанные;
	НазначитьСнятьСотрудника(ТекущаяСтрока.Распоряжение, ТипСотрудника);
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПерейтиНаВкладку(КодВкладки = 0)
	
	ТекущаяВкладка = КодВкладки;
	ОбновитьДанныеФормы();
	ОформитьМеню();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормы()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СотрудникиМагазинов.Склад КАК Склад
	               |ПОМЕСТИТЬ ДоступныеСклады
	               |ИЗ
	               |	РегистрСведений.СотрудникиМагазинов КАК СотрудникиМагазинов
	               |ГДЕ
	               |	СотрудникиМагазинов.Сотрудник = &Сотрудник
	               |	И СотрудникиМагазинов.Сборщик
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СтатусыСборкиИДоставки.Распоряжение КАК Распоряжение,
	               |	СтатусыСборкиИДоставки.Статус КАК Статус,
	               |	Документы.Склад КАК Склад,
	               |	Документы.Сборщик КАК Сборщик,
	               |	Документы.Номер КАК Номер,
	               |	Документы.ДатаОтгрузки ДатаДоставки,
	               |	Документы.ВремяДоставкиС КАК ВремяДоставкиС,
	               |	Документы.ВремяДоставкиПо КАК ВремяДоставкиПо,
	               |	Документы.СуммаДокумента КАК СуммаДокумента,
	               |	0 КАК СуммаКОплате,
	               |	Документы.АдресДоставки КАК АдресДоставкиПредставление,
	               |	Документы.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	               |	Документы.ДополнительнаяИнформацияПоДоставке КАК ДополнительнаяИнформацияПоДоставке,
	               |	Документы.Валюта КАК Валюта,
	               |	Документы.ФормаОплаты КАК ФормаОплаты,
	               |	NULL КАК Дата,
	               |	СтатусыСборкиИДоставки.КоличествоСтрокВЗаказе КАК КоличествоСтрок
	               |ПОМЕСТИТЬ ВсеРаспоряжения
	               |ИЗ
	               |	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК Документы
	               |		ПО ((ВЫРАЗИТЬ(СтатусыСборкиИДоставки.Распоряжение КАК Документ.ЗаказКлиента)) = Документы.Ссылка)
	               |ГДЕ
	               |	СтатусыСборкиИДоставки.Статус В(&Статусы)
	               |	И (Документы.Сборщик = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	               |			ИЛИ Документы.Сборщик = &Сотрудник)
	               |	И Документы.Проведен
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СтатусыСборкиИДоставки.Распоряжение,
	               |	СтатусыСборкиИДоставки.Статус,
	               |	Документы.Склад,
	               |	Документы.Сборщик,
	               |	Документы.Номер,
	               |	NULL,
	               |	Документы.ВремяДоставкиС,
	               |	Документы.ВремяДоставкиПо,
	               |	Документы.СуммаДокумента,
	               |	0,
	               |	Документы.АдресДоставки,
	               |	Документы.АдресДоставкиЗначенияПолей,
	               |	Документы.ДополнительнаяИнформацияПоДоставке,
	               |	Документы.Валюта,
	               |	Документы.ФормаОплаты,
	               |	Документы.Дата,
	               |	СтатусыСборкиИДоставки.КоличествоСтрокВЗаказе
	               |ИЗ
	               |	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документы
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	               |				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РеализацияТоваровУслугТовары.НомерСтроки) КАК КоличествоСтрок
	               |			ИЗ
	               |				Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				РеализацияТоваровУслугТовары.Ссылка) КАК СтрокВНакладной
	               |			ПО Документы.Ссылка = СтрокВНакладной.Ссылка
	               |		ПО ((ВЫРАЗИТЬ(СтатусыСборкиИДоставки.Распоряжение КАК Документ.РеализацияТоваровУслуг)) = Документы.Ссылка)
	               |ГДЕ
	               |	СтатусыСборкиИДоставки.Статус В(&Статусы)
	               |	И (Документы.Сборщик = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	               |			ИЛИ Документы.Сборщик = &Сотрудник)
	               |	И Документы.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВЫБОР
	               |			КОГДА Распоряжения.Сборщик = &Сотрудник
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоНазначенныеМне,
	               |	СУММА(ВЫБОР
	               |			КОГДА Распоряжения.Сборщик = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	               |					И НЕ ДоступныеСклады.Склад ЕСТЬ NULL
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоНераспределенные
	               |ИЗ
	               |	ВсеРаспоряжения КАК Распоряжения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ДоступныеСклады КАК ДоступныеСклады
	               |		ПО Распоряжения.Склад = ДоступныеСклады.Склад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Распоряжения.Сборщик = &Сотрудник
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК НазначеноеМне,
	               |	ВЫБОР
	               |		КОГДА Распоряжения.Сборщик = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	               |				И НЕ ДоступныеСклады.Склад ЕСТЬ NULL
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Нераспределенное,
	               |	Распоряжения.Распоряжение КАК Распоряжение,
	               |	Распоряжения.Статус КАК Статус,
	               |	Распоряжения.Склад КАК Склад,
	               |	Распоряжения.Сборщик КАК Сборщик,
	               |	Распоряжения.Номер КАК Номер,
	               |	Распоряжения.ДатаДоставки КАК ДатаДоставки,
	               |	Распоряжения.ВремяДоставкиС КАК ВремяДоставкиС,
	               |	Распоряжения.ВремяДоставкиПо КАК ВремяДоставкиПо,
	               |	Распоряжения.СуммаДокумента КАК СуммаДокумента,
	               |	Распоряжения.СуммаКОплате КАК СуммаКОплате,
	               |	Распоряжения.АдресДоставкиПредставление КАК АдресДоставкиПредставление,
	               |	Распоряжения.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	               |	Распоряжения.ДополнительнаяИнформацияПоДоставке КАК Комментарий,
	               |	Распоряжения.Валюта КАК Валюта,
	               |	Распоряжения.ФормаОплаты КАК ФормаОплаты,
	               |	Распоряжения.Дата КАК Дата,
	               |	Распоряжения.КоличествоСтрок КАК КоличествоСтрок
	               |ИЗ
	               |	ВсеРаспоряжения КАК Распоряжения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ДоступныеСклады КАК ДоступныеСклады
	               |		ПО Распоряжения.Склад = ДоступныеСклады.Склад
	               |ГДЕ
	               |	(Распоряжения.Сборщик = &Сотрудник
	               |			ИЛИ НЕ ДоступныеСклады.Склад ЕСТЬ NULL)
	               |	И (&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	               |			ИЛИ Распоряжения.Склад В ИЕРАРХИИ (&Склад))
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаДоставки,
	               |	ВремяДоставкиПо";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Склад", ТекущийСклад);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Статусы", СкладыСервер.СтатусЗаказаКСборке());
	
	Результаты = Запрос.ВыполнитьПакет();
	
	РезультатСводно = Результаты[2].Выгрузить();
	ВыборкаПоРаспоряжениям = Результаты[3].Выбрать();
	
	КоличествоРаспоряженийНазначенныеМне = РезультатСводно[0].КоличествоНазначенныеМне;
	КоличествоРаспоряженийНераспределенные = РезультатСводно[0].КоличествоНераспределенные;
	
	СписокРаспоряженийНазначенныеМне.Очистить();
	СписокРаспоряженийНераспределенные.Очистить();
	
	Пока ВыборкаПоРаспоряжениям.Следующий() Цикл
		
		Если ВыборкаПоРаспоряжениям.НазначеноеМне Тогда
			НоваяСтрока = СписокРаспоряженийНазначенныеМне.Добавить();
		ИначеЕсли ВыборкаПоРаспоряжениям.Нераспределенное Тогда
			НоваяСтрока = СписокРаспоряженийНераспределенные.Добавить();
		Иначе
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоРаспоряжениям);
		
		Если ЗначениеЗаполнено(НоваяСтрока.Комментарий) Тогда
			НоваяСтрока.КомментарийКартинка = БиблиотекаКартинок.КомментарийКрасныйДоставка;
		КонецЕсли;
		
		Модуль = Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки;
		
		НоваяСтрока.ДатаВремяДоставкиПредставление = Модуль.ДатаВремяДоставкиПредставление(НоваяСтрока);
		НоваяСтрока.ОсталосьВремениНаДоставку = Модуль.ОсталосьВремениНаДоставку(НоваяСтрока);
		НоваяСтрока.СуммаПредставление = Модуль.СуммаПредставление(НоваяСтрока);
		НоваяСтрока.ФормаОплатыПредставление = Модуль.ФормаОплатыПредставление(НоваяСтрока);
		
	КонецЦикла;
	
	Если ТекущаяВкладка = 0 Тогда
		КоличествоРаспоряженийПоСкладу = СписокРаспоряженийНазначенныеМне.Количество();
	Иначе
		КоличествоРаспоряженийПоСкладу = СписокРаспоряженийНераспределенные.Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СфомироватьПредставлениеОтборов()
	
	ПредставленияОтборов = "";
	Если ЗначениеЗаполнено(ТекущийСклад) Тогда
		ПредставленияОтборов = ТекущийСклад;
		Элементы.КомандаОтборыОткрыть.ЦветТекста = WebЦвета.Черный;
		Элементы.ГруппаКомандаОтборыКоличествоОчистить.Видимость = Истина;
		Элементы.РамкаОтборыОткрыть.Картинка = БиблиотекаКартинок.РамкаМенюЧерная;
	Иначе
		ПредставленияОтборов = НСтр("ru='Выбрать магазин/склад'");
		Элементы.КомандаОтборыОткрыть.ЦветТекста = WebЦвета.ТемноСерый;
		Элементы.ГруппаКомандаОтборыКоличествоОчистить.Видимость = Ложь;
		Элементы.РамкаОтборыОткрыть.Картинка = БиблиотекаКартинок.РамкаМенюСерая;
	КонецЕсли;
	
	Элементы.КомандаОтборыОткрыть.Заголовок = ПредставленияОтборов;
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьМеню()
	
	Если ТекущаяВкладка = 0 Тогда
		ИмяВкладки = "НазначенныеМне";
	Иначе
		ИмяВкладки = "Нераспределенные";
	КонецЕсли;
	
	Если ТекущаяВкладка = 0 Тогда
		ИмяЭлементаРамка    = "РамкаНазначенныеМне";
		ИмяЭлементаКоманда  = "КомандаНазначенныеМне";
		ИмяЭлементаСтраница = "СтраницаНазначенныеМне";
	Иначе
		ИмяЭлементаРамка    = "РамкаНераспределенные";
		ИмяЭлементаКоманда  = "КомандаНераспределенные";
		ИмяЭлементаСтраница = "СтраницаНераспределенные";
	КонецЕсли;
	
	Элементы.РамкаНазначенныеМне.Картинка = БиблиотекаКартинок.РамкаМенюБелая;
	Элементы.КомандаНазначенныеМне.ЦветТекста = WebЦвета.ТемноСерый;
	
	Элементы.РамкаНераспределенные.Картинка = БиблиотекаКартинок.РамкаМенюБелая;
	Элементы.КомандаНераспределенные.ЦветТекста = WebЦвета.ТемноСерый;
	
	Элементы[ИмяЭлементаРамка].Картинка = БиблиотекаКартинок.РамкаМенюЧерная;
	Элементы[ИмяЭлементаКоманда].ЦветТекста = WebЦвета.Черный;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[ИмяЭлементаСтраница];
	
	СформироватьЗаголовкиКомандМеню();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаголовкиКомандМеню()
	Элементы.КомандаНазначенныеМне.Заголовок = СтрШаблон(НСтр("ru='Мои (%1)'"), КоличествоРаспоряженийНазначенныеМне);
	Элементы.КомандаНераспределенные.Заголовок = СтрШаблон(НСтр("ru='Свободные (%1)'"), КоличествоРаспоряженийНераспределенные);
КонецПроцедуры

&НаСервере
Функция ДоступныеСклады()
	
	Возврат СкладыСервер.ДоступныеСкладыСотрудникаПоТипуСотрудника(Сотрудник, ТипСотрудника);
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРаспоряженийНазначенныеМнеСтатус.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРаспоряженийНазначенныеМне.Статус");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыСборкиИДоставки.ГотовКДоставке;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаСтатусаГотовСборкаИДоставка);

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРаспоряженийНазначенныеМнеОсталосьВремениНаДоставку.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРаспоряженийНазначенныеМне.Опоздание");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтрицательныхЗначений);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРаспоряженийНераспределенныеСтатус.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРаспоряженийНераспределенные.Статус");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыСборкиИДоставки.ГотовКДоставке;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаСтатусаГотовСборкаИДоставка);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРаспоряженийНераспределенныеОсталосьВремениНаДоставку.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРаспоряженийНераспределенные.Опоздание");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтрицательныхЗначений);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт 
	ОбновитьДанныеФормы();
	ОформитьМеню();
	СфомироватьПредставлениеОтборов();
КонецПроцедуры

#КонецОбласти
