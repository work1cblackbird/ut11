
#Область ОбработчикиСобытийФормы
// Код процедур и функций

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	Сотрудник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "ФизическоеЛицо");
	ПоказыватьФотоТоваров = Параметры.ПоказыватьФотоТоваров;
	ТипСотрудника = Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки.ТипСотрудникаКурьер();
	ОбновитьДанныеФормы();
	Отбор = "Номер";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СфомироватьПредставлениеОтборов();
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтборы;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтборы Тогда
		Отказ = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРаспоряжения;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьЗначениеПоОтбору();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Отбор = ВыбранноеЗначение;
	ОбработатьЗначениеПоОтбору();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРаспоряженийНазначенныеМне

&НаКлиенте
Процедура СписокРаспоряженийНазначенныеМнеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.СписокРаспоряжений.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.СписокРаспоряженийАдресДоставкиПредставление Тогда
		ПоказатьКарту(ТекущаяСтрока);
	Иначе
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Распоряжение", ТекущаяСтрока.Распоряжение);
		ПараметрыОткрытияФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
			
		ОткрытьФорму(
			"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.КарточкаРаспоряжения",
			ПараметрыОткрытияФормы,
			ЭтаФорма,,,,,
			РежимОткрытияОкнаФормы.Независимый);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРаспоряженийНераспределенные

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьФорму(Команда)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРаспоряжения;
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыОчистить(Команда)
	
	ОбработатьЗначениеПоОтбору();

КонецПроцедуры

&НаКлиенте
Процедура ОтборыОткрытьЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Отбор = Результат.Значение;
		ОбработатьЗначениеПоОтбору();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗначениеПоОтбору()
	
	Если Отбор = "Номер" Тогда
		
		ОтборЗначение = "";
		
	ИначеЕсли Отбор = "ДатаДоставки" Тогда
		
		ОтборЗначение = Новый СтандартныйПериод;
		
	ИначеЕсли Отбор = "Склад" Тогда
		
		ОтборЗначение = ПустойСклад;
		
	ИначеЕсли Отбор = "Адрес" Тогда
		
		ОтборЗначение = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКОтборам(Команда)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтборы;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеФормы()
	
	Запрос = Новый Запрос();
	Текст = "ВЫБРАТЬ
	               |	СтатусыСборкиИДоставки.Распоряжение КАК Распоряжение,
	               |	СтатусыСборкиИДоставки.Статус КАК Статус,
	               |	Документы.Склад КАК Склад,
	               |	Документы.Номер КАК Номер,
	               |	Документы.ДатаОтгрузки КАК ДатаДоставки,
	               |	Документы.ВремяДоставкиС КАК ВремяДоставкиС,
	               |	Документы.ВремяДоставкиПо КАК ВремяДоставкиПо,
	               |	Документы.СуммаДокумента КАК СуммаДокумента,
	               |	Документы.АдресДоставки КАК АдресДоставкиПредставление,
	               |	Документы.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	               |	Документы.ДополнительнаяИнформацияПоДоставке КАК ДополнительнаяИнформацияПоДоставке,
	               |	Документы.Валюта КАК Валюта
	               |ПОМЕСТИТЬ ВременнаяТаблицаРаспоряжения
	               |ИЗ
	               |	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК Документы
	               |		ПО ((ВЫРАЗИТЬ(СтатусыСборкиИДоставки.Распоряжение КАК Документ.ЗаказКлиента)) = Документы.Ссылка)
	               |ГДЕ
	               |	СтатусыСборкиИДоставки.Статус В(&Статусы)
	               |	И Документы.Курьер = &Сотрудник
	               |	И Документы.Проведен
	               |	И Документы.Дата >= &Дата30
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СтатусыСборкиИДоставки.Распоряжение,
	               |	СтатусыСборкиИДоставки.Статус,
	               |	Документы.Склад,
	               |	Документы.Номер,
	               |	Документы.Дата,
	               |	Документы.ВремяДоставкиС,
	               |	Документы.ВремяДоставкиПо,
	               |	Документы.СуммаДокумента,
	               |	Документы.АдресДоставки,
	               |	Документы.АдресДоставкиЗначенияПолей,
	               |	Документы.ДополнительнаяИнформацияПоДоставке,
	               |	Документы.Валюта
	               |ИЗ
	               |	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документы
	               |		ПО ((ВЫРАЗИТЬ(СтатусыСборкиИДоставки.Распоряжение КАК Документ.РеализацияТоваровУслуг)) = Документы.Ссылка)
	               |ГДЕ
	               |	СтатусыСборкиИДоставки.Статус В(&Статусы)
	               |	И Документы.Курьер = &Сотрудник
	               |	И Документы.Проведен
	               |	И Документы.Дата >= &Дата30
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(1) КАК КоличествоРаспоряжений
	               |ИЗ
	               |	ВременнаяТаблицаРаспоряжения КАК Распоряжения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 100
	               |	Распоряжения.Распоряжение КАК Распоряжение,
	               |	Распоряжения.Статус КАК Статус,
	               |	Распоряжения.Склад КАК Склад,
	               |	Распоряжения.Номер КАК Номер,
	               |	Распоряжения.ДатаДоставки КАК ДатаДоставки,
	               |	Распоряжения.ВремяДоставкиС КАК ВремяДоставкиС,
	               |	Распоряжения.ВремяДоставкиПо КАК ВремяДоставкиПо,
	               |	Распоряжения.СуммаДокумента КАК СуммаДокумента,
	               |	Распоряжения.АдресДоставкиПредставление КАК АдресДоставкиПредставление,
	               |	Распоряжения.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	               |	Распоряжения.ДополнительнаяИнформацияПоДоставке КАК Комментарий,
	               |	Распоряжения.Валюта КАК Валюта
	               |ИЗ
	               |	ВременнаяТаблицаРаспоряжения КАК Распоряжения
	               |ГДЕ &Отборы
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаДоставки УБЫВ,
	               |	ВремяДоставкиПо УБЫВ";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Статусы", СкладыСервер.СтатусыРаспоряженийЗавершенных());
	Запрос.УстановитьПараметр("Дата30", ТекущаяДатаСеанса()-30*24*60*60);
	
	ТекстОтборов = "Истина";
	ЕстьОтбор = ЗначениеЗаполнено(ОтборЗначение);
	
	Если Отбор = "Номер" Тогда
		
		Если ЕстьОтбор Тогда
			Запрос.УстановитьПараметр("Номер", ОтборЗначение);
			ТекстОтборов = ТекстОтборов + " И " + "Распоряжения.Номер ПОДОБНО ""%""+&Номер+""%""";
		КонецЕсли;
		
	ИначеЕсли Отбор = "ДатаДоставки" Тогда
		
		Если ЕстьОтбор  Тогда
			Запрос.УстановитьПараметр("ДатаНачала", ОтборЗначение.ДатаНачала);
			Запрос.УстановитьПараметр("ДатаОкончания", ОтборЗначение.ДатаОкончания);
			ТекстОтборов = ТекстОтборов + " И " + "Распоряжения.ДатаДоставки МЕЖДУ &ДатаНачала И &ДатаОкончания";
		КонецЕсли;
		
	ИначеЕсли Отбор = "Склад" Тогда
		
		Если ЕстьОтбор Тогда
			Запрос.УстановитьПараметр("Склад", ОтборЗначение);
			ТекстОтборов = ТекстОтборов + " И " + "Распоряжения.Склад В(&Склад)";
		КонецЕсли;
		
	ИначеЕсли Отбор = "Адрес" Тогда
		
		Если ЕстьОтбор Тогда
			Запрос.УстановитьПараметр("Адрес", ОтборЗначение);
			ТекстОтборов = ТекстОтборов + " И " + "ВЫРАЗИТЬ(Распоряжения.АдресДоставкиПредставление КАК Строка(500)) ПОДОБНО ""%""+&Адрес + ""%""";
		КонецЕсли;
		
	КонецЕсли;
	
	Текст = СтрЗаменить(Текст, "&Отборы", ТекстОтборов);
	
	Запрос.Текст = Текст;
	
	Результаты = Запрос.ВыполнитьПакет();
	
	КоличествоРаспоряжений = 0;
	Если Не Результаты[1].Пустой() Тогда
		КоличествоРаспоряжений = Результаты[1].Выгрузить()[0].КоличествоРаспоряжений;
	КонецЕсли;
	
	ВыборкаПоРаспоряжениям = Результаты[2].Выбрать();
	
	СписокРаспоряжений.Очистить();
	Пока ВыборкаПоРаспоряжениям.Следующий() Цикл
		
		НоваяСтрока = СписокРаспоряжений.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоРаспоряжениям);
		
		Если ЗначениеЗаполнено(НоваяСтрока.Комментарий) Тогда
			НоваяСтрока.КомментарийКартинка = 1;
		КонецЕсли;
		
		Модуль = Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки;
		
		НоваяСтрока.ДатаВремяДоставкиПредставление = Модуль.ДатаВремяДоставкиПредставление(НоваяСтрока);
		НоваяСтрока.СуммаПредставление = Модуль.СуммаПредставление(НоваяСтрока);
	
	КонецЦикла;
	
	КоличествоРаспоряженийПоОтбору = СписокРаспоряжений.Количество();
	
	Элементы.ДекорацияРезультатПоискаКоличество.Заголовок = КоличествоРаспоряженийПоОтбору;
	
КонецПроцедуры

&НаКлиенте
Процедура СфомироватьПредставлениеОтборов()
	
	ОбработатьЗначениеПоОтбору();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКарту(Данные)
 
#Если МобильныйКлиент Тогда
	СписокМестоположений = Новый СписокЗначений;
	СписокМестоположений.Добавить(ПолучитьКоординатыКлиента(Данные)); 
	ПоказатьНаКарте(СписокМестоположений);
#КонецЕсли
	 
 КонецПроцедуры

&НаКлиенте
Функция ПолучитьКоординатыКлиента(Данные)
	
	Координаты = Новый Структура();
	
#Если МобильныйКлиент Тогда
		
	Координаты = Неопределено;
	СтруктураДанныхАдреса = Новый Структура();
	СтруктураДанныхАдреса.Вставить("Представление", Данные.АдресДоставкиПредставление);
	
	ДанныеАдреса = Новый ДанныеАдреса(СтруктураДанныхАдреса);
	Координаты = ПолучитьМестоположениеПоАдресу(ДанныеАдреса);
 #КонецЕсли
	 
	Возврат Координаты;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

КонецПроцедуры

#КонецОбласти
