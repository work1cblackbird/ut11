
#Область ОбработчикиСобытийФормы
// Код процедур и функций

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Диспетчер     = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "ФизическоеЛицо");
	ТипСотрудника = Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки.ТипСотрудникаДиспетчер();
	ЭтоКонтроль   = Параметры.ЭтоКонтроль;
	ПоказыватьФотоТоваров = Параметры.ПоказыватьФотоТоваров;
	ТекущийСклад = Параметры.ТекущийСклад;
	
	УстановитьУсловноеОформление();
	ОбновитьДанныеФормыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СфомироватьПредставлениеОтборов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("Справочник.Склады.Форма.ФормаВыбора") Тогда
		
		ТекущийСклад = ВыбранноеЗначение;
		СфомироватьПредставлениеОтборов();
		ОбновитьДанныеФормы();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСотрудников

&НаКлиенте
Процедура СписокСотрудникиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Описание = Новый ОписаниеОповещения("ОбновитьДанныеФормы", ЭтаФорма);
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Сотрудник",    Элемент.ТекущиеДанные.Сотрудник);
	ПараметрыФормы.Вставить("ТекущийСклад", ТекущийСклад);
	ПараметрыФормы.Вставить("ЭтоКонтроль",  ЭтоКонтроль);
	ПараметрыФормы.Вставить("ЭтоДоставка",  Ложь);
	ПараметрыФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
	
	ОткрытьФорму(
		"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.ДиспетчерНазначениеРаспоряжений",ПараметрыФормы,
		ЭтаФорма,,,,Описание,
		РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтборыОчистить(Команда)
	
	ТекущийСклад = Неопределено;
	СфомироватьПредставлениеОтборов();
	ОбновитьДанныеФормы();

КонецПроцедуры

&НаКлиенте
Процедура ОтборыОткрыть(Команда)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытияФормы.Вставить("МножественныйВыбор", Ложь);
	ПараметрыОткрытияФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыОткрытияФормы.Вставить("Отбор", Новый Структура("Ссылка", ДоступныеСклады()));
	
	ОткрытьФорму(
		"Справочник.Склады.Форма.ФормаВыбора",
		ПараметрыОткрытияФормы,
		ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьДанныеФормы(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбновитьДанныеФормыСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормыСервер()

	СписокСотрудников.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиМагазинов.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыДоступныеДиспетчеру
		|ИЗ
		|	РегистрСведений.СотрудникиМагазинов КАК СотрудникиМагазинов
		|ГДЕ
		|	СотрудникиМагазинов.Диспетчер
		|	И СотрудникиМагазинов.Склад В ИЕРАРХИИ(&Склад)
		|	И СотрудникиМагазинов.Сотрудник = &Диспетчер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиМагазинов.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ Сборщики
		|ИЗ
		|	СкладыДоступныеДиспетчеру КАК СкладыДоступныеДиспетчеру
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиМагазинов КАК СотрудникиМагазинов
		|		ПО СкладыДоступныеДиспетчеру.Склад = СотрудникиМагазинов.Склад
		|ГДЕ
		|	СотрудникиМагазинов.Сборщик
		|
		|СГРУППИРОВАТЬ ПО
		|	СотрудникиМагазинов.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатусыСборкиИДоставки.Распоряжение.Сборщик КАК Сборщик,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Собирается
		|ПОМЕСТИТЬ РаспоряженияСобирается
		|ИЗ
		|	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|ГДЕ
		|	СтатусыСборкиИДоставки.Статус = &Собирается
		|	И СтатусыСборкиИДоставки.Распоряжение.Склад В ИЕРАРХИИ(&Склад)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатусыСборкиИДоставки.Распоряжение.Сборщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатусыСборкиИДоставки.Распоряжение.Сборщик КАК Сборщик,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Собрано,
		|	МАКСИМУМ(СтатусыСборкиИДоставки.ДатаСборки) КАК ПоследняяДатаСборки
		|ПОМЕСТИТЬ РаспоряженияСобрано
		|ИЗ
		|	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|ГДЕ
		|	СтатусыСборкиИДоставки.ДатаСборки МЕЖДУ &НачалоДня И &КонецДня
		|	И СтатусыСборкиИДоставки.Распоряжение.Склад В ИЕРАРХИИ(&Склад)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатусыСборкиИДоставки.Распоряжение.Сборщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатусыСборкиИДоставки.Распоряжение.Сборщик КАК Сборщик,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСборкиИДоставки.Распоряжение) КАК Назначено
		|ПОМЕСТИТЬ РаспоряженияНазначено
		|ИЗ
		|	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
		|ГДЕ
		|	СтатусыСборкиИДоставки.Статус = &СтатусКСборке
		|	И СтатусыСборкиИДоставки.Распоряжение.Склад В ИЕРАРХИИ(&Склад)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатусыСборкиИДоставки.Распоряжение.Сборщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(Сборщики.Сотрудник, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Сотрудник,
		|	ЕСТЬNULL(РаспоряженияСобирается.Собирается, 0) КАК Собирается,
		|	ЕСТЬNULL(РаспоряженияСобрано.Собрано, 0) КАК Собрано,
		|	ВЫБОР
		|		КОГДА НЕ Сборщики.Сотрудник ЕСТЬ NULL
		|			ТОГДА ЕСТЬNULL(РаспоряженияНазначено.Назначено, 0)
		|	КОНЕЦ КАК Назначено,
		|	ЕСТЬNULL(РаспоряженияСобрано.ПоследняяДатаСборки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ПоследняяСборка,
		|	ВЫБОР
		|		КОГДА Сборщики.Сотрудник ЕСТЬ NULL
		|			ТОГДА ЕСТЬNULL(РаспоряженияНазначено.Назначено, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Назначить
		|ИЗ
		|	Сборщики КАК Сборщики
		|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияСобирается КАК РаспоряженияСобирается
		|		ПО Сборщики.Сотрудник = РаспоряженияСобирается.Сборщик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияСобрано КАК РаспоряженияСобрано
		|		ПО Сборщики.Сотрудник = РаспоряженияСобрано.Сборщик
		|		ПОЛНОЕ СОЕДИНЕНИЕ РаспоряженияНазначено КАК РаспоряженияНазначено
		|		ПО Сборщики.Сотрудник = РаспоряженияНазначено.Сборщик
		|ИТОГИ
		|	СУММА(Собирается),
		|	СУММА(Собрано),
		|	СУММА(Назначено),
		|	СУММА(Назначить)
		|ПО
		|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Диспетчер", Диспетчер);
	Запрос.УстановитьПараметр("Склад", ТекущийСклад);
	Запрос.УстановитьПараметр("Собирается", Перечисления.СтатусыСборкиИДоставки.Собирается);
	Запрос.УстановитьПараметр("СтатусКСборке", Перечисления.СтатусыСборкиИДоставки.КСборке);
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекущаяДатаСеанса()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();	// Общий итог
	Элементы.НазначеноИтогЗначение.Заголовок = ВыборкаОбщийИтог.Назначено;
	Элементы.СобираетсяИтогЗначение.Заголовок = ВыборкаОбщийИтог.Собирается;
	Элементы.СобраноИтогЗначение.Заголовок = ВыборкаОбщийИтог.Собрано;
	Элементы.НазначитьИтогЗначение.Заголовок = ВыборкаОбщийИтог.Назначить;
	
	ВыборкаДетальныеЗаписи = ВыборкаОбщийИтог.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Сотрудник) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СписокСотрудников.Добавить();
		НоваяСтрока.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		
		НоваяСтрока.СобираетсяПодпись = НСтр("ru='Собирается'") + " ";
		НоваяСтрока.Собирается = ВыборкаДетальныеЗаписи.Собирается;
		
		НоваяСтрока.СобраноПодпись = НСтр("ru='Собрано'") + " ";
		НоваяСтрока.Собрано = ВыборкаДетальныеЗаписи.Собрано;
		
		НоваяСтрока.Назначено = ВыборкаДетальныеЗаписи.Назначено;
		
		НоваяСтрока.ПоследняяСборкаПодпись = НСтр("ru='Последняя сборка'") + " - ";
		Если ВыборкаДетальныеЗаписи.ПоследняяСборка = Дата(1,1,1) Тогда
			НоваяСтрока.ПоследняяСборка = НСтр("ru='нет'");
		Иначе
			НоваяСтрока.ПоследняяСборка = НСтр("ru='в'") + " " + Формат(ВыборкаДетальныеЗаписи.ПоследняяСборка,"ДФ=HH:mm");
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СфомироватьПредставлениеОтборов()
	
	ПредставленияОтборов = "";
	Если ЗначениеЗаполнено(ТекущийСклад) Тогда
		ПредставленияОтборов = ТекущийСклад;
		Элементы.КомандаОтборыОткрыть.ЦветТекста = WebЦвета.Черный;
		Элементы.ГруппаКомандаОтборыКоличествоОчистить.Видимость = Истина;
		Элементы.РамкаОтборыОткрыть.Картинка = БиблиотекаКартинок.РамкаМенюЧерная;
	Иначе
		ПредставленияОтборов = НСтр("ru='Выбрать магазин/склад'");
		Элементы.КомандаОтборыОткрыть.ЦветТекста = WebЦвета.ТемноСерый;
		Элементы.ГруппаКомандаОтборыКоличествоОчистить.Видимость = Ложь;
		Элементы.РамкаОтборыОткрыть.Картинка = БиблиотекаКартинок.РамкаМенюСерая;
	КонецЕсли;
	
	Элементы.КомандаОтборыОткрыть.Заголовок = ПредставленияОтборов;
	
КонецПроцедуры

&НаСервере
Функция ДоступныеСклады()
	
	Возврат СкладыСервер.ДоступныеСкладыСотрудникаПоТипуСотрудника(Диспетчер, ТипСотрудника);
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Если ЭтоКонтроль Тогда
		Заголовок = НСтр("ru='Контроль сборки'");
	КонецЕсли;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокСотрудникиНазначено.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокСотрудников.Назначено");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "0";
	Если ЭтоКонтроль Тогда
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблема);
	Иначе
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаСтатусаГотовСборкаИДоставка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт 
	ОбновитьДанныеФормы();
	СфомироватьПредставлениеОтборов();
КонецПроцедуры

#КонецОбласти
