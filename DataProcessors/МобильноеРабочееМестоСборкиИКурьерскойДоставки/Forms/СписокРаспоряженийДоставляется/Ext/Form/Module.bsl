
#Область ОбработчикиСобытийФормы
// Код процедур и функций

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	Сотрудник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "ФизическоеЛицо");
	ПоказыватьФотоТоваров = Параметры.ПоказыватьФотоТоваров;
	ТипСотрудника = Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки.ТипСотрудникаКурьер();
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	ТекущееРаспоряжение = Настройки.Получить("ТекущееРаспоряжение");
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокРаспоряжений" Тогда
		ОбновитьДанныеФормы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРаспоряженийНазначенныеМне

&НаКлиенте
Процедура СписокРаспоряженийТекущийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.СписокРаспоряженийТекущий.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.СписокРаспоряженийТекущийАдресДоставкиПредставление Тогда
		ПоказатьКарту(ТекущаяСтрока);
	Иначе
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Распоряжение", ТекущаяСтрока.Распоряжение);
		ПараметрыОткрытияФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
			
		ОткрытьФорму(
			"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.КарточкаРаспоряжения",
			ПараметрыОткрытияФормы,
			ЭтаФорма,,,,,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРаспоряженийНераспределенные

&НаКлиенте
Процедура СписокРаспоряженийСледующиеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.СписокРаспоряженийСледующие.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.СписокРаспоряженийСледующиеАдресДоставкиПредставление Тогда
		ПоказатьКарту(ТекущаяСтрока);
	Иначе
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Распоряжение", ТекущаяСтрока.Распоряжение);
		ПараметрыОткрытияФормы.Вставить("ПоказыватьФотоТоваров", ПоказыватьФотоТоваров);
			
		ОткрытьФорму(
			"Обработка.МобильноеРабочееМестоСборкиИКурьерскойДоставки.Форма.КарточкаРаспоряжения",
			ПараметрыОткрытияФормы,
			ЭтаФорма,,,,,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПозвонитьПокупателю(Команда)
	
#Если МобильныйКлиент Тогда
	
	Если Не СредстваТелефонии.ПоддерживаетсяНаборНомера() Тогда
		Возврат;
	КонецЕсли;
	
	Если СписокРаспоряженийТекущий.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = СписокРаспоряженийТекущий[0];
	НомерТелефона = НомерТелефонаКонтактногоЛицаИзДокумента(ТекущаяСтрока.Распоряжение);
	
	Если НомерТелефона <> "" Тогда
		СредстваТелефонии.НабратьНомер(НомерТелефона, Ложь);
	КонецЕсли;
	
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьТекущим(Команда)
	
	ТекущаяСтрока = Элементы.СписокРаспоряженийСледующие.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущееРаспоряжение = ТекущаяСтрока.Распоряжение;
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Команда)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция НомерТелефонаКонтактногоЛицаИзДокумента(Распоряжение)
	
	Возврат Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки.НомерТелефонаКонтактногоЛицаИзДокумента(Распоряжение);
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеФормы()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатусыСборкиИДоставки.Распоряжение КАК Распоряжение,
	|	ВЫБОР
	|		КОГДА СтатусыСборкиИДоставки.Распоряжение = &ТекущееРаспоряжение
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущееРаспоряжение,
	|	СтатусыСборкиИДоставки.Статус КАК Статус,
	|	Документы.Склад КАК Склад,
	|	Документы.Курьер КАК Курьер,
	|	Документы.Номер КАК Номер,
	|	Документы.ДатаОтгрузки КАК ДатаДоставки,
	|	Документы.ВремяДоставкиС КАК ВремяДоставкиС,
	|	Документы.ВремяДоставкиПо КАК ВремяДоставкиПо,
	|	Документы.СуммаДокумента КАК СуммаДокумента,
	|	Документы.АдресДоставки КАК АдресДоставкиПредставление,
	|	Документы.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	|	Документы.ДополнительнаяИнформацияПоДоставке КАК Комментарий,
	|	Документы.Валюта КАК Валюта,
	|	Документы.ФормаОплаты КАК ФормаОплаты,
	|	ВЫБОР
	|		КОГДА Документы.КонтактноеЛицо = ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)
	|			ТОГДА Партнеры.Наименование
	|		ИНАЧЕ КонтактныеЛица.Наименование
	|	КОНЕЦ КАК КонтактноеЛицоПредставление,
	|	Документы.Организация КАК Организация
	|ПОМЕСТИТЬ ВременнаяТаблицаРаспоряжения
	|ИЗ
	|	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК Документы
	|		ПО ((ВЫРАЗИТЬ(СтатусыСборкиИДоставки.Распоряжение КАК Документ.ЗаказКлиента)) = Документы.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛица
	|		ПО (Документы.КонтактноеЛицо = КонтактныеЛица.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
	|		ПО (Документы.Партнер = Партнеры.Ссылка)
	|ГДЕ
	|	СтатусыСборкиИДоставки.Статус В (&Статусы)
	|	И Документы.Курьер = &Сотрудник
	|	И Документы.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатусыСборкиИДоставки.Распоряжение,
	|	ВЫБОР
	|		КОГДА СтатусыСборкиИДоставки.Распоряжение = &ТекущееРаспоряжение
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	СтатусыСборкиИДоставки.Статус,
	|	Документы.Склад,
	|	Документы.Курьер,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.ВремяДоставкиС,
	|	Документы.ВремяДоставкиПо,
	|	Документы.СуммаДокумента,
	|	Документы.АдресДоставки,
	|	Документы.АдресДоставкиЗначенияПолей,
	|	Документы.ДополнительнаяИнформацияПоДоставке,
	|	Документы.Валюта,
	|	Документы.ФормаОплаты,
	|	ВЫБОР
	|		КОГДА Документы.КонтактноеЛицо = ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)
	|			ТОГДА Партнеры.Наименование
	|		ИНАЧЕ КонтактныеЛица.Наименование
	|	КОНЕЦ,
	|	Документы.Организация
	|ИЗ
	|	РегистрСведений.СтатусыСборкиИДоставки КАК СтатусыСборкиИДоставки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документы
	|		ПО ((ВЫРАЗИТЬ(СтатусыСборкиИДоставки.Распоряжение КАК Документ.РеализацияТоваровУслуг)) = Документы.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛица
	|		ПО (Документы.КонтактноеЛицо = КонтактныеЛица.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
	|		ПО (Документы.Партнер = Партнеры.Ссылка)
	|ГДЕ
	|	СтатусыСборкиИДоставки.Статус В (&Статусы)
	|	И Документы.Курьер = &Сотрудник
	|	И Документы.Проведен
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Кассы.Владелец КАК Организация,
	|	Кассы.Ссылка КАК Касса
	|ПОМЕСТИТЬ ВременннаяТаблицаКассы
	|ИЗ
	|	ВременнаяТаблицаРаспоряжения КАК ТаблицаРаспоряжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Кассы КАК Кассы
	|		ПО ТаблицаРаспоряжения.Организация = Кассы.Владелец
	|ГДЕ
	|	Кассы.ПометкаУдаления = ЛОЖЬ
	|	И Кассы.ОперационнаяКасса = ИСТИНА
	|	И Кассы.ФизическоеЛицо = &Сотрудник
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжения.Распоряжение КАК Распоряжение,
	|	ТаблицаРаспоряжения.Статус КАК Статус,
	|	СУММА(ЕСТЬNULL(РасчетыСКлиентами.КОплатеОстаток, 0)) КАК СуммаКОплате
	|ПОМЕСТИТЬ ВременнаяТаблицаКОплатеПромежуточная
	|ИЗ
	|	ВременнаяТаблицаРаспоряжения КАК ТаблицаРаспоряжения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами.Остатки(,) КАК РасчетыСКлиентами
	|		ПО ТаблицаРаспоряжения.Распоряжение = РасчетыСКлиентами.ОбъектРасчетов.Объект
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРаспоряжения.Распоряжение,
	|	ТаблицаРаспоряжения.Статус
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаКОплате.Распоряжение КАК Распоряжение,
	|	ВременнаяТаблицаКОплате.СуммаКОплате КАК СуммаКОплате,
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредстваНаличные.Касса = ТаблицаКассы.Касса
	|			ТОГДА ВЫБОР
	|				КОГДА ДенежныеСредстваНаличные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредстваНаличные.Сумма
	|				ИНАЧЕ -ДенежныеСредстваНаличные.Сумма
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаКОплатеКурьер
	|ПОМЕСТИТЬ ВременнаяТаблицаКОплате
	|ИЗ
	|	ВременнаяТаблицаКОплатеПромежуточная КАК ВременнаяТаблицаКОплате
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредстваНаличные
	|		ПО ВременнаяТаблицаКОплате.Распоряжение = ДенежныеСредстваНаличные.ОбъектРасчетов.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременннаяТаблицаКассы КАК ТаблицаКассы
	|		ПО (ДенежныеСредстваНаличные.Организация = ТаблицаКассы.Организация)
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаКОплате.Распоряжение,
	|	ВременнаяТаблицаКОплате.СуммаКОплате
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжения.Распоряжение КАК Распоряжение,
	|	ТаблицаРаспоряжения.ТекущееРаспоряжение КАК ТекущееРаспоряжение,
	|	ТаблицаРаспоряжения.Статус КАК Статус,
	|	ТаблицаРаспоряжения.Склад КАК Склад,
	|	ТаблицаРаспоряжения.Курьер КАК Курьер,
	|	ТаблицаРаспоряжения.Номер КАК Номер,
	|	ТаблицаРаспоряжения.ДатаДоставки КАК ДатаДоставки,
	|	ТаблицаРаспоряжения.ВремяДоставкиС КАК ВремяДоставкиС,
	|	ТаблицаРаспоряжения.ВремяДоставкиПо КАК ВремяДоставкиПо,
	|	ТаблицаРаспоряжения.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаРаспоряжения.АдресДоставкиПредставление КАК АдресДоставкиПредставление,
	|	ТаблицаРаспоряжения.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	|	ТаблицаРаспоряжения.Комментарий КАК Комментарий,
	|	ТаблицаРаспоряжения.Валюта КАК Валюта,
	|	ТаблицаРаспоряжения.ФормаОплаты КАК ФормаОплаты,
	|	ТаблицаРаспоряжения.КонтактноеЛицоПредставление КАК КонтактноеЛицоПредставление,
	|	ТаблицаКОплате.СуммаКОплате + ТаблицаКОплате.СуммаКОплатеКурьер КАК СуммаКОплате
	|ИЗ
	|	ВременнаяТаблицаРаспоряжения КАК ТаблицаРаспоряжения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКОплате КАК ТаблицаКОплате
	|		ПО ТаблицаРаспоряжения.Распоряжение = ТаблицаКОплате.Распоряжение
	|УПОРЯДОЧИТЬ ПО
	|	ТекущееРаспоряжение УБЫВ,
	|	ДатаДоставки,
	|	ВремяДоставкиПо";
	
	Запрос.УстановитьПараметр("ТекущееРаспоряжение", ТекущееРаспоряжение);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Статусы", СкладыСервер.СтатусыРаспоряженийПриДоставкеКурьером());
	
	Результат = Запрос.Выполнить();
	
	ВыборкаПоРаспоряжениям = Результат.Выбрать();
	
	СписокРаспоряженийТекущий.Очистить();
	СписокРаспоряженийСледующие.Очистить();
	
	ЭтоТекущий = Истина;
	Пока ВыборкаПоРаспоряжениям.Следующий() Цикл
		
		Если ЭтоТекущий Тогда
			НоваяСтрока = СписокРаспоряженийТекущий.Добавить();
			ЭтоТекущий = Ложь;
			Элементы.СписокРаспоряженийТекущий.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
			Элементы.ГруппаПодвалСпискаТекущий.Видимость = ВыборкаПоРаспоряжениям.Комментарий <> "";
		Иначе
			НоваяСтрока = СписокРаспоряженийСледующие.Добавить();
			
			Если ВыборкаПоРаспоряжениям.Комментарий <> "" Тогда
				НоваяСтрока.КомментарийКартинка = 1;
			КонецЕсли;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоРаспоряжениям);
		
		Модуль = Обработки.МобильноеРабочееМестоСборкиИКурьерскойДоставки;
		
		НоваяСтрока.ДатаВремяДоставкиПредставление = Модуль.ДатаВремяДоставкиПредставление(НоваяСтрока);
		НоваяСтрока.ОсталосьВремениНаДоставку = Модуль.ОсталосьВремениНаДоставку(НоваяСтрока);
		НоваяСтрока.СуммаПредставление = Модуль.СуммаКОплатеПредставление(НоваяСтрока);
		НоваяСтрока.ФормаОплатыПредставление = Модуль.ФормаОплатыПредставление(НоваяСтрока);
		
	КонецЦикла;
	
	КоличествоРаспоряженийСледующие = СписокРаспоряженийСледующие.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКарту(Данные)
 
#Если МобильныйКлиент Тогда
	СписокМестоположений = Новый СписокЗначений;
	СписокМестоположений.Добавить(ПолучитьКоординатыКлиента(Данные)); 
	ПоказатьНаКарте(СписокМестоположений);
 #КонецЕсли
	 
 КонецПроцедуры

&НаКлиенте
Функция ПолучитьКоординатыКлиента(Данные)
	
	Координаты = Новый Структура();
	
#Если МобильныйКлиент Тогда
		
	Координаты = Неопределено;
	СтруктураДанныхАдреса = Новый Структура();
	СтруктураДанныхАдреса.Вставить("Представление", Данные.АдресДоставкиПредставление);
	
	ДанныеАдреса = Новый ДанныеАдреса(СтруктураДанныхАдреса);
	Координаты = ПолучитьМестоположениеПоАдресу(ДанныеАдреса);
 #КонецЕсли
	 
	Возврат Координаты;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРаспоряженийТекущийКомментарий.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРаспоряженийТекущий.Комментарий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", "<не указан>");
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаДополнительныйСборкаИДоставка);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРаспоряженийТекущийОсталосьВремениНаДоставку.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРаспоряженийТекущий.Опоздание");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтрицательныхЗначений);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРаспоряженийСледующиеОсталосьВремениНаДоставку.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРаспоряженийСледующие.Опоздание");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтрицательныхЗначений);
	
КонецПроцедуры

#КонецОбласти
