///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ОФДСлужебный.НастройкаПодключенияДоступна() Тогда
		ВызватьИсключение НСтр("ru = 'У пользователя недостаточно прав для создания настройки.'");
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	Элементы.ДекорацияСостояние.Заголовок   = НСтр("ru = 'Получение списка участников ОФД, пожалуйста, подождите...'");
	
	ЕстьНастройкиПодключения
		= Справочники.НастройкиПодключенияКОФД.ЕстьНастройкиПодключения();
	
	Если Не ЕстьНастройкиПодключения Тогда
		
		НастройкиИнтеграцииОФД = ОФДСлужебный.НастройкиИнтеграции();
		
		Элементы.ДекорацияВозможностиСервиса.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Элементы.ДекорацияВозможностиСервиса.Заголовок,
			?(
				НастройкиИнтеграцииОФД.ИспользоватьЗагрузкуИтоговСмены = Истина,
				НСтр("ru = '- Выполнение сверки итогов смены учетной системы и ОФД.'"),
				""),
			?(
				НастройкиИнтеграцииОФД.ИспользоватьЗагрузкуДокументов,
				НСтр("ru = '- Позволяет загружать отчеты о розничных продажах из ОФД в учетную систему.'"),
				""));
		
	КонецЕсли;
		
	ЗаполненыДанныеАутентификации
		= ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания(
		"ПолучитьУчастниковОФД",
		0.1,
		Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияПодробнееОСервисеОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:ofdDescription" Тогда
		СтандартнаяОбработка = Ложь;
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(
			"https://portal.1c.ru/applications/1C-OFD-receipt");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПользовательскоеСоглашениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:userAgreement" Тогда
		СтандартнаяОбработка = Ложь;
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(
			"https://portal.1c.ru/applications/143/licenseAgreement");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОписаниеРезультатаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:log" Тогда
		СтандартнаяОбработка = Ложь;
		ОФДКлиент.ОткрытьЖурналРегистрации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПоясненияПодключенияАвторизацияОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "action:openPortal" Тогда
		СтандартнаяОбработка = Ложь;
		ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницу(
			ИнтернетПоддержкаПользователейКлиентСервер.URLСтраницыСервисаLogin(
				,
				ИнтернетПоддержкаПользователейКлиент.НастройкиСоединенияССерверами()));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольИПППриИзменении(Элемент)
	
	ИнтернетПоддержкаПользователейКлиент.ПриИзмененииСекретныхДанных(
		Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольИППНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтернетПоддержкаПользователейКлиент.ОтобразитьСекретныеДанные(
		ЭтотОбъект,
		Элемент,
		"ПарольИПП");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчастникиОФД

&НаКлиенте
Процедура УчастникиОФДВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Далее(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Отказ = Ложь;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщаяИнформация Тогда
		
		Если Не ЗаполненыДанныеАутентификации Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу;
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу Тогда
		
		Результат = ИнтернетПоддержкаПользователейКлиентСервер.ПроверитьДанныеАутентификации(
			Новый Структура("Логин, Пароль",
			ЛогинИПП, ПарольИПП));
		
		Если Результат.Отказ Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				Результат.СообщениеОбОшибке,
				,
				Результат.Поле);
			Возврат;
		КонецЕсли;
		
		Отказ = ПроверитьПодключениеКПорталу1СИТС(ЛогинИПП, ПарольИПП);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ЛогинИПП = "";
		ПарольИПП = "";
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника Тогда
		
		СтрокаУчастникОФД = УчастникиОФД.НайтиПоИдентификатору(
			Элементы.УчастникиОФД.ТекущаяСтрока);
		Если СтрокаУчастникОФД = Неопределено Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не выбран ОФД для которого настраивается подключение.'"),
				,
				,
				"УчастникиОФД");
			Возврат;
		КонецЕсли;
		
		ИдентификаторУчастника   = СтрокаУчастникОФД.ИдентификаторУчастника;
		ТипАутентификации        = СтрокаУчастникОФД.ТипАутентификации;
		Наименование             = СтрокаУчастникОФД.Участник;
		АдресЛичногоКабинета     = СтрокаУчастникОФД.АдресЛичногоКабинета;
		
		ДобавитьНастройкиПодключения();
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения Тогда
		
		ПроверитьПараметрыПодключения(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат Тогда
		ЭтотОбъект.Закрыть(НастройкаПодключения);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат Тогда
		Если ДанныеУчастниковЗагружены Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения;
		Иначе
			ПолучитьУчастниковОФД();
		КонецЕсли;
	КонецЕсли;

	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Подключение

&НаСервереБезКонтекста
Функция ПроверитьПодключениеКПорталу1СИТС(Знач Логин, Знач Пароль)
	
	ЕстьОшибки = Ложь;
	
	РезультатПроверки = ИнтернетПоддержкаПользователей.ПроверитьЛогинИПароль(
		Логин,
		Пароль);
	
	Если РезультатПроверки.Результат Тогда
		
		ДанныеАутентификации = Новый Структура;
		ДанныеАутентификации.Вставить("Логин", Логин);
		ДанныеАутентификации.Вставить("Пароль", Пароль);
		
		УстановитьПривилегированныйРежим(Истина);
		ИнтернетПоддержкаПользователей.СохранитьДанныеАутентификации(
			ДанныеАутентификации);
		УстановитьПривилегированныйРежим(Ложь);
		
	Иначе
		ОбщегоНазначения.СообщитьПользователю(
			РезультатПроверки.СообщениеОбОшибке,
			,
			,
			,
			ЕстьОшибки);
	КонецЕсли;
	
	Возврат ЕстьОшибки;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьПараметрыПодключения(Отказ)
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	Результат = ПроверитьПараметрыПодключенияЗапускЗадания();
	
	Если Результат.ЕстьОшибки Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПроверитьПараметрыПодключенияЗавершение",
		ЭтотОбъект);
		
	Если Результат.РезультатПроверки.Статус = "Выполнено" Или Результат.РезультатПроверки.Статус = "Ошибка" Тогда
		ПроверитьПараметрыПодключенияЗавершение(Результат.РезультатПроверки, Неопределено);
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	Элементы.ДекорацияСостояние.Заголовок   = НСтр("ru = 'Проверка параметров подключения к оператору фискальных данных, пожалуйста, подождите.'");
	
	УстановитьВидимостьДоступность();
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		Результат.РезультатПроверки,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПараметрыПодключенияЗапускЗадания()
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьОшибки", Ложь);
	Результат.Вставить("РезультатПроверки", Неопределено);
	
	ОФДСлужебный.ПроверитьНастройкиАутентификации(
		ЭтотОбъект,
		Результат.ЕстьОшибки);
	
	Если Результат.ЕстьОшибки Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПараметрыАутентификации = ОФДСлужебный.НастройкиАутентификацииПоДаннымФормы(ЭтотОбъект);
	ПараметрыАутентификации.Вставить("ТипАутентификации", ТипАутентификации);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(
		ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания
		= НСтр("ru = 'Проверка параметров подключения к оператору фискальных данных.'");
	
	Результат.РезультатПроверки = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"ОФДСлужебный.ПроверитьПараметрыПодключения",
		ИдентификаторУчастника,
		ПараметрыАутентификации);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьПараметрыПодключенияЗавершение(
		Результат,
		ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения;
			ПоказатьПредупреждение(
				Неопределено,
				РезультатОперации.СообщениеОбОшибке);
		Иначе
			НоваяНастройкаПодключения();
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат;
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения;
		ИнформацияОбОшибке = Результат.КраткоеПредставлениеОшибки;
		ПоказатьПредупреждение(
			Неопределено,
			ИнформацияОбОшибке);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНастройкиПодключения()
	
	ОФДСлужебный.УдалитьНастройкиАутентификации(
		ЭтотОбъект);
		
	ПараметрыПодсказки = ОФДСлужебный.НовыйПараметрПодсказки();
	ПараметрыПодсказки.ОтобразитьПодсказку  = ЗначениеЗаполнено(АдресЛичногоКабинета);
	ПараметрыПодсказки.АдресЛичногоКабинета = АдресЛичногоКабинета;
	
	ДанныеНастройки = Новый Структура;
	ДанныеНастройки.Вставить("НастройкаПодключения",  Справочники.НастройкиПодключенияКОФД.ПустаяСсылка());
	ДанныеНастройки.Вставить("ТипАутентификации",     ТипАутентификации);
	ДанныеНастройки.Вставить("НаименованиеУчастника", Наименование);
	
	ОФДСлужебный.ДобавитьНастройкиАутентификации(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиАутентификации,
		ДанныеНастройки,
		ПараметрыПодсказки);
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения;
	
КонецПроцедуры

#КонецОбласти

#Область УчастникиОФД

&НаКлиенте
Процедура ПолучитьУчастниковОФД()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	РезультатВыполнения = ПолучитьУчастниковОФДЗапускЗадания(
		ЭтотОбъект.УникальныйИдентификатор);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолучитьУчастниковОФДЗапускЗаданияЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПолучитьУчастниковОФДЗапускЗаданияЗавершение(
			РезультатВыполнения,
			Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьУчастниковОФДЗапускЗадания(Знач УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение актуального списка участников ОФД.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"ОФДСлужебный.ПолучитьУчастниковОФД");
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьУчастниковОФДЗапускЗаданияЗавершение(
		Результат,
		ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			УстановитьОтображениеИнформацииОбОшибке(
				РезультатОперации.СообщениеОбОшибке,
				Ложь,
				Ложь);
		Иначе
			
			Для Каждого КлючЗначение Из РезультатОперации.ДанныеУчастников Цикл
				
				НовыйУчастник                          = УчастникиОФД.Добавить();
				НовыйУчастник.Участник                 = КлючЗначение.Значение.Представление;
				НовыйУчастник.ИдентификаторУчастника   = КлючЗначение.Ключ;
				НовыйУчастник.ТипАутентификации        = КлючЗначение.Значение.ТипАутентификации;
				НовыйУчастник.АдресЛичногоКабинета     = КлючЗначение.Значение.АдресЛичногоКабинета; 
				
				ДанныеУчастников = РезультатОперации.ДанныеУчастников;
				
			КонецЦикла;
			
			Если Не ЕстьНастройкиПодключения Тогда
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщаяИнформация;
			ИначеЕсли Не ЗаполненыДанныеАутентификации Тогда
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу;
			Иначе
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
			КонецЕсли;
			
			ДанныеУчастниковЗагружены = Истина;
			
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ИнформацияОбОшибке = Результат.КраткоеПредставлениеОшибки;
		УстановитьОтображениеИнформацииОбОшибке(ИнформацияОбОшибке);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область УчастникиОФД

&НаСервере
Процедура УстановитьОтображениеИнформацииОбОшибке(
		Знач ИнформацияОбОшибке,
		Знач Ошибка = Истина,
		Знач ОтображатьЖР = Истина)
	
	Если ОтображатьЖР Тогда
		ПредставлениеОшибки = СтроковыеФункции.ФорматированнаяСтрока(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1
					|
					|
					|Подробную информацию см. в %2.'"),
				ИнформацияОбОшибке,
				?(
					ОФДВызовСервера.ЭтоПолноправныйПользователь(),
					НСтр("ru = '<a href = ""open:log"">Журнале регистрации</a>'"),
					НСтр("ru = 'Журнале регистрации'"))));
		
	Иначе
		ПредставлениеОшибки = ИнформацияОбОшибке;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница        = Элементы.ГруппаРезультат;
	Элементы.ДекорацияОписаниеРезультата.Заголовок = ПредставлениеОшибки;
	Элементы.ДекорацияКартинкаРезультат.Картинка   = ?(Ошибка,
		БиблиотекаКартинок.Ошибка32,
		БиблиотекаКартинок.Предупреждение32);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеУспешногоЗавершения()
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат;
	Элементы.ДекорацияКартинкаРезультат.Картинка = БиблиотекаКартинок.Успешно32;
	ПодключениеЗавершено = Истина;
	Элементы.ДекорацияОписаниеРезультата.Заголовок = НСтр("ru = 'Настройка подключения создана.'");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщаяИнформация
		Или Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу
		Или Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника Тогда
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Истина;
	ИначеЕсли  Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения Тогда
		Элементы.Назад.Видимость = Истина;
		Элементы.Далее.Видимость = Истина;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация Тогда
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат Тогда
		Если ПодключениеЗавершено Тогда
			Элементы.Назад.Видимость  = Ложь;
			Элементы.Отмена.Видимость = Ложь;
			Элементы.Далее.Видимость  = Истина;
			Элементы.Далее.Заголовок  = НСтр("ru = 'OK'");
		ИначеЕсли Не ДанныеУчастниковЗагружены Тогда
			Элементы.Назад.Видимость  = Ложь;
			Элементы.Отмена.Видимость = Истина;
			Элементы.Далее.Видимость  = Ложь;
		Иначе
			Элементы.Назад.Видимость  = Истина;
			Элементы.Отмена.Видимость = Истина;
			Элементы.Далее.Видимость  = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура НоваяНастройкаПодключения()
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Наименование", Наименование);
	ПараметрыЗаполнения.Вставить("ИдентификаторУчастника", ИдентификаторУчастника);
	
	ПараметрыАутентификации = ОФДСлужебный.НастройкиАутентификацииПоДаннымФормы(ЭтотОбъект);
	ПараметрыАутентификации.Вставить("ТипАутентификации", ТипАутентификации);
	
	Результат = Справочники.НастройкиПодключенияКОФД.НоваяНастройкаПодключения(
		ПараметрыЗаполнения,
		ПараметрыАутентификации);
	
	Если Результат.Ошибка Тогда
		УстановитьОтображениеИнформацииОбОшибке(
			Результат.СообщениеОбОшибке,
			Истина,
			Ложь);
	Иначе
		НастройкаПодключения = Результат.Ссылка;
		УстановитьОтображениеУспешногоЗавершения();
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
