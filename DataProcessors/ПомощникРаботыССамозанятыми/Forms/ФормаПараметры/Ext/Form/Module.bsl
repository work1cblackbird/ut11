
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("ТипДокумента") Тогда
		ТипДокумента = Параметры.ТипДокумента;
	КонецЕсли;
	
	Если Параметры.Свойство("Валюта") Тогда
		Валюта = Параметры.Валюта;
	КонецЕсли;
	
	Если ТипДокумента = 0 Тогда
		ИмяДокумента = "ПриобретениеТоваровУслуг";
	ИначеЕсли ТипДокумента = 1 Тогда
		ИмяДокумента = "ПриобретениеУслугПрочихАктивов";
	ИначеЕсли ТипДокумента = 2 Тогда
		ИмяДокумента = "ЗаявкаНаРасходованиеДенежныхСредств";
	ИначеЕсли ТипДокумента = 3 Тогда
		ИмяДокумента = "СписаниеБезналичныхДенежныхСредств";
	КонецЕсли;
	
	Оплата = (ТипДокумента = 2 ИЛИ ТипДокумента = 3);
	Приобретение = (ТипДокумента = 0 ИЛИ ТипДокумента = 1);
	
	ДокументПустаяСсылка = Документы[ИмяДокумента].ПустаяСсылка();
	МетаданныеДокумента = ДокументПустаяСсылка.Метаданные();
	
	УправлениеЭлементамиФормы(МетаданныеДокумента.ПредставлениеОбъекта);
	
	Если Приобретение Тогда
		
		Если ТипДокумента = 0 Тогда
			ТабличнаяЧасть = "Товары";
		Иначе
			ТабличнаяЧасть = "Расходы";
		КонецЕсли;
		
		РеквизитыТабличнойЧасти = МетаданныеДокумента.ТабличныеЧасти[ТабличнаяЧасть].Реквизиты;
		
		ПустыеСведенияПоНоменклатуре = НовыеСведенияПоНоменклатуре(РеквизитыТабличнойЧасти);
		ПараметрыВыбора = ПараметрыВыбораСтатьиИАналитики();
		ДоходыИРасходыСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыВыбора);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	ИсключитьРеквизиты = Новый Массив;
	
	Если Приобретение Тогда
		
		ПроверяемыеРеквизиты.Добавить("Номенклатура");
		ИсключитьРеквизиты.Добавить("Контрагент");
		ИсключитьРеквизиты.Добавить("БанковскийСчетКонтрагента");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов") Тогда
			
			Если ЭтоУслуга
				ИЛИ ТипДокумента = 1 Тогда
				ПроверяемыеРеквизиты.Добавить("СтатьяРасходов");
			КонецЕсли;
			
			Если АналитикаРасходовОбязательна Тогда
				ПроверяемыеРеквизиты.Добавить("АналитикаРасходов");
			КонецЕсли;
		
		КонецЕсли;
	
	КонецЕсли;
	
	Если ТипДокумента = 1 Тогда
		ИсключитьРеквизиты.Добавить("Количество");
	КонецЕсли;
	
	Если Оплата Тогда
		ИсключитьРеквизиты.Добавить("Количество");
		ИсключитьРеквизиты.Добавить("Подразделение");
	КонецЕсли;
	
	Для Каждого ПроверяемыйРеквизит Из ПроверяемыеРеквизиты Цикл
		
		Если Не ЗначениеЗаполнено(ЭтотОбъект[ПроверяемыйРеквизит])
			И ИсключитьРеквизиты.Найти(ПроверяемыйРеквизит) = Неопределено Тогда
			Отказ = Истина;
		КонецЕсли;
		
		ИсключитьРеквизиты.Добавить(ПроверяемыйРеквизит);
		
	КонецЦикла;
	
	ПроверяемыеРеквизиты.Очистить();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)

	НоменклатураПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)

	Если ТипЗнч(СведенияПоНоменклатуре) = Тип("Структура") Тогда
		
		СведенияПоНоменклатуре.КоличествоУпаковок = Количество;
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СведенияПоНоменклатуре, СтруктураДействий, Неопределено);
		
	КонецЕсли;
	
	Элементы.СоздатьДокументы.Доступность = ПроверитьЗаполнение();

КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)

	СтатьяРасходовПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовПриИзменении(Элемент)

	Если ТипЗнч(СведенияПоНоменклатуре) = Тип("Структура") Тогда
		СведенияПоНоменклатуре.Вставить("АналитикаРасходов", АналитикаРасходов);
	КонецЕсли;
	
	ДоходыИРасходыКлиентСервер.АналитикаРасходовПриИзменении(ЭтотОбъект, Элемент);
	
	Элементы.СоздатьДокументы.Доступность = ПроверитьЗаполнение();

КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура АналитикаАктивовПассивовПриИзменении(Элемент)

	Если ТипЗнч(СведенияПоНоменклатуре) = Тип("Структура") Тогда
		СведенияПоНоменклатуре.Вставить("АналитикаАктивовПассивов", АналитикаАктивовПассивов);
	КонецЕсли;
	
	ДоходыИРасходыКлиентСервер.АналитикаАктивовПассивовПриИзменении(ЭтотОбъект, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)

	Если ТипЗнч(СведенияПоНоменклатуре) = Тип("Структура") Тогда
		СведенияПоНоменклатуре.Вставить("Подразделение", Подразделение);
	КонецЕсли;
	
	Элементы.СоздатьДокументы.Доступность = ПроверитьЗаполнение();

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетКонтрагентаПриИзменении(Элемент)

	Элементы.СоздатьДокументы.Доступность = ПроверитьЗаполнение();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьДокументы(Команда)

	ОчиститьСообщения();
	
	ПараметрЗакрытия = Новый Структура;
	
	Если Приобретение Тогда 
		
		ПараметрЗакрытия.Вставить("ДанныеЗаполненияПоНоменклатуре", СведенияПоНоменклатуре);
		ПараметрЗакрытия.Вставить("Подразделение", Подразделение);
		ПараметрЗакрытия.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
		ПараметрЗакрытия.Вставить("ГруппаФинансовогоУчета", ГруппаФинансовогоУчета);
		
	Иначе
		
		ПараметрЗакрытия.Вставить("Контрагент", Контрагент);
		ПараметрЗакрытия.Вставить("БанковскийСчетКонтрагента", БанковскийСчетКонтрагента);
		
	КонецЕсли;
	
	Закрыть(ПараметрЗакрытия);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеЭлементамиФормы(ПредставлениеОбъекта)

	Заголовок = СтрШаблон(НСтр("ru = 'Создание документа %1'"), ПредставлениеОбъекта);
	
	Если Приобретение Тогда
		
		Если ТипДокумента = 0 Тогда
		
			Элементы.Номенклатура.Заголовок = НСтр("ru = 'Номенклатура'");
			Элементы.Номенклатура.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
			Элементы.СтатьяРасходов.ОграничениеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов");
			
			УстановитьПараметрыВыбораНоменклатуры();
		
		ИначеЕсли ТипДокумента = 1 Тогда
			
			Элементы.Номенклатура.Заголовок = НСтр("ru = 'Содержание'");
			Элементы.Номенклатура.ОграничениеТипа = Новый ОписаниеТипов("Строка");
			Элементы.ГруппаКоличество.Видимость = Ложь;
			
		КонецЕсли;
		
		УстановитьПараметрыВыбораСтатьиРасходов();
		
	КонецЕсли;
		
	Элементы.ГруппаПриобретение.Видимость = Приобретение;
	Элементы.ГруппаБанк.Видимость = Оплата;
	
	Элементы.СоздатьДокументы.Доступность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()

	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЕдиницаИзмерения");
	КонецЕсли;
	
	СведенияПоНоменклатуре = ОбщегоНазначения.СкопироватьРекурсивно(ПустыеСведенияПоНоменклатуре, Ложь);
	ЗаполнитьСведенияПоНоменклатуре();
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("СтатьяРасходов", "СтатьяРасходов");
	ПараметрыДействия.Вставить("АналитикаРасходов", "АналитикаРасходов");
	ПараметрыДействия.Вставить("ДействиеВФорме", Ложь);
	ПараметрыДействия.Вставить("ПараметрыВыбораСтатейИАналитик", ПараметрыВыбораСтатьиИАналитики());
	
	ДоходыИРасходыСервер.ОчиститьСтатьюАналитикуРасходов(ЭтотОбъект, ПараметрыДействия);
	
	Если ЭтоУслуга
		ИЛИ ТипДокумента = 1 Тогда
		Элементы.СтатьяРасходов.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
	Элементы.СоздатьДокументы.Доступность = ПроверитьЗаполнение();

КонецПроцедуры

&НаСервере
Функция НовыеСведенияПоНоменклатуре(РеквизитыТабличнойЧасти)

	Данные = Новый Структура;
	
	Для Каждого Реквизит Из РеквизитыТабличнойЧасти Цикл
		Данные.Вставить(Реквизит.Имя, Реквизит.Тип.ПривестиЗначение(Неопределено));
	КонецЦикла;
	
	Возврат Данные;

КонецФункции

&НаСервере
Процедура ЗаполнитьСведенияПоНоменклатуре()

	СведенияПоНоменклатуре.Вставить("СтатьяРасходов", СтатьяРасходов);
	СведенияПоНоменклатуре.Вставить("АналитикаРасходов", АналитикаРасходов);
	СведенияПоНоменклатуре.Вставить("Подразделение", Подразделение);
	
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		СведенияПоНоменклатуре.Вставить("ТипНоменклатуры");
		СведенияПоНоменклатуре.Вставить("ХарактеристикиИспользуются");
		СведенияПоНоменклатуре.Вставить("Номенклатура", Номенклатура);
		СведенияПоНоменклатуре.Вставить("Количество", Количество);
		
		СтруктураДействий = Новый Структура;
		
		СтруктураДействий.Вставить(
			"ЗаполнитьПризнакТипНоменклатуры",
			Новый Структура("Номенклатура", "ТипНоменклатуры"));
		СтруктураДействий.Вставить(
			"ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
		СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", СведенияПоНоменклатуре.Характеристика);
		СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", СведенияПоНоменклатуре.Упаковка);
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СведенияПоНоменклатуре, СтруктураДействий, Неопределено);
	
		ЭтоУслуга = СведенияПоНоменклатуре.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга;
		
		Если ЭтоУслуга
			ИЛИ ЗначениеЗаполнено(СведенияПоНоменклатуре.СтатьяРасходов) Тогда
			СведенияПоНоменклатуре.СписатьНаРасходы = Истина;
		КонецЕсли;
	
	Иначе
		СведенияПоНоменклатуре.Вставить("Содержание", Номенклатура);
		СведенияПоНоменклатуре.Вставить("Количество", 1);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораНоменклатуры()

	ТипыНоменклатуры = Новый Массив;
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	
	ПараметрыВыбора = Новый Массив();
	НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипНоменклатуры", ТипыНоменклатуры);
	ПараметрыВыбора.Добавить(НовыйПараметр);

	Элементы.Номенклатура.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораСтатьиРасходов()

	ПараметрыВыбора = Новый Массив();
	НовыйПараметр = Новый ПараметрВыбора("Отбор.ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ПараметрыВыбора.Добавить(НовыйПараметр);
	
	Если ТипДокумента = 1 Тогда
		
		НовыйПараметр = Новый ПараметрВыбора("РазрешитьВыборСтатьиАктивовПассивов", Истина);
		ПараметрыВыбора.Добавить(НовыйПараметр);
		
		НовыйПараметр = Новый ПараметрВыбора("ДополнитьСтатьямиРасходов", Истина);
		ПараметрыВыбора.Добавить(НовыйПараметр);
		
		НовыйПараметр = Новый ПараметрВыбора("ДополнитьСтатьямиАктивовПассивов", Истина);
		ПараметрыВыбора.Добавить(НовыйПараметр);
		
	КонецЕсли;

	Элементы.СтатьяРасходов.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);

КонецПроцедуры

&НаСервере
Функция ПараметрыВыбораСтатьиИАналитики()

	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбора.ПутьКДанным = "";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	ПараметрыВыбора.ЗначениеПоУмолчанию = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивов");
	
	Возврат ПараметрыВыбора

КонецФункции

&НаСервере
Процедура СтатьяРасходовПриИзмененииНаСервере()

	Если ТипЗнч(СведенияПоНоменклатуре) = Тип("Структура") Тогда
		
		СведенияПоНоменклатуре.Вставить("СтатьяРасходов", СтатьяРасходов);
		
		Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			
			Если СведенияПоНоменклатуре.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга
				ИЛИ ЗначениеЗаполнено(СведенияПоНоменклатуре.СтатьяРасходов) Тогда
				СведенияПоНоменклатуре.СписатьНаРасходы = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элементы.СтатьяРасходов);
	
	Элементы.СоздатьДокументы.Доступность = ПроверитьЗаполнение();

КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()

	БанковскийСчетКонтрагента =
		Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(Контрагент, Валюта);
	Элементы.СоздатьДокументы.Доступность = ПроверитьЗаполнение();

КонецПроцедуры

#КонецОбласти