
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	КлючевыеПараметры = ОбеспечениеВДокументахКлиентСервер.КлючевыеПараметрыФормыЗапросаКоличестваИСерий();
	ЗаполнитьЗначенияСвойств(КлючевыеПараметры, Параметры);
	
	ДанныеЗаполнения  = ОбеспечениеВДокументахКлиентСервер.ПараметрыФормыЗапросаКоличестваИСерий(Ложь);
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения,  Параметры);
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.Заполнить(КлючевыеПараметры, ДанныеЗаполнения);
	
	Обработки.ЗапросКоличестваИСерий.ПроверитьЗаполнение(Объект);
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	ВариантПредоставленияСкидки = "СКИДКА";
	
	МаксимальныйПроцентСкидки   = 0;
	МаксимальныйПроцентНаценки  = 0;
	Если ЭтоАдресВременногоХранилища(Параметры.АдресВоВременномХранилище) Тогда
		СтруктураТаблиц = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
		МаксимальныйПроцентСкидки  = СтруктураТаблиц.Ограничения[0].МаксимальныйПроцентРучнойСкидки;
		МаксимальныйПроцентНаценки = СтруктураТаблиц.Ограничения[0].МаксимальныйПроцентРучнойНаценки;
	КонецЕсли;
	
	ТипНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Номенклатура, "ТипНоменклатуры");
	
	Если КлючевыеПараметры.ПодборТоваров И КлючевыеПараметры.ПодборВариантовОбеспечения Тогда
		
		ДопустимыеВариантыОбеспечения = ОбеспечениеВДокументахКлиентСервер.ДопустимыеВариантыОбеспечения(
			ТипНоменклатуры,
			Параметры.ДопустимыеОбособленныеДействия,
			Параметры.ДопустимыеНеобособленныеДействия,
			КлючевыеПараметры.ОграничиватьВариантыОбеспечения,
			Параметры.ВариантОбеспеченияИФлагОбособленно);
			
	КонецЕсли;
	
	УправлениеЭлементамиФормыПриСоздании();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КоличествоУпаковокПриИзменении(Элемент)
	
	ОчиститьСообщения();
	КоличествоУпаковокПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	ОчиститьСообщения();
	УпаковкаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключательОбособленноПриИзменении(Элемент)
	
	ПереключательОбособленноПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	
	ДействиеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Число") Тогда
		
		Объект.ВидЦены = Неопределено;
		ВидЦеныПредставление = НСтр("ru='<произвольная>'");
		
	Иначе
		
		СтандартнаяОбработка = Ложь;
		
		Объект.ВидЦены = ВыбранноеЗначение;
		ВидЦеныПредставление = ВыбранноеЗначение;
		
		Для Каждого Строка Из Объект.ВидыЦен Цикл
			Если Строка.ВидЦены = ВыбранноеЗначение Тогда
				Объект.Цена = Строка.Цена;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Объект.ВидЦены = Неопределено;
	ВидЦеныПредставление = НСтр("ru='<произвольная>'");
	Объект.Цена = Число(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПредоставленияСкидкиПриИзменении(Элемент)
	
	ВариантПредоставленияСкидкиПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если Параметры.ПодборТоваров И Объект.КоличествоУпаковок = 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнено количество'"),,"Объект.КоличествоУпаковок",,Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПодобранныеТовары = ПодобранныеТовары();
	
	Если Параметры.РазбиватьСтрокиЗапрещено Тогда
		ВариантыОбеспеченияСоответствие = Новый Соответствие;
		КоличествоСерий = 0;
		Для Каждого СтрокаТовары Из ПодобранныеТовары Цикл
			ВариантыОбеспеченияСоответствие.Вставить(СтрокаТовары.ВариантОбеспечения);
			Если ЗначениеЗаполнено(СтрокаТовары.Серия) Тогда
				КоличествоСерий = КоличествоСерий + 1;
			КонецЕсли;
		КонецЦикла;
		Если ВариантыОбеспеченияСоответствие.Количество() > 1 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выбрано несколько вариантов обеспечения, допустимо выбирать только один'"),,,,Отказ);
		КонецЕсли;
		Если КоличествоСерий > 1 И ТипЗнч(Параметры.Серия) <> Тип("Массив") Тогда // массив в заказе на сборку.
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выбрано несколько серий, допустимо выбирать только одну'"),,,,Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	КлючевыеПараметры = ОбеспечениеВДокументахКлиентСервер.КлючевыеПараметрыФормыЗапросаКоличестваИСерий();
	ЗаполнитьЗначенияСвойств(КлючевыеПараметры, Параметры);
	
	Если Не КлючевыеПараметры.ПодборТоваров Тогда
		
		ПараметрыУстановкиДатОтгрузки = Новый Структура("ДатаОтгрузкиВсехСтрокОднойДатой,ДатаОтгрузкиНовыхСтрок");
		
		Если Объект.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить")
				Или Объект.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада") Тогда
			
			ПараметрыУстановкиДатОтгрузки.ДатаОтгрузкиВсехСтрокОднойДатой = КлючевыеПараметры.ДатаОтгрузкиВсехСтрокОднойДатой;
			ПараметрыУстановкиДатОтгрузки.ДатаОтгрузкиНовыхСтрок          = КлючевыеПараметры.ДатаОтгрузкиНовыхСтрок;
			
		КонецЕсли;
		
		Результат = Новый Структура("ПодобранныеТовары,ПараметрыУстановкиДатОтгрузки",
		ПодобранныеТовары, ПараметрыУстановкиДатОтгрузки);
		Закрыть(Результат);
		
	Иначе
		
		Закрыть(Новый Структура("ПодобранныеТовары", ПодобранныеТовары));
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура КоличествоУпаковокПриИзмененииНаСервере()
	
	ПриИзмененииКоличестваУпаковокИлиУпаковкиНаСервере();
	УправлениеЭлементамиФормыПриСозданииИИзмененииРеквизитов(Элементы.КоличествоУпаковок);
	
КонецПроцедуры

&НаСервере
Процедура УпаковкаПриИзмененииНаСервере()
	
	КлючевыеПараметры = ОбеспечениеВДокументахКлиентСервер.КлючевыеПараметрыФормыЗапросаКоличестваИСерий();
	ЗаполнитьЗначенияСвойств(КлючевыеПараметры, Параметры);
	
	Обработки.ЗапросКоличестваИСерий.УпаковкаПриИзменении(Объект, КлючевыеПараметры);
	
	ПриИзмененииКоличестваУпаковокИлиУпаковкиНаСервере();
	УправлениеЭлементамиФормыПриСозданииИИзмененииРеквизитов(Элементы.Упаковка);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКоличестваУпаковокИлиУпаковкиНаСервере()
	
	СтароеКоличествоУпаковок = Объект.КоличествоУпаковок;
	
	КоэффициентУпаковки = КоэффициентУпаковки(Объект.Упаковка, Объект.Номенклатура);
	Объект.Количество = Объект.КоличествоУпаковок * КоэффициентУпаковки;
	Если Объект.Количество < Объект.Товары.Итог("Подобрано") Тогда
		Объект.Количество = Объект.Товары.Итог("Подобрано");
		Объект.КоличествоУпаковок = Объект.Количество / КоэффициентУпаковки;
	КонецЕсли;
	
	Если СтароеКоличествоУпаковок < Объект.КоличествоУпаковок Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Введено количество упаковок меньше, чем уже подобрано. Подобрано %1 %2.'"),
			Объект.КоличествоУпаковок,
			?(ЗначениеЗаполнено(Объект.Упаковка), Объект.Упаковка, ЕдиницаИзмерения));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключательОбособленноПриИзмененииНаСервере()
	
	УправлениеЭлементамиФормыПриСозданииИИзмененииРеквизитов(Элементы.ПереключательОбособленно);
	Если Элементы.Действие.СписокВыбора.НайтиПоЗначению(Объект.ВариантОбеспечения) = Неопределено Тогда
		Объект.ВариантОбеспечения = Элементы.Действие.СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДействиеПриИзмененииНаСервере()
	
	УправлениеЭлементамиФормыПриСозданииИИзмененииРеквизитов(Элементы.Действие);
	
КонецПроцедуры

&НаСервере
Процедура ВариантПредоставленияСкидкиПриИзмененииНаСервере()
	
	УправлениеЭлементамиФормыПриСозданииИИзмененииРеквизитов(Элементы.ВариантПредоставленияСкидки);
	
КонецПроцедуры

#КонецОбласти

#Область ПриСоздании

&НаСервере
Процедура УправлениеЭлементамиФормыПриСоздании()
	
	КлючевыеПараметры = ОбеспечениеВДокументахКлиентСервер.КлючевыеПараметрыФормыЗапросаКоличестваИСерий();
	ЗаполнитьЗначенияСвойств(КлючевыеПараметры, Параметры);
	
	// Установка заголовка формы.
	Текст = Неопределено;
	
	Текст = НСтр("ru = 'Ввод количества и цены'");
	Если КлючевыеПараметры.СкрытьЦену Тогда
		Текст = НСтр("ru = 'Ввод количества'");
	КонецЕсли;
	
	Заголовок = Текст;
	
	// Вспомогательные реквизиты.
	РеквизитыНоменклатуры = Новый Массив();
	РеквизитыНоменклатуры.Добавить("ТипНоменклатуры");
	РеквизитыНоменклатуры.Добавить("НаборУпаковок");
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Объект.Номенклатура,
		СтрСоединить(РеквизитыНоменклатуры,","));
	
	ИспользоватьУпаковки = ЗначениеЗаполнено(РеквизитыНоменклатуры.НаборУпаковок);
		
	// Настройка упаковки.
	Элементы.ЕдиницаИзмерения.Видимость = Не ИспользоватьУпаковки;
	Элементы.Упаковка.Видимость         = ИспользоватьУпаковки;
	
	// Установка видимости ценовых показателей.
	Элементы.ГруппаВидЦеныЦена.Видимость  = Не КлючевыеПараметры.СкрытьЦену;
	Элементы.Цена.Доступность             = КлючевыеПараметры.РедактироватьВидЦены;
	
	// Установка видимости скидок.
	ИспользоватьОграниченияРучныхСкидок = ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям");
	
	Элементы.ГруппаПараметрыСкидкиНаценки.Видимость           = КлючевыеПараметры.ИспользоватьРучныеСкидкиВПродажах
	                                                               И Не КлючевыеПараметры.СкрыватьРучныеСкидки;
	Элементы.НадписьМаксимальнаяРучнаяСкидка.Видимость        = ИспользоватьОграниченияРучныхСкидок;
	Элементы.НадписьМаксимальнаяРучнаяСкидка.Заголовок        = СтрШаблон(НСтр("ru = '%2 Макс. скидка: %1%%'"), МаксимальныйПроцентСкидки);
	Элементы.НадписьМаксимальнаяРучнаяНаценка.Видимость       = ИспользоватьОграниченияРучныхСкидок;
	Элементы.НадписьМаксимальнаяРучнаяНаценка.Заголовок       = СтрШаблон(НСтр("ru = '%2 Макс. наценка: %1%%'"), МаксимальныйПроцентНаценки);
	Элементы.НадписьМаксимальнаяСкидкаНеОграничена.Видимость  = Не ИспользоватьОграниченияРучныхСкидок;
	Элементы.НадписьМаксимальнаяНаценкаНеОграничена.Видимость = Не ИспользоватьОграниченияРучныхСкидок;
	
	// Видимость действия и флага "Обособленно".
	Элементы.Действие.Видимость = КлючевыеПараметры.ПодборТоваров
		И КлючевыеПараметры.ПодборВариантовОбеспечения
		И Не КлючевыеПараметры.ОграничиватьВариантыОбеспечения;
	Элементы.ПереключательОбособленно.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов")
		И КлючевыеПараметры.ПодборТоваров
		И КлючевыеПараметры.ПодборВариантовОбеспечения
		И Не КлючевыеПараметры.ОграничиватьВариантыОбеспечения;
	
	// Настройка элементов которые должны быть настроены как при создании так и при репдактировании отдельных элементов в форме.
	УправлениеЭлементамиФормыПриСозданииИИзмененииРеквизитов(Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормыПриСозданииИИзмененииРеквизитов(Элемент)
	
	КлючевыеПараметры = ОбеспечениеВДокументахКлиентСервер.КлючевыеПараметрыФормыЗапросаКоличестваИСерий();
	ЗаполнитьЗначенияСвойств(КлючевыеПараметры, Параметры);
	
	Если Элемент = Неопределено Или Элемент = Элементы.Упаковка Тогда
		
		ЕдиницаИзмерения = Неопределено;
		ЕдиницаИзмерения = Объект.Упаковка;
		Если Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
			ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Номенклатура, "ЕдиницаИзмерения");
		КонецЕсли;
		ЕдиницаИзмеренияКоэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(ЕдиницаИзмерения, Объект.Номенклатура);
		
	КонецЕсли;
		
	Если Элемент = Неопределено Или Элемент = Элементы.Упаковка Тогда
		
		Обработки.ЗапросКоличестваИСерий.ВыгрузитьВидыЦенВСписок(Объект, Элементы.Цена.СписокВыбора, Истина);
		
	КонецЕсли;
	
	Если Элемент = Неопределено Или Элемент = Элементы.Цена Тогда
		
		ВидЦеныПредставление = ?(ЗначениеЗаполнено(Объект.ВидЦены), Объект.ВидЦены, НСтр("ru='<произвольная>'"));
		
	КонецЕсли;
	
	Если Элемент = Неопределено Или Элемент = Элементы.Цена Или Элемент = Элементы.ВариантПредоставленияСкидки Тогда
		
		Элементы.ПроцентРучнойСкидкиНаценки.КнопкаСпискаВыбора = Ложь;
		Элементы.ПроцентРучнойСкидкиНаценки.СписокВыбора.Очистить();
		
		Если ВариантПредоставленияСкидки = "СКИДКА" Тогда
			Элементы.СтраницыВариантыПредоставленияСкидки.ТекущаяСтраница = Элементы.Скидка;
			Если МаксимальныйПроцентСкидки > 0 Тогда
				Элементы.ПроцентРучнойСкидкиНаценки.КнопкаСпискаВыбора = Истина;
				Элементы.ПроцентРучнойСкидкиНаценки.СписокВыбора.Добавить(
					МаксимальныйПроцентСкидки,
					Формат(МаксимальныйПроцентСкидки, "ЧДЦ=2"));
			КонецЕсли;
		Иначе
			Элементы.СтраницыВариантыПредоставленияСкидки.ТекущаяСтраница = Элементы.Наценка;
			Если МаксимальныйПроцентНаценки > 0 Тогда
				Элементы.ПроцентРучнойСкидкиНаценки.КнопкаСпискаВыбора = Истина;
				Элементы.ПроцентРучнойСкидкиНаценки.СписокВыбора.Добавить(
					МаксимальныйПроцентНаценки,
					Формат(МаксимальныйПроцентНаценки, "ЧДЦ=2"));
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	// Ограничение списка действий.
	Если Элемент = Неопределено
			Или Элемент = Элементы.ПереключательОбособленно Тогда
				
				Если ДопустимыеВариантыОбеспечения <> Неопределено Тогда
					
					Элементы.ПереключательОбособленно.Доступность =
						ДопустимыеВариантыОбеспечения.Обособленные.Количество() > 0
						И ДопустимыеВариантыОбеспечения.Необособленные.Количество() > 0;
						
					СписокЭлементов = ?(Объект.Обособленно,
						ДопустимыеВариантыОбеспечения.Обособленные,
						ДопустимыеВариантыОбеспечения.Необособленные);
						
					Элементы.Действие.СписокВыбора.ЗагрузитьЗначения(СписокЭлементов);
					Элементы.Действие.Доступность = Элементы.Действие.СписокВыбора.Количество() > 1;
						
				КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Превышение макисмального процента скидки.
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПроцентРучнойСкидкиНаценки.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПроцентРучнойСкидкиНаценки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("МаксимальныйПроцентСкидки");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("МаксимальныйПроцентСкидки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантПредоставленияСкидки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "СКИДКА";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.FireBrick);
	
	// Превышение макисмального процента наценки.
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПроцентРучнойСкидкиНаценки.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПроцентРучнойСкидкиНаценки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("МаксимальныйПроцентНаценки");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("МаксимальныйПроцентНаценки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантПредоставленияСкидки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "НАЦЕНКА";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.FireBrick);
	
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция КоэффициентУпаковки(Упаковка, Номенклатура)
	Возврат Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Упаковка, Номенклатура);
КонецФункции

&НаСервере
Функция ПараметрыТовара()
	
	ПараметрыТовара = Новый Структура();
	
	ПараметрыТовара.Вставить("Номенклатура",        Справочники.Номенклатура.ПустаяСсылка());
	ПараметрыТовара.Вставить("Характеристика",      Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	ПараметрыТовара.Вставить("Упаковка",            Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	ПараметрыТовара.Вставить("Цена",                0);
	ПараметрыТовара.Вставить("ВидЦены",             Справочники.ВидыЦен.ПустаяСсылка());
	ПараметрыТовара.Вставить("Склад",               Справочники.Склады.ПустаяСсылка());
	ПараметрыТовара.Вставить("ДатаОтгрузки",        Дата('00010101'));
	ПараметрыТовара.Вставить("ВариантОбеспечения",  Перечисления.ВариантыОбеспечения.ПустаяСсылка());
	ПараметрыТовара.Вставить("Обособленно",         Ложь);
	ПараметрыТовара.Вставить("ПроцентРучнойСкидки", 0);
	ПараметрыТовара.Вставить("КоличествоУпаковок",  0);
	ПараметрыТовара.Вставить("Количество",          0);
	ПараметрыТовара.Вставить("СтатусУказанияСерий", 0);
	ПараметрыТовара.Вставить("Серия",               Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Возврат ПараметрыТовара;
	
КонецФункции

&НаСервере
Функция ПодобранныеТовары()
	
	ПодобранныеТовары = Новый Массив();
	
	КоэффициентУпаковки = КоэффициентУпаковки(Объект.Упаковка, Объект.Номенклатура);
	ПараметрыТовара = ПараметрыТовара();
	ЗаполнитьЗначенияСвойств(ПараметрыТовара, Объект,
		"Номенклатура,Характеристика,ВидЦены,Обособленно,ВариантОбеспечения,КоличествоУпаковок,Цена,Упаковка");
	ПараметрыТовара.ПроцентРучнойСкидки = ?(ВариантПредоставленияСкидки = "СКИДКА",
		Объект.ПроцентРучнойСкидкиНаценки,
		-Объект.ПроцентРучнойСкидкиНаценки);
	ПараметрыТовара.Количество = Объект.КоличествоУпаковок * КоэффициентУпаковки;
	ПодобранныеТовары.Добавить(ПараметрыТовара);
	
	Возврат ПодобранныеТовары;
	
КонецФункции

#КонецОбласти