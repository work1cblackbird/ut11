#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	НепроверяемыеОперации = Новый Массив;
	НепроверяемыеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	НепроверяемыеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути);
	НепроверяемыеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути);
	
	Если НепроверяемыеОперации.Найти(Объект.ХозяйственнаяОперация) = Неопределено Тогда
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьЗаполнениеКоличестваПоРНПТ(Объект, Отказ, Неопределено);
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьДанныеПрослеживаемостиНомеровГТД(Объект, Объект.Товары, Объект.Дата);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика формы документа
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Обрабатываемая форма документа.
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполненияНаСервере(Форма, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	ДополнительныеПараметрыИСМП = СобытияФормИСМПКлиентСервер.ДополнительныеПараметрыИнтеграции(Форма);
	
	Если ПроверяемыеРеквизиты.Найти("Объект") <> Неопределено
		И ДополнительныеПараметрыИСМП <> Неопределено
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДополнительныеПараметрыИСМП, "ПроверкаЗаполненияОтключитьКонтрольСерий") Тогда
			
			ТекущийОбъект = Форма.РеквизитФормыВЗначение("Объект");
			ТекущийОбъект.ДополнительныеСвойства.Вставить("ПроверкаЗаполненияОтключитьКонтрольСерий", Истина);
			
			Если НЕ ТекущийОбъект.ПроверитьЗаполнение() Тогда
				Отказ = Истина
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Объект");
			
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		ИнтеграцияЕГАИСУТ.ЗаполнитьПоступлениеТоваровУслугНаОснованииТТНВходящаяЕГАИС(Объект, ДанныеЗаполнения, Неопределено, СтандартнаяОбработка);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		ИнтеграцияВЕТИСУТ.ЗаполнитьПриобретениеТоваровУслугНаОснованииВходящейТранспортнойОперацииВЕТИС(Объект, ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПриемкаТоваровИСМП") Тогда
		ИнтеграцияИСМПУТ.ЗаполнитьПриобретениеТоваровУслугНаОснованииПриемкиТовароИСМП(Объект, ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПогашениеСДИЗЗЕРНО") Тогда
		ИнтеграцияЗЕРНОУТ.ЗаполнитьПриобретениеТоваровУслугНаОснованииПогашенияСДИЗЗЕРНО(Объект, ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.НакладнаяСАТУРН") Тогда
		ИнтеграцияСАТУРНУТ.ЗаполнитьПриобретениеТоваровУслугНаОснованииНакладнаяСАТУРН(Объект, ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ИмпортПродукцииСАТУРН") Тогда
		ИнтеграцияСАТУРНУТ.ЗаполнитьПриобретениеТоваровУслугНаОснованииИмпортПродукцииСАТУРН(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("РеквизитыШапки") Тогда
			ДанныеЗаполнения.Вставить("ОперацияССамозанятым", ДанныеЗаполнения.РеквизитыШапки.ОперацияССамозанятым)
		КонецЕсли;
		
		Если Не ДанныеЗаполнения.Свойство("ОперацияССамозанятым") Тогда
		
			Если ЗначениеЗаполнено(Объект.Договор) Тогда
				Объект.ОперацияССамозанятым =
					ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор, "ДоговорССамозанятым");
			Иначе
				
				Объект.ОперацияССамозанятым = Ложь;
				ОписаниеРеквизитов = Новый Структура;
				ДенежныеСредстваСерверЛокализация.ЗадатьОписаниеЗаполняемыхРеквизитовПриобретенияПоСтатистике(ОписаниеРеквизитов);
				ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(Объект, Объект, ОписаниеРеквизитов);
				
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	ЗаполнитьПризнакЕстьАлкогольнаяПродукция(Объект);
	ЗаполнитьЗначенияСвойств(Объект, ИнтеграцияГИСМ_УТ.ЗаполнитьПризнакиЕстьМаркируемаяПродукцияИЕстьКиЗ(Объект, "Товары"));
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	//++ Локализация
	Объект.ЕстьАлкогольнаяПродукция     = Ложь;
	Объект.ЕстьКиЗГИСМ                  = Ложь;
	Объект.ЕстьМаркируемаяПродукцияГИСМ = Ложь;
	Объект.ШтрихкодыУпаковок.Очистить();
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	
	Документы.КорректировкаВидаДеятельностиНДС.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Приобретение товаров услуг".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	
	// Авансовый отчет
	Если Константы.ВидимостьДатыНачалаПечатиЕдиногоАвансовогоОтчета.Получить() Тогда
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Документ.АвансовыйОтчет";
		КомандаПечати.Идентификатор = "АвансовыйОтчет2";
		КомандаПечати.Представление = НСтр("ru = 'Авансовый отчет'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			КомандаПечати,
			"ХозяйственнаяОперация",
			Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо,
			ВидСравненияКомпоновкиДанных.Равно);
			
		ДатаНачалаПечатиЕдиногоАвансовогоОтчета = Константы.ДатаНачалаПечатиЕдиногоАвансовогоОтчета.Получить();
		Если ЗначениеЗаполнено(ДатаНачалаПечатиЕдиногоАвансовогоОтчета) Тогда
			
			ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
				КомандаПечати,
				"Дата",
				ДатаНачалаПечатиЕдиногоАвансовогоОтчета,
				ВидСравненияКомпоновкиДанных.Меньше);
		КонецЕсли;
	КонецЕсли;
	
	// Приходный ордер (М-4)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "М4";
	КомандаПечати.Представление = НСтр("ru = 'Приходный ордер (М-4)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Акт о приемке товара, поступившего без счета поставщика (ТОРГ-4)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "ТОРГ4";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приемке товара, поступившего без счета поставщика (ТОРГ-4)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//++ Локализация
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АвансовыйОтчет",
			НСтр("ru='Авансовый отчет'"),
			АвансовыйОтчетЛокализация.СформироватьПечатнуюФормуАвансовогоОтчетаСтараяВерсия(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

// Функция получает данные для формирования печатной формы  М-4
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ПриобретениеТоваровУслуг - Массив ссылок на документы, 
//																			по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыМ4(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Дата                 КАК Дата,
	|	ДанныеДокументов.Валюта               КАК Валюта,
	|	ДанныеДокументов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокументов.Организация КАК Организация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	Запрос.Текст = "
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка                     КАК Ссылка,
	|	ПриобретениеТоваровУслуг.Номер                      КАК Номер,
	|	ПриобретениеТоваровУслуг.Дата                       КАК Дата,
	|	ПриобретениеТоваровУслуг.Дата                       КАК ДатаСоставления,
	|	ПриобретениеТоваровУслуг.НомерВходящегоДокумента    КАК НомерСопроводительногоДокумента,
	|	ПриобретениеТоваровУслуг.Контрагент                 КАК Поставщик,
	|	ПриобретениеТоваровУслуг.Организация                КАК Организация,
	|	ПриобретениеТоваровУслуг.Организация.Префикс        КАК Префикс,
	|	ПриобретениеТоваровУслуг.БанковскийСчетОрганизации  КАК БанковскийСчетОрганизации,
	|
	|	ВЫБОР
	|		КОГДА
	|			ПриобретениеТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ТОГДА
	|			ПриобретениеТоваровУслуг.Организация
	|		ИНАЧЕ
	|			ПриобретениеТоваровУслуг.Грузоотправитель
	|	КОНЕЦ                                              КАК Грузоотправитель,
	|
	|	ПриобретениеТоваровУслуг.Подразделение              КАК Подразделение,
	|	ПриобретениеТоваровУслуг.Подразделение.Наименование КАК ПредставлениеПодразделения,
	|	ПриобретениеТоваровУслуг.Валюта                     КАК Валюта,
	|	ПриобретениеТоваровУслуг.Принял        			   КАК МОЛ,
	|	ПриобретениеТоваровУслуг.ПринялДолжность            КАК ДолжностьМОЛ
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ПриобретениеТоваровУслуг.Ссылка = ДанныеДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                                  КАК Ссылка,
	|	ТаблицаТоваров.Склад                                   КАК Склад,
	|	ТаблицаТоваров.Склад.Наименование                      КАК СкладНаименование,
	|	ТаблицаТоваров.Номенклатура                            КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное         КАК ТоварНаименование,
	|	
	|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
	|		ТаблицаТоваров.Номенклатура.Артикул
	|	ИНАЧЕ
	|		ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	
	|	ТаблицаТоваров.ЕдиницаИзмерения.Представление          КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Код                    КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное       КАК Характеристика,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1 ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаТоваров.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|
	|	ТаблицаТоваров.КоличествоУпаковок                      КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок                      КАК КоличествоПринято,
	|	ВЫБОР КОГДА ТаблицаТоваров.Количество <> 0 ТОГДА 
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                                  КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС                             КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС                                КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС   КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
	|			И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваров.НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка, Склад
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
			
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы  ТОРГ-4
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив - Массив ссылок на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыТОРГ4(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта,
	|	ДанныеДокументов.Организация КАК Организация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПриобретениеТоваровУслуг.Номер КАК Номер,
	|	ПриобретениеТоваровУслуг.Дата КАК Дата,
	|	ПриобретениеТоваровУслуг.Дата КАК ДатаДокумента,
	|	ПриобретениеТоваровУслуг.ДатаВходящегоДокумента КАК ДатаДокументаСопровождения,
	|	ПриобретениеТоваровУслуг.НомерВходящегоДокумента КАК НомерДокументаСопровождения,
	|	ПриобретениеТоваровУслуг.Контрагент КАК Поставщик,
	|	ПриобретениеТоваровУслуг.Организация КАК Организация,
	|	ПриобретениеТоваровУслуг.Организация.Префикс КАК Префикс,
	|	ПриобретениеТоваровУслуг.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ПриобретениеТоваровУслуг.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ПриобретениеТоваровУслуг.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ВЫБОР
	|		КОГДА ПриобретениеТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПриобретениеТоваровУслуг.Организация
	|		ИНАЧЕ ПриобретениеТоваровУслуг.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ПриобретениеТоваровУслуг.Подразделение.Наименование КАК ПредставлениеПодразделения,
	|	ПриобретениеТоваровУслуг.Валюта КАК Валюта,
	|	ПриобретениеТоваровУслуг.Принял КАК МОЛ,
	|	ПриобретениеТоваровУслуг.ПринялДолжность КАК ДолжностьМОЛ
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПриобретениеТоваровУслуг.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПриобретениеТоваровУслуг.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.Склад.Наименование КАК МестоПриемки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	1 КАК КоличествоВОдномМесте,
	|	ТаблицаТоваров.КоличествоУпаковок КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|						ТОГДА ТаблицаТоваров.Количество
	|					ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|				КОНЕЦ * &ТекстЗапросаВесУпаковки
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МассаБрутто,
	|	ВЫБОР
	|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|			ТОГДА ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МассаНетто,
	|	ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
	|			И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваров.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ТаблицаТоваров.Упаковка", "ТаблицаТоваров.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения", "ТаблицаТоваров.Номенклатура"));
	
	Запрос.УстановитьПараметр("КолонкаКодов",                  КолонкаКодов);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",          Константы.ЕдиницаИзмеренияВеса.Получить());
	Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса", ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Возвращает данные для формирования печатной формы МХ - 1.
//
// Параметры:
//	ПараметрыПечати	- Структура -дополнительные настройки печати.
//	МассивОбъектов	- Массив из ДокументСсылка.ПриобретениеТоваровУслуг - коллекция значений ссылок на документы,
//																			по которым необходимо получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемых для печати, содержащая следующие следующие свойства:
//		* РезультатПоШапке			- РезультатЗапроса - данные шапки документа.
//		* РезультатПоСкладам		- РезультатЗапроса - данные о складе ответственного хранения.
//		* РезультатПоТабличнойЧасти	- РезультатЗапроса - данные табличной части документа.
//		* РезультатПоОшибкам		- РезультатЗапроса - данные об ошибках, возникающих при печати документа.
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка									КАК Ссылка,
	|	ДанныеДокумента.Номер									КАК Номер,
	|	ДанныеДокумента.Дата									КАК Дата,
	|	ДанныеДокумента.Дата									КАК ДатаДокумента,
	|	НЕОПРЕДЕЛЕНО											КАК Заказ,
	|	ДанныеДокумента.Организация								КАК Организация,
	|	ДанныеДокумента.Организация.Префикс						КАК Префикс,
	|	НЕОПРЕДЕЛЕНО											КАК Поклажедержатель,
	|	ТоварыДокумента.Склад									КАК Склад,
	|	ЕСТЬNULL(Склады.СкладОтветственногоХранения, ЛОЖЬ)		КАК СкладОтветственногоХранения,
	|	ДанныеДокумента.Организация = Склады.Поклажедержатель	КАК ОрганизацияПоклажедержатель,
	|	Склады.ИсточникИнформацииОЦенахДляПечати				КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены									КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены						КАК ВалютаЦены,
	|	НЕОПРЕДЕЛЕНО											КАК Договор,
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет	КАК ПредварительныйРасчет,
	|	ДанныеДокумента.Дата									КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТоварыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|		ПО ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ)
	|			И РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен
	|			И ДанныеДокумента.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ТоварыДокумента.Склад = Склады.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И (ТоварыДокумента.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		ИЛИ НЕ ТоварыДокумента.Назначение.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка									КАК Ссылка,
	|	ДанныеДокумента.Номер									КАК Номер,
	|	ДанныеДокумента.Дата									КАК Дата,
	|	ДанныеДокумента.Дата									КАК ДатаДокумента,
	|	ТоварыДокумента.Назначение.Заказ						КАК Заказ,
	|	ТоварыДокумента.Назначение.Договор.Контрагент			КАК Организация,
	|	""""													КАК Префикс,
	|	ДанныеДокумента.Организация								КАК Поклажедержатель,
	|	ТоварыДокумента.Склад									КАК Склад,
	|	ЕСТЬNULL(Склады.СкладОтветственногоХранения, ЛОЖЬ)		КАК СкладОтветственногоХранения,
	|	ЛОЖЬ													КАК ОрганизацияПоклажедержатель,
	|	Склады.ИсточникИнформацииОЦенахДляПечати				КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены									КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены						КАК ВалютаЦены,
	|	ТоварыДокумента.Назначение.Договор						КАК Договор,
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет	КАК ПредварительныйРасчет,
	|	ДанныеДокумента.Дата									КАК ДатаПолученияСебестоимости
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТоварыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|		ПО ТоварыДокумента.Ссылка = ДанныеДокумента.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ)
	|			И РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен
	|			И ДанныеДокумента.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ТоварыДокумента.Склад = Склады.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ТоварыДокумента.Назначение.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка								КАК Ссылка,
	|	ДанныеДокумента.Номер								КАК Номер,
	|	ДанныеДокумента.Дата								КАК Дата,
	|	ДанныеДокумента.ДатаДокумента						КАК ДатаДокумента,
	|	ДанныеДокумента.Заказ								КАК Заказ,
	|	ДанныеДокумента.Организация							КАК Организация,
	|	ДанныеДокумента.Поклажедержатель					КАК Поклажедержатель,
	|	ДанныеДокумента.Склад								КАК Склад,
	|	ДанныеДокумента.ИсточникИнформацииОЦенахДляПечати	КАК ИсточникИнформацииОЦенахДляПечати,
	|	ДанныеДокумента.ВидЦены								КАК ВидЦены,
	|	ДанныеДокумента.ВалютаЦены							КАК ВалютаЦены,
	|	ДанныеДокумента.Договор								КАК Договор,
	|	ДанныеДокумента.ПредварительныйРасчет				КАК ПредварительныйРасчет,
	|	ДанныеДокумента.ДатаПолученияСебестоимости			КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.СкладОтветственногоХранения
	|	И НЕ ДанныеДокумента.ОрганизацияПоклажедержатель
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Серия КАК Серия,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения1 КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения1 КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения1 КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|,
	|	ВЫБОР КОГДА Товары.Назначение.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала)
	|		ТОГДА Товары.Назначение.Договор.Контрагент
	|	ИНАЧЕ
	|		Товары.Ссылка.Организация
	|	КОНЕЦ КАК Организация
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Склад = Шапка.Склад
	|			И Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ВидыЗапасов.Упаковка КАК Упаковка,
	|	МИНИМУМ(ВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения2 КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения2 КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения2 КАК ВидУпаковки,
	|	СУММА(ВидыЗапасов.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ВидыЗапасов.Количество) КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория = Шапка.Склад
	|			И ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.Ссылка,
	|	Шапка.Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения,
	|	Шапка.ПредварительныйРасчет,
	|	ВидыЗапасов.ВидЗапасов,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика,
	|	ВидыЗапасов.Упаковка
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "ВидыЗапасов.Упаковка", "ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "ВидыЗапасов.Упаковка", "ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура"));
		
	ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[МассивРезультатов.ВГраница() - 3];
	РезультатПоСкладам			= МассивРезультатов[МассивРезультатов.ВГраница() - 2];
	РезультатПоТабличнойЧасти	= МассивРезультатов[МассивРезультатов.ВГраница() - 1];
	РезультатПоОшибкам			= МассивРезультатов[МассивРезультатов.ВГраница()];
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",			РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСкладам",			РезультатПоСкладам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоОшибкам",			РезультатПоОшибкам);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Дополняет текст запроса для формирования печатных форм МХ-1, МХ-3
//
// Параметры:
//	Запрос - Запрос - Выполняемый запрос.
//
Процедура ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос)
	
	ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25();
	ДатаПереходаНаЦенообразование25 = ЦенообразованиеВызовСервера.ДатаПереходаНаЦенообразованиеВерсии25();

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|ПОМЕСТИТЬ ПериодыЦенНоменклатуры
	|ИЗ
	|	ВтТовары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
	|		И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|		И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|		И (ВЫБОР
	|			КОГДА &ИспользуетсяЦенообразование25
	|				ТОГДА Товары.ДатаПолученияЦены < &ДатаПереходаНаЦенообразование25
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	ЦеныНоменклатуры.ВидЦены,
	|	ЦеныНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.ВидЦены КАК ВидЦены,
	|	Товары.ДатаПолученияЦены КАК ДатаПолученияЦены,
	|	Товары.ВалютаЦены КАК ВалютаЦены,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА
	|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаХарактеристик.ХарактеристикаНоменклатурыДляЦенообразования
	|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК ХарактеристикаЦО,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоСерии = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаСерий.СерияНоменклатурыДляЦенообразования
	|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК СерияЦО,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоУпаковке = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ИНАЧЕ Товары.Упаковка
	|	КОНЕЦ КАК УпаковкаЦО,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыРеквизиты25
	|ИЗ
	|	ВтТовары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО Товары.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ТаблицаХарактеристик
	|		ПО Товары.Характеристика = ТаблицаХарактеристик.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК ТаблицаСерий
	|		ПО Товары.Серия = ТаблицаСерий.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (ВидыНоменклатуры.Ссылка = ТаблицаНоменклатуры.ВидНоменклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.ХарактеристикаЦО КАК ХарактеристикаЦО,
	|	ЦеныНоменклатуры.СерияЦО КАК СерияЦО,
	|	ЦеныНоменклатуры.УпаковкаЦО КАК УпаковкаЦО,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|ПОМЕСТИТЬ ПериодыЦенНоменклатуры25
	|ИЗ
	|	ТоварыРеквизиты25 КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
	|		ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И Товары.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО
	|		И Товары.СерияЦО = ЦеныНоменклатуры.СерияЦО
	|		И Товары.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО
	|		И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|		И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|		И (&ИспользуетсяЦенообразование25)
	|		И (Товары.ДатаПолученияЦены >= &ДатаПереходаНаЦенообразование25)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	ЦеныНоменклатуры.ВидЦены,
	|	ЦеныНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.ХарактеристикаЦО,
	|	ЦеныНоменклатуры.СерияЦО,
	|	ЦеныНоменклатуры.УпаковкаЦО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка КАК Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ЦеныПоВидуЦен
	|ИЗ
	|	ПериодыЦенНоменклатуры КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|		И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Упаковка
	|ИЗ
	|	ПериодыЦенНоменклатуры25 КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|		И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И ПериодыЦенНоменклатуры.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО
	|		И ПериодыЦенНоменклатуры.СерияЦО = ЦеныНоменклатуры.СерияЦО
	|		И ПериодыЦенНоменклатуры.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	СтоимостьТоваров.ВидЗапасов КАК ВидЗапасов,
	|	СтоимостьТоваров.Организация КАК Организация,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	МАКСИМУМ(СтоимостьТоваров.Период) КАК Период
	|ПОМЕСТИТЬ ПериодыСтоимостиТоваров
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|		И ВидыЗапасов.Организация = СтоимостьТоваров.Организация
	|		И ВидыЗапасов.ВидЗапасов = СтоимостьТоваров.ВидЗапасов
	|		И ВидыЗапасов.ДатаПолученияЦены >= СтоимостьТоваров.Период
	|		И (ВидыЗапасов.ПредварительныйРасчет)
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.Ссылка,
	|	СтоимостьТоваров.ВидЗапасов,
	|	СтоимостьТоваров.Организация,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыСтоимостиТоваров.Ссылка,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.ВидЗапасов КАК ВидЗапасов,
	|	СтоимостьТоваров.Организация КАК Организация,
	|	(СтоимостьТоваров.СтоимостьРегл + СтоимостьТоваров.ДопРасходыРегл + СтоимостьТоваров.ТрудозатратыРегл +
	|		СтоимостьТоваров.ПостатейныеПостоянныеРегл + СтоимостьТоваров.ПостатейныеПеременныеРегл) КАК Стоимость
	|ПОМЕСТИТЬ ЦеныПоСебестоимостиПредварительно
	|ИЗ
	|	ПериодыСтоимостиТоваров КАК ПериодыСтоимостиТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ПО ПериодыСтоимостиТоваров.АналитикаУчетаНоменклатуры = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|		И ПериодыСтоимостиТоваров.Организация = СтоимостьТоваров.Организация
	|		И ПериодыСтоимостиТоваров.Период = СтоимостьТоваров.Период
	|		И ПериодыСтоимостиТоваров.ВидЗапасов = СтоимостьТоваров.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов КАК ВидЗапасов,
	|	СебестоимостьТоваров.Организация КАК Организация,
	|	СУММА(СебестоимостьТоваров.СтоимостьРегл + СебестоимостьТоваров.ДопРасходыРегл +
	|		СебестоимостьТоваров.ТрудозатратыРегл + СебестоимостьТоваров.ПостатейныеПостоянныеРегл +
	|		СебестоимостьТоваров.ПостатейныеПеременныеРегл) КАК Стоимость
	|ПОМЕСТИТЬ ЦеныПоСебестоимости
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыЗапасов КАК ВидыЗапасов
	|		ПО (ВидыЗапасов.Ссылка = СебестоимостьТоваров.ДокументДвижения
	|		ИЛИ ВидыЗапасов.Ссылка = СебестоимостьТоваров.Регистратор)
	|		И (ВидыЗапасов.АналитикаУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры)
	|		И (ВидыЗапасов.Организация = СебестоимостьТоваров.Организация)
	|		И (ВидыЗапасов.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов)
	|		И (НЕ ВидыЗапасов.ПредварительныйРасчет)
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.Ссылка,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов,
	|	СебестоимостьТоваров.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтШапка.Ссылка КАК Ссылка,
	|	ВтШапка.Номер КАК Номер,
	|	ВтШапка.Дата КАК Дата,
	|	ВтШапка.ДатаДокумента КАК ДатаДокумента,
	|	ВтШапка.Организация КАК Организация,
	|	ВтШапка.Договор.Номер КАК ДоговорНомер,
	|	ВтШапка.Договор.Дата КАК ДоговорДата
	|ИЗ
	|	ВтШапка КАК ВтШапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ВтШапка.Склад = Склады.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтШапка.Ссылка КАК Ссылка,
	|	ВтШапка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	ПРЕДСТАВЛЕНИЕ(ВтШапка.Склад) КАК ПредставлениеСклада,
	|	ВтШапка.Склад КАК Склад,
	|	ВтШапка.ВидЦены КАК ВидЦены,
	|	ВтШапка.ВалютаЦены КАК ВалютаЦены,
	|	ПРЕДСТАВЛЕНИЕ(Склады.Подразделение) КАК ПредставлениеПодразделения,
	|	ВЫБОР
	|		КОГДА ВтШапка.Поклажедержатель = Неопределено
	|			ТОГДА Склады.Поклажедержатель
	|		ИНАЧЕ ВтШапка.Поклажедержатель
	|	КОНЕЦ КАК Поклажедержатель,
	|	ВтШапка.Организация КАК Организация,
	|	ВтШапка.Заказ КАК Заказ,
	|	ВЫБОР
	|		КОГДА Склады.ОтветственноеХранениеДоВостребования
	|			ТОГДА &ДоВостребования
	|		ИНАЧЕ Склады.СрокОтветственногоХранения
	|	КОНЕЦ КАК СрокХранения,
	|	Склады.ОсобыеОтметки КАК ОсобыеОтметки,
	|	Склады.УсловияХраненияТоваров КАК УсловияХранения,
	|	Склады.ТекущаяДолжностьОтветственного КАК ДолжностьМОЛ,
	|	Склады.ТекущийОтветственный КАК МОЛ
	|ИЗ
	|	ВтШапка КАК ВтШапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ВтШапка.Склад = Склады.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаНоменклатуры.Артикул
	|		ИНАЧЕ ТаблицаНоменклатуры.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаХарактеристик.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	Товары.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	Товары.ВидУпаковки КАК ВидУпаковки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) * Товары.Количество КАК ЧИСЛО(31,
	|		2)) КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.КоличествоУпаковок = 0
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) * Товары.Количество КАК
	|				ЧИСЛО(31, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) * Товары.Количество /
	|			Товары.КоличествоУпаковок КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК Цена,
	|	Товары.Организация КАК Организация
	|ИЗ
	|	ВтТовары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО Товары.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ТаблицаХарактеристик
	|		ПО Товары.Характеристика = ТаблицаХарактеристик.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныПоВидуЦен КАК Цены
	|		ПО Товары.Ссылка = Цены.Ссылка
	|		И Товары.НомерСтроки = Цены.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка,
	|	ВидыЗапасов.Склад,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаНоменклатуры.Артикул
	|		ИНАЧЕ ТаблицаНоменклатуры.Код
	|	КОНЕЦ,
	|	ВидыЗапасов.НомерСтроки,
	|	ВидыЗапасов.Номенклатура,
	|	ТаблицаНоменклатуры.НаименованиеПолное,
	|	ТаблицаХарактеристик.НаименованиеПолное,
	|	ВидыЗапасов.ЕдиницаИзмеренияНаименование,
	|	ВидыЗапасов.ЕдиницаИзмеренияКод,
	|	ВидыЗапасов.КоличествоУпаковок,
	|	ВидыЗапасов.ВидУпаковки,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.КоличествоУпаковок = 0
	|			ТОГДА Цены.Стоимость
	|		ИНАЧЕ Цены.Стоимость * ВидыЗапасов.КоличествоУпаковок
	|	КОНЕЦ,
	|	Цены.Стоимость,
	|	ВидыЗапасов.Организация КАК Организация
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО ВидыЗапасов.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ТаблицаХарактеристик
	|		ПО ВидыЗапасов.Характеристика = ТаблицаХарактеристик.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦеныПоСебестоимостиПредварительно КАК Цены
	|		ПО ВидыЗапасов.Ссылка = Цены.Ссылка
	|		И ВидыЗапасов.АналитикаУчетаНоменклатуры = Цены.АналитикаУчетаНоменклатуры
	|		И ВидыЗапасов.Организация = Цены.Организация
	|		И ВидыЗапасов.ВидЗапасов = Цены.ВидЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка,
	|	ВидыЗапасов.Склад,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаНоменклатуры.Артикул
	|		ИНАЧЕ ТаблицаНоменклатуры.Код
	|	КОНЕЦ,
	|	ВидыЗапасов.НомерСтроки,
	|	ВидыЗапасов.Номенклатура,
	|	ТаблицаНоменклатуры.НаименованиеПолное,
	|	ТаблицаХарактеристик.НаименованиеПолное,
	|	ВидыЗапасов.ЕдиницаИзмеренияНаименование,
	|	ВидыЗапасов.ЕдиницаИзмеренияКод,
	|	ВидыЗапасов.КоличествоУпаковок,
	|	ВидыЗапасов.ВидУпаковки,
	|	Цены.Стоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.КоличествоУпаковок = 0
	|			ТОГДА Цены.Стоимость
	|		ИНАЧЕ Цены.Стоимость / ВидыЗапасов.КоличествоУпаковок
	|	КОНЕЦ,
	|	ВидыЗапасов.Организация КАК Организация
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО ВидыЗапасов.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ТаблицаХарактеристик
	|		ПО ВидыЗапасов.Характеристика = ТаблицаХарактеристик.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦеныПоСебестоимости КАК Цены
	|		ПО ВидыЗапасов.Ссылка = Цены.Ссылка
	|		И ВидыЗапасов.АналитикаУчетаНоменклатуры = Цены.АналитикаУчетаНоменклатуры
	|		И ВидыЗапасов.Организация = Цены.Организация
	|		И ВидыЗапасов.ВидЗапасов = Цены.ВидЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	НомерСтроки,
	|	Номенклатура,
	|	ПредставлениеХарактеристики,
	|	ВидУпаковки
	|ИТОГИ
	|ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.Ссылка) КАК СсылкаПредставление,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.Организация) КАК ОрганизацияПредставление,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.Склад) КАК СкладПредставление,
	|	ДанныеДокумента.СкладОтветственногоХранения КАК СкладОтветственногоХранения,
	|	ДанныеДокумента.ОрганизацияПоклажедержатель КАК ОрганизацияПоклажедержатель
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтШапка КАК ВтШапка
	|		ПО ДанныеДокумента.Ссылка = ВтШапка.Ссылка
	|ГДЕ
	|	ВтШапка.Ссылка ЕСТЬ NULL
	|;
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"Цены.Упаковка",
		"Товары.Номенклатура"));
	
	Запрос.Текст = Запрос.Текст + ТекстЗапроса;
	Запрос.УстановитьПараметр("ДоВостребования", НСтр("ru='до востребования'"));
	Запрос.УстановитьПараметр("ИспользуетсяЦенообразование25", ИспользуетсяЦенообразование25);
	Запрос.УстановитьПараметр("ДатаПереходаНаЦенообразование25", ДатаПереходаНаЦенообразование25);
	
КонецПроцедуры

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПересчитыватьВВалютуРегл - Булево - Признак необходимости пересчета сумм табличной части в валюте регламентированного учета.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПересчитыватьВВалютуРегл = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПересчитыватьВВалютуРегл);
	
	Если ПересчитыватьВВалютуРегл Тогда
		Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		ТаблицаДанныхДокументов КАК ДанныеДокументов
			|	ПО
			|		РасчетыСПоставщиками.Регистратор = ДанныеДокументов.Ссылка
			|
			|ГДЕ
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Организация.ВалютаРегламентированногоУчета
			|	И РасчетыСПоставщиками.Активность
			|";
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
			
			Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
				КонецРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
				АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
				Попытка
					РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСПоставщиками(КонецРасчета, АналитикиРасчета);
				Исключение
					ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
					|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаДанныхДокументов КАК ДанныеДокументов
			|ГДЕ 
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Организация.ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
			
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                          КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                        КАК Характеристика,
	|	ТаблицаДокумента.Количество                            КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                    КАК КоличествоУпаковок,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка                              КАК Упаковка,
	|   &ТекстЗапросаЕдиницаИзмеренияНоменклатуры 			   КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Склад                                 КАК Склад
	|
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта = ДанныеДокументов.Организация.ВалютаРегламентированногоУчета
	|	ИЛИ (НЕ &ПересчитыватьВВалютуРегл)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                     КАК КоличествоУпаковок,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, 0) КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаНДСРегл, 0)    КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка                               КАК Упаковка,
	|   &ТекстЗапросаЕдиницаИзмеренияНоменклатуры				КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Склад                                  КАК Склад
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта <> ДанныеДокументов.Организация.ВалютаРегламентированногоУчета
	|	И &ПересчитыватьВВалютуРегл
	|	И СуммыДокументовВВалютахУчета.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.Количество                             КАК КоличествоУпаковок,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, 0) КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаНДСРегл, 0)    КАК СуммаНДС,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|   &ТекстЗапросаЕдиницаИзмеренияАналитики							КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.МестоХранения       КАК Склад
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.ВидыЗапасов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта <> ДанныеДокументов.Организация.ВалютаРегламентированногоУчета
	|	И &ПересчитыватьВВалютуРегл
	|	И СуммыДокументовВВалютахУчета.Активность
	|	И &ИспользуетсяДокументПоступлениеТоваров
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмеренияНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаДокумента.Упаковка",
			"ТаблицаДокумента.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмеренияАналитики",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения",
			"ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИспользуетсяДокументПоступлениеТоваров",
		"ВЫБОР
		|	КОГДА ТаблицаДокумента.Ссылка.ХозяйственнаяОперация В(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути),
		|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
		|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
		|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
		|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|КОНЕЦ");
	
	Запрос.Выполнить();
	
КонецПроцедуры


//-- Локализация
#КонецОбласти


//++ Локализация
#Область Фискализация

// Возвращает таблицу товаров для заполнения позиций строк в параметрах чека
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для получения товарных позиций
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблицу с товарными позициями с количественными и суммовыми показателями
Функция ПозицииНоменклатурыПоДокументу(ДокументСсылка) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Валюта               КАК Валюта,
	|	ДанныеДокументов.Организация КАК Организация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка = &Ссылка
	|;";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, Истина);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТоваров.КоличествоУпаковок КАК Количество,
	|	(ВЫРАЗИТЬ((ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС) /
	|		ТаблицаТоваров.КоличествоУпаковок КАК ЧИСЛО(31,2))) КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС КАК Сумма,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Количество             КАК Количество,
	|	ТаблицаНоменклатуры.Сумма                  КАК Сумма,
	|	ТаблицаНоменклатуры.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаНоменклатуры.СуммаНДС               КАК СуммаНДС,
	|	ТаблицаНоменклатуры.Цена                   КАК Цена,
	|	
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаНоменклатуры.Номенклатура) = ТИП(Строка) ТОГДА
	|			ТаблицаНоменклатуры.Номенклатура
	|		ИНАЧЕ
	|			ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Характеристика.НаименованиеПолное, """") КАК ХарактеристикаНаименование,
	|	ТаблицаНоменклатуры.Упаковка               КАК Упаковка,
	|	ТаблицаНоменклатуры.Упаковка               КАК УпаковкаНаименование
	|
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает параметры операции фискализации чека для печати чека по документу
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма документ, из которого печатается чек - содержит:
// 	* Объект - ДокументОбъект - Документ-объект, основной параметр формы.
// Возвращаемое значение:
// 	Структура - Структура параметров операции фискализации чека
Функция ОсновныеПараметрыОперации(Форма) Экспорт
	
	ОсновныеПараметрыОперации = ФормированиеФискальныхЧековСерверПереопределяемый.СтруктураОсновныхПараметровОперации();
	
	ОсновныеПараметрыОперации.ДокументСсылка       = Форма.Объект.Ссылка;
	ОсновныеПараметрыОперации.Организация          = Форма.Объект.Организация;
	ОсновныеПараметрыОперации.Контрагент           = Форма.Объект.Контрагент;
	ОсновныеПараметрыОперации.Партнер              = Форма.Объект.Партнер;
	ОсновныеПараметрыОперации.Валюта               = Форма.Объект.Валюта;
	ОсновныеПараметрыОперации.ВалютаВзаиморасчетов = Форма.Объект.ВалютаВзаиморасчетов;
	ОсновныеПараметрыОперации.СуммаДокумента       = Форма.Объект.СуммаДокумента;
	
	Возврат ОсновныеПараметрыОперации;
	
КонецФункции

// Определяет, разрешено ли пробитие фискального чека по документу
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма документ, из которого печатается чек - содержит:
// 	* Объект - ДокументОбъект - Документ-объект, основной параметр формы.
// Возвращаемое значение:
// 	Булево - Истина, если разрешено пробитие чека
Функция РазрешеноПробитиеФискальныхЧековПоДокументу(Форма) Экспорт
	
	РазрешеноПробитиеФискальныхЧековПоДокументу = Ложь;
	
	Если ЗначениеЗаполнено(Форма.Объект.Контрагент)
		И ЗначениеЗаполнено(Форма.Объект.ХозяйственнаяОперация) Тогда
		
		ЮрФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.Объект.Контрагент, "ЮрФизЛицо");
		
		КонтрагентЯвляетсяФизЛицом = (ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо);
		ДокументЯвляетсяРеализациейКлиенту =
		          (Форма.Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		
		Если КонтрагентЯвляетсяФизЛицом И ДокументЯвляетсяРеализациейКлиенту Тогда
			РазрешеноПробитиеФискальныхЧековПоДокументу	= Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат РазрешеноПробитиеФискальныхЧековПоДокументу;
	
КонецФункции

// Формирует массив форматированных строк для формирования гиперссылки пробития фискального чека
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ-ссылка, по которому пробивается фискальный чек
// 	Форма - ФормаКлиентскогоПриложения - Форма документ, из которого печатается чек - содержит:
// 	* Объект - ДокументОбъект - Документ-объект, основной параметр формы.
// 	МассивПредставлений - Массив из ФорматированнаяСтрока - Массив форматированных строк для формирования гиперссылки
//    пробития фискального чека.
Процедура ОбновитьГиперссылкуПробитияФискальногоЧека(ДокументСсылка, Форма, МассивПредставлений) Экспорт
	
	ФискальнаяОперацияДанныеЖурнала = ФормированиеФискальныхЧековСервер.ДанныеПробитогоФискальногоЧекаПоДокументу(ДокументСсылка);
	
	Если ФискальнаяОперацияДанныеЖурнала <> Неопределено Тогда
		
		НомерЧекаККМ = ФискальнаяОперацияДанныеЖурнала.НомерЧекаККМ;
		ТекстСсылки = "ОткрытьЗаписьФискальнойОперации";
		
		ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиКомандуЧекПробит(МассивПредставлений, НомерЧекаККМ, ТекстСсылки);
		
	ИначеЕсли ФормированиеФискальныхЧековСервер.ЕстьПравоНаПробитиеФискальногоЧекаПоДокументу(ДокументСсылка) Тогда
		
		Если ФормированиеФискальныхЧековСервер.ЕстьПодключенноеОборудованиеККассамОрганизации(Форма.Объект.Организация) Тогда 
			ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиКомандуПробитьЧек(МассивПредставлений, "ПробитьЧек");
		Иначе
			ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиСтатусЧекНеПробит(МассивПредставлений, "НастроитьОборудование");
		КонецЕсли;
		
	Иначе
		
		ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиСтатусЧекНеПробит(МассивПредставлений);
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет виды фискальных чеков, доступных по документу
// 
// Параметры:
// 	ВидыЧеков - ТаблицаЗначений - Таблица значений, содержащая виды фискальных чеков, доступных по документу
// 	Операция - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция по документу
// 	ИмяКомандыПробитияЧека - Строка - Имя команды пробития чека
Процедура ЗаполнитьВидыФискальныхЧековПоДокументу(ВидыЧеков, Операция, ИмяКомандыПробитияЧека) Экспорт
	
	ВидЧека = ВидыЧеков.Добавить();
	ВидЧека.ТипФискальногоДокумента = Перечисления.ТипыФискальныхДокументовККТ.КассовыйЧек;
	ВидЧека.ТипРасчетаДенежнымиСредствами = Перечисления.ТипыРасчетаДенежнымиСредствами.РасходДенежныхСредств;
	ВидЧека.ВидЧекаКоррекции = Неопределено;
	
	ВидЧека = ВидыЧеков.Добавить();
	ВидЧека.ТипФискальногоДокумента = Перечисления.ТипыФискальныхДокументовККТ.КассовыйЧекКоррекции;
	ВидЧека.ТипРасчетаДенежнымиСредствами = Перечисления.ТипыРасчетаДенежнымиСредствами.РасходДенежныхСредств;
	ВидЧека.ВидЧекаКоррекции = Перечисления.ВидыЧековКоррекции.НеприменениеККТ;
	
КонецПроцедуры

// Определяет систему налогообложения по документу
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для определения системы налогообложения
// Возвращаемое значение:
// 	ПеречислениеСсылка.ТипыСистемНалогообложенияККТ - Система налогообложения по документу
Функция СистемаНалогообложенияПоДокументу(ДокументСсылка) Экспорт
	
	СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ДокументСсылка,
		"Организация, НалогообложениеНДС, ЗакупкаПодДеятельность");
	Если РеквизитыДокумента.ЗакупкаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.Патент;
	ИначеЕсли РеквизитыДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	Иначе
		СистемаНалогообложения = РозничныеПродажиЛокализация.СистемаНалогообложенияФискальнойОперации(
			РеквизитыДокумента.Организация);
	КонецЕсли;
	
	Возврат СистемаНалогообложения;
	
КонецФункции

// Возвращает таблицу товаров для заполнения позиций строк в параметрах чека на поставку
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для получения товарных позиций
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблица с товарными позициями с количественными и суммовыми показателями
Функция ПредметыРасчетовПоДокументу(ДокументСсылка) Экспорт
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "ЦенаВключаетНДС, ТребуетсяЗалогЗаТару, ВернутьМногооборотнуюТару");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры, 
	|	ТабличнаяЧасть.ЗаказПоставщику                  КАК Заказ,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	ТабличнаяЧасть.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения КАК БазоваяУпаковка,
	|	
	|	СпрНоменклатура.КодВидаНоменклатурнойКлассификации,
	|
	|	ТабличнаяЧасть.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТабличнаяЧасть.Номенклатура.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|	ТабличнаяЧасть.Номенклатура.ОсобенностьУчета КАК ОсобенностьУчета,
	|	
	|	ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Агент,
	|	
	|	ТабличнаяЧасть.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ТабличнаяЧасть.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	ТабличнаяЧасть.Упаковка КАК УпаковкаНаименование,
	|
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА &ЦенаВключаетНДС
	|			ТОГДА ТабличнаяЧасть.Цена
	|		КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|			ТОГДА ТабличнаяЧасть.СуммаСНДС
	|		ИНАЧЕ (ТабличнаяЧасть.СуммаСНДС + ТабличнаяЧасть.СуммаРучнойСкидки) / ТабличнаяЧасть.КоличествоУпаковок
	|	КОНЕЦ КАК ЧИСЛО(31, 2)) КАК Цена,
	|
	|	ТабличнаяЧасть.СуммаРучнойСкидки КАК СуммаСкидки,
	|	ТабличнаяЧасть.СтавкаНДС КАК СтавкаНДС,
	|	ТабличнаяЧасть.СуммаНДС КАК СуммаНДС,
	|	ТабличнаяЧасть.СуммаСНДС КАК СуммаСНДС,
	|	СпрНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений) КАК МернаяЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = ТабличнаяЧасть.Номенклатура
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И (НЕ &ВернутьМногооборотнуюТару
	|		ИЛИ (Не &ТребуетсяЗалогЗаТару
	|			И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		ИЛИ &ТребуетсяЗалогЗаТару)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ПОМЕСТИТЬ ТаблицаАкцизныеМарки
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
	|ГДЕ
	|	ШтрихкодыУпаковок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = Штрихкоды.Упаковка
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПриоритетШтрихКода
	|ПОМЕСТИТЬ Штрихкоды
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ПО ТаблицаТовары.Номенклатура = Штрихкоды.Номенклатура
	|			И ТаблицаТовары.Характеристика = Штрихкоды.Характеристика
	|			И (ТаблицаТовары.Упаковка = Штрихкоды.Упаковка
	|				ИЛИ &ТекстЗапросаКоэффициентУпаковки1 = 1
	|					И ТаблицаТовары.Номенклатура.ЕдиницаИзмерения = ТаблицаТовары.Упаковка.ЕдиницаИзмерения
	|					И Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Упаковка КАК Упаковка,
	|	МАКСИМУМ(Штрихкоды.ПриоритетШтрихКода) КАК ПриоритетШтрихКода
	|ПОМЕСТИТЬ ПриоритетыШтрихКода
	|ИЗ
	|	Штрихкоды КАК Штрихкоды
	|
	|СГРУППИРОВАТЬ ПО
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Характеристика,
	|	Штрихкоды.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Упаковка КАК Упаковка,
	|	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод
	|ПОМЕСТИТЬ ШтрихкодыНоменклатуры
	|ИЗ
	|	Штрихкоды КАК Штрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриоритетыШтрихКода КАК ПриоритетыШтрихКода
	|		ПО Штрихкоды.Номенклатура = ПриоритетыШтрихКода.Номенклатура
	|			И Штрихкоды.Характеристика = ПриоритетыШтрихКода.Характеристика
	|			И Штрихкоды.Упаковка = ПриоритетыШтрихКода.Упаковка
	|			И Штрихкоды.ПриоритетШтрихКода = ПриоритетыШтрихКода.ПриоритетШтрихКода
	|
	|СГРУППИРОВАТЬ ПО
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Характеристика,
	|	Штрихкоды.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Товары.Заказ КАК Заказ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.БазоваяУпаковка КАК БазоваяУпаковка,
	|	Товары.КодВидаНоменклатурнойКлассификации,
	|	Товары.ТипНоменклатуры КАК ТипНоменклатуры,
	|	Товары.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|	Товары.ОсобенностьУчета КАК ОсобенностьУчета,
	|	Товары.Агент КАК Агент,
	|	Товары.НоменклатураНаименование КАК НоменклатураНаименование,
	|	Товары.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
	|	Товары.УпаковкаНаименование КАК УпаковкаНаименование,
	|	Товары.Количество КАК Количество,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Цена КАК Цена,
	|	Товары.СуммаСкидки КАК СуммаСкидки,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.СуммаНДС КАК СуммаНДС,
	|	Товары.СуммаСНДС КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА Товары.МернаяЕдиницаИзмерения
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """")
	|	КОНЕЦ КАК Штрихкод
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ТаблицаТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО (ШтрихкодыНоменклатуры.Номенклатура = Товары.Номенклатура)
	|			И (ШтрихкодыНоменклатуры.Характеристика = Товары.Характеристика)
	|			И (ШтрихкодыНоменклатуры.Упаковка = Товары.Упаковка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Штрихкоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ШтрихкодыНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПриоритетыШтрихКода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.НомерСтроки КАК НомерСтроки,
	|	Серии.Серия КАК СерияТаблицыСерий,
	|	Серии.Количество КАК КоличествоУпаковок,
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Серии КАК Серии
	|ГДЕ
	|	Серии.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Заказ,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ТипНоменклатуры,
	|	Товары.ПодакцизныйТовар,
	|	Товары.ОсобенностьУчета,
	|	Товары.Агент,
	|	Товары.НоменклатураНаименование,
	|	Товары.ХарактеристикаНаименование,
	|	Товары.Серия КАК Серия,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.Упаковка,
	|	Товары.УпаковкаНаименование,
	|	Товары.БазоваяУпаковка,
	|	Товары.КодВидаНоменклатурнойКлассификации,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.СуммаСкидки,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	Товары.СуммаСНДС,
	|	Товары.Штрихкод
	|ИЗ
	|	Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|";
	Запрос.УстановитьПараметр("Ссылка"                   , ДокументСсылка);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС"          , РеквизитыДокумента.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("ТребуетсяЗалогЗаТару"     , РеквизитыДокумента.ТребуетсяЗалогЗаТару);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару", РеквизитыДокумента.ВернутьМногооборотнуюТару);
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаТовары.Упаковка",
		"ТаблицаТовары.Номенклатура"));
	Запрос.УстановитьПараметр("МерныеТипыЕдиницИзмерений", Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ПредметыРасчетов = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выгрузить();
	
	Возврат ПредметыРасчетов;
	
КонецФункции

#КонецОбласти
//-- Локализация

// Заполняет массив допустимых наименований входящих документов.
//
// Параметры:
//  МассивНаименований	 - Массив - массив наименования входящих документов.
//
Процедура ДополнитьНаименованияВходящихДокументов(МассивНаименований) Экспорт
	//++ Локализация
	МассивНаименований.Добавить(НСтр("ru='УПД'"));
	//-- Локализация
КонецПроцедуры

// Возвращает текст запроса остатка к оформлению.
// 
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
//
Процедура ТекстЗапросаОрдераПоРаспоряжению(ТекстЗапроса) Экспорт
	
//++ Локализация
	ТекстЗапроса = "ВЫБРАТЬ
	|	Таблица.Регистратор КАК Ордер
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Обороты(,, Регистратор, ДокументПоступления = &Распоряжение) КАК Таблица
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Таблица.Регистратор) = ТИП(Документ.ПриходныйОрдерНаТовары)
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Регистратор
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.КОформлениюПоступленийПоОрдерамПриход) > 0";
//-- Локализация
	
КонецПроцедуры

// Заполняет сведения о реквизитах документа, зависимых и не зависимых от хозяйственной операции.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция документа.
//	ВсеРеквизиты - Массив Из Строка - реквизиты, которые не зависят от хозяйственной операции.
//	РеквизитыОперации - Массив Из Строка - реквизиты, которые зависят от хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, ВсеРеквизиты, РеквизитыОперации) Экспорт
	
	//++ Локализация
	ВсеРеквизиты.Добавить("Товары.КоличествоПоРНПТ");
	
	ХозОперацииЗакупкаУПоставщика = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
		Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	
	ХозОперацииЗакупкаВСтранахЕАЭС = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
		Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	
	Если ХозОперацииЗакупкаУПоставщика.Найти(ХозяйственнаяОперация) <> Неопределено
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет Тогда
		
		РеквизитыОперации.Добавить("Товары.КоличествоПоРНПТ");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо Тогда
		
		РеквизитыОперации.Добавить("Товары.КоличествоПоРНПТ");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию Тогда
		
		РеквизитыОперации.Добавить("Товары.КоличествоПоРНПТ");
		
	ИначеЕсли ХозОперацииЗакупкаВСтранахЕАЭС.Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		
		РеквизитыОперации.Добавить("Товары.КоличествоПоРНПТ");
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//  Объект - ДокументОбъект - Обрабатываемый объект.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры
//++ Локализация


//-- Локализация

// Процедура дополняет текст запроса для регистра накопления ТоварыКОформлениюДокументовИмпорта
//
// Параметры:
//  ТекстЗапроса - Строка - Текст запроса проведения для дополнения.
//
Процедура ДополнитьТекстЗапросаТаблицаТоварыКОформлениюДокументовИмпорта(ТекстЗапроса) Экспорт
//++ Локализация
	ТекстЗапросаДополнение = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Партнер КАК Поставщик,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА &Ссылка
	|		КОГДА НЕ ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ДокументПоступления,
	|
	|	&ИдентификаторУведомлениеОВвозеПрослеживаемыхТоваров КАК ТипДокументаИмпорта,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ТаблицаТовары.КоличествоПоРНПТ КАК КоличествоПоРНПТ,	
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА &ВалютаВзаиморасчетов = &РегламентированногоУчетаВалюта
	|							И &Валюта <> &РегламентированногоУчетаВалюта
	|						ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|					ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|				КОНЕЦ
	|		КОГДА НЕ ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ВалютаВзаиморасчетов = &РегламентированногоУчетаВалюта
	|						И &Валюта <> &РегламентированногоУчетаВалюта
	|					ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма,
	|	ИСТИНА КАК Первичное,
	|	"""" КАК ИдентификаторСтроки
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыКОформлениюДокументовИмпорта КАК ВтТоварыКОформлениюДокументовИмпорта
	|		ПО (ИСТИНА)
	|ГДЕ
	|	&ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|	И НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров	
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ПрослеживаемыйТовар	
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Организация,
	|	&Партнер,
	// На склад.
	|	ЕСТЬNULL(Аналитика.КлючАналитики, ТаблицаВидыЗапасов.КлючАналитики) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ВидыЗапасовСкладские.Ссылка, ТаблицаВидыЗапасов.ВидЗапасов) КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА &Ссылка
	|		КОГДА НЕ ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|
	|   &ИдентификаторУведомлениеОВвозеПрослеживаемыхТоваров КАК ТипДокументаИмпорта,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА &ВалютаВзаиморасчетов = &РегламентированногоУчетаВалюта
	|							И &Валюта <> &РегламентированногоУчетаВалюта
	|						ТОГДА ТаблицаВидыЗапасов.СуммаВзаиморасчетов
	|					ИНАЧЕ ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|				КОНЕЦ
	|		КОГДА НЕ ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ВалютаВзаиморасчетов = &РегламентированногоУчетаВалюта
	|						И &Валюта <> &РегламентированногоУчетаВалюта
	|					ТОГДА ТаблицаВидыЗапасов.СуммаВзаиморасчетов
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ИСТИНА,
	|	""""
	|ИЗ
	|	ВтВидыЗапасовДляСоединенияАналитик КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыКОформлениюДокументовИмпорта КАК ВтТоварыКОформлениюДокументовИмпорта
	|		ПО (ИСТИНА)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаВидыЗапасов.Номенклатура = Аналитика.Номенклатура
	|			И ТаблицаВидыЗапасов.Характеристика = Аналитика.Характеристика
	|			И ТаблицаВидыЗапасов.Серия = Аналитика.Серия
	|			И ТаблицаВидыЗапасов.Назначение = Аналитика.Назначение
	|			И ТаблицаВидыЗапасов.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	|			И &Склад = Аналитика.МестоХранения 
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСкладские
	|		ПО ВидыЗапасовСкладские.Организация = ТаблицаВидыЗапасов.ВидЗапасов.Организация
	|			И ВидыЗапасовСкладские.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			И ВидыЗапасовСкладские.ВладелецТовара = ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара
	|			И ВидыЗапасовСкладские.НалогообложениеНДС = ТаблицаВидыЗапасов.ВидЗапасов.НалогообложениеНДС
	|			И ВидыЗапасовСкладские.ГруппаФинансовогоУчета = ТаблицаВидыЗапасов.ВидЗапасов.ГруппаФинансовогоУчета
	|			И ВидыЗапасовСкладские.ГруппаПродукции = ТаблицаВидыЗапасов.ВидЗапасов.ГруппаПродукции
	|			И ВидыЗапасовСкладские.ВидЦены = ТаблицаВидыЗапасов.ВидЗапасов.ВидЦены
	|			И НЕ ВидыЗапасовСкладские.ЭтоДубль
	|			И НЕ ВидыЗапасовСкладские.Устаревший
	|			И НЕ ВидыЗапасовСкладские.ПометкаУдаления
	|ГДЕ
	|	&ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|	И НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров	
	|	И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И ТаблицаВидыЗапасов.ПрослеживаемыйТовар	
	|	И ТаблицаВидыЗапасов.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|	И НЕ &ИспользуетсяОперацияНеотфактуровка
	|	И &ИспользуетсяДокументПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Организация,
	|	&Партнер,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, ТаблицаТовары.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ВидыЗапасовСкладские.Ссылка, ТаблицаТовары.ВидЗапасов),
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА &Ссылка
	|		КОГДА НЕ ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|
	|   &ИдентификаторУведомлениеОВвозеПрослеживаемыхТоваров КАК ТипДокументаИмпорта,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ТаблицаТовары.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА &ВалютаВзаиморасчетов = &РегламентированногоУчетаВалюта
	|							И &Валюта <> &РегламентированногоУчетаВалюта
	|						ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|					ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|				КОНЕЦ
	|		КОГДА НЕ ВтТоварыКОформлениюДокументовИмпорта.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ВалютаВзаиморасчетов = &РегламентированногоУчетаВалюта
	|						И &Валюта <> &РегламентированногоУчетаВалюта
	|					ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ИСТИНА,
	|	""""
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыКОформлениюДокументовИмпорта КАК ВтТоварыКОформлениюДокументовИмпорта
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|			И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|			И ТаблицаТовары.Серия = Аналитика.Серия
	|			И ТаблицаТовары.Назначение = Аналитика.Назначение
	|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	|			И Аналитика.МестоХранения = ТаблицаТовары.Ссылка.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСкладские
	|		ПО ВидыЗапасовСкладские.Организация = ТаблицаТовары.ВидЗапасов.Организация
	|			И ВидыЗапасовСкладские.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			И ВидыЗапасовСкладские.ВладелецТовара = ТаблицаТовары.ВидЗапасов.ВладелецТовара
	|			И ВидыЗапасовСкладские.НалогообложениеНДС = ТаблицаТовары.ВидЗапасов.НалогообложениеНДС
	|			И ВидыЗапасовСкладские.ГруппаФинансовогоУчета = ТаблицаТовары.ВидЗапасов.ГруппаФинансовогоУчета
	|			И ВидыЗапасовСкладские.ГруппаПродукции = ТаблицаТовары.ВидЗапасов.ГруппаПродукции
	|			И ВидыЗапасовСкладские.ВидЦены = ТаблицаТовары.ВидЗапасов.ВидЦены
	|			И НЕ ВидыЗапасовСкладские.ЭтоДубль
	|			И НЕ ВидыЗапасовСкладские.Устаревший
	|			И НЕ ВидыЗапасовСкладские.ПометкаУдаления
	|ГДЕ
	|	&ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|	И НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров	
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ПрослеживаемыйТовар	
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|	И &ИспользуетсяОперацияНеотфактуровка
	|	И &ИспользуетсяДокументПоступлениеТоваров
	|";

	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(ТекстЗапроса);
	МассивСтрок.Добавить("ОБЪЕДИНИТЬ ВСЕ");
	МассивСтрок.Добавить(ТекстЗапросаДополнение);
	ТекстЗапроса = СтрСоединить(МассивСтрок, Символы.ПС);
	
//-- Локализация		
КонецПроцедуры

#КонецОбласти

#Область ГосИС

//++ Локализация
Процедура ЗаполнитьПризнакЕстьАлкогольнаяПродукция(Объект)
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции") Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаНоменклатура
	|ГДЕ
	|	ТаблицаНоменклатура.АлкогольнаяПродукция
	|	И ТаблицаНоменклатура.Ссылка В (&МассивНоменклатуры)";
	
	Запрос.УстановитьПараметр("МассивНоменклатуры", Объект.Товары.ВыгрузитьКолонку("Номенклатура"));
	Объект.ЕстьАлкогольнаяПродукция = НЕ Запрос.Выполнить().Пустой();
	
КонецПроцедуры
//-- Локализация

#КонецОбласти

#Область ФрагментыПроводокРеглУчета

//++ Локализация


//-- Локализация

#КонецОбласти

#КонецОбласти
