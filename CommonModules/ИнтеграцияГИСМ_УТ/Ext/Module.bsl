////////////////////////////////////////////////////////////////////////////////
//
// ИнтеграцияГИСМ_УТ: имплементация в УТ переопределяемых серверных процедур и функций подсистемы "Интеграция с ГИСМ".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ПодпискиНаСобытия

// см. ИнтеграцияГИСМПереопределяемый.ВлияющийНаСтатусПоступленияКиЗДокументПередЗаписью.
Процедура ВлияющийНаСтатусПоступленияКиЗДокументПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Запрос = Новый Запрос(ТекстЗапросаПоступившиеКиЗ());
	Запрос.УстановитьПараметр("ДокументПоступления", Источник.Ссылка);
	Результат = Запрос.ВыполнитьПакет();
	
	Если Не Результат[0].Пустой() Тогда
		Источник.ДополнительныеСвойства.Вставить("МассивПоступившихКиЗ",          Результат[0].Выгрузить().ВыгрузитьКолонку("НомерКиЗ"));
	КонецЕсли;
	Если Не Результат[1].Пустой() Тогда
		Источник.ДополнительныеСвойства.Вставить("МассивПоступившихКиЗПродукции", Результат[1].Выгрузить().ВыгрузитьКолонку("НомерКиЗ"));
	КонецЕсли;
	
	Источник.ДополнительныеСвойства.Вставить("Организация", Источник.Организация);
	Источник.ДополнительныеСвойства.Вставить("Контрагент",  Источник.Контрагент);
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ВлияющийНаСтатусПоступленияКиЗДокументПриПроведении.
Процедура ВлияющийНаСтатусПоступленияКиЗДокументПриПроведении(Источник, Отказ, РежимПроведения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивПоступившихКиЗПредыдущееСостояние = Новый Массив;
	МассивПоступившихКиЗТекущееСостояние    = Новый Массив;
	
	Если Источник.ДополнительныеСвойства.Свойство("МассивПоступившихКиЗ") Тогда
		МассивПоступившихКиЗПредыдущееСостояние = Источник.ДополнительныеСвойства.МассивПоступившихКиЗ;
	КонецЕсли;
	
	МассивПоступившихКиЗПродукцииТекущееСостояние    = Новый Массив;
	МассивПоступившихКиЗПродукцииПредыдущееСостояние = Новый Массив;
	
	Если Источник.ДополнительныеСвойства.Свойство("МассивПоступившихКиЗПродукции") Тогда
		МассивПоступившихКиЗПродукцииПредыдущееСостояние = Источник.ДополнительныеСвойства.МассивПоступившихКиЗПродукции;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаПоступившиеКиЗ());
	Запрос.УстановитьПараметр("ДокументПоступления", Источник.Ссылка);
	Результат = Запрос.ВыполнитьПакет();
	
	Если Не Результат[0].Пустой() Тогда
		МассивПоступившихКиЗТекущееСостояние = Результат[0].Выгрузить().ВыгрузитьКолонку("НомерКиЗ");
	КонецЕсли;
	
	Если Не Результат[1].Пустой() Тогда
		МассивПоступившихКиЗПродукцииТекущееСостояние = Результат[1].Выгрузить().ВыгрузитьКолонку("НомерКиЗ");
	КонецЕсли;
	
	Если МассивПоступившихКиЗТекущееСостояние.Количество() = 0
		И МассивПоступившихКиЗПредыдущееСостояние.Количество() = 0
		И МассивПоступившихКиЗПродукцииТекущееСостояние.Количество() = 0
		И МассивПоступившихКиЗПродукцииПредыдущееСостояние.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПриобретениеТоваровУслуг")
		И Источник.ЕстьКиЗГИСМ Тогда
		
		МассивАнализируемыхНомеровКиЗ = ОбщегоНазначения.СкопироватьРекурсивно(МассивПоступившихКиЗПредыдущееСостояние, Ложь);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивАнализируемыхНомеровКиЗ, МассивПоступившихКиЗТекущееСостояние, Истина);
		
		АнализЗаявокНаВыпускКиЗ(МассивАнализируемыхНомеровКиЗ, Источник);
		
	КонецЕсли;
	
	Если Источник.ЕстьМаркируемаяПродукцияГИСМ Тогда
		
		МассивАнализируемыхНомеровКиЗ = ОбщегоНазначения.СкопироватьРекурсивно(МассивПоступившихКиЗПродукцииПредыдущееСостояние, Ложь);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивАнализируемыхНомеровКиЗ, МассивПоступившихКиЗПродукцииТекущееСостояние, Истина);
		
		АнализУведомленийОПоступлении(МассивАнализируемыхНомеровКиЗ, Источник);
		
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусЗаявкиНаВыпускКиЗ
Процедура РассчитатьСтатусЗаявкиНаВыпускКиЗ(Источник, Отказ) Экспорт
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
		
		РассчитатьСтатусЗаявкиНаВыпускКиЗПоЗаказуПоставщику(Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ЗаявкаНаВыпускКиЗГИСМ") Тогда
		
		РассчитатьСтатусЗаявкиНаВыпускКиЗПоЗаявкеНаВыпускКиЗ(Источник);
		
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОбОтгрузке.
Процедура РассчитатьСтатусУведомленияОбОтгрузке(Источник, Отказ) Экспорт
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		
		РассчитатьСтатусУведомленияОбОтгрузкеПоВозвратуТоваровПоставщику(Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		
		РассчитатьСтатусУведомленияОбОтгрузкеПоРеализацииТоваровУслуг(Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ") Тогда
		
		РассчитатьСтатусУведомленияОбОтгрузкеПоУведомлениюОбОтгрузке(Источник);
		
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусИнформированияГИСМ
Процедура РассчитатьСтатусИнформированияГИСМ(Источник, Отказ) Экспорт
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ВнутреннееПотребление") Тогда
		
		ЗаписьТребуется = Источник.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию
		                  И (Источник.ЕстьКиЗГИСМ Или Источник.ЕстьМаркируемаяПродукцияГИСМ);
		РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПриобретениеТоваровУслуг") Тогда
		
		ЗаписьТребуется = (Источник.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту
		                   Или Источник.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС)
		                   И Источник.ЕстьМаркируемаяПродукцияГИСМ;
		РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОСписанииКиЗГИСМ")
		  Или ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ")
		  Или ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОбИмпортеМаркированныхТоваровГИСМ") Тогда
		
		РассчитатьСтатусИнформированияГИСМДляДокументаСРаспоряжением(Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровОтКлиента") Тогда
		
		ЗаписьТребуется = Источник.ЕстьМаркируемаяПродукцияГИСМ И Источник.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя;
		РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах")
		Или ТипЗнч(Источник) = Тип("ДокументОбъект.ОтчетОРозничныхВозвратах") Тогда
		
		ЗаписьТребуется = Источник.ЕстьМаркируемаяПродукцияГИСМ;
		РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		
		ЗаписьТребуется = Источник.ЕстьМаркируемаяПродукцияГИСМ 
			И Источник.Контрагент = Справочники.Контрагенты.РозничныйПокупатель;
		РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.МаркировкаТоваровГИСМ") Тогда
		
		РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, Истина);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремаркировкаТоваровГИСМ") Тогда
		
		РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, Истина, Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанныеСписаниеКиЗ);
		
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОПоступлении.
Процедура РассчитатьСтатусУведомленияОПоступлении(Источник, Отказ) Экспорт
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОПоступленииМаркированныхТоваровГИСМ") Тогда
		
		РассчитатьСтатусУведомленияОПоступленииПоУведомлениюОПоступлении(Источник);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаявкаНаВыпускКиЗГИСМ

#Область ЗаполнениеНаОсновании

// см. ИнтеграцияГИСМПереопределяемый.ЗаполнитьЗаявкуНаВыпускКиЗНаОснованииДругогоДокумента
Процедура ЗаполнитьЗаявкуНаВыпускКиЗНаОснованииЗаказаПоставщику(ЗаявкаОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДокументЗаказПоставщику.Контрагент,
	|	ДокументЗаказПоставщику.Организация,
	|	ДокументЗаказПоставщику.Ссылка КАК Основание,
	|	НЕ ДокументЗаказПоставщику.Проведен КАК ЕстьОшибкиПроведен,
	|	СтатусыЗаявокНаВыпускКиЗГИСМ.Документ.Статус КАК СтатусДокумента,
	|	ВЫБОР
	|		КОГДА ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.НеСогласован)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатусыЗаявокНаВыпускКиЗГИСМ.СтатусЗаявкиНаВыпускКиЗ, ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.Отсутствует)) = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ОбрабатываетсяЭмитентом)
	|			ТОГДА ВЫБОР
	|					КОГДА СтатусыЗаявокНаВыпускКиЗГИСМ.СтатусОбработкиЭмитентом = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиЭмитентомКиЗГИСМ.ПустаяСсылка)
	|						ТОГДА СтатусыЗаявокНаВыпускКиЗГИСМ.СтатусЗаявкиНаВыпускКиЗ
	|					ИНАЧЕ СтатусыЗаявокНаВыпускКиЗГИСМ.СтатусОбработкиЭмитентом
	|				КОНЕЦ
	|		ИНАЧЕ ЕСТЬNULL(СтатусыЗаявокНаВыпускКиЗГИСМ.СтатусЗаявкиНаВыпускКиЗ, ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.Отсутствует))
	|	КОНЕЦ КАК СтатусЗаявкиНаВыпускКиЗ,
	|	ЕСТЬNULL(СтатусыЗаявокНаВыпускКиЗГИСМ.ТекущаяЗаявкаНаВыпускКиЗ, ЗНАЧЕНИЕ(Документ.ЗаявкаНаВыпускКиЗГИСМ.ПустаяСсылка)) КАК ТекущаяЗаявкаНаВыпускКиЗ,
	|	ДокументЗаказПоставщику.Менеджер КАК Ответственный,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Дата, ДАТАВРЕМЯ(1, 1, 1, 1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Номер, """") КАК НомерДоговора
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокНаВыпускКиЗГИСМ КАК СтатусыЗаявокНаВыпускКиЗГИСМ
	|		ПО (СтатусыЗаявокНаВыпускКиЗГИСМ.Документ = ДокументЗаказПоставщику.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ДокументЗаказПоставщику.Договор = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	ДокументЗаказПоставщику.Ссылка = &ЗаказПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	ЗаказПоставщикуТовары.Характеристика,
	|	ЗаказПоставщикуТовары.Количество
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ЗаказПоставщикуТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	НЕ ЗаказПоставщикуТовары.Отменено
	|	И СправочникНоменклатура.КиЗГИСМ
	|	И ЗаказПоставщикуТовары.Ссылка = &ЗаказПоставщику";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыЗаказа = РезультатЗапроса[0].Выбрать();
	РеквизитыЗаказа.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ЗаявкаОбъект.Ссылка)
	                    И (РеквизитыЗаказа.ТекущаяЗаявкаНаВыпускКиЗ = ЗаявкаОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
	
		МассивДопустимыхСтатусов = Новый Массив();
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовПоставщикам.Согласован);
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовПоставщикам.Подтвержден);
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовПоставщикам.Закрыт);
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыЗаказа.Основание,
			РеквизитыЗаказа.СтатусДокумента,
			РеквизитыЗаказа.ЕстьОшибкиПроведен,
			РеквизитыЗаказа.ЕстьОшибкиСтатус,
			МассивДопустимыхСтатусов);
			
		Если Не РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.ЭтоСтатусНеАктуальнойЗаявки(РеквизитыЗаказа.СтатусЗаявкиНаВыпускКиЗ) Тогда
			
			ТекстОшибки = НСтр("ru = 'Для %Документ% уже существует актуальная заявка на выпуск КиЗ - %Заявка%.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Заявка%", РеквизитыЗаказа.ТекущаяЗаявкаНаВыпускКиЗ);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Если РезультатЗапроса[1].Пустой() Тогда
			
			ТекстОшибки = НСтр("ru = 'В %Документ% отсутствуют контрольные (идентификационные) знаки.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
			
		ЗаполнитьЗначенияСвойств(ЗаявкаОбъект, РеквизитыЗаказа);
	
	КонецЕсли;
	
	ЗаявкаОбъект.ЗаказанныеКиЗ.Загрузить(РезультатЗапроса[1].Выгрузить());
	
	Если ЗаявкаОбъект.ЗаказанныеКиЗ.Количество() > 0 Тогда
		
		СтрокаТЧ = ЗаявкаОбъект.ЗаказанныеКиЗ[0];
		
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(СтрокаТЧ, "ХарактеристикиИспользуются") Тогда
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
			СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
			СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
			НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(ЗаявкаОбъект.ЗаказанныеКиЗ, СтруктураДействий);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ОбработкаЗаполненияУведомленияОбОтгрузкеГИСМ
Процедура ЗаполнитьУведомлениеОбОтгрузкеГИСМНаОснованииРеализации(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Дата, Валюта, ВалютаВзаиморасчетов, Организация");
	Запрос.УстановитьПараметр("ДатаОснования", РеквизитыОснования.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования", РеквизитыОснования.Валюта);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", РеквизитыОснования.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыОснования.Организация));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Ссылка КАК Основание,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|			И РеализацияТоваровУслуг.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.Продажа)
	|		КОГДА РеализацияТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			И РеализацияТоваровУслуг.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.Комиссия)
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.ЭкспортВСтраныЕАЭС)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.Продажа)
	|	КОНЕЦ КАК ВидОборотаТовара,
	|	РеализацияТоваровУслуг.Статус КАК СтатусДокумента,
	|	НЕ РеализацияТоваровУслуг.Проведен КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.КПредоплате)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	ЕСТЬNULL(СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке,
	|		ЗНАЧЕНИЕ(Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)) КАК АктуальноеУведомлениеОбОтгрузкеГИСМ,
	|	ЕСТЬNULL(СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус,
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|		ПО (СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугСерии.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугСерии.Характеристика КАК Характеристика,
	|	РеализацияТоваровУслугСерии.Назначение КАК Назначение,
	|	РеализацияТоваровУслугСерии.Склад КАК Склад,
	|	КОЛИЧЕСТВО(РеализацияТоваровУслугСерии.Серия) КАК КоличествоСерий
	|ПОМЕСТИТЬ
	|	втСерии
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Серии КАК РеализацияТоваровУслугСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО РеализацияТоваровУслугСерии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И РеализацияТоваровУслугСерии.Ссылка = &ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугСерии.Номенклатура,
	|	РеализацияТоваровУслугСерии.Характеристика,
	|	РеализацияТоваровУслугСерии.Назначение,
	|	РеализацияТоваровУслугСерии.Склад
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.КурсЧислитель КАК КурсЧислитель,
	|	КурсыВалютСрезПоследних.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ
	|	втКурсыВалют
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаОснования,
	|		(Валюта = &ВалютаРеглУчета ИЛИ Валюта = &ВалютаОснования) И БазоваяВалюта = &ВалютаРеглУчета) КАК КурсыВалютСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.Характеристика КАК Характеристика,
	|	РеализацияТоваровУслугТовары.Назначение КАК Назначение,
	|	РеализацияТоваровУслугТовары.Склад КАК Склад,
	|	СУММА(РеализацияТоваровУслугТовары.СуммаНДС
	|	* ВЫБОР
	|		КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|					ТОГДА 
	|						(КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель)
	|						/ (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаОснования <> &ВалютаРеглУчета И &ВалютаВзаиморасчетов  <> &ВалютаРеглУчета
	|			ТОГДА СУММА(РеализацияТоваровУслугТовары.СуммаСНДС *
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|					ТОГДА 
	|						(КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель)
	|						/ (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|					ИНАЧЕ 0
	|				КОНЕЦ)
	|		КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|			ТОГДА СУММА(РеализацияТоваровУслугТовары.СуммаСНДС)
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА СУММА(РеализацияТоваровУслугТовары.СуммаВзаиморасчетов)
	|	КОНЕЦ КАК СуммаСНДС
	|ПОМЕСТИТЬ
	|	втТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО РеализацияТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втКурсыВалют КАК КурсВалютыОснования
	|ПО
	|	КурсВалютыОснования.Валюта = &ВалютаОснования
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втКурсыВалют КАК КурсВалютыРегл
	|ПО
	|	КурсВалютыРегл.Валюта = &ВалютаРеглУчета
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И РеализацияТоваровУслугТовары.Ссылка = &ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Характеристика,
	|	РеализацияТоваровУслугТовары.Назначение,
	|	РеализацияТоваровУслугТовары.Склад
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Характеристика КАК Характеристика,
	|	втТовары.Назначение КАК Назначение,
	|	втТовары.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втТовары.СуммаНДС, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ 
	|			втТовары.СуммаНДС /
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(втСерии.КоличествоСерий, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ 
	|					втСерии.КоличествоСерий
	|			КОНЕЦ
	|	КОНЕЦ КАК НДСКиЗ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втТовары.СуммаСНДС, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ 
	|			втТовары.СуммаСНДС /
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(втСерии.КоличествоСерий, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ 
	|					втСерии.КоличествоСерий
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьКиЗ
	|ПОМЕСТИТЬ
	|	втСтоимостьКиЗ
	|ИЗ
	|	втСерии КАК втСерии 
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	втТовары КАК втТовары
	|ПО
	|	втСерии.Номенклатура = втТовары.Номенклатура И
	|	втСерии.Характеристика = втТовары.Характеристика И
	|	втСерии.Назначение = втТовары.Назначение И
	|	втСерии.Склад = втТовары.Склад
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугСерии.Серия.НомерКиЗГИСМ КАК НомерКиЗ,
	|	РеализацияТоваровУслугСерии.Серия.RFIDTID      КАК RFIDTID,
	|	РеализацияТоваровУслугСерии.Серия.RFIDEPC      КАК RFIDEPC,
	|	втСтоимостьКиЗ.НДСКиЗ                          КАК СуммаНДС,
	|	втСтоимостьКиЗ.СтоимостьКиЗ                    КАК Стоимость
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Серии КАК РеализацияТоваровУслугСерии
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ПО
	|	РеализацияТоваровУслугСерии.Номенклатура = СправочникНоменклатура.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втСтоимостьКиЗ КАК втСтоимостьКиЗ
	|ПО
	|	втСтоимостьКиЗ.Номенклатура = РеализацияТоваровУслугСерии.Номенклатура И
	|	втСтоимостьКиЗ.Характеристика = РеализацияТоваровУслугСерии.Характеристика И
	|	втСтоимостьКиЗ.Назначение = РеализацияТоваровУслугСерии.Назначение И
	|	втСтоимостьКиЗ.Склад = РеализацияТоваровУслугСерии.Склад
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И РеализацияТоваровУслугСерии.Ссылка = &ДокументОснование
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[0].Выбрать();
	РеквизитыОснования.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыРеализацийТоваровУслуг.ВПути);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		РеквизитыОснования.Основание,
		РеквизитыОснования.СтатусДокумента,
		РеквизитыОснования.ЕстьОшибкиПроведен,
		РеквизитыОснования.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	Если Не РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru = 'Для %Документ% уже существует актуальное уведомление об отгрузке ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[5].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru = 'В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.НомераКиЗ.Загрузить(РезультатЗапроса[5].Выгрузить());
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ОбработкаЗаполненияУведомленияОбОтгрузкеГИСМ
Процедура ЗаполнитьУведомлениеОбОтгрузкеГИСМНаОснованииВозвратаТоваровПоставщику(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Дата, Валюта, Организация");
	Запрос.УстановитьПараметр("ДатаОснования", РеквизитыОснования.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования", РеквизитыОснования.Валюта);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыОснования.Организация));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Организация КАК Организация,
	|	ВозвратТоваровПоставщику.Контрагент  КАК Контрагент,
	|	ВозвратТоваровПоставщику.Ссылка      КАК Основание,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.Продажа)
	|		КОГДА ВозвратТоваровПоставщику.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровКомитенту) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.Комиссия)
	|	КОНЕЦ КАК ВидОборотаТовара,
	|	НЕ ВозвратТоваровПоставщику.Проведен КАК ЕстьОшибкиПроведен,
	|	ЕСТЬNULL(СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке,
	|		ЗНАЧЕНИЕ(Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)) КАК АктуальноеУведомлениеОбОтгрузкеГИСМ,
	|	ЕСТЬNULL(СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус,
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|		ПО (СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = ВозвратТоваровПоставщику.Ссылка)
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуСерии.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровПоставщикуСерии.Характеристика КАК Характеристика,
	|	ВозвратТоваровПоставщикуСерии.Назначение КАК Назначение,
	|	КОЛИЧЕСТВО(ВозвратТоваровПоставщикуСерии.Серия) КАК КоличествоСерий
	|ПОМЕСТИТЬ
	|	втСерии
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Серии КАК ВозвратТоваровПоставщикуСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВозвратТоваровПоставщикуСерии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И ВозвратТоваровПоставщикуСерии.Ссылка = &ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.КурсЧислитель КАК КурсЧислитель,
	|	КурсыВалютСрезПоследних.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ
	|	втКурсыВалют
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаОснования,
	|		(Валюта = &ВалютаРеглУчета ИЛИ Валюта = &ВалютаОснования) И БазоваяВалюта = &ВалютаРеглУчета) КАК КурсыВалютСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровПоставщикуТовары.Характеристика КАК Характеристика,
	|	ВозвратТоваровПоставщикуТовары.Назначение КАК Назначение,
	|	СУММА(ВозвратТоваровПоставщикуТовары.СуммаНДС
	|	* ВЫБОР
	|		КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|					ТОГДА 
	|						(КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель)
	|						/ (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаНДС,
	|	СУММА(ВозвратТоваровПоставщикуТовары.СуммаСНДС
	|	* ВЫБОР
	|		КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|					ТОГДА 
	|						(КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель)
	|						/ (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаСНДС
	|ПОМЕСТИТЬ
	|	втТовары
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВозвратТоваровПоставщикуТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втКурсыВалют КАК КурсВалютыОснования
	|ПО
	|	КурсВалютыОснования.Валюта = &ВалютаОснования
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втКурсыВалют КАК КурсВалютыРегл
	|ПО
	|	КурсВалютыРегл.Валюта = &ВалютаРеглУчета
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И ВозвратТоваровПоставщикуТовары.Ссылка = &ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Характеристика КАК Характеристика,
	|	втТовары.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втТовары.СуммаНДС, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ 
	|			втТовары.СуммаНДС /
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(втСерии.КоличествоСерий, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ 
	|					втСерии.КоличествоСерий
	|			КОНЕЦ
	|	КОНЕЦ КАК НДСКиЗ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втТовары.СуммаСНДС, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ 
	|			втТовары.СуммаСНДС /
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(втСерии.КоличествоСерий, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ 
	|					втСерии.КоличествоСерий
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьКиЗ
	|ПОМЕСТИТЬ
	|	втСтоимостьКиЗ
	|ИЗ
	|	втСерии КАК втСерии
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	втТовары КАК втТовары
	|ПО
	|	втСерии.Номенклатура = втТовары.Номенклатура И
	|	втСерии.Характеристика = втТовары.Характеристика И
	|	втСерии.Назначение = втТовары.Назначение
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуСерии.Серия.НомерКиЗГИСМ КАК НомерКиЗ,
	|	ВозвратТоваровПоставщикуСерии.Серия.RFIDTID      КАК RFIDTID,
	|	ВозвратТоваровПоставщикуСерии.Серия.RFIDEPC      КАК RFIDEPC,
	|	втСтоимостьКиЗ.НДСКиЗ КАК СуммаНДС,
	|	втСтоимостьКиЗ.СтоимостьКиЗ КАК Стоимость
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Серии КАК ВозвратТоваровПоставщикуСерии
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ПО
	|	ВозвратТоваровПоставщикуСерии.Номенклатура = СправочникНоменклатура.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втСтоимостьКиЗ КАК втСтоимостьКиЗ
	|ПО
	|	втСтоимостьКиЗ.Номенклатура = ВозвратТоваровПоставщикуСерии.Номенклатура И
	|	втСтоимостьКиЗ.Характеристика = ВозвратТоваровПоставщикуСерии.Характеристика И
	|	втСтоимостьКиЗ.Назначение = ВозвратТоваровПоставщикуСерии.Назначение
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И ВозвратТоваровПоставщикуСерии.Ссылка = &ДокументОснование
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[0].Выбрать();
	РеквизитыОснования.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		РеквизитыОснования.Основание,
		,
		РеквизитыОснования.ЕстьОшибкиПроведен,
		,
		);
	
	Если Не РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru = 'Для %Документ% уже существует актуальное уведомление об отгрузке ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[5].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru = 'В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.НомераКиЗ.Загрузить(РезультатЗапроса[5].Выгрузить());
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ОбработкаЗаполненияУведомленияОВвозеИзЕАЭСГИСМ
Процедура ЗаполнитьУведомлениеОВвозеИзЕАЭСГИСМНаОснованииПоступления(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Дата, Валюта, ВалютаВзаиморасчетов, Организация");
	Запрос.УстановитьПараметр("ДатаОснования", РеквизитыОснования.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования", РеквизитыОснования.Валюта);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", РеквизитыОснования.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыОснования.Организация));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Организация КАК Организация,
	|	ПриобретениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПриобретениеТоваровУслуг.Ссылка КАК Основание,
	|	НЕ ПриобретениеТоваровУслуг.Проведен КАК ЕстьОшибкиПроведен,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.Статус,
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ПО (СтатусыИнформированияГИСМ.Документ = ПриобретениеТоваровУслуг.Ссылка)
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслугСерии.Номенклатура КАК Номенклатура,
	|	ПриобретениеТоваровУслугСерии.Характеристика КАК Характеристика,
	|	ПриобретениеТоваровУслугСерии.Назначение КАК Назначение,
	|	ПриобретениеТоваровУслугСерии.Склад КАК Склад,
	|	КОЛИЧЕСТВО(ПриобретениеТоваровУслугСерии.Серия) КАК КоличествоСерий
	|ПОМЕСТИТЬ
	|	втСерии
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Серии КАК ПриобретениеТоваровУслугСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ПриобретениеТоваровУслугСерии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И ПриобретениеТоваровУслугСерии.Ссылка = &ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.КурсЧислитель КАК КурсЧислитель,
	|	КурсыВалютСрезПоследних.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ
	|	втКурсыВалют
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаОснования,
	|		(Валюта = &ВалютаРеглУчета ИЛИ Валюта = &ВалютаОснования) И БазоваяВалюта = &ВалютаРеглУчета) КАК КурсыВалютСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ПриобретениеТоваровУслугТовары.Назначение КАК Назначение,
	|	ПриобретениеТоваровУслугТовары.Склад КАК Склад,
	|	СУММА(ПриобретениеТоваровУслугТовары.СуммаНДС
	|	* ВЫБОР
	|		КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|					ТОГДА 
	|						(КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель)
	|						/ (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаОснования <> &ВалютаРеглУчета И &ВалютаВзаиморасчетов  <> &ВалютаРеглУчета
	|			ТОГДА СУММА(ПриобретениеТоваровУслугТовары.СуммаСНДС *
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|						И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|					ТОГДА 
	|						(КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель)
	|						/ (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|					ИНАЧЕ 0
	|				КОНЕЦ)
	|		КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|			ТОГДА СУММА(ПриобретениеТоваровУслугТовары.СуммаСНДС)
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА СУММА(ПриобретениеТоваровУслугТовары.СуммаВзаиморасчетов)
	|	КОНЕЦ КАК СуммаСНДС
	|ПОМЕСТИТЬ
	|	втТовары
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ПриобретениеТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втКурсыВалют КАК КурсВалютыОснования
	|ПО
	|	КурсВалютыОснования.Валюта = &ВалютаОснования
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втКурсыВалют КАК КурсВалютыРегл
	|ПО
	|	КурсВалютыРегл.Валюта = &ВалютаРеглУчета
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И ПриобретениеТоваровУслугТовары.Ссылка = &ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Характеристика КАК Характеристика,
	|	втТовары.Назначение КАК Назначение,
	|	втТовары.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втТовары.СуммаНДС, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ 
	|			втТовары.СуммаНДС /
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(втСерии.КоличествоСерий, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ 
	|					втСерии.КоличествоСерий
	|			КОНЕЦ
	|	КОНЕЦ КАК НДСКиЗ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втТовары.СуммаСНДС, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ 
	|			втТовары.СуммаСНДС /
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(втСерии.КоличествоСерий, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ 
	|					втСерии.КоличествоСерий
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьКиЗ
	|ПОМЕСТИТЬ
	|	втСтоимостьКиЗ
	|ИЗ
	|	втСерии КАК втСерии 
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	втТовары КАК втТовары
	|ПО
	|	втСерии.Номенклатура = втТовары.Номенклатура И
	|	втСерии.Характеристика = втТовары.Характеристика И
	|	втСерии.Назначение = втТовары.Назначение И
	|	втСерии.Склад = втТовары.Склад
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслугСерии.Серия.RFIDTID КАК RFIDTID,
	|	ПриобретениеТоваровУслугСерии.Серия.RFIDEPC КАК RFIDEPC,
	|	ПриобретениеТоваровУслугСерии.Серия.НомерКиЗГИСМ КАК НомерКиЗ,
	|	втСтоимостьКиЗ.НДСКиЗ КАК СуммаНДС,
	|	втСтоимостьКиЗ.СтоимостьКиЗ КАК Стоимость
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Серии КАК ПриобретениеТоваровУслугСерии
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ПО
	|	ПриобретениеТоваровУслугСерии.Номенклатура = СправочникНоменклатура.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втСтоимостьКиЗ КАК втСтоимостьКиЗ
	|ПО
	|	втСтоимостьКиЗ.Номенклатура = ПриобретениеТоваровУслугСерии.Номенклатура И
	|	втСтоимостьКиЗ.Характеристика = ПриобретениеТоваровУслугСерии.Характеристика И
	|	втСтоимостьКиЗ.Назначение = ПриобретениеТоваровУслугСерии.Назначение И
	|	втСтоимостьКиЗ.Склад = ПриобретениеТоваровУслугСерии.Склад
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И ПриобретениеТоваровУслугСерии.Ссылка = &ДокументОснование
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[0].Выбрать();
	РеквизитыОснования.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		РеквизитыОснования.Основание,
		,
		РеквизитыОснования.ЕстьОшибкиПроведен,
		,
		);
	
	Если Не РегистрыСведений.СтатусыИнформированияГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru = 'Для %Документ% уже существует актуальное уведомление о ввозе маркированных товаров ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[5].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru = 'В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.НомераКиЗ.Загрузить(РезультатЗапроса[5].Выгрузить());
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ОбработкаЗаполненияУведомленияОбИмпортеГИСМ
Процедура ЗаполнитьУведомлениеОбИмпортеГИСМНаОснованииПоступления(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Организация КАК Организация,
	|	ПриобретениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПриобретениеТоваровУслуг.Ссылка КАК Основание,
	|	НЕ ПриобретениеТоваровУслуг.Проведен КАК ЕстьОшибкиПроведен,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.Статус,
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ПО (СтатусыИнформированияГИСМ.Документ = ПриобретениеТоваровУслуг.Ссылка)
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	СправочникНоменклатура.КодТНВЭД КАК КодТНВЭД,
	|	ПриобретениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ПриобретениеТоваровУслугТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ПО
	|	ПриобретениеТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И ПриобретениеТоваровУслугТовары.Ссылка = &ДокументОснование
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[0].Выбрать();
	РеквизитыОснования.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		РеквизитыОснования.Основание,
		,
		РеквизитыОснования.ЕстьОшибкиПроведен,
		,
		);
	
	Если Не РегистрыСведений.СтатусыИнформированияГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru = 'Для %Документ% уже существует актуальное уведомление об импорте маркированных товаров ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[1].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru = 'В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.Товары.Загрузить(РезультатЗапроса[1].Выгрузить());
	
	Индекс = 0;
	Для Каждого СтрокаТЧ Из УведомлениеОбъект.Товары Цикл
		Индекс = Индекс + 1;
		СтрокаТЧ.КлючСвязи = Индекс;
	КонецЦикла;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ОбработкаЗаполненияУведомленияОСписанииКиЗ
Процедура ЗаполнитьУведомлениеОСписанииКиЗНаОснованииВнутреннегоПотребления(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВнутреннееПотребление.Ссылка КАК Основание,
	|	НЕ ВнутреннееПотребление.Проведен КАК ЕстьОшибкиПроведен,
	|	ВнутреннееПотребление.Организация,
	|	ВнутреннееПотребление.ХозяйственнаяОперация,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.ТекущееУведомление, ЗНАЧЕНИЕ(Документ.УведомлениеОСписанииКизГИСМ.ПустаяСсылка)) КАК ТекущееУведомление,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Документ.ВнутреннееПотребление КАК ВнутреннееПотребление
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ПО ВнутреннееПотребление.Ссылка = СтатусыИнформированияГИСМ.Документ
	|ГДЕ
	|	ВнутреннееПотребление.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ,
	|	СерииНоменклатуры.RFIDTID КАК RFIDTID,
	|	СерииНоменклатуры.RFIDEPC КАК RFIDEPC,
	|	ВЫБОР
	|		КОГДА ВнутреннееПотреблениеСерии.Номенклатура.КиЗГИСМ ТОГДА
	|			ЛОЖЬ
	|		КОГДА ВнутреннееПотреблениеСерии.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха) ТОГДА
	|			ИСТИНА
	|	КОНЕЦ КАК Индивидуализирован,
	|	ЗаявкаНаВыпускКиЗГИСМВыпущенныеКиЗ.Ссылка КАК ЗаявкаНаВыпускКиЗ
	|ИЗ
	|	Документ.ВнутреннееПотребление.Серии КАК ВнутреннееПотреблениеСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ВнутреннееПотреблениеСерии.Серия = СерииНоменклатуры.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК ЗаявкаНаВыпускКиЗГИСМВыпущенныеКиЗ
	|		ПО ЗаявкаНаВыпускКиЗГИСМВыпущенныеКиЗ.НомерКиЗ = СерииНоменклатуры.НомерКиЗГИСМ
	|		 И ВнутреннееПотреблениеСерии.Номенклатура.КиЗГИСМ
	|ГДЕ
	|	(ВнутреннееПотреблениеСерии.Номенклатура.КиЗГИСМ
	|			ИЛИ ВнутреннееПотреблениеСерии.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха))
	|	И (СерииНоменклатуры.НомерКиЗГИСМ <> """" ИЛИ СерииНоменклатуры.RFIDTID <> """" ИЛИ СерииНоменклатуры.RFIDEPC <> """")
	|	И ВнутреннееПотреблениеСерии.Ссылка = &ДокументОснование";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[0].Выбрать();
	РеквизитыОснования.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		РеквизитыОснования.Основание,
		,
		РеквизитыОснования.ЕстьОшибкиПроведен);
		
	Если НЕ (РеквизитыОснования.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию) Тогда
		
		ТекстОшибки = НСтр("ru = 'Документ %Документ% имеет операцию ""%Операция%"". Ввод на основании для операции %СтрокаДопустимыхОпераций%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Операция%", РеквизитыОснования.ХозяйственнаяОперация);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтрокаДопустимыхОпераций%", Строка(Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию));
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
		
	Если Не РегистрыСведений.СтатусыИнформированияГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru = 'Для %Документ% уже существует актуальное уведомление об списании КиЗ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.ТекущееУведомление);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[1].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru = 'В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками и контрольные (идентификационные) знаки.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.НомераКиЗ.Загрузить(РезультатЗапроса[1].Выгрузить());
	
КонецПроцедуры

#КонецОбласти

// см. ИнтеграцияГИСМПереопределяемый.ПроверитьКорректностьПерсонифицированностиЗаказываемыхКиЗ
Процедура ПроверитьКорректностьПерсонифицированностиЗаказываемыхКиЗ(Объект, ИмяТабличнойЧасти, Отказ) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказанныеКиЗ.Номенклатура,
	|	ЗаказанныеКиЗ.Характеристика
	|ПОМЕСТИТЬ ЗаказанныеКиЗ
	|ИЗ
	|	&ЗаказанныеКиЗ КАК ЗаказанныеКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ХарактеристикиНоменклатуры.КиЗГИСМGTIN, СправочникНоменклатура.КиЗГИСМGTIN) = """"
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Персонифицирован
	|ИЗ
	|	ЗаказанныеКиЗ КАК ЗаказанныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ЗаказанныеКиЗ.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ЗаказанныеКиЗ.Номенклатура = СправочникНоменклатура.Ссылка";
	
	ЗаказанныеКиЗ = Объект[ИмяТабличнойЧасти].Выгрузить(, "Номенклатура, Характеристика");
	Запрос.УстановитьПараметр("ЗаказанныеКиЗ", ЗаказанныеКиЗ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 1 Тогда
		
		ТекстОшибки = НСтр("ru = 'Нельзя заказывать в одном документе персонифицированные и неперсонифицированные КиЗ.'");
			
			ОбщегоНазначения.СообщитьПользователю(
				ТекстОшибки,
				,ИмяТабличнойЧасти
				,"Объект"
				,
				Отказ);
		
	КонецЕсли;

КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ПроверитьЗаполнениеХарактеристик
Процедура ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, ИмяТаблицы, Отказ) Экспорт
	
	ПараметрыПроверкиХарактеристик = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверкиХарактеристик.ИмяТЧ = ИмяТаблицы;
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверкиХарактеристик);
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ЗаполнитьСлужебныеРеквизитыТабличнойЧастиЗаявкиНаВыпускКиЗ
Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧастиЗаявкиНаВыпускКиЗ(Форма) Экспорт
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Форма.Объект.ЗаказанныеКиЗ, СтруктураДействий);
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ЗаполнитьСлужебныеРеквизитыТабличнойЧастиУведомлениеОбИмпорте
Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧастиУведомлениеОбИмпорте(Товары) Экспорт
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакЕдиницаИзмерения", Новый Структура("Номенклатура", "ЕдиницаИзмерения"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакОписание", Новый Структура("Номенклатура", "Описание"));
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("НоменклатураКиЗ", "ХарактеристикиКиЗИспользуются"));
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеДоступом

// Формирует текст запроса ограничения доступа для RLS формата БСП 3.0
//
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа
//   ИмяТаблицы - Строка - Полное имя объекта метаданных. Например "Документ.МаркировкаТоваровГИСМ"
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение, ИмяТаблицы) Экспорт

	ТекстОграничения =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

	Если ИмяТаблицы = "Документ.ЗаявкаНаВыпускКиЗГИСМ"
	 ИЛИ ИмяТаблицы = "Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ"
	 ИЛИ ИмяТаблицы = "Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ"
	 ИЛИ ИмяТаблицы = "Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ" Тогда

		ТекстОграничения = ТекстОграничения + "
		|	И ЗначениеРазрешено(Контрагент.Партнер)";

	ИначеЕсли ИмяТаблицы = "Документ.МаркировкаТоваровГИСМ"
		ИЛИ ИмяТаблицы = "Документ.ПеремаркировкаТоваровГИСМ" Тогда

		ТекстОграничения = ТекстОграничения + "
		|	И ЗначениеРазрешено(Склад)";

	КонецЕсли;

	Ограничение.Текст = ТекстОграничения;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РасчетСостоянийЗаявокНаВыпускКиЗ

// Текст запроса поступившие КИЗ.
// 
// Возвращаемое значение:
//  Строка - Текст запроса поступившие КИЗ
Функция ТекстЗапросаПоступившиеКиЗ()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ДвиженияСерийТоваров.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ДвиженияСерийТоваров.Регистратор = &ДокументПоступления
	|	И СправочникНоменклатура.КиЗГИСМ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ДвиженияСерийТоваров.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ДвиженияСерийТоваров.Регистратор = &ДокументПоступления
	|	И СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)";
	
КонецФункции

// см. РассчитатьСтатусЗаявкиНаВыпускКиЗ
Процедура РассчитатьСтатусЗаявкиНаВыпускКиЗПоЗаявкеНаВыпускКиЗ(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьНового = Источник.ДополнительныеСвойства.Свойство("ЗаписьНового")
	             И Источник.ДополнительныеСвойства.ЗаписьНового;
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.ТекущаяЗаявкаНаВыпускКиЗ,
	|	Статусы.СтатусЗаявкиНаВыпускКиЗ,
	|	Статусы.СтатусОбработкиЭмитентом,
	|	Статусы.ДальнейшееДействие,
	|	Статусы.ПоступлениеТоваров,
	|	Статусы.КоличествоПоступленийТоваров,
	|	Статусы.СтатусПоступления
	|ИЗ
	|	РегистрСведений.СтатусыЗаявокНаВыпускКиЗГИСМ КАК Статусы
	|ГДЕ
	|	    Статусы.Документ = &Основание
	|	ИЛИ Статусы.Документ = &Заявка");
	
	Запрос.УстановитьПараметр("Основание", Источник.Основание);
	Запрос.УстановитьПараметр("Заявка", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если ЗаписьНового Тогда
			
			Если НЕ ЗначениеЗаполнено(Выборка.ТекущаяЗаявкаНаВыпускКиЗ) 
				Или РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.ЭтоСтатусНеАктуальнойЗаявки(Выборка.СтатусЗаявкиНаВыпускКиЗ)  Тогда
				
				ВыполнятьЗаписьВРегистр = Истина;
				
				ДанныеЗаписи.Документ                 = Выборка.Документ;
				ДанныеЗаписи.ТекущаяЗаявкаНаВыпускКиЗ = Источник.Ссылка;
				ДанныеЗаписи.СтатусЗаявкиНаВыпускКиЗ  = Перечисления.СтатусыЗаявокНаВыпускКиЗГИСМ.Черновик;
				ДанныеЗаписи.ДальнейшееДействие       = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
				
			КонецЕсли;
			
		Иначе
			
			ЗаполнитьЗначенияСвойств(ДанныеЗаписи, Выборка);
			
			Регистр = РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ;
			Если Регистр.СтатусТребуетРасчетаПоступления(ДанныеЗаписи.СтатусЗаявкиНаВыпускКиЗ,
				                                         ДанныеЗаписи.СтатусОбработкиЭмитентом) Тогда
				
				ВыполнятьЗаписьВРегистр = Истина;
				РассчитатьСтатусПоступленияПоДокументу(Источник, ДанныеЗаписи);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если ЗаписьНового Тогда
			
			ВыполнятьЗаписьВРегистр = Истина;
			
			ДанныеЗаписи.Документ                    = Источник.Ссылка;
			ДанныеЗаписи.ТекущаяЗаявкаНаВыпускКиЗ = Источник.Ссылка;
			ДанныеЗаписи.СтатусЗаявкиНаВыпускКиЗ  = Перечисления.СтатусыЗаявокНаВыпускКиЗГИСМ.Черновик;
			ДанныеЗаписи.ДальнейшееДействие          = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусЗаявкиНаВыпускКиЗ
Процедура РассчитатьСтатусЗаявкиНаВыпускКиЗПоЗаказуПоставщику(Источник) 
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.ТекущаяЗаявкаНаВыпускКиЗ,
	|	Статусы.СтатусЗаявкиНаВыпускКиЗ,
	|	Статусы.СтатусОбработкиЭмитентом,
	|	Статусы.ДальнейшееДействие,
	|	Статусы.ПоступлениеТоваров,
	|	Статусы.КоличествоПоступленийТоваров,
	|	Статусы.СтатусПоступления
	|ИЗ
	|	РегистрСведений.СтатусыЗаявокНаВыпускКиЗГИСМ КАК Статусы
	|ГДЕ
	|	Статусы.Документ = &ЗаказПоставщику
	|");
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если (Не Источник.Проведен Или Не Источник.ЕстьКиЗГИСМ)
			И Не ЗначениеЗаполнено(Выборка.ТекущаяЗаявкаНаВыпускКиЗ) Тогда
			РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.УдалитьЗаписьИзРегистра(Источник.Ссылка);
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Источник.ЕстьКиЗГИСМ Тогда
		
		ВыполнятьЗаписьВРегистр = Истина;
		
		ДанныеЗаписи.Документ                   = Источник.Ссылка;
		ДанныеЗаписи.ДальнейшееДействие         = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется;
		ДанныеЗаписи.СтатусЗаявкиНаВыпускКиЗ = Перечисления.СтатусыЗаявокНаВыпускКиЗГИСМ.Отсутствует;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОбОтгрузке
Процедура РассчитатьСтатусУведомленияОбОтгрузкеПоУведомлениюОбОтгрузке(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьНового = Источник.ДополнительныеСвойства.Свойство("ЗаписьНового")
	             И Источник.ДополнительныеСвойства.ЗаписьНового;
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.ТекущееУведомлениеОбОтгрузке,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК Статусы
	|ГДЕ
	|	    Статусы.Документ = &Основание
	|	ИЛИ Статусы.Документ = &Уведомление");
	
	Запрос.УстановитьПараметр("Основание", Источник.Основание);
	Запрос.УстановитьПараметр("Уведомление", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если ЗаписьНового Тогда
			
			Если НЕ ЗначениеЗаполнено(Выборка.ТекущееУведомлениеОбОтгрузке) Тогда
				
				ВыполнятьЗаписьВРегистр = Истина;
				
			ИначеЕсли РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЭтоСтатусНеАктуальногоУведомления(Выборка.Статус) Тогда
				
				ВыполнятьЗаписьВРегистр = Истина;
				
			КонецЕсли;
			
			ДанныеЗаписи.Документ                     = Выборка.Документ;
			ДанныеЗаписи.ТекущееУведомлениеОбОтгрузке = Источник.Ссылка;
			ДанныеЗаписи.Статус                       = Перечисления.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Черновик;
			ДанныеЗаписи.ДальнейшееДействие           = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			
		КонецЕсли;
		
	Иначе
		
		Если ЗаписьНового Тогда
			
			ВыполнятьЗаписьВРегистр = Истина;
			
			ДанныеЗаписи.Документ                     = Источник.Основание;
			ДанныеЗаписи.ТекущееУведомлениеОбОтгрузке = Источник.Ссылка;
			ДанныеЗаписи.Статус                       = Перечисления.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Черновик;
			ДанныеЗаписи.ДальнейшееДействие           = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОбОтгрузке
Процедура РассчитатьСтатусУведомленияОбОтгрузкеПоРеализацииТоваровУслуг(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеЗаписи = РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.ТекущееУведомлениеОбОтгрузке,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК Статусы
	|ГДЕ
	|	Статусы.Документ = &Реализация
	|");
	
	Запрос.УстановитьПараметр("Реализация", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВыполнятьЗаписьВРегистр = Источник.Проведен
		И Источник.ЕстьМаркируемаяПродукцияГИСМ
		И Источник.Контрагент <> Справочники.Контрагенты.РозничныйПокупатель;
		
	Если Выборка.Следующий() Тогда
		
		Если Не ВыполнятьЗаписьВРегистр
			И Не ЗначениеЗаполнено(Выборка.ТекущееУведомлениеОбОтгрузке) Тогда
			РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.УдалитьЗаписьИзРегистра(Источник.Ссылка);
		КонецЕсли;
		
	ИначеЕсли ВыполнятьЗаписьВРегистр Тогда
		
		ДанныеЗаписи.Документ           = Источник.Ссылка;
		ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется;
		ДанныеЗаписи.Статус             = Перечисления.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует;
		РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОбОтгрузке
Процедура РассчитатьСтатусУведомленияОбОтгрузкеПоВозвратуТоваровПоставщику(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.ТекущееУведомлениеОбОтгрузке,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК Статусы
	|ГДЕ
	|	Статусы.Документ = &ВозвратПоставщику
	|");
	
	Запрос.УстановитьПараметр("ВозвратПоставщику", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если (Не Источник.Проведен Или Не Источник.ЕстьМаркируемаяПродукцияГИСМ)
			И Не ЗначениеЗаполнено(Выборка.ТекущееУведомлениеОбОтгрузке) Тогда
			РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.УдалитьЗаписьИзРегистра(Источник.Ссылка);
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Источник.ЕстьМаркируемаяПродукцияГИСМ Тогда
		
		ВыполнятьЗаписьВРегистр = Истина;
		
		ДанныеЗаписи.Документ           = Источник.Ссылка;
		ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется;
		ДанныеЗаписи.Статус             = Перечисления.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОПоступлении
Процедура РассчитатьСтатусУведомленияОПоступленииПоУведомлениюОПоступлении(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьНового = Источник.ДополнительныеСвойства.Свойство("ЗаписьНового")
	             И Источник.ДополнительныеСвойства.ЗаписьНового;
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие,
	|	Статусы.ПоступлениеТоваров,
	|	Статусы.КоличествоПоступленийТоваров,
	|	Статусы.СтатусПоступления
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ КАК Статусы
	|ГДЕ
	|	Статусы.Документ = &УведомлениеОПоступлении");
	
	Запрос.УстановитьПараметр("УведомлениеОПоступлении", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ДанныеЗаписи, Выборка);
		
		Регистр = РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ;
		Если Регистр.СтатусТребуетРасчетаПоступления(ДанныеЗаписи.Статус) Тогда
			
			ВыполнятьЗаписьВРегистр = Истина;
			РассчитатьСтатусПоступленияПоДокументу(Источник, ДанныеЗаписи);
			
		КонецЕсли;
		
	Иначе
		
		Если ЗаписьНового Тогда
			
			ВыполнятьЗаписьВРегистр = Истина;
			
			ДанныеЗаписи.Документ           = Источник.Ссылка;
			ДанныеЗаписи.Статус             = Перечисления.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.Получено;
			ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПоступлениеТоваров;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОПоступлении
Процедура РассчитатьСтатусПоступленияПоДокументу(Источник, ДанныеЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЗаявкаНаВыпускКиЗГИСМ") Тогда
		
		ДокументСсылка      = ДанныеЗаписи.ТекущаяЗаявкаНаВыпускКиЗ;
		ЗначенияПоУмолчанию = РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.ЗначенияПоУмолчанию();
		
		Текст = 
		"ВЫБРАТЬ
		|	НомераКиЗ.НомерКиЗ               КАК НомерКиЗ,
		|	НомераКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
		|	НомераКиЗ.ДокументПоступления    КАК ДокументПоступления
		|ПОМЕСТИТЬ НомераКиЗ
		|ИЗ
		|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
		|ГДЕ
		|	НомераКиЗ.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОПоступленииМаркированныхТоваровГИСМ") Тогда
		
		ДокументСсылка      = ДанныеЗаписи.Документ;
		ЗначенияПоУмолчанию = РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
		
		Текст = 
		"ВЫБРАТЬ
		|	НомераКиЗ.НомерКиЗ               КАК НомерКиЗ,
		|	НомераКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
		|	НомераКиЗ.ДокументПоступления    КАК ДокументПоступления
		|ПОМЕСТИТЬ НомераКиЗ
		|ИЗ
		|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК НомераКиЗ
		|ГДЕ
		|	НомераКиЗ.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(
		ДанныеЗаписи,
		ЗначенияПоУмолчанию,
		"ПоступлениеТоваров, КоличествоПоступленийТоваров, СтатусПоступления, КПередачеПодтверждения, ПроцентПодтвержденныхКиЗ");
	
	Подтверждено          = 0;
	КПередаче             = 0;
	ПодготовленоКПередаче = 0;
	Передано              = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = Текст +
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомераКиЗ.НомерКиЗ), 0) КАК ВсегоСтрок,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА НомераКиЗ.ДокументПоступления В (&МассивПустыхЗначенийДокументовПоступления)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ), 0) КАК Поступило,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПринятоГИСМ),
	|			                                          ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Списано))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ), 0) КАК Подтверждено,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ), 0) КАК КПередаче,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПодготовленоКПередаче))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ), 0) КАК ПодготовленоКПередаче,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Передано))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ), 0) КАК Передано
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераКиЗ.ДокументПоступления
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НЕ НомераКиЗ.ДокументПоступления В (&МассивПустыхЗначенийДокументовПоступления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО ДвиженияСерийТоваров.Регистратор = ПриобретениеТоваровУслуг.Ссылка
	|		                     И &Организация = ПриобретениеТоваровУслуг.Организация
	|		                      И &Контрагент = ПриобретениеТоваровУслуг.Контрагент
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|		ПО ДвиженияСерийТоваров.Регистратор = ВозвратТоваровОтКлиента.Ссылка
	|		                     И &Организация = ВозвратТоваровОтКлиента.Организация
	|		                      И &Контрагент = ВозвратТоваровОтКлиента.Контрагент
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.ДокументПоступления НЕ В (
	|		ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Документ.ВозвратТоваровОтКлиента.ПустаяСсылка),
	|		Неопределено)
	|	И НомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	ВсеДокументыПоступленияПоКиЗ.ДокументПоступления,
	|	ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|ПОМЕСТИТЬ ДокументыПоступленияКандидаты
	|ИЗ
	|	ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО ВсеДокументыПоступленияПоКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И ВсеДокументыПоступленияПоКиЗ.ДокументПоступления = РанееСопоставленныеПоступления.ДокументПоступления
	|ГДЕ
	|	РанееСопоставленныеПоступления.ДокументПоступления ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////6
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НеподтвержденныеКиЗ.НомерКиЗ КАК НомерКиЗ
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПоступленияКандидаты КАК ДокументыПоступленияКандидаты
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ДокументыПоступленияКандидаты.НомерКиЗ";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация",    Источник.Организация);
	Запрос.УстановитьПараметр("Контрагент",     Источник.Контрагент);
	Запрос.УстановитьПараметр("МассивПустыхЗначенийДокументовПоступления", ИнтеграцияГИСМ.МассивПустыхЗначенийДокументовПоступленияМаркированнойПродукции());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаПоступилоПодтверждено = Результат[1].Выбрать();
	
	Если ВыборкаПоступилоПодтверждено.Следующий() Тогда
		
		ВсегоСтрок            =   ВыборкаПоступилоПодтверждено.ВсегоСтрок;
		Поступило             = ?(ВыборкаПоступилоПодтверждено.Поступило             = NULL, 0, ВыборкаПоступилоПодтверждено.Поступило);
		Подтверждено          = ?(ВыборкаПоступилоПодтверждено.Подтверждено          = NULL, 0, ВыборкаПоступилоПодтверждено.Подтверждено);
		КПередаче             = ?(ВыборкаПоступилоПодтверждено.КПередаче             = NULL, 0, ВыборкаПоступилоПодтверждено.КПередаче);
		ПодготовленоКПередаче = ?(ВыборкаПоступилоПодтверждено.ПодготовленоКПередаче = NULL, 0, ВыборкаПоступилоПодтверждено.ПодготовленоКПередаче);
		Передано              = ?(ВыборкаПоступилоПодтверждено.Передано              = NULL, 0, ВыборкаПоступилоПодтверждено.Передано);
		
		Если ВсегоСтрок <> 0 Тогда
		
			Если Поступило = ВсегоСтрок Тогда
				ДанныеЗаписи.СтатусПоступления = Перечисления.СтатусыПоступленийГИСМ.Поступило;
			ИначеЕсли Поступило > 0 Тогда
				ДанныеЗаписи.СтатусПоступления = Перечисления.СтатусыПоступленийГИСМ.ПоступилоЧастично;
			Иначе
				ДанныеЗаписи.СтатусПоступления = Перечисления.СтатусыПоступленийГИСМ.ОжидаетсяПоступление;
			КонецЕсли;
			
			ДанныеЗаписи.ПроцентПодтвержденныхКиЗ = Окр(Подтверждено / ВсегоСтрок, 2) * 100;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВыборкаДокументыПоступления = Результат[2].Выбрать();
	
	КоличествоДокументовПоступления = ВыборкаДокументыПоступления.Количество();
	Если ВыборкаДокументыПоступления.Количество() = 1 Тогда
		Если ВыборкаДокументыПоступления.Следующий() Тогда
			ДанныеЗаписи.ПоступлениеТоваров = ВыборкаДокументыПоступления.ДокументПоступления;
		КонецЕсли;
	КонецЕсли;
	
	ДанныеЗаписи.КоличествоПоступленийТоваров = КоличествоДокументовПоступления;
	
	ВыборкаДокументыЕстьЧтоПодтверждать = Результат[7].Выбрать();
	Если ВыборкаДокументыЕстьЧтоПодтверждать.Следующий() Тогда
		
		ДанныеЗаписи.КПередачеПодтверждения  = Истина;
		
		Если ПодготовленоКПередаче > 0 Тогда
			
			ИспользоватьАвтоматическийОбмен = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическуюОтправкуПолучениеДанныхГИСМ");
			
			Если ИспользоватьАвтоматическийОбмен Тогда
				ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием;
			Иначе
				ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен;
			КонецЕсли;
			
		Иначе
			
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПодтвердитеПолучение;
			
		КонецЕсли;
		
		ДанныеЗаписи.ДальнейшееДействие = ДальнейшееДействие;
		
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаявкаНаВыпускКиЗГИСМ") Тогда
			ДанныеЗаписи.СтатусЗаявкиНаВыпускКиЗ = Перечисления.СтатусыЗаявокНаВыпускКиЗГИСМ.ОбрабатываетсяПоступление;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОПоступленииМаркированныхТоваровГИСМ") Тогда
			ДанныеЗаписи.Статус = Перечисления.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ОбрабатываетсяПоступление;
		КонецЕсли;
		
	Иначе
		
		ДанныеЗаписи.КПередачеПодтверждения = Ложь;
		
		Если КПередаче > 0 Тогда
			
			ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПодтвердитеПолучение;
			
		ИначеЕсли ПодготовленоКПередаче > 0 Тогда
			
			ИспользоватьАвтоматическийОбмен = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическуюОтправкуПолучениеДанныхГИСМ");
			
			Если ИспользоватьАвтоматическийОбмен Тогда
				ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием;
			Иначе
				ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен;
			КонецЕсли;
			
			ДанныеЗаписи.ДальнейшееДействие = ДальнейшееДействие;
			
		ИначеЕсли Передано > 0 Тогда
			
			ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации;
			
		Иначе
			
			Если Подтверждено = ВсегоСтрок И Подтверждено > 0 Тогда
				ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ЗакройтеЗаявку;
			Иначе
				ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПоступлениеТоваров;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Запрос по поступившим КИЗ
// 
// Параметры:
//  Объект - ДокументОбъект, ДанныеФормыСтруктура - Объект
// 
// Возвращаемое значение:
//  Запрос - Запрос по поступившим КИЗ
Функция ЗапросПоПоступившимКиЗ(Объект) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения,
	|	НомераКиЗ.НомерСтроки
	|ПОМЕСТИТЬ НомераКиЗ
	|ИЗ
	|	&НомераКиЗ КАК НомераКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения,
	|	НомераКиЗ.НомерСтроки
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПодготовленоКПередаче),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО ДвиженияСерийТоваров.Регистратор = ПриобретениеТоваровУслуг.Ссылка
	|	                         И &Организация = ПриобретениеТоваровУслуг.Организация
	|	                          И &Контрагент = ПриобретениеТоваровУслуг.Контрагент
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|		ПО ДвиженияСерийТоваров.Регистратор = ВозвратТоваровОтКлиента.Ссылка
	|	                         И &Организация = ВозвратТоваровОтКлиента.Организация
	|	                          И &Контрагент = ВозвратТоваровОтКлиента.Контрагент
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НЕ НомераКиЗ.ДокументПоступления В (&ПустыеЗначенияДокументовПоступления)
	|	И НомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|	И НомераКиЗ.Ссылка <> &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НЕ НомераКиЗ.ДокументПоступления В (&ПустыеЗначенияДокументовПоступления)
	|	И НомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|	И НомераКиЗ.Ссылка <> &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеДокументыПоступленияПоКиЗ.ДокументПоступления,
	|	ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|ПОМЕСТИТЬ ДокументыПоступленияКандидаты
	|ИЗ
	|	ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО ВсеДокументыПоступленияПоКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И ВсеДокументыПоступленияПоКиЗ.ДокументПоступления = РанееСопоставленныеПоступления.ДокументПоступления
	|ГДЕ
	|	РанееСопоставленныеПоступления.ДокументПоступления ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеподтвержденныеКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	НеподтвержденныеКиЗ.ДокументПоступления,
	|	НеподтвержденныеКиЗ.НомерСтроки,
	|	НеподтвержденныеКиЗ.СостояниеПодтверждения,
	|	ЕстьNULL(ДокументыПоступленияКандидаты.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)) КАК ДокументПоступленияКандидат
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПоступленияКандидаты КАК ДокументыПоступленияКандидаты
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ДокументыПоступленияКандидаты.НомерКиЗ
	|ИТОГИ ПО
	|	НомерКиЗ");

	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаявкаНаВыпускКиЗГИСМ") Тогда
		Запрос.УстановитьПараметр("НомераКиЗ", Объект.ВыпущенныеКиЗ.Выгрузить());
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.УведомлениеОПоступленииМаркированныхТоваровГИСМ") Тогда
		Запрос.УстановитьПараметр("НомераКиЗ", Объект.НомераКиЗ.Выгрузить());
	КонецЕсли;
	
	ПустыеЗначенияДокументовПоступления = ИнтеграцияГИСМ.МассивПустыхЗначенийДокументовПоступленияМаркированнойПродукции();
	
	Запрос.УстановитьПараметр("ДокументСсылка",                      Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация",                         Объект.Организация);
	Запрос.УстановитьПараметр("Контрагент",                          Объект.Контрагент);
	Запрос.УстановитьПараметр("ПустыеЗначенияДокументовПоступления", ПустыеЗначенияДокументовПоступления);
	
	Возврат Запрос;
	
КонецФункции

// см. ИнтеграцияГИСМПереопределяемый.ВлияющийНаСтатусПоступленияКиЗДокументПриПроведении
Процедура АнализЗаявокНаВыпускКиЗ(МассивАнализируемыхНомеровКиЗ, Источник)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераКиЗ.Ссылка КАК Ссылка,
	|	Статусы.КПередачеПодтверждения КАК КПередачеПодтверждения
	|ПОМЕСТИТЬ ДокументыДляАнализа
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокНаВыпускКиЗГИСМ КАК Статусы
	|		ПО НомераКиЗ.Ссылка = Статусы.ТекущаяЗаявкаНаВыпускКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ КАК ДокументыГИСМ
	|		ПО НомераКиЗ.Ссылка = ДокументыГИСМ.Ссылка
	|		     И &Контрагент  = ДокументыГИСМ.Контрагент
	|		     И &Организация = ДокументыГИСМ.Организация
	|ГДЕ
	|	НомераКиЗ.НомерКиЗ В(&МассивАнализируемыхНомеровКиЗ)
	|	И НЕ НомераКиЗ.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПодготовленоКПередаче),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Передано),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПринятоГИСМ))
	|	И (Статусы.СтатусЗаявкиНаВыпускКиЗ = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ОбрабатываетсяПоступление)
	|		ИЛИ Статусы.СтатусОбработкиЭмитентом В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиЭмитентомКиЗГИСМ.ЖдетСамовывоза),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиЭмитентомКиЗГИСМ.ОтгруженоЗаказчику),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиЭмитентомКиЗГИСМ.ПереданоГрузоперевозчику)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.Ссылка                           КАК Ссылка,
	|	ДокументыДляАнализа.КПередачеПодтверждения КАК КПередачеПодтверждения,
	|	НомераКиЗ.НомерКиЗ                         КАК НомерКиЗ
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляАнализа КАК ДокументыДляАнализа
	|		ПО НомераКиЗ.Ссылка = ДокументыДляАнализа.Ссылка
	|ГДЕ
	|	НомераКиЗ.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляАнализа.Ссылка
	|			ИЗ
	|				ДокументыДляАнализа)
	|	И НомераКиЗ.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО ДвиженияСерийТоваров.Регистратор = ПриобретениеТоваровУслуг.Ссылка
	|		                     И &Контрагент  = ПриобретениеТоваровУслуг.Контрагент
	|		                     И &Организация = ПриобретениеТоваровУслуг.Организация
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|	И НомераКиЗ.НомерКиЗ В
	|		(ВЫБРАТЬ
	|			НеподтвержденныеКиЗ.НомерКиЗ
	|		ИЗ
	|			НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|	И НЕ НомераКиЗ.Ссылка В
	|		(ВЫБРАТЬ
	|			ДокументыДляАнализа.Ссылка
	|		ИЗ
	|			ДокументыДляАнализа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеДокументыПоступленияПоКиЗ.ДокументПоступления,
	|	ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|ПОМЕСТИТЬ ДокументыПоступленияКандидаты
	|ИЗ
	|	ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО ВсеДокументыПоступленияПоКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И ВсеДокументыПоступленияПоКиЗ.ДокументПоступления = РанееСопоставленныеПоступления.ДокументПоступления
	|ГДЕ
	|	РанееСопоставленныеПоступления.ДокументПоступления ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НеподтвержденныеКиЗ.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ДокументыПоступленияКандидаты.ДокументПоступления ЕСТЬ NULL 
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьКПодтверждению,
	|	МАКСИМУМ(НеподтвержденныеКиЗ.КПередачеПодтверждения) КАК КПередачеПодтвержденияРегистр
	|ПОМЕСТИТЬ ДокументыУКоторыхИзменилсяПризнакКПодтверждению
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПоступленияКандидаты КАК ДокументыПоступленияКандидаты
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ДокументыПоступленияКандидаты.НомерКиЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	НеподтвержденныеКиЗ.Ссылка
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ДокументыПоступленияКандидаты.ДокументПоступления ЕСТЬ NULL 
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) <> МАКСИМУМ(НеподтвержденныеКиЗ.КПередачеПодтверждения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.ТекущаяЗаявкаНаВыпускКиЗ,
	|	Статусы.СтатусОбработкиЭмитентом,
	|	Статусы.СтатусЗаявкиНаВыпускКиЗ,
	|	Статусы.ПоступлениеТоваров,
	|	Статусы.КоличествоПоступленийТоваров,
	|	Статусы.СтатусПоступления,
	|	Статусы.ДальнейшееДействие,
	|	Статусы.ПроцентПодтвержденныхКиЗ,
	|	ТаблицаДокументы.ЕстьКПодтверждению КАК КПередачеПодтверждения
	|ИЗ
	|	ДокументыУКоторыхИзменилсяПризнакКПодтверждению КАК ТаблицаДокументы,
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокНаВыпускКиЗГИСМ КАК Статусы
	|		ПО Статусы.ТекущаяЗаявкаНаВыпускКиЗ = ТаблицаДокументы.Ссылка";
	
	Запрос.УстановитьПараметр("МассивАнализируемыхНомеровКиЗ", МассивАнализируемыхНомеровКиЗ);
	Запрос.УстановитьПараметр("Контрагент",                    Источник.Контрагент);
	Запрос.УстановитьПараметр("Организация",                   Источник.Организация);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		ДанныеЗаписи = РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.ЗначенияПоУмолчанию();
		
		ЗаполнитьЗначенияСвойств(ДанныеЗаписи, Выборка);
		Если Выборка.КПередачеПодтверждения Тогда
			
			Если ДанныеЗаписи.ДальнейшееДействие <> Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен
				И ДанныеЗаписи.ДальнейшееДействие <> Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием Тогда
				ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПодтвердитеПолучение;
			КонецЕсли;
			
			ДанныеЗаписи.СтатусЗаявкиНаВыпускКиЗ = Перечисления.СтатусыЗаявокНаВыпускКиЗГИСМ.ОбрабатываетсяПоступление;
			
		Иначе
			
			ДанныеЗаписи.ДальнейшееДействие         = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ЗакройтеЗаявку;
			ДанныеЗаписи.СтатусЗаявкиНаВыпускКиЗ = Перечисления.СтатусыЗаявокНаВыпускКиЗГИСМ.ОбрабатываетсяПоступление;
			
		КонецЕсли;
		
		РегистрыСведений.СтатусыЗаявокНаВыпускКиЗГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
		
	КонецЦикла;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ВлияющийНаСтатусПоступленияКиЗДокументПриПроведении
Процедура АнализУведомленийОПоступлении(МассивАнализируемыхНомеровКиЗ, Источник)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Ссылка                 КАК Ссылка,
	|	Статусы.КПередачеПодтверждения КАК КПередачеПодтверждения
	|ПОМЕСТИТЬ ДокументыДляАнализа
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ КАК Статусы
	|		ПО Таблица.Ссылка = Статусы.Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ КАК ДокументыГИСМ
	|		ПО Таблица.Ссылка  = ДокументыГИСМ.Ссылка
	|		    И &Контрагент  = ДокументыГИСМ.Контрагент
	|		    И &Организация = ДокументыГИСМ.Организация
	|ГДЕ
	|	Таблица.НомерКиЗ В(&МассивАнализируемыхНомеровКиЗ)
	|	И НЕ Таблица.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПодготовленоКПередаче),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Передано),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПринятоГИСМ))
	|	И (Статусы.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.Получено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ОбрабатываетсяПоступление)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.Ссылка                           КАК Ссылка,
	|	ДокументыДляАнализа.КПередачеПодтверждения КАК КПередачеПодтверждения,
	|	НомераКиЗ.НомерКиЗ                         КАК НомерКиЗ
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК НомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляАнализа КАК ДокументыДляАнализа
	|		ПО НомераКиЗ.Ссылка = ДокументыДляАнализа.Ссылка
	|ГДЕ
	|	НомераКиЗ.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляАнализа.Ссылка
	|			ИЗ
	|				ДокументыДляАнализа)
	|	И НомераКиЗ.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО ДвиженияСерийТоваров.Регистратор = ПриобретениеТоваровУслуг.Ссылка
	|		                     И &Контрагент  = ПриобретениеТоваровУслуг.Контрагент
	|		                     И &Организация = ПриобретениеТоваровУслуг.Организация
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|		ПО ДвиженияСерийТоваров.Регистратор = ВозвратТоваровОтКлиента.Ссылка
	|		                     И &Контрагент  = ВозвратТоваровОтКлиента.Контрагент
	|		                     И &Организация = ВозвратТоваровОтКлиента.Организация
	|		
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.ДокументПоступления НЕ В (
	|		ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Документ.ВозвратТоваровОтКлиента.ПустаяСсылка),
	|		Неопределено)
	|	И НомераКиЗ.НомерКиЗ В
	|		(ВЫБРАТЬ
	|			НеподтвержденныеКиЗ.НомерКиЗ
	|		ИЗ
	|			НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|	И НЕ НомераКиЗ.Ссылка В
	|		(ВЫБРАТЬ
	|			ДокументыДляАнализа.Ссылка
	|		ИЗ
	|			ДокументыДляАнализа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеДокументыПоступленияПоКиЗ.ДокументПоступления,
	|	ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|ПОМЕСТИТЬ ДокументыПоступленияКандидаты
	|ИЗ
	|	ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО ВсеДокументыПоступленияПоКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И ВсеДокументыПоступленияПоКиЗ.ДокументПоступления = РанееСопоставленныеПоступления.ДокументПоступления
	|ГДЕ
	|	РанееСопоставленныеПоступления.ДокументПоступления ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НеподтвержденныеКиЗ.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ДокументыПоступленияКандидаты.ДокументПоступления ЕСТЬ NULL 
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьКПодтверждению,
	|	МАКСИМУМ(НеподтвержденныеКиЗ.КПередачеПодтверждения) КАК КПередачеПодтвержденияРегистр
	|ПОМЕСТИТЬ ДокументыУКоторыхИзменилсяПризнакКПодтверждению
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПоступленияКандидаты КАК ДокументыПоступленияКандидаты
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ДокументыПоступленияКандидаты.НомерКиЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	НеподтвержденныеКиЗ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие,
	|	Статусы.ПоступлениеТоваров,
	|	Статусы.КоличествоПоступленийТоваров,
	|	Статусы.СтатусПоступления,
	|	ТаблицаДокументы.ЕстьКПодтверждению КАК КПередачеПодтверждения,
	|	Статусы.ПроцентПодтвержденныхКиЗ
	|ИЗ
	|	ДокументыУКоторыхИзменилсяПризнакКПодтверждению КАК ТаблицаДокументы,
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ КАК Статусы
	|		ПО Статусы.Документ = ТаблицаДокументы.Ссылка";
	
	Запрос.УстановитьПараметр("МассивАнализируемыхНомеровКиЗ", МассивАнализируемыхНомеровКиЗ);
	Запрос.УстановитьПараметр("Контрагент",                    Источник.Контрагент);
	Запрос.УстановитьПараметр("Организация",                   Источник.Организация);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеЗаписи = РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
		
		ЗаполнитьЗначенияСвойств(ДанныеЗаписи, Выборка);
		Если Выборка.КПередачеПодтверждения Тогда
			
			Если ДанныеЗаписи.ДальнейшееДействие <> Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен
				И ДанныеЗаписи.ДальнейшееДействие <> Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием Тогда
				ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПодтвердитеПолучение;
			КонецЕсли;
			
			ДанныеЗаписи.Статус = Перечисления.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ОбрабатываетсяПоступление;
			
		КонецЕсли;
		
		РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
		
	КонецЦикла;
	
КонецПроцедуры

// Обновляет в табличной части документа "Заявкам на выпуск КиЗ" табличную часть "Заказанные КиЗ"
//
// Параметры:
//  Объект - ДокументОбъект, ДанныеФормыСтруктура - Объект.
Процедура ОбновитьКолонкиВыпущеноПолученоВТЧЗаказанныеКиЗ(Объект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗаказанныхКиЗ.Номенклатура,
	|	ТаблицаЗаказанныхКиЗ.Характеристика,
	|	ТаблицаЗаказанныхКиЗ.Количество
	|ПОМЕСТИТЬ втЗаказанныеКиЗ
	|ИЗ
	|	&ТаблицаЗаказанныхКиЗ КАК ТаблицаЗаказанныхКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	ТаблицаВыпущенныеКиЗ.ВидКиЗ,
	|	ТаблицаВыпущенныеКиЗ.GTIN,
	|	ТаблицаВыпущенныеКиЗ.СпособВыпускаВОборот,
	|	ТаблицаВыпущенныеКиЗ.РазмерКиЗ,
	|	ТаблицаВыпущенныеКиЗ.ДокументПоступления
	|ПОМЕСТИТЬ втВыпущенныеКиЗ
	|ИЗ
	|	&ТаблицаВыпущенныеКиЗ КАК ТаблицаВыпущенныеКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	втЗаказанныеКиЗ.Номенклатура,
	|	втЗаказанныеКиЗ.Характеристика,
	|	СУММА(втЗаказанныеКиЗ.Количество) КАК Заказано
	|ПОМЕСТИТЬ втЗаказанныеКиЗСгруппированные
	|ИЗ
	|	втЗаказанныеКиЗ КАК втЗаказанныеКиЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	втЗаказанныеКиЗ.Номенклатура,
	|	втЗаказанныеКиЗ.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Номенклатура.КиЗГИСМВид КАК ВидКиЗ,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер КАК РазмерКиЗ,
	|	Номенклатура.КиЗГИСМGTIN КАК GTIN
	|ПОМЕСТИТЬ НоменклатураИХарактеристикиБД
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|	И Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|	И (Номенклатура.КиЗГИСМВид,
	|	   Номенклатура.КиЗГИСМСпособВыпускаВОборот,
	|	   Номенклатура.КиЗГИСМРазмер,
	|	   Номенклатура.КиЗГИСМ,
	|	   Номенклатура.КиЗГИСМGTIN) В
	|		(ВЫБРАТЬ
	|			втВыпущенныеКиЗ.ВидКиЗ               КАК ВидКиЗ,
	|			втВыпущенныеКиЗ.СпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|			втВыпущенныеКиЗ.РазмерКиЗ            КАК РазмерКиЗ,
	|			ИСТИНА                               КАК КиЗГИСМ,
	|			втВыпущенныеКиЗ.GTIN                 КАК GTIN
	|		ИЗ втВыпущенныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	Номенклатура.КиЗГИСМВид КАК ВидКиЗ,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер КАК РазмерКиЗ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ КАК GTIN
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|	И (
	|	Номенклатура.КиЗГИСМВид,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер,
	|	Номенклатура.КиЗГИСМ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ) В
	|		(ВЫБРАТЬ
	|			втВыпущенныеКиЗ.ВидКиЗ               КАК ВидКиЗ,
	|			втВыпущенныеКиЗ.СпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|			втВыпущенныеКиЗ.РазмерКиЗ            КАК РазмерКиЗ,
	|			ИСТИНА                               КАК КиЗГИСМ,
	|			втВыпущенныеКиЗ.GTIN                 КАК GTIN
	|		ИЗ втВыпущенныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	Номенклатура.КиЗГИСМВид КАК ВидКиЗ,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер КАК РазмерКиЗ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ КАК GTIN
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО Номенклатура.ВидНоменклатуры = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|	И (
	|	Номенклатура.КиЗГИСМВид,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер,
	|	Номенклатура.КиЗГИСМ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ) В
	|		(ВЫБРАТЬ
	|			втВыпущенныеКиЗ.ВидКиЗ               КАК ВидКиЗ,
	|			втВыпущенныеКиЗ.СпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|			втВыпущенныеКиЗ.РазмерКиЗ            КАК РазмерКиЗ,
	|			ИСТИНА                               КАК КиЗГИСМ,
	|			втВыпущенныеКиЗ.GTIN                 КАК GTIN
	|		ИЗ втВыпущенныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	Номенклатура.КиЗГИСМВид КАК ВидКиЗ,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер КАК РазмерКиЗ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ КАК GTIN
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО Номенклатура.ВладелецХарактеристик = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)
	|	И (
	|	Номенклатура.КиЗГИСМВид,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер,
	|	Номенклатура.КиЗГИСМ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ) В
	|		(ВЫБРАТЬ
	|			втВыпущенныеКиЗ.ВидКиЗ               КАК ВидКиЗ,
	|			втВыпущенныеКиЗ.СпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|			втВыпущенныеКиЗ.РазмерКиЗ            КАК РазмерКиЗ,
	|			ИСТИНА                               КАК КиЗГИСМ,
	|			втВыпущенныеКиЗ.GTIN                 КАК GTIN
	|		ИЗ втВыпущенныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ
	|	Таблица.Номенклатура   КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	втВыпущенныеКиЗ.GTIN,
	|	втВыпущенныеКиЗ.ВидКиЗ,
	|	втВыпущенныеКиЗ.СпособВыпускаВОборот,
	|	втВыпущенныеКиЗ.РазмерКиЗ,
	|	СУММА(1) КАК Выпущено,
	|	СУММА(ВЫБОР
	|			КОГДА втВыпущенныеКиЗ.ДокументПоступления В (&ТипыДокументаПоступления) 
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Поступило
	|ПОМЕСТИТЬ втВыпущенныеКиЗСгруппированные
	|ИЗ
	|	втВыпущенныеКиЗ КАК втВыпущенныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураИХарактеристикиБД КАК Таблица
	|		ПО втВыпущенныеКиЗ.ВидКиЗ                  = Таблица.ВидКиЗ
	|			И втВыпущенныеКиЗ.СпособВыпускаВОборот = Таблица.СпособВыпускаВОборот
	|			И втВыпущенныеКиЗ.РазмерКиЗ            = Таблица.РазмерКиЗ
	|			И втВыпущенныеКиЗ.GTIN                 = Таблица.GTIN
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	втВыпущенныеКиЗ.ВидКиЗ,
	|	втВыпущенныеКиЗ.GTIN,
	|	втВыпущенныеКиЗ.СпособВыпускаВОборот,
	|	втВыпущенныеКиЗ.РазмерКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	втЗаказанныеКиЗСгруппированные.Номенклатура,
	|	втЗаказанныеКиЗСгруппированные.Характеристика,
	|	втЗаказанныеКиЗСгруппированные.Заказано,
	|	ЕСТЬNULL(втВыпущенныеКиЗСгруппированные.Выпущено, 0) КАК Выпущено,
	|	ЕСТЬNULL(втВыпущенныеКиЗСгруппированные.Поступило, 0) КАК Поступило
	|ИЗ
	|	втЗаказанныеКиЗСгруппированные КАК втЗаказанныеКиЗСгруппированные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВыпущенныеКиЗСгруппированные КАК втВыпущенныеКиЗСгруппированные
	|		ПО втЗаказанныеКиЗСгруппированные.Номенклатура = втВыпущенныеКиЗСгруппированные.Номенклатура
	|		 И втЗаказанныеКиЗСгруппированные.Характеристика = втВыпущенныеКиЗСгруппированные.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////6
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втВыпущенныеКиЗСгруппированные.ВидКиЗ,
	|	втВыпущенныеКиЗСгруппированные.GTIN,
	|	втВыпущенныеКиЗСгруппированные.СпособВыпускаВОборот,
	|	втВыпущенныеКиЗСгруппированные.РазмерКиЗ
	|ИЗ
	|	втВыпущенныеКиЗСгруппированные КАК втВыпущенныеКиЗСгруппированные
	|ГДЕ
	|	втВыпущенныеКиЗСгруппированные.Номенклатура ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////7
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втВыпущенныеКиЗСгруппированные.Номенклатура,
	|	втВыпущенныеКиЗСгруппированные.ВидКиЗ,
	|	втВыпущенныеКиЗСгруппированные.СпособВыпускаВОборот,
	|	втВыпущенныеКиЗСгруппированные.РазмерКиЗ,
	|	втВыпущенныеКиЗСгруппированные.GTIN
	|ИЗ
	|	втВыпущенныеКиЗСгруппированные КАК втВыпущенныеКиЗСгруппированные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказанныеКиЗСгруппированные КАК втЗаказанныеКиЗСгруппированные
	|		ПО втВыпущенныеКиЗСгруппированные.Номенклатура = втЗаказанныеКиЗСгруппированные.Номенклатура
	|ГДЕ
	|	втВыпущенныеКиЗСгруппированные.Номенклатура ЕСТЬ НЕ NULL
	|	И втЗаказанныеКиЗСгруппированные.Номенклатура ЕСТЬ NULL
	|";
	
	Запрос.УстановитьПараметр("ТаблицаВыпущенныеКиЗ", Объект.ВыпущенныеКиЗ.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаЗаказанныхКиЗ", Объект.ЗаказанныеКиЗ.Выгрузить());
	Запрос.УстановитьПараметр("ТипыДокументаПоступления", ИнтеграцияГИСМ.МассивПустыхЗначенийДокументовПоступленияМаркированнойПродукции());
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Не Результат[5].Пустой() Тогда
		
		Выборка = Результат[5].Выбрать();
		ИнтеграцияГИСМ.РаспределитьВыпущенныеПолученныеКиЗНаЗаказанные(Выборка, Объект);
		
	КонецЕсли;
	
	Если Не Результат[6].Пустой() Тогда
		
		Выборка = Результат[6].Выбрать();
		ИнтеграцияГИСМ.ОтразитьНеНайденнуюНоменклатуруВСтроке(Выборка, Объект);
		
	КонецЕсли;
	
	Если Не Результат[7].Пустой() Тогда
		
		Выборка = Результат[7].Выбрать();
		ИнтеграцияГИСМ.ОтразитьНеЗаказаннуюНоменклатуруВСтроке(Выборка, Объект);
		
	КонецЕсли;
	
КонецПроцедуры

// См. ИнтеграцияГИСМПереопределяемый.ДанныеПоЗаявкамНаВыпускКиЗ
// 
// Параметры:
//  ДокументыКПодтверждению - Массив из ДокументСсылка.ЗаявкаНаВыпускКиЗГИСМ - Документы к подтверждению
// 
// Возвращаемое значение:
//  Структура - Данные по заявкам на выпуск ки З:
// * НомераКиЗКПодтверждению - РезультатЗапроса - 
// * ПроблемыДублиКиЗ - РезультатЗапроса - 
// * ПроблемыСопоставления - РезультатЗапроса - 
Функция ДанныеПоЗаявкамНаВыпускКиЗ(ДокументыКПодтверждению) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераКиЗ.НомерКиЗ,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ ДублирующиесяНомераКиЗ
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|
	|СГРУППИРОВАТЬ ПО
	|	НомераКиЗ.НомерКиЗ
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	ВыпущенныеКиЗ.ВидКиЗ               КАК ВидКиЗ,
	|	ВыпущенныеКиЗ.СпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|	ВыпущенныеКиЗ.РазмерКиЗ            КАК РазмерКиЗ,
	|	ВыпущенныеКиЗ.GTIN                 КАК GTIN
	|ПОМЕСТИТЬ втВыпущенныеКиЗ
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК ВыпущенныеКиЗ
	|ГДЕ
	|	ВыпущенныеКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Номенклатура.КиЗГИСМВид КАК ВидКиЗ,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер КАК РазмерКиЗ,
	|	Номенклатура.КиЗГИСМGTIN КАК GTIN
	|ПОМЕСТИТЬ НоменклатураИХарактеристикиБД
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|	И Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|	И (Номенклатура.КиЗГИСМВид,
	|	   Номенклатура.КиЗГИСМСпособВыпускаВОборот,
	|	   Номенклатура.КиЗГИСМРазмер,
	|	   Номенклатура.КиЗГИСМ,
	|	   Номенклатура.КиЗГИСМGTIN) В
	|		(ВЫБРАТЬ
	|			втВыпущенныеКиЗ.ВидКиЗ               КАК ВидКиЗ,
	|			втВыпущенныеКиЗ.СпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|			втВыпущенныеКиЗ.РазмерКиЗ            КАК РазмерКиЗ,
	|			ИСТИНА                               КАК КиЗГИСМ,
	|			втВыпущенныеКиЗ.GTIN                 КАК GTIN
	|		ИЗ втВыпущенныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	Номенклатура.КиЗГИСМВид КАК ВидКиЗ,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер КАК РазмерКиЗ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ КАК GTIN
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|	И (
	|	Номенклатура.КиЗГИСМВид,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер,
	|	Номенклатура.КиЗГИСМ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ) В
	|		(ВЫБРАТЬ
	|			втВыпущенныеКиЗ.ВидКиЗ               КАК ВидКиЗ,
	|			втВыпущенныеКиЗ.СпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|			втВыпущенныеКиЗ.РазмерКиЗ            КАК РазмерКиЗ,
	|			ИСТИНА                               КАК КиЗГИСМ,
	|			втВыпущенныеКиЗ.GTIN                 КАК GTIN
	|		ИЗ втВыпущенныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	Номенклатура.КиЗГИСМВид КАК ВидКиЗ,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер КАК РазмерКиЗ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ КАК GTIN
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО Номенклатура.ВидНоменклатуры = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|	И (
	|	Номенклатура.КиЗГИСМВид,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер,
	|	Номенклатура.КиЗГИСМ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ) В
	|		(ВЫБРАТЬ
	|			втВыпущенныеКиЗ.ВидКиЗ               КАК ВидКиЗ,
	|			втВыпущенныеКиЗ.СпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|			втВыпущенныеКиЗ.РазмерКиЗ            КАК РазмерКиЗ,
	|			ИСТИНА                               КАК КиЗГИСМ,
	|			втВыпущенныеКиЗ.GTIN                 КАК GTIN
	|		ИЗ втВыпущенныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	Номенклатура.КиЗГИСМВид КАК ВидКиЗ,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер КАК РазмерКиЗ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ КАК GTIN
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО Номенклатура.ВладелецХарактеристик = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)
	|	И (
	|	Номенклатура.КиЗГИСМВид,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер,
	|	Номенклатура.КиЗГИСМ,
	|	ВЫБОР
	|		КОГДА ХарактеристикиНоменклатуры.КиЗГИСМGTIN <> """" ТОГДА
	|			ХарактеристикиНоменклатуры.КиЗГИСМGTIN
	|		ИНАЧЕ
	|			Номенклатура.КиЗГИСМGTIN
	|	КОНЕЦ) В
	|		(ВЫБРАТЬ
	|			втВыпущенныеКиЗ.ВидКиЗ               КАК ВидКиЗ,
	|			втВыпущенныеКиЗ.СпособВыпускаВОборот КАК СпособВыпускаВОборот,
	|			втВыпущенныеКиЗ.РазмерКиЗ            КАК РазмерКиЗ,
	|			ИСТИНА                               КАК КиЗГИСМ,
	|			втВыпущенныеКиЗ.GTIN                 КАК GTIN
	|		ИЗ втВыпущенныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыпущенныеКиЗ.НомерКиЗ                                                            КАК НомерКиЗ,
	|	ВыпущенныеКиЗ.Ссылка                                                              КАК Документ,
	|	ЕСТЬNULL(Таблица.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))                 КАК Номенклатура,
	|	ЕСТЬNULL(Таблица.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
	|ПОМЕСТИТЬ НомераКиЗНоменклатура
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК ВыпущенныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураИХарактеристикиБД КАК Таблица
	|		ПО ВыпущенныеКиЗ.ВидКиЗ                  = Таблица.ВидКиЗ
	|			И ВыпущенныеКиЗ.СпособВыпускаВОборот = Таблица.СпособВыпускаВОборот
	|			И ВыпущенныеКиЗ.РазмерКиЗ            = Таблица.РазмерКиЗ
	|			И ВыпущенныеКиЗ.GTIN                 = Таблица.GTIN
	|ГДЕ
	|	ВыпущенныеКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|	И НЕ ВыпущенныеКиЗ.НомерКиЗ В
	|				(ВЫБРАТЬ
	|					ДублирующиесяНомераКиЗ.НомерКиЗ
	|				ИЗ
	|					ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераКиЗНоменклатура.НомерКиЗ,
	|	НомераКиЗНоменклатура.Документ,
	|	НомераКиЗНоменклатура.Номенклатура,
	|	НомераКиЗНоменклатура.Характеристика
	|ПОМЕСТИТЬ НомераКиЗПроблемыСопоставления
	|ИЗ
	|	НомераКиЗНоменклатура КАК НомераКиЗНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ.ЗаказанныеКиЗ КАК ТаблицаЗаказанныеКиЗ
	|		ПО НомераКиЗНоменклатура.Документ = ТаблицаЗаказанныеКиЗ.Ссылка
	|			И НомераКиЗНоменклатура.Номенклатура = ТаблицаЗаказанныеКиЗ.Номенклатура
	|			И НомераКиЗНоменклатура.Характеристика = ТаблицаЗаказанныеКиЗ.Характеристика
	|ГДЕ
	|	ТаблицаЗаказанныеКиЗ.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	НомераКиЗ.Ссылка                 КАК Документ,
	|	НомераКиЗ.НомерКиЗ               КАК НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления    КАК ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент  КАК Контрагент
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ КАК Документы
	|		ПО НомераКиЗ.Ссылка = Документы.Ссылка
	|ГДЕ
	|	НомераКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|	И НомераКиЗ.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПодготовленоКПередаче),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|	И НЕ НомераКиЗ.НомерКиЗ В
	|				(ВЫБРАТЬ
	|					ДублирующиесяНомераКиЗ.НомерКиЗ
	|				ИЗ
	|					ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ)
	|	И НЕ (НомераКиЗ.НомерКиЗ, НомераКиЗ.Ссылка) В
	|				(ВЫБРАТЬ
	|					НомераКиЗПроблемыСопоставления.НомерКиЗ,
	|					НомераКиЗПроблемыСопоставления.Документ
	|				ИЗ
	|					НомераКиЗПроблемыСопоставления КАК НомераКиЗПроблемыСопоставления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////6
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор    КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ      КАК НомерКиЗ,
	|	ПриобретениеТоваровУслуг.Контрагент  КАК Контрагент,
	|	ПриобретениеТоваровУслуг.Организация КАК Организация
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО ДвиженияСерийТоваров.Регистратор = ПриобретениеТоваровУслуг.Ссылка
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////7
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.Ссылка,
	|	Документы.Организация,
	|	Документы.Контрагент
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК НомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ КАК Документы
	|		ПО НомераКиЗ.Ссылка = Документы.Ссылка
	|ГДЕ
	|	НомераКиЗ.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|	И НомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////8
	|ВЫБРАТЬ
	|	НеподтвержденныеКиЗ.Документ               КАК Документ,
	|	НеподтвержденныеКиЗ.НомерКиЗ               КАК НомерКиЗ,
	|	НеподтвержденныеКиЗ.ДокументПоступления    КАК ДокументПоступления,
	|	НеподтвержденныеКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
	|	ЕСТЬNULL(ВсеДокументыПоступленияПоКиЗ.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка))   КАК ДокументПоступленияКандидат,
	|	ЕСТЬNULL(РанееСопоставленныеПоступления.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)) КАК ДокументПоступленияУжеСопоставлено
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Организация = РанееСопоставленныеПоступления.Организация
	|			И НеподтвержденныеКиЗ.НомерКиЗ    = РанееСопоставленныеПоступления.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Документ <> РанееСопоставленныеПоступления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Контрагент  = ВсеДокументыПоступленияПоКиЗ.Контрагент
	|			И НеподтвержденныеКиЗ.Организация = ВсеДокументыПоступленияПоКиЗ.Организация
	|ИТОГИ ПО
	|	Документ,
	|	НомерКиЗ,
	|	ДокументПоступления,
	|	СостояниеПодтверждения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////9
	|ВЫБРАТЬ
	|	ДублирующиесяНомераКиЗ.НомерКиЗ
	|ИЗ
	|	ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////10
	|ВЫБРАТЬ
	|	НомераКиЗПроблемыСопоставления.Документ,
	|	НомераКиЗПроблемыСопоставления.НомерКиЗ
	|ИЗ
	|	НомераКиЗПроблемыСопоставления КАК НомераКиЗПроблемыСопоставления";
	
	Если ДокументыКПодтверждению.Количество() > 0 Тогда
		
		Запрос.УстановитьПараметр("ДокументыКПодтверждению", ДокументыКПодтверждению);
		
	Иначе
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДокументыКПодтверждению", Обработки.ПодтверждениеПоступившихКиЗГИСМ.ТекстУсловияПоЗаявкамНаВыпускКиЗ());
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НомераКиЗКПодтверждению", РезультатЗапроса[8]);
	ВозвращаемоеЗначение.Вставить("ПроблемыДублиКиЗ",        РезультатЗапроса[9]);
	ВозвращаемоеЗначение.Вставить("ПроблемыСопоставления",   РезультатЗапроса[10]);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// См. ИнтеграцияГИСМПереопределяемый.ДанныеПоУведомлениямОПоступлении
// 
// Параметры:
//  ДокументыКПодтверждению - Массив из ДокументСсылка.УведомлениеОПоступленииМаркированныхТоваровГИСМ - Документы к подтверждению
// 
// Возвращаемое значение:
//  Структура - Данные по уведомлениям о поступлении:
// * НомераКиЗКПодтверждению - РезультатЗапроса - 
// * ПроблемыДублиКиЗ - РезультатЗапроса - 
// * ПроблемыСопоставления - Неопределено - 
Функция ДанныеПоУведомлениямОПоступлении(ДокументыКПодтверждению) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераКиЗ.НомерКиЗ,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ ДублирующиесяНомераКиЗ
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|
	|СГРУППИРОВАТЬ ПО
	|	НомераКиЗ.НомерКиЗ
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	ТаблицаНомераКиЗ.Ссылка                 КАК Документ,
	|	ТаблицаНомераКиЗ.НомерКиЗ               КАК НомерКиЗ,
	|	ТаблицаНомераКиЗ.ДокументПоступления    КАК ДокументПоступления,
	|	ТаблицаНомераКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
	|	Документы.Организация  КАК Организация,
	|	Документы.Контрагент   КАК Контрагент
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК ТаблицаНомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ КАК Документы
	|		ПО ТаблицаНомераКиЗ.Ссылка = Документы.Ссылка
	|ГДЕ
	|	ТаблицаНомераКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|	И ТаблицаНомераКиЗ.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПодготовленоКПередаче),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|	И НЕ ТаблицаНомераКиЗ.НомерКиЗ В
	|				(ВЫБРАТЬ
	|					ДублирующиесяНомераКиЗ.НомерКиЗ
	|				ИЗ
	|					ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор    КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ      КАК НомерКиЗ,
	|	ПриобретениеТоваровУслуг.Контрагент  КАК Контрагент,
	|	ПриобретениеТоваровУслуг.Организация КАК Организация
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО ДвиженияСерийТоваров.Регистратор = ПриобретениеТоваровУслуг.Ссылка
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Регистратор    КАК ДокументПоступления,
	|	СерииНоменклатуры.НомерКиЗГИСМ      КАК НомерКиЗ,
	|	ВозвратТоваровОтКлиента.Контрагент  КАК Контрагент,
	|	ВозвратТоваровОтКлиента.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|		ПО ДвиженияСерийТоваров.Регистратор = ВозвратТоваровОтКлиента.Ссылка
	|ГДЕ
	|	СерииНоменклатуры.НомерКиЗГИСМ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ
	|	ТаблицаНомераКиЗ.НомерКиЗ,
	|	ТаблицаНомераКиЗ.ДокументПоступления,
	|	ТаблицаНомераКиЗ.Ссылка,
	|	Документы.Организация,
	|	Документы.Контрагент
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК ТаблицаНомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ КАК Документы
	|		ПО ТаблицаНомераКиЗ.Ссылка = Документы.Ссылка
	|ГДЕ
	|	ТаблицаНомераКиЗ.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|	И ТаблицаНомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ
	|	НеподтвержденныеКиЗ.Документ               КАК Документ,
	|	НеподтвержденныеКиЗ.НомерКиЗ               КАК НомерКиЗ,
	|	НеподтвержденныеКиЗ.ДокументПоступления    КАК ДокументПоступления,
	|	НеподтвержденныеКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
	|	ЕСТЬNULL(ВсеДокументыПоступленияПоКиЗ.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка))   КАК ДокументПоступленияКандидат,
	|	ЕСТЬNULL(РанееСопоставленныеПоступления.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)) КАК ДокументПоступленияУжеСопоставлено
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Организация = РанееСопоставленныеПоступления.Организация
	|			И НеподтвержденныеКиЗ.НомерКиЗ    = РанееСопоставленныеПоступления.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Документ <> РанееСопоставленныеПоступления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Контрагент = ВсеДокументыПоступленияПоКиЗ.Контрагент
	|			И НеподтвержденныеКиЗ.Организация = ВсеДокументыПоступленияПоКиЗ.Организация
	|ИТОГИ ПО
	|	Документ,
	|	НомерКиЗ,
	|	ДокументПоступления,
	|	СостояниеПодтверждения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	ДублирующиесяНомераКиЗ.НомерКиЗ
	|ИЗ
	|	ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ";
	
	Если ДокументыКПодтверждению.Количество() > 0 Тогда
		
		Запрос.УстановитьПараметр("ДокументыКПодтверждению", ДокументыКПодтверждению);
		
	Иначе
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДокументыКПодтверждению", Обработки.ПодтверждениеПоступившихКиЗГИСМ.ТекстУсловияПоУведомлениямОПоступленииМаркированныхТоваровГИСМ());
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НомераКиЗКПодтверждению", РезультатЗапроса[4]);
	ВозвращаемоеЗначение.Вставить("ПроблемыДублиКиЗ",        РезультатЗапроса[5]);
	ВозвращаемоеЗначение.Вставить("ПроблемыСопоставления",   Неопределено);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#Область РасчетСостоянийИнформированияГИСМ

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусИнформированияГИСМ
Процедура РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения(Источник, ЗаписьТребуется)

	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыИнформированияГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыИнформированияГИСМ.Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление,
	|	СтатусыИнформированияГИСМ.Статус,
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ = &Основание";
	
	Запрос.УстановитьПараметр("Основание", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если (Не Источник.Проведен Или Не ЗаписьТребуется)
			И Не ЗначениеЗаполнено(Выборка.ТекущееУведомление) Тогда
			
			РегистрыСведений.СтатусыИнформированияГИСМ.УдалитьЗаписьИзРегистра(Источник.Ссылка);
			Возврат;
			
		КонецЕсли;
		
	ИначеЕсли Источник.Проведен И ЗаписьТребуется Тогда
		
		ВыполнятьЗаписьВРегистр = Истина;
		
		ДанныеЗаписи.Документ            = Источник.Ссылка;
		ДанныеЗаписи.ДальнейшееДействие  = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется;
		ДанныеЗаписи.Статус              = Перечисления.СтатусыИнформированияГИСМ.Отсутствует;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыИнформированияГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусИнформированияГИСМ
Процедура РассчитатьСтатусИнформированияГИСМДляДокументаСРаспоряжением(Источник)

	ЗаписьНового = Источник.ДополнительныеСвойства.Свойство("ЗаписьНового")
	             И Источник.ДополнительныеСвойства.ЗаписьНового;
	
	Если Не ЗаписьНового Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыИнформированияГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыИнформированияГИСМ.Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление,
	|	СтатусыИнформированияГИСМ.Статус,
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ = &Документ";
	
	Запрос.УстановитьПараметр("Документ", Источник.Основание);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ВыполнятьЗаписьВРегистр         = Истина;
		ДанныеЗаписи.Документ           = Выборка.Документ;
		ДанныеЗаписи.ТекущееУведомление = Источник.Ссылка;
		ДанныеЗаписи.Статус             = Перечисления.СтатусыИнформированияГИСМ.Черновик;
		ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыИнформированияГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусИнформированияГИСМ
Процедура РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, ЗаписьТребуется, ДальнейшееДействие = Неопределено)
	
	ВыполнятьЗаписьВРегистр = Источник.Проведен И ЗаписьТребуется;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыИнформированияГИСМ.Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление,
	|	СтатусыИнформированияГИСМ.Статус,
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ = &Основание";
	
	Запрос.УстановитьПараметр("Основание", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Не ВыполнятьЗаписьВРегистр Тогда
			РегистрыСведений.СтатусыИнформированияГИСМ.УдалитьЗаписьИзРегистра(Источник.Ссылка);
		КонецЕсли;
		
	ИначеЕсли ВыполнятьЗаписьВРегистр Тогда
		
		ДанныеЗаписи = РегистрыСведений.СтатусыИнформированияГИСМ.ЗначенияПоУмолчанию();
		ДанныеЗаписи.Документ = Источник.Ссылка;
		Если ДальнейшееДействие = Неопределено Тогда
			ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
		Иначе
			ДанныеЗаписи.ДальнейшееДействие = ДальнейшееДействие;
		КонецЕсли;
		РегистрыСведений.СтатусыИнформированияГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСПрикладнымиДокументами

// Есть маркируемая продукция ГИСМ.
// 
// Параметры:
//  Товары - ТабличнаяЧасть
// 
// Возвращаемое значение:
//  Булево - Есть маркируемая продукция ГИСМ
Функция ЕстьМаркируемаяПродукцияГИСМ(Товары) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетМаркировкиПродукцииВГИСМ") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&Товары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаТовары.Номенклатура
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)";
	
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

// Есть ки ЗГИСМ.
// 
// Параметры:
//  Товары - ТабличнаяЧасть
// 
// Возвращаемое значение:
//  Булево - Есть ки ЗГИСМ
Функция ЕстьКиЗГИСМ(Товары) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетМаркировкиПродукцииВГИСМ") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Отменено
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&Товары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаТовары.Номенклатура
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	НЕ ТаблицаТовары.Отменено
	|	И СправочникНоменклатура.КиЗГИСМ";
	
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

// Заполнить признаки есть маркируемая продукция и есть ки З.
// 
// Параметры:
//  Объект - ДокументОбъект
//  ИмяТабличнойЧасти - Строка - имя табличной части
// 
// Возвращаемое значение:
//  Структура - Заполнить признаки есть маркируемая продукция и есть ки З:
// * ЕстьМаркируемаяПродукцияГИСМ - Булево - 
// * ЕстьКиЗГИСМ - Булево - 
Функция ЗаполнитьПризнакиЕстьМаркируемаяПродукцияИЕстьКиЗ(Объект, ИмяТабличнойЧасти) Экспорт
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ЕстьМаркируемаяПродукцияГИСМ", Ложь);
	СтруктураВозврата.Вставить("ЕстьКиЗГИСМ", Ложь);
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетМаркировкиПродукцииВГИСМ") Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаНоменклатура
	|ГДЕ
	|	ТаблицаНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|	И ТаблицаНоменклатура.Ссылка В(&МассивНоменклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаНоменклатура
	|ГДЕ
	|	ТаблицаНоменклатура.КиЗГИСМ
	|	И ТаблицаНоменклатура.Ссылка В(&МассивНоменклатуры)");
	
	Запрос.УстановитьПараметр("МассивНоменклатуры", Объект[ИмяТабличнойЧасти].ВыгрузитьКолонку("Номенклатура"));
	
	Результат = Запрос.ВыполнитьПакет();
	
	СтруктураВозврата.ЕстьМаркируемаяПродукцияГИСМ = НЕ Результат[0].Пустой();
	СтруктураВозврата.ЕстьКиЗГИСМ                  = НЕ Результат[1].Пустой();
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Заполнить представление товаров уведомления по номерам ки з основания.
// 
// Параметры:
//  Основание - ДокументСсылка -
//  НомераКиЗ - ТаблицаЗначений - 
Процедура ЗаполнитьПредставлениеТоваровУведомленияПоНомерамКиЗОснования(Основание, НомераКиЗ) Экспорт
	
	Если Не ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерСтроки КАК НомерСтроки,
	|	НомераКиЗ.НомерКиЗ    КАК НомерКиЗ
	|ПОМЕСТИТЬ
	|	втНомераКиЗ
	|ИЗ
	|	&НомераКиЗ КАК НомераКиЗ
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКиЗ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииОснования.Номенклатура       КАК Номенклатура,
	|	СерииОснования.Характеристика     КАК Характеристика,
	|	СерииОснования.Серия              КАК Серия,
	|	СерииОснования.Серия.НомерКиЗГИСМ КАК НомерКиЗ
	|ПОМЕСТИТЬ
	|	втСерииОснования
	|ИЗ
	|	Документ.#ДокументОснование#.Серии КАК СерииОснования
	|ГДЕ
	|	СерииОснования.Ссылка = &Основание
	|	И СерииОснования.Серия.НомерКиЗГИСМ В (
	|		ВЫБРАТЬ
	|			втНомераКиЗ.НомерКиЗ КАК НомерКиЗ
	|		ИЗ
	|			втНомераКиЗ КАК втНомераКиЗ)
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКиЗ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНомераКиЗ.НомерСтроки         КАК НомерСтроки,
	|	втСерииОснования.Номенклатура   КАК Номенклатура,
	|	втСерииОснования.Характеристика КАК Характеристика,
	|	втСерииОснования.Номенклатура.Представление   КАК НоменклатураПредставление,
	|	втСерииОснования.Характеристика.Представление КАК ХарактеристикаПредставление,
	|	втСерииОснования.Серия          КАК Серия
	|ИЗ
	|	втСерииОснования КАК втСерииОснования
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втНомераКиЗ КАК втНомераКиЗ
	|ПО
	|	втНомераКиЗ.НомерКиЗ = втСерииОснования.НомерКиЗ");
	
	Запрос.УстановитьПараметр("НомераКиЗ", НомераКиЗ.Выгрузить(, "НомерСтроки,НомерКиЗ"));
	Запрос.УстановитьПараметр("Основание", Основание);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ДокументОснование#", Основание.Метаданные().Имя);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого ТекСтрока Из НомераКиЗ Цикл
		
		Если Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки") Тогда
			
			ТекСтрока.Номенклатура   = Выборка.Номенклатура;
			ТекСтрока.Характеристика = Выборка.Характеристика;
			ТекСтрока.Серия          = Выборка.Серия;
			ТекСтрока.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					Выборка.НоменклатураПредставление,
					Выборка.ХарактеристикаПредставление);
			
		Иначе
			
			ТекСтрока.Номенклатура   = Неопределено;
			ТекСтрока.Характеристика = Неопределено;
			ТекСтрока.Серия                     = Неопределено;
			ТекСтрока.НоменклатураПредставление = Неопределено;
			
		КонецЕсли;
		
		Выборка.Сбросить();
		
	КонецЦикла;
	
КонецПроцедуры

// Заполнить представление товаров уведомления о поступлении.
// 
// Параметры:
//  НомераКиЗ - ТаблицаЗначений -
Процедура ЗаполнитьПредставлениеТоваровУведомленияОПоступлении(НомераКиЗ) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерСтроки         КАК НомерСтроки,
	|	НомераКиЗ.НомерКиЗ            КАК НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления КАК ДокументПоступления
	|ПОМЕСТИТЬ
	|	втНомераКиЗ
	|ИЗ
	|	&НомераКиЗ КАК НомераКиЗ
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКиЗ,
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииОснования.Номенклатура       КАК Номенклатура,
	|	СерииОснования.Характеристика     КАК Характеристика,
	|	СерииОснования.Серия              КАК Серия,
	|	СерииОснования.Ссылка             КАК ДокументПоступления,
	|	СерииОснования.Серия.НомерКиЗГИСМ КАК НомерКиЗ
	|ПОМЕСТИТЬ
	|	втСерииОснования
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Серии КАК СерииОснования
	|ГДЕ
	|	СерииОснования.Ссылка В (
	|		ВЫБРАТЬ
	|			втНомераКиЗ.ДокументПоступления КАК ДокументПоступления
	|		ИЗ
	|			втНомераКиЗ КАК втНомераКиЗ)
	|	И СерииОснования.Серия.НомерКиЗГИСМ В (
	|		ВЫБРАТЬ
	|			втНомераКиЗ.НомерКиЗ КАК НомерКиЗ
	|		ИЗ
	|			втНомераКиЗ КАК втНомераКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерииОснования.Номенклатура       КАК Номенклатура,
	|	СерииОснования.Характеристика     КАК Характеристика,
	|	СерииОснования.Серия              КАК Серия,
	|	СерииОснования.Ссылка             КАК ДокументПоступления,
	|	СерииОснования.Серия.НомерКиЗГИСМ КАК НомерКиЗ
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Серии КАК СерииОснования
	|ГДЕ
	|	СерииОснования.Ссылка В (
	|		ВЫБРАТЬ
	|			втНомераКиЗ.ДокументПоступления КАК ДокументПоступления
	|		ИЗ
	|			втНомераКиЗ КАК втНомераКиЗ)
	|	И СерииОснования.Серия.НомерКиЗГИСМ В (
	|		ВЫБРАТЬ
	|			втНомераКиЗ.НомерКиЗ КАК НомерКиЗ
	|		ИЗ
	|			втНомераКиЗ КАК втНомераКиЗ)
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКиЗ,
	|	ДокументПоступления
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНомераКиЗ.НомерСтроки         КАК НомерСтроки,
	|	втСерииОснования.Номенклатура   КАК Номенклатура,
	|	втСерииОснования.Характеристика КАК Характеристика,
	|	втСерииОснования.Номенклатура.Представление   КАК НоменклатураПредставление,
	|	втСерииОснования.Характеристика.Представление КАК ХарактеристикаПредставление,
	|	втСерииОснования.Серия          КАК Серия
	|ИЗ
	|	втСерииОснования КАК втСерииОснования
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	втНомераКиЗ КАК втНомераКиЗ
	|ПО
	|	втНомераКиЗ.НомерКиЗ = втСерииОснования.НомерКиЗ
	|	И втНомераКиЗ.ДокументПоступления = втСерииОснования.ДокументПоступления");
	
	Запрос.УстановитьПараметр("НомераКиЗ", НомераКиЗ.Выгрузить(, "НомерСтроки, НомерКиЗ, ДокументПоступления"));
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого ТекСтрока Из НомераКиЗ Цикл
		
		Если Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки") Тогда
			
			ТекСтрока.Номенклатура   = Выборка.Номенклатура;
			ТекСтрока.Характеристика = Выборка.Характеристика;
			ТекСтрока.Серия          = Выборка.Серия;
			ТекСтрока.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					Выборка.НоменклатураПредставление,
					Выборка.ХарактеристикаПредставление);
			
		Иначе
			
			ТекСтрока.Номенклатура   = Неопределено;
			ТекСтрока.Характеристика = Неопределено;
			ТекСтрока.Серия                     = Неопределено;
			ТекСтрока.НоменклатураПредставление = Неопределено;
			
		КонецЕсли;
		
		Выборка.Сбросить();
		
	КонецЦикла;
	
КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.УведомлениеОбИмпортеОбработкаПроверкиЗаполнения
Процедура УведомлениеОбИмпортеОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	Перем МассивНепроверяемыхРеквизитов;
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Проверка характеристик в табличной части Товары и в шапке документа.
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Номенклатура", "НоменклатураКиЗ");
	ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Характеристика", "ХарактеристикаКиЗ");
	
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, Отказ);
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

// см. ИнтеграцияГИСМПереопределяемый.ОбработкаПодбораЗаявкиНаВыпускКиЗ
Процедура ОбработкаПодбораЗаявкиНаВыпускКиЗ(Форма, ВыбранноеЗначение) Экспорт
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		ТекущаяСтрока = Форма.Объект.ЗаказанныеКиЗ.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "Номенклатура, Характеристика, Количество");
		
	КонецЦикла;
	
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",
	                                                  Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакТипНоменклатуры",
	                                                  Новый Структура("Номенклатура", "ТипНоменклатуры"));
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакАртикул",
	                                                  Новый Структура("Номенклатура", "Артикул"));
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Форма.Объект.ЗаказанныеКиЗ, ПараметрыЗаполненияРеквизитов);
	
КонецПроцедуры

// Текст запроса по проблемным поступлениям.
// 
// Параметры:
//  ИмяНабораДанных - Строка -
//  ОтборОрганизация - ОпределяемыйТип.Организация
//  ОтборКонтрагент - ОпределяемыйТип.Контрагент
// 
// Возвращаемое значение:
//  Строка - Текст запроса по проблемным поступлениям
Функция ТекстЗапросаПоПроблемнымПоступлениям(ИмяНабораДанных, ОтборОрганизация, ОтборКонтрагент) Экспорт
	
	Если ИмяНабораДанных = "КиЗ" Тогда
		ИмяТабличнойЧастиДокументаГИСМ = "Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ";
		ТекстОтбораПоНоменклатуре        = "ДвиженияСерийТоваров.Номенклатура.КиЗГИСМ";
	ИначеЕсли ИмяНабораДанных = "МаркированныеТовары" Тогда
		ИмяТабличнойЧастиДокументаГИСМ = "Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ";
		ТекстОтбораПоНоменклатуре        = "ДвиженияСерийТоваров.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)";
	КонецЕсли;
	
	ТекстОтбораДокументыПоступления = "";
	ТекстОтбораДокументыГИСМ        = "";
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ТекстОтбораДокументыПоступления = ТекстОтбораДокументыПоступления + " И Основание.Организация = &Организация ";
		ТекстОтбораДокументыГИСМ        = ТекстОтбораДокументыГИСМ + " И ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация = &Организация ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборКонтрагент) Тогда
		ТекстОтбораДокументыПоступления = ТекстОтбораДокументыПоступления + " И Основание.Контрагент = &Контрагент ";
		ТекстОтбораДокументыГИСМ        = ТекстОтбораДокументыГИСМ + " И ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент = &Контрагент ";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧастьДокументаГИСМ.НомерКиЗ           КАК НомерКиЗ,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент  КАК Контрагент,
	|	СУММА(1) КАК КоличествоВДокументахГИСМ
	|ПОМЕСТИТЬ НеСопоставленныеДокументыГИСМ
	|ИЗ
	|	ИмяТабличнойЧастиДокументаГИСМ КАК ТабличнаяЧастьДокументаГИСМ
	|ГДЕ
	|	НЕ ТабличнаяЧастьДокументаГИСМ.Ссылка.ПометкаУдаления
	|	И ТабличнаяЧастьДокументаГИСМ.ДокументПоступления В (ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ВозвратТоваровОтКлиента.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|	И &ТекстОтбораДокументыГИСМ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧастьДокументаГИСМ.НомерКиЗ,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	Основание.Ссылка КАК Основание,
	|	Основание.Организация КАК Организация,
	|	Основание.Контрагент КАК Контрагент,
	|	ДвиженияСерийТоваров.Серия.НомерКиЗГИСМ КАК НомерКИЗ
	|ПОМЕСТИТЬ НеСопоставленныеПоступленияДетально
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Основание
	|			ПО Основание.Ссылка = ДвиженияСерийТоваров.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяТабличнойЧастиДокументаГИСМ КАК ТабличнаяЧастьДокументаГИСМ
	|			ПО Основание.Ссылка = ТабличнаяЧастьДокументаГИСМ.ДокументПоступления
	|			И (НЕ ТабличнаяЧастьДокументаГИСМ.Ссылка.ПометкаУдаления)
	|			И Основание.Организация = ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация
	|			И Основание.Контрагент = ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент
	|			И ДвиженияСерийТоваров.Серия.НомерКиЗГИСМ = ТабличнаяЧастьДокументаГИСМ.НомерКиЗ
	|ГДЕ
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка ЕСТЬ NULL
	|	И &ТекстОтбораПоНоменклатуре
	|	И &ТекстОтбораДокументыПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	ДанныеПоступлений.Организация КАК Организация,
	|	ДанныеПоступлений.Контрагент КАК Контрагент,
	|	ДанныеПоступлений.НомерКИЗ КАК НомерКИЗ,
	|	ЕСТЬNULL(МАКСИМУМ(НеСопоставленныеДокументыГИСМ.КоличествоВДокументахГИСМ), 0) КАК КоличествоВДокументахГИСМ,
	|	СУММА(1) КАК КоличествоВДокументахПоступления
	|ПОМЕСТИТЬ ПроблемныеНомераКиЗ
	|ИЗ
	|	НеСопоставленныеПоступленияДетально КАК ДанныеПоступлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ НеСопоставленныеДокументыГИСМ КАК НеСопоставленныеДокументыГИСМ
	|		ПО ДанныеПоступлений.Организация = НеСопоставленныеДокументыГИСМ.Организация
	|			И ДанныеПоступлений.Контрагент = НеСопоставленныеДокументыГИСМ.Контрагент
	|			И ДанныеПоступлений.НомерКИЗ = НеСопоставленныеДокументыГИСМ.НомерКиЗ
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоступлений.Организация,
	|	ДанныеПоступлений.Контрагент,
	|	ДанныеПоступлений.НомерКИЗ
	|ИМЕЮЩИЕ
	|	СУММА(1) > ЕСТЬNULL(МАКСИМУМ(НеСопоставленныеДокументыГИСМ.КоличествоВДокументахГИСМ), 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ
	|	ПроблемныеНомераКиЗ.НомерКИЗ,
	|	ПроблемныеНомераКиЗ.Организация,
	|	ПроблемныеНомераКиЗ.Контрагент,
	|	ПроблемныеНомераКиЗ.КоличествоВДокументахГИСМ,
	|	ПроблемныеНомераКиЗ.КоличествоВДокументахПоступления
	|ИЗ
	|	ПроблемныеНомераКиЗ КАК ПроблемныеНомераКиЗ
	|ИТОГИ ПО
	|	Контрагент,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ
	|	НеСопоставленныеПоступления.Основание   КАК ДокументПоступления,
	|	НеСопоставленныеПоступления.Организация КАК Организация,
	|	НеСопоставленныеПоступления.Контрагент  КАК Контрагент,
	|	НеСопоставленныеПоступления.НомерКИЗ    КАК НомерКИЗ
	|ИЗ НеСопоставленныеПоступленияДетально КАК НеСопоставленныеПоступления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроблемныеНомераКиЗ КАК ПроблемныеНомераКиЗ
	|		ПО НеСопоставленныеПоступления.Организация = ПроблемныеНомераКиЗ.Организация
	|		И НеСопоставленныеПоступления.Контрагент = ПроблемныеНомераКиЗ.Контрагент
	|		И НеСопоставленныеПоступления.НомерКиЗ = ПроблемныеНомераКиЗ.НомерКИЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка             КАК ДокументГИСМ,
	|	ТабличнаяЧастьДокументаГИСМ.НомерКиЗ           КАК НомерКиЗ,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент  КАК Контрагент
	|ИЗ
	|	ИмяТабличнойЧастиДокументаГИСМ КАК ТабличнаяЧастьДокументаГИСМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроблемныеНомераКиЗ КАК ПроблемныеНомераКиЗ
	|		ПО ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация = ПроблемныеНомераКиЗ.Организация
	|			И ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент = ПроблемныеНомераКиЗ.Контрагент
	|			И ТабличнаяЧастьДокументаГИСМ.НомерКиЗ = ПроблемныеНомераКиЗ.НомерКИЗ
	|ГДЕ
	|	НЕ ТабличнаяЧастьДокументаГИСМ.Ссылка.ПометкаУдаления
	|	И ТабличнаяЧастьДокументаГИСМ.ДокументПоступления В (ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ВозвратТоваровОтКлиента.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|	И &ТекстОтбораДокументыГИСМ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТабличнойЧастиДокументаГИСМ",     ИмяТабличнойЧастиДокументаГИСМ);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОтбораПоНоменклатуре",         ТекстОтбораПоНоменклатуре);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ТекстОтбораДокументыГИСМ",        ТекстОтбораДокументыГИСМ);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ТекстОтбораДокументыПоступления", ТекстОтбораДокументыПоступления);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

// ИНН КПП GLN Организации
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация
//  Подразделение - ОпределяемыйТип.Подразделение
// 
// Возвращаемое значение:
//  Структура - ИННКППGLNОрганизации:
// * ИНН - Строка - 
// * КПП - Строка - 
// * GLN - Строка - 
Функция ИННКППGLNОрганизации(Организация, Подразделение) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ИНН", "");
	ВозвращаемоеЗначение.Вставить("КПП", "");
	ВозвращаемоеЗначение.Вставить("GLN", "");
	ВозвращаемоеЗначение.Вставить("ИностранныйКонтрагент", "");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Организации.ИНН КАК ИНН,
	|	ВЫБОР КОГДА РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
	|		ЕСТЬNULL(Организации.КПП, """")
	|	ИНАЧЕ
	|		ЕСТЬNULL(РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане.КПП, """")
	|	КОНЕЦ КАК КПП,
	|	ЕСТЬNULL(ОрганизацииДляОбменаГИСМДляОбособленногоПодразделения.GLN, ЕСТЬNULL(ОрганизацииДляОбменаГИСМ.GLN, """")) КАК GLN,
	|	ВЫБОР
	|		КОГДА Организации.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ИностранныйКонтрагент
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане.СрезПоследних(
	|			, Организация = &Организация) КАК РегистрацииВНалоговомОргане
	|		ПО &Подразделение = РегистрацииВНалоговомОргане.Подразделение
	|			И Организации.Ссылка = РегистрацииВНалоговомОргане.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОрганизацииДляОбменаГИСМ КАК ОрганизацииДляОбменаГИСМДляОбособленногоПодразделения
	|			ПО Организации.Ссылка = ОрганизацииДляОбменаГИСМДляОбособленногоПодразделения.Организация
	|			И &Подразделение = ОрганизацииДляОбменаГИСМДляОбособленногоПодразделения.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОрганизацииДляОбменаГИСМ КАК ОрганизацииДляОбменаГИСМ
	|			ПО Организации.Ссылка = ОрганизацииДляОбменаГИСМ.Организация
	|			И ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) = ОрганизацииДляОбменаГИСМ.Подразделение
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Реквизиты контрагента.
// 
// Параметры:
//  Контрагент - ОпределяемыйТип.КонтрагентГосИС
// 
// Возвращаемое значение:
//  Структура - со свойствами:
//   * Страна  - Строка - Страна регистрации контрагента.
//   * РегистрационныйНомер  - Строка - Регистрационный номер контрагента.
//   * Наименование  - Строка - Наименование контрагента.
//   * НаименованиеПолное  - Строка - Полное наименование контрагента.
//   * ЭтоФизическоеЛицо  - Булево - Признак физического лица.
//   * ЭтоРозничныйПокупатель - Булево - Признак розничного покупателя.
//   * ИНН  - Строка - ИНН контрагента.
//   * КПП  - Строка - КПП контрагента.
//   * ЮридическийАдрес - Строка - Юридический адрес контрагента.
Функция РеквизитыКонтрагента(Контрагент) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("РегистрационныйНомер", "");
	ВозвращаемоеЗначение.Вставить("НаименованиеПолное", "");
	ВозвращаемоеЗначение.Вставить("ИНН", "");
	ВозвращаемоеЗначение.Вставить("КПП", "");
	ВозвращаемоеЗначение.Вставить("ЮридическийАдрес", "");
	
	РеквизитыКонтрагента = ПартнерыИКонтрагенты.РеквизитыКонтрагента(Контрагент);
	ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, РеквизитыКонтрагента);
	
	ВозвращаемоеЗначение.Вставить("ЭтоРозничныйПокупатель", Контрагент = Справочники.Контрагенты.РозничныйПокупатель);
	ВозвращаемоеЗначение.Вставить("Страна",            РеквизитыКонтрагента.КодАльфа2СтраныРегистрации);
	ВозвращаемоеЗначение.Вставить("Наименование",      РеквизитыКонтрагента.Наименование);
	ВозвращаемоеЗначение.Вставить("ЭтоФизическоеЛицо", ?(РеквизитыКонтрагента.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо,
	                                                     Истина, Ложь));
	
	ЮридическийАдрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Контрагент,
		Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента,
		ТекущаяДатаСеанса());
	ВозвращаемоеЗначение.ЮридическийАдрес = ЮридическийАдрес;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Использовать подразделения.
// 
// Возвращаемое значение:
//  Булево - Использовать подразделения
Функция ИспользоватьПодразделения() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения");
	
КонецФункции

// Использовать заявки на выпуск ки З.
// 
// Возвращаемое значение:
//  Булево - Использовать заявки на выпуск ки З
Функция ИспользоватьЗаявкиНаВыпускКиЗ() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Использовать несколько организаций.
// 
// Возвращаемое значение:
//  Булево - Использовать несколько организаций
Функция ИспользоватьНесколькоОрганизаций() Экспорт
	
	Возврат Справочники.Организации.ИспользуетсяНесколькоОрганизаций();
	
КонецФункции

// Документ основание возврат поставщику.
// 
// Параметры:
//  ДокументСсылка - ДокументСсылка
// 
// Возвращаемое значение:
//  Булево - Документ основание возврат поставщику
Функция ДокументОснованиеВозвратПоставщику(ДокументСсылка) Экспорт
	
	Возврат ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику");
	
КонецФункции

// Организация подразделение документа.
// 
// Параметры:
//  ДокументСсылка - ДокументСсылка
// 
// Возвращаемое значение:
//  см. ОбщегоНазначения.ЗначенияРеквизитовОбъекта 
Функция ОрганизацияПодразделениеДокумента(ДокументСсылка) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Организация, Подразделение");
	
КонецФункции

#КонецОбласти

#Область Панель1СМаркировка

// Доступен отчет о розничных продажах.
// 
// Возвращаемое значение:
//  Булево - Доступен отчет о розничных продажах
Функция ДоступенОтчетОРозничныхПродажах() Экспорт
	
	Возврат ПравоДоступа("Чтение", Метаданные.Документы.ОтчетОРозничныхПродажах) И
		ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи");
	
КонецФункции

// Доступен возврат товаров от розничного клиента.
// 
// Возвращаемое значение:
//  Булево - Доступен возврат товаров от розничного клиента
Функция ДоступенВозвратТоваровОтРозничногоКлиента() Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтКлиента)
			И ПравоДоступа("Чтение", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ОтчетОРозничныхВозвратах) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Текст запроса отчеты о розничных продажах.
// 
// Возвращаемое значение:
//  Строка - Текст запроса отчеты о розничных продажах
Функция ТекстЗапросаОтчетыОРозничныхПродажах() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (ОтчетОРозничныхПродажах.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса отчеты о розничных продажах отработайте.
// 
// Возвращаемое значение:
//  Строка - Текст запроса отчеты о розничных продажах отработайте
Функция ТекстЗапросаОтчетыОРозничныхПродажахОтработайте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (ОтчетОРозничныхПродажах.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса отчеты о розничных продажах ожидайте.
// 
// Возвращаемое значение:
//  Строка - Текст запроса отчеты о розничных продажах ожидайте
Функция ТекстЗапросаОтчетыОРозничныхПродажахОжидайте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (ОтчетОРозничныхПродажах.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса возвраты товаров от розничных клиентов.
// 
// Возвращаемое значение:
//  Строка - Текст запроса возвраты товаров от розничных клиентов
Функция ТекстЗапросаВозвратыТоваровОтРозничныхКлиентов() Экспорт
	
	Подзапросы = Новый Массив;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтКлиента) Тогда
		Подзапросы.Добавить("
		|ВЫБРАТЬ
		|		КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
		|	ИЗ
		|		РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
		|			ПО СтатусыИнформированияГИСМ.Документ = ВозвратТоваровОтКлиента.Ссылка
		|	ГДЕ
		|		СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
		|		И (ВозвратТоваровОтКлиента.Организация = &Организация
		|			ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|		И (ВозвратТоваровОтКлиента.Менеджер = &Ответственный
		|			ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)
		|	");
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ОтчетОРозничныхВозвратах) Тогда
		Подзапросы.Добавить("
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
		|	ИЗ
		|		РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхВозвратах КАК ОтчетОРозничныхВозвратах
		|			ПО СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхВозвратах.Ссылка
		|	ГДЕ
		|		СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
		|		И (ОтчетОРозничныхВозвратах.Организация = &Организация
		|			ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|		И (ОтчетОРозничныхВозвратах.Ответственный = &Ответственный
		|			ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)
		|	");
	КонецЕсли;
	
	ТекстЗапроса = СтрШаблон("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВложенныйЗапрос.КоличествоДокументов) КАК КоличествоДокументов
	|ИЗ(%1) КАК ВложенныйЗапрос
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|",
	СтрСоединить(Подзапросы, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса возвраты товаров от розничных клиентов отработайте.
// 
// Возвращаемое значение:
//  Строка - Текст запроса возвраты товаров от розничных клиентов отработайте
Функция ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОтработайте() Экспорт
	
	Подзапросы = Новый Массив;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтКлиента) Тогда
		Подзапросы.Добавить("
		|ВЫБРАТЬ
		|		КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
		|	ИЗ
		|		РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
		|			ПО СтатусыИнформированияГИСМ.Документ = ВозвратТоваровОтКлиента.Ссылка
		|	ГДЕ
		|		СтатусыИнформированияГИСМ.ДальнейшееДействие В
		|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные),
		|			ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен))
		|		И (ВозвратТоваровОтКлиента.Организация = &Организация
		|			ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|		И (ВозвратТоваровОтКлиента.Менеджер = &Ответственный
		|			ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)
		|	");
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ОтчетОРозничныхВозвратах) Тогда
		Подзапросы.Добавить("
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
		|	ИЗ
		|		РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхВозвратах КАК ОтчетОРозничныхВозвратах
		|			ПО СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхВозвратах.Ссылка
		|	ГДЕ
		|		СтатусыИнформированияГИСМ.ДальнейшееДействие В
		|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные),
		|			ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен))
		|		И (ОтчетОРозничныхВозвратах.Организация = &Организация
		|			ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|		И (ОтчетОРозничныхВозвратах.Ответственный = &Ответственный
		|			ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)
		|	");
	КонецЕсли;
	
	ТекстЗапроса = СтрШаблон("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВложенныйЗапрос.КоличествоДокументов) КАК КоличествоДокументов
	|ИЗ(%1) КАК ВложенныйЗапрос
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|",
	СтрСоединить(Подзапросы, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса возвраты товаров от розничных клиентов ожидайте.
// 
// Возвращаемое значение:
//  Строка - Текст запроса возвраты товаров от розничных клиентов ожидайте
Функция ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОжидайте() Экспорт
	
	Подзапросы = Новый Массив;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтКлиента) Тогда
		Подзапросы.Добавить("
		|ВЫБРАТЬ
		|		КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
		|	ИЗ
		|		РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
		|			ПО СтатусыИнформированияГИСМ.Документ = ВозвратТоваровОтКлиента.Ссылка
		|	ГДЕ
		|		СтатусыИнформированияГИСМ.ДальнейшееДействие В
		|			(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием),
		|			ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации))
		|		И (ВозвратТоваровОтКлиента.Организация = &Организация
		|			ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|		И (ВозвратТоваровОтКлиента.Менеджер = &Ответственный
		|			ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)
		|	");
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ОтчетОРозничныхВозвратах) Тогда
		Подзапросы.Добавить("
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
		|	ИЗ
		|		РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхВозвратах КАК ОтчетОРозничныхВозвратах
		|			ПО СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхВозвратах.Ссылка
		|	ГДЕ
		|		СтатусыИнформированияГИСМ.ДальнейшееДействие В
		|			(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием),
		|			ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации))
		|		И (ОтчетОРозничныхВозвратах.Организация = &Организация
		|			ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|		И (ОтчетОРозничныхВозвратах.Ответственный = &Ответственный
		|			ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)
		|	");
	КонецЕсли;
	
	ТекстЗапроса = СтрШаблон("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВложенныйЗапрос.КоличествоДокументов) КАК КоличествоДокументов
	|ИЗ(%1) КАК ВложенныйЗапрос
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|",
	СтрСоединить(Подзапросы, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса уведомления о списании ки ЗГИСМ.
// 
// Возвращаемое значение:
//  Строка - Текст запроса уведомления о списании ки ЗГИСМ
Функция ТекстЗапросаУведомленияОСписанииКиЗГИСМ() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОСписанииКиЗГИСМ КАК УведомлениеОСписанииКиЗГИСМ
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = УведомлениеОСписанииКиЗГИСМ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ВнутреннееПотребление КАК ВнутреннееПотребление
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВнутреннееПотребление.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ВнутреннееПотребление
	|	И (ВнутреннееПотребление.Ссылка ЕСТЬ НЕ NULL
	|	И (СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (ВнутреннееПотребление.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОСписанииКиЗГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОСписанииКиЗГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (УведомлениеОСписанииКиЗГИСМ.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса уведомления о списании ки ЗГИСМОформите.
// 
// Возвращаемое значение:
//  Строка - Текст запроса уведомления о списании ки ЗГИСМОформите
Функция ТекстЗапросаУведомленияОСписанииКиЗГИСМОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ВнутреннееПотребление КАК ВнутреннееПотребление
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВнутреннееПотребление.Ссылка
	|ГДЕ
	|	ВнутреннееПотребление.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ВнутреннееПотребление
	|	И (ВнутреннееПотребление.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
		
КонецФункции

// Текст запроса уведомления об отгрузке.
// 
// Возвращаемое значение:
//  Строка - Текст запроса уведомления об отгрузке
Функция ТекстЗапросаУведомленияОбОтгрузке() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ КАК УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ
	|ПО
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке = УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Ссылка
	|%ЛевоеСоединение%
	|ГДЕ
	|	(%УсловиеСсылка%
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоКлиентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка))
	|	И (%УсловиеОрганизация%
	|		&Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ДальнейшееДействие <>
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ПравоДоступаРеализацияТоваровУслуг = ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваровУслуг);
	ПравоДоступаВозвратТоваровПоставщику = ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровПоставщику);
	
	ЛевоеСоединение = "";
	Если ПравоДоступаРеализацияТоваровУслуг Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ПО
		|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = РеализацияТоваровУслуг.Ссылка
		|";
	КонецЕсли;
	
	Если ПравоДоступаВозвратТоваровПоставщику Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
		|ПО
		|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = ВозвратТоваровПоставщику.Ссылка
		|";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаРеализацияТоваровУслуг
		И ПравоДоступаВозвратТоваровПоставщику Тогда

		УсловиеСсылка = "(РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL ИЛИ ВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL) И";
		УсловиеОрганизация = "РеализацияТоваровУслуг.Организация = &Организация ИЛИ ВозвратТоваровПоставщику.Организация = &Организация ИЛИ";
		
	ИначеЕсли ПравоДоступаРеализацияТоваровУслуг Тогда
		
		УсловиеСсылка = "РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL И";
		УсловиеОрганизация = "РеализацияТоваровУслуг.Организация = &Организация ИЛИ";
		
	ИначеЕсли ПравоДоступаВозвратТоваровПоставщику Тогда
		
		УсловиеСсылка = "ВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL И";
		УсловиеОрганизация = "ВозвратТоваровПоставщику.Организация = &Организация ИЛИ";
		
	КонецЕсли;
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", УсловиеСсылка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", УсловиеОрганизация);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса уведомления об отгрузке оформите.
// 
// Возвращаемое значение:
//  Строка - Текст запроса уведомления об отгрузке оформите
Функция ТекстЗапросаУведомленияОбОтгрузкеОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|%ЛевоеСоединение%
	|ГДЕ
	|	%УсловиеСсылка%
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоКлиентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)
	|	)
	|	И (%УсловиеОрганизация% &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ПравоДоступаРеализацияТоваровУслуг = ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваровУслуг);
	ПравоДоступаВозвратТоваровПоставщику = ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровПоставщику);
	
	ЛевоеСоединение = "";
	Если ПравоДоступаРеализацияТоваровУслуг Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ПО
		|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = РеализацияТоваровУслуг.Ссылка
		|";
	КонецЕсли;
	
	Если ПравоДоступаВозвратТоваровПоставщику Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
		|ПО
		|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = ВозвратТоваровПоставщику.Ссылка
		|";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаРеализацияТоваровУслуг
		И ПравоДоступаВозвратТоваровПоставщику Тогда

		УсловиеСсылка = "(РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL ИЛИ ВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL) И";
		УсловиеОрганизация = "РеализацияТоваровУслуг.Организация = &Организация ИЛИ ВозвратТоваровПоставщику.Организация = &Организация ИЛИ";
		
	ИначеЕсли ПравоДоступаРеализацияТоваровУслуг Тогда
		
		УсловиеСсылка = "РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL И";
		УсловиеОрганизация = "РеализацияТоваровУслуг.Организация = &Организация ИЛИ";
		
	ИначеЕсли ПравоДоступаВозвратТоваровПоставщику Тогда
		
		УсловиеСсылка = "ВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL И";
		УсловиеОрганизация = "ВозвратТоваровПоставщику.Организация = &Организация ИЛИ";
		
	КонецЕсли;
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", УсловиеСсылка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", УсловиеОрганизация);
	
	Возврат ТекстЗапроса;
		
КонецФункции

// Текст запроса заявки на выпуск ки ЗГИСМ.
// 
// Возвращаемое значение:
//  Строка - Текст запроса заявки на выпуск ки ЗГИСМ
Функция ТекстЗапросаЗаявкиНаВыпускКиЗГИСМ() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыЗаявокНаВыпускКиЗГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыЗаявокНаВыпускКиЗГИСМ КАК СтатусыЗаявокНаВыпускКиЗГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ЗаявкаНаВыпускКиЗГИСМ КАК ЗаявкаНаВыпускКиЗГИСМ
	|ПО
	|	СтатусыЗаявокНаВыпускКиЗГИСМ.ТекущаяЗаявкаНаВыпускКиЗ = ЗаявкаНаВыпускКиЗГИСМ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ПО
	|	СтатусыЗаявокНаВыпускКиЗГИСМ.Документ = ЗаказПоставщику.Ссылка
	|ГДЕ
	|	(ЗаказПоставщику.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыЗаявокНаВыпускКиЗГИСМ.СтатусЗаявкиНаВыпускКиЗ В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ОтклоненаЭмитентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ОтклоненаГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ПустаяСсылка))
	|	И (ЗаказПоставщику.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(ЗаявкаНаВыпускКиЗГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыЗаявокНаВыпускКиЗГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (ЗаявкаНаВыпускКиЗГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (ЗаявкаНаВыпускКиЗГИСМ.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса заявки на выпуск ки ЗГИСМОформите.
// 
// Возвращаемое значение:
//  Строка - Текст запроса заявки на выпуск КИЗ ГИСМ Оформите
Функция ТекстЗапросаЗаявкиНаВыпускКиЗГИСМОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыЗаявокНаВыпускКиЗГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыЗаявокНаВыпускКиЗГИСМ КАК СтатусыЗаявокНаВыпускКиЗГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ПО
	|	СтатусыЗаявокНаВыпускКиЗГИСМ.Документ = ЗаказПоставщику.Ссылка
	|ГДЕ
	|	НЕ СтатусыЗаявокНаВыпускКиЗГИСМ.Документ ССЫЛКА Документ.ЗаявкаНаВыпускКиЗГИСМ
	|	И ЗаказПоставщику.Ссылка ЕСТЬ НЕ NULL
	|	И (СтатусыЗаявокНаВыпускКиЗГИСМ.СтатусЗаявкиНаВыпускКиЗ В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ОтклоненаЭмитентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ОтклоненаГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ПустаяСсылка)
	|	))
	|	И (ЗаказПоставщику.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса уведомления о ввозе из ЕАЭС.
// 
// Возвращаемое значение:
//  Строка - Текст запроса уведомления о ввозе из ЕАЭС
Функция ТекстЗапросаУведомленияОВвозеИзЕАЭС() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ КАК УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ПриобретениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|	И ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС)
	|	И ((СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (ПриобретениеТоваровУслуг.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса уведомления о ввозе из ЕАЭСОформите.
// 
// Возвращаемое значение:
//  Строка - Текст запроса уведомления о ввозе из ЕАЭСОформите
Функция ТекстЗапросаУведомленияОВвозеИзЕАЭСОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ПриобретениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|	И ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС)
	|	И (СтатусыИнформированияГИСМ.Документ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
		
КонецФункции

// Текст запроса уведомления об импорте.
// 
// Возвращаемое значение:
//  Строка - Текст запроса уведомления об импорте
Функция ТекстЗапросаУведомленияОбИмпорте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ КАК УведомлениеОбИмпортеМаркированныхТоваровГИСМ
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ПриобретениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|	И ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|	И ((СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (ПриобретениеТоваровУслуг.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И (УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Ответственный = &Ответственный
	|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО)))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса уведомления об импорте оформите.
// 
// Возвращаемое значение:
//  Строка - Текст запроса уведомления об импорте оформите
Функция ТекстЗапросаУведомленияОбИмпортеОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ПриобретениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|	И ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|	И (ПриобретениеТоваровУслуг.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
		
КонецФункции

// Текст запроса количество отчетов о розничных продажах ожидающие отправки.
// 
// Возвращаемое значение:
//  Строка - Текст запроса количество отчетов о розничных продажах ожидающие отправки
Функция ТекстЗапросаКоличествоОтчетовОРозничныхПродажахОжидающиеОтправки() Экспорт
	
	Возврат "ВЫБРАТЬ
			|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
			|ИЗ
			|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
			|ПО
			|	СтатусыИнформированияГИСМ.ТекущееУведомление = ОтчетОРозничныхПродажах.Ссылка
			|ГДЕ
			|	ОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL
			|	И (СтатусыИнформированияГИСМ.ДальнейшееДействие В (
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием)
			|	)
			|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
			|	И (ОтчетОРозничныхПродажах.Организация = &Организация
			|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
			|	И (ОтчетОРозничныхПродажах.Ответственный = &Ответственный
			|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
			|/////////////////////////////////////////////////////////////////////////////
			|ОБЪЕДИНИТЬ ВСЕ ";
	
КонецФункции

// Текст запроса количество возвратов от розничных клиентов ожидающие отправки.
// 
// Возвращаемое значение:
//  Строка - Текст запроса количество возвратов от розничных клиентов ожидающие отправки
Функция ТекстЗапросаКоличествоВозвратовОтРозничныхКлиентовОжидающиеОтправки() Экспорт
	
	Возврат "ВЫБРАТЬ
			|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
			|ИЗ
			|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
			|ПО
			|	СтатусыИнформированияГИСМ.ТекущееУведомление = ВозвратТоваровОтКлиента.Ссылка
			|ГДЕ
			|	ВозвратТоваровОтКлиента.Ссылка ЕСТЬ НЕ NULL
			|	И (СтатусыИнформированияГИСМ.ДальнейшееДействие В (
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
			|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием)
			|	)
			|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ВозвратТоваровОтКлиента
			|	И (ВозвратТоваровОтКлиента.Организация = &Организация
			|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
			|	И (ВозвратТоваровОтКлиента.Менеджер = &Ответственный
			|		ИЛИ &Ответственный = НЕОПРЕДЕЛЕНО))
			|/////////////////////////////////////////////////////////////////////////////
			|ОБЪЕДИНИТЬ ВСЕ ";
	
КонецФункции

#КонецОбласти

#Область ЗапросыДинамическихСписковРаспоряжений

// Текст запроса динамического списка распоряжений уведомление об импорте.
// 
// Возвращаемое значение:
//  Строка - Текст запроса динамического списка распоряжений уведомление об импорте
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбИмпорте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатусыГИСМПереопределяемый.Документ КАК Документ,
	|	СтатусыГИСМПереопределяемый.ТекущееУведомление КАК ТекущееУведомление,
	|	ВЫБОР
	|		КОГДА СтатусыГИСМПереопределяемый.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует)
	|		ИНАЧЕ СтатусыГИСМПереопределяемый.Статус
	|	КОНЕЦ КАК СтатусГИСМУведомленияКОформлению,
	|	СтатусыГИСМПереопределяемый.Документ.Дата КАК Дата,
	|	СтатусыГИСМПереопределяемый.Документ.Номер КАК Номер,
	|	СтатусыГИСМПереопределяемый.Документ.Организация КАК Организация,
	|	ИСТИНА КАК Картинка
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыГИСМПереопределяемый
	|//%СоединениеСОснованиями%
	|ГДЕ
	|	(СтатусыГИСМПереопределяемый.Документ В (&ПустойДокументОснование)
	|//%ОтборПоДоступнымОснованиям%
	|	)
	|	И СтатусыГИСМПереопределяемый.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)
	|	)
	|	И СтатусыГИСМПереопределяемый.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|	И СтатусыГИСМПереопределяемый.Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса динамического списка распоряжений уведомление о ввозе из ЕАЭС.
// 
// Возвращаемое значение:
//  Строка - Текст запроса динамического списка распоряжений уведомление о ввозе из ЕАЭС
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОВвозеИзЕАЭС() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатусыГИСМПереопределяемый.Документ КАК Документ,
	|	СтатусыГИСМПереопределяемый.ТекущееУведомление КАК ТекущееУведомление,
	|	ВЫБОР
	|		КОГДА СтатусыГИСМПереопределяемый.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует)
	|		ИНАЧЕ СтатусыГИСМПереопределяемый.Статус
	|	КОНЕЦ КАК СтатусГИСМУведомленияКОформлению,
	|	СтатусыГИСМПереопределяемый.Документ.Дата КАК Дата,
	|	СтатусыГИСМПереопределяемый.Документ.Номер КАК Номер,
	|	СтатусыГИСМПереопределяемый.Документ.Организация КАК Организация,
	|	СтатусыГИСМПереопределяемый.Документ.Контрагент КАК Контрагент,
	|	ИСТИНА КАК Картинка
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыГИСМПереопределяемый
	|//%СоединениеСОснованиями%
	|ГДЕ
	|	(СтатусыГИСМПереопределяемый.Документ В (&ПустойДокументОснование)
	|//%ОтборПоДоступнымОснованиям%
	|	)
	|	И СтатусыГИСМПереопределяемый.Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)
	|		)
	|	И СтатусыГИСМПереопределяемый.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|	И СтатусыГИСМПереопределяемый.Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса динамического списка распоряжений уведомление о списании.
// 
// Возвращаемое значение:
//  Строка - Текст запроса динамического списка распоряжений уведомление о списании
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОСписании() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатусыИнформированияГИСМ.Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление,
	|	ВЫБОР
	|		КОГДА СтатусыИнформированияГИСМ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует)
	|		ИНАЧЕ СтатусыИнформированияГИСМ.Статус
	|	КОНЕЦ КАК СтатусГИСМКОформлению,
	|	СтатусыИнформированияГИСМ.Документ.Дата КАК Дата,
	|	СтатусыИнформированияГИСМ.Документ.Номер КАК Номер,
	|	СтатусыИнформированияГИСМ.Документ.Организация КАК Организация,
	|	ИСТИНА КАК Картинка
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ВнутреннееПотребление
	|	И НЕ СтатусыИнформированияГИСМ.Документ.Ссылка ЕСТЬ NULL
	|	И СтатусыИнформированияГИСМ.Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса динамического списка распоряжений уведомление об отгрузке.
// 
// Возвращаемое значение:
//  Строка - Текст запроса динамического списка распоряжений уведомление об отгрузке
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбОтгрузке() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Таблица.Дата КАК ДатаУведомления,
	|	Таблица.НомерГИСМ КАК НомерГИСМ,
	|	Таблица.Контрагент КАК Контрагент,
	|	СтатусыГИСМПереопределяемый.Документ КАК Документ,
	|	СтатусыГИСМПереопределяемый.Документ.Организация КАК Организация,
	|	СтатусыГИСМПереопределяемый.ТекущееУведомлениеОбОтгрузке КАК ТекущееУведомлениеОбОтгрузке,
	|	СтатусыГИСМПереопределяемый.Статус КАК СтатусГИСМУведомленияКОформлению,
	|	СтатусыГИСМПереопределяемый.Документ.Дата КАК Дата,
	|	СтатусыГИСМПереопределяемый.Документ.Номер КАК Номер,
	|	ИСТИНА КАК Картинка
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыГИСМПереопределяемый
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ КАК Таблица
	|		ПО СтатусыГИСМПереопределяемый.ТекущееУведомлениеОбОтгрузке = Таблица.Ссылка
	|//%СоединениеСОснованиями%
	|ГДЕ
	|	(СтатусыГИСМПереопределяемый.Документ В (&ПустойДокументОснование)
	|//%ОтборПоДоступнымОснованиям%
	|	)
	|	И СтатусыГИСМПереопределяемый.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоКлиентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)
	|	)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса динамического списка распоряжений заявка на выпуск ки З.
// 
// Возвращаемое значение:
//  Строка - Текст запроса динамического списка распоряжений заявка на выпуск ки З
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийЗаявкаНаВыпускКиЗ() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатусыГИСМПереопределяемый.ТекущаяЗаявкаНаВыпускКиЗ КАК ТекущаяЗаявкаНаВыпускКиЗ,
	|	ВЫБОР
	|		КОГДА СтатусыГИСМПереопределяемый.СтатусЗаявкиНаВыпускКиЗ <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ПустаяСсылка)
	|			ТОГДА СтатусыГИСМПереопределяемый.СтатусЗаявкиНаВыпускКиЗ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.Отсутствует)
	|	КОНЕЦ КАК СтатусГИСМКОформлению,
	|	СтатусыГИСМПереопределяемый.Документ.ПометкаУдаления КАК ПометкаУдаления,
	|	СтатусыГИСМПереопределяемый.Документ.Проведен КАК Проведен,
	|	СтатусыГИСМПереопределяемый.Документ.Организация КАК Организация,
	|	СтатусыГИСМПереопределяемый.Документ.Контрагент КАК Контрагент,
	|	СтатусыГИСМПереопределяемый.Документ.Ссылка КАК Ссылка,
	|	ИСТИНА КАК Картинка
	|ИЗ
	|	РегистрСведений.СтатусыЗаявокНаВыпускКиЗГИСМ КАК СтатусыГИСМПереопределяемый
	|//%СоединениеСОснованиями%
	|ГДЕ
	|	(СтатусыГИСМПереопределяемый.Документ В (&ПустойДокументОснование)
	|//%ОтборПоДоступнымОснованиям%
	|	)
	|	И (СтатусыГИСМПереопределяемый.ТекущаяЗаявкаНаВыпускКиЗ = ЗНАЧЕНИЕ(Документ.ЗаявкаНаВыпускКиЗГИСМ.ПустаяСсылка)
	|			ИЛИ НЕ СтатусыГИСМПереопределяемый.Документ ССЫЛКА Документ.ЗаявкаНаВыпускКиЗГИСМ
	|				И СтатусыГИСМПереопределяемый.СтатусЗаявкиНаВыпускКиЗ В (
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ОтклоненаГИСМ),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.ОтклоненаЭмитентом))
	|	)
	|	И НЕ СтатусыГИСМПереопределяемый.СтатусЗаявкиНаВыпускКиЗ = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВыпускКиЗГИСМ.Архив)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти