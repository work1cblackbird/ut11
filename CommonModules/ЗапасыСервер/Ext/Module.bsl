#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - см. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  Структура - см. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ТоварыОрганизаций);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ТоварыОрганизацийКПередаче);
		
		Если Документ.ДополнительныеСвойства.Свойство("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми")
			И Документ.ДополнительныеСвойства.ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми Тогда
			
			ИмяТаблицы = ИмяТаблицыРезервыТоваровОрганизаций();
			
			Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций);
			ПроведениеДокументов.ДобавитьТаблицуДанныхДокумента(Документ,
																ИмяТаблицы,
																Документ.ДополнительныеСвойства[ИмяТаблицы]);
		Иначе
			Параметры.ЕстьПроизводныеДвижения = Истина;
		КонецЕсли;
		
		Параметры.НезависимыеРегистры.Добавить(Метаданные.РегистрыСведений.ДатыПоступленияТоваровОрганизаций);
		
	ИначеЕсли Свойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда // формирование резервов
		Параметры.ЕстьПроизводныеДвижения = Истина;
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ТоварыОрганизаций);
		Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций);
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ТоварыОрганизаций);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ТоварыОрганизацийКПередаче);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ДвиженияДокумента = МетаданныеДокумента.Движения;

	ТекстыЗапросов = Новый Соответствие();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ТоварыОрганизаций;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ТоварыОрганизацийКПередаче;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));	
	КонецЕсли;
		
	Возврат ТекстыЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам оперативного учета товаров организаций.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "ТоварыОрганизаций");
	
	Если Движения.Найти("ТоварыОрганизаций") <> Неопределено
		И Движения.ТоварыОрганизаций.Количество() = 0
		И Движения.ТоварыОрганизаций.Записывать Тогда
		
		Если Движения.Найти("ПартииТоваровОрганизаций") <> Неопределено Тогда
			Движения.ПартииТоваровОрганизаций.Записывать = Истина;
		КонецЕсли;
	
		Если Движения.Найти("РасчетыСКлиентамиПоДокументам") <> Неопределено Тогда
			Движения.РасчетыСКлиентамиПоДокументам.Записывать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "ТоварыОрганизацийКПередаче");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "ТоварыКОформлениюДокументовИмпорта");
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "РезервыТоваровОрганизаций");
		
КонецПроцедуры

// Процедура формирования движений по независимым регистрам оперативного учета товаров организаций.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Документ - ДокументСсылка - ссылка на документ
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ЗаписатьДанные(ТаблицыДляДвижений, Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТаблицы = "Таблица" + "ДатыПоступленияТоваровОрганизаций";
	
	Если ТаблицыДляДвижений.Свойство(ИмяТаблицы)
		И ЗначениеЗаполнено(ТаблицыДляДвижений[ИмяТаблицы]) Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицыДляДвижений[ИмяТаблицы] Цикл
			МенеджерЗаписи = РегистрыСведений.ДатыПоступленияТоваровОрганизаций.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
			МенеджерЗаписи.Записать(Истина);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Возникает перед выполнением записи регистров документа.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц,
//								используемый для хранения таблиц контроля изменений регистров.
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура ПередЗаписьюДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	// Отключение стандартной очистки движений
	Если Документ.Движения.РезервыТоваровОрганизаций.Записывать
		И (Не Документ.ДополнительныеСвойства.Свойство("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми")
		Или Не Документ.ДополнительныеСвойства.ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми) Тогда
		Документ.Движения.РезервыТоваровОрганизаций.Записывать = Ложь;
	КонецЕсли;
	
	Если Документ.ДополнительныеСвойства.Свойство("ПараметрыЗаполненияВидовЗапасов") Тогда
		Если Документ.ДополнительныеСвойства.ПараметрыЗаполненияВидовЗапасов = "ПолучитьПередПодготовкой" Тогда
			Документ.ДополнительныеСвойства.ПараметрыЗаполненияВидовЗапасов
				= Документ.ПараметрыЗаполненияВидовЗапасов(МенеджерВременныхТаблиц);
		КонецЕсли;
		
		РежимЗаписи = ПроведениеДокументов.СвойстваДокумента(Документ).РежимЗаписи;
		Если Документ.ДополнительныеСвойства.Свойство("ИспользоватьПриПодготовкеПараметрыЗаполненияВидовЗапасов") Тогда
			ПараметрыЗаполнения = Документ.ДополнительныеСвойства.ПараметрыЗаполненияВидовЗапасов;
		Иначе
			ПараметрыЗаполнения = Неопределено;
		КонецЕсли;
		ПодготовитьЗаписьТоваровОрганизаций(Документ, МенеджерВременныхТаблиц, РежимЗаписи, ПараметрыЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

// Возникает после выполнения записи регистров документа.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц,
//								используемый для хранения таблиц контроля изменений регистров.
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура ПослеЗаписиДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	ПараметрыЗаполнения =
		ПараметрыЗаполненияВидовЗапасовПоДополнительнымСвойствам(Документ, МенеджерВременныхТаблиц);
	
	Если Не ПараметрыЗаполнения = Неопределено Тогда
		Если ТипЗнч(ПараметрыЗаполнения) = Тип("Структура") Тогда
			СформироватьРезервыПоТоварамОрганизаций(Документ, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполнения);
		Иначе // коллекция
			Для Каждого ЭлементКоллекции Из ПараметрыЗаполнения Цикл
				СформироватьРезервыПоТоварамОрганизаций(Документ, МенеджерВременныхТаблиц, Отказ, ЭлементКоллекции);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект, Структура - записываемый документ, содержит:
//  	* ДополнительныеСвойства - Структура:
//  		** ПроведениеДокументов - Структура:
//  			*** СвойстваДокумента - ФиксированнаяСтруктура:
//  				**** ЭтоНовый - Булево
//  				**** РежимЗаписи - РежимЗаписиДокумента
//  				**** РежимПроведения - РежимПроведенияДокумента
//  				**** Проведен - Булево
//  			*** ТаблицыКонтроля - Структура:
//  				**** ДвиженияТоварыОрганизацийИзменение - Структура:
//  					***** ЕстьЗаписиВТаблице - Булево
//  					***** Параметры - Структура:
//  						****** МинимальныйПериод - Дата
//  		** ДвиженияТоварыКОформлениюДокументовИмпортаИзменение - Произвольный
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	ПараметрыЗаполненияВидовЗапасов =
		ПараметрыЗаполненияВидовЗапасовПоДополнительнымСвойствам(Документ, ПроведениеДокументов.МенеджерВременныхТаблицКонтроля(Документ));
	
	#Область ТоварыОрганизаций
	
	ЕстьТаблицаОстатков = ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияТоварыОрганизацийИзменение");
	ЕстьТаблицаРезервов = ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияРезервыТоваровОрганизацийИзменение");
	
	ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию =
		ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(ПараметрыЗаполненияВидовЗапасов);
	
	Если Не Документ.ДополнительныеСвойства.Свойство("ОтказПриЗаполненииВидовЗапасов")
		И Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию
		И (ЕстьТаблицаОстатков Или ЕстьТаблицаРезервов) Тогда
		
		Если ЕстьТаблицаОстатков Тогда
			ПараметрыТаблицыКонтроля = Документ.ДополнительныеСвойства.ПроведениеДокументов.ТаблицыКонтроля.ДвиженияТоварыОрганизацийИзменение;
			МинимальныйПериод = ПараметрыТаблицыКонтроля.Параметры.МинимальныйПериод;
		Иначе
			МинимальныйПериод = ДатаАктуальныхОстатков();
		КонецЕсли;
		
		Если ЕстьТаблицаОстатков И ЕстьТаблицаРезервов Тогда
			
			ТекстЗапросаВТОтборыКонтроля =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	ВложенныйЗапрос.Организация КАК Организация,
			|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
			|	ВложенныйЗапрос.НомерГТД КАК НомерГТД
			|ПОМЕСТИТЬ ВТОтборыКонтроляКорректностиДвижений
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТаблицаИзменений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|		ТаблицаИзменений.Организация КАК Организация,
			|		ТаблицаИзменений.ВидЗапасов КАК ВидЗапасов,
			|		ТаблицаИзменений.НомерГТД КАК НомерГТД
			|	ИЗ
			|		ДвиженияТоварыОрганизацийИзменение КАК ТаблицаИзменений
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
			|			ПО ТаблицаИзменений.ВидЗапасов = ВидыЗапасов.Ссылка
			|		
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
			|			ПО ТаблицаИзменений.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
			|			
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СправочникНазначения
			|			ПО КлючиАналитики.Назначение = СправочникНазначения.Ссылка
			|	ГДЕ
			|		НЕ ВидыЗапасов.ТипЗапасов В (&НеконтролируемыеТипыЗапасов)
			|		И (
			|			(
			|			НЕ ЕСТЬNULL(ТаблицаИзменений.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
			|				ИЛИ (ЕСТЬNULL(ТаблицаИзменений.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
			|					И ТаблицаИзменений.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
			|			ИЛИ НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
			|			ИЛИ НАЧАЛОПЕРИОДА(ТаблицаИзменений.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
			|			)
			|			И (
			|				НЕ &ИспользоватьРаздельноеОформлениеЗакупок
			|				ИЛИ (&ИспользоватьРаздельноеОформлениеЗакупок
			|					И (НЕ (ЕСТЬNULL(ТаблицаИзменений.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД, ЛОЖЬ)
			|						И ТаблицаИзменений.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)))
			|					)
			|			)
			|		)
			|		И (НЕ &ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала
			|			ИЛИ (&ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала
			|				И НЕ (ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа)
			|					И ЕСТЬNULL(СправочникНазначения.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала), ЛОЖЬ)
			|					)
			|				)
			|			)
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ТаблицаИзменений.АналитикаУчетаНоменклатуры,
			|		ТаблицаИзменений.Организация,
			|		ТаблицаИзменений.ВидЗапасов,
			|		ТаблицаИзменений.НомерГТД
			|	ИЗ
			|		ДвиженияРезервыТоваровОрганизацийИзменение КАК ТаблицаИзменений
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
			|			ПО ТаблицаИзменений.ВидЗапасов = ВидыЗапасов.Ссылка
			|	ГДЕ
			|		НЕ ВидыЗапасов.ТипЗапасов В (&НеконтролируемыеТипыЗапасов)) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
			|	ВложенныйЗапрос.ВидЗапасов,
			|	ВложенныйЗапрос.Организация,
			|	ВложенныйЗапрос.НомерГТД
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ВложенныйЗапрос.ВидЗапасов,
			|	ВложенныйЗапрос.НомерГТД,
			|	ВложенныйЗапрос.Организация,
			|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры";
			
		ИначеЕсли ЕстьТаблицаОстатков Тогда
			
			ТекстЗапросаВТОтборыКонтроля =
			"ВЫБРАТЬ
			|	ТаблицаИзменений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	ТаблицаИзменений.Организация КАК Организация,
			|	ТаблицаИзменений.ВидЗапасов КАК ВидЗапасов,
			|	ТаблицаИзменений.НомерГТД КАК НомерГТД
			|ПОМЕСТИТЬ ВТОтборыКонтроляКорректностиДвижений
			|ИЗ
			|	ДвиженияТоварыОрганизацийИзменение КАК ТаблицаИзменений
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
			|		ПО ТаблицаИзменений.ВидЗапасов = ВидыЗапасов.Ссылка
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
			|		ПО ТаблицаИзменений.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СправочникНазначения
			|		ПО КлючиАналитики.Назначение = СправочникНазначения.Ссылка
			|ГДЕ
			|	НЕ ВидыЗапасов.ТипЗапасов В (&НеконтролируемыеТипыЗапасов)
			|	И (
			|		(
			|		НЕ ЕСТЬNULL(ТаблицаИзменений.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
			|			ИЛИ (ЕСТЬNULL(ТаблицаИзменений.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
			|				И ТаблицаИзменений.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
			|		ИЛИ НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
			|		ИЛИ НАЧАЛОПЕРИОДА(ТаблицаИзменений.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
			|		)
			|			И (
			|				НЕ &ИспользоватьРаздельноеОформлениеЗакупок
			|				ИЛИ (&ИспользоватьРаздельноеОформлениеЗакупок
			|					И (НЕ (ЕСТЬNULL(ТаблицаИзменений.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД, ЛОЖЬ)
			|						И ТаблицаИзменений.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)))
			|					)
			|			)
			|	)
			|	И (НЕ &ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала
			|		ИЛИ (&ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала
			|			И НЕ (ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа)
			|				И ЕСТЬNULL(СправочникНазначения.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала), ЛОЖЬ)
			|				)
			|			)
			|		)";
			
		ИначеЕсли ЕстьТаблицаРезервов Тогда
			
			ТекстЗапросаВТОтборыКонтроля =
			"ВЫБРАТЬ
			|	ТаблицаИзменений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	ТаблицаИзменений.Организация КАК Организация,
			|	ТаблицаИзменений.ВидЗапасов КАК ВидЗапасов,
			|	ТаблицаИзменений.НомерГТД КАК НомерГТД
			|ПОМЕСТИТЬ ВТОтборыКонтроляКорректностиДвижений
			|ИЗ
			|	ДвиженияРезервыТоваровОрганизацийИзменение КАК ТаблицаИзменений
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
			|		ПО ТаблицаИзменений.ВидЗапасов = ВидыЗапасов.Ссылка
			|ГДЕ
			|	НЕ ВидыЗапасов.ТипЗапасов В (&НеконтролируемыеТипыЗапасов)
			|";
			
		КонецЕсли;
		
		УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
		
		ТекстыЗапроса.Добавить(ТекстЗапросаВТОтборыКонтроля); //ВТОтборыКонтроляКорректностиДвижений
		
		ШаблонЗапросаОстаткаМесяца =
		"ВЫБРАТЬ
		|	&ПериодДата КАК Период,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизацийОстатки.Организация КАК Организация,
		|	ТоварыОрганизацийОстатки.ВидЗапасов КАК ВидЗапасов,
		|	ТоварыОрганизацийОстатки.НомерГТД КАК НомерГТД,
		|	0 КАК РезервОстаток,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ТоварыОрганизацийОстатки.КОформлениюСписанияОстаток КАК КОформлениюСписанияОстаток
		|ПОМЕСТИТЬ ВТОстаткиТоваровОрганизацийПоМесяцам
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			&ПериодГраница,
		|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД) В
		|				(ВЫБРАТЬ
		|					Отбор.АналитикаУчетаНоменклатуры,
		|					Отбор.Организация,
		|					Отбор.ВидЗапасов,
		|					Отбор.НомерГТД
		|				ИЗ
		|					ВТОтборыКонтроляКорректностиДвижений КАК Отбор)) КАК ТоварыОрганизацийОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ПериодДата,
		|	РезервыТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизацийОстатки.Организация,
		|	РезервыТоваровОрганизацийОстатки.ВидЗапасов,
		|	РезервыТоваровОрганизацийОстатки.НомерГТД,
		|	РезервыТоваровОрганизацийОстатки.КоличествоОстаток,
		|	0,
		|	0
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
		|			&ПериодГраница,
		|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД) В
		|				(ВЫБРАТЬ
		|					Отбор.АналитикаУчетаНоменклатуры,
		|					Отбор.Организация,
		|					Отбор.ВидЗапасов,
		|					Отбор.НомерГТД
		|				ИЗ
		|					ВТОтборыКонтроляКорректностиДвижений КАК Отбор)) КАК РезервыТоваровОрганизацийОстатки";
		
		МинимальныйПериод = КонецМесяца(Мин(МинимальныйПериод, ДатаПервогоРезерва(МинимальныйПериод)));
		КонецТекущегоМесяца = КонецМесяца(ТекущаяДатаСеанса());
		
		// Больше трех лет не контролируем, чтобы не превысить количество таблиц в запросе.
		ТриГодаНазад = КонецМесяца(ДобавитьМесяц(КонецТекущегоМесяца, -36)); 
		Если МинимальныйПериод < ТриГодаНазад Тогда
			МинимальныйПериод = ТриГодаНазад;
		ИначеЕсли МинимальныйПериод > КонецТекущегоМесяца Тогда
			МинимальныйПериод = КонецТекущегоМесяца;
		КонецЕсли;
		
		ОбрабатываемыйМесяц = КонецМесяца(ДобавитьМесяц(ДатаПоследнегоДвижения(), -1));
		
		ТекстыЗапросовОстатковПоМесяцам = Новый Массив;
		
		Счетчик = 0;
		
		Пока ОбрабатываемыйМесяц >= МинимальныйПериод Цикл
			
			ТекстЗапросаОстаткаМесяца = СтрЗаменить(ШаблонЗапросаОстаткаМесяца, "&ПериодДата", "&ПериодДата" + Строка(Счетчик));
			ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "&ПериодГраница", "&ПериодГраница" + Строка(Счетчик));
			Если Счетчик > 0 Тогда
				ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "ПОМЕСТИТЬ ВТОстаткиТоваровОрганизацийПоМесяцам", "");
			КонецЕсли;
			ТекстыЗапросовОстатковПоМесяцам.Добавить(ТекстЗапросаОстаткаМесяца);
			
			Запрос.УстановитьПараметр("ПериодДата" + Строка(Счетчик), ОбрабатываемыйМесяц);
			Запрос.УстановитьПараметр("ПериодГраница" + Строка(Счетчик), Новый Граница(ОбрабатываемыйМесяц, ВидГраницы.Включая));
			
			Счетчик = Счетчик + 1;
			ОбрабатываемыйМесяц = КонецМесяца(ДобавитьМесяц(ОбрабатываемыйМесяц, -1));
			
		КонецЦикла;
		
		ТекстЗапросаОстаткаМесяца = СтрЗаменить(ШаблонЗапросаОстаткаМесяца, "&ПериодДата", "&ПериодДата" + Строка(Счетчик));
		ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "&ПериодГраница", "");
		Если Счетчик > 0 Тогда
			ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "ПОМЕСТИТЬ ВТОстаткиТоваровОрганизацийПоМесяцам", "");
		КонецЕсли;
		ТекстыЗапросовОстатковПоМесяцам.Добавить(ТекстЗапросаОстаткаМесяца);
		
		ТекстыЗапроса.Добавить(СтрСоединить(ТекстыЗапросовОстатковПоМесяцам,
			ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()));// ВТОстаткиТоваровОрганизацийПоМесяцам
		
		ТекстЗапросаКонтроля =
		"ВЫБРАТЬ
		|	ОстаткиПоМесяцам.Период КАК Период,
		|	ОстаткиПоМесяцам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК МестоХранения,
		|	ОстаткиПоМесяцам.Организация КАК Организация,
		|	ОстаткиПоМесяцам.ВидЗапасов КАК ВидЗапасов,
		|	ОстаткиПоМесяцам.НомерГТД КАК НомерГТД,
		|	СУММА(ОстаткиПоМесяцам.КоличествоОстаток) КАК КоличествоОстаток,
		|	СУММА(ОстаткиПоМесяцам.РезервОстаток) КАК РезервОстаток,
		|	СУММА(ОстаткиПоМесяцам.КОформлениюСписанияОстаток) КАК КОформлениюСписанияОстаток
		|ИЗ
		|	ВТОстаткиТоваровОрганизацийПоМесяцам КАК ОстаткиПоМесяцам
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ОстаткиПоМесяцам.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоМесяцам.АналитикаУчетаНоменклатуры,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения,
		|	ОстаткиПоМесяцам.Организация,
		|	ОстаткиПоМесяцам.ВидЗапасов,
		|	ОстаткиПоМесяцам.НомерГТД,
		|	ОстаткиПоМесяцам.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	НомерГТД,
		|	Период";
		
		ПараметрыЗаполненияВидовЗапасовЗаданы =
			ТипЗнч(ПараметрыЗаполненияВидовЗапасов) = Тип("Структура");
		ИспользоватьРаздельноеОформлениеЗакупок =
			?(ПараметрыЗаполненияВидовЗапасовЗаданы,
				ПараметрыЗаполненияВидовЗапасов.ИспользоватьРаздельноеОформлениеЗакупок,
				Ложь);
		ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала = 
			?(ПараметрыЗаполненияВидовЗапасовЗаданы,
				ПараметрыЗаполненияВидовЗапасов.ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала,
				Ложь);
		
		Запрос.УстановитьПараметр("ПериодДата" + Строка(Счетчик), ДатаАктуальныхОстатков());
		Запрос.УстановитьПараметр("НеконтролируемыеТипыЗапасов", НеконтролируемыеТипыЗапасов());
		Запрос.УстановитьПараметр("ИспользоватьРаздельноеОформлениеЗакупок", ИспользоватьРаздельноеОформлениеЗакупок);
		Запрос.УстановитьПараметр("ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала",
									ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала);
		
		ТекстыЗапроса.Добавить(ТекстЗапросаКонтроля, "ОшибкиТоварыОрганизацийРезервыСводно");
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	#Область ТоварыОрганизаций
	
	Если Не Документ.ДополнительныеСвойства.Свойство("ОтказПриЗаполненииВидовЗапасов")
		И (ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияТоварыОрганизацийИзменение")
			Или ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияРезервыТоваровОрганизацийИзменение"))
		И РезультатыКонтроля.Свойство("ОшибкиТоварыОрганизацийРезервыСводно")
		И ЗначениеЗаполнено(РезультатыКонтроля.ОшибкиТоварыОрганизацийРезервыСводно) Тогда
		
		СтрокиОшибок = РезультатыКонтроля.ОшибкиТоварыОрганизацийРезервыСводно;
		
		КонтролироватьОтрицательныеОстатки = Не ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций
			И Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
		ПерезаполнитьВидыЗапасов = Документ.ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов")
			И Документ.ДополнительныеСвойства.ПерезаполнитьВидыЗапасов;
		
		ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию =
			Документ.ДополнительныеСвойства.Свойство("ПараметрыЗаполненияВидовЗапасов")
			И ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(
				Документ.ДополнительныеСвойства.ПараметрыЗаполненияВидовЗапасов);
		
		ОтрицательныйОстаток = 0;
		ПокрывающийРезерв = 0;
		
		Индекс = 0;
		КоличествоСтрок = СтрокиОшибок.Количество();
		
		Пока Индекс < КоличествоСтрок Цикл
			
			СтрокаОшибки = СтрокиОшибок[Индекс];
			Индекс = Индекс + 1;
			
			Если Не ПерезаполнитьВидыЗапасов Тогда
				ОтрицательныйОстаток = Мин(СтрокаОшибки.КоличествоОстаток, ОтрицательныйОстаток);
				ПокрывающийРезерв = Макс(СтрокаОшибки.РезервОстаток, ПокрывающийРезерв);
			КонецЕсли;
			
			// Проверка на отрицательный остаток.
			Если КонтролироватьОтрицательныеОстатки
				И СтрокаОшибки.КоличествоОстаток + СтрокаОшибки.РезервОстаток < 0
				И Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию Тогда
				
				ТекстСообщения = НСтр("ru = 'По организации %Организация% на %Месяц% обнаружен отрицательный остаток %Количество% %ЕдиницаИзмерения% товара %Товар% в месте хранения %МестоХранения%'");
				
				Если СтрокаОшибки.Период = ДатаАктуальныхОстатков() Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Месяц%", НСтр("ru = 'дату актуальности остатков'"));
				КонецЕсли;
				
				ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОрганизацийИРезервам(
					ТекстСообщения, Документ.Ссылка, СтрокаОшибки);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СтрокаОшибки.КоличествоОстаток + СтрокаОшибки.РезервОстаток);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СтрокаОшибки.ЕдиницаИзмерения);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", СтрокаОшибки.Номенклатура);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%МестоХранения%", СтрокаОшибки.МестоХранения);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,,, Отказ);
				
			КонецЕсли;
			
			Если КонтролироватьОтрицательныеОстатки 
				И СтрокаОшибки.КОформлениюСписанияОстаток < 0 Тогда
				
				ТекстСообщения = НСтр("ru = 'По организации %Организация% на %Месяц% обнаружен отрицательный остаток к оформлению списания %Количество% %ЕдиницаИзмерения% товара %Товар% в месте хранения %МестоХранения%'");
				
				Если СтрокаОшибки.Период = ДатаАктуальныхОстатков() Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Месяц%", НСтр("ru = 'дату актуальности остатков'"));
				КонецЕсли;
				
				ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОрганизацийИРезервам(
					ТекстСообщения, Документ.Ссылка, СтрокаОшибки);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СтрокаОшибки.КОформлениюСписанияОстаток);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СтрокаОшибки.ЕдиницаИзмерения);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", СтрокаОшибки.Номенклатура);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%МестоХранения%", СтрокаОшибки.МестоХранения);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,,, Отказ);
				
			КонецЕсли;
			
			Если Индекс = КоличествоСтрок
				Или СтрокаОшибки.Организация <> СтрокиОшибок[Индекс].Организация
				Или СтрокаОшибки.АналитикаУчетаНоменклатуры <> СтрокиОшибок[Индекс].АналитикаУчетаНоменклатуры
				Или СтрокаОшибки.ВидЗапасов <> СтрокиОшибок[Индекс].ВидЗапасов
				Или СтрокаОшибки.НомерГТД <> СтрокиОшибок[Индекс].НомерГТД Тогда
			
				// Общая проверка лишнего резерва по всем периодам.
				Если ОтрицательныйОстаток + ПокрывающийРезерв > 0 Тогда
					ТекстСообщения = НСтр("ru = 'При записи %Регистратор% в регистры %Регистр1% и %Регистр2%
					|обнаружен лишний резерв по измерениям: %Организация% - %АналитикаНоменклатуры% - %ВидЗапасов% - %НомерГТД%, лишний резерв %Дельта%.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистр2%", "РезервыТоваровОрганизаций");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистр1%", "ТоварыОрганизаций");
					
					ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОрганизацийИРезервам(ТекстСообщения, Документ.Ссылка, СтрокаОшибки);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Дельта%", ОтрицательныйОстаток + ПокрывающийРезерв);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,,, Отказ);
				КонецЕсли;
				
				ОтрицательныйОстаток = 0;
				ПокрывающийРезерв = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

// Возвращает имя временной таблицы регистра накопления 'РезервыТоваровОрганизаций'.
//
// Возвращаемое значение:
//	Строка - имя временной таблицы регистра накопления 'РезервыТоваровОрганизаций'.
//
Функция ИмяТаблицыРезервыТоваровОрганизаций() Экспорт
	
	ИмяТаблицы = "Таблица" + "РезервыТоваровОрганизаций";
	
	Возврат ИмяТаблицы;
	
КонецФункции

#КонецОбласти

#Область ПроверкаНеобходимостиЗаполненияВидовЗапасов

// Процедура проверяет изменение реквизитов в документе.
//
// Параметры:
// 	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
// 	Ссылка - ДокументСсылка - 
// 	ИменаРеквизитов - Строка - 
// 	
// Возвращаемое значение:
// 	Булево - Описание
//
Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК РеквизитыИзменены
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ &Документ КАК СохраненныеДанные
	|		ПО СохраненныеДанные.Ссылка = &Ссылка
	|ГДЕ
	|	СохраненныеДанные.Ссылка ЕСТЬ NULL
	|	ИЛИ &ТекстУсловие";
	
	ТекстУсловие = "";
	
	Для Каждого КлючИЗначение Из Новый Структура(ИменаРеквизитов) Цикл
		ТекстУсловие = ТекстУсловие + "
			|	ИЛИ ДанныеДокумента." + КлючИЗначение.Ключ + " <> СохраненныеДанные." + КлючИЗначение.Ключ;
	КонецЦикла;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Документ", "Документ." + Ссылка.Метаданные().Имя);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИЛИ &ТекстУсловие", ТекстУсловие);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц -
//
// Возвращаемое значение:
//	Булево - Истина, товарный состав документа изменился.
//
Функция ПроверитьИзменениеТоваровПоКоличеству(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.Количество КАК Количество
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц -
//
// Возвращаемое значение:
//	Булево - Истина - товары изменены.
//
Функция ПроверитьИзменениеТоваровПоКоличествуИСумме(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТоваров.Количество КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Номенклатура.ТипНоменклатуры  В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|		-ТаблицаВидыЗапасов.СуммаВознаграждения КАК СуммаВознаграждения,
	|		-ТаблицаВидыЗапасов.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаВознаграждения) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

// Проверяет необходимость принудительного перезаполнения видов запасов и устанавливает соответствующий параметр
// запроса.
//
// Параметры:
//	ДокументОбъектИлиДопСвойства - ДокументОбъект, Структура - объект документа или дополнительные свойства документа.
//	Запрос - Запрос - запрос обращения к ИБ.
//
// Возвращаемое значение:
//	Булево - Истина, необходимо перезаполнить виды запасов.
//
Функция ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДокументОбъектИлиДопСвойства, Запрос = Неопределено) Экспорт
	
	ИмяДопСвойства = ИмяДопСвойстваДляПерезаполненияВидовЗапасов();
	
	ПерезаполнитьВидыЗапасов = ?(ТипЗнч(ДокументОбъектИлиДопСвойства) = Тип("Структура"),
								ДокументОбъектИлиДопСвойства.Свойство(ИмяДопСвойства),
								ДокументОбъектИлиДопСвойства.ДополнительныеСвойства.Свойство(ИмяДопСвойства));
	
	Если Запрос <> Неопределено Тогда
		Запрос.УстановитьПараметр(ИмяДопСвойства, ПерезаполнитьВидыЗапасов);
	КонецЕсли;
	
	Возврат ПерезаполнитьВидыЗапасов;
	
КонецФункции

// Дополняет временные таблицы обязательными колонками, требующихся для корректного заполнения видов запасов.
//
// Параметры:
//	Запрос - Запрос - запрос, который содержит описание временных таблиц.
//
Процедура ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос) Экспорт
	
	ОписаниеТаблиц = ОписаниеТаблицСОбязательнымиКолонками();
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	
	Для Каждого ЗапросСхемы Из СхемаЗапроса.ПакетЗапросов Цикл
		
		Если ТипЗнч(ЗапросСхемы) = Тип("ЗапросУничтоженияТаблицыСхемыЗапроса") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЗапросСхемы.ТаблицаДляПомещения) Тогда
			Продолжить;
		КонецЕсли;
		
		// Если источник запроса берется из параметра, то добавим служебную временную
		// таблицу, чтобы была возможность выбирать значения НЕОПРЕДЕЛЕНО.
		Если ОписаниеТаблиц.Свойство(ЗапросСхемы.ТаблицаДляПомещения) Тогда
			
			Если ЗапросСхемы.Операторы[0].Источники.Количество()
				И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЗапросСхемы.Операторы[0].Источники[0].Источник, "ИмяТаблицы")
				И СтрНайти(ЗапросСхемы.Операторы[0].Источники[0].Источник.ИмяТаблицы, "&") <> 0 Тогда
				
				ТаблицаДляПомещения = ЗапросСхемы.ТаблицаДляПомещения;
				ЗапросСхемы.ТаблицаДляПомещения = ТаблицаДляПомещения + "СлужебнаяВТ";
				
				НовыйЗапросСхемы = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса"));
				НовыйЗапросСхемы.ТаблицаДляПомещения = ТаблицаДляПомещения;
				НовыйЗапросСхемы.Операторы[0].Источники.Добавить(ТаблицаДляПомещения + "СлужебнаяВТ");
				
				ДоступныеПоля = НовыйЗапросСхемы.Операторы[0].Источники[0].Источник.ДоступныеПоля;
				
				Для Каждого ДоступноеПоле Из ДоступныеПоля Цикл
					НовыйЗапросСхемы.Операторы[0].ВыбираемыеПоля.Добавить(ТаблицаДляПомещения + "СлужебнаяВТ."
																			+ ДоступноеПоле.Имя);
				КонецЦикла;
				
				СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса")).ИмяТаблицы =
					ТаблицаДляПомещения + "СлужебнаяВТ";
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОписаниеТаблицы = Неопределено;
		
		Если ОписаниеТаблиц.Свойство(ЗапросСхемы.ТаблицаДляПомещения, ОписаниеТаблицы) Тогда
			Для Каждого ОписаниеКолонки Из ОписаниеТаблицы Цикл
				Если ЗапросСхемы.Колонки.Найти(ОписаниеКолонки.Ключ) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Для Каждого Оператор Из ЗапросСхемы.Операторы Цикл
					Поле = Оператор.ВыбираемыеПоля.Добавить(ОписаниеКолонки.Значение);
				КонецЦикла;
				
				Колонка = ЗапросСхемы.Колонки.Найти(Поле);
				Колонка.Псевдоним = ОписаниеКолонки.Ключ;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеВидовЗапасов

// Возвращает структуру, которая используется при заполнении видов запасов.
// В структуре описываются основные отборы видов запасов и варианты контроля.
//
// Возвращаемое значение:
//	Структура - описание:
//		* ИмяТЧВидыЗапасов - Строка - имя табличной части документа, в которую будут добавлены подобранные виды запасов.
//		* ТаблицаВидыЗапасов - Неопределено, ТаблицаЗначений - таблица, в которую будут добавлены подобранные виды запасов.
//																Если определено,  то виды запасов будут добавлены только
//																в таблицу значений, а не в табличную часть.
//																Описание таблицы:
//			** АналитикаУчетаНоменклатуры - СправочникСсылка.КлючиАналитикиУчетаНоменклатуры.
//			** ВидЗапасов - СправочникСсылка.ВидыЗапасов.
//			** НомерГТД - СправочникСсылка.НомераГТД.
//			** Склад - СправочникСсылка.Склады.
//			** Количество - Число.
//			** КоличествоПоРНПТ - Число.
//			** СуммаСНДС - Число.
//			** СуммаНДС - Число.
//			** СтавкаНДС - СправочникСсылка.СтавкиНДС.
//			** СуммаВознаграждения - Число.
//			** СуммаНДСВознаграждения - Число.
//			** АналитикаУчетаНоменклатурыОтгрузки - СправочникСсылка.КлючиАналитикиУчетаНоменклатуры.
//			** ВидЗапасовОтгрузки - СправочникСсылка.ВидыЗапасов.
//			** КорВидЗапасов - СправочникСсылка.ВидыЗапасов.
//			** ДокументПередачи - Неопределено.
//			** ЗаказКлиента - Неопределено.
//		* ИмяПоляОрганизация - Строка - имя реквизита в документе, в котором хранится организация.
//		* ДоступныеВидыЗапасовУжеСформированы - Булево - показывает отсутствие необходимости формирования ВТ ДоступныеВидыЗапасов.
//		* ТаблицаОстатковУжеСформирована - Булево - в редких случаях таблица остатков, по которой нужно заполнять
//													виды запасов может быть сформирована заранее в вызывающем коде.
//		* ПодбиратьВидыЗапасовПоИнтеркампани - Булево - разрешает необходимость потребления видов запасов
//														по схеме интеркампани.
//		* ПриПодбореПоИнтеркампаниИсключатьОрганизации - Массив из СправочникСсылка.Организации - исключать организации.
//		* КорВидыЗапасов - Массив Из СправочникСсылка.ВидыЗапасов- коллекция видов запасов.
//		* ДокументДелаетИПриходИРасход - Булево - признак того, что документ делает приходные и расходные движения.
//													Например: Документ.ПередачаТоваровМеждуОрганизациями.
//													В этом случае используется более сложный механизм
//													формирования резервов - резервы записываются один раз при обработке
//													всех видов движений.
//		* НалогообложениеНДС - Неопределено - тип налогообложения документа. Если не заполнено, то считается, что
//												оно не меняется.
//		* ОтборыВидовЗапасов - см. Справочники.ВидыЗапасов.ПараметрыОтбораВидовЗапасов.
//		* СообщатьОбОшибкахЗаполнения - Булево - признак необходимости вывода информационных сообщений пользователю.
//		* ИмяТаблицыОстатков - Строка - имя таблицы остатков.
//		* КоличествоПериодовПриФормированииРезервовОрганизаций - Число, Неопределено - заполняется при формировании
//																						остатков по источнику ТоварыОрганизаций.
//		* ПодбиратьЗапасыРазныхПериодов - Булево - разрешается документу использовать виды запасов из разных периодов.
//		* ТаблицаНовыеРезервы - Неопределено, ТаблицаЗначений - таблица сформированных резервов, содержащая следующие колонки:
//			** АналитикаУчетаНоменклатуры - СправочникСсылка.КлючиАналитикиУчетаНоменклатуры.
//			** Организация - СправочникСсылка.Организации.
//			** ВидЗапасов - СправочникСсылка.ВидыЗапасов.
//			** НомерГТД - СправочникСсылка.НомераГТД.
//			** ЭтоСторно - Булево.
//			** Количество - Число.
//			** КоличествоПоРНПТ - Число.
//		* ТаблицаСторноДвижений- Неопределено, ТаблицаЗначений - таблица сторнирующих движений резервов товаров организаций, содержащая следующие колонки:
//			** АналитикаУчетаНоменклатуры - СправочникСсылка.КлючиАналитикиУчетаНоменклатуры.
//			** Организация - СправочникСсылка.Организации.
//			** ВидЗапасов - СправочникСсылка.ВидыЗапасов.
//			** НомерГТД - СправочникСсылка.НомераГТД.
//			** ЭтоСторно - Булево.
//			** Количество - Число.
//			** КоличествоПоРНПТ - Число.
//		* БезОтбораПоНомерамГТД - Булево - признак необходимости отбора запасов в разрезе номеров ГТД.
//		* ПериодЗаполнения - Неопределено, Дата - если ПодбиратьЗапасыРазныхПериодов = Истина, то в этом параметре
//													передается, начиная с какого периода нужно перезаполнять виды запасов.
//		* ЕстьТаблицаПриходуемыхВидовЗапасов - Булево - признак, что нужно в таблицу остатков плюсовать таблицу видов
//														запасов из заполняемого документа т.е. документ при проведении
//														оприходует эти виды запасов, поэтому сам документ может их
//														и израсходовать уже.
//		* ИмяТаблицыПриходуемыхВидовЗапасов - Строка - имя временной таблицы, в которой лежат приходуемые при проведении
//														документом виды запасов, которые нужно учесть, когда выставлен
//														флаг ЕстьТаблицаПриходуемыхВидовЗапасов.
//		* ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение - Соответствие Из КлючИЗначение:
//			** Ключ - ПеречислениеСсылка.ТипыЗапасов - тип запасов.
//			** Значения - Строка - Значение Никогда, ПоНастройкамДоговора, ПоХозяйственнойОперации - если по остаткам подобрался вид запасов ТоварыПринятыеНаХранение
//															то в зависимости от флага он или подставится в ТЧ, или подставится собственный, а по типу запаса ключа
//															сформируется резерв. Если указано ПоХозяйственнойОперации - выбор действия зависит от хозяйственной операции в строке и определяется
//															параметром. Если настройка для типа запасов отсутствует, то он подставляется в ТЧ.
//		* ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации - Соответствие Из КлючИЗначение:
//			** Ключ - ПеречислениеСсылка.ТипыЗапасов - тип запасов.
//			**Значение - Соответствие Из КлючИЗначение:
//				*** Ключ - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция.
//				*** Значение - Строка - строка из списка значений параметра ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение.
//		* ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию - Неопределено - если не хватает остатков, то генерируется вид запасов по умолчанию. Значение "Ложь" игнорируется,
//																							если выключен Контроль остатков товаров организаций. Жесткий запрет при "Ложь" может быть задан при помощи
//																							дополнительного параметра ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию.
//																							При использовании этого параметра необходима ТаблицаРеквизитовВидовЗапасовПоУмолчанию.
//		* ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию - Булево - Уточняет, требуется ли игнорировать отключенный Контроль товаров организаций, если параметр
//																							ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию установлен в "Ложь".
//		* ВладелецТовараВШапке - Булево - используется для определения, откуда брать значения для генерации видов запасов - из ВТ ТаблицаДанныхДокумента, в которой лежат реквизиты шапки документа, или
//											из ТаблицаРеквизитовВидовЗапасовПоУмолчанию.
//		* ТаблицаРеквизитовВидовЗапасовПоУмолчанию - см. ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию.
//		* СторнируемыйДокумент - ДокументСсылка, Неопределено - ссылка на сторнируемый документ в ИБ, используемый
//																при подборе виды запасов в документ Исправление
//																или Сторно перед записью документа.
//		* ИспользоватьРаздельноеОформлениеЗакупок - Булево - используется для выполнения контроля остатков
//																Товаров организаций по раздельному оформлению закупок (двухходовке).
//		* ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала - Булево - используется для выполнения контроля остатков
//																			Товаров организаций по прослеживаемым
//																			работам в схеме закупок товаров под принципала.
//
Функция ПараметрыЗаполненияВидовЗапасов() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяТЧВидыЗапасов", "ВидыЗапасов");
	Результат.Вставить("ТаблицаВидыЗапасов", Неопределено);
	Результат.Вставить("ИмяПоляОрганизация", "Организация");
	
	Результат.Вставить("ДоступныеВидыЗапасовУжеСформированы", Ложь);
	Результат.Вставить("ТаблицаОстатковУжеСформирована", Ложь);
	
	Результат.Вставить("ПодбиратьВидыЗапасовПоИнтеркампани", Истина);
	Результат.Вставить("ПриПодбореПоИнтеркампаниИсключатьОрганизации", Новый Массив);
	Результат.Вставить("КорВидыЗапасов", Новый Массив);
	
	Результат.Вставить("ДокументДелаетИПриходИРасход", Ложь);
	
	Результат.Вставить("НалогообложениеНДС", Неопределено);
	Результат.Вставить("ОтборыВидовЗапасов", Справочники.ВидыЗапасов.ПараметрыОтбораВидовЗапасов());
	Результат.ОтборыВидовЗапасов.ТипЗапасов = Новый Массив;
	Результат.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	Результат.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	Результат.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
	
	Результат.Вставить("СообщатьОбОшибкахЗаполнения", Истина);
	Результат.Вставить("ИмяТаблицыОстатков", "ТоварыОрганизаций");
	Результат.Вставить("КоличествоПериодовПриФормированииРезервовОрганизаций", Неопределено);
	
	Результат.Вставить("ПодбиратьЗапасыРазныхПериодов", Ложь);
	Результат.Вставить("ПериодЗаполнения", Неопределено);
	Результат.Вставить("ЕстьТаблицаПриходуемыхВидовЗапасов", Ложь);
	Результат.Вставить("ИмяТаблицыПриходуемыхВидовЗапасов", "");
	
	Результат.Вставить("ТаблицаНовыеРезервы", Неопределено);
	Результат.Вставить("ТаблицаСторноДвижений", Неопределено);
	
	Результат.Вставить("БезОтбораПоНомерамГТД", Ложь);
	Результат.Вставить("ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение", Новый Соответствие);
	Результат.Вставить("ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации", Неопределено);
	
	Результат.Вставить("ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию", Неопределено);
	Результат.Вставить("ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию", Ложь);
	Результат.Вставить("ТаблицаРеквизитовВидовЗапасовПоУмолчанию", ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию());
	Результат.Вставить("ВладелецТовараВШапке", Истина);
	Результат.Вставить("СторнируемыйДокумент", Неопределено);
	
	Результат.Вставить("ИспользоватьРаздельноеОформлениеЗакупок", Ложь);
	Результат.Вставить("ПодбиратьСуммыПриНулевомКоличестве", Ложь);
	Результат.Вставить("ИгнорироватьПрослеживаемыеРаботыЗакупкиПодПринципала", Ложь);
	
	Возврат Результат;
	
КонецФункции

// Заполняет виды запасов в табличной части "Товары" документа поступления товаров.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - требуется временные таблица ИсходнаяТаблицаТоваров
//								(НомерСтроки, Номенклатура, Организация, ХозяйственнаяОперация, ТипЗапасов, Поставщик, 
//								Соглашение, Валюта, НалогообложениеНДС).
//	ТабличнаяЧастьТовары - ТабличнаяЧасть - Табличная часть документа.
//	ВидЗапасовДокумента - СправочникСсылка.ВидыЗапасов - Найденный вид запасов (возвращаемое значение).
//															Используется если параметр "ТабличнаяЧастьТовары" имеет 
//															значение Неопределено.
//	ИмяПоля - Строка - Имя поля в табличной части ТабличнаяЧастьТовары, в котором должны находиться виды запасов.
//	ЭтоПередачаТоваровМеждуОрганизациями - Булево - Признак того, что вызов идет из документа передачи товаров 
//													между организациями.
//		
Процедура ЗаполнитьВидыЗапасовПоУмолчанию(МенеджерВременныхТаблиц,
											ТабличнаяЧастьТовары,
											ВидЗапасовДокумента = Неопределено,
											ИмяПоля = "ВидЗапасов") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара,
	|	ВЫБОР
	|		КОГДА ДанныеНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа)
	|		КОГДА ТаблицаТоваров.ЭтоВозвратнаяТара
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ТаблицаТоваров.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|	ТаблицаТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ДанныеНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		КОГДА ТаблицаТоваров.ЭтоВозвратнаяТара
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		ИНАЧЕ ТаблицаТоваров.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Соглашение КАК Соглашение,
	|	ТаблицаТоваров.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ТаблицаТоваров.НалогообложениеНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ТаблицаТоваров.НалогообложениеОрганизации КАК НалогообложениеОрганизации,
	|	ВЫБОР ТаблицаТоваров.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВЫБОР ТаблицаТоваров.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР ТаблицаТоваров.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Договор
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА НЕ &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|				ИЛИ ДанныеНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ДанныеНоменклатуры.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.ГруппаПродукции КАК ГруппаПродукции,
	|	ТаблицаТоваров.ВидЦены КАК ВидЦены,
	|	ТаблицаТоваров.ТекущийВидЗапасов КАК ТекущийВидЗапасов
	|ПОМЕСТИТЬ ТаблицаТоваровСАналитикой
	|ИЗ
	|	ИсходнаяТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
	|ГДЕ
	|	ДанныеНоменклатуры.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Организация КАК Организация
	|ПОМЕСТИТЬ ОтборВидовЗапасов
	|ИЗ
	|	ТаблицаТоваровСАналитикой КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасовРезерва.Ссылка КАК Ссылка,
	|	ВидыЗапасовРезерва.Организация КАК Организация,
	|	ВидыЗапасовРезерва.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасовРезерва.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВидыЗапасовРезерва.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасовРезерва.Соглашение КАК Соглашение,
	|	ВидыЗапасовРезерва.Валюта КАК Валюта,
	|	ВидыЗапасовРезерва.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасовРезерва.Контрагент КАК Контрагент,
	|	ВидыЗапасовРезерва.Договор КАК Договор,
	|	ВидыЗапасовРезерва.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасовРезерва.ВидЦены КАК ВидЦены,
	|	ВидыЗапасовРезерва.Устаревший КАК Устаревший
	|ПОМЕСТИТЬ ВидыЗапасовРезерва
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасовРезерва
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборВидовЗапасов КАК Отбор
	|		ПО ВидыЗапасовРезерва.Организация = Отбор.Организация
	|ГДЕ
	|	НЕ ВидыЗапасовРезерва.ЭтоДубль
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипЗапасов,
	|	Соглашение,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки            КАК НомерСтроки,
	|	ТаблицаТоваров.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.ТипЗапасов             КАК ТипЗапасов,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара      КАК ЭтоВозвратнаяТара,
	|	ТаблицаТоваров.Организация            КАК Организация,
	|	ТаблицаТоваров.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Соглашение             КАК Соглашение,
	|	ТаблицаТоваров.Валюта                 КАК Валюта,
	|	ТаблицаТоваров.НалогообложениеНДС     КАК НалогообложениеНДС,
	|	ТаблицаТоваров.НалогообложениеОрганизации КАК НалогообложениеОрганизации,
	|	ТаблицаТоваров.ВладелецТовара         КАК ВладелецТовара,
	|	ТаблицаТоваров.Контрагент             КАК Контрагент,
	|	ТаблицаТоваров.Договор                КАК Договор,
	|	ТаблицаТоваров.ГруппаПродукции        КАК ГруппаПродукции,
	|	ТаблицаТоваров.ВидЦены                КАК ВидЦены,
	|	ВидыЗапасовРезерва.Ссылка             КАК ВидЗапасов
	|ИЗ
	|	ТаблицаТоваровСАналитикой КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовРезерва КАК ВидыЗапасовРезерва
	|		ПО ТаблицаТоваров.Организация = ВидыЗапасовРезерва.Организация
	|			И ТаблицаТоваров.ТипЗапасов = ВидыЗапасовРезерва.ТипЗапасов
	|			И ТаблицаТоваров.ВладелецТовара = ВидыЗапасовРезерва.ВладелецТовара
	|			И ТаблицаТоваров.Контрагент = ВидыЗапасовРезерва.Контрагент
	|			И ТаблицаТоваров.Соглашение = ВидыЗапасовРезерва.Соглашение
	|			И ТаблицаТоваров.Договор = ВидыЗапасовРезерва.Договор
	|			И ТаблицаТоваров.Валюта = ВидыЗапасовРезерва.Валюта
	|			И ТаблицаТоваров.ГруппаПродукции = ВидыЗапасовРезерва.ГруппаПродукции
	|			И ТаблицаТоваров.ВидЦены = ВидыЗапасовРезерва.ВидЦены
	|			И ТаблицаТоваров.НалогообложениеНДС = ВидыЗапасовРезерва.НалогообложениеНДС
	|			И ТаблицаТоваров.ГруппаФинансовогоУчета = ВидыЗапасовРезерва.ГруппаФинансовогоУчета
	|			И (ВЫБОР
	|					КОГДА ТаблицаТоваров.ТекущийВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|						ТОГДА НЕ ВидыЗапасовРезерва.Устаревший
	|					ИНАЧЕ ВидыЗапасовРезерва.Ссылка = ТаблицаТоваров.ТекущийВидЗапасов
	|				КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаФинансовогоУчета,
	|	ГруппаПродукции,
	|	ТипЗапасов,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборВидовЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВидыЗапасовРезерва";

	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ПоляКлюча	= "Организация, ВладелецТовара, НалогообложениеНДС, ГруппаФинансовогоУчета, ГруппаПродукции, ТипЗапасов, ЭтоВозвратнаяТара, Договор";
	КлючСтроки	= Новый Структура(ПоляКлюча);
	ВидЗапасов	= Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Организация <> КлючСтроки.Организация
			Или Выборка.ВладелецТовара <> КлючСтроки.ВладелецТовара
			Или Выборка.НалогообложениеНДС <> КлючСтроки.НалогообложениеНДС
			Или Выборка.ГруппаФинансовогоУчета <> КлючСтроки.ГруппаФинансовогоУчета
			Или Выборка.ГруппаПродукции <> КлючСтроки.ГруппаПродукции
			Или Выборка.ТипЗапасов <> КлючСтроки.ТипЗапасов
			Или Выборка.ЭтоВозвратнаяТара <> КлючСтроки.ЭтоВозвратнаяТара
			Или Выборка.Договор <> КлючСтроки.Договор Тогда
			
			ЗаполнитьЗначенияСвойств(КлючСтроки, Выборка);
			
			ВидЗапасов = Неопределено;
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВидЗапасов) Тогда
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				ВидЗапасов = Выборка.ВидЗапасов;
			Иначе
				Если ОбновлениеИнформационнойБазы.ЭтоВызовИзОбработчикаОбновления("Отложенно") Тогда
					ВызватьИсключение НСтр("ru = 'Создание новых видов запасов в режиме отложенного обновления запрещено.'");
				КонецЕсли;
				
				ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Выборка.Организация,
																		Выборка.ХозяйственнаяОперация,
																		Выборка);
			КонецЕсли;
		КонецЕсли;
		
		Если ТабличнаяЧастьТовары <> Неопределено Тогда
			СтрокаТаблицы = ТабличнаяЧастьТовары.Найти(Выборка.НомерСтроки, "НомерСтроки");
			СтрокаТаблицы[ИмяПоля]= ВидЗапасов;
		Иначе
			ВидЗапасовДокумента = ВидЗапасов;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет виды запасов в табличной части "ВидыЗапасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - требуется временные таблицы ТаблицаТоваров, ТаблицаВидыЗапасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//	ПроизводитсяОбновлениеИБ - Булево - Признак того, что вызов произведен из метода обновления объекта метаданных.
//		
Процедура ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ДокументОбъект,
													МенеджерВременныхТаблиц,
													Отказ,
													ПараметрыЗаполненияВидовЗапасов,
													ПроизводитсяОбновлениеИБ = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ТаблицаОстатковУжеСформирована
		И ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков <> "ТоварыОрганизаций"
		И ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков <> "ПереданныеМеждуОрганизациямиТовары" Тогда
		
		ТекстИсключения = НСтр("ru = 'Процедуру %1 можно вызывать только с таблицей остатков %2 или %3'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, "ЗаполнитьВидыЗапасовПоТоварамОрганизаций", "ТоварыОрганизаций", "ПереданныеМеждуОрганизациямиТовары");
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы Тогда
		ИмяТаблицы = ?(ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов,
						"ТаблицаВидыЗапасовПоПериодам",
						"ТаблицаВидыЗапасов");
		
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ИмяТаблицы);
	КонецЕсли;
	
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	СохранитьИсходныеДвиженияТоваровИРезервов(ДокументОбъект.Ссылка, МенеджерВременныхТаблиц);
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц,
												Истина,
												ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов);
	
	СозданиеСторноДокумента				= ЗначениеЗаполнено(ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент)
											И Не ЕстьЗаписиВоВременнойТаблице(МенеджерВременныхТаблиц,
																			"ДвиженияТоварыОрганизацийПередЗаписью");
	ФормироватьРезервыСторноДокумента	= СозданиеСторноДокумента;
	
	Если СозданиеСторноДокумента Тогда
		ДатаСторнируемогоДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
										ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент,
										"Дата");
		
		Если КонецМесяца(ДатаСторнируемогоДокумента) = КонецМесяца(ДокументОбъект.Дата) Тогда
			СохранитьДвиженияСторнируемогоДокумента(ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент,
													МенеджерВременныхТаблиц,
													"ТоварыОрганизаций");
			
			ФормироватьРезервыСторноДокумента = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ПроизводитсяОбновлениеИБ Тогда
		УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	КонецЕсли;
	
	СформироватьВТТоварыОрганизацийИзменения(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов);
	
	ИмяТаблицыРезервыТоваровОрганизаций = ИмяТаблицыРезервыТоваровОрганизаций();
	
	// Если не повторный запуск заполнения видов запасов
	Если Не ДокументОбъект.ДополнительныеСвойства.Свойство(ИмяТаблицыРезервыТоваровОрганизаций)
		И (// и не запуск из помощника исправления
			Не ДокументОбъект.ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов")
			Или Не ДокументОбъект.ДополнительныеСвойства.ПерезаполнитьВидыЗапасов) Тогда
		
		СформироватьВТСторноРезервов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		
		ЗаполнитьВидыЗапасовРазныхПериодов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											Отказ,
											ПараметрыЗаполненияВидовЗапасов);
		
	Иначе
		
		СформироватьВТТаблицаОстатков(ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков,
										ДокументОбъект,
										МенеджерВременныхТаблиц,
										ПараметрыЗаполненияВидовЗапасов,
										Истина);
		
		ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		Отказ,
																		ПараметрыЗаполненияВидовЗапасов);
		
	КонецЕсли;
	
	Если Отказ Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
		
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.ДополнительныеСвойства.Вставить(
		"ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми",
		Не ((СозданиеСторноДокумента
				И ФормироватьРезервыСторноДокумента)
			Или ПараметрыЗаполненияВидовЗапасов.ДокументДелаетИПриходИРасход));
	
	ТаблицаРезервыТоваровОрганизаций = ТаблицаРезервыТоваровОрганизаций(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		ПараметрыЗаполненияВидовЗапасов,
																		Истина);
	
	ДокументОбъект.ДополнительныеСвойства.Вставить(ИмяТаблицыРезервыТоваровОрганизаций, ТаблицаРезервыТоваровОрганизаций);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Заполняет виды запасов в табличной части "ВидыЗапасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц- требуется временные таблицы ТаблицаТоваров, ТаблицаВидыЗапасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//
Процедура ЗаполнитьВидыЗапасовПоКомиссионнымТоварамИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы Тогда
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											"ТаблицаВидыЗапасов");
	КонецЕсли;
	
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Ложь);
	
	УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	
	СформироватьВТТаблицаОстатков("КомиссионныеТоварыИнтеркампани",
									ДокументОбъект,
									МенеджерВременныхТаблиц,
									ПараметрыЗаполненияВидовЗапасов);
	
	ЗаполнитьВидыЗапасовПоТаблицеОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		Отказ,
																		ПараметрыЗаполненияВидовЗапасов);
	
	Если Не Отказ Тогда
		ДозаполнитьВидыЗапасовВОтчетахПоКомиссииИнтеркампани(ДокументОбъект,
															МенеджерВременныхТаблиц,
															Отказ,
															ПараметрыЗаполненияВидовЗапасов);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Отказ Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет виды запасов в табличной части "ВидыЗапасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц- требуется временные таблицы ТаблицаТоваров, ТаблицаВидыЗапасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//
Процедура ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ДокументОбъект,
													МенеджерВременныхТаблиц,
													Отказ,
													ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Неопределено Тогда
		ТекстИсключения = НСтр("ru = 'В вызывающем коде не задано значение параметра %1.'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, "ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков = "ТаблицаВидыЗапасов"
		И Не ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию Тогда
		
		ТекстИсключения = НСтр("ru = '%1 нужна для заполнения видов запасов по умолчанию, поэтому %2 должен быть выстален в ИСТИНА.'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, "ТаблицаВидыЗапасов", "ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ИменаВременныхТаблиц = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы Тогда
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											"ТаблицаВидыЗапасов");
	КонецЕсли;
	
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Ложь);
	
	УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	
	СформироватьВТТаблицаОстатков(ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков,
									ДокументОбъект,
									МенеджерВременныхТаблиц,
									ПараметрыЗаполненияВидовЗапасов);
	
	ЗаполнитьВидыЗапасовПоТаблицеОстатков(ДокументОбъект, 
											МенеджерВременныхТаблиц, 
											Отказ, 
											ПараметрыЗаполненияВидовЗапасов);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц, ,ИменаВременныхТаблиц);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Отказ Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
	КонецЕсли;
	
КонецПроцедуры

// При проведении документа определяется факт потребления "чужих" видов запасов и выполняется
// формирование движений по РН Резервы товаров организаций.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, используемых для формирования резервов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//
Процедура СформироватьРезервыПоТоварамОрганизаций(ДокументОбъект,
													МенеджерВременныхТаблиц,
													Отказ,
													ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	Если ОбновлениеИнформационнойБазы.ЭтоВызовИзОбработчикаОбновления() Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	
	Если ДополнительныеСвойства.Свойство("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми")
		И ДополнительныеСвойства.ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.НужноКонтролироватьОстаткиТоваровОрганизаций
		Или ДополнительныеСвойства.НужноФормироватьСторноПоРезервамТоваровОрганизаций Тогда
		
		// Сторно резервов вызываем один раз
		Если ДополнительныеСвойства.НужноФормироватьСторноПоРезервамТоваровОрганизаций
			И Не ДокументОбъект.ДополнительныеСвойства.Свойство("СформированоВтСторно") Тогда
			
			СформироватьВТСторноРезервов(ДокументОбъект, МенеджерВременныхТаблиц,  ПараметрыЗаполненияВидовЗапасов);
			
			ДокументОбъект.ДополнительныеСвойства.Вставить("СформированоВтСторно", Истина);
			
		КонецЕсли;
		
		Если ДополнительныеСвойства.НужноКонтролироватьОстаткиТоваровОрганизаций Тогда
			
			СформироватьРезервыПоОрганизациямДляКонтроля(ДокументОбъект,
														МенеджерВременныхТаблиц,
														Отказ,
														ПараметрыЗаполненияВидовЗапасов);
			
		КонецЕсли;
		
		Если Отказ Тогда
			ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
			
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ИмяТаблицыРезервыТоваровОрганизаций	= ИмяТаблицыРезервыТоваровОрганизаций();
	ТаблицаРезервыТоваровОрганизаций	= ТаблицаРезервыТоваровОрганизаций(ДокументОбъект,
																			МенеджерВременныхТаблиц,
																			ПараметрыЗаполненияВидовЗапасов,
																			Ложь);
	
	// Если документ делает и приход, и расход, то писать регистр нужно только тогда, когда по второй стороне
	// движений таблица уже сформирована.
	Если Не ПараметрыЗаполненияВидовЗапасов.ДокументДелаетИПриходИРасход
		Или ДокументОбъект.ДополнительныеСвойства.Свойство(ИмяТаблицыРезервыТоваровОрганизаций) Тогда
		
		НаборРезервыТоваровОрганизаций = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
		НаборРезервыТоваровОрганизаций.Отбор.Регистратор.Установить(ДокументОбъект.Ссылка);
		
		ПроведениеДокументов.УстановитьДопСвойстваРегистра(НаборРезервыТоваровОрганизаций,
															ДокументОбъект,
															МенеджерВременныхТаблиц,
															Истина);
		
		НаборРезервыТоваровОрганизаций.Загрузить(ТаблицаРезервыТоваровОрганизаций);
		НаборРезервыТоваровОрганизаций.Записать();
		
		Если ДокументОбъект.ДополнительныеСвойства.Свойство(ИмяТаблицыРезервыТоваровОрганизаций) Тогда
			ДокументОбъект.ДополнительныеСвойства[ИмяТаблицыРезервыТоваровОрганизаций].Очистить();
		КонецЕсли;
		
	Иначе
		
		ДокументОбъект.ДополнительныеСвойства.Вставить(ИмяТаблицыРезервыТоваровОрганизаций, ТаблицаРезервыТоваровОрганизаций);
		ДокументОбъект.ДополнительныеСвойства.Вставить("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми", Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

// При проведении документа формируется ВТ ДоступныеВидыЗапасов для использования в других механизмах контроля,
// ставятся необходимые блокировки.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, используемых для подготовки данных
//														запись в регистр.
//	РежимЗаписи - РежимЗаписиДокумента - Режим записи документа.
//	ПараметрыЗаполнения - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//
Процедура ПодготовитьЗаписьТоваровОрганизаций(ДокументОбъект,
												МенеджерВременныхТаблиц,
												РежимЗаписи,
												ПараметрыЗаполнения = Неопределено) Экспорт
	
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов();
		ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация = ДокументОбъект[ПараметрыЗаполнения.ИмяПоляОрганизация];
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми")
		И ДополнительныеСвойства.ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СохранитьИсходныеДвиженияТоваровИРезервов(ДокументОбъект.Ссылка, МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.Период		КАК Период,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Организация	КАК Организация,
	|	ТоварыОрганизаций.ВидЗапасов	КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД		КАК НомерГТД,
	|	ТоварыОрганизаций.Сторно		КАК Сторно,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ТоварыОрганизаций.Количество
	|		ИНАЧЕ -ТоварыОрганизаций.Количество
	|	КОНЕЦ							КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ -ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ТоварыОрганизаций
	|ИЗ
	|	&ТоварыОрганизаций КАК ТоварыОрганизаций";
	
	ТоварыОрганизаций = ?(РежимЗаписи = РежимЗаписиДокумента.Проведение,
							ДокументОбъект.Движения.ТоварыОрганизаций,
							РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки());
	
	Запрос.УстановитьПараметр("ТоварыОрганизаций", ТоварыОрганизаций);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
	СформироватьВТТоварыОрганизацийИзменения(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Если Не ПараметрыЗаполнения.ДоступныеВидыЗапасовУжеСформированы Тогда
		
		Организации = ОрганизацииДляКонтроляОстатков(МенеджерВременныхТаблиц);
		
		Если ЗначениеЗаполнено(ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация) Тогда
			Организации.Добавить(ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация);
			
			Организации = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Организации);
		КонецЕсли;
		
		ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация = Организации;
		
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполнения,
											"ДвиженияТоварыОрганизацийПередЗаписью");
		
	КонецЕсли;
	
	УстановитьДопСвойстваКонтролироватьОстаткиИФормироватьСторно(ДокументОбъект,
																ПараметрыЗаполнения,
																МенеджерВременныхТаблиц);
	
	Если ДополнительныеСвойства.НужноКонтролироватьОстаткиТоваровОрганизаций
		Или ДополнительныеСвойства.НужноФормироватьСторноПоРезервамТоваровОрганизаций Тогда
		
		СформироватьВтОтборыОстатковПоТаблицеИзменений(МенеджерВременныхТаблиц);
		УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
КонецПроцедуры

// Сохраняет в менеджере временных таблиц исходные движения по регистру Товары организаций.
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - Ссылка на документ.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, в который будет помещена таблица.
//	СоздаватьПустыеТаблицы - Булево - Истина, признак того, что нужно создавать пустые таблицы менеджера временных таблиц.
//
Процедура СохранитьИсходныеДвиженияТоваровИРезервов(ДокументСсылка,
													МенеджерВременныхТаблиц,
													СоздаватьПустыеТаблицы = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый Массив;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДвиженияТоварыОрганизацийПередЗаписью") = Неопределено Тогда
		
		Если СоздаватьПустыеТаблицы Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Товары.Период,
			|	Товары.Регистратор,
			|	Товары.НомерСтроки,
			|	Товары.Активность,
			|	Товары.ВидДвижения,
			|	Товары.АналитикаУчетаНоменклатуры,
			|	Товары.Организация,
			|	Товары.ВидЗапасов,
			|	Товары.НомерГТД,
			|	Товары.Количество,
			|	ВЫРАЗИТЬ(Товары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
			|	Товары.ХозяйственнаяОперация,
			|	Товары.НалогообложениеНДС,
			|	Товары.КорАналитикаУчетаНоменклатуры,
			|	Товары.КорВидЗапасов,
			|	Товары.ОрганизацияОтгрузки,
			|	Товары.ДокументРеализации,
			|	Товары.СтатьяРасходов,
			|	Товары.АналитикаРасходов,
			|	Товары.АналитикаАктивовПассивов,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.РасчетПартий,
			|	Товары.Первичное,
			|	Товары.Сторно,
			|	Товары.ТипНоменклатуры
			|ПОМЕСТИТЬ ДвиженияТоварыОрганизацийПередЗаписью
			|ИЗ
			|	&ТоварыОрганизаций КАК Товары";
			
			ТоварыОрганизаций = РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			ТоварыОрганизаций.Колонки.Добавить("ТипНоменклатуры", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНоменклатуры"));
			
			Запрос.УстановитьПараметр("ТоварыОрганизаций", ТоварыОрганизаций);
			
		Иначе
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Товары.Период,
			|	Товары.Регистратор,
			|	Товары.НомерСтроки,
			|	Товары.Активность,
			|	Товары.ВидДвижения,
			|	Товары.АналитикаУчетаНоменклатуры,
			|	Товары.Организация,
			|	Товары.ВидЗапасов,
			|	Товары.НомерГТД,
			|	Товары.Количество,
			|	ВЫБОР
			|		КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
			|				И НАЧАЛОПЕРИОДА(Товары.Период, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
			|			ТОГДА ВЫРАЗИТЬ(Товары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПоРНПТ,
			|	Товары.ХозяйственнаяОперация,
			|	Товары.НалогообложениеНДС,
			|	Товары.КорАналитикаУчетаНоменклатуры,
			|	Товары.КорВидЗапасов,
			|	Товары.ОрганизацияОтгрузки,
			|	Товары.ДокументРеализации,
			|	Товары.СтатьяРасходов,
			|	Товары.АналитикаРасходов,
			|	Товары.АналитикаАктивовПассивов,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.РасчетПартий,
			|	Товары.Первичное,
			|	Товары.Сторно КАК Сторно,
			|	СправочникНоменклатура.ТипНоменклатуры КАК ТипНоменклатуры
			|ПОМЕСТИТЬ ДвиженияТоварыОрганизацийПередЗаписью
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
			|		ПО (КлючиАналитикиУчетаНоменклатуры.Ссылка = Товары.АналитикаУчетаНоменклатуры)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО (СправочникНоменклатура.Ссылка = КлючиАналитикиУчетаНоменклатуры.Номенклатура)
			|ГДЕ
			|	Товары.Регистратор = &Ссылка";
			
		КонецЕсли;
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДвиженияРезервыТоварыОрганизацийПередЗаписью") = Неопределено Тогда
		
		Если СоздаватьПустыеТаблицы Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Резервы.Период,
			|	Резервы.Регистратор,
			|	Резервы.НомерСтроки,
			|	Резервы.Активность,
			|	Резервы.ВидДвижения,
			|	Резервы.АналитикаУчетаНоменклатуры,
			|	Резервы.Организация,
			|	Резервы.ВидЗапасов,
			|	Резервы.НомерГТД,
			|	Резервы.Количество,
			|	ВЫРАЗИТЬ(Резервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
			|	Резервы.КорОрганизация,
			|	Резервы.КорВидЗапасов
			|ПОМЕСТИТЬ ДвиженияРезервыТоварыОрганизацийПередЗаписью
			|ИЗ
			|	&РезервыТоваровОрганизаций КАК Резервы
			|ГДЕ
			|	Резервы.Регистратор = &Ссылка";
			
			РезервыТоваровОрганизаций = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			
			Запрос.УстановитьПараметр("РезервыТоваровОрганизаций", РезервыТоваровОрганизаций);
			
		Иначе
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Резервы.Период,
			|	Резервы.Регистратор,
			|	Резервы.НомерСтроки,
			|	Резервы.Активность,
			|	Резервы.ВидДвижения,
			|	Резервы.АналитикаУчетаНоменклатуры,
			|	Резервы.Организация,
			|	Резервы.ВидЗапасов,
			|	Резервы.НомерГТД,
			|	Резервы.Количество,
			|	ВЫБОР
			|		КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
			|				И НАЧАЛОПЕРИОДА(Резервы.Период, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
			|			ТОГДА ВЫРАЗИТЬ(Резервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПоРНПТ,
			|	Резервы.КорОрганизация,
			|	Резервы.КорВидЗапасов
			|ПОМЕСТИТЬ ДвиженияРезервыТоварыОрганизацийПередЗаписью
			|ИЗ
			|	РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
			|ГДЕ
			|	Резервы.Регистратор = &Ссылка";
			
		КонецЕсли;
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ТекстыЗапроса.Количество() > 0 Тогда
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Разделитель = "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.Текст = СтрСоединить(ТекстыЗапроса, Разделитель);
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
		
		УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры

// Метод формирует на основании отборов ВТ ДоступныеВидыЗапасов. Используются при построении таблицы остатков.
// Экспортируется для документа ВозвратСырьяДавальцу.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором будут заполняться виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц.
//														Для работы алгоритма необходима таблица ТаблицаТоваров.
//														Временная таблица ДоступныеВидыЗапасов формируется в процессе работы алгоритма и помещается в текущий менеджер.
//	ПараметрыЗаполненияВидовЗапасов - См. ПараметрыЗаполненияВидовЗапасов.
//	ИмяВТИсточникаТекущихВидовЗапасов - Строка - имя таблицы, в которой хранятся данные о текущих видах запасов документа.
//
Процедура СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ИмяВТИсточникаТекущихВидовЗапасов) Экспорт
	
	ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы = Истина;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДоступныеВидыЗапасов") <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтборыВидовЗапасов = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВидыЗапасовДокумента") <> Неопределено Тогда
		ТекстЗапроса =
		"УНИЧТОЖИТЬ ВидыЗапасовДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	Иначе
		ТекстЗапроса = "";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ВидыЗапасовДокумента
	|ИЗ
	|	&ИмяВТИсточникаТекущихВидовЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Виды запасов собственной организации
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.Организация КАК ДляОрганизации,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УстаревшиеВидыЗапасовСОстатками КАК УстаревшиеВидыЗапасовСОстатками
	|		ПО ВидыЗапасов.Ссылка = УстаревшиеВидыЗапасовСОстатками.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовДокумента КАК ВидыЗапасовДокумента
	|		ПО ВидыЗапасов.Ссылка = ВидыЗапасовДокумента.ВидЗапасов
	|ГДЕ
	|	ВидыЗапасов.Организация В(
	|		&Организация,
	|		НЕОПРЕДЕЛЕНО)
	|	И (&ПоВсемТипамЗапасов
	|			ИЛИ ВидыЗапасов.ТипЗапасов В (&ТипЗапасов))
	|	И (&ПоВсемНалогообложениямНДС
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС В (&НалогообложениеНДС)
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			ИЛИ ВидыЗапасов.ТипЗапасов В(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа))) // собственный товар или работу можно продавать под любое налогообложение.
	|	И (&ПоВсемВладельцамТоваров
	|			ИЛИ ВидыЗапасов.ВладелецТовара В (&ВладелецТовара))
	|	И (&ПоВсемСоглашениям
	|			ИЛИ ВидыЗапасов.Соглашение В (&Соглашение))
	|	И (&ПоВсемВалютам
	|			ИЛИ ВидыЗапасов.Валюта В (&Валюта))
	|	И (&ПоВсемКонтрагентам
	|			ИЛИ ВидыЗапасов.Контрагент В (&Контрагент))
	|	И (&ПоВсемДоговорам
	|			ИЛИ ВидыЗапасов.Договор В (&Договор))
	|	И (&ПоВсемГруппамПродукции
	|			ИЛИ ВидыЗапасов.ГруппаПродукции В (&ГруппаПродукции))
	|	И (&ПоВсемВидамЦен
	|			ИЛИ ВидыЗапасов.ВидЦены В (&ВидЦены))
	|	И (НЕ ВидыЗапасов.Устаревший
	|				И НЕ ВидыЗапасов.ЭтоДубль
	|			ИЛИ НЕ УстаревшиеВидыЗапасовСОстатками.ВидЗапасов ЕСТЬ NULL
	|			ИЛИ НЕ ВидыЗапасовДокумента.ВидЗапасов ЕСТЬ NULL
	|			ИЛИ НЕ &ИсключатьУстаревшие)
	|
	|ОБЪЕДИНИТЬ
	|
	// Виды запасов по интеркампани
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.Организация,
	|	ВидыЗапасов.Ссылка
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО ВидыЗапасов.Организация = Настройка.ОрганизацияВладелец
	|			И ВидыЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УстаревшиеВидыЗапасовСОстатками КАК УстаревшиеВидыЗапасовСОстатками
	|		ПО ВидыЗапасов.Ссылка = УстаревшиеВидыЗапасовСОстатками.ВидЗапасов
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовДокумента КАК ВидыЗапасовДокумента
	|		ПО ВидыЗапасов.Ссылка = ВидыЗапасовДокумента.ВидЗапасов
	|ГДЕ
	|	&ПодбиратьВидыЗапасовПоИнтеркампани
	|	И НЕ ВидыЗапасов.Организация В (&ИнтеркампаниКроме)
	|	И Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)
	|	И Настройка.ОрганизацияПродавец В(&Организация)
	|	И (&ПоВсемТипамЗапасов
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|				И ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) В (&ТипЗапасов)
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|				И ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) В (&ТипЗапасов))
	|	И (&ПоВсемНалогообложениямНДС
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	// При комиссии контролируем налогообложение организации-владельца.
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|				И Настройка.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|				И ((Настройка.ОрганизацияВладелец В (&ОрганизацииБезНДС)
	|						И ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) В(&НалогообложениеНДС))
	|					ИЛИ (НЕ Настройка.ОрганизацияВладелец В (&ОрганизацииБезНДС)
	|						И ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) В(&НалогообложениеНДС)))
	// При субкомиссии контролируем налогообложение комитента.
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|				И Настройка.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				И ВидыЗапасов.НалогообложениеНДС В (&НалогообложениеНДС))
	|	И НЕ ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И (НЕ ВидыЗапасов.Устаревший
	|				И НЕ ВидыЗапасов.ЭтоДубль
	|			ИЛИ НЕ УстаревшиеВидыЗапасовСОстатками.ВидЗапасов ЕСТЬ NULL
	|			ИЛИ НЕ ВидыЗапасовДокумента.ВидЗапасов ЕСТЬ NULL
	|			ИЛИ НЕ &ИсключатьУстаревшие)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ПустаяСтрока(ИмяВТИсточникаТекущихВидовЗапасов) Тогда
		ПустаяТаблицаВидовЗапасов = Новый ТаблицаЗначений;
		ПустаяТаблицаВидовЗапасов.Колонки.Добавить("ВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
		
		Запрос.УстановитьПараметр("ИмяВТИсточникаТекущихВидовЗапасов", ПустаяТаблицаВидовЗапасов);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяВТИсточникаТекущихВидовЗапасов", ИмяВТИсточникаТекущихВидовЗапасов);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Дата", ДокументОбъект.Дата);
	
	Если ЗначениеЗаполнено(ОтборыВидовЗапасов.Организация) Тогда
		Организация = ОтборыВидовЗапасов.Организация;
	Иначе
		Организация = ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	
	ПодбиратьВидыЗапасовПоИнтеркампани	= ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями")
											И ПараметрыЗаполненияВидовЗапасов.ПодбиратьВидыЗапасовПоИнтеркампани;
	ИнтеркампаниКроме					= ?(ПодбиратьВидыЗапасовПоИнтеркампани,
											ПараметрыЗаполненияВидовЗапасов.ПриПодбореПоИнтеркампаниИсключатьОрганизации,
											Новый Массив);
	
	Запрос.УстановитьПараметр("ПодбиратьВидыЗапасовПоИнтеркампани", ПодбиратьВидыЗапасовПоИнтеркампани);
	Запрос.УстановитьПараметр("ИнтеркампаниКроме", ИнтеркампаниКроме);
	
	Запрос.УстановитьПараметр("ТипЗапасов", ОтборыВидовЗапасов.ТипЗапасов);
	Запрос.УстановитьПараметр("ПоВсемТипамЗапасов", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ТипЗапасов));
	
	КонтролироватьНалогообложениеНДС = КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов);
	
	Если КонтролироватьНалогообложениеНДС Тогда
		НалогообложениеНДС = ?(Перечисления.ТипыНалогообложенияНДС.ТипыСНДС().Найти(ОтборыВидовЗапасов.НалогообложениеНДС) <> Неопределено,
								Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС,
								Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		
		Запрос.УстановитьПараметр("НалогообложениеНДС", НалогообложениеНДС);
		Запрос.УстановитьПараметр("ПоВсемНалогообложениямНДС", Ложь);
	Иначе
		Запрос.УстановитьПараметр("НалогообложениеНДС", Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПоВсемНалогообложениямНДС", Истина);
	КонецЕсли;
	
	Если КонтролироватьНалогообложениеНДС
		И ПодбиратьВидыЗапасовПоИнтеркампани Тогда
		ОрганизацииБезНДС = УчетНДСУП.ОрганизацииБезНДС(ДокументОбъект.Дата);
	Иначе
		ОрганизацииБезНДС = Новый Массив;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОрганизацииБезНДС", ОрганизацииБезНДС);
	
	Запрос.УстановитьПараметр("ВладелецТовара", ОтборыВидовЗапасов.ВладелецТовара);
	Запрос.УстановитьПараметр("ПоВсемВладельцамТоваров", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ВладелецТовара));
	
	Запрос.УстановитьПараметр("Соглашение", ОтборыВидовЗапасов.Соглашение);
	Запрос.УстановитьПараметр("ПоВсемСоглашениям", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Соглашение));
	
	Запрос.УстановитьПараметр("Валюта", ОтборыВидовЗапасов.Валюта);
	Запрос.УстановитьПараметр("ПоВсемВалютам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Валюта));
	
	Запрос.УстановитьПараметр("Контрагент", ОтборыВидовЗапасов.Контрагент);
	Запрос.УстановитьПараметр("ПоВсемКонтрагентам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Контрагент));
	
	Запрос.УстановитьПараметр("Договор", ОтборыВидовЗапасов.Договор);
	Запрос.УстановитьПараметр("ПоВсемДоговорам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Договор));
	
	Запрос.УстановитьПараметр("ГруппаПродукции", ОтборыВидовЗапасов.ГруппаПродукции);
	Запрос.УстановитьПараметр("ПоВсемГруппамПродукции", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ГруппаПродукции));
	
	Запрос.УстановитьПараметр("ВидЦены", ОтборыВидовЗапасов.ВидЦены);
	Запрос.УстановитьПараметр("ПоВсемВидамЦен", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ВидЦены));
	
	Запрос.УстановитьПараметр("ИсключатьУстаревшие", ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков = "ТоварыОрганизаций");
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает типизированную таблицу значений, строки которой описывают значения реквизитов видов запасов,
// сформированную по данным документа.
//
// Параметры:
//	Запрос - Запрос - запрос для получения данных документа
//
// Возвращаемое значение:
//	см. ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию
//
Функция ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗапросом(Запрос) Экспорт
	
	Выборка		= Запрос.Выполнить().Выбрать();
	Результат	= ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Результат.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Дополняет доступные типы запасов товаров, используемые в параметрах отбора видов запасов, переданным значением.
//
// Параметры:
//	ОтборыВидовЗапасов - см. Справочники.ВидыЗапасов.ПараметрыОтбораВидовЗапасов.
//	ДанныеОтбора - ПеречислениеСсылка.ТипыЗапасов, Массив из ПеречислениеСсылка.ТипыЗапасов - новые доступные типы запасов товаров.
//
Процедура ДополнитьОтборВидовЗапасовПоТипуЗапасов(ОтборыВидовЗапасов, ДанныеОтбора) Экспорт
	
	ДоступныеТипыЗапасов = Новый Массив;
	
	Если ТипЗнч(ОтборыВидовЗапасов.ТипЗапасов) = Тип("Массив") Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеТипыЗапасов, ОтборыВидовЗапасов.ТипЗапасов);
	Иначе
		ДоступныеТипыЗапасов.Добавить(ОтборыВидовЗапасов.ТипЗапасов);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеОтбора) = Тип("Массив") Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеТипыЗапасов, ДанныеОтбора);
	Иначе
		ДоступныеТипыЗапасов.Добавить(ДанныеОтбора);
	КонецЕсли;
	
	ОтборыВидовЗапасов.ТипЗапасов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ДоступныеТипыЗапасов);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыРегламентныхЗаданий

// Выполняет запуск свертки сторно-записей регистра "Резервы товаров организаций".
// В результате удаляются лишние записи регистра.
Процедура ВыполнитьСверткуРезервовТоваровОрганизаций() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.СверткаРезервовТоваровОрганизаций);
	РегистрыНакопления.РезервыТоваровОрганизаций.ВыполнитьСверткуРегистраРезервыТоваровОрганизаций();
	
КонецПроцедуры

#КонецОбласти

#Область ПользовательскийИнтерфейс

// Устанавливаем условное оформление для подразделения, если используются виды запасов по подразделениям.
//
// Параметры:
// 		Форма - ФормаКлиентскогоПриложения - Содержит данную форму 
// 		ИмяПоляВводаПодразделения - Строка - Наименование элемента формы, содержащего подразделение,
//												если оно отличается от "Подразделение".
// 		ПутьКПолюОтбора - Строка - Полный путь к реквизиту "Подразделение",
//									если он отличается от "Объект.Подразделение".
//
Процедура УстановитьУсловноеОформлениеПодразделенияДляВидовЗапасов(Форма,
																	ИмяПоляВводаПодразделения = "Подразделение",
																	ПутьКПолюОтбора = "Объект.Подразделение") Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам") Тогда
		Возврат;
	КонецЕсли;
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаПодразделения].Имя);
	
	ЭлементыФормы[ИмяПоляВводаПодразделения].АвтоОтметкаНезаполненного = Истина;
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюОтбора);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

// Параметры редактирования данных табличной части видов запасов документа.
//
// Возвращаемое значение:
//	Структура - параметры редактирования табличной части видов запасов документа:
//		* ВидыЗапасовУказаныВручную - Булево - признак указания видов запасов в документе.
//		* ДокументМодифицирован - Булево - признак того, что форма документа модифицирована, после внесения изменений в
//											табличную часть видов запасов.
//		* ЦенаВключаетНДС - Булево - признак того, что НДС включен в цену товара.
//		* Организация - СправочникСсылка.Организации, Неопределено - организация, для которой осуществляется редактирование табличной
//														части.
//		* Склад - СправочникСсылка.Склады - склад, на котором осуществляется учет запасов.
//		* Подразделение - СправочникСсылка.СтруктураПредприятия - подразделение, выполняющее работы.
//		* ОтображатьДокументыРеализации - Булево - признак необходимости отображения колонки, содержащей информацию 
//													о документе реализации.
//		* РедактироватьВидыЗапасов - Булево - признак того, что можно редактировать данные табличной части.
//		* ИмяКолонкиХарактеристика - Строка - имя колонки, содержащей информацию о характеристиках номенклатуры.
//		* ИмяКолонкиНоменклатура - Строка - имя колонки, содержащей информацию о номенклатуре.
//		* ТоварВШапке - Булево - признак того, что информация о номенклатуре указана в шапке документа (не в табличной
//									части).
//		* ПодразделениеВШапке - Булево - признак того, что информация о подразделении, выполняющем работу указано
//											в шапке документа (не в табличной части).
//		* АдресВидовЗапасовВХранилище - Строка - адрес временного хранилища, в котором хранится информация табличной 
//													части видов запасов.
//		* АдресТоваровВХранилище - Строка - адрес временного хранилища, в котором хранится информация табличной 
//													части товаров.
//		* ИмяТЧВидыЗапасов - Строка - имя табличной части видов запасов документа.
//		* ИмяТЧТовары - Строка - имя табличной части товаров документа.
//		* ДатаДокумента - Дата - дата документа, для которого осуществляется указание видов запасов.
//		* Регистратор - ДокументСсылка, Неопределено - ссылка на документ-регистратор движений.
//
Функция ПараметрыРедактированияВидовЗапасов() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяТЧТовары",                   "Товары");
	Результат.Вставить("ИмяТЧВидыЗапасов",              "ВидыЗапасов");
	Результат.Вставить("АдресТоваровВХранилище",        "");
	Результат.Вставить("АдресВидовЗапасовВХранилище",   "");
	Результат.Вставить("ТоварВШапке",                   Ложь);
	Результат.Вставить("ПодразделениеВШапке",           Ложь);
	Результат.Вставить("ИмяКолонкиНоменклатура",        "Номенклатура");
	Результат.Вставить("ИмяКолонкиХарактеристика",      "Характеристика");
	Результат.Вставить("РедактироватьВидыЗапасов",      Истина);
	Результат.Вставить("ОтображатьДокументыРеализации", Ложь);
	Результат.Вставить("Склад",                         Справочники.Склады.ПустаяСсылка());
	Результат.Вставить("Организация",                   Неопределено);
	Результат.Вставить("Подразделение",                 Справочники.СтруктураПредприятия.ПустаяСсылка());
	Результат.Вставить("ЦенаВключаетНДС",               Ложь);
	Результат.Вставить("ДокументМодифицирован",         Ложь);
	Результат.Вставить("ВидыЗапасовУказаныВручную",     Ложь);
	Результат.Вставить("ДатаДокумента",                 Дата(1, 1, 1));
	Результат.Вставить("Регистратор",                   Неопределено);
	
	Возврат Результат;
	
КонецФункции

// Помещает табличные части "Товары" и "Виды запасов" во временное хранилище.
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма документа, которая содержит следующие свойства:
//		* Объект - ДокументОбъект, ДанныеФормыСтруктура - основной реквизит формы документа.
//	ПараметрыРедактированияВидовЗапасов - см. ПараметрыРедактированияВидовЗапасов.
//
// Возвращаемое значение:
//	см. ПараметрыРедактированияВидовЗапасов
//
Функция ПоместитьТоварыИВидыЗапасовВХранилище(Форма, ПараметрыРедактированияВидовЗапасов = Неопределено) Экспорт
	
	Если ПараметрыРедактированияВидовЗапасов = Неопределено Тогда
		ПараметрыРедактированияВидовЗапасов = ПараметрыРедактированияВидовЗапасов();
	КонецЕсли;
	
	Товары                  = Форма.Объект[ПараметрыРедактированияВидовЗапасов.ИмяТЧТовары];
	ВидыЗапасов             = Форма.Объект[ПараметрыРедактированияВидовЗапасов.ИмяТЧВидыЗапасов];
	УникальныйИдентификатор = Форма.УникальныйИдентификатор;
		
	Если ПараметрыРедактированияВидовЗапасов.ТоварВШапке Тогда
		
		ТаблицаТоваров = Новый ТаблицаЗначений;
		ТаблицаТоваров.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
		ТаблицаТоваров.Колонки.Добавить("АналитикаУчетаНоменклатуры",
										Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаТоваров.Колонки.Добавить("Характеристика",
										Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
		
		НоваяСтрока = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Форма.Объект);
		НоваяСтрока.НомерСтроки = 1;
		
	Иначе
		
		ТаблицаТоваров = Товары.Выгрузить();
		
		Если ПараметрыРедактированияВидовЗапасов.ИмяКолонкиНоменклатура <> "Номенклатура" Тогда
			Если ТаблицаТоваров.Колонки.Найти("Номенклатура") <> Неопределено Тогда
				ТаблицаТоваров.Колонки.Удалить("Номенклатура");
			КонецЕсли;
			
			КолонкаНоменклатура = ТаблицаТоваров.Колонки[ПараметрыРедактированияВидовЗапасов.ИмяКолонкиНоменклатура]; // КолонкаТаблицыЗначений
			КолонкаНоменклатура.Имя = "Номенклатура";
		КонецЕсли;
		
		Если ПараметрыРедактированияВидовЗапасов.ИмяКолонкиХарактеристика <> "Характеристика" Тогда
			Если ТаблицаТоваров.Колонки.Найти("Характеристика") <> Неопределено Тогда
				ТаблицаТоваров.Колонки.Удалить("Характеристика");
			КонецЕсли;
			
			КолонкаХарактеристика = ТаблицаТоваров.Колонки[ПараметрыРедактированияВидовЗапасов.ИмяКолонкиХарактеристика]; // КолонкаТаблицыЗначений
			КолонкаХарактеристика.Имя = "Характеристика";
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыРедактированияВидовЗапасов.АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(
																	ТаблицаТоваров,
																	УникальныйИдентификатор);
	
	ТаблицаВидовЗапасов = ВидыЗапасов.Выгрузить();
	
	ПараметрыРедактированияВидовЗапасов.АдресВидовЗапасовВХранилище = ПоместитьВоВременноеХранилище(
																		ТаблицаВидовЗапасов,
																		УникальныйИдентификатор);
		
	Если Не ЗначениеЗаполнено(ПараметрыРедактированияВидовЗапасов.Организация) Тогда
		ПараметрыРедактированияВидовЗапасов.Организация = Форма.Объект.Организация;
	КонецЕсли;
	
	ПараметрыРедактированияВидовЗапасов.ВидыЗапасовУказаныВручную = Форма.Объект.ВидыЗапасовУказаныВручную;
	
	Если Форма.Объект.Свойство("ЦенаВключаетНДС") Тогда
		ПараметрыРедактированияВидовЗапасов.ЦенаВключаетНДС = Форма.Объект.ЦенаВключаетНДС;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПараметрыРедактированияВидовЗапасов.Склад)
		И Форма.Объект.Свойство("Склад") Тогда
		
		ПараметрыРедактированияВидовЗапасов.Склад = Форма.Объект.Склад;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПараметрыРедактированияВидовЗапасов.Подразделение)
		И Форма.Объект.Свойство("Подразделение") Тогда
		
		ПараметрыРедактированияВидовЗапасов.Подразделение = Форма.Объект.Подразделение;
		
	КонецЕсли;
	
	ПараметрыРедактированияВидовЗапасов.ДокументМодифицирован = Форма.Модифицированность;
	ПараметрыРедактированияВидовЗапасов.РедактироватьВидыЗапасов = ПараметрыРедактированияВидовЗапасов.РедактироватьВидыЗапасов
																	И Не Форма.ТолькоПросмотр
																	И Форма.Доступность
																	И ПраваПользователяПовтИсп.РедактированиеВидовЗапасовДокументов();
	
	Если Форма.Объект.Свойство("Ссылка") Тогда
		ПараметрыРедактированияВидовЗапасов.Регистратор = Форма.Объект.Ссылка;
	КонецЕсли;
	
	Если Форма.Объект.Свойство("Дата") Тогда
		ПараметрыРедактированияВидовЗапасов.ДатаДокумента = Форма.Объект.Дата;
	КонецЕсли;
	
	Возврат ПараметрыРедактированияВидовЗапасов;
	
КонецФункции

// Обрабатывает ввод видов запасов и помещает указанные виды запасов в табличную часть объекта.
//
// Параметры:
//	ВыбранноеЗначение	 - см. ПараметрыРедактированияВидовЗапасов.
//	Форма				 - ФормаКлиентскогоПриложения	 - форма объекта, у которого есть табличная часть ВидыЗапасов
//
Процедура ОбработатьВводВидовЗапасовВручную(ВыбранноеЗначение, Форма) Экспорт
	
	РеквизитыФормы				= Форма.ПолучитьРеквизиты();
	ДобавитьРеквизит			= Истина;
	ИмяДобавляемогоРеквизита	= ИмяРеквизитаФормыВидыЗапасовБылиИзменены();
	
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = ИмяДобавляемогоРеквизита Тогда
			ДобавитьРеквизит = Ложь;
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ДобавитьРеквизит Тогда
		РеквизитВидыЗапасовБылиИзмененыВручную = Новый РеквизитФормы(ИмяДобавляемогоРеквизита,
																	Новый ОписаниеТипов("Булево"));
		
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(РеквизитВидыЗапасовБылиИзмененыВручную);
		
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	КонецЕсли;
	
	ТаблицаВидыЗапасов	= ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресВидовЗапасовВХранилище);
	ВидыЗапасовИзменены	= Форма.Объект.ВидыЗапасовУказаныВручную <> ВыбранноеЗначение.ВидыЗапасовУказаныВручную;
	
	Если ТаблицаВидыЗапасов.Количество()
		И ВыбранноеЗначение.ВидыЗапасовУказаныВручную Тогда
		
		ВидыЗапасовДокумента = Форма.Объект[ВыбранноеЗначение.ИмяТЧВидыЗапасов].Выгрузить();
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаПроверкиИзмененияВидовЗапасовВручную(ВидыЗапасовДокумента);
		
		Запрос.УстановитьПараметр("ВидыЗапасовДокумента",			ВидыЗапасовДокумента);
		Запрос.УстановитьПараметр("ВидыЗапасовУказанныеВручную",	ТаблицаВидыЗапасов);
		
		ВидыЗапасовИзменены = Не Запрос.Выполнить().Пустой();
		
	Конецесли;
	
	Форма.Модифицированность				= ВидыЗапасовИзменены;
	Форма[ИмяДобавляемогоРеквизита]			= ВидыЗапасовИзменены;
	Форма.Объект.ВидыЗапасовУказаныВручную	= ВыбранноеЗначение.ВидыЗапасовУказаныВручную;
	
	Форма.Объект[ВыбранноеЗначение.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияРеквизитов

// Проверяет заполнение подразделения в табличной части.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект, ФормаКлиентскогоПриложения - проверяемый документ.
//	ТипыНоменклатуры - Массив Из ПеречислениеСсылка.ТипыНоменклатуры - проверяемые типы номенклатуры.
//	ТекстОшибки - Строка - Текст ошибки с параметром "%1" для номера строки.
//	Отказ - Булево - признак наличия ошибок.
//	ИмяТЧ - Строка - имя реквизита табличной части, в которой осуществляется проверка.
//
Процедура ПроверитьЗаполнениеПодразделенияВТабличнойЧасти(ДокументОбъект,
															ТипыНоменклатуры,
															ТекстОшибки,
															Отказ,
															ИмяТЧ = "Товары") Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.СписатьНаРасходы КАК СписатьНаРасходы,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Назначение КАК Назначение
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (&ТипыНоменклатуры)
	|	И ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В 
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ТаблицаТовары.СписатьНаРасходы
	|		ИНАЧЕ
	|			(ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ИЛИ НЕ (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И ВЫРАЗИТЬ(ТаблицаТовары.Назначение КАК Справочник.Назначения).ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала)))
	|	КОНЕЦ
	|	И ТаблицаТовары.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)";
	
	ВыгружаемыеКолонки = "НомерСтроки, Номенклатура, Назначение, СписатьНаРасходы, Подразделение";
	
	Если ТипЗнч(ДокументОбъект[ИмяТЧ]) = Тип("ТаблицаЗначений") Тогда
		ТаблицаТовары = ДокументОбъект[ИмяТЧ].Скопировать(, ВыгружаемыеКолонки);
	Иначе
		ТаблицаТовары = ДокументОбъект[ИмяТЧ].Выгрузить(, ВыгружаемыеКолонки);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаТовары",		ТаблицаТовары);
	Запрос.УстановитьПараметр("ТипыНоменклатуры",	ТипыНоменклатуры);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	КлючДанных		= ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ДокументОбъект);
	КлючДанных		= ?(ОбщегоНазначения.ЭтоСсылка(ТипЗнч(КлючДанных)),
						ДокументОбъект,
						Неопределено);
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Выборка.НомерСтроки);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ,
																Выборка.НомерСтроки,
																"Подразделение");
		
		ОбщегоНазначения.СообщитьПользователю(
			ТекстСообщения,
			КлючДанных,
			Поле,
			,
			Отказ);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает структуру параметров, используемую при проверке заполнения номеров ГТД в табличной части объекта.
//
// Возвращаемое значение:
//	Структура - содержит следующие свойства:
//		* ИмяТЧ - Строка - имя табличной части, в которой осуществляется проверка.
//		* ПредставлениеТЧ - Строка - представление проверяемой табличной части. Если значение параметра не указано,
//										тогда представление принимает значение равное синониму реквизита объекта
//										метаданных.
//		* ИмяПоляНоменклатура - Строка - имя поля, содержащего информацию о номенклатуре.
//		* ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации, Неопределено - хозяйственная операция документа.
//		* ПроверятьТоварыИТару - Булево - признак проверки заполнения номеров РНПТ у прослеживаемых товаров и многооборотной тары.
//		* ПроверятьРаботы - Булево - признак дополнительной проверки заполнения номеров РНПТ у прослеживаемых работ.
//		* РазрешитьПрослеживаемыйТоварБезНомеровГТД - Булево - если Истина, заполнение номера ГТД для прослеживаемой номенклатуры не проверяем.
//		* ПроверкаПересортицыТоваров - Булево - признак проверки табличной части документов пересортицы товаров.
//
Функция ПараметрыПроверкиЗаполненияНомеровГТД() Экспорт
	
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("ИмяТЧ",					"Товары");
	ПараметрыПроверки.Вставить("ПредставлениеТЧ",		"");
	ПараметрыПроверки.Вставить("ИмяПоляНоменклатура",	"Номенклатура");
	ПараметрыПроверки.Вставить("ХозяйственнаяОперация",	Неопределено);
	ПараметрыПроверки.Вставить("ПроверятьТоварыИТару",	Истина);
	ПараметрыПроверки.Вставить("ПроверятьРаботы",		Ложь);
	ПараметрыПроверки.Вставить("РазрешитьПрослеживаемыйТоварБезНомеровГТД", Ложь);
	ПараметрыПроверки.Вставить("ПроверкаПересортицыТоваров", Ложь);
	
	Возврат ПараметрыПроверки;
	
КонецФункции

// Процедура проверяет указание номеров ГТД в табличной части "Товары".
//
// Параметры:
//	ДокументОбъект - ДокументОбъект, ФормаКлиентскогоПриложения - проверяемый документ.
//	Отказ - Булево - признак отказа от проведения документа.
//	ПараметрыПроверки - см. ПараметрыПроверкиЗаполненияНомеровГТД.
//
Процедура ПроверитьЗаполнениеНомеровГТД(ДокументОбъект, Отказ, ПараметрыПроверки = Неопределено) Экспорт
	
	Если ПараметрыПроверки = Неопределено Тогда
		ПараметрыПроверки = ПараметрыПроверкиЗаполненияНомеровГТД();
	КонецЕсли;
	
	Если Не ПараметрыПроверки.ПроверятьТоварыИТару
		И Не ПараметрыПроверки.ПроверятьРаботы Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если Не ПараметрыПроверки.ПроверкаПересортицыТоваров Тогда
		
		ИмяПоляНоменклатура = ПараметрыПроверки.ИмяПоляНоменклатура;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИсходнаяТаблица.НомерСтроки КАК НомерСтроки,
		|	ВЫРАЗИТЬ(&ИмяПоляНоменклатура КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ИсходнаяТаблица.НомерГТД КАК НомерГТД
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	&ТаблицаТовары КАК ИсходнаяТаблица
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	НомерГТД
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки	КАК НомерСтроки,
		|	ИСТИНА						КАК ОшибкаНезаполненНомерГТД,
		|	ЛОЖЬ						КАК ОшибкаНекорректныйРНПТ,
		|	ЛОЖЬ						КАК ОшибкаНекорректныйНомерГТД
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И СправочникНоменклатура.ТипНоменклатуры В (&ТипыНоменклатуры)
		|	И СправочникНоменклатура.ВестиУчетПоГТД
		|	И ((&ЗапретитьПоступлениеТоваровБезНомеровГТД
		|			И НЕ ЕСТЬNULL(СправочникНоменклатура.ПрослеживаемыйТовар, ЛОЖЬ))
		|		ИЛИ (ЕСТЬNULL(СправочникНоменклатура.ПрослеживаемыйТовар, ЛОЖЬ)
		|			И &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|			И НЕ &РазрешитьПрослеживаемыйТоварБезНомеровГТД
		|			И НЕ &ЭтоЗакупкаВСтранахЕАЭС))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки	КАК НомерСтроки,
		|	ЛОЖЬ						КАК ОшибкаНезаполненНомерГТД,
		|	ИСТИНА						КАК ОшибкаНекорректныйРНПТ,
		|	ЛОЖЬ						КАК ОшибкаНекорректныйНомерГТД
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК СправочникНомераГТД
		|		ПО ТаблицаТовары.НомерГТД = СправочникНомераГТД.Ссылка
		|ГДЕ
		|	СправочникНоменклатура.ПрослеживаемыйТовар
		|	И НЕ &РазрешитьПрослеживаемыйТоварБезНомеровГТД
		|	И ТаблицаТовары.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И СправочникНоменклатура.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|												ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|												ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	И ((&ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|			И СправочникНомераГТД.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерГТД))
		|		ИЛИ (НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|			И СправочникНомераГТД.ТипНомераГТД <> ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерГТД)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки	КАК НомерСтроки,
		|	ЛОЖЬ						КАК ОшибкаНезаполненНомерГТД,
		|	ЛОЖЬ						КАК ОшибкаНекорректныйРНПТ,
		|	ИСТИНА						КАК ОшибкаНекорректныйНомерГТД
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК СправочникНомераГТД
		|		ПО ТаблицаТовары.НомерГТД = СправочникНомераГТД.Ссылка
		|ГДЕ
		|	СправочникНоменклатура.ВестиУчетПоГТД
		|	И НЕ СправочникНоменклатура.ПрослеживаемыйТовар
		|	И ТаблицаТовары.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И СправочникНомераГТД.ТипНомераГТД <> ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерГТД)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляНоменклатура", "ИсходнаяТаблица." + ИмяПоляНоменклатура);
		
		ВыгружаемыеКолонки = "НомерСтроки, НомерГТД, " + ИмяПоляНоменклатура;
		
		ТипыНоменклатуры = Новый Массив;
		
		Если ПараметрыПроверки.ПроверятьТоварыИТару Тогда
			ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
			ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
		КонецЕсли;
		
		Если ПараметрыПроверки.ПроверятьРаботы Тогда
			ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Работа);
		КонецЕсли;
		
		ЭтоЗакупкаВСтранахЕАЭС	= Ложь;
		ХозяйственнаяОперация	= ПараметрыПроверки.ХозяйственнаяОперация;
		
		Если ЗначениеЗаполнено(ХозяйственнаяОперация) Тогда
			ХозОперацииЗакупкаВСтранахЕАЭС = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
												Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
			ЭтоЗакупкаВСтранахЕАЭС = (ХозОперацииЗакупкаВСтранахЕАЭС.Найти(ХозяйственнаяОперация) <> Неопределено);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ТипыНоменклатуры",		ТипыНоменклатуры);
		Запрос.УстановитьПараметр("ЭтоЗакупкаВСтранахЕАЭС",	ЭтоЗакупкаВСтранахЕАЭС);
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИсходнаяТаблица.НомерСтроки					КАК НомерСтроки,
		|	ИсходнаяТаблица.Номенклатура				КАК Номенклатура,
		|	ИсходнаяТаблица.НоменклатураОприходование	КАК НоменклатураОприходование,
		|	ИсходнаяТаблица.НомерГТД					КАК НомерГТД
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	&ТаблицаТовары КАК ИсходнаяТаблица
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	НоменклатураОприходование,
		|	НомерГТД
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки	КАК НомерСтроки,
		|	ИСТИНА						КАК ОшибкаНезаполненНомерГТД,
		|	ЛОЖЬ						КАК ОшибкаНекорректныйРНПТ,
		|	ЛОЖЬ						КАК ОшибкаНекорректныйНомерГТД
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатурыСписания
		|		ПО ТаблицаТовары.Номенклатура = ДанныеНоменклатурыСписания.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатурыОприходование
		|		ПО ТаблицаТовары.НоменклатураОприходование = ДанныеНоменклатурыОприходование.Ссылка
		|
		|ГДЕ
		|	ТаблицаТовары.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ДанныеНоменклатурыОприходование.ВестиУчетПоГТД
		|	И ((&ЗапретитьПоступлениеТоваровБезНомеровГТД
		|			И НЕ ДанныеНоменклатурыОприходование.ПрослеживаемыйТовар)
		|		ИЛИ (&ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|			И ДанныеНоменклатурыОприходование.ПрослеживаемыйТовар))
		|	И (НЕ ДанныеНоменклатурыСписания.ВестиУчетПоГТД
		|		ИЛИ (ДанныеНоменклатурыСписания.ПрослеживаемыйТовар
		|			И НЕ ДанныеНоменклатурыОприходование.ПрослеживаемыйТовар)
		|		ИЛИ (&ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|			И ДанныеНоменклатурыОприходование.ПрослеживаемыйТовар
		|			И (НЕ ДанныеНоменклатурыСписания.ПрослеживаемыйТовар
		|				ИЛИ (ДанныеНоменклатурыСписания.ПрослеживаемыйТовар
		|					И ДанныеНоменклатурыСписания.ЕдиницаИзмеренияТНВЭД <> ДанныеНоменклатурыОприходование.ЕдиницаИзмеренияТНВЭД))))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки	КАК НомерСтроки,
		|	ЛОЖЬ						КАК ОшибкаНезаполненНомерГТД,
		|	ИСТИНА						КАК ОшибкаНекорректныйРНПТ,
		|	ЛОЖЬ						КАК ОшибкаНекорректныйНомерГТД
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.НоменклатураОприходование = СправочникНоменклатура.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК СправочникНомераГТД
		|		ПО ТаблицаТовары.НомерГТД = СправочникНомераГТД.Ссылка
		|ГДЕ
		|	СправочникНоменклатура.ПрослеживаемыйТовар
		|	И ТаблицаТовары.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ((&ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|			И СправочникНомераГТД.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерГТД))
		|		ИЛИ (НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
		|			И СправочникНомераГТД.ТипНомераГТД <> ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерГТД)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки	КАК НомерСтроки,
		|	ЛОЖЬ						КАК ОшибкаНезаполненНомерГТД,
		|	ЛОЖЬ						КАК ОшибкаНекорректныйРНПТ,
		|	ИСТИНА						КАК ОшибкаНекорректныйНомерГТД
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.НоменклатураОприходование = СправочникНоменклатура.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК СправочникНомераГТД
		|		ПО ТаблицаТовары.НомерГТД = СправочникНомераГТД.Ссылка
		|ГДЕ
		|	СправочникНоменклатура.ВестиУчетПоГТД
		|	И НЕ СправочникНоменклатура.ПрослеживаемыйТовар
		|	И ТаблицаТовары.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И СправочникНомераГТД.ТипНомераГТД <> ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерГТД)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		ВыгружаемыеКолонки = "НомерСтроки, Номенклатура, НоменклатураОприходование, НомерГТД";
		
		ВыгружаемыеКолонки = "НомерСтроки, Номенклатура, НоменклатураОприходование, НомерГТД";
		
	КонецЕсли;
	
	ИмяТЧ = ПараметрыПроверки.ИмяТЧ;
	
	Если ТипЗнч(ДокументОбъект[ИмяТЧ]) = Тип("ТаблицаЗначений") Тогда
		ТаблицаТовары = ДокументОбъект[ИмяТЧ].Скопировать(, ВыгружаемыеКолонки);
	Иначе
		ТаблицаТовары = ДокументОбъект[ИмяТЧ].Выгрузить(, ВыгружаемыеКолонки);
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "Дата") Тогда
		ДатаОбъекта = ДокументОбъект.Дата;
	Иначе
		ДатаОбъекта = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ЗапретитьПоступлениеТоваровБезНомеровГТД = ПолучитьФункциональнуюОпцию("ЗапретитьПоступлениеТоваровБезНомеровГТД");
	ИспользоватьУчетПрослеживаемыхИмпортныхТоваров = УчетПрослеживаемыхТоваровЛокализация.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров(
														ДатаОбъекта);
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	Запрос.УстановитьПараметр("ЗапретитьПоступлениеТоваровБезНомеровГТД", ЗапретитьПоступлениеТоваровБезНомеровГТД);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров",
								ИспользоватьУчетПрослеживаемыхИмпортныхТоваров);
	Запрос.УстановитьПараметр("РазрешитьПрослеживаемыйТоварБезНомеровГТД",
								ПараметрыПроверки.РазрешитьПрослеживаемыйТоварБезНомеровГТД);
	
	КлючДанных		= ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ДокументОбъект);
	КлючДанных		= ?(ОбщегоНазначения.ЭтоСсылка(ТипЗнч(КлючДанных)),
						ДокументОбъект,
						Неопределено);
	ПредставлениеТЧ	= ?(ПустаяСтрока(ПараметрыПроверки.ПредставлениеТЧ),
						ДокументОбъект.Метаданные().ТабличныеЧасти[ИмяТЧ].Синоним,
						ПараметрыПроверки.ПредставлениеТЧ);
	
	ШаблонОшибкаНеЗаполненНомерГТД = НСтр("ru = 'Не заполнена колонка ""Номер ГТД"" в строке %1 списка ""%2""'");
	ШаблонОшибкаНекорректныйНомерГТД = НСтр("ru = 'В строке %1 списка ""%2"" указан номер ГТД некорректного типа. Укажите номер ГТД типа ""ГТД""'");
	
	Если ИспользоватьУчетПрослеживаемыхИмпортныхТоваров Тогда
		ШаблонОшибкаНекорректныйРНПТ = НСтр("ru = 'В строке %1 списка ""%2"" указан номер ГТД некорректного типа. Укажите номер ГТД типа ""РНПТ"" или ""РНПТ комплекта""'");
	Иначе
		ШаблонОшибкаНекорректныйРНПТ = ШаблонОшибкаНекорректныйНомерГТД;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ОшибкаНезаполненНомерГТД Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонОшибкаНеЗаполненНомерГТД,
						Выборка.НомерСтроки,
						ПредставлениеТЧ);
			
			ОбщегоНазначения.СообщитьПользователю(Текст,
													КлючДанных,
													ИмяТЧ + "[" + (Выборка.НомерСтроки - 1) + "].НомерГТД",
													,
													Отказ);
		КонецЕсли;
		
		Если Выборка.ОшибкаНекорректныйРНПТ Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонОшибкаНекорректныйРНПТ,
						Выборка.НомерСтроки,
						ПредставлениеТЧ);
			
			ОбщегоНазначения.СообщитьПользователю(Текст,
													КлючДанных,
													ИмяТЧ + "[" + (Выборка.НомерСтроки - 1) + "].НомерГТД");
		КонецЕсли;
		
		Если Выборка.ОшибкаНекорректныйНомерГТД Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонОшибкаНекорректныйНомерГТД,
						Выборка.НомерСтроки,
						ПредставлениеТЧ);
			
			ОбщегоНазначения.СообщитьПользователю(Текст,
													КлючДанных,
													ИмяТЧ + "[" + (Выборка.НомерСтроки - 1) + "].НомерГТД");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура проверяет наличие в производимых изделиях номенклатуры, для которой включен учет номеров ГТД.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа.
//	ПараметрыПроверки - см. ПараметрыПроверкиЗаполненияНомеровГТД.
//
Процедура ПроверитьНаличиеИзделийВТЧСУчетомПоГТД(ДокументОбъект, Отказ, ПараметрыПроверки = Неопределено) Экспорт
	
	Если ПараметрыПроверки = Неопределено Тогда
		ПараметрыПроверки = ПараметрыПроверкиЗаполненияНомеровГТД();
	КонецЕсли;
	
	ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД = ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД");
	
	Если Не (ПараметрыПроверки.ПроверятьРаботы
		Или ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки		КАК НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура	КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ИсходнаяТаблица
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки	КАК НомерСтроки,
	|	ИСТИНА						КАК ЭтоТовар
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|	
	|ГДЕ
	|	ДанныеНоменклатуры.ВестиУчетПоГТД
	|	И ДанныеНоменклатуры.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки	КАК НомерСтроки,
	|	ЛОЖЬ						КАК ЭтоТовар
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|ГДЕ
	|	&ПроверятьРаботы
	|	И ДанныеНоменклатуры.ПрослеживаемыйТовар
	|	И ДанныеНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ИмяТЧ = ПараметрыПроверки.ИмяТЧ;
	
	ТаблицаТовары = ДокументОбъект[ИмяТЧ].Выгрузить(, "НомерСтроки, Номенклатура");
	
	Запрос.УстановитьПараметр("ТаблицаТовары",		ТаблицаТовары);
	Запрос.УстановитьПараметр("ПроверятьРаботы",	ПараметрыПроверки.ПроверятьРаботы);
	Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД",
								ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	МетаданныеОбъекта	= ДокументОбъект.Метаданные();
	ПредставлениеТЧ		= МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Синоним;
	
	ШаблонИмпортныйТовар		= НСтр("ru = 'В строке %1 списка ""%2"" выбрана импортная номенклатура.
										|При включенной опции ""Запретить оформление операций с импортными товарами без номеров ГТД"" выбор такой номенклатуры запрещен.'");
	ШаблонПрослеживаемаяРабота	= НСтр("ru = 'В строке %1 списка ""%2"" выбрана прослеживаемая работа.
										|При включенном учете прослеживаемых импортных товаров выбор такой номенклатуры запрещен.'");
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоТовар Тогда
			ТекстСообщения = ШаблонИмпортныйТовар;
		Иначе
			ТекстСообщения = ШаблонПрослеживаемаяРабота;
		КонецЕсли;
		
		ТекстСообщения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
																					Выборка.НомерСтроки,
																					ПредставлениеТЧ);
		Поле			= ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Выборка.НомерСтроки, "Номенклатура");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, , Отказ);
	КонецЦикла;
	
КонецПроцедуры

// Процедура проверяет наличие производимой номенклатуры, для которой включен учет номеров ГТД.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ПроверитьНаличиеИзделийВШапкеСУчетомПоГТД(ДокументОбъект, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД") Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыИзделия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.Номенклатура, "ВестиУчетПоГТД, ТипНоменклатуры");
	
	Если РеквизитыИзделия.ВестиУчетПоГТД = Истина
		И (РеквизитыИзделия.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
			ИЛИ РеквизитыИзделия.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара) Тогда
		
		ШаблонСообщения = НСтр("ru = 'В документе выбрана номенклатура, для которой ведется учет по ГТД.
							|При включенной опции ""Запретить оформление операций с импортными товарами без номеров ГТД"" выбор такой номенклатуры запрещен.'");
		
		ОбщегоНазначения.СообщитьПользователю(
			ШаблонСообщения,
			ДокументОбъект,
			"Номенклатура",
			,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ИсправлениеОтрицательныхОстатковТоваровКПередаче

// Выполняет исправление отрицательных остатков по РН Товары организаций к передаче в фоновом задании.
//
// Параметры:
//	ПараметрыЗадания - Структура - Параметры расчета в фоне.
//
// Возвращаемое значение:
//	Булево - Признак успешного запуска задания.
Функция ИсправитьОстаткиПоТоварамКПередачеВФоновомЗадании(ПараметрыЗадания) Экспорт
	
	НаименованиеЗадания = НСтр("ru = 'Исправление отрицательных остатков по товарам к передаче'");
	
	ПараметрыЭкспортнойПроцедуры = Новый Массив();
	ПараметрыЭкспортнойПроцедуры.Добавить(ПараметрыЗадания);
	
	ПараметрыЗадания = Новый Массив();
	ПараметрыЗадания.Добавить("ЗапасыСервер.ИсправитьОстаткиПоТоварамКПередаче");
	ПараметрыЗадания.Добавить(ПараметрыЭкспортнойПроцедуры);
	
	ФоновоеЗадание = ФоновыеЗадания.Выполнить("ОбщегоНазначения.ВыполнитьМетодКонфигурации", ПараметрыЗадания, , НаименованиеЗадания);
	
	Возврат ФоновоеЗадание.УникальныйИдентификатор;
	
КонецФункции

// Исправляет отрицательные остатки по РН Товары организаций к передаче.
// Вызывается из Обработки.ЖурналДокументовИнтеркампани.РабочееМестоПередачиТоваров21.
//
// Параметры:
//	ПараметрыВызова - Структура - коллекция параметров, содеражащая следующие свойства:
//		* НачалоПериода - Дата - Дата начала выборки движений к исправлению.
//		* КонецПериода - Дата - Дата окончания выборки движений к исправлению.
//		* Организации - Массив Из СправочникСсылка.Организации - Перечень организаций по которым необходимо исправить остатки.
//
Процедура ИсправитьОстаткиПоТоварамКПередаче(ПараметрыВызова) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ИсходноеПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций;
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Истина;
	
	КонецПериода = ПараметрыВызова.КонецПериода;
	Организации = ПараметрыВызова.Организации;
	СтатусыПроведенияДокументов = Новый Соответствие;
	КэшДокументов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаКонецПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(КонецПериода));
	Запрос.УстановитьПараметр("МассивОрганизаций", Организации);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(Организации));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиНаКонецПериода.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОстаткиНаКонецПериода.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиНаКонецПериода.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОстаткиНаКонецПериода.НомерГТД КАК НомерГТД,
	|	-ОстаткиНаКонецПериода.КоличествоОстаток КАК Количество,
	|	ИСТИНА КАК ПоТоварамКОформлению,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&НаКонецПериода,
	|			ОрганизацияВладелец В (&МассивОрганизаций)
	|				ИЛИ &ПоВсемОрганизациям) КАК ОстаткиНаКонецПериода
	|ГДЕ
	|	ОстаткиНаКонецПериода.КоличествоОстаток < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиНаКонецПериода.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОстаткиНаКонецПериода.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиНаКонецПериода.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОстаткиНаКонецПериода.НомерГТД КАК НомерГТД,
	|	-ОстаткиНаКонецПериода.ВозвращеноОстаток КАК Количество,
	|	ИСТИНА КАК ПоТоварамКОформлению,
	|	ИСТИНА КАК ЭтоВозврат
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&НаКонецПериода,
	|			ОрганизацияВладелец В (&МассивОрганизаций)
	|				ИЛИ &ПоВсемОрганизациям) КАК ОстаткиНаКонецПериода
	|ГДЕ
	|	ОстаткиНаКонецПериода.ВозвращеноОстаток < 0
	|";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		КоличествоОтрицательное = Выборка.Количество;
		КоличествоВКорректировках = 0;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.Период КАК Период,
		|	Товары.Регистратор КАК Ссылка,
		|	СУММА(Товары.Количество) КАК Количество,
		|	Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров КАК ЭтоКорректировкаРегистров,
		|	Товары.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями КАК ЭтоПередачаТоваровМеждуОрганизациями,
		|	ЛОЖЬ КАК ЭтоВозвратТоваровМеждуОрганизациями,
		|	ВЫБОР
		|		КОГДА Товары.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|			ТОГДА ВЫРАЗИТЬ(Товары.Регистратор КАК Документ.ПередачаТоваровМеждуОрганизациями).УказыватьНомераГТД
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УказыватьНомераГТД
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК Товары
		|ГДЕ
		|	Товары.ОрганизацияВладелец = &ОрганизацияВладелец
		|	И Товары.АналитикаУчетаНоменклатуры = &АналитикаУчетаНоменклатуры
		|	И Товары.ВидЗапасовПродавца = &ВидЗапасовПродавца
		|	И Товары.НомерГТД = &НомерГТД
		|	И (Товары.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|			ИЛИ Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров)
		|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Товары.Период <= &КонецПериода
		|	И Товары.Активность
		|	И НЕ &ЭтоВозврат
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Регистратор,
		|	Товары.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Товары.Период,
		|	Товары.Регистратор,
		|	СУММА(Товары.Возвращено),
		|	Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров,
		|	ЛОЖЬ КАК ЭтоПередачаТоваровМеждуОрганизациями,
		|	Товары.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями КАК ЭтоВозвратТоваровМеждуОрганизациями,
		|	ЛОЖЬ
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК Товары
		|ГДЕ
		|	Товары.ОрганизацияВладелец = &ОрганизацияВладелец
		|	И Товары.АналитикаУчетаНоменклатуры = &АналитикаУчетаНоменклатуры
		|	И Товары.ВидЗапасовПродавца = &ВидЗапасовПродавца
		|	И Товары.НомерГТД = &НомерГТД
		|	И (Товары.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
		|			ИЛИ Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров)
		|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Товары.Период <= &КонецПериода
		|	И Товары.Активность
		|	И &ЭтоВозврат
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Регистратор,
		|	Товары.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товары.Период УБЫВ");

	
		Запрос.УстановитьПараметр("ОрганизацияВладелец", Выборка.ОрганизацияВладелец);
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", Выборка.АналитикаУчетаНоменклатуры);
		Запрос.УстановитьПараметр("ВидЗапасовПродавца", Выборка.ВидЗапасовПродавца);
		Запрос.УстановитьПараметр("НомерГТД", Выборка.НомерГТД);
		Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
		Запрос.УстановитьПараметр("ЭтоВозврат", Выборка.ЭтоВозврат);
	
		ДокументыККорректировке = Запрос.Выполнить().Выбрать();
		Пока ДокументыККорректировке.Следующий() И КоличествоОтрицательное > 0 Цикл
			
			Если ДокументыККорректировке.ЭтоКорректировкаРегистров Тогда
				КоличествоВКорректировках = КоличествоВКорректировках + ДокументыККорректировке.Количество;
				Продолжить;
			КонецЕсли;
			
			ДанныеДокумента = КэшДокументов.Получить(ДокументыККорректировке.Ссылка);
			Если ДанныеДокумента = Неопределено Тогда
				ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументыККорректировке.Ссылка, "Товары, ВидыЗапасов");
				ДанныеДокумента.Товары = ДанныеДокумента.Товары.Выгрузить();
				ДанныеДокумента.ВидыЗапасов = ДанныеДокумента.ВидыЗапасов.Выгрузить();
			КонецЕсли;
			Если ДокументыККорректировке.УказыватьНомераГТД Тогда
				ПараметрыПоиска = Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД, ПоТоварамКОформлению");
			Иначе
				ПараметрыПоиска = Новый Структура("АналитикаУчетаНоменклатуры, ПоТоварамКОформлению");
			КонецЕсли;
		
			ЗаполнитьЗначенияСвойств(ПараметрыПоиска, Выборка);
		
			СписатьПоДокументу = Мин(КоличествоОтрицательное, ДокументыККорректировке.Количество); // в документе исправляем только количество по этому виду запасов.
			КоличествоОтрицательное = КоличествоОтрицательное - СписатьПоДокументу;
			
			КСписанию = СписатьПоДокументу;
			ТабличнаяЧасть = ДанныеДокумента.Товары;
			СтрокиТоваровККорректировке = ТабличнаяЧасть.НайтиСтроки(ПараметрыПоиска);
			Для Каждого СтрокаТоваров Из СтрокиТоваровККорректировке Цикл
				
				Если КСписанию = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СтрокаТоваров.Количество < КСписанию Тогда
					КСписанию = КСписанию - СтрокаТоваров.Количество;
				ИначеЕсли СтрокаТоваров.Количество > КСписанию Тогда
					СтрокаПоТоварамКОформлению = ТабличнаяЧасть.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаПоТоварамКОформлению, СтрокаТоваров);
				
					НовоеКоличество = СтрокаТоваров.Количество - КСписанию;
					
					СтрокаПоТоварамКОформлению.Количество = НовоеКоличество;
					СтрокаПоТоварамКОформлению.КоличествоУпаковок = Окр(СтрокаТоваров.КоличествоУпаковок * НовоеКоличество / СтрокаТоваров.Количество, 3, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.Цена = Окр(СтрокаТоваров.Цена * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.Сумма = Окр(СтрокаТоваров.Сумма * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаНДС = Окр(СтрокаТоваров.СуммаНДС * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаСНДС = Окр(СтрокаТоваров.СуммаСНДС * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаВзаиморасчетов = Окр(СтрокаТоваров.СуммаВзаиморасчетов * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаНДСВзаиморасчетов = Окр(СтрокаТоваров.СуммаНДСВзаиморасчетов * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					
					СтрокаТоваров.Количество = КСписанию;
					СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.КоличествоУпаковок - СтрокаПоТоварамКОформлению.КоличествоУпаковок;
					СтрокаТоваров.Цена = СтрокаТоваров.Цена - СтрокаПоТоварамКОформлению.Цена;
					СтрокаТоваров.Сумма = СтрокаТоваров.Сумма - СтрокаПоТоварамКОформлению.Сумма;
					СтрокаТоваров.СуммаНДС = СтрокаТоваров.СуммаНДС - СтрокаПоТоварамКОформлению.СуммаНДС;
					СтрокаТоваров.СуммаСНДС = СтрокаТоваров.СуммаСНДС - СтрокаПоТоварамКОформлению.СуммаСНДС;
					СтрокаТоваров.СуммаВзаиморасчетов = СтрокаТоваров.СуммаВзаиморасчетов - СтрокаПоТоварамКОформлению.СуммаВзаиморасчетов;
					СтрокаТоваров.СуммаНДСВзаиморасчетов = СтрокаТоваров.СуммаНДСВзаиморасчетов - СтрокаПоТоварамКОформлению.СуммаНДСВзаиморасчетов;
					
					КСписанию = 0;
				
				Иначе // СтрокаТоваров.Количество = КСписанию - просто снимаем признак ПоТоварамКОформлению
					КСписанию = 0;
				КонецЕсли;
				СтрокаТоваров.ПоТоварамКОформлению = Ложь;
				Если ДокументыККорректировке.ЭтоПередачаТоваровМеждуОрганизациями Тогда
					СтрокаТоваров.ВидЗапасов = Неопределено;
				КонецЕсли;
				
			КонецЦикла;
			
			// Распределяем строки видов запасов, чтобы заполнение видов запасов отработало только по строкам не "ПоОформлению".
			КСписанию = СписатьПоДокументу;
			ТабличнаяЧасть = ДанныеДокумента.ВидыЗапасов;
			Если ДокументыККорректировке.УказыватьНомераГТД Тогда
				ПараметрыПоиска = Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД, ПоТоварамКОформлению");
			Иначе
				ПараметрыПоиска = Новый Структура("АналитикаУчетаНоменклатуры, ПоТоварамКОформлению");
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ПараметрыПоиска, Выборка);
			СтрокиВидыЗапасовККорректировке = ТабличнаяЧасть.НайтиСтроки(ПараметрыПоиска);
			Для Каждого СтрокаВидыЗапасов Из СтрокиВидыЗапасовККорректировке Цикл
				
				Если КСписанию = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СтрокаВидыЗапасов.Количество < КСписанию Тогда
					КСписанию = КСписанию - СтрокаВидыЗапасов.Количество;
				ИначеЕсли СтрокаВидыЗапасов.Количество > КСписанию Тогда
					СтрокаВидыЗапасовКОформлению = ТабличнаяЧасть.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаВидыЗапасовКОформлению, СтрокаВидыЗапасов);
				
					НовоеКоличество = СтрокаВидыЗапасов.Количество - КСписанию;
					
					СтрокаВидыЗапасовКОформлению.Количество = НовоеКоличество;
					СтрокаВидыЗапасовКОформлению.КоличествоУпаковок = Окр(СтрокаВидыЗапасов.КоличествоУпаковок * НовоеКоличество / СтрокаВидыЗапасов.Количество, 3, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаНДС = Окр(СтрокаВидыЗапасов.СуммаНДС * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаСНДС = Окр(СтрокаВидыЗапасов.СуммаСНДС * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаВзаиморасчетов = Окр(СтрокаВидыЗапасов.СуммаВзаиморасчетов * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаНДСВзаиморасчетов = Окр(СтрокаВидыЗапасов.СуммаНДСВзаиморасчетов * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					
					СтрокаВидыЗапасов.Количество = КСписанию;
					СтрокаВидыЗапасов.КоличествоУпаковок = СтрокаВидыЗапасов.КоличествоУпаковок - СтрокаВидыЗапасовКОформлению.КоличествоУпаковок;
					СтрокаВидыЗапасов.СуммаНДС = СтрокаВидыЗапасов.СуммаНДС - СтрокаВидыЗапасовКОформлению.СуммаНДС;
					СтрокаВидыЗапасов.СуммаСНДС = СтрокаВидыЗапасов.СуммаСНДС - СтрокаВидыЗапасовКОформлению.СуммаСНДС;
					СтрокаВидыЗапасов.СуммаВзаиморасчетов = СтрокаВидыЗапасов.СуммаВзаиморасчетов - СтрокаВидыЗапасовКОформлению.СуммаВзаиморасчетов;
					СтрокаВидыЗапасов.СуммаНДСВзаиморасчетов = СтрокаВидыЗапасов.СуммаНДСВзаиморасчетов - СтрокаВидыЗапасовКОформлению.СуммаНДСВзаиморасчетов;
					
					КСписанию = 0;
				
				Иначе // СтрокаТоваров.Количество = КСписанию - просто снимаем признак ПоТоварамКОформлению
					КСписанию = 0;
				КонецЕсли;
				ТабличнаяЧасть.Удалить(СтрокаВидыЗапасов);
				
			КонецЦикла;
			
			КэшДокументов.Вставить(ДокументыККорректировке.Ссылка, ДанныеДокумента); // документы в ИБ пишем только один раз, в самом конце.
		КонецЦикла;
	
		Если КоличествоОтрицательное <> 0 Тогда
			Если КоличествоОтрицательное > КоличествоВКорректировках Тогда
				ТекстСообщения = НСтр("ru = 'Ошибка в алгоритме исправления остатков по товарам к передаче.
				|Обратитесь к разработчикам программы.'");
				ВызватьИсключение ТекстСообщения;
			Иначе
				ТекстСообщения = НСтр("ru = 'Ошибка исправления остатков по товарам к передаче: 
				|есть избыточные расходные движения в корректировках регистров по измерениям 
				|%Организация% - %АналитикаУчетаНоменклатуры% - %ВидЗапасов% - %НомерГТД%,
				|лишний расход %КоличествоОтрицательное%. Необходимо скорректировать движения документов и провести вручную.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Строка(Выборка.ОрганизацияВладелец));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%АналитикаУчетаНоменклатуры%", Строка(Выборка.АналитикаУчетаНоменклатуры));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидЗапасов%", Строка(Выборка.ВидЗапасовПродавца));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%", Строка(Выборка.НомерГТД));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОтрицательное%", Строка(КоличествоОтрицательное));
				
				СтрокаИсключения = НСтр("ru = '%1 исправления остатков'",
					ОбщегоНазначения.КодОсновногоЯзыка());
				СтрокаИсключения = СтрШаблон(СтрокаИсключения, "ИсправлениеОтрицательныхОстатков.Ошибка");
				ЗаписьЖурналаРегистрации(
					СтрокаИсключения,
					УровеньЖурналаРегистрации.Ошибка,
					,
					,
					ТекстСообщения);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
				
	КонецЦикла;
	
	МассивДокументов = Новый Массив;
	Для Каждого ЭлементКэша Из КэшДокументов Цикл
		МассивДокументов.Добавить(ЭлементКэша.Ключ);
	КонецЦикла;
	
	МаксимальныйИндекс = МассивДокументов.ВГраница();
	Для i = 0 По МаксимальныйИндекс Цикл
		
		ТекДокумент = МассивДокументов[МаксимальныйИндекс - i];
		
		ДокументОбъект = ТекДокумент.ПолучитьОбъект();
		ДокументОбъект.Товары.Загрузить(КэшДокументов[ТекДокумент].Товары);
		ДокументОбъект.ВидыЗапасов.Загрузить(КэшДокументов[ТекДокумент].ВидыЗапасов);
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			РезультатПроведения = Нстр("ru = 'перепроведен успешно.'");
		Исключение
			ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			РезультатПроведения = Нстр("ru = 'Ошибка при проведении. Необходимо отменить проведение и провести вручную.'");
			
			
			ТекстИсключения = НСтр("ru = '%Парам1% перепроведения документа'",
			ОбщегоНазначения.КодОсновногоЯзыка());
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Парам1%", "ИсправлениеОтрицательныхОстатков.Ошибка");
			
			ЗаписьЖурналаРегистрации(
			ТекстИсключения,
				УровеньЖурналаРегистрации.Ошибка,
				ДокументОбъект.Метаданные(),
				,
				ИнформацияОбОшибке);
		КонецПопытки;
		СтатусыПроведенияДокументов.Вставить(ТекДокумент, РезультатПроведения);
	КонецЦикла;
	
	Если ПараметрыВызова.Свойство("АдресХранилища") Тогда
		ПоместитьВоВременноеХранилище(СтатусыПроведенияДокументов, ПараметрыВызова.АдресХранилища);
	КонецЕсли;
	
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = ИсходноеПроводитьБезКонтроляОстатковТоваровОрганизаций;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Выполняет установку параметров сеанса. Вызывается из модуля сеанса.
//
// Параметры:
//   ИмяПараметра           - Строка - имя параметра сеанса.
//   УстановленныеПараметры - Массив - массив всех установленных параметров сеанса.
//
Процедура УстановитьПараметрыСеанса(ИмяПараметра, УстановленныеПараметры) Экспорт
	
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Ложь;
	
	Если ИмяПараметра = "ПроводитьБезКонтроляОстатковТоваровОрганизаций" Тогда
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Ложь;
		УстановленныеПараметры.Добавить(ИмяПараметра);
	КонецЕсли;

КонецПроцедуры

Функция ИмяСобытияВыключенКонтрольОстатков() Экспорт
	
	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	Возврат НСтр("ru = 'Контроль остатков товаров организаций'", КодОсновногоЯзыка);
	
КонецФункции

Функция ИмяДопСвойстваДляПерезаполненияВидовЗапасов() Экспорт
	
	Возврат "ПерезаполнитьВидыЗапасов";
	
КонецФункции

Функция ИмяРеквизитаФормыВидыЗапасовБылиИзменены()
	
	Возврат "ВидыЗапасовБылиИзменены";
	
КонецФункции


// Метод подготавливает данные для отчета "Остатки товаров организаций".
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, для которого вызывается формирование отчета.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Содержит временную таблицу ТаблицаТоваров, 
//														подготовленные данные помещаются в менеджер.
//	ПараметрыЗаполненияВидовЗапасов - Структура - Параметры заполнения, см. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//
Процедура ПодготовитьДанныеДляОтчета(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	СформироватьВТДоступныеВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, "");
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Ложь);
	СохранитьИсходныеДвиженияТоваровИРезервов(ДокументОбъект.Ссылка, МенеджерВременныхТаблиц);
	
КонецПроцедуры

// Заполняет в тексте сообщения информационные поля.
//
// Параметры:
//	ТекстСообщения - Строка - Шаблон текста сообщения.
//	Регистратор - ДокументСсылка - Ссылка на документ.
//	Выборка - ВыборкаИзРезультатаЗапроса - Источник данных для заполнения.
//
Процедура ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОрганизацийИРезервам(ТекстСообщения,
																								Регистратор,
																								Выборка) Экспорт
	
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Выборка.Организация);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%АналитикаНоменклатуры%", Выборка.АналитикаУчетаНоменклатуры);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидЗапасов%", Выборка.ВидЗапасов);
	
	Если ЗначениеЗаполнено(Выборка.НомерГТД) Тогда
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%", СокрЛП(Выборка.НомерГТД));
	Иначе
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%", НСтр("ru = '<без номера ГТД>'"));
	КонецЕсли;
	
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Месяц%", Формат(Выборка.Период, НСтр("ru='ДФ=''MMMM гггг'''")));
	
КонецПроцедуры

// Возвращает дату хранения актуальных остатков
// 
// Возвращаемое значение:
// 	Дата - дата хранения актуальных остатков
//
Функция ДатаАктуальныхОстатков() Экспорт
	
	Возврат '30000101';
	
КонецФункции

#КонецОбласти

#Область Обмены

// Заполняет реквизиты, хранящие информацию о видах запасов и аналитиках учета номенклатуры в табличных частях товаров
// документа, а также заполняет табличные части виды запасов.
//
// Параметры:
//	Объект - ДокументОбъект - документ, для которого необходимо выполнить заполнение информации.
//	Отказ - Булево - признак того, что не удалось заполнить данные.
//	ТаблицыДокумента - Структура, Неопределено - коллекция содержащая, информацию о данных табличных частей
//													товаров документа.
//
Процедура ЗаполнитьВидыЗапасовПриОбмене(Объект, Отказ, ТаблицыДокумента = Неопределено) Экспорт
	
	МенеджерДокумента	= ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	МеханизмыДокумента	= ПроведениеДокументов.УчетныеМеханизмыДокумента(МенеджерДокумента);
	
	Если МеханизмыДокумента.Найти("ОперативныйУчетТоваровОрганизаций") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		Объект.ЗаполнитьВидыЗапасовПриОбмене(Отказ, ТаблицыДокумента);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для установки использования регламентного задания свертки резервов.
//
// Параметры:
//  Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеДляУстановкиИспользованияРегламентногоЗаданияСверткиРезервов(Параметры) Экспорт
	
	// Регистрация данных не требуется, потому что регламентные задания не используются как
	// данные, по которым нужно регистрировать изменения.
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиЭтаповЗакрытияМесяца

#Область ИсправлениеДублейВидовЗапасов

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
//
// Параметры:
//	ТаблицаЭтапов - ТаблицаЗначений - таблица этапов (см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьТаблицуОписанияЭтапов).
//	ТекущийРодитель - Строка - идентификатор группы.
//
Процедура ДобавитьЭтап_ИсправлениеДублейВидовЗапасов(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов,
															ТекущийРодитель,
															Перечисления.ОперацииЗакрытияМесяца.ИсправлениеДублейВидовЗапасов,
															Истина,
															Ложь,
															Ложь);
	НоваяСтрока.ВыполняетсяВручную		= Истина;
	НоваяСтрока.ТекстВыполнить			= НСтр("ru='Исправить'");
	НоваяСтрока.ДействиеИспользование	= ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
											"ЗапасыСервер.Использование_ИсправлениеДублейВидовЗапасов");
	НоваяСтрока.ДействиеВыполнить		= ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
										Метаданные.Справочники.ВидыЗапасов.Формы.ФормаСписка.ПолноеИмя());
	
КонецПроцедуры

Процедура Использование_ИсправлениеДублейВидовЗапасов(ПараметрыОбработчика) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = Справочники.ВидыЗапасов.ТекстЗапросаНаличиеДублейВидовЗапасов();
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(ПараметрыОбработчика,
															НСтр("ru='Дублей видов запасов не найдено.'",
																ОбщегоНазначения.КодОсновногоЯзыка()));
		
	Иначе
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			НСтр("ru='Обнаружены дубли видов запасов. Требуется выполнить замену дублей и удалить помеченные виды запасов.'",
				ОбщегоНазначения.КодОсновногоЯзыка()),
			,
			,
			Перечисления.ВажностьПроблемыУчета.Ошибка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ИсправлениеОшибокВИсходныхДанных

Процедура УстаревшиеВидыЗапасовСОстаткамиОбновитьЗаписи(ПараметрыПроверки) Экспорт
	
	РегистрыСведений.УстаревшиеВидыЗапасовСОстатками.ОбновитьЗаписи();
	
КонецПроцедуры

Процедура ПроверкаКорректностьРеализацииУказаннойВВозврате(ПараметрыПроверки) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация 					КАК Организация,
	|	Т.Регистратор 					КАК Возврат,
	|	Т.ДокументИсточник 				КАК Реализация,
	|	Т.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыРеализации,
	|	Т.КорВидЗапасов 				КАК ВидЗапасовРеализации,
	|	Т.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов 					КАК ВидЗапасов
	|ПОМЕСТИТЬ ВТВсеДвиженияВозвратов
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|	И Т.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|	И Т.ДокументИсточник ССЫЛКА Документ.РеализацияТоваровУслуг
	|ИНДЕКСИРОВАТЬ ПО
	|	Возврат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация 							КАК Организация,
	|	Т.Возврат 								КАК Возврат,
	|	Т.Реализация 							КАК Реализация,
	|	Т.АналитикаУчетаНоменклатурыРеализации	КАК АналитикаУчетаНоменклатурыРеализации,
	|	Т.ВидЗапасовРеализации 					КАК ВидЗапасовРеализации,
	|	Т.АналитикаУчетаНоменклатуры 			КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов 							КАК ВидЗапасов
	|ПОМЕСТИТЬ ВТДвиженияВозвратов
	|ИЗ
	|	ВТВсеДвиженияВозвратов КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК Возвраты
	|		ПО Т.Возврат = Возвраты.Ссылка
	|		И Т.АналитикаУчетаНоменклатуры = Возвраты.АналитикаУчетаНоменклатуры
	|		И Т.ВидЗапасов = Возвраты.ВидЗапасов
	|
	|ГДЕ
	|	Возвраты.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиВозврата.ИзДокументаПродажи)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Реализация,
	|	АналитикаУчетаНоменклатурыРеализации,
	|	ВидЗапасовРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Реализация,
	|	Т.Реализация КАК Регистратор
	|ПОМЕСТИТЬ ВТРеализации
	|ИЗ
	|	ВТДвиженияВозвратов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Реализация,
	|	Корректировка.Ссылка КАК Регистратор
	|ИЗ
	|	ВТДвиженияВозвратов КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Корректировка
	|		ПО Корректировка.ДокументОснование = Т.Реализация  	
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация 					КАК Организация,
	|	Реализации.Реализация			КАК Реализация,
	|	Т.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов 					КАК ВидЗапасов
	|ПОМЕСТИТЬ ВТДвиженияРеализаций
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРеализации КАК Реализации
	|		ПО Т.Регистратор = Реализации.Регистратор
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И Т.Период <= &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Реализация,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Возвраты.Организация 						  КАК Организация,
	|	Возвраты.Возврат 							  КАК Возврат,
	|	Возвраты.Реализация 						  КАК Реализация,
	|	Возвраты.АналитикаУчетаНоменклатурыРеализации КАК АналитикаУчетаНоменклатуры,
	|	Возвраты.ВидЗапасовРеализации 				  КАК ВидЗапасов
	|ПОМЕСТИТЬ ВТРасхожденияВозвратов
	|ИЗ
	|	ВТДвиженияВозвратов КАК Возвраты
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДвиженияРеализаций КАК Реализации
	|		ПО Возвраты.Организация = Реализации.Организация
	|			И Возвраты.Реализация = Реализации.Реализация
	|			И Возвраты.АналитикаУчетаНоменклатурыРеализации = Реализации.АналитикаУчетаНоменклатуры
	|			И (Возвраты.ВидЗапасовРеализации = Реализации.ВидЗапасов
	|				ИЛИ Реализации.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|
	|ГДЕ
	|	Реализации.Реализация ЕСТЬ NULL";
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация", 				НСтр("ru='Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Возврат",						НСтр("ru='Документ возврата'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Реализация",					НСтр("ru='Документ реализации'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("АналитикаУчетаНоменклатуры",	НСтр("ru='Аналитика номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("ВидЗапасов",					НСтр("ru='Вид запасов'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
		"ВТРасхожденияВозвратов",
		НСтр("ru='Обнаружены возвращенные от клиента товары, отсутствующие в документе реализации организации ""%1""'", ОбщегоНазначения.КодОсновногоЯзыка()),
		СписокПолей,
		"Возврат");
	
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(ПараметрыПроверки,
																	ПараметрыРегистрации,
																	ТекстЗапроса);
	
КонецПроцедуры

Процедура ПроверкаКорректностиЗаполненияСуммВОтчетахПоКомиссииМеждуОрганизациями(ПараметрыПроверки) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТоварыОтчета.Организация  КАК Организация,
	|	ТоварыОтчета.Ссылка       КАК ОтчетПоКомиссии,
	|	ТоварыОтчета.АналитикаУчетаНоменклатуры КАК ДокументОтчета,
	|	СУММА(ТоварыОтчета.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТОтчетовПоКомиссииМеждуОрганизациями
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтчетПоКомиссии.Организация КАК Организация,
	|		ОтчетПоКомиссии.Ссылка      КАК Ссылка,
	|		ТоварыОтчета.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОтчета.СуммаПродажи   КАК Сумма
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТоварыОтчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетПоКомиссии
	|			ПО ТоварыОтчета.Ссылка = ОтчетПоКомиссии.Ссылка
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|			ПО ТоварыОтчета.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|	ГДЕ
	|		ОтчетПоКомиссии.Проведен
	|		И ОтчетПоКомиссии.Организация В(&МассивОрганизаций)
	|		И ОтчетПоКомиссии.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ЕСТЬNULL(ТаблицаНоменклатуры.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПустаяСсылка)) В(
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтчетПоКомиссии.Организация КАК Организация,
	|		ОтчетПоКомиссии.Ссылка      КАК Ссылка,
	|		ЗапасыОтчета.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		-ЗапасыОтчета.СуммаСНДС     КАК Сумма
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ЗапасыОтчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетПоКомиссии
	|			ПО ЗапасыОтчета.Ссылка = ОтчетПоКомиссии.Ссылка
	|	ГДЕ
	|		ОтчетПоКомиссии.Проведен
	|		И ОтчетПоКомиссии.Организация В(&МассивОрганизаций)
	|		И ОтчетПоКомиссии.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	
	|	) КАК ТоварыОтчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОтчета.Организация,
	|	ТоварыОтчета.Ссылка,
	|	ТоварыОтчета.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыОтчета.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОтчета.Организация     КАК Организация,
	|	ТоварыОтчета.ОтчетПоКомиссии КАК ОтчетПоКомиссии
	|ПОМЕСТИТЬ НекорректныеСуммыОтчетовПоКомиссииМеждуОрганизациями
	|ИЗ
	|	ВТОтчетовПоКомиссииМеждуОрганизациями КАК ТоварыОтчета";
	
	ИмяПоляОбъекта = "ОтчетПоКомиссии";
	
	ИмяВременнойТаблицы = "НекорректныеСуммыОтчетовПоКомиссииМеждуОрганизациями";
	ШаблонТекстаОшибки  = НСтр("ru='Обнаружены отчеты по комиссии между организациями с некорректными суммовыми показателями по организации ""%1"" за период %2'",
								ОбщегоНазначения.КодОсновногоЯзыка());
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация",  НСтр("ru='Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить(ИмяПоляОбъекта, НСтр("ru='Отчет по комиссии между организациями'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(ИмяВременнойТаблицы,
																									ШаблонТекстаОшибки,
																									СписокПолей,
																									ИмяПоляОбъекта);
	
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(ПараметрыПроверки, ПараметрыРегистрации, ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область ИсправлениеОтрицательныхОстатковТоваровОрганизаций

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
//
// Параметры:
//	ТаблицаЭтапов  - ТаблицаЗначений - таблица этапов (см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьТаблицуОписанияЭтапов).
//	ТекущийРодитель - Строка - идентификатор группы.
//
Процедура ДобавитьЭтап_ИсправлениеОтрицательныхОстатковТоваровОрганизаций(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ИсправлениеОтрицательныхОстатковТоваровОрганизаций);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ДействиеОформление = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ЗапасыСервер.Оформление_ИсправлениеОтрицательныхОстатковТоваровОрганизаций");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Обработки.ПомощникИсправленияОстатковТоваровОрганизаций.Формы.ОсновнаяФорма.ПолноеИмя());
	
КонецПроцедуры

// Инициализирует этап исправления отрицательных остатков товаров организации.
//
// Параметры:
//	ПараметрыОбработчика - см. ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыОбработчикаЭтапаЗакрытияМесяцаДляПроверки.
//
Процедура Оформление_ИсправлениеОтрицательныхОстатковТоваровОрганизаций(ПараметрыОбработчика) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		ПараметрыОбработчика.ДанныеЭтапа.Наименование = НСтр("ru = 'Исправление отрицательных остатков товаров организации'");
	КонецЕсли;
	
	ПараметрыОбработчика.ДанныеЭтапа.ТекстВыполнить = НСтр("ru='Исправить'");
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика);
	
КонецПроцедуры

Процедура ОписаниеПроверок_ИсправлениеОтрицательныхОстатковТоваровОрганизаций(ТаблицаПроверок) Экспорт
	
	// Отрицательные остатки товаров организаций.
	ОписаниеПроверки = ЗакрытиеМесяцаСервер.ДобавитьОписаниеНовойПроверки(ТаблицаПроверок,
		"ОтрицательныеОстаткиТоваровОрганизаций",
		Перечисления.ОперацииЗакрытияМесяца.ИсправлениеОтрицательныхОстатковТоваровОрганизаций,
		Перечисления.МоментЗапускаПроверкиОперацииЗакрытияМесяца.ДоИПослеРасчета,
		"ЗапасыСервер.ПроверкаОтрицательныхОстатковТоваровОрганизаций");
	
	ЗакрытиеМесяцаСервер.ЗаполнитьПредставлениеНовойПроверки(ОписаниеПроверки,
		НСтр("ru='Отрицательные остатки в регистре ""Товары организаций""'", ОбщегоНазначения.КодОсновногоЯзыка()),
		НСтр("ru='Отрицательных остатков быть не должно.'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
КонецПроцедуры

// Определяет наличие движений по операциям раздельного оформления закупок.
//
// Параметры:
//	Период - Дата - окончание периода, по которому производится выбора движения из регистра накопления ТоварыОрганизаций;
//		   - Неопределено - выборка без условия по периоду.
//
// Возвращаемое значение:
//	Булево - Истина, если присутствуют жвижения раздельного оформления закупок.
//
Функция ЕстьРаздельноеОформлениеЗакупок(Период = Неопределено) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков") И 
		 НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ 
		|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|ГДЕ
		|	ТоварыОрганизаций.ХозяйственнаяОперация В (&ОперацииРаздельногоОформленияЗакупок)
		|	И (ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД
		|	И ТоварыОрганизаций.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
		|	И ТоварыОрганизаций.Период <= &Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварыОрганизаций.Период УБЫВ";

	Если Период = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ТоварыОрганизаций.Период <= &Период", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОперацииРаздельногоОформленияЗакупок", ЗакупкиСервер.ХозяйственныеОперацииРаздельнойЗакупкиБезОтборов());
	Запрос.УстановитьПараметр("Период", 							  Период);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Формирует текст дополнительного запроса для условного сторнирования движений регистра накопления ТоварыОрганизаций по схемам "В пути".
// Выборки данных для каждого из рассматриваемых документов должны формироваться в соответствии с функциями ТекстЗапросаТаблицаТоварыОрганизаций()
// модулей менеджеров данных документов.
// Поле выборки "Служебный" соответствует индексу в запросе ТекстЗапросаТаблицаТоварыОрганизаций().
//
// Параметры:
//	 ШаблонПериод                  - Строка - имя параметра "Период"; определяется из запросов, использующих вызов данной функции;
//   ИсправленияРазвернутогоСальдо - Булево - признак формирования сторнирующих движений для документов ИсправлениеРазвернутогоСальдоТоваровОрганизаций.
//
// Возвращаемое значение:
//	 Строка - текст запроса.
//
Функция СторнироватьДвиженияТоварыОрганизацийВПути(Знач ШаблонПериод = "&КонецПериода", Знач ИсправленияРазвернутогоСальдо = Ложь) Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	РеестрДокументов.СторнируемыйДокумент КАК Ссылка
		|ПОМЕСТИТЬ Сторно
		|ИЗ
		|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|ГДЕ
		|	РеестрДокументов.СторноИсправление
		|	И РеестрДокументов.Проведен
		|	И РеестрДокументов.ДатаДокументаИБ <= &ШаблонПериод
		|	И НЕ РеестрДокументов.ДополнительнаяЗапись
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата							КАК Период,
		|	ДанныеДокумента.Организация						КАК Организация,
		|	ТаблицаИсправлений.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаИсправлений.ВидЗапасовОприходования		КАК ВидЗапасов,
		|	ТаблицаИсправлений.НомерГТДОприходования 		КАК НомерГТД,
		|	ТаблицаИсправлений.Количество					КАК КоличествоСторно,
		|	0												КАК Служебный
		|ПОМЕСТИТЬ ИсправлениеРазвернутогоСальдоТоваровОрганизаций
		|ИЗ
		|	Документ.ИсправлениеРазвернутогоСальдоТоваровОрганизаций.Исправления КАК ТаблицаИсправлений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИсправлениеРазвернутогоСальдоТоваровОрганизаций КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаИсправлений.Ссылка
		|ГДЕ
		|	&ИсправленияРазвернутогоСальдо
		|	И ДанныеДокумента.Проведен
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И ТаблицаИсправлений.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД
		|	И ТаблицаИсправлений.НомерГТДОприходования = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата							КАК Период,
		|	ДанныеДокумента.Организация						КАК Организация,
		|	ТаблицаИсправлений.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаИсправлений.ВидЗапасовСписания			КАК ВидЗапасов,
		|	ТаблицаИсправлений.НомерГТДСписания				КАК НомерГТД,
		|	-ТаблицаИсправлений.Количество					КАК КоличествоСторно,
		|	1												КАК Служебный
		|ИЗ
		|	Документ.ИсправлениеРазвернутогоСальдоТоваровОрганизаций.Исправления КАК ТаблицаИсправлений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИсправлениеРазвернутогоСальдоТоваровОрганизаций КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаИсправлений.Ссылка
		|ГДЕ
		|	&ИсправленияРазвернутогоСальдо
		|	И ДанныеДокумента.Проведен
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И ТаблицаИсправлений.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД
		|	И ТаблицаИсправлений.НомерГТДСписания = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата								КАК Период,
		|	ДанныеДокумента.Организация							КАК Организация,
		|	АналитикаУчетаНоменклатурыПоПартнерам.КлючАналитики	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаДокумента.ВидЗапасов							КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)			КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ДанныеПоступления.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки))
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ * ТаблицаДокумента.Количество					КАК КоличествоСторно,
		|	4													КАК Служебный
		|ПОМЕСТИТЬ КорректировкаПриобретения
		|ИЗ
		|	Документ.КорректировкаПриобретения.ВидыЗапасов КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения.Расхождения КАК ТаблицаРасхождения
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаРасхождения.Ссылка
		|			И ТаблицаДокумента.КодСтроки = ТаблицаРасхождения.КодСтроки
		|			И ТаблицаДокумента.ЗаказПоставщику = ТаблицаРасхождения.ЗаказПоставщику
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаРасхождения.Номенклатура
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика = ТаблицаРасхождения.Характеристика
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Назначение = ТаблицаРасхождения.Назначение
		|			И (ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия = ТаблицаРасхождения.Серия
		|				ИЛИ ТаблицаРасхождения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|			И ТаблицаДокумента.ВариантОтражения = ТаблицаРасхождения.ВариантОтражения
		|			И ТаблицаДокумента.НомерГТД = ТаблицаРасхождения.НомерГТД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеПоступления
		|		ПО ДанныеДокумента.ДокументОснование = ДанныеПоступления.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыПоПартнерам
		|		ПО ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаУчетаНоменклатурыПоПартнерам.Номенклатура
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика = АналитикаУчетаНоменклатурыПоПартнерам.Характеристика
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Назначение = АналитикаУчетаНоменклатурыПоПартнерам.Назначение
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия = АналитикаУчетаНоменклатурыПоПартнерам.Серия
		|			И (ДанныеПоступления.Договор = АналитикаУчетаНоменклатурыПоПартнерам.МестоХранения)
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = АналитикаУчетаНоменклатурыПоПартнерам.СтатьяКалькуляции
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеПоступления.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|	И ТаблицаДокумента.ВариантОтражения В (
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокПоступлений.УвеличитьЗакупкуУвеличитьТоварыУПартнеров), 
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокПоступлений.УменьшитьЗакупкуУменьшитьТоварыУПартнеров))
		// Не недостача по неотфактуровке.
		|	И НЕ (
		|		ДанныеДокумента.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|		И ДанныеДокумента.Договор.ВариантОформленияЗакупок В (ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияЗакупок.НеотфактурованныеПоставкиТоваров),
		|															  ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияЗакупок.НеотфактурованныеПоставкиТоваровИУслуг))
		|		И ТаблицаДокумента.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокПоступлений.УменьшитьЗакупкуУменьшитьТоварыУПартнеров)
		|	)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата								КАК Период,
		|	ДанныеДокумента.Организация							КАК Организация,
		|	АналитикаУчетаНоменклатурыПоСкладам.КлючАналитики	КАК АналитикаУчетаНоменклатуры,
		|	ВидыЗапасовСкладские.Ссылка							КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)			КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ДанныеПоступления.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки))
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ * -ТаблицаДокумента.Количество				КАК КоличествоСторно,
		|	5													КАК Служебный
		|ИЗ
		|	Документ.КорректировкаПриобретения.ВидыЗапасов КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения.Расхождения КАК ТаблицаРасхождения
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаРасхождения.Ссылка
		|			И ТаблицаДокумента.КодСтроки = ТаблицаРасхождения.КодСтроки
		|			И ТаблицаДокумента.ЗаказПоставщику = ТаблицаРасхождения.ЗаказПоставщику
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаРасхождения.Номенклатура
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика = ТаблицаРасхождения.Характеристика
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Назначение = ТаблицаРасхождения.Назначение
		|			И (ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия = ТаблицаРасхождения.Серия
		|				ИЛИ ТаблицаРасхождения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|			И ТаблицаДокумента.НомерГТД = ТаблицаРасхождения.НомерГТД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеПоступления
		|		ПО ТаблицаДокумента.Ссылка.ДокументОснование = ДанныеПоступления.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыПоСкладам
		|		ПО ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаУчетаНоменклатурыПоСкладам.Номенклатура
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика = АналитикаУчетаНоменклатурыПоСкладам.Характеристика
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Назначение = АналитикаУчетаНоменклатурыПоСкладам.Назначение
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия = АналитикаУчетаНоменклатурыПоСкладам.Серия
		|			И (ТаблицаРасхождения.Склад = АналитикаУчетаНоменклатурыПоСкладам.МестоХранения)
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = АналитикаУчетаНоменклатурыПоСкладам.СтатьяКалькуляции
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСкладские
		|		ПО ВидыЗапасовСкладские.Организация = ТаблицаДокумента.ВидЗапасов.Организация
		|			И ВидыЗапасовСкладские.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|			И ВидыЗапасовСкладские.ВладелецТовара = ТаблицаДокумента.ВидЗапасов.ВладелецТовара
		|			И ВидыЗапасовСкладские.НалогообложениеНДС = ТаблицаДокумента.ВидЗапасов.НалогообложениеНДС
		|			И ВидыЗапасовСкладские.ГруппаФинансовогоУчета = ТаблицаДокумента.ВидЗапасов.ГруппаФинансовогоУчета
		|			И ВидыЗапасовСкладские.ГруппаПродукции = ТаблицаДокумента.ВидЗапасов.ГруппаПродукции
		|			И ВидыЗапасовСкладские.ВидЦены = ТаблицаДокумента.ВидЗапасов.ВидЦены
		|			И НЕ ВидыЗапасовСкладские.ЭтоДубль
		|			И НЕ ВидыЗапасовСкладские.Устаревший
		|			И НЕ ВидыЗапасовСкладские.ПометкаУдаления
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеПоступления.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|	И ТаблицаДокумента.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокПоступлений.УменьшитьЗакупкуУменьшитьТоварыУПартнеров)
		|	И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД
		// Не недостача по неотфактуровке.
		|	И НЕ (
		|		ДанныеДокумента.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|		И ДанныеДокумента.Договор.ВариантОформленияЗакупок В (ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияЗакупок.НеотфактурованныеПоставкиТоваров),
		|															  ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияЗакупок.НеотфактурованныеПоставкиТоваровИУслуг))
		|	)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата								КАК Период,
		|	ДанныеДокумента.Организация							КАК Организация,
		|	АналитикаУчетаНоменклатурыПоСкладам.КлючАналитики	КАК АналитикаУчетаНоменклатуры,
		|	ВидыЗапасовСкладские.Ссылка							КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)			КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ДанныеПоступления.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки))
		|			ТОГДА 0
		|		ИНАЧЕ -1
		|	КОНЕЦ * ТаблицаДокумента.Количество					КАК КоличествоСторно,
		|	8													КАК Служебный
		|ИЗ
		|	Документ.КорректировкаПриобретения.ВидыЗапасов КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения.Расхождения КАК ТаблицаРасхождения
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаРасхождения.Ссылка
		|			И ТаблицаДокумента.КодСтроки = ТаблицаРасхождения.КодСтроки
		|			И ТаблицаДокумента.ЗаказПоставщику = ТаблицаРасхождения.ЗаказПоставщику
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаРасхождения.Номенклатура
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика = ТаблицаРасхождения.Характеристика
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Назначение = ТаблицаРасхождения.Назначение
		|			И (ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия = ТаблицаРасхождения.Серия
		|				ИЛИ ТаблицаРасхождения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|			И ТаблицаДокумента.НомерГТД = ТаблицаРасхождения.НомерГТД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеПоступления
		|		ПО ТаблицаДокумента.Ссылка.ДокументОснование = ДанныеПоступления.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыПоСкладам
		|		ПО ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаУчетаНоменклатурыПоСкладам.Номенклатура
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика = АналитикаУчетаНоменклатурыПоСкладам.Характеристика
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Назначение = АналитикаУчетаНоменклатурыПоСкладам.Назначение
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия = АналитикаУчетаНоменклатурыПоСкладам.Серия
		|			И (ТаблицаРасхождения.Склад = АналитикаУчетаНоменклатурыПоСкладам.МестоХранения)
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = АналитикаУчетаНоменклатурыПоСкладам.СтатьяКалькуляции
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСкладские
		|		ПО ВидыЗапасовСкладские.Организация = ТаблицаДокумента.ВидЗапасов.Организация
		|			И ВидыЗапасовСкладские.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|			И ВидыЗапасовСкладские.ВладелецТовара = ТаблицаДокумента.ВидЗапасов.ВладелецТовара
		|			И ВидыЗапасовСкладские.НалогообложениеНДС = ТаблицаДокумента.ВидЗапасов.НалогообложениеНДС
		|			И ВидыЗапасовСкладские.ГруппаФинансовогоУчета = ТаблицаДокумента.ВидЗапасов.ГруппаФинансовогоУчета
		|			И ВидыЗапасовСкладские.ГруппаПродукции = ТаблицаДокумента.ВидЗапасов.ГруппаПродукции
		|			И ВидыЗапасовСкладские.ВидЦены = ТаблицаДокумента.ВидЗапасов.ВидЦены
		|			И НЕ ВидыЗапасовСкладские.ЭтоДубль
		|			И НЕ ВидыЗапасовСкладские.Устаревший
		|			И НЕ ВидыЗапасовСкладские.ПометкаУдаления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|								Товары.Ссылка КАК Ссылка,
										// При двухходовке статус указаний серий в Приобретении и Корректировке приобретения может быть нулевым при учете серий по себестоимости.
										// Такие серии явно указываются в документе Поступление товаров. Здесь требуется узнать сам факт такой настройки учета серий.
		|								МАКСИМУМ(Товары.СтатусУказанияСерий = 14 ИЛИ ЕСТЬNULL(Политики.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ)) КАК УчетСерийПоСебестоимости,
		|								МАКСИМУМ(ЕСТЬNULL(Товары.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров, ЛОЖЬ)) КАК УчетСерийВНеотфактурованныхПоставкахТоваров,
		|								МАКСИМУМ(ЕСТЬNULL(Товары.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям, ЛОЖЬ)) КАК УчетТоваровВПутиОтПоставщикаПоСериям,
		|								Товары.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура
		|							ИЗ
		|								Документ.КорректировкаПриобретения.Расхождения КАК Товары
		|									ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК Политики
		|									ПО Политики.Ссылка = Товары.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры
		|										И Политики.Склад = Товары.Склад
		|							СГРУППИРОВАТЬ ПО
		|								Товары.Ссылка,
		|								Товары.АналитикаУчетаНоменклатуры.Номенклатура) КАК ДанныеСтатусовСерий
		|		ПО ТаблицаДокумента.Ссылка = ДанныеСтатусовСерий.Ссылка
		|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура = ДанныеСтатусовСерий.Номенклатура
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеПоступления.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|	И ТаблицаДокумента.ВариантОтражения = ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокПоступлений.УвеличитьЗакупкуУвеличитьТоварыУПартнеров)
		// Не излишек по товарам в пути с сериями по себестоимости.
		|	И НЕ (
		|		ДанныеДокумента.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|		И ДанныеДокумента.Договор.ВариантОформленияЗакупок = ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияЗакупок.ТоварыВПути)
		|		И (ДанныеСтатусовСерий.УчетСерийПоСебестоимости
		|			И НЕ (ДанныеСтатусовСерий.УчетСерийВНеотфактурованныхПоставкахТоваров
		|				ИЛИ ДанныеСтатусовСерий.УчетТоваровВПутиОтПоставщикаПоСериям))
		|	)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка КАК Ссылка,
		|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) КАК СтатусУказанияСерий,
		|	МАКСИМУМ(ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров, ЛОЖЬ)) КАК УчетСерийВНеотфактурованныхПоставкахТоваров,
		|	МАКСИМУМ(ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям, ЛОЖЬ)) КАК УчетТоваровВПутиОтПоставщикаПоСериям,
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ПоступлениеТоваровНаСклад_ВтПараметрыНоменклатуры
		|ИЗ
		|	Документ.ПоступлениеТоваровНаСклад.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Ссылка,
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата						КАК Период,
		|	ДанныеДокумента.Организация					КАК Организация,
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.ВидЗапасов					КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ * ТаблицаТовары.Количество			КАК КоличествоСторно,
		|	0											КАК Служебный
		|ПОМЕСТИТЬ ПоступлениеТоваровНаСклад
		|ИЗ
		|	Документ.ПоступлениеТоваровНаСклад.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеДокумента.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути))
		|	И НЕ (ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД
		// Серии по себестоимости (14).
		|		И ТаблицаТовары.СтатусУказанияСерий = 14
		|		И НЕ (ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров, ЛОЖЬ)
		|			ИЛИ ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям, ЛОЖЬ)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// В пути, компенсация приобретения для ГТД с сериями по себестоимости.
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата						КАК Период,
		|	ДанныеДокумента.Организация					КАК Организация,
		|	Аналитики.КлючАналитики						КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.ВидЗапасов					КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД,
		|	ТаблицаТовары.Количество					КАК КоличествоСторно,
		|	2											КАК Служебный
		|ИЗ
		|	Документ.ПоступлениеТоваровНаСклад.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитики
		|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = Аналитики.Номенклатура
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = Аналитики.Характеристика
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = Аналитики.МестоХранения
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = Аналитики.Назначение
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = Аналитики.СтатьяКалькуляции
		|			И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитики.Серия
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеДокумента.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути))
		|	И ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД
		// Серии по себестоимости (14).
		|	И ТаблицаТовары.СтатусУказанияСерий = 14
		|	И НЕ (ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров, ЛОЖЬ)
		|		ИЛИ ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям, ЛОЖЬ))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// В пути, сторно приобретения для ГТД (включая РНПТ) с сериями по себестоимости.
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата				КАК Период,
		|	ДанныеДокумента.Организация			КАК Организация,
		|	Аналитики.КлючАналитики 			КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.ВидЗапасовНаСкладе	КАК ВидЗапасов,
		|	ТаблицаТовары.НомерГТД              КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|			ТОГДА -1
		|		ИНАЧЕ 0
		|	КОНЕЦ * ТаблицаТовары.Количество	КАК КоличествоСторно,
		|	3									КАК Служебный
		|ИЗ
		|	Документ.ПоступлениеТоваровНаСклад.ВидыЗапасов КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитики
		|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = Аналитики.Номенклатура
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = Аналитики.Характеристика
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = Аналитики.МестоХранения
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = Аналитики.Назначение
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = Аналитики.СтатьяКалькуляции
		|			И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитики.Серия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоступлениеТоваровНаСклад_ВтПараметрыНоменклатуры КАК ДанныеСтатусовСерий
		|		ПО ТаблицаТовары.Ссылка = ДанныеСтатусовСерий.Ссылка
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = ДанныеСтатусовСерий.Номенклатура
		|
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеДокумента.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути))
		|	И ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД
		// Серии по себестоимости (14).
		|	И (ДанныеСтатусовСерий.СтатусУказанияСерий = 14
		|		И НЕ (ДанныеСтатусовСерий.УчетСерийВНеотфактурованныхПоставкахТоваров
		|			ИЛИ ДанныеСтатусовСерий.УчетТоваровВПутиОтПоставщикаПоСериям))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Товары в пути.
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата										КАК Период,
		|	ДанныеДокумента.Организация									КАК Организация,
		|	ТаблицаТовары.АналитикаУчетаНоменклатурыТоварыУПартнеров	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.ВидЗапасов									КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)					КАК НомерГТД,
		|	-ТаблицаТовары.Количество									КАК КоличествоСторно,
		|	4															КАК Служебный
		|ИЗ
		|	Документ.ПоступлениеТоваровНаСклад.ВидыЗапасов КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ТаблицаТовары.АналитикаУчетаНоменклатурыТоварыУПартнеров.Номенклатура.ВестиУчетПоГТД
		|	И ДанныеДокумента.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Неотфактуровка.
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата										КАК Период,
		|	ДанныеДокумента.Организация									КАК Организация,
		|	ТаблицаТовары.АналитикаУчетаНоменклатурыТоварыУПартнеров	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.ВидЗапасов									КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)					КАК НомерГТД,
		|	0															КАК КоличествоСторно,
		|	5															КАК Служебный
		|ИЗ
		|	Документ.ПоступлениеТоваровНаСклад.ВидыЗапасов КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеДокумента.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата						КАК Период,
		|	ДанныеДокумента.Организация					КАК Организация,
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.ВидЗапасов					КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД,
		|	0											КАК КоличествоСторно,
		|	6											КАК Служебный
		|ИЗ
		|	Документ.ПоступлениеТоваровНаСклад.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеДокумента.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка КАК Ссылка,
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.НомерГТД КАК НомерГТД,
		|	СУММА(ТаблицаТовары.Количество) КАК Количество,
		|	СУММА(ТаблицаТовары.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТовары.Склад КАК Склад,
		|	ТаблицаТовары.ЗаказПоставщику КАК ЗаказПоставщику
		|ПОМЕСТИТЬ ПриобретениеТоваровУслуг_ВтТоварыДляСоединенияАналитик
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Ссылка,
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.НомерГТД,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.ЗаказПоставщику,
		|	ТаблицаТовары.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	АналитикаУчетаНоменклатуры,
		|	НомерГТД,
		|	ЗаказПоставщику,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Двухходовка.
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата						КАК Период,
		|	ДанныеДокумента.Организация					КАК Организация,
		// На договор.
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.ВидЗапасов					КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|			ТОГДА 1
		|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки))
		|			ТОГДА 0
		|		ИНАЧЕ 0
		|	КОНЕЦ * ТаблицаТовары.Количество			КАК КоличествоСторно,
		|	3											КАК Служебный
		|ПОМЕСТИТЬ ПриобретениеТоваровУслуг
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг.ВидыЗапасов КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	И ДанныеДокумента.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|	И НЕ ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути)
		|	И НЕ ТаблицаТовары.СписатьНаРасходы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата						КАК Период,
		|	ДанныеДокумента.Организация					КАК Организация,
		// На склад.
		|	Аналитика.КлючАналитики						КАК АналитикаУчетаНоменклатуры,
		|	ВидыЗапасовСкладские.Ссылка					КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка))
		|			ТОГДА -1
		|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки))
		|			ТОГДА 0
		|		ИНАЧЕ 0
		|	КОНЕЦ * ТаблицаТовары.Количество			КАК КоличествоСторно,
		|	5											КАК Служебный
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг.ВидыЗапасов КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриобретениеТоваровУслуг_ВтТоварыДляСоединенияАналитик КАК ТоварыДокумента
		|		ПО ТаблицаТовары.Ссылка = ТоварыДокумента.Ссылка
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = ТоварыДокумента.АналитикаУчетаНоменклатуры.Номенклатура
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = ТоварыДокумента.АналитикаУчетаНоменклатуры.Характеристика
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = ТоварыДокумента.АналитикаУчетаНоменклатуры.Назначение
		|			И (ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = ТоварыДокумента.АналитикаУчетаНоменклатуры.МестоХранения
		|				ИЛИ (ДанныеДокумента.Договор = ТоварыДокумента.АналитикаУчетаНоменклатуры.МестоХранения
		|						И ДанныеДокумента.ХозяйственнаяОперация В (
		|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути), 
		|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути), 
		|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки), 
		|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|						И НЕ ДанныеДокумента.ХозяйственнаяОперация В (
		|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
		|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки))
		|					)
		|			)
		|			И (ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = ТоварыДокумента.АналитикаУчетаНоменклатуры.Серия
		|				ИЛИ ТоварыДокумента.АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|			И ТаблицаТовары.НомерГТД = ТоварыДокумента.НомерГТД
		|			И ТаблицаТовары.СтавкаНДС = ТоварыДокумента.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = Аналитика.Серия
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = Аналитика.Назначение
		|			И ТаблицаТовары.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
		|			И ТоварыДокумента.Склад = Аналитика.МестоХранения
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСкладские
		|		ПО ВидыЗапасовСкладские.Организация = ТаблицаТовары.ВидЗапасов.Организация
		|			И ВидыЗапасовСкладские.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|			И ВидыЗапасовСкладские.ВладелецТовара = ТаблицаТовары.ВидЗапасов.ВладелецТовара
		|			И ВидыЗапасовСкладские.НалогообложениеНДС = ТаблицаТовары.ВидЗапасов.НалогообложениеНДС
		|			И ВидыЗапасовСкладские.ГруппаФинансовогоУчета = ТаблицаТовары.ВидЗапасов.ГруппаФинансовогоУчета
		|			И ВидыЗапасовСкладские.ГруппаПродукции = ТаблицаТовары.ВидЗапасов.ГруппаПродукции
		|			И ВидыЗапасовСкладские.ВидЦены = ТаблицаТовары.ВидЗапасов.ВидЦены
		|			И НЕ ВидыЗапасовСкладские.ЭтоДубль
		|			И НЕ ВидыЗапасовСкладские.Устаревший
		|			И НЕ ВидыЗапасовСкладские.ПометкаУдаления
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	И (НЕ ДанныеДокумента.ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути), 
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути), 
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки), 
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка))
		|		ИЛИ НЕ ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ))
		|	И ДанныеДокумента.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|	И ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД
		|	И НЕ ТаблицаТовары.СписатьНаРасходы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата											КАК Период,
		|	ДанныеДокумента.Организация										КАК Организация,
		|	ВЫБОР
		|		КОГДА ТаблицаРасхождений.ВидРасхождений = ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Недопоставка)
		|			ИЛИ ВЫБОР 
		|					КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Документ.ЗаказПоставщику 
		|						ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Документ.ЗаказПоставщику).ХозяйственнаяОперация
		|					КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Документ.ПриобретениеТоваровУслуг 
		|						ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Документ.ПриобретениеТоваровУслуг).ХозяйственнаяОперация
		|					КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Справочник.ДоговорыКонтрагентов
		|						ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Справочник.ДоговорыКонтрагентов).ХозяйственнаяОперация
		|				КОНЕЦ В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки))
		|			ТОГДА ТаблицаРасхождений.АналитикаУчетаНоменклатурыТоварыУПартнеров
		|		ИНАЧЕ АналитикаУчетаНоменклатурыБезСерии.КлючАналитики
		|	КОНЕЦ															КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаРасхождений.ВидЗапасов									КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)						КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ТаблицаРасхождений.ВидРасхождений = ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Недопоставка)
		|			ТОГДА -1
		|		ИНАЧЕ 1
		|	КОНЕЦ * ТаблицаРасхождений.Количество							КАК КоличествоСторно,
		|	0																КАК Служебный
		|ПОМЕСТИТЬ СписаниеРасхожденийПоступлениеПриобретение
		|ИЗ
		|	Документ.СписаниеРасхожденийПоступлениеПриобретение.Расхождения КАК ТаблицаРасхождений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеРасхожденийПоступлениеПриобретение КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаРасхождений.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыБезСерии
		|		ПО ТаблицаРасхождений.АналитикаУчетаНоменклатурыТоварыУПартнеров.Номенклатура = АналитикаУчетаНоменклатурыБезСерии.Номенклатура
		|			И ТаблицаРасхождений.АналитикаУчетаНоменклатурыТоварыУПартнеров.Характеристика = АналитикаУчетаНоменклатурыБезСерии.Характеристика
		|			И АналитикаУчетаНоменклатурыБезСерии.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			И ТаблицаРасхождений.АналитикаУчетаНоменклатурыТоварыУПартнеров.Назначение = АналитикаУчетаНоменклатурыБезСерии.Назначение
		|			И ТаблицаРасхождений.АналитикаУчетаНоменклатурыТоварыУПартнеров.МестоХранения = АналитикаУчетаНоменклатурыБезСерии.МестоХранения
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ТаблицаРасхождений.Номенклатура.ТипНоменклатуры В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	И (
		|		ТаблицаРасхождений.ВидРасхождений = ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Перепоставка)
		|			ИЛИ 
		|			(
		|				ТаблицаРасхождений.ВидРасхождений = ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Недопоставка)
		|					И ВЫБОР 
		|						КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Документ.ЗаказПоставщику 
		|							ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Документ.ЗаказПоставщику).ХозяйственнаяОперация
		|						КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Документ.ПриобретениеТоваровУслуг 
		|							ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Документ.ПриобретениеТоваровУслуг).ХозяйственнаяОперация
		|						КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Справочник.ДоговорыКонтрагентов
		|							ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Справочник.ДоговорыКонтрагентов).ХозяйственнаяОперация
		|					КОНЕЦ В (
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути),
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|		)
		|	)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата							КАК Период,
		|	ДанныеДокумента.Организация						КАК Организация,
		|	ТаблицаВидовЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаВидовЗапасов.ВидЗапасов					КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)		КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Документ.ЗаказПоставщику 
		|					ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Документ.ЗаказПоставщику).ХозяйственнаяОперация
		|				КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Документ.ПриобретениеТоваровУслуг 
		|					ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Документ.ПриобретениеТоваровУслуг).ХозяйственнаяОперация
		|				КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Справочник.ДоговорыКонтрагентов
		|					ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Справочник.ДоговорыКонтрагентов).ХозяйственнаяОперация
		|			КОНЕЦ В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки))
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ * ТаблицаВидовЗапасов.Количество			КАК КоличествоСторно,
		|	1												КАК Служебный
		|ИЗ
		|	Документ.СписаниеРасхожденийПоступлениеПриобретение.ВидыЗапасов КАК ТаблицаВидовЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеРасхожденийПоступлениеПриобретение КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаВидовЗапасов.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И (ТаблицаВидовЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар
		|		ИЛИ ТаблицаВидовЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД)
		|	И ТаблицаВидовЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	И ТаблицаВидовЗапасов.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ 
		|	ДанныеДокумента.Дата							КАК Период,
		|	ДанныеДокумента.Организация						КАК Организация,
		|	ТаблицаРасхождений.АналитикаУчетаНоменклатуры  	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаРасхождений.ВидЗапасов					КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)		КАК НомерГТД,
		|	ТаблицаРасхождений.Количество					КАК КоличествоСторно,
		|	4												КАК Служебный
		|ИЗ
		|	Документ.СписаниеРасхожденийПоступлениеПриобретение.Расхождения КАК ТаблицаРасхождений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеРасхожденийПоступлениеПриобретение КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаРасхождений.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод  
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ТаблицаРасхождений.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|	И ТаблицаРасхождений.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар
		|	И ТаблицаРасхождений.ВидРасхождений = ЗНАЧЕНИЕ(Перечисление.ВидыРасхожденийПоступленийПриобретений.Перепоставка)
		|	И ВЫБОР 
		|		КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Документ.ЗаказПоставщику 
		|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Документ.ЗаказПоставщику).ХозяйственнаяОперация
		|		КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Документ.ПриобретениеТоваровУслуг 
		|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Документ.ПриобретениеТоваровУслуг).ХозяйственнаяОперация
		|		КОГДА ДанныеДокумента.Распоряжение ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.Распоряжение КАК Справочник.ДоговорыКонтрагентов).ХозяйственнаяОперация
		|		КОНЕЦ В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Приход товары в пути, на договор, без ГТД.
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата						КАК Период,
		|	ДанныеДокумента.Организация					КАК Организация,
		|	ТоварыДокумента.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТоварыДокумента.ВидЗапасов					КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД,
		|	ТоварыДокумента.Количество					КАК КоличествоСторно,
		|	1											КАК Служебный
		|ПОМЕСТИТЬ ТаможеннаяДекларацияИмпорт
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТоварыДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТоварыДокумента.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни)
		|	И ТоварыДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Расход собственный товар, на склад, без ГТД.
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата															КАК Период,
		|	ДанныеДокумента.Организация														КАК Организация,
		|	ЕСТЬNULL(Аналитика.КлючАналитики, ТоварыДокумента.АналитикаУчетаНоменклатуры)	КАК АналитикаУчетаНоменклатуры,
		|	ЕСТЬNULL(ВидыЗапасовСкладские.Ссылка, ТоварыДокумента.ВидЗапасов)				КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)										КАК НомерГТД,
		|	-ТоварыДокумента.Количество														КАК КоличествоСторно,
		|	3																				КАК Служебный
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТоварыДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТоварыДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО ТоварыДокумента.Номенклатура = Аналитика.Номенклатура
		|			И ТоварыДокумента.Характеристика = Аналитика.Характеристика
		|			И ТоварыДокумента.Серия = Аналитика.Серия
		|			И ТоварыДокумента.Назначение = Аналитика.Назначение
		|			И ТоварыДокумента.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
		|			И ТоварыДокумента.Склад = Аналитика.МестоХранения
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСкладские
		|		ПО ВидыЗапасовСкладские.Организация = ТоварыДокумента.ВидЗапасов.Организация
		|			И ВидыЗапасовСкладские.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|			И ВидыЗапасовСкладские.ВладелецТовара = ТоварыДокумента.ВидЗапасов.ВладелецТовара
		|			И ВидыЗапасовСкладские.НалогообложениеНДС = ТоварыДокумента.ВидЗапасов.НалогообложениеНДС
		|			И ВидыЗапасовСкладские.ГруппаФинансовогоУчета = ТоварыДокумента.ВидЗапасов.ГруппаФинансовогоУчета
		|			И ВидыЗапасовСкладские.ГруппаПродукции = ТоварыДокумента.ВидЗапасов.ГруппаПродукции
		|			И ВидыЗапасовСкладские.ВидЦены = ТоварыДокумента.ВидЗапасов.ВидЦены
		|			И НЕ ВидыЗапасовСкладские.ЭтоДубль
		|			И НЕ ВидыЗапасовСкладские.Устаревший
		|			И НЕ ВидыЗапасовСкладские.ПометкаУдаления
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни)
		|	И ТоварыДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДАТАВРЕМЯ(1, 1, 1)													КАК Период,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)						КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)	КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)						КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)							КАК НомерГТД,
		|	0																	КАК КоличествоСторно,
		|	-1																	КАК Служебный
		|ПОМЕСТИТЬ УведомлениеОВвозеПрослеживаемыхТоваров
		|
		//++ Локализация
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата						КАК Период,
		|	ДанныеДокумента.Организация					КАК Организация,
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.ВидЗапасов					КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД,
		|	-ТаблицаТовары.Количество					КАК КоличествоСторно,
		|	1											КАК Служебный
		|ИЗ
		|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК ДанныеДокумента
		|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Дата <= &ШаблонПериод
		|	И НЕ ДанныеДокумента.Ссылка В 
		|		(ВЫБРАТЬ
		|			Сторно.Ссылка КАК Ссылка
		|		ИЗ
		|			Сторно КАК Сторно)
		|	И ТаблицаТовары.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ДанныеДокумента.РНПТ <> """"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов
		//-- Локализация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсправлениеРазвернутогоСальдоТоваровОрганизаций.Период						КАК Период,
		|	ИсправлениеРазвернутогоСальдоТоваровОрганизаций.Организация					КАК Организация,
		|	ИсправлениеРазвернутогоСальдоТоваровОрганизаций.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ИсправлениеРазвернутогоСальдоТоваровОрганизаций.ВидЗапасов					КАК ВидЗапасов,
		|	ИсправлениеРазвернутогоСальдоТоваровОрганизаций.НомерГТД					КАК НомерГТД,
		|	ИсправлениеРазвернутогоСальдоТоваровОрганизаций.КоличествоСторно			КАК КоличествоСторно
		|ПОМЕСТИТЬ ТоварыОрганизацийВПути
		|ИЗ
		|	ИсправлениеРазвернутогоСальдоТоваровОрганизаций КАК ИсправлениеРазвернутогоСальдоТоваровОрганизаций
		|ГДЕ
		|	&ИсправленияРазвернутогоСальдо
		|	И (ИсправлениеРазвернутогоСальдоТоваровОрганизаций.Организация, ИсправлениеРазвернутогоСальдоТоваровОрганизаций.АналитикаУчетаНоменклатуры, ИсправлениеРазвернутогоСальдоТоваровОрганизаций.ВидЗапасов) В
		|		(ВЫБРАТЬ
		|			КорректировкаПриобретения.Организация					КАК Организация,
		|			КорректировкаПриобретения.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|			КорректировкаПриобретения.ВидЗапасов					КАК ВидЗапасов
		|		ИЗ
		|			КорректировкаПриобретения КАК КорректировкаПриобретения
		|		ГДЕ
		|			КорректировкаПриобретения.КоличествоСторно <> 0
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПоступлениеТоваровНаСклад.Организация					КАК Организация,
		|			ПоступлениеТоваровНаСклад.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|			ПоступлениеТоваровНаСклад.ВидЗапасов					КАК ВидЗапасов
		|		ИЗ
		|			ПоступлениеТоваровНаСклад КАК ПоступлениеТоваровНаСклад
		|		ГДЕ
		|			ПоступлениеТоваровНаСклад.КоличествоСторно <> 0
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПриобретениеТоваровУслуг.Организация				КАК Организация,
		|			ПриобретениеТоваровУслуг.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|			ПриобретениеТоваровУслуг.ВидЗапасов					КАК ВидЗапасов
		|		ИЗ
		|			ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
		|		ГДЕ
		|			ПриобретениеТоваровУслуг.КоличествоСторно <> 0
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СписаниеРасхожденийПоступлениеПриобретение.Организация					КАК Организация,
		|			СписаниеРасхожденийПоступлениеПриобретение.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|			СписаниеРасхожденийПоступлениеПриобретение.ВидЗапасов					КАК ВидЗапасов
		|		ИЗ
		|			СписаниеРасхожденийПоступлениеПриобретение КАК СписаниеРасхожденийПоступлениеПриобретение
		|		ГДЕ
		|			СписаниеРасхожденийПоступлениеПриобретение.КоличествоСторно <> 0
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ТаможеннаяДекларацияИмпорт.Организация					КАК Организация,
		|			ТаможеннаяДекларацияИмпорт.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|			ТаможеннаяДекларацияИмпорт.ВидЗапасов					КАК ВидЗапасов
		|		ИЗ
		|			ТаможеннаяДекларацияИмпорт КАК ТаможеннаяДекларацияИмпорт
		|		ГДЕ
		|			ТаможеннаяДекларацияИмпорт.КоличествоСторно <> 0
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			УведомлениеОВвозеПрослеживаемыхТоваров.Организация					КАК Организация,
		|			УведомлениеОВвозеПрослеживаемыхТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|			УведомлениеОВвозеПрослеживаемыхТоваров.ВидЗапасов					КАК ВидЗапасов
		|		ИЗ
		|			УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
		|		ГДЕ
		|			УведомлениеОВвозеПрослеживаемыхТоваров.КоличествоСторно <> 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КорректировкаПриобретения.Период						КАК Период,
		|	КорректировкаПриобретения.Организация					КАК Организация,
		|	КорректировкаПриобретения.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	КорректировкаПриобретения.ВидЗапасов					КАК ВидЗапасов,
		|	КорректировкаПриобретения.НомерГТД						КАК НомерГТД,
		|	КорректировкаПриобретения.КоличествоСторно				КАК КоличествоСторно
		|ИЗ
		|	КорректировкаПриобретения КАК КорректировкаПриобретения
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступлениеТоваровНаСклад.Период						КАК Период,
		|	ПоступлениеТоваровНаСклад.Организация					КАК Организация,
		|	ПоступлениеТоваровНаСклад.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ПоступлениеТоваровНаСклад.ВидЗапасов					КАК ВидЗапасов,
		|	ПоступлениеТоваровНаСклад.НомерГТД						КАК НомерГТД,
		|	ПоступлениеТоваровНаСклад.КоличествоСторно				КАК КоличествоСторно
		|ИЗ
		|	ПоступлениеТоваровНаСклад КАК ПоступлениеТоваровНаСклад
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриобретениеТоваровУслуг.Период						КАК Период,
		|	ПриобретениеТоваровУслуг.Организация				КАК Организация,
		|	ПриобретениеТоваровУслуг.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ПриобретениеТоваровУслуг.ВидЗапасов					КАК ВидЗапасов,
		|	ПриобретениеТоваровУслуг.НомерГТД					КАК НомерГТД,
		|	ПриобретениеТоваровУслуг.КоличествоСторно			КАК КоличествоСторно
		|ИЗ
		|	ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписаниеРасхожденийПоступлениеПриобретение.Период						КАК Период,
		|	СписаниеРасхожденийПоступлениеПриобретение.Организация					КАК Организация,
		|	СписаниеРасхожденийПоступлениеПриобретение.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	СписаниеРасхожденийПоступлениеПриобретение.ВидЗапасов					КАК ВидЗапасов,
		|	СписаниеРасхожденийПоступлениеПриобретение.НомерГТД						КАК НомерГТД,
		|	СписаниеРасхожденийПоступлениеПриобретение.КоличествоСторно				КАК КоличествоСторно
		|ИЗ
		|	СписаниеРасхожденийПоступлениеПриобретение КАК СписаниеРасхожденийПоступлениеПриобретение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаможеннаяДекларацияИмпорт.Период						КАК Период,
		|	ТаможеннаяДекларацияИмпорт.Организация					КАК Организация,
		|	ТаможеннаяДекларацияИмпорт.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаможеннаяДекларацияИмпорт.ВидЗапасов					КАК ВидЗапасов,
		|	ТаможеннаяДекларацияИмпорт.НомерГТД						КАК НомерГТД,
		|	ТаможеннаяДекларацияИмпорт.КоличествоСторно				КАК КоличествоСторно
		|ИЗ
		|	ТаможеннаяДекларацияИмпорт КАК ТаможеннаяДекларацияИмпорт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Период						КАК Период,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация					КАК Организация,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.ВидЗапасов					КАК ВидЗапасов,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерГТД						КАК НомерГТД,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.КоличествоСторно				КАК КоличествоСторно
		|ИЗ
		|	УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период,
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	НомерГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Сторно
		|;
		|                                                                 
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ИсправлениеРазвернутогоСальдоТоваровОрганизаций
		|;
		|                                                                 
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КорректировкаПриобретения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПоступлениеТоваровНаСклад_ВтПараметрыНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПоступлениеТоваровНаСклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПриобретениеТоваровУслуг_ВтТоварыДляСоединенияАналитик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПриобретениеТоваровУслуг
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СписаниеРасхожденийПоступлениеПриобретение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаможеннаяДекларацияИмпорт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ УведомлениеОВвозеПрослеживаемыхТоваров";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ШаблонПериод",                  ШаблонПериод);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИсправленияРазвернутогоСальдо", ?(ИсправленияРазвернутогоСальдо, "ИСТИНА", "ЛОЖЬ"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЗапросОтрицательныеОстаткиТоваровОрганизаций()
	
	ТекстЗапроса = 
		СторнироватьДвиженияТоварыОрганизацийВПути("&КонецПериода") + 
		ОбщегоНазначения.РазделительПакетаЗапросов() +
		
		"ВЫБРАТЬ
		|	ВидЗапасов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТРазрешенныеВидыЗапасов
		|ИЗ
		|	Справочник.ВидыЗапасов КАК ВидЗапасов
		|ГДЕ
		|	ВидЗапасов.ТипЗапасов В (&КонтролируемыеТипыЗапасов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&КонецПериода										КАК Период,
		|	ТоварыОрганизацийОстатки.Организация 				КАК Организация,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизацийОстатки.ВидЗапасов 				КАК ВидЗапасов,
		|	ТоварыОрганизацийОстатки.НомерГТД 					КАК НомерГТД,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток  		КАК КоличествоОстаток,
		|	ТоварыОрганизацийОстатки.КОформлениюСписанияОстаток КАК КОформлениюСписанияОстаток
		|ПОМЕСТИТЬ ВТОстаткиТекущийПериод
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|		&ГраницаКонецПериода,
		|		Организация В (&МассивОрганизаций)
		|			И ВидЗапасов В (
		|				ВЫБРАТЬ
		|					ВТРазрешенныеВидыЗапасов.Ссылка
		|				ИЗ
		|					ВТРазрешенныеВидыЗапасов КАК ВТРазрешенныеВидыЗапасов)) КАК ТоварыОрганизацийОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&КонецПериода										КАК Период,
		|	ТоварыОрганизацийВПути.Организация 					КАК Организация,
		|	ТоварыОрганизацийВПути.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизацийВПути.ВидЗапасов 					КАК ВидЗапасов,
		|	ТоварыОрганизацийВПути.НомерГТД 					КАК НомерГТД,
		|	-ТоварыОрганизацийВПути.КоличествоСторно			КАК КоличествоОстаток,
		|	0													КАК КОформлениюСписанияОстаток
		|ИЗ
		|	ТоварыОрганизацийВПути КАК ТоварыОрганизацийВПути
		|ГДЕ
		|	ТоварыОрганизацийВПути.Период <= &КонецПериода
		|	И ТоварыОрганизацийВПути.Организация В (&МассивОрганизаций)
		|	И ТоварыОрганизацийВПути.ВидЗапасов В (
		|		ВЫБРАТЬ
		|			ВТРазрешенныеВидыЗапасов.Ссылка
		|		ИЗ
		|			ВТРазрешенныеВидыЗапасов КАК ВТРазрешенныеВидыЗапасов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&КонецПериода												КАК Период,
		|	РезервыТоваровОрганизацийОстатки.Организация				КАК Организация,
		|	РезервыТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизацийОстатки.ВидЗапасов					КАК ВидЗапасов,
		|	РезервыТоваровОрганизацийОстатки.НомерГТД					КАК НомерГТД,
		|	РезервыТоваровОрганизацийОстатки.КоличествоОстаток			КАК КоличествоОстаток,
		|	0															КАК КОформлениюСписанияОстаток
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
		|		&ГраницаКонецПериода,
		|		Организация В (&МассивОрганизаций)
		|			И ВидЗапасов В (
		|				ВЫБРАТЬ
		|					ВТРазрешенныеВидыЗапасов.Ссылка
		|				ИЗ
		|					ВТРазрешенныеВидыЗапасов КАК ВТРазрешенныеВидыЗапасов)) КАК РезервыТоваровОрганизацийОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	НомерГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ               
		|	&КонецПериода										КАК Период,
		|	ТоварыОрганизацийОстатки.Организация				КАК Организация,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизацийОстатки.ВидЗапасов 				КАК ВидЗапасов,
		|	ТоварыОрганизацийОстатки.НомерГТД 					КАК НомерГТД,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток			КАК КоличествоОстаток,
		|	ТоварыОрганизацийОстатки.КОформлениюСписанияОстаток	КАК КОформлениюСписанияОстаток
		|ПОМЕСТИТЬ ВТОстаткиПредыдущийПериод
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|		&ГраницаКонецПредыдущегоПериода,
		|		Организация В (&МассивОрганизаций)
		|			И ВидЗапасов В (
		|				ВЫБРАТЬ
		|					ВТРазрешенныеВидыЗапасов.Ссылка
		|				ИЗ
		|					ВТРазрешенныеВидыЗапасов КАК ВТРазрешенныеВидыЗапасов)) КАК ТоварыОрганизацийОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&КонецПериода										КАК Период,
		|	ТоварыОрганизацийВПути.Организация					КАК Организация,
		|	ТоварыОрганизацийВПути.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизацийВПути.ВидЗапасов 					КАК ВидЗапасов,
		|	ТоварыОрганизацийВПути.НомерГТД 					КАК НомерГТД,
		|	-ТоварыОрганизацийВПути.КоличествоСторно			КАК КоличествоОстаток,
		|	0													КАК КОформлениюСписанияОстаток
		|ИЗ
		|	ТоварыОрганизацийВПути КАК ТоварыОрганизацийВПути
		|ГДЕ
		|	ТоварыОрганизацийВПути.Период <= &КонецПредыдущегоПериода
		|	И ТоварыОрганизацийВПути.Организация В (&МассивОрганизаций)
		|	И ТоварыОрганизацийВПути.ВидЗапасов В (
		|		ВЫБРАТЬ
		|			ВТРазрешенныеВидыЗапасов.Ссылка
		|		ИЗ
		|			ВТРазрешенныеВидыЗапасов КАК ВТРазрешенныеВидыЗапасов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ                     
		|	&КонецПериода												КАК Период,
		|	РезервыТоваровОрганизацийОстатки.Организация				КАК Организация,
		|	РезервыТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизацийОстатки.ВидЗапасов					КАК ВидЗапасов,
		|	РезервыТоваровОрганизацийОстатки.НомерГТД					КАК НомерГТД,
		|	РезервыТоваровОрганизацийОстатки.КоличествоОстаток			КАК КоличествоОстаток,
		|	0															КАК КОформлениюСписанияОстаток
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
		|		&ГраницаКонецПредыдущегоПериода,
		|		Организация В (&МассивОрганизаций)
		|			И ВидЗапасов В (
		|				ВЫБРАТЬ
		|					ВТРазрешенныеВидыЗапасов.Ссылка
		|				ИЗ
		|					ВТРазрешенныеВидыЗапасов КАК ВТРазрешенныеВидыЗапасов)) КАК РезервыТоваровОрганизацийОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	НомерГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварыОрганизацийВПути
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТРазрешенныеВидыЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОстаткиТекущийПериод.Период								КАК Период,
		|	ВТОстаткиТекущийПериод.Организация 							КАК Организация,
		|	ВТОстаткиТекущийПериод.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
		|	ВТОстаткиТекущийПериод.ВидЗапасов 							КАК ВидЗапасов,
		|	ВТОстаткиТекущийПериод.НомерГТД 							КАК НомерГТД,
		|	СУММА(ВТОстаткиТекущийПериод.КоличествоОстаток)				КАК КоличествоОстаток,
		|	СУММА(ВТОстаткиТекущийПериод.КОформлениюСписанияОстаток)	КАК КОформлениюСписанияОстаток
		|ПОМЕСТИТЬ ВТОстаткиТекущийПериодСгруппированные
		|ИЗ
		|	ВТОстаткиТекущийПериод КАК ВТОстаткиТекущийПериод
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТОстаткиТекущийПериод.Период,
		|	ВТОстаткиТекущийПериод.Организация,
		|	ВТОстаткиТекущийПериод.АналитикаУчетаНоменклатуры,
		|	ВТОстаткиТекущийПериод.ВидЗапасов,
		|	ВТОстаткиТекущийПериод.НомерГТД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	НомерГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОстаткиТекущийПериод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОстаткиПредыдущийПериод.Период							КАК Период,
		|	ВТОстаткиПредыдущийПериод.Организация 						КАК Организация,
		|	ВТОстаткиПредыдущийПериод.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|	ВТОстаткиПредыдущийПериод.ВидЗапасов 						КАК ВидЗапасов,
		|	ВТОстаткиПредыдущийПериод.НомерГТД 							КАК НомерГТД,
		|	СУММА(ВТОстаткиПредыдущийПериод.КоличествоОстаток)			КАК КоличествоОстаток,
		|	СУММА(ВТОстаткиПредыдущийПериод.КОформлениюСписанияОстаток)	КАК КОформлениюСписанияОстаток
		|ПОМЕСТИТЬ ВТОстаткиПредыдущийПериодСгруппированные
		|ИЗ
		|	ВТОстаткиПредыдущийПериод КАК ВТОстаткиПредыдущийПериод
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТОстаткиПредыдущийПериод.Период,
		|	ВТОстаткиПредыдущийПериод.Организация,
		|	ВТОстаткиПредыдущийПериод.АналитикаУчетаНоменклатуры,
		|	ВТОстаткиПредыдущийПериод.ВидЗапасов,
		|	ВТОстаткиПредыдущийПериод.НомерГТД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	НомерГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОстаткиПредыдущийПериод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 10
		|	ОстаткиТекущийПериод.Период																				КАК Период,
		|	ОстаткиТекущийПериод.Организация 																		КАК Организация,
		|	ОстаткиТекущийПериод.АналитикаУчетаНоменклатуры															КАК АналитикаУчетаНоменклатуры,
		|	ОстаткиТекущийПериод.ВидЗапасов 																		КАК ВидЗапасов,
		|	ОстаткиТекущийПериод.НомерГТД 																			КАК НомерГТД,
		|	СУММА(ОстаткиТекущийПериод.КоличествоОстаток)															КАК Количество,
		|	СУММА(ОстаткиТекущийПериод.КоличествоОстаток - ЕСТЬNULL(ОстаткиПредыдущийПериод.КоличествоОстаток, 0))	КАК Оборот
		|ПОМЕСТИТЬ ОтрицательныеОстатки
		|ИЗ
		|	ВТОстаткиТекущийПериодСгруппированные КАК ОстаткиТекущийПериод
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПредыдущийПериодСгруппированные КАК ОстаткиПредыдущийПериод
		|		ПО ОстаткиТекущийПериод.Организация = ОстаткиПредыдущийПериод.Организация
		|			И ОстаткиТекущийПериод.АналитикаУчетаНоменклатуры = ОстаткиПредыдущийПериод.АналитикаУчетаНоменклатуры
		|			И ОстаткиТекущийПериод.ВидЗапасов = ОстаткиПредыдущийПериод.ВидЗапасов
		|			И ОстаткиТекущийПериод.НомерГТД = ОстаткиПредыдущийПериод.НомерГТД
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиТекущийПериод.Период,
		|	ОстаткиТекущийПериод.Организация,
		|	ОстаткиТекущийПериод.АналитикаУчетаНоменклатуры,
		|	ОстаткиТекущийПериод.ВидЗапасов,
		|	ОстаткиТекущийПериод.НомерГТД
		|
		|ИМЕЮЩИЕ
		|	СУММА(ОстаткиТекущийПериод.КоличествоОстаток) < 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 10
		|	ОстаткиТекущийПериод.Период																									КАК Период,
		|	ОстаткиТекущийПериод.Организация																							КАК Организация,
		|	ОстаткиТекущийПериод.АналитикаУчетаНоменклатуры																				КАК АналитикаУчетаНоменклатуры,
		|	ОстаткиТекущийПериод.ВидЗапасов																								КАК ВидЗапасов,
		|	ОстаткиТекущийПериод.НомерГТД																								КАК НомерГТД,
		|	СУММА(ОстаткиТекущийПериод.КОформлениюСписанияОстаток)																		КАК Количество,
		|	СУММА(ОстаткиТекущийПериод.КОформлениюСписанияОстаток - ЕСТЬNULL(ОстаткиПредыдущийПериод.КОформлениюСписанияОстаток, 0))	КАК Оборот
		|ИЗ
		|	ВТОстаткиТекущийПериодСгруппированные КАК ОстаткиТекущийПериод
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПредыдущийПериодСгруппированные КАК ОстаткиПредыдущийПериод
		|		ПО ОстаткиТекущийПериод.Организация = ОстаткиПредыдущийПериод.Организация
		|			И ОстаткиТекущийПериод.АналитикаУчетаНоменклатуры = ОстаткиПредыдущийПериод.АналитикаУчетаНоменклатуры
		|			И ОстаткиТекущийПериод.ВидЗапасов = ОстаткиПредыдущийПериод.ВидЗапасов
		|			И ОстаткиТекущийПериод.НомерГТД = ОстаткиПредыдущийПериод.НомерГТД
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиТекущийПериод.Период,
		|	ОстаткиТекущийПериод.Организация,
		|	ОстаткиТекущийПериод.АналитикаУчетаНоменклатуры,
		|	ОстаткиТекущийПериод.ВидЗапасов,
		|	ОстаткиТекущийПериод.НомерГТД
		|
		|ИМЕЮЩИЕ
		|	СУММА(ОстаткиТекущийПериод.КОформлениюСписанияОстаток) < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОстаткиТекущийПериодСгруппированные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОстаткиПредыдущийПериодСгруппированные";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Выполняется проверка наличия отрицательных остатков товаров организаций при закрытии месяца.
//
// Параметры:
//	ПараметрыПроверки - см. АудитСостоянияСистемы.ИнициализироватьПараметрыПроверки.
//
Процедура ПроверкаОтрицательныхОстатковТоваровОрганизаций(ПараметрыПроверки) Экспорт
	
	РазделыДляПроверки = Новый Массив;
	РазделыДляПроверки.Добавить("РегламентныеОперации");
	РазделыДляПроверки.Добавить("БухгалтерскийУчет");
	
	ТаблицаДанных = ДатыЗапретаИзменения.ШаблонДанныхДляПроверки();
	Для Каждого ТекущаяОрганизация Из ПараметрыПроверки.ДополнительныеПараметры.МассивОрганизаций Цикл
		Для Каждого ТекущийРаздел Из РазделыДляПроверки Цикл
			НоваяСтрока        = ТаблицаДанных.Добавить();
			НоваяСтрока.Дата   = ПараметрыПроверки.ДополнительныеПараметры.КонецПериода;
			НоваяСтрока.Раздел = ТекущийРаздел;
			НоваяСтрока.Объект = ТекущаяОрганизация;
		КонецЦикла;
	КонецЦикла;
	ТаблицаДанных.Сортировать("Объект, Раздел");
	
	ОписаниеДанных = Новый Структура("НоваяВерсия, Данные", Ложь, "");
	ОписаниеОшибки = Новый Структура;
	ДатаЗапрета	   = Дата(1,1,1); // первый разрешенный период
	
	ИзмененияЗапрещены = ДатыЗапретаИзменения.НайденЗапретИзмененияДанных(ТаблицаДанных, ОписаниеДанных, ОписаниеОшибки);		
	Если ИзмененияЗапрещены Тогда
		Для Каждого СтрокаЗапрета Из ОписаниеОшибки.Запреты Цикл
			ТекущийЗапрет = КонецМесяца(СтрокаЗапрета.ДатаЗапрета) + 1;
			
			Если НЕ ЗначениеЗаполнено(ДатаЗапрета) Тогда
				ДатаЗапрета = ТекущийЗапрет;
			Иначе
				ДатаЗапрета = Макс(ДатаЗапрета, ТекущийЗапрет);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("НеконтролируемыеТипыЗапасов", Перечисления.ТипыЗапасов.НеконтролируемыеПоТоварамОрганизацииТипыЗапасов());
	ДополнительныеПараметры.Вставить("КонтролируемыеТипыЗапасов",   Перечисления.ТипыЗапасов.КонтролируемыеТипыЗапасов());
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация",					НСтр("ru='Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("АналитикаУчетаНоменклатуры",	НСтр("ru='Аналитика номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("ВидЗапасов",					НСтр("ru='Вид запасов'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("НомерГТД",					НСтр("ru='Номер ГТД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Количество",					НСтр("ru='Количество'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	Если ДатаЗапрета > ПараметрыПроверки.ДополнительныеПараметры.КонецПериода Тогда
		ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
									"ОтрицательныеОстатки",
									НСтр("ru='Рекомендуется исправить отрицательные остатки товаров организации ""%1"" на конец периода %2 в открытом периоде'", ОбщегоНазначения.КодОсновногоЯзыка()),
									СписокПолей);
		
		ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(ПараметрыПроверки,
																		ПараметрыРегистрации,
																		ЗапросОтрицательныеОстаткиТоваровОрганизаций(),
																		ДополнительныеПараметры,
																		Перечисления.ВажностьПроблемыУчета.Предупреждение);
																		
	Иначе
		ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
									"ОтрицательныеОстатки",
									НСтр("ru='Обнаружены отрицательные остатки товаров организации ""%1"" на конец периода %2'", ОбщегоНазначения.КодОсновногоЯзыка()),
									СписокПолей);
		
		ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(ПараметрыПроверки,
																		ПараметрыРегистрации,
																		ЗапросОтрицательныеОстаткиТоваровОрганизаций(),
																		ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОформлениеПередачТоваров

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
//
// Параметры:
//	ТаблицаЭтапов - ТаблицаЗначений - таблица этапов (см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьТаблицуОписанияЭтапов).
//	ТекущийРодитель - Строка - идентификатор группы.
//
Процедура ДобавитьЭтап_ОформлениеПередачТоваров(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеПередачТоваров);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ТекстВыполнить = НСтр("ru='Оформить'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ЗапасыСервер.Использование_ОформлениеПередачТоваров");
	ОписаниеДействия = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Обработки.ЖурналДокументовИнтеркампани.Формы.РабочееМестоПередачиВыкуп.ПолноеИмя());
	ОписаниеДействия.ПараметрыФормы.Вставить("КлючНазначенияИспользования", "ДокументыИнтеркампани");
	НоваяСтрока.ДействиеВыполнить  = ОписаниеДействия;
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_ОформлениеПередачТоваров(ПараметрыОбработчика) Экспорт
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Если ПараметрыОбработчика.ПараметрыРасчета.ВсеОрганизации Тогда 
		Запрос.УстановитьПараметр("Получатель", Новый Массив);
	Иначе
		Запрос.УстановитьПараметр("Получатель", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
	КонецЕсли;	
	Запрос.УстановитьПараметр("ОформлятьПередачи", Истина);
	Запрос.Текст = ТекстЗапросаОформленияПоРезервамТоваровОрганизаций(Запрос, "ВТКОформлениюПередач");
		
	Запрос.Выполнить();
	
	Если ЗакрытиеМесяцаСервер.РазмерВременнойТаблицы(Запрос, "ВТКОформлениюПередач", ПараметрыОбработчика) = 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru='Нет остатков в регистре ""Резервы товаров организаций""'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
	КонецЕсли;
	
КонецПроцедуры

// Проверки состояния системы, относящиеся к этапу.

Процедура ОписаниеПроверок_ОформлениеПередачТоваров(ТаблицаПроверок) Экспорт
	
	// Оформление передач товаров.
	ОписаниеПроверки = ЗакрытиеМесяцаСервер.ДобавитьОписаниеНовойПроверки(ТаблицаПроверок,
		"НеВыполненаПередачаТоваров",
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеПередачТоваров,
		Перечисления.МоментЗапускаПроверкиОперацииЗакрытияМесяца.ДоИПослеРасчета,
		"ЗапасыСервер.ПроверкаНеобходимостиОформленияПередачТоваров");
	
	ЗакрытиеМесяцаСервер.ЗаполнитьПредставлениеНовойПроверки(ОписаниеПроверки,
		НСтр("ru='Не оформленные передачи товаров между организациями'", ОбщегоНазначения.КодОсновногоЯзыка()),
		НСтр("ru='Должны быть оформлены документы ""Передача товаров между организациями"".'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
КонецПроцедуры

Процедура ПроверкаНеобходимостиОформленияПередачТоваров(ПараметрыПроверки) Экспорт
	
	Если НЕ ЗакрытиеМесяцаСервер.ПроверкаВыполняетсяМеханизмомЗакрытияМесяца(ПараметрыПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация", 			   НСтр("ru='Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("АналитикаУчетаНоменклатуры", НСтр("ru='Аналитика номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("ВидЗапасов", 				   НСтр("ru='Вид запасов'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("НомерГТД", 				   НСтр("ru='Номер ГТД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Количество",		 		   НСтр("ru='Количество'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
		"ВТКОформлениюПередач",
		НСтр("ru='Требуется оформить передачу товаров в организацию ""%1"" на конец периода %2'", ОбщегоНазначения.КодОсновногоЯзыка()),
		СписокПолей);
		
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(
	 	ПараметрыПроверки,
		ПараметрыРегистрации);
	
КонецПроцедуры

#КонецОбласти

#Область ОформлениеОстатковТоваровКПередаче

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
//
// Параметры:
//	ТаблицаЭтапов - ТаблицаЗначений - таблица этапов (см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьТаблицуОписанияЭтапов).
//	ТекущийРодитель - Строка - идентификатор группы.
//
Процедура ДобавитьЭтап_ОформлениеОстатковТоваровКПередаче(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеОстатковТоваровКПередаче);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ТекстВыполнить = НСтр("ru='Оформить'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ЗапасыСервер.Использование_ОформлениеОстатковТоваровКПередаче");
	НоваяСтрока.ДействиеОформление = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ЗапасыСервер.Оформление_ОформлениеОстатковТоваровКПередаче");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Обработки.ЖурналДокументовИнтеркампани.Формы.РабочееМестоПередачиТоваров21.ПолноеИмя());
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_ОформлениеОстатковТоваровКПередаче(ПараметрыОбработчика) Экспорт
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КПередаче.ОрганизацияВладелец КАК Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры,
	|	КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
	|	КПередаче.НомерГТД,
	|	КПередаче.КоличествоКонечныйОстаток КАК Количество
	|ПОМЕСТИТЬ ОстаткиКПередаче
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.ОстаткиИОбороты(&НачалоПериода, &КонецПериода) КАК КПередаче
	|ГДЕ
	|	(КПередаче.ОрганизацияВладелец В (&МассивОрганизаций)
	|		ИЛИ КПередаче.ВидЗапасовПродавца.Организация В (&МассивОрганизаций))
	|	И КПередаче.КоличествоКонечныйОстаток <> 0
	|	И (КПередаче.КоличествоКонечныйОстаток - КПередаче.КоличествоНачальныйОстаток > 0
	|		ИЛИ КПередаче.КоличествоНачальныйОстаток = 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КПередаче.ОрганизацияВладелец КАК Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры,
	|	КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
	|	КПередаче.НомерГТД,
	|	КПередаче.ВозвращеноКонечныйОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.ОстаткиИОбороты(&НачалоПериода, &КонецПериода) КАК КПередаче
	|ГДЕ
	|	(КПередаче.ОрганизацияВладелец В (&МассивОрганизаций)
	|		ИЛИ КПередаче.ВидЗапасовПродавца.Организация В (&МассивОрганизаций))
	|	И КПередаче.ВозвращеноКонечныйОстаток <> 0
	|	И (КПередаче.ВозвращеноКонечныйОстаток - КПередаче.ВозвращеноНачальныйОстаток <> 0
	|		ИЛИ КПередаче.ВозвращеноНачальныйОстаток = 0)
	|";
	
	Запрос.Выполнить();
	
	Если ЗакрытиеМесяцаСервер.РазмерВременнойТаблицы(Запрос, "ОстаткиКПередаче", ПараметрыОбработчика) = 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru='Нет остатков в регистре ""Товары организаций к передаче""'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
	КонецЕсли;
	
КонецПроцедуры

// Инициализирует этап оформления остатков к передаче.
//
// Параметры:
//	ПараметрыОбработчика - см. ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыОбработчикаЭтапаЗакрытияМесяцаДляПроверки.
//
Процедура Оформление_ОформлениеОстатковТоваровКПередаче(ПараметрыОбработчика) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
		ПараметрыОбработчика.ДанныеЭтапа.Наименование = СтрЗаменить(ПараметрыОбработчика.ДанныеЭтапа.Наименование, "2.4", "11.4");
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика);
	
КонецПроцедуры

// Проверки состояния системы, относящиеся к этапу.

Процедура ОписаниеПроверок_ОформлениеОстатковТоваровКПередаче(ТаблицаПроверок) Экспорт
	
	// Оформление остатков передач товаров.
	ОписаниеПроверки = ЗакрытиеМесяцаСервер.ДобавитьОписаниеНовойПроверки(ТаблицаПроверок,
		"НеОформленыОстаткиПередачТоваров",
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеОстатковТоваровКПередаче,
		Перечисления.МоментЗапускаПроверкиОперацииЗакрытияМесяца.ДоИПослеРасчета,
		"ЗапасыСервер.ПроверкаОстатковПередачТоваров");
	
	ЗакрытиеМесяцаСервер.ЗаполнитьПредставлениеНовойПроверки(ОписаниеПроверки,
		НСтр("ru='Не оформленные остатки передач товаров между организациями'", ОбщегоНазначения.КодОсновногоЯзыка()),
		НСтр("ru='Должны быть оформлены документы ""Передача товаров между организациями"".'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
КонецПроцедуры

Процедура ПроверкаОстатковПередачТоваров(ПараметрыПроверки) Экспорт
	
	Если НЕ ЗакрытиеМесяцаСервер.ПроверкаВыполняетсяМеханизмомЗакрытияМесяца(ПараметрыПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация", 			   НСтр("ru='Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("АналитикаУчетаНоменклатуры", НСтр("ru='Аналитика номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("ВидЗапасов", 				   НСтр("ru='Вид запасов'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("НомерГТД", 				   НСтр("ru='Номер ГТД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Количество",		 		   НСтр("ru='Количество'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
		"ОстаткиКПередаче",
		НСтр("ru='Обнаружены товары, требующие оформления передачи/возврата от организации ""%1"" на конец периода %2'", ОбщегоНазначения.КодОсновногоЯзыка()),
		СписокПолей);
		
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(
	 	ПараметрыПроверки,
		ПараметрыРегистрации);
	
КонецПроцедуры

#КонецОбласти

#Область ОформлениеВыкупаТоваров

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
//
// Параметры:
//	ТаблицаЭтапов - ТаблицаЗначений - таблица этапов (см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьТаблицуОписанияЭтапов).
//	ТекущийРодитель - Строка - идентификатор группы.
//
Процедура ДобавитьЭтап_ОформлениеВыкупаТоваров(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеВыкупаТоваров);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ТекстВыполнить = НСтр("ru='Оформить'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ЗапасыСервер.Использование_ОформлениеВыкупаТоваров");
	ОписаниеДействия = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Обработки.ЖурналДокументовИнтеркампани.Формы.РабочееМестоПередачиВыкуп.ПолноеИмя());
	ОписаниеДействия.ПараметрыФормы.Вставить("КлючНазначенияИспользования", "ЗакрытиеМесяца");
	НоваяСтрока.ДействиеВыполнить  = ОписаниеДействия;
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_ОформлениеВыкупаТоваров(ПараметрыОбработчика) Экспорт
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Если ПараметрыОбработчика.ПараметрыРасчета.ВсеОрганизации Тогда 
		Запрос.УстановитьПараметр("Получатель", Новый Массив);
	Иначе
		Запрос.УстановитьПараметр("Получатель", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
	КонецЕсли;	
	Запрос.УстановитьПараметр("ОформлятьВыкупы", Истина);
	Запрос.Текст = ТекстЗапросаОформленияПоРезервамТоваровОрганизаций(Запрос, "ВТКОформлениюВыкупов");
		
	Запрос.Выполнить();
			
	Если ЗакрытиеМесяцаСервер.РазмерВременнойТаблицы(Запрос, "ВТКОформлениюВыкупов", ПараметрыОбработчика) = 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru='Нет остатков товаров к выкупу в регистре ""Резервы товаров организаций""'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
	КонецЕсли;
	
КонецПроцедуры

// Проверки состояния системы, относящиеся к этапу.

Процедура ОписаниеПроверок_ОформлениеВыкупаТоваров(ТаблицаПроверок) Экспорт
	
	// Оформление выкупа товаров.
	ОписаниеПроверки = ЗакрытиеМесяцаСервер.ДобавитьОписаниеНовойПроверки(ТаблицаПроверок,
		"НеОформленыВыкупыТоваров",
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеВыкупаТоваров,
		Перечисления.МоментЗапускаПроверкиОперацииЗакрытияМесяца.ДоИПослеРасчета,
		"ЗапасыСервер.ПроверкаОстатковТоваровКВыкупу");
	
	ЗакрытиеМесяцаСервер.ЗаполнитьПредставлениеНовойПроверки(ОписаниеПроверки,
		НСтр("ru='Не оформленные выкупы товаров, принятых на ответственное хранение'", ОбщегоНазначения.КодОсновногоЯзыка()),
		НСтр("ru='Должны быть оформлены документы ""Выкуп товаров с хранения"".'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
КонецПроцедуры

Процедура ПроверкаОстатковТоваровКВыкупу(ПараметрыПроверки) Экспорт
	
	Если НЕ ЗакрытиеМесяцаСервер.ПроверкаВыполняетсяМеханизмомЗакрытияМесяца(ПараметрыПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация", 			   НСтр("ru='Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("АналитикаУчетаНоменклатуры", НСтр("ru='Аналитика номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Количество",		 		   НСтр("ru='Количество'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
		"ВТКОформлениюВыкупов",
		НСтр("ru='Обнаружены товары, требующие оформления выкупа по организации ""%1"" на конец периода %2'", ОбщегоНазначения.КодОсновногоЯзыка()),
		СписокПолей);
		
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(
	 	ПараметрыПроверки,
		ПараметрыРегистрации);
	
КонецПроцедуры

#КонецОбласти

#Область ОформлениеОтчетовПоКомиссииМеждуОрганизациями

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
//
// Параметры:
//	ТаблицаЭтапов - ТаблицаЗначений - таблица этапов (см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьТаблицуОписанияЭтапов).
//	ТекущийРодитель - Строка - идентификатор группы.
//
Процедура ДобавитьЭтап_ОформлениеОтчетовПоКомиссииМеждуОрганизациями(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеОтчетовПоКомиссииМеждуОрганизациями);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ТекстВыполнить     = НСтр("ru='Оформить'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ЗапасыСервер.Использование_ОформлениеОтчетовПоКомиссииМеждуОрганизациями");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Обработки.ЖурналДокументовИнтеркампани.Формы.РабочееМестоОтчетыПоКомиссии.ПолноеИмя());
	
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_ОформлениеОтчетовПоКомиссииМеждуОрганизациями(ПараметрыОбработчика) Экспорт
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Ключи.МестоХранения КАК Комиссионер,
	|	ТоварыПереданные.ВидЗапасов.Организация КАК Комитент,
	|	Ключи.Номенклатура КАК Номенклатура,
	|	Ключи.Характеристика КАК Характеристика,
	|	Ключи.Назначение КАК Назначение,
	|	ТоварыПереданные.КоличествоКонечныйОстаток - ТоварыПереданные.КоличествоНачальныйОстаток КАК Количество
	|ПОМЕСТИТЬ ОстаткиТоваровПереданных
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.ОстаткиИОбороты(&НачалоПериода, &КонецПериода) КАК ТоварыПереданные
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|	ПО Ключи.Ссылка = ТоварыПереданные.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)
	|	И (ТоварыПереданные.КоличествоКонечныйОстаток - ТоварыПереданные.КоличествоНачальныйОстаток <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключи.МестоХранения,
	|	ТоварыПереданные.ВидЗапасов.Организация,
	|	Ключи.Номенклатура,
	|	Ключи.Характеристика,
	|	Ключи.Назначение
	|;
	|///////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КОформлению.ВидЗапасов КАК ВидЗапасов,
	|	КОформлению.НомерГТД КАК НомерГТД,
	|	КОформлению.ВидЗапасов.Организация КАК Комиссионер,
	|	КОформлению.ВидЗапасов.ВладелецТовара КАК Комитент,
	|	Ключи.Номенклатура КАК Номенклатура,
	|	Ключи.Характеристика КАК Характеристика,
	|	Ключи.Назначение КАК Назначение,
	|	КОформлению.КоличествоКонечныйОстаток - КОформлению.КоличествоНачальныйОстаток
	|		+ КОформлению.КоличествоСписаноКонечныйОстаток - КОформлению.КоличествоСписаноНачальныйОстаток КАК Количество
	|ПОМЕСТИТЬ ОстаткиТоваровКОформлениюВсе
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.ОстаткиИОбороты(&НачалоПериода, &КонецПериода) КАК КОформлению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|	ПО Ключи.Ссылка = КОформлению.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	КОформлению.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)
	|	И ((КОформлению.КоличествоКонечныйОстаток - КОформлению.КоличествоНачальныйОстаток <> 0)
	|		ИЛИ (КОформлению.КоличествоСписаноКонечныйОстаток - КОформлению.КоличествоСписаноНачальныйОстаток <> 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КОформлению.ВидЗапасов.Организация,
	|	КОформлению.ВидЗапасов.ВладелецТовара,
	|	Ключи.Номенклатура,
	|	Ключи.Характеристика,
	|	Ключи.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КОформлению.ВидЗапасов КАК ВидЗапасов,
	|	КОформлению.НомерГТД КАК НомерГТД,
	|	КОформлению.Комиссионер КАК Комиссионер,
	|	КОформлению.Комитент КАК Комитент,
	|	КОформлению.Номенклатура КАК Номенклатура,
	|	КОформлению.Характеристика КАК Характеристика,
	|	КОформлению.Назначение КАК Назначение,
	|	ВЫБОР КОГДА КОформлению.Количество < ТоварыПереданные.Количество
	|		ТОГДА КОформлению.Количество
	|		ИНАЧЕ ТоварыПереданные.Количество
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ОстаткиТоваровКОформлению
	|ИЗ
	|	ОстаткиТоваровКОформлениюВсе КАК КОформлению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиТоваровПереданных КАК ТоварыПереданные
	|	ПО КОформлению.Комиссионер = ТоварыПереданные.Комиссионер
	|		И КОформлению.Комитент = ТоварыПереданные.Комитент
	|		И КОформлению.Номенклатура = ТоварыПереданные.Номенклатура
	|		И КОформлению.Характеристика = ТоварыПереданные.Характеристика
	|		И КОформлению.Назначение = ТоварыПереданные.Назначение
	|ГДЕ
	|	КОформлению.Количество <> 0
	|	И ТоварыПереданные.Количество <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОформлению.Комитент КАК Организация,
	|	КОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КОформлению.ВидЗапасов КАК ВидЗапасов,
	|	КОформлению.НомерГТД КАК НомерГТД,
	|	КОформлению.Комиссионер КАК Комиссионер,
	|	КОформлению.Комитент КАК Комитент,
	|	КОформлению.Номенклатура КАК Номенклатура,
	|	КОформлению.Характеристика КАК Характеристика,
	|	КОформлению.Назначение КАК Назначение,
	|	КОформлению.Количество КАК Количество
	|ПОМЕСТИТЬ ВТОстаткиКомитента
	|ИЗ
	|	ОстаткиТоваровКОформлению КАК КОформлению
	|ГДЕ
	|	КОформлению.Комитент В(&МассивОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОформлению.Комиссионер КАК Организация,
	|	КОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КОформлению.ВидЗапасов КАК ВидЗапасов,
	|	КОформлению.НомерГТД КАК НомерГТД,
	|	КОформлению.Комиссионер КАК Комиссионер,
	|	КОформлению.Комитент КАК Комитент,
	|	КОформлению.Номенклатура КАК Номенклатура,
	|	КОформлению.Характеристика КАК Характеристика,
	|	КОформлению.Назначение КАК Назначение,
	|	КОформлению.Количество КАК Количество
	|ПОМЕСТИТЬ ВТОстаткиКомиссионера
	|ИЗ
	|	ОстаткиТоваровКОформлению КАК КОформлению
	|ГДЕ
	|	КОформлению.Комиссионер В(&МассивОрганизаций)
	|";
	
	Запрос.Выполнить();
	
	РазмерыВременныхТаблиц = ЗакрытиеМесяцаСервер.РазмерыВременныхТаблиц(Запрос, ПараметрыОбработчика);
	
	Если РазмерыВременныхТаблиц.ВТОстаткиКомитента = 0 И РазмерыВременныхТаблиц.ВТОстаткиКомиссионера = 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru='Нет остатков в регистре ""Товары к оформлению отчетов комитенту"" по схеме Интеркампани'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
	КонецЕсли;
	
КонецПроцедуры

// Проверки состояния системы, относящиеся к этапу.

Процедура ОписаниеПроверок_ОформлениеОтчетовПоКомиссииМеждуОрганизациями(ТаблицаПроверок) Экспорт
	
	// Оформление отчетов по комиссии между организациями.
	ОписаниеПроверки = ЗакрытиеМесяцаСервер.ДобавитьОписаниеНовойПроверки(ТаблицаПроверок,
		"НеВыполненоОформлениеОтчетовПоКомиссииМеждуОрганизациями",
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеОтчетовПоКомиссииМеждуОрганизациями,
		Перечисления.МоментЗапускаПроверкиОперацииЗакрытияМесяца.ДоИПослеРасчета,
		"ЗапасыСервер.ПроверкаОформленияОтчетовКомитентуМеждуОрганизациями");
	
	ЗакрытиеМесяцаСервер.ЗаполнитьПредставлениеНовойПроверки(ОписаниеПроверки,
		НСтр("ru='Не оформленные отчеты по комиссии между организациями'", ОбщегоНазначения.КодОсновногоЯзыка()),
		НСтр("ru='Должны быть оформлены документы ""Отчет по комиссии между организациями"" и ""Отчет по комиссии между организациями о списании"".'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
КонецПроцедуры

Процедура ПроверкаОформленияОтчетовКомитентуМеждуОрганизациями(ПараметрыПроверки) Экспорт
	
	Если НЕ ЗакрытиеМесяцаСервер.ПроверкаВыполняетсяМеханизмомЗакрытияМесяца(ПараметрыПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация", 			   НСтр("ru='Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Комиссионер", 			   НСтр("ru='Организация-комиссионер'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("АналитикаУчетаНоменклатуры", НСтр("ru='Аналитика номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("ВидЗапасов", 				   НСтр("ru='Вид запасов'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("НомерГТД", 				   НСтр("ru='Номер ГТД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Количество",		 		   НСтр("ru='Количество'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
		"ВТОстаткиКомитента",
		НСтр("ru='Обнаружены товары, требующие оформления отчетов комитенту ""%1"" на конец периода %2'"),
		СписокПолей);
		
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация", 			   НСтр("ru='Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Комитент", 				   НСтр("ru='Организация-комитент'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("АналитикаУчетаНоменклатуры", НСтр("ru='Аналитика номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("ВидЗапасов", 				   НСтр("ru='Вид запасов'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("НомерГТД", 				   НСтр("ru='Номер ГТД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Количество",		 		   НСтр("ru='Количество'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ЗакрытиеМесяцаСервер.ДополнитьПараметрыРегистрацииПроблемПроверки(ПараметрыРегистрации,
		"ВТОстаткиКомиссионера",
		НСтр("ru='Обнаружены товары, требующие оформления отчетов комитенту от организации ""%1"" на конец периода %2'", ОбщегоНазначения.КодОсновногоЯзыка()),
		СписокПолей);
	
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(
	 	ПараметрыПроверки,
		ПараметрыРегистрации);
	
КонецПроцедуры

#КонецОбласти

#Область ОформлениеОтчетовКомитентамОСписании

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
//
// Параметры:
//	ТаблицаЭтапов - ТаблицаЗначений - таблица этапов (см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьТаблицуОписанияЭтапов).
//	ТекущийРодитель - Строка - идентификатор группы.
//
Процедура ДобавитьЭтап_ОформлениеОтчетовКомитентамОСписании(ТаблицаЭтапов,ТекущийРодитель) Экспорт

	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеОтчетовКомитентамОСписании);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ТекстВыполнить     = НСтр("ru='Оформить'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ЗапасыСервер.Использование_ОформлениеОтчетовКомитентамОСписании");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Обработки.ЖурналДокументовОтчетыКомитентам.Формы.СписокДокументов.ПолноеИмя());
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_ОформлениеОтчетовКомитентамОСписании(ПараметрыОбработчика) Экспорт
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОформлению.ВидЗапасов.Организация КАК Организация,
	|	КОформлению.АналитикаУчетаНоменклатуры.МестоХранения КАК Комитент,
	|	КОформлению.АналитикаУчетаНоменклатуры,
	|	КОформлению.ВидЗапасов КАК ВидЗапасов,
	|	КОформлению.НомерГТД,
	|	КОформлению.КоличествоСписаноКонечныйОстаток - КОформлению.КоличествоСписаноНачальныйОстаток КАК Количество
	|ПОМЕСТИТЬ ВТКОформлению
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , ,
	|			НЕ АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация)
	|			И ВидЗапасов.Организация В (&МассивОрганизаций)) КАК КОформлению
	|
	|ГДЕ
	|	КОформлению.КоличествоСписаноКонечныйОстаток - КОформлению.КоличествоСписаноНачальныйОстаток <> 0";
	
	Запрос.Выполнить();
	
	Если ЗакрытиеМесяцаСервер.РазмерВременнойТаблицы(Запрос, "ВТКОформлению", ПараметрыОбработчика) = 0 Тогда
		Пояснение = НСтр("ru='Нет остатков в регистре ""Товары к оформлению отчетов комитенту"" по сторонним комитентам'",
						ОбщегоНазначения.КодОсновногоЯзыка());
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(ПараметрыОбработчика, Пояснение);
	КонецЕсли;
	
КонецПроцедуры

// Проверки состояния системы, относящиеся к этапу.

Процедура ОписаниеПроверок_ОформлениеОтчетовКомитентамОСписании(ТаблицаПроверок) Экспорт
	
	// Оформление отчетов комитентам о списании.
	ОписаниеПроверки = ЗакрытиеМесяцаСервер.ДобавитьОписаниеНовойПроверки(ТаблицаПроверок,
		"НеВыполненоОформлениеОтчетовКомитентуОСписании",
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеОтчетовКомитентамОСписании,
		Перечисления.МоментЗапускаПроверкиОперацииЗакрытияМесяца.ДоИПослеРасчета,
		"ЗапасыСервер.ПроверкаОформленияОтчетовКомитентуОСписании");
	
	ЗакрытиеМесяцаСервер.ЗаполнитьПредставлениеНовойПроверки(ОписаниеПроверки,
		НСтр("ru='Не оформленные отчеты комитентам о списании'", ОбщегоНазначения.КодОсновногоЯзыка()),
		НСтр("ru='Должны быть оформлены документы ""Отчет комитенту о списании"".'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
КонецПроцедуры

Процедура ПроверкаОформленияОтчетовКомитентуОСписании(ПараметрыПроверки) Экспорт
	
	Если НЕ ЗакрытиеМесяцаСервер.ПроверкаВыполняетсяМеханизмомЗакрытияМесяца(ПараметрыПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация", 			   НСтр("ru='Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Комитент", 				   НСтр("ru='Комитент'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("АналитикаУчетаНоменклатуры", НСтр("ru='Аналитика номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("ВидЗапасов", 				   НСтр("ru='Вид запасов'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("НомерГТД", 				   НСтр("ru='Номер ГТД'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("Количество",		 		   НСтр("ru='Количество'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
		"ВТКОформлению",
		НСтр("ru='Обнаружены товары, требующие оформления отчетов комитенту о списании от организации ""%1"" на конец периода %2'", ОбщегоНазначения.КодОсновногоЯзыка()),
		СписокПолей);
		
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(
	 	ПараметрыПроверки,
		ПараметрыРегистрации);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЗаполнениеВидовЗапасов

// Возвращает пустую таблицу значений, строки которой описывают значения реквизитов видов запасов.
//
// Возвращаемое значение:
//	ТаблицаЗначений - которая содержит следующие колонки:
//		* НомерСтроки - Число - номер строки таблицы.
//		* АналитикаУчетаНоменклатуры - СправочникСсылка.КлючиАналитикиУчетаНоменклатуры - аналитика учета номенклатуры товара.
//		* Организация - СправочникСсылка.Организации - организация-продавец товаров.
//		* ВидЗапасов - СправочникСсылка.ВидыЗапасов - вид запасов.
//		* НомерГТД - СправочникСсылка.НомераГТД - номер ГТД товара.
//		* ВладелецТовара - СправочникСсылка.Организации, СправочникСсылка.Партнеры - владелец товаров.
//		* ТипЗапасов - ПеречислениеСсылка.ТипыЗапасов - тип запасов товара.
//		* Контрагент - СправочникСсылка.Организации, СправочникСсылка.Контрагенты - получатель товаров.
//		* Договор - СправочникСсылка.ДоговорыМеждуОрганизациями, СправочникСсылка.ДоговорыКонтрагентов - договор, в рамках которого осуществляется передача товаров.
//
Функция ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию() Экспорт
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("НомерСтроки",
						Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("АналитикаУчетаНоменклатуры",
						Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
	Результат.Колонки.Добавить("Организация",
						Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Результат.Колонки.Добавить("ВидЗапасов",
						Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	Результат.Колонки.Добавить("НомерГТД",
						Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	Результат.Колонки.Добавить("ВладелецТовара",
						Метаданные.Справочники.ВидыЗапасов.Реквизиты.ВладелецТовара.Тип);
	Результат.Колонки.Добавить("ТипЗапасов",
						Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗапасов"));
	Результат.Колонки.Добавить("Контрагент",
						Метаданные.Справочники.ВидыЗапасов.Реквизиты.Контрагент.Тип);
	Результат.Колонки.Добавить("Договор",
						Метаданные.Справочники.ВидыЗапасов.Реквизиты.Договор.Тип);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеВидовЗапасов

Функция НеконтролируемыеТипыЗапасов()
	
	ТипыЗапасов = Новый Массив;
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке);
	
	Возврат ТипыЗапасов;
	
КонецФункции

Функция ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(ПараметрыЗаполненияВидовЗапасов)
	
	МассивПараметров = Новый Массив;
	Если ТипЗнч(ПараметрыЗаполненияВидовЗапасов) = Тип("Массив") Тогда
		МассивПараметров = ПараметрыЗаполненияВидовЗапасов;
	Иначе
		МассивПараметров.Добавить(ПараметрыЗаполненияВидовЗапасов);
	КонецЕсли;
	
	Результат = Ложь;
	
	Для Каждого ТекущиеПараметры Из МассивПараметров Цикл
		
		Если ТекущиеПараметры = Неопределено
			Или ТекущиеПараметры.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Неопределено Тогда
			Результат = Не ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций");
		Иначе
			Результат = ТекущиеПараметры.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию;
		КонецЕсли;
		
		Если Результат Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов)
	
	Если ЗначениеЗаполнено(ПараметрыЗаполненияВидовЗапасов.ИмяПоляОрганизация) Тогда
		
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.Сторно")
			И Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов.ИмяПоляОрганизация) Тогда
			
			Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.СторнируемыйДокумент,
																ПараметрыЗаполненияВидовЗапасов.ИмяПоляОрганизация);
			
		Иначе
			Возврат ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяПоляОрганизация];
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация) Тогда
		Возврат ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация;
	Иначе
		ТекстИсключения = НСтр("ru = 'Ошибка в программе: невозможно определить организацию документа.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецФункции

Функция ОрганизацииДляКонтроляОстатков(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТТоварыОрганизацийИзменения.Организация КАК Организация
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков";
	Результат = Запрос.Выполнить();
	Организации = Результат.Выгрузить().ВыгрузитьКолонку("Организация");
	Возврат Организации;
	
КонецФункции

Процедура СформироватьВТТоварыОрганизацийИзменения(ДокументОбъект,
													МенеджерВременныхТаблиц,
													ПараметрыЗаполненияВидовЗапасов)
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, "ТоварыОрганизаций");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.Период КАК Период,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизаций.Количество КАК Количество,
	|	ТоварыОрганизаций.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТоварыОрганизаций.Сторно КАК Сторно,
	|	СправочникНоменклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|ПОМЕСТИТЬ ТоварыОрганизацийСТипом
	|ИЗ
	|	ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО (КлючиАналитикиУчетаНоменклатуры.Ссылка = ТоварыОрганизаций.АналитикаУчетаНоменклатуры)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (СправочникНоменклатура.Ссылка = КлючиАналитикиУчетаНоменклатуры.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизацийИзменения.Период КАК Период,
	|	ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийИзменения.Организация КАК Организация,
	|	ТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	СУММА(ТоварыОрганизацийИзменения.Количество) КАК Количество,
	|	СУММА(ТоварыОрганизацийИзменения.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыОрганизацийИзменения.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ТОГДА 0
	|			ИНАЧЕ ТоварыОрганизацийИзменения.Количество
	|		КОНЕЦ) > 0 КАК ДляСторноРезерва,
	|	СУММА(ТоварыОрганизацийИзменения.Количество) < 0 КАК ДляКонтроляОстатков
	|ПОМЕСТИТЬ ВТТоварыОрганизацийИзменения
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) КАК Период,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ТипНоменклатуры КАК ТипНоменклатуры,
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ТоварыОрганизаций.Количество
	|			ИНАЧЕ -ТоварыОрганизаций.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ ВЫРАЗИТЬ(-ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		ДвиженияТоварыОрганизацийПередЗаписью КАК ТоварыОрганизаций
	|	ГДЕ
	|		ТоварыОрганизаций.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		И (НЕ &ПодбиратьЗапасыРазныхПериодов
	|			ИЛИ КОНЕЦПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) >= &ПериодЗаполнения)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ),
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ТипНоменклатуры,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД,
	|		ТоварыОрганизаций.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ
	|	ИЗ
	|		ТоварыОрганизацийСТипом КАК ТоварыОрганизаций
	|	ГДЕ
	|		ТоварыОрганизаций.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		И (НЕ &ПодбиратьЗапасыРазныхПериодов
	|			ИЛИ КОНЕЦПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) >= &ПериодЗаполнения)
	|	
	|	) КАК ТоварыОрганизацийИзменения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийИзменения.Период,
	|	ТоварыОрганизацийИзменения.Организация,
	|	ТоварыОрганизацийИзменения.ВидЗапасов,
	|	ТоварыОрганизацийИзменения.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыОрганизацийИзменения.Количество) <> 0
	|";
	
	Запрос.УстановитьПараметр("Регистратор",					ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПодбиратьЗапасыРазныхПериодов",	ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов);
	Запрос.УстановитьПараметр("ПериодЗаполнения",				ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Подбирать принятые на ответственное хранение.
// 
// Параметры:
//  ПараметрыЗаполненияВидовЗапасов - см. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов
//  ВыборкаТоваров - ВыборкаИзРезультатаЗапроса - Выборка товаров
// 
// Возвращаемое значение:
//  Неопределено, Строка - Подбирать принятые на ответственное хранение
//
Функция ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение(ПараметрыЗаполненияВидовЗапасов, ВыборкаТоваров)
	
	ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение =
		ПараметрыЗаполненияВидовЗапасов.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение.Получить(ВыборкаТоваров.ТипЗапасов);
	
	Если ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("Всегда")
		Или ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("Никогда")
		Или ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("ПоНастройкамДоговора")
		Или ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("ПоНастройкамДоговораПроизводство") Тогда
		
		Возврат ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение;
		
	ИначеЕсли ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("ПоХозяйственнойОперации") Тогда
		
		ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации =
			ПараметрыЗаполненияВидовЗапасов.ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации.Получить(ВыборкаТоваров.ТипЗапасов);
		
		Если ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации = Неопределено Тогда
			ТекстИсключения = НСтр("ru = 'В параметрах заполнения видов запасов не определено подставлять или нет в табличную часть товары, принятые на ответственное хранение для типа запасов %ТипЗапасов%.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипЗапасов%", ВыборкаТоваров.ТипЗапасов);
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение =
			ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации[ВыборкаТоваров.ХозяйственнаяОперация];
			
		Если ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) <> ВРег("Всегда")
			И ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) <> ВРег("Никогда")
			И ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) <> ВРег("ПоНастройкамДоговора")
			И ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) <> ВРег("ПоНастройкамДоговораПроизводство") Тогда
			ТекстИсключения = НСтр("ru = 'В параметрах заполнения видов запасов не определено подставлять или нет в табличную часть товары, принятые на ответственное хранение для хозяйственной операции %ХозяйственнаяОперация%.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ХозяйственнаяОперация%", ВыборкаТоваров.ХозяйственнаяОперация);
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		Возврат ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение;
	Иначе
		ТекстИсключения = НСтр("ru = 'В параметрах заполнения видов запасов не определено подставлять или нет в табличную часть товары, принятые на ответственное хранение.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов)
	
	ТаблицаОшибок			= ТаблицаОшибокЗаполненияВидовЗапасов();
	ДополнительныеСвойства	= ДокументОбъект.ДополнительныеСвойства;
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов <> Неопределено Тогда
		ТаблицаВидыЗапасов = ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов;
	Иначе
		ТаблицаВидыЗапасов = ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].ВыгрузитьКолонки();
	КонецЕсли;
	
	КонтролироватьИзменениеНомеровГТД = ДополнительныеСвойства.Свойство("КонтролироватьИзменениеНомеровГТД");
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		ТаблицаНомеровГТД = ТаблицаВидыЗапасов.Скопировать(, "АналитикаУчетаНоменклатуры, НомерГТД, Количество"); // ТаблицаЗначений
	КонецЕсли;
	
	ВидЗапасовПоУмолчанию	= Неопределено;
	ТаблицаНовыеРезервы		= РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию =
		ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(ПараметрыЗаполненияВидовЗапасов);
	ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию = 
		Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию
		И ПараметрыЗаполненияВидовЗапасов.ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию;
	
	СтруктураДанныхСтроки = Новый Структура("
		|Склад,
		|Количество,
		|КоличествоПоРНПТ,
		|СуммаСНДС,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВознаграждения,
		|СуммаНДСВознаграждения,
		|АналитикаУчетаНоменклатурыОтгрузки,
		|ВидЗапасовОтгрузки,
		|КорВидЗапасов,
		|ДокументПередачи,
		|ЗаказКлиента,
		|НедостаточноОстатковТоваровОрганизаций");
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|ВладелецТовара,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|НалогообложениеОрганизации,
		|ТипЗапасов,
		|ВидЦены");
	
	КлючПоискаОстатков =
		"Приоритет,
		|ВидЗапасов,
		|АналитикаУчетаНоменклатуры,
		|ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение,
		|НомерГТД,
		|ОрганизацияОтгрузки,
		|ОрганизацияОстатка,
		|ДатаПоступления,
		|ДокументПередачи,
		|АналитикаУчетаНоменклатурыОтгрузки,
		|ВидЗапасовОтгрузки,
		|КорВидЗапасов";
	
	Запрос = ЗапросРаспределенияСУчетомПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц,
																					ДополнительныеСвойства);
	
	МассивРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	// В УТ и КА часть запросов вырезается, поэтому корректируем номера пакетов.
	ИндексНеУТКА = 1;
	
	ВыборкаДанныеДокумента	= МассивРезультатов[2 - ИндексНеУТКА].Выбрать();
	ВыборкаТаблицаТоваров	= МассивРезультатов[3 - ИндексНеУТКА].Выбрать();
	ТаблицаОстатков			= МассивРезультатов[5 - ИндексНеУТКА].Выгрузить(); // ТаблицаЗначений -
	ВыборкаОстаткиПоСтрокам	= МассивРезультатов[6 - ИндексНеУТКА].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Запрос.Текст = "УНИЧТОЖИТЬ ВтОстатки";
	Запрос.Выполнить();
	
	ВыборкаДанныеДокумента.Следующий();
	ЗаполнитьЗначенияСвойств(СтруктураВидаЗапасовПоУмолчанию, ВыборкаДанныеДокумента);
	
	Организация             = ВыборкаДанныеДокумента.Организация;
	ХозяйственнаяОперация   = ВыборкаДанныеДокумента.ХозяйственнаяОперация;
	ПередачаПодДеятельность = ВыборкаДанныеДокумента.НалогообложениеНДС;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов Тогда
			
		ТекстИсключения = НСтр("ru = 'Функция %Функция% не предназначена для вызова с хозяйственной операцией %ХозяйственнаяОперация%'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Функция%", "ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ХозяйственнаяОперация%", ХозяйственнаяОперация);
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	ОрганизацииВидовЗапасов = ТаблицаОстатков.ВыгрузитьКолонку("ОрганизацияВидаЗапасов");
	
	ТаблицаОстатков.Колонки.Добавить("ОрганизацияОстатка", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаОстатков.ЗагрузитьКолонку(ОрганизацииВидовЗапасов, "ОрганизацияОстатка");
	ТаблицаОстатков.Колонки.Удалить("ОрганизацияВидаЗапасов");
	ТаблицаОстатков.Индексы.Добавить(КлючПоискаОстатков);
	
	ВидыЗапасовПоУмолчанию = Новый ТаблицаЗначений;
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ВидЗапасов",
											Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ВидЦены",
											Новый ОписаниеТипов("СправочникСсылка.ВидыЦенПоставщиков"));
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ГруппаФинансовогоУчета",
											Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры"));
	
	ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций
														Или Не Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
	
	Пока ВыборкаОстаткиПоСтрокам.Следующий() Цикл
		
		КоличествоТовара			= ВыборкаОстаткиПоСтрокам.Количество;
		КоличествоТовараПоРНПТ		= ВыборкаОстаткиПоСтрокам.КоличествоПоРНПТ;
		СуммаТовараСНДС				= ВыборкаОстаткиПоСтрокам.СуммаСНДС;
		СуммаНДСТовара				= ВыборкаОстаткиПоСтрокам.СуммаНДС;
		СуммаВознагражденияВсего	= ВыборкаОстаткиПоСтрокам.СуммаВознаграждения;
		СуммаНДСВознагражденияВсего	= ВыборкаОстаткиПоСтрокам.СуммаНДСВознаграждения;
		
		ЕстьКоличествоПоРНПТ = КоличествоТовараПоРНПТ <> 0;
		
		// Детальные записи
		Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ПродажаНаЭкспортКомиссионногоТовара = Ложь;
			
			ЗаполнитьСтруктуруПоСтрокеТоваров(СтруктураВидаЗапасовПоУмолчанию, Выборка, ВыборкаДанныеДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				
				ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение =
					ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение(
						ПараметрыЗаполненияВидовЗапасов,
						Выборка);
				
				Если (Выборка.ОрганизацияОстатка = Организация
						Или Ложь)
					И (ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение = Неопределено
						Или (ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("ПоНастройкамДоговора")
									И Выборка.ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение =
										Перечисления.ПорядокОформленияСписанияТоваровПринятыхНаХранение.ОформлятьСписание)
							Или ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("Всегда")) Тогда
					
					ВидЗапасов = Выборка.ВидЗапасов;
					
				ИначеЕсли Выборка.НастройкаПередачи = Перечисления.СпособыПередачиТоваров.ПередачаНаКомиссию
					И ПередачаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
					И ПередачаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров
					И ПередачаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг Тогда
					
					// Должен быть сгенерирован комиссионный товар,
					// остатки по которому позже будут закрыты документом передачи на комиссию.
					Если Выборка.НовыйВидЗапасовЭтоСубкомиссия Тогда
						// сохраняется исходное налогообложение, под которое был принят товар на комиссию
						НалогообложениеКомиссионногоВидаЗапасов = Выборка.НовыйВидЗапасовНалогообложениеКомитента;
					Иначе
						
						// налогообложение определяется по организации-комитенту.
						ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
														Выборка.НовыйВидЗапасовВладелецТовара,
														ДокументОбъект.Дата);
						
						НалогообложениеКомиссионногоВидаЗапасов = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
						
					КонецЕсли;
					
					СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС = НалогообложениеКомиссионногоВидаЗапасов;
					
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
									Организация,
									Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию,
									СтруктураВидаЗапасовПоУмолчанию);
					
				ИначеЕсли Выборка.НастройкаПередачи = Перечисления.СпособыПередачиТоваров.Продажа Тогда
					
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
									Организация,
									Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию,
									СтруктураВидаЗапасовПоУмолчанию);
					
				ИначеЕсли Выборка.ОрганизацияОстатка = Организация
					И ЗначениеЗаполнено(Выборка.ВладелецТовара) Тогда
					
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
									Организация,
									Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию,
									СтруктураВидаЗапасовПоУмолчанию);
					
				Иначе // при настройках интеркампани - передача на комиссию, нельзя продавать на экспорт.
					ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
					ПродажаНаЭкспортКомиссионногоТовара = Истина;
				КонецЕсли;
				
			Иначе
				ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
			КонецЕсли;
			
			КоличествоОстаток				= Выборка.КоличествоОстаток;
			КоличествоОстатокВсего			= Выборка.КоличествоОстатокВсего;
			КоличествоПоРНПТОстатокВсего	= Выборка.КоличествоПоРНПТОстатокВсего;
			СуммаОстаток					= Выборка.СуммаОстаток;
			НеУказанНомерГТД				= Ложь;
			
			ОтборОстатков = Новый Структура(КлючПоискаОстатков);
			ЗаполнитьЗначенияСвойств(ОтборОстатков, Выборка);
			
			Для Каждого КлючИЗначение Из ОтборОстатков Цикл
				Если Не ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
					ОтборОстатков[КлючИЗначение.Ключ] = ТаблицаОстатков.Колонки[КлючИЗначение.Ключ].ТипЗначения.ПривестиЗначение();
				КонецЕсли;
			КонецЦикла;
			
			СтрокиОстатков			= ТаблицаОстатков.НайтиСтроки(ОтборОстатков);
			ТекущаяСтрокаОстатков	= Неопределено;
			
			Если СтрокиОстатков.Количество() > 0 Тогда
				
				НайденМинимальныйОстаток = Ложь;
				
				Для Каждого СтрокаОстатков Из СтрокиОстатков Цикл
					Если (КоличествоОстаток > 0
							И СтрокаОстатков.КоличествоОстаток > 0)
						Или (КоличествоОстаток < 0
							И СтрокаОстатков.КоличествоОстаток < 0) Тогда
						
						Если КоличествоОстаток > 0 Тогда
							КоличествоОстаток = Мин(СтрокаОстатков.КоличествоОстаток, КоличествоОстаток);
						Иначе
							КоличествоОстаток = Макс(СтрокаОстатков.КоличествоОстаток, КоличествоОстаток);
						КонецЕсли;
						
						НайденМинимальныйОстаток	= Истина;
						ТекущаяСтрокаОстатков		= СтрокаОстатков;
						
						Прервать;
						
					КонецЕсли;
				КонецЦикла;
				
				Если Не НайденМинимальныйОстаток Тогда
					КоличествоОстаток = 0;
				КонецЕсли;
				
			КонецЕсли;
			
			Если (ЗначениеЗаполнено(ВидЗапасов)
					И Выборка.ВидЗапасов <> ВидЗапасов
					И СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
				// По ТоварНаХраненииСПравомПродажи не может быть прихода резерва
				Или Выборка.НеУказанНомерГТД
				Или ПродажаНаЭкспортКомиссионногоТовара Тогда
				
				КоличествоОстаток				= 0;
				КоличествоОстатокВсего			= 0;
				КоличествоПоРНПТОстатокВсего	= 0;
				СуммаОстаток					= 0;
				НеУказанНомерГТД				= Выборка.НеУказанНомерГТД;
				
			ИначеЕсли (КоличествоТовара > 0
					И КоличествоОстаток > 0)
				Или (КоличествоТовара < 0
					И КоличествоОстаток < 0) Тогда
				
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ЗначениеЗаполнено(ВидЗапасов) Тогда
					НоваяСтрока.ВидЗапасов = ВидЗапасов;
				Иначе
					ТекстИсключения = НСтр("ru = 'Ненулевое количество при пустом виде запасов.'");
					
					ВызватьИсключение ТекстИсключения;
				КонецЕсли;
				
				Если КоличествоТовара > 0 Тогда
					
					Количество = Мин(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток	= Макс(СуммаОстаток, 0);
						СуммаСНДС		= ?(КоличествоОстаток = Количество,
											СуммаОстаток,
											Мин(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0,
										Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1),
										0);
					КонецЕсли;
					
				Иначе
					
					Количество = Макс(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток = Мин(СуммаОстаток, 0);
						СуммаСНДС = ?(КоличествоОстаток = Количество,
										СуммаОстаток,
										Макс(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0,
										Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1),
										0);
					КонецЕсли;
					
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(СтруктураДанныхСтроки, Выборка);
				
				СтруктураДанныхСтроки.Количество				= Количество;
				СтруктураДанныхСтроки.КоличествоПоРНПТ			= ?(КоличествоОстатокВсего <> 0,
																	?(КоличествоОстатокВсего - Количество = 0,
																		КоличествоПоРНПТОстатокВсего,
																		Количество * КоличествоПоРНПТОстатокВсего / КоличествоОстатокВсего),
																	0);
				СтруктураДанныхСтроки.СуммаСНДС					= СуммаСНДС;
				СтруктураДанныхСтроки.СуммаНДС					= ?(СуммаТовараСНДС <> 0,
																	Окр(СуммаСНДС * СуммаНДСТовара / СуммаТовараСНДС, 2, 1),
																	0);
				СтруктураДанныхСтроки.СуммаВознаграждения		= ?(КоличествоТовара <> 0,
																	Окр(Количество * СуммаВознагражденияВсего / КоличествоТовара, 2, 1),
																	0);
				СтруктураДанныхСтроки.СуммаНДСВознаграждения	= ?(КоличествоТовара <> 0,
																	Окр(Количество * СуммаНДСВознагражденияВсего / КоличествоТовара, 2, 1),
																	0);
				СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Ложь;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				// Для товаров, выкупаемых по интеркампани, формируются движения по Резервам.
				Если Выборка.ВидЗапасов <> ВидЗапасов Тогда
					
					ДвижениеРезерваПродавца = ТаблицаНовыеРезервы.Добавить();
					ЗаполнитьЗначенияСвойств(ДвижениеРезерваПродавца, НоваяСтрока);
					
					ДвижениеРезерваПродавца.ВидДвижения		= ВидДвиженияНакопления.Приход;
					ДвижениеРезерваПродавца.Период			= КонецМесяца(ВыборкаДанныеДокумента.Период);
						ДвижениеРезерваПродавца.Организация		= Организация;
					ДвижениеРезерваПродавца.КорОрганизация	= Выборка.ОрганизацияОстатка;
					ДвижениеРезерваПродавца.КорВидЗапасов	= Выборка.ВидЗапасов;
					
					РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаНовыеРезервы,
																								ДвижениеРезерваПродавца);
					
				КонецЕсли;
				
				КоличествоТовара			= КоличествоТовара				- СтруктураДанныхСтроки.Количество;
				Если ЕстьКоличествоПоРНПТ Тогда
					КоличествоТовараПоРНПТ = КоличествоТовараПоРНПТ - СтруктураДанныхСтроки.КоличествоПоРНПТ;
				КонецЕсли;
				СуммаТовараСНДС				= СуммаТовараСНДС				- СтруктураДанныхСтроки.СуммаСНДС;
				СуммаНДСТовара				= СуммаНДСТовара				- СтруктураДанныхСтроки.СуммаНДС;
				СуммаВознагражденияВсего	= СуммаВознагражденияВсего		- СтруктураДанныхСтроки.СуммаВознаграждения;
				СуммаНДСВознагражденияВсего	= СуммаНДСВознагражденияВсего	- СтруктураДанныхСтроки.СуммаНДСВознаграждения;
				
				Если ТекущаяСтрокаОстатков <> Неопределено Тогда
					ТекущаяСтрокаОстатков.КоличествоОстаток = ТекущаяСтрокаОстатков.КоличествоОстаток - СтруктураДанныхСтроки.Количество;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла; // Выборка по остаткам
		
		Если КоличествоТовара <> 0
			Или СуммаТовараСНДС <> 0 Тогда
			
			Если ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию
					Или (ПроводитьБезКонтроляОстатковТоваровОрганизаций
						И Не ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию) Тогда
				
				Если Не ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке
					И ПараметрыЗаполненияВидовЗапасов.ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Количество() = 0 Тогда
					
					ТекстИсключения = НСтр("ru = 'Установлен флаг получения владельца товаров из таблицы
												|реквизитов видов запасов по умолчанию, но таблица не передана.'");
					
					ВызватьИсключение ТекстИсключения;
					
				КонецЕсли;
				
				ВыборкаТаблицаТоваров.Сбросить();
				ВидыЗапасовПоУмолчанию.Очистить();
				
				ОтборСтрок = Новый Структура("НомерСтроки", ВыборкаОстаткиПоСтрокам.НомерСтроки);
				
				Если ВыборкаТаблицаТоваров.НайтиСледующий(ОтборСтрок) Тогда
					
					ВидЦены = ВыборкаТаблицаТоваров.ВидЦены;
					ГруппаФинансовогоУчета = ВыборкаТаблицаТоваров.ГруппаФинансовогоУчета;
					
					Если ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке Тогда
						
						Отбор = Новый Структура("ВидЦены, ГруппаФинансовогоУчета", ВидЦены, ГруппаФинансовогоУчета);
						СтрокиВидовЗапасовПоУмолчанию = ВидыЗапасовПоУмолчанию.НайтиСтроки(Отбор);
						
						Если СтрокиВидовЗапасовПоУмолчанию.Количество() = 0 Тогда
							
							ЗаполнитьЗначенияСвойств(СтруктураВидаЗапасовПоУмолчанию, Отбор);
							
							Если ВыборкаТаблицаТоваров.ТипЗапасов = Перечисления.ТипыЗапасов.Работа Тогда
								СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов = ВыборкаТаблицаТоваров.ТипЗапасов
							КонецЕсли;
							
							ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
														Организация,
														ХозяйственнаяОперация,
														СтруктураВидаЗапасовПоУмолчанию);
							
							НоваяСтрока = ВидыЗапасовПоУмолчанию.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, Отбор);
							НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
							
						КонецЕсли;
						
					Иначе
						
						СтруктураВидаЗапасовПоУмолчанию.ВидЦены					= ВидЦены;
						СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета	= ГруппаФинансовогоУчета;
						СтруктураВидаЗапасовПоУмолчанию.ВладелецТовара			= ВыборкаТаблицаТоваров.ВладелецТовара;
						СтруктураВидаЗапасовПоУмолчанию.Контрагент				= ВыборкаТаблицаТоваров.Контрагент;
						СтруктураВидаЗапасовПоУмолчанию.Договор					= ВыборкаТаблицаТоваров.Договор;
						СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов				= ВыборкаТаблицаТоваров.ТипЗапасов;
						
						ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
													Организация,
													ХозяйственнаяОперация,
													СтруктураВидаЗапасовПоУмолчанию);
						
					КонецЕсли;
					
					НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТаблицаТоваров);
					НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
					
					ЗаполнитьЗначенияСвойств(СтруктураДанныхСтроки, ВыборкаТаблицаТоваров);
					
					СтруктураДанныхСтроки.Количество				= КоличествоТовара;
					СтруктураДанныхСтроки.КоличествоПоРНПТ			= КоличествоТовараПоРНПТ;
					СтруктураДанныхСтроки.СуммаСНДС					= СуммаТовараСНДС;
					СтруктураДанныхСтроки.СуммаНДС					= СуммаНДСТовара;
					СтруктураДанныхСтроки.СуммаВознаграждения		= 0;
					СтруктураДанныхСтроки.СуммаНДСВознаграждения	= 0;
					СтруктураДанныхСтроки.ЗаказКлиента				= Неопределено;
					СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Истина;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию Тогда
				
				Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения Тогда
					Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
					Выборка.Следующий();
					
					НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, ВыборкаТаблицаТоваров);
					
					НоваяСтрокаОшибок.Количество		= КоличествоТовара;
					НоваяСтрокаОшибок.ТипНоменклатуры	= Выборка.ТипНоменклатуры;
					НоваяСтрокаОшибок.ЕдиницаИзмерения	= Выборка.ЕдиницаИзмерения;
					НоваяСтрокаОшибок.НеУказанНомерГТД	= НеУказанНомерГТД;
					НоваяСтрокаОшибок.Номенклатура		= Выборка.Номенклатура;
					НоваяСтрокаОшибок.Характеристика	= Выборка.Характеристика;
					НоваяСтрокаОшибок.Серия				= Выборка.Серия;
					НоваяСтрокаОшибок.Склад				= Выборка.Склад;
					НоваяСтрокаОшибок.Назначение		= Выборка.Назначение;
				КонецЕсли;
				
				Если Не ПроводитьБезКонтроляОстатковТоваровОрганизаций
					Или ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию Тогда
					
					Отказ = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // Выборка по строкам документа
	
	Если ТаблицаОшибок.Количество() > 0
		И ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
		
		ТекстСообщения = НСтр( "ru = 'Документ %Ссылка% проведен с выключенным контролем остатков товаров организаций.'", Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияВыключенКонтрольОстатков(),
									УровеньЖурналаРегистрации.Предупреждение,
									,
									ДокументОбъект.Ссылка,
									ТекстСообщения);
		
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов = Неопределено
		И Не Отказ Тогда
		
		ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);
		
	КонецЕсли;
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		
		ТаблицаНомеровГТД.Колонки.Добавить("НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаВидыЗапасов Цикл
			
			НоваяСтрока = ТаблицаНомеровГТД.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Количество = 0;
			НоваяСтрока.НовоеКоличество = СтрокаТаблицы.Количество;
			
		КонецЦикла;
		
		ТаблицаНомеровГТД.Свернуть("АналитикаУчетаНоменклатуры, НомерГТД", "Количество, НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаНомеровГТД Цикл
			Если СтрокаТаблицы.Количество <> СтрокаТаблицы.НовоеКоличество Тогда
				ДополнительныеСвойства.Вставить("ИзменилисьНомераГТД", Истина);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	СообщитьОбОшибкахКонтроляТоваровОрганизаций(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов);
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы <> Неопределено Тогда
		// Условие выполняется только в этапе производства. В этом документе распределение резервов по периодам при заполнении
		// видов запасов не делается - оно происходит при формировании резервов в обработке проведения.
		ПараметрыЗаполненияВидовЗапасов.Вставить("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
	Иначе
		
		ТаблицаНовыеРезервы = РаспределитьРезервыТоваровОрганизацийПоПериодам(
								ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций,
								ТаблицаНовыеРезервы,
								МенеджерВременныхТаблиц);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НовыеРезервы.ВидДвижения,
		|	НовыеРезервы.Период,
		|	НовыеРезервы.АналитикаУчетаНоменклатуры,
		|	НовыеРезервы.Организация,
		|	НовыеРезервы.ВидЗапасов,
		|	НовыеРезервы.НомерГТД,
		|	НовыеРезервы.Количество,
		|	ВЫРАЗИТЬ(НовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
		|	НовыеРезервы.КорОрганизация,
		|	НовыеРезервы.КорВидЗапасов
		|ПОМЕСТИТЬ ВТНовыеРезервы
		|ИЗ
		|	&ТаблицаНовыеРезервы КАК НовыеРезервы";
		
		Запрос.УстановитьПараметр("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗапросРаспределенияРезервовПоТаблицеОстатков(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ЗапросРаспределенияРезервов = Новый Запрос;
	ЗапросРаспределенияРезервов.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросРаспределенияРезервов.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Организация КАК Организация,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	0 - Остатки.КоличествоОстаток КАК Количество,
	|	ВЫБОР
	|		КОГДА Остатки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|					И ТИПЗНАЧЕНИЯ(Остатки.ВидЗапасов.ВладелецТовара) = ЗНАЧЕНИЕ(Справочник.Партнеры)
	|				ИЛИ Остатки.ВидЗапасов.ТипЗапасов В(
	|						ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПокрываетсяРезервом,
	|	Остатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Остатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	Остатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	Остатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	Остатки.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|ГДЕ
	|	Остатки.КоличествоОстаток < 0
	|	И Остатки.Организация = &Организация
	|	И НЕ Остатки.ВидЗапасов.ТипЗапасов В(&НеконтролируемыеТипыЗапасов)
	|	И (Остатки.АналитикаУчетаНоменклатуры, Остатки.Организация, Остатки.ВидЗапасов) В
	|			(ВЫБРАТЬ
	|				ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|				ВТТоварыОрганизацийИзменения.Организация КАК Организация,
	|				ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов
	|			ИЗ
	|				ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|			ГДЕ
	|				ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков)
	|	И ((Остатки.АналитикаУчетаНоменклатуры, Остатки.Организация, Остатки.ВидЗапасов, Остатки.НомерГТД) В
	|			(ВЫБРАТЬ
	|				ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|				ВТТоварыОрганизацийИзменения.Организация КАК Организация,
	|				ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|				ВТТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД
	|			ИЗ
	|				ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|			ГДЕ
	|				ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков)
	|			ИЛИ &БезОтбораПоНомерамГТД)
	|	И
	|		(
	|			(
	|			НЕ ЕСТЬNULL(Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ИЛИ (ЕСТЬNULL(Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
	|				И Остатки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|			ИЛИ НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|			ИЛИ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			)
	|			И (
	|				НЕ &ИспользоватьРаздельноеОформлениеЗакупок
	|				ИЛИ (&ИспользоватьРаздельноеОформлениеЗакупок
	|					И (НЕ (ЕСТЬNULL(Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ВестиУчетПоГТД, ЛОЖЬ)
	|						И Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)))
	|					)
	|			)
	|		)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Организация КАК Организация,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	СУММА(Остатки.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(Остатки.КоличествоПоРНПТ)
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	Остатки.Номенклатура КАК Номенклатура,
	|	Остатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Остатки.Характеристика КАК Характеристика,
	|	Остатки.Серия КАК Серия,
	|	Остатки.Назначение КАК Назначение,
	|	Остатки.Склад КАК Склад,
	|	ЕСТЬNULL(ДатыПоступленияТоваровОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Остатки.Организация КАК Организация,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК Количество,
	|		ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Остатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|		Остатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|		Остатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|		Остатки.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|		И Остатки.Организация <> &Организация
	|		И НЕ Остатки.ВидЗапасов.ТипЗапасов В(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.Организация,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток,
	|		ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11)),
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|		Остатки.АналитикаУчетаНоменклатуры.Характеристика,
	|		Остатки.АналитикаУчетаНоменклатуры.Серия,
	|		Остатки.АналитикаУчетаНоменклатуры.Назначение,
	|		Остатки.АналитикаУчетаНоменклатуры.МестоХранения
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройки
	|			ПО (Настройки.ОрганизацияВладелец = Остатки.Организация)
	|				И (Настройки.ОрганизацияПродавец = &Организация)
	|				И (Настройки.ТипЗапасов = Остатки.ВидЗапасов.ТипЗапасов)
	|				И (Настройки.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|					ИЛИ Настройки.Валюта = Остатки.ВидЗапасов.Валюта
	|						И Настройки.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию))
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|		И Остатки.Организация <> &Организация
	|		И Остатки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры,
	|		СторноПриходаРезерва.КорОрганизация,
	|		СторноПриходаРезерва.КорВидЗапасов,
	|		СторноПриходаРезерва.НомерГТД,
	|		-СторноПриходаРезерва.Количество,
	|		-ВЫРАЗИТЬ(СторноПриходаРезерва.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)),
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Номенклатура,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Характеристика,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Серия,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Назначение,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.МестоХранения
	|	ИЗ
	|		ВТСторноРезервов КАК СторноПриходаРезерва
	|	ГДЕ
	|		СторноПриходаРезерва.Количество < 0
	|		И СторноПриходаРезерва.Организация = &Организация
	|		И СторноПриходаРезерва.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.Организация,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток,
	|		ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11)),
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|		Остатки.АналитикаУчетаНоменклатуры.Характеристика,
	|		Остатки.АналитикаУчетаНоменклатуры.Серия,
	|		Остатки.АналитикаУчетаНоменклатуры.Назначение,
	|		Остатки.АналитикаУчетаНоменклатуры.МестоХранения
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|		И Остатки.Организация = &Организация
	|		И Остатки.ВидЗапасов.ТипЗапасов В(
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи))
	|		
	|		) КАК Остатки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО Остатки.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И Остатки.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура
	|			И Остатки.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика
	|			И Остатки.Серия = ДатыПоступленияТоваровОрганизаций.Серия
	|			И Остатки.Назначение = ДатыПоступленияТоваровОрганизаций.Назначение
	|			И Остатки.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.Серия,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.ЕдиницаИзмерения,
	|	Остатки.ВидЗапасов,
	|	Остатки.Характеристика,
	|	ЕСТЬNULL(ДатыПоступленияТоваровОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)),
	|	Остатки.Назначение,
	|	Остатки.Склад,
	|	Остатки.Организация,
	|	Остатки.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатков";
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, "ВТСторноРезервов");
	
	ЗапросРаспределенияРезервов.УстановитьПараметр("НеконтролируемыеТипыЗапасов", НеконтролируемыеТипыЗапасов());
	ЗапросРаспределенияРезервов.УстановитьПараметр("БезОтбораПоНомерамГТД",
													ПараметрыЗаполненияВидовЗапасов.БезОтбораПоНомерамГТД);
	ЗапросРаспределенияРезервов.УстановитьПараметр("ИспользоватьРаздельноеОформлениеЗакупок",
		ПараметрыЗаполненияВидовЗапасов.ИспользоватьРаздельноеОформлениеЗакупок);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(
		ЗапросРаспределенияРезервов);
	
	Возврат ЗапросРаспределенияРезервов;
	
КонецФункции

Процедура РаспределитьНовыеРезервыПоТаблицеОстатков(Знач ЗапросРаспределенияРезервов,
													Знач Организация,
													Знач ПараметрыЗаполненияВидовЗапасов,
													ТаблицаНовыеРезервыИсходная,
													ТаблицаОшибок)
	
	КолонкиПоискаОстатковКРаспределению = "АналитикаУчетаНоменклатуры, НомерГТД";
	
	ЗапросРаспределенияРезервов.УстановитьПараметр("Организация", Организация);
	
	Результаты				= ЗапросРаспределенияРезервов.ВыполнитьПакет();
	ТаблицаРаспределения	= Результаты[0].Выгрузить();
	ОстаткиКРаспределению	= Результаты[1].Выгрузить(); // ТаблицаЗначений
	ОстаткиКРаспределению.Индексы.Добавить(КолонкиПоискаОстатковКРаспределению);
	
	СтруктураПоиска = Новый Структура(КолонкиПоискаОстатковКРаспределению);
	
	ТаблицаНовыеРезервы		= ТаблицаНовыеРезервыИсходная.СкопироватьКолонки();
	ИсходнаяТаблицаПустая	= ТаблицаНовыеРезервыИсходная.Количество() = 0;
	
	Для Каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
		
		Если Не СтрокаРаспределения.ПокрываетсяРезервом Тогда
			ЗаписьОшибки = ТаблицаОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьОшибки, СтрокаРаспределения);
			ЗаписьОшибки.НеУказанНомерГТД = Ложь;
			
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаРаспределения);
		СтрокиОстатка = ОстаткиКРаспределению.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаОстатка Из СтрокиОстатка Цикл
			
			Если СтрокаОстатка.Количество <= 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(СтрокаРаспределения.Количество, СтрокаОстатка.Количество);
			
			РезервПродавца = ТаблицаНовыеРезервы.Добавить();
			ЗаполнитьЗначенияСвойств(РезервПродавца, СтрокаРаспределения);
			РезервПродавца.ВидДвижения		= ВидДвиженияНакопления.Приход;
			РезервПродавца.Количество		= Количество;
			РезервПродавца.КоличествоПоРНПТ	= ?(СтрокаОстатка.Количество - Количество = 0,
												СтрокаОстатка.КоличествоПоРНПТ,
												Количество * СтрокаОстатка.КоличествоПоРНПТ / СтрокаОстатка.Количество);
			РезервПродавца.КорОрганизация	= СтрокаОстатка.Организация;
			РезервПродавца.КорВидЗапасов	= СтрокаОстатка.ВидЗапасов;
			РезервПродавца.ЭтоСторно		= Ложь;
			
			СтрокаОстатка.Количество		= СтрокаОстатка.Количество - Количество;
			СтрокаОстатка.КоличествоПоРНПТ	= СтрокаОстатка.КоличествоПоРНПТ - РезервПродавца.КоличествоПоРНПТ;
			СтрокаРаспределения.Количество	= СтрокаРаспределения.Количество - Количество;
			
			РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаНовыеРезервы,
																						РезервПродавца);
			
		КонецЦикла;
		
		Если СтрокаРаспределения.Количество <> 0 Тогда
			ЗаписьОшибки = ТаблицаОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьОшибки, СтрокаРаспределения);
			ЗаписьОшибки.НеУказанНомерГТД = Ложь;
		КонецЕсли;
		
	КонецЦикла;

	ТаблицаНовыеРезервы = РаспределитьРезервыТоваровОрганизацийПоПериодам(
							ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций,
							ТаблицаНовыеРезервы,
							ЗапросРаспределенияРезервов.МенеджерВременныхТаблиц);
	
	Если ИсходнаяТаблицаПустая Тогда
		ТаблицаНовыеРезервыИсходная = ТаблицаНовыеРезервы;
	Иначе
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(ТаблицаНовыеРезервыИсходная, ТаблицаНовыеРезервы);
	КонецЕсли;
	
КонецПроцедуры

Функция КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов)
	НалогообложениеНДС            = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС;
	
	Если Не ЗначениеЗаполнено(НалогообложениеНДС) Или Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС") Тогда
		КонтролироватьНалогообложение = Ложь;
	Иначе
		КонтролироватьНалогообложение = Истина;
	КонецЕсли;
	
	Возврат КонтролироватьНалогообложение;
КонецФункции

Процедура СформироватьВТСторноРезервов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, "ВТСторноРезервовПредыдущихПериодов");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	НЕ ВТТоварыОрганизацийИзменения.ДляСторноРезерва
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	(&ПоВсемТипамЗапасов
	|			ИЛИ ВидыЗапасов.ТипЗапасов В (&ТипЗапасов))
	|	И (&ПоВсемНалогообложениямНДС
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС В (&НалогообложениеНДС)
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|	И (&ПоВсемВладельцамТоваров
	|			ИЛИ ВидыЗапасов.ВладелецТовара В (&ВладелецТовара))
	|	И (&ПоВсемСоглашениям
	|			ИЛИ ВидыЗапасов.Соглашение В (&Соглашение))
	|	И (&ПоВсемВалютам
	|			ИЛИ ВидыЗапасов.Валюта В (&Валюта))
	|	И (&ПоВсемКонтрагентам
	|			ИЛИ ВидыЗапасов.Контрагент В (&Контрагент))
	|	И (&ПоВсемДоговорам
	|			ИЛИ ВидыЗапасов.Договор В (&Договор))
	|	И (&ПоВсемГруппамПродукции
	|			ИЛИ ВидыЗапасов.ГруппаПродукции В (&ГруппаПродукции))
	|	И (&ПоВсемВидамЦен
	|			ИЛИ ВидыЗапасов.ВидЦены В (&ВидЦены))
	|	И (&ПоВсемОрганизациям
	|			ИЛИ ВидыЗапасов.Организация В (&Организация))
	|	И НЕ ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И НЕ ВидыЗапасов.ЭтоДубль";
	
	ОтборыВидовЗапасов = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов;
	
	Запрос.УстановитьПараметр("ТипЗапасов", ОтборыВидовЗапасов.ТипЗапасов);
	Запрос.УстановитьПараметр("ПоВсемТипамЗапасов", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ТипЗапасов));
	
	Запрос.УстановитьПараметр("НалогообложениеНДС", ОтборыВидовЗапасов.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ПоВсемНалогообложениямНДС", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.НалогообложениеНДС));
	
	Запрос.УстановитьПараметр("ВладелецТовара", ОтборыВидовЗапасов.ВладелецТовара);
	Запрос.УстановитьПараметр("ПоВсемВладельцамТоваров", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ВладелецТовара));
	
	Запрос.УстановитьПараметр("Соглашение", ОтборыВидовЗапасов.Соглашение);
	Запрос.УстановитьПараметр("ПоВсемСоглашениям", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Соглашение));
	
	Запрос.УстановитьПараметр("Валюта", ОтборыВидовЗапасов.Валюта);
	Запрос.УстановитьПараметр("ПоВсемВалютам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Валюта));
	
	Запрос.УстановитьПараметр("Контрагент", ОтборыВидовЗапасов.Контрагент);
	Запрос.УстановитьПараметр("ПоВсемКонтрагентам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Контрагент));
	
	Запрос.УстановитьПараметр("Договор", ОтборыВидовЗапасов.Договор);
	Запрос.УстановитьПараметр("ПоВсемДоговорам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Договор));
	
	Запрос.УстановитьПараметр("ГруппаПродукции", ОтборыВидовЗапасов.ГруппаПродукции);
	Запрос.УстановитьПараметр("ПоВсемГруппамПродукции", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ГруппаПродукции));
	
	Запрос.УстановитьПараметр("ВидЦены", ОтборыВидовЗапасов.ВидЦены);
	Запрос.УстановитьПараметр("ПоВсемВидамЦен", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ВидЦены));
	
	Запрос.УстановитьПараметр("Организация", ОтборыВидовЗапасов.Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Организация));
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("КорВидыЗапасовДляСторно", Результаты[0].Выгрузить().ВыгрузитьКолонку("ВидЗапасов"));
	Запрос.УстановитьПараметр("ВидыЗапасовПолучателя", Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СформированныеРезервы.Период КАК Период,
	|	СформированныеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СформированныеРезервы.Организация КАК Организация,
	|	СформированныеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	СформированныеРезервы.НомерГТД КАК НомерГТД,
	|	СформированныеРезервы.КорОрганизация КАК КорОрганизация,
	|	СформированныеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|	СформированныеРезервы.Количество КАК Количество,
	|	ВЫРАЗИТЬ(СформированныеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	СформированныеРезервы.ВидДвижения КАК ВидДвижения
	|ПОМЕСТИТЬ ВТСформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК СформированныеРезервы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТТоварыОрганизацийИзменения.Организация КАК Организация,
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|	ВТТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	ВТТоварыОрганизацийИзменения.Период КАК Период
	|ПОМЕСТИТЬ ВТОтборыРезервовДляСторно
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляСторноРезерва
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ) КАК Период,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КорВидЗапасов В (&КорВидыЗапасовДляСторно)
	|			ТОГДА 0
	|		КОГДА ВложенныйЗапрос.КорВидЗапасов В (&ВидыЗапасовПолучателя)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	(ВЫБРАТЬ
	|		РезервыТоваровОрганизаций.Период КАК Период,
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация КАК Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|		РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|		РезервыТоваровОрганизаций.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|			ПО РезервыТоваровОрганизаций.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	ГДЕ
	|		(РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры, РезервыТоваровОрганизаций.Организация, РезервыТоваровОрганизаций.ВидЗапасов, РезервыТоваровОрганизаций.НомерГТД) В
	|				(ВЫБРАТЬ
	|					ВТОтборыРезервовДляСторно.АналитикаУчетаНоменклатуры,
	|					ВТОтборыРезервовДляСторно.Организация,
	|					ВТОтборыРезервовДляСторно.ВидЗапасов,
	|					ВТОтборыРезервовДляСторно.НомерГТД
	|				ИЗ
	|					ВТОтборыРезервовДляСторно КАК ВТОтборыРезервовДляСторно)
	|		И РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СторноРезервов.Период,
	|		СторноРезервов.АналитикаУчетаНоменклатуры,
	|		СторноРезервов.Организация,
	|		СторноРезервов.ВидЗапасов,
	|		СторноРезервов.НомерГТД,
	|		СторноРезервов.КорОрганизация,
	|		СторноРезервов.КорВидЗапасов,
	|		СторноРезервов.Количество,
	|		ВЫРАЗИТЬ(СторноРезервов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	ИЗ
	|		ВТСторноРезервовПредыдущихПериодов КАК СторноРезервов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|			ПО СторноРезервов.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	ГДЕ
	|		(СторноРезервов.АналитикаУчетаНоменклатуры, СторноРезервов.Организация, СторноРезервов.ВидЗапасов, СторноРезервов.НомерГТД) В
	|				(ВЫБРАТЬ
	|					ВТОтборыРезервовДляСторно.АналитикаУчетаНоменклатуры,
	|					ВТОтборыРезервовДляСторно.Организация,
	|					ВТОтборыРезервовДляСторно.ВидЗапасов,
	|					ВТОтборыРезервовДляСторно.НомерГТД
	|				ИЗ
	|					ВТОтборыРезервовДляСторно КАК ВТОтборыРезервовДляСторно)
	|		И СторноРезервов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СформированныеРезервы.Период,
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов,
	|		СформированныеРезервы.Количество,
	|		ВЫРАЗИТЬ(СформированныеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	ИЗ
	|		ВТСформированныеРезервы КАК СформированныеРезервы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|			ПО СформированныеРезервы.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	ГДЕ
	|		(СформированныеРезервы.АналитикаУчетаНоменклатуры, СформированныеРезервы.Организация, СформированныеРезервы.ВидЗапасов, СформированныеРезервы.НомерГТД) В
	|				(ВЫБРАТЬ
	|					ВТОтборыРезервовДляСторно.АналитикаУчетаНоменклатуры,
	|					ВТОтборыРезервовДляСторно.Организация,
	|					ВТОтборыРезервовДляСторно.ВидЗапасов,
	|					ВТОтборыРезервовДляСторно.НомерГТД
	|				ИЗ
	|					ВТОтборыРезервовДляСторно КАК ВТОтборыРезервовДляСторно)
	|		И СформированныеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ),
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВТТоварыОрганизацийИзменения.Период, МЕСЯЦ) КАК Период,
	|	ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТТоварыОрганизацийИзменения.Организация КАК Организация,
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|	ВТТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	СУММА(ВТТоварыОрганизацийИзменения.Количество) КАК Количество
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляСторноРезерва
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВТТоварыОрганизацийИзменения.Период, МЕСЯЦ),
	|	ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры,
	|	ВТТоварыОрганизацийИзменения.Организация,
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов,
	|	ВТТоварыОрганизацийИзменения.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	ИмяТаблицыРезервыТоваровОрганизаций = ИмяТаблицыРезервыТоваровОрганизаций();
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство(ИмяТаблицыРезервыТоваровОрганизаций) Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства[ИмяТаблицыРезервыТоваровОрганизаций].Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Результаты = Запрос.ВыполнитьПакет();
	РезервыДляСторно = Результаты[Результаты.ВГраница() - 1].Выгрузить();
	РезервыДляСторно.Индексы.Добавить("АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД");
	
	ТоварыОрганизацийДляСторно	= Результаты[Результаты.ВГраница()].Выгрузить();
	ТаблицаСторноДвижений		= РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД");
	
	Для Каждого СтрокаТоварыОрганизацийДляСторно Из ТоварыОрганизацийДляСторно Цикл
		
		МожноОтсторнировать = СтрокаТоварыОрганизацийДляСторно.Количество;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоварыОрганизацийДляСторно);
		СтрокиРезервыДляСторно = РезервыДляСторно.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаРезервыДляСторно Из СтрокиРезервыДляСторно Цикл
			
			Если СтрокаРезервыДляСторно.Период < СтрокаТоварыОрганизацийДляСторно.Период Тогда
				Продолжить;
			КонецЕсли;
			
			Если МожноОтсторнировать = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоКСторнированию	= Мин(МожноОтсторнировать, СтрокаРезервыДляСторно.Количество);
			
			НоваяСтрока = ТаблицаСторноДвижений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезервыДляСторно);
			НоваяСтрока.Период				= КонецМесяца(СтрокаРезервыДляСторно.Период);
			НоваяСтрока.ВидДвижения			= ВидДвиженияНакопления.Приход;
			НоваяСтрока.Количество			= -КоличествоКСторнированию;
			НоваяСтрока.КоличествоПоРНПТ	= -?(СтрокаРезервыДляСторно.Количество <> 0,
												?(СтрокаРезервыДляСторно.Количество - КоличествоКСторнированию = 0,
													СтрокаРезервыДляСторно.КоличествоПоРНПТ,
													КоличествоКСторнированию * СтрокаРезервыДляСторно.КоличествоПоРНПТ / СтрокаРезервыДляСторно.Количество),
												0);
			НоваяСтрока.ЭтоСторно			= Истина;
			
			РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаСторноДвижений,
																						НоваяСтрока);
			
			СтрокаРезервыДляСторно.Количество		= СтрокаРезервыДляСторно.Количество - КоличествоКСторнированию;
			СтрокаРезервыДляСторно.КоличествоПоРНПТ	= СтрокаРезервыДляСторно.КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
			
			МожноОтсторнировать = МожноОтсторнировать - КоличествоКСторнированию;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТОтборыРезервовДляСторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСторноРезервовПредыдущихПериодов";
	
	Запрос.Выполнить();
	
	Если ТаблицаСторноДвижений.Количество() > 0 Тогда
		ГлубинаРекурсии = 0;
		
		ДобавитьВТаблицуСторноРезервовСторноПоРасходу(ДокументОбъект,
														ТаблицаСторноДвижений,
														ТаблицаСторноДвижений,
														ГлубинаРекурсии);
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаСторноДвижений <> Неопределено Тогда
		ПараметрыЗаполненияВидовЗапасов.Вставить("ТаблицаСторноДвижений", ТаблицаСторноДвижений);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТСторноРезервов.ВидДвижения КАК ВидДвижения,
		|	ВТСторноРезервов.Период КАК Период,
		|	ВТСторноРезервов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВТСторноРезервов.Организация КАК Организация,
		|	ВТСторноРезервов.ВидЗапасов КАК ВидЗапасов,
		|	ВТСторноРезервов.НомерГТД КАК НомерГТД,
		|	ВТСторноРезервов.Количество КАК Количество,
		|	ВТСторноРезервов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	ВТСторноРезервов.КорОрганизация КАК КорОрганизация,
		|	ВТСторноРезервов.КорВидЗапасов КАК КорВидЗапасов
		|ПОМЕСТИТЬ ВТСторноРезервов
		|ИЗ
		|	&ТаблицаСторноДвижений КАК ВТСторноРезервов";
		
		Запрос.УстановитьПараметр("ТаблицаСторноДвижений", ТаблицаСторноДвижений);
		
		Запрос.Выполнить();
	КонецЕсли;
		
КонецПроцедуры

Процедура ДобавитьВТаблицуСторноРезервовСторноПоРасходу(ДокументОбъект,
														ИсходнаяТаблицаСторноДвижений,
														РезультирующаяТаблицаСторноДвижений,
														ГлубинаРекурсии)
	
	Если ИсходнаяТаблицаСторноДвижений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ГлубинаРекурсии = ГлубинаРекурсии + 1;
	
	Если ГлубинаРекурсии > 100 Тогда
		ТекстИсключения = НСтр("ru = 'Превышена максимальная глубина рекурсии при формировании сторно резервов по расходу. Сохраните текущее состояние информационной базы и передайте ее разработчикам программы.'");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЗапасыСервер.ТекстЗапросаВстречныхРезервов("ВТАналитикиВстречныхРезервов", "ВТОтборыРезервов");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СформированныеРезервы.ВидДвижения КАК ВидДвижения,
	|	КОНЕЦПЕРИОДА(СформированныеРезервы.Период, МЕСЯЦ) КАК Период,
	|	СформированныеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СформированныеРезервы.Организация КАК Организация,
	|	СформированныеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	СформированныеРезервы.НомерГТД КАК НомерГТД,
	|	СформированныеРезервы.Количество КАК Количество,
	|	ВЫРАЗИТЬ(СформированныеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	СформированныеРезервы.КорОрганизация КАК КорОрганизация,
	|	СформированныеРезервы.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ СформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК СформированныеРезервы
	|ГДЕ
	|	СформированныеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(РезультирующаяТаблицаСторноДвижений.Период, МЕСЯЦ) КАК Период,
	|	РезультирующаяТаблицаСторноДвижений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезультирующаяТаблицаСторноДвижений.Организация КАК Организация,
	|	РезультирующаяТаблицаСторноДвижений.ВидЗапасов КАК ВидЗапасов,
	|	РезультирующаяТаблицаСторноДвижений.НомерГТД КАК НомерГТД,
	|	РезультирующаяТаблицаСторноДвижений.Количество КАК Количество,
	|	ВЫРАЗИТЬ(РезультирующаяТаблицаСторноДвижений.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	РезультирующаяТаблицаСторноДвижений.КорОрганизация КАК КорОрганизация,
	|	РезультирующаяТаблицаСторноДвижений.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ РезультирующаяТаблицаСторноДвижений
	|ИЗ
	|	&РезультирующаяТаблицаСторноДвижений КАК РезультирующаяТаблицаСторноДвижений
	|ГДЕ
	|	РезультирующаяТаблицаСторноДвижений.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РезультирующаяТаблицаСторноДвижений.ЭтоСторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ВТИсходнаяТаблицаСторноДвижений.Период, МЕСЯЦ) КАК Период,
	|	ВТИсходнаяТаблицаСторноДвижений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТИсходнаяТаблицаСторноДвижений.Организация КАК Организация,
	|	ВТИсходнаяТаблицаСторноДвижений.ВидЗапасов КАК ВидЗапасов,
	|	ВТИсходнаяТаблицаСторноДвижений.НомерГТД КАК НомерГТД,
	|	ВТИсходнаяТаблицаСторноДвижений.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВТИсходнаяТаблицаСторноДвижений.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	ВТИсходнаяТаблицаСторноДвижений.КорОрганизация КАК КорОрганизация,
	|	ВТИсходнаяТаблицаСторноДвижений.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТИсходнаяТаблицаСторноДвижений
	|ИЗ
	|	&ИсходнаяТаблицаСторноДвижений КАК ВТИсходнаяТаблицаСторноДвижений
	|ГДЕ
	|	ВТИсходнаяТаблицаСторноДвижений.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ВТИсходнаяТаблицаСторноДвижений.ЭтоСторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСторноРезервовДляЗапроса.Период КАК Период,
	|	ВТСторноРезервовДляЗапроса.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТСторноРезервовДляЗапроса.Организация КАК Организация,
	|	ВТСторноРезервовДляЗапроса.ВидЗапасов КАК ВидЗапасов,
	|	ВТСторноРезервовДляЗапроса.НомерГТД КАК НомерГТД,
	|	СУММА(ВТСторноРезервовДляЗапроса.Количество) КАК Количество,
	|	СУММА(ВТСторноРезервовДляЗапроса.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	ВТСторноРезервовДляЗапроса.КорОрганизация КАК КорОрганизация,
	|	ВТСторноРезервовДляЗапроса.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТСторноРезервовДляЗапроса
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТИсходнаяТаблицаСторноДвижений.Период КАК Период,
	|		ВТИсходнаяТаблицаСторноДвижений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ВТИсходнаяТаблицаСторноДвижений.Организация КАК Организация,
	|		ВТИсходнаяТаблицаСторноДвижений.ВидЗапасов КАК ВидЗапасов,
	|		ВТИсходнаяТаблицаСторноДвижений.НомерГТД КАК НомерГТД,
	|		ВТИсходнаяТаблицаСторноДвижений.Количество КАК Количество,
	|		ВТИсходнаяТаблицаСторноДвижений.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|		ВТИсходнаяТаблицаСторноДвижений.КорОрганизация КАК КорОрганизация,
	|		ВТИсходнаяТаблицаСторноДвижений.КорВидЗапасов КАК КорВидЗапасов
	|	ИЗ
	|		ВТИсходнаяТаблицаСторноДвижений КАК ВТИсходнаяТаблицаСторноДвижений
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СформированныеРезервы.Период,
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.Количество,
	|		СформированныеРезервы.КоличествоПоРНПТ,
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов
	|	ИЗ
	|		СформированныеРезервы КАК СформированныеРезервы) КАК ВТСторноРезервовДляЗапроса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСторноРезервовДляЗапроса.Организация,
	|	ВТСторноРезервовДляЗапроса.ВидЗапасов,
	|	ВТСторноРезервовДляЗапроса.НомерГТД,
	|	ВТСторноРезервовДляЗапроса.АналитикаУчетаНоменклатуры,
	|	ВТСторноРезервовДляЗапроса.Период,
	|	ВТСторноРезервовДляЗапроса.КорВидЗапасов,
	|	ВТСторноРезервовДляЗапроса.КорОрганизация
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТСторноРезервовДляЗапроса.Количество) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСторноРезервовДляЗапроса.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТСторноРезервовДляЗапроса.НомерГТД КАК НомерГТД,
	|	ВТСторноРезервовДляЗапроса.Количество КАК Количество,
	|	ВТСторноРезервовДляЗапроса.КорОрганизация КАК КорОрганизация,
	|	ВТСторноРезервовДляЗапроса.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТОтборыРезервов
	|ИЗ
	|	ВТСторноРезервовДляЗапроса КАК ВТСторноРезервовДляЗапроса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВТПриходыРезервовДляСторнирования
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация КАК Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|		РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|		РезервыТоваровОрганизаций.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыРезервов КАК ВТОтборыРезервов
	|			ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ВТОтборыРезервов.АналитикаУчетаНоменклатуры
	|				И РезервыТоваровОрганизаций.НомерГТД = ВТОтборыРезервов.НомерГТД
	|				И РезервыТоваровОрганизаций.Организация = ВТОтборыРезервов.КорОрганизация
	|				И РезервыТоваровОрганизаций.ВидЗапасов = ВТОтборыРезервов.КорВидЗапасов
	|				И (РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ),
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД,
	|		РезервыТоваровОрганизаций.КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов,
	|		-РезервыТоваровОрганизаций.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ -ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыРезервов КАК ВТОтборыРезервов
	|			ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ВТОтборыРезервов.АналитикаУчетаНоменклатуры
	|				И РезервыТоваровОрганизаций.НомерГТД = ВТОтборыРезервов.НомерГТД
	|				И РезервыТоваровОрганизаций.Организация = ВТОтборыРезервов.КорОрганизация
	|				И РезервыТоваровОрганизаций.ВидЗапасов = ВТОтборыРезервов.КорВидЗапасов
	|				И (РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(СформированныеРезервы.Период, МЕСЯЦ),
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов,
	|		СформированныеРезервы.Количество,
	|		СформированныеРезервы.КоличествоПоРНПТ
	|	ИЗ
	|		СформированныеРезервы КАК СформированныеРезервы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыРезервов КАК ВТОтборыРезервов
	|			ПО СформированныеРезервы.АналитикаУчетаНоменклатуры = ВТОтборыРезервов.АналитикаУчетаНоменклатуры
	|				И СформированныеРезервы.НомерГТД = ВТОтборыРезервов.НомерГТД
	|				И СформированныеРезервы.Организация = ВТОтборыРезервов.КорОрганизация
	|				И СформированныеРезервы.ВидЗапасов = ВТОтборыРезервов.КорВидЗапасов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РезультирующаяТаблицаСторноДвижений.Период,
	|		РезультирующаяТаблицаСторноДвижений.АналитикаУчетаНоменклатуры,
	|		РезультирующаяТаблицаСторноДвижений.Организация,
	|		РезультирующаяТаблицаСторноДвижений.ВидЗапасов,
	|		РезультирующаяТаблицаСторноДвижений.НомерГТД,
	|		РезультирующаяТаблицаСторноДвижений.КорОрганизация,
	|		РезультирующаяТаблицаСторноДвижений.КорВидЗапасов,
	|		РезультирующаяТаблицаСторноДвижений.Количество,
	|		РезультирующаяТаблицаСторноДвижений.КоличествоПоРНПТ
	|	ИЗ
	|		РезультирующаяТаблицаСторноДвижений КАК РезультирующаяТаблицаСторноДвижений) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.КорВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.Период КАК Период,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|	РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|	РезервыТоваровОрганизаций.Количество КАК Количество,
	|	РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ВТСторноРезервовДляЗапроса.Период КАК ПериодСторноРезерва,
	|	-ВТСторноРезервовДляЗапроса.Количество КАК КоличествоКРаспределению,
	|	-ВТСторноРезервовДляЗапроса.КоличествоПоРНПТ КАК КоличествоПоРНПТКРаспределению
	|ИЗ
	|	ВТПриходыРезервовДляСторнирования КАК РезервыТоваровОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСторноРезервовДляЗапроса КАК ВТСторноРезервовДляЗапроса
	|		ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ВТСторноРезервовДляЗапроса.АналитикаУчетаНоменклатуры
	|			И РезервыТоваровОрганизаций.НомерГТД = ВТСторноРезервовДляЗапроса.НомерГТД
	|			И РезервыТоваровОрганизаций.Организация = ВТСторноРезервовДляЗапроса.КорОрганизация
	|			И РезервыТоваровОрганизаций.ВидЗапасов = ВТСторноРезервовДляЗапроса.КорВидЗапасов
	|			И РезервыТоваровОрганизаций.Период >= ВТСторноРезервовДляЗапроса.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД,
	|	Организация,
	|	ВидЗапасов,
	|	ПериодСторноРезерва,
	|	Период,
	|	КорОрганизация,
	|	КорВидЗапасов";
	
	Запрос.УстановитьПараметр("ИсходнаяТаблицаСторноДвижений", ИсходнаяТаблицаСторноДвижений);
	
	ИмяТаблицыРезервыТоваровОрганизаций = ИмяТаблицыРезервыТоваровОрганизаций();
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство(ИмяТаблицыРезервыТоваровОрганизаций) Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства[ИмяТаблицыРезервыТоваровОрганизаций].Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	Запрос.УстановитьПараметр("РезультирующаяТаблицаСторноДвижений", РезультирующаяТаблицаСторноДвижений);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ТекущаяАналитика		= Неопределено;
	ТекущийНомерГТД			= Неопределено;
	ТекущаяОрганизация		= Неопределено;
	ТекущийВидЗапасов		= Неопределено;
	РаспределенноеСторно	= Новый Соответствие;
	ЗачтенныеРезервы		= Новый Соответствие;
	СторноРасходаРезерваДляРаспределения = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаСторноДвижений = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	Пока Выборка.Следующий() Цикл
		
		РаспределенноеВПериодеСторно			= РаспределенноеСторно.Получить(Выборка.ПериодСторноРезерва);
		СторноРасходаРезерваДляРаспределения	= Выборка.КоличествоКРаспределению;
		
		Если ТекущаяАналитика <> Выборка.АналитикаУчетаНоменклатуры
			Или ТекущийНомерГТД <> Выборка.НомерГТД
			Или ТекущаяОрганизация <> Выборка.Организация
			Или ТекущийВидЗапасов <> Выборка.ВидЗапасов Тогда
			
			ТекущаяАналитика		= Выборка.АналитикаУчетаНоменклатуры;
			ТекущийНомерГТД			= Выборка.НомерГТД;
			ТекущаяОрганизация		= Выборка.Организация;
			ТекущийВидЗапасов		= Выборка.ВидЗапасов;
			РаспределенноеСторно	= Новый Соответствие;
			ЗачтенныеРезервы		= Новый Соответствие;
			
		ИначеЕсли РаспределенноеВПериодеСторно <> Неопределено
			И СторноРасходаРезерваДляРаспределения = РаспределенноеВПериодеСторно.Количество Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		РаспределенноеВПериодеСторно = РаспределенноеСторно.Получить(Выборка.ПериодСторноРезерва);
		
		Если РаспределенноеВПериодеСторно = Неопределено Тогда
			РаспределенноеКоличество = Новый Структура("Количество, КоличествоПоРНПТ", 0, 0);
			РаспределенноеСторно.Вставить(Выборка.ПериодСторноРезерва, РаспределенноеКоличество);
			
			РаспределенноеВПериодеКоличество		= 0;
			РаспределенноеВПериодеКоличествоПоРНПТ	= 0;
		Иначе
			РаспределенноеВПериодеКоличество		= РаспределенноеВПериодеСторно.Количество;
			РаспределенноеВПериодеКоличествоПоРНПТ	= РаспределенноеВПериодеСторно.КоличествоПоРНПТ;
		КонецЕсли;
		
		КлючПоискаЗачтенногоРезерва = КлючПоискаЗачтенногоРезерва(Выборка.Период,
																	Выборка.КорОрганизация,
																	Выборка.КорВидЗапасов);
		
		ЗачтенныйВПериодеРезерв = ЗачтенныеРезервы.Получить(КлючПоискаЗачтенногоРезерва);
		
		Если ЗачтенныйВПериодеРезерв = Неопределено Тогда
			ЗачтенноеКоличество = Новый Структура("Количество, КоличествоПоРНПТ", 0, 0);
			ЗачтенныеРезервы.Вставить(КлючПоискаЗачтенногоРезерва, ЗачтенноеКоличество);
			
			ЗачтенноеВПериодеКоличество			= 0;
			ЗачтенноеВПериодеКоличествоПоРНПТ	= 0;
		Иначе
			ЗачтенноеВПериодеКоличество			= ЗачтенныйВПериодеРезерв.Количество;
			ЗачтенноеВПериодеКоличествоПоРНПТ	= ЗачтенныйВПериодеРезерв.КоличествоПоРНПТ;
		КонецЕсли;
		
		КоличествоКСторнированию		= Мин(СторноРасходаРезерваДляРаспределения - РаспределенноеВПериодеКоличество,
										Выборка.Количество - ЗачтенноеВПериодеКоличество);
		КоличествоПоРНПТКСторнированию	= Мин(Выборка.КоличествоПоРНПТКРаспределению - РаспределенноеВПериодеКоличествоПоРНПТ,
												Выборка.КоличествоПоРНПТ - ЗачтенноеВПериодеКоличествоПоРНПТ);
		
		НоваяСтрока = ТаблицаСторноДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Период				= Выборка.Период;
		НоваяСтрока.ВидДвижения			= ВидДвиженияНакопления.Приход;
		НоваяСтрока.Количество			= -КоличествоКСторнированию;
		НоваяСтрока.КоличествоПоРНПТ	= -КоличествоПоРНПТКСторнированию;
		НоваяСтрока.ЭтоСторно			= Истина;
		
		РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаСторноДвижений, НоваяСтрока);
		
		РаспределенноеСторно[Выборка.ПериодСторноРезерва].Количество		= КоличествоКСторнированию
																				+ РаспределенноеСторно[Выборка.ПериодСторноРезерва].Количество;
		РаспределенноеСторно[Выборка.ПериодСторноРезерва].КоличествоПоРНПТ	= КоличествоКСторнированию
																				+ РаспределенноеСторно[Выборка.ПериодСторноРезерва].КоличествоПоРНПТ;
		
		ЗачтенныеРезервы[КлючПоискаЗачтенногоРезерва].Количество		= КоличествоКСторнированию
																			+ ЗачтенныеРезервы[КлючПоискаЗачтенногоРезерва].Количество;
		ЗачтенныеРезервы[КлючПоискаЗачтенногоРезерва].КоличествоПоРНПТ	= КоличествоПоРНПТКСторнированию
																			+ ЗачтенныеРезервы[КлючПоискаЗачтенногоРезерва].КоличествоПоРНПТ;
		
	КонецЦикла;
	
	Если ТаблицаСторноДвижений.Количество() > 0 Тогда
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(РезультирующаяТаблицаСторноДвижений, ТаблицаСторноДвижений);
		
		ДобавитьВТаблицуСторноРезервовСторноПоРасходу(ДокументОбъект,
														ТаблицаСторноДвижений,
														РезультирующаяТаблицаСторноДвижений,
														ГлубинаРекурсии);
	КонецЕсли;
	
КонецПроцедуры

Функция КлючПоискаЗачтенногоРезерва(Период, КорОрганизация, КорВидЗапасов)
	
	Возврат Строка(Период) + Строка(КорОрганизация.УникальныйИдентификатор()) + Строка(КорВидЗапасов.УникальныйИдентификатор());
	
КонецФункции

Функция ТаблицаРезервыТоваровОрганизаций(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ПередЗаписьюДокумента)
	
	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	СформированныеРезервы.ВидДвижения КАК ВидДвижения,
	|	СформированныеРезервы.Период КАК Период,
	|	СформированныеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СформированныеРезервы.Организация КАК Организация,
	|	СформированныеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	СформированныеРезервы.НомерГТД КАК НомерГТД,
	|	СформированныеРезервы.Количество КАК Количество,
	|	ВЫРАЗИТЬ(СформированныеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	СформированныеРезервы.КорОрганизация КАК КорОрганизация,
	|	СформированныеРезервы.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ СформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК СформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.ВидДвижения КАК ВидДвижения,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.Количество) < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСторно,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения,
	|		КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ) КАК Период,
	|		ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаНовыеРезервы.Организация КАК Организация,
	|		ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|		ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|		ТаблицаНовыеРезервы.Количество КАК Количество,
	|		ВЫРАЗИТЬ(ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|		ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|		ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов
	|	ИЗ
	|		ВТНовыеРезервы КАК ТаблицаНовыеРезервы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСторно.ВидДвижения,
	|		КОНЕЦПЕРИОДА(ТаблицаСторно.Период, МЕСЯЦ),
	|		ТаблицаСторно.АналитикаУчетаНоменклатуры,
	|		ТаблицаСторно.Организация,
	|		ТаблицаСторно.ВидЗапасов,
	|		ТаблицаСторно.НомерГТД,
	|		ТаблицаСторно.Количество,
	|		ВЫРАЗИТЬ(ТаблицаСторно.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)),
	|		ТаблицаСторно.КорОрганизация,
	|		ТаблицаСторно.КорВидЗапасов
	|	ИЗ
	|		ВТСторноРезервов КАК ТаблицаСторно
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РезервыПоОрганизациямДляКонтроля.ВидДвижения,
	|		КОНЕЦПЕРИОДА(РезервыПоОрганизациямДляКонтроля.Период, МЕСЯЦ),
	|		РезервыПоОрганизациямДляКонтроля.АналитикаУчетаНоменклатуры,
	|		РезервыПоОрганизациямДляКонтроля.Организация,
	|		РезервыПоОрганизациямДляКонтроля.ВидЗапасов,
	|		РезервыПоОрганизациямДляКонтроля.НомерГТД,
	|		РезервыПоОрганизациямДляКонтроля.Количество,
	|		ВЫРАЗИТЬ(РезервыПоОрганизациямДляКонтроля.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)),
	|		РезервыПоОрганизациямДляКонтроля.КорОрганизация,
	|		РезервыПоОрганизациямДляКонтроля.КорВидЗапасов
	|	ИЗ
	|		ВТРезервыПоОрганизациямДляКонтроля КАК РезервыПоОрганизациямДляКонтроля
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СформированныеРезервы.ВидДвижения,
	|		КОНЕЦПЕРИОДА(СформированныеРезервы.Период, МЕСЯЦ),
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.Количество,
	|		ВЫРАЗИТЬ(СформированныеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)),
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов
	|	ИЗ
	|		СформированныеРезервы КАК СформированныеРезервы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.ВидДвижения,
	|		КОНЕЦПЕРИОДА(ДвиженияРезервыТоварыОрганизацийПередЗаписью.Период, МЕСЯЦ),
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.АналитикаУчетаНоменклатуры,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Организация,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.ВидЗапасов,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.НомерГТД,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ДвиженияРезервыТоварыОрганизацийПередЗаписью.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ДвиженияРезервыТоварыОрганизацийПередЗаписью.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.КорОрганизация,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.КорВидЗапасов
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК ДвиженияРезервыТоварыОрганизацийПередЗаписью
	|	ГДЕ
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Регистратор = &Ссылка
	|		И &ПрибавлятьДвиженияРезервыПередЗаписью) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов,
	|	ВложенныйЗапрос.ВидДвижения,
	|	ВложенныйЗапрос.Период
	|
	|ИМЕЮЩИЕ
	|	НЕ &ИсключитьСторно
	|		И СУММА(ВложенныйЗапрос.Количество) <> 0
	// Если резервы доформируются (пересчитывается сторно) после записи основных движений,
	// то перед записью необходимо исключить сторно резервов.
	|	ИЛИ &ИсключитьСторно
	|		И СУММА(ВложенныйЗапрос.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСторноРезервов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРезервыПоОрганизациямДляКонтроля
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СформированныеРезервы";
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц,
											"ВТНовыеРезервы, ВТСторноРезервов, ВТРезервыПоОрганизациямДляКонтроля");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	ИмяТаблицыРезервыТоваровОрганизаций = ИмяТаблицыРезервыТоваровОрганизаций();
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство(ИмяТаблицыРезервыТоваровОрганизаций) Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства[ИмяТаблицыРезервыТоваровОрганизаций].Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	Запрос.УстановитьПараметр(
		"ИсключитьСторно",
		ПередЗаписьюДокумента
		И Не ДокументОбъект.ДополнительныеСвойства.ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми);
	
	Запрос.УстановитьПараметр(
		"ПрибавлятьДвиженияРезервыПередЗаписью",
		// Резервы записываются вместе с остальными регистрами.
		Не ПараметрыЗаполненияВидовЗапасов.ДокументДелаетИПриходИРасход
		// Резервы записываются отдельно после формирования таблица резервов в обработке проведения.
		Или ДокументОбъект.ДополнительныеСвойства.Свойство(ИмяТаблицыРезервыТоваровОрганизаций)
			И Не ПередЗаписьюДокумента);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	РезультатТаблицаРезервы = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатТаблицаРезервы;
	
КонецФункции

Процедура ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, ИменаТаблиц)
	
	МассивИмен = СтрРазделить(ИменаТаблиц, ",");
	
	ТекстыЗапроса = Новый Массив;
	
	Для Каждого СтрМас Из МассивИмен Цикл
		СтрМас = СокрЛП(СтрМас);
		
		Если МенеджерВременныхТаблиц.Таблицы.Найти(СтрМас) = Неопределено Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	НоваяТаблица.Период,
			|	НоваяТаблица.ВидДвижения,
			|	НоваяТаблица.АналитикаУчетаНоменклатуры,
			|	НоваяТаблица.Организация,
			|	НоваяТаблица.ВидЗапасов,
			|	НоваяТаблица.НомерГТД,
			|	НоваяТаблица.Количество,
			|	ВЫРАЗИТЬ(НоваяТаблица.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
			|	НоваяТаблица.КорОрганизация,
			|	НоваяТаблица.КорВидЗапасов,
			|	НоваяТаблица.ЭтоСторно КАК Сторно
			|ПОМЕСТИТЬ ИмяТаблицы
			|ИЗ
			|	&ПустаяТаблица КАК НоваяТаблица";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицы", СтрМас);
			
			ТекстыЗапроса.Добавить(ТекстЗапроса);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТекстыЗапроса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПустаяТаблица",
								РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки());
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура УстановитьДопСвойстваКонтролироватьОстаткиИФормироватьСторно(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц)
	
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТТоварыОрганизацийИзменения.Период,
	|	ВТТоварыОрганизацийИзменения.Организация
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТТоварыОрганизацийИзменения.Период,
	|	ВТТоварыОрганизацийИзменения.Организация
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляСторноРезерва";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	НужноКонтролироватьОстатки = НЕ Результаты[0].Пустой();
	НужноФормироватьСторно     = НЕ Результаты[1].Пустой();
	
	ДополнительныеСвойства.Вставить("НужноКонтролироватьОстаткиТоваровОрганизаций", НужноКонтролироватьОстатки);
	Если Не НужноКонтролироватьОстатки Тогда
		ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций = 0;
	КонецЕсли;
	ДополнительныеСвойства.Вставить("НужноФормироватьСторноПоРезервамТоваровОрганизаций", НужноФормироватьСторно);
	
КонецПроцедуры

Процедура СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ТекстЗапроса = "";
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц, "ТаблицаРеквизитовВидовЗапасовПоУмолчанию") Тогда
		ТекстЗапроса =
		"УНИЧТОЖИТЬ ТаблицаРеквизитовВидовЗапасовПоУмолчанию
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВидыЗапасовПоУмолчанию.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасовПоУмолчанию.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасовПоУмолчанию.Организация		КАК Организация,
	|	ВидыЗапасовПоУмолчанию.ВидЗапасов		КАК ВидЗапасов,
	|	ВидыЗапасовПоУмолчанию.НомерГТД			КАК НомерГТД,
	|	ВидыЗапасовПоУмолчанию.ВладелецТовара	КАК ВладелецТовара,
	|	ВидыЗапасовПоУмолчанию.Контрагент		КАК Контрагент,
	|	ВидыЗапасовПоУмолчанию.Договор			КАК Договор,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасов		КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаРеквизитовВидовЗапасовПоУмолчанию
	|ИЗ
	|	&ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТаблицаРеквизитовВидовЗапасовПоУмолчанию", ПараметрыЗаполненияВидовЗапасов.ТаблицаРеквизитовВидовЗапасовПоУмолчанию);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, ДобавлятьАналитикиИзДвиженийПередЗаписью, ПодбиратьЗапасыРазныхПериодов = Ложь)

	ЧастиТекстаЗапроса = Новый Массив;
	ТекстЧастиЗапроса =
		"ВЫБРАТЬ
		|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Товары.НомерГТД КАК НомерГТД,
		|	ВидыЗапасов.ДляОрганизации КАК Организация,
		|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	ТаблицаТоваров КАК Товары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ВидыЗапасов
		|		ПО (ИСТИНА)
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
		|		ПО Товары.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
		|		ПО КлючиАналитики.Номенклатура = ДанныеНоменклатуры.Ссылка
		|ГДЕ
		|	ДанныеНоменклатуры.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|										ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Товары.НомерГТД КАК НомерГТД,
		|	ВидыЗапасов.ДляОрганизации КАК Организация,
		|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	ТаблицаТоваров КАК Товары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ВидыЗапасов
		|		ПО (ИСТИНА)
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
		|		ПО Товары.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
		|		ПО КлючиАналитики.Номенклатура = ДанныеНоменклатуры.Ссылка
		|ГДЕ
		|	(ДанныеНоменклатуры.ТипНоменклатуры, ДанныеНоменклатуры.ПрослеживаемыйТовар) В
		|		(ВЫБРАТЬ
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|			ИСТИНА)";
	Если ПодбиратьЗапасыРазныхПериодов Тогда
		ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "ТаблицаТоваров", "ТаблицаТоваровПоПериодам");
	КонецЕсли;
	ЧастиТекстаЗапроса.Добавить(ТекстЧастиЗапроса);

	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВтТаблицаТоваровОприходование") <> Неопределено Тогда	// Для эскалации контекста до платформенной блокировки
		ТекстЧастиЗапроса =
			"ВЫБРАТЬ
			|	ТоварыОприходование.АналитикаУчетаНоменклатуры,
			|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка),
			|	ВидыЗапасов.ДляОрганизации,
			|	ВидыЗапасов.ВидЗапасов
			|ИЗ
			|	ВтТаблицаТоваровОприходование КАК ТоварыОприходование
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ВидыЗапасов
			|		ПО (ИСТИНА)";
		ЧастиТекстаЗапроса.Добавить(ТекстЧастиЗапроса);
	КонецЕсли;

	Если ДобавлятьАналитикиИзДвиженийПередЗаписью Тогда
		ТекстЧастиЗапроса =
			"ВЫБРАТЬ
			|	ТоварыПередЗаписью.АналитикаУчетаНоменклатуры,
			|	ТоварыПередЗаписью.НомерГТД,
			|	ТоварыПередЗаписью.Организация,
			|	ТоварыПередЗаписью.ВидЗапасов
			|ИЗ
			|	ДвиженияТоварыОрганизацийПередЗаписью КАК ТоварыПередЗаписью
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
			|		ПО ТоварыПередЗаписью.Организация = ДоступныеВидыЗапасов.ДляОрганизации
			|			И ТоварыПередЗаписью.ВидЗапасов = ДоступныеВидыЗапасов.ВидЗапасов";
		ЧастиТекстаЗапроса.Добавить(ТекстЧастиЗапроса);
	КонецЕсли;
	
	ТекстВложенногоЗапроса = СтрСоединить(ЧастиТекстаЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());

	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлючиАналитикиУчетаНоменклатуры.Ссылка КАК АналитикаУчетаНоменклатуры,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
		|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК Склад,
		|	Отборы.Организация КАК Организация,
		|	Отборы.ВидЗапасов КАК ВидЗапасов,
		|	Отборы.НомерГТД КАК НомерГТД
		|ПОМЕСТИТЬ ВтОтборыОстатковОрганизаций
		|ИЗ
		|	&ТекстВложенногоЗапроса КАК Отборы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО (КлючиАналитикиУчетаНоменклатуры.Ссылка = Отборы.АналитикаУчетаНоменклатуры)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	Организация";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстВложенногоЗапроса", СтрШаблон("(%1)", ТекстВложенногоЗапроса));

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
		
КонецПроцедуры

Процедура СформироватьВтОтборыОстатковПоТаблицеИзменений(МенеджерВременныхТаблиц)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
	|	КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ВидыЗапасов.ДляОрганизации КАК Организация,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ВтОтборыОстатковОрганизаций
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ТоварыОрганизацийИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ВидыЗапасов
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО КлючиАналитикиУчетаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	СпрНоменклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// Заполняет табличную часть ВидыЗапасов документов "Отчет по комиссии между организациями"
// и "Отчет по комиссии между организациями (о списании)" поля ВидЗапасовКомитента и НомерГТД.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - документ, в котором производится заполнение.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Используется ВТ ДоступныеВидыЗапасов.
//	Отказ - Булево - признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//
Процедура ДозаполнитьВидыЗапасовВОтчетахПоКомиссииИнтеркампани(ДокументОбъект,
																МенеджерВременныхТаблиц,
																Отказ,
																ПараметрыЗаполненияВидовЗапасов)
	
	Если ДокументОбъект.ВидыЗапасов.Найти(Справочники.ВидыЗапасов.ПустаяСсылка(), "ВидЗапасовКомитента") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаОстатков") <> Неопределено Тогда
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ТаблицаОстатков");
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.Выполнить();
	КонецЕсли;
	
	ЭтоОтчетОПродажах = ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями");
	
	СформироватьВТТаблицаОстатков("ТоварыПереданныеНаКомиссию",
									ДокументОбъект,
									МенеджерВременныхТаблиц,
									ПараметрыЗаполненияВидовЗапасов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Запасы.АналитикаУчетаНоменклатуры,
	|	Запасы.НомерГТД
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	&ВидыЗапасов КАК Запасы
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Запасы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Запасы.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ОтборОстатков
	|ИЗ
	|	Запасы КАК Запасы
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаКомиссионера.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	Остатки.ВидЗапасов                  КАК ВидЗапасовКомитента,
	|	Остатки.НомерГТД                    КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА Остатки.КоличествоОстаток < 0
	|			ТОГДА -Остатки.КоличествоОстаток
	|		ИНАЧЕ Остатки.КоличествоОстаток
	|	КОНЕЦ                               КАК Количество,
	|	ВЫБОР
	|		КОГДА Остатки.КоличествоПоРНПТОстаток < 0
	|			ТОГДА -ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))
	|	КОНЕЦ                               КАК КоличествоПоРНПТ
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Остатки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|		ПО Аналитика.Номенклатура = АналитикаКомиссионера.Номенклатура
	|			И Аналитика.Характеристика = АналитикаКомиссионера.Характеристика
	|			И Аналитика.Серия = АналитикаКомиссионера.Серия
	|			И АналитикаКомиссионера.МестоХранения = &Организация
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборОстатков КАК Отбор
	|		ПО АналитикаКомиссионера.КлючАналитики = Отбор.АналитикаУчетаНоменклатуры
	|			И Остатки.НомерГТД = Отбор.НомерГТД
	|
	|ГДЕ
	|	НЕ Остатки.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД,
	|	Остатки.КоличествоОстаток ВОЗР";
	
	Запрос.УстановитьПараметр("ВидыЗапасов", ДокументОбъект.ВидыЗапасов.Выгрузить());
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	// Временная таблица "Запасы" - МассивРезультатов[0].
	// Временная таблица "ОтборОстатков" - МассивРезультатов[1].
	ТаблицаОстатков = МассивРезультатов[2].Выгрузить();
	
	ДокументОбъект.ВидыЗапасов.Сортировать("АналитикаУчетаНоменклатуры, НомерГТД, Количество ВОЗР");
	
	ОтборСтрокОстатков	= Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД");
	ОтборСтрокДокумента	= Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД, ВидЗапасовКомитента");
	
	ТекущаяАналитика		= Неопределено;
	ТекущийНомерГТД			= Неопределено;
	ВидЗапасовРаспределения	= Неопределено; // Вид запасов комитента, на который распределяется количество возращенных запасов по одной аналитике учета номенклатуры.
	
	КоличествоКомпенсации		= 0; // Количество возвращенных запасов комитента по одной аналитике учета номенклатуры, за исключением количества запасов на которое выполняется распределение.
	КоличествоКомпенсацииПоРНПТ	= 0;
	
	Для Каждого СтрокаОстатка Из ТаблицаОстатков Цикл
		
		Если СтрокаОстатка.АналитикаУчетаНоменклатуры <> ТекущаяАналитика
			Или СтрокаОстатка.НомерГТД <> ТекущийНомерГТД Тогда
			
			ТекущаяАналитика	= СтрокаОстатка.АналитикаУчетаНоменклатуры;
			ТекущийНомерГТД		= СтрокаОстатка.НомерГТД;
			
			КоличествоКомпенсации		= 0;
			КоличествоКомпенсацииПоРНПТ	= 0;
			
			ЗаполнитьЗначенияСвойств(ОтборСтрокОстатков, СтрокаОстатка);
			СтрокиТекущейАналитики = ТаблицаОстатков.НайтиСтроки(ОтборСтрокОстатков);
			
			ВидЗапасовРаспределения = СтрокиТекущейАналитики[СтрокиТекущейАналитики.Количество() - 1].ВидЗапасовКомитента;
		КонецЕсли;
		
		КомпенсироватьКоличество = СтрокаОстатка.ВидЗапасовКомитента <> ВидЗапасовРаспределения;
		
		ЗаполнитьЗначенияСвойств(ОтборСтрокДокумента, СтрокаОстатка);
		ОтборСтрокДокумента.ВидЗапасовКомитента = Справочники.ВидыЗапасов.ПустаяСсылка();
		
		КоличествоКВозврату			= СтрокаОстатка.Количество;
		КоличествоПоРНПТКВозврату	= СтрокаОстатка.КоличествоПоРНПТ;
		
		СменаЗнака = Ложь;
		
		Для Каждого СтрокаЗапасов Из ДокументОбъект.ВидыЗапасов.НайтиСтроки(ОтборСтрокДокумента) Цикл
			
			Если СтрокаОстатка.Количество = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество	= ?(СтрокаЗапасов.Количество < 0, -СтрокаЗапасов.Количество, СтрокаЗапасов.Количество);
			Знак		= ?(СтрокаЗапасов.Количество < 0, -1, 1);
			
			Если Знак < 0 Тогда
				
				Если КоличествоКВозврату = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				СменаЗнака = Истина;
				
				Если КоличествоКВозврату >= Количество Тогда
					СтрокаЗапасов.ВидЗапасовКомитента = СтрокаОстатка.ВидЗапасовКомитента;
					
					КоличествоПоРНПТКВозвратуДо	= КоличествоПоРНПТКВозврату;
					КоличествоПоРНПТКВозврату	= ?(КоличествоКВозврату <> 0,
													?(КоличествоКВозврату - Количество = 0,
														0,
														КоличествоПоРНПТКВозврату - Количество
															* КоличествоПоРНПТКВозврату / КоличествоКВозврату),
													0);
					КоличествоКВозврату			= КоличествоКВозврату - Количество;
					
					Если КомпенсироватьКоличество Тогда
						КоличествоКомпенсации		= КоличествоКомпенсации + Количество;
						КоличествоКомпенсацииПоРНПТ	= КоличествоКомпенсацииПоРНПТ + КоличествоПоРНПТКВозвратуДо
														- КоличествоПоРНПТКВозврату;
					КонецЕсли;
				Иначе
					НоваяСтрока = ДокументОбъект.ВидыЗапасов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
					
					НоваяСтрока.ВидЗапасовКомитента	= СтрокаОстатка.ВидЗапасовКомитента;
					НоваяСтрока.СуммаСНДС			= Окр(КоличествоКВозврату * СтрокаЗапасов.СуммаСНДС / СтрокаЗапасов.Количество,
															2,
															1) * Знак;
					НоваяСтрока.СуммаНДС			= Окр(КоличествоКВозврату * СтрокаЗапасов.СуммаНДС / СтрокаЗапасов.Количество,
															2,
															1) * Знак;
					
					Если ЭтоОтчетОПродажах Тогда
						НоваяСтрока.СуммаВознаграждения		= Окр(КоличествоКВозврату * СтрокаЗапасов.СуммаВознаграждения
																		/ СтрокаЗапасов.Количество,
																	2,
																	1) * Знак;
						НоваяСтрока.СуммаНДСВознаграждения	= Окр(КоличествоКВозврату * СтрокаЗапасов.СуммаНДСВознаграждения
																		/ СтрокаЗапасов.Количество,
																	2,
																	1) * Знак;
					КонецЕсли;
					
					НоваяСтрока.Количество			= КоличествоКВозврату * Знак;
					НоваяСтрока.КоличествоПоРНПТ	= КоличествоПоРНПТКВозврату * Знак;
					НоваяСтрока.КоличествоУпаковок	= Окр(КоличествоКВозврату * СтрокаЗапасов.КоличествоУпаковок
																/ СтрокаЗапасов.Количество,
															2,
															1) * Знак;
					
					СтрокаЗапасов.Количество			= СтрокаЗапасов.Количество - НоваяСтрока.Количество;
					СтрокаЗапасов.КоличествоПоРНПТ		= СтрокаЗапасов.КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
					СтрокаЗапасов.КоличествоУпаковок	= СтрокаЗапасов.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
					СтрокаЗапасов.СуммаСНДС				= СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
					СтрокаЗапасов.СуммаНДС				= СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
					
					Если ЭтоОтчетОПродажах Тогда
						СтрокаЗапасов.СуммаВознаграждения		= СтрокаЗапасов.СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения;
						СтрокаЗапасов.СуммаНДСВознаграждения	= СтрокаЗапасов.СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения;
					КонецЕсли;
					
					Если КомпенсироватьКоличество Тогда
						КоличествоКомпенсации		= КоличествоКомпенсации + КоличествоКВозврату;
						КоличествоКомпенсацииПоРНПТ	= КоличествоКомпенсацииПоРНПТ + КоличествоПоРНПТКВозврату;
					КонецЕсли;
					
					КоличествоКВозврату			= 0;
					КоличествоПоРНПТКВозврату	= 0;
					
				КонецЕсли;
				
			Иначе
				
				Если СменаЗнака Тогда
					// Накопленное количество компенсируется на последний вид запасов комитента.
					Если Не КомпенсироватьКоличество Тогда
						СтрокаОстатка.Количество		= 2 * СтрокаОстатка.Количество - КоличествоКВозврату
															+ КоличествоКомпенсации;
						СтрокаОстатка.КоличествоПоРНПТ	= 2 * СтрокаОстатка.КоличествоПоРНПТ - КоличествоПоРНПТКВозврату
															+ КоличествоКомпенсацииПоРНПТ;
					КонецЕсли;
					
					СменаЗнака = Ложь;
				Иначе
					// Накопленное количество компенсируется на последний вид запасов комитента.
					Если Не КомпенсироватьКоличество Тогда
						КомпенсироватьКоличество = Истина; // Восстановление количества остатков выполняется 1 раз.
						
						СтрокаОстатка.Количество		= СтрокаОстатка.Количество + КоличествоКомпенсации;
						СтрокаОстатка.КоличествоПоРНПТ	= СтрокаОстатка.КоличествоПоРНПТ + КоличествоКомпенсацииПоРНПТ;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрокаОстатка.Количество >= Количество Тогда
					СтрокаЗапасов.ВидЗапасовКомитента = СтрокаОстатка.ВидЗапасовКомитента;
					
					СтрокаОстатка.КоличествоПоРНПТ	= ?(СтрокаОстатка.Количество <> 0,
														?(СтрокаОстатка.Количество - Количество = 0,
															0,
															СтрокаОстатка.КоличествоПоРНПТ - Количество
																* СтрокаОстатка.КоличествоПоРНПТ / СтрокаОстатка.Количество),
															0);
					СтрокаОстатка.Количество		= СтрокаОстатка.Количество - Количество;
				Иначе
					
					НоваяСтрока = ДокументОбъект.ВидыЗапасов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
					
					НоваяСтрока.ВидЗапасовКомитента	= СтрокаОстатка.ВидЗапасовКомитента;
					НоваяСтрока.СуммаСНДС			= Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаСНДС / СтрокаЗапасов.Количество,
															2,
															1);
					НоваяСтрока.СуммаНДС			= Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаНДС / СтрокаЗапасов.Количество,
															2,
															1);
					
					Если ЭтоОтчетОПродажах Тогда
						НоваяСтрока.СуммаВознаграждения		= Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаВознаграждения
																		/ СтрокаЗапасов.Количество,
																	2,
																	1);
						НоваяСтрока.СуммаНДСВознаграждения	= Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаНДСВознаграждения
																		/ СтрокаЗапасов.Количество,
																	2,
																	1);
					КонецЕсли;
					
					НоваяСтрока.Количество			= СтрокаОстатка.Количество;
					НоваяСтрока.КоличествоПоРНПТ	= СтрокаОстатка.КоличествоПоРНПТ;
					НоваяСтрока.КоличествоУпаковок	= Окр(СтрокаОстатка.Количество * СтрокаЗапасов.КоличествоУпаковок
																/ СтрокаЗапасов.Количество,
															2,
															1);
					
					СтрокаЗапасов.Количество			= СтрокаЗапасов.Количество - НоваяСтрока.Количество;
					СтрокаЗапасов.КоличествоПоРНПТ		= СтрокаЗапасов.КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
					СтрокаЗапасов.КоличествоУпаковок	= СтрокаЗапасов.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
					СтрокаЗапасов.СуммаСНДС				= СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
					СтрокаЗапасов.СуммаНДС				= СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
					
					Если ЭтоОтчетОПродажах Тогда
						СтрокаЗапасов.СуммаВознаграждения		= СтрокаЗапасов.СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения;
						СтрокаЗапасов.СуммаНДСВознаграждения	= СтрокаЗапасов.СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения;
					КонецЕсли;
					
					СтрокаОстатка.Количество		= 0;
					СтрокаОстатка.КоличествоПоРНПТ	= 0;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ОтборСтрок = Новый Структура("Количество", 0);
	МассивУдаляемыхСтрок = ДокументОбъект.ВидыЗапасов.НайтиСтроки(ОтборСтрок);
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ДокументОбъект.ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	ОтборСтрок = Новый Структура("ВидЗапасовКомитента", Справочники.ВидыЗапасов.ПустаяСсылка());
	СтрокиСПустымВидомЗапасовКомитента = ДокументОбъект.ВидыЗапасов.НайтиСтроки(ОтборСтрок);
	
	Если ЗначениеЗаполнено(СтрокиСПустымВидомЗапасовКомитента)
		И ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения Тогда
		
		Отказ = Истина;
		
		Для Каждого СтрокаТаблицы Из СтрокиСПустымВидомЗапасовКомитента Цикл
			
			РеквизитыАналитики = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТаблицы.АналитикаУчетаНоменклатуры, 
				"Номенклатура, Номенклатура.ЕдиницаИзмерения, Характеристика");
			
			Если СтрокаТаблицы.Количество <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'По комитенту %Комитент% не хватает %Количество% %ЕдиницаИзмерения% товара %ПредставлениеНоменклатуры%, реализованного комиссионером %Комиссионер%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комитент%", ДокументОбъект.Организация);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комиссионер%", ДокументОбъект.Комиссионер);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,
											"%ПредставлениеНоменклатуры%",
											НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
												РеквизитыАналитики.Номенклатура,
												РеквизитыАналитики.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СтрокаТаблицы.Количество);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,
											"%ЕдиницаИзмерения%",
											РеквизитыАналитики.НоменклатураЕдиницаИзмерения);
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
			Если ЭтоОтчетОПродажах
				И СтрокаТаблицы.СуммаСНДС <> 0 Тогда
				
				ТекстСообщения = НСтр("ru = 'Товар: %ПредставлениеНоменклатуры% Сумма продажи превышает сумму реализованного товара комиссионером на %Сумма% %Валюта%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,
											"%ПредставлениеНоменклатуры%",
											НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
												РеквизитыАналитики.Номенклатура,
												РеквизитыАналитики.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%", СтрокаТаблицы.СуммаСНДС);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", ДокументОбъект.Валюта);
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет табличную часть "Виды запасов" документов "Отчет по комиссии между организациями" и "Отчет по
// комиссии между организациями о списании".
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц- менеджер содержащий временные таблицы ТаблицаТоваров,
//														ТаблицаВидыЗапасов, ТаблицаОстатков.
//	Отказ - Булево - признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//
Процедура ЗаполнитьВидыЗапасовПоТаблицеОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект,
																				МенеджерВременныхТаблиц,
																				Отказ,
																				ПараметрыЗаполненияВидовЗапасов)
	
	ТаблицаОшибок			= ТаблицаОшибокЗаполненияВидовЗапасов();
	ДополнительныеСвойства	= ДокументОбъект.ДополнительныеСвойства;
	
	ТаблицаВидыЗапасов = ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].ВыгрузитьКолонки(); // ТабличнаяЧасть
	
	ВидЗапасовПоУмолчанию = Неопределено;
	
	ЭтоОтчетОПродажах = ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями");
	
	ПерезаполнитьВидыЗапасов = ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДополнительныеСвойства);
	
	КонтролироватьОстаткиТоваровОрганизаций = ?(ПерезаполнитьВидыЗапасов,
												Ложь,
												ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций"));
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|Поставщик,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|НалогообложениеОрганизации,
		|Организация");
	
	СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета		= Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.Поставщик					= ДокументОбъект.Организация;
	СтруктураВидаЗапасовПоУмолчанию.Контрагент					= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Соглашение					= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Договор						= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Валюта						= ДокументОбъект.Валюта;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС			= ДокументОбъект.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеОрганизации	= ДокументОбъект.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.Организация					= ДокументОбъект.Организация;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Остатки.ВидЗапасов					КАК ВидЗапасов,
	|	Остатки.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД					КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаОстатков.СчетФактура) = ТИП(СТРОКА)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаОстатков.СчетФактура = """"
	|						ТОГДА НЕОПРЕДЕЛЕНО
	|					ИНАЧЕ ТаблицаОстатков.СчетФактура
	|				КОНЕЦ
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаОстатков.СчетФактура, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ								КАК СчетФактураВыставленныйКомиссионера,
	|	ТаблицаОстатков.ДатаСчетаФактуры	КАК ДатаСчетаФактурыКомиссионера,
	|	Остатки.Покупатель					КАК Покупатель,
	|	ТаблицаОстатков.Знак				КАК Знак,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаОстатков.Количество < 0
	|				ТОГДА -ТаблицаОстатков.Количество
	|			ИНАЧЕ ТаблицаОстатков.Количество
	|		КОНЕЦ)							КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаОстатков.КоличествоПоРНПТ < 0
	|				ТОГДА -ТаблицаОстатков.КоличествоПоРНПТ
	|			ИНАЧЕ ТаблицаОстатков.КоличествоПоРНПТ
	|		КОНЕЦ)							КАК КоличествоПоРНПТ,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаОстатков.Количество < 0
	|				ТОГДА -ТаблицаОстатков.СуммаВыручки
	|			ИНАЧЕ ТаблицаОстатков.СуммаВыручки
	|		КОНЕЦ)							КАК СуммаВыручки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОстатков.ВидЗапасов					КАК ВидЗапасов,
	|		ТаблицаОстатков.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаОстатков.НомерГТД					КАК НомерГТД,
	|		ТаблицаОстатков.Покупатель					КАК Покупатель,
	|		СУММА(ТаблицаОстатков.Количество)			КАК Количество,
	|		СУММА(ВЫРАЗИТЬ(ТаблицаОстатков.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)))	КАК КоличествоПоРНПТ,
	|		СУММА(ТаблицаОстатков.СуммаВыручки)			КАК СуммаВыручки
	|	ИЗ
	|		ТаблицаОстатков КАК ТаблицаОстатков
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаОстатков.ВидЗапасов,
	|		ТаблицаОстатков.АналитикаУчетаНоменклатуры,
	|		ТаблицаОстатков.НомерГТД,
	|		ТаблицаОстатков.Покупатель
	|		
	|	ИМЕЮЩИЕ
	|		СУММА(ТаблицаОстатков.Количество) <> 0
	|	
	|	) КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО Остатки.ВидЗапасов = ТаблицаОстатков.ВидЗапасов
	|			И Остатки.АналитикаУчетаНоменклатуры = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И Остатки.НомерГТД = ТаблицаОстатков.НомерГТД
	|			И Остатки.Покупатель = ТаблицаОстатков.Покупатель
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.ВидЗапасов,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаОстатков.СчетФактура) = ТИП(СТРОКА)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаОстатков.СчетФактура = """"
	|						ТОГДА НЕОПРЕДЕЛЕНО
	|					ИНАЧЕ ТаблицаОстатков.СчетФактура
	|				КОНЕЦ
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаОстатков.СчетФактура, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ,
	|	ТаблицаОстатков.ДатаСчетаФактуры,
	|	Остатки.Покупатель,
	|	ТаблицаОстатков.Знак
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ДатаСчетаФактурыКомиссионера,
	|	Покупатель,
	|	НомерГТД,
	|	Количество УБЫВ,
	|	Знак УБЫВ
	|;
	|
	|//////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	Товары.НомерГТД                            КАК НомерГТД,
	|	Товары.Упаковка                            КАК Упаковка,
	|	Товары.ДатаСчетаФактурыКомиссионера        КАК ДатаСчетаФактурыКомиссионера,
	|	Товары.СчетФактураВыставленныйКомиссионера КАК СчетФактураВыставленныйКомиссионера,
	|	Товары.Покупатель                          КАК Покупатель,
	|	ВЫБОР
	|		КОГДА Товары.Количество < 0
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ                                      КАК Знак,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Количество < 0
	|				ТОГДА 0 - Товары.Количество
	|			ИНАЧЕ Товары.Количество
	|		КОНЕЦ)                                 КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.КоличествоПоРНПТ < 0
	|				ТОГДА -ВЫРАЗИТЬ(Товары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ ВЫРАЗИТЬ(Товары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ)                                 КАК КоличествоПоРНПТ,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Количество < 0
	|			ТОГДА -Товары.КоличествоУпаковок
	|			ИНАЧЕ Товары.КоличествоУпаковок
	|		КОНЕЦ)                                 КАК КоличествоУпаковок,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Количество < 0
	|				ТОГДА -Товары.СуммаСНДС
	|			ИНАЧЕ Товары.СуммаСНДС
	|		КОНЕЦ)                                 КАК СуммаСНДС,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Количество < 0
	|				ТОГДА -Товары.СуммаВознаграждения
	|			ИНАЧЕ Товары.СуммаВознаграждения
	|		КОНЕЦ)                                 КАК СуммаВознаграждения,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Количество < 0
	|				ТОГДА -Товары.СуммаНДСВознаграждения
	|			ИНАЧЕ Товары.СуммаНДСВознаграждения
	|		КОНЕЦ)                                 КАК СуммаНДСВознаграждения,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Количество < 0
	|				ТОГДА -Товары.СуммаНДС
	|			ИНАЧЕ Товары.СуммаНДС
	|		КОНЕЦ)                                 КАК СуммаНДС,
	|	Товары.СтавкаНДС                           КАК СтавкаНДС,
	|	Товары.Склад                               КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ВЫБОР
	|		КОГДА &ИспользоватьГруппыФинУчета
	|			ТОГДА ЕСТЬNULL(Товары.Номенклатура.ГруппаФинансовогоУчета,
	|					ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                      КАК ГруппаФинансовогоУчета,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура                  КАК Номенклатура,
	|	Товары.АналитикаУчетаНоменклатуры.Серия                         КАК Серия
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.НомерГТД,
	|	Товары.Упаковка,
	|	Товары.ДатаСчетаФактурыКомиссионера,
	|	Товары.СчетФактураВыставленныйКомиссионера,
	|	Товары.Покупатель,
	|	Товары.СтавкаНДС,
	|	Товары.Склад,
	|	Товары.Назначение,
	|	ВЫБОР
	|		КОГДА &ИспользоватьГруппыФинУчета
	|			ТОГДА ЕСТЬNULL(Товары.Номенклатура.ГруппаФинансовогоУчета,
	|					ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|	ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура,
	|	Товары.АналитикаУчетаНоменклатуры.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД,
	|	ДатаСчетаФактурыКомиссионера,
	|	Покупатель,
	|	Количество УБЫВ,
	|	Знак УБЫВ";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Результат		= Запрос.ВыполнитьПакет();
	Остатки			= Результат[0].Выгрузить();
	ВыборкаТовары	= Результат[1].Выбрать();
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		Количество				= ВыборкаТовары.Количество;
		КоличествоПоРНПТ		= ВыборкаТовары.КоличествоПоРНПТ;
		КоличествоУпаковок		= ВыборкаТовары.КоличествоУпаковок;
		СуммаСНДС				= ВыборкаТовары.СуммаСНДС;
		СуммаНДС				= ВыборкаТовары.СуммаНДС;
		СуммаВознаграждения		= ВыборкаТовары.СуммаВознаграждения;
		СуммаНДСВознаграждения	= ВыборкаТовары.СуммаНДСВознаграждения;
		
		СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, Покупатель, Знак,
											|СчетФактураВыставленныйКомиссионера");
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаТовары);
		
		Если ЗначениеЗаполнено(ВыборкаТовары.НомерГТД) Тогда
			СтруктураПоиска.Вставить("НомерГТД", ВыборкаТовары.НомерГТД);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтруктураПоиска.СчетФактураВыставленныйКомиссионера) Тогда
			СтруктураПоиска.СчетФактураВыставленныйКомиссионера = Неопределено;
		КонецЕсли;
		
		Для Каждого СтрокаОстатка Из Остатки.НайтиСтроки(СтруктураПоиска) Цикл
			
			Если СтрокаОстатка.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстатка, "ВидЗапасов, НомерГТД");
			
			Если Количество <= СтрокаОстатка.Количество Тогда
				
				Если СуммаСНДС = 0
					Или Не ЭтоОтчетОПродажах
					Или СуммаСНДС <= СтрокаОстатка.СуммаВыручки Тогда
					
					НоваяСтрока.СуммаСНДС	= СуммаСНДС * ВыборкаТовары.Знак;
					НоваяСтрока.СуммаНДС	= СуммаНДС * ВыборкаТовары.Знак;
					
				Иначе
					НоваяСтрока.СуммаСНДС	= СтрокаОстатка.СуммаВыручки * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДС	= СуммаНДС * ВыборкаТовары.Знак * СтрокаОстатка.СуммаВыручки / СуммаСНДС;
				КонецЕсли;
				
				НоваяСтрока.Количество			= Количество * ВыборкаТовары.Знак;
				НоваяСтрока.КоличествоПоРНПТ	= ?(СтрокаОстатка.Количество <> 0,
													?(СтрокаОстатка.Количество - Количество = 0,
														СтрокаОстатка.КоличествоПоРНПТ,
														Количество * ВыборкаТовары.Знак * СтрокаОстатка.КоличествоПоРНПТ
														/ СтрокаОстатка.Количество),
													0);
				НоваяСтрока.КоличествоУпаковок	= КоличествоУпаковок * ВыборкаТовары.Знак;
				
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения		= СуммаВознаграждения * ВыборкаТовары.Знак;
					НоваяСтрока.СуммаНДСВознаграждения	= СуммаНДСВознаграждения * ВыборкаТовары.Знак;
				КонецЕсли;
				
				СтрокаОстатка.Количество		= СтрокаОстатка.Количество - Количество;
				СтрокаОстатка.КоличествоПоРНПТ	= СтрокаОстатка.КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
				СтрокаОстатка.СуммаВыручки		= СтрокаОстатка.СуммаВыручки - НоваяСтрока.СуммаСНДС * СтрокаОстатка.Знак;
				
			Иначе
				
				НоваяСтрока.Количество			= СтрокаОстатка.Количество * СтрокаОстатка.Знак;
				НоваяСтрока.КоличествоПоРНПТ	= СтрокаОстатка.КоличествоПоРНПТ * СтрокаОстатка.Знак;
				НоваяСтрока.КоличествоУпаковок	= Окр(КоличествоУпаковок * СтрокаОстатка.Количество / Количество, 2, 1)
													* СтрокаОстатка.Знак;
				НоваяСтрока.СуммаСНДС			= СтрокаОстатка.СуммаВыручки * СтрокаОстатка.Знак;
				НоваяСтрока.СуммаНДС			= СуммаНДС * ВыборкаТовары.Знак * СтрокаОстатка.СуммаВыручки / СуммаСНДС;
				
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения		= Окр(СуммаВознаграждения * СтрокаОстатка.Количество / Количество,
																2,
																1) * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДСВознаграждения	= Окр(СуммаНДСВознаграждения * СтрокаОстатка.Количество / Количество,
																2,
																1) * СтрокаОстатка.Знак;
				КонецЕсли;
				
				СтрокаОстатка.Количество		= 0;
				СтрокаОстатка.КоличествоПоРНПТ	= 0;
				
			КонецЕсли;
			
			Количество			= Количество - НоваяСтрока.Количество * ВыборкаТовары.Знак;
			КоличествоПоРНПТ	= КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ * ВыборкаТовары.Знак;
			КоличествоУпаковок	= КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок * ВыборкаТовары.Знак;
			СуммаСНДС			= СуммаСНДС - НоваяСтрока.СуммаСНДС * ВыборкаТовары.Знак;
			СуммаНДС			= СуммаНДС - НоваяСтрока.СуммаНДС * ВыборкаТовары.Знак;
			
			Если ЭтоОтчетОПродажах Тогда
				СуммаВознаграждения		= СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения * ВыборкаТовары.Знак;
				СуммаНДСВознаграждения	= СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения * ВыборкаТовары.Знак;
			КонецЕсли;
			
			Если Количество = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если Количество <> 0 Тогда // остатков не хватило, генерируем вид запасов - собственный.
			
			НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			
			НоваяСтрока.Количество			= Количество * ВыборкаТовары.Знак;
			НоваяСтрока.КоличествоПоРНПТ	= КоличествоПоРНПТ * ВыборкаТовары.Знак;
			НоваяСтрока.КоличествоУпаковок	= КоличествоУпаковок * ВыборкаТовары.Знак;
			НоваяСтрока.СуммаСНДС			= СуммаСНДС * ВыборкаТовары.Знак;
			НоваяСтрока.СуммаНДС			= СуммаНДС * ВыборкаТовары.Знак;
			
			Если ЭтоОтчетОПродажах Тогда
				НоваяСтрока.СуммаВознаграждения		= СуммаВознаграждения * ВыборкаТовары.Знак;
				НоваяСтрока.СуммаНДСВознаграждения	= СуммаНДСВознаграждения * ВыборкаТовары.Знак;
			КонецЕсли;
			
			Если ВидЗапасовПоУмолчанию = Неопределено Тогда
				ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
											ДокументОбъект.Организация,
											Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями,
											СтруктураВидаЗапасовПоУмолчанию);
			КонецЕсли;
			
			НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
			
			ДополнительныеСвойства.Вставить("НедостаточноОстатковТоваровОрганизаций", Истина);
			
			ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций;
			
			Если КонтролироватьОстаткиТоваровОрганизаций 
				Или ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
				
				НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, ВыборкаТовары);
				
				НоваяСтрокаОшибок.Количество		= Количество;
				НоваяСтрокаОшибок.Сумма				= СуммаСНДС;
				НоваяСтрокаОшибок.ЕдиницаИзмерения	= ВыборкаТовары.ЕдиницаИзмерения;
				
				Если Не ПерезаполнитьВидыЗапасов
					Или Не ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
					Отказ = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаОшибок.Количество() > 0
		И ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
		
		ТекстСообщения = НСтр("ru = 'Документ %Ссылка% проведен с выключенным контролем остатков товаров организаций.'",
								Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияВыключенКонтрольОстатков(),
								УровеньЖурналаРегистрации.Предупреждение,
								,
								ДокументОбъект.Ссылка,
								ТекстСообщения);
		
	КонецЕсли;
	
	ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);
	
	СообщитьОбОшибкахЗаполненияВидовЗапасовКомитентов(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов);
	
КонецПроцедуры

Процедура УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	ЧастиТекстаЗапроса = Новый Массив;
	БлокировкаПоОрганизации = Ложь;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда	// Используется механизм интеркампани.

		ТекстЧастиЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтборыОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
			|ИЗ
			|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков";

	ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию") Тогда	// Используются раздельные операции закупки и продажи для упр. и регл. учета.

		ТекстЧастиЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	&Организация КАК Организация,
			|	ОтборыОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
			|ИЗ
			|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация),
			|	ОтборыОстатков.АналитикаУчетаНоменклатуры
			|ИЗ
			|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков";
		Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
		БлокировкаПоОрганизации = Истина;

	Иначе	// Могут выполняться движения только по организации регистратора

		ТекстЧастиЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	&Организация КАК Организация,
			|	ОтборыОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
			|ИЗ
			|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков";
		Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
		БлокировкаПоОрганизации = Истина;

	КонецЕсли;
	ЧастиТекстаЗапроса.Добавить(ТекстЧастиЗапроса);
	
	ТекстЧастиЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтборыОстатков.ВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ОтборыОстатков.ВидЗапасов = ВидыЗапасов.Ссылка
		|ГДЕ
		|	(ВидыЗапасов.ЭтоДубль
		|			ИЛИ ВидыЗапасов.Устаревший)";
	ЧастиТекстаЗапроса.Добавить(ТекстЧастиЗапроса);

	Запрос.Текст = СтрСоединить(ЧастиТекстаЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	РезультатЗапросаОтборОстатков = РезультатЗапроса[0];
	РезультатЗапросаУстаревшиеВидыЗапасов	= РезультатЗапроса[1];
	
	ОбъектДвижения = ?(ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.Сторно"),
						ДокументОбъект.СторнируемыйДокумент.ПолучитьОбъект(),
						ДокументОбъект);
	
	Блокировка = Новый БлокировкаДанных;
	
	Если ЕстьДвижениеВКоллекции(ОбъектДвижения, "ТоварыОрганизаций") Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		Если БлокировкаПоОрганизации Тогда
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
		КонецЕсли;
		
		Если ЕстьДвижениеВКоллекции(ДокументОбъект,"РезервыТоваровОрганизаций") = Неопределено Тогда
			ТекстИсключения = НСтр("ru = 'Ошибка в описании движений документа: документ является регистратором %Регистр1% и не является регистратором %Регистр2%.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Регистр2%", "РезервыТоваровОрганизаций");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Регистр1%", "ТоварыОрганизаций");
			
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РезервыТоваровОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		Если БлокировкаПоОрганизации Тогда
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
		КонецЕсли;
		
		Если Не РезультатЗапросаУстаревшиеВидыЗапасов.Пустой() Тогда
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.УстаревшиеВидыЗапасовСОстатками");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапросаУстаревшиеВидыЗапасов;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
		КонецЕсли;
		
	КонецЕсли;

	Если ЕстьДвижениеВКоллекции(ОбъектДвижения, "ТоварыКОформлениюОтчетовКомитенту") Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		
	КонецЕсли;
	
	
	Если ЕстьДвижениеВКоллекции(ОбъектДвижения, "ТоварыПереданныеНаКомиссию") Тогда
		
		ЗапросПоКомиссии = Новый Запрос;
		ЗапросПоКомиссии.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтборыОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АналитикаКомиссионера.КлючАналитики КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
		|		ПО Ключи.Ссылка = ОтборыОстатков.АналитикаУчетаНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
		|		ПО АналитикаКомиссионера.Номенклатура = Ключи.Номенклатура
		|			И АналитикаКомиссионера.Характеристика = Ключи.Характеристика
		|			И АналитикаКомиссионера.Серия = Ключи.Серия
		|			И АналитикаКомиссионера.МестоХранения = &Партнер
		|			И АналитикаКомиссионера.Назначение = Ключи.Назначение
		|";
		
		ЗапросПоКомиссии.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Если ТипЗнч(ОбъектДвижения) = Тип("ДокументОбъект.ОтчетПоКомиссииМеждуОрганизациями") Тогда
			ЗапросПоКомиссии.УстановитьПараметр("Партнер", ОбъектДвижения.Комиссионер);
		Иначе
			ЗапросПоКомиссии.УстановитьПараметр("Партнер", ОбъектДвижения.Партнер);
		КонецЕсли;
		
		РезультатЗапросаПоКомиссии = ЗапросПоКомиссии.Выполнить();
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыПереданныеНаКомиссию");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаПоКомиссии;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		
	КонецЕсли;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаполнитьВидыЗапасовРазныхПериодов(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов)
	
	ЗапросУничтоженияТаблиц = Новый Запрос;
	ЗапросУничтоженияТаблиц.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросУничтоженияТаблиц.Текст = "
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтПодобранныеВидыЗапасов
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтНовыеРезервы
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваров
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВидыЗапасов
	|;
	|";
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Колонки.Найти("Период") = Неопределено Тогда
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	КонецЕсли;
	
	ЗапросРазныхПериодов = ЗапросРазныхПериодов(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	РезультатПоРазнымПериодам = ЗапросРазныхПериодов.Выполнить();
	
	Если РезультатПоРазнымПериодам.Пустой() Тогда
		ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций = 0;
		
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатПоРазнымПериодам.Выбрать();
	
	ДатыОстатков = РезультатПоРазнымПериодам.Выгрузить().ВыгрузитьКолонку("Период");
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ТаблицаОстатковУжеСформирована Тогда
		МинимальнаяДатаОстатков = ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения;
		
		ТаблицаОстатковТоваровОрганизаций(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											Истина,
											МинимальнаяДатаОстатков,
											ДатыОстатков);
	КонецЕсли;
	
	ТаблицаВидыЗапасов = ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.СкопироватьКолонки();
	
	ТаблицаНовыеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы = ТаблицаНовыеРезервы.СкопироватьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Период КАК Период,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ВидыЗапасов.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВтПодобранныеВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	НовыеРезервы.НомерГТД КАК НомерГТД,
	|	НовыеРезервы.Организация КАК Организация,
	|	КОНЕЦПЕРИОДА(НовыеРезервы.Период, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА НовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НовыеРезервы.Количество
	|		ИНАЧЕ -НовыеРезервы.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА НовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ВЫРАЗИТЬ(НовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ -ВЫРАЗИТЬ(НовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВтНовыеРезервы
	|ИЗ
	|	&ТаблицаНовыеРезервы КАК НовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоПериодам.Организация КАК Организация,
	|	ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиПоПериодам.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиПоПериодам.НомерГТД КАК НомерГТД,
	|	СУММА(ОстаткиПоПериодам.Количество) КАК КоличествоОстаток,
	|	СУММА(ОстаткиПоПериодам.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	МАКСИМУМ(ОстаткиПоПериодам.ДатаПоступления) КАК ДатаПоступления,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Характеристика КАК Характеристика,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Серия КАК Серия,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Назначение КАК Назначение,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).МестоХранения КАК Склад,
	|	0 КАК СуммаОстаток,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПередачи,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОстатковПоПериодам.Организация КАК Организация,
	|		ТаблицаОстатковПоПериодам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаОстатковПоПериодам.ВидЗапасов КАК ВидЗапасов,
	|		ТаблицаОстатковПоПериодам.НомерГТД КАК НомерГТД,
	|		ТаблицаОстатковПоПериодам.КоличествоОстаток КАК Количество,
	|		ВЫРАЗИТЬ(ТаблицаОстатковПоПериодам.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|		ТаблицаОстатковПоПериодам.ДатаПоступления КАК ДатаПоступления
	|	ИЗ
	|		ТаблицаОстатковПоПериодам КАК ТаблицаОстатковПоПериодам
	|	ГДЕ
	|		ТаблицаОстатковПоПериодам.Период = &ТекущийПериод
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтПодобранныеВидыЗапасов.ВидЗапасов.Организация,
	|		ВтПодобранныеВидыЗапасов.АналитикаУчетаНоменклатуры,
	|		ВтПодобранныеВидыЗапасов.ВидЗапасов,
	|		ВтПодобранныеВидыЗапасов.НомерГТД,
	|		-ВтПодобранныеВидыЗапасов.Количество,
	|		-ВЫРАЗИТЬ(ВтПодобранныеВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)),
	|		ДАТАВРЕМЯ(1,1,1)
	|	ИЗ
	|		ВтПодобранныеВидыЗапасов КАК ВтПодобранныеВидыЗапасов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтНовыеРезервы.Организация,
	|		ВтНовыеРезервы.АналитикаУчетаНоменклатуры,
	|		ВтНовыеРезервы.ВидЗапасов,
	|		ВтНовыеРезервы.НомерГТД,
	|		ВтНовыеРезервы.Количество,
	|		ВЫРАЗИТЬ(ВтНовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)),
	|		ДАТАВРЕМЯ(1,1,1)
	|	ИЗ
	|		ВтНовыеРезервы КАК ВтНовыеРезервы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтПодобранныеВидыЗапасов.ВидЗапасов.Организация,
	|		ВтПодобранныеВидыЗапасов.КорАналитикаУчетаНоменклатуры,
	|		ВтПодобранныеВидыЗапасов.ВидЗапасов,
	|		ВтПодобранныеВидыЗапасов.НомерГТД,
	|		ВтПодобранныеВидыЗапасов.Количество,
	|		ВЫРАЗИТЬ(ВтПодобранныеВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)),
	|		ВтПодобранныеВидыЗапасов.Период
	|	ИЗ
	|		ВтПодобранныеВидыЗапасов КАК ВтПодобранныеВидыЗапасов
	|	ГДЕ
	|		ВтПодобранныеВидыЗапасов.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) КАК ОстаткиПоПериодам
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоПериодам.Организация,
	|	ОстаткиПоПериодам.АналитикаУчетаНоменклатуры,
	|	ОстаткиПоПериодам.ВидЗапасов,
	|	ОстаткиПоПериодам.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОстаткиПоПериодам.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	0 КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &ЗаполнениеПоОстаткам
	|			ТОГДА ТаблицаТоваров.КоличествоПоОстатку
	|		ИНАЧЕ ТаблицаТоваров.КоличествоПоТекущемуПериоду
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &ЗаполнениеПоОстаткам
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТоваров.КоличествоПоРНПТПоОстатку КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТоваров.КоличествоПоРНПТПоТекущемуПериоду КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ТаблицаТоваров.Период КАК ДатаОтгрузки,
	|	ТаблицаТоваров.Период КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
	|	ИСТИНА КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.Период КАК Период
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваровПоПериодам КАК ТаблицаТоваров
	|ГДЕ
	|	КОНЕЦПЕРИОДА(ТаблицаТоваров.Период, МЕСЯЦ) = &ТекущийПериод
	|	И ВЫБОР
	|			КОГДА &ЗаполнениеПоОстаткам
	|				ТОГДА ТаблицаТоваров.КоличествоПоОстатку
	|			ИНАЧЕ ТаблицаТоваров.КоличествоПоТекущемуПериоду
	|		КОНЕЦ > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	НЕОПРЕДЕЛЕНО КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
	|	ТаблицаВидыЗапасов.Период КАК ДатаОтгрузки,
	|	ЛОЖЬ КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ТаблицаВидыЗапасовПоПериодам КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	КОНЕЦПЕРИОДА(ТаблицаВидыЗапасов.Период, МЕСЯЦ) = &ТекущийПериод";
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		
		Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ТаблицаВидыЗапасов);
		Запрос.УстановитьПараметр("ТаблицаНовыеРезервы",	ТаблицаНовыеРезервы);
		Запрос.УстановитьПараметр("ТекущийПериод",			Выборка.Период);
		Запрос.УстановитьПараметр("ЗаполнениеПоОстаткам",	Истина);
		
		Результаты = Запрос.ВыполнитьПакет();
		
		Если Результаты[3].Выгрузить()[0].Количество = 0 Тогда
			ЗапросУничтоженияТаблиц.Выполнить();
			
			Продолжить;
		КонецЕсли;
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Очистить();
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.Очистить();
		
		ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		Отказ,
																		ПараметрыЗаполненияВидовЗапасов);
		
		ЗапросУничтоженияТаблиц.Выполнить();
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.ЗаполнитьЗначения(Выборка.Период, "Период");
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.ЗаполнитьЗначения(Выборка.Период, "Период");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов, ТаблицаВидыЗапасов);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы, ТаблицаНовыеРезервы);
		
		Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ТаблицаВидыЗапасов);
		Запрос.УстановитьПараметр("ТаблицаНовыеРезервы",	ТаблицаНовыеРезервы);
		Запрос.УстановитьПараметр("ТекущийПериод",			Выборка.Период);
		Запрос.УстановитьПараметр("ЗаполнениеПоОстаткам",	Ложь);
		Результаты = Запрос.ВыполнитьПакет();
		
		Если Результаты[3].Выгрузить()[0].Количество = 0 Тогда
			ЗапросУничтоженияТаблиц.Выполнить();
			
			Продолжить;
		КонецЕсли;
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Очистить();
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.Очистить();
		
		ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		Отказ,
																		ПараметрыЗаполненияВидовЗапасов);
		
		ЗапросУничтоженияТаблиц.Выполнить();
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.ЗаполнитьЗначения(Выборка.Период, "Период");
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.ЗаполнитьЗначения(Выборка.Период, "Период");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов, ТаблицаВидыЗапасов);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы, ТаблицаНовыеРезервы);
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения,
	|	ТаблицаНовыеРезервы.Период КАК Период,
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация КАК Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|	ТаблицаНовыеРезервы.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|	ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТНовыеРезервы
	|ИЗ
	|	&ТаблицаНовыеРезервы КАК ТаблицаНовыеРезервы";
	
	Запрос.УстановитьПараметр("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
	
	Запрос.Выполнить();
	
	ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов = ТаблицаВидыЗапасов;
	
КонецПроцедуры

Функция ЗапросРазныхПериодов(МенеджерВременныхТаблиц, Знач ПараметрыЗаполненияВидовЗапасов)
	
	ЗапросПериодов = Новый Запрос;
	ЗапросПериодов.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТПериодыЗаполнения") = Неопределено Тогда
		
		ЗапросПериодов.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Период КАК Период
		|ПОМЕСТИТЬ ВТПериодыЗаполнения
		|ИЗ
		|	ТекстВложенныйЗапрос КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.Период >= &ПериодЗаполнения";
		
		Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаТоваровПоПериодам") <> Неопределено Тогда
			
			ТекстВложенныйЗапрос =
			"ВЫБРАТЬ
			|	КОНЕЦПЕРИОДА(ТаблицаТоваровПоПериодам.Период, МЕСЯЦ) КАК Период
			|ИЗ
			|	ТаблицаТоваровПоПериодам КАК ТаблицаТоваровПоПериодам";
			
		Иначе
			
			ТекстВложенныйЗапрос =
			"ВЫБРАТЬ
			|	КОНЕЦПЕРИОДА(ТоварыОрганизацийИРезервыИзменения.Период, МЕСЯЦ) КАК Период
			|ИЗ
			|	ВТТоварыОрганизацийИзменения КАК ТоварыОрганизацийИРезервыИзменения";
			
		КонецЕсли;
		
		ЗапросПериодов.Текст = СтрЗаменить(ЗапросПериодов.Текст, "ТекстВложенныйЗапрос", "(" + ТекстВложенныйЗапрос + ")");
		
		ЗапросПериодов.Текст = ЗапросПериодов.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	ЗапросПериодов.Текст = ЗапросПериодов.Текст +
	"ВЫБРАТЬ
	|	ВТПериодыЗаполнения.Период КАК Период
	|ИЗ
	|	ВТПериодыЗаполнения КАК ВТПериодыЗаполнения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТПериодыЗаполнения.Период";
	
	ЗапросПериодов.УстановитьПараметр("ПериодЗаполнения", ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения);
	
	Возврат ЗапросПериодов;
	
КонецФункции

// Метод заполняет табличную часть "Виды запасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - требуется временные таблицы:
//		ТаблицаТоваров, ТаблицаДанныхДокумента, ТаблицаВидыЗапасов, ТаблицаОстатков.
//	Отказ - Булево - Признак отказа от записи документа.
//	ПараметрыЗаполненияВидовЗапасов - см. ПараметрыЗаполненияВидовЗапасов.
//
Процедура ЗаполнитьВидыЗапасовПоТаблицеОстатков(ДокументОбъект,
												МенеджерВременныхТаблиц,
												Отказ,
												ПараметрыЗаполненияВидовЗапасов)
	
	ТаблицаОшибок			= ТаблицаОшибокЗаполненияВидовЗапасов();
	ДополнительныеСвойства	= ДокументОбъект.ДополнительныеСвойства;
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов <> Неопределено Тогда
		ТаблицаВидыЗапасов = ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов;
	Иначе
		ТаблицаВидыЗапасов = ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].ВыгрузитьКолонки();
	КонецЕсли;
	
	КонтролироватьИзменениеНомеровГТД = ДополнительныеСвойства.Свойство("КонтролироватьИзменениеНомеровГТД");
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		ТаблицаНомеровГТД = ТаблицаВидыЗапасов.Скопировать(, "АналитикаУчетаНоменклатуры, НомерГТД, Количество"); // ТаблицаЗначений
	КонецЕсли;
	
	Запрос = ЗапросРаспределенияБезУчетаПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц,
																					ДополнительныеСвойства,
																					ПараметрыЗаполненияВидовЗапасов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаДанныеДокумента	= МассивРезультатов[1].Выбрать();
	ВыборкаТаблицаТоваров	= МассивРезультатов[2].Выбрать();
	
	ВыборкаДанныеДокумента.Следующий();
	Организация = ВыборкаДанныеДокумента.Организация;
	ХозяйственнаяОперация = ВыборкаДанныеДокумента.ХозяйственнаяОперация;
	
	СтруктураДанныхСтроки = Новый Структура("
		|АналитикаУчетаНоменклатурыОтгрузки,
		|Количество,
		|КоличествоПоРНПТ,
		|СуммаСНДС,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВознаграждения,
		|СуммаНДСВознаграждения,
		|НедостаточноОстатковТоваровОрганизаций,
		|ВидЗапасовОтгрузки,
		|КорВидЗапасов");
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|ВидЦены,
		|ВладелецТовара,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|ТипЗапасов,
		|НалогообложениеОрганизации");
	
	СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета		= Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.ВидЦены						= Справочники.ВидыЦенПоставщиков.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.ВладелецТовара				= ВыборкаДанныеДокумента.Партнер;
	СтруктураВидаЗапасовПоУмолчанию.Контрагент					= ВыборкаДанныеДокумента.Контрагент;
	СтруктураВидаЗапасовПоУмолчанию.Соглашение					= ВыборкаДанныеДокумента.Соглашение;
	СтруктураВидаЗапасовПоУмолчанию.Договор						= ВыборкаДанныеДокумента.Договор;
	СтруктураВидаЗапасовПоУмолчанию.Валюта						= ВыборкаДанныеДокумента.Валюта;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС			= ВыборкаДанныеДокумента.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеОрганизации	= ВыборкаДанныеДокумента.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов					= ВыборкаДанныеДокумента.ТипЗапасов;
	
	РезультатЗапроса		= МассивРезультатов[МассивРезультатов.ВГраница()];
	ВыборкаОстаткиПоСтрокам	= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); // РезультатЗапроса
	
	ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(
																		ПараметрыЗаполненияВидовЗапасов);
	ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию =
		Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию
		И ПараметрыЗаполненияВидовЗапасов.ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию;
	
	ВидЗапасовПоУмолчанию			= Неопределено;
	ВидыЗапасовДляВозврата			= Новый Соответствие;
	ВидыЗапасовПоНастройкамПередачи = Новый Соответствие;
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		
		ИзрасходованныеОстаткиПериода			= Новый ТаблицаЗначений;
		ОтборСтрокИзрасходованныеОстаткиПериода	= Новый Структура;
		
		Для Каждого КолонкаЗапроса Из РезультатЗапроса.Колонки Цикл
			
			Если КолонкаЗапроса.Имя <> "Период" Тогда
				ИзрасходованныеОстаткиПериода.Колонки.Добавить(КолонкаЗапроса.Имя);
			КонецЕсли;
			
			Если КолонкаЗапроса.Имя <> "КоличествоОстаток"
				И КолонкаЗапроса.Имя <> "Период" Тогда
				
				ОтборСтрокИзрасходованныеОстаткиПериода.Вставить(КолонкаЗапроса.Имя);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций
														Или Не Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
	
	Пока ВыборкаОстаткиПоСтрокам.Следующий() Цикл
		
		КоличествоТовара				= ВыборкаОстаткиПоСтрокам.Количество;
		КоличествоТовараПоРНПТ			= ВыборкаОстаткиПоСтрокам.КоличествоПоРНПТ;
		СуммаТовараСНДС					= ВыборкаОстаткиПоСтрокам.СуммаСНДС;
		СуммаНДСТовара					= ВыборкаОстаткиПоСтрокам.СуммаНДС;
		СуммаВознагражденияВсего		= ВыборкаОстаткиПоСтрокам.СуммаВознаграждения;
		СуммаНДСВознагражденияВсего		= ВыборкаОстаткиПоСтрокам.СуммаНДСВознаграждения;
		
		ЕстьКоличествоПоРНПТ = КоличествоТовараПоРНПТ <> 0;
		
		// Детальные записи
		Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов)
				И ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов
				И Выборка.ДатаПоступления < Выборка.Период Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета") Тогда
				СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = Выборка.ГруппаФинансовогоУчета;
			Иначе
				СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = Неопределено;
			КонецЕсли;
			
			ВидЗапасовОтгрузки = Неопределено;
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				
				ВидЗапасов = Выборка.ВидЗапасов;
				ВидЗапасовОтгрузки = ?(ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки),
										Выборка.ВидЗапасовОтгрузки,
										Выборка.ВидЗапасов);
				
			ИначеЕсли ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки) Тогда
				
				Если Выборка.ОтгрузкаЗапасовДругойОрганизации Тогда
					ВидЗапасовОтгрузки = Выборка.ВидЗапасовОтгрузки;
				Иначе
					
					ВидЗапасовОтгрузки = ВидыЗапасовПоНастройкамПередачи.Получить(Выборка.ВидЗапасовОтгрузки);
					
					Если ВидЗапасовОтгрузки = Неопределено Тогда
						ВидЗапасовОтгрузки = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
												Выборка.ВидЗапасовОтгрузки,
												Организация,
												ВыборкаДанныеДокумента.НалогообложениеНДС);
						
						ВидыЗапасовПоНастройкамПередачи.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасовОтгрузки);
					КонецЕсли;
					
				КонецЕсли;
				
				ВидЗапасов = ВидыЗапасовДляВозврата.Получить(ВидЗапасовОтгрузки);
				
				Если ВидЗапасов = Неопределено Тогда
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДляВозвратаТоваровОтКлиента(ВидЗапасовОтгрузки,
																								Организация);
					
					ВидыЗапасовДляВозврата.Вставить(ВидЗапасовОтгрузки, ВидЗапасов);
				КонецЕсли;
				
			Иначе
				ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
			КонецЕсли;
			
			КорВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
			Если ЗначениеЗаполнено(Выборка.КорВидЗапасов) Тогда
				КорВидЗапасов = Выборка.КорВидЗапасов;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов)
				И ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
				
				ЗаполнитьЗначенияСвойств(ОтборСтрокИзрасходованныеОстаткиПериода, Выборка);
				СтрокиОстатка = ИзрасходованныеОстаткиПериода.НайтиСтроки(ОтборСтрокИзрасходованныеОстаткиПериода);
				
				Если СтрокиОстатка.Количество() > 0 Тогда
					СтрокаИзрасходованногоОстаткаПериода = СтрокиОстатка[0];
					
					КоличествоОстаток				= СтрокаИзрасходованногоОстаткаПериода.КоличествоОстаток;
					КоличествоОстатокВсего			= СтрокаИзрасходованногоОстаткаПериода.КоличествоОстатокВсего;
					КоличествоПоРНПТОстатокВсего	= СтрокаИзрасходованногоОстаткаПериода.КоличествоПоРНПТОстатокВсего;
				Иначе
					СтрокаИзрасходованногоОстаткаПериода = Неопределено;
					
					КоличествоОстаток				= Выборка.КоличествоОстаток;
					КоличествоОстатокВсего			= Выборка.КоличествоОстатокВсего;
					КоличествоПоРНПТОстатокВсего	= Выборка.КоличествоПоРНПТОстатокВсего;
				КонецЕсли;
				
				Если КоличествоОстаток = 0 Тогда
					Продолжить;
				КонецЕсли;
				
			Иначе
				КоличествоОстаток				= Выборка.КоличествоОстаток;
				КоличествоОстатокВсего			= Выборка.КоличествоОстатокВсего;
				КоличествоПоРНПТОстатокВсего	= Выборка.КоличествоПоРНПТОстатокВсего;
			КонецЕсли;
			
			СуммаОстаток		= Выборка.СуммаОстаток;
			СуммаНДСОстаток		= Выборка.СуммаНДСОстаток; 
			НеУказанНомерГТД	= Ложь;
			
			Если Выборка.НеУказанНомерГТД Тогда
				
				КоличествоОстаток				= 0;
				КоличествоОстатокВсего			= 0;
				КоличествоПоРНПТОстатокВсего	= 0;
				СуммаОстаток					= 0;
				СуммаНДСОстаток					= 0;
				НеУказанНомерГТД				= Выборка.НеУказанНомерГТД;
				
			ИначеЕсли (КоличествоТовара > 0
					И КоличествоОстаток > 0)
				Или (КоличествоТовара < 0
					И КоличествоОстаток < 0)
				Или (ПараметрыЗаполненияВидовЗапасов.ПодбиратьСуммыПриНулевомКоличестве И СуммаТовараСНДС > 0
					И СуммаОстаток > 0)
				Или (ПараметрыЗаполненияВидовЗапасов.ПодбиратьСуммыПриНулевомКоличестве И СуммаТовараСНДС < 0
					И СуммаОстаток < 0) Тогда
				
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ТаблицаВидыЗапасов.Колонки.Найти("ДокументПередачи") <> Неопределено Тогда
					НоваяСтрока.ДокументПередачи = Выборка.ДокументРеализации;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВидЗапасов) Тогда
					НоваяСтрока.ВидЗапасов = ВидЗапасов;
				Иначе
					ТекстИсключения = НСтр("ru = 'Ненулевое количество при пустом виде запасов.'");
					
					ВызватьИсключение ТекстИсключения;
				КонецЕсли;
				
				Если КоличествоТовара > 0 
					Или (ПараметрыЗаполненияВидовЗапасов.ПодбиратьСуммыПриНулевомКоличестве
						И КоличествоТовара = 0 И СуммаОстаток > 0) Тогда
					
					Количество = Мин(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток	= Макс(СуммаОстаток, 0);
						СуммаСНДС		= ?(КоличествоОстаток = Количество,
											СуммаОстаток,
											Мин(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0,
										Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1),
										0);
					КонецЕсли;
					
				Иначе
					
					Количество = Макс(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток	= Мин(СуммаОстаток, 0);
						СуммаСНДС		= ?(КоличествоОстаток = Количество,
											СуммаОстаток,
											Макс(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0,
										Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1),
										0);
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.ВидЗапасов)
					И ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
					
					Если СтрокаИзрасходованногоОстаткаПериода = Неопределено Тогда
						СтрокаИзрасходованногоОстаткаПериода = ИзрасходованныеОстаткиПериода.Добавить();
						
						ЗаполнитьЗначенияСвойств(СтрокаИзрасходованногоОстаткаПериода, Выборка);
					КонецЕсли;
					
					КоличествоПоРНПТ = ?(КоличествоОстатокВсего <> 0,
										?(КоличествоОстатокВсего - Количество = 0,
											КоличествоПоРНПТОстатокВсего,
											Количество * КоличествоПоРНПТОстатокВсего / КоличествоОстатокВсего),
										0);
					
					СтрокаИзрасходованногоОстаткаПериода.КоличествоОстаток = СтрокаИзрасходованногоОстаткаПериода.КоличествоОстаток - Количество;
					СтрокаИзрасходованногоОстаткаПериода.КоличествоОстатокВсего = СтрокаИзрасходованногоОстаткаПериода.КоличествоОстатокВсего - Количество;
					СтрокаИзрасходованногоОстаткаПериода.КоличествоПоРНПТОстатокВсего = СтрокаИзрасходованногоОстаткаПериода.КоличествоПоРНПТОстатокВсего - КоличествоПоРНПТ;
					
				КонецЕсли;
				
				СтруктураДанныхСтроки.Количество				= Количество;
				СтруктураДанныхСтроки.КоличествоПоРНПТ			= ?(КоличествоОстатокВсего <> 0,
																	?(КоличествоОстатокВсего - Количество = 0,
																		КоличествоПоРНПТОстатокВсего,
																		Количество * КоличествоПоРНПТОстатокВсего / КоличествоОстатокВсего),
																	0);
				СтруктураДанныхСтроки.СуммаСНДС					= СуммаСНДС;
				СтруктураДанныхСтроки.СуммаНДС					= ?(СуммаТовараСНДС <> 0,
																	Окр(СуммаСНДС * СуммаНДСТовара / СуммаТовараСНДС, 2, 1),
																	0);
				СтруктураДанныхСтроки.СтавкаНДС					= Выборка.СтавкаНДС;
				СтруктураДанныхСтроки.СуммаВознаграждения		= ?(КоличествоТовара <> 0,
																	Окр(Количество * СуммаВознагражденияВсего / КоличествоТовара, 2, 1),
																	?(ПараметрыЗаполненияВидовЗапасов.ПодбиратьСуммыПриНулевомКоличестве И СуммаТовараСНДС <> 0,
																	Окр(СуммаСНДС * СуммаВознагражденияВсего / СуммаТовараСНДС, 2, 1),
																	0));
				СтруктураДанныхСтроки.СуммаНДСВознаграждения	= ?(КоличествоТовара <> 0,
																	Окр(Количество * СуммаНДСВознагражденияВсего / КоличествоТовара, 2, 1),
																	?(ПараметрыЗаполненияВидовЗапасов.ПодбиратьСуммыПриНулевомКоличестве И СуммаТовараСНДС <> 0,
																	Окр(СуммаСНДС * СуммаНДСВознагражденияВсего / СуммаТовараСНДС, 2, 1),
																	0));
				СтруктураДанныхСтроки.ВидЗапасовОтгрузки		= ВидЗапасовОтгрузки;
				СтруктураДанныхСтроки.КорВидЗапасов				= КорВидЗапасов;
				СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Ложь;
				СтруктураДанныхСтроки.АналитикаУчетаНоменклатурыОтгрузки = Выборка.АналитикаУчетаНоменклатурыОтгрузки;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				КоличествоТовара			= КоличествоТовара				- СтруктураДанныхСтроки.Количество;
				Если ЕстьКоличествоПоРНПТ Тогда
					КоличествоТовараПоРНПТ = КоличествоТовараПоРНПТ - СтруктураДанныхСтроки.КоличествоПоРНПТ;
				КонецЕсли;
				СуммаТовараСНДС				= СуммаТовараСНДС				- СтруктураДанныхСтроки.СуммаСНДС;
				СуммаНДСТовара				= СуммаНДСТовара				- СтруктураДанныхСтроки.СуммаНДС;
				СуммаВознагражденияВсего	= СуммаВознагражденияВсего		- СтруктураДанныхСтроки.СуммаВознаграждения;
				СуммаНДСВознагражденияВсего	= СуммаНДСВознагражденияВсего	- СтруктураДанныхСтроки.СуммаНДСВознаграждения;
				СуммаОстаток				= СуммаОстаток					- СтруктураДанныхСтроки.СуммаСНДС;
				
			КонецЕсли;
			
		КонецЦикла; // Выборка по остаткам
		
		Если КоличествоТовара <> 0
			Или СуммаТовараСНДС <> 0 Тогда
			
			Если ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию
				Или (ПроводитьБезКонтроляОстатковТоваровОрганизаций
						И Не ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию) Тогда
				
				Если Не ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке
					И ПараметрыЗаполненияВидовЗапасов.ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Количество() = 0 Тогда
					
					ТекстИсключения = НСтр("ru = 'Установлен флаг получения владельца товаров из таблицы
												|реквизитов видов запасов по умолчанию, но таблица не передана.'");
					
					ВызватьИсключение ТекстИсключения;
					
				КонецЕсли;
				
				ВыборкаТаблицаТоваров.Сбросить();
				ВидыЗапасовПоУмолчанию = Новый Соответствие();
				
				ОтборСтрок = Новый Структура("НомерСтроки", ВыборкаОстаткиПоСтрокам.НомерСтроки);
				
				Если ВыборкаТаблицаТоваров.НайтиСледующий(ОтборСтрок) Тогда
					
					ГруппаФинансовогоУчета = ВыборкаТаблицаТоваров.ГруппаФинансовогоУчета;
					
					Если ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке Тогда
						
						ВидЗапасовПоУмолчанию = ВидыЗапасовПоУмолчанию[ГруппаФинансовогоУчета];
						
						Если ВидЗапасовПоУмолчанию = Неопределено Тогда
							СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = ГруппаФинансовогоУчета;
							СтруктураВидаЗапасовПоУмолчанию.ВидЦены = ВыборкаТаблицаТоваров.ВидЦены;
							СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов = ?(ВыборкаТаблицаТоваров.ТипЗапасов = Перечисления.ТипыЗапасов.Работа,
																			ВыборкаТаблицаТоваров.ТипЗапасов,
																			ВыборкаДанныеДокумента.ТипЗапасов);
							
							ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
														Организация,
														ХозяйственнаяОперация,
														СтруктураВидаЗапасовПоУмолчанию);
							
							ВидыЗапасовПоУмолчанию.Вставить(ГруппаФинансовогоУчета, ВидЗапасовПоУмолчанию);
						КонецЕсли;
						
					Иначе
						
						СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета	= ГруппаФинансовогоУчета;
						СтруктураВидаЗапасовПоУмолчанию.ВладелецТовара			= ВыборкаТаблицаТоваров.ВладелецТовара;
						СтруктураВидаЗапасовПоУмолчанию.Контрагент				= ВыборкаТаблицаТоваров.Контрагент;
						СтруктураВидаЗапасовПоУмолчанию.Договор					= ВыборкаТаблицаТоваров.Договор;
						СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов				= ВыборкаТаблицаТоваров.ТипЗапасов;
						
						ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
													Организация,
													ХозяйственнаяОперация,
													СтруктураВидаЗапасовПоУмолчанию);
						
					КонецЕсли;
					
					НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТаблицаТоваров);
					НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
					
					Если ТаблицаВидыЗапасов.Колонки.Найти("ДокументПередачи") <> Неопределено Тогда
						НоваяСтрока.ДокументПередачи = ВыборкаТаблицаТоваров.ДокументРеализации;
					КонецЕсли;
					
					Если ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков = "ТоварыОрганизацийКПередаче" Тогда
						НоваяСтрока.ВидЗапасовПолучателя = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
																ВидЗапасовПоУмолчанию,
																ДокументОбъект.ОрганизацияПолучатель,
																СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС,
																ДокументОбъект.Дата);
					КонецЕсли;
					
					СтруктураДанныхСтроки.Количество				= КоличествоТовара;
					СтруктураДанныхСтроки.КоличествоПоРНПТ			= КоличествоТовараПоРНПТ;
					СтруктураДанныхСтроки.СуммаСНДС					= СуммаТовараСНДС;
					СтруктураДанныхСтроки.СуммаНДС					= СуммаНДСТовара;
					СтруктураДанныхСтроки.СуммаВознаграждения		= СуммаВознагражденияВсего;
					СтруктураДанныхСтроки.СуммаНДСВознаграждения	= СуммаНДСВознагражденияВсего;
					СтруктураДанныхСтроки.СтавкаНДС					= ВыборкаТаблицаТоваров.СтавкаНДС;
					СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Истина;
					СтруктураДанныхСтроки.АналитикаУчетаНоменклатурыОтгрузки = НоваяСтрока.АналитикаУчетаНоменклатуры;
					СтруктураДанныхСтроки.ВидЗапасовОтгрузки		= НоваяСтрока.ВидЗапасов;
					СтруктураДанныхСтроки.КорВидЗапасов				= НоваяСтрока.ВидЗапасов;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию Тогда
				
				Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения Тогда
					
					Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
					Выборка.Следующий();
					
					НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, Выборка);
					
					НоваяСтрокаОшибок.Количество		= КоличествоТовара;
					НоваяСтрокаОшибок.Сумма				= СуммаТовараСНДС;
					НоваяСтрокаОшибок.ЕдиницаИзмерения	= Выборка.ЕдиницаИзмерения;
					НоваяСтрокаОшибок.НеУказанНомерГТД	= НеУказанНомерГТД;
					
				КонецЕсли;
				
				Если Не ПроводитьБезКонтроляОстатковТоваровОрганизаций
					Или ИгнорироватьКонтрольТоваровОрганизацийПриЗапретеЗаполненияПоУмолчанию Тогда
					
					Отказ = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // Выборка по строкам документа
	
	Если ТаблицаОшибок.Количество() > 0
		И ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
		
		ТекстСообщения = НСтр("ru = 'Документ %Ссылка% проведен с выключенным контролем остатков товаров организаций.'",
								Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияВыключенКонтрольОстатков(),
								УровеньЖурналаРегистрации.Предупреждение,
								,
								ДокументОбъект.Ссылка,
								ТекстСообщения);
		
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов = ТаблицаВидыЗапасов;
	Иначе
		ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);
	КонецЕсли;
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		
		ТаблицаНомеровГТД.Колонки.Добавить("НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаВидыЗапасов Цикл
			НоваяСтрока = ТаблицаНомеровГТД.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Количество		= 0;
			НоваяСтрока.НовоеКоличество	= СтрокаТаблицы.Количество;
		КонецЦикла;
		
		ТаблицаНомеровГТД.Свернуть("АналитикаУчетаНоменклатуры, НомерГТД", "Количество, НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаНомеровГТД Цикл
			Если СтрокаТаблицы.Количество <> СтрокаТаблицы.НовоеКоличество Тогда
				ДополнительныеСвойства.Вставить("ИзменилисьНомераГТД", Истина);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	СообщитьОбОшибкахЗаполненияВидовЗапасовПоТаблицеКОформлению(ДокументОбъект,
																ТаблицаОшибок,
																ПараметрыЗаполненияВидовЗапасов,
																ХозяйственнаяОперация);
	
КонецПроцедуры

Функция ЗапросРаспределенияБезУчетаПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц,
																				ДополнительныеСвойства,
																				ПараметрыЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаТоваров.АналитикаУчетаНоменклатуры) КАК АналитикаОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Номенклатура, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура) КАК НоменклатураОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Характеристика, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика) КАК ХарактеристикаОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Серия, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия) КАК СерияОстатков,
	|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпрНоменклатура.ПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	СпрНоменклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	ЕСТЬNULL(АналитикаКомиссионера.МестоХранения, ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения) КАК СкладОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Назначение, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение) КАК НазначениеОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.СтатьяКалькуляции, ТаблицаТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции) КАК СтатьяКалькуляцииОстатков,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	&ТекстПоляТаблицаТоваровНоменклатураПартнера_ КАК НоменклатураПартнера,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.ВидЦены КАК ВидЦены,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА &ТекстПоляТаблицаТоваровДокументРеализации_ В(&ПустыеЗначенияДокументаРеализации)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &ТекстПоляТаблицаТоваровДокументРеализации_
	|	КОНЕЦ КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА &ТекстПоляТаблицаТоваровДокументОприходования_ В(&ПустыеЗначенияДокументаОприходования)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &ТекстПоляТаблицаТоваровДокументОприходования_
	|	КОНЕЦ КАК ДокументОприходования,
	|	&ТекстПоляТаблицаТоваровПериод_ КАК Период,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	МАКСИМУМ(ТаблицаТоваров.СтавкаНДС) КАК СтавкаНДС,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	&ТекстПоляТаблицаТоваровКоличествоПоРНПТ_ КАК КоличествоПоРНПТ,
	|	СУММА(ТаблицаТоваров.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ТаблицаТоваров.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаТоваров.СуммаВознаграждения) КАК СуммаВознаграждения,
	|	СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) КАК СуммаНДСВознаграждения
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|		ПО ТаблицаТоваров.Номенклатура = АналитикаКомиссионера.Номенклатура
	|			И ТаблицаТоваров.Характеристика = АналитикаКомиссионера.Характеристика
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомиссионера.Назначение
	|			И ТаблицаДанныхДокумента.Партнер = АналитикаКомиссионера.МестоХранения
	|			И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионера.Серия
	|			И АналитикаКомиссионера.СтатьяКалькуляции = &ПустоеЗначениеСтатьиКалькуляции
	|			И (ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	//++ Устарело_Переработка24
	|				ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
	//-- Устарело_Переработка24
	|				ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика2_5))
	|
	|ГДЕ
	|	ТаблицаНоменклатуры.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаТоваров.АналитикаУчетаНоменклатуры),
	|	СпрНоменклатура.ЕдиницаИзмерения,
	|	СпрНоменклатура.ПодакцизныйТовар,
	|	СпрНоменклатура.ВестиУчетПоГТД,
	|	ЕСТЬNULL(АналитикаКомиссионера.Номенклатура, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура),
	|	ЕСТЬNULL(АналитикаКомиссионера.Характеристика, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика),
	|	ЕСТЬNULL(АналитикаКомиссионера.Серия, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия),
	|	ЕСТЬNULL(АналитикаКомиссионера.МестоХранения, ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения),
	|	ЕСТЬNULL(АналитикаКомиссионера.Назначение, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение),
	|	ЕСТЬNULL(АналитикаКомиссионера.СтатьяКалькуляции, ТаблицаТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции),
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТаблицаНоменклатуры.ТипНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения,
	|	&ТекстПоляТаблицаТоваровНоменклатураПартнера_,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение,
	|	ВЫБОР 
	|		КОГДА &ТекстПоляТаблицаТоваровДокументРеализации_ В(&ПустыеЗначенияДокументаРеализации)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &ТекстПоляТаблицаТоваровДокументРеализации_
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ТекстПоляТаблицаТоваровДокументОприходования_ В(&ПустыеЗначенияДокументаОприходования)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &ТекстПоляТаблицаТоваровДокументОприходования_
	|	КОНЕЦ,
	|	&ТекстПоляТаблицаТоваровПериод_,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД,
	|	ТаблицаТоваров.ВидЦены
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.Дата КАК Период,
	|	ТаблицаДанныхДокумента.Партнер КАК Партнер,
	|	ТаблицаДанныхДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДанныхДокумента.Соглашение КАК Соглашение,
	|	ТаблицаДанныхДокумента.Договор КАК Договор,
	|	ТаблицаДанныхДокумента.Валюта КАК Валюта,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаДанныхДокумента.ТипЗапасов КАК ТипЗапасов
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасовПоУмолчанию.ВладелецТовара КАК ВладелецТовара,
	|	ВЫБОР
	|		КОГДА ВидыЗапасовПоУмолчанию.ТипЗапасов ЕСТЬ NULL
	|				И ТаблицаДокумента.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа)
	|		ИНАЧЕ ВидыЗапасовПоУмолчанию.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|	ВидыЗапасовПоУмолчанию.Контрагент КАК Контрагент,
	|	ВидыЗапасовПоУмолчанию.Договор КАК Договор,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Серия КАК Серия,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.ВидЦены КАК ВидЦены,
	|	ТаблицаДокумента.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаДокумента.ДокументОприходования КАК ДокументОприходования,
	|	ТаблицаДокумента.Период КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьГруппыФинУчета
	|				ИЛИ ТаблицаДокумента.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК ГруппаФинансовогоУчета
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|		ПО ВидыЗапасовПоУмолчанию.НомерСтроки = ТаблицаДокумента.НомерСтроки
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную,
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	&ТекстПоляТаблицаВидыЗапасовКоличествоПоРНПТ_ КАК КоличествоПоРНПТ,
	|	&ТекстПоляТаблицаВидыЗапасовСуммаНДС_ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА СУММА(ТаблицаВидыЗапасов.Количество) > 0
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК Знак,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.ДокументОприходования КАК ДокументОприходования,
	|	&ТекстПоляТаблицаВидыЗапасовПериод_ КАК Период
	|ПОМЕСТИТЬ ВтВидыЗапасовСводно
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|		ПО ТаблицаВидыЗапасов.Номенклатура = АналитикаКомиссионера.Номенклатура
	|			И ТаблицаВидыЗапасов.Характеристика = АналитикаКомиссионера.Характеристика
	|			И ТаблицаДанныхДокумента.Партнер = АналитикаКомиссионера.МестоХранения
	|			И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение = АналитикаКомиссионера.Назначение
	|			И АналитикаКомиссионера.СтатьяКалькуляции = &ПустоеЗначениеСтатьиКалькуляции
	|			И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионера.Серия
	|			И ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры),
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.СкладОтгрузки,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную,
	|	ТаблицаВидыЗапасов.ДокументРеализации,
	|	ТаблицаВидыЗапасов.ДокументОприходования,
	|	&ТекстПоляТаблицаВидыЗапасовПериод_
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	ВидЗапасовПолучателя,
	|	НомерГТД
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	// Сгруппируем остатки. Для каждой сгруппированной строки
	// определим использование данного остатка в текущем документе.
	// Необходимо для правильного получения СуммыСНДС из документа,
	// а не усредненной из остатков.
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВтОстаткиБезГруппировки.ОстаткиДокумента) КАК ОстаткиДокумента,
	|
	|	ВтОстаткиБезГруппировки.Организация КАК Организация,
	|	ВтОстаткиБезГруппировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтОстаткиБезГруппировки.Номенклатура КАК Номенклатура,
	|	ВтОстаткиБезГруппировки.Характеристика КАК Характеристика,
	|	ВтОстаткиБезГруппировки.Серия КАК Серия,
	|	ВтОстаткиБезГруппировки.Склад КАК Склад,
	|	ВтОстаткиБезГруппировки.Назначение КАК Назначение,
	|	ВтОстаткиБезГруппировки.НазначениеОтгрузки КАК НазначениеОтгрузки,
	|	ВтОстаткиБезГруппировки.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ВтОстаткиБезГруппировки.СкладОтгрузки КАК СкладОтгрузки,
	|
	|	ВтОстаткиБезГруппировки.ВидЗапасов КАК ВидЗапасов,
	|	ВтОстаткиБезГруппировки.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	ВтОстаткиБезГруппировки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	ВтОстаткиБезГруппировки.КорВидЗапасов КАК КорВидЗапасов,
	|	ВтОстаткиБезГруппировки.НомерГТД КАК НомерГТД,
	|	ВтОстаткиБезГруппировки.ДатаПоступления КАК ДатаПоступления,
	|
	|	МАКСИМУМ(ВтОстаткиБезГруппировки.КоличествоОстатокВсего) КАК КоличествоОстатокВсего,
	|	СУММА(ВтОстаткиБезГруппировки.КоличествоОстаток) КАК КоличествоОстаток,
	|	МАКСИМУМ(ВтОстаткиБезГруппировки.КоличествоПоРНПТОстатокВсего) КАК КоличествоПоРНПТОстатокВсего,
	|	СУММА(ВтОстаткиБезГруппировки.СуммаОстаток) КАК СуммаОстаток,
	|	МАКСИМУМ(ВтОстаткиБезГруппировки.СуммаНДСОстаток) КАК СуммаНДСОстаток,
	|
	|	ВтОстаткиБезГруппировки.ДокументРеализации КАК ДокументРеализации,
	|	ВтОстаткиБезГруппировки.ДокументОприходования КАК ДокументОприходования,
	|	ВтОстаткиБезГруппировки.Период КАК Период
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	(ВЫБРАТЬ // ОСТАТКИ, УКАЗАННЫЕ В ДОКУМЕНТЕ
	|		ИСТИНА КАК ОстаткиДокумента,
	|		
	|		Остатки.Организация КАК Организация,
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Ключи.Номенклатура КАК Номенклатура,
	|		Ключи.Характеристика КАК Характеристика,
	|		Ключи.Серия КАК Серия,
	|		Ключи.МестоХранения КАК Склад,
	|		Ключи.Назначение КАК Назначение,
	|		Остатки.Назначение КАК НазначениеОтгрузки,
	|		Ключи.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		ВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|		
	|		ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|		ВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|		Остатки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|		Остатки.КорВидЗапасов КАК КорВидЗапасов,
	|		ВидыЗапасов.НомерГТД КАК НомерГТД,
	|		Остатки.ДатаПоступления КАК ДатаПоступления,
	|		
	|		ВидыЗапасов.Количество КАК КоличествоОстатокВсего,
	|		ВЫБОР
	|			КОГДА ВидыЗапасов.ВидыЗапасовУказаныВручную
	|					И (НЕ &ПерезаполнитьВидыЗапасов
	|						ИЛИ &ПроводитьБезКонтроляОстатковТоваровОрганизаций)
	|				ТОГДА ВидыЗапасов.Количество
	|			КОГДА ВидыЗапасов.Знак * Остатки.КоличествоОстаток > ВидыЗапасов.Знак * ВидыЗапасов.Количество
	|				ТОГДА ВидыЗапасов.Количество
	|			ИНАЧЕ Остатки.КоличествоОстаток
	|		КОНЕЦ КАК КоличествоОстаток,
	|		ВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТОстатокВсего,
	|	
	|		ВЫБОР
	|			КОГДА (ВидыЗапасов.Знак * Остатки.КоличествоОстаток > ВидыЗапасов.Знак * ВидыЗапасов.Количество)
	|					И Остатки.КоличествоОстаток <> 0
	|				ТОГДА ВидыЗапасов.Количество * Остатки.СуммаОстаток / Остатки.КоличествоОстаток
	|			ИНАЧЕ Остатки.СуммаОстаток
	|		КОНЕЦ КАК СуммаОстаток,
	|		ВидыЗапасов.СуммаНДС КАК СуммаНДСОстаток,
	|		ВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|		ВидыЗапасов.ДокументОприходования КАК ДокументОприходования,
	|		ВидыЗапасов.Период КАК Период
	|	ИЗ
	|		ВтВидыЗапасовСводно КАК ВидыЗапасов
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|			ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Ключи.Ссылка
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК Остатки
	|			ПО Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|				И Остатки.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|				И (Остатки.СкладОтгрузки = ВидыЗапасов.СкладОтгрузки
	|					ИЛИ ВидыЗапасов.СкладОтгрузки В(ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), НЕОПРЕДЕЛЕНО))
	|				И Остатки.НомерГТД = ВидыЗапасов.НомерГТД
	|				И Остатки.ДокументРеализации = ВидыЗапасов.ДокументРеализации
	|				И Остатки.ДокументОприходования = ВидыЗапасов.ДокументОприходования
	|				И (ВидыЗапасов.Период = ДАТАВРЕМЯ(1,1,1)
	|					ИЛИ ВидыЗапасов.Период = Остатки.ДатаПоступления)
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасов
	|			ПО ВидыЗапасов.ВидЗапасов = РеквизитыВидаЗапасов.Ссылка
	|	
	|	ГДЕ
	|		НЕ Остатки.ВидЗапасов ЕСТЬ NULL
	|		ИЛИ (ВидыЗапасов.ВидыЗапасовУказаныВручную
	|			И (НЕ &ПерезаполнитьВидыЗапасов
	|				ИЛИ &ПроводитьБезКонтроляОстатковТоваровОрганизаций))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // ОСТАТКИ, НЕ УКАЗАННЫЕ В ДОКУМЕНТЕ
	|		ЛОЖЬ КАК ОстаткиДокумента,
	|		
	|		Остатки.Организация КАК Организация,
	|		Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Ключи.Номенклатура,
	|		Ключи.Характеристика,
	|		Ключи.Серия,
	|		Ключи.МестоХранения,
	|		Ключи.Назначение,
	|		Остатки.Назначение,
	|		Ключи.СтатьяКалькуляции,
	|		Остатки.СкладОтгрузки КАК СкладОтгрузки,
	|		
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|		Остатки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|		Остатки.КорВидЗапасов КАК КорВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.ДатаПоступления КАК ДатаПоступления,
	|		
	|		Остатки.КоличествоОстаток КАК КоличествоОстатокВсего,
	|		Остатки.КоличествоОстаток - ЕСТЬNULL(ВидыЗапасов.Количество, 0) КАК КоличествоОстаток,
	|		&ТекстПоляТаблицаОстатковКоличествоПоРНПТОстаток_ КАК КоличествоПоРНПТОстатокВсего,
	|		ВЫБОР
	|			КОГДА Остатки.КоличествоОстаток <> 0
	|				ТОГДА Остатки.СуммаОстаток - (ЕСТЬNULL(ВидыЗапасов.Количество, 0) * Остатки.СуммаОстаток / Остатки.КоличествоОстаток)
	|			КОГДА ЕСТЬNULL(ВидыЗапасов.Количество, 0) = 0
	|				ТОГДА Остатки.СуммаОстаток
	|			ИНАЧЕ 0 // Сумма остатка подобралась в строках с видом запасов
	|		КОНЕЦ КАК СуммаОстаток,
	|		&ТекстПоляТаблицаОстатковСуммаНДСОстаток_ КАК СуммаНДСОстаток,
	|		ВЫБОР
	|			КОГДА Остатки.ДокументРеализации В (&ПустыеЗначенияДокументаРеализации)
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ Остатки.ДокументРеализации
	|		КОНЕЦ КАК ДокументРеализации,
	|		ВЫБОР
	|			КОГДА Остатки.ДокументОприходования В (&ПустыеЗначенияДокументаОприходования)
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ Остатки.ДокументОприходования
	|		КОНЕЦ КАК ДокументОприходования,
	|		ВидыЗапасов.Период
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|			ПО Остатки.АналитикаУчетаНоменклатуры = Ключи.Ссылка
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтВидыЗапасовСводно КАК ВидыЗапасов
	|			ПО Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|				И Остатки.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|				И (Остатки.СкладОтгрузки = ВидыЗапасов.СкладОтгрузки
	|					ИЛИ ВидыЗапасов.СкладОтгрузки В(ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), НЕОПРЕДЕЛЕНО))
	|				И Остатки.НомерГТД = ВидыЗапасов.НомерГТД
	|				И Остатки.ДокументРеализации = ВидыЗапасов.ДокументРеализации
	|				И Остатки.ДокументОприходования = ВидыЗапасов.ДокументОприходования
	|				И (ВидыЗапасов.Период = ДАТАВРЕМЯ(1,1,1)
	|					ИЛИ ВидыЗапасов.Период = Остатки.ДатаПоступления)
	|	
	|	ГДЕ
	|		ВЫБОР
	|			КОГДА ВидыЗапасов.Количество ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			КОГДА ВидыЗапасов.Количество = 0
	|				ТОГДА НЕ ВидыЗапасов.НомерСтроки = 99999
	|			КОГДА ВидыЗапасов.Знак * ВидыЗапасов.Количество > 0
	|				ТОГДА ВидыЗапасов.Знак * Остатки.КоличествоОстаток - ВидыЗапасов.Знак * ВидыЗапасов.Количество > 0
	|			ИНАЧЕ ВидыЗапасов.Знак * Остатки.КоличествоОстаток - ВидыЗапасов.Знак * ВидыЗапасов.Количество < 0
	|		КОНЕЦ
	|	
	|	) КАК ВтОстаткиБезГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтОстаткиБезГруппировки.Организация,
	|	ВтОстаткиБезГруппировки.АналитикаУчетаНоменклатуры,
	|	ВтОстаткиБезГруппировки.Номенклатура,
	|	ВтОстаткиБезГруппировки.Характеристика,
	|	ВтОстаткиБезГруппировки.Серия,
	|	ВтОстаткиБезГруппировки.Склад,
	|	ВтОстаткиБезГруппировки.Назначение,
	|	ВтОстаткиБезГруппировки.НазначениеОтгрузки,
	|	ВтОстаткиБезГруппировки.СтатьяКалькуляции,
	|	ВтОстаткиБезГруппировки.СкладОтгрузки,
	|
	|	ВтОстаткиБезГруппировки.ВидЗапасов,
	|	ВтОстаткиБезГруппировки.ВидЗапасовПолучателя,
	|	ВтОстаткиБезГруппировки.ВидЗапасовОтгрузки,
	|	ВтОстаткиБезГруппировки.КорВидЗапасов,
	|	ВтОстаткиБезГруппировки.НомерГТД,
	|	ВтОстаткиБезГруппировки.ДатаПоступления,
	|	ВтОстаткиБезГруппировки.ДокументРеализации,
	|	ВтОстаткиБезГруппировки.ДокументОприходования,
	|	ВтОстаткиБезГруппировки.Период
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ЕСТЬNULL(КлючиТоваров.Назначение, Неопределено) КАК Назначение,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.Номенклатура КАК Справочник.Номенклатура).ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Номенклатура КАК Справочник.Номенклатура).КодТНВЭД.СырьевойТовар, ЛОЖЬ) КАК СырьевойТовар,
	|	ТаблицаДокумента.ЭтоПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.НоменклатураПартнера КАК НоменклатураПартнера,	
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ТаблицаДанныхДокумента.Дата КАК ДатаДокумента,
	|	ТаблицаДанныхДокумента.Валюта КАК Валюта,
	|
	|	ЕСТЬNULL(Остатки.ВидЗапасов, Неопределено) КАК ВидЗапасов,
	|	ЕСТЬNULL(Остатки.ВидЗапасовПолучателя, Неопределено) КАК ВидЗапасовПолучателя,
	|	ЕСТЬNULL(Остатки.ВидЗапасовОтгрузки, Неопределено) КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(Остатки.КорВидЗапасов, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)) КАК КорВидЗапасов,
	|	ЕСТЬNULL(РеквизитыВидаЗапасовОтгрузки.РеализацияЗапасовДругойОрганизации, ЛОЖЬ) КАК ОтгрузкаЗапасовДругойОрганизации,
	|	ЕСТЬNULL(Остатки.НомерГТД, Неопределено) КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетПоГТД
	|				И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|				И (Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) ИЛИ Остатки.НомерГТД ЕСТЬ NULL)
	// Отключаем проверку для давальцев версии 2.4
	|				И НЕ (ЕСТЬNULL(РеквизитыВидаЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) В (
	|								ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца))
	|					И НЕ ЕСТЬNULL(РеквизитыВидаЗапасов.Договор.ТипДоговора, ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)) =
	|								ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СДавальцем2_5))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеУказанНомерГТД,
	|
	|	ЕСТЬNULL(Остатки.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(Остатки.СкладОтгрузки, Неопределено) КАК СкладОтгрузки,
	|
	|	ЕСТЬNULL(Остатки.КоличествоОстатокВсего, 0) КАК КоличествоОстатокВсего,
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.КоличествоПоРНПТОстатокВсего, 0) КАК КоличествоПоРНПТОстатокВсего,
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ЕСТЬNULL(Остатки.СуммаНДСОстаток, 0) КАК СуммаНДСОстаток,
	|	ЕСТЬNULL(АналитикаОтгрузки.КлючАналитики, ТаблицаДокумента.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту))
	|				И ТаблицаДокумента.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ТаблицаДокумента.ДокументРеализации
	|		ИНАЧЕ ЕСТЬNULL(Остатки.ДокументРеализации, Неопределено)
	|	КОНЕЦ КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту))
	|				И ТаблицаДокумента.ДокументОприходования <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ТаблицаДокумента.ДокументОприходования
	|		ИНАЧЕ ЕСТЬNULL(Остатки.ДокументОприходования, Неопределено)
	|	КОНЕЦ КАК ДокументОприходования,
	|	ТаблицаДокумента.Период КАК Период
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстатки КАК Остатки
	|		ПО ТаблицаДокумента.НоменклатураОстатков = Остатки.Номенклатура
	|			И ТаблицаДокумента.ХарактеристикаОстатков = Остатки.Характеристика
	|			И ТаблицаДокумента.СерияОстатков = Остатки.Серия
	|			И ТаблицаДокумента.СкладОстатков = Остатки.Склад
	|			И (ТаблицаДокумента.Назначение = Остатки.Назначение
	|				ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера),
	|																	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента),
	//++ Устарело_Переработка24
	|																	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика),
	//-- Устарело_Переработка24
	|																	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика2_5),
	|																	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)))
	|			И ТаблицаДокумента.СтатьяКалькуляцииОстатков = &ПустоеЗначениеСтатьиКалькуляции
	|			И (ТаблицаДокумента.ДокументРеализации = Остатки.ДокументРеализации
	|				ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера))
	|			И (ТаблицаДокумента.ДокументОприходования = Остатки.ДокументОприходования
	|				ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера))
	|			И (ТаблицаДокумента.НомерГТД = Остатки.НомерГТД
	|				ИЛИ ТаблицаДокумента.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|				ИЛИ Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|				ИЛИ &БезОтбораПоНомерамГТД)
	|			И (ТаблицаДокумента.Период = ДАТАВРЕМЯ(1,1,1)
	|				ИЛИ ТаблицаДокумента.Период <= Остатки.ДатаПоступления)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|		ПО Ключи.Ссылка = Остатки.АналитикаУчетаНоменклатуры
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузки
	|		ПО АналитикаОтгрузки.Номенклатура = Ключи.Номенклатура
	|			И АналитикаОтгрузки.Характеристика = Ключи.Характеристика
	|			И АналитикаОтгрузки.Серия = Ключи.Серия
	|			И АналитикаОтгрузки.МестоХранения = Остатки.СкладОтгрузки
	|			И АналитикаОтгрузки.Назначение = Остатки.НазначениеОтгрузки
	|			И АналитикаОтгрузки.СтатьяКалькуляции = Ключи.СтатьяКалькуляции
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|		ПО ДатыПоступления.ВидЗапасов = Остатки.ВидЗапасов
	|			И ДатыПоступления.Номенклатура = Ключи.Номенклатура
	|			И ДатыПоступления.Характеристика = Ключи.Характеристика
	|			И ДатыПоступления.Серия = Ключи.Серия
	|			И ДатыПоступления.Назначение = Ключи.Назначение
	|			И ДатыПоступления.НомерГТД = Остатки.НомерГТД
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиТоваров
	|		ПО КлючиТоваров.Ссылка = ТаблицаДокумента.АналитикаУчетаНоменклатуры
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасов
	|		ПО РеквизитыВидаЗапасов.Ссылка = Остатки.ВидЗапасов
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасовОтгрузки
	|		ПО РеквизитыВидаЗапасовОтгрузки.Ссылка = Остатки.ВидЗапасовОтгрузки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	ОстаткиДокумента УБЫВ,
	|	Период,
	|	ТаблицаДокумента.НомерГТД = Остатки.НомерГТД УБЫВ,
	|	ДатаПоступления,
	|	ДатыПоступления.ДатаПоступления
	|
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(КоличествоПоРНПТ),
	|	МАКСИМУМ(СуммаСНДС),
	|	МАКСИМУМ(СтавкаНДС),
	|	МАКСИМУМ(СуммаНДС),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МАКСИМУМ(СуммаНДСВознаграждения),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	НомерСтроки";
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаТоваровКоличествоПоРНПТ_",
																"ТаблицаТоваров",
																"КоличествоПоРНПТ",
																"СУММА(ВЫРАЗИТЬ(ТаблицаТоваров.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)))",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаТоваровДокументРеализации_",
																"ТаблицаТоваров",
																"ДокументРеализации",
																"ТаблицаТоваров.ДокументРеализации",
																"НЕОПРЕДЕЛЕНО");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаТоваровДокументОприходования_",
																"ТаблицаТоваров",
																"ДокументОприходования",
																"ТаблицаТоваров.ДокументОприходования",
																"НЕОПРЕДЕЛЕНО");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаТоваровПериод_",
																"ТаблицаТоваров",
																"Период",
																"ТаблицаТоваров.Период",
																"ДАТАВРЕМЯ(1,1,1)");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаВидыЗапасовПериод_",
																"ТаблицаВидыЗапасов",
																"Период",
																"ТаблицаВидыЗапасов.Период",
																"ДАТАВРЕМЯ(1,1,1)");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаВидыЗапасовКоличествоПоРНПТ_",
																"ТаблицаВидыЗапасов",
																"КоличествоПоРНПТ",
																"СУММА(ВЫРАЗИТЬ(ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)))",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаВидыЗапасовСуммаНДС_",
																"ТаблицаВидыЗапасов",
																"СуммаНДС",
																"СУММА(ТаблицаВидыЗапасов.СуммаНДС)",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаОстатковКоличествоПоРНПТОстаток_",
																"ТаблицаОстатков",
																"КоличествоПоРНПТОстаток",
																"ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаОстатковСуммаНДСОстаток_",
																"ТаблицаОстатков",
																"СуммаНДСОстаток",
																"Остатки.СуммаНДСОстаток",
																"0");

	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаТоваровНоменклатураПартнера_",
																"ТаблицаТоваров",
																"НоменклатураПартнера",
																"ТаблицаТоваров.НоменклатураПартнера",
																"ЗНАЧЕНИЕ(Справочник.НоменклатураКонтрагентов.ПустаяСсылка)");
																
	ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД = ?(ДополнительныеСвойства.Свойство("КонтролироватьНомераГТД"),
																	ДополнительныеСвойства.КонтролироватьНомераГТД,
																	ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
	
	ПустыеЗначенияДокументаРеализации = Новый Массив;
	ПустыеЗначенияДокументаРеализации.Добавить(Документы.РеализацияТоваровУслуг.ПустаяСсылка());
	ПустыеЗначенияДокументаРеализации.Добавить(Документы.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка());
	ПустыеЗначенияДокументаРеализации.Добавить(Документы.ОтчетОРозничныхПродажах.ПустаяСсылка());
	ПустыеЗначенияДокументаРеализации.Добавить(Неопределено);
	
	ПустыеЗначенияДокументаПоступления = Новый Массив;
	ПустыеЗначенияДокументаПоступления.Добавить(Документы.ПриобретениеТоваровУслуг.ПустаяСсылка());
	ПустыеЗначенияДокументаПоступления.Добавить(Неопределено);
	
	ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций 
														Или Не Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД",
								ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД);
	Запрос.УстановитьПараметр("БезОтбораПоНомерамГТД", ПараметрыЗаполнения.БезОтбораПоНомерамГТД);
	Запрос.УстановитьПараметр("ПустыеЗначенияДокументаРеализации", ПустыеЗначенияДокументаРеализации);
	Запрос.УстановитьПараметр("ПустыеЗначенияДокументаОприходования", ПустыеЗначенияДокументаПоступления);
	Запрос.УстановитьПараметр("ПроводитьБезКонтроляОстатковТоваровОрганизаций",
								ПроводитьБезКонтроляОстатковТоваровОрганизаций);
	Запрос.УстановитьПараметр("ПустоеЗначениеСтатьиКалькуляции", "");
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДополнительныеСвойства, Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

// Формирует запрос по данным ИБ для заполнения видов запасов документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц	- менеджер временных таблиц, содержащий таблицы, необходимые для
//															для выполнения алгоритма распределения.
//	ДополнительныеСвойства	- Структура					- дополнительные свойства документа, для которого осуществляется
//															заполнение видов запасов.
//
// Возвращаемое значение:
//	Запрос - запрос обращения к ИБ.
//
Функция ЗапросРаспределенияСУчетомПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц,
																			ДополнительныеСвойства)
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки)						КАК НомерСтроки,
	|	ТаблицаДанныхДокумента.Дата									КАК ДатаДокумента,
	|	&ТекстПоляТаблицаТоваровХозяйственнаяОперация_				КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры					КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры					КАК АналитикаОстатков,
	|	ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения				КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.КодТНВЭД.СырьевойТовар, ЛОЖЬ)	КАК СырьевойТовар,
	|	ТаблицаТоваров.Номенклатура.ПодакцизныйТовар				КАК ЭтоПодакцизныйТовар,
	|	ТаблицаТоваров.Номенклатура.ВестиУчетПоГТД					КАК ВестиУчетПоГТД,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаНоменклатуры.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ														КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.Номенклатура									КАК Номенклатура,
	|	ТаблицаНоменклатуры.ТипНоменклатуры							КАК ТипНоменклатуры,
	|	ТаблицаТоваров.Характеристика								КАК Характеристика,
	|	&ТекстПоляТаблицаТоваровНоменклатураПартнера_ 				КАК НоменклатураПартнера,
	|	ТаблицаТоваров.Назначение									КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерий В (14, 18)
	|			ТОГДА ТаблицаТоваров.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ														КАК Серия,
	|	СУММА(ТаблицаТоваров.Количество)							КАК Количество,
	|	&ТекстПоляТаблицаТоваровКоличествоПоРНПТ_					КАК КоличествоПоРНПТ,
	|	&ТекстПоляТаблицаТоваровВидЦены_							КАК ВидЦены,
	|	&ТекстПоляТаблицаТоваровСтавкаНДС_							КАК СтавкаНДС,
	|	&ТекстПоляТаблицаТоваровСуммаСНДС_							КАК СуммаСНДС,
	|	&ТекстПоляТаблицаТоваровСуммаНДС_							КАК СуммаНДС,
	|	&ТекстПоляТаблицаТоваровСуммаВознаграждения_				КАК СуммаВознаграждения,
	|	&ТекстПоляТаблицаТоваровСуммаНДСВознаграждения_				КАК СуммаНДСВознаграждения,
	|	ТаблицаТоваров.Склад										КАК Склад,
	|	ТаблицаТоваров.НомерГТД										КАК НомерГТД,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Заказ, НЕОПРЕДЕЛЕНО)		КАК Заказ,
	|	&ТекстПоляТаблицаТоваровДокументПередачи_					КАК ДокументПередачи,
	|	&ТекстПоляТаблицаТоваровКорАналитикаУчетаНоменклатуры_		КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов							КАК ПодбиратьВидыЗапасов
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|
	|ГДЕ
	|	ТаблицаНоменклатуры.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	ИЛИ ТаблицаНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		И ТаблицаТоваров.Номенклатура.ПрослеживаемыйТовар
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанныхДокумента.Дата,
	|	&ТекстПоляТаблицаТоваровХозяйственнаяОперация_,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.КодТНВЭД.СырьевойТовар, ЛОЖЬ),
	|	ТаблицаТоваров.Номенклатура.ПодакцизныйТовар,
	|	ТаблицаТоваров.Номенклатура.ВестиУчетПоГТД,
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаНоменклатуры.ТипНоменклатуры,
	|	ТаблицаТоваров.Характеристика,
	|	&ТекстПоляТаблицаТоваровНоменклатураПартнера_,
	|	ТаблицаТоваров.Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерий В (14, 18)
	|			ТОГДА ТаблицаТоваров.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	&ТекстПоляТаблицаТоваровВидЦены_,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.НомерГТД,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Заказ, НЕОПРЕДЕЛЕНО),
	|	&ТекстПоляТаблицаТоваровДокументПередачи_,
	|	&ТекстПоляТаблицаТоваровКорАналитикаУчетаНоменклатуры_,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Дата						КАК Период,
	|	ТаблицаДанныхДокумента.Организация				КАК Организация,
	|	ТаблицаДанныхДокумента.Партнер					КАК ВладелецТовара,
	|	ТаблицаДанныхДокумента.Контрагент				КАК Контрагент,
	|	ТаблицаДанныхДокумента.Соглашение				КАК Соглашение,
	|	ТаблицаДанныхДокумента.Договор					КАК Договор,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|	ТаблицаДанныхДокумента.Валюта					КАК Валюта,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС		КАК НалогообложениеНДС,
	|	ТаблицаДанныхДокумента.ТипЗапасов				КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаФинансовогоУчета
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки					КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВидыЗапасовПоУмолчанию.ТипЗапасов ЕСТЬ NULL
	|				И ТаблицаДокумента.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа)
	|		ИНАЧЕ ВидыЗапасовПоУмолчанию.ТипЗапасов
	|	КОНЕЦ											КАК ТипЗапасов,
	|	ВидыЗапасовПоУмолчанию.ВладелецТовара			КАК ВладелецТовара,
	|	ВидыЗапасовПоУмолчанию.Контрагент				КАК Контрагент,
	|	ВидыЗапасовПоУмолчанию.Договор					КАК Договор,
	|	ТаблицаДокумента.Склад							КАК Склад,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения				КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.СырьевойТовар					КАК СырьевойТовар,
	|	ВЫБОР
	|		КОГДА &ИспользоватьГруппыФинУчета
	|			ТОГДА ЕСТЬNULL(ТаблицаДокумента.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ											КАК ГруппаФинансовогоУчета,
	|	ТаблицаДокумента.Номенклатура					КАК Номенклатура,
	|	ТаблицаДокумента.НоменклатураПартнера 			КАК НоменклатураПартнера,
	|	ТаблицаДокумента.Характеристика					КАК Характеристика,
	|	ТаблицаДокумента.Серия							КАК Серия,
	|	ТаблицаДокумента.Количество						КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))	КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.НомерГТД						КАК НомерГТД,
	|	ТаблицаДокумента.ВидЦены						КАК ВидЦены,
	|	ТаблицаДокумента.СтавкаНДС						КАК СтавкаНДС,
	|	ТаблицаДокумента.КорАналитикаУчетаНоменклатуры	КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ХозяйственнаяОперация			КАК ХозяйственнаяОперация
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|		ПО ВидыЗапасовПоУмолчанию.НомерСтроки = ТаблицаДокумента.НомерСтроки
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки)			КАК НомерСтроки,
	|	ТаблицаДанныхДокумента.Дата							КАК ДатаДокумента,
	|	ТаблицаДанныхДокумента.Организация					КАК ОрганизацияДокумента,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС			КАК НалогообложениеНДСДокумента,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	&ТекстПоляТаблицаВидыЗапасовДокументПередачи_		КАК ДокументПередачи,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов			КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Организация			КАК Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара		КАК ВладелецТовара,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалогообложениеНДС	КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.НомерГТД							КАК НомерГТД,
	|	&ТекстПоляТаблицаВидыЗапасовАналитикаУчетаНоменклатурыОтгрузки_ КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	&ТекстПоляТаблицаВидыЗапасовВидЗапасовОтгрузки_		КАК ВидЗапасовОтгрузки,
	|	&ТекстПоляТаблицаВидыЗапасовКорВидЗапасов_			КАК КорВидЗапасов,
	|	СУММА(ТаблицаВидыЗапасов.Количество)				КАК Количество,
	|	&ТекстПоляТаблицаВидыЗапасовКоличествоПоРНПТ_		КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную		КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасовСводно
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанныхДокумента.Дата,
	|	ТаблицаДанныхДокумента.Организация,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	&ТекстПоляТаблицаВидыЗапасовДокументПередачи_,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	&ТекстПоляТаблицаВидыЗапасовАналитикаУчетаНоменклатурыОтгрузки_,
	|	&ТекстПоляТаблицаВидыЗапасовВидЗапасовОтгрузки_,
	|	&ТекстПоляТаблицаВидыЗапасовКорВидЗапасов_,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД,
	|	ДокументПередачи,
	|	АналитикаУчетаНоменклатурыОтгрузки,
	|	ВидЗапасовОтгрузки,
	|	КорВидЗапасов
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСгруппированные.Приоритет							КАК Приоритет,
	|	ОстаткиСгруппированные.Организация							КАК Организация,
	|	ОстаткиСгруппированные.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиСгруппированные.ДокументПередачи						КАК ДокументПередачи,
	|	ОстаткиСгруппированные.Номенклатура							КАК Номенклатура,
	|	ОстаткиСгруппированные.Характеристика						КАК Характеристика,
	|	ОстаткиСгруппированные.Назначение							КАК Назначение,
	|	ОстаткиСгруппированные.Серия								КАК Серия,
	|	ОстаткиСгруппированные.ВидЗапасов							КАК ВидЗапасов,
	|	ОстаткиСгруппированные.ТипЗапасов							КАК ТипЗапасов,
	|	ОстаткиСгруппированные.ОрганизацияВидаЗапасов				КАК ОрганизацияВидаЗапасов,
	|	ОстаткиСгруппированные.ВладелецТовара						КАК ВладелецТовара,
	|	ОстаткиСгруппированные.НалогообложениеНДСВидаЗапасов		КАК НалогообложениеНДСВидаЗапасов,
	|	ОстаткиСгруппированные.ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение КАК ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение,
	|	ОстаткиСгруппированные.НомерГТД								КАК НомерГТД,
	|	ОстаткиСгруппированные.ДатаПоступления						КАК ДатаПоступления,
	|	ОстаткиСгруппированные.ОрганизацияОтгрузки					КАК ОрганизацияОтгрузки,
	|	ОстаткиСгруппированные.АналитикаУчетаНоменклатурыОтгрузки	КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ОстаткиСгруппированные.ВидЗапасовОтгрузки					КАК ВидЗапасовОтгрузки,
	|	ОстаткиСгруппированные.КорВидЗапасов						КАК КорВидЗапасов,
	|	ОстаткиСгруппированные.КоличествоОстатокВсего				КАК КоличествоОстатокВсего,
	|	СУММА(ОстаткиСгруппированные.КоличествоОстаток)				КАК КоличествоОстаток,
	|	ОстаткиСгруппированные.КоличествоПоРНПТОстатокВсего			КАК КоличествоПоРНПТОстатокВсего,
	|	МАКСИМУМ(ОстаткиСгруппированные.СуммаОстаток)				КАК СуммаОстаток
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	(
	// Попытка сохранить подобранные в документ виды запасов - если подобранное количество покрывается текущим остатком, для него устанавливается высокий приоритет
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ТаблицаВидыЗапасовСводно.ВидыЗапасовУказаныВручную
	|				ТОГДА 1
	|			КОГДА Остатки.Организация = РеквизитыДокумента.Организация
	|					И НЕ ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|				ТОГДА 5
	|			ИНАЧЕ 7
	|		КОНЕЦ										КАК Приоритет,
	|		Остатки.Организация							КАК Организация,
	|		Остатки.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ДокументПередачи					КАК ДокументПередачи,
	|		Остатки.Номенклатура						КАК Номенклатура,
	|		Остатки.Характеристика						КАК Характеристика,
	|		Остатки.Назначение							КАК Назначение,
	|		Остатки.Серия								КАК Серия,
	|		Остатки.ВидЗапасов							КАК ВидЗапасов,
	|		ВидыЗапасов.ТипЗапасов						КАК ТипЗапасов,
	|		ВидыЗапасов.Организация						КАК ОрганизацияВидаЗапасов,
	|		ВидыЗапасов.ВладелецТовара					КАК ВладелецТовара,
	|		ВидыЗапасов.НалогообложениеНДС				КАК НалогообложениеНДСВидаЗапасов,
	|		ВидыЗапасов.Договор.ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение КАК ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение,
	|		Остатки.НомерГТД							КАК НомерГТД,
	|		Остатки.ДатаПоступления						КАК ДатаПоступления,
	|		РеквизитыДокумента.Организация				КАК ОрганизацияОтгрузки,
	|		Остатки.АналитикаУчетаНоменклатурыОтгрузки	КАК АналитикаУчетаНоменклатурыОтгрузки,
	|		Остатки.ВидЗапасовОтгрузки					КАК ВидЗапасовОтгрузки,
	|		Остатки.КорВидЗапасов						КАК КорВидЗапасов,
	|		Остатки.КоличествоОстаток					КАК КоличествоОстатокВсего,
	|		ВЫБОР
	|			КОГДА ТаблицаВидыЗапасовСводно.Количество <= Остатки.КоличествоОстаток
	|				ТОГДА ТаблицаВидыЗапасовСводно.Количество
	|			ИНАЧЕ Остатки.КоличествоОстаток
	|		КОНЕЦ										КАК КоличествоОстаток,
	|		&ТекстПоляТаблицаОстатковКоличествоПоРНПТОстаток_ КАК КоличествоПоРНПТОстатокВсего,
	|		ВЫБОР
	|			КОГДА Остатки.КоличествоОстаток <> 0
	|				ТОГДА Остатки.СуммаОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ										КАК СуммаОстаток
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|			ПО Остатки.ВидЗапасов = ВидыЗапасов.Ссылка
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|			ПО ИСТИНА
	|		
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаВидыЗапасовСводно КАК ТаблицаВидыЗапасовСводно
	|			ПО Остатки.АналитикаУчетаНоменклатуры = ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатуры
	|				И Остатки.ВидЗапасов = ТаблицаВидыЗапасовСводно.ВидЗапасов
	|				И Остатки.НомерГТД = ТаблицаВидыЗапасовСводно.НомерГТД
	|				И Остатки.ДокументПередачи = ТаблицаВидыЗапасовСводно.ДокументПередачи
	|				И Остатки.АналитикаУчетаНоменклатурыОтгрузки = ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатурыОтгрузки
	|				И Остатки.ВидЗапасовОтгрузки = ТаблицаВидыЗапасовСводно.ВидЗапасовОтгрузки
	|				И Остатки.КорВидЗапасов = ТаблицаВидыЗапасовСводно.КорВидЗапасов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Добавление остатков видов запасов, отсутствующих в документе - добавляются с низким приоритетом
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаВидыЗапасовСводно.ВидыЗапасовУказаныВручную, ЛОЖЬ)
	|				ТОГДА 2
	|			КОГДА Остатки.Организация = РеквизитыДокумента.Организация
	|					И НЕ ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|				ТОГДА 6
	|			ИНАЧЕ 8
	|		КОНЕЦ										КАК Приоритет,
	|		Остатки.Организация							КАК Организация,
	|		Остатки.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ДокументПередачи					КАК ДокументПередачи,
	|		Остатки.Номенклатура						КАК Номенклатура,
	|		Остатки.Характеристика						КАК Характеристика,
	|		Остатки.Назначение							КАК Назначение,
	|		Остатки.Серия								КАК Серия,
	|		Остатки.ВидЗапасов							КАК ВидЗапасов,
	|		ВидыЗапасов.ТипЗапасов						КАК ТипЗапасов,
	|		ВидыЗапасов.Организация						КАК ОрганизацияВидаЗапасов,
	|		ВидыЗапасов.ВладелецТовара					КАК ВладелецТовара,
	|		ВидыЗапасов.НалогообложениеНДС				КАК НалогообложениеНДСВидаЗапасов,
	|		ВидыЗапасов.Договор.ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение КАК ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение,
	|		Остатки.НомерГТД							КАК НомерГТД,
	|		Остатки.ДатаПоступления						КАК ДатаПоступления,
	|		РеквизитыДокумента.Организация				КАК ОрганизацияОтгрузки,
	|		Остатки.АналитикаУчетаНоменклатурыОтгрузки	КАК АналитикаУчетаНоменклатурыОтгрузки,
	|		Остатки.ВидЗапасовОтгрузки					КАК ВидЗапасовОтгрузки,
	|		Остатки.КорВидЗапасов						КАК КорВидЗапасов,
	|		Остатки.КоличествоОстаток					КАК КоличествоОстатокВсего,
	|		ВЫБОР
	|			КОГДА Остатки.КоличествоОстаток > ЕСТЬNULL(ТаблицаВидыЗапасовСводно.Количество, 0)
	|				ТОГДА Остатки.КоличествоОстаток - ЕСТЬNULL(ТаблицаВидыЗапасовСводно.Количество, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ										КАК КоличествоОстаток,
	|		&ТекстПоляТаблицаОстатковКоличествоПоРНПТОстаток_ КАК КоличествоПоРНПТОстатокВсего,
	|		ВЫБОР
	|			КОГДА Остатки.КоличествоОстаток <> 0
	|				ТОГДА Остатки.СуммаОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ										КАК СуммаОстаток
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|			ПО Остатки.ВидЗапасов = ВидыЗапасов.Ссылка
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|			ПО ИСТИНА
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВидыЗапасовСводно КАК ТаблицаВидыЗапасовСводно
	|			ПО Остатки.АналитикаУчетаНоменклатуры = ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатуры
	|				И Остатки.ВидЗапасов = ТаблицаВидыЗапасовСводно.ВидЗапасов
	|				И Остатки.НомерГТД = ТаблицаВидыЗапасовСводно.НомерГТД
	|				И Остатки.ДокументПередачи = ТаблицаВидыЗапасовСводно.ДокументПередачи
	|				И Остатки.АналитикаУчетаНоменклатурыОтгрузки = ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатурыОтгрузки
	|				И Остатки.ВидЗапасовОтгрузки = ТаблицаВидыЗапасовСводно.ВидЗапасовОтгрузки
	|				И Остатки.КорВидЗапасов = ТаблицаВидыЗапасовСводно.КорВидЗапасов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Добавление подобранных в документ видов запасов при отключенном контроле остатков - проводим как есть со старыми видами запасов
	|	ВЫБРАТЬ
	|		0                                                           КАК Приоритет,
	|		ТаблицаВидыЗапасовСводно.Организация                        КАК Организация,
	|		ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатуры         КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасовСводно.ДокументПередачи                   КАК ДокументПередачи,
	|		Аналитика.Номенклатура                                      КАК Номенклатура,
	|		Аналитика.Характеристика                                    КАК Характеристика,
	|		Аналитика.Назначение                                        КАК Назначение,
	|		Аналитика.Серия                                             КАК Серия,
	|		ТаблицаВидыЗапасовСводно.ВидЗапасов                         КАК ВидЗапасов,
	|		ВидыЗапасов.ТипЗапасов                                      КАК ТипЗапасов,
	|		ВидыЗапасов.Организация                                     КАК ОрганизацияВидаЗапасов,
	|		ВидыЗапасов.ВладелецТовара                                  КАК ВладелецТовара,
	|		ВидыЗапасов.НалогообложениеНДС                              КАК НалогообложениеНДСВидаЗапасов,
	|		ВидыЗапасов.Договор.ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение      КАК ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение,
	|		ТаблицаВидыЗапасовСводно.НомерГТД                           КАК НомерГТД,
	|		ДАТАВРЕМЯ(1, 1, 1)                                          КАК ДатаПоступления,
	|		РеквизитыДокумента.Организация                              КАК ОрганизацияОтгрузки,
	|		ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатурыОтгрузки КАК АналитикаУчетаНоменклатурыОтгрузки,
	|		ТаблицаВидыЗапасовСводно.ВидЗапасовОтгрузки                 КАК ВидЗапасовОтгрузки,
	|		ТаблицаВидыЗапасовСводно.КорВидЗапасов                      КАК КорВидЗапасов,
	|		ТаблицаВидыЗапасовСводно.Количество                         КАК КоличествоОстатокВсего,
	|		ТаблицаВидыЗапасовСводно.Количество                         КАК КоличествоОстаток,
	|		ТаблицаВидыЗапасовСводно.КоличествоПоРНПТ                   КАК КоличествоПоРНПТОстатокВсего,
	|		0                                                           КАК СуммаОстаток
	|	ИЗ
	|		ТаблицаВидыЗапасовСводно КАК ТаблицаВидыЗапасовСводно
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|			ПО ТаблицаВидыЗапасовСводно.ВидЗапасов = ВидыЗапасов.Ссылка
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|			ПО ВидыЗапасов.Организация = РеквизитыДокумента.Организация
	|	
	|	ГДЕ
	|		ТаблицаВидыЗапасовСводно.ВидыЗапасовУказаныВручную = ИСТИНА
	|		И &ПроводитьБезКонтроляОстатковТоваровОрганизаций = ИСТИНА
	|	
	|	) КАК ОстаткиСгруппированные
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСгруппированные.Приоритет,
	|	ОстаткиСгруппированные.Организация,
	|	ОстаткиСгруппированные.АналитикаУчетаНоменклатуры,
	|	ОстаткиСгруппированные.ДокументПередачи,
	|	ОстаткиСгруппированные.Номенклатура,
	|	ОстаткиСгруппированные.Характеристика,
	|	ОстаткиСгруппированные.Назначение,
	|	ОстаткиСгруппированные.Серия,
	|	ОстаткиСгруппированные.ВидЗапасов,
	|	ОстаткиСгруппированные.ТипЗапасов,
	|	ОстаткиСгруппированные.ОрганизацияВидаЗапасов,
	|	ОстаткиСгруппированные.ВладелецТовара,
	|	ОстаткиСгруппированные.НалогообложениеНДСВидаЗапасов,
	|	ОстаткиСгруппированные.ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение,
	|	ОстаткиСгруппированные.НомерГТД,
	|	ОстаткиСгруппированные.ДатаПоступления,
	|	ОстаткиСгруппированные.ОрганизацияОтгрузки,
	|	ОстаткиСгруппированные.АналитикаУчетаНоменклатурыОтгрузки,
	|	ОстаткиСгруппированные.ВидЗапасовОтгрузки,
	|	ОстаткиСгруппированные.КорВидЗапасов,
	|	ОстаткиСгруппированные.КоличествоОстатокВсего,
	|	ОстаткиСгруппированные.КоличествоПоРНПТОстатокВсего
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОстаткиСгруппированные.КоличествоОстаток) <> 0
	|	ИЛИ МАКСИМУМ(ОстаткиСгруппированные.СуммаОстаток) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	// данные документа
	|	ЕСТЬNULL(Остатки.Приоритет, 0)						КАК Приоритет,
	|	ТаблицаДокумента.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаДокумента.ДатаДокумента						КАК ДатаДокумента,
	|	ТаблицаДокумента.ХозяйственнаяОперация				КАК ХозяйственнаяОперация,
	|	ТаблицаДокумента.Склад								КАК Склад,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения					КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.СырьевойТовар						КАК СырьевойТовар,
	|	ТаблицаДокумента.ЭтоПодакцизныйТовар				КАК ЭтоПодакцизныйТовар,
	|	ТаблицаДокумента.ГруппаФинансовогоУчета				КАК ГруппаФинансовогоУчета,
	|	ТаблицаДокумента.Номенклатура						КАК Номенклатура,
	|	ТаблицаДокумента.ТипНоменклатуры					КАК ТипНоменклатуры,
	|	ТаблицаДокумента.Характеристика						КАК Характеристика,
	|	ТаблицаДокумента.НоменклатураПартнера 				КАК НоменклатураПартнера,	
	|	ТаблицаДокумента.Назначение							КАК Назначение,
	|	ТаблицаДокумента.Серия								КАК Серия,
	|	ТаблицаДокумента.Количество							КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))	КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.СтавкаНДС							КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС							КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС							КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения				КАК СуммаВознаграждения,
	|	ТаблицаДокумента.СуммаНДСВознаграждения				КАК СуммаНДСВознаграждения,
	|	ТаблицаДокумента.КорАналитикаУчетаНоменклатуры		КАК КорАналитикаУчетаНоменклатуры,
	|
	// данные остатков
	|	ЕСТЬNULL(Остатки.ВидЗапасов, НЕОПРЕДЕЛЕНО)			КАК ВидЗапасов,
	|	ЕСТЬNULL(Остатки.ТипЗапасов, НЕОПРЕДЕЛЕНО)			КАК ТипЗапасов,
	|	ЕСТЬNULL(Остатки.ОрганизацияВидаЗапасов, НЕОПРЕДЕЛЕНО) КАК ОрганизацияОстатка,
	|	ЕСТЬNULL(Остатки.ВладелецТовара, Неопределено)		КАК ВладелецТовара,
	|	ЕСТЬNULL(Остатки.ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение, Неопределено) КАК ПорядокОформленияСписанияНедостачТоваровПринятыхНаХранение,
	|	ЕСТЬNULL(Остатки.НомерГТД, Неопределено)			КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетПоГТД
	|				И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|				И (Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|					ИЛИ Остатки.НомерГТД ЕСТЬ NULL)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ												КАК НеУказанНомерГТД,
	|	ЕСТЬNULL(Остатки.ОрганизацияОтгрузки, НЕОПРЕДЕЛЕНО)	КАК ОрганизацияОтгрузки,
	|	ЕСТЬNULL(Остатки.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(Остатки.ДокументПередачи, Неопределено)	КАК ДокументПередачи,
	|	ЕСТЬNULL(Остатки.АналитикаУчетаНоменклатурыОтгрузки, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ЕСТЬNULL(Остатки.ВидЗапасовОтгрузки, НЕОПРЕДЕЛЕНО)	КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(Остатки.КорВидЗапасов, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)) КАК КорВидЗапасов,
	|	ЕСТЬNULL(ТаблицаДокумента.Заказ, НЕОПРЕДЕЛЕНО)		КАК Заказ,
	|	ЕСТЬNULL(Остатки.КоличествоОстатокВсего, 0)			КАК КоличествоОстатокВсего,
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0)				КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.КоличествоПоРНПТОстатокВсего, 0)	КАК КоличествоПоРНПТОстатокВсего,
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0)					КАК СуммаОстаток,
	|
	// данные для генерации нового вида запасов по интеркампани
	|	ЕСТЬNULL(Настройка.СпособПередачиТоваров, ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)) КАК НастройкаПередачи,
	|	ВЫБОР
	|		КОГДА НЕ Настройка.ОрганизацияВладелец ЕСТЬ NULL
	|			ТОГДА Настройка.ОрганизацияВладелец
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК НовыйВидЗапасовВладелецТовара,
	|	ВЫБОР
	|		КОГДА НЕ Настройка.Договор ЕСТЬ NULL
	|			ТОГДА Настройка.Договор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК НовыйВидЗапасовДоговор,
	|	ЕСТЬNULL(Настройка.Валюта, НЕОПРЕДЕЛЕНО)			КАК НовыйВидЗапасовВалюта,
	|	ВЫБОР КОГДА НЕ Настройка.ОрганизацияВладелец ЕСТЬ NULL
	|		ТОГДА Настройка.ОрганизацияВладелец
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК НовыйВидЗапасовКонтрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Настройка.СпособПередачиТоваров, ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|				И ЕСТЬNULL(Остатки.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ												КАК НовыйВидЗапасовЭтоСубкомиссия,
	|	ЕСТЬNULL(Остатки.НалогообложениеНДСВидаЗапасов, НЕОПРЕДЕЛЕНО) КАК НовыйВидЗапасовНалогообложениеКомитента,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Настройка.СпособПередачиТоваров, ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ												КАК НовыйВидЗапасовТипЗапасов,
	|	ТаблицаДокумента.НомерГТД = Остатки.НомерГТД		КАК НомерГТДСовпадает
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстатки КАК Остатки
	|		ПО ТаблицаДокумента.АналитикаОстатков = Остатки.АналитикаУчетаНоменклатуры
	|			И (ТаблицаДокумента.ДокументПередачи = Остатки.ДокументПередачи
	|				ИЛИ ТаблицаДокумента.ДокументПередачи = НЕОПРЕДЕЛЕНО
	|					И ТаблицаДокумента.ПодбиратьВидыЗапасов)
	|			И (ТаблицаДокумента.НомерГТД = Остатки.НомерГТД
	|				ИЛИ ТаблицаДокумента.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|				ИЛИ Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|		ПО ДатыПоступления.ВидЗапасов = Остатки.ВидЗапасов
	|			И ДатыПоступления.Номенклатура = Остатки.Номенклатура
	|			И ДатыПоступления.Характеристика = Остатки.Характеристика
	|			И ДатыПоступления.Серия = Остатки.Серия
	|			И ДатыПоступления.Назначение = Остатки.Назначение
	|			И ДатыПоступления.НомерГТД = Остатки.НомерГТД
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО Остатки.ТипЗапасов = Настройка.ТипЗапасов
	|			И Остатки.ОрганизацияВидаЗапасов = Настройка.ОрганизацияВладелец
	|			И Остатки.ОрганизацияОтгрузки = Настройка.ОрганизацияПродавец
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки ВОЗР,
	|	Приоритет ВОЗР,
	|	ДатаПоступления ВОЗР,
	|	ДатыПоступления.ДатаПоступления ВОЗР,
	|	ТаблицаДокумента.НомерГТД = Остатки.НомерГТД УБЫВ,
	|	ТипЗапасов,
	|	ОрганизацияОстатка,
	|	ВладелецТовара,
	|	ВидЗапасов
	|
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(КоличествоПоРНПТ),
	|	МАКСИМУМ(СуммаСНДС),
	|	МАКСИМУМ(СтавкаНДС),
	|	МАКСИМУМ(СуммаНДС),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МАКСИМУМ(СуммаНДСВознаграждения),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	НомерСтроки
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДокумента
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВидыЗапасовСводно";
	
#Область ЗаменаИспользованияНеобязательныхПолей	
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровКоличествоПоРНПТ_",
																"ТаблицаТоваров",
																"КоличествоПоРНПТ",
																"СУММА(ВЫРАЗИТЬ(ТаблицаТоваров.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)))",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровВидЦены_",
																"ТаблицаТоваров",
																"ВидЦены",
																"ТаблицаТоваров.ВидЦены",
																"ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровДокументПередачи_",
																"ТаблицаТоваров",
																"ДокументПередачи",
																"ТаблицаТоваров.ДокументПередачи",
																"НЕОПРЕДЕЛЕНО");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровСтавкаНДС_",
																"ТаблицаТоваров",
																"СтавкаНДС",
																"МАКСИМУМ(ТаблицаТоваров.СтавкаНДС)",
																"ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровКорАналитикаУчетаНоменклатуры_",
																"ТаблицаТоваров",
																"КорАналитикаУчетаНоменклатуры",
																"ТаблицаТоваров.КорАналитикаУчетаНоменклатуры",
																"ТаблицаТоваров.АналитикаУчетаНоменклатуры");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровХозяйственнаяОперация_",
																"ТаблицаТоваров",
																"ХозяйственнаяОперация",
																"ТаблицаТоваров.ХозяйственнаяОперация",
																"ТаблицаДанныхДокумента.ХозяйственнаяОперация");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровСуммаСНДС_",
																"ТаблицаТоваров",
																"СуммаСНДС",
																"СУММА(ТаблицаТоваров.СуммаСНДС)",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровСуммаНДС_",
																"ТаблицаТоваров",
																"СуммаНДС",
																"СУММА(ТаблицаТоваров.СуммаНДС)",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровСуммаВознаграждения_",
																"ТаблицаТоваров",
																"СуммаВознаграждения",
																"СУММА(ТаблицаТоваров.СуммаВознаграждения)",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровСуммаНДСВознаграждения_",
																"ТаблицаТоваров",
																"СуммаНДСВознаграждения",
																"СУММА(ТаблицаТоваров.СуммаНДСВознаграждения)",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаВидыЗапасовДокументПередачи_",
																"ТаблицаВидыЗапасов",
																"ДокументПередачи",
																"ТаблицаВидыЗапасов.ДокументПередачи",
																"НЕОПРЕДЕЛЕНО");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаВидыЗапасовАналитикаУчетаНоменклатурыОтгрузки_",
																"ТаблицаВидыЗапасов",
																"АналитикаУчетаНоменклатурыОтгрузки",
																"ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки",
																"НЕОПРЕДЕЛЕНО");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаВидыЗапасовВидЗапасовОтгрузки_",
																"ТаблицаВидыЗапасов",
																"ВидЗапасовОтгрузки",
																"ТаблицаВидыЗапасов.ВидЗапасовОтгрузки",
																"НЕОПРЕДЕЛЕНО");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаВидыЗапасовКорВидЗапасов_",
																"ТаблицаВидыЗапасов",
																"КорВидЗапасов",
																"ТаблицаВидыЗапасов.КорВидЗапасов",
																"ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаВидыЗапасовКоличествоПоРНПТ_",
																"ТаблицаВидыЗапасов",
																"КоличествоПоРНПТ",
																"СУММА(ВЫРАЗИТЬ(ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)))",
																"0");
	
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаОстатковКоличествоПоРНПТОстаток_",
																"ТаблицаОстатков",
																"КоличествоПоРНПТОстаток",
																"ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))",
																"0");
																
	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																ТекстЗапроса,
																"&ТекстПоляТаблицаТоваровНоменклатураПартнера_",
																"ТаблицаТоваров",
																"НоменклатураПартнера",
																"ТаблицаТоваров.НоменклатураПартнера",
																"ЗНАЧЕНИЕ(Справочник.НоменклатураКонтрагентов.ПустаяСсылка)");																
	
	#КонецОбласти
	
	ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций 
														Или Не Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
	ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД = ?(ДополнительныеСвойства.Свойство("КонтролироватьНомераГТД"),
																	ДополнительныеСвойства.КонтролироватьНомераГТД,
																	ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ПроводитьБезКонтроляОстатковТоваровОрганизаций",
								ПроводитьБезКонтроляОстатковТоваровОрганизаций);
	Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД",
								ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДополнительныеСвойства, Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПоСтрокеТоваров(Структура, СтрокаТоваров, ДанныеШапки)
	
	Если ЗначениеЗаполнено(СтрокаТоваров.НовыйВидЗапасовВладелецТовара) Тогда
		Структура.ВладелецТовара = СтрокаТоваров.НовыйВидЗапасовВладелецТовара;
		Структура.Контрагент     = СтрокаТоваров.НовыйВидЗапасовКонтрагент;
		Структура.Договор        = СтрокаТоваров.НовыйВидЗапасовДоговор;
		Структура.Валюта         = СтрокаТоваров.НовыйВидЗапасовВалюта;
		Структура.ТипЗапасов     = СтрокаТоваров.НовыйВидЗапасовТипЗапасов;
	Иначе
		ЗаполнитьЗначенияСвойств(Структура, ДанныеШапки);
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета") Тогда
		Структура.ГруппаФинансовогоУчета = СтрокаТоваров.ГруппаФинансовогоУчета;
	Иначе
		Структура.ГруппаФинансовогоУчета = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьРезервыПоОрганизациямДляКонтроля(ДокументОбъект,
														МенеджерВременныхТаблиц,
														Отказ,
														ПараметрыЗаполненияВидовЗапасов)
	
	МассивОрганизаций = ОрганизацииДляКонтроляОстатков(МенеджерВременныхТаблиц);
	
	Если Не МассивОрганизаций.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросДатыОстатков = Новый Запрос;
	ЗапросДатыОстатков.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросДатыОстатков.Текст = 
	"ВЫБРАТЬ
	|	МИНИМУМ(ВТТоварыОрганизацийИзменения.Период) КАК Период
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков";
	
	Выборка = ЗапросДатыОстатков.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий()
		Или Не ЗначениеЗаполнено(Выборка.Период) Тогда
		
		Возврат;
		
	Иначе
		ДатаОстатков = Выборка.Период;
	КонецЕсли;
	
	ТаблицаРезервыПоОрганизациямДляКонтроля = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаОшибок = ТаблицаОшибокЗаполненияВидовЗапасов();
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	ЗапросРаспределенияРезервов = ЗапросРаспределенияРезервовПоТаблицеОстатков(МенеджерВременныхТаблиц,
																				ПараметрыЗаполненияВидовЗапасов);
	
	ЗапросУничтожить = Новый Запрос;
	ЗапросУничтожить.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Для Каждого Организация Из МассивОрганизаций Цикл
		
		// Доступные виды запасов были сформированы ранее при подготовке записи товаров
		// организаций (см. процедуру ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций).
		// Если в отборе строго одна текущая организация, то доступные виды запасов подходят
		// для текущей организации и перезаполнять их не нужно.
		Если ТипЗнч(ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация) = Тип("Массив")
			И ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация.Количество() = 1
			И ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация[0] = Организация Тогда
			
			ТребуетсяПерезаполнитьДоступныеВидыЗапасов = Ложь;
			
		Иначе
			ТребуетсяПерезаполнитьДоступныеВидыЗапасов = Истина;
		КонецЕсли;
		
		Если ТребуетсяПерезаполнитьДоступныеВидыЗапасов Тогда
			ПараметрыЗаполненияПоОрганизации = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыЗаполненияВидовЗапасов);
			ПараметрыЗаполненияПоОрганизации.ОтборыВидовЗапасов.Организация = Организация;
			
			Если МенеджерВременныхТаблиц.Таблицы.Найти("ДоступныеВидыЗапасов") <> Неопределено Тогда
				ЗапросУничтожить.Текст = "УНИЧТОЖИТЬ ДоступныеВидыЗапасов";
				ЗапросУничтожить.Выполнить();
			КонецЕсли;
			
			Если МенеджерВременныхТаблиц.Таблицы.Найти("ВтОтборыОстатковОрганизаций") <> Неопределено Тогда
				ЗапросУничтожить.Текст = "УНИЧТОЖИТЬ ВтОтборыОстатковОрганизаций";
				
				ЗапросУничтожить.Выполнить();
			КонецЕсли;
			
			СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
												МенеджерВременныхТаблиц,
												ПараметрыЗаполненияПоОрганизации,
												"ДвиженияТоварыОрганизацийПередЗаписью");
			
			СформироватьВтОтборыОстатковПоТаблицеИзменений(МенеджерВременныхТаблиц);
			
		Иначе
			ПараметрыЗаполненияПоОрганизации = ПараметрыЗаполненияВидовЗапасов;
		КонецЕсли;
		
		СформироватьВТТаблицаОстатков("ТоварыОрганизаций",
										ДокументОбъект,
										МенеджерВременныхТаблиц,
										ПараметрыЗаполненияПоОрганизации,
										Ложь,
										ДатаОстатков);
		
		ЗапросРаспределенияРезервов.УстановитьПараметр("Период", ДатаОстатков);
		
		РаспределитьНовыеРезервыПоТаблицеОстатков(ЗапросРаспределенияРезервов,
													Организация,
													ПараметрыЗаполненияПоОрганизации,
													ТаблицаРезервыПоОрганизациямДляКонтроля,
													ТаблицаОшибок);
		
		Если ТаблицаОшибок.Количество() <> 0 Тогда
			
			Если ТипЗнч(ДокументОбъект) <> Тип("Структура") Тогда
				СообщитьОбОшибкахКонтроляТоваровОрганизаций(ДокументОбъект,
															ТаблицаОшибок,
															ПараметрыЗаполненияВидовЗапасов,
															Организация);
			КонецЕсли;
			
			Если Не ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций
				И (Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить()
					И Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(ПараметрыЗаполненияВидовЗапасов)) Тогда
				
				Отказ = Истина;
				
			КонецЕсли;
			
			Если Не ДокументОбъект.ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов")
				Или Не ДокументОбъект.ДополнительныеСвойства.ПерезаполнитьВидыЗапасов
				Или Отказ Тогда
				
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТРезервыПоОрганизациямДляКонтроля") <> Неопределено Тогда
			Запрос.Текст = 
			"УНИЧТОЖИТЬ ВТРезервыПоОрганизациямДляКонтроля
			|;
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ
		|	ВТРезервыПоОрганизациямДляКонтроля.ВидДвижения КАК ВидДвижения,
		|	ВТРезервыПоОрганизациямДляКонтроля.Период КАК Период,
		|	ВТРезервыПоОрганизациямДляКонтроля.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВТРезервыПоОрганизациямДляКонтроля.Организация КАК Организация,
		|	ВТРезервыПоОрганизациямДляКонтроля.ВидЗапасов КАК ВидЗапасов,
		|	ВТРезервыПоОрганизациямДляКонтроля.НомерГТД КАК НомерГТД,
		|	ВТРезервыПоОрганизациямДляКонтроля.Количество КАК Количество,
		|	ВЫРАЗИТЬ(ВТРезервыПоОрганизациямДляКонтроля.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
		|	ВТРезервыПоОрганизациямДляКонтроля.КорОрганизация КАК КорОрганизация,
		|	ВТРезервыПоОрганизациямДляКонтроля.КорВидЗапасов КАК КорВидЗапасов
		|ПОМЕСТИТЬ ВТРезервыПоОрганизациямДляКонтроля
		|ИЗ
		|	&ТаблицаРезервыПоОрганизациямДляКонтроля КАК ВТРезервыПоОрганизациямДляКонтроля";
		
		Запрос.УстановитьПараметр("ТаблицаРезервыПоОрганизациямДляКонтроля", ТаблицаРезервыПоОрганизациямДляКонтроля);
		
		Запрос.Выполнить();
		
	КонецЦикла;
	
КонецПроцедуры

Функция РаспределитьРезервыТоваровОрганизацийПоПериодам(КоличествоПериодовПриФормированииРезервовОрганизаций,
														ТаблицаНовыеРезервыИсходная,
														МенеджерВременныхТаблиц) Экспорт
	
	Если КоличествоПериодовПриФормированииРезервовОрганизаций < 2
		Или ТаблицаНовыеРезервыИсходная.Количество() = 0 Тогда
		
		Возврат ТаблицаНовыеРезервыБезИзменений(ТаблицаНовыеРезервыИсходная, МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаНовыеРезервы.Период КАК Период,
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация КАК Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|	ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|	ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|	ТаблицаНовыеРезервы.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	ТаблицаНовыеРезервы.ЭтоСторно КАК ЭтоСторно,
	|	ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения
	|ПОМЕСТИТЬ ВТТаблицаНовыеРезервы
	|ИЗ
	|	&ТаблицаНовыеРезервыИсходная КАК ТаблицаНовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ)) КАК Период,
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация КАК Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|	СУММА(ТаблицаНовыеРезервы.Количество) КАК Количество,
	|	СУММА(ТаблицаНовыеРезервы.КоличествоПоРНПТ) КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВтПриходРезерваСгруппированный
	|ИЗ
	|	ВТТаблицаНовыеРезервы КАК ТаблицаНовыеРезервы
	|ГДЕ
	|	ТаблицаНовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ ТаблицаНовыеРезервы.ЭтоСторно
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтПриходРезерваСгруппированный.Период КАК ПериодРезерва,
	|	ВтПриходРезерваСгруппированный.Организация КАК Организация,
	|	ВтПриходРезерваСгруппированный.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтПриходРезерваСгруппированный.ВидЗапасов КАК ВидЗапасов,
	|	ВтПриходРезерваСгруппированный.НомерГТД КАК НомерГТД,
	|	ВтПриходРезерваСгруппированный.Количество КАК Резерв,
	|	ЕСТЬNULL(СгруппированныеОстатки.КоличествоОстаток, 0) КАК МинимальныйОстаток
	|ПОМЕСТИТЬ ВтПриходРезерваМинимальныйОстаток
	|ИЗ
	|	ВтПриходРезерваСгруппированный КАК ВтПриходРезерваСгруппированный
	|		ЛЕВОЕ СОЕДИНЕНИЕ СгруппированныеОстатки КАК СгруппированныеОстатки
	|		ПО ВтПриходРезерваСгруппированный.Организация = СгруппированныеОстатки.Организация
	|			И ВтПриходРезерваСгруппированный.АналитикаУчетаНоменклатуры = СгруппированныеОстатки.АналитикаУчетаНоменклатуры
	|			И ВтПриходРезерваСгруппированный.ВидЗапасов = СгруппированныеОстатки.ВидЗапасов
	|			И ВтПриходРезерваСгруппированный.НомерГТД = СгруппированныеОстатки.НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапросПоМесяцам.ПериодОстатка КАК ПериодОстатка,
	|	ВложенныйЗапросПоМесяцам.Организация КАК Организация,
	|	ВложенныйЗапросПоМесяцам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапросПоМесяцам.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапросПоМесяцам.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапросПоМесяцам.РезервНеНужныйВЭтомМесяце КАК РезервНеНужныйВЭтомМесяце,
	|	ВложенныйЗапросПоМесяцам.НовыйРезервВсего КАК НовыйРезервВсего
	|ИЗ
	|	ОбъединенныйТекстЗапросаПоМесяцам КАК ВложенныйЗапросПоМесяцам
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД,
	|	ПериодОстатка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ) КАК ПериодКонецМесяца,
	|	ТаблицаНовыеРезервы.Период КАК Период,
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация КАК Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|	ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|	ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|	ТаблицаНовыеРезервы.Количество КАК Количество,
	|	ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаНовыеРезервы.Количество КАК КоличествоНеРаспределенноеПоПериодам,
	|	ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТНеРаспределенноеПоПериодам,
	|	ТаблицаНовыеРезервы.ЭтоСторно КАК ЭтоСторно,
	|	ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения
	|ИЗ
	|	ВТТаблицаНовыеРезервы КАК ТаблицаНовыеРезервы
	|
	|ГДЕ
	|	ТаблицаНовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ ТаблицаНовыеРезервы.ЭтоСторно
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД,
	|	Период УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаНовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтПриходРезерваМинимальныйОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтПриходРезерваСгруппированный";
	
	ШаблонТекстаПоМесяцам =
	"ВЫБРАТЬ
	|	&ТекстПериодОстатка КАК ПериодОстатка,
	|	ВтПриходРезерваМинимальныйОстаток.Организация КАК Организация,
	|	ВтПриходРезерваМинимальныйОстаток.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтПриходРезерваМинимальныйОстаток.ВидЗапасов КАК ВидЗапасов,
	|	ВтПриходРезерваМинимальныйОстаток.НомерГТД КАК НомерГТД,
	|	ЕСТЬNULL(ШаблонОстаткиНаМесяц.КоличествоОстаток, 0) - ВтПриходРезерваМинимальныйОстаток.МинимальныйОстаток КАК РезервНеНужныйВЭтомМесяце,
	|	ВтПриходРезерваМинимальныйОстаток.Резерв КАК НовыйРезервВсего
	|ИЗ
	|	ВтПриходРезерваМинимальныйОстаток КАК ВтПриходРезерваМинимальныйОстаток
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШаблонОстаткиНаМесяц КАК ШаблонОстаткиНаМесяц
	|		ПО ВтПриходРезерваМинимальныйОстаток.АналитикаУчетаНоменклатуры = ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры
	|			И ВтПриходРезерваМинимальныйОстаток.Организация = ШаблонОстаткиНаМесяц.Организация
	|			И ВтПриходРезерваМинимальныйОстаток.ВидЗапасов = ШаблонОстаткиНаМесяц.ВидЗапасов
	|			И ВтПриходРезерваМинимальныйОстаток.НомерГТД = ШаблонОстаткиНаМесяц.НомерГТД
	|ГДЕ
	|	ВтПриходРезерваМинимальныйОстаток.ПериодРезерва <= &ТекстПериодОстатка";
	
	МассивЗапросовПоМесяцам = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаНовыеРезервыИсходная", ТаблицаНовыеРезервыИсходная);
	
	МесяцПервогоОстатка	= '30000101';
	ОписаниеТипаДата	= Новый ОписаниеТипов("Дата");
	
	Для Каждого Таблица Из МенеджерВременныхТаблиц.Таблицы Цикл
		
		ПериодСтрокой	= СтрЗаменить(Таблица.ПолноеИмя, "Остатки", "");
		Период			= ОписаниеТипаДата.ПривестиЗначение(ПериодСтрокой);
		
		Если ЗначениеЗаполнено(Период)
			И СтрНачинаетсяС(Таблица.ПолноеИмя, "Остатки") Тогда
			
			ТекстЗапросаПоМесяцам	= СтрЗаменить(ШаблонТекстаПоМесяцам, "ШаблонОстаткиНаМесяц", Таблица.ПолноеИмя);
			ТекстПериодОстатка		= "КонецМесяца" + ПериодСтрокой;
			ТекстЗапросаПоМесяцам	= СтрЗаменить(ТекстЗапросаПоМесяцам, "ТекстПериодОстатка", ТекстПериодОстатка);
			ПериодДатой				= КонецМесяца(Период);
			
			Если ПериодДатой < МесяцПервогоОстатка Тогда
				МесяцПервогоОстатка = ПериодДатой;
			КонецЕсли;
			
			Запрос.УстановитьПараметр(ТекстПериодОстатка, ПериодДатой);
			
			МассивЗапросовПоМесяцам.Добавить(ТекстЗапросаПоМесяцам);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбъединенныйТекстЗапросаПоМесяцам = СтрСоединить(МассивЗапросовПоМесяцам,
													ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"ОбъединенныйТекстЗапросаПоМесяцам",
								"(" + ОбъединенныйТекстЗапросаПоМесяцам + ")");
	
	Запрос.Текст		= ТекстЗапроса;
	РезультатЗапроса	= Запрос.ВыполнитьПакет();
	ВыборкаОстатков		= РезультатЗапроса[3].Выбрать();
	ТаблицаНовыеРезервы	= РезультатЗапроса[4].Выгрузить(); // ТаблицаЗначений
	
	КлючиПоиска = "АналитикаУчетаНоменклатуры,Организация,ВидЗапасов,НомерГТД";
	
	ТаблицаНовыеРезервыДобавляемыеСтроки = ТаблицаНовыеРезервы.СкопироватьКолонки();
	ТаблицаНовыеРезервы.Индексы.Добавить(КлючиПоиска);
	
	СтруктураПоиска			= Новый Структура(КлючиПоиска);
	РезервыПоАналитике		= Новый Массив;
	ЕстьИзмененияВТаблице	= Ложь;
	ПропуститьЭтуАналитику	= Ложь;
	НовыйРезервВсегоНеРаспределено = 0;
	
	Пока ВыборкаОстатков.Следующий() Цикл
		
		Если Не ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(СтруктураПоиска, ВыборкаОстатков) Тогда
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаОстатков);
			
			Если ВыборкаОстатков.ПериодОстатка = МесяцПервогоОстатка
				И ВыборкаОстатков.РезервНеНужныйВЭтомМесяце = 0 Тогда
				//Если минимальный остаток в первом месяце,
				//то распределять резервы по месяцам не нужно - резерв нужно записывать в первый месяц
				ПропуститьЭтуАналитику = Истина;
				Продолжить;
			Иначе
				ПропуститьЭтуАналитику = Ложь;
			КонецЕсли;
			
			Если НовыйРезервВсегоНеРаспределено <> 0 Тогда
				ТекстИсключения = НСтр("ru = 'Ошибка распределения резервов по месяцам'");
				
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
			
			НовыйРезервВсегоНеРаспределено	= ВыборкаОстатков.НовыйРезервВсего;
			РезервыПоАналитике				= ОбщегоНазначенияУТ.НайтиСтрокиССохранениемПорядка(ТаблицаНовыеРезервы,
																								СтруктураПоиска);
			
		ИначеЕсли ПропуститьЭтуАналитику Тогда
			Продолжить;
		КонецЕсли;
		
		РезервВЭтотМесяцВсегоНераспределено = НовыйРезервВсегоНеРаспределено - ВыборкаОстатков.РезервНеНужныйВЭтомМесяце;
		
		Если РезервВЭтотМесяцВсегоНераспределено <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Индекс = РезервыПоАналитике.Количество() - 1;
		
		РаспределеноВЭтотМесяц = 0;
		
		Пока Индекс >= 0 Цикл
			
			НераспределенныйРезерв		= РезервыПоАналитике[Индекс];
			РезервВЭтотМесяцВЭтуЗапись	= Мин(НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам,
												РезервВЭтотМесяцВсегоНераспределено);
			
			Если РезервВЭтотМесяцВЭтуЗапись = НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам Тогда
				НераспределенныйРезерв.Период = ВыборкаОстатков.ПериодОстатка;
				НераспределенныйРезерв.ПериодКонецМесяца = ВыборкаОстатков.ПериодОстатка;
				НераспределенныйРезерв.Количество = РезервВЭтотМесяцВЭтуЗапись;
				НераспределенныйРезерв.КоличествоПоРНПТ = НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам;
				НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам = 0;
				НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам = 0;
				
				РезервыПоАналитике.Удалить(Индекс);
			Иначе
				НоваяСтрока = ТаблицаНовыеРезервыДобавляемыеСтроки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НераспределенныйРезерв);
				НоваяСтрока.Период = ВыборкаОстатков.ПериодОстатка;
				НоваяСтрока.ПериодКонецМесяца = ВыборкаОстатков.ПериодОстатка;
				НоваяСтрока.КоличествоНеРаспределенноеПоПериодам = 0;
				НоваяСтрока.КоличествоПоРНПТНеРаспределенноеПоПериодам = 0;
				НоваяСтрока.Количество = РезервВЭтотМесяцВЭтуЗапись;
				НоваяСтрока.КоличествоПоРНПТ = ?(НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам <> 0,
												НоваяСтрока.Количество * НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам
													/ НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам,
												0);
				
				НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам = НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам
																				- РезервВЭтотМесяцВЭтуЗапись;
				НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам = НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам
																							- НоваяСтрока.КоличествоПоРНПТ;
			КонецЕсли;
			
			РаспределеноВЭтотМесяц	= РаспределеноВЭтотМесяц + РезервВЭтотМесяцВЭтуЗапись;
			ЕстьИзмененияВТаблице	= Истина;
			РезервВЭтотМесяцВсегоНераспределено = РезервВЭтотМесяцВсегоНераспределено - РезервВЭтотМесяцВЭтуЗапись;
			
			Если РезервВЭтотМесяцВсегоНераспределено = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Индекс = Индекс - 1;
			
		КонецЦикла;
		
		Если РезервВЭтотМесяцВсегоНераспределено <> 0 Тогда
			ТекстИсключения = НСтр("ru = 'Ошибка распределения резервов по месяцам'");
			
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		НовыйРезервВсегоНеРаспределено = НовыйРезервВсегоНеРаспределено - РаспределеноВЭтотМесяц;
		
		Если НовыйРезервВсегоНеРаспределено <= 0 Тогда
			ПропуститьЭтуАналитику = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НовыйРезервВсегоНеРаспределено <> 0 Тогда
		ТекстИсключения = НСтр("ru = 'Ошибка распределения резервов по месяцам'");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ЕстьИзмененияВТаблице Тогда
		
		ТаблицаНовыеРезервы.Индексы.Очистить();
		
		Если ТаблицаНовыеРезервыДобавляемыеСтроки.Количество() > 0 Тогда
			ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(ТаблицаНовыеРезервы, ТаблицаНовыеРезервыДобавляемыеСтроки);
		КонецЕсли;
		
		ТаблицаНовыеРезервы.Колонки.Удалить("ПериодКонецМесяца");
		ТаблицаНовыеРезервы.Колонки.Удалить("КоличествоНеРаспределенноеПоПериодам");
		
		КоличествоСтрок = ТаблицаНовыеРезервы.Количество(); 
		
		Для Индекс = 0 По КоличествоСтрок - 1 Цикл
			СтрокаПрихода = ТаблицаНовыеРезервы[Индекс];
			СтрокаПрихода.ВидДвижения = ВидДвиженияНакопления.Приход;
			
			РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаНовыеРезервы,
																						СтрокаПрихода);
		КонецЦикла;
		
		ТекстЗапросаУничтоженияТаблицОстатков = ТекстЗапросаУничтоженияТаблицОстатков(МенеджерВременныхТаблиц);
		
		Если Не ПустаяСтрока(ТекстЗапросаУничтоженияТаблицОстатков) Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = ТекстЗапросаУничтоженияТаблицОстатков;
			
			Запрос.Выполнить();
		КонецЕсли;
		
		Возврат ТаблицаНовыеРезервы;
		
	Иначе
		Возврат ТаблицаНовыеРезервыБезИзменений(ТаблицаНовыеРезервыИсходная, МенеджерВременныхТаблиц);	
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаУничтоженияТаблицОстатков(МенеджерВременныхТаблиц)
	
	МассивЗапросовУничтоженияВТ = Новый Массив;
	
	Для Каждого Таблица Из МенеджерВременныхТаблиц.Таблицы Цикл
		
		Если Лев(Таблица.ПолноеИмя,7) = "Остатки" Тогда
			МассивЗапросовУничтоженияВТ.Добавить("УНИЧТОЖИТЬ " + Таблица.ПолноеИмя);
		КонецЕсли;
		
	КонецЦикла;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("СгруппированныеОстатки") <> Неопределено Тогда
		МассивЗапросовУничтоженияВТ.Добавить("УНИЧТОЖИТЬ СгруппированныеОстатки");
	КонецЕсли;
	
	Возврат СтрСоединить(МассивЗапросовУничтоженияВТ, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

Функция ТаблицаНовыеРезервыБезИзменений(ТаблицаНовыеРезервы, МенеджерВременныхТаблиц)
	
	ТекстУничтоженияТаблиц = ТекстЗапросаУничтоженияТаблицОстатков(МенеджерВременныхТаблиц);
	
	Если Не ПустаяСтрока(ТекстУничтоженияТаблиц) Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = ТекстУничтоженияТаблиц;
		Запрос.Выполнить();
	КонецЕсли;
	
	Возврат ТаблицаНовыеРезервы;
	
КонецФункции

Функция ЕстьДвижениеВКоллекции(ДокументОбъект, ИмяРегистра)
	
	Если ТипЗнч(ДокументОбъект.Движения) = Тип("Структура") Тогда
		Возврат ДокументОбъект.Движения.Свойство(ИмяРегистра);
	Иначе
		Возврат ДокументОбъект.Движения.Найти(ИмяРегистра) <> Неопределено;
	КонецЕсли;	
	
КонецФункции

Функция ПараметрыЗаполненияВидовЗапасовПоДополнительнымСвойствам(Документ, МенеджерВременныхТаблиц)
	
	ПараметрыЗаполнения = Неопределено;
	Если Документ.ДополнительныеСвойства.Свойство("ПараметрыЗаполненияВидовЗапасов", ПараметрыЗаполнения) Тогда
		Если ПараметрыЗаполнения = "ПолучитьПередФормированием" Тогда
			ПараметрыЗаполнения = Документ.ПараметрыЗаполненияВидовЗапасов(МенеджерВременныхТаблиц);
			Документ.ДополнительныеСвойства.ПараметрыЗаполненияВидовЗапасов = ПараметрыЗаполнения;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

#Область СообщитьОбОшибках

Функция ТаблицаОшибокЗаполненияВидовЗапасов()
	
	ТаблицаОшибок = Новый ТаблицаЗначений;
	ТаблицаОшибок.Колонки.Добавить("Номенклатура");
	ТаблицаОшибок.Колонки.Добавить("Характеристика");
	ТаблицаОшибок.Колонки.Добавить("Серия");
	ТаблицаОшибок.Колонки.Добавить("Склад");
	ТаблицаОшибок.Колонки.Добавить("СкладОтгрузки");
	ТаблицаОшибок.Колонки.Добавить("Назначение");
	ТаблицаОшибок.Колонки.Добавить("ЕдиницаИзмерения");
	ТаблицаОшибок.Колонки.Добавить("НеУказанНомерГТД");
	ТаблицаОшибок.Колонки.Добавить("ТипНоменклатуры");
	ТаблицаОшибок.Колонки.Добавить("Количество");
	ТаблицаОшибок.Колонки.Добавить("Сумма");
	ТаблицаОшибок.Колонки.Добавить("Валюта");
	
	Возврат ТаблицаОшибок;
	
КонецФункции 

Процедура СообщитьОбОшибкахКонтроляТоваровОрганизаций(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов, Организация = Неопределено)
	
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения
		И ТаблицаОшибок.Количество() > 0 Тогда
		
		ТаблицаОшибок.Свернуть("Номенклатура, Характеристика, Серия, Склад, Назначение, ЕдиницаИзмерения, НеУказанНомерГТД, ТипНоменклатуры",
								"Количество,Сумма");
		
		ОрганизацияСообщенияОбОшибке		= ?(ЗначениеЗаполнено(Организация),
												Организация,
												ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
		НалогообложениеНДС					= ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС;
		КонтролироватьНалогообложениеНДС	= КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов);
		
		ИспользоватьУчетПрослеживаемыхИмпортныхТоваров = УчетПрослеживаемыхТоваровЛокализация.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров(
														ДокументОбъект.Дата);
		
		ПредставлениеГТД = ?(ИспользоватьУчетПрослеживаемыхИмпортныхТоваров,
									НСтр("ru = 'ГТД / РНПТ'"),
									НСтр("ru = 'ГТД'"));
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			ТекстСообщения = НСтр("ru = 'По организации %Организация%%ПробелСклад%%МестоХраненияНаименование%%ПробелСклад%%Склад% не хватает %Количество% %ЕдиницаИзмерения% %ПредставлениеТипаНоменклатуры% %ПредставлениеНоменклатуры% с указанными номерами %ПредставлениеГТД% по налогообложению %НалогообложениеНДС%'");
			
			Если Не СтрокаТаблицы.НеУказанНомерГТД
				И Не КонтролироватьНалогообложениеНДС Тогда
				
				ТекстСообщения = НСтр("ru = 'По организации %Организация%%ПробелСклад%%МестоХраненияНаименование%%ПробелСклад%%Склад% не хватает %Количество% %ЕдиницаИзмерения% %ПредставлениеТипаНоменклатуры% %ПредставлениеНоменклатуры%'");
				
			ИначеЕсли Не СтрокаТаблицы.НеУказанНомерГТД Тогда
				ТекстСообщения = НСтр("ru = 'По организации %Организация%%ПробелСклад%%МестоХраненияНаименование%%ПробелСклад%%Склад% не хватает %Количество% %ЕдиницаИзмерения% %ПредставлениеТипаНоменклатуры% %ПредставлениеНоменклатуры% по налогообложению %НалогообложениеНДС%'");
			ИначеЕсли Не КонтролироватьНалогообложениеНДС Тогда
				ТекстСообщения = НСтр("ru = 'По организации %Организация%%ПробелСклад%%МестоХраненияНаименование%%ПробелСклад%%Склад% не хватает %Количество% %ЕдиницаИзмерения% %ПредставлениеТипаНоменклатуры% %ПредставлениеНоменклатуры% с указанными номерами %ПредставлениеГТД%'");
			КонецЕсли;
			
			ПредставлениеНоменклатуры	= НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура,
																							СтрокаТаблицы.Характеристика,
																							,
																							СтрокаТаблицы.Серия,
																							СтрокаТаблицы.Назначение);
			МестоХраненияНаименование	= НаименованиеМестаХраненияДляСообщенияОбОшибкахКонтроляОстатковПоОрганизациям(
											СтрокаТаблицы);
			ПробелСклад					= ?(ЗначениеЗаполнено(СтрокаТаблицы.Склад), " ", "");
			ПредставлениеТипаНоменклатуры = ?(СтрокаТаблицы.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа,
												НСтр("ru = 'работы'"),
												НСтр("ru = 'товара'"));
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%",					ОрганизацияСообщенияОбОшибке);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%",					СтрокаТаблицы.Количество);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%",				СтрокаТаблицы.ЕдиницаИзмерения);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",		ПредставлениеНоменклатуры);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%МестоХраненияНаименование%",		МестоХраненияНаименование);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТипаНоменклатуры%",	ПредставлениеТипаНоменклатуры);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПробелСклад%",					ПробелСклад);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",							СтрокаТаблицы.Склад);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НалогообложениеНДС%",			НалогообложениеНДС);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеГТД%",				ПредставлениеГТД);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			
		КонецЦикла;
		
		СообщитьОКонтролеНалогообложенияПриПодбореВидовЗапасов(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияВидовЗапасовКомитентов(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов)
	
	Если ТаблицаОшибок.Количество() > 0
		И ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения Тогда
		
		ТаблицаОшибок.Свернуть("Номенклатура, Характеристика, Серия, Склад, Назначение, ЕдиницаИзмерения, НеУказанНомерГТД",
								"Количество, Сумма");
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			Если СтрокаТаблицы.Количество <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'По комитенту %Комитент% не хватает %Количество% %ЕдиницаИзмерения% товара %ПредставлениеНоменклатуры%, реализованного комиссионером %Комиссионер%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комитент%", ДокументОбъект.Организация);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комиссионер%", ДокументОбъект.Комиссионер);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,
											"%ПредставлениеНоменклатуры%",
											НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
												СтрокаТаблицы.Номенклатура,
												СтрокаТаблицы.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СтрокаТаблицы.Количество);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СтрокаТаблицы.ЕдиницаИзмерения);
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
			Если СтрокаТаблицы.Сумма <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'Товар: %ПредставлениеНоменклатуры% Сумма продажи превышает сумму реализованного товара комиссионером на %Сумма% %Валюта%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения,
											"%ПредставлениеНоменклатуры%",
											НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
												СтрокаТаблицы.Номенклатура,
												СтрокаТаблицы.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%", СтрокаТаблицы.Сумма);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", ДокументОбъект.Валюта);
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияВидовЗапасовПоТаблицеКОформлению(
	ДокументОбъект, 
	ТаблицаОшибок, 
	ПараметрыЗаполненияВидовЗапасов, 
	ХозяйственнаяОперация = Неопределено)
	
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения
		И ТаблицаОшибок.Количество() > 0 Тогда
		
		ТаблицаОшибок.Свернуть(
			"Номенклатура,Характеристика,Серия,Склад,СкладОтгрузки,Назначение,ЕдиницаИзмерения,НеУказанНомерГТД,Валюта,ТипНоменклатуры",
			"Количество,Сумма");
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.Склад)
				И ЗначениеЗаполнено(СтрокаТаблицы.Валюта)
				И (СтрокаТаблицы.Сумма) Тогда
				ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %ТипДвижения% %Количество% %ЕдиницаИзмерения% на сумму %Сумма%%Валюта% %ПредставлениеТипаНоменклатуры%: %ПредставлениеНоменклатуры%,%ПробелСклад%%МестоХраненияНаименование%%ПробелСклад%%Склад% %КонтрольГТД%'");
			ИначеЕсли ЗначениеЗаполнено(СтрокаТаблицы.Склад) Тогда
				ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %ТипДвижения% %Количество% %ЕдиницаИзмерения% %ПредставлениеТипаНоменклатуры%: %ПредставлениеНоменклатуры%,%ПробелСклад%%МестоХраненияНаименование%%ПробелСклад%%Склад% %КонтрольГТД%'");
			ИначеЕсли ЗначениеЗаполнено(СтрокаТаблицы.Сумма)
				И ЗначениеЗаполнено(СтрокаТаблицы.Валюта) Тогда
				ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %ТипДвижения% %Количество% %ЕдиницаИзмерения% на сумму %Сумма%%Валюта% %ПредставлениеТипаНоменклатуры%: %ПредставлениеНоменклатуры% %КонтрольГТД%'");
			Иначе
				ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %ТипДвижения% %Количество% %ЕдиницаИзмерения% %ПредставлениеТипаНоменклатуры%: %ПредставлениеНоменклатуры% %КонтрольГТД%'");
			КонецЕсли;	
			
			ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика,,СтрокаТаблицы.Серия);
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%" , ПредставлениеНоменклатуры); 
			
			ПредставлениеТипаНоменклатуры = ?(СтрокаТаблицы.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа,
												НСтр("ru = 'работы'"),
												НСтр("ru = 'товара'"));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТипаНоменклатуры%", ПредставлениеТипаНоменклатуры);
			
			МестоХраненияНаименование = НаименованиеМестаХраненияДляСообщенияОбОшибкахКонтроляОстатковПоОрганизациям(СтрокаТаблицы, ХозяйственнаяОперация);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%МестоХраненияНаименование%", МестоХраненияНаименование);
			
			Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика2_5
				//++ Устарело_Переработка24
				Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика
				//-- Устарело_Переработка24
				Или Ложь Тогда
				ПробелСклад = ?(ЗначениеЗаполнено(СтрокаТаблицы.СкладОтгрузки), " ", "");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(СтрокаТаблицы.СкладОтгрузки));
			Иначе
				ПробелСклад = ?(ЗначениеЗаполнено(СтрокаТаблицы.Склад), " ", "");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(СтрокаТаблицы.Склад));
			КонецЕсли;
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПробелСклад%", ПробелСклад);
			
			Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика2_5
				//++ Устарело_Переработка24
				Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика
				//-- Устарело_Переработка24
				Или Ложь Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДвижения%", НСтр("ru = 'к возврату'"));
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДвижения%", НСтр("ru = 'к оформлению'"));
			КонецЕсли;
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%" , СтрокаТаблицы.Количество);
			
			СуммаТекст = "";
			Если ЗначениеЗаполнено(СтрокаТаблицы.Сумма) Тогда
				СуммаТекст = Формат(СтрокаТаблицы.Сумма, "ЧДЦ=2");
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%" , СуммаТекст);
			
			ВалютаТекст = "";
			Если ЗначениеЗаполнено(СтрокаТаблицы.Валюта) Тогда
				ВалютаТекст = Формат(" " + СтрокаТаблицы.Валюта);
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%" , ВалютаТекст);

			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%" , СтрокаТаблицы.ЕдиницаИзмерения);
			
			Если СтрокаТаблицы.НеУказанНомерГТД Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", НСтр("ru = 'с указанными номерами ГТД'"));
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", "");
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			
		КонецЦикла;
		
		СообщитьОКонтролеНалогообложенияПриПодбореВидовЗапасов(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура СообщитьОКонтролеНалогообложенияПриПодбореВидовЗапасов(Знач ДокументОбъект, Знач ПараметрыЗаполненияВидовЗапасов)
	
	Если КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов) Тогда
		
		НалогообложениеНДСДокумента = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС;
		
		ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
			ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов),
			ДокументОбъект.Дата);
	
		НалогообложениеНДСОрганизации = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
				
		Если НалогообложениеНДСДокумента <> Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
			И НалогообложениеНДСДокумента <> Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту
			И НалогообложениеНДСДокумента <> Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя
			И НалогообложениеНДСДокумента <> Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ
			И НалогообложениеНДСДокумента <> Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
			И Перечисления.ТипыНалогообложенияНДС.СНдсБезНдс(НалогообложениеНДСДокумента) <> НалогообложениеНДСОрганизации Тогда
			ТекстСообщения = НСтр(
			"ru = 'Обратите внимание, что тип налогообложения ""%НалогообложениеНДС%"" не поддерживается учетной политикой организации. В этом случае могут быть списаны только комиссионные товары.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НалогообложениеНДС%", НалогообложениеНДСДокумента);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект, "НалогообложениеНДС");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция НаименованиеМестаХраненияДляСообщенияОбОшибкахКонтроляОстатковПоОрганизациям(СтрокаТаблицы, ХозяйственнаяОперация = Неопределено)
	
	МестоХраненияНаименование = "";
	
	// Формирование наименования по хозяйственной операции.
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика2_5
		//++ Устарело_Переработка24
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика
		//-- Устарело_Переработка24
		Или Ложь Тогда
		МестоХраненияНаименование = НСтр("ru = 'от переработчика'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МестоХраненияНаименование) Тогда
		Возврат МестоХраненияНаименование;
	КонецЕсли;
	
	// Формирование наименования по типу поля Склад
	Если Не ЗначениеЗаполнено(СтрокаТаблицы.Склад) Тогда
		МестоХраненияНаименование = "";
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.Партнеры") Тогда
		МестоХраненияНаименование = НСтр("ru = 'у партнера'");
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.Организации") Тогда
		МестоХраненияНаименование = НСтр("ru = 'у организации'");
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		МестоХраненияНаименование = НСтр("ru = 'в подразделении'");
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		МестоХраненияНаименование = НСтр("ru = 'по договору'");
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.Склады") Тогда
		МестоХраненияНаименование = НСтр("ru = 'на складе'");
	Иначе
		ТекстИсключения = НСтр("ru = 'В процедуре %1 не учтен тип места хранения ""%2""'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, "НаименованиеМестаХраненияДляСообщенияОбОшибкахКонтроляОстатковПоОрганизациям", ТипЗнч(СтрокаТаблицы.Склад));
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Возврат МестоХраненияНаименование;
	
КонецФункции

#КонецОбласти

#Область ВТТаблицаОстатков

// Метод возвращает ВТ ТаблицаОстатков, используется при заполнении видов запасов.
//
// Параметры:
//	ИмяТаблицыОстатков - Строка - Имя таблицы остатков, показывает по какому из регистров будут строиться остатки.
//	ДокументОбъект - ДокументОбъект - Документ, для которого формируется таблица остатков.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер, содержит Вт ДоступныеВидыЗапасов.
//	ПараметрыЗаполненияВидовЗапасов - Структура - Отборы остатков. См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//	ВычитатьДвиженияПоТоварамОрганизаций - Неопределено, Булево - Необходимость вычитания из текущих остатков старых движений документа.
//	ДатаОстатков - Неопределено, Дата - Дата, на которую формируются остатки. Как правило, на дату документа.
//
Процедура СформироватьВТТаблицаОстатков(ИмяТаблицыОстатков,
										ДокументОбъект,
										МенеджерВременныхТаблиц,
										ПараметрыЗаполненияВидовЗапасов,
										ВычитатьДвиженияПоТоварамОрганизаций = Неопределено,
										ДатаОстатков = Неопределено) Экспорт
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаОстатковУжеСформирована Тогда
		Возврат;
	КонецЕсли;
	
	Если ДатаОстатков = Неопределено Тогда
		Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
			ДатаОстатков = ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения;
		ИначеЕсли ДокументОбъект.Проведен
			Или ЗначениеЗаполнено(ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент) Тогда
			
			ДатаОстатков = ДокументОбъект.Дата;
			
		Иначе
			ДатаОстатков = Мин(ДокументОбъект.Дата, ТекущаяДатаСеанса());
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяТаблицыОстатков = "ТоварыОрганизаций" Тогда
		Если ВычитатьДвиженияПоТоварамОрганизаций = Неопределено Тогда
			ТекстИсключения = НСтр("ru = 'Ошибка формирования таблицы остатков товаров организаций: не передан параметр %1.'");
			ТекстИсключения = СтрШаблон(ТекстИсключения, "ВычитатьДвиженияПоТоварамОрганизаций");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		ТаблицаОстатковТоваровОрганизаций(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ВычитатьДвиженияПоТоварамОрганизаций, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "КомиссионныеТоварыИнтеркампани" Тогда
		
		ТаблицаОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект,
														МенеджерВременныхТаблиц,
														ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыПереданныеНаКомиссию" Тогда
		
		ТаблицаОстатковТоваровПереданныхНаКомиссию(ДокументОбъект,
													ПараметрыЗаполненияВидовЗапасов,
													МенеджерВременныхТаблиц,
													ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "РеализованныеТовары" Тогда
		ТаблицаОстатковРеализованныхТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ПринятыеТовары" Тогда
		ТаблицаОстатковПринятыхТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ПереданнаяВозвратнаяТара" Тогда
		ТаблицаОстатковПереданнойВозвратнойТары(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ПереданныеМеждуОрганизациямиТовары" Тогда
		ТаблицаОстатковПереданныхМеждуОрганизациямиТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыКОформлениюОтчетовКомитенту" Тогда
		ТаблицаОстатковКОформлениюОтчетаКомитенту(ДокументОбъект, МенеджерВременныхТаблиц, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыКОформлениюОтчетовКомитентуОСписании" Тогда
		
		ТаблицаОстатковКОформлениюОтчетаКомитентуОСписании(ДокументОбъект,
															МенеджерВременныхТаблиц,
															ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыСписанныеНаРасходы" Тогда
		ТаблицаОстатковСписанныхНаРасходыТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыОрганизацийКПередаче" Тогда
		ТаблицаОстатковТоваровКПередаче(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыОрганизацийКВозврату" Тогда
		ТаблицаОстатковТоваровКВозврату(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыУПартнеровПоложительныйОстаток" Тогда
		
		ОтрицательныеОстатки = Ложь;
		
		ТаблицаОстатковТоваровУПартнеров(ДокументОбъект,
										МенеджерВременныхТаблиц,
										ОтрицательныеОстатки,
										ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыУПартнеровОтрицательныйОстаток" Тогда
		ОтрицательныеОстатки = Истина;
		ТаблицаОстатковТоваровУПартнеров(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки);
		
	ИначеЕсли ИмяТаблицыОстатков = "СписаниеРасхожденийПоложительныйОстаток" Тогда
		ОтрицательныеОстатки = Ложь;
		ТаблицаОстатковДляСписанияРасхождений(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "СписаниеРасхожденийОтрицательныйОстаток" Тогда
		ОтрицательныеОстатки = Истина;
		ТаблицаОстатковДляСписанияРасхождений(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыПринятыеКСписанию" Тогда
		ТаблицаОстатковТоваровПринятых(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТаблицаВидыЗапасов" Тогда
		ТаблицаОстатковТаблицаВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	Иначе
		ТекстИсключения = НСтр("ru = 'Неизвестное имя таблицы остатков.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаОстатковТоваровОрганизаций(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ВычитатьДвиженияПоТоварамОрганизаций,
											МинимальнаяДатаОстатков,
											ДатыОстатков = Неопределено)
	
	ДокументСсылка = ДокументОбъект.Ссылка;
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Резервы.Период КАК Период,
	|	Резервы.Организация КАК Организация,
	|	Резервы.ВидДвижения КАК ВидДвижения,
	|	Резервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Резервы.ВидЗапасов КАК ВидЗапасов,
	|	Резервы.НомерГТД КАК НомерГТД,
	|	Резервы.Количество КАК Количество,
	|	ВЫРАЗИТЬ(Резервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|	Резервы.КорОрганизация КАК КорОрганизация,
	|	Резервы.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ СформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК Резервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДвиженияДокумента.Период, МЕСЯЦ)	КАК Период,
	|	ДвиженияДокумента.Организация					КАК Организация,
	|	ДвиженияДокумента.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ДвиженияДокумента.ВидЗапасов					КАК ВидЗапасов,
	|	ДвиженияДокумента.НомерГТД						КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ДвиженияДокумента.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ДвиженияДокумента.Количество
	|		ИНАЧЕ -ДвиженияДокумента.Количество
	|	КОНЕЦ											КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ДвиженияДокумента.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ДвиженияДокумента.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ВЫРАЗИТЬ(ДвиженияДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ -ВЫРАЗИТЬ(ДвиженияДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ											КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ДвиженияСторнируемогоДокумента
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ДвиженияДокумента
	|ГДЕ
	|	НЕ ДвиженияДокумента.Сторно
	|	И &ВычитатьДвиженияПоТоварамОрганизаций
	|	И ДвиженияДокумента.Регистратор = &СторнируемыйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(Движения.Период, МЕСЯЦ) КАК Период,
	|	Движения.Организация,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД,
	|	СУММА(Движения.Количество) КАК Количество,
	|	СУММА(Движения.КоличествоПоРНПТ) КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Период КАК Период,
	|		Товары.Организация КАК Организация,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Товары.Количество
	|			ИНАЧЕ Товары.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(Товары.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ВЫРАЗИТЬ(Товары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ ВЫРАЗИТЬ(Товары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		ДвиженияТоварыОрганизацийПередЗаписью КАК Товары
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО ДоступныеВидыЗапасов.ДляОрганизации = Товары.Организация
	|			И ДоступныеВидыЗапасов.ВидЗапасов = Товары.ВидЗапасов
	|	ГДЕ
	|		&ВычитатьДвиженияПоТоварамОрганизаций
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Погашение резервов по схеме интеркампани, используется в документах передачи
	|		Резервы.Период,
	|		Резервы.Организация,
	|		Резервы.АналитикаУчетаНоменклатуры,
	|		Резервы.ВидЗапасов,
	|		Резервы.НомерГТД,
	|		ВЫБОР
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Резервы.Количество
	|			ИНАЧЕ Резервы.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(Резервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ВЫРАЗИТЬ(Резервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ ВЫРАЗИТЬ(Резервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ОтборыОстатковОрганизаций
	|			ПО ОтборыОстатковОрганизаций.ВидЗапасов = Резервы.ВидЗапасов
	|				И ОтборыОстатковОрганизаций.Организация = Резервы.Организация // владелец товара
	|				И ОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры = Резервы.АналитикаУчетаНоменклатуры
	|	ГДЕ
	|		Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Резервы.КорВидЗапасов В (&КорВидыЗапасов)// продавец товара
	|		И (Резервы.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ИЛИ НЕ Резервы.ВидЗапасов В (&КорВидыЗапасов))
	|		И Резервы.Период >= НАЧАЛОПЕРИОДА(&КонецМесяца, МЕСЯЦ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Погашение резервов за счет выкупа у поклажедателя
	|		Резервы.Период,
	|		Резервы.Организация,
	|		Резервы.АналитикаУчетаНоменклатуры,
	|		Резервы.ВидЗапасов,
	|		Резервы.НомерГТД,
	|		-Резервы.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(Резервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ -ВЫРАЗИТЬ(Резервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ОтборыОстатковОрганизаций
	|			ПО Резервы.АналитикаУчетаНоменклатуры = ОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
	|				И Резервы.ВидЗапасов = ОтборыОстатковОрганизаций.ВидЗапасов
	|				И Резервы.Организация = ОтборыОстатковОрганизаций.Организация // владелец товара
	|				И Резервы.КорОрганизация = ОтборыОстатковОрганизаций.Организация // продавец товара
	|	
	|	ГДЕ
	|		Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Резервы.ВидЗапасов <> Резервы.КорВидЗапасов
	|		И &ЭтоВыкупТоваров
	|		И Резервы.Период >= НАЧАЛОПЕРИОДА(&КонецМесяца, МЕСЯЦ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Резервы.Период,
	|		Резервы.Организация,
	|		Резервы.АналитикаУчетаНоменклатуры,
	|		Резервы.ВидЗапасов,
	|		Резервы.НомерГТД,
	|		ВЫБОР
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Резервы.Количество
	|			ИНАЧЕ -Резервы.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(Резервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ВЫРАЗИТЬ(Резервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ -ВЫРАЗИТЬ(Резервы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ
	|	ИЗ
	|		СформированныеРезервы КАК Резервы
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|			ПО ДоступныеВидыЗапасов.ДляОрганизации = Резервы.Организация
	|				И ДоступныеВидыЗапасов.ВидЗапасов = Резервы.ВидЗапасов
	|	ГДЕ
	|		Резервы.ВидЗапасов В (&КорВидыЗапасов) // продавец товара
	|		И ВЫРАЗИТЬ(Резервы.ВидЗапасов КАК Справочник.ВидыЗапасов).ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ИЛИ НЕ Резервы.КорВидЗапасов В (&КорВидыЗапасов)
	|
	|	) КАК Движения
	|
	|СГРУППИРОВАТЬ ПО
	|	КОНЕЦПЕРИОДА(Движения.Период, МЕСЯЦ),
	|	Движения.Организация,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ДатыПоступленияТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	ДатыПоступленияТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ДатыПоступленияТоваровОрганизаций.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ВТДатыПоступленияТоваровОрганизаций
	|ИЗ
	|	ВТОтборыОстатковОрганизаций КАК ВТОтборыОстатковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО ВТОтборыОстатковОрганизаций.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура
	|			И ВТОтборыОстатковОрганизаций.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика
	|			И ВТОтборыОстатковОрганизаций.Серия = ДатыПоступленияТоваровОрганизаций.Серия
	|			И ВТОтборыОстатковОрганизаций.Назначение = ДатыПоступленияТоваровОрганизаций.Назначение
	|			И ВТОтборыОстатковОрганизаций.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБРАТЬ &ТекстВТОстаткиПоМесяцам;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СгруппированныеОстатки.Период КАК Период,
	|	СгруппированныеОстатки.Организация КАК Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	МИНИМУМ(СгруппированныеОстатки.КоличествоПоРНПТОстаток) КАК КоличествоПоРНПТОстаток,
	|	СУММА(СгруппированныеОстатки.СчетчикПериодов) КАК СчетчикПериодов
	|ПОМЕСТИТЬ СгруппированныеОстатки
	|ИЗ
	|	&ТекстОстаткиПоМесяцам КАК СгруппированныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	СгруппированныеОстатки.Период,
	|	СгруппированныеОстатки.НомерПериода,
	|	СгруппированныеОстатки.Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	(МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) <> 0
	|	И СУММА(СгруппированныеОстатки.СчетчикПериодов) >= &ВсегоПериодов - СгруппированныеОстатки.НомерПериода + 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	СгруппированныеОстатки.Период КАК Период,
	|	СгруппированныеОстатки.Организация КАК Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
	|	ДатыПоступленияТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК Склад,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПередачи, // для заполнения ВозвратТоваровМеждуОрганизациями 
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатурыОтгрузки,  // для заполнения ВозвратТоваровМеждуОрганизациями
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,  // для заполнения ВозвратТоваровМеждуОрганизациями
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,  // для заполнения корректировки отчета давальцу
	|	0 КАК СуммаОстаток,
	|	СгруппированныеОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	СгруппированныеОстатки.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток,
	|	СгруппированныеОстатки.СчетчикПериодов КАК СчетчикПериодов
	|ПОМЕСТИТЬ ТекстТаблицаОстатков
	|ИЗ
	|	СгруппированныеОстатки КАК СгруппированныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО СгруппированныеОстатки.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И СгруппированныеОстатки.АналитикаУчетаНоменклатуры = ДатыПоступленияТоваровОрганизаций.АналитикаУчетаНоменклатуры
	|			И СгруппированныеОстатки.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО СгруппированныеОстатки.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка";
	
	ПараметрыДополнения = ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц();
	ЗаполнитьЗначенияСвойств(ПараметрыДополнения, ПараметрыЗаполненияВидовЗапасов);
	
	ОкончаниеПериодаКонтроля = Неопределено;
	ДокументОбъект.ДополнительныеСвойства.Свойство("ОкончаниеПериодаПомощникаИсправленияОстатков", ОкончаниеПериодаКонтроля);
	ПараметрыДополнения.ОкончаниеПериодаКонтроля = ОкончаниеПериодаКонтроля;
	
	ВсегоПериодов = ДополнитьЗапросКонтролемОстатковНаКаждыйМесяц(Запрос,
																	ТекстЗапроса,
																	ПараметрыДополнения,
																	МинимальнаяДатаОстатков,
																	ДатыОстатков);
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстТаблицаОстатков", "ТаблицаОстатковПоПериодам");
		Запрос.УстановитьПараметр("ПериодЗаполнения", МинимальнаяДатаОстатков);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстТаблицаОстатков", "ТаблицаОстатков");
		Запрос.УстановитьПараметр("ПериодЗаполнения", Дата(1,1,1));
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваровМеждуОрганизациями") Тогда
		Запрос.УстановитьПараметр("КорОрганизация", ПараметрыЗаполненияВидовЗапасов.ПриПодбореПоИнтеркампаниИсключатьОрганизации);
	Иначе
		Запрос.УстановитьПараметр("КорОрганизация", Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	
	ИмяТаблицыРезервыТоваровОрганизаций = ИмяТаблицыРезервыТоваровОрганизаций();
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство(ИмяТаблицыРезервыТоваровОрганизаций) Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства[ИмяТаблицыРезервыТоваровОрганизаций].Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТСторноРезервов") <> Неопределено Тогда
		ЗапросСторно = Новый Запрос("ВЫБРАТЬ * ИЗ ВТСторноРезервов");
		ЗапросСторно.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(СформированныеРезервы, ЗапросСторно.Выполнить().Выгрузить());
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТРезервыПоОрганизациямДляКонтроля") <> Неопределено Тогда
		ЗапросРезервыДругихОрганизаций = Новый Запрос("ВЫБРАТЬ * ИЗ ВТРезервыПоОрганизациямДляКонтроля");
		ЗапросРезервыДругихОрганизаций.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(СформированныеРезервы, ЗапросРезервыДругихОрганизаций.Выполнить().Выгрузить());
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(МинимальнаяДатаОстатков));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(МинимальнаяДатаОстатков));
	Запрос.УстановитьПараметр("ГраницаМесяца", Новый Граница(КонецМесяца(МинимальнаяДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаДня", Новый Граница(КонецДня(МинимальнаяДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаДокумента", МинимальнаяДатаОстатков);
	Запрос.УстановитьПараметр("ВычитатьДвиженияПоТоварамОрганизаций", ВычитатьДвиженияПоТоварамОрганизаций);
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	Запрос.УстановитьПараметр("КорВидыЗапасов", ПараметрыЗаполненияВидовЗапасов.КорВидыЗапасов);
	Запрос.УстановитьПараметр("ЭтоВыкупТоваров", Ложь);
	Запрос.Параметры.ЭтоВыкупТоваров = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВыкупПринятыхНаХранениеТоваров");
	Запрос.УстановитьПараметр("ДатаТекущихОстатков", ?(ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов,
														КонецМесяца(ТекущаяДатаСеанса()),
														Дата(1, 1, 1)));
	Запрос.УстановитьПараметр("ПодбиратьЗапасыРазныхПериодов", ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов);
	Запрос.УстановитьПараметр("ВсегоПериодов", ВсегоПериодов);
	Запрос.УстановитьПараметр("СторнируемыйДокумент", ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"УНИЧТОЖИТЬ ДвиженияСторнируемогоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДвиженияДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДатыПоступленияТоваровОрганизаций
	|";
	
	Запрос.Выполнить();
	
	ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций = ВсегоПериодов;
	
КонецПроцедуры

Процедура ТаблицаОстатковТоваровУПартнеров(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ОтрицательныеОстатки,
											ПараметрыЗаполненияВидовЗапасов = Неопределено)
	
	
	Если ПараметрыЗаполненияВидовЗапасов = Неопределено Тогда
		ПараметрыЗаполненияВидовЗапасов = ПараметрыЗаполненияВидовЗапасов();
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтОтборыОстатковОрганизаций.Организация                КАК Организация,
	|	ВтОтборыОстатковОрганизаций.Номенклатура               КАК Номенклатура,
	|	ВтОтборыОстатковОрганизаций.Характеристика             КАК Характеристика,
	|	ВтОтборыОстатковОрганизаций.Серия                      КАК Серия,
	|	(ВЫБОР КОГДА
	|		ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ)
	|		И (ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям, ЛОЖЬ))
	|		ТОГДА
	|			ВтОтборыОстатковОрганизаций.Серия
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ) КАК СерияДляОтбора,
	|	ВтОтборыОстатковОрганизаций.Назначение                 КАК Назначение,
	|	ВтОтборыОстатковОрганизаций.ВидЗапасов                 КАК ВидЗапасов,
	|	ВтОтборыОстатковОрганизаций.НомерГТД                   КАК НомерГТД,
	|	&Партнер                                               КАК Партнер,
	|	&Контрагент                                            КАК Контрагент,
	|	&Договор                                               КАК Договор
	|ПОМЕСТИТЬ ВТОтбор
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВтОтборыОстатковОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыУПартнеровОстатки.Организация,
	|	ТоварыУПартнеровОстатки.НомерГТД,
	|	ТоварыУПартнеровОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыУПартнеровОстатки.КоличествоОстаток,
	|	ВЫРАЗИТЬ(ТоварыУПартнеровОстатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ТоварыУПартнеровОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			,
	|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|				(ВЫБРАТЬ
	|					ВТОтбор.АналитикаУчетаНоменклатуры,
	|					ВТОтбор.Организация,
	|					ВТОтбор.ВидЗапасов
	|				ИЗ
	|					ВТОтбор КАК ВТОтбор)) КАК ТоварыУПартнеровОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ВидЗапасов.Организация КАК Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.ВидЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовПолучателя,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	ВложенныйЗапрос.Назначение КАК Назначение,
	|	ВложенныйЗапрос.НомерГТД,
	|	СУММА(&ТекстКоличествоПередано) КАК КоличествоОстаток,
	|	СУММА(&ТекстКоличествоПоРНПТПередано) КАК КоличествоПоРНПТОстаток,
	|	СУММА(0) КАК НаДатуКонтроля,
	|	СУММА(0) КАК НаДатуАктуальности,
	|	СУММА(0) КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|		ТоварыУПартнеровОстатки.НомерГТД КАК НомерГТД,
	|		ТоварыУПартнеровОстатки.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыУПартнеровОстатки.КоличествоОстаток КАК Передано,
	|		ТоварыУПартнеровОстатки.КоличествоПоРНПТОстаток КАК ПереданоПоРНПТ
	|	ИЗ
	|		ТоварыУПартнеровОстатки КАК ТоварыУПартнеровОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТОтбор.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|		ТоварыОрганизаций.НомерГТД,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ТоварыОрганизаций.Количество,
	|		ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
	|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = ВТОтбор.АналитикаУчетаНоменклатуры
	|				И ТоварыОрганизаций.Организация = ВТОтбор.Организация
	|				И ТоварыОрганизаций.ВидЗапасов = ВТОтбор.ВидЗапасов
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТОтбор.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|		ТоварыОрганизаций.НомерГТД,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТоварыОрганизаций.Количество
	|			ИНАЧЕ ТоварыОрганизаций.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
	|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = ВТОтбор.АналитикаУчетаНоменклатуры
	|				И ТоварыОрганизаций.Организация = ВТОтбор.Организация
	|				И ТоварыОрганизаций.ВидЗапасов = ВТОтбор.ВидЗапасов
	|				И ТоварыОрганизаций.НомерГТД = ВТОтбор.НомерГТД
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &СторнируемыйДокумент
	|		И НЕ ТоварыОрганизаций.Сторно
	|	
	|	) КАК ВложенныйЗапрос
	|
	|ГДЕ
	|	&ТекстВариантОстатков
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.ВидЗапасов.Организация,
	|	ВложенныйЗапрос.ВидЗапасов.ВидЗапасовВладельца,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыУПартнеровОстатки
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|//////////////////////////////
	|";
	
	ТекстУсловияСОтсечениемПустыхГТД = "ВложенныйЗапрос.Передано < 0
	|И (НЕ ВложенныйЗапрос.Номенклатура.ВестиУчетПоГТД
	|	ИЛИ ВложенныйЗапрос.Номенклатура.ВестиУчетПоГТД
	|	И ВложенныйЗапрос.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстВариантОстатков",
								?(ОтрицательныеОстатки, ТекстУсловияСОтсечениемПустыхГТД, "ВложенныйЗапрос.Передано > 0"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстКоличествоПередано",
								?(ОтрицательныеОстатки, "-ВложенныйЗапрос.Передано", "ВложенныйЗапрос.Передано"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстКоличествоПоРНПТПередано",
								?(ОтрицательныеОстатки, "-ВЫРАЗИТЬ(ВложенныйЗапрос.ПереданоПоРНПТ КАК ЧИСЛО(23, 11))",
								"ВЫРАЗИТЬ(ВложенныйЗапрос.ПереданоПоРНПТ КАК ЧИСЛО(23, 11))"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Партнер",				ДокументОбъект.Партнер);
	Запрос.УстановитьПараметр("Договор",				ДокументОбъект.Договор);
	Запрос.УстановитьПараметр("Контрагент",				ДокументОбъект.Контрагент);
	Запрос.УстановитьПараметр("Регистратор",			ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СторнируемыйДокумент",	ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ТаблицаОстатковДляСписанияРасхождений(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки, 
			ПараметрыЗаполненияВидовЗапасов = Неопределено)
	
	Если ПараметрыЗаполненияВидовЗапасов = Неопределено Тогда
		ПараметрыЗаполненияВидовЗапасов = ПараметрыЗаполненияВидовЗапасов();
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВтОтборыОстатковОрганизаций.Организация                КАК Организация,
		|	ВтОтборыОстатковОрганизаций.Номенклатура               КАК Номенклатура,
		|	ВтОтборыОстатковОрганизаций.Характеристика             КАК Характеристика,
		|	ВтОтборыОстатковОрганизаций.Серия                      КАК Серия,
		|	(ВЫБОР КОГДА
		|		ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ)
		|		И (ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров, ЛОЖЬ)
		|			ИЛИ ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям, ЛОЖЬ))
		|		ТОГДА
		|			ВтОтборыОстатковОрганизаций.Серия
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ) КАК СерияДляОтбора,
		|	ВтОтборыОстатковОрганизаций.Назначение                 КАК Назначение,
		|	ВтОтборыОстатковОрганизаций.ВидЗапасов                 КАК ВидЗапасов,
		|	ВтОтборыОстатковОрганизаций.НомерГТД                   КАК НомерГТД,
		|	&Партнер                                               КАК Партнер,
		|	&Контрагент                                            КАК Контрагент,
		|	&Договор                                               КАК Договор
		|ПОМЕСТИТЬ ВТОтбор
		|ИЗ
		|	ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВтОтборыОстатковОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация,
		|	ВидЗапасов,
		|	НомерГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизаций.Организация КАК Организация,
		|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
		|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
		|	ВТРегистраторыТоварыКПоступлению.ДокументОприходования КАК ДокументОприходования,
		|	СУММА(ВЫБОР
		|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ТоварыОрганизаций.Количество
		|		ИНАЧЕ -ТоварыОрганизаций.Количество
		|	КОНЕЦ) КАК КоличествоОстаток,
		|	СУММА(ВЫБОР
		|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|		ИНАЧЕ -ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|	КОНЕЦ) КАК КоличествоПоРНПТОстаток
		|ПОМЕСТИТЬ ТоварыУПартнеровОстатки
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
		|		ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = ВТОтбор.АналитикаУчетаНоменклатуры
		|			И ТоварыОрганизаций.Организация = ВТОтбор.Организация
		|			И ТоварыОрганизаций.ВидЗапасов = ВТОтбор.ВидЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторыТоварыКПоступлению КАК ВТРегистраторыТоварыКПоступлению
		|		ПО ВТРегистраторыТоварыКПоступлению.Регистратор = ТоварыОрганизаций.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
		|    ТоварыОрганизаций.Организация,
		|    ТоварыОрганизаций.НомерГТД,
		|    ТоварыОрганизаций.ВидЗапасов,
		|    ВТРегистраторыТоварыКПоступлению.ДокументОприходования
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация,
		|	ВидЗапасов,
		|	НомерГТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.ВидЗапасов.Организация КАК Организация,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
		|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ВложенныйЗапрос.ДокументОприходования КАК ДокументОприходования,
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.ВидЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовПолучателя,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
		|	ВложенныйЗапрос.Назначение КАК Назначение,
		|	ВложенныйЗапрос.НомерГТД,
		|	СУММА(&ТекстКоличествоПередано) КАК КоличествоОстаток,
		|	СУММА(&ТекстКоличествоПоРНПТПередано) КАК КоличествоПоРНПТОстаток,
		|	СУММА(0) КАК НаДатуКонтроля,
		|	СУММА(0) КАК НаДатуАктуальности,
		|	СУММА(0) КАК СуммаОстаток
		|ПОМЕСТИТЬ ТаблицаОстатков
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
		|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
		|		ТоварыУПартнеровОстатки.НомерГТД КАК НомерГТД,
		|		ТоварыУПартнеровОстатки.ВидЗапасов КАК ВидЗапасов,
		|		ТоварыУПартнеровОстатки.ДокументОприходования КАК ДокументОприходования,
		|		ТоварыУПартнеровОстатки.КоличествоОстаток КАК Передано,
		|		ТоварыУПартнеровОстатки.КоличествоПоРНПТОстаток КАК ПереданоПоРНПТ
		|	ИЗ
		|		ТоварыУПартнеровОстатки КАК ТоварыУПартнеровОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТОтбор.АналитикаУчетаНоменклатуры,
		|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
		|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
		|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
		|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
		|		ТоварыОрганизаций.НомерГТД,
		|		ТоварыОрганизаций.ВидЗапасов,
		|		ВТРегистраторыТоварыКПоступлению.ДокументОприходования КАК ДокументОприходования,
		|		ВЫБОР
		|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -ТоварыОрганизаций.Количество
		|			ИНАЧЕ ТоварыОрганизаций.Количество
		|		КОНЕЦ КАК Количество,
		|		ВЫБОР
		|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|		КОНЕЦ КАК КоличествоПоРНПТ
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
		|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = ВТОтбор.АналитикаУчетаНоменклатуры
		|				И ТоварыОрганизаций.Организация = ВТОтбор.Организация
		|				И ТоварыОрганизаций.ВидЗапасов = ВТОтбор.ВидЗапасов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторыТоварыКПоступлению КАК ВТРегистраторыТоварыКПоступлению
		|			ПО ВТРегистраторыТоварыКПоступлению.Регистратор = ТоварыОрганизаций.Регистратор
		|	ГДЕ
		|		ТоварыОрганизаций.Регистратор = &Регистратор
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТОтбор.АналитикаУчетаНоменклатуры,
		|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
		|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
		|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
		|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
		|		ТоварыОрганизаций.НомерГТД,
		|		ТоварыОрганизаций.ВидЗапасов,
		|		ВТРегистраторыТоварыКПоступлению.ДокументОприходования КАК ДокументОприходования,
		|		ВЫБОР
		|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -ТоварыОрганизаций.Количество
		|			ИНАЧЕ ТоварыОрганизаций.Количество
		|		КОНЕЦ КАК Количество,
		|		ВЫБОР
		|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
		|		КОНЕЦ КАК КоличествоПоРНПТ
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
		|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = ВТОтбор.АналитикаУчетаНоменклатуры
		|				И ТоварыОрганизаций.Организация = ВТОтбор.Организация
		|				И ТоварыОрганизаций.ВидЗапасов = ВТОтбор.ВидЗапасов
		|				И ТоварыОрганизаций.НомерГТД = ВТОтбор.НомерГТД
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторыТоварыКПоступлению КАК ВТРегистраторыТоварыКПоступлению
		|			ПО ВТРегистраторыТоварыКПоступлению.Регистратор = ТоварыОрганизаций.Регистратор
		|	ГДЕ
		|		ТоварыОрганизаций.Регистратор = &СторнируемыйДокумент
		|		И НЕ ТоварыОрганизаций.Сторно
		|	
		|	) КАК ВложенныйЗапрос
		|
		|ГДЕ
		|	&ТекстВариантОстатков
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ВидЗапасов.Организация,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия,
		|	ВложенныйЗапрос.ДокументОприходования,
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.ВидЗапасов.ВидЗапасовВладельца,
		|	ВложенныйЗапрос.Назначение,
		|	ВложенныйЗапрос.НомерГТД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОтбор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварыУПартнеровОстатки
		|";
		
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
	ТекстУсловияСОтсечениемПустыхГТД = "ВложенныйЗапрос.Передано < 0
		|И (НЕ ВложенныйЗапрос.Номенклатура.ВестиУчетПоГТД
		|	ИЛИ ВложенныйЗапрос.Номенклатура.ВестиУчетПоГТД
		|	И ВложенныйЗапрос.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстВариантОстатков",
		?(ОтрицательныеОстатки, ТекстУсловияСОтсечениемПустыхГТД, "ВложенныйЗапрос.Передано > 0"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстКоличествоПередано",
		?(ОтрицательныеОстатки, "-ВложенныйЗапрос.Передано", "ВложенныйЗапрос.Передано"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстКоличествоПоРНПТПередано",
		?(ОтрицательныеОстатки, "-ВЫРАЗИТЬ(ВложенныйЗапрос.ПереданоПоРНПТ КАК ЧИСЛО(23, 11))",
		"ВЫРАЗИТЬ(ВложенныйЗапрос.ПереданоПоРНПТ КАК ЧИСЛО(23, 11))"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Партнер",			  ДокументОбъект.Партнер);
	Запрос.УстановитьПараметр("Договор",			  ДокументОбъект.Договор);
	Запрос.УстановитьПараметр("Контрагент",			  ДокументОбъект.Контрагент);
	Запрос.УстановитьПараметр("Регистратор",		  ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СторнируемыйДокумент", ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков комиссионных товаров интеркампани.
//
Процедура ТаблицаОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект,
														МенеджерВременныхТаблиц,
														ПараметрыЗаполненияВидовЗапасов)
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Организация					КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасовПолучателя			КАК ВидЗапасовПолучателя,
	|	ТаблицаТовары.НомерГТД						КАК НомерГТД,
	|	ТаблицаТовары.ДокументРеализации			КАК ДокументРеализации,
	|	ТаблицаТовары.ДатаСчетаФактуры				КАК ДатаСчетаФактуры,
	|	ТаблицаТовары.НомерСчетаФактуры				КАК НомерСчетаФактуры,
	|	ТаблицаТовары.Покупатель					КАК Покупатель,
	|	ТаблицаТовары.Знак							КАК Знак,
	|	СУММА(ТаблицаТовары.Количество)				КАК Количество,
	|	СУММА(ТаблицаТовары.КоличествоПоРНПТ)		КАК КоличествоПоРНПТ,
	|	СУММА(ТаблицаТовары.СуммаВыручки)			КАК СуммаВыручки
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		Отборы.Организация								КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов					КАК ВидЗапасов,
	|		НЕОПРЕДЕЛЕНО									КАК ВидЗапасовПолучателя,
	|		ТоварыКОформлению.НомерГТД						КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА ТоварыКОформлению.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|						И (ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.КорректировкаРеализации).ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
	|							ИЛИ ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.КорректировкаРеализации).ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.ВозвратТоваровОтКлиента).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера)
	|				ТОГДА ТоварыКОформлению.Регистратор
	|			КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL
	|					И НЕ Возврат.ПокупательНеПлательщикНДС
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ТоварыКОформлению.ДокументРеализации
	|		КОНЕЦ											КАК ДокументРеализации,
	|		ТоварыКОформлению.ДатаСчетаФактуры				КАК ДатаСчетаФактуры,
	|		ТоварыКОформлению.НомерСчетаФактуры				КАК НомерСчетаФактуры,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|				ТОГДА ДанныеРеализации.Контрагент
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|				ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|				ТОГДА Возврат.Контрагент
	|			КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|			ИНАЧЕ ТоварыКОформлению.Покупатель
	|		КОНЕЦ											КАК Покупатель,
	|		ВЫБОР
	|			КОГДА (ВЫБОР
	|						КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|							ТОГДА ВЫБОР
	|									КОГДА &ЭтоОтчетОСписании
	|										ТОГДА ТоварыКОформлению.КоличествоСписано
	|									ИНАЧЕ ТоварыКОформлению.Количество
	|								КОНЕЦ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА &ЭтоОтчетОСписании
	|									ТОГДА -ТоварыКОформлению.КоличествоСписано
	|								ИНАЧЕ -ТоварыКОформлению.Количество
	|							КОНЕЦ
	|					КОНЕЦ) >= 0
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ											КАК Знак,
	|		СУММА(ВЫБОР
	|				КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ВЫБОР
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА ТоварыКОформлению.КоличествоСписано
	|							ИНАЧЕ ТоварыКОформлению.Количество
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА -ТоварыКОформлению.КоличествоСписано
	|						ИНАЧЕ -ТоварыКОформлению.Количество
	|					КОНЕЦ
	|			КОНЕЦ)										КАК Количество,
	|		СУММА(ВЫБОР
	|				КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ВЫБОР
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоСписаноКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|							ИНАЧЕ ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА -ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоСписаноКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|						ИНАЧЕ -ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|					КОНЕЦ
	|			КОНЕЦ) КАК КоличествоПоРНПТ,
	|		СУММА(ВЫБОР
	|				КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ТоварыКОформлению.СуммаВыручки
	|				ИНАЧЕ -ТоварыКОформлению.СуммаВыручки
	|			КОНЕЦ)										КАК СуммаВыручки
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК Отборы
	|			ПО Отборы.АналитикаУчетаНоменклатуры = ТоварыКОформлению.АналитикаУчетаНоменклатуры
	|				И Отборы.ВидЗапасов = ТоварыКОформлению.ВидЗапасов
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК Возврат
	|			ПО Возврат.Ссылка = ТоварыКОформлению.Регистратор
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДанныеРеализации
	|			ПО ТоварыКОформлению.ДокументРеализации = ДанныеРеализации.Ссылка
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваров
	|			ПО ТоварыКОформлению.ДокументРеализации = ПередачаТоваров.Ссылка
	|	
	|	ГДЕ
	|		ТоварыКОформлению.Активность
	|		И ТоварыКОформлению.Регистратор <> &ТекущийОтчет
	|		И ТоварыКОформлению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыКОформлению.ДатаСчетаФактуры,
	|		ТоварыКОформлению.НомерСчетаФактуры,
	|		ВЫБОР
	|			КОГДА ТоварыКОформлению.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|						И (ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.КорректировкаРеализации).ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
	|							ИЛИ ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.КорректировкаРеализации).ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.ВозвратТоваровОтКлиента).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера)
	|				ТОГДА ТоварыКОформлению.Регистратор
	|			КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL
	|					И НЕ Возврат.ПокупательНеПлательщикНДС
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ТоварыКОформлению.ДокументРеализации
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|				ТОГДА ДанныеРеализации.Контрагент
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|				ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|				ТОГДА Возврат.Контрагент
	|			КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|			ИНАЧЕ ТоварыКОформлению.Покупатель
	|		КОНЕЦ,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры,
	|		Отборы.Организация,
	|		ТоварыКОформлению.ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД,
	|		ВЫБОР
	|			КОГДА (ВЫБОР
	|						КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|							ТОГДА ВЫБОР
	|									КОГДА &ЭтоОтчетОСписании
	|										ТОГДА ТоварыКОформлению.КоличествоСписано
	|									ИНАЧЕ ТоварыКОформлению.Количество
	|								КОНЕЦ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА &ЭтоОтчетОСписании
	|									ТОГДА -ТоварыКОформлению.КоличествоСписано
	|								ИНАЧЕ -ТоварыКОформлению.Количество
	|							КОНЕЦ
	|					КОНЕЦ) >= 0
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВЫБОР
	|				КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ВЫБОР
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА ТоварыКОформлению.КоличествоСписано
	|							ИНАЧЕ ТоварыКОформлению.Количество
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА -ТоварыКОформлению.КоличествоСписано
	|						ИНАЧЕ -ТоварыКОформлению.Количество
	|					КОНЕЦ
	|			КОНЕЦ) <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Отборы.Организация								КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов					КАК ВидЗапасов,
	|		НЕОПРЕДЕЛЕНО									КАК ВидЗапасовПолучателя,
	|		ТоварыКОформлению.НомерГТД						КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА ТоварыКОформлению.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|						И (ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.КорректировкаРеализации).ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
	|							ИЛИ ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.КорректировкаРеализации).ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.ВозвратТоваровОтКлиента).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера)
	|				ТОГДА ТоварыКОформлению.Регистратор
	|			КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL
	|					И НЕ Возврат.ПокупательНеПлательщикНДС
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ТоварыКОформлению.ДокументРеализации
	|		КОНЕЦ											КАК ДокументРеализации,
	|		ТоварыКОформлению.ДатаСчетаФактуры				КАК ДатаСчетаФактуры,
	|		ТоварыКОформлению.НомерСчетаФактуры				КАК НомерСчетаФактуры,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|				ТОГДА ДанныеРеализации.Контрагент
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|				ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|				ТОГДА Возврат.Контрагент
	|			КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|			ИНАЧЕ ТоварыКОформлению.Покупатель
	|		КОНЕЦ											КАК Покупатель,
	|		ВЫБОР
	|			КОГДА (ВЫБОР
	|						КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|							ТОГДА ВЫБОР
	|									КОГДА &ЭтоОтчетОСписании
	|										ТОГДА -ТоварыКОформлению.КоличествоСписано
	|									ИНАЧЕ -ТоварыКОформлению.Количество
	|								КОНЕЦ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА &ЭтоОтчетОСписании
	|									ТОГДА ТоварыКОформлению.КоличествоСписано
	|								ИНАЧЕ ТоварыКОформлению.Количество
	|							КОНЕЦ
	|					КОНЕЦ) >= 0
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ											КАК Знак,
	|		СУММА(ВЫБОР
	|				КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ВЫБОР
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА -ТоварыКОформлению.КоличествоСписано
	|							ИНАЧЕ -ТоварыКОформлению.Количество
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА ТоварыКОформлению.КоличествоСписано
	|						ИНАЧЕ ТоварыКОформлению.Количество
	|					КОНЕЦ
	|			КОНЕЦ)										КАК Количество,
	|		СУММА(ВЫБОР
	|				КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ВЫБОР
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА -ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоСписаноКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|							ИНАЧЕ -ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоСписаноКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|						ИНАЧЕ ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|					КОНЕЦ
	|			КОНЕЦ) КАК КоличествоПоРНПТ,
	|		СУММА(ВЫБОР
	|				КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА -ТоварыКОформлению.СуммаВыручки
	|				ИНАЧЕ ТоварыКОформлению.СуммаВыручки
	|			КОНЕЦ)										КАК СуммаВыручки
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК Отборы
	|			ПО Отборы.АналитикаУчетаНоменклатуры = ТоварыКОформлению.АналитикаУчетаНоменклатуры
	|				И Отборы.ВидЗапасов = ТоварыКОформлению.ВидЗапасов
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК Возврат
	|			ПО Возврат.Ссылка = ТоварыКОформлению.Регистратор
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДанныеРеализации
	|			ПО ТоварыКОформлению.ДокументРеализации = ДанныеРеализации.Ссылка
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваров
	|			ПО ТоварыКОформлению.ДокументРеализации = ПередачаТоваров.Ссылка
	|	
	|	ГДЕ
	|		НЕ ТоварыКОформлению.Сторно
	|		И ТоварыКОформлению.Активность
	|		И ТоварыКОформлению.Регистратор = &СторнируемыйДокумент
	|		И ТоварыКОформлению.Период <= &КонецПериода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыКОформлению.ДатаСчетаФактуры,
	|		ТоварыКОформлению.НомерСчетаФактуры,
	|		ВЫБОР
	|			КОГДА ТоварыКОформлению.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|						И (ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.КорректировкаРеализации).ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
	|							ИЛИ ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.КорректировкаРеализации).ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОформлению.Регистратор КАК Документ.ВозвратТоваровОтКлиента).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера)
	|				ТОГДА ТоварыКОформлению.Регистратор
	|			КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL
	|					И НЕ Возврат.ПокупательНеПлательщикНДС
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ТоварыКОформлению.ДокументРеализации
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|				ТОГДА ДанныеРеализации.Контрагент
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|				ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|				ТОГДА Возврат.Контрагент
	|			КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|			ИНАЧЕ ТоварыКОформлению.Покупатель
	|		КОНЕЦ,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры,
	|		Отборы.Организация,
	|		ТоварыКОформлению.ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД,
	|		ВЫБОР
	|			КОГДА (ВЫБОР
	|						КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|							ТОГДА ВЫБОР
	|									КОГДА &ЭтоОтчетОСписании
	|										ТОГДА -ТоварыКОформлению.КоличествоСписано
	|									ИНАЧЕ -ТоварыКОформлению.Количество
	|								КОНЕЦ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА &ЭтоОтчетОСписании
	|									ТОГДА ТоварыКОформлению.КоличествоСписано
	|								ИНАЧЕ ТоварыКОформлению.Количество
	|							КОНЕЦ
	|					КОНЕЦ) >= 0
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВЫБОР
	|				КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ВЫБОР
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА -ТоварыКОформлению.КоличествоСписано
	|							ИНАЧЕ -ТоварыКОформлению.Количество
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА ТоварыКОформлению.КоличествоСписано
	|						ИНАЧЕ ТоварыКОформлению.Количество
	|					КОНЕЦ
	|			КОНЕЦ) <> 0
	|	
	|	) КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасовПолучателя,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.ДокументРеализации,
	|	ТаблицаТовары.ДатаСчетаФактуры,
	|	ТаблицаТовары.НомерСчетаФактуры,
	|	ТаблицаТовары.Покупатель,
	|	ТаблицаТовары.Знак
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Граница = Новый Граница(ДокументОбъект.КонецПериода, ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Граница",				Граница);
	Запрос.УстановитьПараметр("НачалоПериода",			ДокументОбъект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",			КонецМесяца(ДокументОбъект.КонецПериода));
	Запрос.УстановитьПараметр("Организация",			ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТекущийОтчет",			ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ЭтоОтчетОСписании",		ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациямиОСписании"));
	Запрос.УстановитьПараметр("СторнируемыйДокумент",	ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент);
	
	Запрос.Выполнить();
	
	УчетНДСУП.ДополнитьТаблицуДаннымиСчетовФактурВыданныхПокупателям(МенеджерВременныхТаблиц, "ТаблицаОстатков");
	
КонецПроцедуры

// Процедура формирует таблицу остатков товаров, переданных на комиссию.
//
Процедура ТаблицаОстатковТоваровПереданныхНаКомиссию(ДокументОбъект,
													ПараметрыЗаполненияВидовЗапасов,
													МенеджерВременныхТаблиц,
													ДатаОстатков)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВтОтборПоНоменклатуре
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК Отборы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Отборы.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТОтборПоАналитикамПартнера
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Товары.Номенклатура = Аналитика.Номенклатура
	|		И Товары.Характеристика = Аналитика.Характеристика
	|		И Товары.Назначение = Аналитика.Назначение
	|		И Аналитика.МестоХранения = &Партнер
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения КАК СкладОтгрузки,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	ВЫБОР
	|		КОГДА &ЭтоОтчетКомиссионера
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов
	|		КОГДА ЕСТЬNULL(ВидыЗапасов.РеализацияЗапасовДругойОрганизации, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизаций.Знак,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ
	|		Товары.Организация КАК Организация,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		Товары.КоличествоОстаток КАК Количество,
	|		ВЫБОР
	|			КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				И НАЧАЛОПЕРИОДА(ДатыПередачиТоваровНаКомиссию.ДатаПередачи, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА ВЫРАЗИТЬ(Товары.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КоличествоПоРНПТ,
	|		ВЫБОР
	|			КОГДА Товары.КоличествоОстаток < 1
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&ГраницаМесяца,
	|			АналитикаУчетаНоменклатуры В 
	|				(ВЫБРАТЬ
	|					Отбор.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ВТОтборПоАналитикамПартнера КАК Отбор)
	|				И Соглашение = &Соглашение
	|				И Организация = &Организация
	|		) КАК Товары
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО Товары.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И Товары.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И Товары.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И Товары.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И Товары.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Товары.Организация КАК Организация,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Товары.Количество
	|			ИНАЧЕ -Товары.Количество
	|		КОНЕЦ КАК Количество,
	|		-(ВЫБОР
	|			КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				И НАЧАЛОПЕРИОДА(ДатыПередачиТоваровНаКомиссию.ДатаПередачи, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА ВЫБОР
	|					КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|						ТОГДА -ВЫРАЗИТЬ(Товары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|					ИНАЧЕ
	|						ВЫРАЗИТЬ(Товары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПоРНПТ,
	|		ВЫБОР
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ВЫБОР
	|						КОГДА Товары.Количество >= 0
	|							ТОГДА 1
	|						ИНАЧЕ -1
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Товары.Количество >= 0
	|						ТОГДА -1
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО Товары.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И Товары.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И Товары.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И Товары.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И Товары.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	
	|	ГДЕ
	|		Товары.Период <= &КонецПериода
	|		И Товары.Регистратор = &Ссылка
	|		И Товары.Активность
	|		И Товары.Организация = &Организация
	|		И Товары.АналитикаУчетаНоменклатуры.МестоХранения = &Партнер
	|		И Товары.Соглашение = &Соглашение
	|		И Товары.АналитикаУчетаНоменклатуры В
	|				(ВЫБРАТЬ
	|					Отбор.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ВТОтборПоАналитикамПартнера КАК Отбор)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Товары.Организация КАК Организация,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Товары.Количество
	|			ИНАЧЕ -Товары.Количество
	|		КОНЕЦ КАК Количество,
	|		0 КАК КоличествоПоРНПТ,
	|		ВЫБОР
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ВЫБОР
	|						КОГДА Товары.Количество >= 0
	|							ТОГДА 1
	|						ИНАЧЕ -1
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Товары.Количество >= 0
	|						ТОГДА -1
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО Товары.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И Товары.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И Товары.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И Товары.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И Товары.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	
	|	ГДЕ
	|		НЕ Товары.Сторно
	|		И Товары.Активность
	|		И Товары.Период <= &КонецПериода
	|		И Товары.Соглашение = &Соглашение
	|		И Товары.Организация = &Организация
	|		И Товары.Регистратор = &СторнируемыйДокумент
	|		И Товары.АналитикаУчетаНоменклатуры.МестоХранения = &Партнер
	|		И Товары.АналитикаУчетаНоменклатуры В
	|				(ВЫБРАТЬ
	|					Отбор.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ВТОтборПоАналитикамПартнера КАК Отбор)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Возвратная тара, списанная документом
	|		Движения.ВидЗапасов.Организация КАК Организация,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Движения.ВидЗапасов КАК ВидЗапасов,
	|		Движения.НомерГТД КАК НомерГТД,
	|		Движения.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					И НАЧАЛОПЕРИОДА(Движения.ДокументПередачи.Дата, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА ВЫРАЗИТЬ(Движения.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КоличествоПоРНПТ,
	|		0 КАК Знак,
	|		Движения.ДокументПередачи.Дата КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара КАК Движения
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Движения.Номенклатура = Аналитика.Номенклатура
	|			И Движения.Характеристика = Аналитика.Характеристика
	|			И Движения.Партнер = Аналитика.МестоХранения
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ГДЕ
	|		Движения.Регистратор = &Ссылка
	|		И Движения.Активность
	|		И Движения.ВидЗапасов.Организация = &Организация
	|		И Движения.Партнер = &Партнер
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Переданная возвратная тара
	|		Остатки.ВидЗапасов.Организация КАК Организация,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК Количество,
	|		ВЫБОР
	|			КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				И НАЧАЛОПЕРИОДА(Остатки.ДокументПередачи.Дата, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КоличествоПоРНПТ,
	|		0 КАК Знак,
	|		Остатки.ДокументПередачи.Дата КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(&ГраницаМесяца,
	|			ВидЗапасов.Организация = &Организация
	|			И Партнер = &Партнер
	|			И (Номенклатура, Характеристика) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВтОтборПоНоменклатуре.Номенклатура,
	|					ВтОтборПоНоменклатуре.Характеристика
	|				ИЗ
	|					ВтОтборПоНоменклатуре КАК ВтОтборПоНоменклатуре
	|				)
	|		) КАК Остатки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Остатки.Номенклатура = Аналитика.Номенклатура
	|			И Остатки.Характеристика = Аналитика.Характеристика
	|			И Остатки.Партнер = Аналитика.МестоХранения
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		ГДЕ
	|			&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|
	|	) КАК ТоварыОрганизаций
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ТоварыОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения,
	|	ВЫБОР
	|		КОГДА &ЭтоОтчетКомиссионера
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов
	|		КОГДА ЕСТЬNULL(ВидыЗапасов.РеализацияЗапасовДругойОрганизации, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.Знак
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОтборПоНоменклатуре
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтборПоАналитикамПартнера
	|";

	Запрос.УстановитьПараметр("ГраницаМесяца",	Новый Граница(КонецМесяца(ДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачалоПериода",	НачалоМесяца(ДатаОстатков));
	Запрос.УстановитьПараметр("КонецПериода",	КонецМесяца(ДатаОстатков));
	Запрос.УстановитьПараметр("Ссылка",			ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Организация",	ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",
								?(ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента"),
									ДокументОбъект.ХозяйственнаяОперация,
									Неопределено));
	Запрос.УстановитьПараметр("ЭтоОтчетКомиссионера",
								ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионера")
								Или ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании"));
	
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями")
		Или ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациямиОСписании") Тогда
		
		Запрос.УстановитьПараметр("Партнер",	ДокументОбъект.Комиссионер);
		Запрос.УстановитьПараметр("Соглашение", Справочники.СоглашенияСКлиентами.ПустаяСсылка());
		
	Иначе
		Запрос.УстановитьПараметр("Партнер",	ДокументОбъект.Партнер);
		Запрос.УстановитьПараметр("Соглашение",	ДокументОбъект.Соглашение);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СторнируемыйДокумент", ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков реализованных товаров.
//
Процедура ТаблицаОстатковРеализованныхТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваров.СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры,
	|	&ТекстПоляТаблицаТоваровНоменклатураПартнера_ КАК НоменклатураПартнера	
	|ПОМЕСТИТЬ СгруппированнаяТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.ДокументРеализации КАК Ссылка,
	|	КлючиАналитикиУчетаНоменклатуры.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ТаблицаТоваровСКлючамиПоВсемСкладам
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = КлючиАналитикиУчетаНоменклатуры.Номенклатура
	|			И ТаблицаТоваров.Характеристика = КлючиАналитикиУчетаНоменклатуры.Характеристика
	|			И ТаблицаТоваров.Серия = КлючиАналитикиУчетаНоменклатуры.Серия
	|ГДЕ
	|	ТаблицаТоваров.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиВозврата.ИзДокументаПродажи)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ТЧВидыЗапасов.Ссылка КАК ДокументРеализации,
	|	ТЧВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТЧВидыЗапасов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ТЧВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ЭтоКорректировкаРеализации
	|			ТОГДА ТЧВидыЗапасов.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС
	|ПОМЕСТИТЬ РеализованныеТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТЧВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
	|			И РеестрДокументов.Проведен
	|			И НЕ РеестрДокументов.ДополнительнаяЗапись
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка.Проведен
	|	И РеестрДокументов.Ссылка ЕСТЬ NULL
	|	И (ТЧВидыЗапасов.Ссылка, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И (ТЧВидыЗапасов.ВидЗапасов, ИСТИНА) В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов, ИСТИНА
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТЧВидыЗапасов.Ссылка,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	ТЧВидыЗапасов.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ТЧВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	0 КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТЧВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
	|			И РеестрДокументов.Проведен
	|			И НЕ РеестрДокументов.ДополнительнаяЗапись
	|
	|ГДЕ
	|	(ТЧВидыЗапасов.Ссылка, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И РеестрДокументов.Ссылка ЕСТЬ NULL
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
	|	И (ТЧВидыЗапасов.ВидЗапасов, ИСТИНА) В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов, ИСТИНА
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки,
	|	ТЧВидыЗапасов.Ссылка,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	-ТЧВидыЗапасов.Количество,
	|	0 КАК КоличествоПоРНПТ,
	|	0 КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах.ВидыЗапасов КАК ТЧВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|ГДЕ
	|	(ТЧВидыЗапасов.Ссылка, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
	|	И (ТЧВидыЗапасов.ВидЗапасов, ИСТИНА) В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов, ИСТИНА
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТЧВидыЗапасов.Ссылка.ДокументОснование,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ТЧВидыЗапасов.КорВидЗапасов КАК КорВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	ВЫБОР
	|		КОГДА НЕ ТЧВидыЗапасов.НаДоходыРасходы
	|				ИЛИ &ЭтоКорректировкаРеализации
	|			ТОГДА ТЧВидыЗапасов.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ ТЧВидыЗапасов.НаДоходыРасходы
	|				ИЛИ &ЭтоКорректировкаРеализации
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|							ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ТЧВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ЭтоКорректировкаРеализации
	|			ТОГДА ТЧВидыЗапасов.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовСписание КАК ТЧВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ТЧВидыЗапасов.Ссылка.ДокументОснование = РеализацияТоваровУслуг.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
	|			И РеестрДокументов.Проведен
	|			И НЕ РеестрДокументов.ДополнительнаяЗапись
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка <> &Ссылка
	|	И РеестрДокументов.Ссылка ЕСТЬ NULL
	|	И (ТЧВидыЗапасов.Ссылка.ДокументОснование, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И (ТЧВидыЗапасов.ВидЗапасов, ИСТИНА) В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов, ИСТИНА
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТЧВидыЗапасов.Ссылка.ДокументОснование,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ТЧВидыЗапасов.КорВидЗапасов КАК КорВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	ВЫБОР
	|		КОГДА НЕ ТЧВидыЗапасов.НаДоходыРасходы
	|				ИЛИ &ЭтоКорректировкаРеализации
	|			ТОГДА -ТЧВидыЗапасов.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ ТЧВидыЗапасов.НаДоходыРасходы
	|				ИЛИ &ЭтоКорректировкаРеализации
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|							ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|						ТОГДА 0
	|					ИНАЧЕ -ВЫРАЗИТЬ(ТЧВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ЭтоКорректировкаРеализации
	|			ТОГДА -ТЧВидыЗапасов.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовОприходование КАК ТЧВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ТЧВидыЗапасов.Ссылка.ДокументОснование = РеализацияТоваровУслуг.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
	|			И РеестрДокументов.Проведен
	|			И НЕ РеестрДокументов.ДополнительнаяЗапись
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка <> &Ссылка
	|	И РеестрДокументов.Ссылка ЕСТЬ NULL
	|	И (ТЧВидыЗапасов.Ссылка.ДокументОснование, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И (ТЧВидыЗапасов.ВидЗапасов, ИСТИНА) В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов, ИСТИНА
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТЧВидыЗапасов.Ссылка.ДокументОснование,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА &ЭтоКорректировкаРеализации
	|			ТОГДА ТЧВидыЗапасов.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовКорректировкаВыручки КАК ТЧВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ТЧВидыЗапасов.Ссылка.ДокументОснование = РеализацияТоваровУслуг.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
	|			И РеестрДокументов.Проведен
	|			И НЕ РеестрДокументов.ДополнительнаяЗапись
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка <> &Ссылка
	|	И РеестрДокументов.Ссылка ЕСТЬ NULL
	|	И (ТЧВидыЗапасов.Ссылка.ДокументОснование, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И (ТЧВидыЗапасов.ВидЗапасов, ИСТИНА) В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов, ИСТИНА
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки,
	|	ТЧВидыЗапасов.ДокументРеализации,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	-ТЧВидыЗапасов.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ -ВЫРАЗИТЬ(ТЧВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	0 КАК СуммаНДС
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК ТЧВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
	|			И РеестрДокументов.Проведен
	|			И НЕ РеестрДокументов.ДополнительнаяЗапись
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка <> &Ссылка
	|	И РеестрДокументов.Ссылка ЕСТЬ NULL
	|	И (ТЧВидыЗапасов.ДокументРеализации, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И (ТЧВидыЗапасов.ВидЗапасов, ИСТИНА) В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов, ИСТИНА
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ТЧВидыЗапасов.Ссылка КАК ДокументРеализации,
	|	ТЧВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТЧВидыЗапасов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ТЧВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ЭтоКорректировкаРеализации
	|			ТОГДА ТЧВидыЗапасов.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС
	|ИЗ
	|	Документ.АктВыполненныхРабот.ВидыЗапасов КАК ТЧВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
	|			И РеестрДокументов.Проведен
	|			И НЕ РеестрДокументов.ДополнительнаяЗапись
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка.Проведен
	|	И РеестрДокументов.Ссылка ЕСТЬ NULL
	|	И (ТЧВидыЗапасов.Ссылка, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И (ТЧВидыЗапасов.ВидЗапасов, ИСТИНА) В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов, ИСТИНА
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатурыОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.Склад КАК Склад,
	|	СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Номенклатура КАК Номенклатура,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Характеристика КАК Характеристика,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Серия КАК Серия,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения КАК СкладОтгрузки,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Назначение КАК Назначение,
	|	РеализованныеТовары.ДокументРеализации КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	СгруппированнаяТаблицаТоваров.НоменклатураПартнера КАК НоменклатураПартнера,	
	|	ВЫБОР
	|		КОГДА РеализованныеТовары.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РеализованныеТовары.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА РеализованныеТовары.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА РеализованныеТовары.ВидЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ РеализованныеТовары.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасовВладельца,
	|	РеализованныеТовары.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	РеализованныеТовары.КорВидЗапасов КАК КорВидЗапасов,
	|	РеализованныеТовары.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ДатаПоступления,
	|	СУММА(РеализованныеТовары.Количество) КАК КоличествоОстаток,
	|	СУММА(ВЫРАЗИТЬ(РеализованныеТовары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))) КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток,
	|	СУММА(РеализованныеТовары.СуммаНДС) КАК СуммаНДСОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	РеализованныеТовары КАК РеализованныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК СгруппированнаяТаблицаТоваров
	|		ПО РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Номенклатура = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура
	|			И РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Характеристика = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика
	|			И РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Серия = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия
	|			И ВЫБОР КОГДА &ЭтоКорректировкаРеализации
	|				ТОГДА РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения
	|			ИНАЧЕ
	|				ИСТИНА
	|			КОНЕЦ
	|			И РеализованныеТовары.ДокументРеализации = СгруппированнаяТаблицаТоваров.ДокументРеализации
	|			И (
	|				(&ЭтоКорректировкаРеализации
	|				 И РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Назначение = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение)
	|				ИЛИ
	|				(НЕ &ЭтоКорректировкаРеализации
	|				 И (РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Назначение = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение
	|					ИЛИ СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|					ИЛИ РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)))
	|				)
	|			И (СгруппированнаяТаблицаТоваров.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиВозврата.ИзДокументаПродажи))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанныхДокумента.Склад,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Номенклатура,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Серия,
	|	СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Назначение,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения,
	|	РеализованныеТовары.НомерГТД,
	|	ТаблицаДанныхДокумента.Организация,
	|	РеализованныеТовары.ДокументРеализации,
	|	СгруппированнаяТаблицаТоваров.НоменклатураПартнера,	
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Характеристика,
	|	ВЫБОР
	|		КОГДА РеализованныеТовары.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РеализованныеТовары.ВидЗапасов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РеализованныеТовары.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА РеализованныеТовары.ВидЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ РеализованныеТовары.ВидЗапасов
	|	КОНЕЦ,
	|	РеализованныеТовары.ВидЗапасов,
	|	РеализованныеТовары.КорВидЗапасов
	|
	|ИМЕЮЩИЕ
	|	СУММА(РеализованныеТовары.Количество) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация,
	|	ТаблицаДанныхДокумента.Склад,
	|	СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Серия,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Назначение,
	|	ТаблицаВидыЗапасов.ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	СгруппированнаяТаблицаТоваров.НоменклатураПартнера,	
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.КорВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаВидыЗапасов.Количество,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)),
	|	0,
	|	ТаблицаВидыЗапасов.СуммаНДС
	|ИЗ
	|	СгруппированнаяТаблицаТоваров КАК СгруппированнаяТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ПО СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры = ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|			И (СгруппированнаяТаблицаТоваров.СпособОпределенияСебестоимости <> ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиВозврата.ИзДокументаПродажи))
	|			И (ТаблицаВидыЗапасов.СпособОпределенияСебестоимости <> ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиВозврата.ИзДокументаПродажи))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО (ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РеализованныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СгруппированнаяТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваровСКлючамиПоВсемСкладам";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ЭтоКорректировкаРеализации",
								ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации"));
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);

	ОбщегоНазначенияУТ.ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
																Запрос.Текст,
																"&ТекстПоляТаблицаТоваровНоменклатураПартнера_",
																"ТаблицаТоваров",
																"НоменклатураПартнера",
																"ТаблицаТоваров.НоменклатураПартнера",
																"ЗНАЧЕНИЕ(Справочник.НоменклатураКонтрагентов.ПустаяСсылка)");
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков товаров к оформлению отчетов комитенту.
//
Процедура ТаблицаОстатковКОформлениюОтчетаКомитенту(ДокументОбъект, МенеджерВременныхТаблиц, ДатаОстатков)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация				КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)	КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)	КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыОрганизаций.ДокументРеализации		КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО								КАК ДокументОприходования,
	|	ТоварыОрганизаций.ВидЗапасов				КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов				КАК ВидЗапасовВладельца,
	|	НЕОПРЕДЕЛЕНО								КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО								КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД					КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления)	КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество)			КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.КоличествоПоРНПТ)	КАК КоличествоПоРНПТОстаток,
	|	СУММА(ТоварыОрганизаций.СуммаВыручки)		КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ // ВидыЗапасов, списанные документом
	|		ТоварыКОформлению.ВидЗапасов.Организация		КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов					КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД						КАК НомерГТД,
	|		ТоварыКОформлению.Количество					КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ТоварыКОформлению.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ											КАК КоличествоПоРНПТ,
	|		ТоварыКОформлению.СуммаВыручки					КАК СуммаВыручки,
	|		ДатыПоступленияТоваров.ДатаПоступления			КАК ДатаПоступления,
	|		ТоварыКОформлению.ДокументПродажи				КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК Отборы
	|			ПО Отборы.ВидЗапасов = ТоварыКОформлению.ВидЗапасов
	|				И Отборы.АналитикаУчетаНоменклатуры = ТоварыКОформлению.АналитикаУчетаНоменклатуры
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|			ПО ТоварыКОформлению.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваров
	|			ПО ТоварыКОформлению.ВидЗапасов = ДатыПоступленияТоваров.ВидЗапасов
	|				И КлючиАналитикиУчетаНоменклатуры.Номенклатура = ДатыПоступленияТоваров.Номенклатура
	|				И КлючиАналитикиУчетаНоменклатуры.Характеристика = ДатыПоступленияТоваров.Характеристика
	|				И КлючиАналитикиУчетаНоменклатуры.Серия = ДатыПоступленияТоваров.Серия
	|				И КлючиАналитикиУчетаНоменклатуры.Назначение = ДатыПоступленияТоваров.Назначение
	|				И ТоварыКОформлению.НомерГТД = ДатыПоступленияТоваров.НомерГТД
	|	
	|	ГДЕ
	|		ТоварыКОформлению.Регистратор = &Ссылка
	|		И ТоварыКОформлению.ВидЗапасов.Организация = &Организация
	|		И ТоварыКОформлению.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Реализованные виды запасов
	|		ТоварыКОформлению.ВидЗапасов.Организация		КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов					КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД						КАК НомерГТД,
	|		ТоварыКОформлению.КоличествоОстаток				КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоКОформлениюПоРНПТОстаток КАК ЧИСЛО(23, 11))
	|		КОНЕЦ											КАК КоличествоПоРНПТ,
	|		ТоварыКОформлению.СуммаВыручкиОстаток			КАК СуммаВыручки,
	|		ДатыПоступленияТоваров.ДатаПоступления			КАК ДатаПоступления,
	|		ТоварыКОформлению.ДокументПродажи				КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&Дата,
	|				Валюта = &Валюта
	|				И (ВидЗапасов, АналитикаУчетаНоменклатуры) В
	|						(ВЫБРАТЬ
	|							Отборы.ВидЗапасов,
	|							Отборы.АналитикаУчетаНоменклатуры
	|						ИЗ
	|						ВтОтборыОстатковОрганизаций КАК Отборы)
	|		
	|		) КАК ТоварыКОформлению
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|			ПО ТоварыКОформлению.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваров
	|			ПО ТоварыКОформлению.ВидЗапасов = ДатыПоступленияТоваров.ВидЗапасов
	|				И КлючиАналитикиУчетаНоменклатуры.Номенклатура = ДатыПоступленияТоваров.Номенклатура
	|				И КлючиАналитикиУчетаНоменклатуры.Характеристика = ДатыПоступленияТоваров.Характеристика
	|				И КлючиАналитикиУчетаНоменклатуры.Серия = ДатыПоступленияТоваров.Серия
	|				И КлючиАналитикиУчетаНоменклатуры.Назначение = ДатыПоступленияТоваров.Назначение
	|				И ТоварыКОформлению.НомерГТД = ДатыПоступленияТоваров.НомерГТД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Виды запасов, указанные в документе вручную.
	|		Запасы.ВидЗапасов.Организация		КАК Организация,
	|		Запасы.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		Запасы.ВидЗапасов					КАК ВидЗапасов,
	|		Запасы.НомерГТД						КАК НомерГТД,
	|		Запасы.Количество					КАК Количество,
	|		ВЫРАЗИТЬ(Запасы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|		Запасы.СуммаСНДС					КАК СуммаВыручки,
	|		ДАТАВРЕМЯ(1,1,1)					КАК ДатаПоступления,
	|		Запасы.ДокументРеализации			КАК ДокументРеализации
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК Запасы
	|	
	|	ГДЕ
	|		Запасы.ВидыЗапасовУказаныВручную
	|		И Запасы.АналитикаУчетаНоменклатуры В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ТаблицаТоваров КАК ТаблицаТоваров)
	|	
	|	) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.ДокументРеализации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка",			ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Валюта",			ДокументОбъект.Валюта);
	Запрос.УстановитьПараметр("Организация",	ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Дата",			КонецДня(ДатаОстатков) + 1);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ТаблицаОстатковКОформлениюОтчетаКомитентуОСписании(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация				КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)	КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)	КАК СкладОтгрузки,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыОрганизаций.ВидЗапасов				КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО								КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО								КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД					КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления)	КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество)			КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.КоличествоПоРНПТ)	КАК КоличествоПоРНПТОстаток,
	|	СУММА(ТоварыОрганизаций.СуммаВыручки)		КАК СуммаОстаток,
	|	НЕОПРЕДЕЛЕНО								КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО								КАК ДокументОприходования
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ // ВидыЗапасов, списанные документом
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ТоварыКОформлению.КоличествоСписано КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ТоварыКОформлению.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоСписаноКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ,
	|		0 КАК СуммаВыручки,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|				И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|				И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|				И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|				И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	ГДЕ
	|		ТоварыКОформлению.Активность
	|		И ТоварыКОформлению.Регистратор = &Ссылка
	|		И ТоварыКОформлению.ВидЗапасов.Организация = &Организация
	|		И ТоварыКОформлению.ВидЗапасов В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Отборы.ВидЗапасов
	|				ИЗ
	|					ВтОтборыОстатковОрганизаций КАК Отборы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, списанные  сторнируемым документом
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ТоварыКОформлению.КоличествоСписано КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ТоварыКОформлению.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоСписаноКОформлениюПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ,
	|		0 КАК СуммаВыручки,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|				И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|				И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|				И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|				И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	
	|	ГДЕ
	|		НЕ ТоварыКОформлению.Сторно
	|		И ТоварыКОформлению.Активность
	|		И ТоварыКОформлению.Регистратор = &СторнируемыйДокумент
	|		И ТоварыКОформлению.ВидЗапасов.Организация = &Организация
	|		И ТоварыКОформлению.ВидЗапасов В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Отборы.ВидЗапасов
	|				ИЗ
	|					ВтОтборыОстатковОрганизаций КАК Отборы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Списанные виды запасов
	|		ТоварыКОформлению.ВидЗапасов.Организация		КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов					КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД						КАК НомерГТД,
	|		ТоварыКОформлению.КоличествоСписаноПриход
	|			- ТоварыКОформлению.КоличествоСписаноРасход	КАК Количество,
	|		ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоСписаноКОформлениюПоРНПТПриход КАК ЧИСЛО(23, 11))
	|			- ВЫРАЗИТЬ(ТоварыКОформлению.КоличествоСписаноКОформлениюПоРНПТРасход КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|		0 КАК СуммаВыручки,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Обороты(&НачалоПериода, &КонецПериода, Период,
	|				Валюта = &Валюта
	|				И (АналитикаУчетаНоменклатуры, ВидЗапасов) В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Отборы.АналитикаУчетаНоменклатуры,
	|							Отборы.ВидЗапасов
	|						ИЗ
	|							ВтОтборыОстатковОрганизаций КАК Отборы)
	|		
	|		) КАК ТоварыКОформлению
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|				И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|				И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|				И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|				И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Виды запасов, указанные в документе вручную.
	|		Запасы.ВидЗапасов.Организация		КАК Организация,
	|		Запасы.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		Запасы.ВидЗапасов					КАК ВидЗапасов,
	|		Запасы.НомерГТД						КАК НомерГТД,
	|		Запасы.Количество					КАК Количество,
	|		ВЫРАЗИТЬ(Запасы.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
	|		0									КАК СуммаВыручки,
	|		ДАТАВРЕМЯ(1,1,1)					КАК ДатаПоступления
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК Запасы
	|	ГДЕ
	|		Запасы.ВидыЗапасовУказаныВручную
	|		И Запасы.АналитикаУчетаНоменклатуры В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ТаблицаТоваров КАК ТаблицаТоваров)
	|		
	|	) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры";
	
	НачалоПериода	= ?(ЗначениеЗаполнено(ДокументОбъект.НачалоПериода), ДокументОбъект.НачалоПериода, Дата(1,1,1));
	КонецПериода	= ?(ЗначениеЗаполнено(ДокументОбъект.КонецПериода),
						КонецДня(ДокументОбъект.КонецПериода),
						КонецМесяца(ДокументОбъект.Дата));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка",			ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Валюта",			ДокументОбъект.Валюта);
	Запрос.УстановитьПараметр("Организация",	ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода",	НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",	КонецПериода);
	Запрос.УстановитьПараметр("СторнируемыйДокумент", ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирование врем.табл. ТаблицаОстатков к передаче по интеркампани.
// Параметры:
//	Ссылка - ДокументСсылка.{ПередачаТоваровМеждуОрганизациями | ВозвратТоваровМеждуОрганизациями}
//	Владелец - СправочникСсылка.Организации, владелец передаваемого/возвращаемого запаса
//	Склад - склад подбора остатков в операции
//	Дата - дата подбора остатков
//	ВременныеТаблицы - менеджер временных таблиц для ТаблицаОстатков, должен содержать ВТ ДоступныеВидыЗапасов
//	ПоВсемВидамЗапасов - признак игнорирования доступных видов запасов.
Процедура ТаблицаОстатковТоваровКПередаче(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КПередаче.Организация КАК Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КПередаче.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КПередаче.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КПередаче.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	КПередаче.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|	КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	КПередаче.ВидЗапасовПродавца КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления,
	|	КПередаче.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	КПередаче.НомерГТД КАК НомерГТД,
	|	СУММА(КПередаче.Количество) КАК КоличествоОстаток,
	|	0 КАК НаДатуКонтроля,
	|	0 КАК НаДатуАктуальности,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|		КПередаче.НомерГТД КАК НомерГТД,
	|		КПередаче.Количество КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК КПередаче
	|	ГДЕ
	|		КПередаче.Регистратор = &Ссылка
	|		И КПередаче.ОрганизацияВладелец = &Владелец
	|		И КПередаче.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец,
	|		КПередаче.АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца,
	|		КПередаче.ВидЗапасовПродавца,
	|		КПередаче.НомерГТД,
	|		КПередаче.КоличествоОстаток,
	|		ДАТАВРЕМЯ(1, 1, 1)
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|				&Дата,
	|				(ОрганизацияВладелец, АналитикаУчетаНоменклатуры, ВидЗапасовПродавца) В
	|					(ВЫБРАТЬ
	|						ВидыЗапасов.Организация КАК ОрганизацияВладелец,
	|						ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|						ВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца
	|					ИЗ
	|						ВтОтборыОстатковОрганизаций КАК ВидыЗапасов)) КАК КПередаче) КАК КПередаче
	|
	|СГРУППИРОВАТЬ ПО
	|	КПередаче.Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры,
	|	КПередаче.АналитикаУчетаНоменклатуры.Номенклатура,
	|	КПередаче.АналитикаУчетаНоменклатуры.Характеристика,
	|	КПередаче.АналитикаУчетаНоменклатуры.Назначение,
	|	КПередаче.АналитикаУчетаНоменклатуры.Серия,
	|	КПередаче.АналитикаУчетаНоменклатуры.МестоХранения,
	|	КПередаче.ВидЗапасовПродавца,
	|	КПередаче.НомерГТД,
	|	КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца";
	
	ТекстЗапроса = ТекстЗапроса + " 
	|;
	|///////////////////////////////////////
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Владелец", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Дата", Новый Граница(КонецДня(ДатаОстатков), ВидГраницы.Включая));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирование врем.табл. ТаблицаОстатков к возврату по интеркампани.
// Параметры:
//	Ссылка - ДокументСсылка.{ПередачаТоваровМеждуОрганизациями | ВозвратТоваровМеждуОрганизациями}
//	Владелец - СправочникСсылка.Организации, владелец передаваемого/возвращаемого запаса
//	Склад - склад подбора остатков в операции
//	Дата - дата подбора остатков
//	ВременныеТаблицы - менеджер временных таблиц для ТаблицаОстатков, должен содержать ВТ ДоступныеВидыЗапасов
//	ПоВсемВидамЗапасов - признак игнорирования доступных видов запасов.
Процедура ТаблицаОстатковТоваровКВозврату(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КПередаче.Организация КАК Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КПередаче.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КПередаче.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КПередаче.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	КПередаче.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	КПередаче.ВидЗапасов КАК ВидЗапасов,
	|	КПередаче.ВидЗапасовПолучателя КАК ВидЗапасовВладельца,
	|	КПередаче.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления,
	|	КПередаче.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	КПередаче.НомерГТД КАК НомерГТД,
	|	СУММА(КПередаче.Количество) КАК КоличествоОстаток,
	|	0 КАК НаДатуКонтроля,
	|	0 КАК НаДатуАктуальности,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовПолучателя,
	|		КПередаче.НомерГТД КАК НомерГТД,
	|		КПередаче.Возвращено КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК КПередаче
	|	ГДЕ
	|		КПередаче.Регистратор = &Ссылка
	|		И КПередаче.ОрганизацияВладелец = &Владелец
	|		И КПередаче.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовПолучателя,
	|		КПередаче.НомерГТД,
	|		КПередаче.ВозвращеноОстаток,
	|		ДАТАВРЕМЯ(1, 1, 1)
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&Дата,
	|			(ОрганизацияВладелец, АналитикаУчетаНоменклатуры, ВидЗапасовПродавца) В
	|				(ВЫБРАТЬ
	|					&Владелец КАК ОрганизацияВладелец,
	|					ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|					ВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца
	|				ИЗ
	|					ВтОтборыОстатковОрганизаций КАК ВидыЗапасов)
	|		) КАК КПередаче
	|
	|) КАК КПередаче
	|
	|СГРУППИРОВАТЬ ПО
	|	КПередаче.Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры,
	|	КПередаче.АналитикаУчетаНоменклатуры.Номенклатура,
	|	КПередаче.АналитикаУчетаНоменклатуры.Характеристика,
	|	КПередаче.АналитикаУчетаНоменклатуры.Назначение,
	|	КПередаче.АналитикаУчетаНоменклатуры.Серия,
	|	КПередаче.АналитикаУчетаНоменклатуры.МестоХранения,
	|	КПередаче.ВидЗапасовПолучателя,
	|	КПередаче.НомерГТД,
	|	КПередаче.ВидЗапасов
	|";
	
	ТекстЗапроса = ТекстЗапроса + " 
	|;
	|///////////////////////////////////////
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Владелец", ДокументОбъект.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Дата", ДатаОстатков + 1);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

// Процедура формирует таблицу остатков списанных на расходы товаров.
//
Процедура ТаблицаОстатковСписанныхНаРасходыТоваров(ДокументОбъект,
													МенеджерВременныхТаблиц,
													ПараметрыЗаполненияВидовЗапасов)
	
	ДокументСсылка	= ДокументОбъект.Ссылка;
	Организация		= ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|ПОМЕСТИТЬ ДокументыСписания
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотребление КАК ДанныеДокумента
	|		ПО ТаблицаТоваров.ДокументРеализации = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Регистратор КАК ДокументРеализации,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.Количество
	|		ИНАЧЕ ТоварыОрганизаций.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ДокументыСписания.Дата КАК ДатаСписания
	|ПОМЕСТИТЬ ОстаткиСписанныхНаРасходТоваров
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыСписания КАК ДокументыСписания
	|		ПО ТоварыОрганизаций.Регистратор = ДокументыСписания.Ссылка
	|ГДЕ
	|	НЕ ТоварыОрганизаций.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.ДокументРеализации,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.МестоХранения,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.Количество
	|		ИНАЧЕ ТоварыОрганизаций.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ,
	|	ДокументыСписания.Дата
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыСписания КАК ДокументыСписания
	|		ПО ТоварыОрганизаций.ДокументРеализации = ДокументыСписания.Ссылка
	|ГДЕ
	|	НЕ ТоварыОрганизаций.Регистратор В
	|				(ВЫБРАТЬ
	|					ДокументыСписания.Ссылка КАК Ссылка
	|				ИЗ
	|					ДокументыСписания КАК ДокументыСписания)
	|	И ТоварыОрганизаций.Регистратор <> &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.ДокументРеализации,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ТоварыОрганизаций.Количество
	|		ИНАЧЕ -ТоварыОрганизаций.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ -ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ,
	|	ДокументыСписания.Дата
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыСписания КАК ДокументыСписания
	|		ПО ТоварыОрганизаций.ДокументРеализации = ДокументыСписания.Ссылка
	|ГДЕ
	|	ТоварыОрганизаций.Регистратор = &СторнируемыйДокумент
	|	И НЕ ТоварыОрганизаций.Сторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Склад КАК СкладОтгрузки,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.Серия КАК Серия,
	|	ТоварыОрганизаций.Назначение КАК Назначение,
	|	ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.Организация <> &Организация
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.Ссылка
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(РАЗНОСТЬДАТ(ТоварыОрганизаций.ДатаСписания, &МаксимальнаяДата, ДЕНЬ)) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ОстаткиСписанныхНаРасходТоваров КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ТоварыОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТоварыОрганизаций.Номенклатура = Аналитика.Номенклатура
	|			И ТоварыОрганизаций.Характеристика = Аналитика.Характеристика
	|			И ТоварыОрганизаций.Серия = Аналитика.Серия
	|			И ТоварыОрганизаций.Склад = Аналитика.МестоХранения
	|			И ТоварыОрганизаций.Назначение = Аналитика.Назначение
	|
	|СГРУППИРОВАТЬ ПО
	|	Аналитика.КлючАналитики,
	|	ТоварыОрганизаций.Склад,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.Серия,
	|	ТоварыОрганизаций.Назначение,
	|	ТоварыОрганизаций.ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.Организация <> &Организация
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.Ссылка
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыСписания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиСписанныхНаРасходТоваров";
	
	Запрос.УстановитьПараметр("Ссылка",					ДокументСсылка);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Склад",					ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("МаксимальнаяДата",		Дата(2399, 1, 1));
	Запрос.УстановитьПараметр("СторнируемыйДокумент",	ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры


Процедура ТаблицаОстатковТаблицаВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.ВидЗапасов.Организация КАК Организация,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовВладельца,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ДатаПоступления,
	|	ТаблицаВидыЗапасов.Количество КАК КоличествоОстаток,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
	|			И ТаблицаВидыЗапасов.ВидЗапасов = ВтОтборыОстатковОрганизаций.ВидЗапасов
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает параметры дополнения запроса остатка товаров на каждый месяц.
//
// Возвращаемое значение:
//	Структура - параметры дополнения запроса остатка товаров на каждый месяц:
//		* ПодбиратьЗапасыРазныхПериодов - Булево - ИСТИНА, признак того, что требуется подбирать запасы разных периодов.
//													По умолчанию значение ЛОЖЬ.
//		* ЕстьТаблицаПриходуемыхВидовЗапасов - Булево - ИСТИНА, признак наличия таблицы данных, содержащей сведения о 
//														приходуемых видах запасов.
//														По умолчанию значение ЛОЖЬ.
//		* ИмяТаблицыПриходуемыхВидовЗапасов - Строка - Имя таблицы приходуемых видов запасов.
//														По умолчанию значение пустой строки.
//		* ОкончаниеПериодаКонтроля - Дата - период окончания контроля остатков товаров.
//											По умолчанию значение Неопределено.
//		* ЕстьОтборПоНомеруГТД - Булево - ИСТИНА, признак того, что при подборе остатков товаров учитываются остатки в 
//											разрезе номеров ГТД.
//											Значение по умолчанию Неопределено.
//
Функция ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц() Экспорт
		
	ПараметрыДополнения = Новый Структура;
	ПараметрыДополнения.Вставить("ПодбиратьЗапасыРазныхПериодов", Ложь);
	ПараметрыДополнения.Вставить("ЕстьТаблицаПриходуемыхВидовЗапасов", Ложь);
	ПараметрыДополнения.Вставить("ИмяТаблицыПриходуемыхВидовЗапасов", "");
	ПараметрыДополнения.Вставить("ОкончаниеПериодаКонтроля", Неопределено);
	ПараметрыДополнения.Вставить("ЕстьОтборПоНомеруГТД", Ложь);
	
	Возврат ПараметрыДополнения;
	
КонецФункции

Функция ДополнитьЗапросКонтролемОстатковНаКаждыйМесяц(Запрос, ТекстЗапроса, ПараметрыДополнения, МинимальнаяДатаОстатков, ДатыОстатков = Неопределено) Экспорт
	
	КонецМесяцаДатыПоследнегоДвижения = КонецМесяца(ДатаПоследнегоДвижения());
	КонецТекущегоМесяца = КонецМесяца(ТекущаяДатаСеанса());
	
	// За последние три года возможна налоговая проверка.
	ТриГодаНазад = ДобавитьМесяц(КонецТекущегоМесяца, -36);
	НачальныйМесяц = КонецМесяца(Макс(МинимальнаяДатаОстатков, ТриГодаНазад));
	Если ЗначениеЗаполнено(ПараметрыДополнения.ОкончаниеПериодаКонтроля) Тогда
		НачальныйМесяц = КонецМесяца(Мин(ПараметрыДополнения.ОкончаниеПериодаКонтроля, НачальныйМесяц));
		КонечныйМесяц = КонецМесяца(ПараметрыДополнения.ОкончаниеПериодаКонтроля);
	Иначе
		КонечныйМесяц = КонецМесяца(Макс(КонецМесяцаДатыПоследнегоДвижения, КонецТекущегоМесяца, НачальныйМесяц));
	КонецЕсли;
	
	МесяцыКонтроля = Новый Соответствие;
	ТекущийМесяц = НачальныйМесяц;
	Пока ТекущийМесяц <= КонечныйМесяц Цикл
		МесяцыКонтроля.Вставить(ТекущийМесяц);
		ТекущийМесяц = КонецМесяца(КонецМесяца(ТекущийМесяц) + 1);
	КонецЦикла;
	
	ТекстВТОстаткиПоМесяцамШаблон = 
	"ВЫБРАТЬ
	|	&ТекстПериод КАК Период,
	|	ШаблонОстаткиНаМесяц.Организация КАК Организация,
	|	ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ШаблонОстаткиНаМесяц.ВидЗапасов КАК ВидЗапасов,
	|	ШаблонОстаткиНаМесяц.НомерГТД КАК НомерГТД,
	|	СУММА(ШаблонОстаткиНаМесяц.КоличествоОстаток) КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&ТекстПериод, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ШаблонОстаткиНаМесяц.КоличествоПоРНПТОстаток)
	|	КОНЕЦ КАК КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ШаблонОстаткиНаМесяц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.Организация КАК Организация,
	|		Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК КоличествоОстаток,
	|		ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.Остатки(
	|				&ШаблонГраницаНаМесяц,
	|				(&ТекстОтборНомерГТД, АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|					(ВЫБРАТЬ
	|						&ТекстВыборкаДляОтбораНомерГТД,
	|						ВТОтборы.АналитикаУчетаНоменклатуры,
	|						ВТОтборы.Организация,
	|						ВТОтборы.ВидЗапасов
	|					ИЗ
	|						ВТОтборыОстатковОрганизаций КАК ВТОтборы)) КАК Остатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.Организация,
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток,
	|		ВЫРАЗИТЬ(Остатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|				&ШаблонГраницаНаМесяц,
	|				(&ТекстОтборНомерГТД, АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|					(ВЫБРАТЬ
	|						&ТекстВыборкаДляОтбораНомерГТД,
	|						ВТОтборы.АналитикаУчетаНоменклатуры,
	|						ВТОтборы.Организация,
	|						ВТОтборы.ВидЗапасов
	|					ИЗ
	|						ВТОтборыОстатковОрганизаций КАК ВТОтборы)) КАК Остатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокумента.Организация,
	|		ДвиженияДокумента.АналитикаУчетаНоменклатуры,
	|		ДвиженияДокумента.ВидЗапасов,
	|		ДвиженияДокумента.НомерГТД,
	|		-ДвиженияДокумента.Количество,
	|		-ВЫРАЗИТЬ(ДвиженияДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	ИЗ
	|		ДвиженияДокумента КАК ДвиженияДокумента
	|	ГДЕ
	|		(&ТекстЭтоПоследниеДвижения
	|		ИЛИ ДвиженияДокумента.Период <= &ШаблонКонецМесяца)
	|		И ДвиженияДокумента.Период >= &НачалоМесяцаМинимальнойДатыОстатков
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТОтборы.Организация,
	|		ВТОтборы.АналитикаУчетаНоменклатуры,
	|		ВТОтборы.ВидЗапасов,
	|		&ТекстВыборкаНомерГТД,
	|		0,
	|		0
	|	ИЗ
	|		ВТОтборыОстатковОрганизаций КАК ВТОтборы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокумента.Организация		КАК Организация,
	|		ДвиженияДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ДвиженияДокумента.ВидЗапасов		КАК ВидЗапасов,
	|		ДвиженияДокумента.НомерГТД			КАК НомерГТД,
	|		ДвиженияДокумента.Количество		КАК КоличествоОстаток,
	|		ВЫРАЗИТЬ(ДвиженияДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))	КАК КоличествоПоРНПТОстаток
	|	ИЗ
	|		ДвиженияСторнируемогоДокумента КАК ДвиженияДокумента
	|	ГДЕ
	|		(&ТекстЭтоПоследниеДвижения
	|			ИЛИ ДвиженияДокумента.Период <= &ШаблонКонецМесяца)
	|		И ДвиженияДокумента.Период >= &НачалоМесяцаМинимальнойДатыОстатков
	|	
	|	И &ТекстПриходуемыеВидыЗапасов
	|	
	|		) КАК ШаблонОстаткиНаМесяц
	|	
	|СГРУППИРОВАТЬ ПО
	|	ШаблонОстаткиНаМесяц.Организация,
	|	ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры,
	|	ШаблонОстаткиНаМесяц.ВидЗапасов,
	|	ШаблонОстаткиНаМесяц.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД";
	
	ТекстЗапросаНаМесяцШаблон = 
	"ВЫБРАТЬ
	|	&ТекстВыборкаПериода КАК Период,
	|	ШаблонОстаткиНаМесяц.Организация КАК Организация,
	|	ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ШаблонОстаткиНаМесяц.ВидЗапасов КАК ВидЗапасов,
	|	ШаблонОстаткиНаМесяц.НомерГТД КАК НомерГТД,
	|	1 КАК СчетчикПериодов,
	|	&ТекстНомерПериода КАК НомерПериода,
	|	ШаблонОстаткиНаМесяц.КоличествоОстаток КАК КоличествоОстаток,
	|	&ТекстКоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток
	|ИЗ
	|	ШаблонОстаткиНаМесяц КАК ШаблонОстаткиНаМесяц";
	
	Если ПараметрыДополнения.ЕстьОтборПоНомеруГТД Тогда
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "&ТекстОтборНомерГТД,", "НомерГТД,");
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "&ТекстВыборкаНомерГТД,", "ВТОтборы.НомерГТД,");
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "&ТекстВыборкаДляОтбораНомерГТД,", "ВТОтборы.НомерГТД,");
	Иначе
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "&ТекстОтборНомерГТД,", "");
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "&ТекстВыборкаНомерГТД,", "ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка),");
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "&ТекстВыборкаДляОтбораНомерГТД,", "");
	КонецЕсли;
	
	МассивТекстовЗапросовПоМесяцам = Новый Массив;
	МассивВТОстаткиПоМесяцам = Новый Массив;
	
	СчетчикПериодов = 0;
	
	Для Каждого МесяцКонтроля из МесяцыКонтроля Цикл
		
		ТекущийМесяц = МесяцКонтроля.Ключ;
		СчетчикПериодов = СчетчикПериодов + 1;
		ЭтоПоследниеДвижения = КонецМесяцаДатыПоследнегоДвижения = ТекущийМесяц;
		
		// Текстовое представление каждого месяца, например: 20160630
		СтрокаТекущийМесяц = Формат(ТекущийМесяц, ФорматДатыВИмениВТ());
		
		ТекстЗапросаВТОстаткиНаТекущийМесяц = ТекстВТОстаткиПоМесяцамШаблон;
		
		Если ПараметрыДополнения.ЕстьТаблицаПриходуемыхВидовЗапасов Тогда
			
			//Дополнительные виды запасов, приходуемые документом
			ТекстПриходуемыеВидыЗапасов =
			"ВЫБРАТЬ 
			|	ТаблицаВидыЗапасов.Организация                КАК Организация,
			|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
			|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
			|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
			|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ
			|ИЗ
			|	ИмяТаблицыПриходуемыхВидовЗапасов КАК ТаблицаВидыЗапасов
			|ГДЕ
			|	&ТекстЭтоПоследниеДвижения ИЛИ ТаблицаВидыЗапасов.Период <= &ТекстПериод";
			
			ТекстПриходуемыеВидыЗапасов = СтрЗаменить(ТекстПриходуемыеВидыЗапасов,
				"ИмяТаблицыПриходуемыхВидовЗапасов",
				ПараметрыДополнения.ИмяТаблицыПриходуемыхВидовЗапасов);
			ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц, "И &ТекстПриходуемыеВидыЗапасов",
			ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() + ТекстПриходуемыеВидыЗапасов);
			
		Иначе
			
			ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц, "И &ТекстПриходуемыеВидыЗапасов", "");
			
		КонецЕсли;
		
		Если ПараметрыДополнения.ПодбиратьЗапасыРазныхПериодов Тогда
			
			Для Каждого СтрМас из ДатыОстатков Цикл
				
				ТекстКоличествоПоРНПТОстаток = 
				"ВЫБОР
				|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
				|				ИЛИ НАЧАЛОПЕРИОДА(&ТекстВыборкаПериода, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
				|			ТОГДА 0
				|		ИНАЧЕ ВЫРАЗИТЬ(ШаблонОстаткиНаМесяц.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))
				|	КОНЕЦ";
				
				ТекстЗапросаНаТекущийМесяц = ТекстЗапросаНаМесяцШаблон;
				ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц,
														"&ТекстКоличествоПоРНПТОстаток",
														ТекстКоличествоПоРНПТОстаток);
				ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц,
														"ШаблонОстаткиНаМесяц",
														ИмяВтОстаткиНаКонецМесяца(ТекущийМесяц));
				
				КонецМесяцаПолучаемыхОстатков = КонецМесяца(СтрМас);
				
				// Контролируемый месяц больше месяца этой итерации
				Если ТекущийМесяц >= КонецМесяцаПолучаемыхОстатков
					// или месяц этой итерации находится в будущем периоде.
					Или КонецМесяцаПолучаемыхОстатков > КонецТекущегоМесяца Тогда
					
					СтрокаДатыОстатков	= Формат(КонецМесяцаПолучаемыхОстатков, ФорматДатыВИмениВТ());
					НомерПериода		= Год(КонецМесяцаПолучаемыхОстатков) * 12 + Месяц(КонецМесяцаПолучаемыхОстатков)
											- Год(МинимальнаяДатаОстатков) * 12 - Месяц(МинимальнаяДатаОстатков) + 1;
					
					ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц,
															"&ТекстВыборкаПериода",
															"&Конец" + СтрокаДатыОстатков);
					ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц,
															"&ТекстНомерПериода",
															Формат(НомерПериода, "ЧН=0; ЧГ="));
					
					МассивТекстовЗапросовПоМесяцам.Добавить(ТекстЗапросаНаТекущийМесяц);
					
					Запрос.УстановитьПараметр("Конец" + СтрокаДатыОстатков, КонецМесяцаПолучаемыхОстатков);
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			ТекстКоличествоПоРНПТОстаток = "ВЫРАЗИТЬ(ШаблонОстаткиНаМесяц.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))";
			
			ТекстЗапросаНаТекущийМесяц = ТекстЗапросаНаМесяцШаблон;
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц,
													"&ТекстКоличествоПоРНПТОстаток",
													ТекстКоличествоПоРНПТОстаток);
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц,
													"ШаблонОстаткиНаМесяц",
													ИмяВтОстаткиНаКонецМесяца(ТекущийМесяц));
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц,
													"&ТекстВыборкаПериода",
													"ДАТАВРЕМЯ(1,1,1)");
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "&ТекстНомерПериода", "1");
			
			МассивТекстовЗапросовПоМесяцам.Добавить(ТекстЗапросаНаТекущийМесяц);
			
		КонецЕсли;
		
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц,
															"ШаблонОстаткиНаМесяц",
															ИмяВтОстаткиНаКонецМесяца(ТекущийМесяц));
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц,
															"ШаблонГраницаНаМесяц",
															"Граница" + СтрокаТекущийМесяц);
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц,
															"ШаблонКонецМесяца",
															"Конец" + СтрокаТекущийМесяц);
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц,
															"&ТекстПериод",
															"&Конец" + СтрокаТекущийМесяц);
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц,
															"&ТекстЭтоПоследниеДвижения",
															?(ЭтоПоследниеДвижения, "ИСТИНА", "ЛОЖЬ"));
		
		МассивВТОстаткиПоМесяцам.Добавить(ТекстЗапросаВТОстаткиНаТекущийМесяц);
		
		Если ТекущийМесяц >= КонецМесяцаДатыПоследнегоДвижения Тогда
			Запрос.УстановитьПараметр("Граница" + СтрокаТекущийМесяц, Неопределено);
		Иначе
			Запрос.УстановитьПараметр("Граница" + СтрокаТекущийМесяц, Новый Граница(ТекущийМесяц, ВидГраницы.Включая));
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Конец" + СтрокаТекущийМесяц, ТекущийМесяц);
		
	КонецЦикла;
	
	Если ПараметрыДополнения.ПодбиратьЗапасыРазныхПериодов Тогда
		Запрос.УстановитьПараметр("ПериодЗаполнения", МинимальнаяДатаОстатков);
		Запрос.УстановитьПараметр("НачалоМесяцаМинимальнойДатыОстатков", НачалоМесяца(МинимальнаяДатаОстатков));
	Иначе
		Запрос.УстановитьПараметр("ПериодЗаполнения", Дата(1,1,1));
		Запрос.УстановитьПараметр("НачалоМесяцаМинимальнойДатыОстатков", Дата(1,1,1));
	КонецЕсли;
	
	ТекстОстаткиПоМесяцам = СтрСоединить(МассивТекстовЗапросовПоМесяцам,
										ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстВТОстаткиПоМесяцам = СтрСоединить(МассивВТОстаткиПоМесяцам,
											ОбщегоНазначения.РазделительПакетаЗапросов()) + ОбщегоНазначения.РазделительПакетаЗапросов();
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ТекстОстаткиПоМесяцамОбъединить", "ОБЪЕДИНИТЬ ВСЕ "+ТекстОстаткиПоМесяцам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОстаткиПоМесяцам", "("+ТекстОстаткиПоМесяцам+")");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ &ТекстВТОстаткиПоМесяцам;", ТекстВТОстаткиПоМесяцам);
	
	Возврат СчетчикПериодов;
	
КонецФункции

Процедура ТаблицаОстатковТоваровПринятых(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтОтборыОстатковОрганизаций.Организация КАК Организация,
	|	ВтОтборыОстатковОрганизаций.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ВТОтбор
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВтОтборыОстатковОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийОстатки.Организация КАК Организация,
	|	ТоварыОрганизацийОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизацийОстатки.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизацийОстатки.КОформлениюСписанияОстаток КАК Количество,
	|	ТоварыОрганизацийОстатки.КОформлениюСписанияПоРНПТОстаток КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ТоварыОрганизацийОстаткиКСписанию
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			,
	|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|				(ВЫБРАТЬ
	|					ВТОтбор.АналитикаУчетаНоменклатуры,
	|					ВТОтбор.Организация,
	|					ВТОтбор.ВидЗапасов
	|				ИЗ
	|					ВТОтбор КАК ВТОтбор)) КАК ТоварыОрганизацийОстатки
	|ГДЕ
	|	ТоварыОрганизацийОстатки.КОформлениюСписанияОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовВладельца,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовПолучателя,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	СУММА(ВложенныйЗапрос.Количество) КАК КоличествоОстаток,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	СУММА(0) КАК НаДатуКонтроля,
	|	СУММА(0) КАК НаДатуАктуальности,
	|	СУММА(0) КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизацийОстатки.Организация КАК Организация,
	|		ТоварыОрганизацийОстатки.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизацийОстатки.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизацийОстатки.Количество КАК Количество,
	|		ВЫРАЗИТЬ(ТоварыОрганизацийОстатки.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ
	|	ИЗ
	|		ТоварыОрганизацийОстаткиКСписанию КАК ТоварыОрганизацийОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ТоварыОрганизаций.КОформлениюСписания
	|			ИНАЧЕ -ТоварыОрганизаций.КОформлениюСписания
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ТоварыОрганизаций.КОформлениюСписанияПоРНПТ
	|			ИНАЧЕ -ТоварыОрганизаций.КОформлениюСписанияПоРНПТ
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
	|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = ВТОтбор.АналитикаУчетаНоменклатуры
	|				И ТоварыОрганизаций.Организация = ВТОтбор.Организация
	|				И ТоварыОрганизаций.ВидЗапасов = ВТОтбор.ВидЗапасов
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТоварыОрганизаций.КОформлениюСписания
	|			ИНАЧЕ ТоварыОрганизаций.КОформлениюСписания
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ВЫРАЗИТЬ(ТоварыОрганизаций.КОформлениюСписанияПоРНПТ КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ ВЫРАЗИТЬ(ТоварыОрганизаций.КОформлениюСписанияПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
	|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = ВТОтбор.АналитикаУчетаНоменклатуры
	|				И ТоварыОрганизаций.Организация = ВТОтбор.Организация
	|				И ТоварыОрганизаций.ВидЗапасов = ВТОтбор.ВидЗапасов
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &СторнируемыйДокумент
	|		И НЕ ТоварыОрганизаций.Сторно
	|	
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыОрганизацийОстаткиКСписанию";
	
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Партнер",		ДокументОбъект.Партнер);
	Запрос.УстановитьПараметр("Договор",		ДокументОбъект.Договор);
	Запрос.УстановитьПараметр("Регистратор",	ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СторнируемыйДокумент", ПараметрыЗаполненияВидовЗапасов.СторнируемыйДокумент);

	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков принятых по распоряжению товаров.
//
Процедура ТаблицаОстатковПринятыхТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.ДокументПоступления КАК ДокументПоступления,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ СгруппированнаяТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Предварительная группировка требуется для корректного соединения с ТЧ ВидыЗапасов, с целью извлечения склада.
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваров.КоличествоПоРНПТ) КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВТТоварыПриобретения
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК ТаблицаТоваровВозврата
	|		ПО ТаблицаТоваров.Ссылка = ТаблицаТоваровВозврата.ДокументПоступления
	|			И ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Характеристика
	|			И ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Назначение
	|ГДЕ
	|	&ЭтоВозвратПоставщику
	|	И ТаблицаТоваров.Ссылка.Проведен
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НомерГТД,
	|	ТаблицаТоваров.Склад
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Предварительная группировка корректировки приобретения требуется для корректного соединения с ТЧ ВидыЗапасов, с целью извлечения склада.
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваров.КоличествоПоРНПТ) КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВТТоварыКорректировкаПриобретения
	|ИЗ
	|	Документ.КорректировкаПриобретения.Расхождения КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК ТаблицаТоваровВозврата
	|		ПО ТаблицаТоваров.Ссылка.ДокументОснование = ТаблицаТоваровВозврата.ДокументПоступления
	|			И ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Характеристика
	|			И ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Назначение
	|ГДЕ
	|	&ЭтоВозвратПоставщику
	|	И ТаблицаТоваров.Ссылка.Проведен
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НомерГТД,
	|	ТаблицаТоваров.Склад
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ВидЗапасов КАК ВидЗапасов,
	|	ДанныеДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ДанныеДокумента.НомерГТД КАК НомерГТД,
	|	ДанныеДокумента.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ПринятыеТовары
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументПоступления
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры = ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	ДанныеДокумента.Ссылка.Проведен
	|		И (ДанныеДокумента.Ссылка.ХозяйственнаяОперация НЕ В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути)
	|		)
	|		ИЛИ НЕ &ЭтоВозвратПоставщику)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Возврат поставщику по неотфактурованной поставке или по товарам в пути.
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ВидыЗапасовСкладские.Ссылка КАК ВидЗапасов,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ДанныеДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровПриобретения.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТоваровПриобретения.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.ВидыЗапасов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК ТаблицаТоваровВозврата
	|		ПО ДанныеДокумента.Ссылка = ТаблицаТоваровВозврата.ДокументПоступления
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Характеристика
	|			И (ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Серия
	|				ИЛИ ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Назначение = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Назначение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоварыПриобретения КАК ТаблицаТоваровПриобретения
	|		ПО ДанныеДокумента.Ссылка = ТаблицаТоваровПриобретения.Ссылка
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Характеристика
	|			И (ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Серия
	|				ИЛИ ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				ИЛИ ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Назначение = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Назначение
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.МестоХранения = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.МестоХранения
	|			И ДанныеДокумента.НомерГТД = ТаблицаТоваровПриобретения.НомерГТД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСкладские
	|		ПО ВидыЗапасовСкладские.Организация = ДанныеДокумента.ВидЗапасов.Организация
	|			И ВидыЗапасовСкладские.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			И ВидыЗапасовСкладские.ВладелецТовара = ДанныеДокумента.ВидЗапасов.ВладелецТовара
	|			И ВидыЗапасовСкладские.НалогообложениеНДС = ДанныеДокумента.ВидЗапасов.НалогообложениеНДС
	|			И ВидыЗапасовСкладские.ГруппаФинансовогоУчета = ДанныеДокумента.ВидЗапасов.ГруппаФинансовогоУчета
	|			И ВидыЗапасовСкладские.ГруппаПродукции = ДанныеДокумента.ВидЗапасов.ГруппаПродукции
	|			И ВидыЗапасовСкладские.ВидЦены = ДанныеДокумента.ВидЗапасов.ВидЦены
	|			И НЕ ВидыЗапасовСкладские.ЭтоДубль
	|			И НЕ ВидыЗапасовСкладские.Устаревший
	|			И НЕ ВидыЗапасовСкладские.ПометкаУдаления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ДанныеДокумента.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
	|			И (ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = Аналитика.Серия
	|				ИЛИ ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Назначение = Аналитика.Назначение
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	|			И ТаблицаТоваровПриобретения.Склад = Аналитика.МестоХранения
	|ГДЕ
	|	ДанныеДокумента.Ссылка.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути)
	|	)
	|	И &ЭтоВозвратПоставщику
	|	И ДанныеДокумента.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.ДокументПоступления КАК Ссылка,
	|	ДанныеДокумента.ВидЗапасов КАК ВидЗапасов,
	|	ДанныеДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ДанныеДокумента.НомерГТД КАК НомерГТД,
	|	ДанныеДокумента.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ДанныеДокумента.ДокументПоступления = ТаблицаТоваров.ДокументПоступления
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры = ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	&ЭтоВозвратПоставщику
	|	И ДанныеДокумента.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка.ДокументОснование,
	|	ДанныеДокумента.ВидЗапасов,
	|	ДанныеДокумента.АналитикаУчетаНоменклатуры,
	|	ДанныеДокумента.НомерГТД,
	|	-ДанныеДокумента.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ -ВЫРАЗИТЬ(ДанныеДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ
	|ИЗ
	|	Документ.КорректировкаПриобретения.Расхождения КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументПоступления
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры = ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	ДанныеДокумента.Ссылка <> &Ссылка
	|	И НЕ &ЭтоВозвратПоставщику
	|	И ДанныеДокумента.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка.ДокументОснование,
	|	ДанныеДокумента.ВидЗапасов,
	|	ДанныеДокумента.АналитикаУчетаНоменклатуры,
	|	ДанныеДокумента.НомерГТД,
	|	ДанныеДокумента.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ
	|ИЗ
	|	Документ.КорректировкаПриобретения.Расхождения КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ДанныеДокумента.Ссылка.ДокументОснование = ТаблицаТоваров.ДокументПоступления
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры = ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	ДанныеДокумента.Ссылка <> &Ссылка
	|	И &ЭтоВозвратПоставщику
	|	И ДанныеДокумента.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Возврат поставщику с учетом корректировки по неотфактурованной поставке или по товарам в пути.
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка.ДокументОснование КАК Ссылка,
	|	ВидыЗапасовСкладские.Ссылка КАК ВидЗапасов,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ДанныеДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровПриобретения.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТоваровПриобретения.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.КорректировкаПриобретения.ВидыЗапасов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК ТаблицаТоваровВозврата
	|		ПО ДанныеДокумента.Ссылка.ДокументОснование = ТаблицаТоваровВозврата.ДокументПоступления
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Характеристика
	|			И (ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Серия
	|				ИЛИ ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Назначение = ТаблицаТоваровВозврата.АналитикаУчетаНоменклатуры.Назначение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоварыКорректировкаПриобретения КАК ТаблицаТоваровПриобретения
	|		ПО ДанныеДокумента.Ссылка = ТаблицаТоваровПриобретения.Ссылка
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Характеристика
	|			И (ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Серия
	|				ИЛИ ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				ИЛИ ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Назначение = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.Назначение
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.МестоХранения = ТаблицаТоваровПриобретения.АналитикаУчетаНоменклатуры.МестоХранения
	|			И ДанныеДокумента.НомерГТД = ТаблицаТоваровПриобретения.НомерГТД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовСкладские
	|		ПО ВидыЗапасовСкладские.Организация = ДанныеДокумента.ВидЗапасов.Организация
	|			И ВидыЗапасовСкладские.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			И ВидыЗапасовСкладские.ВладелецТовара = ДанныеДокумента.ВидЗапасов.ВладелецТовара
	|			И ВидыЗапасовСкладские.НалогообложениеНДС = ДанныеДокумента.ВидЗапасов.НалогообложениеНДС
	|			И ВидыЗапасовСкладские.ГруппаФинансовогоУчета = ДанныеДокумента.ВидЗапасов.ГруппаФинансовогоУчета
	|			И ВидыЗапасовСкладские.ГруппаПродукции = ДанныеДокумента.ВидЗапасов.ГруппаПродукции
	|			И ВидыЗапасовСкладские.ВидЦены = ДанныеДокумента.ВидЗапасов.ВидЦены
	|			И НЕ ВидыЗапасовСкладские.ЭтоДубль
	|			И НЕ ВидыЗапасовСкладские.Устаревший
	|			И НЕ ВидыЗапасовСкладские.ПометкаУдаления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ДанныеДокумента.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
	|			И (ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = Аналитика.Серия
	|				ИЛИ ДанныеДокумента.АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Назначение = Аналитика.Назначение
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	|			И ТаблицаТоваровПриобретения.Склад = Аналитика.МестоХранения
	|ГДЕ
	|	ДанныеДокумента.Ссылка.ДокументОснование.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути)
	|	)
	|	И &ЭтоВозвратПоставщику
	|	И ДанныеДокумента.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.ДокументПоступления,
	|	ДанныеДокумента.ВидЗапасов,
	|	ДанныеДокумента.АналитикаУчетаНоменклатуры,
	|	ДанныеДокумента.НомерГТД,
	|	-ДанныеДокумента.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ -ВЫРАЗИТЬ(ДанныеДокумента.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.ВидыЗапасов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ДанныеДокумента.ДокументПоступления = ТаблицаТоваров.ДокументПоступления
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры = ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	ДанныеДокумента.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ПринятыеТовары.Ссылка КАК Ссылка,
	|	ПринятыеТовары.ВидЗапасов КАК ВидЗапасов,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ПринятыеТовары.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ПринятыеТовары.ВидЗапасов КАК ВидЗапасовВладельца,
	|	ПринятыеТовары.ВидЗапасов КАК ВидЗапасовПолучателя,
	|	ПринятыеТовары.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ПринятыеТовары.Ссылка КАК ДокументОприходования,
	|	СУММА(0) КАК НаДатуКонтроля,
	|	СУММА(0) КАК НаДатуАктуальности,
	|	СУММА(0) КАК СуммаОстаток,
	|	ВЫБОР
	|		КОГДА &ЭтоВозвратПоставщику
	|			ТОГДА
	|				СУММА(ПринятыеТовары.Количество)
	|			ИНАЧЕ
	|				-СУММА(ПринятыеТовары.Количество)
	|	КОНЕЦ КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА &ЭтоВозвратПоставщику
	|			ТОГДА
	|				СУММА(ПринятыеТовары.КоличествоПоРНПТ)
	|			ИНАЧЕ
	|				-СУММА(ПринятыеТовары.КоличествоПоРНПТ)
	|	КОНЕЦ КАК КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ПринятыеТовары КАК ПринятыеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ДанныеДокумента
	|		ПО (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Организация,
	|	ПринятыеТовары.НомерГТД,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры,
	|	ПринятыеТовары.ВидЗапасов,
	|	ПринятыеТовары.Ссылка
	|
	|ИМЕЮЩИЕ
	|	ВЫБОР
	|		КОГДА &ЭтоВозвратПоставщику
	|			ТОГДА
	|				СУММА(ПринятыеТовары.Количество)
	|			ИНАЧЕ
	|				-СУММА(ПринятыеТовары.Количество)
	|	КОНЕЦ <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ПринятыеТовары.ДокументПоступления КАК Ссылка,
	|	ПринятыеТовары.ВидЗапасов КАК ВидЗапасов,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ПринятыеТовары.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ПринятыеТовары.ВидЗапасов КАК ВидЗапасовВладельца,
	|	ПринятыеТовары.ВидЗапасов КАК ВидЗапасовПолучателя,
	|	ПринятыеТовары.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ПринятыеТовары.ДокументПоступления КАК ДокументОприходования,
	|	СУММА(0) КАК НаДатуКонтроля,
	|	СУММА(0) КАК НаДатуАктуальности,
	|	СУММА(0) КАК СуммаОстаток,
	|	ВЫБОР
	|		КОГДА &ЭтоВозвратПоставщику
	|			ТОГДА
	|				СУММА(ПринятыеТовары.Количество)
	|			ИНАЧЕ
	|				-СУММА(ПринятыеТовары.Количество)
	|	КОНЕЦ КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА &ЭтоВозвратПоставщику
	|			ТОГДА
	|				СУММА(ВЫРАЗИТЬ(ПринятыеТовары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)))
	|			ИНАЧЕ
	|				-СУММА(ВЫРАЗИТЬ(ПринятыеТовары.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)))
	|	КОНЕЦ КАК КоличествоПоРНПТОстаток
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ПринятыеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК СгруппированнаяТаблицаТоваров
	|		ПО СгруппированнаяТаблицаТоваров.ДокументПоступления = ПринятыеТовары.ДокументПоступления
	|			И СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры = ПринятыеТовары.АналитикаУчетаНоменклатуры
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ДанныеДокумента
	|		ПО (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Организация,
	|	ПринятыеТовары.НомерГТД,
	|	ПринятыеТовары.АналитикаУчетаНоменклатуры,
	|	ПринятыеТовары.ВидЗапасов,
	|	ПринятыеТовары.ДокументПоступления
	|
	|ИМЕЮЩИЕ
	|	ВЫБОР
	|		КОГДА &ЭтоВозвратПоставщику
	|			ТОГДА
	|				СУММА(ПринятыеТовары.Количество)
	|			ИНАЧЕ
	|				-СУММА(ПринятыеТовары.Количество)
	|	КОНЕЦ <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТоварыПриобретения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТоварыКорректировкаПриобретения
	|;
	|";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ЭтоВозвратПоставщику",
								ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику"));
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ТаблицаОстатковПереданнойВозвратнойТары(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ЭтоВозвратТоваров = ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка",				ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ЭтоВозвратТоваров",	ЭтоВозвратТоваров);
	Запрос.УстановитьПараметр("ПустоеЗначениеДокументаПередачи",
								Метаданные.РегистрыНакопления.ПереданнаяВозвратнаяТара.Измерения.ДокументПередачи.Тип.ПривестиЗначение());
	
	Если ЗначениеЗаполнено(ДокументОбъект.Дата) Тогда 
		Запрос.УстановитьПараметр("Дата", Новый Граница(ДокументОбъект.Дата, ВидГраницы.Включая));
	Иначе
		Запрос.УстановитьПараметр("Дата", Неопределено);
	КонецЕсли;
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПереданнаяВозвратнаяТараОстатки.Номенклатура		КАК Номенклатура,
	|	ПереданнаяВозвратнаяТараОстатки.Характеристика		КАК Характеристика,
	|	ПереданнаяВозвратнаяТараОстатки.Партнер				КАК Партнер,
	|	ПереданнаяВозвратнаяТараОстатки.ДокументПередачи	КАК ДокументПередачи,
	|	ПереданнаяВозвратнаяТараОстатки.ВидЗапасов			КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)		КАК КорВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)			КАК СкладОтгрузки,
	|	ПереданнаяВозвратнаяТараОстатки.НомерГТД			КАК НомерГТД,
	|	ПереданнаяВозвратнаяТараОстатки.КоличествоОстаток	КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				И (НАЧАЛОПЕРИОДА(ПереданнаяВозвратнаяТараОстатки.ДокументПередачи.Дата, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|					ИЛИ ПереданнаяВозвратнаяТараОстатки.ДокументПередачи = &ПустоеЗначениеДокументаПередачи)
	|			ТОГДА ВЫРАЗИТЬ(ПереданнаяВозвратнаяТараОстатки.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ 0
	|	КОНЕЦ												КАК КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ПереданнаяВозвратнаяТараОстатки
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(
	|			&Дата,
	|			(Номенклатура, Характеристика, ДокументПередачи) В
	|					(ВЫБРАТЬ
	|						ТаблицаТоваров.Номенклатура,
	|						ТаблицаТоваров.Характеристика,
	|						ТаблицаТоваров.ДокументРеализации
	|					ИЗ
	|						ТаблицаТоваров)
	|				И Партнер В
	|					(ВЫБРАТЬ
	|						ТаблицаДанныхДокумента.Партнер
	|					ИЗ
	|						ТаблицаДанныхДокумента)
	|				И ВидЗапасов В
	|					(ВЫБРАТЬ
	|						ДоступныеВидыЗапасов.ВидЗапасов
	|					ИЗ
	|						ДоступныеВидыЗапасов)) КАК ПереданнаяВозвратнаяТараОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПереданнаяВозвратнаяТара.Номенклатура			КАК Номенклатура,
	|	ПереданнаяВозвратнаяТара.Характеристика			КАК Характеристика,
	|	ПереданнаяВозвратнаяТара.Партнер				КАК Партнер,
	|	ПереданнаяВозвратнаяТара.ДокументПередачи		КАК ДокументПередачи,
	|	ПереданнаяВозвратнаяТара.ВидЗапасов				КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)	КАК КорВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)		КАК СкладОтгрузки,
	|	ПереданнаяВозвратнаяТара.НомерГТД				КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ПереданнаяВозвратнаяТара.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПереданнаяВозвратнаяТара.Количество
	|		ИНАЧЕ ПереданнаяВозвратнаяТара.Количество
	|	КОНЕЦ											КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				И (НАЧАЛОПЕРИОДА(ПереданнаяВозвратнаяТара.ДокументПередачи.Дата, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|					ИЛИ ПереданнаяВозвратнаяТара.ДокументПередачи = &ПустоеЗначениеДокументаПередачи)
	|			ТОГДА ВЫБОР
	|				КОГДА ПереданнаяВозвратнаяТара.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА -ВЫРАЗИТЬ(ПереданнаяВозвратнаяТара.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|				ИНАЧЕ ВЫРАЗИТЬ(ПереданнаяВозвратнаяТара.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК КоличествоПоРНПТОстаток
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара КАК ПереданнаяВозвратнаяТара
	|ГДЕ
	|	ПереданнаяВозвратнаяТара.Регистратор = &Ссылка
	|	И (ПереданнаяВозвратнаяТара.Номенклатура, ПереданнаяВозвратнаяТара.Характеристика, ПереданнаяВозвратнаяТара.ДокументПередачи) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика,
	|				ТаблицаТоваров.ДокументРеализации
	|			ИЗ
	|				ТаблицаТоваров)
	|	И ПереданнаяВозвратнаяТара.Партнер В
	|			(ВЫБРАТЬ
	|				ТаблицаДанныхДокумента.Партнер
	|			ИЗ
	|				ТаблицаДанныхДокумента)
	|	И ПереданнаяВозвратнаяТара.ВидЗапасов В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПустоеЗначениеДокументаПередачи",
								Метаданные.РегистрыНакопления.ПереданнаяВозвратнаяТара.Измерения.ДокументПередачи.Тип.ПривестиЗначение());
	
	Если ЭтоВозвратТоваров Тогда
		
		Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов() +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТоваров.ДокументРеализации			КАК ДокументРеализации,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Номенклатура					КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика				КАК Характеристика,
		|	ТаблицаТоваров.Назначение					КАК Назначение,
		|	ТаблицаТоваров.Серия						КАК Серия
		|ПОМЕСТИТЬ СгруппированнаяТаблицаТоваров
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументРеализации,
		|	Номенклатура,
		|	Характеристика,
		|	Серия,
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТоваров.ДокументРеализации				КАК Ссылка,
		|	КлючиАналитикиУчетаНоменклатуры.КлючАналитики	КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ ТаблицаТоваровСКлючамиПоВсемСкладам
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ТаблицаТоваров.Номенклатура = КлючиАналитикиУчетаНоменклатуры.Номенклатура
		|			И ТаблицаТоваров.Характеристика = КлючиАналитикиУчетаНоменклатуры.Характеристика
		|			И ТаблицаТоваров.Серия = КлючиАналитикиУчетаНоменклатуры.Серия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатурыОтгрузки,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура	КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Характеристика	КАК Характеристика,
		|	КлючиАналитикиУчетаНоменклатуры.Назначение		КАК Назначение,
		|	КлючиАналитикиУчетаНоменклатуры.Серия			КАК Серия,
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения	КАК МестоХранения,
		|	ТЧВидыЗапасов.Ссылка							КАК ДокументРеализации,
		|	ТЧВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)	КАК КорВидЗапасов,
		|	ТЧВидыЗапасов.НомерГТД							КАК НомерГТД,
		|	ТЧВидыЗапасов.Количество						КАК Количество
		|ПОМЕСТИТЬ РеализованныеТовары
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТЧВидыЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО ТЧВидыЗапасов.Ссылка = РеализацияТоваровУслуг.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
		|		ПО РеализацияТоваровУслуг.Организация = ТаблицаДанныхДокумента.Организация
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ТЧВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
		|			И РеестрДокументов.Проведен
		|			И НЕ РеестрДокументов.ДополнительнаяЗапись
		|
		|ГДЕ
		|	РеализацияТоваровУслуг.Проведен
		|	И РеестрДокументов.Ссылка ЕСТЬ NULL
		|	И (ТЧВидыЗапасов.Ссылка, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
		|			(ВЫБРАТЬ
		|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
		|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
		|			ИЗ
		|				ТаблицаТоваровСКлючамиПоВсемСкладам)
		|	И (ТЧВидыЗапасов.ВидЗапасов) В
		|			(ВЫБРАТЬ
		|				ДоступныеВидыЗапасов.ВидЗапасов
		|			ИЗ
		|				ДоступныеВидыЗапасов)
		|	И РеализацияТоваровУслуг.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатурыОтгрузки,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура	КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Характеристика	КАК Характеристика,
		|	КлючиАналитикиУчетаНоменклатуры.Назначение		КАК Назначение,
		|	КлючиАналитикиУчетаНоменклатуры.Серия			КАК Серия,
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения	КАК МестоХранения,
		|	КорректировкаРеализации.ДокументОснование		КАК ДокументРеализации,
		|	ТЧВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
		|	ТЧВидыЗапасов.КорВидЗапасов						КАК КорВидЗапасов,
		|	ТЧВидыЗапасов.НомерГТД							КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА НЕ ТЧВидыЗапасов.НаДоходыРасходы
		|			ТОГДА ТЧВидыЗапасов.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ											КАК Количество
		|ИЗ
		|	Документ.КорректировкаРеализации.ВидыЗапасовСписание КАК ТЧВидыЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|		ПО ТЧВидыЗапасов.Ссылка = КорректировкаРеализации.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ТЧВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
		|		ПО КорректировкаРеализации.Организация = ТаблицаДанныхДокумента.Организация
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
		|			И РеестрДокументов.Проведен
		|			И НЕ РеестрДокументов.ДополнительнаяЗапись
		|
		|ГДЕ
		|	КорректировкаРеализации.Проведен
		|	И РеестрДокументов.Ссылка ЕСТЬ NULL
		|	И (КорректировкаРеализации.ДокументОснование, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
		|			(ВЫБРАТЬ
		|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
		|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
		|			ИЗ
		|				ТаблицаТоваровСКлючамиПоВсемСкладам)
		|	И (ТЧВидыЗапасов.ВидЗапасов) В
		|			(ВЫБРАТЬ
		|				ДоступныеВидыЗапасов.ВидЗапасов
		|			ИЗ
		|				ДоступныеВидыЗапасов)
		|	И КорректировкаРеализации.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатурыОтгрузки,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура	КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Характеристика	КАК Характеристика,
		|	КлючиАналитикиУчетаНоменклатуры.Назначение		КАК Назначение,
		|	КлючиАналитикиУчетаНоменклатуры.Серия			КАК Серия,
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения	КАК МестоХранения,
		|	КорректировкаРеализации.ДокументОснование		КАК ДокументРеализации,
		|	ТЧВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
		|	ТЧВидыЗапасов.КорВидЗапасов						КАК КорВидЗапасов,
		|	ТЧВидыЗапасов.НомерГТД							КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА НЕ ТЧВидыЗапасов.НаДоходыРасходы
		|			ТОГДА -ТЧВидыЗапасов.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ											КАК Количество
		|ИЗ
		|	Документ.КорректировкаРеализации.ВидыЗапасовОприходование КАК ТЧВидыЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|		ПО ТЧВидыЗапасов.Ссылка = КорректировкаРеализации.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ТЧВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
		|		ПО КорректировкаРеализации.Организация = ТаблицаДанныхДокумента.Организация
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
		|			И РеестрДокументов.Проведен
		|			И НЕ РеестрДокументов.ДополнительнаяЗапись
		|
		|ГДЕ
		|	КорректировкаРеализации.Проведен
		|	И РеестрДокументов.Ссылка ЕСТЬ NULL
		|	И (КорректировкаРеализации.ДокументОснование, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
		|			(ВЫБРАТЬ
		|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
		|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
		|			ИЗ
		|				ТаблицаТоваровСКлючамиПоВсемСкладам)
		|	И (ТЧВидыЗапасов.ВидЗапасов) В
		|			(ВЫБРАТЬ
		|				ДоступныеВидыЗапасов.ВидЗапасов
		|			ИЗ
		|				ДоступныеВидыЗапасов)
		|	И КорректировкаРеализации.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТЧВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки	КАК АналитикаУчетаНоменклатурыОтгрузки,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура		КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Характеристика		КАК Характеристика,
		|	КлючиАналитикиУчетаНоменклатуры.Назначение			КАК Назначение,
		|	КлючиАналитикиУчетаНоменклатуры.Серия				КАК Серия,
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения		КАК МестоХранения,
		|	ТЧВидыЗапасов.ДокументРеализации					КАК ДокументРеализации,
		|	ТЧВидыЗапасов.ВидЗапасов							КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)		КАК КорВидЗапасов,
		|	ТЧВидыЗапасов.НомерГТД								КАК НомерГТД,
		|	-ТЧВидыЗапасов.Количество							КАК Количество
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК ТЧВидыЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
		|		ПО ТЧВидыЗапасов.Ссылка = ВозвратТоваровОтКлиента.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
		|		ПО ВозвратТоваровОтКлиента.Организация = ТаблицаДанныхДокумента.Организация
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ТЧВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|		ПО ТЧВидыЗапасов.Ссылка = РеестрДокументов.СторнируемыйДокумент
		|			И РеестрДокументов.Проведен
		|			И НЕ РеестрДокументов.ДополнительнаяЗапись
		|
		|ГДЕ
		|	ТЧВидыЗапасов.Ссылка <> &Ссылка
		|	И РеестрДокументов.Ссылка ЕСТЬ NULL
		|	И (ТЧВидыЗапасов.ДокументРеализации, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
		|			(ВЫБРАТЬ
		|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
		|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
		|			ИЗ
		|				ТаблицаТоваровСКлючамиПоВсемСкладам)
		|	И ВозвратТоваровОтКлиента.Проведен
		|	И (ТЧВидыЗапасов.ВидЗапасов) В
		|			(ВЫБРАТЬ
		|				ДоступныеВидыЗапасов.ВидЗапасов
		|			ИЗ
		|				ДоступныеВидыЗапасов)
		|	И ВозвратТоваровОтКлиента.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументРеализации,
		|	Номенклатура,
		|	Характеристика,
		|	Серия,
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	РеализованныеТовары.Номенклатура		КАК Номенклатура,
		|	РеализованныеТовары.Характеристика		КАК Характеристика,
		|	РеализованныеТовары.МестоХранения		КАК СкладОтгрузки,
		|	РеализованныеТовары.Назначение			КАК Назначение,
		|	РеализованныеТовары.Серия				КАК Серия,
		|	РеализованныеТовары.ДокументРеализации	КАК ДокументРеализации,
		|	РеализованныеТовары.ВидЗапасов			КАК ВидЗапасовОтгрузки,
		|	РеализованныеТовары.КорВидЗапасов		КАК КорВидЗапасов,
		|	РеализованныеТовары.НомерГТД			КАК НомерГТД,
		|	СУММА(РеализованныеТовары.Количество)	КАК КоличествоОстаток
		|ИЗ
		|	РеализованныеТовары КАК РеализованныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО РеализованныеТовары.ВидЗапасов = ВидыЗапасов.Ссылка
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК СгруппированнаяТаблицаТоваров
		|		ПО РеализованныеТовары.Номенклатура = СгруппированнаяТаблицаТоваров.Номенклатура
		|			И РеализованныеТовары.Характеристика = СгруппированнаяТаблицаТоваров.Характеристика
		|			И РеализованныеТовары.Серия = СгруппированнаяТаблицаТоваров.Серия
		|			И РеализованныеТовары.ДокументРеализации = СгруппированнаяТаблицаТоваров.ДокументРеализации
		|			И (РеализованныеТовары.Назначение = СгруппированнаяТаблицаТоваров.Назначение
		|				ИЛИ СгруппированнаяТаблицаТоваров.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|				ИЛИ РеализованныеТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
		|
		|СГРУППИРОВАТЬ ПО
		|	СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	РеализованныеТовары.Номенклатура,
		|	РеализованныеТовары.Характеристика,
		|	РеализованныеТовары.МестоХранения,
		|	РеализованныеТовары.Назначение,
		|	РеализованныеТовары.Серия,
		|	РеализованныеТовары.ДокументРеализации,
		|	РеализованныеТовары.ВидЗапасов,
		|	РеализованныеТовары.КорВидЗапасов,
		|	РеализованныеТовары.НомерГТД
		|
		|ИМЕЮЩИЕ
		|	СУММА(РеализованныеТовары.Количество) > 0";
		
		Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов()
						+ ТекстЗапросаПереданнаяВозвратнаяТараОстатки(Ложь)
						+ ОбщегоНазначения.РазделительПакетаЗапросов() +
		"УНИЧТОЖИТЬ ПереданнаяВозвратнаяТараОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СгруппированнаяТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаТоваровСКлючамиПоВсемСкладам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РеализованныеТовары";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ПереданнаяТараОстатки		= РезультатЗапроса[РезультатЗапроса.ВГраница() - 4].Выгрузить();
		РеализованныеТоварыОстатки	= РезультатЗапроса[РезультатЗапроса.ВГраница() - 5].Выгрузить();
		
		ИменаКолонокГруппировки = "АналитикаУчетаНоменклатуры, ДокументРеализации, СкладОтгрузки, ВидЗапасовОтгрузки,
									|НомерГТД";
		КлючПоиска = "АналитикаУчетаНоменклатуры, ДокументРеализации, ВидЗапасовОтгрузки, НомерГТД";
		
		РеализованныеТоварыОстатки.Свернуть(ИменаКолонокГруппировки, "КоличествоОстаток");
		РеализованныеТоварыОстатки.Индексы.Добавить(КлючПоиска);
		
		ТаблицаОстатков = ПереданнаяТараОстатки.СкопироватьКолонки();
		ТаблицаОстатков.Колонки.Добавить("КоличествоПоРНПТ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(23, 11)));
		
		ОтборСтрок = Новый Структура(КлючПоиска);
		
		Для Каждого СтрокаТары Из ПереданнаяТараОстатки Цикл
			
			КоличествоВСтроке		= СтрокаТары.КоличествоОстаток;
			КоличествоПоРНПТВСтроке	= СтрокаТары.КоличествоПоРНПТОстаток;
			
			ЗаполнитьЗначенияСвойств(ОтборСтрок, СтрокаТары);
			
			Для Каждого СтрокаРеализации Из РеализованныеТоварыОстатки.НайтиСтроки(ОтборСтрок) Цикл
				Если СтрокаРеализации.КоличествоОстаток <= 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Количество = Мин(КоличествоВСтроке, СтрокаРеализации.КоличествоОстаток);
				
				НоваяСтрока = ТаблицаОстатков.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТары);
				
				НоваяСтрока.СкладОтгрузки		= СтрокаРеализации.СкладОтгрузки;
				НоваяСтрока.КоличествоОстаток	= Количество;
				НоваяСтрока.КоличествоПоРНПТ	= ?(КоличествоВСтроке - Количество = 0,
													КоличествоПоРНПТВСтроке,
													Количество * СтрокаТары.КоличествоПоРНПТОстаток
														/ СтрокаТары.КоличествоОстаток);
				
				СтрокаРеализации.КоличествоОстаток = СтрокаРеализации.КоличествоОстаток - Количество;
				
				КоличествоВСтроке		= КоличествоВСтроке - НоваяСтрока.КоличествоОстаток;
				КоличествоПоРНПТВСтроке	= КоличествоПоРНПТВСтроке - НоваяСтрока.КоличествоПоРНПТОстаток;
				
				Если КоличествоВСтроке = 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если КоличествоВСтроке > 0 Тогда
				НоваяСтрока = ТаблицаОстатков.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТары);
				
				НоваяСтрока.СкладОтгрузки		= ДокументОбъект.Склад;
				НоваяСтрока.КоличествоОстаток	= КоличествоВСтроке;
				НоваяСтрока.КоличествоПоРНПТ	= КоличествоПоРНПТВСтроке;
			КонецЕсли;
			
		КонецЦикла;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПереданнаяВозвратнаяТара.Склад				КАК Партнер,
		|	ПереданнаяВозвратнаяТара.Номенклатура		КАК Номенклатура,
		|	ПереданнаяВозвратнаяТара.Характеристика		КАК Характеристика,
		|	ПереданнаяВозвратнаяТара.ДокументРеализации	КАК ДокументПередачи,
		|	ПереданнаяВозвратнаяТара.ВидЗапасовОтгрузки	КАК ВидЗапасов,
		|	ПереданнаяВозвратнаяТара.КорВидЗапасов		КАК КорВидЗапасов,
		|	ПереданнаяВозвратнаяТара.СкладОтгрузки		КАК СкладОтгрузки,
		|	ПереданнаяВозвратнаяТара.НомерГТД			КАК НомерГТД,
		|	ПереданнаяВозвратнаяТара.КоличествоОстаток	КАК КоличествоОстаток,
		|	ПереданнаяВозвратнаяТара.КоличествоПоРНПТ	КАК КоличествоПоРНПТОстаток
		|ПОМЕСТИТЬ ПереданнаяВозвратнаяТараОстатки
		|ИЗ
		|	&ТаблицаОстатков КАК ПереданнаяВозвратнаяТара";
		
		Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов()
						+ ТекстЗапросаПереданнаяВозвратнаяТараОстатки();
		
		Запрос.УстановитьПараметр("ТаблицаОстатков", ТаблицаОстатков);
		
	Иначе
		Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов()
						+ ТекстЗапросаПереданнаяВозвратнаяТараОстатки();
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ТаблицаОстатковПереданныхМеждуОрганизациямиТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлючиАналитикиУчетаНоменклатуры.Ссылка КАК АналитикаУчетаНоменклатуры,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение
	|ПОМЕСТИТЬ ВтКлючиАналитикиОтбораОстатков
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|ГДЕ
	|	КлючиАналитикиУчетаНоменклатуры.Ссылка В
	|			(ВЫБРАТЬ
	|				ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ВтОтборыОстатковОрганизаций)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереданныеТовары.Организация КАК Организация,
	|	ПереданныеТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ПереданныеТовары.АналитикаУчетаНоменклатурыОтгрузки КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ПереданныеТовары.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	ПереданныеТовары.ДокументПередачи КАК ДокументПередачи,
	|	ПереданныеТовары.ВидЗапасов КАК ВидЗапасов,
	|	ПереданныеТовары.НомерГТД КАК НомерГТД,
	|	СУММА(ПереданныеТовары.Количество) КАК КоличествоОстаток,
	|	СУММА(ПереданныеТовары.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыОтгрузки,
	|		ВидыЗапасов.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|		ВтКлючиАналитикиОтбораОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ВидыЗапасов.Ссылка.ОрганизацияПолучатель КАК Организация,
	|		ВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасов,
	|		ВидыЗапасов.НомерГТД КАК НомерГТД,
	|		ВидыЗапасов.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ,
	|		ВидыЗапасов.Ссылка КАК ДокументПередачи
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|			ПО ВидыЗапасов.Ссылка.ХозяйственнаяОперация = ТаблицаДанныхДокумента.ХозяйственнаяОперацияПередачи
	|				И ВидыЗапасов.Ссылка.ОрганизацияПолучатель = ТаблицаДанныхДокумента.Организация
	|				И ВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.ОрганизацияПолучатель
	|				И (ВидыЗапасов.Ссылка.Проведен)
	|				И (ВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, МЕСЯЦ))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|			ПО ВидыЗапасов.Ссылка = ТаблицаТоваров.ДокументПередачи
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|			ПО (КлючиАналитикиУчетаНоменклатуры.Ссылка = ВидыЗапасов.АналитикаУчетаНоменклатуры)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтКлючиАналитикиОтбораОстатков КАК ВтКлючиАналитикиОтбораОстатков
	|			ПО КлючиАналитикиУчетаНоменклатуры.Номенклатура = ВтКлючиАналитикиОтбораОстатков.Номенклатура
	|				И КлючиАналитикиУчетаНоменклатуры.Характеристика = ВтКлючиАналитикиОтбораОстатков.Характеристика
	|				И КлючиАналитикиУчетаНоменклатуры.Серия = ВтКлючиАналитикиОтбораОстатков.Серия
	|				И КлючиАналитикиУчетаНоменклатуры.Назначение = ВтКлючиАналитикиОтбораОстатков.Назначение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки,
	|		ВидыЗапасов.ВидЗапасовПолучателя,
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|		ВидыЗапасов.Ссылка.Организация,
	|		ВидыЗапасов.ВидЗапасов,
	|		ВидыЗапасов.НомерГТД,
	|		-ВидыЗапасов.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ -ВЫРАЗИТЬ(ВидыЗапасов.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ,
	|		ВидыЗапасов.ДокументПередачи
	|	ИЗ
	|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|			ПО ВидыЗапасов.Ссылка.ХозяйственнаяОперация = ТаблицаДанныхДокумента.ХозяйственнаяОперацияВозврата
	|				И ВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|				И ВидыЗапасов.Ссылка.ОрганизацияПолучатель = ТаблицаДанныхДокумента.ОрганизацияПолучатель
	|				И (ВидыЗапасов.Ссылка.Проведен)
	|				И (ВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, МЕСЯЦ))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|			ПО ВидыЗапасов.ДокументПередачи = ТаблицаТоваров.ДокументПередачи
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|			ПО (КлючиАналитикиУчетаНоменклатуры.Ссылка = ВидыЗапасов.АналитикаУчетаНоменклатуры)
	|	ГДЕ
	|		ВидыЗапасов.Ссылка <> &Ссылка
	|		И (КлючиАналитикиУчетаНоменклатуры.Номенклатура, КлючиАналитикиУчетаНоменклатуры.Характеристика, КлючиАналитикиУчетаНоменклатуры.Серия, КлючиАналитикиУчетаНоменклатуры.Назначение) В
	|				(ВЫБРАТЬ
	|					ВтКлючиАналитикиОтбораОстатков.Номенклатура,
	|					ВтКлючиАналитикиОтбораОстатков.Характеристика,
	|					ВтКлючиАналитикиОтбораОстатков.Серия,
	|					ВтКлючиАналитикиОтбораОстатков.Назначение
	|				ИЗ
	|					ВтКлючиАналитикиОтбораОстатков)) КАК ПереданныеТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереданныеТовары.НомерГТД,
	|	ПереданныеТовары.Организация,
	|	ПереданныеТовары.АналитикаУчетаНоменклатуры,
	|	ПереданныеТовары.АналитикаУчетаНоменклатурыОтгрузки,
	|	ПереданныеТовары.ВидЗапасовОтгрузки,
	|	ПереданныеТовары.ДокументПередачи,
	|	ПереданныеТовары.ВидЗапасов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПереданныеТовары.Количество) > 0";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаОстатковПереданныхТоваров = РезультатЗапроса.Выгрузить();
	
	СформироватьВТТаблицаОстатков("ТоварыОрганизаций",
									ДокументОбъект,
									МенеджерВременныхТаблиц,
									ПараметрыЗаполненияВидовЗапасов,
									Истина);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОстатков.Организация КАК Организация,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.Склад КАК Склад,
	|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатков.Характеристика КАК Характеристика,
	|	ТаблицаОстатков.Серия КАК Серия,
	|	ТаблицаОстатков.Назначение КАК Назначение,
	|	ТаблицаОстатков.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаОстатков.НомерГТД КАК НомерГТД,
	|	ТаблицаОстатков.ДатаПоступления КАК ДатаПоступления,
	|	ТаблицаОстатков.КоличествоОстаток КАК КоличествоОстаток,
	|	ВЫРАЗИТЬ(ТаблицаОстатков.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТОстаток,
	|	ТаблицаОстатков.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков";
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатковТоваровОрганизаций = РезультатЗапроса.Выгрузить();
	
	ТаблицаТоваров = ДокументОбъект.Товары.Выгрузить(,
													"АналитикаУчетаНоменклатуры, ДокументПередачи, НомерГТД,Количество,
													|КоличествоПоРНПТ");
	ТаблицаТоваров.Свернуть("АналитикаУчетаНоменклатуры, ДокументПередачи, НомерГТД", "Количество, КоличествоПоРНПТ");
	
	ВычестьИзОстатковПереданныеТовары(ТаблицаОстатковТоваровОрганизаций, ТаблицаОстатковПереданныхТоваров, ТаблицаТоваров);
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТоваровОрганизаций.Организация КАК Организация,
	|	ОстаткиТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиТоваровОрганизаций.Склад КАК Склад,
	|	ОстаткиТоваровОрганизаций.Номенклатура КАК Номенклатура,
	|	ОстаткиТоваровОрганизаций.Характеристика КАК Характеристика,
	|	ОстаткиТоваровОрганизаций.Серия КАК Серия,
	|	ОстаткиТоваровОрганизаций.Назначение КАК Назначение,
	|	ОстаткиТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	ОстаткиТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	ОстаткиТоваровОрганизаций.КоличествоОстаток КАК КоличествоОстаток,
	|	ВЫРАЗИТЬ(ОстаткиТоваровОрганизаций.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТОстаток,
	|	ОстаткиТоваровОрганизаций.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ОстаткиТоваровОрганизаций
	|ИЗ
	|	&ТаблицаОстатковТоваровОрганизаций КАК ОстаткиТоваровОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПереданныхТоваров.Организация КАК Организация,
	|	ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатурыОтгрузки КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ОстаткиПереданныхТоваров.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	ОстаткиПереданныхТоваров.ДокументПередачи КАК ДокументПередачи,
	|	ОстаткиПереданныхТоваров.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиПереданныхТоваров.НомерГТД КАК НомерГТД,
	|	ОстаткиПереданныхТоваров.КоличествоОстаток КАК КоличествоОстаток,
	|	ВЫРАЗИТЬ(ОстаткиПереданныхТоваров.КоличествоПоРНПТОстаток КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ОстаткиПереданныхТоваров
	|ИЗ
	|	&ТаблицаОстатковПереданныхТоваров КАК ОстаткиПереданныхТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТоваровОрганизаций.Организация КАК Организация,
	|	ОстаткиТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ОстаткиТоваровОрганизаций.Склад КАК Склад,
	|	ОстаткиТоваровОрганизаций.Номенклатура КАК Номенклатура,
	|	ОстаткиТоваровОрганизаций.Характеристика КАК Характеристика,
	|	ОстаткиТоваровОрганизаций.Серия КАК Серия,
	|	ОстаткиТоваровОрганизаций.Назначение КАК Назначение,
	|	ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка) КАК ДокументПередачи,
	|	ОстаткиТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	ОстаткиТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	ОстаткиТоваровОрганизаций.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиТоваровОрганизаций.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток,
	|	ОстаткиТоваровОрганизаций.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ОстаткиТоваровОрганизаций КАК ОстаткиТоваровОрганизаций
	|
	|ГДЕ
	|	ОстаткиТоваровОрганизаций.КоличествоОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиПереданныхТоваров.Организация,
	|	ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатуры,
	|	ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатурыОтгрузки,
	|	ОстаткиПереданныхТоваров.ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	КлючиАналитикиУчетаНоменклатуры.МестоХранения,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение,
	|	ОстаткиПереданныхТоваров.ДокументПередачи,
	|	ОстаткиПереданныхТоваров.ВидЗапасов,
	|	ОстаткиПереданныхТоваров.НомерГТД,
	|	ДатыПоступленияТоваровОрганизаций.ДатаПоступления,
	|	ОстаткиПереданныхТоваров.КоличествоОстаток,
	|	ОстаткиПереданныхТоваров.КоличествоПоРНПТОстаток,
	|	0
	|ИЗ
	|	ОстаткиПереданныхТоваров КАК ОстаткиПереданныхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО ОстаткиПереданныхТоваров.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И ОстаткиПереданныхТоваров.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|			И (КлючиАналитикиУчетаНоменклатуры.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура)
	|			И (КлючиАналитикиУчетаНоменклатуры.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика)
	|			И (КлючиАналитикиУчетаНоменклатуры.Серия = ДатыПоступленияТоваровОрганизаций.Серия)
	|			И (КлючиАналитикиУчетаНоменклатуры.Назначение = ДатыПоступленияТоваровОрганизаций.Назначение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиТоваровОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиПереданныхТоваров";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаОстатковТоваровОрганизаций", ТаблицаОстатковТоваровОрганизаций);
	Запрос.УстановитьПараметр("ТаблицаОстатковПереданныхТоваров", ТаблицаОстатковПереданныхТоваров);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ВычестьИзОстатковПереданныеТовары(ТаблицаОстатковТоваровОрганизаций, ТаблицаОстатковПереданныхТоваров, ТаблицаТоваров)
	
	СтруктураПоискаОстатков	= Новый Структура("Организация, АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД");
	СтруктураПоискаТоваров	= Новый Структура("АналитикаУчетаНоменклатуры, ДокументПередачи, НомерГТД");
	
	Для Каждого СтрПереданных Из ТаблицаОстатковПереданныхТоваров Цикл
		
		КоличествоКВычету = СтрПереданных.КоличествоОстаток;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаТоваров, СтрПереданных);
		
		СтрокиТоваров = ТаблицаТоваров.НайтиСтроки(СтруктураПоискаТоваров);
		Если СтрокиТоваров.Количество() > 0 Тогда
			// Вычитаем не превышающее количество из таблицы товаров
			КоличествоКВычету = Мин(СтрокиТоваров[0].Количество, КоличествоКВычету);
		Иначе
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаОстатков, СтрПереданных);
		СтрокиОстатковТоваровОрганизаций = ТаблицаОстатковТоваровОрганизаций.НайтиСтроки(СтруктураПоискаОстатков);
		
		Для Каждого СтрОстатков Из СтрокиОстатковТоваровОрганизаций Цикл
			
			Если КоличествоКВычету = 0
				Или СтрОстатков.КоличествоОстаток = 0 Тогда
				
				Прервать;
				
			КонецЕсли;
			
			Если СтрОстатков.КоличествоОстаток > КоличествоКВычету Тогда
				КоличествоОстаток = СтрОстатков.КоличествоОстаток;
				
				СтрОстатков.КоличествоОстаток = СтрОстатков.КоличествоОстаток - КоличествоКВычету;
				СтрОстатков.КоличествоПоРНПТОстаток = СтрОстатков.КоличествоПоРНПТОстаток - (КоличествоКВычету
														* СтрОстатков.КоличествоПоРНПТОстаток / КоличествоОстаток);
			Иначе
				СтрОстатков.КоличествоОстаток = 0;
				СтрОстатков.КоличествоПоРНПТОстаток = 0;
			КонецЕсли;
			
		КонецЦикла;
		
		Если СтрокиТоваров.Количество() Тогда
			Количество = СтрокиТоваров[0].Количество;
			
			СтрокиТоваров[0].Количество = КоличествоКВычету;
			СтрокиТоваров[0].КоличествоПоРНПТ = ?(Количество = 0,
													0,
													КоличествоКВычету * СтрокиТоваров[0].КоличествоПоРНПТ / Количество);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольПроведенияПоТоварамОрганизаций

Функция ДатаПоследнегоДвижения() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТоварыОрганизаций.Период КАК Период,
	|	ТоварыОрганизаций.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.Период > ДобавитьМесяц(ТекущаяДатаСеанса(), 12) Тогда
			
			ТекстИсключения = НСтр("ru = 'Документ %Регистратор% проведен по регистру %Регистр1% с датой, которая больше текущей на 12 месяцев. Отмените проведение этого документа и исправьте дату.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Регистр1%", "ТоварыОрганизаций");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Регистратор%", Выборка.Регистратор);
			ВызватьИсключение ТекстИсключения;
			
		КонецЕсли;
		
		Возврат Выборка.Период;
	Иначе
		Возврат Дата('00010101');
	КонецЕсли;
	
КонецФункции

Функция ДатаПервогоРезерва(ДатаПоУмолчанию) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РезервыТоваровОрганизаций.Период КАК Период
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Период;
	Иначе
		Возврат ДатаПоУмолчанию;
	КонецЕсли;
	
КонецФункции

Функция ИмяВтОстаткиНаКонецМесяца(Период, ПрефиксИмени = "") Экспорт
	
	Если ПустаяСтрока(ПрефиксИмени) Тогда
		Возврат "Остатки" + Формат(КонецМесяца(Период), ФорматДатыВИмениВТ());
	Иначе
		Возврат ПрефиксИмени + Формат(КонецМесяца(Период), ФорматДатыВИмениВТ());
	КонецЕсли;
	
КонецФункции

Функция ФорматДатыВИмениВТ() Экспорт
	
	Возврат "ДФ=yyyyMMdd";
	
КонецФункции

#КонецОбласти

#Область Прочее

// Записывает движения документа в ИБ.
//
// Параметры:
//	МенеджерДвижений - РегистрНакопленияМенеджер - Регистр накопления, в который пишутся движения.
//	Таблица - ТаблицаЗначений - Таблица источник движений.
//	Ссылка - ДокументСсылка - Ссылка на документ.
//	ЗаполнятьЦиклом - Булево - Записи в набор загружаются или же заполняются циклом. По умолчанию, ложь.
//	УстановитьАктивность - Булево - Установка активности у записываемых записей. По умолчанию, истина.
//	ДопСвойства - Структура - Свойства передаваемые в набор записей регистра.
//
Процедура ЗаписатьДвиженияВБазу(МенеджерДвижений, Таблица, Ссылка, ЗаполнятьЦиклом = Ложь, УстановитьАктивность = Истина, ДопСвойства = Неопределено) Экспорт
	Набор = МенеджерДвижений.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Ссылка);
	Набор.Прочитать();
	Если ДопСвойства <> Неопределено Тогда
		Для Каждого Свойство Из ДопСвойства Цикл
			Набор.ДополнительныеСвойства.Вставить(Свойство.Ключ, Свойство.Значение);
		КонецЦикла;
	КонецЕсли;
	Если Набор.Количество() > 0 Или Таблица.Количество() > 0 Тогда
		Если ЗаполнятьЦиклом Тогда
			Для Каждого Строка Из Таблица Цикл
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Строка);
			КонецЦикла;
		Иначе
			Набор.Загрузить(Таблица);
		КонецЕсли;
		Если УстановитьАктивность Тогда
			Набор.УстановитьАктивность(Истина);
		КонецЕсли;
		Набор.Записать();
	КонецЕсли;
КонецПроцедуры

Функция ОписаниеТаблицСОбязательнымиКолонками()
	
	ОписаниеТаблиц = Новый Структура;
	
	ОписаниеТаблиц.Вставить("ТаблицаТоваров", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ДокументОприходования", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ПодбиратьВидыЗапасов", "ИСТИНА");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("СуммаВознаграждения", "0");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("СуммаНДСВознаграждения", "0");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ВидЦены", "ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)");
	
	ОписаниеТаблиц.Вставить("ТаблицаВидыЗапасов", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ДокументОприходования", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("СкладОтгрузки", "ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ВидыЗапасовУказаныВручную", "ЛОЖЬ");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ВидЗапасовПолучателя", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("КорВидЗапасов", "ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)");
	
	ОписаниеТаблиц.Вставить("ТаблицаВидыЗапасовПоПериодам", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("ДокументОприходования", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("СкладОтгрузки", "ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)");
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("ВидыЗапасовУказаныВручную", "ЛОЖЬ");
	
	ОписаниеТаблиц.Вставить("ИсходнаяТаблицаТоваров", Новый Соответствие);
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ДокументОприходования", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ГруппаПродукции", "ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)");
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ВидЦены", "ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)");
	
	ОписаниеТаблиц.Вставить("ТаблицаДанныхДокумента", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаДанныхДокумента.Вставить("Валюта", "ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)");
	
	Возврат ОписаниеТаблиц;

КонецФункции

// Служебная функция для просмотра содержимого регистра РезервыТоваровОрганизаций в отладчике.
// 
// Возвращаемое значение:
// ТаблицаЗначений  - содержимое регистра.
//
Функция ПоказатьРезервыТоваровОрганизаций() Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ * ИЗ РегистрНакопления.РезервыТоваровОрганизаций");
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

// Выполняет проверку наличия записей в регистре сведений РезервахТоваровОрганизаций удаляемого документа.
//
// Параметры:
//	Источник - ДокументОбъект -РегистрНакопленияМенеджер - Регистр накопления, в который пишутся движения.
//	Отказ - Булево - Истина, признак того, что не нужно удалять регистратор.
//
Процедура ПередУдалениемРегистратораПроверитьНаличиеЗаписейВРезервахТоваровОрганизаций(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ТипДокумента = ТипЗнч(Источник.Ссылка);
	
	Если Не Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций.СтандартныеРеквизиты.Регистратор.Тип.СодержитТип(ТипДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РезервыТоваровОрганизаций.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|ГДЕ
	|	РезервыТоваровОрганизаций.Регистратор = &Регистратор";
	
	Запрос.УстановитьПараметр("Регистратор", Источник.Ссылка);
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		
		ТекстИсключения = НСтр("ru = 'По документу %Документ% есть движения в регистре %Регистр1%. Удаление документа невозможно.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Регистр1%", "РезервыТоваровОрганизаций");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Документ%", Источник.Ссылка);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
КонецПроцедуры

// Проверяет наличие временной таблице в менеджере временных таблиц и содержит ли она записи.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, для которого выполняется проверка.
//	ИмяВТ - Строка - имя временной таблицы, для которой выполняется проверка наличия записей.
//
// Возвращаемое значение:
//	Булево - Истина, когда менеджер временных таблиц содержит временную таблицу с записями.
//
Функция ЕстьЗаписиВоВременнойТаблице(МенеджерВременныхТаблиц, ИмяВТ)
	
	ВременнаяТаблица = МенеджерВременныхТаблиц.Таблицы.Найти(ИмяВТ);
	
	Если ВременнаяТаблица = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Не ВременнаяТаблица.ПолучитьДанные().Пустой();
	
КонецФункции

// Сохраняет в менеджере временных таблиц движения сторнируемого документа по регистру Товары организаций.
//
// Параметры:
//	СторнируемыйДокумент - ДокументСсылка - Ссылка на сторнируемый документ.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, в который будет помещена таблица.
//	ИмяВТ - Строка - имя временной таблицы, которая будет содержать сведения о движениях документа.
//
Процедура СохранитьДвиженияСторнируемогоДокумента(СторнируемыйДокумент, МенеджерВременныхТаблиц, ИмяВТ)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.Период		КАК Период,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Организация	КАК Организация,
	|	ТоварыОрганизаций.ВидЗапасов	КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД		КАК НомерГТД,
	|	ТоварыОрганизаций.Сторно		КАК Сторно,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.Количество
	|		ИНАЧЕ ТоварыОрганизаций.Количество
	|	КОНЕЦ							КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТоварыОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|	КОНЕЦ							КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ИмяВТ
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|ГДЕ
	|	ТоварыОрганизаций.Регистратор = &СторнируемыйДокумент
	|	И НЕ ТоварыОрганизаций.Сторно";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяВТ", ИмяВТ);
	
	Запрос.УстановитьПараметр("СторнируемыйДокумент", СторнируемыйДокумент);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапросаПереданнаяВозвратнаяТараОстатки(ЭтоВременнаяТаблица = Истина)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация						КАК Организация,
	|	АналитикаУчетаНоменклатуры.МестоХранения				КАК Склад,
	|	АналитикаУчетаНоменклатуры.КлючАналитики				КАК АналитикаУчетаНоменклатуры,
	|	АналитикаУчетаНоменклатуры.Номенклатура					КАК Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика				КАК Характеристика,
	|	АналитикаУчетаНоменклатуры.Серия						КАК Серия,
	|	ВЫБОР
	|		КОГДА &ЭтоВозвратТоваров
	|			ТОГДА ПереданнаяВозвратнаяТара.СкладОтгрузки
	|		ИНАЧЕ ТаблицаДанныхДокумента.Склад
	|	КОНЕЦ													КАК СкладОтгрузки,
	|	АналитикаУчетаНоменклатуры.Назначение					КАК Назначение,
	|	ПереданнаяВозвратнаяТара.ДокументПередачи				КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО											КАК ДокументОприходования,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПереданнаяВозвратнаяТара.ВидЗапасов
	|	КОНЕЦ													КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ВидыЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ПереданнаяВозвратнаяТара.ВидЗапасов
	|	КОНЕЦ													КАК ВидЗапасовВладельца,
	|	ПереданнаяВозвратнаяТара.ВидЗапасов						КАК ВидЗапасовОтгрузки,
	|	ПереданнаяВозвратнаяТара.КорВидЗапасов					КАК КорВидЗапасов,
	|	ПереданнаяВозвратнаяТара.НомерГТД						КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)		КАК Сделка,
	|	НЕОПРЕДЕЛЕНО											КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО											КАК ДатаПоступления,
	|	СУММА(ПереданнаяВозвратнаяТара.КоличествоОстаток)		КАК КоличествоОстаток,
	|	СУММА(ПереданнаяВозвратнаяТара.КоличествоПоРНПТОстаток)	КАК КоличествоПоРНПТОстаток,
	|	0														КАК СуммаОстаток
	|,&ТекстИмяВТРезультата
	|ИЗ
	|	ПереданнаяВозвратнаяТараОстатки КАК ПереданнаяВозвратнаяТара
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ПереданнаяВозвратнаяТара.ВидЗапасов = ВидыЗапасов.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО ПереданнаяВозвратнаяТара.Номенклатура = АналитикаУчетаНоменклатуры.Номенклатура
	|			И ПереданнаяВозвратнаяТара.Характеристика = АналитикаУчетаНоменклатуры.Характеристика
	|			И ПереданнаяВозвратнаяТара.Партнер = АналитикаУчетаНоменклатуры.МестоХранения
	|			И АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И АналитикаУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанныхДокумента.Организация,
	|	АналитикаУчетаНоменклатуры.МестоХранения,
	|	АналитикаУчетаНоменклатуры.КлючАналитики,
	|	АналитикаУчетаНоменклатуры.Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика,
	|	АналитикаУчетаНоменклатуры.Серия,
	|	ВЫБОР
	|		КОГДА &ЭтоВозвратТоваров
	|			ТОГДА ПереданнаяВозвратнаяТара.СкладОтгрузки
	|		ИНАЧЕ ТаблицаДанныхДокумента.Склад
	|	КОНЕЦ,
	|	АналитикаУчетаНоменклатуры.Назначение,
	|	ПереданнаяВозвратнаяТара.ДокументПередачи,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПереданнаяВозвратнаяТара.ВидЗапасов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ВидыЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ПереданнаяВозвратнаяТара.ВидЗапасов
	|	КОНЕЦ,
	|	ПереданнаяВозвратнаяТара.ВидЗапасов,
	|	ПереданнаяВозвратнаяТара.КорВидЗапасов,
	|	ПереданнаяВозвратнаяТара.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПереданнаяВозвратнаяТара.КоличествоОстаток) > 0";
	
	Если ЭтоВременнаяТаблица Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПереданнаяВозвратнаяТараОстатки";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								",&ТекстИмяВТРезультата",
								?(ЭтоВременнаяТаблица,
									"ПОМЕСТИТЬ ТаблицаОстатков",
									""));
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОформлениеВыкуповИПередач

Функция ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Период");
	Результат.Вставить("Отправитель");
	Результат.Вставить("Получатель");
	Результат.Вставить("Контрагент");
	Результат.Вставить("МестоХранения");
	Результат.Вставить("МестоХраненияПартнер");
	Результат.Вставить("МестоХраненияСклад");
	Результат.Вставить("МестоХраненияКонтрагент");
	Результат.Вставить("МестоХраненияДоговор");
	Результат.Вставить("МестоХраненияПодразделение");
	Результат.Вставить("ХозяйственнаяОперация");
	Результат.Вставить("НалогообложениеНДС");
	Результат.Вставить("Договор");
	Результат.Вставить("ВидЦены");
	Результат.Вставить("Валюта");
	
	Возврат Результат;
КонецФункции

// Функция - Текст запроса оформление за период
//
// Параметры:
//  Запрос					 - Запрос - запрос с установленными параметрами, влияющие на отбор.
//										Если параметры не установлены, то им будут присвоены значения по умолчанию.
//										Анализируемые параметры:
//											* Склад - СправочникСсылка.Склады, СправочникСсылка.СтруктураПредприятия - если не установлен, или установлено пустое значение, то по всем складам.
//											* Отправитель - СправочникСсылка.Организации, СправочникСсылка.Партнеры - если не установлен, или установлено пустое значение, то по всем отправителям.
//											* Получатель - СправочникСсылка.Организации - если не установлен, или установлено пустое значение, то по всем получателям.
//											* ОформлятьПередачи - Булево - если не установлен, то устанавливается ЛОЖЬ.
//											* ОформлятьВыкупы - Булево - если не установлен, то устанавливается ЛОЖЬ.
//											* НачалоПериода - Дата - если не установлен, то берется дата первого резерва по товарам организаций.
//											* КонецПериода - Дата - если не установлен, то конец текущего месяца.
//  ТипРезультата			 - Строка - возможные значения:
//											ВыборкаПоШапке,
//											ВыборкаПоНоменклатуре - выборка по номенклатуре упорядочена по полям шапки,
//											ВТПоНоменклатуреИмяВТ - сохраняется в временной таблице ИмяВТ, если передано просто ""ВТПоНоменклатуре"", то в ВТРезервыТоваровОрганизаций
//											ВыборкаНаличияЗаписей
//											ВыборкаЗаполненияДокумента - накладываются отборы по всем полям шапки:
//																				Период,
//																				Отправитель,
//																				Контрагент,
//																				Получатель,
//																				ХозяйственнаяОперация,
//																				НалогообложениеНДС,
//																				ПередачаПодДеятельность,
//																				Договор,
//																				ВидЦены,
//																				Валюта.
//
//	ИмяВТОтборыНоменклатуры	 - Строка - имя ВТ с колонками:АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД
//											Если не передано - то выбирается по всей номенклатуре.
// 
// Возвращаемое значение:
//	Строка - текст запроса.
//
Функция ТекстЗапросаОформленияПоРезервамТоваровОрганизаций(Запрос,
															ТипРезультата = "ТаблицаЗначений",
															Знач ИмяВТОтборыНоменклатуры = "") Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТРезервыТоваровОрганизацийДляЗапроса
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация КАК Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|		РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|		РезервыТоваровОрганизаций.ЭтоСторно КАК ЭтоСторно,
	|		РезервыТоваровОрганизаций.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|	ГДЕ
	|		РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И РезервыТоваровОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И (&ОформлятьПередачи
	|					И РезервыТоваровОрганизаций.Организация <> РезервыТоваровОрганизаций.КорОрганизация
	|				ИЛИ &ОформлятьВыкупы
	|					И РезервыТоваровОрганизаций.Организация = РезервыТоваровОрганизаций.КорОрганизация
	|					И РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов В (&ТипыЗапасовВыкупа))
	|		И (&ПоВсемПолучателям
	|				ИЛИ РезервыТоваровОрганизаций.Организация В (&Получатель))
	|		И (&ПоВсемСкладам
	|				ИЛИ РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения = &МестоХранения)
	|		И (&ПоВсемОтправителям
	|				ИЛИ (&ОформлятьПередачи
	|						И РезервыТоваровОрганизаций.КорОрганизация = &Отправитель
	|					ИЛИ &ОформлятьВыкупы
	|						И РезервыТоваровОрганизаций.КорВидЗапасов.ВладелецТовара = &Отправитель))
	|		И (&ПоВсейНоменклатуре
	|				ИЛИ (РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры, РезервыТоваровОрганизаций.КорВидЗапасов, РезервыТоваровОрганизаций.КорОрганизация, РезервыТоваровОрганизаций.НомерГТД) В
	|					(ВЫБРАТЬ
	|						ВТОтборы.АналитикаУчетаНоменклатуры,
	|						ВТОтборы.ВидЗапасов,
	|						ВТОтборы.Организация,
	|						ВТОтборы.НомерГТД
	|					ИЗ
	|						ИмяВтОтборыНоменклатуры КАК ВТОтборы))
	| И &ТекстЗапросаОбъединенияСВТВстречныеРезервы
	|		) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КорВидЗапасов,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ &ТекстПараметрПроверкиНаличияЗаписей,
	|	КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи))
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ВладелецТовара
	|		ИНАЧЕ РезервыТоваровОрганизаций.КорОрганизация
	|	КОНЕЦ КАК Отправитель,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи))
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА РезервыТоваровОрганизаций.КорВидЗапасов.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Контрагент,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.Организация КАК Получатель,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи))
	|			ТОГДА РезервыТоваровОрганизаций.Организация
	|		ИНАЧЕ РезервыТоваровОрганизаций.КорОрганизация
	|	КОНЕЦ КАК КорОрганизация,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА ВЫБОР
	|					КОГДА РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(РезервыТоваровОрганизаций.ВидЗапасов.Договор, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|						ТОГДА ЕСТЬNULL(НастройкаПередачиТоваров.Договор, НЕОПРЕДЕЛЕНО)
	|					ИНАЧЕ РезервыТоваровОрганизаций.ВидЗапасов.Договор
	|				КОНЕЦ
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи))
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА ЕСТЬNULL(РезервыТоваровОрганизаций.КорВидЗапасов.Договор, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(НастройкаПередачиТоваров.СпособПередачиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|					ТОГДА НастройкаПередачиТоваров.Договор
	|				ИНАЧЕ РезервыТоваровОрганизаций.ВидЗапасов.Договор
	|			КОНЕЦ
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ВЫБОР
	|					КОГДА РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|						ТОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ВидЦены
	|					КОГДА ЕСТЬNULL(НастройкаПередачиТоваров.СпособПередачиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|						ТОГДА НастройкаПередачиТоваров.ВидЦены
	|					ИНАЧЕ &ВидЦеныПоУмолчанию
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(НастройкаПередачиТоваров.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|			ТОГДА &ВидЦеныПоУмолчанию
	|		ИНАЧЕ НастройкаПередачиТоваров.ВидЦены
	|	КОНЕЦ КАК ВидЦены,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения КАК МестоХранения,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Партнер КАК МестоХраненияПартнер,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.СкладскаяТерритория КАК МестоХраненияСклад,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Подразделение КАК МестоХраненияПодразделение,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Контрагент КАК МестоХраненияКонтрагент,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Договор КАК МестоХраненияДоговор,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасовПолучателя,
	|	РезервыТоваровОрганизаций.КорВидЗапасов КАК ВидЗапасовОтправителя,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА РезервыТоваровОрганизаций.ВидЗапасов.Валюта
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи))
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА РезервыТоваровОрганизаций.КорВидЗапасов.Валюта
	|		КОГДА ЕСТЬNULL(НастройкаПередачиТоваров.СпособПередачиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|				И ЕСТЬNULL(НастройкаПередачиТоваров.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|			ТОГДА НастройкаПередачиТоваров.ВидЦены.ВалютаЦены
	|		КОГДА &ВидЦеныПоУмолчанию <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(&ВидЦеныПоУмолчанию КАК Справочник.ВидыЦен).ВалютаЦены
	|		ИНАЧЕ РезервыТоваровОрганизаций.Организация.ВалютаРегламентированногоУчета
	|	КОНЕЦ КАК Валюта,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизаций.Количество КАК Количество,
	|	РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|,&ТекстИмяВТРезультата
	|ИЗ
	|	ВТРезервыТоваровОрганизацийДляЗапроса КАК РезервыТоваровОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваров
	|		ПО РезервыТоваровОрганизаций.Организация = НастройкаПередачиТоваров.ОрганизацияПродавец
	|			И РезервыТоваровОрганизаций.КорОрганизация = НастройкаПередачиТоваров.ОрганизацияВладелец
	|			И РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = НастройкаПередачиТоваров.ТипЗапасов
	|			И &ТекстПоляУпорядочиванияПоШапке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних(&КонецПериода) КАК СтавкиНДСНоменклатуры
	|		ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
	|			И РезервыТоваровОрганизаций.Организация.СтранаРегистрации = СтавкиНДСНоменклатуры.Страна
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС.СрезПоследних(&КонецПериода) КАК ОсновныеСтавкиНДС
	|		ПО РезервыТоваровОрганизаций.Организация.СтранаРегистрации = ОсновныеСтавкиНДС.Страна";
	
	ТекстВстречныхРезервов = ТекстЗапросаВстречныхРезервов("ВыборкаНеУпорядоченная", ИмяВТОтборыНоменклатуры, Истина);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И &ТекстЗапросаОбъединенияСВТВстречныеРезервы",
		ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() + ТекстВстречныхРезервов);
	
	Если Не Запрос.Параметры.Свойство("НачалоПериода")
		Или Не ЗначениеЗаполнено(Запрос.Параметры.НачалоПериода) Тогда
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаПервогоРезерва(ТекущаяДатаСеанса())));
		
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("КонецПериода")
		Или Не ЗначениеЗаполнено(Запрос.Параметры.КонецПериода) Тогда
		
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ТекущаяДатаСеанса()));
		
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяВТОтборыНоменклатуры) Тогда
		ТекстВТОтборыНоменклатуры =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД
		|ПОМЕСТИТЬ ВТОтборыНоменклатурыДляРезервов
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстЗапроса = ТекстВТОтборыНоменклатуры + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстЗапроса;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВтОтборыНоменклатуры", "ВТОтборыНоменклатурыДляРезервов");
		
		Запрос.УстановитьПараметр("ПоВсейНоменклатуре", Истина);
	Иначе
		Запрос.УстановитьПараметр("ПоВсейНоменклатуре", Ложь);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВтОтборыНоменклатуры", ИмяВТОтборыНоменклатуры);
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("ОформлятьПередачи") Тогда
		Запрос.УстановитьПараметр("ОформлятьПередачи", Ложь);
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("ОформлятьВыкупы") Тогда
		Запрос.УстановитьПараметр("ОформлятьВыкупы", Ложь);
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("МестоХранения") Тогда
		Запрос.УстановитьПараметр("МестоХранения", Неопределено);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПоВсемСкладам", Не ЗначениеЗаполнено(Запрос.Параметры.МестоХранения));
	
	Если Не Запрос.Параметры.Свойство("Отправитель") Тогда
		Запрос.УстановитьПараметр("Отправитель", Неопределено);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПоВсемОтправителям", Не ЗначениеЗаполнено(Запрос.Параметры.Отправитель));
	
	Если Не Запрос.Параметры.Свойство("Получатель") Тогда
		Запрос.УстановитьПараметр("Получатель", Новый Массив);
		Запрос.УстановитьПараметр("ПоВсемПолучателям", Истина);
	ИначеЕсли ТипЗнч(Запрос.Параметры.Получатель) = Тип("Массив") Тогда	
		Запрос.УстановитьПараметр("Получатель", Запрос.Параметры.Получатель);
		Запрос.УстановитьПараметр("ПоВсемПолучателям", Запрос.Параметры.Получатель.Количество() = 0);
	Иначе
		
		Если ЗначениеЗаполнено(Запрос.Параметры.Получатель) Тогда
			МассивПараметр = Новый Массив;
			МассивПараметр.Добавить(Запрос.Параметры.Получатель);
			
			Запрос.УстановитьПараметр("Получатель", МассивПараметр);
			Запрос.УстановитьПараметр("ПоВсемПолучателям", Ложь);
		Иначе
			Запрос.УстановитьПараметр("Получатель", Новый Массив);
			Запрос.УстановитьПараметр("ПоВсемПолучателям", Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидЦеныПоУмолчанию",
								Справочники.ВидыЦен.ВидЦеныПоУмолчанию(
									Справочники.ВидыЦен.ПустаяСсылка(),
									Новый Структура("ИспользоватьПриПередачеМеждуОрганизациями", Истина)));
	
	Если Не Запрос.Параметры.Свойство("ТипыЗапасовВыкупа")
	 Или Не ЗначениеЗаполнено(Запрос.Параметры.ТипыЗапасовВыкупа) Тогда
		
		ТипыЗапасовВыкупа = Новый Массив;
		ТипыЗапасовВыкупа.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
		
		Запрос.УстановитьПараметр("ТипыЗапасовВыкупа", ТипыЗапасовВыкупа);
		
	КонецЕсли;
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Если ВРег(ТипРезультата) = ВРег("ВыборкаПоШапке") Тогда
		
		ТекстИмяВТРезультата  = "ВТРезервыТоваровОрганизаций";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ТекстИмяВТРезультата", "ПОМЕСТИТЬ " + ТекстИмяВТРезультата);
		
		МассивВыборки = Новый Массив;
		
		ПоляШапки = ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций();
		
		Для Каждого КлючЗначение Из ПоляШапки Цикл
			ТекстПоля = "РезервыТоваровОрганизаций." + КлючЗначение.Ключ + " КАК " + КлючЗначение.Ключ;
			
			МассивВыборки.Добавить(ТекстПоля);
		КонецЦикла;
		
		ТекстВыборкиПолей = СтрСоединить(МассивВыборки, ",");
		
		ТекстВыборки = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&ТекстВыборкиПолей
		|ИЗ
		|	ВТРезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций";
		
		ТекстВыборки = СтрЗаменить(ТекстВыборки, "&ТекстВыборкиПолей", ТекстВыборкиПолей);
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстВыборки;
		
	ИначеЕсли ВРег(ТипРезультата) = ВРег("ВыборкаПоНоменклатуре") Тогда
		
		МассивВыборки = Новый Массив;
		
		ПоляШапки = ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций();
		
		Для Каждого КлючЗначение Из ПоляШапки Цикл
			ТекстПоля = КлючЗначение.Ключ;
			
			МассивВыборки.Добавить(ТекстПоля);
		КонецЦикла;
		
		ТекстПоляУпорядочиванияПоШапке = "
		|
		|УПОРЯДОЧИТЬ ПО "
		+ СтрСоединить(МассивВыборки, ",");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ТекстПоляУпорядочиванияПоШапке", ТекстПоляУпорядочиванияПоШапке);
		
	ИначеЕсли ВРег(ТипРезультата) = ВРег("ВТПоНоменклатуре") Тогда
		
		ТекстИмяВТРезультата = "ВТРезервыТоваровОрганизаций";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ТекстИмяВТРезультата", "ПОМЕСТИТЬ " + ТекстИмяВТРезультата);
		
	ИначеЕсли ВРег(ТипРезультата) = ВРег("ВТКОформлениюВыкупов")
		Или ВРег(ТипРезультата) = ВРег("ВТКОформлениюПередач") Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ТекстИмяВТРезультата", "ПОМЕСТИТЬ " + ТипРезультата);
		
	ИначеЕсли ВРег(ТипРезультата) = ВРег("ВыборкаНаличияЗаписей") Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПараметрПроверкиНаличияЗаписей,", "ПЕРВЫЕ 1");
		
	ИначеЕсли ВРег(ТипРезультата) = ВРег("ВыборкаЗаполненияДокумента") Тогда
		
		ТекстИмяВТРезультата  = "ВТРезервыТоваровОрганизаций";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ТекстИмяВТРезультата", "ПОМЕСТИТЬ " + ТекстИмяВТРезультата);
		
		ТекстВыборки = 
		"ВЫБРАТЬ
		|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизаций.Номенклатура КАК Номенклатура,
		|	РезервыТоваровОрганизаций.Характеристика КАК Характеристика,
		|	РезервыТоваровОрганизаций.Серия КАК Серия,
		|	РезервыТоваровОрганизаций.Назначение КАК Назначение,
		|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
		|	РезервыТоваровОрганизаций.СтавкаНДС КАК СтавкаНДС,
		|	РезервыТоваровОрганизаций.Количество КАК Количество,
		|	ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11)) КАК КоличествоПоРНПТ,
		|	РезервыТоваровОрганизаций.Количество КАК КоличествоУпаковок,
		|	РезервыТоваровОрганизаций.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
		|	РезервыТоваровОрганизаций.ВидЗапасовОтправителя КАК ВидЗапасовОтправителя,
		|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД
		|ИЗ
		|	ВТРезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
		|ГДЕ
		|	&ТекстУсловияОтбораПоШапке";
		
		МассивУсловийОтбора = Новый Массив;
		
		ПоляШапки = ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций();
		
		Для Каждого КлючЗначение из ПоляШапки Цикл
			
			Если Запрос.Параметры.Свойство(КлючЗначение.Ключ)
				И ТипЗнч(Запрос.Параметры[КлючЗначение.Ключ]) = Тип("Массив") Тогда
				
				ТекстПоля = "РезервыТоваровОрганизаций." + КлючЗначение.Ключ + " В  (&" + КлючЗначение.Ключ + ")";
				
			Иначе
				ТекстПоля = "РезервыТоваровОрганизаций." + КлючЗначение.Ключ + " =  &" + КлючЗначение.Ключ;
			КонецЕсли;
			
			МассивУсловийОтбора.Добавить(ТекстПоля);
			
		КонецЦикла;
		
		ТекстУсловияОтбораПоШапке = СтрСоединить(МассивУсловийОтбора,
		"
		| И ");
		
		ТекстВыборки = СтрЗаменить(ТекстВыборки, "&ТекстУсловияОтбораПоШапке", ТекстУсловияОтбораПоШапке);
		
		ТекстЗапроса = ТекстЗапроса
			+ ОбщегоНазначения.РазделительПакетаЗапросов()
			+ ТекстВыборки;	
		
	Иначе
		ТекстИсключения = НСтр("ru = 'Неизвестный тип результата.'");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ",&ТекстИмяВТРезультата", "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ТекстПоляУпорядочиванияПоШапке", "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПараметрПроверкиНаличияЗаписей,", "");
	
	
	Возврат ТекстЗапроса;
КонецФункции

// Текст запроса встречных резервов
//
// Параметры:
//  ТипРезультата		 - Строка - возможные значения:
//											ВыборкаНеУпорядоченная,
//											ВыборкаУпорядоченнаяПоОрганизации,
//											ВТАналитикиВстречныхРезервов - сохраняется в временной таблице ВТАналитикиВстречныхРезервов.
//  ИмяВТОтборыАналитики - Строка - имя ВТ с колонками: АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, Организация
//											Если не передано - то выбирается всем аналитикам.
//  НуженОтборПоПериоду	 - Булево - Истина, признак того, что нужно учитывать отбор по периоду при формировании данных 
//  								по встречным резервам.
//
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаВстречныхРезервов(ТипРезультата, ИмяВТОтборыАналитики = "", НуженОтборПоПериоду = Ложь) Экспорт
	
	ТекстЗапросаВстречныхРезервов =
	"ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|	РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|	ИСТИНА КАК ЭтоСторно,
	|	-СУММА(ВЫБОР
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РезервыТоваровОрганизаций.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Количество,
	|	-СУММА(ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ВЫРАЗИТЬ(РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК ЧИСЛО(23, 11))
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПоРНПТ
	|,&ТекстПомещенияВВТ
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|ГДЕ
	|	&ТекстУсловияПоПериоду
	|	И &ТекстУсловияПоНоменклатуре
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов,
	|	РезервыТоваровОрганизаций.КорВидЗапасов,
	|	РезервыТоваровОрганизаций.КорОрганизация,
	|	КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ),
	|	РезервыТоваровОрганизаций.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РезервыТоваровОрганизаций.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) >= СУММА(ВЫБОР
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РезервыТоваровОрганизаций.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) И
	|	СУММА(ВЫБОР
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РезервыТоваровОрганизаций.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) > 0
	|УПОРЯДОЧИТЬ ПО &ТекстУпорядочиванияПоОрганизации";
	
	Если Не ПустаяСтрока(ИмяВТОтборыАналитики) Тогда
		ТекстУсловияПоНоменклатуре = "
		|	(РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры, РезервыТоваровОрганизаций.Организация, РезервыТоваровОрганизаций.ВидЗапасов, РезервыТоваровОрганизаций.НомерГТД)
		|	В (ВЫБРАТЬ
		|			ВТАналитикиВстречныхРезервов.АналитикаУчетаНоменклатуры,
		|			ВТАналитикиВстречныхРезервов.Организация,
		|			ВТАналитикиВстречныхРезервов.ВидЗапасов,
		|			ВТАналитикиВстречныхРезервов.НомерГТД
		|		ИЗ
		|			ВТАналитикиВстречныхРезервов КАК ВТАналитикиВстречныхРезервов)";
		
		ТекстУсловияПоНоменклатуре = СтрЗаменить(ТекстУсловияПоНоменклатуре,
												"ВТАналитикиВстречныхРезервов",
												ИмяВТОтборыАналитики);
		
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов,
													"&ТекстУсловияПоНоменклатуре",
													ТекстУсловияПоНоменклатуре);
	Иначе
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов,
													"&ТекстУсловияПоНоменклатуре",
													"ИСТИНА");
	КонецЕсли;
	
	Если НуженОтборПоПериоду Тогда
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов,
													"&ТекстУсловияПоПериоду",
													"РезервыТоваровОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода");
	Иначе
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов,
													"&ТекстУсловияПоПериоду",
													"ИСТИНА");
	КонецЕсли;
	
	Если ТипРезультата = "ВыборкаУпорядоченнаяПоОрганизации" Тогда
		
		ТекстУпорядочивания = "
		|УПОРЯДОЧИТЬ ПО
		|	РезервыТоваровОрганизаций.Организация";
		
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, "УПОРЯДОЧИТЬ ПО &ТекстУпорядочиванияПоОрганизации", ТекстУпорядочивания);	
	ИначеЕсли ТипРезультата = "ВТАналитикиВстречныхРезервов" Тогда
		
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, ",&ТекстПомещенияВВТ", "ПОМЕСТИТЬ ВТАналитикиВстречныхРезервов");
	ИначеЕсли ТипРезультата <> "ВыборкаНеУпорядоченная" Тогда
		ТекстИсключения = НСтр("ru = 'Неизвестный тип результата.'");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;

	ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, ",&ТекстПомещенияВВТ", "");
	ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, "УПОРЯДОЧИТЬ ПО &ТекстУпорядочиванияПоОрганизации", "");

	
	Возврат ТекстЗапросаВстречныхРезервов;
	
КонецФункции

#КонецОбласти

#Область ПользовательскийИнтерфейс

// Возвращает текст запроса проверки изменения данных табличной части 'ВидыЗапасов' документа, осуществленных вручную.
//
// Параметры:
//	ТаблицаВидыЗапасов - ТаблицаЗначений - данные табличной части видов запасов документа.
//
Функция ТекстЗапросаПроверкиИзмененияВидовЗапасовВручную(ТаблицаВидыЗапасов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов,
	|	&ПоляИзмерений,
	|	&ПоляРесурсов,
	|	ВидыЗапасов.Количество
	|ПОМЕСТИТЬ ВидыЗапасовДокумента
	|ИЗ
	|	&ВидыЗапасовДокумента КАК ВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов,
	|	&ПоляИзмерений,
	|	&ПоляРесурсов,
	|	ВидыЗапасов.Количество
	|ПОМЕСТИТЬ ВидыЗапасовУказанныеВручную
	|ИЗ
	|	&ВидыЗапасовУказанныеВручную КАК ВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|		ВидыЗапасов.ВидЗапасов,
	|		&ПоляИзмерений,
	|		&ПоляРесурсов,
	|		ВидыЗапасов.Количество
	|	ИЗ
	|		ВидыЗапасовДокумента КАК ВидыЗапасов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|		ВидыЗапасов.ВидЗапасов,
	|		&ПоляИзмерений,
	|		-&ПоляВычитаемыхРесурсов,
	|		-ВидыЗапасов.Количество
	|	ИЗ
	|		ВидыЗапасовУказанныеВручную КАК ВидыЗапасов
	|	
	|	) КАК ВидыЗапасов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	&ПоляИзмерений,
	|	ВидыЗапасов.ВидЗапасов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВидыЗапасов.Количество) <> 0
	|	ИЛИ &УсловиеВыборки";
	
	ИменаПолейВыборки	= Новый Массив;
	ИменаПолейИзмерений	= ИзмеренияРедактируемыхВидовЗапасов();
	ИменаПолейРесурсов	= РесурсыРедактируемыхВидовЗапасов();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИменаПолейВыборки, ИменаПолейИзмерений);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИменаПолейВыборки, ИменаПолейРесурсов);
	
	ИмяТаблицы = "ВидыЗапасов";
	
	ПоляИзмерений	= Новый Массив;
	ПоляРесурсов	= Новый Массив;
	УсловияВыборки	= Новый Массив;
	
	Для Каждого ИмяПоля Из ИменаПолейВыборки Цикл
		Если ТаблицаВидыЗапасов.Колонки.Найти(ИмяПоля) <> Неопределено Тогда
			Если ИменаПолейИзмерений.Найти(ИмяПоля) <> Неопределено Тогда
				ПолеИзмерения = ИмяТаблицы + "." + ИмяПоля;
				ПоляИзмерений.Добавить(ПолеИзмерения);
			Иначе
				ПолеРесурса = ИмяТаблицы + "." + ИмяПоля;
				ПоляРесурсов.Добавить(ПолеРесурса);
				
				УсловиеВыборки = "СУММА(" + ИмяТаблицы + "." + ИмяПоля  + ") <> 0";
				УсловияВыборки.Добавить(УсловиеВыборки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	РазделительПолей = ",
						|	";
	РазделительВычитаемыхРесурсов = ",
									|	-";
	РазделительУсловияВыборки = "
								|	ИЛИ" + " ";
	
	ТекстЗапросаПоляИзмерений			= СтрСоединить(ПоляИзмерений, РазделительПолей);
	ТекстЗапросаПоляРесурсов			= СтрСоединить(ПоляРесурсов, РазделительПолей);
	ТекстЗапросаПоляВычитаемыхРесурсов	= СтрСоединить(ПоляРесурсов, РазделительВычитаемыхРесурсов);
	ТекстЗапросаУсловияВыборки			= СтрСоединить(УсловияВыборки, РазделительУсловияВыборки);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПоляИзмерений,",
								?(ЗначениеЗаполнено(ТекстЗапросаПоляИзмерений),
								ТекстЗапросаПоляИзмерений + ",",
								""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПоляРесурсов,",
								?(ЗначениеЗаполнено(ТекстЗапросаПоляРесурсов),
								ТекстЗапросаПоляРесурсов + ",",
								""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПоляВычитаемыхРесурсов,",
								?(ЗначениеЗаполнено(ТекстЗапросаПоляВычитаемыхРесурсов),
								ТекстЗапросаПоляВычитаемыхРесурсов + ",",
								""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&УсловиеВыборки",
								?(ЗначениеЗаполнено(ТекстЗапросаУсловияВыборки),
								ТекстЗапросаУсловияВыборки,
								"ЛОЖЬ"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ИзмеренияРедактируемыхВидовЗапасов()
	
	ИменаПолейИзмерений = Новый Массив;
	ИменаПолейИзмерений.Добавить("СтавкаНДС");
	ИменаПолейИзмерений.Добавить("Склад");
	ИменаПолейИзмерений.Добавить("СкладОтгрузки");
	ИменаПолейИзмерений.Добавить("ДокументРеализации");
	ИменаПолейИзмерений.Добавить("СпособОпределенияСебестоимости");
	
	Возврат ИменаПолейИзмерений;
	
КонецФункции

Функция РесурсыРедактируемыхВидовЗапасов()
	
	ИменаПолейРесурсов = Новый Массив;
	ИменаПолейРесурсов.Добавить("КоличествоПоРНПТ");
	ИменаПолейРесурсов.Добавить("СуммаНДС");
	ИменаПолейРесурсов.Добавить("СуммаСНДС");
	
	Возврат ИменаПолейРесурсов;
	
КонецФункции

#КонецОбласти

#КонецОбласти
