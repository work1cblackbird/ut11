#Область СлужебныйПрограммныйИнтерфейс

Функция ОписанияРазличийСхемКонфигураций(ДанныеСхемыКонфигурацииИсточника, ДанныеСхемыКонфигурацииПриемника) Экспорт

	URIПространствИменСхемаКонфигурации = URIПространствИменСхемаКонфигурации();

	СхемаКонфигурацииИсточника = СхемаXML(ДанныеСхемыКонфигурацииИсточника);
	ФабрикаКонфигурацииИсточника = ФабрикаПоСхеме(СхемаКонфигурацииИсточника);
	ПакетКонфигурацииИсточника = ПакетФабрики(ФабрикаКонфигурацииИсточника, URIПространствИменСхемаКонфигурации);

	СхемаКонфигурацииПриемника = СхемаXML(ДанныеСхемыКонфигурацииПриемника);
	ФабрикаКонфигурацииПриемника = ФабрикаПоСхеме(СхемаКонфигурацииПриемника);
	ПакетФабрикиКонфигурацииПриемника = ПакетФабрики(ФабрикаКонфигурацииПриемника, URIПространствИменСхемаКонфигурации);

	ВсеИменаТиповОбъектов = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеИменаТиповОбъектов,
		ИменаТиповОбъектовПакета(ПакетКонфигурацииИсточника));
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеИменаТиповОбъектов,
		ИменаТиповОбъектовПакета(ПакетФабрикиКонфигурацииПриемника),
		Истина);

	ОписанияРазличий = Новый Массив;

	ИменаБазовыхТиповСравниваемыхТиповXDTO = ИменаБазовыхТиповСравниваемыхТиповXDTO();
	СтандартныеРеквизитыБазовыхТиповXDTO = СтандартныеРеквизитыБазовыхТиповXDTO();
	СтруктураПоискаСтандартныхРеквизитов = Новый Структура("ИмяСвойства, ИмяБазовогоТипа");
	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей = ИменаТиповВладельцевБазовыхТиповТабличныхЧастей();

	Для Каждого ИмяТипаОбъекта Из ВсеИменаТиповОбъектов Цикл

		ИнформацияОТипеОбъекта = ИнформацияОТипеОбъекта(ИмяТипаОбъекта);

		Если ИнформацияОТипеОбъекта = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ИмяБазовогоТипа = ИменаБазовыхТиповСравниваемыхТиповXDTO.Получить(ИнформацияОТипеОбъекта.ИмяТипаXDTO);

		Если ИмяБазовогоТипа = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если ИмяБазовогоТипа = ИмяБазовогоТипаПеречисление() Тогда
	
			ПолноеИмяОбъектаМетаданных = СтрШаблон("%1.%2",
				ИмяБазовогоТипа,
				ИнформацияОТипеОбъекта.ИмяПрикладногоТипа);

			ТипОбъектаКонфигурацииПриемника = ФабрикаКонфигурацииПриемника.Тип(URIПространствИменСхемаКонфигурации, ИмяТипаОбъекта);

			Если ТипОбъектаКонфигурацииПриемника = Неопределено Тогда
				
				ОписанияРазличий.Добавить(СтрШаблон(ШаблонОбъектМетаданныхОтсутствуетВПриемнике(),
					ПолноеИмяОбъектаМетаданных));
				Продолжить;
				
			КонецЕсли;

			ТипОбъектаКонфигурацииИсточника = ФабрикаКонфигурацииИсточника.Тип(URIПространствИменСхемаКонфигурации, ИмяТипаОбъекта);

			Если ТипОбъектаКонфигурацииИсточника = Неопределено Тогда
				
				Продолжить;
				
			КонецЕсли;

			ИменаЗначенийОбъектаКонфигурацииВыгрузки = ИменаЗначенийОбъекта(ТипОбъектаКонфигурацииИсточника);
			ИменаЗначенийОбъектаКонфигурацииСервиса = ИменаЗначенийОбъекта(ТипОбъектаКонфигурацииПриемника);

			Для Каждого ИмяЗначенияОбъектаКонфигурацииВыгрузки Из ИменаЗначенийОбъектаКонфигурацииВыгрузки Цикл

				СвойствоОбъектаКонфигурацииСервиса = ИменаЗначенийОбъектаКонфигурацииСервиса.Найти(ИмяЗначенияОбъектаКонфигурацииВыгрузки);

				Если СвойствоОбъектаКонфигурацииСервиса = Неопределено Тогда

					ОписанияРазличий.Добавить(СтрШаблон(ШаблонЗначениеОтсутствуетВПриемнике(),
						ИмяЗначенияОбъектаКонфигурацииВыгрузки,
						ПолноеИмяОбъектаМетаданных));

				КонецЕсли;

			КонецЦикла;

		Иначе

			ИмяТипаВладельцаТабличнойЧасти = ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Получить(ИмяБазовогоТипа);
			ЭтоТабличнаяЧасть = ИмяТипаВладельцаТабличнойЧасти <> Неопределено;

			Если ЭтоТабличнаяЧасть Тогда

				ЧастиИмениПрикладногоТипа = СтрРазделить(ИнформацияОТипеОбъекта.ИмяПрикладногоТипа, ".");
				ВГраницаЧастиИмениПрикладногоТипа = ЧастиИмениПрикладногоТипа.ВГраница();
				ЧастиПолногоИмениОбъектаМетаданных = Новый Массив;
				ЧастиПолногоИмениОбъектаМетаданных.Добавить(ИмяТипаВладельцаТабличнойЧасти);

				Для Индекс = 0 По ВГраницаЧастиИмениПрикладногоТипа - 1 Цикл

					ЧастиПолногоИмениОбъектаМетаданных.Добавить(ЧастиИмениПрикладногоТипа[Индекс]);

				КонецЦикла;

				ПолноеИмяОбъектаМетаданных = СтрСоединить(ЧастиПолногоИмениОбъектаМетаданных, ".");
				ИмяТабличнойЧасти = ЧастиИмениПрикладногоТипа[ВГраницаЧастиИмениПрикладногоТипа];

			Иначе

				ПолноеИмяОбъектаМетаданных = СтрШаблон("%1.%2",
					ИмяБазовогоТипа,
					ИнформацияОТипеОбъекта.ИмяПрикладногоТипа);
				ИмяТабличнойЧасти = Неопределено;

			КонецЕсли;

			ТипОбъектаКонфигурацииПриемника = ФабрикаКонфигурацииПриемника.Тип(URIПространствИменСхемаКонфигурации, ИмяТипаОбъекта);

			Если ТипОбъектаКонфигурацииПриемника = Неопределено Тогда

				Если Не ЭтоТабличнаяЧасть Тогда

					ОписанияРазличий.Добавить(СтрШаблон(ШаблонОбъектМетаданныхОтсутствуетВПриемнике(),
						ПолноеИмяОбъектаМетаданных));

				КонецЕсли;

				Продолжить;

			КонецЕсли;

			ТипОбъектаКонфигурацииИсточника = ФабрикаКонфигурацииИсточника.Тип(URIПространствИменСхемаКонфигурации, ИмяТипаОбъекта);

			Если ТипОбъектаКонфигурацииИсточника = Неопределено Тогда

				Если Не ЭтоТабличнаяЧасть Тогда

					ОписанияРазличий.Добавить(СтрШаблон(ШаблонОбъектМетаданныхОтсутствуетВИсточнике(),
						ПолноеИмяОбъектаМетаданных));

				КонецЕсли;

				Продолжить;

			КонецЕсли;

			ВсеИменаСвойствТипаОбъекта = Новый Массив;
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеИменаСвойствТипаОбъекта, 
				ИменаСвойствТипаОбъекта(ТипОбъектаКонфигурацииИсточника)); 
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеИменаСвойствТипаОбъекта, 
				ИменаСвойствТипаОбъекта(ТипОбъектаКонфигурацииПриемника),
				Истина);

			СвойстваТипаОбъектаКонфигурацииИсточника = ТипОбъектаКонфигурацииИсточника.Свойства;
			СвойстваТипаОбъектаКонфигурацииПриемника = ТипОбъектаКонфигурацииПриемника.Свойства;

			СтруктураПоискаСтандартныхРеквизитов.ИмяБазовогоТипа = ИмяБазовогоТипа;

			Для Каждого ИмяСвойстваТипаОбъекта Из ВсеИменаСвойствТипаОбъекта Цикл

				СтруктураПоискаСтандартныхРеквизитов.ИмяСвойства = ИмяСвойстваТипаОбъекта;
				СтрокиСтандартныхРеквизитов = СтандартныеРеквизитыБазовыхТиповXDTO.НайтиСтроки(СтруктураПоискаСтандартныхРеквизитов);

				Если ЗначениеЗаполнено(СтрокиСтандартныхРеквизитов) Тогда

					ИмяРеквизита = СтрокиСтандартныхРеквизитов[0].ИмяСтандартногоРеквизита;

				Иначе

					ИмяРеквизита = ИмяСвойстваТипаОбъекта;

				КонецЕсли;

				СвойствоОбъектаКонфигурацииВыгрузки = СвойстваТипаОбъектаКонфигурацииИсточника.Получить(ИмяСвойстваТипаОбъекта);
				СвойствоОбъектаКонфигурацииСервиса = СвойстваТипаОбъектаКонфигурацииПриемника.Получить(ИмяСвойстваТипаОбъекта);

				Если СвойствоОбъектаКонфигурацииСервиса = Неопределено Тогда

					Если ЭтоТипXDTOТабличнойЧасти(СвойствоОбъектаКонфигурацииВыгрузки.Тип.Имя, ИменаБазовыхТиповСравниваемыхТиповXDTO, ИменаТиповВладельцевБазовыхТиповТабличныхЧастей) Тогда

						ШаблонОписанияРазличия = ШаблонТабличнаяЧастьОтсутствуетВПриемнике();

					Иначе

						ШаблонОписанияРазличия = ШаблонРеквизитОтсутствуетВПриемнике();

					КонецЕсли;

					ОписанияРазличий.Добавить(СтрШаблон(ШаблонОписанияРазличия,
						ИмяРеквизита,
						ПолноеИмяОбъектаМетаданных));
					Продолжить;

				КонецЕсли;

				Если СвойствоОбъектаКонфигурацииВыгрузки = Неопределено Тогда

					Если ЭтоТипXDTOТабличнойЧасти(СвойствоОбъектаКонфигурацииСервиса.Тип.Имя, ИменаБазовыхТиповСравниваемыхТиповXDTO, ИменаТиповВладельцевБазовыхТиповТабличныхЧастей) Тогда

						ШаблонОписанияРазличия = ШаблонТабличнаяЧастьОтсутствуетВИсточнике();

					Иначе

						ШаблонОписанияРазличия = ШаблонРеквизитОтсутствуетВИсточнике();

					КонецЕсли;

					ОписанияРазличий.Добавить(СтрШаблон(ШаблонОписанияРазличия,
						ИмяРеквизита,
						ПолноеИмяОбъектаМетаданных));
					Продолжить;

				КонецЕсли;

				Если СвойствоОбъектаКонфигурацииВыгрузки.Тип.Имя <> СвойствоОбъектаКонфигурацииСервиса.Тип.Имя Тогда

					Если ЭтоТабличнаяЧасть Тогда

						ОписаниеРазличия = СтрШаблон(ШаблонТипРеквизитаТабличнойЧастиОтличается(),
							ИмяРеквизита,
							ИмяТабличнойЧасти,
							ПолноеИмяОбъектаМетаданных);

					Иначе

						ОписаниеРазличия = СтрШаблон(ШаблонТипРеквизитаОтличается(),
							ИмяРеквизита,
							ПолноеИмяОбъектаМетаданных);

					КонецЕсли;

					ОписанияРазличий.Добавить(ОписаниеРазличия);

				КонецЕсли;

			КонецЦикла;

		КонецЕсли;

	КонецЦикла;

	Возврат ОписанияРазличий;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СтандартныеРеквизиты

Функция СтандартныеРеквизитыБазовыхТиповXDTO()

	СтандартныеРеквизитыБазовыхТипов = Новый ТаблицаЗначений;
	СтандартныеРеквизитыБазовыхТипов.Колонки.Добавить("ИмяСвойства");
	СтандартныеРеквизитыБазовыхТипов.Колонки.Добавить("ИмяБазовогоТипа");
	СтандартныеРеквизитыБазовыхТипов.Колонки.Добавить("ИмяСтандартногоРеквизита");

	ДополнитьСтандартнымиРеквизитамиПлановОбмена(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиКонстант(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиСправочников(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиДокументов(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиПоследовательностей(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиПлановВидовХарактеристик(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиПлановСчетов(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиПлановВидовРасчета(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиРегистровСведений(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиРегистровНакопления(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиРегистровБухгалтерии(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиРегистровРасчета(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиБизнесПроцессов(СтандартныеРеквизитыБазовыхТипов);
	ДополнитьСтандартнымиРеквизитамиЗадач(СтандартныеРеквизитыБазовыхТипов);
	
	Возврат СтандартныеРеквизитыБазовыхТипов;
	
КонецФункции

Процедура ДополнитьСтандартнымиРеквизитамиПлановОбмена(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаПланОбмена = ИмяБазовогоТипаПланОбмена();
	ИмяСтандартногоРеквизитаСсылка = ИмяСтандартногоРеквизитаСсылка();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаПланОбмена,
		ИмяСтандартногоРеквизитаСсылка,
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"DeletionMark",
		ИмяБазовогоТипаПланОбмена,
		ИмяСтандартногоРеквизитаПометкаУдаления(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Code",
		ИмяБазовогоТипаПланОбмена,
		ИмяСтандартногоРеквизитаКод(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Description",
		ИмяБазовогоТипаПланОбмена,
		ИмяСтандартногоРеквизитаНаименование(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"SentNo",
		ИмяБазовогоТипаПланОбмена,
		ИмяСтандартногоРеквизитаНомерОтправленного(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"ReceivedNo",
		ИмяБазовогоТипаПланОбмена,
		ИмяСтандартногоРеквизитаНомерПринятого(),
		СтандартныеРеквизитыБазовыхТипов);

		ДополнитьТаблицуСтандартныхРеквизитов(
		"ThisNode",
		ИмяБазовогоТипаПланОбмена,
		ИмяСтандартногоРеквизитаЭтотУзел(),
		СтандартныеРеквизитыБазовыхТипов);

	ИмяБазовогоТипаПланОбменаТабличнаяЧасть = ИмяБазовогоТипаПланОбменаТабличнаяЧасть();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаПланОбменаТабличнаяЧасть,
		ИмяСтандартногоРеквизитаСсылка,
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиКонстант(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаКонстанта = ИмяБазовогоТипаКонстанта();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Type",
		ИмяБазовогоТипаКонстанта,
		ИмяСтандартногоРеквизитаТип(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Value",
		ИмяБазовогоТипаКонстанта,
		ИмяСтандартногоРеквизитаЗначение(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиСправочников(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаСправочник = ИмяБазовогоТипаСправочник();
	ИмяСтандартногоРеквизитаСсылка = ИмяСтандартногоРеквизитаСсылка();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"IsFolder",
		ИмяБазовогоТипаСправочник,
		ИмяСтандартногоРеквизитаЭтоГруппа(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаСправочник,
		ИмяСтандартногоРеквизитаСсылка,
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"DeletionMark",
		ИмяБазовогоТипаСправочник,
		ИмяСтандартногоРеквизитаПометкаУдаления(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Parent",
		ИмяБазовогоТипаСправочник,
		ИмяСтандартногоРеквизитаРодитель(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Owner",
		ИмяБазовогоТипаСправочник,
		ИмяСтандартногоРеквизитаВладелец(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Code",
		ИмяБазовогоТипаСправочник,
		ИмяСтандартногоРеквизитаКод(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Description",
		ИмяБазовогоТипаСправочник,
		ИмяСтандартногоРеквизитаНаименование(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"PredefinedDataName",
		ИмяБазовогоТипаСправочник,
		ИмяСтандартногоРеквизитаИмяПредопределенныхДанных(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаСправочникТабличнаяЧасть(),
		ИмяСтандартногоРеквизитаСсылка,
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиДокументов(СтандартныеРеквизитыБазовыхТипов)

	ИмяСтандартногоРеквизитаСсылка = ИмяСтандартногоРеквизитаСсылка();
	ИмяБазовогоТипаДокумент = ИмяБазовогоТипаДокумент();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаДокумент,
		ИмяСтандартногоРеквизитаСсылка,
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Number",
		ИмяБазовогоТипаДокумент,
		ИмяСтандартногоРеквизитаНомер(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Date",
		ИмяБазовогоТипаДокумент,
		ИмяСтандартногоРеквизитаДата(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Posted",
		ИмяБазовогоТипаДокумент,
		ИмяСтандартногоРеквизитаПроведен(),
		СтандартныеРеквизитыБазовыхТипов);	

	ДополнитьТаблицуСтандартныхРеквизитов(
		"DeletionMark",
		ИмяБазовогоТипаДокумент,
		ИмяСтандартногоРеквизитаПометкаУдаления(),
		СтандартныеРеквизитыБазовыхТипов);	

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаДокументТабличнаяЧасть(),
		ИмяСтандартногоРеквизитаСсылка,
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиПоследовательностей(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаПоследовательность = ИмяБазовогоТипаПоследовательность();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Recorder",
		ИмяБазовогоТипаПоследовательность,
		ИмяСтандартногоРеквизитаРегистратор(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Period",
		ИмяБазовогоТипаПоследовательность,
		ИмяСтандартногоРеквизитаПериод(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиПлановВидовХарактеристик(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаПланВидовХарактеристик = ИмяБазовогоТипаПланВидовХарактеристик(); 

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаПланВидовХарактеристик,
		ИмяСтандартногоРеквизитаСсылка(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Code",
		ИмяБазовогоТипаПланВидовХарактеристик,
		ИмяСтандартногоРеквизитаКод(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Description",
		ИмяБазовогоТипаПланВидовХарактеристик,
		ИмяСтандартногоРеквизитаНаименование(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"ValueType",
		ИмяБазовогоТипаПланВидовХарактеристик,
		ИмяСтандартногоРеквизитаТипЗначения(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Parent",
		ИмяБазовогоТипаПланВидовХарактеристик,
		ИмяСтандартногоРеквизитаРодитель(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"IsFolder",
		ИмяБазовогоТипаПланВидовХарактеристик,
		ИмяСтандартногоРеквизитаЭтоГруппа(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"DeletionMark",
		ИмяБазовогоТипаПланВидовХарактеристик,
		ИмяСтандартногоРеквизитаПометкаУдаления(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"PredefinedDataName",
		ИмяБазовогоТипаПланВидовХарактеристик,
		ИмяСтандартногоРеквизитаИмяПредопределенныхДанных(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаПланВидовХарактеристикТабличнаяЧасть(),
		ИмяСтандартногоРеквизитаСсылка(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиПлановСчетов(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаПланСчетов = ИмяБазовогоТипаПланСчетов(); 

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаСсылка(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Code",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаКод(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Description",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаНаименование(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Order",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаПорядок(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Parent",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаРодитель(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Type",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаВид(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"OffBalance",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаЗабалансовый(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"DeletionMark",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаПометкаУдаления(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"PredefinedDataName",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаИмяПредопределенныхДанных(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"ExtDimensionType",
		ИмяБазовогоТипаПланСчетов,
		ИмяСтандартногоРеквизитаВидСубконто(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаПланСчетовТабличнаяЧасть(),
		ИмяСтандартногоРеквизитаСсылка(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиПлановВидовРасчета(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаПланВидовРасчета = ИмяБазовогоТипаПланВидовРасчета();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаПланВидовРасчета,
		ИмяСтандартногоРеквизитаСсылка(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Code",
		ИмяБазовогоТипаПланВидовРасчета,
		ИмяСтандартногоРеквизитаКод(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Description",
		ИмяБазовогоТипаПланВидовРасчета,
		ИмяСтандартногоРеквизитаНаименование(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"DeletionMark",
		ИмяБазовогоТипаПланВидовРасчета,
		ИмяСтандартногоРеквизитаПометкаУдаления(),
		СтандартныеРеквизитыБазовыхТипов);	

	ДополнитьТаблицуСтандартныхРеквизитов(
		"PredefinedDataName",
		ИмяБазовогоТипаПланВидовРасчета,
		ИмяСтандартногоРеквизитаИмяПредопределенныхДанных(),
		СтандартныеРеквизитыБазовыхТипов);	

	ДополнитьТаблицуСтандартныхРеквизитов(
		"DisplacingCalculationTypes",
		ИмяБазовогоТипаПланВидовРасчета,
		ИмяСтандартногоРеквизитаВытесняющиеВидыРасчета(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"LeadingCalculationTypes",
		ИмяБазовогоТипаПланВидовРасчета,
		ИмяСтандартногоРеквизитаВедущиеВидыРасчета(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"BaseCalculationTypes",
		ИмяБазовогоТипаПланВидовРасчета,
		ИмяСтандартногоРеквизитаБазовыеВидыРасчета(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаПланВидовРасчетаТабличнаяЧасть(),
		ИмяСтандартногоРеквизитаСсылка(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиРегистровСведений(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаРегистрСведений = ИмяБазовогоТипаРегистрСведений();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Period",
		ИмяБазовогоТипаРегистрСведений,
		ИмяСтандартногоРеквизитаПериод(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Recorder",
		ИмяБазовогоТипаРегистрСведений,
		ИмяСтандартногоРеквизитаРегистратор(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"LineNumber",
		ИмяБазовогоТипаРегистрСведений,
		ИмяСтандартногоРеквизитаНомерСтроки(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Active",
		ИмяБазовогоТипаРегистрСведений,
		ИмяСтандартногоРеквизитаАктивность(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиРегистровНакопления(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаРегистрНакопления = ИмяБазовогоТипаРегистрНакопления();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Period",
		ИмяБазовогоТипаРегистрНакопления,
		ИмяСтандартногоРеквизитаПериод(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Recorder",
		ИмяБазовогоТипаРегистрНакопления,
		ИмяСтандартногоРеквизитаРегистратор(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"LineNumber",
		ИмяБазовогоТипаРегистрНакопления,
		ИмяСтандартногоРеквизитаНомерСтроки(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Active",
		ИмяБазовогоТипаРегистрНакопления,
		ИмяСтандартногоРеквизитаАктивность(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"RecordType",
		ИмяБазовогоТипаРегистрНакопления,
		ИмяСтандартногоРеквизитаВидДвижения(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиРегистровБухгалтерии(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаРегистрБухгалтерии = ИмяБазовогоТипаРегистрБухгалтерии();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Period",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаПериод(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Recorder",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаРегистратор(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"LineNumber",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаНомерСтроки(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Active",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаАктивность(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Account",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаСчет(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"AccountCr",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаСчетКт(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"ExtDimensionsCr",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаСубконтоКт(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"AccountDr",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаСчетДт(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"ExtDimensionsDr",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаСубконтоДт(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"RecordType",
		ИмяБазовогоТипаРегистрБухгалтерии,
		ИмяСтандартногоРеквизитаВидДвижения(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиРегистровРасчета(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаРегистрРасчета = ИмяБазовогоТипаРегистрРасчета();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"RegistrationPeriod",
		ИмяБазовогоТипаРегистрРасчета,
		ИмяСтандартногоРеквизитаПериодРегистрации(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Recorder",
		ИмяБазовогоТипаРегистрРасчета,
		ИмяСтандартногоРеквизитаРегистратор(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"LineNumber",
		ИмяБазовогоТипаРегистрРасчета,
		ИмяСтандартногоРеквизитаНомерСтроки(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"CalculationType",
		ИмяБазовогоТипаРегистрРасчета,
		ИмяСтандартногоРеквизитаВидРасчета(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"ActionPeriod",
		ИмяБазовогоТипаРегистрРасчета,
		ИмяСтандартногоРеквизитаПериодДействия(),
		СтандартныеРеквизитыБазовыхТипов);	

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Active",
		ИмяБазовогоТипаРегистрРасчета,
		ИмяСтандартногоРеквизитаАктивность(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"ReversingEntry",
		ИмяБазовогоТипаРегистрРасчета,
		ИмяСтандартногоРеквизитаСторно(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиБизнесПроцессов(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаБизнесПроцесс = ИмяБазовогоТипаБизнесПроцесс();

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаБизнесПроцесс,
		ИмяСтандартногоРеквизитаСсылка(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Number",
		ИмяБазовогоТипаБизнесПроцесс,
		ИмяСтандартногоРеквизитаНомер(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Date",
		ИмяБазовогоТипаБизнесПроцесс,
		ИмяСтандартногоРеквизитаДата(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"HeadTask",
		ИмяБазовогоТипаБизнесПроцесс,
		ИмяСтандартногоРеквизитаВедущаяЗадача(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"DeletionMark",
		ИмяБазовогоТипаБизнесПроцесс,
		ИмяСтандартногоРеквизитаПометкаУдаления(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Started",
		ИмяБазовогоТипаБизнесПроцесс,
		ИмяСтандартногоРеквизитаСтартован(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Completed",
		ИмяБазовогоТипаБизнесПроцесс,
		ИмяСтандартногоРеквизитаЗавершен(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьСтандартнымиРеквизитамиЗадач(СтандартныеРеквизитыБазовыхТипов)

	ИмяБазовогоТипаЗадача = ИмяБазовогоТипаЗадача(); 

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаЗадача,
		ИмяСтандартногоРеквизитаСсылка(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Number",
		ИмяБазовогоТипаЗадача,
		ИмяСтандартногоРеквизитаНомер(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Description",
		ИмяБазовогоТипаЗадача,
		ИмяСтандартногоРеквизитаНаименование(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Date",
		ИмяБазовогоТипаЗадача,
		ИмяСтандартногоРеквизитаДата(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"DeletionMark",
		ИмяБазовогоТипаЗадача,
		ИмяСтандартногоРеквизитаПометкаУдаления(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"BusinessProcess",
		ИмяБазовогоТипаЗадача,
		ИмяСтандартногоРеквизитаБизнесПроцесс(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"RoutePoint",
		ИмяБазовогоТипаЗадача,
		ИмяСтандартногоРеквизитаТочкаМаршрута(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Executed",
		ИмяБазовогоТипаЗадача,
		ИмяСтандартногоРеквизитаВыполнена(),
		СтандартныеРеквизитыБазовыхТипов);

	ДополнитьТаблицуСтандартныхРеквизитов(
		"Ref",
		ИмяБазовогоТипаЗадачаТабличнаяЧасть(),
		ИмяСтандартногоРеквизитаСсылка(),
		СтандартныеРеквизитыБазовыхТипов);

КонецПроцедуры

Процедура ДополнитьТаблицуСтандартныхРеквизитов(ИмяСвойства, ИмяБазовогоТипа, ИмяСтандартногоРеквизита, ТаблицаСтандартныхРеквизитов)

	НоваяСтрока = ТаблицаСтандартныхРеквизитов.Добавить();
	НоваяСтрока.ИмяСвойства = ИмяСвойства;
	НоваяСтрока.ИмяБазовогоТипа = ИмяБазовогоТипа;
	НоваяСтрока.ИмяСтандартногоРеквизита = ИмяСтандартногоРеквизита;

КонецПроцедуры

Функция ИмяСтандартногоРеквизитаРегистратор()

	Возврат "Регистратор";

КонецФункции

Функция ИмяСтандартногоРеквизитаАктивность()

	Возврат "Активность";

КонецФункции

Функция ИмяСтандартногоРеквизитаПериод()

	Возврат "Период";

КонецФункции

Функция ИмяСтандартногоРеквизитаВидДвижения()

	Возврат "ВидДвижения";

КонецФункции

Функция ИмяСтандартногоРеквизитаЭтоГруппа()

	Возврат "ЭтоГруппа";

КонецФункции

Функция ИмяСтандартногоРеквизитаКод()

	Возврат "Код";

КонецФункции

Функция ИмяСтандартногоРеквизитаПометкаУдаления()

	Возврат "ПометкаУдаления";

КонецФункции

Функция ИмяСтандартногоРеквизитаНаименование()

	Возврат "Наименование";

КонецФункции

Функция ИмяСтандартногоРеквизитаРодитель()

	Возврат "Родитель";

КонецФункции

Функция ИмяСтандартногоРеквизитаСсылка()

	Возврат "Ссылка";

КонецФункции

Функция ИмяСтандартногоРеквизитаДата()

	Возврат "Дата";

КонецФункции

Функция ИмяСтандартногоРеквизитаПорядок()

	Возврат "Порядок";

КонецФункции

Функция ИмяСтандартногоРеквизитаИмяПредопределенныхДанных()

	Возврат "ИмяПредопределенныхДанных";

КонецФункции

Функция ИмяСтандартногоРеквизитаТип()

	Возврат "Тип";

КонецФункции

Функция ИмяСтандартногоРеквизитаНомерСтроки()

	Возврат "НомерСтроки";

КонецФункции

Функция ИмяСтандартногоРеквизитаВид()

	Возврат "Вид";

КонецФункции

Функция ИмяСтандартногоРеквизитаНомер()

	Возврат "Номер";

КонецФункции

Функция ИмяСтандартногоРеквизитаНомерОтправленного()

	Возврат "НомерОтправленного";

КонецФункции

Функция ИмяСтандартногоРеквизитаНомерПринятого()

	Возврат "НомерПринятого";

КонецФункции

Функция ИмяСтандартногоРеквизитаЭтотУзел()

	Возврат "ЭтотУзел";

КонецФункции

Функция ИмяСтандартногоРеквизитаЗначение()

	Возврат "Значение";

КонецФункции

Функция ИмяСтандартногоРеквизитаВладелец()

	Возврат "Владелец";

КонецФункции

Функция ИмяСтандартногоРеквизитаПроведен()

	Возврат "Проведен";

КонецФункции

Функция ИмяСтандартногоРеквизитаТипЗначения()

	Возврат "ТипЗначения";

КонецФункции

Функция ИмяСтандартногоРеквизитаЗабалансовый()

	Возврат "Забалансовый";

КонецФункции

Функция ИмяСтандартногоРеквизитаВидСубконто()

	Возврат "ВидСубконто";

КонецФункции

Функция ИмяСтандартногоРеквизитаВытесняющиеВидыРасчета()

	Возврат "ВытесняющиеВидыРасчета";

КонецФункции

Функция ИмяСтандартногоРеквизитаВедущиеВидыРасчета()

	Возврат "ВедущиеВидыРасчета";

КонецФункции

Функция ИмяСтандартногоРеквизитаБазовыеВидыРасчета()

	Возврат "БазовыеВидыРасчета";

КонецФункции

Функция ИмяСтандартногоРеквизитаСчет()

	Возврат "Счет";

КонецФункции

Функция ИмяСтандартногоРеквизитаСчетКт()

	Возврат "СчетКт";

КонецФункции

Функция ИмяСтандартногоРеквизитаСубконтоКт()

	Возврат "СубконтоКт";

КонецФункции

Функция ИмяСтандартногоРеквизитаСчетДт()

	Возврат "СчетДт";

КонецФункции

Функция ИмяСтандартногоРеквизитаСубконтоДт()

	Возврат "СубконтоДт";

КонецФункции

Функция ИмяСтандартногоРеквизитаПериодРегистрации()

	Возврат "ПериодРегистрации";

КонецФункции

Функция ИмяСтандартногоРеквизитаВидРасчета()

	Возврат "ВидРасчета";

КонецФункции

Функция ИмяСтандартногоРеквизитаПериодДействия()

	Возврат "ПериодДействия";

КонецФункции

Функция ИмяСтандартногоРеквизитаСторно()

	Возврат "Сторно";

КонецФункции

Функция ИмяСтандартногоРеквизитаВедущаяЗадача()

	Возврат "ВедущаяЗадача";

КонецФункции

Функция ИмяСтандартногоРеквизитаСтартован()

	Возврат "Стартован";

КонецФункции

Функция ИмяСтандартногоРеквизитаЗавершен()

	Возврат "Завершен";

КонецФункции

Функция ИмяСтандартногоРеквизитаБизнесПроцесс()

	Возврат "БизнесПроцесс";

КонецФункции

Функция ИмяСтандартногоРеквизитаТочкаМаршрута()

	Возврат "ТочкаМаршрута";

КонецФункции

Функция ИмяСтандартногоРеквизитаВыполнена()

	Возврат "Выполнена";

КонецФункции

#КонецОбласти

#Область БазовыеТипы

Функция ЭтоБазовыйТипТабличнойЧасти(ИмяБазовогоТипа, ИменаТиповВладельцевБазовыхТиповТабличныхЧастей)

	Возврат ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Получить(ИмяБазовогоТипа) <> Неопределено;

КонецФункции

Функция ИмяБазовогоТипаПланОбмена()

	Возврат "ПланОбмена";

КонецФункции

Функция ИмяБазовогоТипаПланОбменаТабличнаяЧасть()

	Возврат "ПланОбменаТабличнаяЧасть";

КонецФункции

Функция ИмяБазовогоТипаКонстанта()

	Возврат "Константа";

КонецФункции

Функция ИмяБазовогоТипаСправочник()

	Возврат "Справочник";

КонецФункции

Функция ИмяБазовогоТипаСправочникТабличнаяЧасть()

	Возврат "СправочникТабличнаяЧасть";

КонецФункции

Функция ИмяБазовогоТипаДокумент()

	Возврат "Документ";

КонецФункции

Функция ИмяБазовогоТипаДокументТабличнаяЧасть()

	Возврат "ДокументТабличнаяЧасть";

КонецФункции

Функция ИмяБазовогоТипаПоследовательность()

	Возврат "Последовательность";

КонецФункции

Функция ИмяБазовогоТипаПеречисление()

	Возврат "Перечисление";

КонецФункции

Функция ИмяБазовогоТипаПланВидовХарактеристик()

	Возврат "ПланВидовХарактеристик";

КонецФункции

Функция ИмяБазовогоТипаПланВидовХарактеристикТабличнаяЧасть()

	Возврат "ПланВидовХарактеристикТабличнаяЧасть";

КонецФункции

Функция ИмяБазовогоТипаПланСчетов()

	Возврат "ПланСчетов";

КонецФункции

Функция ИмяБазовогоТипаПланСчетовТабличнаяЧасть()

	Возврат "ПланСчетовТабличнаяЧасть";

КонецФункции

Функция ИмяБазовогоТипаПланВидовРасчета()

	Возврат "ПланВидовРасчета";

КонецФункции

Функция ИмяБазовогоТипаПланВидовРасчетаТабличнаяЧасть()

	Возврат "ПланВидовРасчетаТабличнаяЧасть";

КонецФункции

Функция ИмяБазовогоТипаРегистрСведений()

	Возврат "РегистрСведений";

КонецФункции

Функция ИмяБазовогоТипаРегистрНакопления()

	Возврат "РегистрНакопления";

КонецФункции

Функция ИмяБазовогоТипаРегистрБухгалтерии()

	Возврат "РегистрБухгалтерии";

КонецФункции

Функция ИмяБазовогоТипаРегистрРасчета()

	Возврат "РегистрРасчета";

КонецФункции

Функция ИмяБазовогоТипаБизнесПроцесс()

	Возврат "БизнесПроцесс";

КонецФункции

Функция ИмяБазовогоТипаБизнесПроцессТабличнаяЧасть()

	Возврат "БизнесПроцессТабличнаяЧасть";

КонецФункции

Функция ИмяБазовогоТипаЗадача()

	Возврат "Задача";

КонецФункции

Функция ИмяБазовогоТипаЗадачаТабличнаяЧасть()

	Возврат "ЗадачаТабличнаяЧасть";

КонецФункции

Функция ИменаТиповВладельцевБазовыхТиповТабличныхЧастей()

	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей = Новый Соответствие;

	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Вставить(
		ИмяБазовогоТипаПланОбменаТабличнаяЧасть(),
		ИмяБазовогоТипаПланОбмена());
	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Вставить(
		ИмяБазовогоТипаСправочникТабличнаяЧасть(),
		ИмяБазовогоТипаСправочник());
	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Вставить(
		ИмяБазовогоТипаДокументТабличнаяЧасть(),
		ИмяБазовогоТипаДокумент());
	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Вставить(
		ИмяБазовогоТипаПланВидовХарактеристикТабличнаяЧасть(),
		ИмяБазовогоТипаПланВидовХарактеристик());
	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Вставить(
		ИмяБазовогоТипаПланСчетовТабличнаяЧасть(),
		ИмяБазовогоТипаПланСчетов());
	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Вставить(
		ИмяБазовогоТипаПланВидовРасчетаТабличнаяЧасть(),
		ИмяБазовогоТипаПланВидовРасчета());
	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Вставить(
		ИмяБазовогоТипаБизнесПроцессТабличнаяЧасть(),
		ИмяБазовогоТипаБизнесПроцесс());
	ИменаТиповВладельцевБазовыхТиповТабличныхЧастей.Вставить(
		ИмяБазовогоТипаЗадачаТабличнаяЧасть(),
		ИмяБазовогоТипаЗадача());

	Возврат ИменаТиповВладельцевБазовыхТиповТабличныхЧастей;

КонецФункции

#КонецОбласти

Функция ИменаСвойствТипаОбъекта(ТипОбъекта)

	ИменаСвойствТипаОбъекта = Новый Массив;

	Для Каждого Свойство Из ТипОбъекта.Свойства Цикл

		ИменаСвойствТипаОбъекта.Добавить(Свойство.Имя);

	КонецЦикла;

	Возврат ИменаСвойствТипаОбъекта;

КонецФункции

Функция ИменаЗначенийОбъекта(ТипОбъекта)

	ИменаЗначенийОбъекта = Новый Массив;

	Для Каждого Перечисление Из ТипОбъекта.Фасеты.Перечисления Цикл

		ИменаЗначенийОбъекта.Добавить(Перечисление.Значение);

	КонецЦикла;

	Возврат ИменаЗначенийОбъекта;

КонецФункции

Функция ИменаТиповОбъектовПакета(Пакет) 

	ИменаТиповОбъектовПакета = Новый Массив;
	ТипТипОбъектаXDTO = Тип("ТипОбъектаXDTO");
	ТипТипЗначенияXDTO = Тип("ТипЗначенияXDTO");

	Для Каждого Тип Из Пакет Цикл

		Если ТипЗнч(Тип) = ТипТипОбъектаXDTO
			ИЛИ ТипЗнч(Тип) = ТипТипЗначенияXDTO Тогда

			ИменаТиповОбъектовПакета.Добавить(Тип.Имя);

		КонецЕсли;

	КонецЦикла;

	Возврат ИменаТиповОбъектовПакета;

КонецФункции

Функция СхемаXML(ДвоичныеДанныеСхемы)

	ПотокДляЧтения = ДвоичныеДанныеСхемы.ОткрытьПотокДляЧтения();

	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьПоток(ПотокДляЧтения);

	Построитель = Новый ПостроительDOM;
	Документ = Построитель.Прочитать(Чтение);

	ПотокДляЧтения.Закрыть();

	ПостроительСхем = Новый ПостроительСхемXML;	

	Возврат ПостроительСхем.СоздатьСхемуXML(Документ);

КонецФункции

Функция ФабрикаПоСхеме(Схема)

	НаборСхем = Новый НаборСхемXML;
	НаборСхем.Добавить(Схема);

	Возврат Новый ФабрикаXDTO(НаборСхем);

КонецФункции

Функция ПакетФабрики(Фабрика, URIПространстваИмен)

	Возврат Фабрика.Пакеты.Получить(URIПространстваИмен);

КонецФункции

Функция URIПространствИменСхемаКонфигурации()

	Возврат "http://v8.1c.ru/8.1/data/enterprise/current-config";

КонецФункции

Функция ЭтоТипXDTOТабличнойЧасти(ИмяТипаXDTO, ИменаБазовыхТиповСравниваемыхТиповXDTO, ИменаТиповВладельцевБазовыхТиповТабличныхЧастей)

	ЭтоТипXDTOТабличнойЧасти = Ложь;
	ИнформацияОТипеОбъекта = ИнформацияОТипеОбъекта(ИмяТипаXDTO);

	Если ИнформацияОТипеОбъекта <> Неопределено Тогда

		ИмяБазовогоТипа = ИменаБазовыхТиповСравниваемыхТиповXDTO.Получить(ИнформацияОТипеОбъекта.ИмяТипаXDTO);

		Если ИмяБазовогоТипа <> Неопределено Тогда

			ЭтоТипXDTOТабличнойЧасти = ЭтоБазовыйТипТабличнойЧасти(ИмяБазовогоТипа, ИменаТиповВладельцевБазовыхТиповТабличныхЧастей);

		КонецЕсли;

	КонецЕсли;

	Возврат ЭтоТипXDTOТабличнойЧасти;

КонецФункции

Функция ИменаБазовыхТиповСравниваемыхТиповXDTO()

	ИменаБазовыхТиповСравниваемыхТиповXDTO = Новый Соответствие();

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("AccountingRegisterRecord", ИмяБазовогоТипаРегистрБухгалтерии());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("AccumulationRegisterRecord", ИмяБазовогоТипаРегистрНакопления());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("BusinessProcessObject", ИмяБазовогоТипаБизнесПроцесс());
	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("BusinessProcessTabularSectionRow", ИмяБазовогоТипаБизнесПроцессТабличнаяЧасть());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("CalculationRegisterRecord", ИмяБазовогоТипаРегистрРасчета());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("CatalogObject", ИмяБазовогоТипаСправочник());
	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("CatalogTabularSectionRow", ИмяБазовогоТипаСправочникТабличнаяЧасть());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("ChartOfAccountsObject", ИмяБазовогоТипаПланСчетов());
	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("ChartOfAccountsTabularSectionRow", ИмяБазовогоТипаПланСчетовТабличнаяЧасть());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("ChartOfCalculationTypesObject", ИмяБазовогоТипаПланВидовРасчета());
	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("ChartOfCalculationTypesTabularSectionRow", ИмяБазовогоТипаПланВидовРасчетаТабличнаяЧасть());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("ChartOfCharacteristicTypesObject", ИмяБазовогоТипаПланВидовХарактеристик());
	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("ChartOfCharacteristicTypesTabularSectionRow", ИмяБазовогоТипаПланВидовХарактеристикТабличнаяЧасть());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("ConstantValueManager", ИмяБазовогоТипаКонстанта());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("DocumentObject", ИмяБазовогоТипаДокумент());	
	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("DocumentTabularSectionRow", ИмяБазовогоТипаДокументТабличнаяЧасть());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("InformationRegisterRecord", ИмяБазовогоТипаРегистрСведений());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("SequenceRecord", ИмяБазовогоТипаПоследовательность());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("TaskObject", ИмяБазовогоТипаЗадача());
	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("TaskTabularSectionRow", ИмяБазовогоТипаЗадачаТабличнаяЧасть());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("ExchangePlanObject", ИмяБазовогоТипаПланОбмена());
	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("ExchangePlanTabularSectionRow", ИмяБазовогоТипаПланОбменаТабличнаяЧасть());

	ИменаБазовыхТиповСравниваемыхТиповXDTO.Вставить("EnumRef", ИмяБазовогоТипаПеречисление());

	Возврат ИменаБазовыхТиповСравниваемыхТиповXDTO;

КонецФункции

Функция ИнформацияОТипеОбъекта(ИмяТипаОбъекта)

	ЧастиТипаОбъекта = СтрРазделить(ИмяТипаОбъекта, ".");

	Если ЧастиТипаОбъекта.Количество() < 2 Тогда

		Возврат Неопределено;

	КонецЕсли;

	ЧастиПрикладногоТипа = Новый Массив;
	Для Индекс = 1 По ЧастиТипаОбъекта.ВГраница() Цикл

		ЧастиПрикладногоТипа.Добавить(ЧастиТипаОбъекта[Индекс]);

	КонецЦикла;

	Возврат Новый Структура("ИмяТипаXDTO, ИмяПрикладногоТипа",
		ЧастиТипаОбъекта[0],
		СтрСоединить(ЧастиПрикладногоТипа, "."));

КонецФункции

Функция ШаблонОбъектМетаданныхОтсутствуетВПриемнике()

	Возврат НСтр("ru = 'Объект метаданных ''%1'' отсутствует в конфигурации информационной базы, но присутствует в конфигурации выгрузки'");

КонецФункции

Функция ШаблонОбъектМетаданныхОтсутствуетВИсточнике()

	Возврат НСтр("ru = 'Объект метаданных ''%1'' отсутствует в конфигурации выгрузки, но присутствует в конфигурации информационной базы'");

КонецФункции

Функция ШаблонЗначениеОтсутствуетВПриемнике()

	Возврат НСтр("ru = 'Значение ''%1'' объекта метаданных ''%2'' отсутствует в конфигурации информационной базы, но присутствует в конфигурации выгрузки'");

КонецФункции

Функция ШаблонТабличнаяЧастьОтсутствуетВПриемнике()

	Возврат НСтр("ru = 'Табличная часть ''%1'' объекта метаданных ''%2'' отсутствует в конфигурации информационной базы, но присутствует в конфигурации выгрузки'");

КонецФункции

Функция ШаблонТабличнаяЧастьОтсутствуетВИсточнике()

	Возврат НСтр("ru = 'Табличная часть ''%1'' объекта метаданных ''%2'' отсутствует в конфигурации выгрузки, но присутствует в конфигурации информационной базы'");

КонецФункции

Функция ШаблонРеквизитОтсутствуетВПриемнике()

	Возврат НСтр("ru = 'Реквизит ''%1'' объекта метаданных ''%2'' отсутствует в конфигурации информационной базы, но присутствует в конфигурации выгрузки'");

КонецФункции

Функция ШаблонРеквизитОтсутствуетВИсточнике()

	Возврат НСтр("ru = 'Реквизит ''%1'' объекта метаданных ''%2'' отсутствует в конфигурации выгрузки, но присутствует в конфигурации информационной базы'");

КонецФункции

Функция ШаблонТипРеквизитаТабличнойЧастиОтличается()

	Возврат НСтр("ru = 'Тип реквизита ''%1'' табличной части ''%2'' объекта метаданных ''%3'' в конфигурации информационной базы отличается от типа в конфигурации выгрузки.'")

КонецФункции

Функция ШаблонТипРеквизитаОтличается()

	Возврат НСтр("ru = 'Тип реквизита ''%1'' объекта метаданных ''%2'' в конфигурации информационной базы отличается от типа в конфигурации выгрузки.'");

КонецФункции

#КонецОбласти