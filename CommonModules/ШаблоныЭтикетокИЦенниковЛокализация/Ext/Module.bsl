////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции, используемые в обработке ЖурналДокументовЗакупки
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриПолученииПараметровДляПечатиОбразцаЭтикеткиАкцизныеМарки(ДляЧего, ТипКода, УникальныйИдентификатор, ПараметрыПечати) Экспорт

	//++ Локализация
	ТаблицаАкцизныеМарки = Новый ТаблицаЗначений;
	ТаблицаАкцизныеМарки.Колонки.Добавить("Ссылка"          , Новый ОписаниеТипов("ДокументСсылка.ЗапросАкцизныхМарокЕГАИС"));
	ТаблицаАкцизныеМарки.Колонки.Добавить("Номенклатура"    , Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаАкцизныеМарки.Колонки.Добавить("Характеристика"  , Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаАкцизныеМарки.Колонки.Добавить("Упаковка"        , Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	ТаблицаАкцизныеМарки.Колонки.Добавить("КодАкцизнойМарки", Метаданные.ОпределяемыеТипы.КодАкцизнойМарки.Тип);
	ТаблицаАкцизныеМарки.Колонки.Добавить("СерияМарки"      , Новый ОписаниеТипов("Строка"));
	ТаблицаАкцизныеМарки.Колонки.Добавить("НомерМарки"      , Новый ОписаниеТипов("Строка"));
	
	НоваяСтрока = ТаблицаАкцизныеМарки.Добавить();
	НоваяСтрока.Ссылка = ДляЧего;
	НоваяСтрока.КодАкцизнойМарки = "";
	
	Коды = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьОбразцыШтрихкодов();
	Для Каждого СтрокаТЧ Из Коды Цикл
		Если СтрокаТЧ.ТипКода = ТипКода Тогда
			НоваяСтрока.КодАкцизнойМарки = СтрокаТЧ.Пример;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыПечати.Вставить("АдресВХранилище", ПоместитьВоВременноеХранилище(ТаблицаАкцизныеМарки, УникальныйИдентификатор));
	//-- Локализация
	
КонецПроцедуры

Процедура ПриПолученииПараметровДляПечатиОбразцаЭтикеткиШтрихкодыУпаковок(ДляЧего, ТипКода, УникальныйИдентификатор, ПараметрыПечати) Экспорт
	
	//++ Локализация
	ТаблицаШтрихкодов = ПечатьЭтикетокИЦенниковЛокализация.НоваяТаблицаШтрихкодовУпаковок();
	
	НоваяСтрока = ТаблицаШтрихкодов.Добавить();
	НоваяСтрока.Ссылка = ДляЧего;
	Если ЗначениеЗаполнено(ДляЧего) Тогда
		ЗначенияСвойств = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДляЧего, "ЗначениеШтрихкода, Номенклатура, Характеристика, Упаковка");
		НоваяСтрока.Штрихкод       = ЗначенияСвойств.ЗначениеШтрихкода;
		НоваяСтрока.Номенклатура   = ЗначенияСвойств.Номенклатура;
		НоваяСтрока.Характеристика = ЗначенияСвойств.Характеристика;
		НоваяСтрока.Упаковка       = ЗначенияСвойств.Упаковка;
	Иначе
		Коды = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьОбразцыШтрихкодов();
		Для Каждого СтрокаТЧ Из Коды Цикл
			Если СтрокаТЧ.ТипКода = ТипКода Тогда
				НоваяСтрока.Штрихкод = СтрокаТЧ.Пример;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПечатьЭтикетокИЦенниковЛокализация.ЗаполнитьСвойстваСтрокиШтрихкодовУпаковокПоШтрихкоду(НоваяСтрока, НоваяСтрока.Штрихкод);
	
	ПараметрыПечати.Вставить("ОбъектыПечати", ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаШтрихкодов));
	ПараметрыПечати.ШаблонЭтикетки  = Справочники.ШаблоныЭтикетокИЦенников.ПустаяСсылка();
	//-- Локализация
	Возврат;
	
КонецПроцедуры

Процедура ПриПолученииПараметровДляПечатиОбразцаЭтикеткиИСМП(ДляЧего, ТипКода, УникальныйИдентификатор, ПараметрыПечати) Экспорт
	
	//++ Локализация
	СтруктураПечатиЭтикеток = Новый Структура();
	СтруктураПечатиЭтикеток.Вставить("РежимПечати", "Выборочно");
	
	ИсходныеОбъектыПечати = Новый Массив;
	ИсходныеОбъектыПечати.Добавить(ДляЧего);
	ОбъектыПечати = Справочники.ШтрихкодыУпаковокТоваров.ДанныеДляПечатиШтрихкодовУпаковокИСМП(ИсходныеОбъектыПечати);
	СтруктураПечатиЭтикеток.Вставить("ОбъектыПечати", ОбъектыПечати);
	
	ПараметрыПечати.Вставить("СтруктураДанных", СтруктураПечатиЭтикеток);
	ПараметрыПечати.ШаблонЭтикетки  = Справочники.ШаблоныЭтикетокИЦенников.ПустаяСсылка();
	//-- Локализация
	Возврат;
	
КонецПроцедуры

Процедура ПриОпределенииИсточниковКОформлению(МассивМенеджеровРасчетаСмТакжеВРаботе) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ПриЗаполненииСхемыКомпоновкиДанных(СхемаКомпоновкиДанных, Назначение) Экспорт
	
	//++ Локализация
	Если Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляАкцизныхМарок Тогда
		СхемаКомпоновкиДанных = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("ПоляШаблонаАкцизныеМарки");
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляШтрихкодовУпаковок Тогда
		СхемаКомпоновкиДанных = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("ПоляШаблонаШтрихкодыУпаковок");
		ДобавитьПоляКомпоновкиИдентификаторовШтрихкодовУпаковок(СхемаКомпоновкиДанных);
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаКодМаркировкиИСМП Тогда
		СхемаКомпоновкиДанных = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("ПоляШаблонаИСМП");
		ДобавитьПоляКомпоновкиИдентификаторовШтрихкодовУпаковок(СхемаКомпоновкиДанных);
	КонецЕсли;
	//-- Локализация
	Возврат;
	
КонецПроцедуры

Процедура ПриЗаполненииДоступныхПолейКомпоновкиДанных(ИменаПолей, Назначение) Экспорт
	
	//++ Локализация
	Если Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляАкцизныхМарок Тогда
		
		ИменаПолей.Добавить("КодАкцизнойМарки");
		ИменаПолей.Добавить("СерияМарки");
		ИменаПолей.Добавить("НомерМарки");
		
		ИменаПолей.Добавить("Номенклатура.Артикул");
		ИменаПолей.Добавить("Номенклатура.ВариантОформленияПродажи");
		ИменаПолей.Добавить("Номенклатура.Вес");
		ИменаПолей.Добавить("Номенклатура.ВестиУчетПоГТД");
		ИменаПолей.Добавить("Номенклатура.ВидНоменклатуры");
		ИменаПолей.Добавить("Номенклатура.Родитель");
		ИменаПолей.Добавить("Номенклатура.ЕдиницаИзмерения");
		ИменаПолей.Добавить("Номенклатура.Код");
		ИменаПолей.Добавить("Номенклатура.КодДляПоиска");
		ИменаПолей.Добавить("Номенклатура.Наименование");
		ИменаПолей.Добавить("Номенклатура.НаименованиеПолное");
		ИменаПолей.Добавить("Номенклатура.Объем");
		ИменаПолей.Добавить("Номенклатура.Производитель");
		ИменаПолей.Добавить("Номенклатура.Описание");
		ИменаПолей.Добавить("Номенклатура.ТипНоменклатуры");
		ИменаПолей.Добавить("Номенклатура,Свойства");
		
		ИменаПолей.Добавить("СтавкаНДС");
		
		ИменаПолей.Добавить("Характеристика.Наименование");
		ИменаПолей.Добавить("Характеристика.НаименованиеПолное");
		ИменаПолей.Добавить("Характеристика.Владелец");
		ИменаПолей.Добавить("Характеристика,Свойства");
		
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляШтрихкодовУпаковок Тогда
		
		ИменаПолей.Добавить("Штрихкод");
		ИменаПолей.Добавить("СерийныйНомер");
		
		ИменаПолей.Добавить("Номенклатура.Артикул");
		ИменаПолей.Добавить("Номенклатура.ВариантОформленияПродажи");
		ИменаПолей.Добавить("Номенклатура.Вес");
		ИменаПолей.Добавить("Номенклатура.ВестиУчетПоГТД");
		ИменаПолей.Добавить("Номенклатура.ВидНоменклатуры");
		ИменаПолей.Добавить("Номенклатура.Родитель");
		ИменаПолей.Добавить("Номенклатура.ЕдиницаИзмерения");
		ИменаПолей.Добавить("Номенклатура.Код");
		ИменаПолей.Добавить("Номенклатура.КодДляПоиска");
		ИменаПолей.Добавить("Номенклатура.Наименование");
		ИменаПолей.Добавить("Номенклатура.НаименованиеПолное");
		ИменаПолей.Добавить("Номенклатура.Объем");
		ИменаПолей.Добавить("Номенклатура.Производитель");
		ИменаПолей.Добавить("Номенклатура.Описание");
		ИменаПолей.Добавить("Номенклатура.ТипНоменклатуры");
		ИменаПолей.Добавить("Номенклатура,Свойства");
		
		ИменаПолей.Добавить("СтавкаНДС");
		
		ИменаПолей.Добавить("Характеристика.Наименование");
		ИменаПолей.Добавить("Характеристика.НаименованиеПолное");
		ИменаПолей.Добавить("Характеристика.Владелец");
		ИменаПолей.Добавить("Характеристика,Свойства");
		
		ИменаПолей.Добавить("ДатаМаркировки");
		
		ИменаПолей.Добавить("ПоляSSCC.ЦифраРасширения");
		ИменаПолей.Добавить("ПоляSSCC.ПрефиксКомпанииGS1");
		ИменаПолей.Добавить("ПоляSSCC.СерийныйНомерSSCC");
		ИменаПолей.Добавить("ПоляSSCC.КонтрольноеЧисло");
		
		ИменаПолей.Добавить("ПоляCode128Формат1.ИдентификаторОрганизации");
		ИменаПолей.Добавить("ПоляCode128Формат1.НомерПоПорядку");
		
		ИменаПолей.Добавить("ПоляCode128Формат2.ИдентификаторОрганизации");
		ИменаПолей.Добавить("ПоляCode128Формат2.НомерПоПорядку");
		ИменаПолей.Добавить("ПоляCode128Формат2.ТипЛогистическойЕдиницы");
		ИменаПолей.Добавить("ПоляCode128Формат2.НомерПлощадкиМаркировки");
		ИменаПолей.Добавить("ПоляCode128Формат2.ГодГенерацииШтрихкода");
		
		ИменаПолей.Добавить("ПоляCode128Формат3.ИдентификаторОрганизации");
		ИменаПолей.Добавить("ПоляCode128Формат3.НомерПоПорядку");
		
		ДобавитьИменаПолейИдентификаторовШтрихкодовУпаковок(ИменаПолей);
		
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаКодМаркировкиИСМП Тогда
		
		ИменаПолей.Добавить("Штрихкод");
		ИменаПолей.Добавить("КодМаркировки");
		ИменаПолей.Добавить("GTIN");
		ИменаПолей.Добавить("СрокГодности");
		ИменаПолей.Добавить("ПредставлениеНоменклатуры");
		ИменаПолей.Добавить("НомерВГруппе");
		ИменаПолей.Добавить("СодержимоеКоличество");
		
		ИменаПолей.Добавить("Номенклатура.Артикул");
		ИменаПолей.Добавить("Номенклатура.ВариантОформленияПродажи");
		ИменаПолей.Добавить("Номенклатура.Вес");
		ИменаПолей.Добавить("Номенклатура.ВестиУчетПоГТД");
		ИменаПолей.Добавить("Номенклатура.ВидНоменклатуры");
		ИменаПолей.Добавить("Номенклатура.Родитель");
		ИменаПолей.Добавить("Номенклатура.ЕдиницаИзмерения");
		ИменаПолей.Добавить("Номенклатура.Код");
		ИменаПолей.Добавить("Номенклатура.КодДляПоиска");
		ИменаПолей.Добавить("Номенклатура.Наименование");
		ИменаПолей.Добавить("Номенклатура.НаименованиеПолное");
		ИменаПолей.Добавить("Номенклатура.Объем");
		ИменаПолей.Добавить("Номенклатура.Производитель");
		ИменаПолей.Добавить("Номенклатура.Описание");
		ИменаПолей.Добавить("Номенклатура.ТипНоменклатуры");
		ИменаПолей.Добавить("Номенклатура,Свойства");
		
		ИменаПолей.Добавить("СтавкаНДС");
		
		ИменаПолей.Добавить("Характеристика.Наименование");
		ИменаПолей.Добавить("Характеристика.НаименованиеПолное");
		ИменаПолей.Добавить("Характеристика.Владелец");
		ИменаПолей.Добавить("Характеристика,Свойства");
		
		ИменаПолей.Добавить("ПоляSSCC.ЦифраРасширения");
		ИменаПолей.Добавить("ПоляSSCC.ПрефиксКомпанииGS1");
		ИменаПолей.Добавить("ПоляSSCC.СерийныйНомерSSCC");
		ИменаПолей.Добавить("ПоляSSCC.КонтрольноеЧисло");
		
		ДобавитьИменаПолейИдентификаторовШтрихкодовУпаковок(ИменаПолей);
		
	КонецЕсли;
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// При изменении назначения помощник нового.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//  СтрокиПоискаТипа - Массив из Строка - поиска типа
//  ПризнакМакетаДляТоваров - Строка - Признак макета для товаров
//  МассивТипов - Массив из СправочникСсылка - массив типов
Процедура ПриИзмененииНазначенияПомощникНового(Форма, СтрокиПоискаТипа, ПризнакМакетаДляТоваров, МассивТипов) Экспорт
	
	//++ Локализация
	Назначение = Форма.Назначение;
	Если Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляАкцизныхМарок
		ИЛИ Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаКодМаркировкиИСМП
		ИЛИ Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляШтрихкодовУпаковок Тогда
		Форма.Заголовок = НСтр("ru = 'Помощник создания этикетки'");
		СтрокиПоискаТипа.Добавить("ШаблонЭтикетки");
		СтрокиПоискаТипа.Добавить("ШаблонН1Этикетки");
		СтрокиПоискаТипа.Добавить("ШаблонН2Этикетки");
		Форма.Элементы.РазмерЛенты.Заголовок = НСтр("ru = 'Размер ленты'");
		Форма.Элементы.ОписаниеКоличестваЦенников.Видимость = Ложь;
	КонецЕсли;
	
	Если Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляАкцизныхМарок Тогда
		ПризнакМакетаДляТоваров = "АкцизныеМарки";
		Форма.ДляЧего = Неопределено;
		МассивТипов.Добавить(Тип("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляШтрихкодовУпаковок Тогда
		ПризнакМакетаДляТоваров = "ШтрихкодыУпаковок";
		Форма.ДляЧего = Неопределено;
		МассивТипов.Добавить(Тип("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаКодМаркировкиИСМП Тогда
		ПризнакМакетаДляТоваров = "ИС";
		Форма.ДляЧего = Неопределено;
		МассивТипов.Добавить(Тип("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриСозданииНаСервереФормыВыбораШаблона(Форма, Параметры, ПризнакПредопределенногоМакета) Экспорт
	
	//++ Локализация
	Если Параметры.Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляАкцизныхМарок Тогда
		ПризнакПредопределенногоМакета = Врег("АкцизныеМарки");
	ИначеЕсли Параметры.Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляШтрихкодовУпаковок Тогда
		ПризнакПредопределенногоМакета = Врег("ШтрихкодыУпаковок");
	ИначеЕсли Параметры.Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаКодМаркировкиИСМП Тогда
		ПризнакПредопределенногоМакета = Врег("ИС");
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Установка реквизитов формы шаблона по умолчанию.
//
// Параметры:
//  Форма - см. Справочник.ШаблоныЭтикетокИЦенников.Форма.ФормаРедактированияШаблонаЭтикетокИЦенников
//  Объект - СправочникОбъект.ШаблоныЭтикетокИЦенников
//  ИмяШаблона - Строка
//
Процедура УстановитьШаблонПоУмолчанию(Форма, Объект, ИмяШаблона) Экспорт
	
	Если Объект.Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляАкцизныхМарок Тогда
			
		Форма.ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417;
		Форма.ОтображатьТекст = Ложь;
			
	ИначеЕсли Объект.Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляШтрихкодовУпаковок Тогда
		
		Форма.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataBarExpandedStacked;
		Форма.ОтображатьТекст = Ложь;
		
	ИначеЕсли Объект.Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаКодМаркировкиИСМП Тогда
		
		Форма.ТипШтрихкода       = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
		Форма.ОтображатьТекст    = Ложь;
		Форма.Масштабировать     = Ложь;
		Форма.СохранятьПропорции = Истина;
		Если СтрНайти(ИмяШаблона, "Упаковка") > 0 Тогда
			Форма.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_128;
		КонецЕсли;
			
	КонецЕсли;

КонецПроцедуры

Процедура ПодготовитьСтруктуруМакетаШаблона(Назначение, Масштабировать, ТипКода, ТипШтрихкодаШаблона) Экспорт
	Если Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляАкцизныхМарок Тогда
		ТипКода = 6;  // PDF417
		ТипШтрихкодаШаблона = Перечисления.ТипыШтрихкодов.PDF417;
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаКодМаркировкиИСМП Тогда
		ТипКода = 24;  // DataMatrix
		ТипШтрихкодаШаблона = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
		Масштабировать = Ложь;
	КонецЕсли;
КонецПроцедуры

//++ Локализация

Процедура ДобавитьПоляКомпоновкиИдентификаторовШтрихкодовУпаковок(СхемаКомпоновкиДанных)
	
	ЗапросНабораДанных = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос;
	
	СвойстваИдентификаторов = ШтрихкодыУпаковокКлиентСерверПовтИсп.СвойстваКлючейИдентификаторовПрименения();
	
	ИдентификаторыИТипыКолонокGS1 = ШтрихкодыУпаковокКлиентСерверПовтИсп.ТипыКолонокПечатиПоТипуШтрихкода(Перечисления.ТипыШтрихкодов.GS1_128);
	
	Для каждого ИдентификаторИТипКолонки Из ИдентификаторыИТипыКолонокGS1 Цикл
		
		КлючИдентификатора = ИдентификаторИТипКолонки.Ключ;
		СвойстваИдентификатора = СвойстваИдентификаторов.Получить(КлючИдентификатора);
		
		ИмяПоля = "ИдентификаторПрименения_" + КлючИдентификатора;
		ТипПоля = ИдентификаторИТипКолонки.Значение;
		Если ТипПоля.СодержитТип(Тип("Число")) Тогда
			ВыражениеПоля = "0";
		ИначеЕсли ТипПоля.СодержитТип(Тип("Дата")) Тогда
			ВыражениеПоля = "ДАТАВРЕМЯ(1,1,1)";
		Иначе
			ВыражениеПоля = """""";
		КонецЕсли;
		
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(ЗапросНабораДанных);
		ОписаниеПолейВложенногоЗапроса = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Источники[0].Источник.Запрос.Операторы[0].ВыбираемыеПоля;
		ОписаниеКолонокВложенногоЗапроса = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Источники[0].Источник.Запрос.Колонки;
		
		НовоеПоле = ОписаниеПолейВложенногоЗапроса.Добавить(ВыражениеПоля);
		Колонка   = ОписаниеКолонокВложенногоЗапроса.Найти(НовоеПоле);
		Колонка.Псевдоним = ИмяПоля;
		
		ЗапросНабораДанных = СхемаЗапроса.ПолучитьТекстЗапроса();
		ЗапросНабораДанных = СхемыЗапросов.ДобавитьПолеВыборкиВЗапрос(ЗапросНабораДанных, ИмяПоля, ИмяПоля, 0, Ложь,   Истина);
		ЗапросНабораДанных = СхемыЗапросов.ДобавитьПолеВыборкиВЗапрос(ЗапросНабораДанных, ИмяПоля, ИмяПоля, 1, Истина, Истина);
		
		ФинансоваяОтчетностьСервер.НовоеПолеНабора(
			СхемаКомпоновкиДанных.НаборыДанных.НаборДанных,
			ИмяПоля,
			"ПоляGS1." + ИмяПоля,
			СвойстваИдентификатора.ПредставлениеИдентификатораДляУпорядочивания,
			ТипПоля);
		
	КонецЦикла;
	
	СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос = ЗапросНабораДанных;
	
КонецПроцедуры

Процедура ДобавитьИменаПолейИдентификаторовШтрихкодовУпаковок(ИменаПолей)
	
	СвойстваИдентификаторов = ШтрихкодыУпаковокКлиентСерверПовтИсп.СвойстваКлючейИдентификаторовПрименения();
	
	ДобавляемыеКолонки = Новый СписокЗначений;
	Для каждого КлючИСвойстваИдентификатора Из СвойстваИдентификаторов Цикл
		
		КлючИдентификатора = КлючИСвойстваИдентификатора.Ключ;
		
		ИмяПоля = "ИдентификаторПрименения_" + КлючИдентификатора;
		
		ДобавляемыеКолонки.Добавить("ПоляGS1." + ИмяПоля, КлючИдентификатора);
		
	КонецЦикла;
	
	ДобавляемыеКолонки.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
	
	Для каждого ЭлементСписка Из ДобавляемыеКолонки Цикл
	
		ИменаПолей.Добавить(ЭлементСписка.Значение);
	
	КонецЦикла;
	
КонецПроцедуры

//-- Локализация

Процедура ПриИзмененииНазначенияШаблонаВСправочникеШаблонов(Форма, ОчищатьНазначение, МассивТипов) Экспорт
	
	//++ Локализация
	Объект = Форма.Объект;
	Если Объект.Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляШтрихкодовУпаковок Тогда
		Если ОчищатьНазначение ИЛИ Объект.ДляЧего = Неопределено Тогда
			Объект.ДляЧего = Справочники.ШтрихкодыУпаковокТоваров.ПустаяСсылка();
		КонецЕсли;
		МассивТипов.Добавить(Тип("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
		МассивТипов.Добавить(Тип("ДокументСсылка.УпаковочныйЛист"));
	ИначеЕсли Объект.Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаКодМаркировкиИСМП Тогда
		Если ОчищатьНазначение ИЛИ Объект.ДляЧего = Неопределено Тогда
			Объект.ДляЧего = Справочники.ШтрихкодыУпаковокТоваров.ПустаяСсылка();
		КонецЕсли;
		МассивТипов.Добавить(Тип("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ИначеЕсли Объект.Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляАкцизныхМарок Тогда
		Если ОчищатьНазначение ИЛИ Объект.ДляЧего = Неопределено Тогда
			Объект.ДляЧего = Документы.ЗапросАкцизныхМарокЕГАИС.ПустаяСсылка();
		КонецЕсли;
		МассивТипов.Добавить(Тип("ДокументСсылка.ЗапросАкцизныхМарокЕГАИС"));
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти