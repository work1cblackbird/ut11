
#Область ПрограммныйИнтерфейс

#Область ВыборСтатейИАналитик

// Обрабатывает изменение статьи, вызывается в соответствующем обработчике события элемента.
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма объекта.
// 	Элемент - ПолеФормы - Элемент выбора статьи.
// 	ИдентификаторСтрокиТЧ - Число - Номер текущей строки ТЧ.
//
Процедура СтатьяПриИзменении(Форма, Элемент, ИдентификаторСтрокиТЧ = 0) Экспорт
	
	ПараметрыВыбораСтатьи = ПараметрыВыбораПоЭлементу(Форма, Элемент);
	
	ИдентификаторСтроки = Неопределено;
	ТаблицаФормы = ОбщегоНазначенияУТКлиентСервер.ТаблицаФормыЭлемента(Элемент);
	Если ТаблицаФормы <> Неопределено Тогда
		ИдентификаторСтроки = ТаблицаФормы.ТекущаяСтрока;
	КонецЕсли;
	
	Данные = ДанныеПоПути(Форма, ПараметрыВыбораСтатьи.ПутьКДанным, ИдентификаторСтроки);
	
	Если ТипЗнч(Данные) = Тип("ДанныеФормыКоллекция") Тогда
		// Редактируем "всю" таблицу.
		// Во всех строках таблицы установим значение статьи.
		ИдентификаторыСтрок = Новый Массив;
		Статья = Данные[ИдентификаторСтрокиТЧ][ПараметрыВыбораСтатьи.Статья];
		Для каждого СтрокаТаблицы Из Данные Цикл
			СтрокаТаблицы[ПараметрыВыбораСтатьи.Статья] = Статья;
			ЗаполнитьРеквизитыСтатьи(Форма, СтрокаТаблицы, ПараметрыВыбораСтатьи);
			ИдентификаторыСтрок.Добавить(СтрокаТаблицы.ПолучитьИдентификатор());
		КонецЦикла;
	ИначеЕсли ТипЗнч(Данные) = Тип("ДанныеФормыЭлементКоллекции") Тогда
		ЗаполнитьРеквизитыСтатьи(Форма, Данные, ПараметрыВыбораСтатьи);
		ИдентификаторыСтрок = Данные.ПолучитьИдентификатор();
	Иначе
		ЗаполнитьРеквизитыСтатьи(Форма, Данные, ПараметрыВыбораСтатьи);
		ИдентификаторыСтрок = Неопределено;
	КонецЕсли;
	УстановитьСвойстваЭлементовАналитики(Форма, ПараметрыВыбораСтатьи);
	
	
КонецПроцедуры

// Обрабатывает изменение аналитики расходов, вызывается в соответствующем обработчике события элемента.
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма объекта.
// 	Элемент - ПолеФормы - Элемент выбора статьи.
//
Процедура АналитикаРасходовПриИзменении(Форма, Элемент) Экспорт
	
	ПараметрыВыбораСтатьи = ПараметрыВыбораПоЭлементу(Форма, Элемент);
	
	ИдентификаторСтроки = Неопределено;
	ТаблицаФормы = ОбщегоНазначенияУТКлиентСервер.ТаблицаФормыЭлемента(Элемент);
	Если ТаблицаФормы <> Неопределено Тогда
		ИдентификаторСтроки = ТаблицаФормы.ТекущаяСтрока;
	КонецЕсли;
	
	Данные = ДанныеПоПути(Форма, ПараметрыВыбораСтатьи.ПутьКДанным, ИдентификаторСтроки);
	Если ТипЗнч(Данные) = Тип("ДанныеФормыКоллекция") Тогда
		// Редактируем "всю" таблицу.
		// Во всех строках таблицы установим значение статьи.
		АналитикаРасходов = Данные[0][ПараметрыВыбораСтатьи.АналитикаРасходов];
		Для каждого СтрокаТаблицы Из Данные Цикл
			СтрокаТаблицы[ПараметрыВыбораСтатьи.АналитикаРасходов] = АналитикаРасходов;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Обрабатывает изменение аналитики доходов, вызывается в соответствующем обработчике события элемента.
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма объекта.
// 	Элемент - ПолеФормы - Элемент выбора статьи.
//
Процедура АналитикаДоходовПриИзменении(Форма, Элемент) Экспорт
	
	ПараметрыВыбораСтатьи = ПараметрыВыбораПоЭлементу(Форма, Элемент);
	
	ИдентификаторСтроки = Неопределено;
	ТаблицаФормы = ОбщегоНазначенияУТКлиентСервер.ТаблицаФормыЭлемента(Элемент);
	Если ТаблицаФормы <> Неопределено Тогда
		ИдентификаторСтроки = ТаблицаФормы.ТекущаяСтрока;
	КонецЕсли;
	
	Данные = ДанныеПоПути(Форма, ПараметрыВыбораСтатьи.ПутьКДанным, ИдентификаторСтроки);
	Если ТипЗнч(Данные) = Тип("ДанныеФормыКоллекция") Тогда
		// Редактируем "всю" таблицу.
		// Во всех строках таблицы установим значение статьи.
		АналитикаДоходов = Данные[0][ПараметрыВыбораСтатьи.АналитикаДоходов];
		Для каждого СтрокаТаблицы Из Данные Цикл
			СтрокаТаблицы[ПараметрыВыбораСтатьи.АналитикаДоходов] = АналитикаДоходов;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Обрабатывает изменение аналитики активов/пассивов, вызывается в соответствующем обработчике события элемента.
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма объекта.
// 	Элемент - ПолеФормы - Элемент выбора статьи.
//
Процедура АналитикаАктивовПассивовПриИзменении(Форма, Элемент) Экспорт
	
	ПараметрыВыбораСтатьи = ПараметрыВыбораПоЭлементу(Форма, Элемент);
	
	ИдентификаторСтроки = Неопределено;
	ТаблицаФормы = ОбщегоНазначенияУТКлиентСервер.ТаблицаФормыЭлемента(Элемент);
	Если ТаблицаФормы <> Неопределено Тогда
		ИдентификаторСтроки = ТаблицаФормы.ТекущаяСтрока;
	КонецЕсли;
	
	Данные = ДанныеПоПути(Форма, ПараметрыВыбораСтатьи.ПутьКДанным, ИдентификаторСтроки);
	Если ТипЗнч(Данные) = Тип("ДанныеФормыКоллекция") Тогда
		// Редактируем "всю" таблицу.
		// Во всех строках таблицы установим значение статьи.
		АналитикаАктивовПассивов = Данные[0][ПараметрыВыбораСтатьи.АналитикаАктивовПассивов];
		Для каждого СтрокаТаблицы Из Данные Цикл
			СтрокаТаблицы[ПараметрыВыбораСтатьи.АналитикаАктивовПассивов] = АналитикаАктивовПассивов;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Инициализирует в новой строке таблицы значение статей значениями по умолчанию.
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма объекта.
// 	НоваяСтрока - ДанныеФормыЭлементКоллекции, СтрокаТабличнойЧасти - Новая строка таблицы.
// 	ПутьКДаннымТаблицы - Строка - Путь к данным таблицы формы, например "Объект.Товары".
// 
Процедура ПриДобавленииСтрокиВТаблицу(Форма, НоваяСтрока, ПутьКДаннымТаблицы) Экспорт
	
	ДанныеВыбораСтатейИАналитик = ОбщегоНазначенияУТКлиентСервер.ПолучитьДанныеМеханизмаИзКэшаФормы(Форма, "ВыборСтатейИАналитик");

	Для каждого Параметры Из ДанныеВыбораСтатейИАналитик.МассивПараметровВыбора Цикл
		Если Параметры.ПутьКДанным = ПутьКДаннымТаблицы Тогда
			ИнициализироватьЗначениеСтатьиИАналитик(НоваяСтрока, Параметры);
			ЗаполнитьРеквизитыСтатьи(Форма, НоваяСтрока, Параметры);
			УстановитьСвойстваЭлементовАналитики(Форма, Параметры);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Очищает статью и аналитику в строке таблицы, если они не доступны в строке ТЧ.
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма объекта.
// 	Строка - ДанныеФормыЭлементКоллекции - Строка таблицы.
// 	ПутьКДаннымТаблицы - Строка - Путь к данным таблицы формы, например "Объект.Товары".
//
Процедура ПриИзмененииРеквизитаДоступностиСтатьиВСтроке(Форма, Строка, ПутьКДаннымТаблицы) Экспорт
	
	ДанныеВыбораСтатейИАналитик = ОбщегоНазначенияУТКлиентСервер.ПолучитьДанныеМеханизмаИзКэшаФормы(Форма, "ВыборСтатейИАналитик");

	Для каждого Параметры Из ДанныеВыбораСтатейИАналитик.МассивПараметровВыбора Цикл
		Если Параметры.ПутьКДанным = ПутьКДаннымТаблицы Тогда
			ДоступностьВСтроке = Истина;
			Для каждого КлючИЗначение Из Параметры.УсловияДоступностиСтатьиВСтроках Цикл
				Если ТипЗнч(КлючИЗначение.Значение) = Тип("Массив")
					И КлючИЗначение.Значение.Найти(Строка[КлючИЗначение.Ключ]) = Неопределено Тогда
					ДоступностьВСтроке = Ложь;
				ИначеЕсли ТипЗнч(КлючИЗначение.Значение) = Тип("СписокЗначений")
					И КлючИЗначение.Значение.НайтиПоЗначению(Строка[КлючИЗначение.Ключ]) = Неопределено Тогда
					ДоступностьВСтроке = Ложь;	
				ИначеЕсли Строка[КлючИЗначение.Ключ] <> КлючИЗначение.Значение Тогда
					ДоступностьВСтроке = Ложь;
				КонецЕсли; 
				Если НЕ ДоступностьВСтроке Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НЕ ДоступностьВСтроке И ЗначениеЗаполнено(Строка[Параметры.Статья]) Тогда
				Строка[Параметры.Статья] = Параметры.ЗначениеПоУмолчанию;
				ЗаполнитьРеквизитыСтатьи(Форма, Строка, Параметры);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Дополняет структуру действий механизма ОбработкаТабличнойЧасти действием заполнения статьи и аналитики расходов по номенклатуре.
// 
// Параметры:
// 	СтруктураДействий - Структура - Структура действий
// 	ФормаИлиПараметры - ФормаКлиентскогоПриложения, Структура, Массив - При вызове из формы передается форма объекта. Из формы получаются закэшированные параметры выбора статей и аналитик. 
// 	                                                          При вызове из объекта - параметры выбора статей и аналитик (см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики).
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа
// 	Организация - СправочникСсылка.Организации - Организация документа
// 	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение документа
// 	ПутьКДанным - Строка - Путь к данным статьи и аналитики. Значение по умолчанию "Объект.Товары".
// 	СтатьяРасходов - Строка - Имя реквизита статьи расходов. Значение по умолчанию "Статья расходов".
//
Процедура ВставитьДействиеЗаполнитьСтатьюАналитикуРасходовНоменклатуры(СтруктураДействий, ФормаИлиПараметры, ХозяйственнаяОперация, Организация, Подразделение, ПутьКДанным = "Объект.Товары", СтатьяРасходов = "СтатьяРасходов") Экспорт
	
	Если ТипЗнч(ФормаИлиПараметры) = Тип("ФормаКлиентскогоПриложения") Тогда
		ДанныеВыборСтатей = ОбщегоНазначенияУТКлиентСервер.ПолучитьДанныеМеханизмаИзКэшаФормы(ФормаИлиПараметры, "ВыборСтатейИАналитик");
		МассивПараметровВыбора = ДанныеВыборСтатей.МассивПараметровВыбора;
		ДействиеВФорме = Истина;
	Иначе
		Если ТипЗнч(ФормаИлиПараметры) = Тип("Массив") Тогда
			МассивПараметровВыбора = ФормаИлиПараметры;
		Иначе
			МассивПараметровВыбора = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФормаИлиПараметры);
		КонецЕсли;
		ДействиеВФорме = Ложь;
	КонецЕсли;
	
	ПараметрыВыбора = Неопределено;
	Для каждого Параметры Из МассивПараметровВыбора Цикл
		Если Параметры.ПутьКДанным = ПутьКДанным И Параметры.Статья = СтатьяРасходов Тогда
			ПараметрыВыбора = Параметры;
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеКолонки = Новый Массив();
	Если ДействиеВФорме Тогда
		ПолучитьДополнительныеКолонкиДляДействияВФорме(ДополнительныеКолонки, ПараметрыВыбора);
	КонецЕсли;
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("Организация",                    Организация);
	ПараметрыДействия.Вставить("Подразделение",                  Подразделение);
	ПараметрыДействия.Вставить("ХозяйственнаяОперация",          ХозяйственнаяОперация);
	ПараметрыДействия.Вставить("СтатьяРасходов",                 ПараметрыВыбора.Статья);
	ПараметрыДействия.Вставить("АналитикаРасходов",              ПараметрыВыбора.АналитикаРасходов);
	
	ПараметрыДействия.Вставить("ДействиеВФорме",                 ДействиеВФорме);
	ПараметрыДействия.Вставить("ПараметрыВыбораСтатейИАналитик", ПараметрыВыбора);
	ПараметрыДействия.Вставить("ДополнительныеКолонки",          ДополнительныеКолонки);
	
	СтруктураДействий.Вставить("ЗаполнитьСтатьюАналитикуРасходовНоменклатуры", ПараметрыДействия);
	
	
КонецПроцедуры

// Дополняет структуру действий механизма ОбработкаТабличнойЧасти действием очистки статьи и аналитики расходов при изменении номенклатуры.
// 
// Параметры:
// 	СтруктураДействий - Структура - Структура действий
// 	ФормаИлиПараметры - ФормаКлиентскогоПриложения, Структура, Массив - При вызове из формы передается форма объекта. Из формы получаются закэшированные параметры выбора статей и аналитик. 
// 	                                                          При вызове из объекта - параметры выбора статей и аналитик (см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики).
// 	ПутьКДанным - Строка - Путь к данным статьи и аналитики. Значение по умолчанию "Объект.Товары".
// 	СтатьяРасходов - Строка - Имя реквизита статьи расходов. Значение по умолчанию "Статья расходов".
//
Процедура ВставитьДействиеОчиститьСтатьюИАналитикуРасходов(СтруктураДействий, ФормаИлиПараметры, ПутьКДанным = "Объект.Товары", СтатьяРасходов = "СтатьяРасходов") Экспорт
	
	Если ТипЗнч(ФормаИлиПараметры) = Тип("ФормаКлиентскогоПриложения") Тогда
		ДанныеВыборСтатей = ОбщегоНазначенияУТКлиентСервер.ПолучитьДанныеМеханизмаИзКэшаФормы(ФормаИлиПараметры, "ВыборСтатейИАналитик");
		МассивПараметровВыбора = ДанныеВыборСтатей.МассивПараметровВыбора;
		ДействиеВФорме = Истина;
	Иначе
		Если ТипЗнч(ФормаИлиПараметры) = Тип("Массив") Тогда
			МассивПараметровВыбора = ФормаИлиПараметры;
		Иначе
			МассивПараметровВыбора = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФормаИлиПараметры);
		КонецЕсли;
		ДействиеВФорме = Ложь;
	КонецЕсли;
	
	ПараметрыВыбора = Неопределено;
	Для каждого Параметры Из МассивПараметровВыбора Цикл
		Если Параметры.ПутьКДанным = ПутьКДанным И Параметры.Статья = СтатьяРасходов Тогда
			ПараметрыВыбора = Параметры;
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеКолонки = Новый Массив();
	Если ДействиеВФорме Тогда
		ПолучитьДополнительныеКолонкиДляДействияВФорме(ДополнительныеКолонки, ПараметрыВыбора);
	КонецЕсли;
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("СтатьяРасходов",                 ПараметрыВыбора.Статья);
	ПараметрыДействия.Вставить("АналитикаРасходов",              ПараметрыВыбора.АналитикаРасходов);
	
	ПараметрыДействия.Вставить("ДействиеВФорме",                 ДействиеВФорме);
	ПараметрыДействия.Вставить("ПараметрыВыбораСтатейИАналитик", ПараметрыВыбора);
	ПараметрыДействия.Вставить("ДополнительныеКолонки",          ДополнительныеКолонки);
	
	СтруктураДействий.Вставить("ОчиститьСтатьюАналитикуРасходов", ПараметрыДействия);
	
	
КонецПроцедуры

// Дополняет структуру действий механизма ОбработкаТабличнойЧасти действием инициализации реквизитов после добавления строки.
// 
// Параметры:
// 	СтруктураДействий - Структура - Структура действий
// 	ФормаИлиПараметры - ФормаКлиентскогоПриложения, Структура, Массив - При вызове из формы передается форма объекта. Из формы получаются закэшированные параметры выбора статей и аналитик. 
// 	                                                          При вызове из объекта - параметры выбора статей и аналитик (см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики).
// 	ПутьКДанным - Строка - Путь к данным статьи и аналитики. Значение по умолчанию "Объект.Товары".
//
Процедура ВставитьДействиеИнициализироватьСтатьюИАналитикуПослеДобавленияСтроки(СтруктураДействий, ФормаИлиПараметры, ПутьКДанным = "Объект.Товары") Экспорт
	
	Если ТипЗнч(ФормаИлиПараметры) = Тип("ФормаКлиентскогоПриложения") Тогда
		ДанныеВыборСтатей = ОбщегоНазначенияУТКлиентСервер.ПолучитьДанныеМеханизмаИзКэшаФормы(ФормаИлиПараметры, "ВыборСтатейИАналитик");
		МассивПараметровВыбора = ДанныеВыборСтатей.МассивПараметровВыбора;
		ДействиеВФорме = Истина;
	Иначе
		Если ТипЗнч(ФормаИлиПараметры) = Тип("Массив") Тогда
			МассивПараметровВыбора = ФормаИлиПараметры;
		Иначе
			МассивПараметровВыбора = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФормаИлиПараметры);
		КонецЕсли;
		ДействиеВФорме = Ложь;
	КонецЕсли;
	
	КолонкиТабличнойЧасти = Новый Массив;
	МассивПараметровВыбораДляДействия = Новый Массив;
	Для каждого ПараметрыВыбора Из МассивПараметровВыбора Цикл
		
		Если ПараметрыВыбора.ПутьКДанным <> ПутьКДанным Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПараметровВыбораДляДействия.Добавить(ПараметрыВыбора);
		
		КолонкиТабличнойЧасти.Добавить(ПараметрыВыбора.Статья);
		Если ПараметрыВыбора.ВыборСтатьиРасходов Тогда
			КолонкиТабличнойЧасти.Добавить(ПараметрыВыбора.АналитикаРасходов);
		Конецесли;
		Если ПараметрыВыбора.ВыборСтатьиДоходов Тогда
			КолонкиТабличнойЧасти.Добавить(ПараметрыВыбора.АналитикаДоходов);
		Конецесли;
		Если ПараметрыВыбора.ВыборСтатьиАктивовПассивов Тогда
			КолонкиТабличнойЧасти.Добавить(ПараметрыВыбора.АналитикаАктивовПассивов);
		Конецесли;
		
		Если ДействиеВФорме Тогда
			ПолучитьДополнительныеКолонкиДляДействияВФорме(КолонкиТабличнойЧасти, ПараметрыВыбора);
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыДействия = Новый Структура;
	
	ПараметрыДействия.Вставить("ДействиеВФорме",                        ДействиеВФорме);
	ПараметрыДействия.Вставить("КолонкиТабличнойЧасти",                 КолонкиТабличнойЧасти);
	ПараметрыДействия.Вставить("МассивПараметровВыбораСтатейИАналитик", МассивПараметровВыбораДляДействия);
	
	СтруктураДействий.Вставить("ИнициализироватьСтатьюИАналитикуПослеДобавленияСтроки", ПараметрыДействия);
	
	
КонецПроцедуры

// Обрабатывает программное изменение статьи и аналитики активов/пассивов, вызывается в соответствующем обработчике события элемента.
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма объекта.
// 	ПутьКДанным - Строка - Путь к данным статьи и аналитике формы, например "Объект.Товары".
//
Процедура СтатьяАналитикаДоходовРасходовПриИзменении(Форма, ПутьКДанным) Экспорт
	
	ДанныеВыборСтатей = ОбщегоНазначенияУТКлиентСервер.ПолучитьДанныеМеханизмаИзКэшаФормы(Форма, "ВыборСтатейИАналитик");
	
	Если ДанныеВыборСтатей = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ПараметрыВыбораСтатьи Из ДанныеВыборСтатей.МассивПараметровВыбора Цикл
		Если ПараметрыВыбораСтатьи.ПутьКДанным = ПутьКДанным Тогда
			ИдентификаторСтроки = Неопределено;
			
			Для Каждого ИмяЭлементаСтатья Из ПараметрыВыбораСтатьи.ЭлементыФормы.Статья Цикл
				ТаблицаФормы = ОбщегоНазначенияУТКлиентСервер.ТаблицаФормыЭлемента(Форма.Элементы[ИмяЭлементаСтатья]);
				Если ТаблицаФормы <> Неопределено Тогда
					ИдентификаторСтроки = ТаблицаФормы.ТекущаяСтрока;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Данные = ДанныеПоПути(Форма, ПараметрыВыбораСтатьи.ПутьКДанным, ИдентификаторСтроки);
			
			Если ТипЗнч(Данные) = Тип("ДанныеФормыКоллекция") Тогда
				// Редактируем "всю" таблицу.
				Для каждого СтрокаТаблицы Из Данные Цикл
					ЗаполнитьРеквизитыСтатьи(Форма, СтрокаТаблицы, ПараметрыВыбораСтатьи);
				КонецЦикла;
			ИначеЕсли ТипЗнч(Данные) = Тип("ДанныеФормыЭлементКоллекции") Тогда
				ЗаполнитьРеквизитыСтатьи(Форма, Данные, ПараметрыВыбораСтатьи);
			Иначе
				ЗаполнитьРеквизитыСтатьи(Форма, Данные, ПараметрыВыбораСтатьи);
			КонецЕсли;
			
			УстановитьСвойстваЭлементовАналитики(Форма, ПараметрыВыбораСтатьи);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ВыборСтатейИАналитик

Функция ПараметрыВыбораПоЭлементу(Форма, Элемент) Экспорт
	
	ДанныеВыборСтатей = ОбщегоНазначенияУТКлиентСервер.ПолучитьДанныеМеханизмаИзКэшаФормы(Форма, "ВыборСтатейИАналитик");
	ИндексПараметров = Неопределено;
	Если НЕ ДанныеВыборСтатей.СоответствиеПараметровВыбораЭлементамФормы.Свойство(Элемент.Имя, ИндексПараметров) Тогда
		ВызватьИсключение НСтр("ru = 'Переданный элемент не является элементом выбора статьи и аналитики'");
	КонецЕсли;
	МассивПараметровВыбора = ДанныеВыборСтатей.МассивПараметровВыбора; // Массив -
	Возврат МассивПараметровВыбора.Получить(ИндексПараметров);
	
КонецФункции

Процедура ИнициализироватьЗначениеСтатьиИАналитик(Данные, Знач Параметры) Экспорт
	
	УстановитьЗначениеПоУмолчанию = Ложь;
	Статья = Данные[Параметры.Статья];
	
	Если Параметры.ЗначениеПоУмолчанию = Неопределено Тогда
		Если Параметры.ВыборСтатьиРасходов Тогда
			Параметры.ЗначениеПоУмолчанию = ПредопределенноеЗначение("ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка");
		ИначеЕсли Параметры.ВыборСтатьиДоходов Тогда
			Параметры.ЗначениеПоУмолчанию = ПредопределенноеЗначение("ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка");
		ИначеЕсли Параметры.ВыборСтатьиАктивовПассивов Тогда
			Параметры.ЗначениеПоУмолчанию = ПредопределенноеЗначение("ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
	Если Статья = Неопределено Тогда
		УстановитьЗначениеПоУмолчанию = Истина;
	КонецЕсли;
	
	Если Параметры.ДоступностьПоОперации <> Неопределено 
			И НЕ Параметры.ДоступностьПоОперации 
			И Статья <> Параметры.ЗначениеПоУмолчанию Тогда
		УстановитьЗначениеПоУмолчанию = Истина;
	КонецЕсли;
	
	// Проверим соответствие выбранной статьи параметрам ВыборСтатьиРасходов, ВыборСтатьиДоходов, ВыборСтатьиАктивовПассивов.
	Если НЕ УстановитьЗначениеПоУмолчанию
		 И НЕ Параметры.ВыборСтатьиРасходов
		 И ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
		УстановитьЗначениеПоУмолчанию = Истина;
	КонецЕсли;
	
	Если НЕ УстановитьЗначениеПоУмолчанию
		 И НЕ Параметры.ВыборСтатьиДоходов
		 И ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов") Тогда
		УстановитьЗначениеПоУмолчанию = Истина;
	КонецЕсли;
	
	Если НЕ УстановитьЗначениеПоУмолчанию
		 И НЕ Параметры.ВыборСтатьиАктивовПассивов
		 И ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
		УстановитьЗначениеПоУмолчанию = Истина;
	КонецЕсли;
	
	Если УстановитьЗначениеПоУмолчанию Тогда
		Данные[Параметры.Статья] = Параметры.ЗначениеПоУмолчанию;
	КонецЕсли;
	
	// Очистим неактуальную аналитику
	ОчиститьАналитикуРасходов      = Ложь;
	ОчиститьАналитикуДоходов       = Ложь;
	ОчиститьАналитикуПрочихАктивов = Ложь;
	Если ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
		ОчиститьАналитикуДоходов       = Истина;
		ОчиститьАналитикуПрочихАктивов = Истина;
		Если Не ЗначениеЗаполнено(Статья) Тогда
			ОчиститьАналитикуРасходов   = Истина;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов") Тогда
		ОчиститьАналитикуРасходов      = Истина;
		ОчиститьАналитикуПрочихАктивов = Истина;
		Если Не ЗначениеЗаполнено(Статья) Тогда
			ОчиститьАналитикуДоходов   = Истина;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
		ОчиститьАналитикуРасходов      = Истина;
		ОчиститьАналитикуДоходов       = Истина;
		Если Не ЗначениеЗаполнено(Статья) Тогда
			ОчиститьАналитикуПрочихАктивов   = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если УстановитьЗначениеПоУмолчанию Тогда
		Данные[Параметры.Статья] = Параметры.ЗначениеПоУмолчанию;
		Если Параметры.ВыборСтатьиРасходов 
			 И Параметры.АналитикаРасходов <> "" Тогда
			Данные[Параметры.АналитикаРасходов] = Неопределено;
		КонецЕсли;
		Если Параметры.ВыборСтатьиДоходов
			 И Параметры.АналитикаДоходов <> "" Тогда
			Данные[Параметры.АналитикаДоходов] = Неопределено;
		КонецЕсли;
		Если Параметры.ВыборСтатьиАктивовПассивов
			 И Параметры.АналитикаАктивовПассивов <> "" Тогда
			Данные[Параметры.АналитикаАктивовПассивов] = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если ОчиститьАналитикуРасходов
		 И Параметры.АналитикаРасходов <> "" Тогда
		Данные[Параметры.АналитикаРасходов] = Неопределено;
	КонецЕсли;
	Если ОчиститьАналитикуДоходов
		 И Параметры.АналитикаДоходов <> "" Тогда
		Данные[Параметры.АналитикаДоходов] = Неопределено;
	КонецЕсли;
	Если ОчиститьАналитикуПрочихАктивов
		 И Параметры.АналитикаАктивовПассивов <> ""Тогда
		Данные[Параметры.АналитикаАктивовПассивов] = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеПоПути(ФормаОбъект, Знач ПутьКДанным, Знач ИдентификаторСтроки = Неопределено) Экспорт
	
	ЧастиПутиКДанным = СтрРазделить(ПутьКДанным, ".", Ложь);
	Если ТипЗнч(ФормаОбъект) <> Тип("ФормаКлиентскогоПриложения") 
		И ЧастиПутиКДанным[0] = "Объект" Тогда
		ЧастиПутиКДанным.Удалить(0);
	КонецЕсли;
	
	Если ЧастиПутиКДанным.Количество() > 1 Тогда
		Данные = ФормаОбъект[ЧастиПутиКДанным[0]][ЧастиПутиКДанным[1]];
		Если ИдентификаторСтроки <> Неопределено И ТипЗнч(Данные) = Тип("ДанныеФормыКоллекция") Тогда
			Данные = Данные.НайтиПоИдентификатору(ИдентификаторСтроки);
			Если ЧастиПутиКДанным.Количество() = 3 Тогда
				Данные = Данные[ЧастиПутиКДанным[2]];
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЧастиПутиКДанным.Количество() = 1 
		И ТипЗнч(ФормаОбъект[ЧастиПутиКДанным[0]]) = Тип("ДанныеФормыКоллекция") Тогда
		Если ИдентификаторСтроки <> Неопределено Тогда
			Данные = ФормаОбъект[ЧастиПутиКДанным[0]].НайтиПоИдентификатору(ИдентификаторСтроки);
		Иначе
			Данные = ФормаОбъект[ЧастиПутиКДанным[0]];
		КонецЕсли;
	ИначеЕсли ЧастиПутиКДанным.Количество() = 1 Тогда
		Данные = ФормаОбъект[ЧастиПутиКДанным[0]];
	Иначе
		Данные = ФормаОбъект;
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции


// Возвращает аналитику по умолчанию
// 
// Параметры:
// 	РеквизитыСтатьи - Структура - Описание:
// * БезАналитики - Булево -
// * АналитикаРасходовЗаказРеализация - Булево -
// * КонтролироватьЗаполнениеАналитики - Булево -
// * ТипЗначения - ОписаниеТипов -
// 	Данные - ФормаКлиентскогоПриложения, ДанныеФормыСтруктура - содержит:
// 	  * Ссылка - ДокументСсылка - 
// Возвращаемое значение:
// 	ДокументСсылка.РеализацияТоваровУслуг, Произвольный - аналитика по умолчанию
Функция ПолучитьАналитикуПоУмолчанию(РеквизитыСтатьи, Данные) Экспорт
	
	ОписаниеТипов = Новый ОписаниеТипов(РеквизитыСтатьи.ТипЗначения);
	Аналитика = ОписаниеТипов.ПривестиЗначение();
	
	Если РеквизитыСтатьи.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Склады")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "Склад") Тогда
		
		Если ЗначениеЗаполнено(Данные.Склад) Тогда
			ЭтоГруппа = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Данные.Склад, "ЭтоГруппа");
			Если НЕ ЭтоГруппа Тогда
				Аналитика = Данные.Склад;
			КонецЕсли;
		КонецЕсли
		
	ИначеЕсли РеквизитыСтатьи.ТипЗначения = Новый ОписаниеТипов("ДокументСсылка.ЗаказПоставщику")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "ЗаказПоставщику") Тогда
		
		Аналитика = Данные.ЗаказПоставщику;
		
	ИначеЕсли РеквизитыСтатьи.ТипЗначения = Новый ОписаниеТипов("ДокументСсылка.ПриобретениеТоваровУслуг")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "Ссылка")
		И ТипЗнч(Данные.Ссылка) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		
		Аналитика = Данные.Ссылка;
		
	ИначеЕсли РеквизитыСтатьи.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Партнеры")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "Партнер") Тогда
		
		Аналитика = Данные.Партнер;	
		
	ИначеЕсли РеквизитыСтатьи.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Организации")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "Организация")Тогда
		
		Аналитика = Данные.Организация;
		
	ИначеЕсли РеквизитыСтатьи.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия")
	   И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "Подразделение") Тогда
	   
		Аналитика = Данные.Подразделение;
		
	ИначеЕсли РеквизитыСтатьи.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица") Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "ПодотчетноеЛицо") Тогда
			Аналитика = Данные.ПодотчетноеЛицо;
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "ФизическоеЛицо") Тогда
			Аналитика = Данные.ФизическоеЛицо;
		КонецЕсли;
	
	ИначеЕсли РеквизитыСтатьи.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Кассы")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "Касса")  Тогда
		
		Аналитика = Данные.Касса;
		
	ИначеЕсли РеквизитыСтатьи.Свойство("АналитикаРасходовЗаказРеализация")
	 		И РеквизитыСтатьи.АналитикаРасходовЗаказРеализация Тогда
		Аналитика =  ПредопределенноеЗначение("Документ.РеализацияТоваровУслуг.ПустаяСсылка");
		
	КонецЕсли;
	
	Возврат Аналитика;
	
КонецФункции

// Заполняет реквизиты статьи
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - 
// 	Данные - ДанныеФормыЭлементКоллекции, СтрокаТабличнойЧасти, ФормаКлиентскогоПриложения, Неопределено -
// 	ПараметрыВыбора - Структура -
Процедура ЗаполнитьРеквизитыСтатьи(Форма, Данные, Знач ПараметрыВыбора) Экспорт
	
	Статья = Данные[ПараметрыВыбора.Статья];
	
	Если ТипЗнч(Данные) = Тип("ДанныеФормыЭлементКоллекции") Тогда
		ДанныеДляСлужебныхРеквизитов = Данные;
	Иначе
		ДанныеДляСлужебныхРеквизитов = Форма;
	КонецЕсли;
	
	Если ПараметрыВыбора.ТипСтатьи <> "" Тогда
		ТипСтатьи = 0;
		Если ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
			ТипСтатьи = 1;
		ИначеЕсли ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов") Тогда
			ТипСтатьи = 2;
		ИначеЕсли ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
			ТипСтатьи = 3;
		КонецЕсли;
		ДанныеДляСлужебныхРеквизитов[ПараметрыВыбора.ТипСтатьи] = ТипСтатьи;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Объект = Форма.Объект;
	Иначе
		Объект = Форма;
	КонецЕсли;
	
	РеквизитыСтатьи = ДоходыИРасходыВызовСервераПовтИсп.ЗначенияРеквизитовСтатьи(Статья);
	ТипЗначенияСтатьи = ТипЗнч(Статья);
	
	Если ПараметрыВыбора.ВыборСтатьиРасходов И ТипЗначенияСтатьи = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
		Если ПараметрыВыбора.КэшРеквизитовСтатьиРасходов.АналитикаРасходовОбязательна <> "" Тогда
			ДанныеДляСлужебныхРеквизитов[ПараметрыВыбора.КэшРеквизитовСтатьиРасходов.АналитикаРасходовОбязательна] = РеквизитыСтатьи.КонтролироватьЗаполнениеАналитики;
		КонецЕсли;
		Если ПараметрыВыбора.КэшРеквизитовСтатьиРасходов.АналитикаРасходовЗаказРеализация <> "" Тогда
			ДанныеДляСлужебныхРеквизитов[ПараметрыВыбора.КэшРеквизитовСтатьиРасходов.АналитикаРасходовЗаказРеализация] = РеквизитыСтатьи.АналитикаРасходовЗаказРеализация;
		КонецЕсли; 
		
		Если НЕ РеквизитыСтатьи.ТипЗначения.СодержитТип(ТипЗнч(Данные[ПараметрыВыбора.АналитикаРасходов])) Тогда
			Данные[ПараметрыВыбора.АналитикаРасходов] = Неопределено;	
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Данные[ПараметрыВыбора.АналитикаРасходов]) Тогда
			Данные[ПараметрыВыбора.АналитикаРасходов] = 
				ПолучитьАналитикуПоУмолчанию(РеквизитыСтатьи, Объект);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[ПараметрыВыбора.АналитикаРасходов]) И ТипЗнч(Объект) <> ТипЗнч(Данные) Тогда
			Данные[ПараметрыВыбора.АналитикаРасходов] = 
				ПолучитьАналитикуПоУмолчанию(РеквизитыСтатьи, Данные);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыВыбора.ВыборСтатьиДоходов И ТипЗначенияСтатьи = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов") Тогда
		Если ПараметрыВыбора.АналитикаДоходов <> "" Тогда
			ДанныеДляСлужебныхРеквизитов[ПараметрыВыбора.КэшРеквизитовСтатьиДоходов.АналитикаДоходовОбязательна] = РеквизитыСтатьи.КонтролироватьЗаполнениеАналитики;
		КонецЕсли;
		
		Если НЕ РеквизитыСтатьи.ТипЗначения.СодержитТип(ТипЗнч(Данные[ПараметрыВыбора.АналитикаДоходов])) Тогда
			Данные[ПараметрыВыбора.АналитикаДоходов] = Неопределено;	
		КонецЕсли;

		Если Не ЗначениеЗаполнено(Данные[ПараметрыВыбора.АналитикаДоходов]) Тогда
			Данные[ПараметрыВыбора.АналитикаДоходов] = 
				ПолучитьАналитикуПоУмолчанию(РеквизитыСтатьи, Объект);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[ПараметрыВыбора.АналитикаДоходов]) И ТипЗнч(Объект) <> ТипЗнч(Данные) Тогда
			Данные[ПараметрыВыбора.АналитикаДоходов] = 
				ПолучитьАналитикуПоУмолчанию(РеквизитыСтатьи, Данные);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыВыбора.ВыборСтатьиАктивовПассивов И ТипЗначенияСтатьи = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
		Если ПараметрыВыбора.АналитикаАктивовПассивов <> "" Тогда
			ДанныеДляСлужебныхРеквизитов[ПараметрыВыбора.КэшРеквизитовСтатьиАктивовПассивов.АналитикаАктивовПассивовНеИспользуется] = РеквизитыСтатьи.БезАналитики;
		КонецЕсли;   
		
		Если НЕ РеквизитыСтатьи.ТипЗначения.СодержитТип(ТипЗнч(Данные[ПараметрыВыбора.АналитикаАктивовПассивов])) Тогда
			Данные[ПараметрыВыбора.АналитикаАктивовПассивов] = Неопределено;	
		КонецЕсли;

		Если Не ЗначениеЗаполнено(Данные[ПараметрыВыбора.АналитикаАктивовПассивов]) Тогда
			Данные[ПараметрыВыбора.АналитикаАктивовПассивов] = 
				ПолучитьАналитикуПоУмолчанию(РеквизитыСтатьи, Объект);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[ПараметрыВыбора.АналитикаАктивовПассивов]) И ТипЗнч(Объект) <> ТипЗнч(Данные) Тогда
			Данные[ПараметрыВыбора.АналитикаАктивовПассивов] = 
				ПолучитьАналитикуПоУмолчанию(РеквизитыСтатьи, Данные);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Описание
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - 
// 	ПараметрыВыбора - Структура -
Процедура УстановитьСвойстваЭлементовАналитики(Форма, Знач ПараметрыВыбора) Экспорт
	
	ЭлементыФормы = Форма.Элементы;

	Данные = ДанныеПоПути(Форма, ПараметрыВыбора.ПутьКДанным);
	ДанныеДляСлужебныхРеквизитов = Неопределено;
	Если ТипЗнч(Данные) = Тип("ДанныеФормыКоллекция") Тогда
		// Редактируем таблицу в режиме "Без разбиения"
		Если Данные.Количество() > 0 Тогда
			Данные = Данные[0];
			ДанныеДляСлужебныхРеквизитов = Данные;
		Иначе
			Данные = Неопределено;
			ДанныеДляСлужебныхРеквизитов = Неопределено;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Данные) = Тип("ДанныеФормыЭлементКоллекции") Тогда
		ДанныеДляСлужебныхРеквизитов = Данные;
	Иначе
		ДанныеДляСлужебныхРеквизитов = Форма;
	КонецЕсли;
	
	Если Данные <> Неопределено Тогда
		СтатьяЗаполнена = ЗначениеЗаполнено(Данные[ПараметрыВыбора.Статья]);
		ТипСтатьи = ТипЗнч(Данные[ПараметрыВыбора.Статья]);
	Иначе
		СтатьяЗаполнена = Ложь;
		ТипСтатьи = ТипЗнч(ПараметрыВыбора.ЗначениеПоУмолчанию);
	КонецЕсли;
	
	Индекс = 0;
	Для каждого ИмяЭлемента Из ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов Цикл
		ЭлементСтатьи = ЭлементыФормы[ПараметрыВыбора.ЭлементыФормы.Статья[Индекс]];
		ЭлементАналитики = ЭлементыФормы[ИмяЭлемента];
		ЭлементАналитики.Видимость = ЭлементСтатьи.Видимость;
		ТаблицаФормы = ОбщегоНазначенияУТКлиентСервер.ТаблицаФормыЭлемента(ЭлементАналитики);
		Если ТаблицаФормы = Неопределено Тогда
			ЭлементАналитики.Видимость = ЭлементСтатьи.Видимость И ТипСтатьи = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов");
			ЭлементАналитики.ОграничениеТипа = Новый ОписаниеТипов;
			ЭлементАналитики.Доступность = СтатьяЗаполнена;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Индекс = 0;
	Для каждого ИмяЭлемента Из ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов Цикл
		ЭлементСтатьи = ЭлементыФормы[ПараметрыВыбора.ЭлементыФормы.Статья[Индекс]];
		ЭлементАналитики = ЭлементыФормы[ИмяЭлемента];
		ЭлементАналитики.Видимость = ЭлементСтатьи.Видимость;
		ТаблицаФормы = ОбщегоНазначенияУТКлиентСервер.ТаблицаФормыЭлемента(ЭлементАналитики);
		Если ТаблицаФормы = Неопределено Тогда
			ЭлементАналитики.Видимость = ЭлементСтатьи.Видимость И ТипСтатьи = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов");
			ЭлементАналитики.Доступность = СтатьяЗаполнена;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Индекс = 0;
	Для каждого ИмяЭлемента Из ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов Цикл
		ЭлементСтатьи = ЭлементыФормы[ПараметрыВыбора.ЭлементыФормы.Статья[Индекс]];
		ЭлементАналитики = ЭлементыФормы[ИмяЭлемента];
		ЭлементАналитики.Видимость = ЭлементСтатьи.Видимость;
		ТаблицаФормы = ОбщегоНазначенияУТКлиентСервер.ТаблицаФормыЭлемента(ЭлементАналитики);
		Если ТаблицаФормы = Неопределено Тогда
			ЭлементАналитики.Видимость = ЭлементСтатьи.Видимость И ТипСтатьи = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов");
			ЭлементАналитики.Доступность = СтатьяЗаполнена 
				И Не ДанныеДляСлужебныхРеквизитов[ПараметрыВыбора.КэшРеквизитовСтатьиАктивовПассивов.АналитикаАктивовПассивовНеИспользуется];
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьДополнительныеКолонкиДляДействияВФорме(ДополнительныеКолонки, ПараметрыВыбора)
	
	Если ПараметрыВыбора.ТипСтатьи <> "" Тогда
		ДополнительныеКолонки.Добавить(ПараметрыВыбора.ТипСтатьи);
	КонецЕсли;
	Если ПараметрыВыбора.ВыборСтатьиРасходов И ПараметрыВыбора.АналитикаРасходов <> "" Тогда
		ДополнительныеКолонки.Добавить(ПараметрыВыбора.КэшРеквизитовСтатьиРасходов.АналитикаРасходовОбязательна);
		ДополнительныеКолонки.Добавить(ПараметрыВыбора.КэшРеквизитовСтатьиРасходов.АналитикаРасходовЗаказРеализация);
	КонецЕсли;
	Если ПараметрыВыбора.ВыборСтатьиДоходов И ПараметрыВыбора.АналитикаДоходов <> "" Тогда
		ДополнительныеКолонки.Добавить(ПараметрыВыбора.КэшРеквизитовСтатьиДоходов.АналитикаДоходовОбязательна);
	КонецЕсли;
	Если ПараметрыВыбора.ВыборСтатьиАктивовПассивов И ПараметрыВыбора.АналитикаАктивовПассивов <> "" Тогда
		ДополнительныеКолонки.Добавить(ПараметрыВыбора.КэшРеквизитовСтатьиАктивовПассивов.АналитикаАктивовПассивовНеИспользуется);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
