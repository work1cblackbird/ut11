#Если ВебКлиент Тогда

#Область ПрограммныйИнтерфейс

Асинх Функция ОтправитьHTTPЗапрос(ТранспортныйМодуль, Параметры) Экспорт
	
	ВозвращаемоеЗначение = ВозвращаемоеЗначениеHTTPЗапроса();
	
	Параметры.Заголовки.Удалить("Accept-Charset");
	Параметры.Заголовки.Удалить("Content-Length");
	HTTPЗапрос = Новый HTTPЗапрос(Параметры.АдресЗапроса, Параметры.Заголовки);
	
	ЭтоДвоичныеДанные = ТипЗнч(Параметры.ТелоЗапроса) = Тип("ДвоичныеДанные");
	ЭтоФайл           = ТипЗнч(Параметры.ТелоЗапроса) = Тип("Файл");
	
	Если Параметры.ТелоЗапроса <> Неопределено Тогда
		Если ЭтоДвоичныеДанные Тогда
			HTTPЗапрос.УстановитьТелоИзДвоичныхДанных(Параметры.ТелоЗапроса);
		ИначеЕсли ЭтоФайл Тогда
			HTTPЗапрос.УстановитьИмяФайлаТела(Параметры.ТелоЗапроса.ПолноеИмя);
		Иначе
			HTTPЗапрос.УстановитьТелоИзСтроки(Параметры.ТелоЗапроса);
		КонецЕсли;
	КонецЕсли;
	
	HTTPОтвет   = Неопределено;
	ТекстОшибки = "";
	
	Соединение = Новый HTTPСоединение(
		СокрЛП(ТранспортныйМодуль.АдресУТМ),
		ТранспортныйМодуль.ПортУТМ,,,,
		ТранспортныйМодуль.Таймаут);
	
	Прогресс = Соединение.ВызватьHTTPМетодАсинх(Параметры.ТипЗапроса,HTTPЗапрос);
		
	Попытка
		
		HTTPОтвет = Ждать Прогресс;
		
	Исключение
		
		ТекстОшибки = НСтр("ru = 'Ответ от УТМ не получен'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		
	КонецПопытки;
	
	ВозвращаемоеЗначение.ТекстОшибки = ТекстОшибки;
	Если HTTPОтвет <> Неопределено Тогда
		ВозвращаемоеЗначение.КодСостояния = HTTPОтвет.КодСостояния;
		ВозвращаемоеЗначение.Заголовки    = HTTPОтвет.Заголовки;
		Если ТранспортныйМодуль.ПолучитьДвоичныеДанные = Истина Тогда
			ВозвращаемоеЗначение.ТекстОтвета = HTTPОтвет.ПолучитьТелоКакДвоичныеДанные();
		Иначе 
			ВозвращаемоеЗначение.ТекстОтвета = HTTPОтвет.ПолучитьТелоКакСтроку();
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Получает код ФСРАР транспортного модуля.
//
// Параметры:
//  НастройкаОбменаЕГАИС - Структура - Настройка обмена ЕГАИС, (См. НоваяНастройкаОбменаЕГАИС).
// 
// Возвращаемое значение:
//  Структура - со свойствами:
//   * ТекстОшибки    - Строка - Текст ошибки.
//   * КодФСРАР       - Строка - Код ФСРАР из УТМ.
//   * ПроверитьУТМv4 - Булево - пришел редирект на УТМv4.
//
Асинх Функция КодФСРАРv3(НастройкаОбменаЕГАИС) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("КодФСРАР",       "");
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",    "");
	ВозвращаемоеЗначение.Вставить("ПроверитьУТМv4", Ложь);
	
	Попытка
		
		РезультатЗапроса = Ждать ОтправитьHTTPЗапрос(
			НастройкаОбменаЕГАИС,
			ОбменДаннымиЕГАИСКлиентСервер.СтруктураДанныхHTTPЗапроса("GET", "info/certificate/RSA?attachment=true"));
		
		Если РезультатЗапроса.КодСостояния = 200
			И Не ЗначениеЗаполнено(РезультатЗапроса.ТекстОшибки) Тогда
			
			Попытка
				СертификатКриптографии = Новый СертификатКриптографии(РезультатЗапроса.ТекстОтвета);
				Если СертификатКриптографии.Субъект.Свойство("CN") Тогда
					ВозвращаемоеЗначение.КодФСРАР = СертификатКриптографии.Субъект.CN;
				ИначеЕсли СертификатКриптографии.Субъект.Свойство("OID2_5_4_3") Тогда
					ВозвращаемоеЗначение.КодФСРАР = СертификатКриптографии.Субъект.OID2_5_4_3;
				КонецЕсли;
			Исключение 
				ВозвращаемоеЗначение.ПроверитьУТМv4 = Истина;
			КонецПопытки;
			
		ИначеЕсли РезультатЗапроса.КодСостояния = 302 Тогда
			
			ВозвращаемоеЗначение.ПроверитьУТМv4 = Истина;
			
		ИначеЕсли ЗначениеЗаполнено(РезультатЗапроса.ТекстОшибки) Тогда
			
			ВозвращаемоеЗначение.ТекстОшибки = РезультатЗапроса.ТекстОшибки;
			
		Иначе
			
			ВозвращаемоеЗначение.ТекстОшибки = СтрШаблон(
				НСтр("ru = 'Код состояния: %1'"),
				РезультатЗапроса.КодСостояния);
			
		КонецЕсли;
		
	Исключение
		
		ВозвращаемоеЗначение.ТекстОшибки = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		
	КонецПопытки;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Получает код ФСРАР транспортного модуля.
//
// Параметры:
//  НастройкаОбменаЕГАИС - Структура - Настройка обмена ЕГАИС, (См. НоваяНастройкаОбменаЕГАИС).
//
// Возвращаемое значение:
//  Структура - со свойствами:
//   * ТекстОшибки - Строка - Текст ошибки.
//   * КодФСРАР    - Строка - Код ФСРАР из УТМ.
//
Асинх Функция КодФСРАРv4(НастройкаОбменаЕГАИС) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("КодФСРАР",    "");
	ВозвращаемоеЗначение.Вставить("ТекстОшибки", "");
	
	Попытка
		
		РезультатЗапроса = Ждать ОтправитьHTTPЗапрос(
			НастройкаОбменаЕГАИС,
			ОбменДаннымиЕГАИСКлиентСервер.СтруктураДанныхHTTPЗапроса("GET", "diagnosis"));
		
		Если РезультатЗапроса.КодСостояния = 200
			И Не ЗначениеЗаполнено(РезультатЗапроса.ТекстОшибки)Тогда 
			
			ТекстXML = ПолучитьСтрокуИзДвоичныхДанных(РезультатЗапроса.ТекстОтвета);
			Если ЗначениеЗаполнено(ТекстXML) Тогда
				ТекстXML = НРег(ТекстXML);
				ТегНачало = "<cn>";
				ТегОкончание = "</cn>";
				ПозицияТегаНачало = СтрНайти(ТекстXML, ТегНачало);
				ПозицияТегаОкончания = СтрНайти(ТекстXML, ТегОкончание);
				ВозвращаемоеЗначение.КодФСРАР = Сред(ТекстXML, ПозицияТегаНачало + СтрДлина(ТегНачало), ПозицияТегаОкончания - ПозицияТегаНачало - СтрДлина(ТегНачало));
			КонецЕсли;
			
		Иначе
			ВозвращаемоеЗначение.ТекстОшибки = РезультатЗапроса.ТекстОшибки;
		КонецЕсли;
		
	Исключение
		
		ВозвращаемоеЗначение.ТекстОшибки = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		
	КонецПопытки;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Структура ответа HTTP-запроса
Функция ВозвращаемоеЗначениеHTTPЗапроса()
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("КодСостояния");
	ВозвращаемоеЗначение.Вставить("Заголовки");
	ВозвращаемоеЗначение.Вставить("ТекстОтвета");
	ВозвращаемоеЗначение.Вставить("ТекстОшибки");
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#КонецЕсли