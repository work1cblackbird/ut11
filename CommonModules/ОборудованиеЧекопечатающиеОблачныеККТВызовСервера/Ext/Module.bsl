#Область ПрограммныйИнтерфейсСлужебный

Функция СтатусКассы(ИдентификаторОборудования) Экспорт
	
	Возврат ОборудованиеЧекопечатающиеОблачныеККТ.СтатусКассы(ИдентификаторОборудования);
	
КонецФункции

Функция ПробитьЧек(ДокументОперации, ИдентификаторОборудования, ПараметрыДокумента) Экспорт
	
	Возврат ОборудованиеЧекопечатающиеОблачныеККТ.ПробитьЧек(ДокументОперации, ИдентификаторОборудования, ПараметрыДокумента);
	
КонецФункции

Функция ФискализацияЧека(ДокументОперации, ИдентификаторОборудования, ПараметрыДокумента) Экспорт
	
	Возврат ОборудованиеЧекопечатающиеОблачныеККТ.ФискализацияЧека(ДокументОперации, ИдентификаторОборудования, ПараметрыДокумента);
	
КонецФункции

Процедура ЗаписатьФискальнуюОперацию(ДанныеОперации, РезультатВыполнения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыФискализации = Новый Структура;
	Если ПустаяСтрока(ДанныеОперации.ИдентификаторФискальнойЗаписи) Тогда
		ИдентификаторЗаписи = Строка(Новый УникальныйИдентификатор);
	Иначе
		ИдентификаторЗаписи = ДанныеОперации.ИдентификаторФискальнойЗаписи;
	КонецЕсли;
	// ФискальныеОперации
	НаборЗаписей = РегистрыСведений.ФискальныеОперации.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(ДанныеОперации.ДокументОснование, Истина);
	НаборЗаписей.Отбор.ИдентификаторЗаписи.Установить(ИдентификаторЗаписи, Истина);
	
	НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Дата = РезультатВыполнения.ДатаВремяЧека;
	НоваяСтрока.ИдентификаторЗаписи = ИдентификаторЗаписи;
	НоваяСтрока.ДокументОснование = ДанныеОперации.ДокументОснование;
	НоваяСтрока.ФискальныйПризнак = РезультатВыполнения.ФискальныйПризнак;
	НоваяСтрока.Организация       = ДанныеОперации.Организация;
	НоваяСтрока.ТорговыйОбъект    = ДанныеОперации.ТорговыйОбъект;
	НоваяСтрока.ТипРасчета        = ДанныеОперации.ТипРасчета;
	НоваяСтрока.НомерСменыККМ     = РезультатВыполнения.НомерСменыККТ;
	НоваяСтрока.НомерЧекаККМ      = РезультатВыполнения.НомерЧекаККТ;
	НоваяСтрока.ДополнительныйРеквизит  = ДанныеОперации.ДополнительныйРеквизит;
	НоваяСтрока.АдресСайтаПроверки      = РезультатВыполнения.АдресСайтаПроверки;
	НоваяСтрока.ЗаводскойНомерФН        = РезультатВыполнения.НомерФискальногоНакопителя;
	НоваяСтрока.РегистрационныйНомерККТ = РезультатВыполнения.РегистрационныйНомерККТ; 
	Если ДанныеОперации.Свойство("КорректируемыйДокумент") Тогда 
		НоваяСтрока.КорректируемыйДокумент = ДанныеОперации.КорректируемыйДокумент;
	КонецЕсли;
	НоваяСтрока.СубъектПерсональныхДанных = ДанныеОперации.СубъектПерсональныхДанных;
	НоваяСтрока.ЕдиныйЧек                 = ДанныеОперации.ЕдиныйЧек;
	НоваяСтрока.ТипПлатежнойСистемы       = ДанныеОперации.ТипПлатежнойСистемы;
	НоваяСтрока.ИдентификаторОплатыПлатежнойСистемы  = ДанныеОперации.ИдентификаторОплатыПлатежнойСистемы;
	
	// Таблица оплат
	СуммаЧека = 0;
	СуммаНаличные       = 0;
	СуммаЭлектронно     = 0;
	СуммаПредоплата     = 0;
	СуммаПостоплата     = 0;
	СуммаПредоставление = 0;
	
	ТаблицаОплат = ДанныеОперации.ТаблицаОплат;
	Если ТаблицаОплат <> Неопределено Тогда
		
		Для ИндексОплаты = 0 По ТаблицаОплат.Количество() - 1 Цикл
			Если ТаблицаОплат[ИндексОплаты].ТипОплаты = Перечисления.ТипыОплатыККТ.Электронно Тогда
				СуммаЭлектронно = СуммаЭлектронно + ТаблицаОплат[ИндексОплаты].Сумма;
			ИначеЕсли ТаблицаОплат[ИндексОплаты].ТипОплаты = Перечисления.ТипыОплатыККТ.Предоплата Тогда
				СуммаПредоплата = СуммаПредоплата + ТаблицаОплат[ИндексОплаты].Сумма;
			ИначеЕсли ТаблицаОплат[ИндексОплаты].ТипОплаты = Перечисления.ТипыОплатыККТ.Постоплата Тогда
				СуммаПостоплата = СуммаПостоплата + ТаблицаОплат[ИндексОплаты].Сумма;
			ИначеЕсли ТаблицаОплат[ИндексОплаты].ТипОплаты = Перечисления.ТипыОплатыККТ.ВстречноеПредоставление Тогда
				СуммаПредоставление = СуммаПредоставление + ТаблицаОплат[ИндексОплаты].Сумма;
			Иначе
				СуммаНаличные = СуммаНаличные + ТаблицаОплат[ИндексОплаты].Сумма;
			КонецЕсли;
		КонецЦикла;
		
		СуммаЧека = СуммаНаличные + СуммаЭлектронно + СуммаПредоплата + СуммаПостоплата + СуммаПредоставление;
	КонецЕсли;
	
	НоваяСтрока.Сумма            = СуммаЧека;
	НоваяСтрока.ОплатаНаличные   = СуммаНаличные;
	НоваяСтрока.ОплатаЭлектронно = СуммаЭлектронно;
	НоваяСтрока.ОплатаПостоплата = СуммаПредоплата;
	НоваяСтрока.ОплатаПредоплата = СуммаПостоплата;
	НоваяСтрока.ОплатаВстречноеПредоставление = СуммаПредоставление;
	
	НаборЗаписей.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция РезультатВыполненияОперации(Результат, ДополнительныеПараметры) Экспорт
	
	Возврат ОборудованиеЧекопечатающиеОблачныеККТ.РезультатВыполненияОперации(Результат, ДополнительныеПараметры);
	
КонецФункции

Функция СтатусПробитияЧека(ДокументОперации) Экспорт
	
	Возврат ОборудованиеЧекопечатающиеОблачныеККТ.СтатусПробитияЧека(ДокументОперации);
	
КонецФункции

#КонецОбласти 
