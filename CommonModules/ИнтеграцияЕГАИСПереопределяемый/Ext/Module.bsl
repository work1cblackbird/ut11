#Область ПрограммныйИнтерфейс

// Формирует гиперссылку на документ библиотеки в журналах документов УТ
// 
// Параметры:
//  Параметры        - Структура                           - параметры формирования гиперссылки
//  ОбъектМетаданных - ОбъектМетаданныхДокумент            - тип метаданных для гиперссылки
//  Гиперссылка      - ФорматированнаяСтрока, Неопределено - результат формирования гиперссылки
Процедура СформироватьГиперссылкуСмТакжеВРаботе(Параметры, ОбъектМетаданных, Гиперссылка) Экспорт
	
	//++ НЕ ГОСИС
	Гиперссылка = ИнтеграцияЕГАИСУТ.СформироватьГиперссылкуСмТакжеВРаботе(Параметры, ОбъектМетаданных);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Процедура вызывается при загрузке после записи алкогольной продукции в базу.
//
// Параметры:
//  АлкогольнаяПродукция - СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС - загружаемая алкогольная продукция,
//  ЕстьИзменения - Булево - признак наличия изменений.
Процедура ПриЗагрузкеАлкогольнойПродукции(АлкогольнаяПродукция, ЕстьИзменения) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Процедура вызывается при загрузке ТТН входящей ЕГАИС (перед записью).
//
//Параметры:
//  ТТНВходящаяОбъект - ДокументОбъект.ТТНВходящаяЕГАИС - загружаемая ТТН.
Процедура ПриЗагрузкеТТНВходящаяЕГАИС(ТТНВходящаяОбъект) Экспорт
	
	//++ НЕ ГОСИС
	// Заполнение склада и организации
	РеквизитыОрганизацииЕГАИС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТТНВходящаяОбъект.Грузополучатель, "Контрагент, ТорговыйОбъект");
	
	ТТНВходящаяОбъект.Организация = РеквизитыОрганизацииЕГАИС.Контрагент;
	ТТНВходящаяОбъект.ТорговыйОбъект = РеквизитыОрганизацииЕГАИС.ТорговыйОбъект;
	
	// Заполнение документа основания
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТТНИсходящаяЕГАИС.Ссылка            КАК Ссылка,
	|	ТТНИсходящаяЕГАИС.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|ГДЕ
	|	ТТНИсходящаяЕГАИС.Идентификатор = &Идентификатор");
	
	Запрос.УстановитьПараметр("Идентификатор", ТТНВходящаяОбъект.Идентификатор);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТТНИсходящая = Неопределено;
	
	Если Выборка.Следующий() Тогда
		ТТНИсходящая = Выборка.Ссылка;
		Если ЗначениеЗаполнено(Выборка.ДокументОснование) Тогда
			ТТНВходящаяОбъект.ДокументОснование = Выборка.ДокументОснование;
		КонецЕсли;
	КонецЕсли;
	
	// Заполнение серий
	ПараметрыУказанияСерий = ИнтеграцияИС.ПараметрыУказанияСерийФормыОбъекта(ТТНВходящаяОбъект, Документы.ТТНВходящаяЕГАИС);
	
	Если ЗначениеЗаполнено(ТТНВходящаяОбъект.ДокументОснование) Тогда // скопировать ТЧ из ТТНИсходящая
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТТНИсходящаяЕГАИСТовары.НомерСтроки                   КАК НомерСтроки,
		|	ТТНИсходящаяЕГАИСТовары.АлкогольнаяПродукция          КАК АлкогольнаяПродукция,
		|	ТТНИсходящаяЕГАИСТовары.Номенклатура                  КАК Номенклатура,
		|	ТТНИсходящаяЕГАИСТовары.Характеристика                КАК Характеристика,
		|	ТТНИсходящаяЕГАИСТовары.Серия                         КАК Серия,
		|	ТТНИсходящаяЕГАИСТовары.ИдентификаторУпаковки         КАК ИдентификаторУпаковки,
		|	ТТНИсходящаяЕГАИСТовары.Количество                    КАК Количество,
		|	ТТНИсходящаяЕГАИСТовары.Сумма                         КАК Сумма,
		|	ТТНИсходящаяЕГАИСТовары.Цена                          КАК Цена,
		|	ТТНИсходящаяЕГАИСТовары.НомерПартии                   КАК НомерПартии,
		|	ТТНИсходящаяЕГАИСТовары.Справка2.РегистрационныйНомер КАК НомерСправки2Поставщика
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
		|ГДЕ
		|	ТТНИсходящаяЕГАИСТовары.Ссылка = &Ссылка
		|";
		Запрос.УстановитьПараметр("Ссылка", ТТНИсходящая);
		Результат = Запрос.Выполнить();
		
		ТаблицаТТН = ТТНВходящаяОбъект.Товары.Выгрузить(, "НомерСправки2Поставщика,ИдентификаторСтроки,Справка2");
		
		ТТНВходящаяОбъект.Товары.Загрузить(Результат.Выгрузить());
		
		Для Каждого СтрокаТТН Из ТаблицаТТН Цикл
			СтруктураПоиска = Новый Структура("НомерСправки2Поставщика", СтрокаТТН.НомерСправки2Поставщика);
			СтрокиТовары = ТТНВходящаяОбъект.Товары.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого СтрокаТовары Из СтрокиТовары Цикл
				СтрокаТовары.ИдентификаторСтроки = СтрокаТТН.ИдентификаторСтроки;
				СтрокаТовары.Справка2            = СтрокаТТН.Справка2;
			КонецЦикла;
		КонецЦикла;
		
		//пересчитываем количество и цену, если алкогольная продукция неупакованная
		Для каждого СтрокаТТНВходящая Из ТТНВходящаяОбъект.Товары Цикл
			Если СтрокаТТНВходящая.АлкогольнаяПродукция.ТипПродукции = Перечисления.ТипыПродукцииЕГАИС.Неупакованная Тогда
				Если СтрокаТТНВходящая.Номенклатура.ОбъемДАЛ <> 0 Тогда
					СтрокаТТНВходящая.Количество = СтрокаТТНВходящая.Количество * СтрокаТТНВходящая.Номенклатура.ОбъемДАЛ;
					СтрокаТТНВходящая.Цена       = СтрокаТТНВходящая.Цена / СтрокаТТНВходящая.Номенклатура.ОбъемДАЛ;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ТипЗнч(ТТНВходящаяОбъект.ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
			Для Каждого СтрокаТЧ Из ТТНВходящаяОбъект.Товары Цикл
				СтрокаТЧ.КоличествоФакт = СтрокаТЧ.Количество;
			КонецЦикла;
			ТТНВходящаяОбъект.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.Завершено;
		КонецЕсли;
		
	Иначе // сгенерировать новые серии
		
		СобственныйТорговыйОбъектЗначениеПоУмолчанию = "";
		СопоставлениеОбъектовЕГАИСПереопределяемый.ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(
			Неопределено, СобственныйТорговыйОбъектЗначениеПоУмолчанию);
		
		КонтекстЗаполненияСерий = ИнтеграцияЕГАИС.КонтекстЗаполненияСерий();
		КонтекстЗаполненияСерий.Объект =                                       ТТНВходящаяОбъект;
		КонтекстЗаполненияСерий.Товары =                                       ТТНВходящаяОбъект.Товары;
		КонтекстЗаполненияСерий.ЗаполнятьБезЗапросаСправок =                   Истина;
		КонтекстЗаполненияСерий.СобственныйТорговыйОбъектЗначениеПоУмолчанию = СобственныйТорговыйОбъектЗначениеПоУмолчанию;
		КонтекстЗаполненияСерий.ПараметрыУказанияСерий =                       ПараметрыУказанияСерий;
		
		ЗаполнитьСгенерироватьСерии(КонтекстЗаполненияСерий, Новый Структура);
		
	КонецЕсли;
	
	ИнтеграцияИСПереопределяемый.ЗаполнитьСтатусыУказанияСерий(ТТНВходящаяОбъект, ПараметрыУказанияСерий);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Процедура вызывается при загрузке акта подтверждения ТТН.
//
// Параметры:
//  ТТНИсходящаяОбъект - ДокументОбъект.ТТНИсходящаяЕГАИС - подтверждаемая ТТН,
//  ОтказОтТТН         - Булево                           - признак загрузки акта отказа от ТТН,
//  ЕстьРасхождения    - Булево                           - признак загрузки акта расхождений.
Процедура ПриЗагрузкеАктаПодтвержденияТТН(ТТНИсходящаяОбъект, ОтказОтТТН, ЕстьРасхождения) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Процедура вызывается при загрузке подтверждения акта расхождений ТТН.
//
// Параметры:
//  ТТНВходящаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - подтверждаемая ТТН,
//  ОтказОтАкта - Булево - признак загрузки отказа от акта расхождений ТТН.
//
Процедура ПриЗагрузкеПодтвержденияАктаРасхожденийТТН(ТТНВходящаяЕГАИС, ОтказОтАкта) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Процедура вызывается при изменении статуса обработки документа.
//
// Параметры:
//  ДокументСсылка          - ДокументСсылка     - ссылка на документ.
//  ПредыдущийСтатус        - ПеречислениеСсылка - предыдущий статус обработки (СтатусыОбработки*).
//  НовыйСтатус             - ПеречислениеСсылка - новый статус обработки (СтатусыОбработки*).
//  ДополнительныеПараметры - См. ОбменДаннымиЕГАИС.ПараметрыОбновленияСтатуса - дополнительные параметры обновления статуса.
Процедура ПриИзмененииСтатусаДокумента(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус, ДополнительныеПараметры = Неопределено) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Вызывается при отказе от входящей ТТН. Нужно реализовать алгоритм отмены проведения связанных поступлений.
//
// Параметры:
//  ТТНВходящаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - ссылка на документ.
Процедура ОтменитьПроведениеПоступленияТоваровПриОтказеОтТТН(ТТНВходящаяЕГАИС) Экспорт
	
	//++ НЕ ГОСИС
	УстановитьПривилегированныйРежим(Истина);
	
	ДокументПоступления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТТНВходящаяЕГАИС, "ДокументОснование");
	
	Если ЗначениеЗаполнено(ДокументПоступления) Тогда
		
		ДокументПоступленияОбъект = ДокументПоступления.ПолучитьОбъект();
		
		Если ДокументПоступленияОбъект.Проведен Тогда
			ДокументПоступленияОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			ДокументПоступленияОбъект.Записать();
		КонецЕсли;
		
		ДокументПоступленияОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет таблицу штрихкодов алкогольной продукции входящей ТТН.
//
// Параметры:
//  ДокументСсылка     - ДокументСсылка.ТТНВходящаяЕГАИС - ссылка на документ.
//  ЗаполняемаяТаблица - ТаблицаЗначений - заполняемая таблица.
Процедура ЗаполнитьТаблицуШтрихкодовНеМаркируемойПродукцииТТН_ЕГАИС(ДокументСсылка, ЗаполняемаяТаблица) Экспорт

	//++ НЕ ГОСИС
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ШтрихкодыНоменклатуры.Штрихкод              КАК Штрихкод,
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВЫБОР
	|		КОГДА КлассификаторАлкогольнойПродукцииЕГАИС.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Коэффициент
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО (КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции = ВидыАлкогольнойПродукции.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ТТНВходящаяЕГАИСТовары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И ТТНВходящаяЕГАИСТовары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|			И (ТТНВходящаяЕГАИСТовары.Номенклатура.ЕдиницаИзмерения = ШтрихкодыНоменклатуры.Упаковка
	|				ИЛИ ШтрихкодыНоменклатуры.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &ДокументСсылка
	|	И НЕ ВидыАлкогольнойПродукции.Маркируемый";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗаполняемаяТаблица.Добавить(), Выборка);
	КонецЦикла;
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет таблицу сопоставленных справок 2 документа документа ТТН входящая.
//
// Параметры:
//  ДокументСсылка     - ДокументСсылка.ТТНВходящаяЕГАИС - ссылка на документ.
//  ЗаполняемаяТаблица - ТаблицаЗначений - заполняемая таблица.
Процедура ЗаполнитьТаблицуСопоставленныхСправок2ТТН_ЕГАИС(ДокументСсылка, ЗаполняемаяТаблица) Экспорт
	
	//++ НЕ ГОСИС
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТТНВходящаяЕГАИСТовары.Справка2 КАК Справка2,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	ТТНВходящаяЕГАИСТовары.Характеристика КАК Характеристика
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &ДокументСсылка
	|	И ТТНВходящаяЕГАИСТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ТТНВходящаяЕГАИСТовары.Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗаполняемаяТаблица.Добавить(), Выборка);
	КонецЦикла;

	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Получить представление валюты регламентированного учета.
// 
// Параметры:
//  Представление - Строка - Возвращаемое значение, представление валюты.
Процедура ПредставлениеВалютыРегламентированногоУчета(Представление) Экспорт
	
	//++ НЕ ГОСИС
	Представление = Константы.ВалютаРегламентированногоУчета.Получить();
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Процедура проверяет наличие расхождений между ТТН и товарами накладной.
//
// Параметры:
//   ДокументСсылка      - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН.
//   ДокументПоступления - ДокументСсылка                  - проверяемое поступление товаров.
//   ЕстьРасхождения      - Булево                         - возвращаемое значение: Истина если есть расхождения.
Процедура ПриОпределенииРасхожденийСТТНВходящейЕГАИС(ДокументСсылка, ДокументПоступления, ЕстьРасхождения) Экспорт
	
	//++ НЕ ГОСИС
	Если ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ЕстьРасхождения = ИнтеграцияЕГАИСУТ.ЕстьРасхожденияМеждуДокументомПеремещениеТоваровИТТНЕГАИС(ДокументСсылка, ДокументПоступления);
	ИначеЕсли ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		ЕстьРасхождения = ИнтеграцияЕГАИСУТ.ЕстьРасхожденияМеждуДокументомПриобретениеТоваровУслугИТТНЕГАИС(ДокументСсылка, ДокументПоступления);
	ИначеЕсли ТипЗнч(ДокументПоступления) = Тип("ДанныеФормыСтруктура") Тогда
		ЕстьРасхождения = ИнтеграцияЕГАИСУТ.ЕстьРасхожденияМеждуОбъектомПриобретениеТоваровУслугИТТНЕГАИС(ДокументСсылка, ДокументПоступления);
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Переопределяет текст запроса списка остатков к оформлению документа передача в регистр №2 ЕГАИС.
// 
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ПриОпределенииТекстаЗапросаОстатковКПередачеВРегистр2ЕГАИС(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АкцизныеМарки.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	АкцизныеМарки.Справка2 КАК Справка2,
	|	КОЛИЧЕСТВО(АкцизныеМарки.АкцизнаяМарка) КАК Количество
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМарки
	|ГДЕ
	|	АкцизныеМарки.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ВНаличии),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КПостановкеНаБаланс))
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ОрганизацияЕГАИС,
	|	АкцизныеМарки.Справка2
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2 КАК Справка2,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СвободныйОстатокОстаток - ЕСТЬNULL(АкцизныеМарки.Количество, 0) КАК КПередаче
	|ИЗ
	|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.Остатки(,
	|			ОрганизацияЕГАИС.ТорговыйОбъект.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)
	|			И НЕ Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|			И НЕ Справка2.Поштучная) КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ИдентификаторФСРАР
	|		ИЗ
	|			РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС) КАК НастройкиОбменаЕГАИС
	|		ПО ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР
	|		ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМарки КАК АкцизныеМарки
	|		ПО (АкцизныеМарки.ОрганизацияЕГАИС = ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС)
	|		И (АкцизныеМарки.Справка2 = ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2)
	|ГДЕ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СвободныйОстатокОстаток - ЕСТЬNULL(АкцизныеМарки.Количество, 0) > 0";
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Определяет текст запроса для движений по регистру Серии номенклатуры.
// 
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
//  ИмяТаблицы   - Строка - имя метаданных документа из которого выполняется заполнение.
Процедура ПриЗаполненииТекстаЗапросаДвижениеСерийТоваров(ТекстЗапроса, ИмяТаблицы) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура                                     КАК Номенклатура,
	|	ТаблицаСерии.Характеристика                                   КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)                  КАК Назначение,
	|	ТаблицаСерии.Серия                                            КАК Серия,
	|	ТаблицаСерии.Количество                                       КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВзаимодействиеСЕГАИС) КАК СкладскаяОперация,
	|	&Ссылка                                                       КАК Документ,
	|	&Период                                                       КАК Период,
	|	&Ссылка                                                       КАК Регистратор,
	|	ЛОЖЬ                                                          КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.%ИмяТаблицы%.Товары КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяТаблицы%", ИмяТаблицы);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Получить количество возможных документов поступления товаров для сопоставления.
//
// Параметры:
//  Количество     - Число                                      - количество документов
//  Организация    - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - ссылка на собственную организацию,
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС        - ссылка на торговый объект,
//  Контрагент     - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - поставщик.
Процедура ПолучитьКоличествоВозможныхДокументовПоступленияТоваров(Количество, Организация, ТорговыйОбъект, Контрагент) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПриобретениеТоваровУслуг.Ссылка) КАК Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ПО ТТНВходящаяЕГАИС.ДокументОснование = ПриобретениеТоваровУслуг.Ссылка
	|ГДЕ
	|	НЕ ПриобретениеТоваровУслуг.ПометкаУдаления
	|	И ПриобретениеТоваровУслуг.ЕстьАлкогольнаяПродукция
	|	И ПриобретениеТоваровУслуг.Организация = &Организация
	|	И ПриобретениеТоваровУслуг.Склад = &Склад
	|	И ПриобретениеТоваровУслуг.Контрагент = &ПоставщикКонтрагент
	|	И ТТНВходящаяЕГАИС.Ссылка ЕСТЬ NULL");
	
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("Склад",               ТорговыйОбъект);
	Запрос.УстановитьПараметр("ПоставщикКонтрагент", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Возвращает признак разрешения розничной продажи без сопоставления с классификатором ЕГАИС.
//
//Параметры:
//   Разрешать - Булево - если Истина, продажа разрешена, иначе - Ложь.
//
Процедура РазрешатьПродажуАлкогольнойПродукцииБезСопоставленияЕГАИС(Разрешать) Экспорт
	
	//++ НЕ ГОСИС
	УстановитьПривилегированныйРежим(Истина);
	Разрешать = Константы.РазрешатьПродажуАлкогольнойПродукцииБезСопоставленияЕГАИС.Получить();
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Процедура инициализирует общие структуры, используемые при проведении документов.
// Вызывается из модуля документов при проведении.
Процедура ИнициализироватьДополнительныеСвойстваДляПроведенияЧеков(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Возврат;
	
КонецПроцедуры

#Область ОбработчикиСобытийДокументов

// Вызывается при вводе документа на основании, при выполнении метода Заполнить или при интерактивном вводе нового.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - заполняемый документ,
//  ДанныеЗаполнения - Произвольный - значение, которое используется как основание для заполнения,
//  ТекстЗаполнения - Строка, Неопределено - текст, используемый для заполнения документа,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ НЕ ГОСИС
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ТипОбъекта = ТипЗнч(ДокументОбъект);
	
	Если ТипОбъекта = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС") Тогда
		ИнтеграцияЕГАИСУТ.ОбработкаЗаполненияАктаПостановкиНаБалансЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.АктСписанияЕГАИС") Тогда
		ИнтеграцияЕГАИСУТ.ОбработкаЗаполненияАктаСписанияЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда		
		ИнтеграцияЕГАИСУТ.ОбработкаЗаполненияТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ОтчетОПроизводствеЕГАИС") Тогда
		ИнтеграцияЕГАИСУТ.ОбработкаЗаполненияОтчетОПроизводствеЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.УведомлениеОПланируемомИмпортеЕГАИС") Тогда
		ИнтеграцияЕГАИСУТ.ОбработкаЗаполненияУведомлениеОПланируемомИмпортеЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ЧекЕГАИС") Тогда
		ИнтеграцияЕГАИСУТ.ОбработкаЗаполненияЧекаЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ЧекЕГАИСВозврат") Тогда
		ИнтеграцияЕГАИСУТ.ОбработкаЗаполненияЧекаЕГАИСВозврат(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "СтатусПроверкиИПодбора") Тогда
		ДокументОбъект.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.НеВыполнялось;
	КонецЕсли;
	
	Если ТипОбъекта = Тип("ДокументОбъект.АктСписанияЕГАИС")
		Или ТипОбъекта = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		Если ИнтеграцияИСУТ.СерииУказываютсяПоFEFO(ДанныеЗаполнения) Тогда
			Документы[ДокументОбъект.Метаданные().Имя].ПодобратьСправки2(ДокументОбъект);
		КонецЕсли;
	КонецЕсли;
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Вызывается расширением формы при необходимости проверки заполнения реквизитов при записи или при проведении документа в форме,
// а также при выполнении метода ПроверитьЗаполнение.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проверяемый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  ПроверяемыеРеквизиты - Массив - массив путей к реквизитам, для которых будет выполнена проверка заполнения,
//  МассивНепроверяемыхРеквизитов - Массив - массив путей к реквизитам, для которых не будет выполнена проверка заполнения.
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	//++ НЕ ГОСИС
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктСписанияЕГАИС") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЗапросАкцизныхМарокЕГАИС") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаВРегистр2ЕГАИС") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		
		СтатусЕГАИС = Неопределено;
		Если ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	СтатусыДокументовЕГАИС.Статус КАК Статус
			|ИЗ
			|	РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
			|ГДЕ
			|	СтатусыДокументовЕГАИС.Документ = &Ссылка");
			Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СтатусЕГАИС = Выборка.Статус;
			КонецЕсли;
			
		КонецЕсли;
		
		РедактированиеФормыДоступно = СтатусЕГАИС = Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.Черновик
		                            Или СтатусЕГАИС = Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачи
		                            Или СтатусЕГАИС = Неопределено;
		
		Если РедактированиеФормыДоступно Тогда
			
			КлючевыеРеквизитыТабличнойЧасти = Новый Массив;
			КлючевыеРеквизитыТабличнойЧасти.Добавить("АлкогольнаяПродукция");
			КлючевыеРеквизитыТабличнойЧасти.Добавить("Справка2");
			ОбщегоНазначенияУТ.ПроверитьНаличиеДублейСтрокТЧ(
				ДокументОбъект,
				"Товары",
				КлючевыеРеквизитыТабличнойЧасти,
				Отказ,,
				Ложь);
			
			НоменклатураСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
			
			НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
			
		Иначе
			
			МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоУпаковок");
			МассивНепроверяемыхРеквизитов.Добавить("Товары.Номенклатура");
			МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЧекЕГАИС") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЧекЕГАИСВозврат") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.УведомлениеОПланируемомИмпортеЕГАИС") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОбИмпортеЕГАИС") Тогда
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОПроизводствеЕГАИС") Тогда
			
		ПараметрыПроверки       = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
		ПараметрыПроверки.ИмяТЧ = "Сырье";
		
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
		
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Вызывается при проведении документа. Выполняется в транзакции записи.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проводимый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения.
Процедура ОбработкаПроведения(ДокументОбъект, Отказ, РежимПроведения) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Возникает перед выполнением записи документа. Вызывается после начала транзакции записи, но до начала записи документа.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - записываемый документ,
//  Отказ - Булево - признак отказа от записи,
//  РежимЗаписи - РежимЗаписиДокумента - текущий режим записи документа,
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения документа.
Процедура ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ НЕ ГОСИС
	Если ДокументОбъект.ЭтоНовый() Тогда
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СтатусПроверкиИПодбора", ДокументОбъект.Метаданные())
			И НЕ ЗначениеЗаполнено(ДокументОбъект.СтатусПроверкиИПодбора) Тогда
			ДокументОбъект.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.НеВыполнялось;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС") Тогда
		НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ДокументОбъект, 
			НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ТТНВходящаяЕГАИС));
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#КонецОбласти

// Проверяет возможность использования регистр №2 для организации.
//
// Параметры:
//  Использовать     - Булево - Истина, если для организации можно использовать регистр №2.
//  ОрганизацияЕГАИС - СправочникСсылка.КлассификаторОрганизацийЕГАИС - ссылка на организацию в классификаторе ЕГАИС.
Процедура ИспользоватьРегистр2(Использовать, ОрганизацияЕГАИС) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Склады.ТипСклада КАК ТипСклада
	|ИЗ
	|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК ОрганизацииЕГАИС
	|		ПО ОрганизацииЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ОрганизацииЕГАИС.ТорговыйОбъект = Склады.Ссылка
	|ГДЕ
	|	ОрганизацииЕГАИС.Ссылка = &ОрганизацияЕГАИС
	|");
	
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Использовать = Выборка.ТипСклада = ПредопределенноеЗначение("Перечисление.ТипыСкладов.РозничныйМагазин");
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Формирует временную таблицу организаций ЕГАИС (с настроенным обменом) использующих регистр №2
//
// Параметры:
//   ТекстЗапроса        - Строка - заполняемый текст запроса.
//   ИмяВременнойТаблицы - Строка - имя создаваемой временной таблицы.
//   ИмяПоляОрганизация  - Строка - поле с организацией ЕГАИС в создаваемой таблице.
//
Процедура ТекстЗапросаОрганизацииЕГАИСИспользующиеРегистр2(
	ТекстЗапроса,
	ИмяВременнойТаблицы = "РозничныеОрганизацииЕГАИС",
	ИмяПоляОрганизация = "Ссылка") Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = СтрШаблон(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОрганизацииЕГАИС.Ссылка КАК %1
		|ПОМЕСТИТЬ %2
		|ИЗ
		|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК ОрганизацииЕГАИС
		|		ПО ОрганизацииЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО ОрганизацииЕГАИС.ТорговыйОбъект = Склады.Ссылка
		|ГДЕ
		|	Склады.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)
		|",
		ИмяПоляОрганизация,
		ИмяВременнойТаблицы);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет таблицу данными о действующих лицензиях на продажу алкогольной продукции.
//
// Параметры:
//  ТаблицаЛицензий - ТаблицаЗначений - таблица для заполнения. Колонки:
//   * Лицензиат     - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - контрагент, для которого нужно получить лицензию,
//   * ДатаТТН       - Дата - дата документа, на которую нужно получить действующую лицензию,
//   * Наименование  - Строка - представление лицензии,
//   * ДатаНачала    - Дата - дата начала действия лицензии,
//   * ДатаОкончания - Дата - дата окончания действия лицензии,
//   * КемВыдана     - Строка - наименование организации, выдавшей лицензию.
Процедура ЗаполнитьТаблицуЛицензийНаАлкоголь(ТаблицаЛицензий) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаЛицензий", ТаблицаЛицензий);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЛицензий.Лицензиат КАК Лицензиат,
	|	ТаблицаЛицензий.ДатаТТН КАК ДатаТТН
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	&ТаблицаЛицензий КАК ТаблицаЛицензий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.Лицензиат КАК Лицензиат,
	|	ИсходныеДанные.ДатаТТН КАК ДатаТТН,
	|	МАКСИМУМ(ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания) КАК ДатаОкончания
	|ПОМЕСТИТЬ ДатыОкончанияЛицензий
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|		ПО ИсходныеДанные.Лицензиат = ЛицензииПоставщиковАлкогольнойПродукции.Владелец
	|			И (ИсходныеДанные.ДатаТТН МЕЖДУ ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала И ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходныеДанные.Лицензиат,
	|	ИсходныеДанные.ДатаТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыОкончанияЛицензий.Лицензиат КАК Лицензиат,
	|	ДатыОкончанияЛицензий.ДатаТТН КАК ДатаТТН,
	|	МАКСИМУМ(ЛицензииПоставщиковАлкогольнойПродукции.Ссылка) КАК Лицензия
	|ПОМЕСТИТЬ ЛицензииНаАлкоголь
	|ИЗ
	|	Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыОкончанияЛицензий КАК ДатыОкончанияЛицензий
	|		ПО ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания = ДатыОкончанияЛицензий.ДатаОкончания
	|			И ЛицензииПоставщиковАлкогольнойПродукции.Владелец = ДатыОкончанияЛицензий.Лицензиат
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыОкончанияЛицензий.Лицензиат,
	|	ДатыОкончанияЛицензий.ДатаТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛицензииНаАлкоголь.Лицензиат КАК Лицензиат,
	|	ЛицензииНаАлкоголь.ДатаТТН КАК ДатаТТН,
	|	ЛицензииНаАлкоголь.Лицензия.Наименование КАК Наименование,
	|	ЛицензииНаАлкоголь.Лицензия.ДатаНачала КАК ДатаНачала,
	|	ЛицензииНаАлкоголь.Лицензия.ДатаОкончания КАК ДатаОкончания,
	|	ЛицензииНаАлкоголь.Лицензия.КемВыдана КАК КемВыдана
	|ИЗ
	|	ЛицензииНаАлкоголь КАК ЛицензииНаАлкоголь";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Лицензиат", Выборка.Лицензиат);
		ПараметрыОтбора.Вставить("ДатаТТН", Выборка.ДатаТТН);
		
		МассивСтрок = ТаблицаЛицензий.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
		КонецЦикла;
	КонецЦикла;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Проверить сопоставление классификаторов, заполнить входящую структуру "РезультатПроверки" значениями:
//   * ЕстьНеСопоставленныеТовары - Булево - Признак наличия несопоставленных товаров.
//   * НеСопоставленныеТовары     - Строка - Адрес по временном хранилище.
//
// Параметры:
//  РезультатПроверки       - Структура      - Результат проверки документа на несопоставленные товары.
//  ДокументСсылка          - ДокументСсылка - Документ, для которого необходимо проверить соответствие классификаторов.
//  УникальныйИдентификатор - УникальныйИдентификатор - Идентификатор формы открытого документа.
Процедура ПроверитьСопоставлениеКлассификаторовПрикладногоДокумента(РезультатПроверки, ДокументСсылка, УникальныйИдентификатор) Экспорт
	
	//++ НЕ ГОСИС
	РезультатПроверки = ИнтеграцияЕГАИСВызовСервераУТ.ПроверитьСопоставлениеКлассификаторов(
		ДокументСсылка,
		УникальныйИдентификатор);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет текст запроса ТТН входящих динамического списка, отображаемого в форме списка документов.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса динамического списка,
//  Организация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - организация, по которой нужно отобрать документы,
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - торговый объект, по которому нужно отобрать документы,
//  ОжидаетсяОформление- Булево - если Истина, будут отобраны только документы, ожидающие оформления.
Процедура ТекстЗапросаТТН(ТекстЗапроса, Организация = Неопределено, ТорговыйОбъект = Неопределено, ОжидаетсяОформление = Ложь) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументТТНВходящаяЕГАИС.Ссылка,
	|	ДокументТТНВходящаяЕГАИС.ПометкаУдаления,
	|	ДокументТТНВходящаяЕГАИС.Номер,
	|	ДокументТТНВходящаяЕГАИС.Дата,
	|	ДокументТТНВходящаяЕГАИС.Проведен,
	|	ДокументТТНВходящаяЕГАИС.ТорговыйОбъект,
	|	ДокументТТНВходящаяЕГАИС.Организация,
	|	ДокументТТНВходящаяЕГАИС.Идентификатор,
	|	ДокументТТНВходящаяЕГАИС.ИдентификаторЕГАИС,
	|	ДокументТТНВходящаяЕГАИС.Упакована,
	|	ДокументТТНВходящаяЕГАИС.НомерТТН,
	|	ДокументТТНВходящаяЕГАИС.ДатаТТН,
	|	ДокументТТНВходящаяЕГАИС.ДатаОтгрузки,
	|	ДокументТТНВходящаяЕГАИС.Грузоотправитель,
	|	ДокументТТНВходящаяЕГАИС.Грузополучатель,
	|	ДокументТТНВходящаяЕГАИС.Поставщик,
	|	ЕСТЬNULL(ДокументТТНВходящаяЕГАИС.Поставщик.Контрагент, ДокументТТНВходящаяЕГАИС.Грузоотправитель.Контрагент) КАК ПоставщикКонтрагент,
	|	ДокументТТНВходящаяЕГАИС.Основание,
	|	ДокументТТНВходящаяЕГАИС.Комментарий,
	|	ДокументТТНВходящаяЕГАИС.ТипДоставки,
	|	ДокументТТНВходящаяЕГАИС.Перевозчик,
	|	ДокументТТНВходящаяЕГАИС.ТипТранспорта КАК ТипТранспорта,
	|	ДокументТТНВходящаяЕГАИС.НомерТранспортногоСредства,
	|	ДокументТТНВходящаяЕГАИС.Прицеп,
	|	ДокументТТНВходящаяЕГАИС.Заказчик,
	|	ДокументТТНВходящаяЕГАИС.Водитель,
	|	ДокументТТНВходящаяЕГАИС.ПунктПогрузки,
	|	ДокументТТНВходящаяЕГАИС.ПунктРазгрузки,
	|	ДокументТТНВходящаяЕГАИС.Перенаправление,
	|	ДокументТТНВходящаяЕГАИС.Экспедитор,
	|	ДокументТТНВходящаяЕГАИС.СуммаДокумента,
	|	ДокументТТНВходящаяЕГАИС.МоментВремени,
	|	ДокументТТНВходящаяЕГАИС.ЕстьРасхождения,
	|	ВЫБОР
	|		КОГДА ДокументТТНВходящаяЕГАИС.ДокументОснование В(&ПустыеЗначенияДокументаОснования)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ КАК ВведеноПоступление,
	|	ДокументТТНВходящаяЕГАИС.ДокументОснование КАК ПоступлениеТоваров,
	|	ДокументТТНВходящаяЕГАИС.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ДокументТТНВходящаяЕГАИС.ДокументОснование В(&ПустыеЗначенияДокументаОснования)
	|			ТОГДА """"";
	
	Для Каждого ТипыДокументаПоступления Из Метаданные.ОпределяемыеТипы.ОснованиеТТНВходящаяЕГАИС.Тип.Типы() Цикл
		ДокументПоступленияМетаданные = Метаданные.НайтиПоТипу(ТипыДокументаПоступления);
		
		Если ПравоДоступа("Чтение", ДокументПоступленияМетаданные) Тогда
			ДокументПоступленияПолноеИмя = ДокументПоступленияМетаданные.ПолноеИмя();
			ТекстЗапроса = ТекстЗапроса + "
			|		КОГДА ДокументТТНВходящаяЕГАИС.ДокументОснование ССЫЛКА " + ДокументПоступленияПолноеИмя + "
			|			ТОГДА ВЫРАЗИТЬ(ДокументТТНВходящаяЕГАИС.ДокументОснование КАК " + ДокументПоступленияПолноеИмя + ").Номер";
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|		ИНАЧЕ
	|			""""
	|	КОНЕЦ КАК ПоступлениеТоваровПредставление,
	|	ВЫБОР
	|		КОГДА НЕ ДокументТТНВходящаяЕГАИС.ДокументОснование В(&ПустыеЗначенияДокументаОснования)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.Оформлено)
	|		КОГДА СтатусыДокументовЕГАИС.Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.Отменен),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ОтмененПоставщиком),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ЗапросНаОтменуПроведенияКПередаче),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ЗапросНаОтменуПроведенияПереданВУТМ),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ЗапросНаОтменуПроведенияОбрабатываетсяЕГАИС),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ЗапросНаОтменуПроведенияОшибка),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаКПередаче),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаПереданВУТМ),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаОбрабатываетсяЕГАИС),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаОшибка))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеТребуется)
	|	КОНЕЦ КАК ОформлениеПоступления,
	|	ВЫБОР
	|		КОГДА СтатусыДокументовЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПустойСтатус,
	|	
	|	СтатусыДокументовЕГАИС.Статус              КАК СтатусЕГАИС,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие1 КАК ДальнейшееДействиеЕГАИС1,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие2 КАК ДальнейшееДействиеЕГАИС2,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие3 КАК ДальнейшееДействиеЕГАИС3
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ДокументТТНВходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ДокументТТНВходящаяЕГАИС.Ссылка)
	|	
	|ГДЕ
	|	&УсловиеОтбора";
	
	УсловиеОтбора = "";
	Если ЗначениеЗаполнено(Организация) Тогда
		УсловиеОтбора = УсловиеОтбора + "ДокументТТНВходящаяЕГАИС.Организация = &Организация";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТорговыйОбъект) Тогда
		Если ЗначениеЗаполнено(УсловиеОтбора) Тогда
			УсловиеОтбора = УсловиеОтбора + " И ";
		КонецЕсли;
		УсловиеОтбора = УсловиеОтбора + "ДокументТТНВходящаяЕГАИС.ТорговыйОбъект = &ТорговыйОбъект";
	КонецЕсли;
	
	Если ОжидаетсяОформление Тогда
		Если ЗначениеЗаполнено(УсловиеОтбора) Тогда
			УсловиеОтбора = УсловиеОтбора + " И ";
		КонецЕсли;
		УсловиеОтбора = УсловиеОтбора +
		"(СтатусыДокументовЕГАИС.ДальнейшееДействие1 В(&ТребующиеДействия))";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловиеОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбора", "ИСТИНА");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Заполняет текст запроса для формирования временной таблицы коэффициентов пересчета базовых единиц измерения
//   номенклатуры в единицы ЕГАИС:
//   - для упакованного товара: коэффициент пересчета в штуки (бутылки)
//   - для неупакованного товара: коэффициент пересчета в декалитры.
// Временная таблица используется при проведении документов по регистру ОстаткиЕГАИС и при передаче данных в УТМ.
//
// Параметры:
//  ТекстЗапроса        - Строка - Заполняемый текст запроса.
//  ИмяТаблицыТовары    - Строка - Имя таблицы с колонками: АлкогольнаяПродукция, Номенклатура, Характеристика, Серия.
//  ИмяВременнойТаблицы - Строка - Имя результирующей временной таблицы.
Процедура ТекстЗапросаВТКоэффициентыПересчетаВЕдиницыЕГАИС(ТекстЗапроса, ИмяТаблицыТовары, ИмяВременнойТаблицы) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = СтрШаблон(
	"ВЫБРАТЬ
	|	Таблица.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	Таблица.Номенклатура          КАК Номенклатура,
	|	Таблица.Характеристика        КАК Характеристика,
	|	Таблица.Серия                 КАК Серия,
	|	НЕ Таблица.АлкогольнаяПродукция.ТипПродукции ЕСТЬ NULL
	|		И Таблица.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная) КАК ПроверятьОбъемДАЛ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА СправочникНоменклатура.Ссылка ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА СправочникНоменклатура.ОбъемДАЛ <> 0
	|			ТОГДА СправочникНоменклатура.ОбъемДАЛ
	|		КОГДА СправочникНоменклатура.ОбъемИспользовать
	|			И НЕ СправочникНоменклатура.ОбъемЕдиницаИзмерения ЕСТЬ NULL
	|			И СправочникНоменклатура.ОбъемЗнаменатель <> 0
	|			И СправочникНоменклатура.ОбъемЕдиницаИзмерения.Знаменатель <> 0
	|		ТОГДА СправочникНоменклатура.ОбъемЧислитель / СправочникНоменклатура.ОбъемЗнаменатель *
	|			СправочникНоменклатура.ОбъемЕдиницаИзмерения.Числитель / СправочникНоменклатура.ОбъемЕдиницаИзмерения.Знаменатель * 100
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЧИСЛО(12,4)) КАК ОбъемДАЛ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА Таблица.АлкогольнаяПродукция.ТипПродукции ЕСТЬ NULL
	|			ИЛИ Таблица.АлкогольнаяПродукция.ТипПродукции <> ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА 1
	|		КОГДА СправочникНоменклатура.Ссылка ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА СправочникНоменклатура.ОбъемДАЛ <> 0
	|			ТОГДА СправочникНоменклатура.ОбъемДАЛ
	|		КОГДА СправочникНоменклатура.ОбъемИспользовать
	|			И НЕ СправочникНоменклатура.ОбъемЕдиницаИзмерения ЕСТЬ NULL
	|			И СправочникНоменклатура.ОбъемЗнаменатель <> 0
	|			И СправочникНоменклатура.ОбъемЕдиницаИзмерения.Знаменатель <> 0
	|		ТОГДА СправочникНоменклатура.ОбъемЧислитель / СправочникНоменклатура.ОбъемЗнаменатель *
	|			СправочникНоменклатура.ОбъемЕдиницаИзмерения.Числитель / СправочникНоменклатура.ОбъемЕдиницаИзмерения.Знаменатель * 100
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ЧИСЛО(12,4)) КАК Коэффициент
	|ПОМЕСТИТЬ %2
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т.АлкогольнаяПродукция, Т.Номенклатура, Т.Характеристика, Т.Серия ИЗ %1 КАК Т) КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Таблица.Номенклатура = СправочникНоменклатура.Ссылка
	|",
	ИмяТаблицыТовары,
	ИмяВременнойТаблицы);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#Область СопоставлениеКлассификаторовЕГАИС

// Процедура определяет текст запроса сопоставления организаций ЕГАИС из входящих ТТН контрагентам 
//   Ожидаемые свойства текста запроса:
//    * Используется входящий параметр &СписокТТН
//    * В последнем запросе пакета возвращается таблица организаций ЕГАИС без найденных сопоставлений
//    * В предпоследнем запросе пакета возвращается таблица найденных сопоставлений
//    * В предпредпоследнем запросе пакета возвращается таблица контрагентов для сопоставления.
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоТТН(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.ОрганизацияЕГАИС                                     КАК ОрганизацияЕГАИС,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ИНН                                 КАК ИНН,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.КПП                                 КАК КПП,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Наименование                        КАК Наименование,
	|	ПОДСТРОКА(ВложенныйЗапрос.ОрганизацияЕГАИС.НаименованиеПолное,1,255) КАК НаименованиеПолное,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ТорговыйОбъект                      КАК ТорговыйОбъект,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Контрагент                          КАК Контрагент,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Сопоставлено                        КАК Сопоставлено
	|ПОМЕСТИТЬ ВтОрганизацииЕГАИС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТТНВходящаяЕГАИС.Грузоотправитель КАК ОрганизацияЕГАИС
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ГДЕ
	|		ТТНВходящаяЕГАИС.Ссылка В(&СписокТТН)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТНВходящаяЕГАИС.Грузополучатель
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ГДЕ
	|		ТТНВходящаяЕГАИС.Ссылка В(&СписокТТН)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТНВходящаяЕГАИС.Поставщик
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ГДЕ
	|		ТТНВходящаяЕГАИС.Ссылка В(&СписокТТН)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.АлкогольнаяПродукция.Импортер = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|				ТОГДА ТабличнаяЧасть.АлкогольнаяПродукция.Производитель
	|			ИНАЧЕ ТабличнаяЧасть.АлкогольнаяПродукция.Импортер
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка В(&СписокТТН)) КАК ВложенныйЗапрос
	|ГДЕ
	|	НЕ (ВложенныйЗапрос.ОрганизацияЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка))
	|	И НЕ (ВложенныйЗапрос.ОрганизацияЕГАИС.СоответствуетОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ВтОрганизацииЕГАИС.Наименование     КАК НаименованиеЕГАИС,
	|	Контрагенты1.Ссылка                 КАК Контрагент1,
	|	Контрагенты1.Партнер                КАК ТорговыйОбъект1,
	|	Контрагенты2.Ссылка                 КАК Контрагент2,
	|	Контрагенты2.Партнер                КАК ТорговыйОбъект2
	|ПОМЕСТИТЬ ВтСопоставления
	|ИЗ
	|	ВтОрганизацииЕГАИС КАК ВтОрганизацииЕГАИС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты1
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты1.ИНН
	|			И ВтОрганизацииЕГАИС.КПП = Контрагенты1.КПП
	|			И (НЕ Контрагенты1.ИНН = """")
	|			И (НЕ Контрагенты1.ПометкаУдаления)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты2
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты2.ИНН
	|			И (НЕ Контрагенты2.ИНН = """")
	|			И (НЕ Контрагенты2.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииЕГАИС.ОрганизацияЕГАИС   КАК ОрганизацияЕГАИС,
	|	ОрганизацииЕГАИС.Наименование       КАК Наименование,
	|	ОрганизацииЕГАИС.ТорговыйОбъект     КАК ТорговыйОбъект,
	|	ОрганизацииЕГАИС.Контрагент         КАК Контрагент,
	|	ОрганизацииЕГАИС.Сопоставлено       КАК Сопоставлено,
	|	ОрганизацииЕГАИС.ИНН                КАК ИНН,
	|	ОрганизацииЕГАИС.КПП                КАК КПП,
	|	ОрганизацииЕГАИС.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	|	ВтОрганизацииЕГАИС КАК ОрганизацииЕГАИС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС                                         КАК ОрганизацияЕГАИС,
	|	ЕстьNULL(Сопоставления.Контрагент1,     Сопоставления.Контрагент2)     КАК Контрагент,
	|	ЕстьNULL(Сопоставления.ТорговыйОбъект1, Сопоставления.ТорговыйОбъект2) КАК ТорговыйОбъект
	|ИЗ
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент2 ЕСТЬ НЕ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС  КАК ОрганизацияЕГАИС,
	|	Сопоставления.НаименованиеЕГАИС КАК НаименованиеЕГАИС
	|ИЗ
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент2 ЕСТЬ NULL
	|";
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Процедура определяет текст запроса сопоставления алкогольной продукции ЕГАИС из входящих ТТН номенклатуре
//   Ожидаемые свойства текста запроса:
//    * Используется входящий параметр &СписокТТН
//    * В предпоследнем запросе пакета возвращается таблица алкогольной продукции с колонками
//     ** АлкогольнаяПродукция - СправочникСсылка.КлассификаторАлкогольнойПродукции - ссылка на алкогольную продукцию,
//     ** Наименование         - Строка                                             - ее наименование.
//    * В последнем запросе пакета возвращается таблица номенклатуры с колонками
//     ** Номенклатура         - ОпределяемыйТип.Номенклатура - ссылка на номенклатуру алкогольной продукции,
//     ** Наименование         - Строка                       - ее наименование.
//    * В одном из запросов пакета создается временная таблица втНоменклатура с колонками
//     ** Номенклатура,
//     ** Наименование,
//     ** ВидАлкогольнойПродукции,
//     ** ПроизводительИмпортерКонтрагент,
//     ** ОбъемДАЛ,
//     ** Крепость.
//    * В одном из запросов пакета создается временная таблица втДанныеТТН с колонками
//     ** АлкогольнаяПродукция,
//     ** ИдентификаторУпаковки,
//     ** Количество,
//     ** Номенклатура,
//     ** Характеристика,
//     ** Серия,
//     ** Наименование,
//     ** НаименованиеПолное,
//     ** Объем,
//     ** Крепость,
//     ** Производитель,
//     ** Импортер,
//     ** ПроизводительИБ,
//     ** ИмпортерИБ.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ПриЗаполненииТекстаЗапросаСопоставленияНоменклатурыПоТТН(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	Товары.Номенклатура          КАК Номенклатура,
	|	Товары.Характеристика        КАК Характеристика,
	|	Товары.Серия                 КАК Серия
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В (&СписокТТН)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ втАлкогольнаяПродукция
	|ИЗ
	|	втТовары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втАлкогольнаяПродукция.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Количество
	|ПОМЕСТИТЬ СопоставленоПозиций
	|ИЗ
	|	втАлкогольнаяПродукция КАК втАлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = втАлкогольнаяПродукция.АлкогольнаяПродукция)
	|ГДЕ
	|	НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	втАлкогольнаяПродукция.АлкогольнаяПродукция
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ИдентификаторУпаковки                                      КАК ИдентификаторУпаковки,
	|	Товары.АлкогольнаяПродукция                                       КАК АлкогольнаяПродукция,
	|	Товары.АлкогольнаяПродукция.Объем                                 КАК Объем,
	|	ЕСТЬNULL(СопоставленоПозиций.Количество, 0)                       КАК Количество,
	|	Товары.АлкогольнаяПродукция.Крепость                              КАК Крепость,
	|	Товары.АлкогольнаяПродукция.Наименование                          КАК Наименование,
	|	ПОДСТРОКА(Товары.АлкогольнаяПродукция.НаименованиеПолное, 1, 255) КАК НаименованиеПолное,
	|	Товары.АлкогольнаяПродукция.ВидПродукции                          КАК ВидПродукции,
	|	Товары.АлкогольнаяПродукция.Производитель.Контрагент              КАК ПроизводительИБ,
	|	Товары.АлкогольнаяПродукция.Импортер.Контрагент                   КАК ИмпортерИБ,
	|	Товары.АлкогольнаяПродукция.Производитель                         КАК Производитель,
	|	Товары.АлкогольнаяПродукция.Импортер                              КАК Импортер,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	Товары.Характеристика                                             КАК Характеристика,
	|	Товары.Серия                                                      КАК Серия
	|ПОМЕСТИТЬ втДанныеТТН
	|ИЗ
	|	втТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленоПозиций КАК СопоставленоПозиций
	|		ПО (СопоставленоПозиций.АлкогольнаяПродукция = Товары.АлкогольнаяПродукция)
	|		
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка                                 КАК Номенклатура,
	|	СправочникНоменклатура.Наименование                           КАК Наименование,
	|	СправочникНоменклатура.ВидАлкогольнойПродукции                КАК ВидАлкогольнойПродукции,
	|	СправочникНоменклатура.ПроизводительИмпортерКонтрагент КАК ПроизводительИмпортер,
	|	СправочникНоменклатура.ОбъемДАЛ                               КАК ОбъемДАЛ,
	|	СправочникНоменклатура.Крепость                               КАК Крепость
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	втДанныеТТН.Наименование         КАК Наименование
	|ИЗ
	|	втДанныеТТН КАК втДанныеТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатура.Номенклатура КАК Номенклатура,
	|	втНоменклатура.Наименование КАК Наименование
	|ИЗ
	|	втНоменклатура КАК втНоменклатура
	|";
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Процедура определяет текст запроса сопоставления организаций ЕГАИС из входящих данных (товаров и организаций) контрагентам 
//   Ожидаемые свойства текста запроса:
//    * Используется входящий параметр &Товары: таблица с колонками
//     ** АлкогольнаяПродукция,
//     ** ИдентификаторУпаковки,
//     ** Номенклатура,
//     ** Характеристика.
//    * Используется входящий параметр &ОрганизацииЕГАИС: таблица с колонками
//     ** ОрганизацияЕГАИС
//    * В последнем запросе пакета возвращается таблица организаций ЕГАИС без найденных сопоставлений
//    * В предпоследнем запросе пакета возвращается таблица найденных сопоставлений
//    * В предпредпоследнем запросе пакета возвращается таблица контрагентов для сопоставления.
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоВходящимДанным(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	Товары.Номенклатура          КАК Номенклатура,
	|	Товары.Характеристика        КАК Характеристика
	|ПОМЕСТИТЬ втТаблицаТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
	|ПОМЕСТИТЬ втТаблицаОрганизацииЕГАИС
	|ИЗ
	|	&ОрганизацииЕГАИС КАК ОрганизацииЕГАИС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.ОрганизацияЕГАИС                                       КАК ОрганизацияЕГАИС,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ИНН                                   КАК ИНН,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.КПП                                   КАК КПП,
	|	ПОДСТРОКА(ВложенныйЗапрос.ОрганизацияЕГАИС.Адрес,1,1000)               КАК Адрес,
	|	ПОДСТРОКА(ВложенныйЗапрос.ОрганизацияЕГАИС.ПредставлениеАдреса,1,1000) КАК ПредставлениеАдреса,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Наименование                          КАК Наименование,
	|	ПОДСТРОКА(ВложенныйЗапрос.ОрганизацияЕГАИС.НаименованиеПолное,1,255)   КАК НаименованиеПолное,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ТорговыйОбъект                        КАК ТорговыйОбъект,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Контрагент                            КАК Контрагент,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Сопоставлено                          КАК Сопоставлено
	|ПОМЕСТИТЬ ВтОрганизацииЕГАИС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
	|	ИЗ
	|		втТаблицаОрганизацииЕГАИС КАК ОрганизацииЕГАИС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.АлкогольнаяПродукция.Импортер = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|				ТОГДА ТабличнаяЧасть.АлкогольнаяПродукция.Производитель
	|			ИНАЧЕ ТабличнаяЧасть.АлкогольнаяПродукция.Импортер
	|		КОНЕЦ
	|	ИЗ
	|		втТаблицаТовары КАК ТабличнаяЧасть) КАК ВложенныйЗапрос
	|ГДЕ
	|	НЕ (ВложенныйЗапрос.ОрганизацияЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка))
	|	И НЕ (ВложенныйЗапрос.ОрганизацияЕГАИС.СоответствуетОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ВтОрганизацииЕГАИС.Наименование     КАК НаименованиеЕГАИС,
	|	Контрагенты1.Ссылка                 КАК Контрагент1,
	|	Контрагенты1.Партнер                КАК ТорговыйОбъект1,
	|	Контрагенты2.Ссылка                 КАК Контрагент2,
	|	Контрагенты2.Партнер                КАК ТорговыйОбъект2
	|ПОМЕСТИТЬ ВтСопоставления
	|ИЗ
	|	ВтОрганизацииЕГАИС КАК ВтОрганизацииЕГАИС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты1
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты1.ИНН
	|			И ВтОрганизацииЕГАИС.КПП = Контрагенты1.КПП
	|			И (НЕ Контрагенты1.ИНН = """")
	|			И (НЕ Контрагенты1.ПометкаУдаления)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты2
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты2.ИНН
	|			И (НЕ Контрагенты2.ИНН = """")
	|			И (НЕ Контрагенты2.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииЕГАИС.ОрганизацияЕГАИС    КАК ОрганизацияЕГАИС,
	|	ОрганизацииЕГАИС.Наименование        КАК Наименование,
	|	ОрганизацииЕГАИС.ТорговыйОбъект      КАК ТорговыйОбъект,
	|	ОрганизацииЕГАИС.Контрагент          КАК Контрагент,
	|	ОрганизацииЕГАИС.Сопоставлено        КАК Сопоставлено,
	|	ОрганизацииЕГАИС.ИНН                 КАК ИНН,
	|	ОрганизацииЕГАИС.КПП                 КАК КПП,
	|	ОрганизацииЕГАИС.Адрес               КАК Адрес,
	|	ОрганизацииЕГАИС.ПредставлениеАдреса КАК ПредставлениеАдреса,
	|	ОрганизацииЕГАИС.НаименованиеПолное  КАК НаименованиеПолное
	|ИЗ
	|	ВтОрганизацииЕГАИС КАК ОрганизацииЕГАИС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС                                         КАК ОрганизацияЕГАИС,
	|	ЕстьNULL(Сопоставления.Контрагент1,     Сопоставления.Контрагент2)     КАК Контрагент,
	|	ЕстьNULL(Сопоставления.ТорговыйОбъект1, Сопоставления.ТорговыйОбъект2) КАК ТорговыйОбъект
	|ИЗ
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент2 ЕСТЬ НЕ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС  КАК ОрганизацияЕГАИС,
	|	Сопоставления.НаименованиеЕГАИС КАК НаименованиеЕГАИС
	|ИЗ
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент2 ЕСТЬ NULL
	|";
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Процедура определяет текст запроса сопоставления алкогольной продукции ЕГАИС из входящих данных номенклатуре
//   Ожидаемые свойства текста запроса:
//    * Используется входящий параметр &Товары: таблица с колонками
//     ** АлкогольнаяПродукция,
//     ** ИдентификаторУпаковки,
//     ** Номенклатура,
//     ** Характеристика,
//     ** Серия.
//    * В предпоследнем запросе пакета возвращается таблица алкогольной продукции с колонками
//     ** АлкогольнаяПродукция - СправочникСсылка.КлассификаторАлкогольнойПродукции - ссылка на алкогольную продукцию,
//     ** Наименование         - Строка                                             - ее наименование.
//    * В последнем запросе пакета возвращается таблица номенклатуры с колонками
//     ** Номенклатура         - ОпределяемыйТип.Номенклатура - ссылка на номенклатуру алкогольной продукции,
//     ** Наименование         - Строка                       - ее наименование.
//    * В одном из запросов пакета создается временная таблица втНоменклатура с колонками
//     ** Номенклатура,
//     ** Наименование,
//     ** ВидАлкогольнойПродукции,
//     ** ПроизводительИмпортерКонтрагент,
//     ** ОбъемДАЛ,
//     ** Крепость.
//    * В одном из запросов пакета создается временная таблица втДанныеТТН с колонками
//     ** АлкогольнаяПродукция,
//     ** ИдентификаторУпаковки,
//     ** Количество,
//     ** Номенклатура,
//     ** Характеристика,
//     ** Серия,
//     ** Наименование,
//     ** НаименованиеПолное,
//     ** Объем,
//     ** Крепость,
//     ** Производитель,
//     ** Импортер,
//     ** ПроизводительИБ,
//     ** ИмпортерИБ.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ТекстЗапросаСопоставлениеНоменклатурыПоВходящимДанным(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	Товары.Номенклатура          КАК Номенклатура,
	|	Товары.Характеристика        КАК Характеристика,
	|	Товары.Серия                 КАК Серия
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция                                      КАК АлкогольнаяПродукция,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Количество
	|ПОМЕСТИТЬ КоличествоСопоставлено
	|ИЗ
	|	втТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (Товары.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция)
	|СГРУППИРОВАТЬ ПО
	|	Товары.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ИдентификаторУпаковки                                      КАК ИдентификаторУпаковки,
	|	Товары.АлкогольнаяПродукция                                       КАК АлкогольнаяПродукция,
	|	Товары.АлкогольнаяПродукция.Объем                                 КАК Объем,
	|	Товары.АлкогольнаяПродукция.Крепость                              КАК Крепость,
	|	Товары.АлкогольнаяПродукция.Наименование                          КАК Наименование,
	|	ПОДСТРОКА(Товары.АлкогольнаяПродукция.НаименованиеПолное, 1, 255) КАК НаименованиеПолное,
	|	Товары.АлкогольнаяПродукция.ВидПродукции                          КАК ВидПродукции,
	|	Товары.АлкогольнаяПродукция.Производитель.Контрагент              КАК ПроизводительИБ,
	|	Товары.АлкогольнаяПродукция.Импортер.Контрагент                   КАК ИмпортерИБ,
	|	Товары.АлкогольнаяПродукция.Производитель                         КАК Производитель,
	|	Товары.АлкогольнаяПродукция.Импортер                              КАК Импортер,
	|	ЕСТЬNULL(КоличествоСопоставлено.Количество, 0)                    КАК Количество,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	Товары.Характеристика                                             КАК Характеристика,
	|	Товары.Серия                                                      КАК Серия
	|ПОМЕСТИТЬ втДанныеТТН
	|ИЗ
	|	втТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоСопоставлено КАК КоличествоСопоставлено
	|		ПО (Товары.АлкогольнаяПродукция = КоличествоСопоставлено.АлкогольнаяПродукция)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка                                 КАК Номенклатура,
	|	СправочникНоменклатура.Наименование                           КАК Наименование,
	|	СправочникНоменклатура.ВидАлкогольнойПродукции                КАК ВидАлкогольнойПродукции,
	|	СправочникНоменклатура.ПроизводительИмпортерКонтрагент КАК ПроизводительИмпортер,
	|	СправочникНоменклатура.ОбъемДАЛ                               КАК ОбъемДАЛ,
	|	СправочникНоменклатура.Крепость                               КАК Крепость
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	втДанныеТТН.Наименование         КАК Наименование
	|ИЗ
	|	втДанныеТТН КАК втДанныеТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатура.Номенклатура КАК Номенклатура,
	|	втНоменклатура.Наименование КАК Наименование
	|ИЗ
	|	втНоменклатура КАК втНоменклатура
	|";
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#КонецОбласти

// Заполняет таблицу алкогольной продукции документа-основания с колонками:
//   * Номенклатура
//   * Характеристика
//   * Серия
//   * Количество.
// 
// Параметры:
//  ДокументОснование - ДокументСсылка                 - документ-основание.
//  ДокументЕГАИС     - ОпределяемыйТип.ДокументыЕГАИС - документ по которому требуется получить данные документа-основания.
//  ТаблицаДанных     - ТаблицаЗначений                - заполняемые данные основания
Процедура СформироватьДанныеДокументаОснования(ДокументОснование, ДокументЕГАИС, ТаблицаДанных) Экспорт
	
	//++ НЕ ГОСИС
	
	ИнтеграцияЕГАИСУТ.СформироватьДанныеДокументаОснования(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Обрабатывает таблицу штриховых кодов и получает для каждого из них данные в информационной базе.
//   На входе имеется таблица, в которой заполнены только колонки "Номер строки", "Штриховой код" и "Количество", опционально заполнена 
//   колонка "Родитель".
//   В процедуре устанавливается значение "Истина" в одной из других колонок.
//
// Параметры:
//  ТаблицаНеАкцизныеМарки               - ТаблицаЗначений - имеет следующие колонки:
//   * ШтриховойКод                      - Строка                              - штриховой код полученный с ТСД.
//   * Количество                        - Число                               - сколько раз был считан данный штрихкод.
//   * ШтрихКодУпаковки                  - СправочникСсылка.ШтрихкодыУпаковокТоваров - ссылка на имеющуюся в базе упаковку.
//   * ЭтоИмеющаясяВБазеУпаковка         - Булево                              - если это имеющаяся в базе упаковка.
//   * ЭтоПартионнаяАлкогольнаяПродукция - Булево                              - если это штрихкод партионной алкогольной продукции
//   * ЭтоПрочаяНоменклатура             - Булево                              - если это штрихкод не идентифицирует алкогольную продукцию.
//   * Родитель                          - Строка                              - штрихкод внешней упаковки.
//   * НомерСтроки                       - Число                               - номер строки таблицы
//
Процедура ОпределитьТипыШтриховыхКодовНеМаркируемойПродукцииТСД(ТаблицаНеАкцизныеМарки) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ШтриховыеКоды.ШтриховойКод КАК ШтриховойКод,
	|	ШтриховыеКоды.Количество   КАК Количество,
	|	ШтриховыеКоды.НомерСтроки  КАК НомерСтроки,
	|	ШтриховыеКоды.Родитель     КАК Родитель
	|ПОМЕСТИТЬ Штрихкоды
	|ИЗ
	|	&ШтриховыеКоды КАК ШтриховыеКоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Штрихкоды.ШтриховойКод КАК ШтриховойКод,
	|	Штрихкоды.Количество   КАК Количество,
	|	Штрихкоды.Родитель     КАК Родитель,
	|	Штрихкоды.НомерСтроки  КАК НомерСтроки,
	|	ЕСТЬNULL(
	|		ШтрихкодыУпаковокТоваров.Ссылка,
	|		ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)) КАК ШтрихКодУпаковки,
	|	ВЫБОР
	|		КОГДА ШтрихкодыУпаковокТоваров.ТипУпаковки <> ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоИмеющаясяВБазеУпаковка,
	|	ВЫБОР
	|		КОГДА ВидыАлкогольнойПродукции.Маркируемый = ЛОЖЬ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПартионнаяАлкогольнаяПродукция,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.АлкогольнаяПродукция = ЛОЖЬ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПрочаяНоменклатура
	|ИЗ
	|	Штрихкоды КАК Штрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО Штрихкоды.ШтриховойКод = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Штрихкоды.ШтриховойКод = ШтрихкодыНоменклатуры.Штрихкод
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ШтрихкодыНоменклатуры.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО СправочникНоменклатура.ВидАлкогольнойПродукции = ВидыАлкогольнойПродукции.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ШтриховыеКоды", ТаблицаНеАкцизныеМарки);
	
	ТаблицаНеАкцизныеМарки = Запрос.Выполнить().Выгрузить();
	//-- НЕ ГОСИС
	Возврат;

КонецПроцедуры

// Определяет значение организации ЕГАИС для переданного документа.
//
// Параметры:
//  ОрганизацияЕГАИС - СправочникСсылка.КлассификаторОрганизацийЕГАИС - определяемая организация ЕГАИС.
//  Документ - ДокументСсылка - документ, по данным которого определяется организация ЕГАИС
Процедура ПриОпределенииОрганизацииЕГАИСпоДокументу(ОрганизацияЕГАИС, Документ) Экспорт
	
	//++ НЕ ГОСИС
	//-- НЕ ГОСИС
	
	Возврат;
	
КонецПроцедуры

#Область ПанельОбменСЕГАИС

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса
//
Процедура ТекстЗапросаАктПостановкиНаБалансЕГАИСОформите(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ПОМЕСТИТЬ
	|	ВремТаблВРегистры1И2
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|	ПО
	|		СтатусыОформленияДокументовЕГАИС.ТорговыйОбъект = КлассификаторОрганизацийЕГАИС.ТорговыйОбъект
	|		И КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
	|%ЛевоеСоединение%
	|ГДЕ
	|	СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.АктПостановкиНаБалансЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И НЕ СтатусыОформленияДокументовЕГАИС.Архивный
	|	%УсловиеСсылка%
	|	%УсловиеОрганизация%
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ПравоДоступаПересортицаТоваров           = ПравоДоступа("Чтение", Метаданные.Документы.ПересортицаТоваров);
	ПравоДоступаОприходованиеИзлишковТоваров = ПравоДоступа("Чтение", Метаданные.Документы.ОприходованиеИзлишковТоваров);
	
	ЛевоеСоединение = "";
	
	Если ПравоДоступаПересортицаТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ПересортицаТоваров КАК ПересортицаТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ПересортицаТоваров.Ссылка
		|";
	КонецЕсли;
	
	Если ПравоДоступаОприходованиеИзлишковТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ОприходованиеИзлишковТоваров КАК ОприходованиеИзлишковТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ОприходованиеИзлишковТоваров.Ссылка
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаПересортицаТоваров
		И ПравоДоступаОприходованиеИзлишковТоваров Тогда

		УсловиеСсылка = "(ПересортицаТоваров.Ссылка ЕСТЬ НЕ NULL ИЛИ ОприходованиеИзлишковТоваров.Ссылка ЕСТЬ НЕ NULL)";
		УсловиеОрганизация = "ПересортицаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент ИЛИ ОприходованиеИзлишковТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	ИначеЕсли ПравоДоступаПересортицаТоваров Тогда
		
		УсловиеСсылка = "ПересортицаТоваров.Ссылка ЕСТЬ НЕ NULL";
		УсловиеОрганизация = "ПересортицаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	ИначеЕсли ПравоДоступаОприходованиеИзлишковТоваров Тогда
		
		УсловиеСсылка = "ОприходованиеИзлишковТоваров.Ссылка ЕСТЬ НЕ NULL";
		УсловиеОрганизация = "ОприходованиеИзлишковТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловиеСсылка) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрШаблон("И (%1)", УсловиеСсылка));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "И ЛОЖЬ");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловиеОрганизация) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрШаблон("И ((%1) ИЛИ &БезОтбораПоОрганизацииЕГАИС)", УсловиеОрганизация));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "И ЛОЖЬ");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РАЗЛИЧНЫЕ 0.5 КАК КоличествоДокументов
	|ПОМЕСТИТЬ
	|	ВремТаблВРегистр3
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	|ГДЕ
	|	АкцизныеМаркиЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КПостановкеНаБаланс)
	|	И (АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС В(&ОрганизацияЕГАИС) ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|	И НЕ АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС.Ссылка ЕСТЬ NULL
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВРегистры1И2.КоличествоДокументов, 0) + ЕСТЬNULL(ВРегистр3.КоличествоДокументов, 0) КАК КоличествоДокументов
	|ИЗ
	|	ВремТаблВРегистры1И2 КАК ВРегистры1И2
	|	ПОЛНОЕ СОЕДИНЕНИЕ ВремТаблВРегистр3 КАК ВРегистр3
	|	ПО ИСТИНА
	|";
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктПостановкиНаБалансЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктПостановкиНаБалансЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктСписанияЕГАИСОформите(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|	ПО
	|		СтатусыОформленияДокументовЕГАИС.ТорговыйОбъект = КлассификаторОрганизацийЕГАИС.ТорговыйОбъект
	|		И КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
	|%ЛевоеСоединение%
	|ГДЕ
	|	СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И НЕ СтатусыОформленияДокументовЕГАИС.Архивный
	|	%УсловиеСсылка%
	|	%УсловиеОрганизация%
	|";
	
	ПравоДоступаВнутреннееПотребление        = ПравоДоступа("Чтение", Метаданные.Документы.ВнутреннееПотребление);
	ПравоДоступаСписаниеНедостачТоваров      = ПравоДоступа("Чтение", Метаданные.Документы.СписаниеНедостачТоваров);
	ПравоДоступаПересортицаТоваров           = ПравоДоступа("Чтение", Метаданные.Документы.ПересортицаТоваров);
	ПравоДоступаОтчетОРозничныхПродажах      = ПравоДоступа("Чтение", Метаданные.Документы.ОтчетОРозничныхПродажах);
	ПравоДоступаСборкаТоваров                = ПравоДоступа("Чтение", Метаданные.Документы.СборкаТоваров);
	
	УсловияСсылка = Новый Массив;
	УсловияОрганизация = Новый Массив;
	
	ЛевоеСоединение = "";
	
	Если ПравоДоступаВнутреннееПотребление Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВнутреннееПотребление КАК ВнутреннееПотребление
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ВнутреннееПотребление.Ссылка
		|";
		УсловияСсылка.Добавить("ВнутреннееПотребление.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ВнутреннееПотребление.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаСписаниеНедостачТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = СписаниеНедостачТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("СписаниеНедостачТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("СписаниеНедостачТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаПересортицаТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ПересортицаТоваров КАК ПересортицаТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ПересортицаТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("ПересортицаТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ПересортицаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаОтчетОРозничныхПродажах Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ОтчетОРозничныхПродажах.Ссылка
		|";
		УсловияСсылка.Добавить("ОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ОтчетОРозничныхПродажах.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаСборкаТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.СборкаТоваров КАК СборкаТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = СборкаТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("СборкаТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("СборкаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрШаблон("И (%1)", СтрСоединить(УсловияСсылка, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "И ЛОЖЬ");
	КонецЕсли;
	
	Если УсловияОрганизация.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрШаблон("И ((%1) ИЛИ &БезОтбораПоОрганизацииЕГАИС)", СтрСоединить(УсловияОрганизация, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "И ЛОЖЬ");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктСписанияЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктСписанияЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса
//
Процедура ТекстЗапросаВозвратИзРегистра2ЕГАИСОформите(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|	ПО
	|		СтатусыОформленияДокументовЕГАИС.ТорговыйОбъект = КлассификаторОрганизацийЕГАИС.ТорговыйОбъект
	|		И КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
	|%ЛевоеСоединение%
	|	
	|ГДЕ
	|	(%УсловиеСсылка%)
	|	И СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ВозвратИзРегистра2ЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И НЕ СтатусыОформленияДокументовЕГАИС.Архивный
	|	И (%УсловиеОрганизация% ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|";
	
	ПравоДоступаТТНИсходящаяЕГАИС = ПравоДоступа("Чтение", Метаданные.Документы.ТТНИсходящаяЕГАИС);
	
	ЛевоеСоединение = "";
	
	Если ПравоДоступаТТНИсходящаяЕГАИС Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ТТНИсходящаяЕГАИС.Ссылка
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаТТНИсходящаяЕГАИС Тогда
		
		УсловиеСсылка = "ТТНИсходящаяЕГАИС.Ссылка ЕСТЬ НЕ NULL";
		УсловиеОрганизация = "ТТНИсходящаяЕГАИС.Грузоотправитель = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловиеСсылка) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрШаблон("И (%1)", УсловиеСсылка));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "И ЛОЖЬ");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловиеОрганизация) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрШаблон("И ((%1) ИЛИ &БезОтбораПоОрганизацииЕГАИС)", УсловиеОрганизация));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "И ЛОЖЬ");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаВозвратИзРегистра2ЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаВозвратИзРегистра2ЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаПередачаВРегистр2ЕГАИСОформите(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СвободныйОстатокОстаток КАК КПередаче
	|ПОМЕСТИТЬ
	|	ВТОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.Остатки(,
	|		ОрганизацияЕГАИС.ТорговыйОбъект.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)
	|		И (ОрганизацияЕГАИС В(&ОрганизацияЕГАИС) ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|	) КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ПО ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР
	|ГДЕ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СвободныйОстатокОстаток > 0
	|;
	|	
	|ВЫБРАТЬ
	|	АкцизныеМарки.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	КОЛИЧЕСТВО(АкцизныеМарки.АкцизнаяМарка) КАК Количество
	|ПОМЕСТИТЬ
	|	ВТАкцизныеМарки
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМарки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОстатки КАК втОстатки
	|		ПО ВтОстатки.ОрганизацияЕГАИС = АкцизныеМарки.ОрганизацияЕГАИС
	|ГДЕ
	|	АкцизныеМарки.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ВНаличии),ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КПостановкеНаБаланс))
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ОрганизацияЕГАИС
	|;
	|	
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(1), 0) КАК ЕстьПродукцияКПередаче
	|ПОМЕСТИТЬ
	|	ВТОстаткиКПередаче
	|ИЗ
	|	ВТОстатки КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАкцизныеМарки КАК АкцизныеМарки
	|		ПО ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС = АкцизныеМарки.ОрганизацияЕГАИС
	|ГДЕ
	|	(ОстаткиАлкогольнойПродукцииЕГАИСОстатки.КПередаче - ЕСТЬNULL(АкцизныеМарки.Количество, 0)) > 0
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание)
	|	* ЕСТЬNULL(МАКСИМУМ(ОстаткиКПередаче.ЕстьПродукцияКПередаче), 0) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|	%ЛевоеСоединение%
	|	,
	|	ВТОстаткиКПередаче КАК ОстаткиКПередаче
	|ГДЕ
	|	СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ПередачаВРегистр2ЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И НЕ СтатусыОформленияДокументовЕГАИС.Архивный
	|	%УсловиеСсылка%
	|	%УсловиеОрганизация%
	|";
	
	ПравоДоступаТТНВходящаяЕГАИС = ПравоДоступа("Чтение", Метаданные.Документы.ТТНВходящаяЕГАИС);
	
	УсловияСсылка = Новый Массив;
	УсловияОрганизация = Новый Массив;
	
	ЛевоеСоединение = "";
	
	Если ПравоДоступаТТНВходящаяЕГАИС Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ТТНВходящаяЕГАИС.Ссылка
		|";
		УсловияСсылка.Добавить("ТТНВходящаяЕГАИС.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ТТНВходящаяЕГАИС.Грузополучатель В(&ОрганизацияЕГАИС)");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрШаблон("И (%1)", СтрСоединить(УсловияСсылка, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "И ЛОЖЬ");
	КонецЕсли;
	
	Если УсловияОрганизация.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрШаблон("И ((%1) ИЛИ &БезОтбораПоОрганизацииЕГАИС)", СтрСоединить(УсловияОрганизация, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "И ЛОЖЬ");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаПередачаВРегистр2ЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаПередачаВРегистр2ЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаТТНИсходящаяЕГАИСОформите(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|	ПО
	|		СтатусыОформленияДокументовЕГАИС.ТорговыйОбъект = КлассификаторОрганизацийЕГАИС.ТорговыйОбъект
	|		И КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
	|%ЛевоеСоединение%
	|ГДЕ
	|	СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ТТНИсходящаяЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И НЕ СтатусыОформленияДокументовЕГАИС.Архивный
	|	%УсловиеСсылка%
	|	%УсловиеОрганизация%
	|";
	
	ПравоДоступаРеализацияТоваровУслуг            = ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваровУслуг);
	ПравоДоступаВозвратТоваровПоставщику          = ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровПоставщику);
	ПравоДоступаПеремещениеТоваров                = ПравоДоступа("Чтение", Метаданные.Документы.ПеремещениеТоваров);
	ПравоДоступаВозвратТоваровМеждуОрганизациями  = ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровМеждуОрганизациями);
	ПравоДоступаПередачаТоваровМеждуОрганизациями = ПравоДоступа("Чтение", Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
	
	УсловияСсылка = Новый Массив;
	УсловияОрганизация = Новый Массив;
	
	ЛевоеСоединение = "";
	
	Если ПравоДоступаРеализацияТоваровУслуг Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = РеализацияТоваровУслуг.Ссылка
		|";
		УсловияСсылка.Добавить("РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("РеализацияТоваровУслуг.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаВозвратТоваровПоставщику Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ВозвратТоваровПоставщику.Ссылка
		|";
		УсловияСсылка.Добавить("ВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ВозвратТоваровПоставщику.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаПеремещениеТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ПеремещениеТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("ПеремещениеТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ПеремещениеТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаВозвратТоваровМеждуОрганизациями Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваровМеждуОрганизациями
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ВозвратТоваровМеждуОрганизациями.Ссылка
		|";
		УсловияСсылка.Добавить("ВозвратТоваровМеждуОрганизациями.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ВозвратТоваровМеждуОрганизациями.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаПередачаТоваровМеждуОрганизациями Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ПередачаТоваровМеждуОрганизациями.Ссылка
		|";
		УсловияСсылка.Добавить("ПередачаТоваровМеждуОрганизациями.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ПередачаТоваровМеждуОрганизациями.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрШаблон("И (%1)", СтрСоединить(УсловияСсылка, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "И ЛОЖЬ");
	КонецЕсли;
	
	Если УсловияОрганизация.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрШаблон("И ((%1) ИЛИ &БезОтбораПоОрганизацииЕГАИС)", СтрСоединить(УсловияОрганизация, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "И ЛОЖЬ");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаТТНИсходящаяЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаТТНИсходящаяЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСОформите(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|	ПО
	|		СтатусыОформленияДокументовЕГАИС.ТорговыйОбъект = КлассификаторОрганизацийЕГАИС.ТорговыйОбъект
	|		И КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
	|%ЛевоеСоединение%
	|ГДЕ
	|	СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ЧекЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И НЕ СтатусыОформленияДокументовЕГАИС.Архивный
	|	%УсловиеСсылка%
	|	%УсловиеОрганизация%
	|";
	
	ПравоДоступаРеализацияТоваровУслуг = ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваровУслуг);
	ПравоДоступаСборкаТоваров          = ПравоДоступа("Чтение", Метаданные.Документы.СборкаТоваров);
	
	УсловияСсылка = Новый Массив;
	УсловияОрганизация = Новый Массив;
	
	ЛевоеСоединение = "";
	
	Если ПравоДоступаРеализацияТоваровУслуг Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = РеализацияТоваровУслуг.Ссылка
		|";
		УсловияСсылка.Добавить("РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("РеализацияТоваровУслуг.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаСборкаТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.СборкаТоваров КАК СборкаТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = СборкаТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("СборкаТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("СборкаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрШаблон("И (%1)", СтрСоединить(УсловияСсылка, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "И ЛОЖЬ");
	КонецЕсли;
	
	Если УсловияОрганизация.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрШаблон("И ((%1) ИЛИ &БезОтбораПоОрганизацииЕГАИС)", СтрСоединить(УсловияОрганизация, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "И ЛОЖЬ");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСВозвратОформите(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|	ПО
	|		СтатусыОформленияДокументовЕГАИС.ТорговыйОбъект = КлассификаторОрганизацийЕГАИС.ТорговыйОбъект
	|		И КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
	|%ЛевоеСоединение%
	|ГДЕ
	|	СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ЧекЕГАИСВозврат.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И НЕ СтатусыОформленияДокументовЕГАИС.Архивный
	|	%УсловиеСсылка%
	|	%УсловиеОрганизация%
	|";
	
	ПравоДоступаВозвратТоваровОтКлиента = ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтКлиента);
	
	ЛевоеСоединение = "";
	
	Если ПравоДоступаВозвратТоваровОтКлиента Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ВозвратТоваровОтКлиента.Ссылка
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаВозвратТоваровОтКлиента Тогда
		
		УсловиеСсылка = "ВозвратТоваровОтКлиента.Ссылка ЕСТЬ НЕ NULL";
		УсловиеОрганизация = "ВозвратТоваровОтКлиента.Организация = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловиеСсылка) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрШаблон("И (%1)", УсловиеСсылка));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "И ЛОЖЬ");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловиеОрганизация) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрШаблон("И ((%1) ИЛИ &БезОтбораПоОрганизацииЕГАИС)", УсловиеОрганизация));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "И ЛОЖЬ");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСВозвратОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСВозвратОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаУведомлениеОПланируемомИмпортеЕГАИСОформите(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|	ПО
	|		СтатусыОформленияДокументовЕГАИС.ТорговыйОбъект = КлассификаторОрганизацийЕГАИС.ТорговыйОбъект
	|		И КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
	|%ЛевоеСоединение%
	|ГДЕ
	|	СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.УведомлениеОПланируемомИмпортеЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И НЕ СтатусыОформленияДокументовЕГАИС.Архивный
	|	%УсловиеСсылка%
	|	%УсловиеОрганизация%
	|";
	
	ПравоДоступаЗаказПоставщику            = ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПоставщику);
	
	УсловияСсылка = Новый Массив;
	УсловияОрганизация = Новый Массив;
	
	ЛевоеСоединение = "";
	
	Если ПравоДоступаЗаказПоставщику Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ЗаказПоставщику.Ссылка
		|";
		УсловияСсылка.Добавить("ЗаказПоставщику.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ЗаказПоставщику.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрШаблон("И (%1)", СтрСоединить(УсловияСсылка, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "И ЛОЖЬ");
	КонецЕсли;
	
	Если УсловияОрганизация.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрШаблон("И ((%1) ИЛИ &БезОтбораПоОрганизацииЕГАИС)", СтрСоединить(УсловияОрганизация, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "И ЛОЖЬ");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаУведомлениеОПланируемомИмпортеЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаУведомлениеОПланируемомИмпортеЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОбИмпортеЕГАИСОформите(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОбИмпортеЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОбИмпортеЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОПроизводствеЕГАИСОформите(ТекстЗапроса) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|	ПО
	|		СтатусыОформленияДокументовЕГАИС.ТорговыйОбъект = КлассификаторОрганизацийЕГАИС.ТорговыйОбъект
	|		И КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
	|%ЛевоеСоединение%
	|ГДЕ
	|	СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ОтчетОПроизводствеЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И НЕ СтатусыОформленияДокументовЕГАИС.Архивный
	|	%УсловиеСсылка%
	|	%УсловиеОрганизация%
	|";
	
	ПравоДоступаСборкаТоваров              = ПравоДоступа("Чтение", Метаданные.Документы.СборкаТоваров);
	
	
	
	
	УсловияСсылка = Новый Массив;
	УсловияОрганизация = Новый Массив;
	
	ЛевоеСоединение = "";
	
	Если ПравоДоступаСборкаТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.СборкаТоваров КАК СборкаТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = СборкаТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("СборкаТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("СборкаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрШаблон("И (%1)", СтрСоединить(УсловияСсылка, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "И ЛОЖЬ");
	КонецЕсли;
	
	Если УсловияОрганизация.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрШаблон("И ((%1) ИЛИ &БезОтбораПоОрганизацииЕГАИС)", СтрСоединить(УсловияОрганизация, " ИЛИ ")));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "И ЛОЖЬ");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОПроизводствеЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОПроизводствеЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область Статусы

// Устанавливает признак "Не используется" для обрабатываемых статусов в обработчике заполнения регистра
// СтатусыДокументовЕГАИС на основании данных в документах ЕГАИС.
// (Обработчик обновления: Переход от хранения статусов в документе к хранению в регистре сведений).
//
// Параметры:
//  НеИспользуется - Булево - Значение статуса не используется
//  Статус         - ПеречислениеСсылка.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС - проверяемый статус
//                 - ПеречислениеСсылка.СтатусыИнформированияЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиАктаСписанияЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиВозвратаИзРегистра2ЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиЗапросаАкцизныхМарокЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиОстатковЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиОтчетаЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиПередачиВРегистр2ЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиТТНВходящейЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиТТНИсходящейЕГАИС -
Процедура ПриОпределенииИспользуемыхСтатусовДокумента(НеИспользуется, Статус) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

//Заполняет, при необходимости создает серии в документе ЕГАИС или его выделенных строках.
//
//Параметры:
//  Контекст  - См. ИнтеграцияЕГАИС.КонтекстЗаполненияСерий - место заполнения серий.
//  Результат - См. ИнтеграцияЕГАИС.РезультатЗаполненияСерий - результат заполнения.
//
Процедура ЗаполнитьСгенерироватьСерии(Контекст, Результат) Экспорт
	
	//++ НЕ ГОСИС
	ПараметрыЗаполнения = Неопределено;
	ПараметрыЗаполнения = ИнтеграцияЕГАИСУТ.ПараметрыЗаполненияСерий();
	ПараметрыЗаполнения.ОрганизацияЕГАИС = Контекст.Объект.Грузополучатель;
	ПараметрыЗаполнения.ЗаполнятьБезЗапросаСправок = Контекст.ЗаполнятьБезЗапросаСправок;
	ПараметрыЗаполнения.ПараметрыУказанияСерий = Контекст.ПараметрыУказанияСерий;
	
	Если ТипЗнч(Контекст.Объект.ТорговыйОбъект) = ТипЗнч(Контекст.СобственныйТорговыйОбъектЗначениеПоУмолчанию) Тогда
		ИнтеграцияЕГАИСУТ.ЗаполнитьПараметрЗаполненияСклад(Контекст.Объект, ПараметрыЗаполнения);
	КонецЕсли;
	
	СтруктураДействий = Контекст.СтруктураДействий;
	Если (СтруктураДействий = Неопределено) Тогда
		СтруктураДействий = Новый Структура;
	КонецЕсли;
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус",
		Новый Структура("ПараметрыУказанияСерий, Склад", Контекст.ПараметрыУказанияСерий, ПараметрыЗаполнения.Склад));
	
	РезультатЗаполнения = ИнтеграцияЕГАИСУТ.ЗаполнитьСгенерироватьСерии(
		Контекст.Объект.Товары,
		Контекст.МассивСтрок,
		ПараметрыЗаполнения,
		СтруктураДействий);
	ЗаполнитьЗначенияСвойств(Результат, РезультатЗаполнения);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
