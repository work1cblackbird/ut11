////////////////////////////////////////////////////////////////////////////////
// Подсистема "Торговые предложения".
// ОбщийМодуль.ТорговыеПредложенияПостИсп.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Получение валюты по коду.
//
// Параметры:
//  Код - Число - международный код валюты.
// 
// Возвращаемое значение:
//  Ссылка, Строка - ссылка на элемент справочника Валюты или строковое представление сервиса.
//
Функция ПолучитьВалюту(Код, БлокироватьОшибки = Ложь) Экспорт
	
	Результат = Неопределено;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Валюты") Тогда
		// Получение представление единицы измерения в информационной базе.
		ИмяСправочникаВалюты = "Валюты";
		Ссылка = Справочники[ИмяСправочникаВалюты].НайтиПоКоду(Код);
		Если ЗначениеЗаполнено(Ссылка) Тогда
			Результат = Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Результат = ПредставлениеВалютыПоКоду(Код);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НастройкиПодсистемы() Экспорт
		
	Результат = Новый Структура;
	
	Результат.Вставить("ВариантыПубликацииОстатков",         Новый Массив);
	Результат.Вставить("ДоступнаФункциональностьЗапросаЦен", Ложь);
	Результат.Вставить("ИспользоватьХарактеристики",         Ложь);
	Результат.Вставить("ВариантыПубликацииСкидок",           Новый Массив);
	
	ТорговыеПредложенияПереопределяемый.ПриОпределенииНастроек(Результат);

	Результат.Вставить("ИспользоватьПубликациюОстатков", Результат.ВариантыПубликацииОстатков.Количество() > 0);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Параметры единицы измерения по коду
//
// Параметры:
//  Код	 - Строка - код единицы измерения.
// 
// Возвращаемое значение:
//  Структура - найденное значение.
//   * Ссылка - Ссылка - единица измерения информационной базы.
//   * Представление - Строка - представление единицы измерения в информационной базе или сервисе.
//
Функция ПараметрыЕдиницыИзмеренияПоКоду(Код) Экспорт
	
	Результат = Новый Структура("Ссылка, Представление");
	
	// Получение представление единицы измерения в информационной базе.
	ТорговыеПредложенияПереопределяемый.ПолучитьПараметрыЕдиницыИзмерения(Код, Результат.Ссылка, Результат.Представление);
	Если Не ПустаяСтрока(Результат) Тогда
		Возврат Результат;
	КонецЕсли;
	
	// Если не нашли единицу измерения, обращение к облачному сервису.
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.РаботаСНоменклатурой.ОблачныеКлассификаторы") Тогда
		МодульОблачныеКлассификаторы = ОбщегоНазначения.ОбщийМодуль("ОблачныеКлассификаторы");
		ЗначенияОКЕИ = МодульОблачныеКлассификаторы.ПолучитьИзСервисаДанныеОКЕИ(
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Код));
		Если ЗначенияОКЕИ <> Неопределено И ЗначенияОКЕИ.Количество() = 1 Тогда
			Результат.Представление = ЗначенияОКЕИ[0].УсловноеОбозначениеНациональное;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Получение кода единицы измерения.
//
// Параметры:
//  ЕдиницаИзмерения - СправочникСсылка - ссылка на единицу измерения.
// 
// Возвращаемое значение:
//  Строка - код ОКЕИ единицы измерения.
//
Функция КодЕдиницыИзмерения(ЕдиницаИзмерения) Экспорт
	
	КодЕдиницыИзмерения = Неопределено;
	
	ТорговыеПредложенияПереопределяемый.ОпределитьКодЕдиницыИзмерения(ЕдиницаИзмерения, КодЕдиницыИзмерения);
	
	Если КодЕдиницыИзмерения = Неопределено Тогда
		КодЕдиницыИзмерения = ТорговыеПредложенияСлужебный.КодОбъектаИнформационнойБазы(ЕдиницаИзмерения, "");
	КонецЕсли; 
	
	Возврат КодЕдиницыИзмерения;
	
КонецФункции

// Получение кода валюты.
//
// Параметры:
//  Валюта	 - СправочникСсылка.Валюта - валюта.
// 
// Возвращаемое значение:
//  Строка - цифровой код валюты.
//
Функция КодВалюты(Валюта) Экспорт
	
	Результат = Неопределено;
	
	Если ЗначениеЗаполнено(Валюта) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Валюта, "Код");
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает строковое представление валюты по коду. 
// Перечень валюты ограничен валютой, используемой в сервисе.
//
// Параметры:
//  КодВалюты	 - Строка - код валюты.
// 
// Возвращаемое значение:
//  Строка, Неопределено - представление валюты.
//
Функция ПредставлениеВалютыПоКоду(КодВалюты)
	
	Результат = Неопределено;
	
	Если КодВалюты = "643" Тогда
		Результат = "RUB";
	ИначеЕсли КодВалюты = "840" Тогда	
		Результат = "USD";
	ИначеЕсли КодВалюты = "978" Тогда	
		Результат = "EUR";
	ИначеЕсли КодВалюты = "826" Тогда	
		Результат = "GBR";
	ИначеЕсли КодВалюты = "933" Тогда	
		Результат = "BYN";
	ИначеЕсли КодВалюты = "398" Тогда	
		Результат = "KZT";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Получение сериализованной ставки НДС
//
// Параметры:
//  СтавкаНДС	 - Произвольный - значение ставки НДС.
// 
// Возвращаемое значение:
//  Строка - сериализованное значение ставки НДС, например VAT_18
//
Функция СтавкаНДССериализованная(СтавкаНДС) Экспорт
	
	Если Не ЗначениеЗаполнено(СтавкаНДС) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяСтавкиНДС = Неопределено;
	ТорговыеПредложенияПереопределяемый.ПолучитьИмяСтавкиНДС(СтавкаНДС, ИмяСтавкиНДС);
	
	Если ИмяСтавкиНДС = "БезНДС" Или ИмяСтавкиНДС = "НДС0" Тогда
		Результат = "VAT_WITHOUT"
	ИначеЕсли ИмяСтавкиНДС = "НДС10" Или ИмяСтавкиНДС = "НДС10_110" Тогда
		Результат = "VAT_10"
	ИначеЕсли ИмяСтавкиНДС = "НДС18" Или ИмяСтавкиНДС = "НДС18_118" Тогда
		Результат = "VAT_18";
	ИначеЕсли ИмяСтавкиНДС = "НДС20" Или ИмяСтавкиНДС = "НДС20_120" Тогда
		Результат = "VAT_20";
	Иначе
		Результат = Неопределено;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Получение ставки НДС по коду.
//
// Параметры:
//  СтавкаСтрокой	 - Строка - наименование ставки НДС (БезНДС, НДС10, НДС18).
// 
// Возвращаемое значение:
//  Ссылка - значение ставки НДС.
//
Функция ПолучитьСтавкуНДС(СтавкаСтрокой) Экспорт
	
	НовоеЗначение = Неопределено;
	ТорговыеПредложенияПереопределяемый.ПолучитьЗначениеСтавкиНДС(СтавкаСтрокой, НовоеЗначение);
	
	Возврат НовоеЗначение;
	
КонецФункции

// Типы получаемых данных.
// 
// Возвращаемое значение:
//  Структура - описание типов:
//   * Простой         - ОписаниеТипов - простой тип (Строка, Булево, Число, Дата).
//   * Строка          - Строка.
//   * Число            - Число.
//   * Булево           - Булево.
//   * Структура        - Структура.
//   * Дата             - Дата.
//   * Таблица          - ТаблицаЗначений.
//   * Цена             - Число - денежный тип.
//   * Номенклатура     - ОпределяемыйТип.НоменклатураБЭД.
//   * Характеристика   - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД.
//   * Упаковка         - ОпределяемыйТип.УпаковкаНоменклатурыБЭД.
//   * ПрайсЛист        - ОпределяемыйТип.ТорговоеПредложение.
//   * Организация      - ОпределяемыйТип.Организация.
//   * ЕдиницаИзмерения - СправочникСсылка.
//
Функция ТипыДанных() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Простой",   Новый ОписаниеТипов("Строка, Булево, Число, Дата, Null"));
	Результат.Вставить("Булево",    Новый ОписаниеТипов("Булево, Null"));
	Результат.Вставить("Число",     Новый ОписаниеТипов("Число, Null"));
	Результат.Вставить("Дата",      Новый ОписаниеТипов("Дата, Null"));
	Результат.Вставить("Строка",    Новый ОписаниеТипов("Строка, Null"));
	Результат.Вставить("Структура", Новый ОписаниеТипов("Структура, Null"));
	Результат.Вставить("Массив",    Новый ОписаниеТипов("Массив, Null"));
	Результат.Вставить("Таблица",   Новый ОписаниеТипов("ТаблицаЗначений, Null"));
	Результат.Вставить("Цена",      Новый ОписаниеТипов("Число, Null", 
		Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
		
	Результат.Вставить("Ссылка",    Неопределено);
	Результат.Вставить("Номенклатура",   Метаданные.ОпределяемыеТипы.НоменклатураБЭД.Тип);
	Результат.Вставить("Характеристика", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатурыБЭД.Тип);
	Результат.Вставить("Упаковка",       Метаданные.ОпределяемыеТипы.УпаковкаНоменклатурыБЭД.Тип);
	Результат.Вставить("ПрайсЛист",      Метаданные.ОпределяемыеТипы.ТорговоеПредложение.Тип);
	Результат.Вставить("Организация", Метаданные.ОпределяемыеТипы.Организация.Тип);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.РаботаСНоменклатурой") Тогда
		Результат.Вставить("ОбъектСопоставления", Метаданные.ОпределяемыеТипы.ВидНоменклатурыРаботаСНоменклатурой.Тип);
	Иначе 
		Результат.Вставить("ОбъектСопоставления", Неопределено);
	КонецЕсли;
	
	ИмяСправочникаЕдиницыИзмерения = ОбщегоНазначенияБЭД.ИмяПрикладногоСправочника("ЕдиницыИзмерения");
	Результат.Вставить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка." + ИмяСправочникаЕдиницыИзмерения));
	
	Возврат Результат;
	
КонецФункции

Функция ИсполняемыеНастройкиПубликации(ИменаТаблиц, ПоляОтбора) Экспорт 
	Возврат ТорговыеПредложенияСлужебный.ИсполняемыеНастройкиПубликацииСлужебный(ИменаТаблиц, ПоляОтбора);
КонецФункции

#КонецОбласти
