
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Торговые предложения".
// ОбщийМодуль.ТорговыеПредложенияКлиентПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РаботаСФормами

// Обработка переопределяемой команды формы.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма, из которой производится обработка команды.
//  Команда	 - КомандаФормы               - описание команды формы.
//
Процедура ОбработатьКомандуФормы(Форма, Команда) Экспорт
	
	//++ НЕ ГОСИС
	Если СтрНайти(Команда.Имя, "ВставкаИзБуфера") Тогда
		
		// Вставка из буфера.
		КоличествоТоваровДоВставки = Форма.Список.Количество();

		СписокТоваров = Форма.Список;
		ТорговыеПредложенияВызовСервераУТ.ВставитьСтрокиИзБуфераОбмена(СписокТоваров);
		КопироватьДанныеФормы(СписокТоваров, Форма.Список);
		
		КоличествоВставленных = Форма.Список.Количество() - КоличествоТоваровДоВставки;

		ТекстСообщения = НСтр("ru='Из буфера обмена вставлено строк (%КоличествоВставленных%)'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоВставленных%", КоличествоВставленных);

		ТекстЗаголовка = НСтр("ru='Строки вставлены'");
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32);
		
	ИначеЕсли СтрНайти(Команда.Имя, "ПодобратьТовары") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("УникальныйИдентификатор", Форма.УникальныйИдентификатор);
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ОткрытьФорму("Обработка.ПодборТоваровПоОтбору.Форма", ПараметрыФормы, Форма, Форма.УникальныйИдентификатор);
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область ЗапросЦен

// Открытие формы отправки запросов цен поставщикам.
//
// Параметры:
//  ПараметрыОткрытия	 - Структура - параметры для открываемой формы
//    * ИдентификаторЗаказа - УникальныйИдентификатор - ключ уникальности формы поиска товаров.
//    * АдресТоваровВХранилище - Строка - адрес хранилища значений таблицы товаров для поиска.
//    * Валюта - СправочникСсылка.Валюта - валюта поиска товаров.
//    * Организация - ОпределяемыйТип.Организация - организация, от лица которой происходит поиск товара.
//
Процедура ОткрытьФормуОтправкиЗапросовЦен(ПараметрыОткрытия) Экспорт
	
	//++ НЕ ГОСИС
	ПараметрыОткрытия.Вставить("РежимЗапросаЦен", Истина);
	ОчиститьСообщения();
	ТорговыеПредложенияКлиент.ОткрытьФормуФормированияЗаказов(ПараметрыОткрытия);
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область Подсказки

// Получение данных контекста для подсказки.
//
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения - форма прикладного объекта.
//  ДанныеКонтекста	 - Структура - свойства контекста:
//   * Основание            - Произвольный - ссылка на источник данных, например документ.
//   * Организации          - Массив из ОпределяемыйТип.Организация - организации контекста.
//   * РежимПоставщика      - Булево - контекст определяет режим поставщика.
//   * РежимПокупателя      - Булево - контекст определяет режим покупателя.
//   * РежимПоискаПоОтборам - Булево - действием подсказки является открытие формы поиска с отборами.
//   * РежимПоискаПоСписку  - Булево - действием подсказки является открытие формы поиска по списку.
//
Процедура ПолучитьДанныеКонтекстаДляПодсказки(Знач Форма, ДанныеКонтекста) Экспорт
	
	//++ НЕ ГОСИС
	Если Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.ФормаСписка"
		или Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.ФормаСпискаДокументов" Тогда
		
		ДанныеКонтекста.РежимПоставщика = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаСписка"
		или Форма.ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаСпискаДокументов" Тогда 
		
		ДанныеКонтекста.РежимПокупателя = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаДокумента" Тогда 
		
		ДанныеКонтекста.Основание = Форма.Объект.Ссылка;
		ДанныеКонтекста.Организации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.Объект.Организация);
		ДанныеКонтекста.РежимПокупателя = Истина;
		ДанныеКонтекста.РежимПоискаПоСписку = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаСписка"  Тогда
		
		ДанныеКонтекста.РежимПоставщика = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.Партнеры.Форма.ФормаСписка"
		или Форма.ИмяФормы = "Справочник.Партнеры.Форма.ФормаСпискаБезПолнотекстовогоПоиска" Тогда 
		
		Если Форма.СписокОтборПоТипуПартнера.Количество() Тогда 
			Если Форма.СписокОтборПоТипуПартнера.Получить(0).Значение = "Клиент" Тогда 
				ДанныеКонтекста.РежимПоставщика = Истина;
			ИначеЕсли Форма.СписокОтборПоТипуПартнера.Получить(0).Значение = "Поставщик" Тогда
				ДанныеКонтекста.РежимПокупателя = Истина;
			КонецЕсли;
		Иначе
			ДанныеКонтекста = Неопределено;
		КонецЕсли;
	ИначеЕсли Форма.ИмяФормы = "Справочник.СоглашенияСКлиентами.Форма.ФормаСпискаТиповыхСоглашений"
		или Форма.ИмяФормы = "Справочник.СоглашенияСКлиентами.Форма.ФормаСпискаИндивидуальныхСоглашений" Тогда
		
		ДанныеКонтекста.РежимПоставщика = Истина;		
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ЖурналДокументовЗакупки.Форма.СписокДокументов"  Тогда
		
		ДанныеКонтекста.РежимПокупателя = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ЖурналДокументовПродажи.Форма.СписокДокументов"  Тогда
		
		ДанныеКонтекста.РежимПоставщика = Истина;		
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ПрайсЛистПоставщика.Форма.Форма"  Тогда
		
		ДанныеКонтекста.РежимПокупателя = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда 
		
		ДанныеКонтекста.Основание = Форма.Объект.Ссылка;
		ДанныеКонтекста.РежимПокупателя = Истина;
		ДанныеКонтекста.РежимПоискаПоОтборам = Истина;
		
	Иначе
		
		ДанныеКонтекста = Неопределено;
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область ДиагностикаОшибокТорговыхПредложений

// Вызывает диалог интерактивного изменения реквизита торгового предложения. Вызывается при нажатии 
//   пользователем на ячейку с текущим значением реквизита.
//
// Реквизиты, доступные для изменения посредством перехода из карточки торгового предложения определяется
//   в процедуре ОпределитьОбрабатываемыеРеквизитыКарточкиТорговогоПредложения общего модуля 
//   ТорговыеПредложенияПереопределяемый
//
// Параметры:
//  ПозицияТорговогоПредложения   - Структура     - указывает на измененную позицию торгового предложения.
//            Ключи:
//                *ПрайсЛист - ОпределяемыйТип.ТорговоеПредложение - Прайс-лист позиции торгового предложения
//                *Номенклатура - ОпределяемыйТип.НоменклатураБЭД - номенклатура позиции торгового предложения
//                *Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика позиции торгового предложения
//                *Упаковка - ОпределяемыйТип.УпаковкаНоменклатурыБЭД - упаковка позиции торгового предложения
//  ИмяРеквизита                  - Строка     - Имя реквизита с учетом имени таблицы. Например: "Товары.НаименованиеНоменклатуры",
//            "Контакты.Телефон"
//            см. ТорговыеПредложенияПереопределяемый.ИнициализацияЗапросаПубликуемыхТоваров
//  ДополнительныйРеквизит        - ОпределяемыйТип.ДополнительныеРеквизитыРаботаСНоменклатурой     - ссылка на 
//            устанавливаемый дополнительный реквизит в случае, если нажата гиперссылка свойства торгового предложения.
//  Форма                         - ФормаКлиентскогоПриложения - форма карточки торгового предложения, на которой
//            была нажата гиперссылка
//  ЭлементФормы                  - ПолеФормы - элемент формы, нажатие на которое вызвало обработчик
//  ОписаниеОповещенияОЗавершении - ОписаниеОповещения - обработчик, который требуется вызвать
//            при окончании редактирования значения реквизита. Данный обработчик заново формирует карточку
//            торгового предложения
//
// Пример:
//    Если ИмяРеквизита = "Товары.НаименованиеНоменклатуры" Тогда
//        ОткрываемаяФорма = ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта",
//            Новый Структура("Ключ", КлючЗаписи.Номенклатура), Форма, Новый УникальныйИдентификатор
//                , , , ОписаниеОповещенияОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//        ОткрываемаяФорма.ТекущийЭлемент = ОткрываемаяФорма.Элементы.Наименование;
//    ИначеЕсли ИмяРеквизита = "Контакты.Телефон" Тогда
//        ОткрываемаяФорма = ОткрытьФорму("Справочник.ТорговыеПредложения.ФормаОбъекта",
//             Новый Структура("Ключ", КлючЗаписи.ПрайсЛист), Форма, Новый УникальныйИдентификатор
//                , , , ОписаниеОповещенияОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//        ОткрываемаяФорма.ТекущийЭлемент = ОткрываемаяФорма.Элементы.КонтактныйТелефон;
//    КонецЕсли; 
Процедура ОбработатьНажатиеПоГиперссылкеРеквизитаКарточкиТорговогоПредложения(ПозицияТорговогоПредложения,
				ИмяРеквизита, ДополнительныйРеквизит, Форма, ЭлементФормы, ОписаниеОповещенияОЗавершении) Экспорт 

	//++ НЕ ГОСИС
	НастройкиПубликации = ТорговыеПредложенияВызовСервераУТ.НастройкиПубликации(ПозицияТорговогоПредложения.ПрайсЛист);
	
	ПубликоватьЦены          = НЕ (НастройкиПубликации = Неопределено) И НастройкиПубликации.ПубликоватьЦены;
	ПубликоватьСрокиПоставки = НЕ (НастройкиПубликации = Неопределено) И НастройкиПубликации.ПубликоватьСрокиПоставки;
	ПубликоватьОстатки       = НЕ (НастройкиПубликации = Неопределено) И НастройкиПубликации.ПубликоватьОстатки;
	Организация              = ?(НастройкиПубликации = Неопределено, 
		ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"), НастройкиПубликации.Организация);
	
	// Таблица Товары
	Если ИмяРеквизита = "Товары.НаименованиеНоменклатуры" Тогда
		
		Объект           = ПозицияТорговогоПредложения.Номенклатура;
		ИмяФормы         = "Справочник.Номенклатура.ФормаОбъекта";
		ИмяЭлементаФормы = "Наименование";
		
	ИначеЕсли ИмяРеквизита = "Товары.Артикул" Тогда
		
		Объект           = ПозицияТорговогоПредложения.Номенклатура;
		ИмяФормы         = "Справочник.Номенклатура.ФормаОбъекта";
		ИмяЭлементаФормы = "Артикул";
		
	ИначеЕсли ИмяРеквизита = "Товары.НаименованиеУпаковки" Тогда
		
		Объект           = ПозицияТорговогоПредложения.Номенклатура;
		ИмяФормы         = "Справочник.Номенклатура.ФормаОбъекта";
		ИмяЭлементаФормы = "ЕдиницаИзмерения";
		
	ИначеЕсли (ИмяРеквизита = "Товары.Цена" И НЕ ПубликоватьЦены)
		ИЛИ (ИмяРеквизита = "Товары.Наличие" И НЕ ПубликоватьОстатки) Тогда
		
		ТорговыеПредложенияКлиент.ОткрытьФормуНастроекПубликации(ПозицияТорговогоПредложения.ПрайсЛист, Форма, 
			ОписаниеОповещенияОЗавершении);
			
	ИначеЕсли ИмяРеквизита = "Товары.Цена" Тогда
		
		ПозицииТорговыхПредложений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПозицияТорговогоПредложения);
		ОткрытьФормуРедактированияПрайсЛиста(ПозицииТорговыхПредложений, Форма, ОписаниеОповещенияОЗавершении);
		
	ИначеЕсли ИмяРеквизита = "Товары.Наличие" Тогда
		
		Объект           = ПозицияТорговогоПредложения.ПрайсЛист;
		ИмяФормы         = "Справочник.СоглашенияСКлиентами.ФормаОбъекта";
		ИмяЭлементаФормы = "Склад";
		
	ИначеЕсли ИмяРеквизита = "Товары.СтавкаНДС" И НЕ ПубликоватьЦены Тогда
		
		ТорговыеПредложенияКлиент.ОткрытьФормуНастроекПубликации(ПозицияТорговогоПредложения.ПрайсЛист, Форма, 
			ОписаниеОповещенияОЗавершении);
		
	ИначеЕсли ИмяРеквизита = "Товары.СтавкаНДС" Тогда
			
		Объект           = ПозицияТорговогоПредложения.Номенклатура;
		ИмяФормы         = "Справочник.Номенклатура.ФормаОбъекта";
		ИмяЭлементаФормы = "СтавкаНДС";
		
	ИначеЕсли ИмяРеквизита = "Товары.СрокПоставки" И НЕ ПубликоватьСрокиПоставки Тогда
		
		ТорговыеПредложенияКлиент.ОткрытьФормуНастроекПубликации(ПозицияТорговогоПредложения.ПрайсЛист, Форма, 
			ОписаниеОповещенияОЗавершении);
		
	ИначеЕсли ИмяРеквизита = "Товары.СрокПоставки" Тогда
			
		Объект           = ПозицияТорговогоПредложения.ПрайсЛист;
		ИмяФормы         = "Справочник.СоглашенияСКлиентами.ФормаОбъекта";
		ИмяЭлементаФормы = "СрокПоставки";
		
	КонецЕсли;
	
	// Таблица ПрайсЛистыСлужебный
	Если ИмяРеквизита = "ПрайсЛистыСлужебный.НаименованиеОрганизации" Тогда
		
		Объект           = Организация;
		ИмяФормы         = "Справочник.Организации.ФормаОбъекта";
		ИмяЭлементаФормы = "НаименованиеПолное";
		
	ИначеЕсли ИмяРеквизита = "ПрайсЛистыСлужебный.ИННОрганизации" Тогда
		
		Объект           = Организация;
		ИмяФормы         = "Справочник.Организации.ФормаОбъекта";
		ИмяЭлементаФормы = "ИНН";
		
	ИначеЕсли ИмяРеквизита = "ПрайсЛистыСлужебный.КППОрганизации" Тогда
		
		Объект           = Организация;
		ИмяФормы         = "Справочник.Организации.ФормаОбъекта";
		ИмяЭлементаФормы = "КПП";
		
	КонецЕсли;

	// Таблица Контакты
	Если ИмяРеквизита = "Контакты.ПредставлениеКонтакта" Тогда
		
		Объект           = ПозицияТорговогоПредложения.ПрайсЛист;
		ИмяФормы         = "Справочник.СоглашенияСКлиентами.ФормаОбъекта";
		ИмяЭлементаФормы = "Менеджер";			
		
	КонецЕсли;
	
	Если ИмяРеквизита = "Контакты.Телефон" Тогда
		
		Менеджер = ТорговыеПредложенияВызовСервераУТ.ПолучитьМенеджера(ПозицияТорговогоПредложения.ПрайсЛист);
		Если Менеджер <> Неопределено Тогда
			Объект           = Менеджер;
			ИмяФормы         = "Справочник.ФизическиеЛица.ФормаОбъекта";
		Иначе
			Объект           = ПозицияТорговогоПредложения.ПрайсЛист;
			ИмяФормы         = "Справочник.СоглашенияСКлиентами.ФормаОбъекта";
			ИмяЭлементаФормы = "Менеджер";			
		КонецЕсли;
		
	КонецЕсли;
	
	// Изображения
	Если ИмяРеквизита = "Изображения.ФайлИзображения" Тогда
		
		Объект           = ПозицияТорговогоПредложения.Номенклатура;
		ИмяФормы         = "Справочник.Номенклатура.ФормаОбъекта";
		ИмяЭлементаФормы = "ФайлКартинки";
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ИмяФормы) И ЗначениеЗаполнено(Объект) Тогда

		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Ключ", Объект);
		
		ФормаОбъекта = ОткрытьФорму(ИмяФормы, ПараметрыОткрытияФормы, Форма, , , , ОписаниеОповещенияОЗавершении, 
			РежимОткрытияОкнаФормы.Независимый);

	КонецЕсли;
		
	Если ФормаОбъекта <> Неопределено И НЕ ПустаяСтрока(ИмяЭлементаФормы) Тогда
		
		ЭлементФормы = ФормаОбъекта.Элементы.Найти(ИмяЭлементаФормы);
		Если ФормаОбъекта.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда
			ФормаОбъекта.Элементы.ГруппаГруппировкаЛевоПраво.Видимость = Истина;
		КонецЕсли;
		Если ЭлементФормы <> Неопределено Тогда
			ФормаОбъекта.ТекущийЭлемент = ЭлементФормы;
		КонецЕсли;
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Вызывает диалог интерактивного массового исправления причин исключения позиций торговых предложений
//    из публикации.
//
// Вызывается для причин, описанных в методе ОпределитьОбрабатываемыеПричиныИсключенияИзПубликации общего
//    модуля ТорговыеПредложенияПереопределяемый.
//
// Параметры:
//  Причина                       - ОпределяемыйТип.ПричиныИсключенияИзПубликацииБизнесСеть     - причина
//        исключения из публикации, на гиперссылку который нажал пользователь.
//  ПрайсЛист                     - ОпределяемыйТип.ТорговоеПредложение - отбор по торговому предложению, в котором
//            находится пользователь в форме списка ошибок.
//  ПозицииТорговыхПредложений    - Массив из Структура, Неопределено - позиции торговых предложений для просмотра.
//            В случае, если отбор по позициям торговых предложений не задан следует, в параметре передается Неопределено.
//            В случае, если отбор по позициям торговых предложений задан, то структура со следующими ключами:
//     * ПрайсЛист - ОпределяемыйТип.ТорговоеПредложение - прайс-лист позиции торгового предложения
//     * Номенклатура - ОпределяемыйТип.НоменклатураБЭД - номенклатура позиции торгового предложения
//     * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика позиции торгового предложения
//     * Упаковка - ОпределяемыйТип.УпаковкаНоменклатурыБЭД - упаковка позиции торгового предложения
//  Форма                         - ФормаКлиентскогоПриложения - форма карточки торгового предложения, на которой
//            была нажата гиперссылка.
//  ЭлементФормы                  - ПолеФормы - элемент формы, нажатие на которое вызвало обработчик
//            была нажата гиперссылка.
//  ОписаниеОповещенияОЗавершении - ОписаниеОповещения - обработчик, который требуется вызвать
//            при окончании редактирования значения реквизита. Данный обработчик заново формирует карточку
//            торгового предложения.
//
// Пример:
//    Если Причина =
//        ПредопределенноеЗначение("Перечисление._ДемоПричиныИсключенияИзПубликации.ОтсутствуетНаСкладе") Тогда
//        ОткрытьФорму("Отчет._ДемоОстаткиТоваров.ФормаОбъекта", Контекст, Форма, Новый УникальныйИдентификатор, , , 
//            ОписаниеОповещенияОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//    ИначеЕсли Причина =
//        ПредопределенноеЗначение("Перечисление._ДемоПричиныИсключенияИзПубликации.ОтсутствуетНаСкладе") Тогда
//        ОткрытьФорму("РегистрСведений.ПрайсЛист.ФормаСписка", Контекст, Форма, Новый УникальныйИдентификатор, , , 
//            ОписаниеОповещенияОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//    КонецЕсли; 
//
Процедура ОбработатьНажатиеПоГиперссылкеПричиныИсключенияИзПубликации(Причина, ПрайсЛист, ПозицииТорговыхПредложений,
				Форма, ЭлементФормы, ОписаниеОповещенияОЗавершении) Экспорт 

	//++ НЕ ГОСИС
	Если ПозицииТорговыхПредложений <> Неопределено Тогда
		ОткрытьФормуРедактированияПрайсЛиста(ПозицииТорговыхПредложений, Форма, ОписаниеОповещенияОЗавершении)
	КонецЕсли;
	//-- НЕ ГОСИС

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПрограммныйИнтерфейсУП

// Открывает форму поиска торговых предложений по списку товаров.
//
// Параметры:
//  ОписаниеКоманды - Структура - описание команды.
//
Функция ОткрытьПоискТоваровПоСписку(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	//++ НЕ ГОСИС
	ПараметрКоманды = Новый Массив();
	Если НЕ ПараметрыВыполнения.ОписаниеКоманды.МножественныйВыбор Тогда
		ПараметрКоманды.Добавить(МассивСсылок);
	Иначе
		ПараметрКоманды = МассивСсылок;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ПараметрыКоманды", ПараметрКоманды);
	
	ОткрытьФорму("Обработка.ТорговыеПредложения.Форма.ПоискПоТоварам",СтруктураРеквизитов);
	//-- НЕ ГОСИС
	
КонецФункции

Процедура ОткрытьФормуРедактированияПрайсЛиста(ПозицииТорговыхПредложений, Форма, ОписаниеОповещенияОЗавершении)

	//++ НЕ ГОСИС
	ДанныеРедактированияПрайсЛиста = ТорговыеПредложенияВызовСервераУТ.ДанныеРедактированияПрайсЛиста(ПозицииТорговыхПредложений);
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ДанныеРедактированияПрайсЛиста", ДанныеРедактированияПрайсЛиста);
	
	ОткрытьФорму("Обработка.ПрайсЛист.Форма.Форма", ПараметрыОткрытияФормы, Форма, , , ,
		ОписаниеОповещенияОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти