#Область ПрограммныйИнтерфейс

// Выполняет печать этикеток обуви по переданным данным печати.
// 
// Параметры:
// 	ДанныеПечати - Структура - данные для печати
// 	Форма - ФормаКлиентскогоПриложения - Форма источник вызова печати
Процедура НапечататьЭтикеткиИСМП(ДанныеПечати, Форма) Экспорт
	
	СтандартнаяОбработка = Истина;
	ПечатьЭтикетокИСМПКлиентПереопределяемый.ПечатьЭтикеткиИСМП(ДанныеПечати, Форма, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка Тогда
		
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка"));
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("СтруктураДанных", ДанныеПечати);
		ПараметрыПечати.Вставить("КоличествоЭкземпляров" , 1);
		ПараметрыПечати.Вставить("КаждаяЭтикеткаНаНовомЛисте" , ДанныеПечати.КаждаяЭтикеткаНаНовомЛисте);
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"РегистрСведений.ПулКодовМаркировкиСУЗ",
			"ЭтикеткаКодМаркировкиИСМП",
			ПараметрКоманды,
			ПечатьЭтикетокИСМПКлиентСервер.ВладелецФормыВерхнегоУровня(Форма),
			ПараметрыПечати);
		
	КонецЕсли;
	
КонецПроцедуры

// Выводит переданный по адресу во временном харнищие табличный документ
// 
// Параметры:
// 	ТабличныйДокумент - ТабличныйДокумент - Сформированный табличный документ с кодами маркировки
// 	Форма - ФормаКлиентскогоПриложения - владелец открываемой формы для печати
// 	СразуНаПринтер - Булево - отправлять непостредственно на принтер
//
Процедура ВывестиНаПечатьТабличныйДокумент(ТабличныйДокумент, Форма, СразуНаПринтер=Ложь) Экспорт
	
	Если СразуНаПринтер Тогда
		ТабличныйДокумент.Напечатать();
		Возврат;
	КонецЕсли;
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка"));
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ТабличныйДокумент", ТабличныйДокумент);
	ПараметрыПечати.Вставить("КоличествоЭкземпляров", 1);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Обработка.РаботаСКМПриПеремаркировкеТоваровИСМП",
		"ТабличныйДокумент",
		ПараметрКоманды,
		ПечатьЭтикетокИСМПКлиентСервер.ВладелецФормыВерхнегоУровня(Форма),
		ПараметрыПечати);
	
КонецПроцедуры

// Резервирует и выполняет печать нового кода маркировки. Последовательно запрашивает данные, которых недостаточно
// - Задает вопрос о необходимости записать объект для резервирования.
// - Запрашивает шаблон этикетки у пользователя.
// 
// Параметры:
// 	Результат - Произвольный - результаты переданных данных из других форм и обработчиков оповещений
// 	ДополнительныеПараметры - См. ПечатьЭтикетокИСМПКлиент.СтруктураПараметровПечатиНовогоКодаМаркировки
Процедура РаспечататьНовыйКодМаркировки(Результат, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещенияДействия = Новый ОписаниеОповещения(
		"РаспечататьНовыйКодМаркировки", ЭтотОбъект, ДополнительныеПараметры);
	
	Если ДополнительныеПараметры.Действие = "Начало" Тогда
		
		Если ЗначениеЗаполнено(ДополнительныеПараметры.Документ) Тогда
			ДополнительныеПараметры.Действие = "ВыбратьШаблон";
			ВыполнитьОбработкуОповещения(ОписаниеОповещенияДействия, "");
		Иначе
			ТекстВопроса = Нстр("ru = 'Для резервирования нового кода маркировки документ будет записан, продолжить?'");
			ДополнительныеПараметры.Действие = "Запись";
			ПоказатьВопрос(ОписаниеОповещенияДействия, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
		
	ИначеЕсли ДополнительныеПараметры.Действие = "УстановитьЭтикеткуИПечать" Тогда
		
		Если Результат = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры.СтруктураПечатиЭтикетки, Результат.ДанныеВыбора);
		ДополнительныеПараметры.СтруктураПечатиЭтикетки.Шаблон = Результат.ДанныеВыбора.ШаблонМаркировки;
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, Результат.ДанныеВыбора);
		ДополнительныеПараметры.Шаблон = Результат.ДанныеВыбора.ШаблонМаркировки;
		
		ДанныеДляПечати = ПечатьЭтикетокИСМПКлиентСервер.ДанныеДляПечатиЭтикеток(
			ДополнительныеПараметры.СтруктураПечатиЭтикетки,
			ДополнительныеПараметры.Форма,
			ДополнительныеПараметры.Документ,
			Результат.ДополнитьПолныйКодМаркировки);
		
		СтруктураРезультата = ПечатьЭтикетокИСМПВызовСервера.ПечатьЭтикетокСРезервированиемПоДокументу(
			ДанныеДляПечати);
		Если СтруктураРезультата = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ВывестиНаПечатьТабличныйДокумент(СтруктураРезультата.ТабличныйДокумент, ДополнительныеПараметры.Форма, Результат.ДанныеВыбора.СразуНаПринтер);
		
		Если ДополнительныеПараметры.Оповещение <> Неопределено Тогда
			
			ДанныеОповещения = Новый Структура();
			ДанныеОповещения.Вставить("РезультатРезервирования", СтруктураРезультата.РезультатРезервирования);
			ДанныеОповещения.Вставить("СохраняемыеНастройки",    Результат);
			
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.Оповещение, ДанныеОповещения);
			
		КонецЕсли;
		
	ИначеЕсли ДополнительныеПараметры.Действие = "ВыбратьШаблон" Тогда
		
		Если Результат = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ДополнительныеПараметры.Действие = "УстановитьЭтикеткуИПечать";
		
		ПараметрыОткрытия = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ПараметрыОткрытияФормыУточненияДанных();
		ЗаполнитьЗначенияСвойств(ПараметрыОткрытия, ДополнительныеПараметры);
		ПараметрыОткрытия.ШаблонКодаМаркировки = ДополнительныеПараметры.Шаблон;
		ПараметрыОткрытия.РежимПечатиЭтикеток  = Истина;
		ПараметрыОткрытия.Операция             = "ОткрытьФормуУточненияДанных";
		ПараметрыОткрытия.Количество           = ДополнительныеПараметры.Количество;
		
		ПараметрыОткрытияФормыУточненияДанных = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ПараметрыОткрытияФормыУточненияДанных();
		ПараметрыОткрытияФормыУточненияДанных.Операция = "ОткрытьФормуУточненияДанных";
		ПараметрыОткрытияФормыУточненияДанных.ДанныеДляУточненияСведенийПользователя = ПараметрыОткрытия;
		
		ШтрихкодированиеИСКлиент.УточнитьДанныеУПользователя(
			ДополнительныеПараметры.Форма,
			ПараметрыОткрытияФормыУточненияДанных,
			ОписаниеОповещенияДействия);
		
	ИначеЕсли ДополнительныеПараметры.Действие = "Запись" Тогда
		
		Если Не Результат = КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
		Попытка
			ДополнительныеПараметры.Форма.ВладелецФормы.Записать();
		Исключение
			ТекстОшибки = 
				СтрШаблон(
					НСтр("ru = 'Не удалось записать документ по причине: %1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Возврат;
		КонецПопытки;
		ДополнительныеПараметры.Документ = ДополнительныеПараметры.Форма.ВладелецФормы.Объект.Ссылка;
		ДополнительныеПараметры.Действие = "ВыбратьШаблон";
		ВыполнитьОбработкуОповещения(ОписаниеОповещенияДействия, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// Резервирует и выполняет печать нового кода маркировки. Последовательно запрашивает данные, которых недостаточно
// - Задает вопрос о необходимости записать объект для резервирования.
// - Запрашивает шаблон этикетки у пользователя.
// 
// Параметры:
// 	ШтрихкодУпаковки - Структура - данные для печати штрихкода упаковки
// 	Форма - ФормаКлиентскогоПриложения - источник вызова
// 	ШаблонЭтикеткиУпаковки - Произвольный - шаблон этикетки упаковки
Процедура РаспечататьНовыйКодУпаковки(ШтрихкодУпаковки, Форма, ШаблонЭтикеткиУпаковки) Экспорт
	
		ТабличныйДокумент = ПечатьЭтикетокИСМПВызовСервера.РаспечататьНовыйКодУпаковки(
			ШтрихкодУпаковки,
			ШаблонЭтикеткиУпаковки);
		
		Если ТабличныйДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		СразуНаПринтер = Ложь;
		Если Форма.ДанныеВыбораПоМаркируемойПродукции <> Неопределено Тогда
			СразуНаПринтер = Форма.ДанныеВыбораПоМаркируемойПродукции.СразуНаПринтер;
		КонецЕсли;
		ВывестиНаПечатьТабличныйДокумент(ТабличныйДокумент, Форма, СразуНаПринтер);
	
КонецПроцедуры

// Выполняет печать переданного кода маркировки. Код маркировки должен присутствовать в регистре "ПулКодовМаркировкиСУЗ".
// 
// Параметры:
// 	ДанныеШтрихкода - Структура - Данные штрихкода, который нужно вывести на печать.
// 	ДополнитьПолныйКодМаркировки - Строка - Содержит идентификатор применения, который требуется дополнить у полного кода маркировки.
//                                          Например, если полный код маркировки требуется дополнить весом, то содержит "3103".
Процедура РаспечататьСуществующийКодМаркировки(ДанныеШтрихкода, ДополнитьПолныйКодМаркировки) Экспорт
	
	ОбъектыПечати = Новый Массив;
	
	ПараметрыШтрихкода = ПечатьЭтикетокИСМПКлиентСервер.СтруктураПечатиЭтикетки();
	ЗаполнитьЗначенияСвойств(ПараметрыШтрихкода, ДанныеШтрихкода);
	
	ПараметрыШтрихкода.Количество        = 1;
	ПараметрыШтрихкода.УчетноеКоличество = ДанныеШтрихкода.Количество;
	
	ОбъектыПечати.Добавить(ПараметрыШтрихкода);
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("ОбъектыПечати",               ОбъектыПечати);
	ДанныеДляПечати.Вставить("Документ",                    Неопределено);
	ДанныеДляПечати.Вставить("КаждаяЭтикеткаНаНовомЛисте",  Ложь);
	ДанныеДляПечати.Вставить("ПакетнаяПечать",              Ложь);
	ДанныеДляПечати.Вставить("РазрешитьПовторнуюПечать",    Истина);
	ДанныеДляПечати.Вставить("РежимПечати",                 "Выборочно");
	ДанныеДляПечати.Вставить("ДополнитьПолныйКодМаркировки", ДополнитьПолныйКодМаркировки);

	НапечататьЭтикеткиИСМП(ДанныеДляПечати, ЭтотОбъект);
	
КонецПроцедуры

//Получает данные для печати этикеток ИС МП из справочника штрихкодов упаковок
//
// Параметры:
//	ОписаниеКоманды - Структура - структура с описанием команды.
// Возвращаемое значение:
// 	Неопределено - Описание
Функция ПечатьШтрихкодыУпаковокИСМП(ОписаниеКоманды) Экспорт
	
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("РежимПечати", "Выборочно");
	
	ОчиститьСообщения();
	
	МассивШаблоновКодовМаркировок = Новый Массив();
	
	ОбъектыПечати = ПечатьЭтикетокИСМПВызовСервера.ДанныеДляПечатиШтрихкодовУпаковокИСМП(
		ОписаниеКоманды.Идентификатор,
		ОписаниеКоманды.ОбъектыПечати,
		МассивШаблоновКодовМаркировок);
	
	ДанныеДляПечати.Вставить("ОбъектыПечати", ОбъектыПечати);
	
	Если ДанныеДляПечати.ОбъектыПечати.Количество() = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru='Нет данных для печати этикеток.'"));
		Возврат Неопределено;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура();
	ПараметрыФормыВыбораШаблона = Новый Структура();
	ПараметрыФормыВыбораШаблона.Вставить("Шаблоны", МассивШаблоновКодовМаркировок);
	
	ДополнительныеПараметры.Вставить("Параметры", ПараметрыФормыВыбораШаблона);
	СтандартнаяОбработка = Истина;
	
	ПечатьЭтикетокИСМПКлиентПереопределяемый.ОткрытьФормуВыбораШаблонаЭтикеткиИСМППоДаннымПечати(
		ДанныеДляПечати, ОписаниеКоманды.Форма, СтандартнаяОбработка, ДополнительныеПараметры);
	
	Если СтандартнаяОбработка Тогда
		
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка"));
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("СтруктураДанных", ДанныеДляПечати);
		ПараметрыПечати.Вставить("КоличествоЭкземпляров" , 1);
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Справочник.ШтрихкодыУпаковокТоваров",
			"ЭтикеткаКодМаркировкиИСМП",
			ПараметрКоманды,
			ПечатьЭтикетокИСМПКлиентСервер.ВладелецФормыВерхнегоУровня(ОписаниеКоманды.Форма),
			ПараметрыПечати);
			
	КонецЕсли;
	
КонецФункции

// Возвращает новую структуру параметров для использования в процедуре РаспечататьНовыйКодМаркировки.
// 
// Параметры:
// 	СтруктураПечати - см. ПечатьЭтикетокИСМПКлиентСервер.СтруктураПечатиЭтикетки
// 	Форма - ФормаКлиентскогоПриложения - форма, из которой осуществляется вызов
// 	Оповещение - ОписаниеОповещения - Оповещение, которое вызывается на клиенте, передается результат резервирования
// 	нового кода маркировки.
// Возвращаемое значение:
// 	Структура - Описание:
// * СтруктураПечати - См. ПечатьЭтикетокИСМПКлиентСервер.СтруктураПечатиЭтикетки.
// * Форма - ФормаКлиентскогоПриложения - форма, из которой осуществляется вызов.
// * Оповещение - ОписаниеОповещения - Оповещение, которое вызывается на клиенте, передается результат резервирования.
//
Функция СтруктураПараметровПечатиНовогоКодаМаркировки(СтруктураПечати, Форма, Оповещение = Неопределено) Экспорт
	
	СтруктураПараметров = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ПараметрыОткрытияФормыУточненияДанных();
	СтруктураПараметров.Вставить("Оповещение",              Оповещение);
	СтруктураПараметров.Вставить("СтруктураПечатиЭтикетки", СтруктураПечати);
	СтруктураПараметров.Вставить("Действие",                "Начало");
	СтруктураПараметров.Вставить("Форма",                   Форма);
	СтруктураПараметров.Вставить("Организация",             Неопределено);
	СтруктураПараметров.Вставить("ВидПродукции",            Неопределено);
	СтруктураПараметров.Вставить("Шаблон",                  Неопределено);
	СтруктураПараметров.Вставить("Шаблоны",                 Новый Массив());
	СтруктураПараметров.Вставить("Количество",              Неопределено);
	СтруктураПараметров.Шаблоны = ИнтеграцияИСМПКлиентСервер.ШаблоныКодовПоНоменклатуре(
		СтруктураПечати.Номенклатура).ВыгрузитьЗначения();
	
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти