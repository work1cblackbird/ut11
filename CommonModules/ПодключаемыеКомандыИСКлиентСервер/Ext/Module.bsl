#Область ПрограммныйИнтерфейс

// Вставить вызов в точках изменения видимости команд (групп команд) по документу-основанию
//
// Параметры:
//   Форма  - ФормаКлиентскогоПриложения     - форма-источник вызова.
//
Процедура УправлениеВидимостьюКомандПодключенныхКОбъекту(Форма) Экспорт
	
	КомандыОбъекта = КомандыОбъекта(Форма.ИмяФормы);
	
	ОпределитьКомандыДляУправленияВидимостью(Форма, КомандыОбъекта);
	Если Не УправлениеВидимостьюПоУмолчанию(Форма) Тогда
		ПриНастройкеВидимостиКоманд(Форма, КомандыОбъекта);
	КонецЕсли;
	
КонецПроцедуры

// Добавить команду в подменю "Оформить".
// 
// Параметры:
//  СтруктураКоманд - Структура - Структура команд:
//   * ОформитьИС - Массив Из См. ОписаниеКоманды - команды оформления основания
//   * ВыбратьИС  - Массив Из См. ОписаниеКоманды - команды выбора основания
//  ИмяМетаданныхДокумента - Строка - Имя метаданных документа
//  ПредставлениеМетаданныхДокумента - Строка - Представление метаданных документа
//  СтрокаФункциональныхОпций - Строка - Строка функциональных опций
Процедура ДобавитьКомандуОформить(СтруктураКоманд, ИмяМетаданныхДокумента, ПредставлениеМетаданныхДокумента, СтрокаФункциональныхОпций = "") Экспорт
	
	ГруппаКоманд = "ОформитьИС";
	
	ОписаниеКоманды = ОписаниеКоманды();
	ОписаниеКоманды.ИмяМетаданных       = ИмяМетаданныхДокумента;
	ОписаниеКоманды.Представление       = ПредставлениеМетаданныхДокумента;
	ОписаниеКоманды.ФункциональныеОпции = СтрокаФункциональныхОпций;
	ОписаниеКоманды.Идентификатор       = ГруппаКоманд + ИмяМетаданныхДокумента;
	
	СтруктураКоманд.ОформитьИС.Добавить(ОписаниеКоманды);
	
КонецПроцедуры

// Добавить команду в подменю "Выбрать".
// 
// Параметры:
//  СтруктураКоманд - Структура - Структура команд:
//   * ОформитьИС - Массив Из См. ОписаниеКоманды - команды оформления основания
//   * ВыбратьИС  - Массив Из См. ОписаниеКоманды - команды выбора основания
//  ИмяМетаданныхДокумента - Строка - Имя метаданных документа
//  ПредставлениеМетаданныхДокумента - Строка - Представление метаданных документа
//  СтрокаФункциональныхОпций - Строка - Строка функциональных опций
Процедура ДобавитьКомандуВыбрать(СтруктураКоманд, ИмяМетаданныхДокумента, ПредставлениеМетаданныхДокумента, СтрокаФункциональныхОпций = "") Экспорт
	
	ГруппаКоманд = "ВыбратьИС";
	
	ОписаниеКоманды = ОписаниеКоманды();
	ОписаниеКоманды.ИмяМетаданных       = ИмяМетаданныхДокумента;
	ОписаниеКоманды.Представление       = ПредставлениеМетаданныхДокумента;
	ОписаниеКоманды.ФункциональныеОпции = СтрокаФункциональныхОпций;
	ОписаниеКоманды.Идентификатор       = ГруппаКоманд + ИмяМетаданныхДокумента;
	ОписаниеКоманды.Вставить("РежимЗаписи", "НеЗаписывать");
	
	СтруктураКоманд.ВыбратьИС.Добавить(ОписаниеКоманды);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Команды объекта.
// 
// Параметры:
//  ИмяФормы - Строка - Имя формы
// 
// Возвращаемое значение:
//  Структура - Команды объекта
Функция КомандыОбъекта(ИмяФормы) Экспорт
	
	Результат = ПустыеГруппыКоманд();
	ПриОпределенииКоманд(ИмяФормы, Результат);
	ПодключаемыеКомандыИСКлиентСерверПереопределяемый.ПриОпределенииКоманд(ИмяФормы, Результат);
	Возврат Результат;
	
КонецФункции

// Добавляемые виды подключаемых команд.
// 
// Возвращаемое значение:
//  Массив Из См. ВидПодключаемыхКоманд - Виды подключаемых команд
Функция ВидыПодключаемыхКоманд() Экспорт
	
	Результат = Новый Массив;
	
	ГруппаКоманд = ВидПодключаемыхКоманд();
	ГруппаКоманд.Имя        = "ОформитьИС";
	ГруппаКоманд.ИмяПодменю = "КомандыЗаполненияОснованияНовыеДокументы";
	ГруппаКоманд.Заголовок  = НСтр("ru = 'Оформить'");
	ГруппаКоманд.Обработчик = "ПодключаемыеКомандыИСКлиент.ОбработатьДействиеОформленияОснования";
	
	Результат.Добавить(ГруппаКоманд);
	
	ГруппаКоманд = ВидПодключаемыхКоманд();
	ГруппаКоманд.Имя        = "ВыбратьИС";
	ГруппаКоманд.ИмяПодменю = "КомандыЗаполненияОснованияВыборДокументов";
	ГруппаКоманд.Заголовок  = НСтр("ru = 'Выбрать'");
	ГруппаКоманд.Обработчик = "ПодключаемыеКомандыИСКлиент.ОбработатьДействиеВыбораОснования";
	
	Результат.Добавить(ГруппаКоманд);
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьСоответствиеПолейДокументовОснований(Форма, ТипОбъекта, СоответствиеПолей) Экспорт
	
	Если СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ФормированиеПартийЗЕРНО") Тогда
		
		СоответствиеПолей.Вставить("ВнесениеСведенийОСобранномУрожаеЗЕРНО", Новый Структура);
		СоответствиеПолей["ВнесениеСведенийОСобранномУрожаеЗЕРНО"].Вставить("Организация", "Организация");
	
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.АктПостановкиНаБалансЕГАИС") Тогда
		
		СоответствиеПолей.Вставить("ТТНВходящаяЕГАИС", Новый Структура);
		СоответствиеПолей["ТТНВходящаяЕГАИС"].Вставить("ОрганизацияЕГАИС", "Грузополучатель");
	
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ОтчетОбИмпортеЕГАИС") Тогда
		
		СоответствиеПолей.Вставить("УведомлениеОПланируемомИмпортеЕГАИС", Новый Структура);
		СоответствиеПолей["УведомлениеОПланируемомИмпортеЕГАИС"].Вставить("ОрганизацияЕГАИС", "ОрганизацияЕГАИС");
	
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ") Тогда
		
		СоответствиеПолей.Вставить("ПеремаркировкаТоваровИСМП", Новый Соответствие);
		СоответствиеПолей["ПеремаркировкаТоваровИСМП"].Вставить("Организация", "Организация");
		
		СоответствиеПолей.Вставить("МаркировкаТоваровИСМП", Новый Соответствие);
		СоответствиеПолей["МаркировкаТоваровИСМП"].Вставить("Организация",   "Организация");
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.УточнениеСведенийОКодахМаркировкиИСМП") Тогда
		
		СоответствиеПолей.Вставить("МаркировкаТоваровИСМП", Новый Соответствие);
		СоответствиеПолей["МаркировкаТоваровИСМП"].Вставить("Организация", "Организация");
		
	КонецЕсли;
	
	ПодключаемыеКомандыИСКлиентСерверПереопределяемый.ЗаполнитьСоответствиеПолейДокументовОснований(Форма, ТипОбъекта, СоответствиеПолей);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОпределитьКомандыДляУправленияВидимостью(Форма, Команды)
	
	//Не добавлять условия видимости штатным способом!
	Если Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды.Количество() = 0 Тогда 
		Для Каждого КомандаФормы Из Форма.Команды Цикл
			Для Каждого ИмяГруппИКоманд Из Команды Цикл
				Для Каждого ДанныеКоманды Из ИмяГруппИКоманд.Значение Цикл
					Если СтрНайти(КомандаФормы.Имя, ДанныеКоманды.Идентификатор) > 0 Тогда
						ДанныеКоманды.ИмяКомандыФормы = КомандаФормы.Имя;
						Если Форма.Элементы[КомандаФормы.Имя].Видимость Тогда
							Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды.Вставить(ДанныеКоманды.ИмяКомандыФормы);
							Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды[ДанныеКоманды.ИмяКомандыФормы] = Новый Структура("ГруппаКоманд",ИмяГруппИКоманд.Ключ);
							ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды[ДанныеКоманды.ИмяКомандыФормы],ДанныеКоманды);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Если Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды.Количество() = 0 Тогда 
			Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды.Вставить("ЗаполнениеПроведено");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Управление видимостью команд по документу-основанию по умолчанию:
//   Группы скрываются если документ-основание выбран, отображаются если пуст.
//   Группы скрываются при недоступности ввода и выбора документа-основания.
//   Группы скрываются в режиме "Только просмотр"
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - источник вызова.
// Возвращаемое значение:
//   Булево - обработка безусловно завершена (элементы скрыты).
//
Функция УправлениеВидимостьюПоУмолчанию(Форма)
	
	Если ЗначениеЗаполнено(Форма.Объект.ДокументОснование) Тогда
		Форма.Элементы.ГруппаКомандыЗаполненияОснования.Видимость = Ложь;
		Возврат Истина;
	ИначеЕсли Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды.Свойство("ЗаполнениеПроведено") Тогда
		Форма.Элементы.ГруппаКомандыЗаполненияОснования.Видимость = Ложь;
		Возврат Истина;
	ИначеЕсли Форма.ТолькоПросмотр Тогда
		Форма.Элементы.ГруппаКомандыЗаполненияОснования.Видимость = Ложь;
		Возврат Истина;
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "НетМетаданныхОснования")
		И Форма.НетМетаданныхОснования Тогда
		Форма.Элементы.ГруппаКомандыЗаполненияОснования.Видимость = Ложь;
		Возврат Истина;
	Иначе
		Форма.Элементы.ГруппаКомандыЗаполненияОснования.Видимость = Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура ПриНастройкеВидимостиКоманд(Форма, КомандыОбъекта)
	
	ИмяФормы = Форма.ИмяФормы;
	
	Если ИмяФормы = "Документ.ОформлениеСДИЗЗЕРНО.Форма.ФормаДокумента" Тогда
		
		Для Каждого КлючИЗначение Из Форма.НастройкиВыполненияПодключаемыхКомандИС.Команды Цикл
			
			Если КлючИЗначение.Значение.ИмяМетаданных = "ОформлениеСДИЗЗЕРНО" Тогда
				Форма.Элементы[КлючИЗначение.Ключ].Видимость = Форма.Объект.Корректировочный;
			Иначе
				Форма.Элементы[КлючИЗначение.Ключ].Видимость = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПодключаемыеКомандыИСКлиентСерверПереопределяемый.ПриНастройкеВидимостиКоманд(Форма, КомандыОбъекта);
	
КонецПроцедуры

#Область ЗаполнениеКомандПоГруппам

Функция ПустыеГруппыКоманд()
	
	Результат = Новый Структура;
	Для Каждого ВидКоманды Из ВидыПодключаемыхКоманд() Цикл
		Результат.Вставить(ВидКоманды.Имя,Новый Массив);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

// При определении команд.
// 
// Параметры:
//  ИмяФормы - Строка - Имя формы объекта ГосИС, на которую добавляются команды ввода/выбора основания
//  Команды - Массив Из См. ОписаниеКоманды - Добавляемые на форму команды (библиотечная часть)
Процедура ПриОпределенииКоманд(ИмяФормы, Команды)
	
	Если ИмяФормы = "Документ.МаркировкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПВЕТИСКлиентСервер.ПриОпределенииКоманд(ИмяФормы, Команды);
	ИначеЕсли ИмяФормы = "Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "МаркировкаТоваровИСМП", НСтр("ru = 'Маркировка товаров ИС МП'"));
		ДобавитьКомандуВыбрать(Команды, "ПеремаркировкаТоваровИСМП", НСтр("ru = 'Перемаркировка товаров ИС МП'"));
	ИначеЕсли ИмяФормы = "Документ.СписаниеКодовМаркировкиИСМП.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "ЗаказНаЭмиссиюКодовМаркировкиСУЗ", НСтр("ru = 'Заказ на эмиссию кодов маркировки'"));
	ИначеЕсли ИмяФормы = "Документ.УточнениеСведенийОКодахМаркировкиИСМП.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "МаркировкаТоваровИСМП", НСтр("ru = 'Маркировка товаров ИС МП'"));
	ИначеЕсли ИмяФормы = "Документ.ФормированиеПартийЗЕРНО.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "ВнесениеСведенийОСобранномУрожаеЗЕРНО", НСтр("ru = 'Внесение сведений о собранном урожае'"));
	ИначеЕсли ИмяФормы = "Документ.АктИнвентаризацииСАТУРН.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "ИмпортПродукцииСАТУРН", НСтр("ru = 'Импорт продукции'"));
	ИначеЕсли ИмяФормы = "Документ.ПланПримененияСАТУРН.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуОформить(Команды, "АктПримененияСАТУРН", НСтр("ru = 'Акт применения'"));
	ИначеЕсли ИмяФормы = "Документ.АктПримененияСАТУРН.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "ПланПримененияСАТУРН",  НСтр("ru = 'План применения'"));
	ИначеЕсли ИмяФормы = "Документ.АктПостановкиНаБалансЕГАИС.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "ТТНВходящаяЕГАИС", НСтр("ru = 'Входящая ТТН ЕГАИС'"));
	ИначеЕсли ИмяФормы = "Документ.ВозвратИзРегистра2ЕГАИС.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "ТТНИсходящаяЕГАИС", НСтр("ru = 'Исходящая ТТН ЕГАИС'"));
	ИначеЕсли ИмяФормы = "Документ.ОтчетОбИмпортеЕГАИС.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "УведомлениеОПланируемомИмпортеЕГАИС", НСтр("ru = 'Уведомление о планируемом импорте ЕГАИС'"));
	ИначеЕсли ИмяФормы = "Документ.ПередачаВРегистр2ЕГАИС.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "ТТНВходящаяЕГАИС", НСтр("ru = 'Входящая ТТН ЕГАИС'"));
	ИначеЕсли ИмяФормы = "Документ.ОформлениеСДИЗЗЕРНО.Форма.ФормаДокумента" Тогда
		ДобавитьКомандуВыбрать(Команды, "ОформлениеСДИЗЗЕРНО", НСтр("ru = 'Оформление СДИЗ'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеСтруктуры

// Описание команды, добавляемой на форму.
// 
// Возвращаемое значение:
//  Структура - Описание команды:
// * ИмяМетаданных - Строка - имя метаданных
// * Представление - Строка - представление метаданных
// * ФункциональныеОпции - Строка - строка функциональных опций
// * Идентификатор - Строка - идентификатор команды
// * ИмяКомандыФормы - Строка - имя команды на форме
Функция ОписаниеКоманды()
	
	ОписаниеКоманды = Новый Структура;
	ОписаниеКоманды.Вставить("ИмяМетаданных",       "");
	ОписаниеКоманды.Вставить("Представление",       "");
	ОписаниеКоманды.Вставить("ФункциональныеОпции", "");
	ОписаниеКоманды.Вставить("Идентификатор",       "");
	ОписаниеКоманды.Вставить("ИмяКомандыФормы",     "");
	Возврат ОписаниеКоманды;
	
КонецФункции

// Описание вида подключаемых команд.
// 
// Возвращаемое значение:
//  Структура - Вид подключаемых команд:
// * Имя - Строка - представление вида команд
// * ИмяПодменю - Строка - имя реквизита расположения группы команд на форме
// * Заголовок - Строка - заголовок группы команд
// * Обработчик - Строка - обработчик группы команд
// * ТипМетаданных - Строка - тип метаданных
Функция ВидПодключаемыхКоманд()
	
	Вид = Новый Структура;
	Вид.Вставить("Имя",           "");
	Вид.Вставить("ИмяПодменю",    "");
	Вид.Вставить("Заголовок",     "");
	Вид.Вставить("Обработчик",    "");
	Вид.Вставить("ТипМетаданных", "Документы");
	Возврат Вид;
	
КонецФункции

#КонецОбласти

#КонецОбласти