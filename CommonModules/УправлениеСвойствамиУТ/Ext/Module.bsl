
#Область СлужебныеПроцедурыИФункции

#Область Серии

// Добавляет в табличную часть формы колонки дополнительных реквизитов и выводит их в связанную таблицу.
//
// Параметры:
//	НастройкиИспользованияСерий - см. Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий.
//	Форма - ФормаКлиентскогоПриложения - форма, содержащая табличную часть, в которую необходимо добавить дополнительные реквизиты:
//		* Элементы - ВсеЭлементыФормы - элементы формы.
//	РеквизитТаблица - Строка - путь к данным таблицы, в которую добавляются колонки дополнительных реквизитов.
//	ЭлементТаблица - Строка - имя элемента таблицы формы, в которую добавляются колонки дополнительных реквизитов.
//	ВставитьПередЭлементом - Строка - имя элемента колонки таблицы формы, перед которой будут добавлены колонки
//										дополнительных реквизитов.
//	ТолькоПросмотр - Булево - признак возможности/невозможности редактирования, добавляемых колонок дополнительных
//								реквизитов.
//
Процедура ДобавитьКолонкиДополнительныхРеквизитов(НастройкиИспользованияСерий, Форма, РеквизитТаблица, ЭлементТаблица, ВставитьПередЭлементом = "", ТолькоПросмотр = Ложь) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат;
	КонецЕсли;
	
	ПустойОбъектСерии = Справочники.СерииНоменклатуры.ПустойОбъект(НастройкиИспользованияСерий.ВладелецСерий);
	
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица,".","_");
	ИмяОписания = ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов";
	ИмяНаборов  = ПриведенноеИмяТаблицы + "Свойства_НаборыДополнительныхРеквизитовОбъекта";
	
	Переинициализация = ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, ИмяОписания); 
	
	НаборыСвойствОбъектаТаблица = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(ПустойОбъектСерии, Неопределено);
	НаборыСвойствОбъектаСписок = Новый СписокЗначений;
	
	Для каждого Строка Из НаборыСвойствОбъектаТаблица Цикл
		Если УправлениеСвойствамиСлужебный.ВидыСвойствНабора(Строка.Набор).ДополнительныеРеквизиты Тогда
			НаборыСвойствОбъектаСписок.Добавить(Строка.Набор, Строка.Заголовок);
		КонецЕсли;
	КонецЦикла;
	
	Если Переинициализация Тогда
		Если ОбщегоНазначенияКлиентСервер.СпискиЗначенийИдентичны(НаборыСвойствОбъектаСписок,
																Форма[ИмяНаборов]) Тогда
			// Уже все инициализировано
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	УдаляемыеРеквизитыКолонки = Новый Массив;
	
	Если Не Переинициализация Тогда
		Реквизиты = Новый Массив;
		
		// Создание служебных реквизитов формы
		// Добавление реквизита содержащего используемые наборы дополнительных реквизитов.
		Реквизиты.Добавить(Новый РеквизитФормы(
		ИмяНаборов, Новый ОписаниеТипов("СписокЗначений")));
		
		
		// Добавление реквизита описания создаваемых реквизитов и элементов формы.
		Реквизиты.Добавить(Новый РеквизитФормы(
		ИмяОписания, Новый ОписаниеТипов("ТаблицаЗначений")));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"ИмяРеквизитаЗначение", Новый ОписаниеТипов("Строка"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"Свойство", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"),
		ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"ТипЗначения", Новый ОписаниеТипов("ОписаниеТипов"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"МногострочноеПолеВвода", Новый ОписаниеТипов("Число"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"Удалено", Новый ОписаниеТипов("Булево"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"ЗаполнятьОбязательно", Новый ОписаниеТипов("Булево"), ИмяОписания));
		
		Реквизиты.Добавить(Новый РеквизитФормы(
		"Наименование", Новый ОписаниеТипов("Строка"), ИмяОписания));
			
		Форма.ИзменитьРеквизиты(Реквизиты);
		
	Иначе
		
		ОписаниеСвойств = ЗначенияСвойств(
			ПустойОбъектСерии.ДополнительныеРеквизиты.Выгрузить(),
			Форма[ИмяНаборов],
			Ложь);
			
		Для каждого ОписаниеСвойства Из ОписаниеСвойств Цикл
			ИмяРеквизитаЗначение = ПриведенноеИмяТаблицы +
			    "ДополнительныйРеквизитЗначение_"+
				СтрЗаменить(ВРег(Строка(ОписаниеСвойства.Набор.УникальныйИдентификатор())), "-", "x")
				+ "_"
				+ СтрЗаменить(ВРег(Строка(ОписаниеСвойства.Свойство.УникальныйИдентификатор())), "-", "x");			
			
			УдаляемыеРеквизитыКолонки.Добавить(РеквизитТаблица + "." + ИмяРеквизитаЗначение);	
			Форма.Элементы.Удалить(Форма.Элементы[ИмяРеквизитаЗначение]);
			
		КонецЦикла;
		
	КонецЕсли;
		
	// Сформируем колонки
	Форма[ИмяНаборов] = НаборыСвойствОбъектаСписок;
		
	ОписаниеСвойств = ЗначенияСвойств(
		ПустойОбъектСерии.ДополнительныеРеквизиты.Выгрузить(),
		Форма[ИмяНаборов],
		Ложь);
	ОписаниеСвойств.Колонки.Добавить("ИмяРеквизитаЗначение");
	ОписаниеСвойств.Колонки.Добавить("ИмяУникальнаяЧасть");
	ОписаниеСвойств.Колонки.Добавить("ДополнительноеЗначение");
	ОписаниеСвойств.Колонки.Добавить("Булево");
	
	ОбязательныеДопРеквизитыСерий = НастройкиИспользованияСерий.ОбязательныеДопРеквизиты;
	
	ДобавляемыеРеквизиты = Новый Массив();
	Для каждого ОписаниеСвойства Из ОписаниеСвойств Цикл
		
		ТипЗначенияСвойства = Новый ОписаниеТипов(ОписаниеСвойства.ТипЗначения,
			,,, Новый КвалификаторыСтроки(1024));
		
		// Поддержка строк неограниченной длины.
		ИспользоватьНеограниченнуюСтроку = УправлениеСвойствамиСлужебный.ИспользоватьНеограниченнуюСтроку(
			ТипЗначенияСвойства, ОписаниеСвойства.МногострочноеПолеВвода);
		
		Если ИспользоватьНеограниченнуюСтроку Тогда
			ТипЗначенияСвойства = Новый ОписаниеТипов("Строка");
		КонецЕсли;
		
		ОписаниеСвойства.ИмяУникальнаяЧасть = 
			СтрЗаменить(ВРег(Строка(ОписаниеСвойства.Набор.УникальныйИдентификатор())), "-", "x")
			+ "_"
			+ СтрЗаменить(ВРег(Строка(ОписаниеСвойства.Свойство.УникальныйИдентификатор())), "-", "x");
		
		ОписаниеСвойства.ИмяРеквизитаЗначение =
			ПриведенноеИмяТаблицы + "ДополнительныйРеквизитЗначение_" + ОписаниеСвойства.ИмяУникальнаяЧасть;
		
		Если ОписаниеСвойства.Удалено Тогда
			ТипЗначенияСвойства = Новый ОписаниеТипов("Строка");
		КонецЕсли;
																									
		ОписаниеСвойства.ДополнительноеЗначение =
			УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(ТипЗначенияСвойства);
		
		ОписаниеСвойства.Булево = ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ТипЗначенияСвойства, Тип("Булево"));
		
		ИндексУдаляемого = УдаляемыеРеквизитыКолонки.Найти(РеквизитТаблица + "." + ОписаниеСвойства.ИмяРеквизитаЗначение);
		
		Если ИндексУдаляемого <> Неопределено Тогда
			УдаляемыеРеквизитыКолонки.Удалить(ИндексУдаляемого);
		Иначе
			Реквизит = Новый РеквизитФормы(ОписаниеСвойства.ИмяРеквизитаЗначение, ТипЗначенияСвойства, РеквизитТаблица, ОписаниеСвойства.Наименование, Истина);
			ДобавляемыеРеквизиты.Добавить(Реквизит);
		КонецЕсли;
		
	КонецЦикла;
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты,УдаляемыеРеквизитыКолонки);
	
	// Создание элементов формы.
	ИмяЭлементаДляРазмещения = ЭлементТаблица;
	ЭлементРазмещения = Форма.Элементы[ИмяЭлементаДляРазмещения];
	
	Форма[ИмяОписания].Очистить();
	
	Для Каждого ОписаниеСвойства Из ОписаниеСвойств Цикл
		
		НоваяСтрокаОписания = Форма[ИмяОписания].Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаОписания, ОписаниеСвойства);
		
		НоваяСтрокаОписания.ЗаполнятьОбязательно = (ОбязательныеДопРеквизитыСерий.Найти(НоваяСтрокаОписания.Свойство) <> Неопределено);
		
		Если Не ПустаяСтрока(ВставитьПередЭлементом) Тогда
			Элемент = Форма.Элементы.Вставить(ОписаниеСвойства.ИмяРеквизитаЗначение, Тип("ПолеФормы"), ЭлементРазмещения, Форма.Элементы[ВставитьПередЭлементом]); // ПолеФормы -
		Иначе
			Элемент = Форма.Элементы.Добавить(ОписаниеСвойства.ИмяРеквизитаЗначение, Тип("ПолеФормы"), ЭлементРазмещения); // ПолеФормы -
		КонецЕсли;
		
		Если ОписаниеСвойства.Булево И ПустаяСтрока(ОписаниеСвойства.ФорматСвойства) Тогда
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;;
		Иначе
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.АвтоОтметкаНезаполненного = НоваяСтрокаОписания.ЗаполнятьОбязательно И НЕ ОписаниеСвойства.Удалено;
		КонецЕсли;
		
		Элемент.ПутьКДанным    = РеквизитТаблица + "." + ОписаниеСвойства.ИмяРеквизитаЗначение;
		Элемент.Подсказка      = ОписаниеСвойства.Свойство.Подсказка;
		Элемент.ТолькоПросмотр = ТолькоПросмотр;
		
		Если ОписаниеСвойства.Свойство.МногострочноеПолеВвода > 0 Тогда
			Элемент.МногострочныйРежим = Истина;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ОписаниеСвойства.ФорматСвойства) Тогда
			ФорматнаяСтрока = "";
			Массив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
				ОписаниеСвойства.ФорматСвойства, ";");
			
			Для каждого Подстрока Из Массив Цикл
				Если СтрНайти(Подстрока, "ДП=") > 0 ИЛИ СтрНайти(Подстрока, "DE=") > 0 Тогда
					Продолжить;
				КонецЕсли;
				Если СтрНайти(Подстрока, "ЧН=") > 0 ИЛИ СтрНайти(Подстрока, "NZ=") > 0 Тогда
					Продолжить;
				КонецЕсли;
				Если СтрНайти(Подстрока, "ДФ=") > 0 ИЛИ СтрНайти(Подстрока, "DF=") > 0 Тогда
					Если СтрНайти(Подстрока, "ддд") > 0 ИЛИ СтрНайти(Подстрока, "ddd") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "ддд", "дд");
						Подстрока = СтрЗаменить(Подстрока, "ddd", "dd");
					КонецЕсли;
					Если СтрНайти(Подстрока, "дддд") > 0 ИЛИ СтрНайти(Подстрока, "dddd") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "дддд", "дд");
						Подстрока = СтрЗаменить(Подстрока, "dddd", "dd");
					КонецЕсли;
					Если СтрНайти(Подстрока, "МММ") > 0 ИЛИ СтрНайти(Подстрока, "MMM") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "МММ", "ММ");
						Подстрока = СтрЗаменить(Подстрока, "MMM", "MM");
					КонецЕсли;
					Если СтрНайти(Подстрока, "ММММ") > 0 ИЛИ СтрНайти(Подстрока, "MMMM") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "ММММ", "ММ");
						Подстрока = СтрЗаменить(Подстрока, "MMMM", "MM");
					КонецЕсли;
				КонецЕсли;
				Если СтрНайти(Подстрока, "ДЛФ=") > 0 ИЛИ СтрНайти(Подстрока, "DLF=") > 0 Тогда
					Если СтрНайти(Подстрока, "ДД") > 0 ИЛИ СтрНайти(Подстрока, "DD") > 0 Тогда
						Подстрока = СтрЗаменить(Подстрока, "ДД", "Д");
						Подстрока = СтрЗаменить(Подстрока, "DD", "D");
					КонецЕсли;
				КонецЕсли;
				ФорматнаяСтрока = ФорматнаяСтрока + ?(ФорматнаяСтрока = "", "", ";") + Подстрока;
			КонецЦикла;
			
			Элемент.Формат = ФорматнаяСтрока;
			Элемент.ФорматРедактирования = ФорматнаяСтрока;
		КонецЕсли;
		
		ТипыДополнительныхЗначений = Новый Соответствие;
		ТипыДополнительныхЗначений.Вставить(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"), Истина);
		ТипыДополнительныхЗначений.Вставить(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия"), Истина);
		
		ИспользуетсяТипДополнительныхЗначений = Истина;
		Для Каждого Тип Из ОписаниеСвойства.ТипЗначения.Типы() Цикл
			Если ТипыДополнительныхЗначений.Получить(Тип) = Неопределено Тогда
				ИспользуетсяТипДополнительныхЗначений = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ИспользуетсяТипДополнительныхЗначений Тогда
			Элемент.КнопкаОткрытия = Ложь;
		КонецЕсли;
		
		Если ОписаниеСвойства.ДополнительноеЗначение Тогда
			ПараметрыВыбора = Новый Массив;
			ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец",
				?(ЗначениеЗаполнено(ОписаниеСвойства.ВладелецДополнительныхЗначений),
					ОписаниеСвойства.ВладелецДополнительныхЗначений, ОписаниеСвойства.Свойство)));
			Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКолонкиДополнительныхРеквизитов(Форма, РеквизитТаблица, КолонкаВладельцаСвойств) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат;
	КонецЕсли;
	
	Таблица = ТаблицаПоИмени(Форма, РеквизитТаблица);
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица, ".", "_");
	
	МассивВладельцев = Таблица.Выгрузить(,КолонкаВладельцаСвойств).ВыгрузитьКолонку(КолонкаВладельцаСвойств);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СерииНоменклатурыДополнительныеРеквизиты.Ссылка КАК Серия,
	|	СерииНоменклатурыДополнительныеРеквизиты.Свойство,
	|	СерииНоменклатурыДополнительныеРеквизиты.Значение,
	|	СерииНоменклатурыДополнительныеРеквизиты.ТекстоваяСтрока
	|ИЗ
	|	Справочник.СерииНоменклатуры.ДополнительныеРеквизиты КАК СерииНоменклатурыДополнительныеРеквизиты
	|ГДЕ
	|	СерииНоменклатурыДополнительныеРеквизиты.Ссылка В(&Серии)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Серия
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Серии", МассивВладельцев);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТекущаяСерия = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		СтрокиСвойств = Форма[ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов"].НайтиСтроки(Новый Структура("Свойство", Выборка.Свойство));
		Если СтрокиСвойств.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Серия <> ТекущаяСерия Тогда
			СтрокиСерий = Таблица.НайтиСтроки(Новый Структура(КолонкаВладельцаСвойств, Выборка.Серия));
		КонецЕсли;
		РеквизитЗначение = ?(СтрокиСвойств[0].МногострочноеПолеВвода > 0, Выборка.ТекстоваяСтрока, Выборка.Значение);
		Для Каждого СтрокаСерии Из СтрокиСерий Цикл
			СтрокаСерии[СтрокиСвойств[0].ИмяРеквизитаЗначение] = РеквизитЗначение;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьЗаполнениеДополнительныхРеквизитов(Форма, РеквизитТаблица) Экспорт
	
	ЕстьОшибки = Ложь;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Таблица = ТаблицаПоИмени(Форма, РеквизитТаблица);
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица, ".", "_");
	
	СтруктураПроверяемыхРеквизитов = Новый Структура;
	Для Каждого ТекСтр Из Форма[ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов"] Цикл
		Если ТекСтр.ЗаполнятьОбязательно И НЕ ТекСтр.Удалено Тогда
			СтруктураПроверяемыхРеквизитов.Вставить(ТекСтр.ИмяРеквизитаЗначение);
		КонецЕсли;
	КонецЦикла;
	
	Если СтруктураПроверяемыхРеквизитов.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого ТекСтр Из Таблица Цикл
		Для Каждого Реквизит Из СтруктураПроверяемыхРеквизитов Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтр[Реквизит.Ключ]) Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если ЕстьОшибки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнены обязательные доп. реквизиты серий.'"));
		
	КонецЕсли;
	
	Возврат НЕ ЕстьОшибки;
	
КонецФункции

Процедура ПеренестиДополнительныеРеквизитыИзФормыВОбъект(Объект, Форма, СтрокаТаблицы, РеквизитТаблица) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДополнительныеРеквизиты.Очистить();
	
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица, ".", "_");
	
	Для Каждого ТекСтр Из Форма[ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов"] Цикл
		
		НовСтр = Объект.ДополнительныеРеквизиты.Добавить();
		НовСтр.Свойство = ТекСтр.Свойство;
		
		Если ТекСтр.МногострочноеПолеВвода > 0 Тогда
			НовСтр.ТекстоваяСтрока = СтрокаТаблицы[ТекСтр.ИмяРеквизитаЗначение];
		Иначе
			НовСтр.Значение = СтрокаТаблицы[ТекСтр.ИмяРеквизитаЗначение];
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Функция - Есть доп.реквизиты в таблице
//  Анализирует наличие доп.реквизитов в таблице реквизитов.
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения - Проверяемая форма
//  РеквизитТаблица	 - Строка - Путь к таблице формы с доп.реквизитами
// 
// Возвращаемое значение:
//  Булево - Признак наличия доп.реквизитов в таблице
//
Функция ЕстьДопРеквизитыВТаблице(Форма, РеквизитТаблица) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица,".","_");
	ИмяОписания = ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов";
	
	Если Не ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, ИмяОписания) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ТаблицаПоИмени(Форма, ИмяОписания).Количество() > 0;
	
	
КонецФункции

Функция ПрочитатьДопРеквизитыСерии(Форма, РеквизитТаблица, Серия) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения")
	 ИЛИ Не ЗначениеЗаполнено(Серия) Тогда
		Возврат Новый ФиксированнаяСтруктура;
	КонецЕсли;
	
	ПриведенноеИмяТаблицы = СтрЗаменить(РеквизитТаблица,".","_");
	ИмяОписания = ПриведенноеИмяТаблицы + "Свойства_ОписаниеДополнительныхРеквизитов";
	ТаблицаОписания = ТаблицаПоИмени(Форма, ИмяОписания);
	
	СтруктураДопРеквизитов = Новый Структура;
	Для Каждого ТекСтр Из ТаблицаОписания Цикл
		СтруктураДопРеквизитов.Вставить(ТекСтр.ИмяРеквизитаЗначение, "");
	КонецЦикла;
	
	Для Каждого ТекСтр Из Серия.ДополнительныеРеквизиты Цикл
		
		СтрокиСвойств = ТаблицаОписания.НайтиСтроки(Новый Структура("Свойство", ТекСтр.Свойство));
		Если СтрокиСвойств.Количество() > 0 Тогда
			СтруктураДопРеквизитов.Вставить(
				СтрокиСвойств[0].ИмяРеквизитаЗначение,
				?(СтрокиСвойств[0].МногострочноеПолеВвода > 0, ТекСтр.ТекстоваяСтрока, ТекСтр.Значение));
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый ФиксированнаяСтруктура(СтруктураДопРеквизитов);
	
КонецФункции

// Установить отметку незаполненных свойств.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//  ВладелецСвойств - СправочникОбъект.СерииНоменклатуры - Владелец свойств
Процедура УстановитьОтметкуНезаполненныхСвойств(Форма, ВладелецСвойств) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "Свойства_ОписаниеДополнительныхРеквизитов") Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСвойств = Форма.Свойства_ОписаниеДополнительныхРеквизитов;
	
	ОбязательныеДопРеквизиты = Новый Массив;
	
	ДополнительныеРеквизитыВладельца = УправлениеСвойствами.СвойстваОбъекта(ВладелецСвойств.Ссылка);
	Для Каждого ЭлементОбязательныйРеквизит Из ДополнительныеРеквизитыВладельца Цикл
		
		Если ЭлементОбязательныйРеквизит.ЗаполнятьОбязательно Тогда
			ОбязательныеДопРеквизиты.Добавить(ЭлементОбязательныйРеквизит);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбязательныеДопРеквизитыВидаНоменклатуры = Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий(ВладелецСвойств.ВидНоменклатуры).ОбязательныеДопРеквизиты;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОбязательныеДопРеквизиты, ОбязательныеДопРеквизитыВидаНоменклатуры, Истина);
	
	Для Каждого ТекСвойство Из ТаблицаСвойств Цикл
		
		Если Не ТекСвойство.ЭлементФормыДобавлен
			Или Форма.Элементы[ТекСвойство.ИмяРеквизитаЗначение].Вид <> ВидПоляФормы.ПолеВвода Тогда
			Продолжить;
		КонецЕсли;
		
		ТекСвойство.ЗаполнятьОбязательно = ОбязательныеДопРеквизиты.Найти(ТекСвойство.Свойство) <> Неопределено;
		
		Форма.Элементы[ТекСвойство.ИмяРеквизитаЗначение].АвтоОтметкаНезаполненного =
			ТекСвойство.ЗаполнятьОбязательно
			И Не ТекСвойство.Удалено;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаПоИмени(Форма, РеквизитТаблица)
	
	ПозицияТочки = СтрНайти(РеквизитТаблица, ".");
	
	Если ПозицияТочки = 0 Тогда
		Таблица = Форма[РеквизитТаблица];
	Иначе
		МассивИмен = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РеквизитТаблица,".");
		Таблица = Форма[МассивИмен[0]][МассивИмен[1]];
	КонецЕсли;
	
	Возврат Таблица;
КонецФункции

#КонецОбласти

#Область ВидыНоменклатуры

Процедура ВыполнитьДействияПередЗаписьюДополнительногоРеквизитаПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ЭтоДополнительноеСведение
	 ИЛИ Источник.ДополнительныеСвойства.Свойство("НеОбновлятьШаблоныНаименований") Тогда
		Возврат;
	КонецЕсли;
	
	СтароеНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "Наименование");
	
	Если Источник.Наименование <> СтароеНаименование Тогда
		Источник.ДополнительныеСвойства.Вставить("СтароеНаименование", СтароеНаименование);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьДействияПриЗаписиДополнительногоРеквизитаПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Источник.ДополнительныеСвойства.Свойство("СтароеНаименование") Тогда
		Возврат;
	КонецЕсли;
	
	СтароеНаименование = "[" + Источник.ДополнительныеСвойства.СтароеНаименование + "]";
	НовоеНаименование  = "[" + Источник.Наименование + "]";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыНоменклатуры.Ссылка,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НаборСвойствХарактеристик = &НаборСвойств
	|			ТОГДА ""Характеристики""
	|		КОГДА ВидыНоменклатуры.НаборСвойствСерий = &НаборСвойств
	|			ТОГДА ""Серии""
	|		ИНАЧЕ ""Номенклатуры""
	|	КОНЕЦ КАК ИмяШаблона,
	|	ВидыНоменклатуры.ШаблонНаименованияДляПечатиНоменклатуры,
	|	ВидыНоменклатуры.ШаблонНаименованияДляПечатиХарактеристики,
	|	"""" КАК ШаблонНаименованияДляПечатиСерии,
	|	ВидыНоменклатуры.ШаблонРабочегоНаименованияНоменклатуры,
	|	ВидыНоменклатуры.ШаблонРабочегоНаименованияХарактеристики,
	|	ВидыНоменклатуры.ШаблонРабочегоНаименованияСерии
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	(ВидыНоменклатуры.НаборСвойств = &НаборСвойств
	|			ИЛИ ВидыНоменклатуры.НаборСвойствСерий = &НаборСвойств
	|			ИЛИ ВидыНоменклатуры.НаборСвойствХарактеристик = &НаборСвойств)";
	
	Запрос.УстановитьПараметр("НаборСвойств", Источник.НаборСвойств);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если НЕ Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыШаблонов = Новый Структура;
	РеквизитыШаблонов.Вставить("ШаблонНаименованияДляПечати" + Выборка.ИмяШаблона, "");
	РеквизитыШаблонов.Вставить("ШаблонРабочегоНаименования"  + Выборка.ИмяШаблона, "");
	
	ЗаполнитьЗначенияСвойств(РеквизитыШаблонов, Выборка);
	
	ИзмененныеНаименования = Новый Соответствие;
	ИзмененныеНаименования.Вставить(СтароеНаименование, НовоеНаименование);
	
	ЗаменитьНаименованияВШаблонах(Выборка.Ссылка, РеквизитыШаблонов, ИзмененныеНаименования);
	
КонецПроцедуры

// Адаптированный вариант УправлениеСвойствами.ПередЗаписьюВидаОбъекта()
//
// Параметры:
//  ВидНоменклатуры - СправочникОбъект.ВидыНоменклатуры
//  ИмяОбъектаСоСвойствами - Строка - Имя объекта со свойствами
//  ИмяРеквизитаНабораСвойств - Строка - Имя реквизита набора свойств
//  ОкончаниеНаименования - Строка - Окончание наименования
//  НуженНаборСвойств - Булево - Нужен набор свойств
Процедура ОбновитьПоляДополнительныхСвойств(ВидНоменклатуры,
                                  ИмяОбъектаСоСвойствами,
                                  ИмяРеквизитаНабораСвойств = "НаборСвойств",
								  ОкончаниеНаименования = "",
								  НуженНаборСвойств = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборСвойств   = ВидНоменклатуры[ИмяРеквизитаНабораСвойств];
	РодительНабора = УправлениеСвойствами.НаборСвойствПоИмени(ИмяОбъектаСоСвойствами);
	
	// Обновлений наименований набора свойств
	Если ЗначениеЗаполнено(НаборСвойств) Тогда
		
		СтарыеСвойстваНабора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			НаборСвойств, "Наименование, Родитель, ПометкаУдаления");
		
		Если СтарыеСвойстваНабора.Наименование    = ВидНоменклатуры.Наименование + ОкончаниеНаименования
		   И СтарыеСвойстваНабора.ПометкаУдаления = ВидНоменклатуры.ПометкаУдаления
		   И СтарыеСвойстваНабора.Родитель        = РодительНабора Тогда
			
			Возврат;
		КонецЕсли;
		
		Если СтарыеСвойстваНабора.Родитель = РодительНабора Тогда
			ЗаблокироватьДанныеДляРедактирования(НаборСвойств);
			НаборСвойствОбъект = НаборСвойств.ПолучитьОбъект();
		Иначе
			НаборСвойствОбъект = НаборСвойств.Скопировать();
		КонецЕсли;
		
	ИначеЕсли НуженНаборСвойств Тогда
		НаборСвойствОбъект = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
		НаборСвойствОбъект.Используется = Истина;
	Иначе
		НаборСвойствОбъект = Неопределено;
	КонецЕсли;
	
	Если НаборСвойствОбъект <> Неопределено Тогда 
		НаборСвойствОбъект.Наименование    = ВидНоменклатуры.Наименование + ОкончаниеНаименования;
		НаборСвойствОбъект.ПометкаУдаления = ?(НуженНаборСвойств, ВидНоменклатуры.ПометкаУдаления, Истина);;
		НаборСвойствОбъект.Родитель        = РодительНабора;
		НаборСвойствОбъект.Записать();
	КонецЕсли;
	
	ВидНоменклатуры[ИмяРеквизитаНабораСвойств] = ?(НуженНаборСвойств, НаборСвойствОбъект.Ссылка, Неопределено);
	
	// Обновление наименований необщих дополнительных реквизитов и сведений.
	Если Не ЗначениеЗаполнено(НаборСвойств) Тогда
		Возврат;
	КонецЕсли;
	
	ИзмененныеНаименования = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборСвойств", НаборСвойств);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Свойства.Ссылка КАК Ссылка,
	|	Свойства.НаборСвойств.Наименование КАК НаименованиеНабора,
	|	Свойства.НаборСвойств.ПометкаУдаления КАК ПометкаУдаленияНабора,
	|	Свойства.ЭтоДополнительноеСведение
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|ГДЕ
	|	Свойства.НаборСвойств = &НаборСвойств
	|	И ВЫБОР
	|			КОГДА Свойства.Наименование <> Свойства.Заголовок + "" ("" + Свойства.НаборСвойств.Наименование + "")""
	|				ТОГДА ИСТИНА
	|			КОГДА Свойства.ПометкаУдаления <> Свойства.НаборСвойств.ПометкаУдаления
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	ВыборкаСвойств = Запрос.Выполнить().Выбрать();
	Пока ВыборкаСвойств.Следующий() Цикл
		
		ЗаблокироватьДанныеДляРедактирования(ВыборкаСвойств.Ссылка);
		
		Объект = ВыборкаСвойств.Ссылка.ПолучитьОбъект(); // ПланВидовХарактеристикОбъект.ДополнительныеРеквизитыИСведения
		
		СтароеНаименование = Объект.Наименование;
		Объект.Наименование = Объект.Заголовок + " (" + Строка(ВыборкаСвойств.НаименованиеНабора) + ")";
		Объект.ПометкаУдаления = ВыборкаСвойств.ПометкаУдаленияНабора;
		
		Объект.ДополнительныеСвойства.Вставить("НеОбновлятьШаблоныНаименований");
		Объект.Записать();
		
		Если НЕ ВыборкаСвойств.ЭтоДополнительноеСведение Тогда
			ИзмененныеНаименования.Вставить(
				"[" + СтароеНаименование + "]", "[" + Объект.Наименование + "]");
		КонецЕсли;
		
	КонецЦикла;
	
	// Переименование в шаблонах наименований
	Если ИзмененныеНаименования.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыШаблонов = Новый Структура;
	
	Если ИмяРеквизитаНабораСвойств = "НаборСвойствХарактеристик" Тогда
		РеквизитыШаблонов.Вставить("ШаблонНаименованияДляПечатиХарактеристики");
		РеквизитыШаблонов.Вставить("ШаблонРабочегоНаименованияХарактеристики");
	ИначеЕсли ИмяРеквизитаНабораСвойств = "НаборСвойствСерий" Тогда
		РеквизитыШаблонов.Вставить("ШаблонРабочегоНаименованияСерии");
	Иначе
		РеквизитыШаблонов.Вставить("ШаблонНаименованияДляПечатиНоменклатуры");
		РеквизитыШаблонов.Вставить("ШаблонРабочегоНаименованияНоменклатуры");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(РеквизитыШаблонов, ВидНоменклатуры);
	
	ЗаменитьНаименованияВШаблонах(ВидНоменклатуры, РеквизитыШаблонов, ИзмененныеНаименования);
	
КонецПроцедуры

Функция ЗаменитьНаименованияВШаблонах(ОбъектИлиСсылка, РеквизитыШаблонов, ИзмененныеНаименования)
	
	ИзмененныеРеквизитыШаблонов = Новый Структура;
	
	Для Каждого КлючИЗначение Из РеквизитыШаблонов Цикл
		
		ИзмененныйШаблон = КлючИЗначение.Значение;
		
		Для Каждого Наименования Из ИзмененныеНаименования Цикл
			ИзмененныйШаблон = СтрЗаменить(ИзмененныйШаблон, Наименования.Ключ, Наименования.Значение);
		КонецЦикла;
		
		Если ИзмененныйШаблон <> КлючИЗначение.Значение Тогда
			ИзмененныеРеквизитыШаблонов.Вставить(КлючИЗначение.Ключ, ИзмененныйШаблон);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИзмененныеРеквизитыШаблонов.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(ОбъектИлиСсылка) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(ОбъектИлиСсылка);
		Исключение
			
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать вид номенклатуры ""%1"" для изменения шаблонов наименований.
				|Необходимо вручную изменить имя дополнительного реквизита в шаблонах.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СокрЛП(ОбъектИлиСсылка));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Возврат Ложь;
			
		КонецПопытки;
		
		Объект = ОбъектИлиСсылка.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект, ИзмененныеРеквизитыШаблонов);
		Объект.Записать();
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(ОбъектИлиСсылка, ИзмененныеРеквизитыШаблонов);
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область Прочее

// Возвращает заполненную таблицу значений свойств объекта.
// 
// Параметры:
//  ДополнительныеСвойстваОбъекта - ТаблицаЗначений - Дополнительные свойства объекта
// 	Наборы - ДанныеФормыКоллекция
// 	ЭтоДополнительноеСведение - Булево
// 	
// Возвращаемое значение:
//	ТаблицаЗначений
Функция ЗначенияСвойств(ДополнительныеСвойстваОбъекта, Наборы, ЭтоДополнительноеСведение) Экспорт
	
	Если ДополнительныеСвойстваОбъекта.Количество() = 0 Тогда
		// Предварительная быстрая проверка использования дополнительных свойств.
		СвойстваНеНайдены = ДополнительныеРеквизитыИСведенияНеНайдены(Наборы, ЭтоДополнительноеСведение);
		
		Если СвойстваНеНайдены Тогда
			ОписаниеСвойств = Новый ТаблицаЗначений;
			ОписаниеСвойств.Колонки.Добавить("Набор");
			ОписаниеСвойств.Колонки.Добавить("Свойство");
			ОписаниеСвойств.Колонки.Добавить("ВладелецДополнительныхЗначений");
			ОписаниеСвойств.Колонки.Добавить("ЗаполнятьОбязательно");
			ОписаниеСвойств.Колонки.Добавить("Наименование");
			ОписаниеСвойств.Колонки.Добавить("ТипЗначения");
			ОписаниеСвойств.Колонки.Добавить("ФорматСвойства");
			ОписаниеСвойств.Колонки.Добавить("МногострочноеПолеВвода");
			ОписаниеСвойств.Колонки.Добавить("Удалено");
			ОписаниеСвойств.Колонки.Добавить("Значение");
			Возврат ОписаниеСвойств;
		КонецЕсли;
	КонецЕсли;
	
	Свойства = ДополнительныеСвойстваОбъекта.ВыгрузитьКолонку("Свойство");
	
	НаборыСвойств = Новый ТаблицаЗначений;
	
	НаборыСвойств.Колонки.Добавить(
		"Набор", Новый ОписаниеТипов("СправочникСсылка.НаборыДополнительныхРеквизитовИСведений"));
	
	НаборыСвойств.Колонки.Добавить(
		"ПорядокНабора", Новый ОписаниеТипов("Число"));
	
	Для каждого ЭлементСписка Из Наборы Цикл
		НоваяСтрока = НаборыСвойств.Добавить();
		НоваяСтрока.Набор         = ЭлементСписка.Значение;
		НоваяСтрока.ПорядокНабора = Наборы.Индекс(ЭлементСписка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Свойства",      Свойства);
	Запрос.УстановитьПараметр("НаборыСвойств", НаборыСвойств);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НаборыСвойств.Набор,
	|	НаборыСвойств.ПорядокНабора
	|ПОМЕСТИТЬ НаборыСвойств
	|ИЗ
	|	&НаборыСвойств КАК НаборыСвойств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НаборыСвойств.Набор,
	|	НаборыСвойств.ПорядокНабора,
	|	СвойстваНаборов.Свойство,
	|	СвойстваНаборов.ПометкаУдаления,
	|	СвойстваНаборов.НомерСтроки КАК ПорядокСвойства
	|ПОМЕСТИТЬ СвойстваНаборов
	|ИЗ
	|	НаборыСвойств КАК НаборыСвойств
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК СвойстваНаборов
	|		ПО (СвойстваНаборов.Ссылка = НаборыСвойств.Набор)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|		ПО (СвойстваНаборов.Свойство = Свойства.Ссылка)
	|ГДЕ
	|	НЕ СвойстваНаборов.ПометкаУдаления
	|	И НЕ Свойства.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Свойства.Ссылка КАК Свойство
	|ПОМЕСТИТЬ ЗаполненныеСвойства
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|ГДЕ
	|	Свойства.Ссылка В(&Свойства)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвойстваНаборов.Набор,
	|	СвойстваНаборов.ПорядокНабора,
	|	СвойстваНаборов.Свойство,
	|	СвойстваНаборов.ПорядокСвойства,
	|	СвойстваНаборов.ПометкаУдаления КАК Удалено
	|ПОМЕСТИТЬ ВсеСвойства
	|ИЗ
	|	СвойстваНаборов КАК СвойстваНаборов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка),
	|	0,
	|	ЗаполненныеСвойства.Свойство,
	|	0,
	|	ИСТИНА
	|ИЗ
	|	ЗаполненныеСвойства КАК ЗаполненныеСвойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвойстваНаборов КАК СвойстваНаборов
	|		ПО ЗаполненныеСвойства.Свойство = СвойстваНаборов.Свойство
	|ГДЕ
	|	СвойстваНаборов.Свойство ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВсеСвойства.Набор,
	|	ВсеСвойства.Свойство,
	|	ДополнительныеРеквизитыИСведения.ВладелецДополнительныхЗначений,
	|	ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно,
	|	ДополнительныеРеквизитыИСведения.Заголовок КАК Наименование,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения,
	|	ДополнительныеРеквизитыИСведения.ФорматСвойства,
	|	ДополнительныеРеквизитыИСведения.МногострочноеПолеВвода,
	|	ВсеСвойства.Удалено КАК Удалено,
	|	ДополнительныеРеквизитыИСведения.Доступен,
	|	ДополнительныеРеквизитыИСведения.Виден,
	|	ДополнительныеРеквизитыИСведения.ЗависимостиДополнительныхРеквизитов.(
	|		ЗависимоеСвойство,
	|		Реквизит,
	|		Условие,
	|		Значение
	|	)
	|ИЗ
	|	ВсеСвойства КАК ВсеСвойства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ПО ВсеСвойства.Свойство = ДополнительныеРеквизитыИСведения.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Удалено,
	|	ВсеСвойства.ПорядокНабора,
	|	ВсеСвойства.ПорядокСвойства";
	
	Если ЭтоДополнительноеСведение Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты",
			"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения");
	КонецЕсли;
	
	ОписаниеСвойств = Запрос.Выполнить().Выгрузить();
	ОписаниеСвойств.Индексы.Добавить("Свойство");
	ОписаниеСвойств.Колонки.Добавить("Значение");
	
	// Удаление дублей свойств в нижестоящих наборах свойств.
	Индекс = ОписаниеСвойств.Количество()-1;
	
	Пока Индекс >= 0 Цикл
		Строка = ОписаниеСвойств[Индекс];
		НайденнаяСтрока = ОписаниеСвойств.Найти(Строка.Свойство);
		
		Если НайденнаяСтрока <> Неопределено
		   И НайденнаяСтрока <> Строка Тогда
			
			ОписаниеСвойств.Удалить(Индекс);
		КонецЕсли;
		
		Индекс = Индекс-1;
	КонецЦикла;
	
	// Заполнение значений свойств.
	Для Каждого Строка Из ДополнительныеСвойстваОбъекта Цикл
		ОписаниеСвойства = ОписаниеСвойств.Найти(Строка.Свойство, "Свойство");
		Если ОписаниеСвойства <> Неопределено Тогда
			// Поддержка строк неограниченной длины.
			Если НЕ ЭтоДополнительноеСведение
			   И ИспользоватьНеограниченнуюСтроку(
			         ОписаниеСвойства.ТипЗначения, ОписаниеСвойства.МногострочноеПолеВвода)
			   И НЕ ПустаяСтрока(Строка.ТекстоваяСтрока) Тогда 
				
				ОписаниеСвойства.Значение = Строка.ТекстоваяСтрока;
			Иначе
				ОписаниеСвойства.Значение = Строка.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОписаниеСвойств;
	
КонецФункции

// Дополнительные реквизиты и сведения не найдены (только для внутреннего использования).
// 
// Параметры:
//  Наборы - ДанныеФормыКоллекция - Наборы
//  ЭтоДополнительноеСведение - Булево - Это дополнительное сведение
//  ОтложеннаяИнициализация - Булево - Отложенная инициализация
// 
// Возвращаемое значение:
//  Булево - Дополнительные реквизиты и сведения не найдены
Функция ДополнительныеРеквизитыИСведенияНеНайдены(Наборы, ЭтоДополнительноеСведение, ОтложеннаяИнициализация = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборыСвойств", Наборы.ВыгрузитьЗначения());
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СвойстваНаборов.Свойство КАК Свойство
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК СвойстваНаборов
	|ГДЕ
	|	СвойстваНаборов.Ссылка В(&НаборыСвойств)
	|	И НЕ СвойстваНаборов.ПометкаУдаления";
	
	Если ЭтоДополнительноеСведение Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты",
			"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	СвойстваНеНайдены = Запрос.Выполнить().Пустой();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СвойстваНеНайдены;
КонецФункции

// Проверяет возможность использования для свойства строки неограниченный длины.
// 
// Параметры:
//  ТипЗначенияСвойства - Произвольный - Тип значения свойства
//  МногострочноеПолеВвода - Произвольный - Многострочное поле ввода
// 
// Возвращаемое значение:
//  Булево - Использовать неограниченную строку
Функция ИспользоватьНеограниченнуюСтроку(ТипЗначенияСвойства, МногострочноеПолеВвода) Экспорт
	
	Если ТипЗначенияСвойства.СодержитТип(Тип("Строка"))
	   И ТипЗначенияСвойства.Типы().Количество() = 1
	   И МногострочноеПолеВвода > 1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
//
// Параметры:
//  КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//  Элементы   - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//  ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	ТМЦВЭксплуатацииСервер.ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти);
	
	
	
	РетроБонусыСервер.ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти);
	
	Если НЕ ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПодсистемы") Тогда
		
		Набор = Элементы.Добавить();
		Набор.ИмяПредопределенногоНабора = "Справочник_СтруктураПредприятия";
		Набор.Ссылка = Новый УникальныйИдентификатор("c091b4fd-9802-11e9-80cd-4cedfb43b11a");
		Набор.Используется = Истина;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
			"ru = 'Структура предприятия'", КодыЯзыков); // @НСтр-1
		
		Набор = Элементы.Добавить();
		Набор.ИмяПредопределенногоНабора = "Справочник_ФизическиеЛица";
		Набор.Ссылка = Новый УникальныйИдентификатор("c091b4e3-9802-11e9-80cd-4cedfb43b11a");
		Набор.Используется = Истина;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
			"ru = 'Физические лица'", КодыЯзыков); // @НСтр-1
		
		Набор = Элементы.Добавить();
		Набор.ИмяПредопределенногоНабора = "Справочник_ВидыДокументовФизическихЛиц";
		Набор.Ссылка = Новый УникальныйИдентификатор("d42dbf6a-9802-11e9-80cd-4cedfb43b11a");
		Набор.Используется = Истина;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
			"ru = 'Виды документов физических лиц'", КодыЯзыков); // @НСтр-1
		
		Набор = Элементы.Добавить();
		Набор.ИмяПредопределенногоНабора = "Документ_ПодтверждениеЗачисленияЗарплаты";
		Набор.Ссылка = Новый УникальныйИдентификатор("c091b4ce-9802-11e9-80cd-4cedfb43b11a");
		Набор.Используется = Истина;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
			"ru = 'Зачисления ДС на лицевые счета'", КодыЯзыков); // @НСтр-1
		
	КонецЕсли;
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Документ_СверкаНачальныхОстатковПоСкладу";
	Набор.Ссылка = Новый УникальныйИдентификатор("de562360-2ddb-41d4-affa-1d1bcab44b64");
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Сверки начальных остатков по складам'", КодыЯзыков); // @НСтр-1
	
	
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Справочник_ДоговорыЭквайринга";
	Набор.Ссылка = Новый УникальныйИдентификатор("73aa43ee-cabb-472d-b2ba-b191fa820620");
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Договоры подключения к платежным системам'", КодыЯзыков); // @НСтр-1
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Документ_Бронирование";
	Набор.Ссылка = Новый УникальныйИдентификатор("b9b299f9-f870-44c7-bbea-b00f8b7b1ae0");
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Электронные билеты и бронирования'", КодыЯзыков); // @НСтр-1
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Документ_ЗаявкаНаКомандировку";
	Набор.Ссылка = Новый УникальныйИдентификатор("5c35575c-3121-44bc-8039-14c4d49983e0");
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Заявки на командировку'", КодыЯзыков); // @НСтр-1
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Справочник_ЦеновыеГруппы";
	Набор.Ссылка = Новый УникальныйИдентификатор("32b8b176-f9b6-11ea-80f0-1831bf523deb");
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Ценовые группы'", КодыЯзыков); // @НСтр-1
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Документ_КорректировкаНазначенияТоваров";
	Набор.Ссылка = Новый УникальныйИдентификатор("b3a20385-a6ab-41c5-b92d-791290d34f5a");
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Корректировка назначения товаров'", КодыЯзыков); // @НСтр-1
	
	//Описание групп
	
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Справочник_Номенклатура";
	Набор.ЭтоГруппа = Истина;
	Набор.Используется = Истина;
	Набор.Ссылка = Новый УникальныйИдентификатор("556f79a2-3f82-4c97-9969-9b389945b3e3");
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Номенклатура'", КодыЯзыков); // @НСтр-1
	
	ДочернийНабор = Элементы.Добавить();
	ДочернийНабор.ИмяПредопределенногоНабора = "Справочник_Номенклатура_Общие";
	ДочернийНабор.Родитель = Новый УникальныйИдентификатор("556f79a2-3f82-4c97-9969-9b389945b3e3");
	ДочернийНабор.Используется = Истина;
	ДочернийНабор.Ссылка = Новый УникальныйИдентификатор("b03509f2-680f-459b-ac16-d5a7c34ebfc6");
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(ДочернийНабор, "Наименование",
		"ru = 'Общие'", КодыЯзыков); // @НСтр-1
	
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Справочник_Партнеры";
	Набор.Ссылка = Новый УникальныйИдентификатор("4e3b8c92-3da9-4fe3-9256-c63d89407653");
	Набор.ЭтоГруппа = Истина;
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Партнеры'", КодыЯзыков); // @НСтр-1
	
	ДочернийНабор = Элементы.Добавить();
	ДочернийНабор.ИмяПредопределенногоНабора = "Справочник_Партнеры_Общие";
	ДочернийНабор.Родитель = Новый УникальныйИдентификатор("4e3b8c92-3da9-4fe3-9256-c63d89407653");
	ДочернийНабор.Используется = Истина;
	ДочернийНабор.Ссылка = Новый УникальныйИдентификатор("4b07bb18-b2d4-46f6-b228-c378a280def1");
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(ДочернийНабор, "Наименование",
		"ru = 'Общие'", КодыЯзыков); // @НСтр-1
	
	ДочернийНабор = Элементы.Добавить();
	ДочернийНабор.ИмяПредопределенногоНабора = "Справочник_Партнеры_Клиенты";
	ДочернийНабор.Родитель = Новый УникальныйИдентификатор("4e3b8c92-3da9-4fe3-9256-c63d89407653");
	ДочернийНабор.Используется = Истина;
	ДочернийНабор.Ссылка = Новый УникальныйИдентификатор("6a51863a-02a2-49ca-983f-78eb94939a94");
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(ДочернийНабор, "Наименование",
		"ru = 'Клиенты'", КодыЯзыков); // @НСтр-1
	
	ДочернийНабор = Элементы.Добавить();
	ДочернийНабор.ИмяПредопределенногоНабора = "Справочник_Партнеры_Конкуренты";
	ДочернийНабор.Родитель = Новый УникальныйИдентификатор("4e3b8c92-3da9-4fe3-9256-c63d89407653");
	ДочернийНабор.Используется = Истина;
	ДочернийНабор.Ссылка = Новый УникальныйИдентификатор("7038e549-e6d2-4e0c-aa5e-e24045053505");
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(ДочернийНабор, "Наименование",
		"ru = 'Конкуренты'", КодыЯзыков); // @НСтр-1
	
	ДочернийНабор = Элементы.Добавить();
	ДочернийНабор.ИмяПредопределенногоНабора = "Справочник_Партнеры_Поставщики";
	ДочернийНабор.Родитель = Новый УникальныйИдентификатор("4e3b8c92-3da9-4fe3-9256-c63d89407653");
	ДочернийНабор.Используется = Истина;
	ДочернийНабор.Ссылка = Новый УникальныйИдентификатор("f54ac927-da38-4dbe-826b-1b457678d952");
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(ДочернийНабор, "Наименование",
		"ru = 'Поставщики'", КодыЯзыков); // @НСтр-1
	
	ДочернийНабор = Элементы.Добавить();
	ДочернийНабор.ИмяПредопределенногоНабора = "Справочник_Партнеры_Прочие";
	ДочернийНабор.Родитель = Новый УникальныйИдентификатор("4e3b8c92-3da9-4fe3-9256-c63d89407653");
	ДочернийНабор.Используется = Истина;
	ДочернийНабор.Ссылка = Новый УникальныйИдентификатор("75311ade-943a-4914-9e5b-c657c5a9899b");
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(ДочернийНабор, "Наименование",
		"ru = 'Прочие'", КодыЯзыков); // @НСтр-1
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Справочник_СерииНоменклатуры";
	Набор.Ссылка = Новый УникальныйИдентификатор("a47538d3-e375-45f8-8325-b5948ca9575a");
	Набор.ЭтоГруппа = Истина;
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Серии номенклатуры'", КодыЯзыков); // @НСтр-1
	
	ДочернийНабор = Элементы.Добавить();
	ДочернийНабор.ИмяПредопределенногоНабора = "Справочник_СерииНоменклатуры_Общие";
	ДочернийНабор.Родитель = Новый УникальныйИдентификатор("a47538d3-e375-45f8-8325-b5948ca9575a");
	ДочернийНабор.Ссылка = Новый УникальныйИдентификатор("d9f45df2-85b2-4da1-a1ae-e4c6c44f08bc");
	ДочернийНабор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(ДочернийНабор, "Наименование",
		"ru = 'Общие'", КодыЯзыков); // @НСтр-1
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Справочник_ХарактеристикиНоменклатуры";
	Набор.Ссылка = Новый УникальныйИдентификатор("35ae0ba3-fac6-45f2-a8da-35205563d746");
	Набор.ЭтоГруппа = Истина;
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Характеристики номенклатуры'", КодыЯзыков); // @НСтр-1
	
	ДочернийНабор = Элементы.Добавить();
	ДочернийНабор.ИмяПредопределенногоНабора = "Справочник_ХарактеристикиНоменклатуры_Общие";
	ДочернийНабор.Родитель = Новый УникальныйИдентификатор("35ae0ba3-fac6-45f2-a8da-35205563d746");
	ДочернийНабор.Ссылка = Новый УникальныйИдентификатор("7c8a1529-810e-4f5a-b5ff-bde9861c75d2");
	ДочернийНабор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(ДочернийНабор, "Наименование",
		"ru = 'Общие'", КодыЯзыков); // @НСтр-1
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = "Справочник_Инциденты";
	Набор.Ссылка = Новый УникальныйИдентификатор("006d165e-67d7-4813-95f7-30aa2f5dd72a");
	Набор.ЭтоГруппа = Истина;
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		"ru = 'Инциденты'", КодыЯзыков); // @НСтр-1
	
	ДочернийНабор = Элементы.Добавить();
	ДочернийНабор.ИмяПредопределенногоНабора = "Справочник_Инциденты_Общие";
	ДочернийНабор.Родитель = Новый УникальныйИдентификатор("006d165e-67d7-4813-95f7-30aa2f5dd72a");
	ДочернийНабор.Ссылка = Новый УникальныйИдентификатор("f19ed12e-d5cd-4b1b-b57d-b6d9d0139844");
	ДочернийНабор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(ДочернийНабор, "Наименование",
		"ru = 'Общие'", КодыЯзыков); // @НСтр-1
	
	Наименование = "ru = 'Авансовые отчеты'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "801f514d-6181-4b90-858d-9162a37587ee", 
	"Документ_АвансовыйОтчет", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Акты выполненных работ'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "69506c38-be24-4674-a051-f6c376c09785", 
	"Документ_АктВыполненныхРабот", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Акты о расхождениях после отгрузки'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ba4c6ae8-37fb-40fb-9da7-d9ac1ababd9f", 
	"Документ_АктОРасхожденияхПослеОтгрузки", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Акт о расхождениях после перемещения'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "c1cab76f-caab-4fe3-9e88-8bc81f921d7f", 
	"Документ_АктОРасхожденияхПослеПеремещения", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Акты о расхождениях после приемки'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "9c639181-871f-4c71-b22c-51c099c3086b", 
	"Документ_АктОРасхожденияхПослеПриемки", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Аннулирование подарочных сертификатов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "9c5df4e2-4291-46b0-a8ec-d76f8928b905", 
	"Документ_АннулированиеПодарочныхСертификатов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Документы ввода начальных остатков'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "64afc2f5-3111-4526-9125-41148861eadb", 
	"Документ_ВводОстатков", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ввод остатков взаиморасчетов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f92f4b5b-4d75-4ba7-9e5e-d928d4582278", 
	"Документ_ВводОстатковВзаиморасчетов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ввод остатков денежных средств'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "107bd5db-91f6-4cc8-8810-2349e91eb948", 
	"Документ_ВводОстатковДенежныхСредств", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ввод остатков о продажах за прошлые периоды'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "18589708-cddf-4dba-b816-948afc1fc655", 
	"Документ_ВводОстатковОПродажахЗаПрошлыеПериоды", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ввод остатков по финансовым инструментам'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "6686df75-1d21-450f-8dd4-b33907ee4d6b", 
	"Документ_ВводОстатковПоФинансовымИнструментам", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ввод остатков прочие расходы'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "de2acb0b-0893-4ea6-8f0f-2c5e14856961", 
	"Документ_ВводОстатковПрочиеРасходы", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ввод остатков прочих активов пассивов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "6ae3cdb3-3831-44c2-9fea-b87154818ff9", 
	"Документ_ВводОстатковПрочихАктивовПассивов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ввод начальных остатков расчетов по эквайрингу'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "fb910346-f64d-4b89-9d4b-dd4426bc64a8", 
	"Документ_ВводОстатковРасчетовПоЭквайрингу", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ввод остатков с подотчетниками'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "12e68b85-c228-4bea-837d-df9122a2b4f7", 
	"Документ_ВводОстатковСПодотчетниками", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ввод остатков товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "b4a699ac-aa0d-42c4-b451-ae3d27f23422", 
	"Документ_ВводОстатковТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Взаимозачеты задолженности'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a5b7c017-106e-4373-ac52-fc63f06e1c62", 
	"Документ_ВзаимозачетЗадолженности", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Внесение денежных средств в кассу ККМ'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "418fab75-e201-4dc6-abac-8f2aa6c8a8a6", 
	"Документ_ВнесениеДенежныхСредствВКассуККМ", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Документы внутреннего потребления товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "39594b94-13bb-44eb-bcc3-6c3c03f38380", 
	"Документ_ВнутреннееПотребление", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Возвраты товаров между организациями'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "bfdfd72c-5524-4bea-b2d2-bf46d127d224", 
	"Документ_ВозвратТоваровМеждуОрганизациями", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Возвраты товаров от клиентов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "60bcfb69-ab90-4d19-b35b-f542da756f07", 
	"Документ_ВозвратТоваровОтКлиента", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Список возвратов поставщикам'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ea84fc70-303e-486d-b07c-41fa4b2ddd0a", 
	"Документ_ВозвратТоваровПоставщику", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Выемка денежных средств из кассы ККМ'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "7293ce55-1397-45cb-8951-de6fad85a001", 
	"Документ_ВыемкаДенежныхСредствИзКассыККМ", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Выкупы возвратной тары клиентами'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "5a5cc4ba-7ac4-4b29-ae6c-ba1b7fb46d9a", 
	"Документ_ВыкупВозвратнойТарыКлиентом", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Выкупы возвратной тары у поставщиков'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a7d515df-add9-450c-a332-916a6790303f", 
	"Документ_ВыкупВозвратнойТарыУПоставщика", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Выкупы товаров с хранения'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "63fdb30c-5b2f-4dad-b4b9-e1dd907d30e8", 
	"Документ_ВыкупПринятыхНаХранениеТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Выкупы товаров хранителем'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "8a8bd71e-7dba-4e2c-ac68-4a54c23d6a0b", 
	"Документ_ВыкупТоваровХранителем", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Движения прочих активов и пассивов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "2b4670d0-c81c-4939-9e8d-4de3cca5f43f", 
	"Документ_ДвижениеПрочихАктивовПассивов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Доверенности'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "95848746-ee8c-459b-b52c-ec376c88b51a", 
	"Документ_ДоверенностьВыданная", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Задания на перевозку'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "1536e0a2-1247-4057-b129-662f18baabbf", 
	"Документ_ЗаданиеНаПеревозку", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Задания торговым представителям'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "60ef6213-9b62-46c9-8484-110edab7dc1d", 
	"Документ_ЗаданиеТорговомуПредставителю", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Список заказов клиентов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "03dd5357-8b34-4da5-a195-8798e22640a3", 
	"Документ_ЗаказКлиента", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Заказы на внутреннее потребление'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "9d859cfe-35a8-4239-a26b-39afc8da2d24", 
	"Документ_ЗаказНаВнутреннееПотребление", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Заказы на перемещение'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "2c31eee1-7175-4dda-bbd7-f55f0a4c3f42", 
	"Документ_ЗаказНаПеремещение", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Заказы на сборку (разборку)'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "4c278a13-c0bb-407f-8bb3-6428eebc2d61", 
	"Документ_ЗаказНаСборку", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Список заказов поставщикам'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "33eedfd9-352b-4d54-88ae-739511f8e846", 
	"Документ_ЗаказПоставщику", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Заявки на возврат товаров от клиентов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "4342fadf-1cdd-4d59-b2e3-05d19be6ade5", 
	"Документ_ЗаявкаНаВозвратТоваровОтКлиента", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Список заявок на расходование ДС'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "7b4d5dbb-b0a9-4d4f-b245-46d2709dad8a", 
	"Документ_ЗаявкаНаРасходованиеДенежныхСредств", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Заявления о ввозе товаров из ЕАЭС'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "2917737a-b940-4157-bb6f-2f43049f3efa", 
	"Документ_ЗаявлениеОВвозеТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Изменение ассортимента'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "66bbaa92-0c69-4ea8-8dc7-2d03e85b0980", 
	"Документ_ИзменениеАссортимента", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Инвентаризационные описи'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ed4dc447-ec20-46ec-b121-44d738325b89", 
	"Документ_ИнвентаризационнаяОпись", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Инвентаризации наличных ДС'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ffe2909c-7dbe-47c0-b880-1c31f34f007d", 
	"Документ_ИнвентаризацияНаличныхДенежныхСредств", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Коммерческие предложения клиентам'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "efefe76a-2f6a-43be-a4d2-72ff08a6618f", 
	"Документ_КоммерческоеПредложениеКлиенту", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Корректировки плановых потребностей'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "0f4f8e3b-a8c8-48e4-90df-6dcc152e68fa", 
	"Документ_КорректировкаПлановыхПотребностей", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Корректировки приобретений'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ff1efb04-feed-495b-8b39-8e7da0cb097f", 
	"Документ_КорректировкаПриобретения", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Корректировки реализаций'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "14fd2e36-20f8-4b9f-883f-28676d24993e", 
	"Документ_КорректировкаРеализации", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Корректировка регистров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "5e071822-b125-446d-8785-8369f551153d", 
	"Документ_КорректировкаРегистров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Начисления реверсивного НДС'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "9d37be73-5f56-44ed-b443-6debbd0c1c00", 
	"Документ_НачислениеРеверсивногоНДС", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Начисления и списания бонусных баллов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "5614c32b-f2ca-4a87-99f1-b59c6e669cd4", 
	"Документ_НачислениеИСписаниеБонусныхБаллов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Нормативы распределения планов продаж по категориям'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "fe22e6fd-0818-4dd3-87b2-400d60777c16", 
	"Документ_НормативРаспределенияПлановПродажПоКатегориям", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ожидаемые поступления ДС'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "66c0227a-8d36-40fe-85f6-18ff19fccbb5", 
	"Документ_ОжидаемоеПоступлениеДенежныхСредств", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Эквайринговые операции'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "53523743-007a-4cb4-b4c8-fbf16c2af464", 
	"Документ_ОперацияПоПлатежнойКарте", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Оприходования излишков товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f3940a0a-9396-402d-a823-85a709757c62", 
	"Документ_ОприходованиеИзлишковТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Оприходования излишков товаров у хранителя'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "46f35046-5db1-4da9-83f6-b4cd9f83905b", 
	"Документ_ОприходованиеИзлишковТоваровУХранителя", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ордера на отражение излишков товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "616278ec-2a6f-41a8-bc6d-25f24b3a536a", 
	"Документ_ОрдерНаОтражениеИзлишковТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ордера на отражение недостач товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "5c000661-739b-4b1c-bbc4-b6d09a67a5d5", 
	"Документ_ОрдерНаОтражениеНедостачТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ордера на отражение пересортицы товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "bfa5aba5-2304-4ea6-bef5-191adb786e6a", 
	"Документ_ОрдерНаОтражениеПересортицыТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ордера на отражение порчи товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "fdbb8c46-6fd4-4ee9-a6e4-802b20491a31", 
	"Документ_ОрдерНаОтражениеПорчиТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Ордера на перемещение товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "234b1bcf-7f61-481a-8cc6-00fe315d25d9", 
	"Документ_ОрдерНаПеремещениеТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отборы (размещения) товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "75841b9d-7294-44f4-9d25-d978fd71bf2e", 
	"Документ_ОтборРазмещениеТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отгрузка товаров с хранения'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a3b6b141-52ea-479b-aa08-eb5e89cba5e9", 
	"Документ_ОтгрузкаТоваровСХранения", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Расхождения при инкассации денежных средств'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "e2352c1d-e5f2-4bb3-a054-db4b8cd70fbc", 
	"Документ_ОтражениеРасхожденийПриИнкассацииДенежныхСредств", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты банков по эквайрингу'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "01f2e38d-a7be-4b85-8149-e86a6f8ccb25", 
	"Документ_ОтчетБанкаПоОперациямЭквайринга", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты комиссионеров (агентов) о продажах'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f56976e3-473e-4a42-8505-d9c0f09ccd8c", 
	"Документ_ОтчетКомиссионера", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты комиссионеров о списании'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "c5f01e92-cd38-4fdd-bb4f-dc35947f60e8", 
	"Документ_ОтчетКомиссионераОСписании", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты комитентам (принципалам) о продажах'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "98063dee-6c0a-44bf-b171-db4c80a01f43", 
	"Документ_ОтчетКомитенту", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты комитентам (принципалам) о закупках'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "b415714a-0fac-4ed8-ac1d-2d9acb3d5486", 
	"Документ_ОтчетКомитентуОЗакупках", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты комитентам о списании'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "645176c8-de13-49ba-a171-daadf684a1df", 
	"Документ_ОтчетКомитентуОСписании", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты о розничных возвратах'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "87408fa0-fcbe-aeb4-88a2-d6778ccdae67", 
	"Документ_ОтчетОРозничныхВозвратах", Наименование, КодыЯзыков);	
	
	Наименование = "ru = 'Отчеты о розничных продажах'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "84708af0-bfce-4aeb-8a28-e7687cdcae76", 
	"Документ_ОтчетОРозничныхПродажах", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Списания товаров у хранителя'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "02214fff-b37e-4819-a630-691a9197cd68", 
	"Документ_ОтчетОСписанииТоваровУХранителя", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты по комиссии'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "c8c8e810-dad6-4bca-8acc-e1649a0814a0", 
	"Документ_ОтчетПоКомиссииМеждуОрганизациями", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты по комиссии'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "04325bfb-d094-4560-9806-2065b07f979f", 
	"Документ_ОтчетПоКомиссииМеждуОрганизациямиОСписании", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Передачи товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "348b9fd2-2329-474f-82a9-801314db98d0", 
	"Документ_ПередачаТоваровМеждуОрганизациями", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Передачи товаров хранителям/комиссионерам'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "d1c2fbba-bdc4-4132-9bde-06277de9fc58", 
	"Документ_ПередачаТоваровХранителю", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Документы перемещения товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "e9017c23-1928-40d1-96ac-abdd536071b2", 
	"Документ_ПеремещениеТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Пересортицы товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a102a711-55fe-4252-8c97-70dd11e9b77d", 
	"Документ_ПересортицаТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Пересортицы товаров у хранителей'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "7ba77144-f8a4-48d4-8de4-8636e134ebc4", 
	"Документ_ПересортицаТоваровУХранителя", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Пересчеты товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "53061e7a-7187-460d-97b3-3b78c328a839", 
	"Документ_ПересчетТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Планы внутренних потреблений'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "82333b2a-3cbf-4891-8032-a8d37f312576", 
	"Документ_ПланВнутреннихПотреблений", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Планы закупок'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "8ef37129-a607-401b-8ab6-b437402a7e03", 
	"Документ_ПланЗакупок", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Планы остатков'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "413d6ed2-8438-4142-8cf9-1ba6b7e906ff", 
	"Документ_ПланОстатков", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Планы продаж по номенклатуре'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "6cfc9e82-d818-4f58-a56a-d2ddeaf180f4", 
	"Документ_ПланПродаж", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Планы продаж по категориям'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "18e96531-e429-459a-bd3c-32fb78e8b467", 
	"Документ_ПланПродажПоКатегориям", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Планы сборки (разборки)'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "e375b2b8-f36b-4131-b358-2e210a6f4ec2", 
	"Документ_ПланСборкиРазборки", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Поручения экспедиторам'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "4fce3a52-74d5-4abc-9c82-437107cc2a9d", 
	"Документ_ПоручениеЭкспедитору", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Порчи товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "6468b535-c213-4b70-b39b-2275a88674a3", 
	"Документ_ПорчаТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Порчи товаров у хранителей'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a4ddba45-9418-444c-b828-61d6002f30e8", 
	"Документ_ПорчаТоваровУХранителя", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Поступления безналичных ДС'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "06f31d96-e21c-45fb-963d-f5f0c2fd1700", 
	"Документ_ПоступлениеБезналичныхДенежныхСредств", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Поступления товаров на склад'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "3d1f393c-1f47-473a-b3af-310d3fc8301d", 
	"Документ_ПоступлениеТоваровНаСклад", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Поступления товаров от хранителей/комиссионеров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "289dcab0-792f-45b0-8846-50814d5800d2", 
	"Документ_ПоступлениеТоваровОтХранителя", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Поступления услуг в подразделение'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "cb8baba2-d302-4d6f-a886-9cfea6d8677c", 
	"Документ_ПоступлениеУслугВПодразделение", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Документы приемки товаров на хранение'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "368e8cc5-3ebf-41dd-a547-9af7effa1271", 
	"Документ_ПриемкаТоваровНаХранение", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Приобретение товаров и услуг'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "36a77c62-862d-40a1-88d6-0cc59b6d6a6a", 
	"Документ_ПриобретениеТоваровУслуг", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Приобретение услуг и прочих активов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "411484b4-1c7e-4ca7-9cae-f74165efd1c8", 
	"Документ_ПриобретениеУслугПрочихАктивов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Приходные кассовые ордера'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "8a4a8161-ea9a-4803-80f7-b12cede75b86", 
	"Документ_ПриходныйКассовыйОрдер", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Приходные ордера на товары'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "327fa038-96fd-4955-b518-ab5804ca6997", 
	"Документ_ПриходныйОрдерНаТовары", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Прочие оприходования товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "400c7d9a-0329-4355-b194-d9ee777be42d", 
	"Документ_ПрочееОприходованиеТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отражение прочих доходов и расходов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ef88ae64-5759-45c1-b936-eafb1ec2f68e", 
	"Документ_ПрочиеДоходыРасходы", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Распоряжения на перемещение ДС'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f33caa42-29bf-46da-8ce8-24d276aa5605", 
	"Документ_РаспоряжениеНаПеремещениеДенежныхСредств", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Распределение доходов по направлениям деятельности'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "5d2fee21-0aad-4e7d-bcf3-227ed455b2dd", 
	"Документ_РаспределениеДоходовПоНаправлениямДеятельности", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Распределение расходов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "4f0d1f0d-4d18-4c12-9b06-2539cad45d7c", 
	"Документ_РаспределениеПрочихЗатрат", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Распределение РБП'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "64af17e6-b93c-4ec4-9f77-e9ec1f0cc608", 
	"Документ_РаспределениеРасходовБудущихПериодов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Расходные кассовые ордера'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "30a04b84-de56-491d-87c1-9be488409178", 
	"Документ_РасходныйКассовыйОрдер", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Расходные ордера на товары'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "46490293-a9be-4da7-8133-f439c546298e", 
	"Документ_РасходныйОрдерНаТовары", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Реализации товаров и услуг'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "30345ec6-cfd9-4f28-8da1-32596d600b32", 
	"Документ_РеализацияТоваровУслуг", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Реализации услуг и прочих активов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "fc704a91-efe3-4d1d-bdcf-60b7d2573232", 
	"Документ_РеализацияУслугПрочихАктивов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Цены поставщиков'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "d341322b-84c7-45fa-a57d-5c62fe26824f", 
	"Документ_РегистрацияЦенНоменклатурыПоставщика", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Документы сборки (разборки) товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "b5bfb826-6e0f-4278-8105-ed1ad27939f7", 
	"Документ_СборкаТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Сверки взаиморасчетов (2.4)'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a66116af-cda2-4a92-ae9f-c9c4c82acf7e", 
	"Документ_СверкаВзаиморасчетов2_4", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Сверки взаиморасчетов (2.5.11)'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "793d65f3-6cae-40be-b9ef-f6dab8a45e78", 
	"Документ_СверкаВзаиморасчетов2_5_11", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Списания безналичных ДС'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "321a9487-1049-4326-9473-294c9df1150b", 
	"Документ_СписаниеБезналичныхДенежныхСредств", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Списание расхождений между поступлением и приобретением'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f1f8032c-b58c-45d9-a053-626d80baa016", 
	"Документ_СписаниеРасхожденийПоступлениеПриобретение", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Корректировки задолженностей'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "08c14b9b-0e3a-4dbb-85a8-0f13fe3eed24", 
	"Документ_КорректировкаЗадолженности", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Списания недостач товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "8bb7fae3-b885-4b0c-bd01-c4dbf52c0998", 
	"Документ_СписаниеНедостачТоваров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Отчеты о списании товаров с хранения'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "4785cc91-2f39-43c6-8426-12fc56b471a9", 
	"Документ_ОтчетОСписанииТоваровСХранения", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Счета на оплату'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a1dd40d8-1959-4d7e-a08f-0847804865bd", 
	"Документ_СчетНаОплатуКлиенту", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Таможенные декларации на импорт'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "8a5574f1-c64b-42b9-8c4a-88352d921694", 
	"Документ_ТаможеннаяДекларацияИмпорт", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Упаковочные листы'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "65668eeb-1f44-41bb-8f01-695caaf88cba", 
	"Документ_УпаковочныйЛист", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Установки блокировок ячеек'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "aa777918-c7b7-46da-8b91-9769691115dc", 
	"Документ_УстановкаБлокировокЯчеек", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Квоты ассортимента'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ff884028-ef80-4bb9-8be3-5b4bf94620c3", 
	"Документ_УстановкаКвотАссортимента", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'История изменения цен'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "da4604d7-6cba-4bfd-afdc-5ae5c693e533", 
	"Документ_УстановкаЦенНоменклатуры", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Чеки ККМ продажи'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "6440dad7-cb6a-bf4d-fdac-93e56335ae5c", 
	"Документ_ЧекККМ", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Чеки ККМ на возврат'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "da6d0474-ba6c-fd4b-dcaf-5ae5c93e5336", 
	"Документ_ЧекККМВозврат", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Чеки ККМ коррекции'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "d4d760a4-6acb-4dbf-acfd-ae5533c693e5", 
	"Документ_ЧекККМКоррекции", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Каналы рекламных воздействий'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "822c566d-f23f-4a8f-b4d5-5d0903a6dd27", 
	"ПланВидовХарактеристик_КаналыРекламныхВоздействий", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Статьи активов и пассивов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "7b41e8e0-bbe7-4943-a859-c9705218896b", 
	"ПланВидовХарактеристик_СтатьиАктивовПассивов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Статьи доходов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "cfb5df13-8137-4eae-b1e8-b769f09116fd", 
	"ПланВидовХарактеристик_СтатьиДоходов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Статьи расходов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "c9c3ca99-a1c6-46f5-960c-d494dee30b80", 
	"ПланВидовХарактеристик_СтатьиРасходов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Банковские счета'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "fa532757-da27-4e26-ac5f-c32550213cb1", 
	"Справочник_БанковскиеСчетаКонтрагентов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Банковские счета организаций'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f6d04f12-8796-458a-8c35-223f917b6794", 
	"Справочник_БанковскиеСчетаОрганизаций", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Бизнес-регионы'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "fa6b1e95-38c5-4ba5-85d3-9263dc8bf5f1", 
	"Справочник_БизнесРегионы", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Бонусные программы лояльности'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "99130094-d0dd-406f-8068-68b71ba6acb5", 
	"Справочник_БонусныеПрограммыЛояльности", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Варианты комплектации номенклатуры'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "6a89b3b1-87ee-4d87-a502-0f9cfe3d67fd", 
	"Справочник_ВариантыКомплектацииНоменклатуры", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Виды карт лояльности'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "900ac571-f985-405c-a50e-c9c6edfbae4c", 
	"Справочник_ВидыКартЛояльности", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Виды номенклатуры'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "058d7e98-beea-4834-b7cb-1ab05d63c8f3", 
	"Справочник_ВидыНоменклатуры", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Виды подарочных сертификатов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "34177601-7a1d-4283-9b22-a8cb0e58bb42", 
	"Справочник_ВидыПодарочныхСертификатов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Виды цен'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f9dd70bb-e697-42ae-99c4-aaa62abdbf27", 
	"Справочник_ВидыЦен", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Виды цен поставщиков'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f0dc7108-4df0-4065-ae1f-cc20e167678c", 
	"Справочник_ВидыЦенПоставщиков", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Группы настроек фин. учета номенклатуры'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "7ec7394d-a2bc-4493-a01f-83bb1c5730e4", 
	"Справочник_ГруппыФинансовогоУчетаНоменклатуры", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Договоры с контрагентами'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "d23b5f4f-061a-4c28-9cc7-f7ede71c8ab7", 
	"Справочник_ДоговорыКонтрагентов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Договоры кредитов и депозитов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ebdaa4c6-750c-47cf-b4e1-d1fbb281bfe5", 
	"Справочник_ДоговорыКредитовИДепозитов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Договоры между организациями'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "132b5b62-b81a-47cb-897b-c5280b32b52f", 
	"Справочник_ДоговорыМеждуОрганизациями", Наименование, КодыЯзыков);
	
	Наименование = "ru = ''"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "9623d53e-672d-4b56-b054-3ff1c5d1437e", 
	"УдалитьСправочник_ДополнительныеОтчетыИОбработки", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Задачи проекта'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "03239253-36af-4b77-95fd-a62e4f1bdebc", 
	"Справочник_ЗадачиПроектов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Источники данных планирования'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "5204eeef-8b8e-4169-8b12-b33a5badaaa6", 
	"Справочник_ИсточникиДанныхПланирования", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Карты лояльности'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "6cc28cb7-986c-4f23-a8a7-14ca2a48f3de", 
	"Справочник_КартыЛояльности", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Кассы'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "dbde3b0f-2cb1-44f6-9b8a-30ea7f389a20", 
	"Справочник_Кассы", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Кассы ККМ'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "350d3a26-98e4-4232-a0df-e555f1482afb", 
	"Справочник_КассыККМ", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Коллекции (сезоны)'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "243e323f-965d-4767-9008-fb633876c63e", 
	"Справочник_КоллекцииНоменклатуры", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Контактные лица'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "5321769f-c1aa-47de-b029-0a31f3d2c67a", 
	"Справочник_КонтактныеЛицаПартнеров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Контрагенты'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "312bf0ee-35a3-4cd1-b84e-1e54fd5d3e4f", 
	"Справочник_Контрагенты", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Маркетинговые мероприятия'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "b820665e-f743-4072-bc2b-804e020aefe6", 
	"Справочник_МаркетинговыеМероприятия", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Направления деятельности'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "e8967082-7e2b-48ec-add2-c756ffeed0cf", 
	"Справочник_НаправленияДеятельности", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Области хранения'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a8dc8cd3-db32-4280-9b2a-05ce095e6610", 
	"Справочник_ОбластиХранения", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Организации'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "83c464a3-259d-49f9-8eda-5cd69322550a", 
	"Справочник_Организации", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Подарочные сертификаты'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "687e3458-4629-4682-bca7-675c6806dfd2", 
	"Справочник_ПодарочныеСертификаты", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Подключаемое оборудование'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a26d2637-fc50-4397-99be-2b7eabc7ce86", 
	"Справочник_ПодключаемоеОборудование", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Правила начисления и списания бонусных баллов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "c6087fe9-09d7-491b-a2d2-2860fc7ac555", 
	"Справочник_ПравилаНачисленияИСписанияБонусныхБаллов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Правила обмена с подключаемым оборудованием offline'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f864b090-942a-4cdd-8dd3-0fdc34d7aafc", 
	"Справочник_ПравилаОбменаСПодключаемымОборудованиемOffline", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Претензии'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "1a291c8e-09ed-4531-b1d6-d0ebbe5b34f4", 
	"Справочник_Претензии", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Проекты'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f36c7c4a-dded-47c0-8283-b526aefaf3a3", 
	"Справочник_Проекты", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Прочие активы и пассивы'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "dd99c581-5039-424c-b290-26ba21dba251", 
	"Справочник_ПрочиеАктивыПассивы", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Прочие расходы'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a1c33d61-5466-4b90-81f3-d6cac7747dee", 
	"Справочник_ПрочиеРасходы", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Рейтинги продаж номенклатуры'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "c5fa4373-8702-4588-b5e8-37e93967be71", 
	"Справочник_РейтингиПродажНоменклатуры", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Сделки с клиентами'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "8e2d44d3-f80d-490e-b008-8d3e5469ee56", 
	"Справочник_СделкиСКлиентами", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Сегменты номенклатуры'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "fbf5065c-426e-40b3-a9fb-e46aa9d7c2e1", 
	"Справочник_СегментыНоменклатуры", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Сегменты клиентов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "78ab2475-b2fd-4817-be7b-00aa6a2b7658", 
	"Справочник_СегментыПартнеров", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Сертификаты номенклатуры'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "345d0b95-60ff-4d5b-bfa0-4e77504dd435", 
	"Справочник_СертификатыНоменклатуры", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Скидки (наценки)'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "48d065fe-21ed-43df-b919-5882ef9674b2", 
	"Справочник_СкидкиНаценки", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Складские помещения'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "39d0e77b-2346-4099-a680-7d47fe57fe9d", 
	"Справочник_СкладскиеПомещения", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Складские ячейки'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "d0b6fee9-4117-4091-827a-5dab0a776a48", 
	"Справочник_СкладскиеЯчейки", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Склады и магазины'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a9e936e8-0b20-4a5e-937d-adbb4348cba7", 
	"Справочник_Склады", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Соглашения об условиях продаж'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "d47427af-b1d4-41cd-b69a-ba0cd46f89d0", 
	"Справочник_СоглашенияСКлиентами", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Соглашения с поставщиками'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "e8723370-89b4-4f7e-92e5-1671f5b13047", 
	"Справочник_СоглашенияСПоставщиками", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Статьи движения денежных средств'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "faf07d23-941f-411b-be46-79b72c161cc7", 
	"Справочник_СтатьиДвиженияДенежныхСредств", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Структура целей'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ed9e0081-196a-48cb-8bbf-f75b9a560b69", 
	"Справочник_СтруктураЦелей", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Сценарии синхронизации данных'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "7c296fff-4787-4529-beba-120360654bdc", 
	"Справочник_СценарииОбменовДанными", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Товарные категории'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "4458ad39-53b9-4004-abbb-6c5c6bd47685", 
	"Справочник_ТоварныеКатегории", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Форматы магазинов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "53c4705f-3adf-4550-b431-cd52097c7ce2", 
	"Справочник_ФорматыМагазинов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Шаблоны этикеток и ценников'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a502c8cb-85e9-48b0-9c93-e9c5e025cae4", 
	"Справочник_ШаблоныЭтикетокИЦенников", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Эквайринговые терминалы'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "950dc173-da97-4ff2-bed0-47059cfb2120", 
	"Справочник_ЭквайринговыеТерминалы", Наименование, КодыЯзыков);
	
	//++ Локализация
	
	Наименование = "ru = 'Ввод остатков НДС предъявленного'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "6fee8bbc-79a0-4248-bb7e-f4a715a75414", 
	"Документ_ВводОстатковНДСПредъявленного", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Запросы коммерческих предложений'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f1415606-97c3-4b30-bfc0-c75c67f1459c", 
	"Документ_ЗапросКоммерческихПредложенийПоставщиков", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Запросы коммерческих предложений'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "d9efdf8a-55bc-457a-9382-5d0fe5b0d6cc", 
	"Документ_ЗапросКоммерческогоПредложенияОтКлиента", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Иные документы подтверждения НДС'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "9c62d702-ee85-4e5f-8792-4e361a368a7a", 
	"Документ_ИнойДокументПодтвержденияНДС", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Коммерческие предложения поставщиков'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "8d80b13e-6833-4e16-b559-e73d1d25a9ac", 
	"Документ_КоммерческоеПредложениеПоставщика", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Корректировки обособленного учета'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "0df8936f-3fee-43cf-8ece-12a3345cb866", 
	"Документ_КорректировкаОбособленногоУчетаЗапасов", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Кассовые книги'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "2f4e1003-2cf1-46b2-9e1e-eda085abd12c", 
	"Документ_ЛистКассовойКниги", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Маркировка товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "ad20e9f7-372b-40ea-bb2d-73581dd66b78", 
	"Документ_МаркировкаТоваровГИСМ", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Операции по ЮKassa'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "4fc85bd2-618e-43bb-a12e-4d77532b1c05", 
	"Документ_ОперацияПоЯндексКассе", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Перемаркировка товаров'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "a9717b3d-a562-4349-b83c-c9ea304d1b6d", 
	"Документ_ПеремаркировкаТоваровГИСМ", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Справки о подтверждающих документах'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "14f232a2-9c8e-4491-9c50-5f5e31673b6b", 
	"Документ_СправкаОПодтверждающихДокументах", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Счета-фактуры выданные'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "db7f173f-009a-4f6e-a757-e8863eaf6931", 
	"Документ_СчетФактураВыданный", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Счета-фактуры выданные комиссионерам (агентам)'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "24268a7c-74e9-4b1b-9f8c-0b3939c9045b", 
	"Документ_СчетФактураКомиссионеру", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Счета-фактуры полученные от комитентов (принципалов)'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "2e23caf2-99f6-4df8-a4b2-a945199501eb", 
	"Документ_СчетФактураКомитента", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Счета-фактуры налогового агента'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "2ab96d23-540b-4106-8ead-676cd856f1fb", 
	"Документ_СчетФактураНалоговыйАгент", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Счет-фактура на неподтвержденную реализацию по ставке 0%'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "8a4ed2f0-41bd-4645-a992-a48fa4e43d0d", 
	"Документ_СчетФактураНаНеподтвержденнуюРеализацию0", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Счета-фактуры полученные'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "f3129f3c-679b-45da-8da6-cb8b94e48fa9", 
	"Документ_СчетФактураПолученный", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Счета-фактуры полученные (налоговый агент)'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "2fff6528-8534-4ed5-a1c4-005856749157", 
	"Документ_СчетФактураПолученныйНалоговыйАгент", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Список патентов'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "7e9e8180-9cb9-4d04-8bd8-fd8666ce7ea9", 
	"Справочник_Патенты", Наименование, КодыЯзыков);
	
	Наименование = "ru = 'Государственные контракты'"; // @НСтр
	ДобавитьЭлементНабораСвойств(Элементы, "5e2a2a97-c7f4-4a57-806d-b714855e80f1", 
	"Справочник_ГосударственныеКонтракты", Наименование, КодыЯзыков);
	//-- Локализация
	
	
КонецПроцедуры

// Добавляет набор дополнительных реквизитов и сведений.
//
// Параметры:
//  Элементы   - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//  Идентификатор - Строка - Уникальный идентификатор набора.
//  ИмяНабора - Строка - Владелец набора.
//  Наименование - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//  КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//
Процедура ДобавитьЭлементНабораСвойств(Элементы, Идентификатор, ИмяНабора, Наименование, КодыЯзыков)
	
	Набор = Элементы.Добавить();
	Набор.ИмяПредопределенногоНабора = ИмяНабора;
	Набор.Ссылка = Новый УникальныйИдентификатор(Идентификатор);
	Набор.Используется = Истина;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Набор, "Наименование",
		Наименование, КодыЯзыков);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
