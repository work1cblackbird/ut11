#Область ПрограммныйИнтерфейс

#Область ОбщиеПроцедурыИФункцииФормЭлементаСправочникаПартнеры

// Определяет необходимость задания вопроса перед закрытием формы
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - проверяемая форма
// Возвращаемое значение:
// 	Булево - Признак необходимости вопроса
//
Функция НеобходимостьВопросаПередЗакрытием(Форма) Экспорт
	НеобходимостьВопроса = Ложь;
	//++ Локализация
	Элементы = Форма.Элементы;
	
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаНайдено И Форма.ДействиеПоРезультатамНайдено = 0 Тогда
		НеобходимостьВопроса = Ложь;
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница <> Элементы.СтраницаПервичнаяИнформация Тогда
		НеобходимостьВопроса = Истина;
	Иначе
		Если Форма.ЭтоКомпания = 0 Тогда
			Если Форма.УказыватьЮридическиеРеквизиты
				И (Форма.ВидКомпании = 0
					Или Форма.ВидКомпании = 3) Тогда
				
				Если ЗначениеЗаполнено(Форма.НаименованиеКонтрагента)
					Или ЗначениеЗаполнено(Форма.ИНН)
					Или ЗначениеЗаполнено(Форма.КПП)
					Или ЗначениеЗаполнено(Форма.КодПоОКПО)
					Или ЗначениеЗаполнено(Форма.РегистрационныйНомер) Тогда
					
					НеобходимостьВопроса = Истина;
					
				КонецЕсли;
				
			ИначеЕсли Форма.УказыватьЮридическиеРеквизиты
				И Форма.ВидКомпании = 2 Тогда
				
				Если ЗначениеЗаполнено(Форма.ИНН)
					Или ЗначениеЗаполнено(Форма.КодПоОКПО)
					Или ЗначениеЗаполнено(Форма.РегистрационныйНомер) Тогда
					
					НеобходимостьВопроса = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Форма.ИННПартнерФизЛицо) Тогда
				НеобходимостьВопроса = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
	Возврат НеобходимостьВопроса;
	
КонецФункции

// Проверяет сведения головного контрагента
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма контрагента
// 	Отказ - Булево - признак отказа
Процедура СведенияГоловногоКонтрагентаЗаполненыНеправильно(Форма, Отказ) Экспорт
	//++ Локализация
	Если Форма.ВыбратьГоловногоКонтрагента = 1 Тогда
		Если ЗначениеЗаполнено(Форма.ИНН) Тогда
			Если Форма.КПП = Форма.КППГоловногоКонтрагента Тогда
				ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(
					НСтр("ru = 'КПП головного контрагента должен отличаться от КПП обособленного подразделения'"),
					Форма.ИспользуютсяТолькоПартнеры,
					Форма.КППГоловногоКонтрагента);
			ИначеЕсли ПартнерыИКонтрагентыЛокализацияВызовСервера.ИННКППГоловногоКонтрагентаИспользуютсяВИнформационнойБазе(Форма.ИНН, Форма.КППГоловногоКонтрагента) Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// Проверяет первичную информацию на корректное заполнение
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма обработчика
// 	Отказ - Булево - признак отказа обработки
//
Процедура ПервичнаяИнформацияЗаполненаНеправильно(Форма, Отказ) Экспорт
	//++ Локализация
	Если Форма.УказыватьЮридическиеРеквизиты Тогда
		Если Форма.ЭтоКомпания = 0 И (Форма.ВидКомпании = 0 Или Форма.ВидКомпании = 3) Тогда
			Если ПустаяСтрока(Форма.ИНН) И Не ПустаяСтрока(Форма.КПП) Тогда
				ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(НСтр("ru = 'Указан КПП, но не указан ИНН'"),Форма.ИспользуютсяТолькоПартнеры, "ИНН");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Форма.ЭтоКомпания = 0 И НЕ Форма.ВидКомпании = 1 И НЕ Форма.УпрощенныйВводДоступен Тогда
			Если ПустаяСтрока(Форма.ИНН) Тогда
				ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(НСтр("ru = 'Не указано значение ИНН'"),Форма.ИспользуютсяТолькоПартнеры, "ИНН");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// Проверяет необходимость
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения -
// Возвращаемое значение:
// 	Булево - необходим поиск
//
Функция НеобходимПоискНепривязанныхОбособленныхПодразделений(Форма) Экспорт
	
	НеобходимПоиск = Ложь;
	//++ Локализация
	НеобходимПоиск = ЗначениеЗаполнено(Форма.ИНН);
	//-- Локализация
	Возврат НеобходимПоиск
	
КонецФункции

#КонецОбласти

#Область ОбщиеПроцедурыИФункцииФормЭлементаСправочникаКонтрагенты

//++ Локализация

// Инициирует структуру данных контрагента для сравнения с данными полученных с сервиса.
//
// Возвращаемое значение:
//   Булево   - инициированная значениями по умолчанию структура.
//
Функция ИнициироватьСтруктураДанныхДляСравнения() Экспорт

	ДанныеДляСравнения = Новый Структура;
	ДанныеДляСравнения.Вставить("КПП", "");
	ДанныеДляСравнения.Вставить("ИНН", "");
	ДанныеДляСравнения.Вставить("РегистрационныйНомер", "");
	ДанныеДляСравнения.Вставить("Наименование", "");
	ДанныеДляСравнения.Вставить("НаименованиеСокращенное", "");
	ДанныеДляСравнения.Вставить("ЮридическийАдрес", "");
	ДанныеДляСравнения.Вставить("Телефон", "");
	
	Возврат ДанныеДляСравнения;
	
КонецФункции

// Сравнивает имеющиеся значения реквизитов контрагента с данными, полученными с сервиса.
//
// Параметры:
//  РеквизитыКонтрагента  - Структура - содержит данные, полученные с сервиса.
//  ДанныеОбъекта         - Структура - содержит данные контрагента.
//  ЗаполнятьИНН          - Булево    - содержит признак необходимости заполнения ИНН контрагента.
//
// Возвращаемое значение:
//   Булево   - Истина, если есть различия, Ложь в обратном случае.
//
Функция РезультатСравненияПолученныхДанныхКонтрагентаСИмеющимися(РеквизитыКонтрагента, ДанныеОбъекта, ЗаполнятьИНН) Экспорт
	
	Результат = Новый Структура("ЕстьИзменения, ЕстьИзмененияВЗаполненныхРеквизитах", Ложь, Ложь);
	
	Если РеквизитыКонтрагента.Свойство("ИНН") И РеквизитыКонтрагента.ИНН <> ДанныеОбъекта.ИНН Тогда
		Результат.ЕстьИзменения = Истина;
		Если ЗначениеЗаполнено(ДанныеОбъекта.ИНН) Тогда
			Результат.ЕстьИзмененияВЗаполненныхРеквизитах = Истина;
			Возврат Результат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("КПП") И РеквизитыКонтрагента.КПП <> ДанныеОбъекта.КПП Тогда
		Результат.ЕстьИзменения = Истина;
		Если ЗначениеЗаполнено(ДанныеОбъекта.КПП) Тогда
			Результат.ЕстьИзмененияВЗаполненныхРеквизитах = Истина;
			Возврат Результат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("РегистрационныйНомер")
		И РеквизитыКонтрагента.РегистрационныйНомер <> ДанныеОбъекта.РегистрационныйНомер Тогда
		
		Результат.ЕстьИзменения = Истина;
		
		Если ЗначениеЗаполнено(ДанныеОбъекта.РегистрационныйНомер) Тогда
			Результат.ЕстьИзмененияВЗаполненныхРеквизитах = Истина;
			
			Возврат Результат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("Наименование") 
		И РеквизитыКонтрагента.Наименование <> ДанныеОбъекта.Наименование Тогда
		Результат.ЕстьИзменения = Истина;
		Если ЗначениеЗаполнено(ДанныеОбъекта.Наименование) Тогда
			Результат.ЕстьИзмененияВЗаполненныхРеквизитах = Истина;
			Возврат Результат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("НаименованиеСокращенное") 
		И РеквизитыКонтрагента.НаименованиеСокращенное <> ДанныеОбъекта.НаименованиеСокращенное Тогда
		Результат.ЕстьИзменения = Истина;
		Если ЗначениеЗаполнено(ДанныеОбъекта.НаименованиеСокращенное) Тогда
			Результат.ЕстьИзмененияВЗаполненныхРеквизитах = Истина;
			Возврат Результат;
		КонецЕсли;	
		
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("Телефон") 
		И РеквизитыКонтрагента.Телефон <> Неопределено Тогда
		Если РеквизитыКонтрагента.Телефон.Представление <> ДанныеОбъекта.Телефон Тогда
			
			Результат.ЕстьИзменения = Истина;
			Если ЗначениеЗаполнено(ДанныеОбъекта.Телефон) Тогда
				Результат.ЕстьИзмененияВЗаполненныхРеквизитах = Истина;
				Возврат Результат;
			КонецЕсли;
			
			
		КонецЕсли;
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("ЮридическийАдрес")
		И РеквизитыКонтрагента.ЮридическийАдрес <> Неопределено Тогда
		Если РеквизитыКонтрагента.ЮридическийАдрес.Представление <> ДанныеОбъекта.ЮридическийАдрес Тогда
			
			Результат.ЕстьИзменения = Истина;
			Если ЗначениеЗаполнено(ДанныеОбъекта.ЮридическийАдрес) Тогда
				Результат.ЕстьИзмененияВЗаполненныхРеквизитах = Истина;
				Возврат Результат;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Формирует текст ошибки и показывает пользователю предупреждение на основании данных
// предоставленных подсистемой "Проверка контрагентов" БСП.
// Параметры:
//  ОписаниеОшибки  - Строка - описание ошибки, предоставленное подсистемой "Проверка контрагентов" БСП.
//
Процедура ПоказатьПользователюОшибкуПолученияРеквизитовКонтрагентаПоИНН(ОписаниеОшибки) Экспорт
	
	Если ПустаяСтрока(ОписаниеОшибки) Тогда
		ТекстПредупреждения = НСтр("ru='При получении данных ЕГРЮЛ\ЕГРИП произошла неизвестная ошибка.'");
	ИначеЕсли ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
		ТекстПредупреждения = НСтр("ru='Не указаны параметры аутентификации Интернет-поддержки пользователей.'");
	ИначеЕсли ОписаниеОшибки = "НеУказанПароль" Тогда
		ТекстПредупреждения = НСтр("ru='Не указан пароль к Интернет-поддержке пользователей.'");
	ИначеЕсли ОписаниеОшибки = "Сервис1СКонтрагентНеПодключен" Тогда
		Возврат;
	ИначеЕсли СтрЧислоВхождений(ВРЕГ(ОписаниеОшибки),"НЕ УДАЛОСЬ НАЙТИ ДАННЫЕ ДЛЯ ЗАПОЛНЕНИЯ РЕКВИЗИТОВ") > 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'Выполнен запрос к базе ЕГРЮЛ\ЕГРИП.'") + " " + ОписаниеОшибки;
	Иначе
		ТекстПредупреждения = ОписаниеОшибки;
	КонецЕсли;
	
	ПоказатьПредупреждение(, ТекстПредупреждения);
	
КонецПроцедуры

//-- Локализация

// Дополнить параметры формы создания нового партнера
//
// Параметры:
//  ПараметрыСоздания	 - Структура - структура параметров
//  Форма				 - ФормаКлиентскогоПриложения - форма справочника-основания
//
Процедура ДополнитьПараметрыСозданияПартнера(ПараметрыСоздания, Форма) Экспорт
	//++ Локализация
	Объект = Форма.Объект;
	
	ПараметрыСоздания.Вставить("ИНН", Объект.ИНН);
	ПараметрыСоздания.Вставить("КодПоОКПО", Объект.КодПоОКПО);
	ПараметрыСоздания.Вставить("КПП", Объект.КПП);
	//-- Локализация	
КонецПроцедуры

// Проверяет соответствие ИНН требованиям.
//
// Параметры:
//  Форма          - ФормаКлиентскогоПриложения - форма проверяемого объекта.
//  ТолькоПроверка - Булево - признак того, что будет только проверен ИНН, при этом не будут вызваны процедуры заполнения.
//
Процедура ПроверитьИНН(Форма, ТолькоПроверка = Ложь) Экспорт
	//++ Локализация
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	Если РеквизитыКонтрагента.ЭтоФормаПомощника Тогда
		ИННПриИзменении_ПомощникНового(Форма, ТолькоПроверка);
	Иначе
		ИННПриИзменении(Форма, РеквизитыКонтрагента, ТолькоПроверка);
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// Проверяет соответствие ОГРН требованиям.
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма проверяемого объекта.
//
Процедура ПроверитьОГРН(Форма) Экспорт
	//++ Локализация
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	
	Если РеквизитыКонтрагента.ЭтоФормаПомощника Тогда
		ОГРНПриИзменении_ПомощникНового(Форма);
	Иначе
		ОГРНПриИзменении(Форма, РеквизитыКонтрагента);
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийФормы_Контрагенты

// Обработчик события ПередЗаписью формы элемента справочника Контрагенты
//
// Параметры:
//  Отказ           - Булево - признак отказа от создания формы.
//  ПараметрыЗаписи - Структура - структура, содержащая параметры записи.
//  Форма           - ФормаКлиентскогоПриложения - форма, для которой выполняется обработчик.
//
Процедура ПередЗаписьюКонтрагент(Отказ, ПараметрыЗаписи, Форма) Экспорт
	//++ Локализация
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	ЮрФизЛицо = РеквизитыКонтрагента.ЮрФизЛицо;
	ЭтоФормаПартнера = РеквизитыКонтрагента.ЭтоФормаПартнера;
	
	Объект = Форма.Объект;
	
	Если Не ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент") Тогда
		Если ЭтоФормаПартнера Тогда
			Форма.НалоговыйНомер = "";
		Иначе
			Объект.НалоговыйНомер = "";
		КонецЕсли;
	КонецЕсли;
	
	Если ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо")
		ИЛИ ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент") Тогда
			Если ЭтоФормаПартнера Тогда
				Форма.КодПоОКПО = "";
			Иначе
				Объект.КодПоОКПО = "";
			КонецЕсли;
	КонецЕсли;
	
	Если ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") Тогда
		Если ЭтоФормаПартнера Тогда
			Форма.РегистрационныйНомер = "";
		Иначе
			Объект.РегистрационныйНомер = "";
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(РеквизитыКонтрагента.ИНН) 
		Или ЮрФизЛицо <> ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
			И ЮрФизЛицо <> ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент") Тогда
		Если ЭтоФормаПартнера Тогда
			Форма.КПП = "";
		Иначе
			Объект.КПП = "";
		КонецЕсли;
	КонецЕсли;
	// Если контрагент не является резидентом РФ, то страна регистрации должна быть Россией.
	Если Не ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент") Тогда
		Если ЭтоФормаПартнера Тогда
			Форма.СтранаРегистрации = ЗначениеНастроекКлиентСерверПовтИсп.ОсновнаяСтрана();
		Иначе
			Объект.СтранаРегистрации = ЗначениеНастроекКлиентСерверПовтИсп.ОсновнаяСтрана();
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы_Контрагент

Процедура ОбработкаНавигационнойСсылкиФормы_Контрагент(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, Форма) Экспорт
	//++ Локализация
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ИсторияКПП" Тогда
		
		РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТолькоПросмотр", Форма.ТолькоПросмотр);
		Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
			ПараметрыФормы.Вставить("ТекущийКПП", Форма.КПП);
			ПараметрыФормы.Вставить("ИсторияКПП", Форма.ИсторияКПП);
		Иначе
			ПараметрыФормы.Вставить("ТекущийКПП", Форма.Объект.КПП);
			ПараметрыФормы.Вставить("ИсторияКПП", Форма.Объект.ИсторияКПП);
		КонецЕсли;
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИсторияКПППослеЗакрытия", ЭтотОбъект, Новый Структура("Форма, ИмяЭлемента", Форма, Элемент.Имя));
		ОткрытьФорму("Справочник.Контрагенты.Форма.РедактированиеИсторииКПП", ПараметрыФормы, ЭтотОбъект,,,,ОповещениеОЗакрытии);
	КонецЕсли;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ЗагрузитьИзФайла" Тогда
		
		ТекстПредложения = НСтр("ru = 'Для загрузки из файла необходимо
								|установить расширение для работы с файлами.'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПодключеноРасширениеРаботыСФайлами",
			ЭтотОбъект,
			Новый Структура("Элемент, Форма", Элемент, Форма));
	
		ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(
			ОписаниеОповещения,
			ТекстПредложения,
			Ложь);
		
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

Процедура ПриИзмененииРеквизита_Контрагент(Элемент, Форма) Экспорт
	//++ Локализация
	ЭтоФормаПомощника = СтрНайти(Форма.ИмяФормы, "ПомощникНового") > 0;
	Если ЭтоФормаПомощника Тогда
		Если Элемент.Имя = "СокрЮрНаименованиеКонтрагента" 
			ИЛИ Элемент.Имя = "СокрЮридическоеНаименованиеТолькоПартнеры"
			ИЛИ Элемент.Имя = "ПолноеНаименованиеГоловногоКонтрагента" Тогда
			СокрЮрНаименованиеКонтрагентаПриИзменении_ПомощникНового(Элемент, Форма);
		КонецЕсли;
		Если Элемент.Имя = "ИННГоловногоКонтрагента" Тогда
			ИННГоловногоКонтрагентаПриИзменении_ПомощникНового(Элемент, Форма);
		КонецЕсли;
	Иначе
		Если Элемент.Имя = "НаименованиеСокращенное" Тогда
			НаименованиеСокращенноеПриИзменении(Элемент, Форма);
		КонецЕсли;
		Если Элемент.Имя = "ГоловнойКонтрагент" Тогда
			ГоловнойКонтрагентПриИзменении(Элемент, Форма);
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

Процедура ОкончаниеВводаТекста_Контрагент(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма) Экспорт
	//++ Локализация
	ЭтоФормаПомощника = СтрНайти(Форма.ИмяФормы, "ПомощникНового") > 0;
	Если ЭтоФормаПомощника Тогда
		Если Элемент.Имя = "КПП" Тогда
			КППОкончаниеВводаТекста_ПомощникНового(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
		КонецЕсли;
		Если Элемент.Имя = "КППГоловногоКонтрагента" Тогда
			КППГоловногоКонтрагентаОкончаниеВводаТекста_ПомощникНового(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
		КонецЕсли;
		Если Элемент.Имя = "КодПоОКПО" Тогда
			КодПоОКПООкончаниеВводаТекста_ПомощникНового(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
		КонецЕсли;
		Если Элемент.Имя = "КодПоОКПОГоловногоКонтрагента" Тогда
			КодПоОКПОГоловногоКонтрагентаОкончаниеВводаТекста_ПомощникНового(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
		КонецЕсли;
		Если Элемент.Имя = "ИННПартнерФизЛицо" Тогда
			ИННПартнерФизЛицоОкончаниеВводаТекста_ПомощникНового(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма)
		КонецЕсли;
	Иначе
		Если Элемент.Имя = "КПП" Тогда
			КППОкончаниеВводаТекста(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
		КонецЕсли;
		
		Если Элемент.Имя = "КодПоОКПО" Тогда
			КодПоОКПООкончаниеВводаТекста(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы_Контрагенты

Процедура ВыполнитьКомандуЛокализации(Команда, Форма) Экспорт
	//++ Локализация
	ЭтоФормаПомощника = СтрНайти(Форма.ИмяФормы, "ПомощникНового") > 0;
	Если ЭтоФормаПомощника Тогда
		Если Команда.Имя = "ЗаполнитьПоИНН" Тогда
			ЗаполнитьПоИНН_ПомощникНового(Команда, Форма);
		КонецЕсли;
		Если Команда.Имя = "ЗаполнитьПоНаименованиюПоДаннымЕдиныхГосРеестров" Тогда
			ЗаполнитьПоНаименованию_ПомощникНового(Команда, Форма);
		КонецЕсли;
	Иначе
		Если Команда.Имя = "ЗаполнитьПоИНН" Тогда
			ЗаполнитьПоИНН(Команда, Форма);
		КонецЕсли;
		Если Команда.Имя = "ЗаполнитьГоловногоКонтрагента" Тогда
			ЗаполнитьГоловногоКонтрагента(Команда, Форма);
		КонецЕсли;
		Если Команда.Имя = "ЗаполнитьПоНаименованиюПоДаннымЕдиныхГосРеестров" Тогда
			ЗаполнитьПоНаименованию(Команда, Форма);
		КонецЕсли;
	КонецЕсли;
	//-- Локализация	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеСлужебныеМетоды

Процедура ДополнитьДанныеИсторияНаименованияИП(СтрокаНаименование, ДанныеЗаполнения, НаименованиеСокращенное, НаименованиеПолное) Экспорт
	//++ Локализация
	ФИО = СтрокаНаименование.Фамилия + " " + СтрокаНаименование.Имя + " " + СтрокаНаименование.Отчество;
	НаименованиеПолное = СтрШаблон(НСтр("ru = 'Индивидуальный предприниматель %1'"), ФИО);
	НаименованиеСокращенное = СтрШаблон(НСтр("ru = 'ИП %1'"), ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИО));
	ДанныеЗаполнения.Вставить("ФамилияИП", СтрокаНаименование.Фамилия);
	ДанныеЗаполнения.Вставить("ИмяИП", СтрокаНаименование.Имя);
	ДанныеЗаполнения.Вставить("ОтчествоИП", СтрокаНаименование.Отчество);
	//-- Локализация
КонецПроцедуры
 

//++ Локализация

// Вызывается из различных форм элемента справочника Контрагенты при редактировании ИНН.
// Параметры:
//  Объект               - ДанныеФормыСтруктура - реквизиты формы.
//  РеквизитыКомпании    - Структура            - реквизиты контрагента.
//
Процедура ЗаполнитьИсториюКПП(Объект, РеквизитыКомпании) Экспорт
	
	Объект.ИсторияКПП.Очистить();
	
	ИсторияКПП = ПартнерыИКонтрагентыКлиент.ПолучитьИсториюРеквизита(РеквизитыКомпании, "КПП");
	Если ИсторияКПП = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ИсторияКПП.Количество() > 1 Тогда
		Для Каждого СтрокаКПП Из ИсторияКПП Цикл
			СтрокаИсторииКПП = Объект.ИсторияКПП.Добавить();
			СтрокаИсторииКПП.Период = СтрокаКПП.Дата;
			СтрокаИсторииКПП.КПП    = СтрокаКПП.Значение;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

//-- Локализация

#КонецОбласти

//++ Локализация
#Область ПроверкаКонтрагентов

Процедура ВыполнитьЗаполнениеРеквизитовПоИНН(Форма, РеквизитыКонтрагента, ЗаполнятьИНН = Ложь) Экспорт
	
	Если РеквизитыКонтрагента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
		
		ПартнерыИКонтрагентыЛокализацияКлиент.ПоказатьПользователюОшибкуПолученияРеквизитовКонтрагентаПоИНН(РеквизитыКонтрагента.ОписаниеОшибки);
		
	Иначе
		
		РезультатСравнения = ПартнерыИКонтрагентыЛокализацияКлиент.РезультатСравненияПолученныхДанныхКонтрагентаСИмеющимися(РеквизитыКонтрагента,
		                                                                                                         ДанныеОбъектаДляСравнения(Форма),
		                                                                                                         ЗаполнятьИНН);
		
		Если РезультатСравнения.ЕстьИзменения Тогда
			
			Если РезультатСравнения.ЕстьИзмененияВЗаполненныхРеквизитах Тогда 
				
				ОписаниеОповещенияПерезаполнить = Новый ОписаниеОповещения("ЗаполнениеРеквизитовКонтрагентаПоИННЗавершение",
				                                                           ЭтотОбъект,
				                                                           Новый Структура("РеквизитыКонтрагента, Форма", РеквизитыКонтрагента, Форма));
				ТекстВопроса = НСтр("ru = 'Перезаполнить реквизиты контрагента на основании данных ЕГРЮЛ\ЕГРИП?'");
				ПоказатьВопрос(ОписаниеОповещенияПерезаполнить, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
			Иначе
				
				ЗаполнитьРеквизитыКонтрагентаПоПолученнымДанным(РеквизитыКонтрагента,Форма);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//-- Локализация

//++ Локализация
#Область ДосьеКонтрагента

Процедура ДосьеКонтрагента(СсылкиКонтрагенты, ПараметрыВыполнения) Экспорт
	
	ПараметрКоманды = СсылкиКонтрагенты;
	ПараметрыФормы = ПараметрыВыполнения.Форма.Параметры;
	
	Если ЗначениеЗаполнено(ПараметрКоманды) Тогда
		ИНН_Контрагента = ОбщегоНазначенияУТВызовСервера.РеквизитыКонтрагента(ПараметрКоманды[0]); 
		ОткрытьФорму("Отчет.ДосьеКонтрагента.Форма",Новый Структура("ИНН", ИНН_Контрагента),,ИНН_Контрагента);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//-- Локализация
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация
#Область ПроверкаКонтрагентов_Служебные

Процедура ЗаполнениеРеквизитовКонтрагентаПоИННЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ЗаполнитьРеквизитыКонтрагентаПоПолученнымДанным(ДополнительныеПараметры.РеквизитыКонтрагента, ДополнительныеПараметры.Форма);
		
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьРеквизитыКонтрагентаПоПолученнымДанным(РеквизитыКонтрагента, Форма)
	Элементы = Форма.Элементы;
	РеквизитыФормыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	Если РеквизитыФормыКонтрагента.ЭтоФормаПомощника Тогда
		Форма.ИНН = РеквизитыКонтрагента.ИНН;
		Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаГоловнойКонтрагент Тогда
			
			Форма.НаименованиеГоловнойКонтрагент  = РеквизитыКонтрагента.Наименование;
			ПартнерыИКонтрагентыКлиент.ЗаполнитьИсториюНаименований(Форма, РеквизитыКонтрагента);
			Если РеквизитыКонтрагента.Свойство("КПП") Тогда
				Форма.КППГоловногоКонтрагента = РеквизитыКонтрагента.КПП;
				ПартнерыИКонтрагентыЛокализацияКлиент.ЗаполнитьИсториюКПП(Форма, РеквизитыКонтрагента);
			КонецЕсли;
			Форма.ПолноеНаименованиеГоловногоКонтрагента = РеквизитыКонтрагента.НаименованиеСокращенное;
			Если РеквизитыКонтрагента.Свойство("ЮридическийАдрес") И РеквизитыКонтрагента.ЮридическийАдрес <> Неопределено Тогда
				Форма.ЮридическийАдресГоловногоКонтрагента              = РеквизитыКонтрагента.ЮридическийАдрес.Представление;
				Форма.ЮридическийАдресГоловногоКонтрагентаЗначенияПолей = РеквизитыКонтрагента.ЮридическийАдрес.КонтактнаяИнформация;
				ПартнерыИКонтрагентыКлиент.ЗаполнитьИсториюАдресовВФорме(Форма, РеквизитыКонтрагента);
			КонецЕсли;
			
			ПартнерыИКонтрагентыЛокализацияКлиентСервер.УправлениеДоступностьюГоловнойКонтрагент(Форма);
			
		Иначе
			Форма.ПолноеНаименование      = РеквизитыКонтрагента.Наименование;
			Форма.НаименованиеКонтрагента = РеквизитыКонтрагента.Наименование;
			ПартнерыИКонтрагентыКлиент.ЗаполнитьИсториюНаименований(Форма, РеквизитыКонтрагента);
			Если РеквизитыКонтрагента.Свойство("КПП") Тогда
				Форма.КПП = РеквизитыКонтрагента.КПП;
				ПартнерыИКонтрагентыЛокализацияКлиент.ЗаполнитьИсториюКПП(Форма, РеквизитыКонтрагента);
			КонецЕсли;
			Если РеквизитыКонтрагента.Свойство("РегистрационныйНомер") Тогда
				Форма.РегистрационныйНомер = РеквизитыКонтрагента.РегистрационныйНомер;
			КонецЕсли;
			Форма.ПолноеЮридическоеНаименование = РеквизитыКонтрагента.НаименованиеСокращенное;
			Если РеквизитыКонтрагента.Свойство("Телефон") И РеквизитыКонтрагента.Телефон <> Неопределено Тогда
				Форма.ТелефонПартнера              = РеквизитыКонтрагента.Телефон.Представление;
				Форма.ТелефонПартнераЗначенияПолей = РеквизитыКонтрагента.Телефон.КонтактнаяИнформация;
				
				Если Не Форма.ИспользуютсяТолькоПартнеры Тогда
					Форма.ТелефонКонтрагента              = Форма.ТелефонПартнера;
					Форма.ТелефонКонтрагентаЗначенияПолей = Форма.ТелефонПартнераЗначенияПолей;
					Форма.ИННИсточникДанныхЗаполнения     = Форма.ИНН;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РеквизитыКонтрагента.Свойство("ЮридическийАдрес") И РеквизитыКонтрагента.ЮридическийАдрес <> Неопределено Тогда
				Форма.ЮридическийАдрес              = РеквизитыКонтрагента.ЮридическийАдрес.Представление;
				Форма.ЮридическийАдресЗначенияПолей = РеквизитыКонтрагента.ЮридическийАдрес.КонтактнаяИнформация;
				ПартнерыИКонтрагентыКлиент.ЗаполнитьИсториюАдресовВФорме(Форма, РеквизитыКонтрагента);
			КонецЕсли;
			
			Если РеквизитыКонтрагента.Свойство("Руководитель")
				И ТипЗнч(РеквизитыКонтрагента.Руководитель) = Тип("Структура") Тогда
				
				ДанныеРуководителя = РеквизитыКонтрагента.Руководитель;
				
				Если ДанныеРуководителя.Свойство("Фамилия")
					И ДанныеРуководителя.Свойство("Имя") Тогда
					
					Если Не ПустаяСтрока(ДанныеРуководителя.Фамилия) 
						И Не ПустаяСтрока(ДанныеРуководителя.Имя) Тогда
						
						Форма.УказатьДанныеКонтактногоЛица = Истина;
						
						Форма.ФамилияКЛ = ДанныеРуководителя.Фамилия;
						Форма.ИмяКЛ = ДанныеРуководителя.Имя;
						
						Если ДанныеРуководителя.Свойство("Отчество") Тогда
							Форма.ОтчествоКЛ = ДанныеРуководителя.Отчество;
						Иначе
							Форма.ОтчествоКЛ = "";
						КонецЕсли;
						
						СамообслуживаниеКлиентСервер.УправлениеДоступностьюГруппаКонтактногоЛицаПомощникНового(Форма)
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			ПартнерыИКонтрагентыЛокализацияКлиентСервер.УправлениеДоступностьюКонтрагент(Форма);
			
		КонецЕсли;
	Иначе
		Объект = Форма.Объект;
		Объект.Наименование = РеквизитыКонтрагента.Наименование;
		Если РеквизитыКонтрагента.Свойство("ИНН") Тогда
			Если РеквизитыФормыКонтрагента.ЭтоФормаПартнера Тогда
				Форма.ИНН = РеквизитыКонтрагента.ИНН;
			Иначе
				Объект.ИНН = РеквизитыКонтрагента.ИНН;
			КонецЕсли;
		КонецЕсли;
		Если РеквизитыКонтрагента.Свойство("КПП") Тогда
			Если РеквизитыКонтрагента.КПП <> РеквизитыФормыКонтрагента.КПП Тогда
				Если РеквизитыФормыКонтрагента.ЭтоФормаПартнера Тогда
					Форма.КПП = РеквизитыКонтрагента.КПП;
					ПартнерыИКонтрагентыЛокализацияКлиент.ЗаполнитьИсториюКПП(Форма, РеквизитыКонтрагента);
				Иначе
					Объект.КПП = РеквизитыКонтрагента.КПП;
					ПартнерыИКонтрагентыЛокализацияКлиент.ЗаполнитьИсториюКПП(Объект, РеквизитыКонтрагента);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если РеквизитыКонтрагента.Свойство("РегистрационныйНомер") Тогда
			Если РеквизитыКонтрагента.РегистрационныйНомер <> РеквизитыФормыКонтрагента.РегистрационныйНомер Тогда
				Если РеквизитыФормыКонтрагента.ЭтоФормаПартнера Тогда
					Форма.РегистрационныйНомер = РеквизитыКонтрагента.РегистрационныйНомер;
				Иначе
					Объект.РегистрационныйНомер = РеквизитыКонтрагента.РегистрационныйНомер;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Объект.НаименованиеПолное <> РеквизитыКонтрагента.НаименованиеСокращенное Тогда
			Объект.НаименованиеПолное = РеквизитыКонтрагента.НаименованиеСокращенное;
			Если РеквизитыФормыКонтрагента.ЭтоФормаПартнера Тогда
				ПартнерыИКонтрагентыКлиент.ЗаполнитьИсториюНаименований(Форма, РеквизитыКонтрагента);
			Иначе
				ПартнерыИКонтрагентыКлиент.ЗаполнитьИсториюНаименований(Объект, РеквизитыКонтрагента);
			КонецЕсли;
		КонецЕсли;
		
		Если РеквизитыКонтрагента.Свойство("Телефон") Тогда
			ПартнерыИКонтрагентыКлиент.ЗаполнитьЭлементКонтактнойИнформации(Форма,
			                                                                ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента"),
			                                                                РеквизитыКонтрагента.Телефон);
		КонецЕсли;
		
		Если РеквизитыКонтрагента.Свойство("ЮридическийАдрес") Тогда
			
			ПартнерыИКонтрагентыКлиент.ЗаполнитьЭлементКонтактнойИнформации(Форма,
			                                                                ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента"),
			                                                                РеквизитыКонтрагента.ЮридическийАдрес);
			
			ПартнерыИКонтрагентыКлиент.ЗаполнитьИсториюАдресов(Форма, РеквизитыКонтрагента);
		КонецЕсли;
		
		ПартнерыИКонтрагентыЛокализацияКлиентСервер.УправлениеДоступностьюКонтрагент(Форма);
		
		// СтандартныеПодсистемы.РаботаСКонтрагентами
		ПроверкаКонтрагентовКлиент.ЗапуститьПроверкуКонтрагентаВСправочнике(Форма);
		// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
	КонецЕсли;
	
	Форма.Модифицированность = Истина;

КонецПроцедуры

Функция ДанныеОбъектаДляСравнения(Форма)
	Элементы = Форма.Элементы;
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	ДанныеДляСравнения = ПартнерыИКонтрагентыЛокализацияКлиент.ИнициироватьСтруктураДанныхДляСравнения();
	Если РеквизитыКонтрагента.ЭтоФормаПомощника Тогда
		
		ДанныеДляСравнения.ИНН = Форма.ИНН;
		
		Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаПервичнаяИнформация Тогда
			ДанныеДляСравнения.Наименование            = Форма.ПолноеНаименование;
			ДанныеДляСравнения.КПП                     = Форма.КПП;
			ДанныеДляСравнения.РегистрационныйНомер    = Форма.РегистрационныйНомер;
			ДанныеДляСравнения.НаименованиеСокращенное = Форма.ПолноеЮридическоеНаименование;
			ДанныеДляСравнения.Телефон                 = Форма.ТелефонПартнера;
			ДанныеДляСравнения.ЮридическийАдрес        = Форма.ЮридическийАдрес;
		Иначе
			ДанныеДляСравнения.Наименование            = Форма.НаименованиеГоловнойКонтрагент;
			ДанныеДляСравнения.КПП                     = Форма.КППГоловногоКонтрагента;
			ДанныеДляСравнения.НаименованиеСокращенное = Форма.ПолноеНаименованиеГоловногоКонтрагента;
			ДанныеДляСравнения.ЮридическийАдрес        = Форма.ЮридическийАдресГоловногоКонтрагента;
		КонецЕсли;
	Иначе
		Объект = Форма.Объект;
		ДанныеДляСравнения.Наименование            = Объект.Наименование;
		ДанныеДляСравнения.НаименованиеСокращенное = Объект.НаименованиеПолное;
		ДанныеДляСравнения.ИНН                     = РеквизитыКонтрагента.ИНН;
		ДанныеДляСравнения.КПП                     = РеквизитыКонтрагента.КПП;
		ДанныеДляСравнения.РегистрационныйНомер    = РеквизитыКонтрагента.РегистрационныйНомер;
		
		ДанныеКонтактнойИнформации = ПартнерыИКонтрагентыКлиент.ДанныеСтрокиКонтактнойИнформацииПоВиду(
		                                      Форма,
		                                      ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента"));
		Если ДанныеКонтактнойИнформации <> Неопределено Тогда
			ДанныеДляСравнения.Телефон = ДанныеКонтактнойИнформации.Представление;
		КонецЕсли;
		
		ДанныеКонтактнойИнформации = ПартнерыИКонтрагентыКлиент.ДанныеСтрокиКонтактнойИнформацииПоВиду(
		                                      Форма,
		                                      ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента"));
		Если ДанныеКонтактнойИнформации <> Неопределено Тогда
			ДанныеДляСравнения.ЮридическийАдрес = ДанныеКонтактнойИнформации.Представление;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДанныеДляСравнения;

КонецФункции 

#КонецОбласти
//-- Локализация

#Область ОбработчикиСобытийЭлементовШапкиФормы_Контрагент_Служебные

//++ Локализация
Процедура ИННПриИзменении(Форма, РеквизитыКонтрагента, ТолькоПроверка = Ложь)
	ЭтоЮрЛицо = ОбщегоНазначенияУТКлиентСервер.ЭтоЮрЛицо(РеквизитыКонтрагента.ЮрФизЛицо);
	ИННЗаполненКорректно = Истина;
	
	ТекстСообщения = "";
	Если ПустаяСтрока(РеквизитыКонтрагента.ИНН) Тогда
		ИННЗаполненКорректно = Ложь;
	ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(РеквизитыКонтрагента.ИНН, ЭтоЮрЛицо, ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ИННЗаполненКорректно = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,РеквизитыКонтрагента.ПутьКИНН,,);
			
	КонецЕсли;
	
	Если Не ТолькоПроверка Тогда
	
		ЗаполнениеРеквизитовПоДаннымИННВозможно = ПартнерыИКонтрагентыЛокализацияКлиентСервер.ЗаполнениеРеквизитовПоДаннымИННВозможно(ИННЗаполненКорректно,
			Форма.НастройкиПодключенияКСервисуИППЗаданы,
			РеквизитыКонтрагента.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо"),
			РеквизитыКонтрагента.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель"),
			РеквизитыКонтрагента.ОбособленноеПодразделение);
		
		Если ЗаполнениеРеквизитовПоДаннымИННВозможно Тогда
			
			РезультатЗапуска = ПартнерыИКонтрагентыЛокализацияВызовСервера.ФоновоеЗаданиеДанныеПартнераПоИННЗапустить(РеквизитыКонтрагента.ИНН,
			                                                                                               РеквизитыКонтрагента.ЮрФизЛицо,
			                                                                                               Форма.УникальныйИдентификатор,
			                                                                                               Форма.ФоновоеЗаданиеИдентификатор);
			
			Форма.ФоновоеЗаданиеИдентификатор  = РезультатЗапуска.ИдентификаторЗадания;
			Форма.ФоновоеЗаданиеАдресХранилища = РезультатЗапуска.АдресХранилища;
			
			Если РезультатЗапуска.ЗаданиеЗапущено Тогда
				ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(Форма.ПараметрыОбработчика);
				Форма.ПараметрыОбработчика.ТекущийИнтервал = 2;
				Форма.ПодключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте", 2, Истина);
			Иначе
				ПартнерыИКонтрагентыЛокализацияКлиент.ВыполнитьЗаполнениеРеквизитовПоИНН(Форма, РезультатЗапуска.РеквизитыКонтрагента);
			КонецЕсли;
	
		КонецЕсли;
		
		ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьДоступностьКнопкиЗаполнитьПоИНН(Форма,
			РеквизитыКонтрагента.ЮрФизЛицо,
			РеквизитыКонтрагента.ИНН,
			РеквизитыКонтрагента.ОбособленноеПодразделение,
			Форма.НастройкиПодключенияКСервисуИППЗаданы,
			Ложь);
		
	КонецЕсли;
	
	Форма.ОтключитьОтметкуНезаполненного();
	
	ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьВидимостьПредупрежденийГоловногоКонтрагента(
		Форма,
		РеквизитыКонтрагента.ОбособленноеПодразделение,
		РеквизитыКонтрагента.ГоловнойКонтрагент,
		РеквизитыКонтрагента.ИНН);
	
КонецПроцедуры

Процедура ГоловнойКонтрагентПриИзменении(Элемент, Форма) 
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	
	Если ЗначениеЗаполнено(РеквизитыКонтрагента.ГоловнойКонтрагент) Тогда
		ИНН = ПартнерыИКонтрагентыЛокализацияВызовСервера.ЗначениеРеквизитаПартнеры(РеквизитыКонтрагента.ГоловнойКонтрагент, "ИНН");;
		Элементы.ЗаполнитьПоИНН.Доступность = Не ПустаяСтрока(РеквизитыКонтрагента.ИНН);
		Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
			Форма.ИНН = ИНН;
		Иначе
			Объект.ИНН = ИНН;
		КонецЕсли;
	КонецЕсли;
	
	ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьВидимостьПредупрежденийГоловногоКонтрагента(
		Форма,
		РеквизитыКонтрагента.ОбособленноеПодразделение,
		РеквизитыКонтрагента.ГоловнойКонтрагент,
		РеквизитыКонтрагента.ИНН);
	
КонецПроцедуры

Процедура НаименованиеСокращенноеПриИзменении(Элемент, Форма)
	Объект = Форма.Объект;
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	
	ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьДоступностьКнопкиЗаполнитьПоСокрНаименованию(Форма,
		РеквизитыКонтрагента.ЮрФизЛицо,
		Объект.НаименованиеПолное,
		РеквизитыКонтрагента.ОбособленноеПодразделение,
		Форма.НастройкиПодключенияКСервисуИППЗаданы);
	
КонецПроцедуры

Процедура КППОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
	Перем ТекстСообщения;
	ОчиститьСообщения();
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	
	Если Не ПустаяСтрока(Текст) И
		Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Текст, ТекстСообщения) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,РеквизитыКонтрагента.ПутьКПП,,);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура КодПоОКПООкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
	Перем ТекстСообщения;
	ОчиститьСообщения();
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	
	ЮрФизЛицо = РеквизитыКонтрагента.ЮрФизЛицо;
	
	ЭтоЮрЛицо = ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
		ИЛИ ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент");
	
	Если НЕ ПустаяСтрока(Текст) 
		И НЕ РегламентированныеДанныеКлиентСервер.КодПоОКПОСоответствуетТребованиям(Текст,
			ЭтоЮрЛицо, 
			ТекстСообщения) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,,
			РеквизитыКонтрагента.ПутьКодПоОКПО,,);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИсторияКПППослеЗакрытия(Результат, ДополнительныеПараметры) Экспорт

	Перем ТекстСообщения;
	
	ОчиститьСообщения();
	
	Если ТипЗнч(Результат) = Тип("Структура") 
		И Результат.Свойство("ИсторияКПП") Тогда
		
		Форма = ДополнительныеПараметры.Форма;
		Объект = Форма.Объект;
		РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
		
		Форма.Модифицированность = Истина;
		НоваяИсторияКПП = Результат.ИсторияКПП;
		НоваяИсторияКПП.Сортировать("Период");
		
		Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
			Форма.ИсторияКПП.Очистить();
		Иначе
			Объект.ИсторияКПП.Очистить();
		КонецЕсли;
		
		Если НоваяИсторияКПП.Количество() = 0 Тогда
			
			НовоеТекущееКПП = "";
			
		Иначе
			
			Если НоваяИсторияКПП.Количество() > 1 Тогда
				Для Каждого СтрокаИстории Из НоваяИсторияКПП Цикл
					Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
						ЗаписьИстории = Форма.ИсторияКПП.Добавить();;
					Иначе
						ЗаписьИстории = Объект.ИсторияКПП.Добавить();
					КонецЕсли;
					ЗаполнитьЗначенияСвойств(ЗаписьИстории, СтрокаИстории);
				КонецЦикла;
			КонецЕсли;
			
			НовоеТекущееКПП = НоваяИсторияКПП[НоваяИсторияКПП.Количество()-1].КПП;
		
		КонецЕсли;
		
		Если НовоеТекущееКПП <> РеквизитыКонтрагента.КПП Тогда
			Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
				Форма.КПП = НовоеТекущееКПП;
			Иначе
				Объект.КПП = НовоеТекущееКПП;
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(НовоеТекущееКПП)
				И НЕ РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(НовоеТекущееКПП, ТекстСообщения) Тогда
			
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					,РеквизитыКонтрагента.ПутьКПП,,);
		
			КонецЕсли;
				
			ПроверкаКонтрагентовКлиент.ЗапуститьПроверкуКонтрагентаВСправочнике(Форма);
			ПартнерыИКонтрагентыЛокализацияКлиентСервер.УправлениеДоступностьюКонтрагент(Форма);
			
			ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(Форма, ДополнительныеПараметры.ИмяЭлемента, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
//-- Локализация
#КонецОбласти

#Область ОбработчикиКомандФормы_Контрагенты_Служебные
//++ Локализация
Процедура ЗаполнитьПоИНН(Команда, Форма)

	ИННЗаполненКорректно = Истина;
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	ЮрФизЛицо = РеквизитыКонтрагента.ЮрФизЛицо;

	ТекстСообщения = "";
	Если ПустаяСтрока(РеквизитыКонтрагента.ИНН) Тогда
		ИННЗаполненКорректно = Ложь;
	ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(РеквизитыКонтрагента.ИНН,
		                                                                          ОбщегоНазначенияУТКлиентСервер.ЭтоЮрЛицо(ЮрФизЛицо),
		                                                                          ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ИННЗаполненКорректно = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,РеквизитыКонтрагента.ПутьКИНН,,);
			
	КонецЕсли;
	
	ЗаполнениеРеквизитовПоДаннымИННВозможно = ПартнерыИКонтрагентыЛокализацияКлиентСервер.ЗаполнениеРеквизитовПоДаннымИННВозможно(
		ИННЗаполненКорректно,
		Форма.НастройкиПодключенияКСервисуИППЗаданы,
		ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо"),
		ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель"),
		РеквизитыКонтрагента.ОбособленноеПодразделение);
	
	Если ЗаполнениеРеквизитовПоДаннымИННВозможно Тогда
		Форма.ОтключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте");
		РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияВызовСервера.ДанныеКонтрагентаПоИНН(
			ОбщегоНазначенияУТКлиентСервер.ЭтоЮрЛицо(ЮрФизЛицо),
			РеквизитыКонтрагента.ИНН,
			Форма.ФоновоеЗаданиеИдентификатор);
		
		ВыполнитьЗаполнениеРеквизитовПоИНН(Форма, РеквизитыКонтрагента);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьПоИНН_ПомощникНового(Команда, Форма)
	
	Элементы = Форма.Элементы;
	ИННЗаполненКорректно = Истина;
	ЭтоЗаполнениеГоловногоКонтрагента = ?(Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаГоловнойКонтрагент, Истина, Ложь);
	
	ТекстСообщения = "";
	Если ПустаяСтрока(Форма.ИНН) Тогда
		ИННЗаполненКорректно = Ложь;
	ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Форма.ИНН,
			?(Форма.ЭтоКомпания = 0, ?(Форма.ВидКомпании = 0 Или Форма.ВидКомпании = 3, Истина, Ложь), Ложь),
			ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ИННЗаполненКорректно = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,"ИНН",,);
			
	КонецЕсли;
	
	Если ИННЗаполненКорректно И Форма.НастройкиПодключенияКСервисуИППЗаданы Тогда
		
		Форма.ОтключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте");
		РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияВызовСервера.ДанныеКонтрагентаПоИНН(
			?(ЭтоЗаполнениеГоловногоКонтрагента, Истина, Форма.ЭтоКомпания = 0 И Форма.ВидКомпании = 0),
			Форма.ИНН,
			Форма.ФоновоеЗаданиеИдентификатор);
		
		ПартнерыИКонтрагентыЛокализацияКлиент.ВыполнитьЗаполнениеРеквизитовПоИНН(Форма, РеквизитыКонтрагента);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьГоловногоКонтрагента(Команда, Форма)
	
	ДопПараметры = Новый Структура("Форма", Форма);
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьГоловногоКонтрагентаЗавершение", ЭтотОбъект, ДопПараметры);
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	ИНН = РеквизитыКонтрагента.ИНН;
	Если РеквизитыКонтрагента.ЭтоФормаКонтрагента Тогда
		КонтрагентПартнера = Форма.Объект.Ссылка;
		Партнер = Форма.Объект.Партнер;
	Иначе
		КонтрагентПартнера = Форма.КонтрагентПартнера;
		Партнер = Форма.Объект.Ссылка;
	КонецЕсли;
	Если КоличествоВозможныхГоловныхКонтрагентов(ИНН, КонтрагентПартнера) = 0 Тогда
		
		ПараметрыФормы = Новый Структура;
		ЗначенияЗаполнения = Новый Структура;
		
		ЗначенияЗаполнения.Вставить("ИНН",       ИНН);
		ЗначенияЗаполнения.Вставить("ЮрФизЛицо", ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо"));
		
		ПараметрыФормы.Вставить("ЗначенияЗаполнения",              ЗначенияЗаполнения);
		ПараметрыФормы.Вставить("ОснованиеОбособленныйКонтрагент", КонтрагентПартнера);
		
		ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента", ПараметрыФормы,
			Форма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
	
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("Контрагент", КонтрагентПартнера);
		ПараметрыЗаполнения.Вставить("ИНН",        ИНН);
		ПараметрыЗаполнения.Вставить("Партнер",    Партнер);
		ПараметрыЗаполнения.Вставить("ИспользоватьПартнеровКакКонтрагентов", Ложь);
		
		ПартнерыИКонтрагентыКлиент.ЗаполнитьГоловногоКонтрагента(Форма, ПараметрыЗаполнения, Ложь, Оповещение);
		
	КонецЕсли
	
КонецПроцедуры

Функция КоличествоВозможныхГоловныхКонтрагентов(ИНН, Ссылка)
	Возврат ПартнерыИКонтрагентыЛокализацияВызовСервера.КоличествоВозможныхГоловныхКонтрагентов(ИНН, Ссылка);
КонецФункции

Процедура ЗаполнитьГоловногоКонтрагентаЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		Объект = ДополнительныеПараметры.Форма.Объект;
		Форма = ДополнительныеПараметры.Форма;
		РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
		Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
			Форма.ГоловнойКонтрагент = ВыбранноеЗначение;
		Иначе
			Объект.ГоловнойКонтрагент = ВыбранноеЗначение;
		КонецЕсли;
		Форма.Модифицированность = Истина;
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(Форма, "ГоловнойКонтрагент");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоНаименованию(Команда, Форма)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтрокаПоиска", Форма.Объект.НаименованиеПолное);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьРеквизитыПоНаименованиюЗавершение", ЭтотОбъект, ДопПараметры);
	ОткрытьФорму("ОбщаяФорма.ЗаполнениеРеквизитовКонтрагента",ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

Процедура ЗаполнитьПоНаименованию_ПомощникНового(Команда, Форма)
	
	ЭтоЗаполнениеГоловногоКонтрагента = ?(Форма.Элементы.СтраницыПомощника.ТекущаяСтраница = Форма.Элементы.СтраницаГоловнойКонтрагент, Истина, Ложь);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтрокаПоиска", ?(ЭтоЗаполнениеГоловногоКонтрагента, Форма.ПолноеНаименованиеГоловногоКонтрагента, Форма.ПолноеЮридическоеНаименование));
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьРеквизитыПоНаименованию_ПомощникНового_Завершение", ЭтотОбъект, ДопПараметры);
	ОткрытьФорму("ОбщаяФорма.ЗаполнениеРеквизитовКонтрагента",ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПоНаименованиюЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ ПартнерыИКонтрагентыЛокализацияКлиентСервер.ЭтоИНН(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДопПараметры.Форма;
	РеквизитыФормыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
		
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияВызовСервера.ДанныеКонтрагентаПоИНН(
		ОбщегоНазначенияУТКлиентСервер.ЭтоЮрЛицо(РеквизитыФормыКонтрагента.ЮрФизЛицо),
		Результат,
		Форма.ФоновоеЗаданиеИдентификатор);
	
	ПартнерыИКонтрагентыЛокализацияКлиент.ВыполнитьЗаполнениеРеквизитовПоИНН(Форма, РеквизитыКонтрагента, Истина);
	
	ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьДоступностьКнопкиЗаполнитьПоИНН(Форма,
		РеквизитыФормыКонтрагента.ЮрФизЛицо,
		РеквизитыФормыКонтрагента.ИНН,
		РеквизитыФормыКонтрагента.ОбособленноеПодразделение,
		Форма.НастройкиПодключенияКСервисуИППЗаданы,
		Ложь);
		
	ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(Форма, "ЗаполнитьПоНаименованию");
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПоНаименованию_ПомощникНового_Завершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ ПартнерыИКонтрагентыЛокализацияКлиентСервер.ЭтоИНН(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДопПараметры.Форма;
	ЭтоЗаполнениеГоловногоКонтрагента = ?(Форма.Элементы.СтраницыПомощника.ТекущаяСтраница = Форма.Элементы.СтраницаГоловнойКонтрагент, Истина, Ложь);
	ЭтоЮрлицо = ?(ЭтоЗаполнениеГоловногоКонтрагента,
		Истина,
		ОбщегоНазначенияУТКлиентСервер.ЭтоЮрЛицо(ПартнерыИКонтрагентыЛокализацияКлиентСервер.ТипЮрФизЛицаКонтрагента(Форма.ЭтоКомпания, Форма.ВидКомпании)));
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияВызовСервера.ДанныеКонтрагентаПоИНН(
		ЭтоЮрлицо,
		Результат,
		Форма.ФоновоеЗаданиеИдентификатор);
	
	ВыполнитьЗаполнениеРеквизитовПоИНН(Форма, РеквизитыКонтрагента, Истина);
	
	Если ЭтоЗаполнениеГоловногоКонтрагента Тогда
		ПартнерыИКонтрагентыЛокализацияКлиентСервер.УправлениеДоступностьюГоловнойКонтрагент(Форма);
		ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьДоступностьКнопкиЗаполнитьПоИНН(Форма, 
			ПартнерыИКонтрагентыЛокализацияКлиентСервер.ТипЮрФизЛицаКонтрагента(Форма.ЭтоКомпания, Форма.ВидКомпании),
			Форма.ИНН,
			Форма.ВидКомпании = 3,
			Форма.НастройкиПодключенияКСервисуИППЗаданы,
			Ложь);
		Форма.ТекущийЭлемент = Форма.Элементы.ПолноеНаименованиеГоловногоКонтрагента;
	Иначе
		ПартнерыИКонтрагентыЛокализацияКлиентСервер.УправлениеДоступностьюКонтрагент(Форма);
		ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьДоступностьКнопкиЗаполнитьПоИНН(Форма, 
			ПартнерыИКонтрагентыЛокализацияКлиентСервер.ТипЮрФизЛицаКонтрагента(Форма.ЭтоКомпания, Форма.ВидКомпании),
			Форма.ИНН,
			Форма.ВидКомпании = 3,
			Форма.НастройкиПодключенияКСервисуИППЗаданы,
			Ложь);
		Форма.ТекущийЭлемент = Форма.Элементы.СокрЮрНаименованиеКонтрагента;
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы_ПомощникНового_Служебные

//++ Локализация

Процедура ИННПриИзменении_ПомощникНового(Форма, ТолькоПроверка = Ложь)
	
	ЮрФизЛицо = ПартнерыИКонтрагентыЛокализацияКлиентСервер.ТипЮрФизЛицаКонтрагента(Форма.ЭтоКомпания, Форма.ВидКомпании);
	
	ИННЗаполненКорректно = Истина;
	ЭтоЮрЛицо = ОбщегоНазначенияУТКлиентСервер.ЭтоЮрЛицо(ЮрФизЛицо);
	
	ТекстСообщения = "";
	Если ПустаяСтрока(Форма.ИНН) Тогда
		ИННЗаполненКорректно = Ложь;
	ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Форма.ИНН, ЭтоЮрЛицо, ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ИННЗаполненКорректно = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,"ИНН",,);
			
	КонецЕсли;

	Если ИННЗаполненКорректно 
		И Форма.НастройкиПодключенияКСервисуИППЗаданы 
		И Не Форма.ВидКомпании = 3
		И Не ТолькоПроверка Тогда
		
		РезультатЗапуска = ПартнерыИКонтрагентыЛокализацияВызовСервера.ФоновоеЗаданиеДанныеПартнераПоИННЗапустить(Форма.ИНН,
		                                                                                               ЮрФизЛицо,
		                                                                                               Форма.УникальныйИдентификатор,
		                                                                                               Форма.ФоновоеЗаданиеИдентификатор);
		
		Форма.ФоновоеЗаданиеИдентификатор  = РезультатЗапуска.ИдентификаторЗадания;
		Форма.ФоновоеЗаданиеАдресХранилища = РезультатЗапуска.АдресХранилища;
		
		Если РезультатЗапуска.ЗаданиеЗапущено Тогда
			ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(Форма.ПараметрыОбработчика);
			Форма.ПараметрыОбработчика.ТекущийИнтервал = 2;
			Форма.ПодключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте", 2, Истина);
		Иначе
			ПартнерыИКонтрагентыЛокализацияКлиент.ВыполнитьЗаполнениеРеквизитовПоИНН(Форма, РезультатЗапуска.РеквизитыКонтрагента);
		КонецЕсли;
		
	КонецЕсли;

	ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьДоступностьКнопкиЗаполнитьПоИНН(Форма,
		ЮрФизЛицо,
		Форма.ИНН,
		Форма.ВидКомпании = 3,
		Форма.НастройкиПодключенияКСервисуИППЗаданы,
		Ложь);
	Форма.ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры

Процедура ОГРНПриИзменении_ПомощникНового(Форма)
	
	ЮрФизЛицо = ПартнерыИКонтрагентыЛокализацияКлиентСервер.ТипЮрФизЛицаКонтрагента(Форма.ЭтоКомпания, Форма.ВидКомпании);
	
	Если Форма.УказыватьЮридическиеРеквизиты
		И Не ПустаяСтрока(Форма.РегистрационныйНомер)
		И (ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
			Или ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель")) Тогда
		
		
		ЭтоЮрЛицо		= ОбщегоНазначенияУТКлиентСервер.ЭтоЮрЛицо(ЮрФизЛицо);
		ТекстСообщения	= "";
		
		ОГРНСоответствуетТребованиям = РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(
										Форма.РегистрационныйНомер,
										ЭтоЮрЛицо,
										ТекстСообщения);
		
		Если Не ОГРНСоответствуетТребованиям Тогда
			ОчиститьСообщения();
			
			ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения,
																	Форма.ИспользуютсяТолькоПартнеры,
																	"РегистрационныйНомер");
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры

Процедура ОГРНПриИзменении(Форма, РеквизитыКонтрагента)
	
	ЮрФизЛицо = РеквизитыКонтрагента.ЮрФизЛицо;
	
	Если Не ПустаяСтрока(РеквизитыКонтрагента.РегистрационныйНомер)
		И (ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
			Или ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель")) Тогда
		
		
		ЭтоЮрЛицо		= ОбщегоНазначенияУТКлиентСервер.ЭтоЮрЛицо(ЮрФизЛицо);
		ТекстСообщения	= "";
		
		ОГРНСоответствуетТребованиям = РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(
										РеквизитыКонтрагента.РегистрационныйНомер,
										ЭтоЮрЛицо,
										ТекстСообщения);
		
		Если Не ОГРНСоответствуетТребованиям Тогда
			ОчиститьСообщения();
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , РеквизитыКонтрагента.ПутьРегистрационныйНомер);
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры

Процедура СокрЮрНаименованиеКонтрагентаПриИзменении_ПомощникНового(Элемент, Форма)
	ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьДоступностьКнопкиЗаполнитьПоСокрНаименованию_ПомощникНового(Форма);
КонецПроцедуры

Процедура ИННГоловногоКонтрагентаПриИзменении_ПомощникНового(Элемент, Форма)
	ПартнерыИКонтрагентыЛокализацияКлиентСервер.УправлениеДоступностьюГоловнойКонтрагент(Форма);
КонецПроцедуры

Процедура КППОкончаниеВводаТекста_ПомощникНового(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	Если Форма.УказыватьЮридическиеРеквизиты И Форма.ЭтоКомпания = 0 И НЕ ПустаяСтрока(Текст) Тогда
		ОчиститьСообщения();
		ТекстСообщения = "";
		Если НЕ РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Текст, ТекстСообщения) Тогда
			ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения, Форма.ИспользуютсяТолькоПартнеры, "КПП");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КППГоловногоКонтрагентаОкончаниеВводаТекста_ПомощникНового(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
	ОчиститьСообщения();
	ТекстСообщения = "";
	Если НЕ РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Текст, ТекстСообщения) Тогда
		ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения, Форма.ИспользуютсяТолькоПартнеры, "КППГоловногоКонтрагента");
	КонецЕсли;
	
КонецПроцедуры

Процедура КодПоОКПООкончаниеВводаТекста_ПомощникНового(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	Если Форма.УказыватьЮридическиеРеквизиты И Форма.ЭтоКомпания = 0 И Не ПустаяСтрока(Текст) Тогда
		ОчиститьСообщения();
		ТекстСообщения = "";
		Если НЕ РегламентированныеДанныеКлиентСервер.КодПоОКПОСоответствуетТребованиям(Текст, 
				?(Форма.ЭтоКомпания = 0, ?(Форма.ВидКомпании <> 2, Истина, Ложь), Ложь),ТекстСообщения) Тогда
			ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения, Форма.ИспользуютсяТолькоПартнеры,"КодПоОКПО");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КодПоОКПОГоловногоКонтрагентаОкончаниеВводаТекста_ПомощникНового(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
	ОчиститьСообщения();
	ТекстСообщения = "";
	Если НЕ РегламентированныеДанныеКлиентСервер.КодПоОКПОСоответствуетТребованиям(Текст, Истина,ТекстСообщения) Тогда
		ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения, Форма.ИспользуютсяТолькоПартнеры, "КодПоОКПОГоловногоКонтрагента");
	КонецЕсли;
	
КонецПроцедуры

Процедура ИННПартнерФизЛицоОкончаниеВводаТекста_ПомощникНового(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
	Если Форма.УказыватьЮридическиеРеквизиты И Форма.ЭтоКомпания = 1 И (НЕ ПустаяСтрока(Текст)) Тогда
		ОчиститьСообщения();
		ТекстСообщения = "";
		Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Текст, Ложь, ТекстСообщения) Тогда
			ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения, Форма.ИспользуютсяТолькоПартнеры, "ИННПартнерФизЛицо");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодключеноРасширениеРаботыСФайлами(Знач РасширениеПодключено, Знач ДополнительныеПараметры) Экспорт
	
	Если РасширениеПодключено <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ДекорацияПервичнаяИнформацияЗагрузитьНажатие(ДополнительныеПараметры.Элемент, ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ДекорацияПервичнаяИнформацияЗагрузитьНажатие(Элемент, Форма)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Фильтр = НСтр("ru = 'XML файл'")+"(*.xml)|*.xml";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите файл'");
	ПараметрыОповещения = Новый Структура("Форма, ИмяЭлемента", Форма, Элемент.Имя);
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДекорацияПервичнаяИнформацияЗагрузитьНажатиеВыборФайла",
		ЭтотОбъект,
		ПараметрыОповещения);
	
	ДиалогОткрытияФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ДекорацияПервичнаяИнформацияЗагрузитьНажатиеВыборФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОчиститьСообщения();
	
	ФайлЗагрузки = ВыбранныеФайлы[0];
	
	Оповещение = Новый ОписаниеОповещения("ПослеСозданияДвоичныхДанныхИзФайла", ЭтотОбъект, ДополнительныеПараметры);
	НачатьСозданиеДвоичныхДанныхИзФайла(Оповещение, ФайлЗагрузки);
	
КонецПроцедуры

Процедура ПослеСозданияДвоичныхДанныхИзФайла(ДвоичныеДанные, ДополнительныеПараметры) Экспорт
	
	СсылкаНаФайл = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	ЕстьОшибкаЧтенияФайла = Ложь;
	ПараметрыОбработки = Новый Структура("СсылкаНаФайл, ЕстьОшибкаЧтенияФайла", СсылкаНаФайл, ЕстьОшибкаЧтенияФайла);
	ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
		ДополнительныеПараметры.Форма, "РазобратьФайлНаСервере", Истина, ПараметрыОбработки);
	
КонецПроцедуры

//-- Локализация
#КонецОбласти

#КонецОбласти
