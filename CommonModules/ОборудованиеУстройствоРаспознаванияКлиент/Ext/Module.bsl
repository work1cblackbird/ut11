
#Область ПрограммныйИнтерфейс

#Область УстройствоРаспознавания

// Получает вес с электронных весов.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьРаспознавание(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	Контекст = Новый Структура();
	Контекст.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	Контекст.Вставить("ИдентификаторКлиента"   , ИдентификаторКлиента);   
	Контекст.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
	Контекст.Вставить("ПараметрыОперации"      , ПараметрыОперации);
	Контекст.Вставить("ДополнительныеПараметры", ДополнительныеПараметры); 
	Контекст.Вставить("ПодготовитьДанные"      , Ложь); 
	Контекст.Вставить("ОбработатьДанные"       , Истина); 
	Контекст.Вставить("Команда"  , "Recognize"); 
	Контекст.Вставить("Результат", Истина);
	
	Если ИдентификаторУстройства = Неопределено Или ПустаяСтрока(ИдентификаторУстройства) Тогда
		НачатьВыборУстройства(Контекст);
	Иначе
		НачатьВыполнениеКоманды(ИдентификаторУстройства, Контекст);
	КонецЕсли;
	
КонецПроцедуры

// Получает вес с электронных весов.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьПодтверждениеРаспознавания(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	Контекст = Новый Структура();
	Контекст.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	Контекст.Вставить("ИдентификаторКлиента"   , ИдентификаторКлиента);   
	Контекст.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
	Контекст.Вставить("ПараметрыОперации"      , ПараметрыОперации);
	Контекст.Вставить("ДополнительныеПараметры", ДополнительныеПараметры); 
	Контекст.Вставить("ПодготовитьДанные"      , Ложь); 
	Контекст.Вставить("ОбработатьДанные"       , Ложь); 
	Контекст.Вставить("Команда"  , "ConfirmRecognize"); 
	Контекст.Вставить("Результат", Истина);
	
	Если ИдентификаторУстройства = Неопределено Или ПустаяСтрока(ИдентификаторУстройства) Тогда
		НачатьВыборУстройства(Контекст);
	Иначе
		НачатьВыполнениеКоманды(ИдентификаторУстройства, Контекст);
	КонецЕсли;
	
КонецПроцедуры

// Начать выгрузку данных в весы с печатью этикеток.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьВыгрузкуТоваровВУстройствоРаспознавания(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	Контекст = Новый Структура();
	Контекст.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	Контекст.Вставить("ИдентификаторКлиента"   , ИдентификаторКлиента);   
	Контекст.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
	Контекст.Вставить("ПараметрыОперации"      , ПараметрыОперации);
	Контекст.Вставить("ДополнительныеПараметры", ДополнительныеПараметры); 
	Контекст.Вставить("ПодготовитьДанные"      , Истина); 
	Контекст.Вставить("ОбработатьДанные"       , Ложь); 
	Контекст.Вставить("Команда"  , "UploadGoods"); 
	Контекст.Вставить("Результат", Истина);
	
	Если ИдентификаторУстройства = Неопределено Или ПустаяСтрока(ИдентификаторУстройства) Тогда
		НачатьВыборУстройства(Контекст);
	Иначе
		НачатьВыполнениеКоманды(ИдентификаторУстройства, Контекст);
	КонецЕсли

КонецПроцедуры

// Начать очистку данных в весах с печатью этикеток.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьОчисткуТоваровВРаспознавателе(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства = Неопределено, ПараметрыОперации = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Контекст = Новый Структура();
	Контекст.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	Контекст.Вставить("ИдентификаторКлиента"   , ИдентификаторКлиента);   
	Контекст.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
	Контекст.Вставить("ПараметрыОперации"      , ПараметрыОперации);
	Контекст.Вставить("ДополнительныеПараметры", ДополнительныеПараметры); 
	Контекст.Вставить("ПодготовитьДанные"      , Ложь); 
	Контекст.Вставить("ОбработатьДанные"       , Ложь); 
	Контекст.Вставить("Команда"  , "ClearBase"); 
	Контекст.Вставить("Результат", Истина);
	
	Если ИдентификаторУстройства = Неопределено Или ПустаяСтрока(ИдентификаторУстройства) Тогда
		НачатьВыборУстройства(Контекст);
	Иначе
		НачатьВыполнениеКоманды(ИдентификаторУстройства, Контекст);
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

Процедура НачатьВыполнениеКоманды(ИдентификаторУстройства, Контекст)
	
	ПараметрыКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды(
		Контекст.Команда,
		"ОборудованиеУстройствоРаспознавания", 
		Контекст.ДополнительныеПараметры, 
		Контекст.ПодготовитьДанные, 
		Контекст.ОбработатьДанные);
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(
		Контекст.ОповещениеПриЗавершении, 
		Контекст.ИдентификаторКлиента, 
		ИдентификаторУстройства, 
		Контекст.ПараметрыОперации, 
		ПараметрыКоманды);
		
КонецПроцедуры

// Начать выгрузку данных в весы с печатью этикеток.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьВыборУстройства(Контекст)
	
	ПоддерживаемыеТипы = МенеджерОборудованияКлиентСервер.ПараметрыТипыОборудования();
	ПоддерживаемыеТипы.УстройствоРаспознавания = Истина;
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьУстройствоЗавершение", ЭтотОбъект, Контекст);
	МенеджерОборудованияКлиент.ВыбратьУстройство(Оповещение, ПоддерживаемыеТипы,
		НСтр("ru='Выберите устройство распознавания.'"),
		НСтр("ru='Устройства распознавания не подключены.'"), 
		НСтр("ru='Устройства распознавания не выбраны.'"));

КонецПроцедуры

Процедура ВыбратьУстройствоЗавершение(РезультатВыбора, Контекст) Экспорт
	
	Если РезультатВыбора.Результат Тогда 
		НачатьВыполнениеКоманды(РезультатВыбора.ИдентификаторУстройства, Контекст);
	Иначе
		ВыполнитьОбработкуОповещения(Контекст.ОповещениеПриЗавершении, РезультатВыбора);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти  
