
////////////////////////////////////////////////////////////////////////////////
// ОбменССервисомBankFeedsВызовСервера: отображаются вызовы серверных функций
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Проверяет, какие документы были отправлены по BankFeeds
// 
// Параметры:
// 	МассивСтруктурДокументов - Массив из Структура - Массив документов для отправки
// 
// Возвращаемое значение:
// Число - Количество документов, принятых BankFeeds
//
Функция КоличествоДокументовОтправленныхВБанк(МассивСтруктурДокументов) Экспорт
	
	МассивДокументов = Новый Массив;
	Для Каждого ТекущаяСтрокаМассивСтруктурДокументов Из МассивСтруктурДокументов Цикл 
	
		МассивДокументов.Добавить(ТекущаяСтрокаМассивСтруктурДокументов.ДанныеПлатежногоДокумента.Ссылка); 
	
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыТранзакцийBankFeeds.Объект КАК КоличествоОбъектов
	|ИЗ
	|	РегистрСведений.СтатусыТранзакцийBankFeeds КАК СтатусыТранзакцийBankFeeds
	|ГДЕ
	|	СтатусыТранзакцийBankFeeds.Объект В(&МассивДокументов)
	|	И СтатусыТранзакцийBankFeeds.ТипИдентификатора = ЗНАЧЕНИЕ(Перечисление.ТипыИдентификаторовBankFeeds.ПоПлатежномуПоручению)
	|	И (СтатусыТранзакцийBankFeeds.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПлатежныхДокументовBankFeeds.Accepted)
	|			ИЛИ СтатусыТранзакцийBankFeeds.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПлатежныхДокументовBankFeeds.pending)
	|			ИЛИ СтатусыТранзакцийBankFeeds.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПлатежныхДокументовBankFeeds.posted)
	|			ИЛИ СтатусыТранзакцийBankFeeds.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПлатежныхДокументовBankFeeds.processing))
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыТранзакцийBankFeeds.Объект";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	КоличествоОтправленныхДокументов = 0;
	Пока Результат.Следующий() Цикл
		КоличествоОтправленныхДокументов = КоличествоОтправленныхДокументов + 1;
	КонецЦикла;
	
	Возврат КоличествоОтправленныхДокументов;
	
КонецФункции	

// Выполняет проверку подключения к сервису
// 
// Параметры:
// 	БанковскийСчет - СправочникСсылка.БанковскиеСчетаОрганизаций - Банковский счет
// 
// Возвращаемое значение:
// Булево - Истина, если банковский счет подключен к сервису
//
Функция ПроверитьПодключениеКСервису(БанковскийСчет) Экспорт

	Возврат ОбменССервисомBankFeedsСервер.ПроверитьПодключениеКСервису(БанковскийСчет);
	
КонецФункции	

// Определяет текущую дату сеанса
//
// Возвращаемое значение:
//  Дата - дата сеанса
//
Функция ЛокальнаяТекущаяДата() Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.ЛокальнаяТекущаяДата();
	
КонецФункции

// Заполняет параметрами фоновое задание По чтению счетов в сервисе
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыЗаполнения - Структура - параметры заполнения
// 
// Возвращаемое значение:
//  см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияПрочитатьСчетаПоОрганизации(УникальныйИдентификатор, ПараметрыЗаполнения) Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияПрочитатьСчетаПоОрганизации(
			УникальныйИдентификатор, ПараметрыЗаполнения);
	
КонецФункции	

// Заполняет параметрами фоновое задание По проверки подключения в сервисе
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыЗаполнения - Структура - параметры заполнения
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаПроверкуПодключения(УникальныйИдентификатор, ПараметрыЗаполнения) Экспорт

	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаПроверкуПодключения(
			УникальныйИдентификатор, ПараметрыЗаполнения);
	
КонецФункции

// Заполняет параметрами фоновое задание на авторизацию пользователя
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыЗаполнения - Структура - параметры заполнения
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаАвторизациюПользователя(УникальныйИдентификатор, ПараметрыЗаполнения) Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаАвторизациюПользователя(
			УникальныйИдентификатор, ПараметрыЗаполнения);
	
КонецФункции

// Заполняет параметрами фоновое задание на обновление соединения
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыЗаполнения - Структура - параметры заполнения
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаОбновлениеСоединения(УникальныйИдентификатор, ПараметрыЗаполнения) Экспорт

	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаОбновлениеСоединения(
			УникальныйИдентификатор, ПараметрыЗаполнения);
	
КонецФункции

// Заполняет параметрами фоновое задание на проверку статусов соединения и согласия
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыЗаполнения - Структура - параметры заполнения
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаПроверкуСтатусовСоединенияИСогласия(УникальныйИдентификатор, ПараметрыЗаполнения) Экспорт

	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаПроверкуСтатусовСоединенияИСогласия(
			УникальныйИдентификатор, ПараметрыЗаполнения);
	
КонецФункции

// Заполняет параметрами фоновое задание на отзыв согласия
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыЗаполнения - Структура - параметры заполнения
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаОтзывСогласия(УникальныйИдентификатор, ПараметрыЗаполнения) Экспорт

	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаОтзывСогласия(
			УникальныйИдентификатор, ПараметрыЗаполнения);
	
КонецФункции

// Заполняет параметрами фоновое задание на загрузку транзакций
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыЗагрузки - Структура - параметры заполнения
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаЗагрузкуТранзакций(УникальныйИдентификатор, ПараметрыЗагрузки) Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаЗагрузкуТранзакций(
			УникальныйИдентификатор, ПараметрыЗагрузки);
	
КонецФункции

// Заполняет параметрами фоновое задание на выгрузку платежных документов
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыВыгрузки - Структура - параметры заполнения
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаВыгрузкуПлатежныхДокументов(УникальныйИдентификатор, ПараметрыВыгрузки) Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаВыгрузкуПлатежныхДокументов(
			УникальныйИдентификатор, ПараметрыВыгрузки);
	
КонецФункции

// Заполняет параметрами фоновое задание на выгрузку платежных документов
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаПроверкуСтатусаПлатежныхДокументов(УникальныйИдентификатор) Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаПроверкуСтатусаПлатежныхДокументов(
			УникальныйИдентификатор);
	
КонецФункции

// Заполняет параметрами фоновое задание на подключение к сервису
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыЗаполнения - Структура - параметры заполнения
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаПодключениеКСервису(УникальныйИдентификатор, ПараметрыЗаполнения) Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаПодключениеКСервису(
			УникальныйИдентификатор, ПараметрыЗаполнения);	
	
КонецФункции

// Заполняет параметрами фоновое задание на подключение к сервису
// 
// Параметры:
// 	УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор
// 	ПараметрыЗаполнения - Структура - параметры заполнения
// 
// Возвращаемое значение:
// см. ДлительныеОперации.ВыполнитьФункцию.
//
Функция ЗаполнитьПараметрыФоновогоЗаданияНаПроверкуОбновленияСоединенияКСервису(УникальныйИдентификатор, ПараметрыЗаполнения) Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.ЗаполнитьПараметрыФоновогоЗаданияНаПроверкуОбновленияСоединенияКСервису(
			УникальныйИдентификатор, ПараметрыЗаполнения);	
	
КонецФункции

// Возвращает статусы ответов
// 
// 
// Возвращаемое значение:
//  Структура - список значений:
//  * ОтветПолучен - Строка 
//  * ОтветНеПолучен - Строка 
//  * ЗапросНеНуженДанныеГотовы - Строка 
//
Функция СтатусыОтветов() Экспорт
	
	Возврат СловарьBankFeedsСлужебный.СтатусыОтвета();
	
КонецФункции	

// Определяет почту по организации
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация
// 
// Возвращаемое значение:
// Строка - почта 
//
Функция ПочтаОрганизации(Организация) Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.ПочтаОрганизации(Организация);
	
КонецФункции	

// Определяет настройку обмена сервиса по организации и банку 
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация
// 	Банк - СправочникСсылка.КлассификаторБанков - Банк
// 
// Возвращаемое значение:
//   Структура  - Структура параметров: 
//		* ДатаПодключения - Дата - дата подключения.
//		* НастройкиСервиса - СправочникСсылка.ИнтеграцияBankFeeds - настройка сервиса.
//
Функция НастройкаОбмена(Организация, Банк) Экспорт
	
	Возврат ОбменССервисомBankFeedsСервер.НастройкаОбмена(Организация, Банк);
	
КонецФункции	
													
#КонецОбласти
