#Область СлужебныеПроцедурыИФункции

#Область ПолучениеНастроекИПараметровУчетаНДС

// Применяемые типы налогообложения НДС
// 
// Параметры:
// 	Продажи - Булево -
// 	Закупки - Булево -
// 	РаздельныйУчет - Булево -
// Возвращаемое значение:
// 	СписокЗначений из ПеречислениеСсылка.ТипыНалогообложенияНДС
//
Функция ПрименяемыеТипыНалогообложенияНДС(Продажи = Истина, Закупки = Истина, РаздельныйУчет = Ложь) Экспорт
	
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	
	ТипыНалогообложения = Новый СписокЗначений();
	Если НастройкиУчета.ИспользоватьУчетНДС Тогда
		Если Продажи И Закупки Тогда
			Представление = НСтр("ru = 'Облагается НДС'");
		ИначеЕсли Продажи Тогда
			Представление = НСтр("ru = 'Продажа облагается НДС'");
		Иначе
			Представление = НСтр("ru = 'Закупка облагается НДС'");
		КонецЕсли;
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, Представление);
	КонецЕсли;
	
	Если Продажи И Закупки Тогда
		Представление = НСтр("ru = 'Не облагается НДС'");
	ИначеЕсли Продажи Тогда
		Представление = НСтр("ru = 'Продажа не облагается НДС'");
	Иначе
		Представление = НСтр("ru = 'Закупка не облагается НДС'");
	КонецЕсли;
	ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, Представление);
	
	Если Продажи И НастройкиУчета.ПродажиНаЭкспорт Тогда
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт, НСтр("ru = 'Экспорт'"));
	КонецЕсли;
	
	Если Закупки И НастройкиУчета.РеверсивноеОбложениеНДС Тогда
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.РеверсивноеОбложениеНДС, НСтр("ru = 'Реверсивное обложение НДС'"));
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьПрименяемыеТипыНалогообложенияНДС(ТипыНалогообложения, НастройкиУчета, Продажи, Закупки);
		
	Если РаздельныйУчет Тогда
		ПрименяемыеВидыДеятельностиНДС = ПрименяемыеВидыДеятельностиНДС().ВыгрузитьЗначения();
		ПрименяемыеТипыНалогообложенияНДС = ТипыНалогообложения.ВыгрузитьЗначения();
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПрименяемыеТипыНалогообложенияНДС, ПрименяемыеВидыДеятельностиНДС, Истина);
		ТипыНалогообложения.ЗагрузитьЗначения(ПрименяемыеТипыНалогообложенияНДС);
	КонецЕсли;
	
	Возврат ТипыНалогообложения;
	
КонецФункции

// Применяемые виды деятельности НДС
// 
// Возвращаемое значение:
// 	СписокЗначений из ПеречислениеСсылка.ТипыНалогообложенияНДС -
Функция ПрименяемыеВидыДеятельностиНДС() Экспорт
	
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	
	ВидыДеятельностиНДС = Новый СписокЗначений();
	
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка(), НСтр("ru = 'Без изменений'"));
	Если НастройкиУчета.ИспользоватьУчетНДС Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, НСтр("ru = 'Облагаемую НДС'"));
	КонецЕсли;
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, НСтр("ru = 'Не облагаемую НДС'"));
	Если НастройкиУчета.РаздельныйУчетНДС Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением, НСтр("ru = 'Определяется распределением'"));
	КонецЕсли;
	УчетНДСЛокализация.ДополнитьПрименяемыеВидыДеятельностиНДС(ВидыДеятельностиНДС, НастройкиУчета);
	
	Возврат ВидыДеятельностиНДС;
	
КонецФункции

#КонецОбласти

#Область УчетВходящегоНДС

Процедура УстановитьПараметрТипыНалогообложенияНДСПоступления(Запрос) Экспорт
	
	Если Запрос.Параметры.Свойство("ТипыНалогообложенияНДСПоступления") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСПоступления", УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());
	
КонецПроцедуры

// Параметры:
//  ПараметрыЗаполнения - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС
//
Функция ДоступныеВидыДеятельностиНДС(ПараметрыЗаполнения) Экспорт
	
	// Подготовим массив видов деятельности доступных по операциям
	ВидыДеятельностиНДСДоступныеПоОперации = Новый Структура;
	
	Если ПараметрыЗаполнения.ПриобретениеТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);  
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением); 
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПриобретениеТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеРабот Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПриобретениеРабот", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПриобретениеНаСтатьи", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровНаСкладах Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ДвижениеТоваровНаСкладах", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеМеждуФилиалами Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ДвижениеМеждуФилиалами", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровИРаботВПроизводстве Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ДвижениеТоваровИРаботВПроизводстве", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("СписаниеТоваровИРаботНаСтатьи", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыпускПродукцииИРабот Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ВыпускПродукцииИРабот", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СборкаРазборкаТоваров Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("СборкаРазборкаТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаВЭксплуатацию Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПередачаВЭксплуатацию", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПрочееВыбытиеТоваров Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПрочееВыбытиеТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ЛизинговоеИмуществоНаБалансе", МассивДоступных);
	КонецЕсли;
	
	// Подготовим массив видов деятельности не доступных по настройкам
	НедоступныеВидыДеятельностиНДС = Новый Массив;
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата);
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаОрганизации.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаОрганизации.РаздельныйУчетНДС;
	Иначе
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаИБ.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаИБ.РаздельныйУчетНДС;
	КонецЕсли;
	
	Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ИначеЕсли ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС 
		 И НЕ РаздельныйУчетНДС Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	КонецЕсли;
	Если Не РаздельныйУчетНДС Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьДоступныеНедоступныеВидыДеятельностиНДСПоПараметрам(
		ВидыДеятельностиНДСДоступныеПоОперации, НедоступныеВидыДеятельностиНДС, ПараметрыЗаполнения);
	
	// Учтем доступность по операции
	ДоступныеВидыДеятельностиНДС = Новый Массив;
	Если ВидыДеятельностиНДСДоступныеПоОперации.Количество() > 0 Тогда
		ДоступныеВидыДеятельностиНДС = ПрименяемыеВидыДеятельностиНДС().ВыгрузитьЗначения();
		Для каждого КлючИЗначение Из ВидыДеятельностиНДСДоступныеПоОперации Цикл
			ДоступныеВидыДеятельностиНДС = ОбщегоНазначенияУТКлиентСервер.ПересечениеМассивов(ДоступныеВидыДеятельностиНДС, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// Учтем недоступность по настройкам учета организации
	ДоступныеВидыДеятельностиНДС = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеВидыДеятельностиНДС, НедоступныеВидыДеятельностиНДС);
	
	Возврат ДоступныеВидыДеятельностиНДС;
	
КонецФункции

// Параметры:
//  ПараметрыЗаполнения - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС
// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС
//
Функция ДоступныеНалогообложенияНДСЗакупки(ПараметрыЗаполнения) Экспорт
	
	ПрименяемыеТипыНалогообложения = ПрименяемыеТипыНалогообложенияНДС(Ложь, Истина).ВыгрузитьЗначения();
	
	ТипыНалогообложенияНедоступныеПоПараметрам = Новый Массив;
	Если ПараметрыЗаполнения.ИмпортТоваров ИЛИ ПараметрыЗаполнения.ВвозТоваровИзТаможенногоСоюза Тогда
		ТипыНалогообложенияНедоступныеПоПараметрам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	КонецЕсли;
	Если ПараметрыЗаполнения.ПоступлениеИзТоваровВПути Тогда
		ТипыНалогообложенияНедоступныеПоПараметрам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	КонецЕсли;
	
	Если НЕ ПараметрыЗаполнения.ПриобретениеТоваров 
		И НЕ ПараметрыЗаполнения.ПриобретениеРабот 
		И НЕ ПараметрыЗаполнения.ПриобретениеНаСтатьи
		И НЕ ПараметрыЗаполнения.ПоступлениеИзПереработки Тогда
		ТипыНалогообложенияНедоступныеПоПараметрам.Добавить(Перечисления.ТипыНалогообложенияНДС.РеверсивноеОбложениеНДС);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями Тогда
		ТипыНалогообложенияНедоступныеПоПараметрам.Добавить(Перечисления.ТипыНалогообложенияНДС.РеверсивноеОбложениеНДС);
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьНедоступныеПоОперацииТипыНалогообложенияЗакупки(ТипыНалогообложенияНедоступныеПоПараметрам, ПараметрыЗаполнения);

	Возврат ОбщегоНазначенияКлиентСервер.РазностьМассивов(ПрименяемыеТипыНалогообложения, ТипыНалогообложенияНедоступныеПоПараметрам);
	
КонецФункции

// Возвращаемое значение:
//  Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС
//
Функция НалогообложенияНДСПродажиНаЭкспорт() Экспорт
	
	Результат = Новый Массив();
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	// До момента перевода проведения по себестоимости и выручке на модульность.
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область УчетИсходящегоНДС

// Формирует список доступных значений по настройка учета НДС и отражаемой операции.
//
// Параметры:
// 	ПараметрыЗаполнения - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи
//
// Возвращаемое значение:
// 	Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС - Доступные значения налогообложения НДС закупки.
// 
Функция ДоступныеНалогообложенияНДСПродажи(ПараметрыЗаполнения) Экспорт
	
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
									ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата, ПараметрыЗаполнения.Склад, ПараметрыЗаполнения.Подразделение);
	
	НалогообложенияНДСДоступныеПоОперации = Новый Структура();
	
	Если ПараметрыЗаполнения.РеализацияТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РеализацияТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияРаботУслуг Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РеализацияРаботУслуг", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияПрочихАктивов Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РеализацияПрочихАктивов", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупВозвратнойТарыКлиентом Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВыкупВозвратнойТарыКлиентом", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупТоваровХранителем Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВыкупТоваровХранителем", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаНаКомиссию Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		НалогообложенияНДСДоступныеПоОперации.Вставить("ПередачаНаКомиссию", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетДавальцу Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетДавальцу", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетКомиссионера Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетКомиссионера", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВозвратТоваровОтКомиссионера", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВозвратТоваровОтКлиента", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РозничнаяПродажа Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РозничнаяПродажа", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетКомитентуОЗакупках Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетКомитентуОЗакупках", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаНаХранение Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		НалогообложенияНДСДоступныеПоОперации.Вставить("ПередачаНаХранение", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратСХранения Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВозвратСХранения", МассивДоступных);
	КонецЕсли;
	
	// Не доступные по настройкам
	НедоступныеНалогообложенияНДС = Новый Массив;
	Если Не ПараметрыУчетаИБ.ПродажиНаЭкспорт Или ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьДоступныеНедоступныеНалогообложенияНДСПродажиПоПараметрам(
		НалогообложенияНДСДоступныеПоОперации, НедоступныеНалогообложенияНДС, ПараметрыЗаполнения);
	
	// Учтем доступность по операции
	ДоступныеНалогообложенияНДС = Новый Массив;
	Для Каждого КлючИЗначение Из НалогообложенияНДСДоступныеПоОперации Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС, КлючИЗначение.Значение, Истина);
	КонецЦикла;
	ПрименяемыеТипыНалогообложенияНДС = ПрименяемыеТипыНалогообложенияНДС(Истина, Ложь).ВыгрузитьЗначения();
	ОбщегоНазначенияУТКлиентСервер.ПересечениеМассивов(ДоступныеНалогообложенияНДС, ПрименяемыеТипыНалогообложенияНДС);
	
	// Учтем недоступность по настройкам учета организации
	ДоступныеНалогообложенияНДС = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеНалогообложенияНДС, НедоступныеНалогообложенияНДС);
	
	Возврат ДоступныеНалогообложенияНДС;
	
КонецФункции

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

//Параметры:
// Запрос - Строка
//
//Возвращаемое значение:
// Соответствие из Строка
//
Функция СоответствиеЗапросовКонтрольнымРегистрам(Запрос) Экспорт
	Запрос.УстановитьПараметр("ТипыДокументовВводаОстатков", РеглУчетСервер.ДокументыВводаОстатков());
	СоответствиеТекстовЗапросов = Новый Соответствие();
	СоответствиеТекстовЗапросов.Вставить("ТаблицаИзмененийВыручкаИСебестоимостьПродаж", ТекстЗапросаВыручкаИСебестоимостьПродаж(Запрос));
	СоответствиеТекстовЗапросов.Вставить("ТаблицаИзмененийПартииНДСКРаспределению", ТекстЗапросаПартииНДСКРаспределению(Запрос));
	СоответствиеТекстовЗапросов.Вставить("ТаблицаИзмененийДвиженияКонтрагентДоходыРасходы", ТекстЗапросаДвиженияКонтрагентДоходыРасходы(Запрос));
	СоответствиеТекстовЗапросов.Вставить("ТаблицаИзмененийПрочаяВыручка", ТекстЗапросаПрочаяВыручка(Запрос));
	
	УчетНДСЛокализация.ДополнитьСоответствиеЗапросовКонтрольнымРегистрам(СоответствиеТекстовЗапросов, Запрос);
	
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции


Функция ТекстЗапросаВыручкаИСебестоимостьПродаж(Запрос)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийВыручкаИСебестоимостьПродаж КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.АналитикаУчетаПоПартнерам.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийВыручкаИСебестоимостьПродаж КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.АналитикаУчетаПоПартнерам.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|";
	
	УчетНДСЛокализация.ДополнитьТекстЗапросаВыручкаИСебестоимостьПродаж(ТекстЗапроса, Запрос);
	
	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	Возврат СтруктураТекстовЗапросов
КонецФункции

Функция ТекстЗапросаПартииНДСКРаспределению(Запрос)
	
	ТекстЗапросаВременныхТаблиц =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ИзменениеПартий.Период КАК Период,
	|	ИзменениеПартий.Регистратор КАК Регистратор,
	|	ИзменениеПартий.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
	|	МАКСИМУМ(НастройкиУчетаНДС.Период) КАК ПериодУчетнойПолитики
	|ПОМЕСТИТЬ ПериодыНастройкиУчетаНДСПартииНДСКРаспределению
	|ИЗ
	|	ТаблицаИзмененийПартииНДСКРаспределению КАК ИзменениеПартий
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Организации КАК Организации
	|	ПО
	|		Организации.Ссылка = ИзменениеПартий.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ПО
	|		Организации.ГоловнаяОрганизация = НастройкиУчетаНДС.Организация
	|		И ИзменениеПартий.Период >= НастройкиУчетаНДС.Период
	|ГДЕ
	|	НЕ ТИПЗНАЧЕНИЯ(ИзменениеПартий.Регистратор) В (&ТипыДокументовВводаОстатков)
	|
	|СГРУППИРОВАТЬ ПО
	|	Организации.Ссылка,
	|	Организации.ГоловнаяОрганизация,
	|	ИзменениеПартий.Период,
	|	ИзменениеПартий.Регистратор,
	|	ИзменениеПартий.ВариантРаспределенияРасходовРегл
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Период
	|
	|;";
	
	ТекстУничтожитьВт = "ПериодыНастройкиУчетаНДСПартииНДСКРаспределению";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиУчетаНДС.ПериодичностьРаспределенияНДС, ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал))
	|				 = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал) ТОГДА
	|			НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ), МЕСЯЦ)
	|		КОГДА НастройкиУчетаНДС.ПериодичностьРаспределенияНДС = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц) ТОГДА
	|			НАЧАЛОПЕРИОДА(Таблица.Период,МЕСЯЦ)
	|	КОНЕЦ КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ПериодыНастройкиУчетаНДСПартииНДСКРаспределению КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ПО
	|		Таблица.ГоловнаяОрганизация = НастройкиУчетаНДС.Организация
	|		И Таблица.ПериодУчетнойПолитики = НастройкиУчетаНДС.Период
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийПартииНДСКРаспределению КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ПО
	|		Таблица.Организация.ГоловнаяОрганизация = НастройкиУчетаНДС.Организация
	|		И Таблица.Период >= НастройкиУчетаНДС.Период
	|ГДЕ
	|	ЕСТЬNULL(Таблица.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	И (ЕСТЬNULL(НастройкиУчетаНДС.РаспределятьНДСВМесяцеОсуществленияКапВложений, ЛОЖЬ)
	|			И Таблица.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		ИЛИ НЕ РаспределениеНДС.Ссылка ЕСТЬ NULL)
	|	И НЕ ТИПЗНАЧЕНИЯ(Таблица.Регистратор) В (&ТипыДокументовВводаОстатков)
	|";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса,
		ТекстЗапросаВременныхТаблиц,
		ТекстУничтожитьВт);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

Функция ТекстЗапросаДвиженияКонтрагентДоходыРасходы(Запрос)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийДвиженияКонтрагентДоходыРасходы КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийДвиженияКонтрагентДоходыРасходы КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|";
	
	УчетНДСЛокализация.ДополнитьТекстЗапросаДвиженияКонтрагентДоходыРасходы(ТекстЗапроса);
	
	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

Функция ТекстЗапросаПрочаяВыручка(Запрос)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийПрочаяВыручка КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийПрочаяВыручка КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|";
	
	УчетНДСЛокализация.ДополнитьТекстЗапросаПрочаяВыручка(ТекстЗапроса);
	
	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

#КонецОбласти

#Область ЗаданияКФормированиюДвиженийПоНДС

Процедура СформироватьЗаданияПоДокументамРаспределениеНДС(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ) КАК Месяц,
	|	Партии.Организация КАК Организация,
	|	Партии.ДокументПоступленияРасходов КАК СчетФактура
	|ИЗ
	|	РегистрНакопления.ПартииНДСКРаспределению КАК Партии
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И Партии.ВидДеятельностиНДС <> Партии.КорВидДеятельностиНДС
	|	И Партии.Регистратор В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, МЕСЯЦ) КАК Месяц,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|ГДЕ
	|	НДСПредъявленный.Регистратор В (&Ссылка)
	|	И НДСПредъявленный.РегламентнаяОперация";
	
	Запрос.УстановитьПараметр("Ссылка", МассивСсылок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

Процедура СформироватьЗаданияПоДокументамСчетФактураВыданныйАванс(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Операция.Дата, МЕСЯЦ) КАК Месяц,
	|	Операция.Организация КАК Организация,
	|	Операция.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК Операция
	|ГДЕ
	|	Операция.Ссылка В(&Ссылка)
	|";
	
	Запрос.УстановитьПараметр("Ссылка", МассивСсылок);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

Процедура СформироватьЗаданияПоДокументамСчетФактураПолученныйАванс(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Операция.Дата, МЕСЯЦ) КАК Месяц,
	|	Операция.Организация КАК Организация,
	|	Операция.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК Операция
	|ГДЕ
	|	Операция.Ссылка В(&Ссылка)
	|";
	
	Запрос.УстановитьПараметр("Ссылка", МассивСсылок);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

//Возвращаемое значение:
// Массив из ОбъектМетаданных
Функция ВходящиеДанныеМеханизма() Экспорт
	
	ВходящиеДанные = Новый Массив;
	ВходящиеДанные.Добавить(Метаданные.РегистрыНакопления.НДСПредъявленный);
	ВходящиеДанные.Добавить(Метаданные.РегистрыНакопления.НДСАвансыВыданные);
	ВходящиеДанные.Добавить(Метаданные.РегистрыНакопления.НДСАвансыПолученные);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураПолученныйАванс);
	
	УчетНДСЛокализация.ДополнитьВходящиеДанныхДляВыполненияРегламентнойОперации(ВходящиеДанные);
	
	Возврат ВходящиеДанные;
	
КонецФункции

//Возвращаемое значение:
// Массив из ПеречислениеСсылка.ТипыЗапасов
Функция ТипыЗапасовСобственные() Экспорт
	
	ТипыЗапасовСобственные = Перечисления.ТипыЗапасов.ТипыЗапасовСобственные();
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.ПустаяСсылка());
	
	Возврат ТипыЗапасовСобственные;
	
КонецФункции

//Возвращаемое значение:
// Массив из ПеречислениеСсылка.ТипыНоменклатуры
Функция ТипыНоменклатурыТовар() Экспорт
	
	ТипыНоменклатуры = Новый Массив();
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	
	Возврат ТипыНоменклатуры;
	
КонецФункции

//Возвращаемое значение:
// Массив из ПеречислениеСсылка.ТипыНоменклатуры
Функция ТипыНоменклатурыУслугаРабота() Экспорт
	
	ТипыНоменклатуры = Новый Массив();
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	
	Возврат ТипыНоменклатуры;
	
КонецФункции

//Параметры:
// КлючПараметров - см. УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи
// ЗначенияПараметров - см. УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи
// КэшированныеЗначенияПараметров - см. УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи
//Возвращаемое значение:
// Произвольный
Функция ИзмененныеПараметры(КлючПараметров, ЗначенияПараметров, КэшированныеЗначенияПараметров) Экспорт
	
	Результат = Новый Структура();
	
	Если ТипЗнч(КэшированныеЗначенияПараметров) <> Тип("Структура") Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПрошлыеЗначенияПараметров = Неопределено;
	Если Не КэшированныеЗначенияПараметров.Свойство(КлючПараметров, ПрошлыеЗначенияПараметров) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ЗначенияПараметров, ПрошлыеЗначенияПараметров) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для каждого КлючИЗначение Из ЗначенияПараметров Цикл
		Если ЗначениеЗаполнено(КлючИЗначение.Значение)
			И КлючИЗначение.Значение <> ПрошлыеЗначенияПараметров[КлючИЗначение.Ключ] Тогда
			Результат.Вставить(КлючИЗначение.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбновитьКэшированныеЗначенияПараметров(КлючПараметров, ЗначенияПараметров, КэшированныеЗначенияПараметров) Экспорт
	
	Если ТипЗнч(КэшированныеЗначенияПараметров) <> Тип("Структура") Тогда
		КэшированныеЗначенияПараметров = Новый Структура();
	КонецЕсли;
	
	Если Не КэшированныеЗначенияПараметров.Свойство(КлючПараметров) Тогда
		КэшированныеЗначенияПараметров.Вставить(КлючПараметров, ЗначенияПараметров);
	Иначе
		ЗаполнитьЗначенияСвойств(КэшированныеЗначенияПараметров[КлючПараметров], ЗначенияПараметров);
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьСовместныйВыборКонтрагентовОрганизаций(Элемент, Контрагент = Null) Экспорт

	Если ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		Если Контрагент = Неопределено Тогда
			Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(Новый ПараметрВыбора("ВыборКонтрагентовИОрганизаций", Истина));
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
 	Иначе
		Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");	
		Элемент.ВыбиратьТип = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Обработается поле ставки НДС в тексте запроса - добавятся условия выбора расчетной ставки
// 
// Параметры:
// 	Запрос - Запрос -
// 	ПолеСтавки - Строка - Полный путь к полю ставки.
//
Процедура ВыбратьСтавкуНДСРасчетную(Запрос, ПолеСтавки) Экспорт
	
	ТекстШаблон = СтрШаблон("ВЫБОР
	|		КОГДА ISNULL(%1.Ставка, 0) > 0
	|			И %1.РасчетнаяСтавка = ЛОЖЬ
	|			ТОГДА %1.СоответствующаяРасчетнаяСтавка
	|		ИНАЧЕ %1
	|	КОНЕЦ", ПолеСтавки);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ПолеСтавки, ТекстШаблон);
	
КонецПроцедуры

// Возвращает значение флага ОтражатьВУУ в документе ВводОстатков
// 
// Параметры:
// 	ДокументОснование - ДокументСсылка.ПервичныйДокумент - документ расчетов в документе ВводОстатков
//
// Возвращаемое значение:
// 	Булево
//
Функция ВводОстатковОтражатьВУУ(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводОстатковРасчетыСПартнерами.Ссылка.ОтражатьВУУ ОтражатьВУУ
	|ИЗ
	|	Документ.ВводОстатковВзаиморасчетов.РасчетыСПартнерами КАК ВводОстатковРасчетыСПартнерами
	|ГДЕ
	|	ВводОстатковРасчетыСПартнерами.ДокументРасчетов = &ДокументОснование
	|	И ВводОстатковРасчетыСПартнерами.Ссылка.Проведен
	|";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ОтражатьВУУ = Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОтражатьВУУ = Выборка.ОтражатьВУУ;
	КонецЦикла;
	
	Возврат ОтражатьВУУ
	
КонецФункции

//Возвращаемое значение:
// Число
Функция КоличествоЗаданийДляРасчетаНДС() Экспорт

	ЗначенияПараметров = Константы.НастройкиЗакрытияМесяца.СоздатьМенеджерЗначения().УстановленныеЗначенияПараметровОперации(
  							Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоНДС);
							
	Возврат ЗначенияПараметров.КоличествоЗаданийДляРасчетаНДС;

КонецФункции

//Возвращаемое значение:
// Число
Функция ПорогСписанияПогрешностейОкругления() Экспорт

	ЗначенияПараметров = Константы.НастройкиЗакрытияМесяца.СоздатьМенеджерЗначения().УстановленныеЗначенияПараметровОперации(
  							Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоНДС);
							
	Возврат ЗначенияПараметров.ПорогСписанияПогрешностейОкругления;

КонецФункции

#КонецОбласти

#Область РегламентнаяОперацияПоНДС

// Выполняет Формирование записей книг покупок и продаж.
// 
// Параметры:
// 	 КонецПериода - Дата - Период, по который необходимо выполнить отражение
// 	 МассивОрганизаций - Массив из СправочникСсылка.Организации, Неопределено - Организации, по которым необходимо сформировать записи книг.
// 																Если Неопределено, то по всем организациям.
// 	 МассивСчетовФактур - Массив из ДокументСсылка, Неопределено - Счета-фактуры (документы поступления), по которым необходимо сформировать записи книг.
// 																Если Неопределено, то по всем счетам-фактурам.
//
Процедура ВыполнитьЗаданияКФормированиюДвиженийПоНДС(КонецПериода, МассивОрганизаций = Неопределено, МассивСчетовФактур = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ();
	
	НомерЗаданияДоРасчета = РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.УвеличитьНомерЗадания();
	
	Месяц = МесяцДляРасчета(КонецПериода, НомерЗаданияДоРасчета, МассивОрганизаций, МассивСчетовФактур);
	Пока Месяц <> Неопределено Цикл
		
		ПараметрыРасчета = Новый Структура;
		ПараметрыРасчета.Вставить("НомерЗадания",                        НомерЗаданияДоРасчета);
		ПараметрыРасчета.Вставить("НачалоПериода",                       НачалоМесяца(Месяц));
		ПараметрыРасчета.Вставить("КонецПериода",                        КонецМесяца(Месяц));
		ПараметрыРасчета.Вставить("МассивОрганизаций",                   МассивОрганизаций);
		ПараметрыРасчета.Вставить("МассивСчетовФактур",                  МассивСчетовФактур);
		ПараметрыРасчета.Вставить("ТаблицаНастроек",                     Новый ТаблицаЗначений);
		ПараметрыРасчета.Вставить("ПорогСписанияПогрешностейОкругления", ПорогСписанияПогрешностейОкругления());
		ПараметрыРасчета.Вставить("ИСФНачалоПериода",                    Неопределено);
		ПараметрыРасчета.Вставить("ИСФКонецПериода",                     Неопределено);
		ПараметрыРасчета.Вставить("МассивИзмеренийРегистра",             Неопределено);
		
		Пока ПолучитьЗадания(ПараметрыРасчета) Цикл
			НачатьТранзакцию();
			Попытка
				ВыполнитьРасчетСЗамеромВремени(ПараметрыРасчета);
				Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
					ЗаблокироватьРегистрЗаданий(ПараметрыРасчета);
				КонецЕсли;
				ЗафиксироватьРезультат(ПараметрыРасчета);
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не удалось выполнить по причине %1'"),
						ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
						
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Формирование движений по НДС.'", ОбщегоНазначения.КодОсновногоЯзыка()), 
					УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения); 
					
				ВызватьИсключение ТекстСообщения;
				
			КонецПопытки;
		КонецЦикла;
		
		Месяц = МесяцДляРасчета(КонецПериода, НомерЗаданияДоРасчета, МассивОрганизаций, МассивСчетовФактур);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаблокироватьРегистрЗаданий(ПараметрыРасчета)
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЗаданияКФормированиюДвиженийПоНДС");
	ЭлементБлокировки.УстановитьЗначение("НомерЗадания", Новый Диапазон(Неопределено, ПараметрыРасчета.НомерЗадания));
	
	ИсточникБлокировки = Новый ТаблицаЗначений;
	ИсточникБлокировки.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ИсточникБлокировки.Колонки.Добавить("СчетФактура", Новый ОписаниеТипов(Документы.ТипВсеСсылки().Типы()));
	
	Если ПараметрыРасчета.МассивСчетовФактур <> Неопределено Тогда
		ИсточникБлокировки.ЗагрузитьКолонку(ПараметрыРасчета.МассивСчетовФактур, "СчетФактура");
		ЭлементБлокировки.ИсточникДанных = ИсточникБлокировки;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СчетФактура", "СчетФактура");
	КонецЕсли;
	Если ПараметрыРасчета.МассивОрганизаций <> Неопределено Тогда
		Если ТипЗнч(ПараметрыРасчета.МассивОрганизаций) = Тип("СписокЗначений") Тогда
			ИсточникБлокировки.ЗагрузитьКолонку(ПараметрыРасчета.МассивОрганизаций.ВыгрузитьЗначения(), "Организация");
		ИначеЕсли ТипЗнч(ПараметрыРасчета.МассивОрганизаций) = Тип("СправочникСсылка.Организации") Тогда
			ИсточникБлокировки.ЗагрузитьКолонку(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыРасчета.МассивОрганизаций), "Организация");
		Иначе
			ИсточникБлокировки.ЗагрузитьКолонку(ПараметрыРасчета.МассивОрганизаций, "Организация");
		КонецЕсли;
		ЭлементБлокировки.ИсточникДанных = ИсточникБлокировки;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	КонецЕсли;
	
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ВыполнитьРасчетСЗамеромВремени(ПараметрыРасчета)
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("УчетНДС.ФормированиеЗаписейКнигПокупокИПродажПоПриобретеннымЦенностям");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗаданий
	|ИЗ
	|	Задания";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоЗаданий = Выборка.КоличествоЗаданий;
	Иначе
		КоличествоЗаданий = 0;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация
	|ИЗ
	|	Задания КАК Т";
	ПараметрыРасчета.МассивОрганизаций = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	ПараметрыРасчета.ТаблицаНастроек = НастройкиУчетаНДСПоОрганизациям(ПараметрыРасчета.МассивОрганизаций, ПараметрыРасчета.КонецПериода);
	
	ВыполнитьРасчет(ПараметрыРасчета);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоЗаданий);
	
КонецПроцедуры

Процедура ВыполнитьРасчет(ПараметрыРасчета)
	
	ПолучитьДокументыСторно(ПараметрыРасчета);
	
	СформироватьНДСПредъявленный(ПараметрыРасчета);
	СформироватьНДСАвансыПолученные(ПараметрыРасчета);
	СформироватьНДСАвансыВыданные(ПараметрыРасчета);
	СформироватьДвиженияПоНДС(ПараметрыРасчета);
	СформироватьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета);
	
	
	УчетНДСЛокализация.ВыполнитьРасчет(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьДокументыСторно(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрДокументов.Ссылка               КАК Ссылка,
	|	РеестрДокументов.ДатаДокументаИБ      КАК Период,
	|	РеестрДокументов.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	РеестрДокументовИсправляемыйДокумент.ДатаДокументаИБ КАК ДатаИсправляемогоДокумента
	|ПОМЕСТИТЬ ДокументыСторно
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК РеестрДокументовИсправляемыйДокумент
	|	ПО
	|		РеестрДокументов.ИсправляемыйДокумент = РеестрДокументовИсправляемыйДокумент.Ссылка
	|		И НЕ РеестрДокументов.ДополнительнаяЗапись
	|		И РеестрДокументовИсправляемыйДокумент.Проведен
	|ГДЕ
	|	РеестрДокументов.ДатаДокументаИБ МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РеестрДокументов.СторноИсправление
	|	И НЕ РеестрДокументов.ДополнительнаяЗапись
	|	И РеестрДокументов.Проведен
	|	И ИСТИНА В (
	|		ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				Задания КАК Задания
	|			ПО
	|				НДСПредъявленный.Организация = Задания.Организация
	|				И НДСПредъявленный.СчетФактура = Задания.СчетФактура
	|		ГДЕ
	|			НДСПредъявленный.Регистратор = РеестрДокументов.СторнируемыйДокумент)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрДокументов.Ссылка               КАК Ссылка,
	|	РеестрДокументов.ДатаДокументаИБ      КАК Период,
	|	НДСПредъявленный.СчетФактура 		  КАК СторнируемыйДокумент,
	|	РеестрДокументовИсправляемыйДокумент.ДатаДокументаИБ КАК ДатаИсправляемогоДокумента
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК РеестрДокументовИсправляемыйДокумент
	|	ПО
	|		РеестрДокументов.ИсправляемыйДокумент = РеестрДокументовИсправляемыйДокумент.Ссылка
	|		И НЕ РеестрДокументов.ДополнительнаяЗапись
	|		И РеестрДокументовИсправляемыйДокумент.Проведен
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Регистратор = РеестрДокументов.СторнируемыйДокумент
	|		И (НДСПредъявленный.СчетФактура ССЫЛКА Документ.ПервичныйДокумент
	|			ИЛИ НДСПредъявленный.СчетФактура ССЫЛКА Документ.Бронирование)
	|ГДЕ
	|	РеестрДокументов.ДатаДокументаИБ МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РеестрДокументов.СторноИсправление
	|	И НЕ РеестрДокументов.ДополнительнаяЗапись
	|	И РеестрДокументов.Проведен
	|	И ИСТИНА В (
	|		ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				Задания КАК Задания
	|			ПО
	|				НДСПредъявленный.Организация = Задания.Организация
	|				И НДСПредъявленный.СчетФактура = Задания.СчетФактура
	|		ГДЕ
	|			НДСПредъявленный.Регистратор = РеестрДокументов.СторнируемыйДокумент)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрДокументов.Ссылка               КАК Ссылка,
	|	РеестрДокументов.ДатаДокументаИБ      КАК Период,
	|	РеестрДокументов.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	РеестрДокументовИсправляемыйДокумент.ДатаДокументаИБ КАК ДатаИсправляемогоДокумента
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК РеестрДокументовИсправляемыйДокумент
	|	ПО
	|		РеестрДокументов.ИсправляемыйДокумент = РеестрДокументовИсправляемыйДокумент.Ссылка
	|		И НЕ РеестрДокументов.ДополнительнаяЗапись
	|		И РеестрДокументовИсправляемыйДокумент.Проведен
	|ГДЕ
	|	РеестрДокументов.ДатаДокументаИБ МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РеестрДокументов.СторноИсправление
	|	И НЕ РеестрДокументов.ДополнительнаяЗапись
	|	И РеестрДокументов.Проведен
	|	И ИСТИНА В (
	|		ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				Задания КАК Задания
	|			ПО
	|				ДвиженияПоНДС.Организация = Задания.Организация
	|				И ДвиженияПоНДС.СчетФактура = Задания.СчетФактура
	|		ГДЕ
	|			ДвиженияПоНДС.Регистратор = РеестрДокументов.СторнируемыйДокумент)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СторнируемыйДокумент
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ВсеОрганизации",     Не ЗначениеЗаполнено(ПараметрыРасчета.МассивОрганизаций));
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция МесяцДляРасчета(КонецПериода, НомерЗадания, МассивОрганизаций, МассивСчетовФактур)
	
	Месяц = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НАЧАЛОПЕРИОДА(Задания.Месяц, МЕСЯЦ) КАК Месяц
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюДвиженийПоНДС КАК Задания
	|ГДЕ
	|	(Задания.Месяц <= &КонецПериода ИЛИ &КонецПериода = ДАТАВРЕМЯ(1,1,1))
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И (&ВсеОрганизации ИЛИ Задания.Организация В (&МассивОрганизаций))
	|	И (&ВсеСчетаФактуры ИЛИ Задания.СчетФактура В (&МассивСчетовФактур))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НАЧАЛОПЕРИОДА(Задания.Месяц, МЕСЯЦ) ВОЗР
	|";
	
	Запрос.УстановитьПараметр("КонецПериода",       ?(КонецПериода = КонецМесяца(ТекущаяДатаСеанса()),'00010101',КонецПериода));
	Запрос.УстановитьПараметр("МассивОрганизаций",  МассивОрганизаций);
	Запрос.УстановитьПараметр("ВсеОрганизации",     Не ЗначениеЗаполнено(МассивОрганизаций));
	Запрос.УстановитьПараметр("МассивСчетовФактур", МассивСчетовФактур);
	Запрос.УстановитьПараметр("ВсеСчетаФактуры",    Не ЗначениеЗаполнено(МассивСчетовФактур));
	Запрос.УстановитьПараметр("НомерЗадания",       НомерЗадания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Месяц = Выборка.Месяц;
	КонецЕсли;
	
	Возврат Месяц;
	
КонецФункции

Функция ПолучитьЗадания(ПараметрыРасчета)
	
	ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	ПараметрыРасчета.Вставить("РасчетАвансовВыданных",   Ложь);
	ПараметрыРасчета.Вставить("РасчетАвансовПолученных", Ложь);
	
	Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		НачатьТранзакцию();
		Попытка
			ЗаблокироватьРегистрЗаданий(ПараметрыРасчета);
			ПолучитьЗаданияКФормированиюДвиженийПоНДС(ПараметрыРасчета);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось выполнить по причине %1'"),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Формирование движений по НДС.'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения); 
			ВызватьИсключение ТекстСообщения;
		КонецПопытки;
	Иначе
		ПолучитьЗаданияКФормированиюДвиженийПоНДС(ПараметрыРасчета);
	КонецЕсли;
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "Задания") > 0 Тогда
		ЕстьЗаданияКФормированиюДвиженийПоНДС = Истина;
	Иначе
		ЕстьЗаданияКФормированиюДвиженийПоНДС = Ложь;
	КонецЕсли;
	
	Возврат ЕстьЗаданияКФормированиюДвиженийПоНДС;
	
КонецФункции

Процедура ПолучитьЗаданияКФормированиюДвиженийПоНДС(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 100
	|	Задания.Месяц,
	|	Задания.НомерЗадания,
	|	Задания.Организация,
	|	Задания.СчетФактура
	|ПОМЕСТИТЬ ИсходныеЗадания
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюДвиженийПоНДС КАК Задания
	|ГДЕ
	|	Задания.Месяц МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И (&ВсеОрганизации ИЛИ Задания.Организация В (&МассивОрганизаций))
	|	И (&ВсеСчетаФактуры ИЛИ Задания.СчетФактура В (&МассивСчетовФактур))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация,
	|	Задания.СчетФактура
	|ПОМЕСТИТЬ Задания
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "100", Строка(Формат(КоличествоЗаданийДляРасчетаНДС(),"ЧГ=")));
	
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ВсеОрганизации",     Не ЗначениеЗаполнено(ПараметрыРасчета.МассивОрганизаций));
	Запрос.УстановитьПараметр("МассивСчетовФактур", ПараметрыРасчета.МассивСчетовФактур);
	Запрос.УстановитьПараметр("ВсеСчетаФактуры",    Не ЗначениеЗаполнено(ПараметрыРасчета.МассивСчетовФактур));
	Запрос.УстановитьПараметр("НомерЗадания",       ПараметрыРасчета.НомерЗадания);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗафиксироватьРезультат(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗаданияКОчистке.Месяц                               КАК Месяц,
	|	ЗаданияКОчистке.НомерЗадания                        КАК НомерЗадания,
	|	ЗаданияКОчистке.Организация                         КАК Организация,
	|	ЗаданияКОчистке.СчетФактура                         КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК ЗаданияКОчистке
	|;
	|
	|//////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                                 КАК НомерЗадания,
	|	Задания.Организация                           КАК Организация,
	|	Задания.СчетФактура                           КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО НДСПредъявленный.Период > &КонецПериода
	|		И НДСПредъявленный.Организация = Задания.Организация
	|		И НДСПредъявленный.СчетФактура = Задания.СчетФактура
	|		И НДСПредъявленный.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РеестрДокументов.ДатаДокументаИБ, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                                 КАК НомерЗадания,
	|	Задания.Организация                           КАК Организация,
	|	Задания.СчетФактура                           КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО НДСПредъявленный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И НДСПредъявленный.Организация = Задания.Организация
	|		И НДСПредъявленный.СчетФактура = Задания.СчетФактура
	|		И НДСПредъявленный.Активность
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|	ПО
	|		НДСПредъявленный.Регистратор = РеестрДокументов.СторнируемыйДокумент
	|		И НДСПредъявленный.Организация = РеестрДокументов.Организация
	|		И РеестрДокументов.ДатаДокументаИБ > &КонецПериода
	|		И РеестрДокументов.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(НДСАвансыПолученные.Период, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                                    КАК НомерЗадания,
	|	Задания.Организация                              КАК Организация,
	|	Задания.СчетФактура                              КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСАвансыПолученные КАК НДСАвансыПолученные
	|	ПО НДСАвансыПолученные.Период > &КонецПериода
	|		И НДСАвансыПолученные.Организация = Задания.Организация
	|		И НДСАвансыПолученные.ДокументОплаты = Задания.СчетФактура
	|		И НДСАвансыПолученные.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РасчетыСКлиентами.Период, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                                    КАК НомерЗадания,
	|	Задания.Организация                              КАК Организация,
	|	Задания.СчетФактура                              КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентами
	|	ПО РасчетыСКлиентами.Период > &КонецПериода
	|		И РасчетыСКлиентами.АналитикаУчетаПоПартнерам.Организация = Задания.Организация
	|		И РасчетыСКлиентами.РасчетныйДокумент = Задания.СчетФактура
	|		И РасчетыСКлиентами.Активность
	|		И РасчетыСКлиентами.ПредоплатаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РасчетыСКлиентами.Период, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                                    КАК НомерЗадания,
	|	Задания.Организация                              КАК Организация,
	|	Задания.СчетФактура                              КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСКлиентами
	|	ПО РасчетыСКлиентами.Период > &КонецПериода
	|		И РасчетыСКлиентами.АналитикаУчетаПоПартнерам.Организация = Задания.Организация
	|		И РасчетыСКлиентами.РасчетныйДокумент = Задания.СчетФактура
	|		И РасчетыСКлиентами.Активность
	|		И РасчетыСКлиентами.ПредоплатаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(НДСАвансыВыданные.Период, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                                  КАК НомерЗадания,
	|	Задания.Организация                            КАК Организация,
	|	Задания.СчетФактура                            КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСАвансыВыданные КАК НДСАвансыВыданные
	|	ПО НДСАвансыВыданные.Период > &КонецПериода
	|		И НДСАвансыВыданные.Организация = Задания.Организация
	|		И НДСАвансыВыданные.ДокументОплаты = Задания.СчетФактура
	|		И НДСАвансыВыданные.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                                    КАК НомерЗадания,
	|	Задания.Организация                              КАК Организация,
	|	Задания.СчетФактура                              КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|	ПО РасчетыСПоставщиками.Период > &КонецПериода
	|		И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.Организация = Задания.Организация
	|		И РасчетыСПоставщиками.РасчетныйДокумент = Задания.СчетФактура
	|		И РасчетыСПоставщиками.Активность
	|		И РасчетыСПоставщиками.ПредоплатаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                                    КАК НомерЗадания,
	|	Задания.Организация                              КАК Организация,
	|	Задания.СчетФактура                              КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщиками
	|	ПО РасчетыСПоставщиками.Период > &КонецПериода
	|		И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.Организация = Задания.Организация
	|		И РасчетыСПоставщиками.РасчетныйДокумент = Задания.СчетФактура
	|		И РасчетыСПоставщиками.Активность
	|		И РасчетыСПоставщиками.ПредоплатаРегл <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(&КонецКвартала, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                        КАК НомерЗадания,
	|	Задания.Организация                  КАК Организация,
	|	Задания.СчетФактура                  КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетныеПолитикиПоПериодичностиРасчетаНДС КАК УчетныеПолитикиПоПериодичностиРасчетаНДС
	|	ПО 
	|		УчетныеПолитикиПоПериодичностиРасчетаНДС.Организация = Задания.Организация
	|ГДЕ
	|	УчетныеПолитикиПоПериодичностиРасчетаНДС.ПериодичностьФормированияВычетовИВосстановленийНДС = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|	И &КонецПериода <> &КонецКвартала
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",   ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",    ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("НомерЗадания",    ПараметрыРасчета.НомерЗадания);
	Запрос.УстановитьПараметр("КонецКвартала",   КонецКвартала(ПараметрыРасчета.КонецПериода));
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Результат  = Запрос.ВыполнитьПакет();
	Результат0 = Результат[0]; // РезультатЗапроса - 
	Результат1 = Результат[1]; // РезультатЗапроса - 
	ВыборкаДляУдаления = Результат0.Выбрать();
	ВыборкаДляЗаписи = Результат1.Выбрать();
	
	Пока ВыборкаДляУдаления.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДляУдаления);
		МенеджерЗаписи.Удалить();
	КонецЦикла;
	
	Пока ВыборкаДляЗаписи.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДляЗаписи);
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
	УчетНДСЛокализация.ЗафиксироватьРезультат(ПараметрыРасчета);
	
	ПараметрыРасчета.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

Процедура ПолучитьПартии(ПараметрыРасчета)
	
	УчетНДСЛокализация.ПолучитьПартии(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("Партии") = Неопределено Тогда
		Запрос = Новый Запрос();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.АналитикаУчетаПартий.Контрагент КАК Контрагент,
		|	Партии.ДокументПоступленияРасходов КАК СчетФактура,
		|	ВЫБОР 
		|		КОГДА Партии.ДокументПоступленияРасходов ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт 
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
		|		ИНАЧЕ Партии.АналитикаУчетаПартий.ВидЦенности 
		|	КОНЕЦ КАК ВидЦенности,
		|	Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|	Партии.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Партии.НалогообложениеНДС КАК КорВидДеятельностиНДС,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиСписанияНДС,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Партии.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ПодразделениеСписанияНДС,
		|	Партии.ДокументРеализации КАК ДокументРеализации,
		|	Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
		|	Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	Партии.Сторно КАК Сторно,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Партии.ДокументПоступленияРасходов) = ТИП(Документ.ТаможеннаяДекларацияИмпорт)
		|			ТОГДА 0
		|		ИНАЧЕ Партии.СтоимостьРегл 
		|	КОНЕЦ КАК СуммаБезНДС,
		|	Партии.НДСРегл КАК НДС,
		|	Партии.НДСУпр КАК НДСУпр
		|ПОМЕСТИТЬ ПартииПредварительная
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК Партии
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Задания КАК Задания
		|	ПО
		|		Задания.Организация = Партии.Организация
		|		И Задания.СчетФактура = Партии.ДокументПоступленияРасходов
		|	
		|ГДЕ
		|	Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И НЕ Партии.Сторно
		|	И Партии.Активность
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.НДСРегл <> 0
		|	И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.Поставщик КАК Контрагент,
		|	Партии.ДокументПоступленияРасходов КАК СчетФактура,
		|	Партии.ВидЦенности КАК ВидЦенности,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|	Партии.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Партии.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
		|	Партии.СтатьяОтраженияРасходов КАК СтатьяСписанияНДС,
		|	Партии.АналитикаОтраженияРасходов КАК АналитикаСписанияНДС,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиСписанияНДС,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Партии.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	Партии.Подразделение КАК ПодразделениеСписанияНДС,
		|	Партии.ДокументРеализации КАК ДокументРеализации,
		|	Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
		|	Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	Партии.Сторно КАК Сторно,
		|	Партии.СтоимостьРегл КАК СуммаБезНДС,
		|	Партии.НДСРегл КАК НДС,
		|	Партии.НДСУпр КАК НДСУпр
		|ИЗ
		|	РегистрНакопления.ПартииНДСКРаспределению КАК Партии
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Задания КАК Задания
		|	ПО
		|		Задания.Организация = Партии.Организация
		|		И Задания.СчетФактура = Партии.ДокументПоступленияРасходов
		|		
		|ГДЕ
		|	Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Партии.Активность
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.НДСРегл <> 0
		|	И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.Контрагент КАК Контрагент,
		|	Партии.СчетФактура КАК СчетФактура,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления,
		|	Партии.ВидЦенности КАК ВидЦенности,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|	Партии.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Партии.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
		|	Партии.СтатьяСписанияНДС КАК СтатьяСписанияНДС,
		|	Партии.АналитикаСписанияНДС КАК АналитикаСписанияНДС,
		|	Партии.НаправлениеДеятельностиСписанияНДС КАК НаправлениеДеятельностиСписанияНДС,
		|	ЕСТЬNULL(Партии.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
		|	ЕСТЬNULL(Партии.КорНаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
		|	Партии.ПодразделениеСписанияНДС КАК ПодразделениеСписанияНДС,
		|	Партии.ДокументРеализации КАК ДокументРеализации,
		|	Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
		|	Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	Партии.Сторно КАК Сторно,
		|	СУММА(Партии.СуммаБезНДС) КАК СуммаБезНДС,
		|	СУММА(Партии.НДС) КАК НДС,
		|	СУММА(Партии.НДСУпр) КАК НДСУпр
		|ПОМЕСТИТЬ Партии
		|ИЗ
		|	ПартииПредварительная КАК Партии
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО Партии.Организация.ГоловнаяОрганизация = ДанныеПервичныхДокументов.Организация.ГоловнаяОрганизация
		|			И Партии.СчетФактура = ДанныеПервичныхДокументов.Документ
		|
		|СГРУППИРОВАТЬ ПО
		|	Партии.Период,
		|	Партии.Регистратор,
		|	Партии.Организация,
		|	Партии.Контрагент,
		|	Партии.СчетФактура,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)),
		|	Партии.ВидЦенности,
		|	Партии.СтавкаНДС,
		|	Партии.ВидДеятельностиНДС,
		|	Партии.КорВидДеятельностиНДС,
		|	Партии.СтатьяСписанияНДС,
		|	Партии.АналитикаСписанияНДС,
		|	Партии.НаправлениеДеятельностиСписанияНДС,
		|	ЕСТЬNULL(Партии.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|	ЕСТЬNULL(Партии.КорНаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|	Партии.ПодразделениеСписанияНДС,
		|	Партии.ДокументРеализации,
		|	Партии.ИдентификаторФинЗаписи,
		|	Партии.НастройкаХозяйственнойОперации,
		|	Партии.Сторно
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПартииПредварительная
		|";
		
		Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВходящиеДанныеРагламентнойОперации = Новый Соответствие;
	
	ВходящиеДанныеМеханизма = ВходящиеДанныеМеханизма();
	Для каждого Объект Из ВходящиеДанныеМеханизма Цикл
		ВходящиеДанныеРагламентнойОперации.Вставить(Объект);
	КонецЦикла;
	
	ЗакрытиеМесяцаСервер.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(
		ВходящиеДанныеРагламентнойОперации,
		НСтр("ru = 'Формирование записей книг покупок и продаж.'"));
	
КонецПроцедуры

// Проверяет наличие сформированных заданий к закрытию месяца по движениям по НДС
// 
// Параметры:
// 	СтруктураПараметров - Структура - содержит:
// 		* Организация   - СправочникСсылка.Организации -
// 		* ДатаОкончания - Дата -
// Возвращаемое значение:
// 	Булево - Истина, если задания имеются
Функция ПроверитьНаличиеЗаданий_ФормированияДвиженийПоНДС(СтруктураПараметров) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюДвиженийПоНДС КАК ЗаданияКФормированиюДвиженийПоНДС
	|ГДЕ
	|	ЗаданияКФормированиюДвиженийПоНДС.Месяц <= &ДатаОкончания
	|	И ЗаданияКФормированиюДвиженийПоНДС.Организация = &Организация
	|";
	
	Для каждого КлючИЗначение Из СтруктураПараметров Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

#Область ФормированиеДвиженияНДСПредъявленный

Процедура СформироватьНДСПредъявленный(ПараметрыРасчета)
	
	ПолучитьПериодичностьФормированияВычетовИВосстановленийНДС(ПараметрыРасчета);
	
	ПолучитьТекущиеРегистраторыНДСПредъявленный(ПараметрыРасчета);
	ПолучитьСчетаФактурыДокументы(ПараметрыРасчета);
	ПолучитьИсправленныеСчетаФактурыДокументы(ПараметрыРасчета);
	ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета);
	
	ПолучитьПартии(ПараметрыРасчета);
	
	ПолучитьСписанияНДСНаРасходы(ПараметрыРасчета);
	ПолучитьНДСПредъявленныйОстатокНаНачало(ПараметрыРасчета);
	ПолучитьНДСПредъявленныйОнлайнДвижения(ПараметрыРасчета);
	
	ПолучитьБлокировкиНДС(ПараметрыРасчета);
	ПолучитьПовторноПринятыйКВычетуНДС(ПараметрыРасчета);
	
	ИменаТаблицЗаписейНДСПредъявленный = Новый Массив;
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйСторно(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйПоИСФ(ПараметрыРасчета));
	
	ПолучитьРазрезыВычетаНДС(ПараметрыРасчета);
	
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйИзменениеВидаДеятельности(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйИзменениеНаправленияДеятельности(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйВосстановлениеПодВидДеятельности(ПараметрыРасчета));
	
	ПолучитьОстаткиНДСПредъявленныйНаКонецПериода(ПараметрыРасчета);
	
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйПринятиеКВычету(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйВосстановлениеПоКСФ(ПараметрыРасчета));
	
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйПогрешностиОкругления(ПараметрыРасчета));

	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйСохранение(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный));
	
	ЗаписатьНДСПредъявленный(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный);
	ОчиститьНДСПредъявленный(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный);
	
КонецПроцедуры

Процедура ПолучитьРазрезыВычетаНДС(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстатокНаНачало.Организация КАК Организация,
	|	ОстатокНаНачало.СчетФактура КАК СчетФактура,
	|	ОстатокНаНачало.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ОстатокНаНачало.ВидЦенности КАК ВидЦенности,
	|	ОстатокНаНачало.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	ОстатокНаНачало.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ПОМЕСТИТЬ ВозможныеРазрезыВычетаНДС
	|ИЗ
	|	НДСПредъявленныйОстатокНаНачало КАК ОстатокНаНачало
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОнлайнДвижения.Организация КАК Организация,
	|	ОнлайнДвижения.СчетФактура КАК СчетФактура,
	|	ОнлайнДвижения.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ОнлайнДвижения.ВидЦенности КАК ВидЦенности,
	|	ОнлайнДвижения.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	ОнлайнДвижения.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ИЗ
	|	НДСПредъявленныйОнлайнДвижения КАК ОнлайнДвижения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленныйСторно.Организация КАК Организация,
	|	НДСПредъявленныйСторно.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйСторно.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСПредъявленныйСторно.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйСторно.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	НДСПредъявленныйСторно.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ИЗ
	|	НДСПредъявленныйСторно КАК НДСПредъявленныйСторно
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленныйПоИСФ.Организация КАК Организация,
	|	НДСПредъявленныйПоИСФ.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйПоИСФ.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСПредъявленныйПоИСФ.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйПоИСФ.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	НДСПредъявленныйПоИСФ.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ИЗ
	|	НДСПредъявленныйПоИСФ КАК НДСПредъявленныйПоИСФ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Организация КАК Организация,
	|	Партии.СчетФактура КАК СчетФактура,
	|	Партии.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Партии.ВидЦенности КАК ВидЦенности,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ВЫБОР КОГДА ИсправленныеСчетаФактуры.ИсправленныйСчетФактура ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|	КОНЕЦ КАК ИсправленныйСчетФактура
	|ИЗ
	|	Партии КАК Партии
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	ПО
	|		Партии.Организация = ИсправленныеСчетаФактуры.Организация
	|		И Партии.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Организация КАК Организация,
	|	Партии.СчетФактура КАК СчетФактура,
	|	Партии.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Партии.ВидЦенности КАК ВидЦенности,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ВЫБОР КОГДА ИсправленныеСчетаФактуры.ИсправленныйСчетФактура ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|	КОНЕЦ КАК ИсправленныйСчетФактура
	|ИЗ
	|	Партии КАК Партии
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	ПО
	|		Партии.Организация = ИсправленныеСчетаФактуры.Организация
	|		И Партии.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Организация КАК Организация,
	|	Партии.СчетФактура КАК СчетФактура,
	|	Партии.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Партии.ВидЦенности КАК ВидЦенности,
	|	Партии.ДокументРеализации КАК РеализацияЭкспорт,
	|	ВЫБОР КОГДА ИсправленныеСчетаФактуры.ИсправленныйСчетФактура ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|	КОНЕЦ КАК ИсправленныйСчетФактура
	|ИЗ
	|	Партии КАК Партии
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	ПО
	|		Партии.Организация = ИсправленныеСчетаФактуры.Организация
	|		И Партии.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура,
	|	ИсправленныйСчетФактура
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	УчетНДСЛокализация.ПолучитьРазрезыВычетаНДС(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("РазрезыВычетаНДС") = Неопределено Тогда
		
		// Если в локализации не задана локализация, то весь входной НДС без ограничений принимаем к вычету.
		// Вычет формируем в рамках самих счетов-фактур.
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РазрезыВычетаНДС.Организация КАК Организация,
		|	РазрезыВычетаНДС.СчетФактура КАК СчетФактура,
		|	РазрезыВычетаНДС.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	РазрезыВычетаНДС.ВидЦенности КАК ВидЦенности,
		|	РазрезыВычетаНДС.РеализацияЭкспорт КАК РеализацияЭкспорт,
		|	
		|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету) КАК Событие,
		|	
		|	МАКСИМУМ(ЕСТЬNULL(НДСПредъявленныйОнлайнДвижения.Период, ДанныеПервичныхДокументовСчетФактура.ДатаРегистратора)) КАК Период,
		|	МАКСИМУМ(ЕСТЬNULL(НДСПредъявленныйОнлайнДвижения.Регистратор, РазрезыВычетаНДС.СчетФактура)) КАК Регистратор,
		|	РазрезыВычетаНДС.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
		|	
		|ПОМЕСТИТЬ РазрезыВычетаНДС
		|ИЗ
		|	ВозможныеРазрезыВычетаНДС КАК РазрезыВычетаНДС
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактура
		|	ПО
		|		РазрезыВычетаНДС.Организация = ДанныеПервичныхДокументовСчетФактура.Организация
		|		И РазрезыВычетаНДС.СчетФактура = ДанныеПервичныхДокументовСчетФактура.Документ
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		НДСПредъявленныйОнлайнДвижения КАК НДСПредъявленныйОнлайнДвижения
		|	ПО
		|		РазрезыВычетаНДС.Организация = НДСПредъявленныйОнлайнДвижения.Организация
		|		И РазрезыВычетаНДС.СчетФактура = НДСПредъявленныйОнлайнДвижения.СчетФактура
		|		И РазрезыВычетаНДС.ВидДеятельностиНДС = НДСПредъявленныйОнлайнДвижения.ВидДеятельностиНДС
		|		И РазрезыВычетаНДС.ВидЦенности = НДСПредъявленныйОнлайнДвижения.ВидЦенности
		|		И РазрезыВычетаНДС.РеализацияЭкспорт = НДСПредъявленныйОнлайнДвижения.РеализацияЭкспорт
		|	
		|ГДЕ
		|	РазрезыВычетаНДС.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрезыВычетаНДС.Организация,
		|	РазрезыВычетаНДС.СчетФактура,
		|	РазрезыВычетаНДС.ВидДеятельностиНДС,
		|	РазрезыВычетаНДС.ВидЦенности,
		|	РазрезыВычетаНДС.РеализацияЭкспорт,
		|	РазрезыВычетаНДС.ИсправленныйСчетФактура
		|";
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьСчетаФактурыДокументы(ПараметрыРасчета)

	УчетНДСЛокализация.ПолучитьСчетаФактурыДокументы(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("СчетаФактурыДокументы") = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Задания.Организация           КАК Организация,
		|	Задания.СчетФактура           КАК СчетФактура,
		|	Задания.СчетФактура           КАК Ссылка,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаЗаписиКнигиПокупок
		|ПОМЕСТИТЬ СчетаФактурыДокументы
		|ИЗ
		|	Задания КАК Задания
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|	ПО
		|		Задания.Организация = ДанныеПервичныхДокументов.Организация
		|		И Задания.СчетФактура = ДанныеПервичныхДокументов.Документ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация, 
		|	СчетФактура
		|";
		Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
		Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьИсправленныеСчетаФактурыДокументы(ПараметрыРасчета)
	
	УчетНДСЛокализация.ПолучитьИсправленныеСчетаФактурыДокументы(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ИсправленныеСчетаФактуры") = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО      КАК СчетФактура,
		|	НЕОПРЕДЕЛЕНО      КАК ИсправленныйСчетФактура,
		|	НЕОПРЕДЕЛЕНО      КАК Ссылка,
		|	ДАТАВРЕМЯ(1,1,1)  КАК ДатаИсправления,
		|	ДАТАВРЕМЯ(1,1,1)  КАК ДатаПолучения,
		|	ДАТАВРЕМЯ(1,1,1)  КАК ДатаЗаписиКнигиПокупок,
		|	ЛОЖЬ              КАК ЗаписьДополнительногоЛиста,
		|	ДАТАВРЕМЯ(1,1,1)  КАК КорректируемыйПериод
		|
		|ПОМЕСТИТЬ ИсправленныеСчетаФактуры
		|ГДЕ
		|	ЛОЖЬ";
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета)

	УчетНДСЛокализация.ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("КорректировочныеСчетаФактуры") = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК СчетФактура
		|ПОМЕСТИТЬ КорректировочныеСчетаФактуры
		|ГДЕ
		|	ЛОЖЬ
		|";
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьСписанияНДСНаРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Задания.Организация                          КАК Организация,
	|	Задания.СчетФактура                          КАК СчетФактура,
	|	СписаниеНДСНаРасходы.Ссылка                  КАК СписаниеНДСНаРасходы,
	|	СписаниеНДСНаРасходы.Подразделение           КАК Подразделение,
	|	СписаниеНДСНаРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	СписаниеНДСНаРасходы.АналитикаРасходов       КАК АналитикаРасходов,
	|	СписаниеНДСНаРасходы.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	СписаниеНДСНаРасходы.НастройкаСчетовУчета     КАК НастройкаСчетовУчета
	|ПОМЕСТИТЬ СписанияНДСНаРасходы
	|ИЗ
	|	Задания КАК Задания
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы КАК СписаниеНДСНаРасходы
	|	ПО
	|		СписаниеНДСНаРасходы.Дата <= &КонецПериода
	|		И Задания.Организация = СписаниеНДСНаРасходы.Организация
	|		И Задания.СчетФактура = СписаниеНДСНаРасходы.СчетФактура
	|		И СписаниеНДСНаРасходы.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;

	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьНДСПредъявленныйОстатокНаНачало(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДСОстаток      КАК СуммаБезНДС,
	|	ДД.НДСОстаток              КАК НДС,
	|	ДД.НДСУпрОстаток           КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстатокНаНачалоСНаправлениями
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|		&НачалоПериода, 
	|		(Организация, СчетФактура) В (
	|			ВЫБРАТЬ
	|				Задания.Организация,
	|				Задания.СчетФактура
	|			ИЗ
	|				Задания)) КАК ДД
	|;
	|
	|ВЫБРАТЬ
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	СУММА(ДД.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(ДД.НДС)              КАК НДС,
	|	СУММА(ДД.НДСУпр)           КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстатокНаНачало
	|ИЗ
	|	НДСПредъявленныйОстатокНаНачалоСНаправлениями КАК ДД
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьНДСПредъявленныйОнлайнДвижения(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС  КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОнлайнДвижения
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		ДД.Организация = Задания.Организация
	|		И ДД.СчетФактура = Задания.СчетФактура
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НЕ ДД.РегламентнаяОперация
	|	И ДД.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыНДСПредъявленный(ПараметрыРасчета) 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.Период КАК Период
	|ПОМЕСТИТЬ ТекущиеРегистраторыНДСПредъявленный
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО (Задания.Организация = НДСПредъявленный.Организация)
	|			И (Задания.СчетФактура = НДСПредъявленный.СчетФактура)
	|ГДЕ
	|	НДСПредъявленный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСПредъявленный.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция РассчитатьЗаписиНДСПредъявленныйСторно(ПараметрыРасчета)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ДокументыСторноРегистратор.Ссылка,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.Ссылка, 
	|				ДокументыСторноИсправленныйСчетФактура.Ссылка)) КАК Ссылка,
	|	ЕСТЬNULL(ДокументыСторноРегистратор.Период,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.Период, 
	|				ДокументыСторноИсправленныйСчетФактура.Период)) КАК Период,
	|	ЕСТЬNULL(ДокументыСторноРегистратор.СторнируемыйДокумент,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.СторнируемыйДокумент, 
	|				ДокументыСторноИсправленныйСчетФактура.СторнируемыйДокумент)) КАК СторнируемыйДокумент,
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура    
	|ПОМЕСТИТЬ НДСПредъявленныйОтборСторно
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		НДСПредъявленный.Организация = Задания.Организация
	|		И НДСПредъявленный.СчетФактура = Задания.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноРегистратор
	|	ПО
	|		НДСПредъявленный.Регистратор = ДокументыСторноРегистратор.СторнируемыйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноСчетФактура
	|	ПО
	|		НДСПредъявленный.СчетФактура = ДокументыСторноСчетФактура.СторнируемыйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноИсправленныйСчетФактура
	|	ПО
	|		НДСПредъявленный.ИсправленныйСчетФактура = ДокументыСторноИсправленныйСчетФактура.СторнируемыйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК ПрошлыеСторноРегистратора
	|	ПО
	|		НДСПредъявленный.Регистратор = ПрошлыеСторноРегистратора.СторнируемыйДокумент
	|		И ПрошлыеСторноРегистратора.СторноИсправление
	|		И НЕ ПрошлыеСторноРегистратора.ДополнительнаяЗапись                          
	|		И ПрошлыеСторноРегистратора.Проведен
	|		И ПрошлыеСторноРегистратора.ДатаДокументаИБ < &НачалоПериода
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК ПрошлыеСторноСчетаФактуры
	|	ПО
	|		НДСПредъявленный.СчетФактура = ПрошлыеСторноСчетаФактуры.СторнируемыйДокумент 
	|		И ПрошлыеСторноСчетаФактуры.СторноИсправление
	|		И НЕ ПрошлыеСторноСчетаФактуры.ДополнительнаяЗапись
	|		И ПрошлыеСторноСчетаФактуры.Проведен
	|		И ПрошлыеСторноСчетаФактуры.ДатаДокументаИБ < &НачалоПериода
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК ПрошлыеСторноИсправительногоСчетаФактуры
	|	ПО
	|		НДСПредъявленный.ИсправленныйСчетФактура = ПрошлыеСторноИсправительногоСчетаФактуры.СторнируемыйДокумент
	|		И ПрошлыеСторноИсправительногоСчетаФактуры.СторноИсправление
	|		И НЕ ПрошлыеСторноИсправительногоСчетаФактуры.ДополнительнаяЗапись
	|		И ПрошлыеСторноИсправительногоСчетаФактуры.Проведен
	|		И ПрошлыеСторноИсправительногоСчетаФактуры.ДатаДокументаИБ < &НачалоПериода
	|ГДЕ
	|	НДСПредъявленный.Период < &НачалоПериода 
	|	И НДСПредъявленный.РегламентнаяОперация
	|	И НЕ НДСПредъявленный.Сторно
	|	И НЕ (ДокументыСторноРегистратор.СторнируемыйДокумент ЕСТЬ NULL
	|		И ДокументыСторноСчетФактура.СторнируемыйДокумент ЕСТЬ NULL
	|		И ДокументыСторноИсправленныйСчетФактура.СторнируемыйДокумент ЕСТЬ NULL)
	|	И ПрошлыеСторноРегистратора.Ссылка ЕСТЬ NULL
	|	И ПрошлыеСторноСчетаФактуры.Ссылка ЕСТЬ NULL
	|	И ПрошлыеСторноИсправительногоСчетаФактуры.Ссылка ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0                                           КАК Приоритет,
	|	НДСПредъявленныйОтборСторно.Ссылка          КАК Регистратор,
	|	НДСПредъявленныйОтборСторно.Период          КАК Период,
	|	НДСПредъявленныйОтборСторно.СторнируемыйДокумент  КАК СторнируемыйДокумент,
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	-НДСПредъявленный.СуммаБезНДС               КАК СуммаБезНДС,
	|	-НДСПредъявленный.НДС                       КАК НДС,
	|	-НДСПредъявленный.НДСУпр                    КАК НДСУпр,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие В (
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости),
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|		ИНАЧЕ НДСПредъявленный.Событие
	|	КОНЕЦ                                       КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	ИСТИНА                                      КАК РегламентнаяОперация,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.Регистратор = НДСПредъявленныйОтборСторно.СторнируемыйДокумент
	|			ТОГДА ИСТИНА 
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Сторно,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие В (
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости),
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость))
	|		ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров)
	|		ИНАЧЕ НДСПредъявленный.СтатьяРасходов
	|	КОНЕЦ  КАК СтатьяРасходов,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие В (
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости),
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость))
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИНАЧЕ НДСПредъявленный.АналитикаРасходов
	|	КОНЕЦ КАК АналитикаРасходов,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСПредъявленный.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ НДСПредъявленныйСторно
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйОтборСторно КАК НДСПредъявленныйОтборСторно
	|	ПО
	|		НДСПредъявленный.Регистратор = НДСПредъявленныйОтборСторно.Регистратор
	|		И НДСПредъявленный.Организация = НДСПредъявленныйОтборСторно.Организация
	|		И НДСПредъявленный.СчетФактура = НДСПредъявленныйОтборСторно.СчетФактура
	|
	|ГДЕ
	|	НДСПредъявленный.РегламентнаяОперация
	|	И НЕ НДСПредъявленный.Сторно
	|	И НДСПредъявленный.Период < &НачалоПериода
	|;
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);

	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйСторно";
	
КонецФункции

Процедура ПолучитьБлокировкиНДС(ПараметрыРасчета)
	
	УчетНДСЛокализация.ПолучитьБлокировкиНДС(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("БлокировкаВычетаНДС") = Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК СчетФактура,
		|	0 КАК НДС
		|ПОМЕСТИТЬ БлокировкаВычетаНДС
		|ГДЕ
		|	ЛОЖЬ";
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьПовторноПринятыйКВычетуНДС(ПараметрыРасчета)
	
	УчетНДСЛокализация.ПолучитьПовторноПринятыйКВычетуНДС(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ПовторноПринятыйКВычетуНДС") = Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК СчетФактура,
		|	НЕОПРЕДЕЛЕНО КАК Поставщик,
		|	НЕОПРЕДЕЛЕНО КАК ВидЦенности,
		|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	0 КАК СуммаБезНДС,
		|	0 КАК НДС,
		|	0 КАК НДСУпр
		|ПОМЕСТИТЬ ПовторноПринятыйКВычетуНДС
		|ГДЕ
		|	ЛОЖЬ";
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	
	КонецЕсли;
	
КонецПроцедуры

Функция РассчитатьЗаписиНДСПредъявленныйИзменениеВидаДеятельности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ()                  КАК НомерЗаписи,
	|	ДД.Приоритет                       КАК Приоритет,
	|	ДД.Период                          КАК Период,
	|	ДД.Регистратор                     КАК Регистратор,
	|	ДД.ВидДвижения                     КАК ВидДвижения,
	|	ДД.Организация                     КАК Организация,
	|	ДД.СчетФактура                     КАК СчетФактура,
	|	ДД.Поставщик                       КАК Поставщик,
	|	ДД.ВидЦенности                     КАК ВидЦенности,
	|	ДД.СтавкаНДС                       КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС              КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура         КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт               КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС                     КАК СуммаБезНДС,
	|	ДД.НДС                             КАК НДС,
	|	ДД.НДСУпр                          КАК НДСУпр,
	|	ДД.Событие                         КАК Событие,
	|	ДД.КорВидДеятельностиНДС           КАК КорВидДеятельностиНДС,
	|	ДД.Подразделение                   КАК Подразделение,
	|	ДД.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	ДД.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов               КАК АналитикаРасходов,
	|	ДД.ИдентификаторСтроки             КАК ИдентификаторСтроки,
	|	ДД.РегламентнаяОперация            КАК РегламентнаяОперация,
	|	ДД.Сторно                          КАК Сторно,
	|	ДД.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	ДД.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеВидаДеятельности
	|ИЗ (
	|	ВЫБРАТЬ
	|		2                                      КАК Приоритет,
	|		Партии.Период                          КАК Период,
	|		Партии.Регистратор                     КАК Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|		Партии.Организация                     КАК Организация,
	|		Партии.СчетФактура                     КАК СчетФактура,
	|		Партии.Контрагент                      КАК Поставщик,
	|		Партии.ВидЦенности                     КАК ВидЦенности,
	|		Партии.СтавкаНДС                       КАК СтавкаНДС,
	|		Партии.ВидДеятельностиНДС              КАК ВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|		НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|		Партии.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|		Партии.СуммаБезНДС                     КАК СуммаБезНДС,
	|		Партии.НДС                             КАК НДС,
	|		Партии.НДСУпр                          КАК НДСУпр,
	|		ВЫБОР
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.КорВидДеятельностиНДС В (&ВидыДеятельностиНДСУчитываетсяВСтоимости) ТОГДА
	|				ВЫБОР 
	|					КОГДА Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|				КОНЕЦ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|		КОНЕЦ                                             КАК Событие,
	|		Партии.КорВидДеятельностиНДС                      КАК КорВидДеятельностиНДС,
	|		Партии.ПодразделениеСписанияНДС                   КАК Подразделение,
	|		ЕСТЬNULL(Партии.НаправлениеДеятельностиСписанияНДС,Партии.КорНаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|		Партии.СтатьяСписанияНДС                          КАК СтатьяРасходов,
	|		Партии.АналитикаСписанияНДС                       КАК АналитикаРасходов,
	|		""""                                              КАК ИдентификаторСтроки,
	|		ИСТИНА                                            КАК РегламентнаяОперация,
	|		Партии.ИдентификаторФинЗаписи                     КАК ИдентификаторФинЗаписи,
	|		Партии.НастройкаХозяйственнойОперации             КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно                                     КАК Сторно
	|	ИЗ
	|		Партии КАК Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправленныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			СписанияНДСНаРасходы КАК СписанияНДСНаРасходы
	|		ПО
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	
	|	ГДЕ
	|		(Партии.ВидДеятельностиНДС В (&ВидыДеятельностиНДСПринимаетсяКВозмещению)
	|			ИЛИ Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|		И ВЫБОР
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.КорВидДеятельностиНДС В (&ВидыДеятельностиНДСУчитываетсяВСтоимости)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|			КОГДА Партии.ВидДеятельностиНДС <> Партии.КорВидДеятельностиНДС
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ <> НЕОПРЕДЕЛЕНО
	|		И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		3                                      КАК Приоритет,
	|		Партии.Период                          КАК Период,
	|		Партии.Регистратор                     КАК Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|		Партии.Организация                     КАК Организация,
	|		Партии.СчетФактура                     КАК СчетФактура,
	|		Партии.Контрагент                      КАК Поставщик,
	|		Партии.ВидЦенности                     КАК ВидЦенности,
	|		Партии.СтавкаНДС                       КАК СтавкаНДС,
	|		Партии.КорВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|		ВЫБОР
	|			КОГДА Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА Партии.ДокументРеализации
	|			КОГДА Партии.КорВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|				ТОГДА Партии.ДокументРеализации
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ                                  КАК РеализацияЭкспорт,
	|		Партии.КорНаправлениеДеятельности      КАК НаправлениеДеятельности,
	|		Партии.СуммаБезНДС                     КАК СуммаБезНДС,
	|		Партии.НДС                             КАК НДС,
	|		Партии.НДСУпр                          КАК НДСУпр,
	|		ВЫБОР
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|					И Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ВидДеятельностиНДС В (&ВидыДеятельностиНДСУчитываетсяВСтоимости)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|		КОНЕЦ                             КАК Событие,
	|		Партии.ВидДеятельностиНДС   КАК КорВидДеятельностиНДС,
	|		Партии.ПодразделениеСписанияНДС   КАК Подразделение,
	|		Партии.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО                      КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|		""""                              КАК ИдентификаторСтроки,
	|		ИСТИНА                            КАК РегламентнаяОперация,
	|		Партии.ИдентификаторФинЗаписи     КАК ИдентификаторФинЗаписи,
	|		Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно                     КАК Сторно
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ИсправленныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			СписанияНДСНаРасходы КАК СписанияНДСНаРасходы
	|		ПО
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|		
	|	ГДЕ
	|		Партии.КорВидДеятельностиНДС В (&ВидыДеятельностиНДСПринимаетсяКВозмещению)
	|		И ВЫБОР
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ВидДеятельностиНДС В (&ВидыДеятельностиНДСУчитываетсяВСтоимости)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости)
	|			КОГДА Партии.ВидДеятельностиНДС <> Партии.КорВидДеятельностиНДС
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ <> НЕОПРЕДЕЛЕНО
	|		И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// Обработаем смены вида деятельности партий, по которым НДС был списан документом СписаниеНДСНаРасходы.
	|	ВЫБРАТЬ
	|		2,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.СтавкаНДС,
	|		Партии.ВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.НаправлениеДеятельности,
	|		-Партии.СуммаБезНДС,
	|		-Партии.НДС,
	|		-Партии.НДСУпр,
	|		ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы),
	|		НЕОПРЕДЕЛЕНО,
	|		СписанияНДСНаРасходы.Подразделение     КАК Подразделение,
	|		Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|		СписанияНДСНаРасходы.СтатьяРасходов    КАК СтатьяРасходов,
	|		СписанияНДСНаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|		"""",
	|		ИСТИНА,
	|		Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям) КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправленныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			СписанияНДСНаРасходы
	|		ПО 
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	
	|	ГДЕ
	|		Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		И Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		3,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.СтавкаНДС,
	|		Партии.ВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.НаправлениеДеятельности,
	|		Партии.СуммаБезНДС,
	|		Партии.НДС,
	|		Партии.НДСУпр,
	|		ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость),
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО     КАК Подразделение,
	|		Партии.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО     КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО     КАК АналитикаРасходов,
	|		"""",
	|		ИСТИНА,
	|		Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям) КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправленныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			СписанияНДСНаРасходы
	|		ПО 
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ГДЕ
	|		Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		И Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		2,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.СтавкаНДС,
	|		Партии.КорВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.КорНаправлениеДеятельности,
	|		Партии.СуммаБезНДС,
	|		Партии.НДС,
	|		Партии.НДСУпр,
	|		ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости),
	|		Партии.ВидДеятельностиНДС,
	|		НЕОПРЕДЕЛЕНО     КАК Подразделение,
	|		Партии.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО     КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО     КАК АналитикаРасходов,
	|		"""",
	|		ИСТИНА,
	|		Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям) КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправленныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			СписанияНДСНаРасходы
	|		ПО 
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ГДЕ
	|		Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		И Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		2,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.СтавкаНДС,
	|		Партии.КорВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.НаправлениеДеятельности,
	|		Партии.СуммаБезНДС,
	|		Партии.НДС,
	|		Партии.НДСУпр,
	|		ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы),
	|		НЕОПРЕДЕЛЕНО,
	|		СписанияНДСНаРасходы.Подразделение     КАК Подразделение,
	|		Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|		СписанияНДСНаРасходы.СтатьяРасходов    КАК СтатьяРасходов,
	|		СписанияНДСНаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|		"""",
	|		ИСТИНА,
	|		Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям) КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправленныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			СписанияНДСНаРасходы
	|		ПО 
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ГДЕ
	|		Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		И Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|	) КАК ДД
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ВидыДеятельностиНДСПринимаетсяКВозмещению", УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());
	Запрос.УстановитьПараметр("ВидыДеятельностиНДСУчитываетсяВСтоимости", УчетНДСУП.ВидыДеятельностиНДСУчитываетсяВСтоимости());
	Запрос.УстановитьПараметр("НалогообложенияНДСПродажиНаЭкспорт", НалогообложенияНДСПродажиНаЭкспорт());
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйИзменениеВидаДеятельности";
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйИзменениеНаправленияДеятельности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	// Обработаем смену направления деятельности
	|ВЫБРАТЬ
	|	2                                      КАК Приоритет,
	|	Партии.Период                          КАК Период,
	|	Партии.Регистратор                     КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Партии.Организация                     КАК Организация,
	|	Партии.СчетФактура                     КАК СчетФактура,
	|	Партии.Контрагент                      КАК Поставщик,
	|	Партии.ВидЦенности                     КАК ВидЦенности,
	|	Партии.СтавкаНДС                       КАК СтавкаНДС,
	|	Партии.ВидДеятельностиНДС        КАК ВидДеятельностиНДС,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	Партии.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Партии.СуммаБезНДС                     КАК СуммаБезНДС,
	|	Партии.НДС                             КАК НДС,
	|	Партии.НДСУпр                          КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеНаправленияДеятельности) КАК Событие,
	|	Партии.КорВидДеятельностиНДС           КАК КорВидДеятельностиНДС,
	|	Партии.ПодразделениеСписанияНДС        КАК Подразделение,
	|	Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС               КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС            КАК АналитикаРасходов,
	|	""""                                   КАК ИдентификаторСтроки,
	|	ИСТИНА                                 КАК РегламентнаяОперация,
	|	Партии.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	Партии.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации,
	|	Партии.Сторно                          КАК Сторно
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеНаправленияДеятельности_Предварительная
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК ИзменениеВидаДеятельности
	|	ПО
	|		Партии.Организация   = ИзменениеВидаДеятельности.Организация
	|		И Партии.СчетФактура = ИзменениеВидаДеятельности.СчетФактура
	|		И Партии.Контрагент   = ИзменениеВидаДеятельности.Поставщик
	|		И Партии.ВидЦенности = ИзменениеВидаДеятельности.ВидЦенности
	|		И Партии.СтавкаНДС   = ИзменениеВидаДеятельности.СтавкаНДС
	|		И Партии.ВидДеятельностиНДС = ИзменениеВидаДеятельности.ВидДеятельностиНДС
	|		И ВЫБОР КОГДА Партии.Регистратор ССЫЛКА Документ.КорректировкаНазначенияТоваров
	|			ТОГДА Партии.Регистратор = ИзменениеВидаДеятельности.Регистратор
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|ГДЕ
	|	Партии.НаправлениеДеятельности <> Партии.КорНаправлениеДеятельности
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	И ИзменениеВидаДеятельности.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.КорВидДеятельностиНДС,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеНаправленияДеятельности),
	|	Партии.ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                      КАК Подразделение,
	|	Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА,
	|	Партии.ИдентификаторФинЗаписи,
	|	Партии.НастройкаХозяйственнойОперации,
	|	Партии.Сторно
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК ИзменениеВидаДеятельности
	|	ПО
	|		Партии.Организация   = ИзменениеВидаДеятельности.Организация
	|		И Партии.СчетФактура = ИзменениеВидаДеятельности.СчетФактура
	|		И Партии.Контрагент   = ИзменениеВидаДеятельности.Поставщик
	|		И Партии.ВидЦенности = ИзменениеВидаДеятельности.ВидЦенности
	|		И Партии.СтавкаНДС   = ИзменениеВидаДеятельности.СтавкаНДС
	|		И Партии.КорВидДеятельностиНДС = ИзменениеВидаДеятельности.ВидДеятельностиНДС
	|		И ВЫБОР КОГДА Партии.Регистратор ССЫЛКА Документ.КорректировкаНазначенияТоваров
	|			ТОГДА Партии.Регистратор = ИзменениеВидаДеятельности.Регистратор
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	
	|ГДЕ
	|	Партии.НаправлениеДеятельности <> Партии.КорНаправлениеДеятельности
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	И ИзменениеВидаДеятельности.СчетФактура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиИДвижения.Организация КАК Организация,
	|	ОстаткиИДвижения.СчетФактура КАК СчетФактура,
	|	ОстаткиИДвижения.Поставщик КАК Поставщик,
	|	ОстаткиИДвижения.ВидЦенности КАК ВидЦенности,
	|	ОстаткиИДвижения.СтавкаНДС КАК СтавкаНДС,
	|	ОстаткиИДвижения.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ОстаткиИДвижения.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ОстаткиИДвижения.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	СУММА(ОстаткиИДвижения.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ОстаткиИДвижения.НДС) КАК НДС,
	|	СУММА(ОстаткиИДвижения.НДСУпр) КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстатокНаНачалоИОнлайнДвижения
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.Организация КАК Организация,
	|		Остатки.СчетФактура КАК СчетФактура,
	|		Остатки.Поставщик КАК Поставщик,
	|		Остатки.ВидЦенности КАК ВидЦенности,
	|		Остатки.СтавкаНДС КАК СтавкаНДС,
	|		Остатки.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|		Остатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		Остатки.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|		Остатки.СуммаБезНДС КАК СуммаБезНДС,
	|		Остатки.НДС КАК НДС,
	|		Остатки.НДСУпр КАК НДСУпр
	|	ИЗ
	|		НДСПредъявленныйОстатокНаНачало КАК Остатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОнлайнДвижения.Организация,
	|		ОнлайнДвижения.СчетФактура,
	|		ОнлайнДвижения.Поставщик,
	|		ОнлайнДвижения.ВидЦенности,
	|		ОнлайнДвижения.СтавкаНДС,
	|		ОнлайнДвижения.ВидДеятельностиНДС,
	|		ОнлайнДвижения.ИсправленныйСчетФактура,
	|		ОнлайнДвижения.РеализацияЭкспорт,
	|		ОнлайнДвижения.СуммаБезНДС,
	|		ОнлайнДвижения.НДС,
	|		ОнлайнДвижения.НДСУпр
	|	ИЗ
	|		НДСПредъявленныйОнлайнДвижения КАК ОнлайнДвижения
	|	ГДЕ
	|		ОнлайнДвижения.НДС > 0
	|			И ОнлайнДвижения.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)) КАК ОстаткиИДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиИДвижения.СтавкаНДС,
	|	ОстаткиИДвижения.ИсправленныйСчетФактура,
	|	ОстаткиИДвижения.ВидДеятельностиНДС,
	|	ОстаткиИДвижения.РеализацияЭкспорт,
	|	ОстаткиИДвижения.Поставщик,
	|	ОстаткиИДвижения.ВидЦенности,
	|	ОстаткиИДвижения.СчетФактура,
	|	ОстаткиИДвижения.Организация
	|;
	|
	|ВЫБРАТЬ
	|	ДД.Приоритет                  КАК Приоритет,
	|	ДД.Период                     КАК Период,
	|	ДД.Регистратор                КАК Регистратор,
	|	ДД.ВидДвижения                КАК ВидДвижения,
	|	ДД.Организация                КАК Организация,
	|	ДД.СчетФактура                КАК СчетФактура,
	|	ДД.Поставщик                  КАК Поставщик,
	|	ДД.ВидЦенности                КАК ВидЦенности,
	|	ДД.СтавкаНДС                  КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаБезНДС > ДД.СуммаБезНДС
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ Остатки.СуммаБезНДС
	|	КОНЕЦ                         КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА Остатки.НДС > ДД.НДС
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ Остатки.НДС
	|	КОНЕЦ                         КАК НДС,
	|	ВЫБОР
	|		КОГДА Остатки.НДСУпр > ДД.НДСУпр
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ Остатки.НДСУпр
	|	КОНЕЦ                         КАК НДСУпр,
	|	ДД.Событие                    КАК Событие,
	|	ДД.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	ДД.Подразделение              КАК Подразделение,
	|	ДД.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ДД.СтатьяРасходов             КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов          КАК АналитикаРасходов,
	|	ДД.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	ДД.РегламентнаяОперация       КАК РегламентнаяОперация,
	|	ДД.Сторно                     КАК Сторно,
	|	ДД.ИдентификаторФинЗаписи     КАК ИдентификаторФинЗаписи,
	|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеНаправленияДеятельности
	|ИЗ
	|	НДСПредъявленныйИзменениеНаправленияДеятельности_Предварительная КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйОстатокНаНачалоИОнлайнДвижения КАК Остатки
	|	ПО
	|		ДД.Организация   = Остатки.Организация
	|		И ДД.СчетФактура = Остатки.СчетФактура
	|		И ДД.Поставщик   = Остатки.Поставщик
	|		И ДД.ВидЦенности = Остатки.ВидЦенности
	|		И ДД.СтавкаНДС   = Остатки.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = Остатки.ВидДеятельностиНДС
	|		И ДД.ИсправленныйСчетФактура = Остатки.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = Остатки.РеализацияЭкспорт
	|ГДЕ Остатки.НДС > 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйИзменениеНаправленияДеятельности"
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйПоИСФ(ПараметрыРасчета)
	 
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсправленныеСчетаФактуры.Ссылка           КАК Регистратор,
	|	ИсправленныеСчетаФактуры.ДатаПолучения    КАК Период,
	|	ИсправленныеСчетаФактуры.ИсправленныйСчетФактура КАК АктуальныйИсправленныйСчетФактура,
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                        КАК НДС,
	|	НДСПредъявленный.НДСУпр                     КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторФинЗаписи     КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ НДСПредъявленныйИсправленныеСчетаФактуры
	|ИЗ
	|	ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Организация = ИсправленныеСчетаФактуры.Организация
	|		И НДСПредъявленный.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|		И НДСПредъявленный.Период < &НачалоПериода
	|		И НДСПредъявленный.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|		И НДСПредъявленный.Активность
	|		И НЕ НДСПредъявленный.Регистратор ССЫЛКА Документ.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсправленныеСчетаФактуры.Ссылка КАК Регистратор,
	|	ИсправленныеСчетаФактуры.ДатаПолучения КАК Период,
	|	ИсправленныеСчетаФактуры.ИсправленныйСчетФактура,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС,
	|	НДСПредъявленный.НДС,
	|	НДСПредъявленный.НДСУпр,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации
	|ИЗ
	|	ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Организация = ИсправленныеСчетаФактуры.Организация
	|		И НДСПредъявленный.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|		И НДСПредъявленный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И НДСПредъявленный.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|		И НЕ НДСПредъявленный.РегламентнаяОперация
	|		И НДСПредъявленный.Активность
	|		И НЕ НДСПредъявленный.Регистратор ССЫЛКА Документ.Сторно
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Событие
	|";
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1                                           КАК Приоритет,
	|	НДСПредъявленный.Регистратор                КАК Регистратор,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.Период < &НачалоПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ НДСПредъявленный.Период
	|	КОНЕЦ                                       КАК Период,
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	СУММА(НДСПредъявленный.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(НДСПредъявленный.НДС)                 КАК НДС,
	|	СУММА(НДСПредъявленный.НДСУпр)              КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	ИСТИНА                                      КАК РегламентнаяОперация,
	|	ЛОЖЬ                                        КАК Сторно,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторФинЗаписи     КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ НДСПредъявленныйПоИСФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДСПредъявленный.Регистратор,
	|		НДСПредъявленный.Период,
	|		НДСПредъявленный.ВидДвижения,
	|		НДСПредъявленный.Организация,
	|		НДСПредъявленный.СчетФактура,
	|		НДСПредъявленный.Поставщик,
	|		НДСПредъявленный.ВидЦенности,
	|		НДСПредъявленный.СтавкаНДС,
	|		НДСПредъявленный.ВидДеятельностиНДС,
	|		НДСПредъявленный.ИсправленныйСчетФактура,
	|		НДСПредъявленный.РеализацияЭкспорт,
	|		НДСПредъявленный.НаправлениеДеятельности,
	|		- НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|		- НДСПредъявленный.НДС КАК НДС,
	|		- НДСПредъявленный.НДСУпр КАК НДСУпр,
	|		НДСПредъявленный.Событие,
	|		НДСПредъявленный.КорВидДеятельностиНДС,
	|		НДСПредъявленный.ИдентификаторСтроки,
	|		НДСПредъявленный.Подразделение,
	|		НДСПредъявленный.КорНаправлениеДеятельности,
	|		НДСПредъявленный.СтатьяРасходов,
	|		НДСПредъявленный.АналитикаРасходов,
	|		НДСПредъявленный.ИдентификаторФинЗаписи,
	|		НДСПредъявленный.НастройкаХозяйственнойОперации
	|	ИЗ
	|		НДСПредъявленныйИсправленныеСчетаФактуры КАК НДСПредъявленный
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		НДСПредъявленный.Регистратор,
	|		НДСПредъявленный.Период,
	|		НДСПредъявленный.ВидДвижения,
	|		НДСПредъявленный.Организация,
	|		НДСПредъявленный.СчетФактура,
	|		НДСПредъявленный.Поставщик,
	|		НДСПредъявленный.ВидЦенности,
	|		НДСПредъявленный.СтавкаНДС,
	|		НДСПредъявленный.ВидДеятельностиНДС,
	|		НДСПредъявленный.АктуальныйИсправленныйСчетФактура,
	|		НДСПредъявленный.РеализацияЭкспорт,
	|		НДСПредъявленный.НаправлениеДеятельности,
	|		НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|		НДСПредъявленный.НДС КАК НДС,
	|		НДСПредъявленный.НДСУпр КАК НДСУпр,
	|		НДСПредъявленный.Событие,
	|		НДСПредъявленный.КорВидДеятельностиНДС,
	|		НДСПредъявленный.ИдентификаторСтроки,
	|		НДСПредъявленный.Подразделение,
	|		НДСПредъявленный.КорНаправлениеДеятельности,
	|		НДСПредъявленный.СтатьяРасходов,
	|		НДСПредъявленный.АналитикаРасходов,
	|		НДСПредъявленный.ИдентификаторФинЗаписи,
	|		НДСПредъявленный.НастройкаХозяйственнойОперации
	|	ИЗ
	|		НДСПредъявленныйИсправленныеСчетаФактуры КАК НДСПредъявленный
	|	ГДЕ
	|		НЕ НДСПредъявленный.Событие В (
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету),
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0),
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0),
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПоКСФ)
	|				)
	|	) КАК НДСПредъявленный
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.Регистратор,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.Период < &НачалоПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ НДСПредъявленный.Период
	|	КОНЕЦ,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации
	|
	|ИМЕЮЩИЕ 
	|	СУММА(НДСПредъявленный.НДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСПредъявленныйИсправленныеСчетаФактуры
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйПоИСФ";
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйВосстановлениеПодВидДеятельности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДД.Приоритет               КАК Приоритет,
	|	ДД.ВидДвижения             КАК ВидДвижения,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.КорВидДеятельностиНДС   КАК КорВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(ДД.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(ДД.НДС)              КАК НДС,
	|	СУММА(ДД.НДСУпр)           КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеВидаДеятельностиДляВосстановленияПодВидДеятельности
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК ДД
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Приоритет,
	|	ДД.ВидДвижения,
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|ВЫБРАТЬ
	|	0                          КАК Приоритет,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|	ДД.НДС                     КАК НДС,
	|	ДД.НДСУпр                  КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйДвиженияЗаПериод
	|ИЗ
	|	НДСПредъявленныйОнлайнДвижения КАК ДД
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет               КАК Приоритет,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК ДД
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет               КАК Приоритет,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ИЗ
	|	НДСПредъявленныйИзменениеНаправленияДеятельности КАК ДД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет               КАК Приоритет,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ИЗ
	|	НДСПредъявленныйПоИСФ  КАК ДД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет               КАК Приоритет,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ИЗ
	|	НДСПредъявленныйСторно  КАК ДД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	2                          КАК Приоритет,
	|	&КонецПериода              КАК Период,
	|	НЕОПРЕДЕЛЕНО               КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|	ДД.НДС                     КАК НДС,
	|	ДД.НДСУпр                  КАК НДСУпр
	|ИЗ
	|	НДСПредъявленныйОстатокНаНачалоСНаправлениями КАК ДД
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетныеПолитикиПоПериодичностиРасчетаНДС КАК УчетныеПолитикиПоПериодичностиРасчетаНДС
	|	ПО
	|		ДД.Организация = УчетныеПолитикиПоПериодичностиРасчетаНДС.Организация
	|ГДЕ
	|	УчетныеПолитикиПоПериодичностиРасчетаНДС.ПериодичностьФормированияВычетовИВосстановленийНДС = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|	И ДД.НДС < 0
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|ВЫБРАТЬ
	|	1                                       КАК Приоритет,
	|	ДД.Период                               КАК Период,
	|	ДД.Регистратор                          КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ДД.Организация                          КАК Организация,
	|	ДД.СчетФактура                          КАК СчетФактура,
	|	ДД.Поставщик                            КАК Поставщик,
	|	ДД.ВидЦенности                          КАК ВидЦенности,
	|	ДД.СтавкаНДС                            КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                   КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура              КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                    КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА (ДД.СуммаБезНДС)
	|		- ВЫБОР КОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0)) > 0
	|			ТОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ < 0 ТОГДА 0
	|		ИНАЧЕ (ДД.СуммаБезНДС)
	|		- ВЫБОР КОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0)) > 0
	|			ТОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ                           КАК СуммаБезНДС,
	|	ВЫБОР КОГДА (ДД.НДС)
	|		- ВЫБОР КОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0)) > 0
	|			ТОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ < 0 ТОГДА 0
	|		ИНАЧЕ (ДД.НДС)
	|		- ВЫБОР КОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0)) > 0
	|			ТОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ                            КАК НДС,
	|	ВЫБОР КОГДА (ДД.НДСУпр)
	|		- ВЫБОР КОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДСУпр, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0)) > 0
	|			ТОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДСУпр, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ < 0 ТОГДА 0
	|		ИНАЧЕ (ДД.НДСУпр)
	|		- ВЫБОР КОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДСУпр, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0)) > 0
	|			ТОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДСУпр, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ                            КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПодВидДеятельности) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)            КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                          КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                          КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                          КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                          КАК АналитикаРасходов,
	|	""""                                                                  КАК ИдентификаторСтроки,
	|	ИСТИНА                                                                КАК РегламентнаяОперация,
	|	ЛОЖЬ                                                                  КАК Сторно,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеНДС) КАК НастройкаХозяйственнойОперации
	|	
	|ПОМЕСТИТЬ НДСПредъявленныйВосстановлениеПодВидДеятельности
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельностиДляВосстановленияПодВидДеятельности КАК ДД
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйОстатокНаНачало КАК НДСПредъявленныйОстатокНаНачало
	|	ПО
	|		ДД.Организация   = НДСПредъявленныйОстатокНаНачало.Организация
	|		И ДД.СчетФактура = НДСПредъявленныйОстатокНаНачало.СчетФактура
	|		И ДД.Поставщик   = НДСПредъявленныйОстатокНаНачало.Поставщик
	|		И ДД.ВидЦенности = НДСПредъявленныйОстатокНаНачало.ВидЦенности
	|		И ДД.СтавкаНДС = НДСПредъявленныйОстатокНаНачало.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = НДСПредъявленныйОстатокНаНачало.ВидДеятельностиНДС
	|		И ДД.ИсправленныйСчетФактура = НДСПредъявленныйОстатокНаНачало.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = НДСПредъявленныйОстатокНаНачало.РеализацияЭкспорт
	|		И НДСПредъявленныйОстатокНаНачало.НДС > 0
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйДвиженияЗаПериод КАК НДСПредъявленныйДвиженияЗаПериод
	|	ПО
	|		ДД.Организация   = НДСПредъявленныйДвиженияЗаПериод.Организация
	|		И ДД.СчетФактура = НДСПредъявленныйДвиженияЗаПериод.СчетФактура
	|		И ДД.Поставщик   = НДСПредъявленныйДвиженияЗаПериод.Поставщик
	|		И ДД.ВидЦенности = НДСПредъявленныйДвиженияЗаПериод.ВидЦенности
	|		И ДД.СтавкаНДС = НДСПредъявленныйДвиженияЗаПериод.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = НДСПредъявленныйДвиженияЗаПериод.ВидДеятельностиНДС
	|		И ДД.НаправлениеДеятельности = НДСПредъявленныйДвиженияЗаПериод.НаправлениеДеятельности
	|		И ДД.ИсправленныйСчетФактура = НДСПредъявленныйДвиженияЗаПериод.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = НДСПредъявленныйДвиженияЗаПериод.РеализацияЭкспорт
	|		И (НДСПредъявленныйДвиженияЗаПериод.Приоритет = 0 // Онлайн движения
	|			ИЛИ НДСПредъявленныйДвиженияЗаПериод.НДС > 0  // Приход
	|			ИЛИ ДД.Период > НДСПредъявленныйДвиженияЗаПериод.Период // Более ранее движения
	|			ИЛИ (ДД.Период = НДСПредъявленныйДвиженияЗаПериод.Период
	|					И ДД.Регистратор > НДСПредъявленныйДвиженияЗаПериод.Регистратор)
	|			ИЛИ (ДД.Период = НДСПредъявленныйДвиженияЗаПериод.Период
	|					И ДД.Регистратор = НДСПредъявленныйДвиженияЗаПериод.Регистратор
	|					И НДСПредъявленныйДвиженияЗаПериод.Приоритет < ДД.Приоритет))
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СписанияНДСНаРасходы КАК СписанияНДСНаРасходы
	|	ПО
	|		ДД.Организация = СписанияНДСНаРасходы.Организация
	|		И ДД.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетныеПолитикиПоПериодичностиРасчетаНДС КАК УчетныеПолитикиПоПериодичностиРасчетаНДС
	|	ПО
	|		ДД.Организация = УчетныеПолитикиПоПериодичностиРасчетаНДС.Организация
	|	
	|ГДЕ
	|	(УчетныеПолитикиПоПериодичностиРасчетаНДС.ПериодичностьФормированияВычетовИВосстановленийНДС = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|	ИЛИ &КонецПериода = КОНЕЦПЕРИОДА(&КонецПериода, КВАРТАЛ))
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL 
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности,
	|	ДД.СуммаБезНДС,
	|	ДД.НДС,
	|	ДД.НДСУпр,
	|	НДСПредъявленныйОстатокНаНачало.СуммаБезНДС,
	|	НДСПредъявленныйОстатокНаНачало.НДС,
	|	НДСПредъявленныйОстатокНаНачало.НДСУпр
	|
	|ИМЕЮЩИЕ
	|	((ДД.НДС)
	|		- ВЫБОР КОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0)) > 0
	|			ТОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ) > 0
	|	ИЛИ (ДД.СуммаБезНДС)
	|		- ВЫБОР КОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0)) > 0
	|			ТОГДА ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ > 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	1                                       КАК Приоритет,
	|	&КонецПериода                           КАК Период,
	|	ЕСТЬNULL(ИсправленныеСчетаФактуры.Ссылка, ЕСТЬNULL(СчетаФактурыДокументы.Ссылка, ДД.СчетФактура)) КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ДД.Организация                          КАК Организация,
	|	ДД.СчетФактура                          КАК СчетФактура,
	|	ДД.Поставщик                            КАК Поставщик,
	|	ДД.ВидЦенности                          КАК ВидЦенности,
	|	ДД.СтавкаНДС                            КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                   КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура              КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                    КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|	(-ДД.СуммаБезНДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ                           КАК СуммаБезНДС,
	|	(-ДД.НДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ                            КАК НДС,
	|	(-ДД.НДСУпр) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ                            КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПодВидДеятельности) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)            КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                          КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                          КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                          КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                          КАК АналитикаРасходов,
	|	""""                                                                  КАК ИдентификаторСтроки,
	|	ИСТИНА                                                                КАК РегламентнаяОперация,
	|	ЛОЖЬ                                                                  КАК Сторно,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеНДС) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	НДСПредъявленныйОстатокНаНачалоСНаправлениями КАК ДД
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйДвиженияЗаПериод КАК НДСПредъявленныйДвиженияЗаПериод
	|	ПО
	|		ДД.Организация   = НДСПредъявленныйДвиженияЗаПериод.Организация
	|		И ДД.СчетФактура = НДСПредъявленныйДвиженияЗаПериод.СчетФактура
	|		И ДД.Поставщик   = НДСПредъявленныйДвиженияЗаПериод.Поставщик
	|		И ДД.ВидЦенности = НДСПредъявленныйДвиженияЗаПериод.ВидЦенности
	|		И ДД.СтавкаНДС = НДСПредъявленныйДвиженияЗаПериод.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = НДСПредъявленныйДвиженияЗаПериод.ВидДеятельностиНДС
	|		И ДД.ИсправленныйСчетФактура = НДСПредъявленныйДвиженияЗаПериод.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = НДСПредъявленныйДвиженияЗаПериод.РеализацияЭкспорт
	|		И (НДСПредъявленныйДвиженияЗаПериод.Приоритет = 0 // Онлайн движения
	|			ИЛИ НДСПредъявленныйДвиженияЗаПериод.НДС > 0 // Приход
	|			ИЛИ КОНЕЦПЕРИОДА(НДСПредъявленныйДвиженияЗаПериод.Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&КонецПериода, КВАРТАЛ)
	|				И НДСПредъявленныйДвиженияЗаПериод.Приоритет = 2
	|				И НДСПредъявленныйДвиженияЗаПериод.Регистратор <> НЕОПРЕДЕЛЕНО) // Изменения в последнем месяце квартала
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СписанияНДСНаРасходы КАК СписанияНДСНаРасходы
	|	ПО
	|		ДД.Организация = СписанияНДСНаРасходы.Организация
	|		И ДД.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КорректировочныеСчетаФактуры КАК КорректировочныеСчетаФактуры
	|	ПО
	|		ДД.Организация = КорректировочныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = КорректировочныеСчетаФактуры.СчетФактура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправленныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетныеПолитикиПоПериодичностиРасчетаНДС КАК УчетныеПолитикиПоПериодичностиРасчетаНДС
	|	ПО
	|		ДД.Организация = УчетныеПолитикиПоПериодичностиРасчетаНДС.Организация
	|	
	|ГДЕ
	|	УчетныеПолитикиПоПериодичностиРасчетаНДС.ПериодичностьФормированияВычетовИВосстановленийНДС = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|	И &КонецПериода = КОНЕЦПЕРИОДА(&КонецПериода, КВАРТАЛ)
	|	И ДД.НДС < 0
	|	И КорректировочныеСчетаФактуры.СчетФактура ЕСТЬ NULL
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ИсправленныеСчетаФактуры.Ссылка, ЕСТЬNULL(СчетаФактурыДокументы.Ссылка, ДД.СчетФактура)),
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности,
	|	ДД.СуммаБезНДС,
	|	ДД.НДС,
	|	ДД.НДСУпр
	|
	|ИМЕЮЩИЕ
	|	((-ДД.НДС)
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ) > 0
	|	ИЛИ (-ДД.СуммаБезНДС)
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ > 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ДобавитьИдентификаторыВоВременнуюТаблицу(
		"НДСПредъявленныйВосстановлениеПодВидДеятельности", ПараметрыРасчета.МенеджерВременныхТаблиц, "ИдентификаторФинЗаписи");
	
	Возврат "НДСПредъявленныйВосстановлениеПодВидДеятельности";
	
КонецФункции

Процедура ПолучитьОстаткиНДСПредъявленныйНаКонецПериода(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	СУММА(НДСПредъявленный.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСПредъявленный.НДС) КАК НДС,
	|	СУММА(НДСПредъявленный.НДСУпр) КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстаткиНаКонецПериода 
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.СчетФактура             КАК СчетФактура,
	|		ДД.Поставщик               КАК Поставщик,
	|		ДД.ВидЦенности             КАК ВидЦенности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ДД.ВидДеятельностиНДС  КАК ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|		ДД.НДС                     КАК НДС,
	|		ДД.НДСУпр                  КАК НДСУпр
	|	ИЗ
	|		НДСПредъявленныйОстатокНаНачалоСНаправлениями КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ДД.СуммаБезНДС,
	|		ДД.НДС,
	|		ДД.НДСУпр
	|	ИЗ
	|		НДСПредъявленныйОнлайнДвижения КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйПоИСФ КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйИзменениеНаправленияДеятельности КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйВосстановлениеПодВидДеятельности КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйСторно КАК ДД
	|
	|) КАК НДСПредъявленный
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	УчетныеПолитикиПоПериодичностиРасчетаНДС КАК УчетныеПолитикиПоПериодичностиРасчетаНДС
	|ПО
	|	НДСПредъявленный.Организация = УчетныеПолитикиПоПериодичностиРасчетаНДС.Организация
	|	
	|ГДЕ
	|	УчетныеПолитикиПоПериодичностиРасчетаНДС.ПериодичностьФормированияВычетовИВосстановленийНДС = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|	ИЛИ &КонецПериода = &КонецКвартала
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСПредъявленный.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(НДСПредъявленный.НДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура,
	|	ИсправленныйСчетФактура
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(ПараметрыРасчета.КонецПериода));
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция РассчитатьЗаписиНДСПредъявленныйПринятиеКВычету(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БлокировкаВычетаНДС.Организация КАК Организация,
	|	БлокировкаВычетаНДС.СчетФактура КАК СчетФактура,
	|	БлокировкаВычетаНДС.НДС КАК НДС
	|ИЗ
	|	БлокировкаВычетаНДС КАК БлокировкаВычетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура,
	|	СУММА(НДСПредъявленный.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСПредъявленный.НДС) КАК НДС,
	|	СУММА(НДСПредъявленный.НДСУпр) КАК НДСУпр
	|ИЗ
	|	(ВЫБРАТЬ
	|	НДСПредъявленный.Организация              КАК Организация,
	|	НДСПредъявленный.СчетФактура              КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности              КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                КАК СтавкаНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура  КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС              КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                      КАК НДС,
	|	НДСПредъявленный.НДСУпр                   КАК НДСУпр
	|	ИЗ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|			ПО НДСПредъявленный.Организация = Задания.Организация
	|				И НДСПредъявленный.СчетФактура = Задания.СчетФактура
	|	ГДЕ
	|		НДСПредъявленный.Период < &НачалоПериода
	|		И НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПодВидДеятельности)
	|		И НДСПредъявленный.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДСПредъявленный.Организация,
	|		НДСПредъявленный.СчетФактура,
	|		НДСПредъявленный.Поставщик,
	|		НДСПредъявленный.ВидЦенности,
	|		НДСПредъявленный.СтавкаНДС,
	|		НДСПредъявленный.ИсправленныйСчетФактура,
	|		НДСПредъявленный.НаправлениеДеятельности,
	|		НДСПредъявленный.СуммаБезНДС,
	|		НДСПредъявленный.НДС,
	|		НДСПредъявленный.НДСУпр
	|	ИЗ
	|		НДСПредъявленныйВосстановлениеПодВидДеятельности КАК НДСПредъявленный
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПовторноПринятыйКВычетуНДС.Организация,
	|		ПовторноПринятыйКВычетуНДС.СчетФактура,
	|		ПовторноПринятыйКВычетуНДС.Поставщик,
	|		ПовторноПринятыйКВычетуНДС.ВидЦенности,
	|		ПовторноПринятыйКВычетуНДС.СтавкаНДС,
	|		ПовторноПринятыйКВычетуНДС.ИсправленныйСчетФактура,
	|		ПовторноПринятыйКВычетуНДС.НаправлениеДеятельности,
	|		ПовторноПринятыйКВычетуНДС.СуммаБезНДС,
	|		ПовторноПринятыйКВычетуНДС.НДС,
	|		ПовторноПринятыйКВычетуНДС.НДСУпр
	|	ИЗ
	|		ПовторноПринятыйКВычетуНДС КАК ПовторноПринятыйКВычетуНДС) КАК НДСПредъявленный
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСПредъявленный.НДС) > 0;
	|
	|///////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партии.Период                                                   КАК Период,
	|	Партии.Регистратор                                              КАК Регистратор,
	|	Партии.Организация                                              КАК Организация,
	|	Партии.СчетФактура                                              КАК СчетФактура,
	|	Партии.ДатаПоступления                                          КАК ДатаПоступления,
	|	Партии.Контрагент                                               КАК Поставщик,
	|	Партии.ВидЦенности                                              КАК ВидЦенности,
	|	Партии.ВидДеятельностиНДС                                       КАК ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности                                  КАК НаправлениеДеятельности,
	|	Партии.РеализацияЭкспорт                                        КАК РеализацияЭкспорт,
	|	Партии.СтавкаНДС                                                КАК СтавкаНДС,
	|	СУММА(Партии.СуммаБезНДС)                                       КАК СуммаБезНДС,
	|	СУММА(Партии.НДС)                                               КАК НДС,
	|	СУММА(Партии.НДСУпр)                                            КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету) КАК Событие
	|ИЗ
	|	(ВЫБРАТЬ
	|		Партии.Период                     КАК Период,
	|		Партии.Регистратор                КАК Регистратор,
	|		Партии.Организация                КАК Организация,
	|		Партии.СчетФактура                КАК СчетФактура,
	|		Партии.ДатаПоступления            КАК ДатаПоступления,
	|		Партии.Контрагент                 КАК Контрагент,
	|		Партии.ВидЦенности                КАК ВидЦенности,
	|		Партии.КорВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|		Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|		Партии.ДокументРеализации         КАК РеализацияЭкспорт,
	|		Партии.СтавкаНДС                  КАК СтавкаНДС,
	|		Партии.СуммаБезНДС                КАК СуммаБезНДС,
	|		Партии.НДС                        КАК НДС,
	|		Партии.НДСУпр                     КАК НДСУпр
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДС_НовыйВидДеятельности
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДС_НовыйВидДеятельности.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДС_НовыйВидДеятельности.СчетФактура
	|			И Партии.КорВидДеятельностиНДС = РазрезыВычетаНДС_НовыйВидДеятельности.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДС_НовыйВидДеятельности.ВидЦенности
	|			И Партии.ДокументРеализации = РазрезыВычетаНДС_НовыйВидДеятельности.РеализацияЭкспорт
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДС_ТекущийВидДеятельности
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДС_ТекущийВидДеятельности.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДС_ТекущийВидДеятельности.СчетФактура
	|			И Партии.ВидДеятельностиНДС = РазрезыВычетаНДС_ТекущийВидДеятельности.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДС_ТекущийВидДеятельности.ВидЦенности
	|			И РазрезыВычетаНДС_ТекущийВидДеятельности.РеализацияЭкспорт = НЕОПРЕДЕЛЕНО
	|
	|	ГДЕ
	|		НЕ РазрезыВычетаНДС_НовыйВидДеятельности.СчетФактура ЕСТЬ NULL
	|		И РазрезыВычетаНДС_ТекущийВидДеятельности.СчетФактура ЕСТЬ NULL
	|		И Партии.НДС <> 0
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.ДатаПоступления,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.ВидДеятельностиНДС,
	|		Партии.НаправлениеДеятельности,
	|		Партии.ДокументРеализации,
	|		Партии.СтавкаНДС,
	|		-Партии.СуммаБезНДС,
	|		-Партии.НДС,
	|		-Партии.НДСУпр
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДС_НовыйВидДеятельности
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДС_НовыйВидДеятельности.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДС_НовыйВидДеятельности.СчетФактура
	|			И Партии.КорВидДеятельностиНДС = РазрезыВычетаНДС_НовыйВидДеятельности.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДС_НовыйВидДеятельности.ВидЦенности
	|			И Партии.ДокументРеализации = РазрезыВычетаНДС_НовыйВидДеятельности.РеализацияЭкспорт
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДС_ТекущийВидДеятельности
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДС_ТекущийВидДеятельности.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДС_ТекущийВидДеятельности.СчетФактура
	|			И Партии.ВидДеятельностиНДС = РазрезыВычетаНДС_ТекущийВидДеятельности.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДС_ТекущийВидДеятельности.ВидЦенности
	|			И РазрезыВычетаНДС_ТекущийВидДеятельности.РеализацияЭкспорт = НЕОПРЕДЕЛЕНО
	|	
	|	ГДЕ
	|		НЕ РазрезыВычетаНДС_ТекущийВидДеятельности.СчетФактура ЕСТЬ NULL
	|		И РазрезыВычетаНДС_НовыйВидДеятельности.СчетФактура ЕСТЬ NULL
	|		И Партии.НДС <> 0
	|
	|	) КАК Партии
	|	
	|СГРУППИРОВАТЬ ПО
	|	Партии.Период,
	|	Партии.Регистратор,
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.ДатаПоступления,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности,
	|	Партии.РеализацияЭкспорт
	|	
	|ИМЕЮЩИЕ
	|	СУММА(Партии.НДС) <> 0
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НДС УБЫВ
	|;
	|
	|ВЫБРАТЬ
	|	НДСПредъявленный.Организация             КАК Организация,
	|	НДСПредъявленный.СчетФактура             КАК СчетФактура,
	|	НДСПредъявленный.Поставщик               КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности             КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС               КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС             КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                     КАК НДС,
	|	НДСПредъявленный.НДСУпр                  КАК НДСУпр,
	|	РазрезыВычетаНДС.Регистратор             КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РазрезыВычетаНДС.Период < &НачалоПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ РазрезыВычетаНДС.Период
	|	КОНЕЦ                                    КАК Период,
	|	РазрезыВычетаНДС.Событие                 КАК Событие
	|ИЗ
	|	НДСПредъявленныйОстаткиНаКонецПериода КАК НДСПредъявленный
	|		ЛЕВОЕ СОЕДИНЕНИЕ КорректировочныеСчетаФактуры КАК КорректировочныеСчетаФактуры
	|		ПО НДСПредъявленный.Организация = КорректировочныеСчетаФактуры.Организация
	|			И НДСПредъявленный.СчетФактура = КорректировочныеСчетаФактуры.СчетФактура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РазрезыВычетаНДС КАК РазрезыВычетаНДС
	|		ПО НДСПредъявленный.Организация = РазрезыВычетаНДС.Организация
	|			И НДСПредъявленный.СчетФактура = РазрезыВычетаНДС.СчетФактура
	|			И НДСПредъявленный.ВидДеятельностиНДС = РазрезыВычетаНДС.ВидДеятельностиНДС
	|			И НДСПредъявленный.ВидЦенности = РазрезыВычетаНДС.ВидЦенности
	|			И НДСПредъявленный.РеализацияЭкспорт = РазрезыВычетаНДС.РеализацияЭкспорт
	|			И НДСПредъявленный.ИсправленныйСчетФактура = РазрезыВычетаНДС.ИсправленныйСчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ БлокировкаВычетаНДС КАК БлокировкаВычетаНДС
	|		ПО НДСПредъявленный.Организация = БлокировкаВычетаНДС.Организация
	|			И НДСПредъявленный.СчетФактура = БлокировкаВычетаНДС.СчетФактура
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ КорректировочныеСчетаФактуры.СчетФактура ЕСТЬ NULL
	|				ТОГДА НДСПредъявленный.НДС > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НДС УБЫВ
	|ИТОГИ
	|	СУММА(НДС)
	|ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	БлокировкиНДС = РезультатЗапроса[0].Выгрузить();
	ВосстановленныйНДС = РезультатЗапроса[1].Выгрузить();
	ВосстановленныйНДС.Индексы.Добавить("СчетФактура"); 
	ПартииСменыНалогообложения = РезультатЗапроса[2].Выгрузить();
	ПартииСменыНалогообложения.Индексы.Добавить("Организация, СчетФактура, Поставщик, ВидЦенности, СтавкаНДС, ВидДеятельностиНДС, НаправлениеДеятельности, РеализацияЭкспорт");
	ВыборкаОстатковНДСПредъявленныйПоСФ = РезультатЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ТаблицаНДСПредъявленныйПринятиеКВычету = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаНДСПредъявленныйПринятиеКВычету.Колонки.Удалить("Активность");
	ТаблицаНДСПредъявленныйПринятиеКВычету.Колонки.Добавить("ПовторныйВычет", Новый ОписаниеТипов("Булево"));
		
	Пока ВыборкаОстатковНДСПредъявленныйПоСФ.Следующий() Цикл
		
		СтруктураОтбора = Новый Структура("СчетФактура", ВыборкаОстатковНДСПредъявленныйПоСФ.СчетФактура);
		НайденнаяБлокировкаНаСФ = БлокировкиНДС.НайтиСтроки(СтруктураОтбора);
		Если НайденнаяБлокировкаНаСФ.Количество() > 0 Тогда
			Если НайденнаяБлокировкаНаСФ[0].НДС = 0 Тогда
				СуммаБлокировки = ВыборкаОстатковНДСПредъявленныйПоСФ.НДС;
			Иначе
				СуммаБлокировки = НайденнаяБлокировкаНаСФ[0].НДС;
			КонецЕсли;
		Иначе
			СуммаБлокировки = 0;
		КонецЕсли;
		
		ВосстановленныйНДСПоСФ = ВосстановленныйНДС.НайтиСтроки(СтруктураОтбора);
		Если ВосстановленныйНДСПоСФ.Количество() > 0 Тогда
			НДСВосстановлен = ВосстановленныйНДСПоСФ[0].НДС;
		Иначе
			НДСВосстановлен = 0;
		КонецЕсли;
		
		ВыборкаВРазрезеИзмеренийСФ = ВыборкаОстатковНДСПредъявленныйПоСФ.Выбрать();
		
		Пока ВыборкаВРазрезеИзмеренийСФ.Следующий() Цикл
			
			Знак = ?(ВыборкаВРазрезеИзмеренийСФ.НДС > 0, 1, -1);
			
			Если ВыборкаВРазрезеИзмеренийСФ.НДС > 0 Тогда
				СуммаБлокировкиПоИзмерениюСФ = Мин(ВыборкаВРазрезеИзмеренийСФ.НДС, СуммаБлокировки);
				НДСКВычету = ВыборкаВРазрезеИзмеренийСФ.НДС - СуммаБлокировкиПоИзмерениюСФ;
				СуммаБлокировки = СуммаБлокировки - СуммаБлокировкиПоИзмерениюСФ;
			Иначе
				НДСКВычету = ВыборкаВРазрезеИзмеренийСФ.НДС;
			КонецЕсли;
			
			Если ВыборкаВРазрезеИзмеренийСФ.НДС = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если НДСКВычету = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Суммы = Новый Структура();
			Суммы.Вставить("НДСКВычету");
			Суммы.Вставить("НДС");
			Суммы.Вставить("СуммаБезНДС");
			Суммы.Вставить("НДСУпр");
			
			Суммы.НДСКВычету = НДСКВычету;
			ЗаполнитьЗначенияСвойств(Суммы, ВыборкаВРазрезеИзмеренийСФ);
			
			СтруктураОтбораПартии = Новый Структура();
			СтруктураОтбораПартии.Вставить("Организация");
			СтруктураОтбораПартии.Вставить("СчетФактура");
			СтруктураОтбораПартии.Вставить("Поставщик");
			СтруктураОтбораПартии.Вставить("ВидЦенности");
			СтруктураОтбораПартии.Вставить("СтавкаНДС");
			СтруктураОтбораПартии.Вставить("ВидДеятельностиНДС");
			СтруктураОтбораПартии.Вставить("НаправлениеДеятельности");
			СтруктураОтбораПартии.Вставить("РеализацияЭкспорт");

			ЗаполнитьЗначенияСвойств(СтруктураОтбораПартии, ВыборкаВРазрезеИзмеренийСФ);
			СтрокиСменыНалогообложения = ПартииСменыНалогообложения.НайтиСтроки(СтруктураОтбораПартии);
			// Сначала вычет отнесем на регистраторы, по которым в этом периоде 
			// была смена налогообложения с необлагаемой на облагаемую.
			Для Каждого ПартияСменыНалогообложения Из СтрокиСменыНалогообложения Цикл
				Если Суммы.НДСКВычету * Знак > 0 Тогда
					Если НДСВосстановлен > 0 Тогда
						НДС = Мин(ПартияСменыНалогообложения.НДС, Суммы.НДСКВычету, НДСВосстановлен);
						ДоляДоступногоНДС = НДС / ПартияСменыНалогообложения.НДС;
						НДСВосстановлен = НДСВосстановлен - НДС;
						ДобавитьСтрокуВычетаНДС(ТаблицаНДСПредъявленныйПринятиеКВычету, Суммы, ДоляДоступногоНДС, ПартияСменыНалогообложения, ВыборкаВРазрезеИзмеренийСФ, Истина);
						ПартияСменыНалогообложения.НДС = ПартияСменыНалогообложения.НДС - НДС;
						ПартияСменыНалогообложения.НДСУпр = ПартияСменыНалогообложения.НДСУпр - НДС;
					КонецЕсли;
					Если ПартияСменыНалогообложения.НДС * Знак > 0 Тогда
						ДоляДоступногоНДС = Мин(ПартияСменыНалогообложения.НДС, Суммы.НДСКВычету) / ПартияСменыНалогообложения.НДС;
						ДобавитьСтрокуВычетаНДС(ТаблицаНДСПредъявленныйПринятиеКВычету, Суммы, ДоляДоступногоНДС, ПартияСменыНалогообложения, ВыборкаВРазрезеИзмеренийСФ);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			// Остаток вычета относим на счет-фактуру.
			Если Суммы.НДСКВычету * Знак > 0 Тогда
				Если НДСВосстановлен > 0 Тогда
					НДС = Мин(Суммы.НДСКВычету, НДСВосстановлен);
					ДоляДоступногоНДС = НДС / Суммы.НДС;
					НДСВосстановлен = НДСВосстановлен - НДС;
					ДобавитьСтрокуВычетаНДС(ТаблицаНДСПредъявленныйПринятиеКВычету, Суммы, ДоляДоступногоНДС, ВыборкаВРазрезеИзмеренийСФ, ВыборкаВРазрезеИзмеренийСФ, Истина, Истина);
					Суммы.НДСКВычету = Суммы.НДСКВычету - НДС;
				КонецЕсли;
				Если Суммы.НДСКВычету * Знак > 0 Тогда
					Если Суммы.НДСКВычету * Знак <= ПараметрыРасчета.ПорогСписанияПогрешностейОкругления И СтрокиСменыНалогообложения.Количество() > 0 Тогда
						Продолжить;
					Иначе
						ДоляДоступногоНДС = Суммы.НДСКВычету / Суммы.НДС;
						ДобавитьСтрокуВычетаНДС(ТаблицаНДСПредъявленныйПринятиеКВычету, Суммы, ДоляДоступногоНДС, ВыборкаВРазрезеИзмеренийСФ, ВыборкаВРазрезеИзмеренийСФ, Ложь, Истина);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	4 КАК Приоритет,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.Период КАК Период,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.Организация КАК Организация,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.СчетФактура КАК СчетФактура,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.Поставщик КАК Поставщик,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.ВидЦенности КАК ВидЦенности,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.НДС КАК НДС,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.НДСУпр КАК НДСУпр,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.Событие КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.Подразделение КАК Подразделение,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.АналитикаРасходов КАК АналитикаРасходов,
	|	"""" КАК ИдентификаторСтроки,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	ТаблицаНДСПредъявленныйПринятиеКВычету.ПовторныйВычет КАК ПовторныйВычет,
	|	ЛОЖЬ КАК Сторно,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПринятиеНДСкВычету) КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ НДСПредъявленныйПринятиеКВычету
	|ИЗ
	|	&ТаблицаНДСПредъявленныйПринятиеКВычету КАК ТаблицаНДСПредъявленныйПринятиеКВычету";
	
	Запрос.УстановитьПараметр("ТаблицаНДСПредъявленныйПринятиеКВычету", ТаблицаНДСПредъявленныйПринятиеКВычету);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ДобавитьИдентификаторыВоВременнуюТаблицу(
		"НДСПредъявленныйПринятиеКВычету", ПараметрыРасчета.МенеджерВременныхТаблиц, "ИдентификаторФинЗаписи");
		
	Возврат "НДСПредъявленныйПринятиеКВычету";
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйВосстановлениеПоКСФ(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	2                                                                         КАК Приоритет,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) >= &НачалоПериода
	|			ТОГДА ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок)
	|		ИНАЧЕ
	|			&КонецПериода
	|	КОНЕЦ                                                                     КАК Период,
	|	ЕСТЬNULL(ИсправленныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка)   КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                    КАК ВидДвижения,
	|	ДД.Организация                                                            КАК Организация,
	|	ДД.СчетФактура                                                            КАК СчетФактура,
	|	ДД.Поставщик                                                              КАК Поставщик,
	|	ДД.ВидЦенности                                                            КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                              КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                                     КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                                КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                                      КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                                КАК НаправлениеДеятельности,
	|	-ДД.СуммаБезНДС                                                           КАК СуммаБезНДС,
	|	-ДД.НДС                                                                   КАК НДС,
	|	-ДД.НДСУпр                                                                КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПоКСФ)     КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)                КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                              КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                              КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                              КАК АналитикаРасходов,
	|	""""                                                                      КАК ИдентификаторСтроки,
	|	ИСТИНА                                                                    КАК РегламентнаяОперация,
	|	ЛОЖЬ                                                                      КАК Сторно,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеНДС)     КАК НастройкаХозяйственнойОперации
	|	
	|ПОМЕСТИТЬ НДСПредъявленныйВосстановлениеПоКСФ
	|ИЗ
	|	НДСПредъявленныйОстаткиНаКонецПериода КАК ДД
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		КорректировочныеСчетаФактуры КАК КорректировочныеСчетаФактуры
	|	ПО
	|		ДД.СчетФактура = КорректировочныеСчетаФактуры.СчетФактура
	|		И ДД.Организация = КорректировочныеСчетаФактуры.Организация
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправленныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|ГДЕ
	|	ДД.ВидДеятельностиНДС В (&ВидыДеятельностиНДСПринимаетсяКВозмещению)
	|	И ДД.НДС < 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ВидыДеятельностиНДСПринимаетсяКВозмещению", УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ДобавитьИдентификаторыВоВременнуюТаблицу(
		"НДСПредъявленныйВосстановлениеПоКСФ", ПараметрыРасчета.МенеджерВременныхТаблиц, "ИдентификаторФинЗаписи");
	
	Возврат "НДСПредъявленныйВосстановлениеПоКСФ"
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйПогрешностиОкругления(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	
	Если ПараметрыРасчета.ПорогСписанияПогрешностейОкругления > 0 Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.Организация КАК Организация,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.СчетФактура КАК СчетФактура,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.Поставщик КАК Поставщик,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.ВидЦенности КАК ВидЦенности,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.СтавкаНДС КАК СтавкаНДС,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.РеализацияЭкспорт КАК РеализацияЭкспорт,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.СуммаБезНДС) КАК СуммаБезНДС,
		|	СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.НДС) КАК НДС,
		|	СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.НДСУпр) КАК НДСУпр
		|ПОМЕСТИТЬ ПогрешностиОкругления
		|ИЗ
		|	(ВЫБРАТЬ
		|		НДСПредъявленныйОстаткиНаКонецПериода.Организация КАК Организация,
		|		НДСПредъявленныйОстаткиНаКонецПериода.СчетФактура КАК СчетФактура,
		|		НДСПредъявленныйОстаткиНаКонецПериода.Поставщик КАК Поставщик,
		|		НДСПредъявленныйОстаткиНаКонецПериода.ВидЦенности КАК ВидЦенности,
		|		НДСПредъявленныйОстаткиНаКонецПериода.СтавкаНДС КАК СтавкаНДС,
		|		НДСПредъявленныйОстаткиНаКонецПериода.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|		НДСПредъявленныйОстаткиНаКонецПериода.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|		НДСПредъявленныйОстаткиНаКонецПериода.РеализацияЭкспорт КАК РеализацияЭкспорт,
		|		НДСПредъявленныйОстаткиНаКонецПериода.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		НДСПредъявленныйОстаткиНаКонецПериода.СуммаБезНДС КАК СуммаБезНДС,
		|		НДСПредъявленныйОстаткиНаКонецПериода.НДС КАК НДС,
		|		НДСПредъявленныйОстаткиНаКонецПериода.НДСУпр КАК НДСУпр
		|	ИЗ
		|		НДСПредъявленныйОстаткиНаКонецПериода КАК НДСПредъявленныйОстаткиНаКонецПериода
		|
		|	ОБЪЕДИНИТЬ
		|
		|	ВЫБРАТЬ
		|		НДСПредъявленныйПринятиеКВычету.Организация КАК Организация,
		|		НДСПредъявленныйПринятиеКВычету.СчетФактура КАК СчетФактура,
		|		НДСПредъявленныйПринятиеКВычету.Поставщик КАК Поставщик,
		|		НДСПредъявленныйПринятиеКВычету.ВидЦенности КАК ВидЦенности,
		|		НДСПредъявленныйПринятиеКВычету.СтавкаНДС КАК СтавкаНДС,
		|		НДСПредъявленныйПринятиеКВычету.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|		НДСПредъявленныйПринятиеКВычету.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|		НДСПредъявленныйПринятиеКВычету.РеализацияЭкспорт КАК РеализацияЭкспорт,
		|		НДСПредъявленныйПринятиеКВычету.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		-НДСПредъявленныйПринятиеКВычету.СуммаБезНДС КАК СуммаБезНДС,
		|		-НДСПредъявленныйПринятиеКВычету.НДС КАК НДС,
		|		-НДСПредъявленныйПринятиеКВычету.НДСУпр КАК НДСУпр
		|	ИЗ
		|		НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленныйПринятиеКВычету
		|
		|	ОБЪЕДИНИТЬ
		|
		|	ВЫБРАТЬ
		|		НДСПредъявленныйВосстановлениеПоКСФ.Организация КАК Организация,
		|		НДСПредъявленныйВосстановлениеПоКСФ.СчетФактура КАК СчетФактура,
		|		НДСПредъявленныйВосстановлениеПоКСФ.Поставщик КАК Поставщик,
		|		НДСПредъявленныйВосстановлениеПоКСФ.ВидЦенности КАК ВидЦенности,
		|		НДСПредъявленныйВосстановлениеПоКСФ.СтавкаНДС КАК СтавкаНДС,
		|		НДСПредъявленныйВосстановлениеПоКСФ.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|		НДСПредъявленныйВосстановлениеПоКСФ.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|		НДСПредъявленныйВосстановлениеПоКСФ.РеализацияЭкспорт КАК РеализацияЭкспорт,
		|		НДСПредъявленныйВосстановлениеПоКСФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		НДСПредъявленныйВосстановлениеПоКСФ.СуммаБезНДС КАК СуммаБезНДС,
		|		НДСПредъявленныйВосстановлениеПоКСФ.НДС КАК НДС,
		|		НДСПредъявленныйВосстановлениеПоКСФ.НДСУпр КАК НДСУпр
		|	ИЗ
		|		НДСПредъявленныйВосстановлениеПоКСФ КАК НДСПредъявленныйВосстановлениеПоКСФ) КАК
		|		ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода
		|СГРУППИРОВАТЬ ПО
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.Организация,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.СчетФактура,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.Поставщик,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.ВидЦенности,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.СтавкаНДС,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.ВидДеятельностиНДС,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.ИсправленныйСчетФактура,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.РеализацияЭкспорт,
		|	ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.НаправлениеДеятельности
		|ИМЕЮЩИЕ
		|	СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.НДС) <> 0
		|	И СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.НДС) <= &ПорогСписанияПогрешностейОкругления
		|	И -СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.НДС) <= &ПорогСписанияПогрешностейОкругления
		|	ИЛИ СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.НДС) = 0
		|	И СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.СуммаБезНДС) <> 0
		|	И СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.СуммаБезНДС) <= &ПорогСписанияПогрешностейОкругления
		|	И -СУММА(ИтоговыеНДСПредъявленныйОстаткиНаКонецПериода.СуммаБезНДС) <= &ПорогСписанияПогрешностейОкругления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0                                                                           КАК Приоритет,
		|	&КонецПериода                                                               КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                      КАК ВидДвижения,
		|	ВЫБОР
		|		КОГДА НЕ ЕСТЬNULL(ИсправленныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка) ЕСТЬ NULL
		|			ТОГДА ЕСТЬNULL(ИсправленныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка)
		|		ИНАЧЕ ПогрешностиОкругления.СчетФактура
		|	КОНЕЦ                                                                       КАК Регистратор,
		|	ПогрешностиОкругления.Организация                                           КАК Организация,
		|	ПогрешностиОкругления.СчетФактура                                           КАК СчетФактура,
		|	ПогрешностиОкругления.Поставщик                                             КАК Поставщик,
		|	ПогрешностиОкругления.ВидЦенности                                           КАК ВидЦенности,
		|	ПогрешностиОкругления.СтавкаНДС                                             КАК СтавкаНДС,
		|	ПогрешностиОкругления.ВидДеятельностиНДС                                    КАК ВидДеятельностиНДС,
		|	ПогрешностиОкругления.ИсправленныйСчетФактура                               КАК ИсправленныйСчетФактура,
		|	ПогрешностиОкругления.РеализацияЭкспорт                                     КАК РеализацияЭкспорт,
		|	ПогрешностиОкругления.НаправлениеДеятельности                               КАК НаправлениеДеятельности,
		|	ПогрешностиОкругления.СуммаБезНДС                                           КАК СуммаБезНДС,
		|	ПогрешностиОкругления.НДС                                                   КАК НДС,
		|	ПогрешностиОкругления.НДСУпр                                                КАК НДСУпр,
		|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка)                 КАК Событие,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)                  КАК КорВидДеятельностиНДС,
		|	НЕОПРЕДЕЛЕНО                                                                КАК Подразделение,
		|	ПогрешностиОкругления.НаправлениеДеятельности                               КАК КорНаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров) КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО                                                                КАК АналитикаРасходов,
		|	""""                                                                        КАК ИдентификаторСтроки,
		|	ИСТИНА                                                                      КАК РегламентнаяОперация,
		|	ЛОЖЬ                                                                        КАК ПовторныйВычет,
		|	ЛОЖЬ                                                                        КАК Сторно,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям) КАК
		|		НастройкаХозяйственнойОперации
		|ПОМЕСТИТЬ НДСПредъявленныйПогрешностиОкругления
		|ИЗ
		|	ПогрешностиОкругления
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактурыДокументы КАК СчетаФактурыДокументы
		|		ПО ПогрешностиОкругления.Организация = СчетаФактурыДокументы.Организация
		|		И ПогрешностиОкругления.СчетФактура = СчетаФактурыДокументы.СчетФактура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
		|		ПО ПогрешностиОкругления.Организация = ИсправленныеСчетаФактуры.Организация
		|		И ПогрешностиОкругления.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
		|		И ПогрешностиОкругления.ИсправленныйСчетФактура = ИсправленныеСчетаФактуры.ИсправленныйСчетФактура";
		
		Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
		Запрос.УстановитьПараметр("ПорогСписанияПогрешностейОкругления", ПараметрыРасчета.ПорогСписанияПогрешностейОкругления);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	0                                             КАК Приоритет,
		|	НЕОПРЕДЕЛЕНО                                  КАК Период,
		|	НЕОПРЕДЕЛЕНО                                  КАК ВидДвижения,
		|	НЕОПРЕДЕЛЕНО                                  КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО                                  КАК СчетФактура,
		|	НЕОПРЕДЕЛЕНО                                  КАК Поставщик,
		|	НЕОПРЕДЕЛЕНО                                  КАК ВидЦенности,
		|	НЕОПРЕДЕЛЕНО                                  КАК СтавкаНДС,
		|	НЕОПРЕДЕЛЕНО                                  КАК ВидДеятельностиНДС,
		|	НЕОПРЕДЕЛЕНО                                  КАК ИсправленныйСчетФактура,
		|	НЕОПРЕДЕЛЕНО                                  КАК РеализацияЭкспорт,
		|	НЕОПРЕДЕЛЕНО                                  КАК НаправлениеДеятельности,
		|	0                                             КАК СуммаБезНДС,
		|	0                                             КАК НДС,
		|	0                                             КАК НДСУпр,
		|	НЕОПРЕДЕЛЕНО                                  КАК Событие,
		|	НЕОПРЕДЕЛЕНО                                  КАК КорВидДеятельностиНДС,
		|	НЕОПРЕДЕЛЕНО                                  КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО                                  КАК КорНаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО                                  КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаРасходов,
		|	""""                                          КАК ИдентификаторСтроки,
		|	ИСТИНА                                        КАК РегламентнаяОперация,
		|	ЛОЖЬ                                          КАК ПовторныйВычет,
		|	ЛОЖЬ                                          КАК Сторно,
		|	НЕОПРЕДЕЛЕНО                                  КАК НастройкаХозяйственнойОперации
		|ПОМЕСТИТЬ НДСПредъявленныйПогрешностиОкругления
		|ГДЕ
		|	ЛОЖЬ";
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ДобавитьИдентификаторыВоВременнуюТаблицу(
		"НДСПредъявленныйПогрешностиОкругления", ПараметрыРасчета.МенеджерВременныхТаблиц, "ИдентификаторФинЗаписи");
	
	Возврат "НДСПредъявленныйПогрешностиОкругления"
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйСохранение(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	МассивТекстовРегистраторыЗапись.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	&ИмяТаблицы КАК НДСПредъявленный";
	Для Каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСПредъявленный Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", ИмяТаблицыЗаписей);
		МассивТекстовРегистраторыЗапись.Добавить(ТекстЗапроса);
	КонецЦикла;
	
	МассивТекстовРегистраторыЗапись.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСПредъявленный КАК НДСПредъявленный");
	
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	ТекстРегистраторыЗапись = ТекстРегистраторыЗапись +
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	ТекстЗапросаСохранение =
	"ВЫБРАТЬ
	|	0                                               КАК Приоритет,
	|	НДСПредъявленный.Период                         КАК Период,
	|	НДСПредъявленный.Регистратор                    КАК Регистратор,
	|	НДСПредъявленный.ВидДвижения                    КАК ВидДвижения,
	|	НДСПредъявленный.Организация                    КАК Организация,
	|	НДСПредъявленный.СчетФактура                    КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                      КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                    КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                      КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС             КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура        КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт              КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                    КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                            КАК НДС,
	|	НДСПредъявленный.НДСУпр                         КАК НДСУпр,
	|	НДСПредъявленный.Событие                        КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС          КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение                  КАК Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов                 КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов              КАК АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки            КАК ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация           КАК РегламентнаяОперация,
	|	НДСПредъявленный.Сторно                         КАК Сторно,
	|	НДСПредъявленный.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ НДСПредъявленныйСохранение
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		НДСПредъявленный.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация = НДСПредъявленный.Организация
	|		И Задания.СчетФактура = НДСПредъявленный.СчетФактура
	|ГДЕ
	|	НДСПредъявленный.Период < &НачалоПериода
	|		ИЛИ НДСПредъявленный.Период > &КонецПериода
	|		ИЛИ НЕ НДСПредъявленный.РегламентнаяОперация
	|		ИЛИ Задания.СчетФактура ЕСТЬ NULL
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстРегистраторыЗапись + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстЗапросаСохранение;
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйСохранение";
	
КонецФункции

Процедура ПолучитьПериодичностьФормированияВычетовИВосстановленийНДС(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицДействующимиПараметрамиНалоговУчетныхПолитик(
		Метаданные.РегистрыСведений.НастройкиУчетаНДС.Имя,
		Запрос.МенеджерВременныхТаблиц,
		ПараметрыРасчета.НачалоПериода,
		"ВТНастройкиУчетаНДС",
		ПараметрыРасчета.МассивОрганизаций);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	ЕСТЬNULL(НастройкиУчетаНДС.ПериодичностьФормированияВычетовИВосстановленийНДС, ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)) КАК ПериодичностьФормированияВычетовИВосстановленийНДС
	|ПОМЕСТИТЬ УчетныеПолитикиПоПериодичностиРасчетаНДС
	|ИЗ
	|	Справочник.Организации КАК Организации
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТНастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ПО
	|		Организации.Ссылка = НастройкиУчетаНДС.Организация
	|ГДЕ
	|	Организации.Ссылка В (&МассивОрганизаций)
	|";
	
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ДобавитьСтрокуВычетаНДС(ТаблицаПринятиеКВычету,
	                              Суммы,
	                              ДоляДоступногоНДС,
	                              ПартияСменыНалогообложения,
	                              ВыборкаВРазрезеИзмеренийСФ,
	                              ПовторныйВычет = Ложь,
	                              ОтнестиНаСФ = Ложь)
	
	НоваяСтрока =  ТаблицаПринятиеКВычету.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаВРазрезеИзмеренийСФ);
	НоваяСтрока.ПовторныйВычет = ПовторныйВычет;
	
	Если ОтнестиНаСФ Тогда
		НоваяСтрока.НДС         = Окр(ДоляДоступногоНДС * Суммы.НДС, 2);
		НоваяСтрока.СуммаБезНДС = Окр(ДоляДоступногоНДС * Суммы.СуммаБезНДС, 2);
		НоваяСтрока.НДСУпр      = Окр(ДоляДоступногоНДС * Суммы.НДСУпр, 2);
	Иначе
		НоваяСтрока.НДС         = Окр(ДоляДоступногоНДС * ПартияСменыНалогообложения.НДС, 2);
		НоваяСтрока.СуммаБезНДС = Окр(ДоляДоступногоНДС * ПартияСменыНалогообложения.СуммаБезНДС, 2);
		НоваяСтрока.НДСУпр      = Окр(ДоляДоступногоНДС * ПартияСменыНалогообложения.НДСУпр, 2);
		
		Суммы.НДСКВычету  = Суммы.НДСКВычету  - НоваяСтрока.НДС;
		Суммы.НДС         = Суммы.НДС         - НоваяСтрока.НДС;
		Суммы.СуммаБезНДС = Суммы.СуммаБезНДС - НоваяСтрока.СуммаБезНДС;
		Суммы.НДСУпр      = Суммы.НДСУпр      - НоваяСтрока.НДСУпр;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНДСПредъявленный(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный)
	
	МассивТекстовДанных = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет КАК Приоритет,
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.ВидДвижения КАК ВидДвижения,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура,
	|	НДСПредъявленный.Поставщик КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС КАК НДС,
	|	НДСПредъявленный.НДСУпр КАК НДСУпр,
	|	НДСПредъявленный.Событие КАК Событие, 
	|	НДСПредъявленный.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение  КАК Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов КАК АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация КАК РегламентнаяОперация,
	|	НДСПредъявленный.Сторно КАК Сторно,
	|	НДСПредъявленный.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	&НДСПредъявленный КАК НДСПредъявленный";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСПредъявленный Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&НДСПредъявленный", ИмяТаблицыЗаписей);
		МассивТекстовДанных.Добавить(ТекстЗапроса);
	КонецЦикла;
	ТекстДанныеДляЗаписи = СтрСоединить(МассивТекстовДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		ТекстДанныеДляЗаписи
		+ "
		|
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор,
		|	Период,
		|	Приоритет
		|
		|ИТОГИ ПО
		|	Регистратор
		|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МассивНедоступныхРегистраторов = Новый Массив;
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		Если ТипЗнч(ВыборкаДокумент.Регистратор) = Тип("ДокументСсылка.ПервичныйДокумент") Тогда 
			
			МассивНедоступныхРегистраторов.Добавить(ВыборкаДокумент.Регистратор);
			
		Иначе
		
			НаборЗаписей = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
			// Проверка дат запрета не производится, т.к. сюда попадаем при выполнении заданий, 
			// а при создании заданий даты запрета контролируются. 
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
			
			Выборка = ВыборкаДокумент.Выбрать();
			Пока Выборка.Следующий() Цикл
			
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
			КонецЦикла;
		
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивНедоступныхРегистраторов.Количество() Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'При выполнении расчета НДС возникла ошибка: попытка формирования записей книг покупок/продаж по документам:
									|%1. 
									|Эти документы не могут быть основанием для записей в книгах. Для исправления проблемы оформите по нему ""Счет-фактуру полученный"" или не используйте эти документы в качестве документа партии НДС.'", ОбщегоНазначения.КодОсновногоЯзыка()),
									СтрСоединить(МассивНедоступныхРегистраторов, ","+Символы.ПС));
		
		ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Формирование движений по НДС.'", ОбщегоНазначения.КодОсновногоЯзыка()), 
					УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения); 
					
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьНДСПредъявленный(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	МассивТекстовРегистраторыЗапись.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	&ИмяТаблицы КАК НДСПредъявленный";
	Для Каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСПредъявленный Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", ИмяТаблицыЗаписей);
		МассивТекстовРегистраторыЗапись.Добавить(ТекстЗапроса);
	КонецЦикла;
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	ТекстРегистраторыЗапись = ТекстРегистраторыЗапись +
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	ТекстУстаревшиеРегистраторы = "
	|ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСПредъявленный КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО
	|		УстаревшиеРегистраторы.Регистратор = РегистраторыЗапись.Регистратор
	|
	|ГДЕ
	|	РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстРегистраторыЗапись + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстУстаревшиеРегистраторы;
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ФормированиеНДСАвансыПолученные

Процедура СформироватьНДСАвансыПолученные(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Задания КАК Задания
	|ГДЕ
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.СчетФактураВыданныйАванс КАК СФ
	|		ГДЕ
	|			СФ.ДокументОснование = Задания.СчетФактура)";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	Иначе
		ПараметрыРасчета.РасчетАвансовПолученных = Истина;
	КонецЕсли;
	
	МассивИзмерений = Новый Массив;
	Для Каждого Измерение Из Метаданные.РегистрыНакопления.НДСАвансыПолученные.Измерения Цикл
		МассивИзмерений.Добавить(Измерение.Имя);
	КонецЦикла;
	ПараметрыРасчета.МассивИзмеренийРегистра = МассивИзмерений;
	
	ПолучитьТекущиеРегистраторыНДСАвансыПолученные(ПараметрыРасчета);
	
	ПолучитьСчетаФактурыВыданныеАванс(ПараметрыРасчета);
	ПолучитьИсправительныеСчетаФактурыВыданныеАванс(ПараметрыРасчета);
	
	ПолучитьЗачетыАвансовПолученных(ПараметрыРасчета);
	
	ИменаТаблицЗаписейНДСАвансыПолученные = Новый Массив;
	ИменаТаблицЗаписейНДСАвансыПолученные.Добавить(РассчитатьНДСАвансыПолученныеПоИСФ(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСАвансыПолученные.Добавить(РассчитатьНДСАвансыПолученныеПереносыПриход(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСАвансыПолученные.Добавить(РассчитатьНДСАвансыПолученныеПереносыРасход(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСАвансыПолученные.Добавить(РассчитатьНДСАвансыПолученныеЗачеты(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСАвансыПолученные.Добавить(РассчитатьЗаписиНДСАвансыПолученныеСохранение(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыПолученные));

	ЗаписатьНДСАвансыПолученные(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыПолученные);
	ОчиститьНДСАвансыПолученные(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыПолученные);
	
КонецПроцедуры

Процедура ПолучитьСчетаФактурыВыданныеАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураВыданныйАванс.Организация         КАК Организация,
	|	СчетФактураВыданныйАванс.ДокументОснование   КАК ДокументОплаты,
	|	СчетФактураВыданныйАванс.Дата                КАК Период,
	|	СчетФактураВыданныйАванс.Ссылка              КАК Ссылка,
	|	СчетФактураВыданныйАванс.ПравилоОтбораАванса КАК ПравилоОтбораАванса,
	|	СчетФактураВыданныйАванс.Дата                КАК Дата,
	|	СчетФактураВыданныйАванс.НалогообложениеНДС  КАК НалогообложениеНДС,
	|	СчетФактураВыданныйАванс.Контрагент          КАК Контрагент
	|ПОМЕСТИТЬ СчетаФактурыВыданныеАванс
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация = СчетФактураВыданныйАванс.Организация
	|		И Задания.СчетФактура = СчетФактураВыданныйАванс.ДокументОснование
	|ГДЕ
	|	СчетФактураВыданныйАванс.Проведен
	|	И НЕ СчетФактураВыданныйАванс.Исправление
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты,
	|	Контрагент
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьИсправительныеСчетаФактурыВыданныеАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсправленныйСчетФактура.Организация               КАК Организация,
	|	ИсправленныйСчетФактура.ДокументОснование         КАК ДокументОплаты,
	|	ИсправленныйСчетФактура.Ссылка                    КАК ИсправленныйСчетФактура,
	|	ИсправленныйСчетФактура.Дата                      КАК Период,
	|	ИсправленныйСчетФактура.Дата                      КАК ДатаИсправления,
	|	ИсправленныйСчетФактура.НомерИсправления          КАК НомерИсправления,
	|	ИсправленныйСчетФактура.СчетФактураОснование.Дата КАК Дата,
	|	ИсправленныйСчетФактура.Ссылка                    КАК Ссылка,
	|	ИсправленныйСчетФактура.ПравилоОтбораАванса       КАК ПравилоОтбораАванса,
	|	ИсправленныйСчетФактура.НалогообложениеНДС        КАК НалогообложениеНДС,
	|	ИсправленныйСчетФактура.Контрагент                КАК Контрагент
	|ПОМЕСТИТЬ ИсправленныеСчетаФактурыВыданныеАванс
	|ИЗ
	|	Задания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК ИсправленныйСчетФактура
	|	ПО
	|		Задания.Организация = ИсправленныйСчетФактура.Организация
	|		И Задания.СчетФактура = ИсправленныйСчетФактура.ДокументОснование
	|		И ИсправленныйСчетФактура.Исправление
	|		И ИсправленныйСчетФактура.Проведен
	|		И ИсправленныйСчетФактура.Дата <= &КонецПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК ДругиеИсправленныеСчетаФактуры
	|	ПО 
	|		ИсправленныйСчетФактура.Организация = ДругиеИсправленныеСчетаФактуры.Организация
	|		И ИсправленныйСчетФактура.ДокументОснование = ДругиеИсправленныеСчетаФактуры.ДокументОснование
	|		И ИсправленныйСчетФактура.НомерИсправления < ДругиеИсправленныеСчетаФактуры.НомерИсправления
	|		И ДругиеИсправленныеСчетаФактуры.Проведен
	|		И ДругиеИсправленныеСчетаФактуры.Исправление
	|		И ДругиеИсправленныеСчетаФактуры.Дата <= &КонецПериода
	|ГДЕ
	|	ДругиеИсправленныеСчетаФактуры.Ссылка ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсправленныеСчетаФактурыВыданныеАванс.Организация             КАК Организация,
	|	ИсправленныеСчетаФактурыВыданныеАванс.ДокументОплаты          КАК ДокументОплаты,
	|	ИсправленныеСчетаФактурыВыданныеАванс.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ИсправленныеСчетаФактурыВыданныеАванс.Период                  КАК Период,
	|	ИсправленныеСчетаФактурыВыданныеАванс.ДатаИсправления         КАК ДатаИсправления,
	|	ИсправленныеСчетаФактурыВыданныеАванс.НомерИсправления        КАК НомерИсправления,
	|	ИсправленныеСчетаФактурыВыданныеАванс.Дата КАК Дата,
	|	ИсправленныеСчетаФактурыВыданныеАванс.Ссылка                  КАК Ссылка,
	|	ИсправленныеСчетаФактурыВыданныеАванс.ПравилоОтбораАванса     КАК ПравилоОтбораАванса,
	|	ИсправленныеСчетаФактурыВыданныеАванс.НалогообложениеНДС      КАК НалогообложениеНДС,
	|	ИсправленныеСчетаФактурыВыданныеАванс.Контрагент              КАК Контрагент
	|ПОМЕСТИТЬ ИсправленныеСчетаФактурыВыданныеАвансПерерасчет
	|ИЗ
	|	ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактурыВыданныеАванс
	|ГДЕ
	|	ИсправленныеСчетаФактурыВыданныеАванс.ДатаИсправления МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты,
	|	Контрагент
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ИсправленныеСчетаФактурыВыданныеАванс.Дата) КАК Дата
	|ИЗ
	|	ИсправленныеСчетаФактурыВыданныеАвансПерерасчет КАК ИсправленныеСчетаФактурыВыданныеАванс
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();

	Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Дата) Тогда
		ПараметрыРасчета.ИСФНачалоПериода = НачалоМесяца(ВыборкаДетальныеЗаписи.Дата);
		ПараметрыРасчета.ИСФКонецПериода = ДобавитьМесяц(ПараметрыРасчета.КонецПериода, -1);
	КонецЕсли;

КонецПроцедуры

Функция АвансыПолученныеПоДокументамОплаты(ПараметрыРасчета)
	
	Если Не РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(
		ПараметрыРасчета.МенеджерВременныхТаблиц,
		"АвансыПолученные_Возникновения") Тогда

		ПараметрыРасчетаАвансов = ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
		
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "Задания";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "СчетФактура";
		ПараметрыРасчетаАвансов.ВключитьДанныеПодарочныхСертификатов                  = Истина;
		ПараметрыРасчетаАвансов.АнализироватьУпрУчетДополнительно                     = Истина;
		
		ПодготовитьВТ_АвансыПолученные_Возникновения(
				ПараметрыРасчета.МенеджерВременныхТаблиц,
				ПараметрыРасчетаАвансов,
				ПараметрыРасчета.ТаблицаНастроек);
				
		//Для ИСФ рассчитывать данные погашений нужно начиная с даты документа оплаты
		ЕстьИСФ = Не ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["ИсправленныеСчетаФактурыВыданныеАвансПерерасчет"].ПолучитьДанные().Пустой();
		Если ЕстьИСФ Тогда
	
			ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.ИСФНачалоПериода;
			ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.ИСФКонецПериода;
			ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ИсправленныеСчетаФактурыВыданныеАвансПерерасчет";
			ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";
		
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Расчеты.Организация               КАК Организация,
			|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
			|	Расчеты.ПодарочныйСертификат      КАК ПодарочныйСертификат,
			|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
			|	Расчеты.Контрагент                КАК Контрагент,
			|	Расчеты.Договор                   КАК Договор,
			|	Расчеты.ТипНалогообложения        КАК ТипНалогообложения,
			|	Расчеты.ДатаАванса                КАК ДатаАванса,
			|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
			|	Расчеты.СуммаАванса               КАК СуммаАванса,
			|	Расчеты.СуммаАвансаВал            КАК СуммаАвансаВал,
			|	Расчеты.СуммаАвансаУпр            КАК СуммаАвансаУпр
			|ПОМЕСТИТЬ АвансыПолученные_ВозникновенияПромежуточная
			|ИЗ
			|	АвансыПолученные_Возникновения КАК Расчеты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АвансыПолученные_Возникновения
			|;";
	
			Запрос.Выполнить();

			ПодготовитьВТ_АвансыПолученные_Возникновения(
				ПараметрыРасчета.МенеджерВременныхТаблиц,
				ПараметрыРасчетаАвансов,
				ПараметрыРасчета.ТаблицаНастроек);
				
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Расчеты.Организация               КАК Организация,
			|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
			|	Расчеты.ПодарочныйСертификат      КАК ПодарочныйСертификат,
			|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
			|	Расчеты.Контрагент                КАК Контрагент,
			|	Расчеты.Договор                   КАК Договор,
			|	Расчеты.ТипНалогообложения	      КАК ТипНалогообложения,
			|	Расчеты.ДатаАванса                КАК ДатаАванса,
			|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
			|	Расчеты.СуммаАванса               КАК СуммаАванса,
			|	Расчеты.СуммаАвансаВал            КАК СуммаАвансаВал,
			|	Расчеты.СуммаАвансаУпр            КАК СуммаАвансаУпр	
			|ПОМЕСТИТЬ АвансыПолученные_ВозникновенияИтог
			|ИЗ
			|	АвансыПолученные_ВозникновенияПромежуточная КАК Расчеты
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Расчеты.Организация               КАК Организация,
			|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
			|	Расчеты.ПодарочныйСертификат      КАК ПодарочныйСертификат,
			|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
			|	Расчеты.Контрагент                КАК Контрагент,
			|	Расчеты.Договор                   КАК Договор,
			|	Расчеты.ТипНалогообложения	      КАК ТипНалогообложения,
			|	Расчеты.ДатаАванса                КАК ДатаАванса,
			|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
			|	Расчеты.СуммаАванса               КАК СуммаАванса,
			|	Расчеты.СуммаАвансаВал            КАК СуммаАвансаВал,
			|	Расчеты.СуммаАвансаУпр            КАК СуммаАвансаУпр	
			|ИЗ
			|	АвансыПолученные_Возникновения КАК Расчеты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АвансыПолученные_ВозникновенияПромежуточная
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АвансыПолученные_Возникновения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Расчеты.Организация               КАК Организация,
			|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
			|	Расчеты.ПодарочныйСертификат      КАК ПодарочныйСертификат,
			|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
			|	Расчеты.Контрагент                КАК Контрагент,
			|	Расчеты.Договор                   КАК Договор,
			|	Расчеты.ТипНалогообложения        КАК ТипНалогообложения,
			|	Расчеты.ДатаАванса                КАК ДатаАванса,
			|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
			|	СУММА(Расчеты.СуммаАванса)        КАК СуммаАванса,
			|	СУММА(Расчеты.СуммаАвансаВал)     КАК СуммаАвансаВал,
			|	СУММА(Расчеты.СуммаАвансаУпр)     КАК СуммаАвансаУпр
			|ПОМЕСТИТЬ АвансыПолученные_Возникновения
			|ИЗ
			|	АвансыПолученные_ВозникновенияИтог КАК Расчеты
			|
			|СГРУППИРОВАТЬ ПО
			|	Расчеты.Организация,
			|	Расчеты.РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов,
			|	Расчеты.ПодарочныйСертификат,
			|	Расчеты.НаправлениеДеятельности,
			|	Расчеты.Контрагент,
			|	Расчеты.Договор,
			|	Расчеты.ТипНалогообложения,
			|	Расчеты.ДатаАванса,
			|	Расчеты.ВалютаДокумента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АвансыПолученные_ВозникновенияИтог
			|";
	
			Запрос.Выполнить();
	
		КонецЕсли; 
		
	КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Расчеты.ДокументОплаты КАК ДокументОплаты,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.Контрагент,
	|	СУММА(Расчеты.Аванс) КАК Аванс,
	|	СУММА(Расчеты.АвансУпр) КАК АвансУпр
	|ИЗ
	|	(ВЫБРАТЬ
	|		Расчеты.РасчетныйДокумент КАК ДокументОплаты,
	|		Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		Расчеты.Контрагент КАК Контрагент,
	|		Расчеты.СуммаАванса КАК Аванс,
	|		Расчеты.СуммаАвансаУпр КАК АвансУпр
	|	ИЗ
	|		АвансыПолученные_Возникновения КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|			ПО Расчеты.Организация = Задания.Организация
	|				И Расчеты.РасчетныйДокумент = Задания.СчетФактура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.ДокументОплаты,
	|		ДД.НаправлениеДеятельности,
	|		ДД.Контрагент,
	|		ДД.Предоплата,
	|		ДД.ПредоплатаУпр
	|	ИЗ
	|		РасчетыСКлиентами_ПереносыАвансов КАК ДД) КАК Расчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.ДокументОплаты,
	|	Расчеты.Контрагент";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПолучитьЗачетыАвансовПолученных(ПараметрыРасчета)
	
	ПараметрыРасчетаАвансов = ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
	
	ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.НачалоПериода;
	ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
	ПараметрыРасчетаАвансов.Организации                                           = ПараметрыРасчета.МассивОрганизаций;
	ПараметрыРасчетаАвансов.ВключитьДанныеПодарочныхСертификатов                  = Истина;
	ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "Задания";
	ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "СчетФактура";
	
	ПодготовитьВТ_АвансыПолученные_Погашения(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Зачеты.ДокументРегистратор     КАК Регистратор,
	|	Зачеты.ДатаПогашения           КАК Период,
	|	Зачеты.Организация             КАК Организация,
	|	Зачеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Зачеты.Контрагент              КАК Контрагент,
	|	Зачеты.РасчетныйДокумент       КАК ДокументОплаты,
	|	Зачеты.ДокументРегистратор     КАК ДокументЗачетаАванса,
	|	Зачеты.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	СУММА(Зачеты.СобытиеЗнак)      КАК СобытиеЗнак,
	|	СУММА(Зачеты.СуммаПогашения)   КАК СуммаЗачета
	|ПОМЕСТИТЬ ЗачетыАвансовПолученных
	|ИЗ
	|	АвансыПолученные_Погашения КАК Зачеты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация   = Зачеты.Организация
	|		И Задания.СчетФактура = Зачеты.РасчетныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	Зачеты.ДокументРегистратор,
	|	Зачеты.ДатаПогашения,
	|	Зачеты.Организация,
	|	Зачеты.НаправлениеДеятельности,
	|	Зачеты.Контрагент,
	|	Зачеты.РасчетныйДокумент,
	|	Зачеты.ОбъектРасчетов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|УНИЧТОЖИТЬ АвансыПолученные_Погашения
	|";
	
	Запрос.Выполнить();
	
	//Для ИСФ рассчитывать данные погашений нужно начиная с даты документа оплаты
	ЕстьИСФ = Не ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["ИсправленныеСчетаФактурыВыданныеАвансПерерасчет"].ПолучитьДанные().Пустой();
	Если ЕстьИСФ Тогда

		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.ИСФНачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.ИСФКонецПериода;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ИсправленныеСчетаФактурыВыданныеАвансПерерасчет";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";
	
		ПодготовитьВТ_АвансыПолученные_Погашения(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);
	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Зачеты.ДокументРегистратор     КАК Регистратор,
		|	Зачеты.ДатаПогашения           КАК Период,
		|	Зачеты.Организация             КАК Организация,
		|	Зачеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Зачеты.Контрагент              КАК Контрагент,
		|	Зачеты.РасчетныйДокумент       КАК ДокументОплаты,
		|	Зачеты.ДокументРегистратор     КАК ДокументЗачетаАванса,
		|	Зачеты.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	СУММА(Зачеты.СобытиеЗнак)      КАК СобытиеЗнак,
		|	СУММА(Зачеты.СуммаПогашения)   КАК СуммаЗачета
		|ПОМЕСТИТЬ ЗачетыАвансовПолученныхПромежуточная
		|ИЗ
		|	АвансыПолученные_Погашения КАК Зачеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|			Задания КАК Задания
		|		ПО 
		|			Задания.Организация = Зачеты.Организация
		|			И Задания.СчетФактура = Зачеты.РасчетныйДокумент
		|
		|СГРУППИРОВАТЬ ПО
		|	Зачеты.ДокументРегистратор,
		|	Зачеты.ДатаПогашения,
		|	Зачеты.Организация,
		|	Зачеты.НаправлениеДеятельности,
		|	Зачеты.Контрагент,
		|	Зачеты.РасчетныйДокумент,
		|	Зачеты.ОбъектРасчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Зачеты.Регистратор             КАК Регистратор,
		|	Зачеты.Период                  КАК Период,
		|	Зачеты.Организация             КАК Организация,
		|	Зачеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Зачеты.Контрагент              КАК Контрагент,
		|	Зачеты.ДокументОплаты          КАК ДокументОплаты,
		|	Зачеты.ДокументЗачетаАванса    КАК ДокументЗачетаАванса,
		|	Зачеты.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Зачеты.СобытиеЗнак             КАК СобытиеЗнак,
		|	Зачеты.СуммаЗачета             КАК СуммаЗачета
		|ИЗ
		|	ЗачетыАвансовПолученных КАК Зачеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АвансыПолученные_Погашения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗачетыАвансовПолученных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Зачеты.Регистратор             КАК Регистратор,
		|	Зачеты.Период                  КАК Период,
		|	Зачеты.Организация             КАК Организация,
		|	Зачеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Зачеты.Контрагент              КАК Контрагент,
		|	Зачеты.ДокументОплаты          КАК ДокументОплаты,
		|	Зачеты.ДокументЗачетаАванса    КАК ДокументЗачетаАванса,
		|	Зачеты.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	СУММА(Зачеты.СобытиеЗнак)      КАК СобытиеЗнак,
		|	СУММА(Зачеты.СуммаЗачета)      КАК СуммаЗачета
		|ПОМЕСТИТЬ ЗачетыАвансовПолученных
		|ИЗ
		|	ЗачетыАвансовПолученныхПромежуточная КАК Зачеты
		|	
		|СГРУППИРОВАТЬ ПО
		|	Зачеты.Регистратор,
		|	Зачеты.Период,
		|	Зачеты.Организация,
		|	Зачеты.НаправлениеДеятельности,
		|	Зачеты.Контрагент,
		|	Зачеты.ДокументОплаты,
		|	Зачеты.ДокументЗачетаАванса,
		|	Зачеты.ОбъектРасчетов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗачетыАвансовПолученныхПромежуточная
		|";

		Запрос.Выполнить();

	КонецЕсли;
	
КонецПроцедуры

Функция РассчитатьНДСАвансыПолученныеПоИСФ(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1                                                    КАК Приоритет,
	|	НДСАвансыПолученные.Регистратор                      КАК Регистратор,
	|	НДСАвансыПолученные.Период                           КАК Период,
	|	НДСАвансыПолученные.ВидДвижения                      КАК ВидДвижения,
	|	НДСАвансыПолученные.Организация                      КАК Организация,
	|	НДСАвансыПолученные.ДокументОплаты                   КАК ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент                       КАК Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура          КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение                    КАК Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС                        КАК СтавкаНДС,
	|	СУММА(НДСАвансыПолученные.СуммаБезНДС)               КАК СуммаБезНДС,
	|	СУММА(НДСАвансыПолученные.НДС)                       КАК НДС,
	|	СУММА(НДСАвансыПолученные.НДСУпр)                    КАК НДСУпр,
	|	ИСТИНА                                               КАК РегламентнаяОперация,
	|	ЛОЖЬ                                                 КАК Сторно,
	|	НДСАвансыПолученные.Событие                          КАК Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса             КАК ДокументЗачетаАванса,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи           КАК ИдентификаторФинЗаписи,
	|	НДСАвансыПолученные.НастройкаХозяйственнойОперации   КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыПолученные.ОбъектРасчетов                   КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыПолученныеПоИСФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка                      КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период                      КАК Период,
	|		НДСАвансыПолученные.ВидДвижения                      КАК ВидДвижения,
	|		НДСАвансыПолученные.Организация                      КАК Организация,
	|		НДСАвансыПолученные.ДокументОплаты                   КАК ДокументОплаты,
	|		НДСАвансыПолученные.Контрагент                       КАК Контрагент,
	|		НДСАвансыПолученные.ИсправленныйСчетФактура          КАК ИсправленныйСчетФактура,
	|		НДСАвансыПолученные.Подразделение                    КАК Подразделение,
	|		НДСАвансыПолученные.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|		НДСАвансыПолученные.СтавкаНДС                        КАК СтавкаНДС,
	|		-НДСАвансыПолученные.СуммаБезНДС                     КАК СуммаБезНДС,
	|		-НДСАвансыПолученные.НДС                             КАК НДС,
	|		-НДСАвансыПолученные.НДСУпр                          КАК НДСУпр,
	|		НДСАвансыПолученные.Событие                          КАК Событие,
	|		НДСАвансыПолученные.ДокументЗачетаАванса             КАК ДокументЗачетаАванса,
	|		НДСАвансыПолученные.ИдентификаторФинЗаписи           КАК ИдентификаторФинЗаписи,
	|		НДСАвансыПолученные.НастройкаХозяйственнойОперации   КАК НастройкаХозяйственнойОперации,
	|		НДСАвансыПолученные.ОбъектРасчетов                   КАК ОбъектРасчетов
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСАвансыПолученные КАК НДСАвансыПолученные
	|		ПО
	|			НДСАвансыПолученные.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСАвансыПолученные.ДокументОплаты = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСАвансыПолученные.Период < &НачалоПериода
	|			И НДСАвансыПолученные.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСАвансыПолученные.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка                      КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период                      КАК Период,
	|		НДСАвансыПолученные.ВидДвижения                      КАК ВидДвижения,
	|		НДСАвансыПолученные.Организация                      КАК Организация,
	|		НДСАвансыПолученные.ДокументОплаты                   КАК ДокументОплаты,
	|		НДСАвансыПолученные.Контрагент                       КАК Контрагент,
	|		НДСАвансыПолученные.ИсправленныйСчетФактура          КАК ИсправленныйСчетФактура,
	|		НДСАвансыПолученные.Подразделение                    КАК Подразделение,
	|		НДСАвансыПолученные.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|		НДСАвансыПолученные.СтавкаНДС                        КАК СтавкаНДС,
	|		-НДСАвансыПолученные.СуммаБезНДС                      КАК СуммаБезНДС,
	|		-НДСАвансыПолученные.НДС                             КАК НДС,
	|		-НДСАвансыПолученные.НДСУпр                          КАК НДСУпр,
	|		НДСАвансыПолученные.Событие                         КАК Событие,
	|		НДСАвансыПолученные.ДокументЗачетаАванса             КАК ДокументЗачетаАванса,
	|		НДСАвансыПолученные.ИдентификаторФинЗаписи           КАК ИдентификаторФинЗаписи,
	|		НДСАвансыПолученные.НастройкаХозяйственнойОперации   КАК НастройкаХозяйственнойОперации,
	|		НДСАвансыПолученные.ОбъектРасчетов                   КАК ОбъектРасчетов
	|
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСАвансыПолученные КАК НДСАвансыПолученные
	|		ПО
	|			НДСАвансыПолученные.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСАвансыПолученные.ДокументОплаты = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСАвансыПолученные.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НДСАвансыПолученные.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НЕ НДСАвансыПолученные.РегламентнаяОперация
	|			И НДСАвансыПолученные.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка                      КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период                      КАК Период,
	|		НДСАвансыПолученные.ВидДвижения                      КАК ВидДвижения,
	|		НДСАвансыПолученные.Организация                      КАК Организация,
	|		НДСАвансыПолученные.ДокументОплаты                   КАК ДокументОплаты,
	|		НДСАвансыПолученные.Контрагент                       КАК Контрагент,
	|		ИсправленныеСчетаФактуры.ИсправленныйСчетФактура     КАК ИсправленныйСчетФактура,
	|		НДСАвансыПолученные.Подразделение                    КАК Подразделение,
	|		НДСАвансыПолученные.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|		НДСАвансыПолученные.СтавкаНДС                        КАК СтавкаНДС,
	|		НДСАвансыПолученные.СуммаБезНДС                      КАК СуммаБезНДС,
	|		НДСАвансыПолученные.НДС                              КАК НДС,
	|		НДСАвансыПолученные.НДСУпр                           КАК НДСУпр,
	|		НДСАвансыПолученные.Событие                          КАК Событие,
	|		НДСАвансыПолученные.ДокументЗачетаАванса             КАК ДокументЗачетаАванса,
	|		НДСАвансыПолученные.ИдентификаторФинЗаписи           КАК ИдентификаторФинЗаписи,
	|		НДСАвансыПолученные.НастройкаХозяйственнойОперации   КАК НастройкаХозяйственнойОперации,
	|		НДСАвансыПолученные.ОбъектРасчетов                   КАК ОбъектРасчетов
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСАвансыПолученные КАК НДСАвансыПолученные
	|		ПО
	|			НДСАвансыПолученные.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСАвансыПолученные.ДокументОплаты = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСАвансыПолученные.Период < &НачалоПериода
	|			И НДСАвансыПолученные.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСАвансыПолученные.Активность
	|			И НДСАвансыПолученные.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.СписаниеНДССПолученногоАванса)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка                      КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период                      КАК Период,
	|		НДСАвансыПолученные.ВидДвижения                      КАК ВидДвижения,
	|		НДСАвансыПолученные.Организация                      КАК Организация,
	|		НДСАвансыПолученные.ДокументОплаты                   КАК ДокументОплаты,
	|		НДСАвансыПолученные.Контрагент                       КАК Контрагент,
	|		ИсправленныеСчетаФактуры.ИсправленныйСчетФактура     КАК ИсправленныйСчетФактура,
	|		НДСАвансыПолученные.Подразделение                    КАК Подразделение,
	|		НДСАвансыПолученные.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|		НДСАвансыПолученные.СтавкаНДС                        КАК СтавкаНДС,
	|		НДСАвансыПолученные.СуммаБезНДС                      КАК СуммаБезНДС,
	|		НДСАвансыПолученные.НДС                              КАК НДС,
	|		НДСАвансыПолученные.НДСУпр                           КАК НДСУпр,
	|		НДСАвансыПолученные.Событие                          КАК Событие,
	|		НДСАвансыПолученные.ДокументЗачетаАванса             КАК ДокументЗачетаАванса,
	|		НДСАвансыПолученные.ИдентификаторФинЗаписи           КАК ИдентификаторФинЗаписи,
	|		НДСАвансыПолученные.НастройкаХозяйственнойОперации   КАК НастройкаХозяйственнойОперации,
	|		НДСАвансыПолученные.ОбъектРасчетов                   КАК ОбъектРасчетов
	|
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСАвансыПолученные КАК НДСАвансыПолученные
	|		ПО
	|			НДСАвансыПолученные.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСАвансыПолученные.ДокументОплаты = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСАвансыПолученные.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НДСАвансыПолученные.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НЕ НДСАвансыПолученные.РегламентнаяОперация
	|			И НДСАвансыПолученные.Активность
	|			И НДСАвансыПолученные.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.СписаниеНДССПолученногоАванса)) КАК НДСАвансыПолученные
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСАвансыПолученные.Регистратор,
	|	НДСАвансыПолученные.Период,
	|	НДСАвансыПолученные.ВидДвижения,
	|	НДСАвансыПолученные.Организация,
	|	НДСАвансыПолученные.ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС,
	|	НДСАвансыПолученные.Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи,
	|	НДСАвансыПолученные.НастройкаХозяйственнойОперации,
	|	НДСАвансыПолученные.ОбъектРасчетов
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСАвансыПолученные.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(НДСАвансыПолученные.НДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСАвансыПолученныеПоИСФ";
	
КонецФункции

Процедура ПолучитьОстаткиАвансовПолученныхДоПереноса(ПараметрыРасчета)
	
	ПараметрыРасчетаАвансов = ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
	
	//Для ИСФ рассчитывать данные погашений нужно начиная с даты документа оплаты
	ЕстьИСФ = Не ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["ИсправленныеСчетаФактурыВыданныеАвансПерерасчет"].ПолучитьДанные().Пустой();
	Если ЕстьИСФ Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Задания.СчетФактура КАК ДокументОплаты
		|ПОМЕСТИТЬ ДокументыОплаты
		|ИЗ
		|	Задания КАК Задания
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеСчетаФактурыВыданныеАвансПерерасчет КАК ИсправленныеСчетаФактурыВыданныеАванс
		|		ПО Задания.Организация = ИсправленныеСчетаФактурыВыданныеАванс.Организация
		|			И Задания.СчетФактура = ИсправленныеСчетаФактурыВыданныеАванс.ДокументОплаты
		|ГДЕ
		|	ИсправленныеСчетаФактурыВыданныеАванс.ДокументОплаты ЕСТЬ NULL";
		
		Запрос.Выполнить();
		
		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.НачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
		ПараметрыРасчетаАвансов.Организации                                           = ПараметрыРасчета.МассивОрганизаций;
		ПараметрыРасчетаАвансов.ВключитьДанныеПодарочныхСертификатов                  = Истина;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ДокументыОплаты";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";
	
		ПодготовитьВТ_ОстаткиАвансыПолученныеДоПереноса(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);

		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Остатки.Организация             КАК Организация,
		|	Остатки.ДокументОплаты          КАК ДокументОплаты,
		|	Остатки.Контрагент              КАК Контрагент,
		|	Остатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	Остатки.Подразделение           КАК Подразделение,
		|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Остатки.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Остатки.СтавкаНДС               КАК СтавкаНДС,
		|	Остатки.СуммаБезНДС             КАК СуммаБезНДС,
		|	Остатки.НДС                     КАК НДС,
		|	Остатки.НДСУпр                  КАК НДСУпр
		|ПОМЕСТИТЬ ОстаткиАвансыПолученныеДоПереносаПромежуточная
		|ИЗ
		|	ОстаткиАвансыПолученныеДоПереноса КАК Остатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиАвансыПолученныеДоПереноса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДокументыОплаты
		|;";

		Запрос.Выполнить();
		
		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.ИСФНачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ИсправленныеСчетаФактурыВыданныеАвансПерерасчет";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";
	
		ПодготовитьВТ_ОстаткиАвансыПолученныеДоПереноса(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Остатки.Организация             КАК Организация,
		|	Остатки.ДокументОплаты          КАК ДокументОплаты,
		|	Остатки.Контрагент              КАК Контрагент,
		|	Остатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	Остатки.Подразделение           КАК Подразделение,
		|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Остатки.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Остатки.СтавкаНДС               КАК СтавкаНДС,
		|	Остатки.СуммаБезНДС             КАК СуммаБезНДС,
		|	Остатки.НДС                     КАК НДС,
		|	Остатки.НДСУпр                  КАК НДСУпр
		|ПОМЕСТИТЬ ОстаткиАвансыПолученныеДоПереносаИтог
		|ИЗ
		|	ОстаткиАвансыПолученныеДоПереносаПромежуточная КАК Остатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Остатки.Организация             КАК Организация,
		|	Остатки.ДокументОплаты          КАК ДокументОплаты,
		|	Остатки.Контрагент              КАК Контрагент,
		|	Остатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	Остатки.Подразделение           КАК Подразделение,
		|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Остатки.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Остатки.СтавкаНДС               КАК СтавкаНДС,
		|	Остатки.СуммаБезНДС             КАК СуммаБезНДС,
		|	Остатки.НДС                     КАК НДС,
		|	Остатки.НДСУпр                  КАК НДСУпр
		|ИЗ
		|	ОстаткиАвансыПолученныеДоПереноса КАК Остатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиАвансыПолученныеДоПереносаПромежуточная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиАвансыПолученныеДоПереноса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Остатки.Организация             КАК Организация,
		|	Остатки.ДокументОплаты          КАК ДокументОплаты,
		|	Остатки.Контрагент              КАК Контрагент,
		|	Остатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	Остатки.Подразделение           КАК Подразделение,
		|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Остатки.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Остатки.СтавкаНДС               КАК СтавкаНДС,
		|	Остатки.СуммаБезНДС             КАК СуммаБезНДС,
		|	Остатки.НДС                     КАК НДС,
		|	Остатки.НДСУпр                  КАК НДСУпр
		|ПОМЕСТИТЬ ОстаткиАвансыПолученныеДоПереноса
		|ИЗ
		|	ОстаткиАвансыПолученныеДоПереносаИтог КАК Остатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ДокументОплаты,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиАвансыПолученныеДоПереносаИтог
		|";

		Запрос.Выполнить();

	Иначе
			
		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.НачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
		ПараметрыРасчетаАвансов.Организации                                           = ПараметрыРасчета.МассивОрганизаций;
		ПараметрыРасчетаАвансов.ВключитьДанныеПодарочныхСертификатов                  = Истина;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "Задания";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "СчетФактура";
		
		ПодготовитьВТ_ОстаткиАвансыПолученныеДоПереноса(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);

	КонецЕсли; 
	
КонецПроцедуры

Функция РассчитатьНДСАвансыПолученныеПереносыПриход(ПараметрыРасчета)
	
	ПолучитьОстаткиАвансовПолученныхДоПереноса(ПараметрыРасчета);

	ПараметрыРасчетаАвансов = ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
	
	ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.НачалоПериода;
	ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
	ПараметрыРасчетаАвансов.Организации                                           = ПараметрыРасчета.МассивОрганизаций;
	ПараметрыРасчетаАвансов.ВключитьДанныеПодарочныхСертификатов                  = Истина;
	ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "Задания";
	ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "СчетФактура";
	
	ПодготовитьВТ_РасчетыСКлиентами_ПереносыАвансов(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);

	//Для ИСФ рассчитывать данные погашений нужно начиная с даты документа оплаты
	ЕстьИСФ = Не ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["ИсправленныеСчетаФактурыВыданныеАвансПерерасчет"].ПолучитьДанные().Пустой();
	Если ЕстьИСФ Тогда

		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДД.Организация                    КАК Организация,
		|	ДД.ДокументЗачетаАванса           КАК ДокументЗачетаАванса,
		|	ДД.ДокументОплаты                 КАК ДокументОплаты,
		|	ДД.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
		|	ДД.ОбъектРасчетов                 КАК ОбъектРасчетов,
		|	ДД.Контрагент                     КАК Контрагент,
		|	ДД.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	ДД.Подразделение                  КАК Подразделение,
		|	ДД.КорАналитикаУчетаПоПартнерам   КАК КорАналитикаУчетаПоПартнерам,
		|	ДД.КорОбъектРасчетов              КАК КорОбъектРасчетов,
		|	ДД.КорКонтрагент                  КАК КорКонтрагент,
		|	ДД.КорНаправлениеДеятельности     КАК КорНаправлениеДеятельности,
		|	ДД.КорПодразделение               КАК КорПодразделение,
		|	ДД.Период                         КАК Период,
		|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	ДД.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
		|	ДД.Валюта                         КАК Валюта,
		|	ДД.Предоплата                     КАК Предоплата,
		|	ДД.ПредоплатаРегл                 КАК ПредоплатаРегл,
		|	ДД.ПредоплатаУпр                  КАК ПредоплатаУпр
		|ПОМЕСТИТЬ РасчетыСКлиентами_ПереносыАвансовПромежуточная
		|ИЗ
		|	РасчетыСКлиентами_ПереносыАвансов КАК ДД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетыСКлиентами_ПереносыАвансов
		|;
		|";

		Запрос.Выполнить();
		
		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.ИСФНачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.ИСФКонецПериода;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ИсправленныеСчетаФактурыВыданныеАвансПерерасчет";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";
	
		ПодготовитьВТ_РасчетыСКлиентами_ПереносыАвансов(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДД.Организация                    КАК Организация,
		|	ДД.ДокументЗачетаАванса           КАК ДокументЗачетаАванса,
		|	ДД.ДокументОплаты                 КАК ДокументОплаты,
		|	ДД.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
		|	ДД.ОбъектРасчетов                 КАК ОбъектРасчетов,
		|	ДД.Контрагент                     КАК Контрагент,
		|	ДД.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	ДД.Подразделение                  КАК Подразделение,
		|	ДД.КорАналитикаУчетаПоПартнерам   КАК КорАналитикаУчетаПоПартнерам,
		|	ДД.КорОбъектРасчетов              КАК КорОбъектРасчетов,
		|	ДД.КорКонтрагент                  КАК КорКонтрагент,
		|	ДД.КорНаправлениеДеятельности     КАК КорНаправлениеДеятельности,
		|	ДД.КорПодразделение               КАК КорПодразделение,
		|	ДД.Период                         КАК Период,
		|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	ДД.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
		|	ДД.Валюта                         КАК Валюта,
		|	ДД.Предоплата                     КАК Предоплата,
		|	ДД.ПредоплатаРегл                 КАК ПредоплатаРегл,
		|	ДД.ПредоплатаУпр                  КАК ПредоплатаУпр
		|ПОМЕСТИТЬ РасчетыСКлиентами_ПереносыАвансовИтог
		|ИЗ
		|	РасчетыСКлиентами_ПереносыАвансовПромежуточная КАК ДД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДД.Организация                    КАК Организация,
		|	ДД.ДокументЗачетаАванса           КАК ДокументЗачетаАванса,
		|	ДД.ДокументОплаты                 КАК ДокументОплаты,
		|	ДД.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
		|	ДД.ОбъектРасчетов                 КАК ОбъектРасчетов,
		|	ДД.Контрагент                     КАК Контрагент,
		|	ДД.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	ДД.Подразделение                  КАК Подразделение,
		|	ДД.КорАналитикаУчетаПоПартнерам   КАК КорАналитикаУчетаПоПартнерам,
		|	ДД.КорОбъектРасчетов              КАК КорОбъектРасчетов,
		|	ДД.КорКонтрагент                  КАК КорКонтрагент,
		|	ДД.КорНаправлениеДеятельности     КАК КорНаправлениеДеятельности,
		|	ДД.КорПодразделение               КАК КорПодразделение,
		|	ДД.Период                         КАК Период,
		|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	ДД.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
		|	ДД.Валюта                         КАК Валюта,
		|	ДД.Предоплата                     КАК Предоплата,
		|	ДД.ПредоплатаРегл                 КАК ПредоплатаРегл,
		|	ДД.ПредоплатаУпр                  КАК ПредоплатаУпр
		|ИЗ
		|	РасчетыСКлиентами_ПереносыАвансов КАК ДД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетыСКлиентами_ПереносыАвансовПромежуточная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетыСКлиентами_ПереносыАвансов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация                    КАК Организация,
		|	ДД.ДокументЗачетаАванса           КАК ДокументЗачетаАванса,
		|	ДД.ДокументОплаты                 КАК ДокументОплаты,
		|	ДД.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
		|	ДД.ОбъектРасчетов                 КАК ОбъектРасчетов,
		|	ДД.Контрагент                     КАК Контрагент,
		|	ДД.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	ДД.Подразделение                  КАК Подразделение,
		|	ДД.КорАналитикаУчетаПоПартнерам   КАК КорАналитикаУчетаПоПартнерам,
		|	ДД.КорОбъектРасчетов              КАК КорОбъектРасчетов,
		|	ДД.КорКонтрагент                  КАК КорКонтрагент,
		|	ДД.КорНаправлениеДеятельности     КАК КорНаправлениеДеятельности,
		|	ДД.КорПодразделение               КАК КорПодразделение,
		|	ДД.Период                         КАК Период,
		|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	ДД.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
		|	ДД.Валюта                         КАК Валюта,
		|	ДД.Предоплата                     КАК Предоплата,
		|	ДД.ПредоплатаРегл                 КАК ПредоплатаРегл,
		|	ДД.ПредоплатаУпр                  КАК ПредоплатаУпр
		|ПОМЕСТИТЬ РасчетыСКлиентами_ПереносыАвансов
		|ИЗ
		|	РасчетыСКлиентами_ПереносыАвансовИтог КАК ДД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетыСКлиентами_ПереносыАвансовИтог
		|";

		Запрос.Выполнить();

	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Ссылка, СчетаФактурыВыданныеАванс.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.ПравилоОтбораАванса, СчетаФактурыВыданныеАванс.ПравилоОтбораАванса) КАК ПравилоОтбораАванса,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Дата, СчетаФактурыВыданныеАванс.Дата) КАК Дата,
	|	ВЫБОР
	|		КОГДА НЕ ИсправленныеСчетаФактурыВыданныеАванс.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                             КАК Исправление,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.ДатаИсправления, ДАТАВРЕМЯ(1,1,1)) КАК ДатаИсправления,
	|	ДД.Организация КАК Организация,
	|	ДД.ДокументОплаты КАК ДокументОплаты,
	|	ДД.Контрагент КАК Контрагент,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.Подразделение КАК Подразделение,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДД.СтавкаНДС КАК СтавкаНДС,
	|	ДД.СуммаБезНДС КАК СуммаБезНДС,
	|	ДД.НДС КАК НДС,
	|	ДД.НДСУпр КАК НДСУпр
	|ИЗ
	|	ОстаткиАвансыПолученныеДоПереноса КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыВыданныеАванс КАК СчетаФактурыВыданныеАванс
	|	ПО
	|		ДД.Организация = СчетаФактурыВыданныеАванс.Организация
	|		И ДД.ДокументОплаты = СчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ДД.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА ДД.Контрагент = СчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактурыВыданныеАванс
	|	ПО
	|		ДД.Организация = ИсправленныеСчетаФактурыВыданныеАванс.Организация
	|		И ДД.ДокументОплаты = ИсправленныеСчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ДД.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА ДД.Контрагент = ИсправленныеСчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛОЖЬ                       КАК ЕстьДанныеПоВыручке,
	|	1 КАК                      СобытиеЗнак,
	|	ДД.Период                  КАК Период,
	|	ДД.Контрагент              КАК Контрагент,
	|	ДД.Подразделение           КАК Подразделение,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.ИдентификаторФинЗаписи  КАК ИдентификаторФинЗаписи,
	|	ДД.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	ДД.ДокументОплаты          КАК ДокументОплаты,
	|	ДД.ПредоплатаРегл          КАК СуммаЗачета,
	|	ДД.ПредоплатаУпр           КАК СуммаЗачетаУпр,
	|	ДД.ДокументЗачетаАванса    КАК ДокументЗачетаАванса
	|ИЗ
	|	РасчетыСКлиентами_ПереносыАвансов КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыВыданныеАванс КАК СчетаФактурыВыданныеАванс
	|	ПО
	|		ДД.Организация = СчетаФактурыВыданныеАванс.Организация
	|		И ДД.ДокументОплаты = СчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ДД.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА ДД.Контрагент = СчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактурыВыданныеАванс
	|	ПО
	|		ДД.Организация = ИсправленныеСчетаФактурыВыданныеАванс.Организация
	|		И ДД.ДокументОплаты = ИсправленныеСчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ДД.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА ДД.Контрагент = ИсправленныеСчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	ДД.Период > ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Дата, СчетаФактурыВыданныеАванс.Дата)
	|	
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	ЗачетыАвансов = Результат[1].Выгрузить();
	
	НДСАвансыПолученные = РегистрыНакопления.НДСАвансыПолученные.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НДСАвансыПолученные.Колонки.Удалить("Активность");
	НДСАвансыПолученные.Колонки.Добавить("Исправление", Новый ОписаниеТипов("Булево"));
	НДСАвансыПолученные.Колонки.Добавить("ДатаЗачетаАванса", Новый ОписаниеТипов("Дата"));
	
	Если ЗачетыАвансов.Количество()>0 Тогда 
		
		НачисленияСПолученногоАванса = Результат[0].Выгрузить(); // ТаблицаЗначений -
		НачисленияСПолученногоАванса.Индексы.Добавить("ДокументОплаты, НаправлениеДеятельности, ОбъектРасчетов, Исправление, ДатаИсправления");
		
		НачисленияСПолученногоАвансаИтоги = НачисленияСПолученногоАванса.Скопировать(,"ДокументОплаты, НаправлениеДеятельности, ОбъектРасчетов, Исправление, ДатаИсправления"); // ТаблицаЗначений -
		НачисленияСПолученногоАвансаИтоги.Свернуть("ДокументОплаты, ОбъектРасчетов, НаправлениеДеятельности, Исправление, ДатаИсправления");
		
		АвансыПоДокументамОплаты = АвансыПолученныеПоДокументамОплаты(ПараметрыРасчета); // ТаблицаЗначений - 
		АвансыИтогиДокументамОплаты = АвансыПоДокументамОплаты.Скопировать(,"ДокументОплаты, Аванс, АвансУпр");
		АвансыИтогиДокументамОплаты.Свернуть("ДокументОплаты", "Аванс, АвансУпр");
		АвансыИтогиДокументамОплаты.Индексы.Добавить("ДокументОплаты");
		
		ЭтапыЗачета = Новый Массив;
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты, НаправлениеДеятельности, ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты, ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты, НаправлениеДеятельности"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты"));
		
		ПараметрыРаспределенияЗачета = ПараметрыРаспределенияЗачета();
		ПараметрыРаспределенияЗачета.ТолькоРаспределение = Истина;
		ПараметрыРаспределенияЗачета.ОбновитьИдентификатор = Ложь;

		Для Каждого СтруктураОтбораЗачета Из ЭтапыЗачета Цикл
			Для каждого Строка Из НачисленияСПолученногоАвансаИтоги Цикл
				
				СтрокаАванса = АвансыИтогиДокументамОплаты.Найти(Строка.ДокументОплаты);
				Если СтрокаАванса = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				СтруктураОтбораАванса = Новый Структура();
				СтруктураОтбораАванса.Вставить("ДокументОплаты", Строка.ДокументОплаты);
				СтруктураОтбораАванса.Вставить("НаправлениеДеятельности", Строка.НаправлениеДеятельности);
				СтруктураОтбораАванса.Вставить("ОбъектРасчетов", Строка.ОбъектРасчетов);
				СтруктураОтбораАванса.Вставить("Исправление", Строка.Исправление);
				СтруктураОтбораАванса.Вставить("ДатаИсправления", Строка.ДатаИсправления);
				СтрокиНачислениеНДС = НачисленияСПолученногоАванса.НайтиСтроки(СтруктураОтбораАванса);
				
				ЗаполнитьЗначенияСвойств(СтруктураОтбораЗачета, СтруктураОтбораАванса);
				СтрокиЗачетАванса = ЗачетыАвансов.НайтиСтроки(СтруктураОтбораЗачета);
				
				ВыполнитьЗачетАвансаПолученного(ПараметрыРасчета, СтрокаАванса, СтрокиНачислениеНДС, СтрокиЗачетАванса, НДСАвансыПолученные, ПараметрыРаспределенияЗачета);
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСАвансыПолученные.Регистратор КАК Регистратор,
	|	НДСАвансыПолученные.Период КАК Период,
	|	НДСАвансыПолученные.Организация КАК Организация,
	|	НДСАвансыПолученные.ДокументОплаты КАК ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент КАК Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение КАК Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС КАК СтавкаНДС,
	|	НДСАвансыПолученные.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСАвансыПолученные.НДС КАК НДС,
	|	НДСАвансыПолученные.НДСУпр КАК НДСУпр,
	|	НДСАвансыПолученные.Событие КАК Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	НДСАвансыПолученные.РегламентнаяОперация КАК РегламентнаяОперация,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСАвансыПолученные.Сторно КАК Сторно,
	|	НДСАвансыПолученные.Исправление КАК Исправление,
	|	НДСАвансыПолученные.ДатаЗачетаАванса КАК ДатаЗачетаАванса,
	|	НДСАвансыПолученные.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыПолученныеПереносы
	|ИЗ
	|	&НДСАвансыПолученные КАК НДСАвансыПолученные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НДСАвансыПолученные.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	НДСАвансыПолученные.Период КАК Период,
	|	НДСАвансыПолученные.Организация КАК Организация,
	|	НДСАвансыПолученные.ДокументОплаты КАК ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент КАК Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение КАК Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(НДСАвансыПолученные.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСАвансыПолученные.НДС) КАК НДС,
	|	СУММА(НДСАвансыПолученные.НДСУпр) КАК НДСУпр,
	|	НДСАвансыПолученные.Событие КАК Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	НДСАвансыПолученные.РегламентнаяОперация КАК РегламентнаяОперация,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПереносАванса) КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыПолученные.Сторно КАК Сторно,
	|	НДСАвансыПолученные.Исправление КАК Исправление,
	|	НДСАвансыПолученные.ДатаЗачетаАванса КАК ДатаЗачетаАванса,
	|	НДСАвансыПолученные.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыПолученныеПереносыПриход
	|ИЗ
	|	НДСАвансыПолученныеПереносы КАК НДСАвансыПолученные
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСАвансыПолученные.Регистратор,
	|	НДСАвансыПолученные.Период,
	|	НДСАвансыПолученные.Организация,
	|	НДСАвансыПолученные.ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС,
	|	НДСАвансыПолученные.Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса,
	|	НДСАвансыПолученные.РегламентнаяОперация,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи,
	|	НДСАвансыПолученные.Сторно,
	|	НДСАвансыПолученные.Исправление,
	|	НДСАвансыПолученные.ДатаЗачетаАванса,
	|	НДСАвансыПолученные.ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСАвансыПолученныеПереносы
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НДСАвансыПолученные", НДСАвансыПолученные);
	Запрос.Выполнить();
	
	Возврат "НДСАвансыПолученныеПереносыПриход";
	
КонецФункции

Функция РассчитатьНДСАвансыПолученныеПереносыРасход(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеСПолученногоАванса.Организация КАК Организация,
	|	НачислениеСПолученногоАванса.ДокументОплаты КАК ДокументОплаты,
	|	НачислениеСПолученногоАванса.Контрагент КАК Контрагент,
	|	НачислениеСПолученногоАванса.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НачислениеСПолученногоАванса.Подразделение           КАК Подразделение,
	|	НачислениеСПолученногоАванса.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НачислениеСПолученногоАванса.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	НачислениеСПолученногоАванса.СтавкаНДС               КАК СтавкаНДС,
	|	СУММА(НачислениеСПолученногоАванса.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(НачислениеСПолученногоАванса.НДС)              КАК НДС,
	|	СУММА(НачислениеСПолученногоАванса.НДСУпр)           КАК НДСУпр
	|ПОМЕСТИТЬ НачислениеНДСАвансыПолученные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.Организация              КАК Организация,
	|		ДД.ДокументОплаты           КАК ДокументОплаты,
	|		ДД.Контрагент               КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура  КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение            КАК Подразделение,
	|		ДД.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС                КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов           КАК ОбъектРасчетов,
	|		ДД.СуммаБезНДС              КАК СуммаБезНДС,
	|		ДД.НДС                      КАК НДС,
	|		ДД.НДСУпр                   КАК НДСУпр
	|	ИЗ
	|		ОстаткиАвансыПолученныеДоПереноса КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.ДокументОплаты          КАК ДокументОплаты,
	|		ДД.Контрагент              КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение           КАК Подразделение,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|		ДД.НДС                     КАК НДС,
	|		ДД.НДСУпр                  КАК НДСУпр
	|	ИЗ
	|		НДСАвансыПолученныеПереносыПриход КАК ДД
	|	) КАК НачислениеСПолученногоАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеСПолученногоАванса.Организация,
	|	НачислениеСПолученногоАванса.ДокументОплаты,
	|	НачислениеСПолученногоАванса.Контрагент,
	|	НачислениеСПолученногоАванса.ИсправленныйСчетФактура,
	|	НачислениеСПолученногоАванса.Подразделение,
	|	НачислениеСПолученногоАванса.НаправлениеДеятельности,
	|	НачислениеСПолученногоАванса.СтавкаНДС,
	|	НачислениеСПолученногоАванса.ОбъектРасчетов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачислениеСПолученногоАванса.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(НачислениеСПолученногоАванса.НДС) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Ссылка, СчетаФактурыВыданныеАванс.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.ПравилоОтбораАванса, СчетаФактурыВыданныеАванс.ПравилоОтбораАванса) КАК ПравилоОтбораАванса,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Дата, СчетаФактурыВыданныеАванс.Дата) КАК Дата,
	|	ВЫБОР
	|		КОГДА НЕ ИсправленныеСчетаФактурыВыданныеАванс.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                             КАК Исправление,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.ДатаИсправления, ДАТАВРЕМЯ(1,1,1)) КАК ДатаИсправления,
	|	ДД.Организация КАК Организация,
	|	ДД.ДокументОплаты КАК ДокументОплаты,
	|	ДД.Контрагент КАК Контрагент,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.Подразделение КАК Подразделение,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДД.СтавкаНДС КАК СтавкаНДС,
	|	ДД.СуммаБезНДС КАК СуммаБезНДС,
	|	ДД.НДС КАК НДС,
	|	ДД.НДСУпр КАК НДСУпр
	|ИЗ
	|	НачислениеНДСАвансыПолученные КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыВыданныеАванс КАК СчетаФактурыВыданныеАванс
	|	ПО
	|		ДД.Организация = СчетаФактурыВыданныеАванс.Организация
	|		И ДД.ДокументОплаты = СчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ДД.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА ДД.Контрагент = СчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактурыВыданныеАванс
	|	ПО
	|		ДД.Организация = ИсправленныеСчетаФактурыВыданныеАванс.Организация
	|		И ДД.ДокументОплаты = ИсправленныеСчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ДД.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА ДД.Контрагент = ИсправленныеСчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛОЖЬ КАК ЕстьДанныеПоВыручке,
	|	1 КАК СобытиеЗнак,
	|	ДД.Период КАК Период,
	|	ДД.КорКонтрагент КАК Контрагент,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.КорПодразделение КАК Подразделение,
	|	ДД.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДД.КорОбъектРасчетов КАК ОбъектРасчетов,
	|	ДД.ДокументОплаты КАК ДокументОплаты,
	|	ДД.ПредоплатаРегл КАК СуммаЗачета,
	|	ДД.ПредоплатаУпр КАК СуммаЗачетаУпр,
	|	ДД.ДокументЗачетаАванса КАК ДокументЗачетаАванса
	|ИЗ
	|	РасчетыСКлиентами_ПереносыАвансов КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыВыданныеАванс КАК СчетаФактурыВыданныеАванс
	|	ПО
	|		ДД.Организация = СчетаФактурыВыданныеАванс.Организация
	|		И ДД.ДокументОплаты = СчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ДД.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА ДД.Контрагент = СчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактурыВыданныеАванс
	|	ПО
	|		ДД.Организация = ИсправленныеСчетаФактурыВыданныеАванс.Организация
	|		И ДД.ДокументОплаты = ИсправленныеСчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ДД.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА ДД.Контрагент = ИсправленныеСчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	ДД.Период > ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Дата, СчетаФактурыВыданныеАванс.Дата)
	|;
	|
	|//////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачислениеНДСАвансыПолученные
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	ЗачетыАвансов = Результат[2].Выгрузить();
	
	НДСАвансыПолученные = РегистрыНакопления.НДСАвансыПолученные.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НДСАвансыПолученные.Колонки.Удалить("Активность");
	НДСАвансыПолученные.Колонки.Добавить("Исправление", Новый ОписаниеТипов("Булево"));
	НДСАвансыПолученные.Колонки.Добавить("ДатаЗачетаАванса", Новый ОписаниеТипов("Дата"));
	
	Если ЗачетыАвансов.Количество()>0 Тогда 
		
		НачисленияСПолученногоАванса = Результат[1].Выгрузить(); // ТаблицаЗначений -
		НачисленияСПолученногоАванса.Индексы.Добавить("ДокументОплаты, НаправлениеДеятельности, ОбъектРасчетов, Исправление, ДатаИсправления");
		
		НачисленияСПолученногоАвансаИтоги = НачисленияСПолученногоАванса.Скопировать(,"ДокументОплаты, НаправлениеДеятельности, ОбъектРасчетов, Исправление, ДатаИсправления"); // ТаблицаЗначений -
		НачисленияСПолученногоАвансаИтоги.Свернуть("ДокументОплаты, ОбъектРасчетов, НаправлениеДеятельности, Исправление, ДатаИсправления");
		
		АвансыПоДокументамОплаты = АвансыПолученныеПоДокументамОплаты(ПараметрыРасчета); // ТаблицаЗначений - 
		АвансыИтогиДокументамОплаты = АвансыПоДокументамОплаты.Скопировать(, "ДокументОплаты, Аванс, АвансУпр");
		АвансыИтогиДокументамОплаты.Свернуть("ДокументОплаты", "Аванс, АвансУпр");
		АвансыИтогиДокументамОплаты.Индексы.Добавить("ДокументОплаты");
			
		ЭтапыЗачета = Новый Массив;
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты, НаправлениеДеятельности, ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты, ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты, НаправлениеДеятельности"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты"));
		
		ПараметрыРаспределенияЗачета = ПараметрыРаспределенияЗачета();
		ПараметрыРаспределенияЗачета.ТолькоРаспределение = Истина;
		ПараметрыРаспределенияЗачета.ОбновитьИдентификатор = Ложь;
		ПараметрыРаспределенияЗачета.ОпределятьПодразделениеПоПогашенномуАвансу = Истина;

		Для Каждого СтруктураОтбораЗачета Из ЭтапыЗачета Цикл
			Для Каждого Строка Из НачисленияСПолученногоАвансаИтоги Цикл
				
				СтрокаАванса = АвансыИтогиДокументамОплаты.Найти(Строка.ДокументОплаты);
				Если СтрокаАванса = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				СтруктураОтбораАванса = Новый Структура();
				СтруктураОтбораАванса.Вставить("ДокументОплаты", Строка.ДокументОплаты);
				СтруктураОтбораАванса.Вставить("НаправлениеДеятельности", Строка.НаправлениеДеятельности);
				СтруктураОтбораАванса.Вставить("ОбъектРасчетов", Строка.ОбъектРасчетов);
				СтруктураОтбораАванса.Вставить("Исправление", Строка.Исправление);
				СтруктураОтбораАванса.Вставить("ДатаИсправления", Строка.ДатаИсправления);
				СтрокиНачислениеНДС = НачисленияСПолученногоАванса.НайтиСтроки(СтруктураОтбораАванса);
				
				ЗаполнитьЗначенияСвойств(СтруктураОтбораЗачета, СтруктураОтбораАванса);
				СтрокиЗачетАванса = ЗачетыАвансов.НайтиСтроки(СтруктураОтбораЗачета);
				
				ВыполнитьЗачетАвансаПолученного(ПараметрыРасчета, СтрокаАванса, СтрокиНачислениеНДС, СтрокиЗачетАванса, НДСАвансыПолученные, ПараметрыРаспределенияЗачета);
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСАвансыПолученные.Регистратор КАК Регистратор,
	|	НДСАвансыПолученные.Период КАК Период,
	|	НДСАвансыПолученные.Организация КАК Организация,
	|	НДСАвансыПолученные.ДокументОплаты КАК ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент КАК Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение КАК Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС КАК СтавкаНДС,
	|	НДСАвансыПолученные.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСАвансыПолученные.НДС КАК НДС,
	|	НДСАвансыПолученные.НДСУпр КАК НДСУпр,
	|	НДСАвансыПолученные.Событие КАК Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	НДСАвансыПолученные.РегламентнаяОперация КАК РегламентнаяОперация,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСАвансыПолученные.Сторно КАК Сторно,
	|	НДСАвансыПолученные.Исправление КАК Исправление,
	|	НДСАвансыПолученные.ДатаЗачетаАванса КАК ДатаЗачетаАванса,
	|	НДСАвансыПолученные.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыПолученныеПереносы
	|ИЗ
	|	&НДСАвансыПолученные КАК НДСАвансыПолученные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НДСАвансыПолученные.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	НДСАвансыПолученные.Период КАК Период,
	|	НДСАвансыПолученные.Организация КАК Организация,
	|	НДСАвансыПолученные.ДокументОплаты КАК ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент КАК Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение КАК Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(НДСАвансыПолученные.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСАвансыПолученные.НДС) КАК НДС,
	|	СУММА(НДСАвансыПолученные.НДСУпр) КАК НДСУпр,
	|	НДСАвансыПолученные.Событие КАК Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	НДСАвансыПолученные.РегламентнаяОперация КАК РегламентнаяОперация,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПереносАванса) КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыПолученные.Сторно КАК Сторно,
	|	НДСАвансыПолученные.Исправление КАК Исправление,
	|	НДСАвансыПолученные.ДатаЗачетаАванса КАК ДатаЗачетаАванса,
	|	НДСАвансыПолученные.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыПолученныеПереносыРасход
	|ИЗ
	|	НДСАвансыПолученныеПереносы КАК НДСАвансыПолученные
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСАвансыПолученные.Регистратор,
	|	НДСАвансыПолученные.Период,
	|	НДСАвансыПолученные.Организация,
	|	НДСАвансыПолученные.ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС,
	|	НДСАвансыПолученные.Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса,
	|	НДСАвансыПолученные.РегламентнаяОперация,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи,
	|	НДСАвансыПолученные.Сторно,
	|	НДСАвансыПолученные.Исправление,
	|	НДСАвансыПолученные.ДатаЗачетаАванса,
	|	НДСАвансыПолученные.ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСАвансыПолученныеПереносы
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НДСАвансыПолученные", НДСАвансыПолученные);
	Запрос.Выполнить();
	
	Возврат "НДСАвансыПолученныеПереносыРасход";
	
КонецФункции

Функция НачислениеНДСАвансыПолученные(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеСПолученногоАванса.Организация КАК Организация,
	|	НачислениеСПолученногоАванса.ДокументОплаты КАК ДокументОплаты,
	|	НачислениеСПолученногоАванса.Контрагент КАК Контрагент,
	|	НачислениеСПолученногоАванса.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НачислениеСПолученногоАванса.Подразделение           КАК Подразделение,
	|	НачислениеСПолученногоАванса.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НачислениеСПолученногоАванса.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	НачислениеСПолученногоАванса.СтавкаНДС               КАК СтавкаНДС,
	|	СУММА(НачислениеСПолученногоАванса.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(НачислениеСПолученногоАванса.НДС)              КАК НДС,
	|	СУММА(НачислениеСПолученногоАванса.НДСУпр)           КАК НДСУпр
	|ПОМЕСТИТЬ НачислениеНДСАвансыПолученные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.Организация              КАК Организация,
	|		ДД.ДокументОплаты           КАК ДокументОплаты,
	|		ДД.Контрагент               КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура  КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение            КАК Подразделение,
	|		ДД.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС                КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов           КАК ОбъектРасчетов,
	|		ДД.СуммаБезНДС              КАК СуммаБезНДС,
	|		ДД.НДС                      КАК НДС,
	|		ДД.НДСУпр                   КАК НДСУпр
	|	ИЗ
	|		ОстаткиАвансыПолученныеДоПереноса КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.ДокументОплаты          КАК ДокументОплаты,
	|		ДД.Контрагент              КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение           КАК Подразделение,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|		ДД.НДС                     КАК НДС,
	|		ДД.НДСУпр                  КАК НДСУпр
	|	ИЗ
	|		НДСАвансыПолученныеПереносыПриход КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.ДокументОплаты          КАК ДокументОплаты,
	|		ДД.Контрагент              КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение           КАК Подразделение,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		-ДД.СуммаБезНДС            КАК СуммаБезНДС,
	|		-ДД.НДС                    КАК НДС,
	|		-ДД.НДСУпр                 КАК НДСУпр
	|	ИЗ
	|		НДСАвансыПолученныеПереносыРасход КАК ДД
	|	) КАК НачислениеСПолученногоАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеСПолученногоАванса.Организация,
	|	НачислениеСПолученногоАванса.ДокументОплаты,
	|	НачислениеСПолученногоАванса.Контрагент,
	|	НачислениеСПолученногоАванса.ИсправленныйСчетФактура,
	|	НачислениеСПолученногоАванса.Подразделение,
	|	НачислениеСПолученногоАванса.НаправлениеДеятельности,
	|	НачислениеСПолученногоАванса.СтавкаНДС,
	|	НачислениеСПолученногоАванса.ОбъектРасчетов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачислениеСПолученногоАванса.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(НачислениеСПолученногоАванса.НДС) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Ссылка, СчетаФактурыВыданныеАванс.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.ПравилоОтбораАванса, СчетаФактурыВыданныеАванс.ПравилоОтбораАванса) КАК ПравилоОтбораАванса,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Дата, СчетаФактурыВыданныеАванс.Дата) КАК Дата,
	|	ВЫБОР
	|		КОГДА НЕ ИсправленныеСчетаФактурыВыданныеАванс.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                             КАК Исправление,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.ДатаИсправления, ДАТАВРЕМЯ(1,1,1)) КАК ДатаИсправления,
	|	НачислениеНДСАвансыПолученные.Организация             КАК Организация,
	|	НачислениеНДСАвансыПолученные.ДокументОплаты          КАК ДокументОплаты,
	|	НачислениеНДСАвансыПолученные.Контрагент              КАК Контрагент,
	|	НачислениеНДСАвансыПолученные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НачислениеНДСАвансыПолученные.Подразделение           КАК Подразделение,
	|	НачислениеНДСАвансыПолученные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НачислениеНДСАвансыПолученные.СтавкаНДС               КАК СтавкаНДС,
	|	НачислениеНДСАвансыПолученные.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	НачислениеНДСАвансыПолученные.СуммаБезНДС             КАК СуммаБезНДС,
	|	НачислениеНДСАвансыПолученные.НДС                     КАК НДС,
	|	НачислениеНДСАвансыПолученные.НДСУпр                  КАК НДСУпр
	|ИЗ
	|	НачислениеНДСАвансыПолученные КАК НачислениеНДСАвансыПолученные
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыВыданныеАванс КАК СчетаФактурыВыданныеАванс
	|	ПО
	|		НачислениеНДСАвансыПолученные.Организация = СчетаФактурыВыданныеАванс.Организация
	|		И НачислениеНДСАвансыПолученные.ДокументОплаты = СчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(НачислениеНДСАвансыПолученные.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА НачислениеНДСАвансыПолученные.Контрагент = СчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактурыВыданныеАванс
	|	ПО
	|		НачислениеНДСАвансыПолученные.Организация = ИсправленныеСчетаФактурыВыданныеАванс.Организация
	|		И НачислениеНДСАвансыПолученные.ДокументОплаты = ИсправленныеСчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(НачислениеНДСАвансыПолученные.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА НачислениеНДСАвансыПолученные.Контрагент = ИсправленныеСчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|;
	|
	|//////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачислениеНДСАвансыПолученные
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция РассчитатьНДСАвансыПолученныеЗачеты(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Выручка.Регистратор КАК Регистратор,
	|	СУММА(Выручка.СобственнаяВыручкаСНДС) КАК СобственнаяВыручкаСНДС,
	|	СУММА(Выручка.СобственнаяВыручкаБезНДС) КАК СобственнаяВыручкаБезНДС,
	|	СУММА(Выручка.КомиссионнаяВыручкаСНДС) КАК КомиссионнаяВыручкаСНДС,
	|	СУММА(Выручка.КомиссионнаяВыручкаБезНДС) КАК КомиссионнаяВыручкаБезНДС
	|ПОМЕСТИТЬ ДанныеПоВыручке
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗачетыАвансовПолученных.Регистратор КАК Регистратор,
	|		ВЫБОР
	|			КОГДА ВыручкаИСебестоимостьПродаж.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				И НЕ ВыручкаИСебестоимостьПродаж.НалогообложениеНДС В (&ТипыНалогообложенияНДСНеоблагаемые)
	|				ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СобственнаяВыручкаСНДС,
	|		ВЫБОР
	|			КОГДА ВыручкаИСебестоимостьПродаж.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС В (&ТипыНалогообложенияНДСНеоблагаемые)
	|				ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СобственнаяВыручкаБезНДС,
	|		ВЫБОР
	|			КОГДА НЕ ВыручкаИСебестоимостьПродаж.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				И НЕ ВыручкаИСебестоимостьПродаж.НалогообложениеНДС В (&ТипыНалогообложенияНДСНеоблагаемые)
	|				ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КомиссионнаяВыручкаСНДС,
	|		ВЫБОР
	|			КОГДА НЕ ВыручкаИСебестоимостьПродаж.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС В (&ТипыНалогообложенияНДСНеоблагаемые)
	|				ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КомиссионнаяВыручкаБезНДС
	|	ИЗ
	|		ЗачетыАвансовПолученных КАК ЗачетыАвансовПолученных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ПО
	|			ЗачетыАвансовПолученных.Регистратор = ВыручкаИСебестоимостьПродаж.Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗачетыАвансовПолученных.Регистратор КАК Регистратор,
	|		ВЫБОР
	|			КОГДА НЕ ПрочаяВыручка.НалогообложениеНДС В (&ТипыНалогообложенияНДСНеоблагаемые)
	|				ТОГДА ПрочаяВыручка.ВыручкаБезНДСРегл + ПрочаяВыручка.НДСРегл 
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СобственнаяВыручкаСНДС,
	|		ВЫБОР
	|			КОГДА ПрочаяВыручка.НалогообложениеНДС В (&ТипыНалогообложенияНДСНеоблагаемые)
	|				ТОГДА ПрочаяВыручка.ВыручкаБезНДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СобственнаяВыручкаБезНДС,
	|		0 КАК КомиссионнаяВыручкаСНДС,
	|		0 КАК КомиссионнаяВыручкаБезНДС
	|	ИЗ
	|		ЗачетыАвансовПолученных КАК ЗачетыАвансовПолученных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.ПрочаяВыручка КАК ПрочаяВыручка
	|		ПО
	|			ЗачетыАвансовПолученных.Регистратор = ПрочаяВыручка.Регистратор
	|		
	|		) КАК Выручка
	|СГРУППИРОВАТЬ ПО
	|	Выручка.Регистратор
	|
	|ИМЕЮЩИЕ
	|	СУММА(Выручка.СобственнаяВыручкаСНДС) <> 0
	|	ИЛИ СУММА(Выручка.СобственнаяВыручкаБезНДС) <> 0
	|	ИЛИ СУММА(Выручка.КомиссионнаяВыручкаСНДС) <> 0
	|	ИЛИ СУММА(Выручка.КомиссионнаяВыручкаБезНДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗачетыАвансовПолученных.Регистратор КАК Регистратор,
	|	ЗачетыАвансовПолученных.Период КАК Период,
	|	ЗачетыАвансовПолученных.Организация КАК Организация,
	|	ЗачетыАвансовПолученных.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗачетыАвансовПолученных.Контрагент КАК Контрагент,
	|	ЗачетыАвансовПолученных.ДокументОплаты КАК ДокументОплаты,
	|	ЗачетыАвансовПолученных.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	ЗачетыАвансовПолученных.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ЗачетыАвансовПолученных.СобытиеЗнак КАК СобытиеЗнак,
	|	ЗачетыАвансовПолученных.СуммаЗачета КАК СуммаЗачета,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеПоВыручке.Регистратор ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьДанныеПоВыручке,
	|	ЕСТЬNULL(ДанныеПоВыручке.СобственнаяВыручкаСНДС, 0) КАК СобственнаяВыручкаСНДС,
	|	ЕСТЬNULL(ДанныеПоВыручке.СобственнаяВыручкаБезНДС, 0) КАК СобственнаяВыручкаБезНДС,
	|	ЕСТЬNULL(ДанныеПоВыручке.КомиссионнаяВыручкаСНДС, 0) КАК КомиссионнаяВыручкаСНДС,
	|	ЕСТЬNULL(ДанныеПоВыручке.КомиссионнаяВыручкаБезНДС, 0) КАК КомиссионнаяВыручкаБезНДС
	|
	|ИЗ
	|	ЗачетыАвансовПолученных КАК ЗачетыАвансовПолученных
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДанныеПоВыручке КАК ДанныеПоВыручке
	|	ПО
	|		ЗачетыАвансовПолученных.Регистратор = ДанныеПоВыручке.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСНеоблагаемые",  УчетНДСУП.ТипыНалогообложенияНДСНеоблагаемые());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные",              ТипыЗапасовСобственные());
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ЗачетыАвансов = Запрос.Выполнить().Выгрузить(); // ТаблицаЗначений - 
	ЗачетыАвансов.Индексы.Добавить("ДокументОплаты,НаправлениеДеятельности,ОбъектРасчетов");
	ЗачетыАвансов.Индексы.Добавить("ДокументОплаты,НаправлениеДеятельности");
	ЗачетыАвансов.Индексы.Добавить("ДокументОплаты,ОбъектРасчетов");
	ЗачетыАвансов.Индексы.Добавить("ДокументОплаты");
	
	НДСАвансыПолученные = РегистрыНакопления.НДСАвансыПолученные.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НДСАвансыПолученные.Колонки.Удалить("Активность");
	НДСАвансыПолученные.Колонки.Добавить("Исправление", Новый ОписаниеТипов("Булево"));
	НДСАвансыПолученные.Колонки.Добавить("ДатаЗачетаАванса", Новый ОписаниеТипов("Дата"));
	
	Если ЗачетыАвансов.Количество()>0 Тогда
		
		НачисленияСПолученногоАванса = НачислениеНДСАвансыПолученные(ПараметрыРасчета); // ТаблицаЗначений -
		НачисленияСПолученногоАванса.Индексы.Добавить("ДокументОплаты, НаправлениеДеятельности, ОбъектРасчетов, Исправление, ДатаИсправления");
		
		НачисленияСПолученногоАвансаИтоги = НачисленияСПолученногоАванса.Скопировать(,"ДокументОплаты, Контрагент, НаправлениеДеятельности, ОбъектРасчетов, Исправление, ДатаИсправления"); // ТаблицаЗначений -
		
		АвансыПоДокументамОплаты = АвансыПолученныеПоДокументамОплаты(ПараметрыРасчета); // ТаблицаЗначений - 
		АвансыИтогиДокументамОплаты = АвансыПоДокументамОплаты.Скопировать(,"ДокументОплаты, Контрагент, Аванс, АвансУпр");
		АвансыИтогиДокументамОплаты.Свернуть("ДокументОплаты, Контрагент", "Аванс, АвансУпр");
		АвансыИтогиДокументамОплаты.Индексы.Добавить("ДокументОплаты");
		
		ЭтапыЗачета = Новый Массив;
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты, НаправлениеДеятельности, ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты, ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты, НаправлениеДеятельности"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты"));
		
		ПараметрыРаспределенияЗачета = ПараметрыРаспределенияЗачета();

		Для Каждого СтруктураОтбораЗачета Из ЭтапыЗачета Цикл
			Для Каждого Строка Из НачисленияСПолученногоАвансаИтоги Цикл
				
				СтруктураОтбораАванса = Новый Структура();
				СтруктураОтбораАванса.Вставить("ДокументОплаты", Строка.ДокументОплаты);
				СтруктураОтбораАванса.Вставить("Контрагент", Строка.Контрагент);
				СтрокиАванса = АвансыИтогиДокументамОплаты.НайтиСтроки(СтруктураОтбораАванса);
				Если СтрокиАванса.Количество() = 0 Тогда
					Продолжить;
				Иначе
					СтрокаАванса = СтрокиАванса[0];
				КонецЕсли;
				
				ЭтоВводОстатков = ТипЗнч(Строка.ДокументОплаты) = Тип("ДокументСсылка.ВводОстатков");
				
				СтруктураОтбораАванса = Новый Структура();
				СтруктураОтбораАванса.Вставить("ДокументОплаты", Строка.ДокументОплаты);
				СтруктураОтбораАванса.Вставить("НаправлениеДеятельности", Строка.НаправлениеДеятельности);
				СтруктураОтбораАванса.Вставить("ОбъектРасчетов", Строка.ОбъектРасчетов);
				СтруктураОтбораАванса.Вставить("Исправление", Строка.Исправление);
				СтруктураОтбораАванса.Вставить("ДатаИсправления", Строка.ДатаИсправления);
				Если ЭтоВводОстатков Тогда
					СтруктураОтбораАванса.Вставить("Контрагент", Строка.Контрагент);
					СтруктураОтбораЗачета.Вставить("Контрагент");
				КонецЕсли;

				СтрокиНачислениеНДС = НачисленияСПолученногоАванса.НайтиСтроки(СтруктураОтбораАванса);
				
				ЗаполнитьЗначенияСвойств(СтруктураОтбораЗачета, СтруктураОтбораАванса);
				СтрокиЗачетАванса = ЗачетыАвансов.НайтиСтроки(СтруктураОтбораЗачета);
				
				ВыполнитьЗачетАвансаПолученного(ПараметрыРасчета, СтрокаАванса, СтрокиНачислениеНДС, СтрокиЗачетАванса, НДСАвансыПолученные, ПараметрыРаспределенияЗачета);
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	2                                           КАК Приоритет,
	|	НДСАвансыПолученные.Регистратор             КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	НДСАвансыПолученные.Период                  КАК Период,
	|	НДСАвансыПолученные.Организация             КАК Организация,
	|	НДСАвансыПолученные.ДокументОплаты          КАК ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент              КАК Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение           КАК Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС               КАК СтавкаНДС,
	|	НДСАвансыПолученные.СуммаБезНДС             КАК СуммаБезНДС,
	|	НДСАвансыПолученные.НДС                     КАК НДС,
	|	НДСАвансыПолученные.НДСУпр                  КАК НДСУпр,
	|	НДСАвансыПолученные.Событие                 КАК Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса    КАК ДокументЗачетаАванса,
	|	НДСАвансыПолученные.РегламентнаяОперация    КАК РегламентнаяОперация,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи  КАК ИдентификаторФинЗаписи,
	|	НДСАвансыПолученные.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыПолученные.Сторно                  КАК Сторно,
	|	НДСАвансыПолученные.Исправление             КАК Исправление,
	|	НДСАвансыПолученные.ДатаЗачетаАванса        КАК ДатаЗачетаАванса,
	|	НДСАвансыПолученные.ОбъектРасчетов          КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыПолученныеЗачеты
	|ИЗ
	|	&НДСАвансыПолученные КАК НДСАвансыПолученные
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НДСАвансыПолученные", НДСАвансыПолученные);
	Запрос.Выполнить();
	
	Возврат "НДСАвансыПолученныеЗачеты";
	
КонецФункции

Процедура ВыполнитьЗачетАвансаПолученного(ПараметрыРасчета, СтрокаАвансаПоДокументуОплаты, СтрокиАвансаНачислениеНДС, СтрокиЗачетаАванса, ТаблицаНДСАвансыПолученные, ПараметрыРаспределенияЗачета)
	
	ТолькоРаспределение = ПараметрыРаспределенияЗачета.ТолькоРаспределение;
	ОбновитьИдентификатор = ПараметрыРаспределенияЗачета.ОбновитьИдентификатор;
	ОпределятьПодразделениеПоПогашенномуАвансу = ПараметрыРаспределенияЗачета.ОпределятьПодразделениеПоПогашенномуАвансу;

	Если СтрокиАвансаНачислениеНДС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	АвансМассивСуммаБезНДС = Новый Массив();
	АвансМассивСуммаНДС = Новый Массив();
	АвансМассивСуммаНДСУпр = Новый Массив();
	
	АвансСуммаБезНДС    = 0;
	АвансСуммаСНДС      = 0;
	
	ПравилоОтбораАванса = СтрокиАвансаНачислениеНДС[0].ПравилоОтбораАванса;
	ДатаНачисления = СтрокиАвансаНачислениеНДС[0].Дата;
	Исправление = СтрокиАвансаНачислениеНДС[0].Исправление;
	ДатаИсправления = СтрокиАвансаНачислениеНДС[0].ДатаИсправления;
	
	Для Каждого СтрокаАванса Из СтрокиАвансаНачислениеНДС Цикл
		АвансМассивСуммаБезНДС.Добавить(СтрокаАванса.СуммаБезНДС);
		АвансМассивСуммаНДС.Добавить(СтрокаАванса.НДС);
		АвансМассивСуммаНДСУпр.Добавить(СтрокаАванса.НДСУпр);
		
		АвансСуммаБезНДС    = АвансСуммаБезНДС + СтрокаАванса.СуммаБезНДС;
		АвансСуммаСНДС      = АвансСуммаСНДС + СтрокаАванса.СуммаБезНДС + СтрокаАванса.НДС;
	КонецЦикла; 
	
	НезачтеннаяСуммаАванса = СтрокаАвансаПоДокументуОплаты.Аванс;
	
	Для Каждого ПогашенныйАвансПоСФ Из СтрокиЗачетаАванса Цикл
		
		Если АвансСуммаСНДС = 0 Тогда
			Прервать;
		КонецЕсли;
		
		//Если ПогашенныйАвансПоСФ.СуммаЗачета = 0 Тогда
		//	Продолжить;
		//КонецЕсли;
		
		Если Не ТолькоРаспределение Тогда
			НезачтеннаяСуммаАванса = НезачтеннаяСуммаАванса - ПогашенныйАвансПоСФ.СуммаЗачета;
		КонецЕсли;
		
		//Отбор лишних зачетов аванса
		ДатаЗачетаАванса = ПогашенныйАвансПоСФ.Период;
		
		Если Не Исправление И ДатаЗачетаАванса < ПараметрыРасчета.НачалоПериода Тогда
			Продолжить;
		КонецЕсли;
		
		Если Исправление 
			 И ДатаЗачетаАванса < ПараметрыРасчета.НачалоПериода
			 И ДатаИсправления < ПараметрыРасчета.НачалоПериода Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПравилоОтбораАванса <> Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты 
			 И КонецДня(ДатаЗачетаАванса) < НачалоДня(ДатаНачисления) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПравилоОтбораАванса <> Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты
			 И НачалоДня(ДатаЗачетаАванса) = НачалоДня(ДатаНачисления) Тогда
			// Когда аванс и зачет аванса прошли в один день, то зачет аванса не нужен, в СФ на аванс он уже учтен.
			Продолжить;
		КонецЕсли;
		
		СуммаЗачетаПрочее = 0;
		Если ПогашенныйАвансПоСФ.ЕстьДанныеПоВыручке Тогда
			
			// Определим по пропорции сумму зачета, которая относится к реализации собственных товаров с НДС.
			Коэффициенты = Новый Массив;
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СобственнаяВыручкаСНДС);
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СобственнаяВыручкаБезНДС);
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.КомиссионнаяВыручкаСНДС);
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.КомиссионнаяВыручкаБезНДС);
			
			РаспределениеСуммыЗачета = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											ПогашенныйАвансПоСФ.СуммаЗачета,
											Коэффициенты);
			СуммаЗачета = ?(ПогашенныйАвансПоСФ.СуммаЗачета > 0, РаспределениеСуммыЗачета[0], 0);
			СуммаЗачетаПрочее = ПогашенныйАвансПоСФ.СуммаЗачета - СуммаЗачета;
		Иначе
			СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета;
		КонецЕсли;
		
		СуммаСНДС = Мин(СуммаЗачета, АвансСуммаСНДС);
		ОстатокСуммыАвансаСНДС = (АвансСуммаСНДС - СуммаСНДС);
		Если ОстатокСуммыАвансаСНДС > НезачтеннаяСуммаАванса Тогда
			СуммаКорректировки = Макс(0, ОстатокСуммыАвансаСНДС - НезачтеннаяСуммаАванса - СуммаЗачетаПрочее);
				// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДС = СуммаСНДС + СуммаКорректировки;
		КонецЕсли;
		
		Если СуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаБезНДС    = Окр(АвансСуммаБезНДС * СуммаСНДС / АвансСуммаСНДС, 2);
		СуммаНДС       = СуммаСНДС - СуммаБезНДС; 
		
		Если Не ТолькоРаспределение Тогда
			АвансСуммаБезНДС = АвансСуммаБезНДС - СуммаБезНДС;
			АвансСуммаСНДС   = АвансСуммаСНДС - СуммаСНДС;
		КонецЕсли;
		
		Если СуммаБезНДС > 0 Тогда
			МассивСуммаБезНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаБезНДС, АвансМассивСуммаБезНДС);
		КонецЕсли;
		
		Если СуммаНДС > 0 Тогда
			МассивСуммаНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДС, АвансМассивСуммаНДС);
		КонецЕсли; 
		
		Счетчик = -1;
		
		Для Каждого СтрокаАванса Из СтрокиАвансаНачислениеНДС Цикл
			
			Счетчик = Счетчик + 1;
			
			Результат_СуммаБезНДС = ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0);
			Результат_НДС = ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0);
			
			Если Результат_СуммаБезНДС = 0 
				 И Результат_НДС = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаРезультата = ТаблицаНДСАвансыПолученные.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаАванса, СтрСоединить(ПараметрыРасчета.МассивИзмеренийРегистра, ","));

			СтрокаРезультата.Регистратор = СтрокаАванса.Ссылка;
			СтрокаРезультата.ДокументЗачетаАванса = ПогашенныйАвансПоСФ.ДокументЗачетаАванса;
			СтрокаРезультата.РегламентнаяОперация = Истина;
			СтрокаРезультата.НастройкаХозяйственнойОперации = Справочники.НастройкиХозяйственныхОпераций.ВычетНДССПолученногоАванса;
 			СтрокаРезультата.Исправление = Исправление;
			СтрокаРезультата.ДатаЗачетаАванса = ДатаЗачетаАванса;
			
			Если Исправление Тогда
				СтрокаРезультата.Период = Макс(ДатаИсправления, Макс(ДатаЗачетаАванса, ПараметрыРасчета.НачалоПериода));
			Иначе
				СтрокаРезультата.Период = Макс(ДатаНачисления, Макс(ДатаЗачетаАванса, ПараметрыРасчета.НачалоПериода));
			КонецЕсли;
			
			Если ТолькоРаспределение Тогда
				СтрокаРезультата.ОбъектРасчетов = ПогашенныйАвансПоСФ.ОбъектРасчетов;
				СтрокаРезультата.Контрагент = ПогашенныйАвансПоСФ.Контрагент; 
				Если ОпределятьПодразделениеПоПогашенномуАвансу = Ложь Тогда
					СтрокаРезультата.НаправлениеДеятельности = ПогашенныйАвансПоСФ.НаправлениеДеятельности;
					СтрокаРезультата.Подразделение = ПогашенныйАвансПоСФ.Подразделение;
				Иначе
					СтрокаРезультата.НаправлениеДеятельности = СтрокаАванса.НаправлениеДеятельности;
					СтрокаРезультата.Подразделение = СтрокаАванса.Подразделение;
				КонецЕсли;
			КонецЕсли;
			
			Если Не ОбновитьИдентификатор Тогда
				СтрокаРезультата.ИдентификаторФинЗаписи = ПогашенныйАвансПоСФ.ИдентификаторФинЗаписи;
			Иначе
				СтрокаРезультата.ИдентификаторФинЗаписи = Строка(Новый УникальныйИдентификатор());
			КонецЕсли;
			
			СтрокаРезультата.СуммаБезНДС = Результат_СуммаБезНДС;
			СтрокаРезультата.НДС = Результат_НДС;
			// Зачтем НДС упр. пропорционально НДС регл.
			Если СтрокаРезультата.НДС <> 0 
					И (СтрокаАванса.НДСУпр <> 0 ИЛИ ТолькоРаспределение) Тогда
					
				Если ТолькоРаспределение И ПогашенныйАвансПоСФ.СуммаЗачета<>0 Тогда
					СтрокаРезультата.НДСУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр * СтрокаРезультата.НДС/ПогашенныйАвансПоСФ.СуммаЗачета;
					СуммаБезНДСУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр * СтрокаРезультата.СуммаБезНДС/ПогашенныйАвансПоСФ.СуммаЗачета;
					ПогашенныйАвансПоСФ.СуммаЗачетаУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр - (СуммаБезНДСУпр + СтрокаРезультата.НДСУпр);
				Иначе
					КоэффициентыРаспределенияНДСУпр = Новый Массив;
					КоэффициентыРаспределенияНДСУпр.Добавить(СтрокаРезультата.НДС);
					КоэффициентыРаспределенияНДСУпр.Добавить(СтрокаАванса.НДС - СтрокаРезультата.НДС);
					МассивНДСУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СтрокаАванса.НДСУпр, КоэффициентыРаспределенияНДСУпр);
					СтрокаРезультата.НДСУпр = МассивНДСУпр[0];
				КонецЕсли;
			КонецЕсли;
			
			ВидыОперацийПереносаАванса = Новый Массив;
			ВидыОперацийПереносаАванса.Добавить(Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПереносАвансаКлиентаМеждуДвумяОрганизациями);
			ВидыОперацийПереносаАванса.Добавить(Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПереносАвансаПоставщикуМеждуДвумяОрганизациями);
			
			Если ТипЗнч(ПогашенныйАвансПоСФ.ДокументЗачетаАванса) = Тип("ДокументСсылка.ВзаимозачетЗадолженности")
				И ВидыОперацийПереносаАванса.Найти(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПогашенныйАвансПоСФ.ДокументЗачетаАванса, "ВидОперации")) <> Неопределено Тогда
				СтрокаРезультата.Событие = Перечисления.СобытияНДСАвансы.ПереносАванса;
			ИначеЕсли ТипЗнч(ПогашенныйАвансПоСФ.ДокументЗачетаАванса) = Тип("ДокументСсылка.ВзаимозачетЗадолженности")
				И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПогашенныйАвансПоСФ.ДокументЗачетаАванса, "ВидОперации") = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.БартерМеждуОрганизациями Тогда
				СтрокаРезультата.Событие = Перечисления.СобытияНДСАвансы.ВычетПриЗачетеАванса;
			ИначеЕсли ПогашенныйАвансПоСФ.СобытиеЗнак < 0 Тогда
				СтрокаРезультата.Событие = Перечисления.СобытияНДСАвансы.ВычетПриВозвратеАванса;
			Иначе
				СтрокаРезультата.Событие = Перечисления.СобытияНДСАвансы.ВычетПриЗачетеАванса;
			КонецЕсли;
			
			// Уменьшим суммы в исходных строках аванса и зачета аванса на зачтенную сумму.
			СтрокаАванса.СуммаБезНДС = СтрокаАванса.СуммаБезНДС - СтрокаРезультата.СуммаБезНДС;
			СтрокаАванса.НДС = СтрокаАванса.НДС - СтрокаРезультата.НДС;
			СтрокаАванса.НДСУпр = СтрокаАванса.НДСУпр - СтрокаРезультата.НДСУпр;
			
			ПогашенныйАвансПоСФ.СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета - (СтрокаРезультата.СуммаБезНДС + СтрокаРезультата.НДС); 
			СтрокаАвансаПоДокументуОплаты.Аванс = СтрокаАвансаПоДокументуОплаты.Аванс - (СтрокаРезультата.СуммаБезНДС + СтрокаРезультата.НДС);
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция РассчитатьЗаписиНДСАвансыПолученныеСохранение(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыПолученные)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	МассивТекстовРегистраторыЗапись.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСАвансыПолученные.Регистратор
	|ИЗ
	|	&НДСАвансыПолученные КАК НДСАвансыПолученные";
	Для Каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСАвансыПолученные Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&НДСАвансыПолученные", ИмяТаблицыЗаписей);
		МассивТекстовРегистраторыЗапись.Добавить(ТекстЗапроса);
	КонецЦикла;
	
	МассивТекстовРегистраторыЗапись.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСАвансыПолученные.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСАвансыПолученные КАК НДСАвансыПолученные");
	
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	ТекстРегистраторыЗапись = ТекстРегистраторыЗапись +
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	ТекстЗапросаСохранение =
	"ВЫБРАТЬ
	|	0                                                   КАК Приоритет,
	|	НДСАвансыПолученные.Период                          КАК Период,
	|	НДСАвансыПолученные.Регистратор                     КАК Регистратор,
	|	НДСАвансыПолученные.ВидДвижения                     КАК ВидДвижения,
	|	НДСАвансыПолученные.Организация                     КАК Организация,
	|	НДСАвансыПолученные.ДокументОплаты                  КАК ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент                      КАК Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура         КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение                   КАК Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС                       КАК СтавкаНДС,
	|	НДСАвансыПолученные.ОбъектРасчетов                  КАК ОбъектРасчетов,
	|	НДСАвансыПолученные.СуммаБезНДС                     КАК СуммаБезНДС,
	|	НДСАвансыПолученные.НДС                             КАК НДС,
	|	НДСАвансыПолученные.НДСУпр                          КАК НДСУпр,
	|	НДСАвансыПолученные.Событие                         КАК Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса            КАК ДокументЗачетаАванса,
	|	НДСАвансыПолученные.РегламентнаяОперация            КАК РегламентнаяОперация,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	НДСАвансыПолученные.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыПолученные.Сторно                          КАК Сторно
	|ПОМЕСТИТЬ НДСАвансыПолученныеСохранение
	|ИЗ
	|	РегистрНакопления.НДСАвансыПолученные КАК НДСАвансыПолученные
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		НДСАвансыПолученные.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация = НДСАвансыПолученные.Организация
	|		И Задания.СчетФактура = НДСАвансыПолученные.ДокументОплаты
	|ГДЕ
	|	НДСАвансыПолученные.Период < &НачалоПериода
	|		ИЛИ НДСАвансыПолученные.Период > &КонецПериода
	|		ИЛИ НЕ НДСАвансыПолученные.РегламентнаяОперация
	|		ИЛИ Задания.СчетФактура ЕСТЬ NULL
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстРегистраторыЗапись + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстЗапросаСохранение;
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСАвансыПолученныеСохранение";
	
КонецФункции

Процедура ПолучитьТекущиеРегистраторыНДСАвансыПолученные(ПараметрыРасчета) 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСАвансыПолученные.Регистратор КАК Регистратор,
	|	НДСАвансыПолученные.Организация КАК Организация,
	|	НДСАвансыПолученные.Период      КАК Период
	|ПОМЕСТИТЬ ТекущиеРегистраторыНДСАвансыПолученные
	|ИЗ
	|	РегистрНакопления.НДСАвансыПолученные КАК НДСАвансыПолученные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО (Задания.Организация = НДСАвансыПолученные.Организация)
	|			И (Задания.СчетФактура = НДСАвансыПолученные.ДокументОплаты)
	|ГДЕ
	|	НДСАвансыПолученные.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСАвансыПолученные.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаписатьНДСАвансыПолученные(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыПолученные)
	
	МассивТекстовДанных = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	НДСАвансыПолученные.Приоритет                       КАК Приоритет,
	|	НДСАвансыПолученные.Период                          КАК Период,
	|	НДСАвансыПолученные.Регистратор                     КАК Регистратор,
	|	НДСАвансыПолученные.ВидДвижения                     КАК ВидДвижения,
	|	НДСАвансыПолученные.Организация                     КАК Организация,
	|	НДСАвансыПолученные.ДокументОплаты                  КАК ДокументОплаты,
	|	НДСАвансыПолученные.Контрагент                      КАК Контрагент,
	|	НДСАвансыПолученные.ИсправленныйСчетФактура         КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученные.Подразделение                   КАК Подразделение,
	|	НДСАвансыПолученные.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НДСАвансыПолученные.СтавкаНДС                       КАК СтавкаНДС,
	|	НДСАвансыПолученные.ОбъектРасчетов                  КАК ОбъектРасчетов,
	|	НДСАвансыПолученные.СуммаБезНДС                     КАК СуммаБезНДС,
	|	НДСАвансыПолученные.НДС                             КАК НДС,
	|	НДСАвансыПолученные.НДСУпр                          КАК НДСУпр,
	|	НДСАвансыПолученные.Событие                         КАК Событие,
	|	НДСАвансыПолученные.ДокументЗачетаАванса            КАК ДокументЗачетаАванса,
	|	НДСАвансыПолученные.РегламентнаяОперация            КАК РегламентнаяОперация,
	|	НДСАвансыПолученные.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	НДСАвансыПолученные.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыПолученные.Сторно                          КАК Сторно
	|ИЗ
	|	&НДСАвансыПолученные КАК НДСАвансыПолученные";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСАвансыПолученные Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&НДСАвансыПолученные", ИмяТаблицыЗаписей);
		МассивТекстовДанных.Добавить(ТекстЗапроса);
	КонецЦикла;
	ТекстДанныеДляЗаписи = СтрСоединить(МассивТекстовДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		ТекстДанныеДляЗаписи
		+ "
		|
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор,
		|	Период,
		|	Приоритет
		|
		|ИТОГИ ПО
		|	Регистратор
		|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСАвансыПолученные.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		// Проверка дат запрета не производится, т.к. сюда попадаем при выполнении заданий, 
		// а при создании заданий даты запрета контролируются. 
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьНДСАвансыПолученные(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыПолученные)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	МассивТекстовРегистраторыЗапись.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСАвансыПолученные.Регистратор
	|ИЗ
	|	&ИмяТаблицы КАК НДСАвансыПолученные";
	Для Каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСАвансыПолученные Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", ИмяТаблицыЗаписей);
		МассивТекстовРегистраторыЗапись.Добавить(ТекстЗапроса);
	КонецЦикла;
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	ТекстРегистраторыЗапись = ТекстРегистраторыЗапись +
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	ТекстУстаревшиеРегистраторы = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСАвансыПолученные КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО
	|		УстаревшиеРегистраторы.Регистратор = РегистраторыЗапись.Регистратор
	|
	|ГДЕ
	|	РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстРегистраторыЗапись + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстУстаревшиеРегистраторы;
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСАвансыПолученные.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ФормированиеНДСАвансыВыданные

Процедура СформироватьНДСАвансыВыданные(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Задания КАК Задания
	|ГДЕ
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.СчетФактураПолученныйАванс КАК СФ
	|		ГДЕ
	|			СФ.ДокументОснование = Задания.СчетФактура)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	Иначе
		ПараметрыРасчета.РасчетАвансовВыданных = Истина;
	КонецЕсли;
	
	МассивИзмерений = Новый Массив;
	Для Каждого Измерение Из Метаданные.РегистрыНакопления.НДСАвансыВыданные.Измерения Цикл
		МассивИзмерений.Добавить(Измерение.Имя);
	КонецЦикла;
	ПараметрыРасчета.МассивИзмеренийРегистра = МассивИзмерений;
	
	ПолучитьТекущиеРегистраторыНДСАвансыВыданные(ПараметрыРасчета);
		
	ПолучитьСчетаФактурыПолученныеАванс(ПараметрыРасчета);
	ПолучитьИсправительныеСчетаФактурыПолученныеАванс(ПараметрыРасчета);
	
	ПолучитьЗачетыАвансовВыданных(ПараметрыРасчета);
	
	ИменаТаблицЗаписейНДСАвансыВыданные = Новый Массив;
	ИменаТаблицЗаписейНДСАвансыВыданные.Добавить(РассчитатьНДСАвансыВыданныеПоИСФ(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСАвансыВыданные.Добавить(РассчитатьНДСАвансыВыданныеПереносыРасход(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСАвансыВыданные.Добавить(РассчитатьНДСАвансыВыданныеПереносыПриход(ПараметрыРасчета));

	ИменаТаблицЗаписейНДСАвансыВыданные.Добавить(РассчитатьНДСАвансыВыданныеЗачеты(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСАвансыВыданные.Добавить(РассчитатьЗаписиНДСАвансыВыданныеСохранение(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыВыданные));

	ЗаписатьНДСАвансыВыданные(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыВыданные);
	ОчиститьНДСАвансыВыданные(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыВыданные);
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыНДСАвансыВыданные(ПараметрыРасчета) 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСАвансыВыданные.Регистратор КАК Регистратор,
	|	НДСАвансыВыданные.Организация КАК Организация,
	|	НДСАвансыВыданные.Период      КАК Период
	|ПОМЕСТИТЬ ТекущиеРегистраторыНДСАвансыВыданные
	|ИЗ
	|	РегистрНакопления.НДСАвансыВыданные КАК НДСАвансыВыданные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО (Задания.Организация = НДСАвансыВыданные.Организация)
	|			И (Задания.СчетФактура = НДСАвансыВыданные.ДокументОплаты)
	|ГДЕ
	|	НДСАвансыВыданные.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСАвансыВыданные.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьСчетаФактурыПолученныеАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураПолученныйАванс.Организация         КАК Организация,
	|	СчетФактураПолученныйАванс.Контрагент          КАК Контрагент,
	|	СчетФактураПолученныйАванс.ДокументОснование   КАК ДокументОплаты,
	|	СчетФактураПолученныйАванс.Дата                КАК Период,
	|	СчетФактураПолученныйАванс.Ссылка              КАК Ссылка,
	|	СчетФактураПолученныйАванс.Дата                КАК Дата
	|ПОМЕСТИТЬ СчетаФактурыПолученныеАванс
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация = СчетФактураПолученныйАванс.Организация
	|		И Задания.СчетФактура = СчетФактураПолученныйАванс.ДокументОснование
	|ГДЕ
	|	СчетФактураПолученныйАванс.Проведен
	|	И НЕ СчетФактураПолученныйАванс.Исправление
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты,
	|	Контрагент
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьИсправительныеСчетаФактурыПолученныеАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсправленныйСчетФактура.Организация               КАК Организация,
	|	ИсправленныйСчетФактура.ДокументОснование         КАК ДокументОплаты,
	|	ИсправленныйСчетФактура.Контрагент                КАК Контрагент,
	|	ИсправленныйСчетФактура.Ссылка                    КАК ИсправленныйСчетФактура,
	|	ИсправленныйСчетФактура.Дата                      КАК Период,
	|	ИсправленныйСчетФактура.Дата                      КАК ДатаИсправления,
	|	ИсправленныйСчетФактура.НомерИсправления          КАК НомерИсправления,
	|	ИсправленныйСчетФактура.СчетФактураОснование.Дата КАК Дата,
	|	ИсправленныйСчетФактура.Ссылка                    КАК Ссылка
	|ПОМЕСТИТЬ ИсправленныеСчетаФактурыПолученныеАванс
	|ИЗ
	|	Задания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс КАК ИсправленныйСчетФактура
	|	ПО
	|		Задания.Организация = ИсправленныйСчетФактура.Организация
	|		И Задания.СчетФактура = ИсправленныйСчетФактура.ДокументОснование
	|		И ИсправленныйСчетФактура.Исправление
	|		И ИсправленныйСчетФактура.Проведен
	|		И ИсправленныйСчетФактура.Дата <= &КонецПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс КАК ДругиеИсправленныеСчетаФактуры
	|	ПО 
	|		ИсправленныйСчетФактура.Организация = ДругиеИсправленныеСчетаФактуры.Организация
	|		И ИсправленныйСчетФактура.ДокументОснование = ДругиеИсправленныеСчетаФактуры.ДокументОснование
	|		И ИсправленныйСчетФактура.НомерИсправления < ДругиеИсправленныеСчетаФактуры.НомерИсправления
	|		И ДругиеИсправленныеСчетаФактуры.Проведен
	|		И ДругиеИсправленныеСчетаФактуры.Исправление
	|		И ДругиеИсправленныеСчетаФактуры.Дата <= &КонецПериода
	|ГДЕ
	|	ДругиеИсправленныеСчетаФактуры.Ссылка ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсправленныеСчетаФактурыПолученныеАванс.Организация             КАК Организация,
	|	ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты          КАК ДокументОплаты,
	|	ИсправленныеСчетаФактурыПолученныеАванс.Контрагент              КАК Контрагент,
	|	ИсправленныеСчетаФактурыПолученныеАванс.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ИсправленныеСчетаФактурыПолученныеАванс.Период                  КАК Период,
	|	ИсправленныеСчетаФактурыПолученныеАванс.ДатаИсправления         КАК ДатаИсправления,
	|	ИсправленныеСчетаФактурыПолученныеАванс.НомерИсправления        КАК НомерИсправления,
	|	ИсправленныеСчетаФактурыПолученныеАванс.Дата                    КАК Дата,
	|	ИсправленныеСчетаФактурыПолученныеАванс.Ссылка                  КАК Ссылка
	|ПОМЕСТИТЬ ИсправленныеСчетаФактурыПолученныеАвансПерерасчет
	|ИЗ
	|	ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактурыПолученныеАванс
	|ГДЕ
	|	ИсправленныеСчетаФактурыПолученныеАванс.ДатаИсправления МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты,
	|	Контрагент
	|;
	|
	|/////////////////////////////////////////////////////////////////////// 
	|ВЫБРАТЬ
	|	МИНИМУМ(ИсправленныеСчетаФактурыПолученныеАванс.Дата) КАК Дата
	|ИЗ
	|	ИсправленныеСчетаФактурыПолученныеАвансПерерасчет КАК ИсправленныеСчетаФактурыПолученныеАванс
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();

	Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Дата) Тогда
		ПараметрыРасчета.ИСФНачалоПериода = НачалоМесяца(ВыборкаДетальныеЗаписи.Дата);
		ПараметрыРасчета.ИСФКонецПериода = ДобавитьМесяц(ПараметрыРасчета.КонецПериода, -1);
	КонецЕсли;
	
КонецПроцедуры

Функция АвансыВыданныеПоДокументамОплаты(ПараметрыРасчета)
	
	Если Не РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(
		ПараметрыРасчета.МенеджерВременныхТаблиц,
		"АвансыВыданные_Возникновения") Тогда

		ПараметрыРасчетаАвансов = ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
		
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "Задания";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "СчетФактура";
		ПараметрыРасчетаАвансов.ВключитьДанныеФинансовыхИнструментов                  = Истина;
		ПараметрыРасчетаАвансов.АнализироватьУпрУчетДополнительно                     = Истина;
		
		ПодготовитьВТ_АвансыВыданные_Возникновения(
				ПараметрыРасчета.МенеджерВременныхТаблиц,
				ПараметрыРасчетаАвансов,
				ПараметрыРасчета.ТаблицаНастроек);
				
		//Для ИСФ рассчитывать данные погашений нужно начиная с даты документа оплаты
		ЕстьИСФ = Не ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["ИсправленныеСчетаФактурыПолученныеАвансПерерасчет"].ПолучитьДанные().Пустой();
		Если ЕстьИСФ Тогда
	
			ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.ИСФНачалоПериода;
			ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.ИСФКонецПериода;
			ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ИсправленныеСчетаФактурыПолученныеАвансПерерасчет";
			ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";

			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Расчеты.Организация               КАК Организация,
			|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
			|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
			|	Расчеты.Контрагент                КАК Контрагент,
			|	Расчеты.Договор                   КАК Договор,
			|	Расчеты.ТипНалогообложения        КАК ТипНалогообложения,
			|	Расчеты.ДатаАванса                КАК ДатаАванса,
			|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
			|	Расчеты.СуммаАванса               КАК СуммаАванса,
			|	Расчеты.СуммаАвансаВал            КАК СуммаАвансаВал,
			|	Расчеты.СуммаАвансаУпр            КАК СуммаАвансаУпр
			|ПОМЕСТИТЬ АвансыВыданные_ВозникновенияПромежуточная
			|ИЗ
			|	АвансыВыданные_Возникновения КАК Расчеты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АвансыВыданные_Возникновения
			|;";
	
			Запрос.Выполнить();
			
			ПодготовитьВТ_АвансыВыданные_Возникновения(
				ПараметрыРасчета.МенеджерВременныхТаблиц,
				ПараметрыРасчетаАвансов,
				ПараметрыРасчета.ТаблицаНастроек);
				
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Расчеты.Организация               КАК Организация,
			|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
			|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
			|	Расчеты.Контрагент                КАК Контрагент,
			|	Расчеты.Договор                   КАК Договор,
			|	Расчеты.ТипНалогообложения	      КАК ТипНалогообложения,
			|	Расчеты.ДатаАванса                КАК ДатаАванса,
			|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
			|	Расчеты.СуммаАванса               КАК СуммаАванса,
			|	Расчеты.СуммаАвансаВал            КАК СуммаАвансаВал,
			|	Расчеты.СуммаАвансаУпр            КАК СуммаАвансаУпр	
			|ПОМЕСТИТЬ АвансыВыданные_ВозникновенияИтог
			|ИЗ
			|	АвансыВыданные_ВозникновенияПромежуточная КАК Расчеты
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Расчеты.Организация               КАК Организация,
			|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
			|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
			|	Расчеты.Контрагент                КАК Контрагент,
			|	Расчеты.Договор                   КАК Договор,
			|	Расчеты.ТипНалогообложения	      КАК ТипНалогообложения,
			|	Расчеты.ДатаАванса                КАК ДатаАванса,
			|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
			|	Расчеты.СуммаАванса               КАК СуммаАванса,
			|	Расчеты.СуммаАвансаВал            КАК СуммаАвансаВал,
			|	Расчеты.СуммаАвансаУпр            КАК СуммаАвансаУпр	
			|ИЗ
			|	АвансыВыданные_Возникновения КАК Расчеты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АвансыВыданные_ВозникновенияПромежуточная
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АвансыВыданные_Возникновения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Расчеты.Организация               КАК Организация,
			|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
			|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
			|	Расчеты.Контрагент                КАК Контрагент,
			|	Расчеты.Договор                   КАК Договор,
			|	Расчеты.ТипНалогообложения        КАК ТипНалогообложения,
			|	Расчеты.ДатаАванса                КАК ДатаАванса,
			|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
			|	СУММА(Расчеты.СуммаАванса)        КАК СуммаАванса,
			|	СУММА(Расчеты.СуммаАвансаВал)     КАК СуммаАвансаВал,
			|	СУММА(Расчеты.СуммаАвансаУпр)     КАК СуммаАвансаУпр
			|ПОМЕСТИТЬ АвансыВыданные_Возникновения
			|ИЗ
			|	АвансыВыданные_ВозникновенияИтог КАК Расчеты
			|
			|СГРУППИРОВАТЬ ПО
			|	Расчеты.Организация,
			|	Расчеты.РасчетныйДокумент,
			|	Расчеты.ДокументРегистратор,
			|	Расчеты.ОбъектРасчетов,
			|	Расчеты.НаправлениеДеятельности,
			|	Расчеты.Контрагент,
			|	Расчеты.Договор,
			|	Расчеты.ТипНалогообложения,
			|	Расчеты.ДатаАванса,
			|	Расчеты.ВалютаДокумента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АвансыВыданные_ВозникновенияИтог
			|";
	
			Запрос.Выполнить();
	
		КонецЕсли;
	КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
	|	Расчеты.ДокументОплаты КАК ДокументОплаты,
	|	Расчеты.Контрагент КАК Контрагент,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(Расчеты.Аванс) КАК Аванс,
	|	СУММА(Расчеты.АвансУпр) КАК АвансУпр
	|ИЗ
	|	(ВЫБРАТЬ
	|		Расчеты.РасчетныйДокумент КАК ДокументОплаты,
	|		Расчеты.Контрагент КАК Контрагент,
	|		Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		Расчеты.СуммаАванса КАК Аванс,
	|		Расчеты.СуммаАвансаУпр КАК АвансУпр
	|	ИЗ
	|		АвансыВыданные_Возникновения КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|			ПО Расчеты.Организация = Задания.Организация
	|				И Расчеты.РасчетныйДокумент = Задания.СчетФактура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.ДокументОплаты,
	|		ДД.Контрагент,
	|		ДД.НаправлениеДеятельности,
	|		ДД.ПредоплатаРегл,
	|		ДД.ПредоплатаУпр
	|	ИЗ
	|		ПереносыАвансовВыданных КАК ДД) КАК Расчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.Контрагент,
	|	Расчеты.ДокументОплаты";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПолучитьЗачетыАвансовВыданных(ПараметрыРасчета)
	
	ПараметрыРасчетаАвансов = ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
	
	ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.НачалоПериода;
	ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
	ПараметрыРасчетаАвансов.Организации                                           = ПараметрыРасчета.МассивОрганизаций;
	ПараметрыРасчетаАвансов.ВключитьДанныеФинансовыхИнструментов                  = Истина;
	ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "Задания";
	ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "СчетФактура";
	
	ПодготовитьВТ_АвансыВыданные_Погашения(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Зачеты.ДокументРегистратор     КАК Регистратор,
	|	Зачеты.ДатаПогашения           КАК Период,
	|	Зачеты.Организация             КАК Организация,
	|	Зачеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Зачеты.Контрагент              КАК Контрагент,
	|	Зачеты.РасчетныйДокумент       КАК ДокументОплаты,
	|	Зачеты.ДокументРегистратор     КАК ДокументЗачетаАванса,
	|	Зачеты.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	СУММА(Зачеты.СобытиеЗнак)      КАК СобытиеЗнак,
	|	СУММА(Зачеты.СуммаПогашения)   КАК СуммаЗачета
	|ПОМЕСТИТЬ ЗачетыАвансовВыданных
	|ИЗ
	|	АвансыВыданные_Погашения КАК Зачеты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация   = Зачеты.Организация
	|		И Задания.СчетФактура = Зачеты.РасчетныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	Зачеты.ДокументРегистратор,
	|	Зачеты.ДатаПогашения,
	|	Зачеты.Организация,
	|	Зачеты.НаправлениеДеятельности,
	|	Зачеты.Контрагент,
	|	Зачеты.РасчетныйДокумент,
	|	Зачеты.ОбъектРасчетов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|УНИЧТОЖИТЬ АвансыВыданные_Погашения
	|";
	
	Запрос.Выполнить();
	
	//Для ИСФ рассчитывать данные погашений нужно начиная с даты документа оплаты
	ЕстьИСФ = Не ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["ИсправленныеСчетаФактурыПолученныеАвансПерерасчет"].ПолучитьДанные().Пустой();
	Если ЕстьИСФ Тогда

		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.ИСФНачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.ИСФКонецПериода;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ИсправленныеСчетаФактурыПолученныеАвансПерерасчет";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";
	
		ПодготовитьВТ_АвансыВыданные_Погашения(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);
	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Зачеты.ДокументРегистратор     КАК Регистратор,
		|	Зачеты.ДатаПогашения           КАК Период,
		|	Зачеты.Организация             КАК Организация,
		|	Зачеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Зачеты.Контрагент              КАК Контрагент,
		|	Зачеты.РасчетныйДокумент       КАК ДокументОплаты,
		|	Зачеты.ДокументРегистратор     КАК ДокументЗачетаАванса,
		|	Зачеты.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	СУММА(Зачеты.СобытиеЗнак)      КАК СобытиеЗнак,
		|	СУММА(Зачеты.СуммаПогашения)   КАК СуммаЗачета
		|ПОМЕСТИТЬ ЗачетыАвансовВыданныхПромежуточная
		|ИЗ
		|	АвансыВыданные_Погашения КАК Зачеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|			Задания КАК Задания
		|		ПО 
		|			Задания.Организация = Зачеты.Организация
		|			И Задания.СчетФактура = Зачеты.РасчетныйДокумент
		|
		|СГРУППИРОВАТЬ ПО
		|	Зачеты.ДокументРегистратор,
		|	Зачеты.ДатаПогашения,
		|	Зачеты.Организация,
		|	Зачеты.НаправлениеДеятельности,
		|	Зачеты.Контрагент,
		|	Зачеты.РасчетныйДокумент,
		|	Зачеты.ОбъектРасчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Зачеты.Регистратор             КАК Регистратор,
		|	Зачеты.Период                  КАК Период,
		|	Зачеты.Организация             КАК Организация,
		|	Зачеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Зачеты.Контрагент              КАК Контрагент,
		|	Зачеты.ДокументОплаты          КАК ДокументОплаты,
		|	Зачеты.ДокументЗачетаАванса    КАК ДокументЗачетаАванса,
		|	Зачеты.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Зачеты.СобытиеЗнак             КАК СобытиеЗнак,
		|	Зачеты.СуммаЗачета             КАК СуммаЗачета
		|ИЗ
		|	ЗачетыАвансовВыданных КАК Зачеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АвансыВыданные_Погашения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗачетыАвансовВыданных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Зачеты.Регистратор             КАК Регистратор,
		|	Зачеты.Период                  КАК Период,
		|	Зачеты.Организация             КАК Организация,
		|	Зачеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Зачеты.Контрагент              КАК Контрагент,
		|	Зачеты.ДокументОплаты          КАК ДокументОплаты,
		|	Зачеты.ДокументЗачетаАванса    КАК ДокументЗачетаАванса,
		|	Зачеты.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Зачеты.СобытиеЗнак             КАК СобытиеЗнак,
		|	Зачеты.СуммаЗачета             КАК СуммаЗачета
		|ПОМЕСТИТЬ ЗачетыАвансовВыданных
		|ИЗ
		|	ЗачетыАвансовВыданныхПромежуточная КАК Зачеты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗачетыАвансовВыданныхПромежуточная
		|";

		Запрос.Выполнить();

	КонецЕсли;
	
КонецПроцедуры

Функция РассчитатьНДСАвансыВыданныеПоИСФ(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1                                                  КАК Приоритет,
	|	НДСАвансыВыданные.Регистратор                      КАК Регистратор,
	|	НДСАвансыВыданные.Период                           КАК Период,
	|	НДСАвансыВыданные.ВидДвижения                      КАК ВидДвижения,
	|	НДСАвансыВыданные.Организация                      КАК Организация,
	|	НДСАвансыВыданные.ДокументОплаты                   КАК ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент                       КАК Контрагент,
	|	НДСАвансыВыданные.ОбъектРасчетов                   КАК ОбъектРасчетов,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура          КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение                    КАК Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС                        КАК СтавкаНДС,
	|	СУММА(НДСАвансыВыданные.СуммаБезНДС)               КАК СуммаБезНДС,
	|	СУММА(НДСАвансыВыданные.НДС)                       КАК НДС,
	|	СУММА(НДСАвансыВыданные.НДСУпр)                    КАК НДСУпр,
	|	ИСТИНА                                             КАК РегламентнаяОперация,
	|	ЛОЖЬ                                               КАК Сторно,
	|	НДСАвансыВыданные.Событие                          КАК Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса             КАК ДокументЗачетаАванса,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи           КАК ИдентификаторФинЗаписи,
	|	НДСАвансыВыданные.НастройкаХозяйственнойОперации   КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ НДСАвансыВыданныеПоИСФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка                    КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период                    КАК Период,
	|		НДСАвансыВыданные.ВидДвижения                      КАК ВидДвижения,
	|		НДСАвансыВыданные.Организация                      КАК Организация,
	|		НДСАвансыВыданные.ДокументОплаты                   КАК ДокументОплаты,
	|		НДСАвансыВыданные.Контрагент                       КАК Контрагент,
	|		НДСАвансыВыданные.ОбъектРасчетов                   КАК ОбъектРасчетов,
	|		НДСАвансыВыданные.ИсправленныйСчетФактура          КАК ИсправленныйСчетФактура,
	|		НДСАвансыВыданные.Подразделение                    КАК Подразделение,
	|		НДСАвансыВыданные.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|		НДСАвансыВыданные.СтавкаНДС                        КАК СтавкаНДС,
	|		-НДСАвансыВыданные.СуммаБезНДС                     КАК СуммаБезНДС,
	|		-НДСАвансыВыданные.НДС                             КАК НДС,
	|		-НДСАвансыВыданные.НДСУпр                          КАК НДСУпр,
	|		НДСАвансыВыданные.Событие                          КАК Событие,
	|		НДСАвансыВыданные.ДокументЗачетаАванса             КАК ДокументЗачетаАванса,
	|		НДСАвансыВыданные.ИдентификаторФинЗаписи           КАК ИдентификаторФинЗаписи,
	|		НДСАвансыВыданные.НастройкаХозяйственнойОперации   КАК НастройкаХозяйственнойОперации
	|	ИЗ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСАвансыВыданные КАК НДСАвансыВыданные
	|		ПО
	|			НДСАвансыВыданные.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСАвансыВыданные.ДокументОплаты = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСАвансыВыданные.Период < &НачалоПериода
	|			И НДСАвансыВыданные.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСАвансыВыданные.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка                    КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период                    КАК Период,
	|		НДСАвансыВыданные.ВидДвижения                      КАК ВидДвижения,
	|		НДСАвансыВыданные.Организация                      КАК Организация,
	|		НДСАвансыВыданные.ДокументОплаты                   КАК ДокументОплаты,
	|		НДСАвансыВыданные.Контрагент                       КАК Контрагент,
	|		НДСАвансыВыданные.ОбъектРасчетов                   КАК ОбъектРасчетов,
	|		НДСАвансыВыданные.ИсправленныйСчетФактура          КАК ИсправленныйСчетФактура,
	|		НДСАвансыВыданные.Подразделение                    КАК Подразделение,
	|		НДСАвансыВыданные.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|		НДСАвансыВыданные.СтавкаНДС                        КАК СтавкаНДС,
	|		-НДСАвансыВыданные.СуммаБезНДС                     КАК СуммаБезНДС,
	|		-НДСАвансыВыданные.НДС                             КАК НДС,
	|		-НДСАвансыВыданные.НДСУпр                          КАК НДСУпр,
	|		НДСАвансыВыданные.Событие                          КАК Событие,
	|		НДСАвансыВыданные.ДокументЗачетаАванса             КАК ДокументЗачетаАванса,
	|		НДСАвансыВыданные.ИдентификаторФинЗаписи           КАК ИдентификаторФинЗаписи,
	|		НДСАвансыВыданные.НастройкаХозяйственнойОперации   КАК НастройкаХозяйственнойОперации
	|
	|	ИЗ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСАвансыВыданные КАК НДСАвансыВыданные
	|		ПО
	|			НДСАвансыВыданные.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСАвансыВыданные.ДокументОплаты = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСАвансыВыданные.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НДСАвансыВыданные.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НЕ НДСАвансыВыданные.РегламентнаяОперация
	|			И НДСАвансыВыданные.Активность) КАК НДСАвансыВыданные
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСАвансыВыданные.Регистратор,
	|	НДСАвансыВыданные.Период,
	|	НДСАвансыВыданные.ВидДвижения,
	|	НДСАвансыВыданные.Организация,
	|	НДСАвансыВыданные.ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент,
	|	НДСАвансыВыданные.ОбъектРасчетов,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС,
	|	НДСАвансыВыданные.Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи,
	|	НДСАвансыВыданные.НастройкаХозяйственнойОперации
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСАвансыВыданные.СуммаБезНДС) <> 0 ИЛИ СУММА(НДСАвансыВыданные.НДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСАвансыВыданныеПоИСФ";
	
КонецФункции

Функция ВычетНДСАвансыВыданные(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВычетСВыданногоАванса.Организация             КАК Организация,
	|	ВычетСВыданногоАванса.ДокументОплаты          КАК ДокументОплаты,
	|	ВычетСВыданногоАванса.Контрагент              КАК Контрагент,
	|	ВычетСВыданногоАванса.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	ВычетСВыданногоАванса.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ВычетСВыданногоАванса.Подразделение           КАК Подразделение,
	|	ВычетСВыданногоАванса.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВычетСВыданногоАванса.СтавкаНДС               КАК СтавкаНДС,
	|	СУММА(ВычетСВыданногоАванса.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(ВычетСВыданногоАванса.НДС)              КАК НДС,
	|	СУММА(ВычетСВыданногоАванса.НДСУпр)           КАК НДСУпр
	|ПОМЕСТИТЬ ВычетНДСАвансыВыданные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.Организация              КАК Организация,
	|		ДД.ДокументОплаты           КАК ДокументОплаты,
	|		ДД.Контрагент               КАК Контрагент,
	|		ДД.ОбъектРасчетов           КАК ОбъектРасчетов,
	|		ДД.ИсправленныйСчетФактура  КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение            КАК Подразделение,
	|		ДД.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС                КАК СтавкаНДС,
	|		-ДД.СуммаБезНДСОстаток      КАК СуммаБезНДС,
	|		-ДД.НДСОстаток              КАК НДС,
	|		-ДД.НДСУпрОстаток           КАК НДСУпр
	|	ИЗ
	|		РегистрНакопления.НДСАвансыВыданные.Остатки(
	|		&НачалоПериода, 
	|		(Организация, ДокументОплаты) В (
	|			ВЫБРАТЬ
	|				Задания.Организация,
	|				Задания.СчетФактура
	|			ИЗ
	|				Задания)) КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.ДокументОплаты          КАК ДокументОплаты,
	|		ДД.Контрагент              КАК Контрагент,
	|		ДД.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение           КАК Подразделение,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ                      КАК СуммаБезНДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ                      КАК НДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ                      КАК НДСУпр
	|	ИЗ
	|		РегистрНакопления.НДСАвансыВыданные КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			ДД.Организация = Задания.Организация
	|			И ДД.ДокументОплаты = Задания.СчетФактура
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И НЕ ДД.РегламентнаяОперация
	|		И ДД.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.ДокументОплаты          КАК ДокументОплаты,
	|		ДД.Контрагент              КАК Контрагент,
	|		ДД.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение           КАК Подразделение,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ                      КАК СуммаБезНДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ                      КАК НДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ                      КАК НДСУпр
	|	ИЗ
	|		НДСАвансыВыданныеПоИСФ КАК ДД) КАК ВычетСВыданногоАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВычетСВыданногоАванса.Организация,
	|	ВычетСВыданногоАванса.ДокументОплаты,
	|	ВычетСВыданногоАванса.Контрагент,
	|	ВычетСВыданногоАванса.ОбъектРасчетов,
	|	ВычетСВыданногоАванса.ИсправленныйСчетФактура,
	|	ВычетСВыданногоАванса.Подразделение,
	|	ВычетСВыданногоАванса.НаправлениеДеятельности,
	|	ВычетСВыданногоАванса.СтавкаНДС
	|ИМЕЮЩИЕ
	|	СУММА(ВычетСВыданногоАванса.СуммаБезНДС)  <> 0
	|		ИЛИ СУММА(ВычетСВыданногоАванса.НДС)  <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка,СчетаФактурыПолученныеАванс.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Дата, СчетаФактурыПолученныеАванс.Дата) КАК Дата,
	|	ВЫБОР 
	|		КОГДА НЕ ИсправленныеСчетаФактурыПолученныеАванс.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                          КАК Исправление,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.ДатаИсправления, ДАТАВРЕМЯ(1,1,1)) КАК ДатаИсправления,
	|	ВычетНДСАвансыВыданные.Организация             КАК Организация,
	|	ВычетНДСАвансыВыданные.ДокументОплаты          КАК ДокументОплаты,
	|	ВычетНДСАвансыВыданные.Контрагент              КАК Контрагент,
	|	ВычетНДСАвансыВыданные.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	ВычетНДСАвансыВыданные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ВычетНДСАвансыВыданные.Подразделение           КАК Подразделение,
	|	ВычетНДСАвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВычетНДСАвансыВыданные.СтавкаНДС               КАК СтавкаНДС,
	|	ВычетНДСАвансыВыданные.СуммаБезНДС             КАК СуммаБезНДС,
	|	ВычетНДСАвансыВыданные.НДС                     КАК НДС,
	|	ВычетНДСАвансыВыданные.НДСУпр                  КАК НДСУпр
	|ИЗ
	|	ВычетНДСАвансыВыданные КАК ВычетНДСАвансыВыданные
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыПолученныеАванс КАК СчетаФактурыПолученныеАванс
	|	ПО
	|		ВычетНДСАвансыВыданные.Организация = СчетаФактурыПолученныеАванс.Организация
	|		И ВычетНДСАвансыВыданные.ДокументОплаты = СчетаФактурыПолученныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ВычетНДСАвансыВыданные.ДокументОплаты) В (ТИП(Документ.ВводОстатков),
	|																			ТИП(Документ.АвансовыйОтчет))
	|				ТОГДА ВычетНДСАвансыВыданные.Контрагент = СчетаФактурыПолученныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактурыПолученныеАванс
	|	ПО
	|		ВычетНДСАвансыВыданные.Организация = ИсправленныеСчетаФактурыПолученныеАванс.Организация
	|		И ВычетНДСАвансыВыданные.ДокументОплаты = ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ВычетНДСАвансыВыданные.ДокументОплаты) В (ТИП(Документ.ВводОстатков),
	|																			ТИП(Документ.АвансовыйОтчет))
	|					ТОГДА ВычетНДСАвансыВыданные.Контрагент = ИсправленныеСчетаФактурыПолученныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|;
	|
	|//////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВычетНДСАвансыВыданные
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция РассчитатьНДСАвансыВыданныеЗачеты(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗачетыАвансовВыданных.Регистратор КАК Регистратор,
	|	ЗачетыАвансовВыданных.Период КАК Период,
	|	ЗачетыАвансовВыданных.Организация КАК Организация,
	|	ЗачетыАвансовВыданных.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗачетыАвансовВыданных.Контрагент КАК Контрагент,
	|	ЗачетыАвансовВыданных.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ЗачетыАвансовВыданных.ДокументОплаты КАК ДокументОплаты,
	|	ЗачетыАвансовВыданных.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	ЗачетыАвансовВыданных.СобытиеЗнак КАК СобытиеЗнак,
	|	ЗачетыАвансовВыданных.СуммаЗачета КАК СуммаЗачета
	|ИЗ
	|	ЗачетыАвансовВыданных КАК ЗачетыАвансовВыданных
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ЗачетыАвансов = Запрос.Выполнить().Выгрузить(); // ТаблицаЗначений - 
	ЗачетыАвансов.Индексы.Добавить("ДокументОплаты,НаправлениеДеятельности,ОбъектРасчетов");
	ЗачетыАвансов.Индексы.Добавить("ДокументОплаты,НаправлениеДеятельности");
	ЗачетыАвансов.Индексы.Добавить("ДокументОплаты,ОбъектРасчетов");
	ЗачетыАвансов.Индексы.Добавить("ДокументОплаты");
	
	НДСАвансыВыданные = РегистрыНакопления.НДСАвансыВыданные.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НДСАвансыВыданные.Колонки.Удалить("Активность");
	НДСАвансыВыданные.Колонки.Добавить("Исправление", Новый ОписаниеТипов("Булево"));
	НДСАвансыВыданные.Колонки.Добавить("ДатаЗачетаАванса", Новый ОписаниеТипов("Дата"));
	
	Если ЗачетыАвансов.Количество()>0 Тогда
		
		ТипыСОтборомПоКонтрагентам = Новый Массив;
		ТипыСОтборомПоКонтрагентам.Добавить(Тип("ДокументСсылка.ВводОстатков"));
		ТипыСОтборомПоКонтрагентам.Добавить(Тип("ДокументСсылка.АвансовыйОтчет"));
		
		ВычетНДССВыданногоАванса = ВычетНДСАвансыВыданные(ПараметрыРасчета); // ТаблицаЗначений -
		ВычетНДССВыданногоАванса.Индексы.Добавить("ДокументОплаты,НаправлениеДеятельности,ОбъектРасчетов,Исправление,ДатаИсправления, Контрагент");
		ВычетНДССВыданногоАванса.Индексы.Добавить("ДокументОплаты,НаправлениеДеятельности,ОбъектРасчетов,Исправление,ДатаИсправления");
		
		ВычетНДССВыданногоАвансаИтоги = ВычетНДССВыданногоАванса.Скопировать(,"ДокументОплаты,Контрагент,НаправлениеДеятельности,ОбъектРасчетов,Исправление,ДатаИсправления"); // ТаблицаЗначений -
		ВычетНДССВыданногоАвансаИтоги.Свернуть("ДокументОплаты,Контрагент,НаправлениеДеятельности,ОбъектРасчетов,Исправление,ДатаИсправления");
		
		АвансыПоДокументамОплаты = АвансыВыданныеПоДокументамОплаты(ПараметрыРасчета); // ТаблицаЗначений - 
		АвансыИтогиДокументамОплаты = АвансыПоДокументамОплаты.Скопировать(, "ДокументОплаты,Контрагент,Аванс,АвансУпр");
		АвансыИтогиДокументамОплаты.Свернуть("ДокументОплаты,Контрагент", "Аванс,АвансУпр");
		АвансыИтогиДокументамОплаты.Индексы.Добавить("ДокументОплаты, Контрагент");
		АвансыИтогиДокументамОплаты.Индексы.Добавить("ДокументОплаты");
		
		ЭтапыЗачета = Новый Массив;
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,НаправлениеДеятельности,ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,НаправлениеДеятельности"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты"));
		
		ПараметрыРаспределенияЗачета = ПараметрыРаспределенияЗачета();

		Для Каждого СтруктураОтбораЗачета Из ЭтапыЗачета Цикл
			Для Каждого Строка Из ВычетНДССВыданногоАвансаИтоги Цикл
				
				ОтборПоКонтрагентам = ТипыСОтборомПоКонтрагентам.Найти(ТипЗнч(Строка.ДокументОплаты)) <> Неопределено;

				ОтборСтрокАвансов = Новый Структура("ДокументОплаты");
				Если ОтборПоКонтрагентам Тогда
					ОтборСтрокАвансов.Вставить("Контрагент");
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(ОтборСтрокАвансов, Строка);
				
				СтрокиАвансов = АвансыИтогиДокументамОплаты.НайтиСтроки(ОтборСтрокАвансов);
				Если СтрокиАвансов.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				СтрокаАванса = СтрокиАвансов[0];
							
				СтруктураОтбораАванса = Новый Структура();
				СтруктураОтбораАванса.Вставить("ДокументОплаты", Строка.ДокументОплаты);
				СтруктураОтбораАванса.Вставить("НаправлениеДеятельности", Строка.НаправлениеДеятельности);
				СтруктураОтбораАванса.Вставить("ОбъектРасчетов", Строка.ОбъектРасчетов);
				СтруктураОтбораАванса.Вставить("Исправление", Строка.Исправление);
				СтруктураОтбораАванса.Вставить("ДатаИсправления", Строка.ДатаИсправления);
				Если ОтборПоКонтрагентам Тогда
					СтруктураОтбораАванса.Вставить("Контрагент", Строка.Контрагент);
					СтруктураОтбораЗачета.Вставить("Контрагент");
				КонецЕсли;
				СтрокиНачислениеНДС = ВычетНДССВыданногоАванса.НайтиСтроки(СтруктураОтбораАванса);
				
				ЗаполнитьЗначенияСвойств(СтруктураОтбораЗачета, СтруктураОтбораАванса);
				СтрокиЗачетАванса = ЗачетыАвансов.НайтиСтроки(СтруктураОтбораЗачета);
				Если СтрокиЗачетАванса.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				ВыполнитьЗачетАвансаВыданного(ПараметрыРасчета, СтрокаАванса, СтрокиНачислениеНДС, СтрокиЗачетАванса, НДСАвансыВыданные, ПараметрыРаспределенияЗачета);
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	2                                         КАК Приоритет,
	|	НДСАвансыВыданные.Регистратор             КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	НДСАвансыВыданные.Период                  КАК Период,
	|	НДСАвансыВыданные.Организация             КАК Организация,
	|	НДСАвансыВыданные.ДокументОплаты          КАК ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент              КАК Контрагент,
	|	НДСАвансыВыданные.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение           КАК Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС               КАК СтавкаНДС,
	|	НДСАвансыВыданные.СуммаБезНДС             КАК СуммаБезНДС,
	|	НДСАвансыВыданные.НДС                     КАК НДС,
	|	НДСАвансыВыданные.НДСУпр                  КАК НДСУпр,
	|	НДСАвансыВыданные.Событие                 КАК Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса    КАК ДокументЗачетаАванса,
	|	НДСАвансыВыданные.РегламентнаяОперация    КАК РегламентнаяОперация,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи  КАК ИдентификаторФинЗаписи,
	|	НДСАвансыВыданные.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыВыданные.Сторно                  КАК Сторно,
	|	НДСАвансыВыданные.Исправление             КАК Исправление,
	|	НДСАвансыВыданные.ДатаЗачетаАванса        КАК ДатаЗачетаАванса
	|ПОМЕСТИТЬ НДСАвансыВыданныеЗачеты
	|ИЗ
	|	&НДСАвансыВыданные КАК НДСАвансыВыданные
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НДСАвансыВыданные", НДСАвансыВыданные);
	Запрос.Выполнить();
	
	Возврат "НДСАвансыВыданныеЗачеты";
	
КонецФункции

Процедура ВыполнитьЗачетАвансаВыданного(ПараметрыРасчета, СтрокаАвансаПоДокументуОплаты, СтрокиАвансаНачислениеНДС, СтрокиЗачетаАванса, ТаблицаНДСАвансыВыданные, ПараметрыРаспределенияЗачета)
	
	ТолькоРаспределение = ПараметрыРаспределенияЗачета.ТолькоРаспределение;
	ОбновитьИдентификатор = ПараметрыРаспределенияЗачета.ОбновитьИдентификатор;
	ОпределятьПодразделениеПоПогашенномуАвансу = ПараметрыРаспределенияЗачета.ОпределятьПодразделениеПоПогашенномуАвансу;

	Если СтрокиАвансаНачислениеНДС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	АвансМассивСуммаБезНДС = Новый Массив();
	АвансМассивСуммаНДС = Новый Массив();
	АвансМассивСуммаНДСУпр = Новый Массив();
	
	АвансСуммаБезНДС    = 0;
	АвансСуммаСНДС      = 0;
	
	ДатаНачисления = СтрокиАвансаНачислениеНДС[0].Дата;
	Исправление = СтрокиАвансаНачислениеНДС[0].Исправление;
	ДатаИсправления = СтрокиАвансаНачислениеНДС[0].ДатаИсправления;
	
	ВзаиморасчетыНеВключаютНДС = Ложь;
	Если ЗначениеЗаполнено(СтрокиАвансаНачислениеНДС[0].Ссылка) Тогда
		ВзаиморасчетыНеВключаютНДС = УчетНДСЛокализация.ВзаиморасчетыНеВключаютНДС(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			СтрокиАвансаНачислениеНДС[0].Ссылка, "НалогообложениеНДС"));
	КонецЕсли;
	
	Для Каждого СтрокаАванса Из СтрокиАвансаНачислениеНДС Цикл
		АвансМассивСуммаБезНДС.Добавить(СтрокаАванса.СуммаБезНДС);
		АвансМассивСуммаНДС.Добавить(СтрокаАванса.НДС);
		АвансМассивСуммаНДСУпр.Добавить(СтрокаАванса.НДСУпр);
		
		АвансСуммаБезНДС    = АвансСуммаБезНДС + СтрокаАванса.СуммаБезНДС;
		АвансСуммаСНДС      = АвансСуммаСНДС + СтрокаАванса.СуммаБезНДС + СтрокаАванса.НДС;
	КонецЦикла; 
	
	НезачтеннаяСуммаАванса = СтрокаАвансаПоДокументуОплаты.Аванс;
	
	Для Каждого ПогашенныйАвансПоСФ Из СтрокиЗачетаАванса Цикл
		
		Если АвансСуммаСНДС = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если ВзаиморасчетыНеВключаютНДС Тогда
			ПогашенныйАвансПоСФ.СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета * (1 + УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(СтрокаАванса.СтавкаНДС)/100);
			НезачтеннаяСуммаАванса = НезачтеннаяСуммаАванса * (1 + УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(СтрокаАванса.СтавкаНДС)/100);
		КонецЕсли;
		
		Если Не ТолькоРаспределение Тогда
			НезачтеннаяСуммаАванса = НезачтеннаяСуммаАванса - ПогашенныйАвансПоСФ.СуммаЗачета;
		КонецЕсли;

		//Отбор лишних зачетов аванса
		ДатаЗачетаАванса = ПогашенныйАвансПоСФ.Период;
		
		Если Не Исправление И ДатаЗачетаАванса < ПараметрыРасчета.НачалоПериода Тогда
			Продолжить;
		КонецЕсли;
		
		Если Исправление 
			 И ДатаЗачетаАванса < ПараметрыРасчета.НачалоПериода
			 И ДатаИсправления < ПараметрыРасчета.НачалоПериода Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ТолькоРаспределение И ДатаНачисления > ДатаЗачетаАванса Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета;
		
		СуммаСНДС = Мин(СуммаЗачета, АвансСуммаСНДС);
		ОстатокСуммыАвансаСНДС = (АвансСуммаСНДС - СуммаСНДС);
		Если ОстатокСуммыАвансаСНДС > НезачтеннаяСуммаАванса Тогда
			// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДС = СуммаСНДС + (ОстатокСуммыАвансаСНДС - НезачтеннаяСуммаАванса);
		КонецЕсли;
		
		Если СуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаБезНДС    = Окр(АвансСуммаБезНДС * СуммаСНДС / АвансСуммаСНДС, 2);
		СуммаНДС       = СуммаСНДС - СуммаБезНДС; 
		
		Если Не ТолькоРаспределение Тогда
			АвансСуммаБезНДС = АвансСуммаБезНДС - СуммаБезНДС;
			АвансСуммаСНДС   = АвансСуммаСНДС - СуммаСНДС;
		КонецЕсли;
		
		Если СуммаБезНДС > 0 Тогда
			МассивСуммаБезНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаБезНДС, АвансМассивСуммаБезНДС);
		КонецЕсли;
		
		Если СуммаНДС > 0 Тогда
			МассивСуммаНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДС, АвансМассивСуммаНДС);
		КонецЕсли; 
		
		Счетчик = -1;
		
		Для Каждого СтрокаАванса Из СтрокиАвансаНачислениеНДС Цикл
			
			Счетчик = Счетчик + 1;
			
			Результат_СуммаБезНДС = ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0);
			Результат_НДС = ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0);
			
			Если Результат_СуммаБезНДС = 0 
				 И Результат_НДС = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаРезультата = ТаблицаНДСАвансыВыданные.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаАванса, СтрСоединить(ПараметрыРасчета.МассивИзмеренийРегистра, ","));
			
			СтрокаРезультата.Регистратор = СтрокаАванса.Ссылка;
			СтрокаРезультата.Исправление = Исправление;
			СтрокаРезультата.ДатаЗачетаАванса = ДатаЗачетаАванса;
			СтрокаРезультата.ДокументЗачетаАванса = ПогашенныйАвансПоСФ.ДокументЗачетаАванса;
			СтрокаРезультата.РегламентнаяОперация = Истина;
			СтрокаРезультата.НастройкаХозяйственнойОперации = Справочники.НастройкиХозяйственныхОпераций.ВосстановлениеНДССВыданногоАванса;
			
			Если Исправление Тогда
				СтрокаРезультата.Период = Макс(ДатаИсправления, Макс(ДатаЗачетаАванса, ПараметрыРасчета.НачалоПериода));
			Иначе
				СтрокаРезультата.Период = Макс(ДатаНачисления, Макс(ДатаЗачетаАванса, ПараметрыРасчета.НачалоПериода));
			КонецЕсли;

			Если ТолькоРаспределение Тогда
				СтрокаРезультата.ОбъектРасчетов = ПогашенныйАвансПоСФ.ОбъектРасчетов;
				СтрокаРезультата.Контрагент = ПогашенныйАвансПоСФ.Контрагент;
				Если ОпределятьПодразделениеПоПогашенномуАвансу = Ложь Тогда
					СтрокаРезультата.НаправлениеДеятельности = ПогашенныйАвансПоСФ.НаправлениеДеятельности;
					СтрокаРезультата.Подразделение = ПогашенныйАвансПоСФ.Подразделение;
				Иначе
					СтрокаРезультата.НаправлениеДеятельности = СтрокаАванса.НаправлениеДеятельности;
					СтрокаРезультата.Подразделение = СтрокаАванса.Подразделение;
				КонецЕсли;
			КонецЕсли;
			
			Если Не ОбновитьИдентификатор Тогда
				СтрокаРезультата.ИдентификаторФинЗаписи = ПогашенныйАвансПоСФ.ИдентификаторФинЗаписи;
			Иначе
				СтрокаРезультата.ИдентификаторФинЗаписи = Строка(Новый УникальныйИдентификатор());
			КонецЕсли;
						
			СтрокаРезультата.СуммаБезНДС = Результат_СуммаБезНДС;
			СтрокаРезультата.НДС = Результат_НДС;
			// Зачтем НДС упр. пропорционально НДС регл.
			Если СтрокаРезультата.НДС <> 0
					И (СтрокаАванса.НДСУпр <> 0 ИЛИ ТолькоРаспределение) Тогда
					
				Если ТолькоРаспределение И ПогашенныйАвансПоСФ.СуммаЗачета<>0 Тогда
					СтрокаРезультата.НДСУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр * СтрокаРезультата.НДС/ПогашенныйАвансПоСФ.СуммаЗачета;
				Иначе
					КоэффициентыРаспределенияНДСУпр = Новый Массив;
					КоэффициентыРаспределенияНДСУпр.Добавить(СтрокаРезультата.НДС);
					КоэффициентыРаспределенияНДСУпр.Добавить(СтрокаАванса.НДС - СтрокаРезультата.НДС);
					МассивНДСУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СтрокаАванса.НДСУпр, КоэффициентыРаспределенияНДСУпр);
					СтрокаРезультата.НДСУпр = МассивНДСУпр[0];
				КонецЕсли;
			КонецЕсли;
			
			ВидыОперацийПереносаАванса = Новый Массив;
			ВидыОперацийПереносаАванса.Добавить(Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПереносАвансаКлиентаМеждуДвумяОрганизациями);
			ВидыОперацийПереносаАванса.Добавить(Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПереносАвансаПоставщикуМеждуДвумяОрганизациями);
			
			Если ТипЗнч(ПогашенныйАвансПоСФ.ДокументЗачетаАванса) = Тип("ДокументСсылка.ВзаимозачетЗадолженности")
				И ВидыОперацийПереносаАванса.Найти(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПогашенныйАвансПоСФ.ДокументЗачетаАванса, "ВидОперации")) <> Неопределено Тогда
				СтрокаРезультата.Событие = Перечисления.СобытияНДСАвансы.ПереносАванса;
			ИначеЕсли ПогашенныйАвансПоСФ.СобытиеЗнак < 0 Тогда
				СтрокаРезультата.Событие = Перечисления.СобытияНДСАвансы.ВосстановлениеПриВозвратеАванса;
			Иначе
				СтрокаРезультата.Событие = Перечисления.СобытияНДСАвансы.ВосстановлениеПриЗачетеАванса;
			КонецЕсли;
			
			// Уменьшим суммы в исходных строках аванса и зачета аванса на зачтенную сумму.
			СтрокаАванса.СуммаБезНДС = СтрокаАванса.СуммаБезНДС - СтрокаРезультата.СуммаБезНДС;
			СтрокаАванса.НДС = СтрокаАванса.НДС - СтрокаРезультата.НДС;
			СтрокаАванса.НДСУпр = СтрокаАванса.НДСУпр - СтрокаРезультата.НДСУпр;
			
			ПогашенныйАвансПоСФ.СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета - (СтрокаРезультата.СуммаБезНДС + СтрокаРезультата.НДС);
			Если ВзаиморасчетыНеВключаютНДС Тогда
				СтрокаАвансаПоДокументуОплаты.Аванс = СтрокаАвансаПоДокументуОплаты.Аванс - СтрокаРезультата.СуммаБезНДС;
			Иначе
				СтрокаАвансаПоДокументуОплаты.Аванс = СтрокаАвансаПоДокументуОплаты.Аванс - (СтрокаРезультата.СуммаБезНДС + СтрокаРезультата.НДС);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция РассчитатьЗаписиНДСАвансыВыданныеСохранение(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыВыданные)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	МассивТекстовРегистраторыЗапись.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСАвансыВыданные.Регистратор
	|ИЗ
	|	&ИмяТаблицы КАК НДСАвансыВыданные";
	Для Каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСАвансыВыданные Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", ИмяТаблицыЗаписей);
		МассивТекстовРегистраторыЗапись.Добавить(ТекстЗапроса);
	КонецЦикла;
	
	МассивТекстовРегистраторыЗапись.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСАвансыВыданные.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСАвансыВыданные КАК НДСАвансыВыданные");

	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	ТекстРегистраторыЗапись = ТекстРегистраторыЗапись +
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	ТекстЗапросаСохранение =
	"ВЫБРАТЬ
	|	0                                                 КАК Приоритет,
	|	НДСАвансыВыданные.Период                          КАК Период,
	|	НДСАвансыВыданные.Регистратор                     КАК Регистратор,
	|	НДСАвансыВыданные.ВидДвижения                     КАК ВидДвижения,
	|	НДСАвансыВыданные.Организация                     КАК Организация,
	|	НДСАвансыВыданные.ДокументОплаты                  КАК ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент                      КАК Контрагент,
	|	НДСАвансыВыданные.ОбъектРасчетов                  КАК ОбъектРасчетов,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура         КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение                   КАК Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС                       КАК СтавкаНДС,
	|	НДСАвансыВыданные.СуммаБезНДС                     КАК СуммаБезНДС,
	|	НДСАвансыВыданные.НДС                             КАК НДС,
	|	НДСАвансыВыданные.НДСУпр                          КАК НДСУпр,
	|	НДСАвансыВыданные.Событие                         КАК Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса            КАК ДокументЗачетаАванса,
	|	НДСАвансыВыданные.РегламентнаяОперация            КАК РегламентнаяОперация,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	НДСАвансыВыданные.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыВыданные.Сторно                          КАК Сторно
	|ПОМЕСТИТЬ НДСАвансыВыданныеСохранение
	|ИЗ
	|	РегистрНакопления.НДСАвансыВыданные КАК НДСАвансыВыданные
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		НДСАвансыВыданные.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация = НДСАвансыВыданные.Организация
	|		И Задания.СчетФактура = НДСАвансыВыданные.ДокументОплаты
	|ГДЕ
	|	НДСАвансыВыданные.Период < &НачалоПериода
	|		ИЛИ НДСАвансыВыданные.Период > &КонецПериода
	|		ИЛИ НЕ НДСАвансыВыданные.РегламентнаяОперация
	|		ИЛИ Задания.СчетФактура ЕСТЬ NULL
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстРегистраторыЗапись + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстЗапросаСохранение;
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСАвансыВыданныеСохранение";
	
КонецФункции

Процедура ЗаписатьНДСАвансыВыданные(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыВыданные)
	
	МассивТекстовДанных = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	НДСАвансыВыданные.Приоритет                       КАК Приоритет,
	|	НДСАвансыВыданные.Период                          КАК Период,
	|	НДСАвансыВыданные.Регистратор                     КАК Регистратор,
	|	НДСАвансыВыданные.ВидДвижения                     КАК ВидДвижения,
	|	НДСАвансыВыданные.Организация                     КАК Организация,
	|	НДСАвансыВыданные.ДокументОплаты                  КАК ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент                      КАК Контрагент,
	|	НДСАвансыВыданные.ОбъектРасчетов                  КАК ОбъектРасчетов,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура         КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение                   КАК Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС                       КАК СтавкаНДС,
	|	НДСАвансыВыданные.СуммаБезНДС                     КАК СуммаБезНДС,
	|	НДСАвансыВыданные.НДС                             КАК НДС,
	|	НДСАвансыВыданные.НДСУпр                          КАК НДСУпр,
	|	НДСАвансыВыданные.Событие                         КАК Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса            КАК ДокументЗачетаАванса,
	|	НДСАвансыВыданные.РегламентнаяОперация            КАК РегламентнаяОперация,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	НДСАвансыВыданные.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыВыданные.Сторно                          КАК Сторно
	|ИЗ
	|	&НДСАвансыВыданные КАК НДСАвансыВыданные";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСАвансыВыданные Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&НДСАвансыВыданные", ИмяТаблицыЗаписей);
		МассивТекстовДанных.Добавить(ТекстЗапроса);
	КонецЦикла;
	ТекстДанныеДляЗаписи = СтрСоединить(МассивТекстовДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		ТекстДанныеДляЗаписи
		+ "
		|                            
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор,
		|	Период,
		|	Приоритет
		|
		|ИТОГИ ПО
		|	Регистратор
		|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСАвансыВыданные.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		// Проверка дат запрета не производится, т.к. сюда попадаем при выполнении заданий, 
		// а при создании заданий даты запрета контролируются. 
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьНДСАвансыВыданные(ПараметрыРасчета, ИменаТаблицЗаписейНДСАвансыВыданные)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	МассивТекстовРегистраторыЗапись.Добавить("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСАвансыВыданные.Регистратор
	|ИЗ
	|	&ИмяТаблицы КАК НДСАвансыВыданные";
	Для Каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСАвансыВыданные Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", ИмяТаблицыЗаписей);
		МассивТекстовРегистраторыЗапись.Добавить(ТекстЗапроса);
	КонецЦикла;
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	ТекстРегистраторыЗапись = ТекстРегистраторыЗапись +
	"
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	ТекстУстаревшиеРегистраторы = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСАвансыВыданные КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО
	|		УстаревшиеРегистраторы.Регистратор = РегистраторыЗапись.Регистратор
	|
	|ГДЕ
	|	РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстРегистраторыЗапись + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстУстаревшиеРегистраторы;;
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСАвансыВыданные.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

Процедура ПолучитьОстаткиАвансовВыданныхДоПереноса(ПараметрыРасчета)
	
	ПараметрыРасчетаАвансов = ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
	
	//Для ИСФ рассчитывать данные погашений нужно начиная с даты документа оплаты
	ЕстьИСФ = Не ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["ИсправленныеСчетаФактурыПолученныеАвансПерерасчет"].ПолучитьДанные().Пустой();
	Если ЕстьИСФ Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Задания.СчетФактура КАК ДокументОплаты
		|ПОМЕСТИТЬ ДокументыОплаты
		|ИЗ
		|	Задания КАК Задания
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеСчетаФактурыПолученныеАвансПерерасчет КАК ИсправленныеСчетаФактурыПолученныеАванс
		|		ПО Задания.Организация = ИсправленныеСчетаФактурыПолученныеАванс.Организация
		|			И Задания.СчетФактура = ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты
		|ГДЕ
		|	ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты ЕСТЬ NULL";
		
		Запрос.Выполнить();
			
		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.НачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
		ПараметрыРасчетаАвансов.Организации                                           = ПараметрыРасчета.МассивОрганизаций;
		ПараметрыРасчетаАвансов.ВключитьДанныеПодарочныхСертификатов                  = Истина;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ДокументыОплаты";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";
	
		ПодготовитьВТ_ОстаткиАвансыВыданныеДоПереноса(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);

		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Остатки.Организация             КАК Организация,
		|	Остатки.ДокументОплаты          КАК ДокументОплаты,
		|	Остатки.Контрагент              КАК Контрагент,
		|	Остатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	Остатки.Подразделение           КАК Подразделение,
		|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Остатки.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Остатки.СтавкаНДС               КАК СтавкаНДС,
		|	Остатки.СуммаБезНДС             КАК СуммаБезНДС,
		|	Остатки.НДС                     КАК НДС,
		|	Остатки.НДСУпр                  КАК НДСУпр
		|ПОМЕСТИТЬ ОстаткиАвансыВыданныеДоПереносаПромежуточная
		|ИЗ
		|	ОстаткиАвансыВыданныеДоПереноса КАК Остатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиАвансыВыданныеДоПереноса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДокументыОплаты
		|;
		|";

		Запрос.Выполнить();
		
		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.ИСФНачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ИсправленныеСчетаФактурыПолученныеАвансПерерасчет";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";
	
		ПодготовитьВТ_ОстаткиАвансыВыданныеДоПереноса(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Остатки.Организация             КАК Организация,
		|	Остатки.ДокументОплаты          КАК ДокументОплаты,
		|	Остатки.Контрагент              КАК Контрагент,
		|	Остатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	Остатки.Подразделение           КАК Подразделение,
		|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Остатки.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Остатки.СтавкаНДС               КАК СтавкаНДС,
		|	Остатки.СуммаБезНДС             КАК СуммаБезНДС,
		|	Остатки.НДС                     КАК НДС,
		|	Остатки.НДСУпр                  КАК НДСУпр
		|ПОМЕСТИТЬ ОстаткиАвансыВыданныеДоПереносаИтог
		|ИЗ
		|	ОстаткиАвансыВыданныеДоПереносаПромежуточная КАК Остатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Остатки.Организация             КАК Организация,
		|	Остатки.ДокументОплаты          КАК ДокументОплаты,
		|	Остатки.Контрагент              КАК Контрагент,
		|	Остатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	Остатки.Подразделение           КАК Подразделение,
		|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Остатки.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Остатки.СтавкаНДС               КАК СтавкаНДС,
		|	Остатки.СуммаБезНДС             КАК СуммаБезНДС,
		|	Остатки.НДС                     КАК НДС,
		|	Остатки.НДСУпр                  КАК НДСУпр
		|ИЗ
		|	ОстаткиАвансыВыданныеДоПереноса КАК Остатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиАвансыВыданныеДоПереносаПромежуточная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиАвансыВыданныеДоПереноса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Остатки.Организация             КАК Организация,
		|	Остатки.ДокументОплаты          КАК ДокументОплаты,
		|	Остатки.Контрагент              КАК Контрагент,
		|	Остатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	Остатки.Подразделение           КАК Подразделение,
		|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Остатки.ОбъектРасчетов          КАК ОбъектРасчетов,
		|	Остатки.СтавкаНДС               КАК СтавкаНДС,
		|	Остатки.СуммаБезНДС             КАК СуммаБезНДС,
		|	Остатки.НДС                     КАК НДС,
		|	Остатки.НДСУпр                  КАК НДСУпр
		|ПОМЕСТИТЬ ОстаткиАвансыВыданныеДоПереноса
		|ИЗ
		|	ОстаткиАвансыВыданныеДоПереносаИтог КАК Остатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ДокументОплаты,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиАвансыВыданныеДоПереносаИтог
		|";

		Запрос.Выполнить();

	Иначе
			
		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.НачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
		ПараметрыРасчетаАвансов.Организации                                           = ПараметрыРасчета.МассивОрганизаций;
		ПараметрыРасчетаАвансов.ВключитьДанныеПодарочныхСертификатов                  = Истина;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "Задания";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "СчетФактура";
		
		ПодготовитьВТ_ОстаткиАвансыВыданныеДоПереноса(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);

	КонецЕсли; 
	
КонецПроцедуры

Функция РассчитатьНДСАвансыВыданныеПереносыРасход(ПараметрыРасчета)
	
	ПолучитьОстаткиАвансовВыданныхДоПереноса(ПараметрыРасчета);

	ПараметрыРасчетаАвансов = ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
	
	ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.НачалоПериода;
	ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.КонецПериода;
	ПараметрыРасчетаАвансов.Организации                                           = ПараметрыРасчета.МассивОрганизаций;
	ПараметрыРасчетаАвансов.ВключитьДанныеПодарочныхСертификатов                  = Истина;
	ПараметрыРасчетаАвансов.ВключитьДанныеФинансовыхИнструментов                  = Истина;
	ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "Задания";
	ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "СчетФактура";
	
	ПодготовитьВТ_ПереносыАвансовВыданных(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);
			
	//Для ИСФ рассчитывать данные погашений нужно начиная с даты документа оплаты
	ЕстьИСФ = Не ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["ИсправленныеСчетаФактурыПолученныеАвансПерерасчет"].ПолучитьДанные().Пустой();
	Если ЕстьИСФ Тогда

		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДД.Организация                    КАК Организация,
		|	ДД.ДокументПереноса               КАК ДокументПереноса,
		|	ДД.ДокументОплаты                 КАК ДокументОплаты,
		|	ДД.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
		|	ДД.ОбъектРасчетов                 КАК ОбъектРасчетов,
		|	ДД.Контрагент                     КАК Контрагент,
		|	ДД.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	ДД.Подразделение                  КАК Подразделение,
		|	ДД.КорАналитикаУчетаПоПартнерам   КАК КорАналитикаУчетаПоПартнерам,
		|	ДД.КорОбъектРасчетов              КАК КорОбъектРасчетов,
		|	ДД.КорКонтрагент                  КАК КорКонтрагент,
		|	ДД.КорНаправлениеДеятельности     КАК КорНаправлениеДеятельности,
		|	ДД.КорПодразделение               КАК КорПодразделение,
		|	ДД.Период                         КАК Период,
		|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	ДД.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
		|	ДД.Валюта                         КАК Валюта,
		|	ДД.Предоплата                     КАК Предоплата,
		|	ДД.ПредоплатаРегл                 КАК ПредоплатаРегл,
		|	ДД.ПредоплатаУпр                  КАК ПредоплатаУпр
		|ПОМЕСТИТЬ ПереносыАвансовПромежуточная
		|ИЗ
		|	ПереносыАвансовВыданных КАК ДД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПереносыАвансовВыданных
		|;
		|";

		Запрос.Выполнить();
		
		ПараметрыРасчетаАвансов.ДатаНачала                                            = ПараметрыРасчета.ИСФНачалоПериода;
		ПараметрыРасчетаАвансов.ДатаОкончания                                         = ПараметрыРасчета.ИСФКонецПериода;
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора = "ИсправленныеСчетаФактурыПолученныеАвансПерерасчет";
		ПараметрыРасчетаАвансов.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля          = "ДокументОплаты";
	
		ПодготовитьВТ_ПереносыАвансовВыданных(
			ПараметрыРасчета.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов,
			ПараметрыРасчета.ТаблицаНастроек);
			
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДД.Организация                    КАК Организация,
		|	ДД.ДокументПереноса               КАК ДокументПереноса,
		|	ДД.ДокументОплаты                 КАК ДокументОплаты,
		|	ДД.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
		|	ДД.ОбъектРасчетов                 КАК ОбъектРасчетов,
		|	ДД.Контрагент                     КАК Контрагент,
		|	ДД.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	ДД.Подразделение                  КАК Подразделение,
		|	ДД.КорАналитикаУчетаПоПартнерам   КАК КорАналитикаУчетаПоПартнерам,
		|	ДД.КорОбъектРасчетов              КАК КорОбъектРасчетов,
		|	ДД.КорКонтрагент                  КАК КорКонтрагент,
		|	ДД.КорНаправлениеДеятельности     КАК КорНаправлениеДеятельности,
		|	ДД.КорПодразделение               КАК КорПодразделение,
		|	ДД.Период                         КАК Период,
		|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	ДД.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
		|	ДД.Валюта                         КАК Валюта,
		|	ДД.Предоплата                     КАК Предоплата,
		|	ДД.ПредоплатаРегл                 КАК ПредоплатаРегл,
		|	ДД.ПредоплатаУпр                  КАК ПредоплатаУпр
		|ПОМЕСТИТЬ ПереносыАвансовИтог
		|ИЗ
		|	ПереносыАвансовПромежуточная КАК ДД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДД.Организация                    КАК Организация,
		|	ДД.ДокументПереноса               КАК ДокументПереноса,
		|	ДД.ДокументОплаты                 КАК ДокументОплаты,
		|	ДД.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
		|	ДД.ОбъектРасчетов                 КАК ОбъектРасчетов,
		|	ДД.Контрагент                     КАК Контрагент,
		|	ДД.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	ДД.Подразделение                  КАК Подразделение,
		|	ДД.КорАналитикаУчетаПоПартнерам   КАК КорАналитикаУчетаПоПартнерам,
		|	ДД.КорОбъектРасчетов              КАК КорОбъектРасчетов,
		|	ДД.КорКонтрагент                  КАК КорКонтрагент,
		|	ДД.КорНаправлениеДеятельности     КАК КорНаправлениеДеятельности,
		|	ДД.КорПодразделение               КАК КорПодразделение,
		|	ДД.Период                         КАК Период,
		|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	ДД.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
		|	ДД.Валюта                         КАК Валюта,
		|	ДД.Предоплата                     КАК Предоплата,
		|	ДД.ПредоплатаРегл                 КАК ПредоплатаРегл,
		|	ДД.ПредоплатаУпр                  КАК ПредоплатаУпр
		|ИЗ
		|	ПереносыАвансовВыданных КАК ДД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПереносыАвансовПромежуточная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПереносыАвансовВыданных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация                    КАК Организация,
		|	ДД.ДокументПереноса               КАК ДокументПереноса,
		|	ДД.ДокументОплаты                 КАК ДокументОплаты,
		|	ДД.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
		|	ДД.ОбъектРасчетов                 КАК ОбъектРасчетов,
		|	ДД.Контрагент                     КАК Контрагент,
		|	ДД.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	ДД.Подразделение                  КАК Подразделение,
		|	ДД.КорАналитикаУчетаПоПартнерам   КАК КорАналитикаУчетаПоПартнерам,
		|	ДД.КорОбъектРасчетов              КАК КорОбъектРасчетов,
		|	ДД.КорКонтрагент                  КАК КорКонтрагент,
		|	ДД.КорНаправлениеДеятельности     КАК КорНаправлениеДеятельности,
		|	ДД.КорПодразделение               КАК КорПодразделение,
		|	ДД.Период                         КАК Период,
		|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
		|	ДД.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
		|	ДД.Валюта                         КАК Валюта,
		|	ДД.Предоплата                     КАК Предоплата,
		|	ДД.ПредоплатаРегл                 КАК ПредоплатаРегл,
		|	ДД.ПредоплатаУпр                  КАК ПредоплатаУпр
		|ПОМЕСТИТЬ ПереносыАвансовВыданных
		|ИЗ
		|	ПереносыАвансовИтог КАК ДД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПереносыАвансовИтог
		|";

		Запрос.Выполнить();

	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка, СчетаФактурыПолученныеАванс.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Дата, СчетаФактурыПолученныеАванс.Дата) КАК Дата,
	|	ВЫБОР
	|		КОГДА НЕ ИсправленныеСчетаФактурыПолученныеАванс.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                             КАК Исправление,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.ДатаИсправления, ДАТАВРЕМЯ(1,1,1)) КАК ДатаИсправления,
	|	ДД.Организация КАК Организация,
	|	ДД.ДокументОплаты КАК ДокументОплаты,
	|	ДД.Контрагент КАК Контрагент,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.Подразделение КАК Подразделение,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДД.СтавкаНДС КАК СтавкаНДС,
	|	ДД.СуммаБезНДС КАК СуммаБезНДС,
	|	ДД.НДС КАК НДС,
	|	ДД.НДСУпр КАК НДСУпр
	|ИЗ
	|	ОстаткиАвансыВыданныеДоПереноса КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыПолученныеАванс КАК СчетаФактурыПолученныеАванс
	|	ПО
	|		ДД.Организация = СчетаФактурыПолученныеАванс.Организация
	|		И ДД.ДокументОплаты = СчетаФактурыПолученныеАванс.ДокументОплаты
	|		И ДД.Контрагент = СчетаФактурыПолученныеАванс.Контрагент
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактурыПолученныеАванс
	|	ПО
	|		ДД.Организация = ИсправленныеСчетаФактурыПолученныеАванс.Организация
	|		И ДД.ДокументОплаты = ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты
	|		И ДД.Контрагент = ИсправленныеСчетаФактурыПолученныеАванс.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК СобытиеЗнак,
	|	ДД.Период КАК Период,
	|	ДД.Контрагент КАК Контрагент,
	|	ДД.Подразделение КАК Подразделение,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДД.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДД.ДокументОплаты КАК ДокументОплаты,
	|	ДД.ПредоплатаРегл КАК СуммаЗачета,
	|	ДД.ПредоплатаУпр КАК СуммаЗачетаУпр,
	|	ДД.ДокументПереноса КАК ДокументЗачетаАванса
	|ИЗ
	|	ПереносыАвансовВыданных КАК ДД
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	ЗачетыАвансов = Результат[1].Выгрузить();
		
	НДСАвансыВыданные = РегистрыНакопления.НДСАвансыВыданные.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НДСАвансыВыданные.Колонки.Удалить("Активность");
	НДСАвансыВыданные.Колонки.Добавить("Исправление", Новый ОписаниеТипов("Булево"));
	НДСАвансыВыданные.Колонки.Добавить("ДатаЗачетаАванса", Новый ОписаниеТипов("Дата"));
	
	Если ЗачетыАвансов.Количество()>0 Тогда
		
		НачисленияСВыданногоАванса = Результат[0].Выгрузить(); // ТаблицаЗначений -
		НачисленияСВыданногоАванса.Индексы.Добавить("ДокументОплаты, Контрагент, НаправлениеДеятельности,ОбъектРасчетов,Исправление,ДатаИсправления");
		
		НачисленияСВыданногоАвансаИтоги = НачисленияСВыданногоАванса.Скопировать(,"ДокументОплаты, Контрагент, НаправлениеДеятельности, ОбъектРасчетов, Исправление, ДатаИсправления"); // ТаблицаЗначений -
		НачисленияСВыданногоАвансаИтоги.Свернуть("ДокументОплаты, Контрагент, ОбъектРасчетов, НаправлениеДеятельности, Исправление, ДатаИсправления");
		
		АвансыПоДокументамОплаты = АвансыВыданныеПоДокументамОплаты(ПараметрыРасчета); // ТаблицаЗначений - 
		АвансыИтогиДокументамОплаты = АвансыПоДокументамОплаты.Скопировать(, "ДокументОплаты, Контрагент, Аванс,АвансУпр");
		АвансыИтогиДокументамОплаты.Свернуть("ДокументОплаты, Контрагент", "Аванс,АвансУпр");
		АвансыИтогиДокументамОплаты.Индексы.Добавить("ДокументОплаты, Контрагент");
		
		ЭтапыЗачета = Новый Массив;
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,Контрагент,НаправлениеДеятельности,ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,Контрагент,ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,Контрагент,НаправлениеДеятельности"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,Контрагент"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,НаправлениеДеятельности,ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,НаправлениеДеятельности"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты"));
		
		ПараметрыРаспределенияЗачета = ПараметрыРаспределенияЗачета();
		ПараметрыРаспределенияЗачета.ТолькоРаспределение = Истина;
		ПараметрыРаспределенияЗачета.ОбновитьИдентификатор = Ложь;
		
		Для Каждого СтруктураОтбораЗачета Из ЭтапыЗачета Цикл
			Для каждого Строка Из НачисленияСВыданногоАвансаИтоги Цикл
				
				СтрокаАванса = АвансыИтогиДокументамОплаты.Найти(Строка.ДокументОплаты);
				Если СтрокаАванса = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				СтруктураОтбораАванса = Новый Структура();
				СтруктураОтбораАванса.Вставить("ДокументОплаты", Строка.ДокументОплаты);
				СтруктураОтбораАванса.Вставить("Контрагент", Строка.Контрагент);
				СтруктураОтбораАванса.Вставить("НаправлениеДеятельности", Строка.НаправлениеДеятельности);
				СтруктураОтбораАванса.Вставить("ОбъектРасчетов", Строка.ОбъектРасчетов);
				СтруктураОтбораАванса.Вставить("Исправление", Строка.Исправление);
				СтруктураОтбораАванса.Вставить("ДатаИсправления", Строка.ДатаИсправления);
				СтрокиНачислениеНДС = НачисленияСВыданногоАванса.НайтиСтроки(СтруктураОтбораАванса);
				
				ЗаполнитьЗначенияСвойств(СтруктураОтбораЗачета, СтруктураОтбораАванса);
				СтрокиЗачетАванса = ЗачетыАвансов.НайтиСтроки(СтруктураОтбораЗачета);
				
				ВыполнитьЗачетАвансаВыданного(ПараметрыРасчета, СтрокаАванса, СтрокиНачислениеНДС, СтрокиЗачетАванса, НДСАвансыВыданные, ПараметрыРаспределенияЗачета);
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСАвансыВыданные.Регистратор КАК Регистратор,
	|	НДСАвансыВыданные.Период КАК Период,
	|	НДСАвансыВыданные.Организация КАК Организация,
	|	НДСАвансыВыданные.ДокументОплаты КАК ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент КАК Контрагент,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение КАК Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС КАК СтавкаНДС,
	|	НДСАвансыВыданные.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСАвансыВыданные.НДС КАК НДС,
	|	НДСАвансыВыданные.НДСУпр КАК НДСУпр,
	|	НДСАвансыВыданные.Событие КАК Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	НДСАвансыВыданные.РегламентнаяОперация КАК РегламентнаяОперация,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСАвансыВыданные.Сторно КАК Сторно,
	|	НДСАвансыВыданные.Исправление КАК Исправление,
	|	НДСАвансыВыданные.ДатаЗачетаАванса КАК ДатаЗачетаАванса,
	|	НДСАвансыВыданные.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыВыданныеПереносы
	|ИЗ
	|	&НДСАвансыВыданные КАК НДСАвансыВыданные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НДСАвансыВыданные.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	НДСАвансыВыданные.Период КАК Период,
	|	НДСАвансыВыданные.Организация КАК Организация,
	|	НДСАвансыВыданные.ДокументОплаты КАК ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент КАК Контрагент,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение КАК Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(НДСАвансыВыданные.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСАвансыВыданные.НДС) КАК НДС,
	|	СУММА(НДСАвансыВыданные.НДСУпр) КАК НДСУпр,
	|	НДСАвансыВыданные.Событие КАК Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	НДСАвансыВыданные.РегламентнаяОперация КАК РегламентнаяОперация,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПереносАванса) КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыВыданные.Сторно КАК Сторно,
	|	НДСАвансыВыданные.Исправление КАК Исправление,
	|	НДСАвансыВыданные.ДатаЗачетаАванса КАК ДатаЗачетаАванса,
	|	НДСАвансыВыданные.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыВыданныеПереносыРасход
	|ИЗ
	|	НДСАвансыВыданныеПереносы КАК НДСАвансыВыданные
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСАвансыВыданные.Регистратор,
	|	НДСАвансыВыданные.Период,
	|	НДСАвансыВыданные.Организация,
	|	НДСАвансыВыданные.ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС,
	|	НДСАвансыВыданные.Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса,
	|	НДСАвансыВыданные.РегламентнаяОперация,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи,
	|	НДСАвансыВыданные.Сторно,
	|	НДСАвансыВыданные.Исправление,
	|	НДСАвансыВыданные.ДатаЗачетаАванса,
	|	НДСАвансыВыданные.ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСАвансыВыданныеПереносы
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НДСАвансыВыданные", НДСАвансыВыданные);
	Запрос.Выполнить();
	
	Возврат "НДСАвансыВыданныеПереносыРасход";
	
КонецФункции

Функция РассчитатьНДСАвансыВыданныеПереносыПриход(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеСВыданногоАванса.Организация КАК Организация,
	|	НачислениеСВыданногоАванса.ДокументОплаты КАК ДокументОплаты,
	|	НачислениеСВыданногоАванса.Контрагент КАК Контрагент,
	|	НачислениеСВыданногоАванса.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НачислениеСВыданногоАванса.Подразделение           КАК Подразделение,
	|	НачислениеСВыданногоАванса.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НачислениеСВыданногоАванса.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	НачислениеСВыданногоАванса.СтавкаНДС               КАК СтавкаНДС,
	|	СУММА(НачислениеСВыданногоАванса.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(НачислениеСВыданногоАванса.НДС)              КАК НДС,
	|	СУММА(НачислениеСВыданногоАванса.НДСУпр)           КАК НДСУпр
	|ПОМЕСТИТЬ НачислениеНДСАвансыВыданные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.Организация              КАК Организация,
	|		ДД.ДокументОплаты           КАК ДокументОплаты,
	|		ДД.Контрагент               КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура  КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение            КАК Подразделение,
	|		ДД.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС                КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов           КАК ОбъектРасчетов,
	|		ДД.СуммаБезНДС              КАК СуммаБезНДС,
	|		ДД.НДС                      КАК НДС,
	|		ДД.НДСУпр                   КАК НДСУпр
	|	ИЗ
	|		ОстаткиАвансыВыданныеДоПереноса КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.ДокументОплаты          КАК ДокументОплаты,
	|		ДД.Контрагент              КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение           КАК Подразделение,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|		ДД.НДС                     КАК НДС,
	|		ДД.НДСУпр                  КАК НДСУпр
	|	ИЗ
	|		НДСАвансыВыданныеПереносыРасход КАК ДД
	|	) КАК НачислениеСВыданногоАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеСВыданногоАванса.Организация,
	|	НачислениеСВыданногоАванса.ДокументОплаты,
	|	НачислениеСВыданногоАванса.Контрагент,
	|	НачислениеСВыданногоАванса.ИсправленныйСчетФактура,
	|	НачислениеСВыданногоАванса.Подразделение,
	|	НачислениеСВыданногоАванса.НаправлениеДеятельности,
	|	НачислениеСВыданногоАванса.СтавкаНДС,
	|	НачислениеСВыданногоАванса.ОбъектРасчетов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачислениеСВыданногоАванса.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(НачислениеСВыданногоАванса.НДС) <> 0)
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка, СчетаФактурыПолученныеАванс.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Дата, СчетаФактурыПолученныеАванс.Дата) КАК Дата,
	|	ВЫБОР
	|		КОГДА НЕ ИсправленныеСчетаФактурыПолученныеАванс.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                             КАК Исправление,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.ДатаИсправления, ДАТАВРЕМЯ(1,1,1)) КАК ДатаИсправления,
	|	ДД.Организация КАК Организация,
	|	ДД.ДокументОплаты КАК ДокументОплаты,
	|	ДД.Контрагент КАК Контрагент,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.Подразделение КАК Подразделение,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДД.СтавкаНДС КАК СтавкаНДС,
	|	ДД.СуммаБезНДС КАК СуммаБезНДС,
	|	ДД.НДС КАК НДС,
	|	ДД.НДСУпр КАК НДСУпр
	|ИЗ
	|	НачислениеНДСАвансыВыданные КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыПолученныеАванс КАК СчетаФактурыПолученныеАванс
	|	ПО
	|		ДД.Организация = СчетаФактурыПолученныеАванс.Организация
	|		И ДД.ДокументОплаты = СчетаФактурыПолученныеАванс.ДокументОплаты
	|		И ДД.Контрагент = СчетаФактурыПолученныеАванс.Контрагент
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактурыПолученныеАванс
	|	ПО
	|		ДД.Организация = ИсправленныеСчетаФактурыПолученныеАванс.Организация
	|		И ДД.ДокументОплаты = ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты
	|		И ДД.Контрагент = ИсправленныеСчетаФактурыПолученныеАванс.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК СобытиеЗнак,
	|	ДД.Период КАК Период,
	|	ДД.КорКонтрагент КАК Контрагент,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.КорПодразделение КАК Подразделение,
	|	ДД.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДД.КорОбъектРасчетов КАК ОбъектРасчетов,
	|	ДД.ДокументОплаты КАК ДокументОплаты,
	|	ДД.ПредоплатаРегл КАК СуммаЗачета,
	|	ДД.ПредоплатаУпр КАК СуммаЗачетаУпр,
	|	ДД.ДокументПереноса КАК ДокументЗачетаАванса
	|ИЗ
	|	ПереносыАвансовВыданных КАК ДД
	|;
	|
	|//////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачислениеНДСАвансыВыданные
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	ЗачетыАвансов = Результат[2].Выгрузить();
		
	НДСАвансыВыданные = РегистрыНакопления.НДСАвансыВыданные.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НДСАвансыВыданные.Колонки.Удалить("Активность");
	НДСАвансыВыданные.Колонки.Добавить("Исправление", Новый ОписаниеТипов("Булево"));
	НДСАвансыВыданные.Колонки.Добавить("ДатаЗачетаАванса", Новый ОписаниеТипов("Дата"));
	
	Если ЗачетыАвансов.Количество()>0 Тогда
		
		НачисленияСВыданногоАванса = Результат[1].Выгрузить(); // ТаблицаЗначений -
		НачисленияСВыданногоАванса.Индексы.Добавить("ДокументОплаты, Контрагент, НаправлениеДеятельности, ОбъектРасчетов, Исправление, ДатаИсправления");

		НачисленияСВыданногоАвансаИтоги = НачисленияСВыданногоАванса.Скопировать(,"ДокументОплаты, Контрагент, НаправлениеДеятельности, ОбъектРасчетов, Исправление, ДатаИсправления"); // ТаблицаЗначений -
		НачисленияСВыданногоАвансаИтоги.Свернуть("ДокументОплаты, Контрагент, ОбъектРасчетов, НаправлениеДеятельности, Исправление, ДатаИсправления");
		
		АвансыПоДокументамОплаты = АвансыВыданныеПоДокументамОплаты(ПараметрыРасчета); // ТаблицаЗначений - 
		АвансыИтогиДокументамОплаты = АвансыПоДокументамОплаты.Скопировать(, "ДокументОплаты, Контрагент, Аванс,АвансУпр");
		АвансыИтогиДокументамОплаты.Свернуть("ДокументОплаты, Контрагент", "Аванс,АвансУпр");
		АвансыИтогиДокументамОплаты.Индексы.Добавить("ДокументОплаты, Контрагент");
		
		ЭтапыЗачета = Новый Массив;
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,Контрагент,НаправлениеДеятельности,ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,Контрагент,ОбъектРасчетов"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,Контрагент,НаправлениеДеятельности"));
		ЭтапыЗачета.Добавить(Новый Структура("ДокументОплаты,Контрагент"));
		
		ПараметрыРаспределенияЗачета = ПараметрыРаспределенияЗачета();
		ПараметрыРаспределенияЗачета.ТолькоРаспределение = Истина;
		ПараметрыРаспределенияЗачета.ОбновитьИдентификатор = Ложь;
		ПараметрыРаспределенияЗачета.ОпределятьПодразделениеПоПогашенномуАвансу = Истина;
	
		Для Каждого СтруктураОтбораЗачета Из ЭтапыЗачета Цикл
			Для каждого Строка Из НачисленияСВыданногоАвансаИтоги Цикл
				
				СтрокаАванса = АвансыИтогиДокументамОплаты.Найти(Строка.ДокументОплаты);
				Если СтрокаАванса = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				СтруктураОтбораАванса = Новый Структура();
				СтруктураОтбораАванса.Вставить("ДокументОплаты", Строка.ДокументОплаты);
				СтруктураОтбораАванса.Вставить("НаправлениеДеятельности", Строка.НаправлениеДеятельности);
				СтруктураОтбораАванса.Вставить("Контрагент", Строка.Контрагент);
				СтруктураОтбораАванса.Вставить("ОбъектРасчетов", Строка.ОбъектРасчетов);
				СтруктураОтбораАванса.Вставить("Исправление", Строка.Исправление);
				СтруктураОтбораАванса.Вставить("ДатаИсправления", Строка.ДатаИсправления);
				СтрокиНачислениеНДС = НачисленияСВыданногоАванса.НайтиСтроки(СтруктураОтбораАванса);
				
				ЗаполнитьЗначенияСвойств(СтруктураОтбораЗачета, СтруктураОтбораАванса);
				СтрокиЗачетАванса = ЗачетыАвансов.НайтиСтроки(СтруктураОтбораЗачета);
				
				ВыполнитьЗачетАвансаВыданного(ПараметрыРасчета, СтрокаАванса, СтрокиНачислениеНДС, СтрокиЗачетАванса, НДСАвансыВыданные, ПараметрыРаспределенияЗачета);
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСАвансыВыданные.Регистратор КАК Регистратор,
	|	НДСАвансыВыданные.Период КАК Период,
	|	НДСАвансыВыданные.Организация КАК Организация,
	|	НДСАвансыВыданные.ДокументОплаты КАК ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент КАК Контрагент,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение КАК Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС КАК СтавкаНДС,
	|	НДСАвансыВыданные.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСАвансыВыданные.НДС КАК НДС,
	|	НДСАвансыВыданные.НДСУпр КАК НДСУпр,
	|	НДСАвансыВыданные.Событие КАК Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	НДСАвансыВыданные.РегламентнаяОперация КАК РегламентнаяОперация,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСАвансыВыданные.Сторно КАК Сторно,
	|	НДСАвансыВыданные.Исправление КАК Исправление,
	|	НДСАвансыВыданные.ДатаЗачетаАванса КАК ДатаЗачетаАванса,
	|	НДСАвансыВыданные.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыВыданныеПереносы
	|ИЗ
	|	&НДСАвансыВыданные КАК НДСАвансыВыданные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НДСАвансыВыданные.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	НДСАвансыВыданные.Период КАК Период,
	|	НДСАвансыВыданные.Организация КАК Организация,
	|	НДСАвансыВыданные.ДокументОплаты КАК ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент КАК Контрагент,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение КАК Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(НДСАвансыВыданные.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСАвансыВыданные.НДС) КАК НДС,
	|	СУММА(НДСАвансыВыданные.НДСУпр) КАК НДСУпр,
	|	НДСАвансыВыданные.Событие КАК Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса КАК ДокументЗачетаАванса,
	|	НДСАвансыВыданные.РегламентнаяОперация КАК РегламентнаяОперация,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПереносАванса) КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыВыданные.Сторно КАК Сторно,
	|	НДСАвансыВыданные.Исправление КАК Исправление,
	|	НДСАвансыВыданные.ДатаЗачетаАванса КАК ДатаЗачетаАванса,
	|	НДСАвансыВыданные.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ НДСАвансыВыданныеПереносыПриход
	|ИЗ
	|	НДСАвансыВыданныеПереносы КАК НДСАвансыВыданные
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСАвансыВыданные.Регистратор,
	|	НДСАвансыВыданные.Период,
	|	НДСАвансыВыданные.Организация,
	|	НДСАвансыВыданные.ДокументОплаты,
	|	НДСАвансыВыданные.Контрагент,
	|	НДСАвансыВыданные.ИсправленныйСчетФактура,
	|	НДСАвансыВыданные.Подразделение,
	|	НДСАвансыВыданные.НаправлениеДеятельности,
	|	НДСАвансыВыданные.СтавкаНДС,
	|	НДСАвансыВыданные.Событие,
	|	НДСАвансыВыданные.ДокументЗачетаАванса,
	|	НДСАвансыВыданные.РегламентнаяОперация,
	|	НДСАвансыВыданные.ИдентификаторФинЗаписи,
	|	НДСАвансыВыданные.Сторно,
	|	НДСАвансыВыданные.Исправление,
	|	НДСАвансыВыданные.ДатаЗачетаАванса,
	|	НДСАвансыВыданные.ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСАвансыВыданныеПереносы
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НДСАвансыВыданные", НДСАвансыВыданные);
	Запрос.Выполнить();
	
	Возврат "НДСАвансыВыданныеПереносыПриход";
	
КонецФункции

#КонецОбласти

#Область ФормированиеДвиженияПоНДС

Процедура СформироватьДвиженияПоНДС(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыДвиженияПоНДС(ПараметрыРасчета);
	
	ИменаТаблицЗаписейДвиженияПоНДС = Новый Массив;
	ИменаТаблицЗаписейДвиженияПоНДС.Добавить(РассчитатьДвиженияПоНДССторно(ПараметрыРасчета));
	ИменаТаблицЗаписейДвиженияПоНДС.Добавить(РассчитатьДвиженияПоНДСПредъявленный(ПараметрыРасчета));
	ИменаТаблицЗаписейДвиженияПоНДС.Добавить(РассчитатьДвиженияПоНДССторноПоИсправленнымСчетамФактурам(ПараметрыРасчета));
	Если ПараметрыРасчета.РасчетАвансовПолученных Тогда
		ИменаТаблицЗаписейДвиженияПоНДС.Добавить(РассчитатьДвиженияПоНДССторноПоИсправленнымСчетамФактурамВыданнымНаАванс(ПараметрыРасчета));
		ИменаТаблицЗаписейДвиженияПоНДС.Добавить(РассчитатьДвиженияПоНДСАвансыПолученные(ПараметрыРасчета));
	КонецЕсли;
	Если ПараметрыРасчета.РасчетАвансовВыданных Тогда
		ИменаТаблицЗаписейДвиженияПоНДС.Добавить(РассчитатьДвиженияПоНДССторноПоИсправленнымСчетамФактурамПолученнымНаАванс(ПараметрыРасчета));
		ИменаТаблицЗаписейДвиженияПоНДС.Добавить(РассчитатьДвиженияПоНДСАвансыВыданные(ПараметрыРасчета));
	КонецЕсли;
	ИменаТаблицЗаписейДвиженияПоНДС.Добавить(РассчитатьЗаписиДвиженияПоНДССохранение(ПараметрыРасчета, ИменаТаблицЗаписейДвиженияПоНДС));

	ЗаписатьДвиженияПоНДС(ПараметрыРасчета, ИменаТаблицЗаписейДвиженияПоНДС);
	ОчиститьДвиженияПоНДС(ПараметрыРасчета, ИменаТаблицЗаписейДвиженияПоНДС);
	
КонецПроцедуры
	
Процедура ПолучитьТекущиеРегистраторыДвиженияПоНДС(ПараметрыРасчета) 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияПоНДС.Регистратор КАК Регистратор,
	|	ДвиженияПоНДС.Организация КАК Организация,
	|	ДвиженияПоНДС.Период      КАК Период
	|ПОМЕСТИТЬ ТекущиеРегистраторыДвиженияПоНДС
	|ИЗ
	|	РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО (Задания.Организация = ДвиженияПоНДС.Организация)
	|			И (Задания.СчетФактура = ДвиженияПоНДС.СчетФактура)
	|ГДЕ
	|	ДвиженияПоНДС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДвиженияПоНДС.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция РассчитатьДвиженияПоНДССторно(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	НДСПредъявленныйОтборСторно.Ссылка КАК Регистратор,
	|	НДСПредъявленныйОтборСторно.Период КАК Период,
	|	НДСПредъявленныйОтборСторно.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	ДвиженияПоНДС.Организация КАК Организация,
	|	ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|	ДвиженияПоНДС.Контрагент КАК Контрагент,
	|	ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|	ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|	ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|	-ДвиженияПоНДС.СуммаБезНДС КАК СуммаБезНДС,
	|	-ДвиженияПоНДС.НДС КАК НДС,
	|	-ДвиженияПоНДС.НДСУпр КАК НДСУпр,
	|	ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДвиженияПоНДС.РегламентнаяОперация КАК РегламентнаяОперация,
	|	ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ДвиженияПоНДС.Регистратор = НДСПредъявленныйОтборСторно.СторнируемыйДокумент
	|			ТОГДА ИСТИНА 
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Сторно
	|ПОМЕСТИТЬ ДвиженияПоНДССторно
	|ИЗ
	|	РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйОтборСторно КАК НДСПредъявленныйОтборСторно
	|	ПО
	|		ДвиженияПоНДС.Регистратор = НДСПредъявленныйОтборСторно.Регистратор
	|		И ДвиженияПоНДС.Организация = НДСПредъявленныйОтборСторно.Организация
	|		И ДвиженияПоНДС.СчетФактура = НДСПредъявленныйОтборСторно.СчетФактура
	|
	|ГДЕ
	|	ДвиженияПоНДС.РегламентнаяОперация
	|	И НЕ ДвиженияПоНДС.Сторно
	|	И ДвиженияПоНДС.Период < &НачалоПериода
	|;
	|
	|/////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСПредъявленныйОтборСторно
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.Выполнить();
	
	Возврат "ДвиженияПоНДССторно";
	
КонецФункции

Функция РассчитатьДвиженияПоНДСПредъявленный(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Входящий) КАК ТипЗаписи,
	|	НДСПредъявленный.Поставщик КАК Контрагент,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС КАК СтавкаНДС,
	|
	|	- ВЫБОР
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0
	|				И НДСПредъявленный.СтавкаНДС.Ставка > 0
	|			ТОГДА НДСПредъявленный.НДС * 100 / НДСПредъявленный.СтавкаНДС.Ставка
	|		ИНАЧЕ НДСПредъявленный.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	- НДСПредъявленный.НДС КАК НДС,
	|	- НДСПредъявленный.НДСУпр КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НДСПредъявленный.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСПредъявленный.Сторно КАК Сторно
	|ПОМЕСТИТЬ ДвиженияПоНДСПоНДСПредъявленный
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПодВидДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Входящий) КАК ТипЗаписи,
	|	НДСПредъявленный.Поставщик КАК Контрагент,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС КАК СтавкаНДС,
	|
	|	- ВЫБОР
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0
	|				И НДСПредъявленный.СтавкаНДС.Ставка > 0
	|			ТОГДА НДСПредъявленный.НДС * 100 / НДСПредъявленный.СтавкаНДС.Ставка
	|		ИНАЧЕ НДСПредъявленный.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	- НДСПредъявленный.НДС КАК НДС,
	|	- НДСПредъявленный.НДСУпр КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НДСПредъявленный.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСПредъявленный.Сторно КАК Сторно
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПоКСФ КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Входящий) КАК ТипЗаписи,
	|	НДСПредъявленный.Поставщик КАК Контрагент,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС КАК СтавкаНДС,
	|
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0
	|				И НДСПредъявленный.СтавкаНДС.Ставка > 0
	|			ТОГДА НДСПредъявленный.НДС * 100 / НДСПредъявленный.СтавкаНДС.Ставка
	|		ИНАЧЕ НДСПредъявленный.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС КАК НДС,
	|	НДСПредъявленный.НДСУпр КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НДСПредъявленный.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСПредъявленный.Сторно КАК Сторно
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "ДвиженияПоНДСПоНДСПредъявленный";
	
КонецФункции

Функция РассчитатьДвиженияПоНДСАвансыПолученные(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НДСАвансыПолученныеЗачеты.Период КАК Период,
	|	НДСАвансыПолученныеЗачеты.Регистратор КАК Регистратор,
	|	НДСАвансыПолученныеЗачеты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Исходящий) КАК ТипЗаписи,
	|	НДСАвансыПолученныеЗачеты.Контрагент КАК Контрагент,
	|	НДСАвансыПолученныеЗачеты.ДокументОплаты КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА НДСАвансыПолученныеЗачеты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.ВычетПриВозвратеАванса)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|		ИНАЧЕ  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|	КОНЕЦ КАК ВидЦенности,
	|	НДСАвансыПолученныеЗачеты.СтавкаНДС КАК СтавкаНДС,
	|	-НДСАвансыПолученныеЗачеты.СуммаБезНДС КАК СуммаБезНДС,
	|	-НДСАвансыПолученныеЗачеты.НДС КАК НДС,
	|	-НДСАвансыПолученныеЗачеты.НДСУпр КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НДСАвансыПолученныеЗачеты.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСАвансыПолученныеЗачеты.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыПолученныеЗачеты.Сторно КАК Сторно
	|ПОМЕСТИТЬ ДвиженияПоНДСПоАвансамПолученным
	|ИЗ
	|	НДСАвансыПолученныеЗачеты КАК НДСАвансыПолученныеЗачеты
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "ДвиженияПоНДСПоАвансамПолученным";
	
КонецФункции

Функция РассчитатьДвиженияПоНДСАвансыВыданные(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НДСАвансыВыданныеЗачеты.Период КАК Период,
	|	НДСАвансыВыданныеЗачеты.Регистратор КАК Регистратор,
	|	НДСАвансыВыданныеЗачеты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Исходящий) КАК ТипЗаписи,
	|	НДСАвансыВыданныеЗачеты.Контрагент КАК Контрагент,
	|	НДСАвансыВыданныеЗачеты.ДокументОплаты КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученныеНалоговыйАгент) КАК ВидЦенности,
	|	НДСАвансыВыданныеЗачеты.СтавкаНДС КАК СтавкаНДС,
	|	-НДСАвансыВыданныеЗачеты.СуммаБезНДС КАК СуммаБезНДС,
	|	-НДСАвансыВыданныеЗачеты.НДС КАК НДС,
	|	-НДСАвансыВыданныеЗачеты.НДСУпр КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НДСАвансыВыданныеЗачеты.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСАвансыВыданныеЗачеты.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыВыданныеЗачеты.Сторно КАК Сторно
	|ПОМЕСТИТЬ ДвиженияПоНДСПоАвансамВыданным
	|ИЗ
	|	НДСАвансыВыданныеЗачеты КАК НДСАвансыВыданныеЗачеты
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыПолученныеАванс КАК СчетаФактурыПолученныеАванс
	|	ПО 
	|		НДСАвансыВыданныеЗачеты.Организация = СчетаФактурыПолученныеАванс.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = СчетаФактурыПолученныеАванс.ДокументОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактурыПолученныеАванс
	|	ПО 
	|		НДСАвансыВыданныеЗачеты.Организация = ИсправленныеСчетаФактурыПолученныеАванс.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты
	|
	|ГДЕ
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС,
	|			СчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НДСАвансыВыданныеЗачеты.Период КАК Период,
	|	НДСАвансыВыданныеЗачеты.Регистратор КАК Регистратор,
	|	НДСАвансыВыданныеЗачеты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Входящий) КАК ТипЗаписи,
	|	НДСАвансыВыданныеЗачеты.Контрагент КАК Контрагент,
	|	НДСАвансыВыданныеЗачеты.ДокументОплаты КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС,
	|						СчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|	КОНЕЦ КАК ВидЦенности,
	|	НДСАвансыВыданныеЗачеты.СтавкаНДС КАК СтавкаНДС,
	|	-НДСАвансыВыданныеЗачеты.СуммаБезНДС КАК СуммаБезНДС,
	|	-НДСАвансыВыданныеЗачеты.НДС КАК НДС,
	|	-НДСАвансыВыданныеЗачеты.НДСУпр КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НДСАвансыВыданныеЗачеты.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСАвансыВыданныеЗачеты.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСАвансыВыданныеЗачеты.Сторно КАК Сторно
	|ИЗ
	|	НДСАвансыВыданныеЗачеты КАК НДСАвансыВыданныеЗачеты
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыПолученныеАванс КАК СчетаФактурыПолученныеАванс
	|	ПО 
	|		НДСАвансыВыданныеЗачеты.Организация = СчетаФактурыПолученныеАванс.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = СчетаФактурыПолученныеАванс.ДокументОплаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактурыПолученныеАванс
	|	ПО 
	|		НДСАвансыВыданныеЗачеты.Организация = ИсправленныеСчетаФактурыПолученныеАванс.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты
	|
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "ДвиженияПоНДСПоАвансамВыданным";
	
КонецФункции

Функция РассчитатьДвиженияПоНДССторноПоИсправленнымСчетамФактурам(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсправленныеСчетаФактуры.Ссылка КАК Ссылка,
	|	ИсправленныеСчетаФактуры.ДатаПолучения КАК Период,
	|	ИсправленныеСчетаФактуры.Организация КАК Организация,
	|	ИсправленныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	ИсправленныеСчетаФактуры.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ПОМЕСТИТЬ ВсеИсправленныеСчетаФактуры
	|ИЗ
	|	ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	ДвиженияПоНДС.Регистратор КАК Регистратор,
	|	ДвиженияПоНДС.Период КАК Период,
	|	ДвиженияПоНДС.Организация КАК Организация,
	|	ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|	ДвиженияПоНДС.Контрагент КАК Контрагент,
	|	ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|	ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|	ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ДвиженияПоНДС.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ДвиженияПоНДС.НДС) КАК НДС,
	|	СУММА(ДвиженияПоНДС.НДСУпр) КАК НДСУпр,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ КАК Сторно
	|ПОМЕСТИТЬ ДвиженияПоНДССторноПоИсправленнымСчетамФактурам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период КАК Период,
	|		ДвиженияПоНДС.Организация КАК Организация,
	|		ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|		ДвиженияПоНДС.Контрагент КАК Контрагент,
	|		ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|		ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|		ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|		-ДвиженияПоНДС.СуммаБезНДС КАК СуммаБезНДС,
	|		-ДвиженияПоНДС.НДС КАК НДС,
	|		-ДвиженияПоНДС.НДСУпр КАК НДСУпр,
	|		ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	ИЗ
	|		ВсеИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|		ПО
	|			ДвиженияПоНДС.Организация = ИсправленныеСчетаФактуры.Организация
	|			И ДвиженияПоНДС.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|			И ДвиженияПоНДС.Регистратор <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И ДвиженияПоНДС.Период < &НачалоПериода
	|			И ДвиженияПоНДС.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период КАК Период,
	|		ДвиженияПоНДС.Организация КАК Организация,
	|		ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|		ДвиженияПоНДС.Контрагент КАК Контрагент,
	|		ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|		ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|		ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|		-ДвиженияПоНДС.СуммаБезНДС КАК СуммаБезНДС,
	|		-ДвиженияПоНДС.НДС КАК НДС,
	|		-ДвиженияПоНДС.НДСУпр КАК НДСУпр,
	|		ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	ИЗ
	|		ВсеИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|		ПО
	|			ДвиженияПоНДС.Организация = ИсправленныеСчетаФактуры.Организация
	|			И ДвиженияПоНДС.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|			И ДвиженияПоНДС.Регистратор <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И ДвиженияПоНДС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НЕ ДвиженияПоНДС.РегламентнаяОперация
	|			И ДвиженияПоНДС.Активность) КАК ДвиженияПоНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияПоНДС.Регистратор,
	|	ДвиженияПоНДС.Период,
	|	ДвиженияПоНДС.Организация,
	|	ДвиженияПоНДС.ТипЗаписи,
	|	ДвиженияПоНДС.Контрагент,
	|	ДвиженияПоНДС.СчетФактура,
	|	ДвиженияПоНДС.ВидЦенности,
	|	ДвиженияПоНДС.СтавкаНДС,
	|	ДвиженияПоНДС.ОбъектРасчетов,
	|	ДвиженияПоНДС.ИдентификаторФинЗаписи,
	|	ДвиженияПоНДС.НастройкаХозяйственнойОперации
	|ИМЕЮЩИЕ
	|	СУММА(ДвиженияПоНДС.НДС) <> 0 ИЛИ СУММА(ДвиженияПоНДС.СуммаБезНДС) <> 0
	|;
	|
	|////////////////////////
	|УНИЧТОЖИТЬ ВсеИсправленныеСчетаФактуры
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.Выполнить();
	
	Возврат "ДвиженияПоНДССторноПоИсправленнымСчетамФактурам";
	
КонецФункции

Функция РассчитатьДвиженияПоНДССторноПоИсправленнымСчетамФактурамВыданнымНаАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	ДвиженияПоНДС.Регистратор КАК Регистратор,
	|	ДвиженияПоНДС.Период КАК Период,
	|	ДвиженияПоНДС.Организация КАК Организация,
	|	ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|	ДвиженияПоНДС.Контрагент КАК Контрагент,
	|	ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|	ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|	ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ДвиженияПоНДС.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ДвиженияПоНДС.НДС) КАК НДС,
	|	СУММА(ДвиженияПоНДС.НДСУпр) КАК НДСУпр,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ КАК Сторно
	|ПОМЕСТИТЬ ДвиженияПоНДССторноПоИсправленнымСчетамФактурамВыданнымНаАванс
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период КАК Период,
	|		ДвиженияПоНДС.Организация КАК Организация,
	|		ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|		ДвиженияПоНДС.Контрагент КАК Контрагент,
	|		ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|		ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|		ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|		-ДвиженияПоНДС.СуммаБезНДС КАК СуммаБезНДС,
	|		-ДвиженияПоНДС.НДС КАК НДС,
	|		-ДвиженияПоНДС.НДСУпр КАК НДСУпр,
	|		ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|		ПО
	|			ДвиженияПоНДС.Организация = ИсправленныеСчетаФактуры.Организация
	|			И ДвиженияПоНДС.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И ДвиженияПоНДС.Регистратор <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И ДвиженияПоНДС.Период < &НачалоПериода
	|			И ДвиженияПоНДС.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период КАК Период,
	|		ДвиженияПоНДС.Организация КАК Организация,
	|		ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|		ДвиженияПоНДС.Контрагент КАК Контрагент,
	|		ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|		ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|		ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|		-ДвиженияПоНДС.СуммаБезНДС КАК СуммаБезНДС,
	|		-ДвиженияПоНДС.НДС КАК НДС,
	|		-ДвиженияПоНДС.НДСУпр КАК НДСУпр,
	|		ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|		ПО
	|			ДвиженияПоНДС.Организация = ИсправленныеСчетаФактуры.Организация
	|			И ДвиженияПоНДС.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И ДвиженияПоНДС.Регистратор <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И ДвиженияПоНДС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НЕ ДвиженияПоНДС.РегламентнаяОперация
	|			И ДвиженияПоНДС.Активность) КАК ДвиженияПоНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияПоНДС.Регистратор,
	|	ДвиженияПоНДС.Период,
	|	ДвиженияПоНДС.Организация,
	|	ДвиженияПоНДС.ТипЗаписи,
	|	ДвиженияПоНДС.Контрагент,
	|	ДвиженияПоНДС.СчетФактура,
	|	ДвиженияПоНДС.ВидЦенности,
	|	ДвиженияПоНДС.СтавкаНДС,
	|	ДвиженияПоНДС.ОбъектРасчетов,
	|	ДвиженияПоНДС.ИдентификаторФинЗаписи,
	|	ДвиженияПоНДС.НастройкаХозяйственнойОперации
	|ИМЕЮЩИЕ
	|	СУММА(ДвиженияПоНДС.НДС) <> 0 ИЛИ СУММА(ДвиженияПоНДС.СуммаБезНДС) <> 0
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.Выполнить();
	
	Возврат "ДвиженияПоНДССторноПоИсправленнымСчетамФактурамВыданнымНаАванс";
	
КонецФункции

Функция РассчитатьДвиженияПоНДССторноПоИсправленнымСчетамФактурамПолученнымНаАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	ДвиженияПоНДС.Регистратор КАК Регистратор,
	|	ДвиженияПоНДС.Период КАК Период,
	|	ДвиженияПоНДС.Организация КАК Организация,
	|	ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|	ДвиженияПоНДС.Контрагент КАК Контрагент,
	|	ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|	ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|	ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ДвиженияПоНДС.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ДвиженияПоНДС.НДС) КАК НДС,
	|	СУММА(ДвиженияПоНДС.НДСУпр) КАК НДСУпр,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ КАК Сторно
	|ПОМЕСТИТЬ ДвиженияПоНДССторноПоИсправленнымСчетамФактурамПолученнымНаАванс
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период КАК Период,
	|		ДвиженияПоНДС.Организация КАК Организация,
	|		ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|		ДвиженияПоНДС.Контрагент КАК Контрагент,
	|		ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|		ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|		ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|		-ДвиженияПоНДС.СуммаБезНДС КАК СуммаБезНДС,
	|		-ДвиженияПоНДС.НДС КАК НДС,
	|		-ДвиженияПоНДС.НДСУпр КАК НДСУпр,
	|		ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	ИЗ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|		ПО
	|			ДвиженияПоНДС.Организация = ИсправленныеСчетаФактуры.Организация
	|			И ДвиженияПоНДС.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И ДвиженияПоНДС.Регистратор <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И ДвиженияПоНДС.Период < &НачалоПериода
	|			И ДвиженияПоНДС.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период КАК Период,
	|		ДвиженияПоНДС.Организация КАК Организация,
	|		ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|		ДвиженияПоНДС.Контрагент КАК Контрагент,
	|		ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|		ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|		ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|		-ДвиженияПоНДС.СуммаБезНДС КАК СуммаБезНДС,
	|		-ДвиженияПоНДС.НДС КАК НДС,
	|		-ДвиженияПоНДС.НДСУпр КАК НДСУпр,
	|		ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	ИЗ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|		ПО
	|			ДвиженияПоНДС.Организация = ИсправленныеСчетаФактуры.Организация
	|			И ДвиженияПоНДС.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И ДвиженияПоНДС.Регистратор <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И ДвиженияПоНДС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НЕ ДвиженияПоНДС.РегламентнаяОперация
	|			И ДвиженияПоНДС.Активность) КАК ДвиженияПоНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияПоНДС.Регистратор,
	|	ДвиженияПоНДС.Период,
	|	ДвиженияПоНДС.Организация,
	|	ДвиженияПоНДС.ТипЗаписи,
	|	ДвиженияПоНДС.Контрагент,
	|	ДвиженияПоНДС.СчетФактура,
	|	ДвиженияПоНДС.ВидЦенности,
	|	ДвиженияПоНДС.СтавкаНДС,
	|	ДвиженияПоНДС.ОбъектРасчетов,
	|	ДвиженияПоНДС.ИдентификаторФинЗаписи,
	|	ДвиженияПоНДС.НастройкаХозяйственнойОперации
	|ИМЕЮЩИЕ
	|	СУММА(ДвиженияПоНДС.НДС) <> 0 ИЛИ СУММА(ДвиженияПоНДС.СуммаБезНДС) <> 0
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.Выполнить();
	
	Возврат "ДвиженияПоНДССторноПоИсправленнымСчетамФактурамПолученнымНаАванс";
	
КонецФункции

Функция РассчитатьЗаписиДвиженияПоНДССохранение(ПараметрыРасчета, ИменаТаблицЗаписейДвиженияПоНДС)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	МассивТекстовРегистраторыЗапись.Добавить(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НЕОПРЕДЕЛЕНО КАК Регистратор
		|ПОМЕСТИТЬ РегистраторыЗапись
		|ГДЕ
		|	ЛОЖЬ");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияПоНДС.Регистратор
	|ИЗ
	|	&ИмяТаблицы КАК ДвиженияПоНДС";
	Для Каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейДвиженияПоНДС Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", ИмяТаблицыЗаписей);
		МассивТекстовРегистраторыЗапись.Добавить(ТекстЗапроса);
	КонецЦикла;
	
	МассивТекстовРегистраторыЗапись.Добавить(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДвиженияПоНДС.Регистратор
		|ИЗ
		|	ТекущиеРегистраторыДвиженияПоНДС КАК ДвиженияПоНДС
		|
		|" + "ИНДЕКСИРОВАТЬ ПО Регистратор");
	ТекстЗапросаРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	ТекстЗапросаСохранение = 
	"ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	ДвиженияПоНДС.Период КАК Период,
	|	ДвиженияПоНДС.Регистратор КАК Регистратор,
	|	ДвиженияПоНДС.Организация КАК Организация,
	|	ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|	ДвиженияПоНДС.Контрагент КАК Контрагент,
	|	ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|	ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|	ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|	ДвиженияПоНДС.СуммаБезНДС КАК СуммаБезНДС,
	|	ДвиженияПоНДС.НДС КАК НДС,
	|	ДвиженияПоНДС.НДСУпр КАК НДСУпр,
	|	ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДвиженияПоНДС.РегламентнаяОперация КАК РегламентнаяОперация,
	|	ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ДвиженияПоНДС.Сторно КАК Сторно
	|ПОМЕСТИТЬ ДвиженияПоНДССохранение
	|ИЗ
	|	РегистрНакопления.ДвиженияПоНДС КАК ДвиженияПоНДС
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		ДвиженияПоНДС.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация = ДвиженияПоНДС.Организация
	|		И Задания.СчетФактура = ДвиженияПоНДС.СчетФактура
	|ГДЕ
	|	НЕ РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|	И (ДвиженияПоНДС.Период < &НачалоПериода
	|			ИЛИ ДвиженияПоНДС.Период > &КонецПериода
	|			ИЛИ НЕ ДвиженияПоНДС.РегламентнаяОперация
	|			ИЛИ Задания.СчетФактура ЕСТЬ NULL)
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";

	Запрос = Новый Запрос;
	Запрос.Текст = 
		ТекстЗапросаРегистраторыЗапись
		+ ОбщегоНазначения.РазделительПакетаЗапросов()
		+ ТекстЗапросаСохранение;
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "ДвиженияПоНДССохранение";
	
КонецФункции

Процедура ЗаписатьДвиженияПоНДС(ПараметрыРасчета, ИменаТаблицЗаписейДвиженияПоНДС)
	
	МассивТекстовДанных = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияПоНДС.Приоритет КАК Приоритет,
	|	ДвиженияПоНДС.Период КАК Период,
	|	ДвиженияПоНДС.Регистратор КАК Регистратор,
	|	ДвиженияПоНДС.Организация КАК Организация,
	|	ДвиженияПоНДС.ТипЗаписи КАК ТипЗаписи,
	|	ДвиженияПоНДС.Контрагент КАК Контрагент,
	|	ДвиженияПоНДС.СчетФактура КАК СчетФактура,
	|	ДвиженияПоНДС.СтавкаНДС КАК СтавкаНДС,
	|	ДвиженияПоНДС.ВидЦенности КАК ВидЦенности,
	|	ДвиженияПоНДС.СуммаБезНДС КАК СуммаБезНДС,
	|	ДвиженияПоНДС.НДС КАК НДС,
	|	ДвиженияПоНДС.НДСУпр КАК НДСУпр,
	|	ДвиженияПоНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДвиженияПоНДС.РегламентнаяОперация КАК РегламентнаяОперация,
	|	ДвиженияПоНДС.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДвиженияПоНДС.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ДвиженияПоНДС.Сторно КАК Сторно
	|ИЗ
	|	&ДвиженияПоНДС КАК ДвиженияПоНДС";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейДвиженияПоНДС Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ДвиженияПоНДС", ИмяТаблицыЗаписей);
		МассивТекстовДанных.Добавить(ТекстЗапроса);
	КонецЦикла;
	ТекстДанныеДляЗаписи = СтрСоединить(МассивТекстовДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		ТекстДанныеДляЗаписи
		+ "
		|
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор,
		|	Период,
		|	Приоритет
		|
		|ИТОГИ ПО
		|	Регистратор
		|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ДвиженияПоНДС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		// Проверка дат запрета не производится, т.к. сюда попадаем при выполнении заданий, 
		// а при создании заданий даты запрета контролируются. 
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьДвиженияПоНДС(ПараметрыРасчета, ИменаТаблицЗаписейДвиженияПоНДС)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	МассивТекстовРегистраторыЗапись.Добавить(
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Регистратор
		|ПОМЕСТИТЬ РегистраторыЗапись
		|ГДЕ
		|	ЛОЖЬ");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияПоНДС.Регистратор
	|ИЗ
	|	&ИмяТаблицы КАК ДвиженияПоНДС";
	Для Каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейДвиженияПоНДС Цикл
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", ИмяТаблицыЗаписей);
		МассивТекстовРегистраторыЗапись.Добавить(ТекстЗапроса);
	КонецЦикла;
	
	ТекстЗапросаРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	ТекстЗапросаРегистраторыЗапись = 
		ТекстЗапросаРегистраторыЗапись
		+ "
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор";
	
	ТекстЗапросаУстаревшиеРегистраторы = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыДвиженияПоНДС КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО
	|		УстаревшиеРегистраторы.Регистратор = РегистраторыЗапись.Регистратор
	|
	|ГДЕ
	|	РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаРегистраторыЗапись
		+ ОбщегоНазначения.РазделительПакетаЗапросов()
		+ ТекстЗапросаУстаревшиеРегистраторы;
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ДвиженияПоНДС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ФормированиеДвиженияКорректировкиСписанияНДСНаРасходы

Процедура СформироватьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыСписанияНДСНаРасходы(ПараметрыРасчета);
	РассчитатьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета);
	РассчитатьПрочиеРасходыСохранение(ПараметрыРасчета);
	РассчитатьДвиженияПоПрочимАктивамПассивамСохранение(ПараметрыРасчета);
	
	ЗаписатьНДСПрочиеРасходы(ПараметрыРасчета);
	ЗаписатьНДСДвиженияПоПрочимАктивамПассивам(ПараметрыРасчета);
	ОчиститьНДСПрочиеРасходы(ПараметрыРасчета);
	ОчиститьНДСДвиженияПоПрочимАктивамПассивам(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыСписанияНДСНаРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТекущиеРегистраторыПрочиеРасходы
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТекущиеРегистраторыНДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		ПрочиеРасходы.Регистратор = НДСПредъявленный.Регистратор
	|ГДЕ
	|	ПрочиеРасходы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям)
	|	И НЕ ПрочиеРасходы.Регистратор ССЫЛКА Документ.СписаниеНДСНаРасходы
	|	И НЕ ПрочиеРасходы.РасчетСебестоимости
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияПоПрочимАктивамПассивам.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТекущиеРегистраторыДвиженияПоПрочимАктивамПассивам
	|ИЗ
	|	РегистрНакопления.ДвиженияПоПрочимАктивамПассивам КАК ДвиженияПоПрочимАктивамПассивам
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТекущиеРегистраторыНДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		ДвиженияПоПрочимАктивамПассивам.Регистратор = НДСПредъявленный.Регистратор
	|ГДЕ
	|	ДвиженияПоПрочимАктивамПассивам.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям)
	|	И НЕ ДвиженияПоПрочимАктивамПассивам.Регистратор ССЫЛКА Документ.СписаниеНДСНаРасходы
	|	И НЕ ДвиженияПоПрочимАктивамПассивам.РасчетСебестоимости
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1                                        КАК Приоритет,
	|	НДСПредъявленный.Период                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	НДСПредъявленный.Регистратор             КАК Регистратор,
	|	НДСПредъявленный.Организация             КАК Организация,
	|	НДСПредъявленный.Подразделение           КАК Подразделение,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов          КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов       КАК АналитикаРасходов,
	|	0                                        КАК Сумма,
	|	0                                        КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                     КАК СуммаРегл,
	|	НДСПредъявленный.НДСУпр                  КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА НЕ НДСПредъявленный.СтатьяРасходов.ПринятиеКНалоговомуУчету ТОГДА
	|			НДСПредъявленный.НДС 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК ПостояннаяРазница,
	|	0                                        КАК ВременнаяРазница,
	|	ЛОЖЬ                                     КАК Сторно,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям) КАК ХозяйственнаяОперация,
	|	НДСПредъявленный.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ ПрочиеРасходы
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		НДСПредъявленный.Организация = СписанияНДСНаРасходы.Организация
	|		И НДСПредъявленный.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|	И ТИПЗНАЧЕНИЯ(СписанияНДСНаРасходы.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1                                        КАК Приоритет,
	|	НДСПредъявленный.Период                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	НДСПредъявленный.Регистратор             КАК Регистратор,
	|	НДСПредъявленный.Организация             КАК Организация,
	|	НДСПредъявленный.Подразделение           КАК Подразделение,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов          КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов       КАК АналитикаРасходов,
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -НДСПредъявленный.НДС
	|		ИНАЧЕ НДСПредъявленный.НДС
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -НДСПредъявленный.НДСУпр
	|		ИНАЧЕ НДСПредъявленный.НДСУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НДСПредъявленный.Сторно КАК Сторно,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям) КАК ХозяйственнаяОперация,
	|	НДСПредъявленный.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	НДСПредъявленныйСторно КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО 
	|		НДСПредъявленный.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		НДСПредъявленный.Организация = СписанияНДСНаРасходы.Организация
	|		И НДСПредъявленный.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|;
	|
	|ВЫБРАТЬ
	|	1                                         КАК Приоритет,
	|	НДСПредъявленный.Период                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	СписанияНДСНаРасходы.СписаниеНДСНаРасходы КАК Регистратор,
	|	НДСПредъявленный.Организация              КАК Организация,
	|	НДСПредъявленный.Подразделение            КАК Подразделение,
	|	НДСПредъявленный.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	СписанияНДСНаРасходы.СтатьяРасходов       КАК Статья,
	|	СписанияНДСНаРасходы.АналитикаАктивовПассивов  КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	0                                               КАК СуммаСНДС,
	|	0                                               КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                            КАК СуммаРегл,
	|	НДСПредъявленный.НДСУпр                         КАК СуммаУпр,
	|	НДСПредъявленный.НДС                            КАК ПостояннаяРазница,
	|	0                                               КАК ВременнаяРазница,
	|	
	|	НДСПредъявленный.ИдентификаторСтроки            КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленный.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ                                            КАК Сторно
	|ПОМЕСТИТЬ ДвиженияПоПрочимАктивамПассивам
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		НДСПредъявленный.Организация = СписанияНДСНаРасходы.Организация
	|		И НДСПредъявленный.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|	И ТИПЗНАЧЕНИЯ(СписанияНДСНаРасходы.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1                                              КАК Приоритет,
	|	НДСПредъявленныйСторно.Период                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	СписанияНДСНаРасходы.СписаниеНДСНаРасходы      КАК Регистратор,
	|	НДСПредъявленныйСторно.Организация             КАК Организация,
	|	НДСПредъявленныйСторно.Подразделение           КАК Подразделение,
	|	НДСПредъявленныйСторно.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СписанияНДСНаРасходы.СтатьяРасходов            КАК Статья,
	|	СписанияНДСНаРасходы.АналитикаАктивовПассивов  КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	0                                                     КАК СуммаСНДС,
	|	0                                                     КАК СуммаБезНДС,
	|	НДСПредъявленныйСторно.НДС                            КАК СуммаРегл,
	|	НДСПредъявленныйСторно.НДСУпр                         КАК СуммаУпр,
	|	НДСПредъявленныйСторно.НДС                            КАК ПостояннаяРазница,
	|	0                                                     КАК ВременнаяРазница,
	|	
	|	НДСПредъявленныйСторно.ИдентификаторСтроки            КАК ИдентификаторФинЗаписи,
	|	НДСПредъявленныйСторно.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	НДСПредъявленныйСторно.Сторно                         КАК Сторно
	|ИЗ
	|	НДСПредъявленныйСторно КАК НДСПредъявленныйСторно
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		НДСПредъявленныйСторно.Организация = СписанияНДСНаРасходы.Организация
	|		И НДСПредъявленныйСторно.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	НДСПредъявленныйСторно.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|	И ТИПЗНАЧЕНИЯ(СписанияНДСНаРасходы.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьПрочиеРасходыСохранение(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ИЗ
	|	ПрочиеРасходы КАК ПрочиеРасходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыПрочиеРасходы КАК ПрочиеРасходы
	|;
	|
	|ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.СуммаУпр,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.АналитикаУчетаНоменклатуры,
	|	ПрочиеРасходы.СчетКт,
	|	ПрочиеРасходы.СуммаПрочихАктивов,
	|	ПрочиеРасходы.РегистрацияВНалоговомОргане,
	|	ПрочиеРасходы.ДокументДвижения,
	|	ПрочиеРасходы.КорСтатьяРасходов,
	|	ПрочиеРасходы.КорОрганизация,
	|	ПрочиеРасходы.ДоляСтоимости,
	|	ПрочиеРасходы.КорПодразделение,
	|	ПрочиеРасходы.КорАналитикаРасходов,
	|	ПрочиеРасходы.ГруппаПродукции,
	|	ПрочиеРасходы.КорСтатьяКалькуляции,
	|	ПрочиеРасходы.РасчетСебестоимости,
	|	ПрочиеРасходы.РасчетПартий,
	|	ПрочиеРасходы.ИдентификаторСтроки,
	|	ПрочиеРасходы.КорНаправлениеДеятельности,
	|	ПрочиеРасходы.КорОбъектУчетаРезервов,
	|	ПрочиеРасходы.КорВидРезервов,
	|	ПрочиеРасходы.ВидИсточника,
	|	ПрочиеРасходы.ИдентификаторФинЗаписи,
	|	ПрочиеРасходы.НастройкаХозяйственнойОперации,
	|	ПрочиеРасходы.Сторно,
	|	ПрочиеРасходы.ДокументРасчета,
	|	ПрочиеРасходы.РежимЗакрытияМесяца
	|	
	|ПОМЕСТИТЬ ПрочиеРасходыСохранение
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		ПрочиеРасходы.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|ГДЕ
	|	ПрочиеРасходы.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям)
	|	ИЛИ ПрочиеРасходы.РасчетПартий
	|	ИЛИ ПрочиеРасходы.РасчетСебестоимости
	|	ИЛИ НЕ ПрочиеРасходы.Организация В (&МассивОрганизаций)
	|	ИЛИ ПрочиеРасходы.Период < &НачалоПериода 
	|	ИЛИ ПрочиеРасходы.Период > &КонецПериода 
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьДвиженияПоПрочимАктивамПассивамСохранение(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияПоПрочимАктивамПассивам.Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ИЗ
	|	ДвиженияПоПрочимАктивамПассивам КАК ДвиженияПоПрочимАктивамПассивам
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияПоПрочимАктивамПассивам.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыДвиженияПоПрочимАктивамПассивам КАК ДвиженияПоПрочимАктивамПассивам
	|;
	|
	|ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	ДвиженияПоПрочимАктивамПассивам.Период,
	|	ДвиженияПоПрочимАктивамПассивам.Регистратор,
	|	ДвиженияПоПрочимАктивамПассивам.Организация,
	|	ДвиженияПоПрочимАктивамПассивам.Подразделение,
	|	ДвиженияПоПрочимАктивамПассивам.НаправлениеДеятельности,
	|	ДвиженияПоПрочимАктивамПассивам.Статья,
	|	ДвиженияПоПрочимАктивамПассивам.Аналитика,
	|	ДвиженияПоПрочимАктивамПассивам.ДебетКредит КАК ДебетКредит,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаБезНДС,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаСНДС,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаРегл,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаУпр,
	|	ДвиженияПоПрочимАктивамПассивам.ПостояннаяРазница,
	|	ДвиженияПоПрочимАктивамПассивам.ВременнаяРазница,
	|	ДвиженияПоПрочимАктивамПассивам.Сторно,
	|	ДвиженияПоПрочимАктивамПассивам.НастройкаХозяйственнойОперации,
	|	ДвиженияПоПрочимАктивамПассивам.ИдентификаторФинЗаписи,
	|	ДвиженияПоПрочимАктивамПассивам.РасчетСебестоимости,
	|	ДвиженияПоПрочимАктивамПассивам.ВидИсточника
	|	
	|ПОМЕСТИТЬ ДвиженияПоПрочимАктивамПассивамСохранение
	|ИЗ
	|	РегистрНакопления.ДвиженияПоПрочимАктивамПассивам КАК ДвиженияПоПрочимАктивамПассивам
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		ДвиженияПоПрочимАктивамПассивам.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|ГДЕ
	|	ДвиженияПоПрочимАктивамПассивам.НастройкаХозяйственнойОперации <> ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям)
	|	ИЛИ НЕ ДвиженияПоПрочимАктивамПассивам.Организация В (&МассивОрганизаций)
	|	ИЛИ ДвиженияПоПрочимАктивамПассивам.Период < &НачалоПериода 
	|	ИЛИ ДвиженияПоПрочимАктивамПассивам.Период > &КонецПериода 
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаписатьНДСПрочиеРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрочиеРасходы.Приоритет,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.СуммаУпр,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.АналитикаУчетаНоменклатуры,
	|	ПрочиеРасходы.СчетКт,
	|	ПрочиеРасходы.СуммаПрочихАктивов,
	|	ПрочиеРасходы.РегистрацияВНалоговомОргане,
	|	ПрочиеРасходы.ДокументДвижения,
	|	ПрочиеРасходы.КорСтатьяРасходов,
	|	ПрочиеРасходы.КорОрганизация,
	|	ПрочиеРасходы.ДоляСтоимости,
	|	ПрочиеРасходы.КорПодразделение,
	|	ПрочиеРасходы.КорАналитикаРасходов,
	|	ПрочиеРасходы.ГруппаПродукции,
	|	ПрочиеРасходы.КорСтатьяКалькуляции,
	|	ПрочиеРасходы.РасчетСебестоимости,
	|	ПрочиеРасходы.РасчетПартий,
	|	ПрочиеРасходы.ИдентификаторСтроки,
	|	ПрочиеРасходы.КорНаправлениеДеятельности,
	|	ПрочиеРасходы.КорОбъектУчетаРезервов,
	|	ПрочиеРасходы.КорВидРезервов,
	|	ПрочиеРасходы.ВидИсточника,
	|	ПрочиеРасходы.ИдентификаторФинЗаписи,
	|	ПрочиеРасходы.НастройкаХозяйственнойОперации,
	|	ПрочиеРасходы.Сторно,
	|	ПрочиеРасходы.ДокументРасчета,
	|	ПрочиеРасходы.РежимЗакрытияМесяца
	|ИЗ
	|	ПрочиеРасходыСохранение КАК ПрочиеРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Приоритет,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.СуммаУпр,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ПрочиеРасходы.ИдентификаторФинЗаписи,
	|	ПрочиеРасходы.НастройкаХозяйственнойОперации,
	|	ПрочиеРасходы.Сторно,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ПрочиеРасходы КАК ПрочиеРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	Период,
	|	Приоритет
	|
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаписатьНДСДвиженияПоПрочимАктивамПассивам(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвиженияПоПрочимАктивамПассивам.Приоритет,
	|	ДвиженияПоПрочимАктивамПассивам.Период,
	|	ДвиженияПоПрочимАктивамПассивам.Регистратор,
	|	ДвиженияПоПрочимАктивамПассивам.Организация,
	|	ДвиженияПоПрочимАктивамПассивам.Подразделение,
	|	ДвиженияПоПрочимАктивамПассивам.НаправлениеДеятельности,
	|	ДвиженияПоПрочимАктивамПассивам.Статья,
	|	ДвиженияПоПрочимАктивамПассивам.Аналитика,
	|	ДвиженияПоПрочимАктивамПассивам.ДебетКредит,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаБезНДС,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаСНДС,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаРегл,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаУпр,
	|	ДвиженияПоПрочимАктивамПассивам.ПостояннаяРазница,
	|	ДвиженияПоПрочимАктивамПассивам.ВременнаяРазница,
	|	ДвиженияПоПрочимАктивамПассивам.Сторно,
	|	ДвиженияПоПрочимАктивамПассивам.НастройкаХозяйственнойОперации,
	|	ДвиженияПоПрочимАктивамПассивам.ИдентификаторФинЗаписи,
	|	ДвиженияПоПрочимАктивамПассивам.РасчетСебестоимости,
	|	ДвиженияПоПрочимАктивамПассивам.ВидИсточника
	|ИЗ
	|	ДвиженияПоПрочимАктивамПассивамСохранение КАК ДвиженияПоПрочимАктивамПассивам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияПоПрочимАктивамПассивам.Приоритет,
	|	ДвиженияПоПрочимАктивамПассивам.Период,
	|	ДвиженияПоПрочимАктивамПассивам.Регистратор,
	|	ДвиженияПоПрочимАктивамПассивам.Организация,
	|	ДвиженияПоПрочимАктивамПассивам.Подразделение,
	|	ДвиженияПоПрочимАктивамПассивам.НаправлениеДеятельности,
	|	ДвиженияПоПрочимАктивамПассивам.Статья,
	|	ДвиженияПоПрочимАктивамПассивам.Аналитика,
	|	ДвиженияПоПрочимАктивамПассивам.ДебетКредит,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаБезНДС,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаСНДС,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаРегл,
	|	ДвиженияПоПрочимАктивамПассивам.СуммаУпр,
	|	ДвиженияПоПрочимАктивамПассивам.ПостояннаяРазница,
	|	ДвиженияПоПрочимАктивамПассивам.ВременнаяРазница,
	|	ДвиженияПоПрочимАктивамПассивам.Сторно,
	|	ДвиженияПоПрочимАктивамПассивам.НастройкаХозяйственнойОперации,
	|	ДвиженияПоПрочимАктивамПассивам.ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ДвиженияПоПрочимАктивамПассивам КАК ДвиженияПоПрочимАктивамПассивам
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	Период,
	|	Приоритет
	|
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьНДСПрочиеРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыПрочиеРасходы КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПрочиеРасходы КАК ПрочиеРасходы
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = ПрочиеРасходы.Регистратор
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПрочиеРасходыСохранение КАК ПрочиеРасходыСохранение
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = ПрочиеРасходыСохранение.Регистратор
	|ГДЕ
	|	ПрочиеРасходы.Регистратор ЕСТЬ NULL
	|	И ПрочиеРасходыСохранение.Регистратор ЕСТЬ NULL
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьНДСДвиженияПоПрочимАктивамПассивам(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыДвиженияПоПрочимАктивамПассивам КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДвиженияПоПрочимАктивамПассивам КАК ДвиженияПоПрочимАктивамПассивам
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = ДвиженияПоПрочимАктивамПассивам.Регистратор
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДвиженияПоПрочимАктивамПассивамСохранение КАК ДвиженияПоПрочимАктивамПассивамСохранение
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = ДвиженияПоПрочимАктивамПассивамСохранение.Регистратор
	|ГДЕ
	|	ДвиженияПоПрочимАктивамПассивам.Регистратор ЕСТЬ NULL
	|	И ДвиженияПоПрочимАктивамПассивамСохранение.Регистратор ЕСТЬ NULL
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

// Выводит сообщения об ошибках указания суммы НДС в табличной части документа закупки.
//
// Параметры:
// Выборка         - ВыборкаИзРезультатаЗапроса - выборка из результата запроса
// ОписаниеДокументаПродажи - Структура - описание документа 
// Отказ           - Булево - Флаг отказа от проведения документа.
//
Процедура СообщитьОбОшибкахКорректностьСуммыИСуммыНДСЗакупки(Знач Выборка, ОписаниеДокументаПродажи, Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru='Сумма НДС %СуммаНДС% %Валюта% при ставке ""%СтавкаНДС%"" больше общей суммы по строке %Сумма% %Валюта%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СуммаНДС%",          Выборка.СуммаНДС);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Сумма%",             Выборка.Сумма);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",         Выборка.СтавкаНДС);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Валюта%",            Выборка.Валюта);
		
		АдресОшибки = " " + НСтр("ru='в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
		АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ОписаниеДокументаПродажи.ПредставлениеТЧ);
		
		ПродажиСервер.СообщитьПользователюОбОшибке(
			ТекстОшибки + АдресОшибки,
			ОписаниеДокументаПродажи.ДокументЗакупки,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ОписаниеДокументаПродажи.ИмяТЧ, Выборка.НомерСтроки, "СуммаНДС"),
			Отказ);
				
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область МеждународныйУчет


#КонецОбласти

#КонецОбласти

#Область АнализУчетаАвансовДляНДС

// Создает структуру параметров для подготовки временных таблиц с расчетами
// 
// Параметры:
//  ИсходныеПараметры - Неопределено, Структура - произвольная структура с заполненными значениями
// 
// Возвращаемое значение:
// 	Структура - Описание:
//   * ДатаНачала                    - Дата -
//   * ДатаОкончания                 - Дата -
//   * Организации                   - Неопределено, СправочникСсылка.Организации, Массив из СправочникСсылка.Организации -
//   * РасчетныйДокумент             - Неопределено, ДокументСсылка - дополнительный фильтр по расчетному документу
//   * СоздатьПустуюТаблицу          - Булево - позволяет создать каркас временной таблицы без данных
//   * ВключитьДанныеВзаиморасчетов         - Булево - По умолчанию "Истина"
//   * ВключитьДанныеПодарочныхСертификатов - Булево - По умолчанию "Ложь"
//   * ВключитьДанныеФинансовыхИнструментов - Булево - По умолчанию "Ложь"
//   * ПоляИндексовВручную           - Массив из Строка - возможность переопределения полей индексов результата
//   * ИсключитьТипыНалогообложенияБезНДС - Булево - По умолчанию "Истина"
//   * ПравилоОтбораАвансов          - ПеречислениеСсылка.ПорядокРегистрацииСчетовФактурНаАванс -
//   * ВключитьОперацииСписанияЗадолженности - Булево - Если "Истина", включит списания задолженности в погашения.
//   * АнализироватьУпрУчетДополнительно     - Булево - Если "Истина", при отсутствии расчитанного ресурса в регистрах,
//                                                  ресурса в регистрах, будет посчитан с помощью регистра
//                                                  "Курсы валют", иначе суммы упр. учета будут равны 0.
//   * ВключитьСправочноДанныеНеТребующиеНачисленияНДС - Булево - По умолчанию "Ложь"
//   * ПараметрыОтбораПоРасчетномуДокументу - Структура - Для отбора по временной таблице с расчетными документами, где:
//   	** ИмяПоля                 - Строка - Имя поля, в котором содержится документ.
//   	                                      По умолчанию - "РасчетныйДокумент".
//   	** ИмяТаблицыОтбора        - Строка - имя временной таблицы, где содержится документ
//   
//   
//   // Служебные колонки - для кэширования в процессе расчетов.
//   
//   * ОчиститьСлужебныеКолонки     - Булево - по умолчанию "Истина"
//   * Организации_АвансыПолученные - Массив из СправочникСсылка.Организации -
//   * Организации_АвансыВыданные   - Массив из СправочникСсылка.Организации -
//   * ТипыНалогообложенияБезНДС    - Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС -
//   * ИсключитьИУДА                - Булево - по умолчанию "Ложь"
//
Функция ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС(ИсходныеПараметры = Неопределено) Экспорт
	
	ПараметрыРасчетов = Новый Структура;
	
	ПустаяДата = '00010101';
	
	ПараметрыРасчетов.Вставить("ДатаНачала",           ПустаяДата);
	ПараметрыРасчетов.Вставить("ДатаОкончания",        ПустаяДата);
	ПараметрыРасчетов.Вставить("Организации",          Неопределено);
	ПараметрыРасчетов.Вставить("РасчетныйДокумент",    Неопределено);
	ПараметрыРасчетов.Вставить("СоздатьПустуюТаблицу", Ложь);
	
	ПараметрыРасчетов.Вставить("ВключитьДанныеВзаиморасчетов",         Истина);
	ПараметрыРасчетов.Вставить("ВключитьДанныеПодарочныхСертификатов", Ложь);
	ПараметрыРасчетов.Вставить("ВключитьДанныеФинансовыхИнструментов", Ложь);
	
	// Для отбора по временной таблице с расчетными документами
	ПараметрыОтбораПоРасчетномуДокументу = Новый Структура;
	ПараметрыОтбораПоРасчетномуДокументу.Вставить("ИмяПоля",                 "РасчетныйДокумент");
	ПараметрыОтбораПоРасчетномуДокументу.Вставить("ИмяТаблицыОтбора",        "");
	
	ПараметрыРасчетов.Вставить("ПараметрыОтбораПоРасчетномуДокументу", ПараметрыОтбораПоРасчетномуДокументу);
	
	ПараметрыРасчетов.Вставить("ПоляИндексовВручную", Новый Массив);
	
	ПараметрыРасчетов.Вставить("ПравилоОтбораАвансов",
		Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.ПустаяСсылка());
	ПараметрыРасчетов.Вставить("ВключитьСправочноДанныеНеТребующиеНачисленияНДС", Ложь);
	ПараметрыРасчетов.Вставить("АнализироватьУпрУчетДополнительно",               Ложь);
	ПараметрыРасчетов.Вставить("ВключитьОперацииСписанияЗадолженности",           Ложь);
	
	ПараметрыРасчетов.Вставить("ИсключитьТипыНалогообложенияБезНДС", Истина);
	
	// Инициализация служебных параметров
	ПараметрыРасчетов.Вставить("ОчиститьСлужебныеКолонки",     Истина);
	ПараметрыРасчетов.Вставить("Организации_АвансыПолученные", Новый Массив());
	ПараметрыРасчетов.Вставить("Организации_АвансыВыданные",   Новый Массив());
	ПараметрыРасчетов.Вставить("ТипыНалогообложенияБезНДС",    УчетНДСУП.ТипыНалогообложенияНДСНеоблагаемые(Истина));
	ПараметрыРасчетов.Вставить("ИсключитьИУДА",                Ложь);
	
	ЗаполнитьСвойстваПараметровРасчетовАвансов(ПараметрыРасчетов, ИсходныеПараметры);
	
	Возврат ПараметрыРасчетов;
	
КонецФункции

#Область АвансыПолученные

// Подготовить временную таблицу "АвансыПолученные_Возникновения"
// Создает временную таблицу с колонками:
// 	* Организация;
// 	* РасчетныйДокумент;
// 	* ДокументРегистратор;
// 	* ОбъектРасчетов;
// 	* ПодарочныйСертификат;
// 	* НаправлениеДеятельности;
// 	* Контрагент;
// 	* Договор;
// 	* ТипНалогообложения;
// 	* ДатаАванса;
// 	* ВалютаДокумента;
// 	* СуммаАванса;
// 	* СуммаАвансаВал;
// 	* СуммаАвансаУпр.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
//  ПараметрыРасчета        - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
//  ТаблицаНастроек - ТаблицаЗначений - с колонками:
//		* Организация - СправочникСсылка.Организации -
//		* ИспользоватьУчетНДС - Булево - 
//		* ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
//		* ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
Процедура ПодготовитьВТ_АвансыПолученные_Возникновения(МенеджерВременныхТаблиц, ПараметрыРасчета, ТаблицаНастроек = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек);
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц,
		"РасчетыСКлиентами_Авансы") Тогда
		Запрос.Текст = "УНИЧТОЖИТЬ РасчетыСКлиентами_Авансы";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыРасчетаПоВзаиморасчетам =
		ВзаиморасчетыСервер.ИнициализироватьПараметрыПодготовкиРасчетовАвансов(ПараметрыРасчета);
	
	ПараметрыРасчетаПоВзаиморасчетам.ПоляИндексовВручную.Очистить();
	ПараметрыРасчетаПоВзаиморасчетам.УчестьРезервированиеАвансов = Истина;
	ПараметрыРасчетаПоВзаиморасчетам.СоздатьПустуюТаблицу        =
		ПараметрыРасчета.СоздатьПустуюТаблицу ИЛИ НЕ ПараметрыРасчета.ВключитьДанныеВзаиморасчетов;
	
	Если ЗначениеЗаполнено(ПараметрыРасчета.Организации) Тогда
		ПараметрыРасчетаПоВзаиморасчетам.ВключитьОтборПоОрганизациям = Истина;
		ПараметрыРасчетаПоВзаиморасчетам.Организации = ПараметрыРасчета.Организации_АвансыПолученные;
	КонецЕсли;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСКлиентами_Авансы(
			МенеджерВременныхТаблиц,
			ПараметрыРасчетаПоВзаиморасчетам);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеПервичныхДокументов.Организация                                     КАК Организация,
	|	РеализацияСертификата.Регистратор                                         КАК РасчетныйДокумент,
	|	РеализацияСертификата.Регистратор                                         КАК ДокументРегистратор,
	|	&ПустойОбъектРасчетов                                                     КАК ОбъектРасчетов,
	|	РеализацияСертификата.ПодарочныйСертификат                                КАК ПодарочныйСертификат,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)                 КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)                      КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)                    КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)        КАК ТипНалогообложения,
	|	НАЧАЛОПЕРИОДА(РеализацияСертификата.Период, ДЕНЬ)                         КАК ДатаОтражения,
	|	НАЧАЛОПЕРИОДА(ДанныеПервичныхДокументов.ДатаРегистратора, ДЕНЬ)           КАК ДатаАванса,
	|
	|	МАКСИМУМ(ЕСТЬNULL(РеализацияСертификата.ПодарочныйСертификат.Владелец.Валюта,
	|		ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)))                            КАК ВалютаДокумента,
	|
	|	СУММА(РеализацияСертификата.СуммаРегл)                                    КАК СуммаАванса,
	|	СУММА(РеализацияСертификата.Сумма)                                        КАК СуммаАвансаВал
	|ПОМЕСТИТЬ ПодарочныеСертификаты_Авансы_Предварительная
	|ИЗ
	|	РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		РеализацияСертификата.Регистратор = ДанныеПервичныхДокументов.Документ
	|	
	|ГДЕ
	|	НЕ &СоздатьПустуюТаблицу
	|	И &ВключитьДанныеПодарочныхСертификатов
	|	И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РеализацияСертификата.Сумма > 0
	|	И РеализацияСертификата.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И (ДанныеПервичныхДокументов.Организация В (&Организации_АвансыПолученные))
	|	И (&ТекстОтборПоПараметрам)
	|	И ТИПЗНАЧЕНИЯ(РеализацияСертификата.Регистратор) В (&ТипыРасчетныхДокументовПолученных)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПервичныхДокументов.Организация,
	|	РеализацияСертификата.Регистратор,
	|	РеализацияСертификата.ПодарочныйСертификат,
	|	НАЧАЛОПЕРИОДА(РеализацияСертификата.Период, ДЕНЬ),
	|	НАЧАЛОПЕРИОДА(ДанныеПервичныхДокументов.ДатаРегистратора, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ДатаОтражения КАК ДатаОтражения,
	|	ВложенныйЗапрос.ВалютаРегламентированногоУчета КАК БазоваяВалюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период
	|ПОМЕСТИТЬ УпрУчет_ПериодыКурсов
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(ПодарочныеСертификаты.ДатаОтражения, ДЕНЬ) КАК ДатаОтражения,
	|		ПодарочныеСертификаты.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|	ИЗ
	|		ПодарочныеСертификаты_Авансы_Предварительная КАК ПодарочныеСертификаты
	|	ГДЕ
	|		&АнализироватьУпрУчетДополнительно
	|	) КАК ВложенныйЗапрос
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|	ПО
	|		ВложенныйЗапрос.ДатаОтражения >= КурсыВалют.Период
	|		И ВложенныйЗапрос.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
	|ГДЕ
	|	КурсыВалют.Валюта = &ВалютаУпрУчета
	|	И ВложенныйЗапрос.ВалютаРегламентированногоУчета <> &ВалютаУпрУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ДатаОтражения,
	|	ВложенныйЗапрос.ВалютаРегламентированногоУчета
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаОтражения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсов.ДатаОтражения КАК ДатаОтражения,
	|	ПериодыКурсов.БазоваяВалюта КАК БазоваяВалюта,
	|	ВЫБОР
	|		КОГДА КурсыВалют.Валюта ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА КурсыВалют.КурсЗнаменатель = 0
	|			ТОГДА КурсыВалют.КурсЧислитель
	|		ИНАЧЕ КурсыВалют.КурсЧислитель / КурсыВалют.КурсЗнаменатель
	|	КОНЕЦ                       КАК Курс
	|ПОМЕСТИТЬ УпрУчет_Курсы
	|ИЗ
	|	УпрУчет_ПериодыКурсов КАК ПериодыКурсов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|	ПО
	|		ПериодыКурсов.Период = КурсыВалют.Период
	|		И ПериодыКурсов.БазоваяВалюта = КурсыВалют.БазоваяВалюта
	|		И КурсыВалют.Валюта = &ВалютаУпрУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УпрУчет_ПериодыКурсов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Организация               КАК Организация,
	|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
	|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
	|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.ПодарочныеСертификаты.ПустаяСсылка) КАК ПодарочныйСертификат,
	|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Расчеты.Контрагент                КАК Контрагент,
	|	Расчеты.Договор                   КАК Договор,
	|	&ТекстОпределенияНалогообложения  КАК ТипНалогообложения,
	|	Расчеты.ДатаАванса                КАК ДатаАванса,
	|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
	|	Расчеты.СуммаАвансаРегл           КАК СуммаАванса,
	|	Расчеты.СуммаАвансаВал            КАК СуммаАвансаВал,
	|	Расчеты.СуммаАвансаУпр            КАК СуммаАвансаУпр
	|ПОМЕСТИТЬ АвансыПолученные_Возникновения
	|ИЗ
	|	РасчетыСКлиентами_Авансы КАК Расчеты
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Расчеты.РасчетныйДокумент) В (&ТипыРасчетныхДокументовПолученных)
	|	И (&ИсключитьТипыНалогообложенияБезНДС = ЛОЖЬ
	|		ИЛИ НЕ &ТекстОпределенияНалогообложения В (&ТипыНалогообложенияБезНДС))
	|	И &ТекстОпределенияНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодарочныеСертификаты.Организация               КАК Организация,
	|	ПодарочныеСертификаты.РасчетныйДокумент         КАК РасчетныйДокумент,
	|	ПодарочныеСертификаты.ДокументРегистратор       КАК ДокументРегистратор,
	|	ПодарочныеСертификаты.ОбъектРасчетов            КАК ОбъектРасчетов,
	|	ПодарочныеСертификаты.ПодарочныйСертификат      КАК ПодарочныйСертификат,
	|	ПодарочныеСертификаты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ПодарочныеСертификаты.Контрагент                КАК Контрагент,
	|	ПодарочныеСертификаты.Договор                   КАК Договор,
	|	ПодарочныеСертификаты.ТипНалогообложения        КАК ТипНалогообложения,
	|	ПодарочныеСертификаты.ДатаАванса                КАК ДатаАванса,
	|	ПодарочныеСертификаты.ВалютаДокумента           КАК ВалютаДокумента,
	|	ПодарочныеСертификаты.СуммаАванса               КАК СуммаАванса,
	|	ПодарочныеСертификаты.СуммаАвансаВал            КАК СуммаАвансаВал,
	|	ВЫРАЗИТЬ(ПодарочныеСертификаты.СуммаАванса * 
	|		ВЫБОР
	|			КОГДА ПодарочныеСертификаты.Организация.ВалютаРегламентированногоУчета = &ВалютаУпрУчета
	|				ТОГДА 1
	|			КОГДА ЕСТЬNULL(КурсыУпр.Курс, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ 1 / КурсыУпр.Курс
	|		КОНЕЦ КАК ЧИСЛО(31,2))                      КАК СуммаАвансаУпр
	|ИЗ
	|	ПодарочныеСертификаты_Авансы_Предварительная КАК ПодарочныеСертификаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УпрУчет_Курсы КАК КурсыУпр
	|	ПО
	|		ПодарочныеСертификаты.ДатаОтражения = КурсыУпр.ДатаОтражения
	|		И ПодарочныеСертификаты.Организация.ВалютаРегламентированногоУчета = КурсыУпр.БазоваяВалюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасчетыСКлиентами_Авансы;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПодарочныеСертификаты_Авансы_Предварительная;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УпрУчет_Курсы
	|
	|";
	
	ПараметрыПутей = ИнициализироватьПараметры_Авансы_ПутиКПолямИТекстуЗамены();
	ПараметрыПутей.ПолныйПуть_РасчетныйДокумент = "РеализацияСертификата.Регистратор";
	ПостобработкаЗапроса_Авансы_ДляОтбораПоПараметрам(Запрос, ПараметрыРасчета, ПараметрыПутей);
	
	ПараметрыОпеределенияНО = ИнициализироватьПараметры_Авансы_ОпределениеНалогообложения(Ложь);
	ПостобработкаЗапроса_Авансы_ТипНалогообложения(Запрос, ПараметрыРасчета, ПараметрыОпеределенияНО);
	
	ПостобработкаЗапроса_Авансы_УстановитьПоляИндексов(Запрос, ПараметрыРасчета, "АвансыПолученные_Возникновения");
	
	Запрос.Выполнить();
		
КонецПроцедуры

// Подготовить временную таблицу "АвансыПолученные_Погашения"
// Создает временную таблицу с колонками:
// 	* Организация;
// 	* РасчетныйДокумент;
// 	* ДокументРегистратор;
// 	* ПодарочныйСертификат;
// 	* ДатаАванса;
// 	* ДатаПогашения;
// 	* НаправлениеДеятельности;
// 	* Контрагент;
// 	* Договор;
// 	* ТипНалогообложения;
// 	* ВидСобытия;
// 	* ВалютаДокумента;
// 	* СобытиеЗнак;
// 	* СуммаПогашения;
// 	* СуммаПогашенияВал;
// 	* СуммаПогашенияУпр.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
//  ПараметрыРасчета        - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
//  ТаблицаНастроек - ТаблицаЗначений - с колонками:
//		* Организация - СправочникСсылка.Организации -
//		* ИспользоватьУчетНДС - Булево - 
//		* ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
//		* ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
Процедура ПодготовитьВТ_АвансыПолученные_Погашения(МенеджерВременныхТаблиц, ПараметрыРасчета, ТаблицаНастроек = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек);
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц,
		"РасчетыСКлиентами_ПогашенияАвансов") Тогда
		Запрос.Текст = "УНИЧТОЖИТЬ РасчетыСКлиентами_ПогашенияАвансов";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыРасчетаПоВзаиморасчетам =
		ВзаиморасчетыСервер.ИнициализироватьПараметрыПодготовкиРасчетовАвансов(ПараметрыРасчета);
	
	ПараметрыРасчетаПоВзаиморасчетам.ПоляИндексовВручную.Очистить();
	ПараметрыРасчетаПоВзаиморасчетам.УчестьРезервированиеАвансов = Истина;
	ПараметрыРасчетаПоВзаиморасчетам.СоздатьПустуюТаблицу        =
		ПараметрыРасчета.СоздатьПустуюТаблицу ИЛИ НЕ ПараметрыРасчета.ВключитьДанныеВзаиморасчетов;
	Если ЗначениеЗаполнено(ПараметрыРасчета.Организации) Тогда
		ПараметрыРасчетаПоВзаиморасчетам.ВключитьОтборПоОрганизациям = Истина;
		ПараметрыРасчетаПоВзаиморасчетам.Организации = ПараметрыРасчета.Организации_АвансыПолученные;
	КонецЕсли;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСКлиентами_ПогашенияАвансов(
		МенеджерВременныхТаблиц,
		ПараметрыРасчетаПоВзаиморасчетам);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеПервичныхДокументов.Организация                                     КАК Организация,
	|	РеализацияСертификата.Регистратор                                         КАК РасчетныйДокумент,
	|	ДанныеРегистра.Регистратор                                                КАК ДокументРегистратор,
	|	РеализацияСертификата.ПодарочныйСертификат                                КАК ПодарочныйСертификат,
	|	НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ)                                КАК ДатаОтражения,
	|	НАЧАЛОПЕРИОДА(ДанныеПервичныхДокументов.ДатаРегистратора, ДЕНЬ)           КАК ДатаАванса,
	|	ДанныеРегистра.Период                                                     КАК ДатаПогашения,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)                 КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)                      КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)                    КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)        КАК ТипНалогообложения,
	|
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента)
	|	КОНЕЦ                                                                     КАК ВидСобытия,
	|
	|	МАКСИМУМ(ЕСТЬNULL(РеализацияСертификата.ПодарочныйСертификат.Владелец.Валюта,
	|		ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)))                            КАК ВалютаДокумента,
	|
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		-1
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                                                     КАК СобытиеЗнак,
	|
	|	ВЫРАЗИТЬ(СУММА(ДанныеРегистра.Сумма
	|		* (РеализацияСертификата.СуммаРегл / РеализацияСертификата.Сумма))
	|		КАК ЧИСЛО(31,2))                                                      КАК СуммаПогашения,
	|	СУММА(ДанныеРегистра.Сумма)                                               КАК СуммаПогашенияВал
	|ПОМЕСТИТЬ ПодарочныеСертификаты_Зачеты_Предварительная
	|ИЗ
	|	РегистрНакопления.ПодарочныеСертификаты КАК ДанныеРегистра
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	ПО
	|		&ВключитьДанныеПодарочныхСертификатов
	|		И РеализацияСертификата.ПодарочныйСертификат = ДанныеРегистра.ПодарочныйСертификат
	|		И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		РеализацияСертификата.Регистратор = ДанныеПервичныхДокументов.Документ
	|	
	|ГДЕ
	|	НЕ &СоздатьПустуюТаблицу
	|	И &ВключитьДанныеПодарочныхСертификатов
	|	И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеРегистра.Сумма > 0
	|	И КОНЕЦПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> КОНЕЦПЕРИОДА(РеализацияСертификата.Период, ДЕНЬ)
	|	И ДанныеРегистра.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И (ДанныеПервичныхДокументов.Организация В (&Организации_АвансыПолученные))
	|	И (&ТекстОтборПоПараметрам)
	|	И ТИПЗНАЧЕНИЯ(РеализацияСертификата.Регистратор) В (&ТипыРасчетныхДокументовПолученных)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.Период,
	|	ДанныеПервичныхДокументов.Организация,
	|	РеализацияСертификата.Регистратор,
	|	РеализацияСертификата.ПодарочныйСертификат,
	|	НАЧАЛОПЕРИОДА(ДанныеПервичныхДокументов.ДатаРегистратора, ДЕНЬ)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ДатаОтражения КАК ДатаОтражения,
	|	ВложенныйЗапрос.ВалютаРегламентированногоУчета КАК БазоваяВалюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период
	|ПОМЕСТИТЬ УпрУчет_ПериодыКурсов
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(ПодарочныеСертификаты.ДатаОтражения, ДЕНЬ) КАК ДатаОтражения,
	|		ПодарочныеСертификаты.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|	ИЗ
	|		ПодарочныеСертификаты_Зачеты_Предварительная КАК ПодарочныеСертификаты
	|	ГДЕ
	|		&АнализироватьУпрУчетДополнительно
	|	) КАК ВложенныйЗапрос
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|	ПО
	|		ВложенныйЗапрос.ДатаОтражения >= КурсыВалют.Период
	|		И ВложенныйЗапрос.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
	|
	|ГДЕ
	|	КурсыВалют.Валюта = &ВалютаУпрУчета
	|	И ВложенныйЗапрос.ВалютаРегламентированногоУчета <> &ВалютаУпрУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ДатаОтражения,
	|	ВложенныйЗапрос.ВалютаРегламентированногоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаОтражения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсов.ДатаОтражения КАК ДатаОтражения,
	|	ПериодыКурсов.БазоваяВалюта КАК БазоваяВалюта,
	|	ВЫБОР
	|		КОГДА КурсыВалют.Валюта ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА КурсыВалют.КурсЗнаменатель = 0
	|			ТОГДА КурсыВалют.КурсЧислитель
	|		ИНАЧЕ КурсыВалют.КурсЧислитель / КурсыВалют.КурсЗнаменатель
	|	КОНЕЦ                       КАК Курс
	|ПОМЕСТИТЬ УпрУчет_Курсы
	|ИЗ
	|	УпрУчет_ПериодыКурсов КАК ПериодыКурсов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|	ПО
	|		ПериодыКурсов.Период = КурсыВалют.Период
	|		И ПериодыКурсов.БазоваяВалюта = КурсыВалют.БазоваяВалюта
	|		И КурсыВалют.Валюта = &ВалютаУпрУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УпрУчет_ПериодыКурсов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Погашения.Организация                КАК Организация,
	|	Погашения.РасчетныйДокумент          КАК РасчетныйДокумент,
	|	Погашения.ДокументРегистратор        КАК ДокументРегистратор,
	|	ЗНАЧЕНИЕ(Справочник.ПодарочныеСертификаты.ПустаяСсылка) КАК ПодарочныйСертификат,
	|	Погашения.ДатаАванса                 КАК ДатаАванса,
	|	Погашения.ДатаПогашения              КАК ДатаПогашения,
	|	Погашения.ИсхНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Погашения.ИсхКонтрагент              КАК Контрагент,
	|	Погашения.ИсхДоговор                 КАК Договор,
	|	&ТекстОпределенияНалогообложения     КАК ТипНалогообложения,
	|	Погашения.ВидСобытия                 КАК ВидСобытия,
	|	Погашения.ОбъектРасчетов             КАК ОбъектРасчетов,
	|	МАКСИМУМ(Погашения.ВалютаДокумента)  КАК ВалютаДокумента,
	|	СУММА(ВЫБОР
	|			КОГДА Погашения.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|				ТОГДА -1
	|			ИНАЧЕ
	|				1
	|		КОНЕЦ)                           КАК СобытиеЗнак,
	|	СУММА(Погашения.СуммаПогашенияРегл)  КАК СуммаПогашения,
	|	СУММА(Погашения.СуммаПогашенияВал)   КАК СуммаПогашенияВал,
	|	СУММА(Погашения.СуммаПогашенияУпр)   КАК СуммаПогашенияУпр
	|ПОМЕСТИТЬ АвансыПолученные_Погашения
	|ИЗ
	|	РасчетыСКлиентами_ПогашенияАвансов КАК Погашения
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Погашения.РасчетныйДокумент) В (&ТипыРасчетныхДокументовПолученных)
	|	И (&ВключитьОперацииСписанияЗадолженности
	|		ИЛИ Погашения.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности))
	|	И (&ИсключитьТипыНалогообложенияБезНДС = ЛОЖЬ
	|		ИЛИ НЕ &ТекстОпределенияНалогообложения В (&ТипыНалогообложенияБезНДС))
	|	И &ТекстОпределенияНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Погашения.Организация,
	|	Погашения.РасчетныйДокумент,
	|	Погашения.ДокументРегистратор,
	|	Погашения.ДатаАванса,
	|	Погашения.ДатаПогашения,
	|	Погашения.ИсхНаправлениеДеятельности,
	|	Погашения.ИсхКонтрагент,
	|	Погашения.ИсхДоговор,
	|	&ТекстОпределенияНалогообложения,
	|	Погашения.ВидСобытия,
	|	Погашения.ОбъектРасчетов
	|
	|ИМЕЮЩИЕ
	|	СУММА(Погашения.СуммаПогашенияРегл) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодарочныеСертификаты.Организация                КАК Организация,
	|	ПодарочныеСертификаты.РасчетныйДокумент          КАК РасчетныйДокумент,
	|	ПодарочныеСертификаты.ДокументРегистратор        КАК ДокументРегистратор,
	|	ПодарочныеСертификаты.ПодарочныйСертификат       КАК ПодарочныйСертификат,
	|	ПодарочныеСертификаты.ДатаАванса                 КАК ДатаАванса,
	|	ПодарочныеСертификаты.ДатаПогашения              КАК ДатаПогашения,
	|	ПодарочныеСертификаты.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ПодарочныеСертификаты.Контрагент                 КАК Контрагент,
	|	ПодарочныеСертификаты.Договор                    КАК Договор,
	|	ПодарочныеСертификаты.ТипНалогообложения         КАК ТипНалогообложения,
	|	ПодарочныеСертификаты.ВидСобытия                 КАК ВидСобытия,
	|	&ПустойОбъектРасчетов                            КАК ОбъектРасчетов,
	|	ПодарочныеСертификаты.ВалютаДокумента            КАК ВалютаДокумента,
	|	ПодарочныеСертификаты.СобытиеЗнак                КАК СобытиеЗнак,
	|	ПодарочныеСертификаты.СуммаПогашения             КАК СуммаПогашения,
	|	ПодарочныеСертификаты.СуммаПогашенияВал          КАК СуммаПогашенияВал,
	|	ВЫРАЗИТЬ(ПодарочныеСертификаты.СуммаПогашения * 
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(КурсыУпр.Курс, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ 1 / КурсыУпр.Курс
	|		КОНЕЦ КАК ЧИСЛО(31,2))                       КАК СуммаПогашенияУпр
	|ИЗ
	|	ПодарочныеСертификаты_Зачеты_Предварительная КАК ПодарочныеСертификаты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УпрУчет_Курсы КАК КурсыУпр
	|	ПО
	|		ПодарочныеСертификаты.ДатаОтражения = КурсыУпр.ДатаОтражения
	|		И ПодарочныеСертификаты.Организация.ВалютаРегламентированногоУчета = КурсыУпр.БазоваяВалюта
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасчетыСКлиентами_ПогашенияАвансов;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПодарочныеСертификаты_Зачеты_Предварительная;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УпрУчет_Курсы
	|";
	
	ПараметрыПутей = ИнициализироватьПараметры_Авансы_ПутиКПолямИТекстуЗамены();
	ПараметрыПутей.ПолныйПуть_РасчетныйДокумент = "РеализацияСертификата.Регистратор";
	ПостобработкаЗапроса_Авансы_ДляОтбораПоПараметрам(Запрос, ПараметрыРасчета, ПараметрыПутей);
	
	ПараметрыОпеределенияНО = ИнициализироватьПараметры_Авансы_ОпределениеНалогообложения(Ложь);
	ПараметрыОпеределенияНО.ПолеРесурса = "Погашения.ИсходныйОбъектРасчетов";
	ПостобработкаЗапроса_Авансы_ТипНалогообложения(Запрос, ПараметрыРасчета, ПараметрыОпеределенияНО);
	
	ПостобработкаЗапроса_Авансы_УстановитьПоляИндексов(Запрос, ПараметрыРасчета, "АвансыПолученные_Погашения");
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Подготовить временную таблицу "БазаНДС_АвансыПолученные"
//
// Анализирует полученные авансы в разрезе погашений и остатков.
// Указав правило отбора авансов, определяет, нужно ли сформировать счет-фактуру и на какую дату.
// Если ранее были созданы врем. таблицы "АвансыПолученные_Возникновения" и "АвансыПолученные_Погашения",
// они будут уничтожены.
//
// Создает временную таблицу с колонками:
// 	* Организация;
// 	* НаправлениеДеятельности;
// 	* Контрагент;
// 	* Договор;
// 	* ТипНалогообложения;
// 	* РасчетныйДокумент;
// 	* ОбъектРасчетов;
// 	* ДатаАванса;
// 	* ДатаПогашения;
// 	* ВалютаДокумента;
// 	* ДокументРегистратор;
// 	* НачислятьНДС;
// 	* ДатаФормированияСФ;
// 	* Сумма;
// 	* СуммаВал;
// 	* СуммаУпр.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
//  ПараметрыРасчета        - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
//  ТаблицаНастроек - ТаблицаЗначений - с колонками:
//		* Организация - СправочникСсылка.Организации -
//		* ИспользоватьУчетНДС - Булево - 
//		* ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
//		* ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
Процедура ПодготовитьВТ_АвансыПолученные(МенеджерВременныхТаблиц, ПараметрыРасчета, ТаблицаНастроек = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек);
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	// Данные взаиморасчетов
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц,
		"ПолученныеАвансыВРазрезеПогашенийИОстатков") Тогда
		Запрос.Текст = "УНИЧТОЖИТЬ ПолученныеАвансыВРазрезеПогашенийИОстатков";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыРасчетаПоВзаиморасчетам =
		ВзаиморасчетыСервер.ИнициализироватьПараметрыПодготовкиРасчетовАвансов(ПараметрыРасчета);
	ПараметрыРасчетаПоВзаиморасчетам.ПоляИндексовВручную.Очистить();
	ПараметрыРасчетаПоВзаиморасчетам.УчестьРезервированиеАвансов = Истина;
	ПараметрыРасчетаПоВзаиморасчетам.СоздатьПустуюТаблицу        =
		ПараметрыРасчета.СоздатьПустуюТаблицу ИЛИ НЕ ПараметрыРасчета.ВключитьДанныеВзаиморасчетов;
	
	Если ЗначениеЗаполнено(ПараметрыРасчета.Организации) Тогда
		ПараметрыРасчетаПоВзаиморасчетам.ВключитьОтборПоОрганизациям = Истина;
		ПараметрыРасчетаПоВзаиморасчетам.Организации = ПараметрыРасчета.Организации_АвансыПолученные;
	КонецЕсли;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_ПолученныеАвансыВРазрезеПогашенийИОстатков(
			МенеджерВременныхТаблиц,
			ПараметрыРасчетаПоВзаиморасчетам);
	
	// Данные, кроме взаиморасчетов
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц,
		"АвансыПолученные_Возникновения") Тогда
		Запрос.Текст = "УНИЧТОЖИТЬ АвансыПолученные_Возникновения";
		Запрос.Выполнить();
	КонецЕсли;
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц,
		"АвансыПолученные_Погашения") Тогда
		Запрос.Текст = "УНИЧТОЖИТЬ АвансыПолученные_Погашения";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыРасчетаВозникновенийИЗачетовАвансов = 
		ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС(ПараметрыРасчета);
	ПараметрыРасчетаВозникновенийИЗачетовАвансов.ПоляИндексовВручную.Очистить();
	ПараметрыРасчетаВозникновенийИЗачетовАвансов.ОчиститьСлужебныеКолонки     = Ложь;
	ПараметрыРасчетаВозникновенийИЗачетовАвансов.ВключитьДанныеВзаиморасчетов = Ложь;
	
	ПодготовитьВТ_АвансыПолученные_Возникновения(
			МенеджерВременныхТаблиц,
			ПараметрыРасчетаВозникновенийИЗачетовАвансов,
			ТаблицаНастроек);
	
	ПодготовитьВТ_АвансыПолученные_Погашения(
			МенеджерВременныхТаблиц,
			ПараметрыРасчетаВозникновенийИЗачетовАвансов,
			ТаблицаНастроек);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеАвансов.Организация               КАК Организация,
	|	ДанныеАвансов.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ДанныеАвансов.Контрагент                КАК Контрагент,
	|	ДанныеАвансов.Договор                   КАК Договор,
	|	ДанныеАвансов.ТипНалогообложения        КАК ТипНалогообложения,
	|	ДанныеАвансов.РасчетныйДокумент         КАК РасчетныйДокумент,
	|	ДанныеАвансов.ПодарочныйСертификат      КАК ПодарочныйСертификат,
	|	ДанныеАвансов.ДатаАванса                КАК ДатаАванса,
	|	ДанныеАвансов.ВалютаДокумента           КАК ВалютаДокумента,
	|	ДанныеАвансов.СуммаАванса               КАК СуммаАванса,
	|	ДанныеАвансов.СуммаАвансаВал            КАК СуммаАвансаВал,
	|	ДанныеАвансов.СуммаАвансаУпр            КАК СуммаАвансаУпр
	|ПОМЕСТИТЬ Авансы_ПодарочныеСертификаты
	|ИЗ
	|	АвансыПолученные_Возникновения КАК ДанныеАвансов
	|ГДЕ
	|	ДанныеАвансов.ПодарочныйСертификат <> НЕОПРЕДЕЛЕНО
	|	И ДанныеАвансов.ПодарочныйСертификат <> ЗНАЧЕНИЕ(Справочник.ПодарочныеСертификаты.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодарочныйСертификат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Авансы.Организация                  КАК Организация,
	|	Авансы.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	Авансы.Контрагент                   КАК Контрагент,
	|	Авансы.Договор                      КАК Договор,
	|	Авансы.ТипНалогообложения           КАК ТипНалогообложения,
	|	Авансы.РасчетныйДокумент            КАК РасчетныйДокумент,
	|	Авансы.ОбъектРасчетов               КАК ОбъектРасчетов,
	|	Авансы.ДатаАванса                   КАК ДатаАванса,
	|	Авансы.ДатаПогашения                КАК ДатаПогашения,
	|	Авансы.ДокументРегистратор          КАК ДокументРегистратор,
	|	МАКСИМУМ(Авансы.ВалютаДокумента)    КАК ВалютаДокумента,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА Авансы.ТипНалогообложения = &ТипНалогообложенияНДСПустой
	|					ИЛИ НЕ Авансы.ТипНалогообложения В (&ТипыНалогообложенияБезНДС)
	|				ТОГДА
	|				ВЫБОР
	|					КОГДА Авансы.ДатаПогашения = &ПустаяДата // Если это остаток, начисляем НДС
	|						ИЛИ &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|						ИЛИ &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|					ТОГДА РАЗНОСТЬДАТ(Авансы.ДатаАванса, Авансы.ДатаПогашения, ДЕНЬ) > 0
	|					КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|						ТОГДА (РАЗНОСТЬДАТ(Авансы.ДатаАванса, Авансы.ДатаПогашения, ДЕНЬ) >= 5
	|							ИЛИ КОНЕЦПЕРИОДА(Авансы.ДатаАванса, КВАРТАЛ) < Авансы.ДатаПогашения)
	|					КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеМесяца)
	|						ТОГДА Авансы.ДатаПогашения > КОНЕЦПЕРИОДА(Авансы.ДатаАванса, МЕСЯЦ)
	|					КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеКвартала)
	|						ТОГДА Авансы.ДатаПогашения > КОНЕЦПЕРИОДА(Авансы.ДатаАванса, КВАРТАЛ)
	|					ИНАЧЕ
	|						ЛОЖЬ
	|				КОНЕЦ
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ
	|	) КАК НачислятьНДС,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|				ИЛИ &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ПустаяСсылка)
	|				ТОГДА Авансы.ДатаАванса
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|				И (Авансы.ДатаПогашения = &ПустаяДата
	|					ИЛИ РАЗНОСТЬДАТ(Авансы.ДатаАванса, Авансы.ДатаПогашения, ДЕНЬ) > 0)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.ДатаАванса, ДЕНЬ)
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|				ТОГДА ВЫБОР
	|					// Это остаток и предполагаемая дата формирования СФ выходит за рамки квартала
	|					КОГДА Авансы.ДатаПогашения = &ПустаяДата
	|							И КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Авансы.ДатаАванса, ДЕНЬ, 4), ДЕНЬ) > КОНЕЦПЕРИОДА(&ДатаОкончания, КВАРТАЛ)
	|						// устанавливаем конец квартала
	|						ТОГДА КОНЕЦПЕРИОДА(&ДатаОкончания, КВАРТАЛ)
	|					// Это остаток и предполагаемая дата формирования СФ в рамках квартала
	|					КОГДА Авансы.ДатаПогашения = &ПустаяДата
	|							И КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Авансы.ДатаАванса, ДЕНЬ, 4), ДЕНЬ) <= КОНЕЦПЕРИОДА(&ДатаОкончания, КВАРТАЛ)
	|						// устанавливаем предполагаемую дату формирования СФ
	|						ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Авансы.ДатаАванса, ДЕНЬ, 4), ДЕНЬ)
	|					// Это зачет, но дата погашения в другом квартале
	|					КОГДА КОНЕЦПЕРИОДА(Авансы.ДатаАванса, КВАРТАЛ) < Авансы.ДатаПогашения
	|						// устанавливаем конец квартала
	|						ТОГДА КОНЕЦПЕРИОДА(Авансы.ДатаАванса, КВАРТАЛ)
	|					// Это зачет и разница между датой погашения и датой аванса >= 5 дней
	|					КОГДА РАЗНОСТЬДАТ(Авансы.ДатаАванса, Авансы.ДатаПогашения, ДЕНЬ) >= 5
	|						// устанавливаем предполагаемую дату формирования СФ
	|						ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Авансы.ДатаАванса, ДЕНЬ, 4), ДЕНЬ)
	|					ИНАЧЕ &ПустаяДата
	|				КОНЕЦ
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеМесяца)
	|				И (Авансы.ДатаПогашения = &ПустаяДата
	|					ИЛИ Авансы.ДатаПогашения > КОНЕЦПЕРИОДА(Авансы.ДатаАванса, МЕСЯЦ))
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.ДатаАванса, МЕСЯЦ) 
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеКвартала)
	|				И (Авансы.ДатаПогашения = &ПустаяДата
	|					ИЛИ Авансы.ДатаПогашения > КОНЕЦПЕРИОДА(Авансы.ДатаАванса, КВАРТАЛ))
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.ДатаАванса, КВАРТАЛ)
	|			ИНАЧЕ
	|				&ПустаяДата
	|		КОНЕЦ
	|	) КАК ДатаФормированияСФ,
	|	СУММА(Авансы.Сумма) КАК Сумма,
	|	СУММА(Авансы.СуммаВал)  КАК СуммаВал,
	|	СУММА(Авансы.СуммаУпр)  КАК СуммаУпр
	|ПОМЕСТИТЬ БазаНДС_АвансыПолученные
	|ИЗ
	|	(
	|	// Данные взаиморасчетов
	|	ВЫБРАТЬ
	|		Авансы.Организация                       КАК Организация,
	|		Авансы.ИсхНаправлениеДеятельности        КАК НаправлениеДеятельности,
	|		Авансы.ИсхКонтрагент                     КАК Контрагент,
	|		Авансы.ИсхДоговор                        КАК Договор,
	|		&ТекстОпределенияНалогообложения         КАК ТипНалогообложения,
	|		Авансы.РасчетныйДокумент                 КАК РасчетныйДокумент,
	|		Авансы.ИсходныйОбъектРасчетов            КАК ОбъектРасчетов,
	|		Авансы.ДатаАванса                        КАК ДатаАванса,
	|		Авансы.ДатаПогашения                     КАК ДатаПогашения,
	|		Авансы.ДокументРегистратор               КАК ДокументРегистратор,
	|		Авансы.ВалютаДокумента                   КАК ВалютаДокумента,
	|		Авансы.СуммаРегл                         КАК Сумма,
	|		Авансы.СуммаВал                          КАК СуммаВал,
	|		Авансы.СуммаУпр                          КАК СуммаУпр
	|	ИЗ
	|		ПолученныеАвансыВРазрезеПогашенийИОстатков КАК Авансы
	|	
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// Прочие данные
	|	ВЫБРАТЬ
	|		Погашения.Организация                       КАК Организация,
	|		Погашения.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|		Погашения.Контрагент                        КАК Контрагент,
	|		Погашения.Договор                           КАК Договор,
	|		Погашения.ТипНалогообложения                КАК ТипНалогообложения,
	|		Погашения.РасчетныйДокумент                 КАК РасчетныйДокумент,
	|		&ПустойОбъектРасчетов                       КАК ОбъектРасчетов,
	|		Погашения.ДатаАванса                        КАК ДатаАванса,
	|		Погашения.ДатаПогашения                     КАК ДатаПогашения,
	|		Погашения.ДокументРегистратор               КАК ДокументРегистратор,
	|		Погашения.ВалютаДокумента                   КАК ВалютаДокумента,
	|		Погашения.СуммаПогашения                    КАК Сумма,
	|		Погашения.СуммаПогашенияВал                 КАК СуммаВал,
	|		Погашения.СуммаПогашенияУпр                 КАК СуммаУпр
	|	ИЗ
	|		АвансыПолученные_Погашения КАК Погашения
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеАвансов.Организация               КАК Организация,
	|		ДанныеАвансов.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|		ДанныеАвансов.Контрагент                КАК Контрагент,
	|		ДанныеАвансов.Договор                   КАК Договор,
	|		ДанныеАвансов.ТипНалогообложения        КАК ТипНалогообложения,
	|		ДанныеАвансов.РасчетныйДокумент         КАК РасчетныйДокумент,
	|		&ПустойОбъектРасчетов                   КАК ОбъектРасчетов,
	|		ДанныеАвансов.ДатаАванса                КАК ДатаАванса,
	|		ДАТАВРЕМЯ(1,1,1)                        КАК ДатаПогашения,
	|		НЕОПРЕДЕЛЕНО                            КАК ДокументРегистратор,
	|		ДанныеАвансов.ВалютаДокумента           КАК ВалютаДокумента,
	|		ВЫРАЗИТЬ(ОстаткиПоАвансам.СуммаОстаток *
	|			ВЫБОР
	|				КОГДА ДанныеАвансов.СуммаАвансаВал <> 0
	|					ТОГДА ДанныеАвансов.СуммаАванса / ДанныеАвансов.СуммаАвансаВал
	|				ИНАЧЕ
	|					0
	|			КОНЕЦ КАК ЧИСЛО(31,2))              КАК Сумма,
	|		ОстаткиПоАвансам.СуммаОстаток           КАК СуммаВал,
	|		ВЫРАЗИТЬ(ОстаткиПоАвансам.СуммаОстаток *
	|			ВЫБОР
	|				КОГДА ДанныеАвансов.СуммаАвансаУпр <> 0
	|					ТОГДА ДанныеАвансов.СуммаАванса / ДанныеАвансов.СуммаАвансаУпр
	|				ИНАЧЕ
	|					0
	|			КОНЕЦ КАК ЧИСЛО(31,2))              КАК СуммаУпр
	|	ИЗ
	|		РегистрНакопления.ПодарочныеСертификаты.Остатки(&ДатаОкончанияВключая,
	|			(ПодарочныйСертификат) В 
	|					(ВЫБРАТЬ 
	|						ДанныеАвансов.ПодарочныйСертификат
	|					ИЗ
	|						Авансы_ПодарочныеСертификаты КАК ДанныеАвансов
	|					)
	|		) КАК ОстаткиПоАвансам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Авансы_ПодарочныеСертификаты КАК ДанныеАвансов
	|		ПО
	|			ОстаткиПоАвансам.ПодарочныйСертификат = ДанныеАвансов.ПодарочныйСертификат
	|	
	|	) КАК Авансы
	|
	|ГДЕ
	|	(Авансы.ДатаАванса МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|	И ТИПЗНАЧЕНИЯ(Авансы.РасчетныйДокумент) В (&ТипыРасчетныхДокументовПолученных)
	|	И (&ИсключитьТипыНалогообложенияБезНДС = ЛОЖЬ
	|			ИЛИ НЕ Авансы.ТипНалогообложения В (&ТипыНалогообложенияБезНДС))
	|	И Авансы.ТипНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Авансы.Организация,
	|	Авансы.НаправлениеДеятельности,
	|	Авансы.Контрагент,
	|	Авансы.Договор,
	|	Авансы.ТипНалогообложения,
	|	Авансы.РасчетныйДокумент,
	|	Авансы.ОбъектРасчетов,
	|	Авансы.ДатаАванса,
	|	Авансы.ДатаПогашения,
	|	Авансы.ДокументРегистратор
	|
	|ИМЕЮЩИЕ
	|	(&ВключитьСправочноДанныеНеТребующиеНачисленияНДС
	|		ИЛИ
	|		МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА НЕ Авансы.ТипНалогообложения В (&ТипыНалогообложенияБезНДС)
	|				ТОГДА
	|				ВЫБОР
	|					КОГДА Авансы.ДатаПогашения = &ПустаяДата // Если это остаток, начисляем НДС
	|						ИЛИ &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|						ИЛИ &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|					ТОГДА РАЗНОСТЬДАТ(Авансы.ДатаАванса, Авансы.ДатаПогашения, ДЕНЬ) > 0
	|					КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|						ТОГДА (РАЗНОСТЬДАТ(Авансы.ДатаАванса, Авансы.ДатаПогашения, ДЕНЬ) >= 5
	|							ИЛИ КОНЕЦПЕРИОДА(Авансы.ДатаАванса, КВАРТАЛ) < Авансы.ДатаПогашения)
	|					КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеМесяца)
	|						ТОГДА Авансы.ДатаПогашения > КОНЕЦПЕРИОДА(Авансы.ДатаАванса, МЕСЯЦ)
	|					КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеКвартала)
	|						ТОГДА Авансы.ДатаПогашения > КОНЕЦПЕРИОДА(Авансы.ДатаАванса, КВАРТАЛ)
	|					ИНАЧЕ
	|						ЛОЖЬ
	|				КОНЕЦ
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ)
	|	)
	|	И СУММА(Авансы.СуммаВал) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Авансы_ПодарочныеСертификаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АвансыПолученные_Возникновения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АвансыПолученные_Погашения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПолученныеАвансыВРазрезеПогашенийИОстатков
	|
	|";
	
	ПараметрыОпеределенияНО = ИнициализироватьПараметры_Авансы_ОпределениеНалогообложения(Ложь);
	ПараметрыОпеределенияНО.ПолеРесурса = "Авансы.ИсходныйОбъектРасчетов";
	ПостобработкаЗапроса_Авансы_ТипНалогообложения(Запрос, ПараметрыРасчета, ПараметрыОпеределенияНО);
	
	ПостобработкаЗапроса_Авансы_УстановитьПоляИндексов(Запрос, ПараметрыРасчета, "БазаНДС_АвансыПолученные");
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Подготовить временную таблицу "РасчетыСКлиентами_ПереносыАвансов".
// Создает временную таблицу с колонками.
// см. ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСКлиентами_ПереносыАвансов.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
//  ПараметрыРасчета        - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
//  ТаблицаНастроек - ТаблицаЗначений - с колонками:
//		* Организация - СправочникСсылка.Организации -
//		* ИспользоватьУчетНДС - Булево - 
//		* ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
//		* ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
Процедура ПодготовитьВТ_РасчетыСКлиентами_ПереносыАвансов(МенеджерВременныхТаблиц, ПараметрыРасчета, ТаблицаНастроек = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек);
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц,
		"РасчетыСКлиентами_ПереносыАвансов") Тогда
		Запрос.Текст = "УНИЧТОЖИТЬ РасчетыСКлиентами_ПереносыАвансов";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыРасчетаПоВзаиморасчетам =
		ВзаиморасчетыСервер.ИнициализироватьПараметрыПодготовкиРасчетовАвансов(ПараметрыРасчета);
	
	ПараметрыРасчетаПоВзаиморасчетам.ПоляИндексовВручную.Очистить();
	ПараметрыРасчетаПоВзаиморасчетам.СоздатьПустуюТаблицу =
		ПараметрыРасчета.СоздатьПустуюТаблицу ИЛИ НЕ ПараметрыРасчета.ВключитьДанныеВзаиморасчетов;
	Если ЗначениеЗаполнено(ПараметрыРасчета.Организации) Тогда
		ПараметрыРасчетаПоВзаиморасчетам.ВключитьОтборПоОрганизациям = Истина;
		ПараметрыРасчетаПоВзаиморасчетам.Организации = ПараметрыРасчета.Организации_АвансыПолученные;
	КонецЕсли;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСКлиентами_ПереносыАвансов(
		МенеджерВременныхТаблиц,
		ПараметрыРасчетаПоВзаиморасчетам);
	
КонецПроцедуры

Процедура ПодготовитьВТ_ОстаткиАвансыПолученныеДоПереноса(МенеджерВременныхТаблиц, ПараметрыРасчета, ТаблицаНастроек = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек); 
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеСПолученногоАванса.Организация КАК Организация,
	|	НачислениеСПолученногоАванса.ДокументОплаты КАК ДокументОплаты,
	|	НачислениеСПолученногоАванса.Контрагент КАК Контрагент,
	|	МАКСИМУМ(НачислениеСПолученногоАванса.ИсправленныйСчетФактура) КАК ИсправленныйСчетФактура,
	|	НачислениеСПолученногоАванса.Подразделение КАК Подразделение,
	|	НачислениеСПолученногоАванса.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НачислениеСПолученногоАванса.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НачислениеСПолученногоАванса.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(НачислениеСПолученногоАванса.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НачислениеСПолученногоАванса.НДС) КАК НДС,
	|	СУММА(НачислениеСПолученногоАванса.НДСУпр) КАК НДСУпр
	|ПОМЕСТИТЬ ОстаткиАвансыПолученныеДоПереноса
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.Организация КАК Организация,
	|		ДД.ДокументОплаты КАК ДокументОплаты,
	|		ДД.Контрагент КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение КАК Подразделение,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ДД.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|		ДД.НДСОстаток КАК НДС,
	|		ДД.НДСУпрОстаток КАК НДСУпр
	|	ИЗ
	|		РегистрНакопления.НДСАвансыПолученные.Остатки(
	|				&ДатаНачала,
	|				Организация В (&Организации_АвансыПолученные)
	|					И &ТекстОтборПоПараметрам) КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.ДокументОплаты,
	|		ДД.Контрагент,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.Подразделение,
	|		ДД.НаправлениеДеятельности,
	|		ДД.СтавкаНДС,
	|		ДД.ОбъектРасчетов,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.НДСАвансыПолученные КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И НЕ ДД.РегламентнаяОперация
	|		И ДД.Организация В(&Организации_АвансыПолученные)
	|		И &ТекстОтборПоПараметрам
	|		И ДД.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.ДокументОплаты,
	|		ДД.Контрагент,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.Подразделение,
	|		ДД.НаправлениеДеятельности,
	|		ДД.СтавкаНДС,
	|		ДД.ОбъектРасчетов,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСАвансыПолученныеПоИСФ КАК ДД
	|	ГДЕ
	|		НЕ ДД.Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.ВычетПриЗачетеАванса),
	|						ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.ВычетПриВозвратеАванса))
	|		И &ТекстОтборПоПараметрам) КАК НачислениеСПолученногоАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеСПолученногоАванса.Организация,
	|	НачислениеСПолученногоАванса.ДокументОплаты,
	|	НачислениеСПолученногоАванса.Контрагент,
	|	НачислениеСПолученногоАванса.Подразделение,
	|	НачислениеСПолученногоАванса.НаправлениеДеятельности,
	|	НачислениеСПолученногоАванса.СтавкаНДС,
	|	НачислениеСПолученногоАванса.ОбъектРасчетов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачислениеСПолученногоАванса.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(НачислениеСПолученногоАванса.НДС) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты,
	|	Контрагент";
	ПараметрыПутей = ИнициализироватьПараметры_Авансы_ПутиКПолямИТекстуЗамены();
	ПараметрыПутей.ПолныйПуть_РасчетныйДокумент = "ДокументОплаты";
	ПостобработкаЗапроса_Авансы_ДляОтбораПоПараметрам(Запрос, ПараметрыРасчета, ПараметрыПутей);
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПодготовитьВТ_ОстаткиАвансыВыданныеДоПереноса(МенеджерВременныхТаблиц, ПараметрыРасчета, ТаблицаНастроек = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек); 
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеСВыданногоАванса.Организация КАК Организация,
	|	НачислениеСВыданногоАванса.ДокументОплаты КАК ДокументОплаты,
	|	НачислениеСВыданногоАванса.Контрагент КАК Контрагент,
	|	МАКСИМУМ(НачислениеСВыданногоАванса.ИсправленныйСчетФактура) КАК ИсправленныйСчетФактура,
	|	НачислениеСВыданногоАванса.Подразделение           КАК Подразделение,
	|	НачислениеСВыданногоАванса.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НачислениеСВыданногоАванса.ОбъектРасчетов          КАК ОбъектРасчетов,
	|	НачислениеСВыданногоАванса.СтавкаНДС               КАК СтавкаНДС,
	|	СУММА(НачислениеСВыданногоАванса.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(НачислениеСВыданногоАванса.НДС)              КАК НДС,
	|	СУММА(НачислениеСВыданногоАванса.НДСУпр)           КАК НДСУпр
	|ПОМЕСТИТЬ ОстаткиАвансыВыданныеДоПереноса
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.Организация              КАК Организация,
	|		ДД.ДокументОплаты           КАК ДокументОплаты,
	|		ДД.Контрагент               КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура  КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение            КАК Подразделение,
	|		ДД.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС                КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов           КАК ОбъектРасчетов,
	|		-ДД.СуммаБезНДСОстаток      КАК СуммаБезНДС,
	|		-ДД.НДСОстаток              КАК НДС,
	|		-ДД.НДСУпрОстаток           КАК НДСУпр
	|	ИЗ
	|		РегистрНакопления.НДСАвансыВыданные.Остатки(
	|			&ДатаНачала, 
	|			Организация В (&Организации_АвансыВыданные)
	|			И &ТекстОтборПоПараметрам) КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.ДокументОплаты          КАК ДокументОплаты,
	|		ДД.Контрагент              КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение            КАК Подразделение,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ                      КАК СуммаБезНДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ                      КАК НДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ                      КАК НДСУпр
	|	ИЗ
	|		РегистрНакопления.НДСАвансыВыданные КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			ДД.Организация = Задания.Организация
	|			И ДД.ДокументОплаты = Задания.СчетФактура
	|	ГДЕ
	|		ДД.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И НЕ ДД.РегламентнаяОперация
	|		И ДД.Организация В(&Организации_АвансыВыданные)
	|		И &ТекстОтборПоПараметрам
	|		И ДД.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.ДокументОплаты          КАК ДокументОплаты,
	|		ДД.Контрагент              КАК Контрагент,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.Подразделение            КАК Подразделение,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ДД.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ                      КАК СуммаБезНДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ                      КАК НДС,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ                      КАК НДСУпр
	|	ИЗ
	|		НДСАвансыВыданныеПоИСФ КАК ДД
	|	
	|	ГДЕ
	|		&ТекстОтборПоПараметрам) КАК НачислениеСВыданногоАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеСВыданногоАванса.Организация,
	|	НачислениеСВыданногоАванса.ДокументОплаты,
	|	НачислениеСВыданногоАванса.Контрагент,
	|	НачислениеСВыданногоАванса.Подразделение,
	|	НачислениеСВыданногоАванса.НаправлениеДеятельности,
	|	НачислениеСВыданногоАванса.СтавкаНДС,
	|	НачислениеСВыданногоАванса.ОбъектРасчетов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачислениеСВыданногоАванса.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(НачислениеСВыданногоАванса.НДС) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументОплаты,
	|	Контрагент
	|";

	ПараметрыПутей = ИнициализироватьПараметры_Авансы_ПутиКПолямИТекстуЗамены();
	ПараметрыПутей.ПолныйПуть_РасчетныйДокумент = "ДокументОплаты";
	ПостобработкаЗапроса_Авансы_ДляОтбораПоПараметрам(Запрос, ПараметрыРасчета, ПараметрыПутей);
	
	Запрос.Выполнить();

КонецПроцедуры

#КонецОбласти

#Область АвансыВыданные

// Подготовить временную таблицу "АвансыВыданные_Возникновения"
// Создает временную таблицу с колонками:
// 	* Организация;
// 	* РасчетныйДокумент;
// 	* ДокументРегистратор;
// 	* ОбъектРасчетов;
// 	* НаправлениеДеятельности;
// 	* Контрагент;
// 	* Договор;
// 	* ТипНалогообложения;
// 	* ДатаАванса;
// 	* ВалютаДокумента;
// 	* СуммаАванса;
// 	* СуммаАвансаВал;
// 	* СуммаАвансаУпр.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
//  ПараметрыРасчета        - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
//  ТаблицаНастроек - ТаблицаЗначений - с колонками:
//		* Организация - СправочникСсылка.Организации -
//		* ИспользоватьУчетНДС - Булево - 
//		* ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
//		* ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
Процедура ПодготовитьВТ_АвансыВыданные_Возникновения(МенеджерВременныхТаблиц, ПараметрыРасчета, ТаблицаНастроек = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек);
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц,
		"РасчетыСПоставщиками_Авансы") Тогда
		Запрос.Текст = "УНИЧТОЖИТЬ РасчетыСПоставщиками_Авансы";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыРасчетаПоВзаиморасчетам =
		ВзаиморасчетыСервер.ИнициализироватьПараметрыПодготовкиРасчетовАвансов(ПараметрыРасчета);
	ПараметрыРасчетаПоВзаиморасчетам.ПоляИндексовВручную.Очистить();
	ПараметрыРасчетаПоВзаиморасчетам.СоздатьПустуюТаблицу =
		ПараметрыРасчета.СоздатьПустуюТаблицу ИЛИ НЕ ПараметрыРасчета.ВключитьДанныеВзаиморасчетов;
	Если ЗначениеЗаполнено(ПараметрыРасчета.Организации) Тогда
		ПараметрыРасчетаПоВзаиморасчетам.ВключитьОтборПоОрганизациям = Истина;
		ПараметрыРасчетаПоВзаиморасчетам.Организации = ПараметрыРасчета.Организации_АвансыВыданные;
	КонецЕсли;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСПоставщиками_Авансы(
			МенеджерВременныхТаблиц,
			ПараметрыРасчетаПоВзаиморасчетам);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Расчеты.Организация               КАК Организация,
	|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
	|	Расчеты.ДокументРегистратор       КАК ДокументРегистратор,
	|	Расчеты.ОбъектРасчетов            КАК ОбъектРасчетов,
	|	Расчеты.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Расчеты.Контрагент                КАК Контрагент,
	|	Расчеты.Договор                   КАК Договор,
	|	&ТекстОпределенияНалогообложения  КАК ТипНалогообложения,
	|	Расчеты.ДатаАванса                КАК ДатаАванса,
	|	Расчеты.ВалютаДокумента           КАК ВалютаДокумента,
	|	Расчеты.СуммаАвансаРегл           КАК СуммаАванса,
	|	Расчеты.СуммаАвансаВал            КАК СуммаАвансаВал,
	|	Расчеты.СуммаАвансаУпр            КАК СуммаАвансаУпр
	|ПОМЕСТИТЬ АвансыВыданные_Возникновения
	|ИЗ
	|	РасчетыСПоставщиками_Авансы КАК Расчеты
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Расчеты.РасчетныйДокумент) В (&ТипыРасчетныхДокументовВыданных)
	|	И (&ИсключитьТипыНалогообложенияБезНДС = ЛОЖЬ
	|		ИЛИ НЕ &ТекстОпределенияНалогообложения В (&ТипыНалогообложенияБезНДС))
	|	И &ТекстОпределенияНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасчетыСПоставщиками_Авансы
	|";
	
	ПараметрыПутей = ИнициализироватьПараметры_Авансы_ПутиКПолямИТекстуЗамены();
	ПараметрыПутей.ПолныйПуть_РасчетныйДокумент = "РасчетыПоЛизингу.РасчетныйДокумент";
	ПостобработкаЗапроса_Авансы_ДляОтбораПоПараметрам(Запрос, ПараметрыРасчета, ПараметрыПутей);
	
	ПараметрыОпеределенияНО = ИнициализироватьПараметры_Авансы_ОпределениеНалогообложения(Истина);
	ПостобработкаЗапроса_Авансы_ТипНалогообложения(Запрос, ПараметрыРасчета, ПараметрыОпеределенияНО);
	
	ПостобработкаЗапроса_Авансы_УстановитьПоляИндексов(Запрос, ПараметрыРасчета, "АвансыВыданные_Возникновения");
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Подготовить временную таблицу "АвансыВыданные_Погашения"
// Создает временную таблицу с колонками:
// 	* Организация;
// 	* РасчетныйДокумент;
// 	* ДокументРегистратор;
// 	* ДатаАванса;
// 	* ДатаПогашения;
// 	* НаправлениеДеятельности;
// 	* Контрагент;
// 	* Договор;
// 	* ТипНалогообложения;
// 	* ВидСобытия;
// 	* ВалютаДокумента;
// 	* СобытиеЗнак;
// 	* СуммаПогашения;
// 	* СуммаПогашенияВал;
// 	* СуммаПогашенияУпр.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
//  ПараметрыРасчета        - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
//  ТаблицаНастроек - ТаблицаЗначений - с колонками:
//		* Организация - СправочникСсылка.Организации -
//		* ИспользоватьУчетНДС - Булево - 
//		* ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
//		* ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
Процедура ПодготовитьВТ_АвансыВыданные_Погашения(МенеджерВременныхТаблиц, ПараметрыРасчета, ТаблицаНастроек = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек);
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц,
		"РасчетыСПоставщиками_ПогашенияАвансов") Тогда
		Запрос.Текст = "УНИЧТОЖИТЬ РасчетыСПоставщиками_ПогашенияАвансов";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыРасчетаПоВзаиморасчетам =
		ВзаиморасчетыСервер.ИнициализироватьПараметрыПодготовкиРасчетовАвансов(ПараметрыРасчета);
	ПараметрыРасчетаПоВзаиморасчетам.ПоляИндексовВручную.Очистить();
	ПараметрыРасчетаПоВзаиморасчетам.СоздатьПустуюТаблицу =
		ПараметрыРасчета.СоздатьПустуюТаблицу ИЛИ НЕ ПараметрыРасчета.ВключитьДанныеВзаиморасчетов;
	
	Если ЗначениеЗаполнено(ПараметрыРасчета.Организации) Тогда
		ПараметрыРасчетаПоВзаиморасчетам.ВключитьОтборПоОрганизациям = Истина;
		ПараметрыРасчетаПоВзаиморасчетам.Организации = ПараметрыРасчета.Организации_АвансыВыданные;
	КонецЕсли;
		
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСПоставщиками_ПогашенияАвансов(
		МенеджерВременныхТаблиц,
		ПараметрыРасчетаПоВзаиморасчетам);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Погашения.Организация                КАК Организация,
	|	Погашения.РасчетныйДокумент          КАК РасчетныйДокумент,
	|	Погашения.ДокументРегистратор        КАК ДокументРегистратор,
	|	Погашения.ДатаАванса                 КАК ДатаАванса,
	|	Погашения.ДатаПогашения              КАК ДатаПогашения,
	|	Погашения.ИсхНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Погашения.ИсхКонтрагент              КАК Контрагент,
	|	Погашения.ИсхДоговор                 КАК Договор,
	|	Погашения.ОбъектРасчетов             КАК ОбъектРасчетов,
	|	&ТекстОпределенияНалогообложения     КАК ТипНалогообложения,
	|	Погашения.ВидСобытия                 КАК ВидСобытия,
	|	МАКСИМУМ(Погашения.ВалютаДокумента)  КАК ВалютаДокумента,
	|	СУММА(ВЫБОР
	|			КОГДА Погашения.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)
	|				ТОГДА -1
	|			ИНАЧЕ
	|				1
	|		КОНЕЦ)                           КАК СобытиеЗнак,
	|	СУММА(Погашения.СуммаПогашенияРегл)  КАК СуммаПогашения,
	|	СУММА(Погашения.СуммаПогашенияВал)   КАК СуммаПогашенияВал,
	|	СУММА(Погашения.СуммаПогашенияУпр)   КАК СуммаПогашенияУпр
	|ПОМЕСТИТЬ АвансыВыданные_Погашения
	|ИЗ
	|	РасчетыСПоставщиками_ПогашенияАвансов КАК Погашения
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Погашения.РасчетныйДокумент) В (&ТипыРасчетныхДокументовВыданных)
	|	И (&ИсключитьТипыНалогообложенияБезНДС = ЛОЖЬ
	|		ИЛИ НЕ &ТекстОпределенияНалогообложения В (&ТипыНалогообложенияБезНДС))
	|	И &ТекстОпределенияНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Погашения.Организация,
	|	Погашения.РасчетныйДокумент,
	|	Погашения.ДокументРегистратор,
	|	Погашения.ДатаАванса,
	|	Погашения.ДатаПогашения,
	|	Погашения.ИсхНаправлениеДеятельности,
	|	Погашения.ИсхКонтрагент,
	|	Погашения.ИсхДоговор,
	|	Погашения.ОбъектРасчетов,
	|	&ТекстОпределенияНалогообложения,
	|	Погашения.ВидСобытия
	|
	|ИМЕЮЩИЕ
	|	СУММА(Погашения.СуммаПогашенияРегл) > 0
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|
	|;
	|
	|УНИЧТОЖИТЬ РасчетыСПоставщиками_ПогашенияАвансов
	|
	|";
	
	ПараметрыПутей = ИнициализироватьПараметры_Авансы_ПутиКПолямИТекстуЗамены();
	ПараметрыПутей.ПолныйПуть_РасчетныйДокумент = "РасчетыПоЛизингу.РасчетныйДокумент";
	ПостобработкаЗапроса_Авансы_ДляОтбораПоПараметрам(Запрос, ПараметрыРасчета, ПараметрыПутей);
	
	ПараметрыОпеределенияНО = ИнициализироватьПараметры_Авансы_ОпределениеНалогообложения(Истина);
	ПараметрыОпеределенияНО.ПолеРесурса = "Погашения.ИсходныйОбъектРасчетов";
	ПостобработкаЗапроса_Авансы_ТипНалогообложения(Запрос, ПараметрыРасчета, ПараметрыОпеределенияНО);
	
	ПостобработкаЗапроса_Авансы_УстановитьПоляИндексов(Запрос, ПараметрыРасчета, "АвансыВыданные_Погашения");
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Подготовить временную таблицу "ПереносыАвансовВыданных"
// Создает временную таблицу с колонками.
// см. ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСПоставщиками_ПереносыАвансов
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
//  ПараметрыРасчета        - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
//  ТаблицаНастроек - ТаблицаЗначений - с колонками:
//		* Организация - СправочникСсылка.Организации -
//		* ИспользоватьУчетНДС - Булево - 
//		* ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
//		* ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
Процедура ПодготовитьВТ_ПереносыАвансовВыданных(МенеджерВременныхТаблиц, ПараметрыРасчета, ТаблицаНастроек = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек);
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц,
		"РасчетыСПоставщиками_ПереносыАвансов") Тогда
		Запрос.Текст = "УНИЧТОЖИТЬ РасчетыСПоставщиками_ПереносыАвансов";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыРасчетаПоВзаиморасчетам =
		ВзаиморасчетыСервер.ИнициализироватьПараметрыПодготовкиРасчетовАвансов(ПараметрыРасчета);
	
	ПараметрыРасчетаПоВзаиморасчетам.ПоляИндексовВручную.Очистить();
	ПараметрыРасчетаПоВзаиморасчетам.СоздатьПустуюТаблицу =
		ПараметрыРасчета.СоздатьПустуюТаблицу ИЛИ НЕ ПараметрыРасчета.ВключитьДанныеВзаиморасчетов;
	Если ЗначениеЗаполнено(ПараметрыРасчета.Организации) Тогда
		ПараметрыРасчетаПоВзаиморасчетам.ВключитьОтборПоОрганизациям = Истина;
		ПараметрыРасчетаПоВзаиморасчетам.Организации = ПараметрыРасчета.Организации_АвансыВыданные;
	КонецЕсли;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСПоставщиками_ПереносыАвансов(
		МенеджерВременныхТаблиц,
		ПараметрыРасчетаПоВзаиморасчетам);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыСПоставщиками.Организация                                 КАК Организация,
	|	РасчетыСПоставщиками.ДокументПереноса                            КАК ДокументПереноса,
	|	РасчетыСПоставщиками.ДокументОплаты                              КАК ДокументОплаты,
	|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам                   КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСПоставщиками.ОбъектРасчетов                              КАК ОбъектРасчетов,
	|	РасчетыСПоставщиками.Контрагент                                  КАК Контрагент,
	|	РасчетыСПоставщиками.НаправлениеДеятельности                     КАК НаправлениеДеятельности,
	|	РасчетыСПоставщиками.Подразделение                               КАК Подразделение,
	|	РасчетыСПоставщиками.КорАналитикаУчетаПоПартнерам                КАК КорАналитикаУчетаПоПартнерам,
	|	РасчетыСПоставщиками.КорОбъектРасчетов                           КАК КорОбъектРасчетов,
	|	РасчетыСПоставщиками.КорКонтрагент                               КАК КорКонтрагент,
	|	РасчетыСПоставщиками.КорНаправлениеДеятельности                  КАК КорНаправлениеДеятельности,
	|	РасчетыСПоставщиками.КорПодразделение                            КАК КорПодразделение,
	|	РасчетыСПоставщиками.Период                                      КАК Период,
	|	РасчетыСПоставщиками.НастройкаХозяйственнойОперации              КАК НастройкаХозяйственнойОперации,
	|	РасчетыСПоставщиками.ИдентификаторФинЗаписи                      КАК ИдентификаторФинЗаписи,
	|	РасчетыСПоставщиками.Валюта                                      КАК Валюта,
	|	РасчетыСПоставщиками.Предоплата                                  КАК Предоплата,
	|	РасчетыСПоставщиками.ПредоплатаРегл                              КАК ПредоплатаРегл,
	|	РасчетыСПоставщиками.ПредоплатаУпр                               КАК ПредоплатаУпр
	|ПОМЕСТИТЬ ПереносыАвансовВыданных
	|ИЗ РасчетыСПоставщиками_ПереносыАвансов КАК РасчетыСПоставщиками
	|
	|
	|;
	|
	|УНИЧТОЖИТЬ РасчетыСПоставщиками_ПереносыАвансов
	|
	|";
	
	УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета);
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область Служебные

// Заполнить свойства параметров расчетов из структуры-источника
//
// Параметры:
//  Приемник - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
//  Источник - Структура - структура, содержащая хотя бы одно из свойств приемника
//
Процедура ЗаполнитьСвойстваПараметровРасчетовАвансов(Приемник, Источник)
	
	ТипПриемника  = ТипЗнч(Приемник);
	ТипИсточника  = ТипЗнч(Источник);
	
	Если ТипПриемника = Тип("Структура") И ТипИсточника = Тип("Структура") Тогда
			Для каждого ЭлементПриемника Из Приемник Цикл
				ЗначениеИсточника = Неопределено;
				Если Источник.Свойство(ЭлементПриемника.Ключ, ЗначениеИсточника) Тогда
					ЗаполнитьСвойстваПараметровРасчетовАвансов(Приемник[ЭлементПриемника.Ключ], ЗначениеИсточника);
				КонецЕсли;
			КонецЦикла;
	ИначеЕсли ТипПриемника <> Тип("Структура") И ТипИсточника <> Тип("Структура") Тогда
		Приемник = ОбщегоНазначения.СкопироватьРекурсивно(Источник);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает необходимые параметры для исполнения запросов по авансам
//
// Параметры:
//  Запрос           - Запрос - 
//  ПараметрыРасчета - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
Процедура УстановитьПараметрыЗапросаПодготовкиРасчетовАвансовВЦеляхНДС(Запрос, ПараметрыРасчета)
	
	Если НЕ ЗначениеЗаполнено(ПараметрыРасчета.ДатаОкончания) Тогда
		ДатаОкончания        = Дата(3000, 1, 1);
		ДатаОкончанияВключая = Неопределено;
	Иначе
		ДатаОкончания        = ПараметрыРасчета.ДатаОкончания;
		ДатаОкончанияВключая = Новый Граница(ДатаОкончания);
	КонецЕсли;
	
	ПустаяДата        = '00010101';
	
	РасчетныйДокумент = ?(ЗначениеЗаполнено(ПараметрыРасчета.РасчетныйДокумент),
							ПараметрыРасчета.РасчетныйДокумент, Неопределено);
	
	Если ЗначениеЗаполнено(ПараметрыРасчета.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора)
		ИЛИ ЗначениеЗаполнено(РасчетныйДокумент) Тогда
		ВключитьОтборПоРасчетномуДокументу = Истина;
	Иначе
		ВключитьОтборПоРасчетномуДокументу = Ложь;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНачала",           ПараметрыРасчета.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",        ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаОкончанияВключая", ДатаОкончанияВключая);
	Запрос.УстановитьПараметр("ПустаяДата",           ПустаяДата);
	Запрос.УстановитьПараметр("Организации_АвансыПолученные", ПараметрыРасчета.Организации_АвансыПолученные);
	Запрос.УстановитьПараметр("Организации_АвансыВыданные",   ПараметрыРасчета.Организации_АвансыВыданные);
	Запрос.УстановитьПараметр("РасчетныйДокумент",    РасчетныйДокумент);
	Запрос.УстановитьПараметр("СоздатьПустуюТаблицу", ПараметрыРасчета.СоздатьПустуюТаблицу);
	Запрос.УстановитьПараметр("ПустойОбъектРасчетов", Неопределено);
	Запрос.УстановитьПараметр("ВалютаУпрУчета",       Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВключитьОтборПоРасчетномуДокументу", ВключитьОтборПоРасчетномуДокументу);
	Запрос.УстановитьПараметр("АнализироватьУпрУчетДополнительно",  ПараметрыРасчета.АнализироватьУпрУчетДополнительно);
	
	Запрос.УстановитьПараметр("ВключитьДанныеВзаиморасчетов",
		ПараметрыРасчета.ВключитьДанныеВзаиморасчетов);
	Запрос.УстановитьПараметр("ВключитьДанныеПодарочныхСертификатов",
		ПараметрыРасчета.ВключитьДанныеПодарочныхСертификатов);
	Запрос.УстановитьПараметр("ВключитьДанныеФинансовыхИнструментов",
		ПараметрыРасчета.ВключитьДанныеФинансовыхИнструментов);
	
	Запрос.УстановитьПараметр("ИсключитьТипыНалогообложенияБезНДС",
		ПараметрыРасчета.ИсключитьТипыНалогообложенияБезНДС);
	Запрос.УстановитьПараметр("ТипыНалогообложенияБезНДС",     ПараметрыРасчета.ТипыНалогообложенияБезНДС);
	Запрос.УстановитьПараметр("ТипНалогообложенияНДСПустой",   Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("ТипыРасчетныхДокументовПолученных",
		Метаданные.Документы.СчетФактураВыданныйАванс.Реквизиты.ДокументОснование.Тип.Типы());
	Запрос.УстановитьПараметр("ТипыРасчетныхДокументовВыданных",
		Метаданные.Документы.СчетФактураПолученныйАванс.Реквизиты.ДокументОснование.Тип.Типы());
	
	Запрос.УстановитьПараметр("ПравилоОтбораАвансов", ПараметрыРасчета.ПравилоОтбораАвансов);
	Запрос.УстановитьПараметр("ВключитьСправочноДанныеНеТребующиеНачисленияНДС",
		ПараметрыРасчета.ВключитьСправочноДанныеНеТребующиеНачисленияНДС);
	Запрос.УстановитьПараметр("ВключитьОперацииСписанияЗадолженности",
		ПараметрыРасчета.ВключитьОперацииСписанияЗадолженности); 
	Запрос.УстановитьПараметр("ИсключитьИУДА", ПараметрыРасчета.ИсключитьИУДА);
	
КонецПроцедуры

// Постобработка запроса для определения типа налогообложения
//
// Параметры:
//  Запрос			 - Запрос - 
//  ПараметрыРасчета - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
//  ПараметрыОпределенияНалогообложения - см. ИнициализироватьПараметры_Авансы_ОпределениеНалогообложения
//
Процедура ПостобработкаЗапроса_Авансы_ТипНалогообложения(Запрос, ПараметрыРасчета, ПараметрыОпределенияНалогообложения)
	
	ШаблонОпределенияНалогообложения = "ЕСТЬNULL(%1.НалогообложениеНДС, &ТипНалогообложенияНДСПустой)";
	
	ТекстОпределенияНалогообложения =
		СтрШаблон(ШаблонОпределенияНалогообложения, ПараметрыОпределенияНалогообложения.ПолеРесурса);
	
	Запрос.Текст =
		СтрЗаменить(Запрос.Текст, ПараметрыОпределенияНалогообложения.ЗаменяемыйТекст, ТекстОпределенияНалогообложения);
	
КонецПроцедуры

// Постобработка запроса для отбора авансов по параметрам - заменяет "&ТекстОтборПоПараметрам"
// 
// Параметры:
// 	Запрос - Запрос  -
// 	ПараметрыРасчета - см. ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС
// 	ПараметрыПутей   - см. ИнициализироватьПараметры_Авансы_ПутиКПолямИТекстуЗамены
Процедура ПостобработкаЗапроса_Авансы_ДляОтбораПоПараметрам(Запрос, ПараметрыРасчета, ПараметрыПутей)
	
	мТекстовОтборПоПараметрам = Новый Массив;
	
	ИмяПоляОтбора    = ПараметрыРасчета.ПараметрыОтбораПоРасчетномуДокументу.ИмяПоля;
	ИмяТаблицыОтбора = ПараметрыРасчета.ПараметрыОтбораПоРасчетномуДокументу.ИмяТаблицыОтбора;
	
	ПолныйПуть = ПараметрыПутей.ПолныйПуть_РасчетныйДокумент;
	
	Если ЗначениеЗаполнено(ИмяТаблицыОтбора) Тогда
		
		ШаблонТекста = "%1 В
		|			(ВЫБРАТЬ
		|				%2 КАК Ссылка
		|			ИЗ
		|				%3 КАК Т
		|			)
		|";
		
		мТекстовОтборПоПараметрам.Добавить(СтрШаблон(ШаблонТекста, ПолныйПуть, ИмяПоляОтбора, ИмяТаблицыОтбора));
		
	Иначе
		
		ШаблонТекста = "(НЕ &ВключитьОтборПоРасчетномуДокументу ИЛИ %1 В (&РасчетныйДокумент))";
		мТекстовОтборПоПараметрам.Добавить(СтрШаблон(ШаблонТекста, ПолныйПуть));
		
	КонецЕсли;
	
	ТекстОтборПоПараметрам = СтрСоединить(мТекстовОтборПоПараметрам, " И ");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ПараметрыПутей.ТекстЗамены, ТекстОтборПоПараметрам);
	
КонецПроцедуры

Процедура ПостобработкаЗапроса_Авансы_УстановитьПоляИндексов(Запрос, ПараметрыРасчета, ИмяТаблицы)
	
	мПоляИндексов = ПараметрыРасчета.ПоляИндексовВручную;
	
	Если НЕ ЗначениеЗаполнено(мПоляИндексов) Тогда
		Возврат;
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	
	Для каждого Пакет Из СхемаЗапроса.ПакетЗапросов Цикл
		Если Пакет.ТаблицаДляПомещения = ИмяТаблицы Тогда
			
			Пакет.Порядок.Очистить();
			Для каждого ПолеИндекса из мПоляИндексов Цикл
				Пакет.Индекс.Добавить(ПолеИндекса);
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецПроцедуры

// Инициализировать параметры определения налогообложения
//
// Параметры:
//  ЭтоВыданныйАванс - Булево - "Истина" - Выданный, "Ложь" - Полученный
// 
// Возвращаемое значение:
//  Структура - содержит:
//  	* ПолеРесурса      - Строка - Поле, в котором будет анализироваться н/о
//  	* ЗаменяемыйТекст  - Строка - Строки в запросе, которые будут заменены на текст определения налогообложения
//  	* ЭтоВыданныйАванс - Булево - "Истина" - Выданный, "Ложь" - Полученный
//
Функция ИнициализироватьПараметры_Авансы_ОпределениеНалогообложения(ЭтоВыданныйАванс)
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ПолеРесурса",      "ОбъектРасчетов");
	СтруктураПараметров.Вставить("ЗаменяемыйТекст",  "&ТекстОпределенияНалогообложения");
	СтруктураПараметров.Вставить("ЭтоВыданныйАванс", ЭтоВыданныйАванс);
	
	Возврат СтруктураПараметров;
	
КонецФункции

// Инициализировать параметры для указания путей к полям и тексту замены отбора по параметрам
//
// Возвращаемое значение:
//  Структура - содержит:
//  	* ТекстЗамены                  - Строка - Заменяемый текст в запросе
//  	* ПолныйПуть_РасчетныйДокумент - Строка - Полный путь к расчетному документу
//
Функция ИнициализироватьПараметры_Авансы_ПутиКПолямИТекстуЗамены()
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ТекстЗамены", "&ТекстОтборПоПараметрам");
	
	СтруктураПараметров.Вставить("ПолныйПуть_РасчетныйДокумент", "РасчетныйДокумент");
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция НастройкиУчетаНДСПоОрганизациям(Организации, Период = Неопределено)
	
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	
	ТаблицаДанных = Новый ТаблицаЗначений();
	
	ТаблицаДанных.Колонки.Добавить("Организация",         Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДанных.Колонки.Добавить("ИспользоватьУчетНДС", Новый ОписаниеТипов("Булево"));
	ТаблицаДанных.Колонки.Добавить("ОсновноеНалогообложениеНДСПродажи",
		Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНалогообложенияНДС"));
	ТаблицаДанных.Колонки.Добавить("ОсновнойВидДеятельностиНДСЗакупки",
		Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНалогообложенияНДС"));
	
	Для каждого Организация Из Организации Цикл
		
		СтрокаДанных = ТаблицаДанных.Добавить();
		
		СтрокаДанных.Организация = Организация;
		
		ЗаполнитьЗначенияСвойств(СтрокаДанных, НастройкиУчета);
		
	КонецЦикла;
	
	Если НЕ НастройкиУчета.ИспользоватьУчетНДС Тогда
		// Если не используется учет НДС, используем значения, установленные для всей ИБ
		Возврат ТаблицаДанных;
	КонецЕсли;
	
	Для каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(СтрокаДанных.Организация, Период);
		
		ЗаполнитьЗначенияСвойств(СтрокаДанных, ПараметрыУчетаПоОрганизации);
		
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции

Процедура ЗаполнитьСлужебныеПараметрыРасчетаАвансов(ПараметрыРасчета, ТаблицаНастроек)
	
	Если НЕ ПараметрыРасчета.ОчиститьСлужебныеКолонки Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыРасчета.ДатаОкончания) Тогда
		ДатаОкончания        = Дата(3000, 1, 1);
	Иначе
		ДатаОкончания        = ПараметрыРасчета.ДатаОкончания;
	КонецЕсли;
	
	// Отбор по организациям
	
	Если ЗначениеЗаполнено(ПараметрыРасчета.Организации) Тогда
		
		Если ТипЗнч(ПараметрыРасчета.Организации) = Тип("СправочникСсылка.Организации") Тогда
			мОрганизации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыРасчета.Организации);
		ИначеЕсли ТипЗнч(ПараметрыРасчета.Организации) = Тип("СписокЗначений") Тогда
			мОрганизации = ПараметрыРасчета.Организации.ВыгрузитьЗначения();
		Иначе
			мОрганизации = ПараметрыРасчета.Организации;
		КонецЕсли;
		
	Иначе
		
		мОрганизации = Справочники.Организации.ДоступныеОрганизации();
		
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(
			мОрганизации, 
			Справочники.Организации.УправленческаяОрганизация);
			
	КонецЕсли;
	
	// Фильтр организаций по признакам настроек учета НДС
	
	ТипыНалогообложенияБезНДС = ПараметрыРасчета.ТипыНалогообложенияБезНДС;
	
	Если ТаблицаНастроек = Неопределено Тогда
		ТаблицаНастроек = НастройкиУчетаНДСПоОрганизациям(мОрганизации, ДатаОкончания);
	КонецЕсли;
	
	Для Каждого СтрокаНастроек Из ТаблицаНастроек Цикл
		
		Если ТипыНалогообложенияБезНДС.Найти(СтрокаНастроек.ОсновноеНалогообложениеНДСПродажи) = Неопределено Тогда
			ПараметрыРасчета.Организации_АвансыПолученные.Добавить(СтрокаНастроек.Организация);
		КонецЕсли;
		
		Если ТипыНалогообложенияБезНДС.Найти(СтрокаНастроек.ОсновнойВидДеятельностиНДСЗакупки) = Неопределено Тогда
			ПараметрыРасчета.Организации_АвансыВыданные.Добавить(СтрокаНастроек.Организация);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПараметрыРаспределенияЗачета()
	Параметры = Новый Структура; 
	Параметры.Вставить("ТолькоРаспределение", Ложь);
	Параметры.Вставить("ОбновитьИдентификатор", Истина);
	Параметры.Вставить("ОпределятьПодразделениеПоПогашенномуАвансу", Ложь);
	Возврат Параметры;
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти
