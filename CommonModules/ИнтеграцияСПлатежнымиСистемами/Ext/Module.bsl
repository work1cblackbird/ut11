///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.ПереводыСБПc2b".
// ОбщийМодуль.ИнтеграцияСПлатежнымиСистемами.
//
// Серверные процедуры выполнения оплаты в платежных системах:
//  - определение доступности настроек подключения, а также получения настроек;
//  - создание, проверка статуса и подтверждение заказов на оплату в платежных системах;
//  - возврат оплаты по оплаченным заказам на оплату, подтверждения возврата и проверка статуса возврата;
//  - валидация параметров запросов;
//  - формирование QR-кодов для визуализации идентификаторов Системы быстрых платежей;
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область УстаревшиеПроцедурыИФункции

#Область НастройкиОпераций

// Устарела. Следует использовать ПереводыСБПc2b.ПереводыСБПДоступны.
//
Функция ИнтеграцияДоступна() Экспорт
	
	Возврат ПереводыСБПc2b.ПереводыСБПДоступны();
	
КонецФункции

// Устарела. Следует использовать СистемаБыстрыхПлатежей.НастройкаПодключенияДоступна.
//
Функция НастройкаИнтеграцияДоступна() Экспорт
	
	Возврат СистемаБыстрыхПлатежейПовтИсп.НастройкаПодключенияДоступна();
	
КонецФункции

// Устарела. Следует использовать СистемаБыстрыхПлатежей.НастройкиПодключения.
//
Функция НастройкиТорговойТочки(ТорговаяТочка) Экспорт
	
	Настройки = СистемаБыстрыхПлатежей.НастройкиПодключения(ТорговаяТочка);
	
	Результат = Новый Структура;
	Результат.Вставить("ОтменаЗаказа",                  Ложь);
	Результат.Вставить("ОтменаОплаты",                  Ложь);
	Результат.Вставить("СрокЖизниQRКода",               Истина);
	Результат.Вставить("ПлатежнаяСсылка",               Истина);
	Результат.Вставить("ВыборПлатежнойСистемыВозврата", Настройки.НастройкиСБПc2b.УчастникСБПВозврата);
	Результат.Вставить("Идентификатор",                 Настройки.Идентификатор);
	Результат.Вставить("СинонимСистемы",                Настройки.СинонимСистемы);
	Результат.Вставить("Используется",                  Настройки.Используется);
	Результат.Вставить("КассовыеСсылки",                Настройки.НастройкиСБПc2b.КассовыеСсылки);
	Результат.Вставить("ПлатежныйАгрегатор",            Настройки.НастройкиСБПc2b.ПлатежныйАгрегатор);
	Результат.Вставить("ПодключениеКассовойСсылки",     Настройки.НастройкиСБПc2b.ПодключениеКассовойСсылки);
	
	Возврат Результат;
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.УчастникиСБПДляВозврата.
//
Функция ПлатежныеСистемыВозврата(ТорговаяТочка) Экспорт
	
	Возврат ПереводыСБПc2b.УчастникиСБПДляВозврата();
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.НастройкиПодключенияОперации.
//
Функция ТорговыеТочкиОперации(ДокументОперации) Экспорт
	
	Возврат ПереводыСБПc2b.НастройкиПодключенияОперации(ДокументОперации);
	
КонецФункции

// Устарела. Следует использовать СистемаБыстрыхПлатежей.ПараметрыПодключенияПоБИК.
//
Функция НастройкиИнтеграции(БИК) Экспорт
	
	Результат = СистемаБыстрыхПлатежей.ПараметрыПодключенияПоБИК(БИК);
	Если Результат.ПараметрыУчастникаСБП <> Неопределено Тогда
		Результат.ПараметрыУчастникаСБП.Вставить("ТорговыеТочки", Результат.ПараметрыУчастникаСБП.НастройкаПодключения);
		Результат.ПараметрыУчастникаСБП.Удалить("НастройкаПодключения");
	КонецЕсли;
	
	Результат.Вставить("ИнтеграцияДоступна", Результат.ИнтеграцияДоступнаСБПc2b); 
	Результат.Удалить("ИнтеграцияДоступнаСБПc2b");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ДинамическиеСсылки

// Устарела. Следует использовать ПереводыСБПc2b.ДинамическаяСсылка.
//
Функция ИдентификаторОплаты(ДокументОплаты, ТорговаяТочка, ДополнительныеПараметры = Неопределено) Экспорт
	
	Результат = ПереводыСБПc2b.ДинамическаяСсылка(
		ДокументОплаты,
		ТорговаяТочка,
		ДополнительныеПараметры);
	Результат.Вставить("QRКод", Результат.ПлатежнаяСсылка);
	Результат.Удалить("ПлатежнаяСсылка");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область КассовыеСсылки

// Устарела. Следует использовать ПереводыСБПc2b.КассоваяСсылка.
//
Функция КассоваяСсылка(ТорговаяТочка) Экспорт
	
	Возврат ПереводыСБПc2b.КассоваяСсылка(
		ТорговаяТочка);
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.АктивироватьКассовуюСсылку.
//
Функция АктивироватьКассовуюСсылку(
		ДокументОплаты,
		ДанныеСсылки,
		ТорговаяТочка,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Возврат ПереводыСБПc2b.АктивироватьКассовуюСсылку(
		ДокументОплаты,
		ДанныеСсылки,
		ТорговаяТочка,
		ДополнительныеПараметры);
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.ДеактивироватьКассовуюСсылку.
//
Функция ДеактивироватьКассовуюСсылку(
		ДанныеСсылки,
		ТорговаяТочка) Экспорт
	
	Возврат ПереводыСБПc2b.ДеактивироватьКассовуюСсылку(
		ДанныеСсылки,
		ТорговаяТочка);
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.КарточкаКассовойСсылки.
//
Функция СформироватьКарточкуКассовойСсылки(ДанныеСсылки, ПараметрыПечати) Экспорт
	
	Возврат ПереводыСБПc2b.КарточкаКассовойСсылки(
		ДанныеСсылки,
		ПараметрыПечати);
	
КонецФункции

#КонецОбласти

#Область ОперацииОплат

// Устарела. Следует использовать ПереводыСБПc2b.СтатусОплаты.
//
Функция СтатусОплаты(ДокументОплаты, ТорговаяТочка, ДлительныйВызов = Истина) Экспорт
	
	Возврат ПереводыСБПc2b.СтатусОплаты(
		ДокументОплаты,
		ТорговаяТочка,
		ДлительныйВызов);
	
КонецФункции

// Устарела. Следует использовать отказаться от использования функции.
//
Функция ОтменитьЗаказНаОплату(ДокументОплаты, ТорговаяТочка) Экспорт
	
	Если Не ИнтеграцияДоступна() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций в Системе быстрых платежей.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	ВызватьИсключение НСтр("ru = 'На текущий момент Система быстрых платежей не поддерживает отмену оплаты.'");
	
КонецФункции

// Устарела. Следует отказаться от использования метода.
//
Функция ОтменитьОплату(ДокументОплаты, ТорговаяТочка) Экспорт
	
	Если Не ИнтеграцияДоступна() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций в Системе быстрых платежей.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	РезультатОперации = Новый Структура;
	РезультатОперации.Вставить("КодОшибки", "");
	РезультатОперации.Вставить("СообщениеОбОшибке",  "");
	РезультатОперации.Вставить("ИнформацияОбОшибке", "");
	
	Возврат РезультатОперации;
	
КонецФункции

#КонецОбласти

#Область ОперацииВозвратов

// Устарела. Следует использовать ПереводыСБПc2b.ВозвратОплаты.
//
Функция ВозвратОплаты(
		ДокументВозврата,
		ОбъектОплаты,
		ТорговаяТочка,
		Знач ПлатежнаяСистема = Неопределено,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Возврат ПереводыСБПc2b.ВозвратОплаты(
		ДокументВозврата,
		ОбъектОплаты,
		ТорговаяТочка,
		ПлатежнаяСистема,
		ДополнительныеПараметры);
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.ПодтвердитьВозврат.
//
Функция ПодтвердитьВозврат(ДокументВозврата, ТорговаяТочка) Экспорт
	
	Возврат ПереводыСБПc2b.ПодтвердитьВозврат(
		ДокументВозврата,
		ТорговаяТочка);
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.СтатусВозврата.
//
Функция СтатусВозврата(
		ДокументВозврата,
		ТорговаяТочка,
		ДлительныйВызов = Истина) Экспорт
	
	Возврат ПереводыСБПc2b.СтатусВозврата(
		ДокументВозврата,
		ТорговаяТочка,
		ДлительныйВызов);
	
КонецФункции

#КонецОбласти

#Область ДополнительныеОперации

// Устарела. Следует использовать ПереводыСБПc2b.УдалитьИдентификаторыОперации.
//
Процедура УдалитьИдентификаторыОперации(
		ДокументОперации,
		ТорговаяТочка) Экспорт
	
	ПереводыСБПc2b.УдалитьИдентификаторыОперации(
		ДокументОперации);
	
КонецПроцедуры

// Устарела. Следует использовать ПереводыСБПc2b.СтатусыОпераций.
//
Функция СтатусыОперацийC2B() Экспорт
	
	Возврат ПереводыСБПc2b.СтатусыОпераций();
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.УстановитьОтложенноеПолучениеСтатуса.
//
Функция УстановитьОтложенноеПолучениеСтатуса(ДокументОперации, Значение) Экспорт
	
	Возврат ПереводыСБПc2b.УстановитьОтложенноеПолучениеСтатуса(
		ДокументОперации,
		Значение)
	
КонецФункции

#КонецОбласти

#Область ГенерацияQRКода

// Устарела. Следует использовать СистемаБыстрыхПлатежей.ИзображениеQRКодаСБП.
//
Функция СоздатьQRКодОплаты(ТорговаяТочка, QRКод, Размер, ТипПечати = 0) Экспорт
	
	Возврат СистемаБыстрыхПлатежей.ИзображениеQRКодаСБП(
		QRКод,
		Размер,
		ТипПечати);
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.ИзображениеQRКодаВозврата.
//
Функция СоздатьQRКодВозврата(ТорговаяТочка, ДокументОплаты, Размер) Экспорт
	
	Возврат ПереводыСБПc2b.ИзображениеQRКодаВозврата(
		ДокументОплаты,
		Размер);
	
КонецФункции

#КонецОбласти

#Область ИдентификаторыОпераций

// Устарела. Следует использовать ПереводыСБПc2b.ИдентификаторыОперацииОплаты.
//
Функция ИдентификаторыОперацииОплаты(ТорговаяТочка, ДокументОплаты) Экспорт
	
	Возврат ПереводыСБПc2b.ИдентификаторыОперацииОплаты(
		ДокументОплаты);
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.ИдентификаторФункциональнойСсылки.
//
Функция ИдентификаторФункциональнойСсылки(ТорговаяТочка, ДокументОплаты) Экспорт
	
	Возврат ПереводыСБПc2b.ИдентификаторФункциональнойСсылки(
		ДокументОплаты);
	
КонецФункции

// Устарела. Следует использовать СверкаВзаиморасчетовСБПc2b.ИдентификаторТипаОперацииОплата.
//
Функция ИдентификаторТипаОперацииОплата() Экспорт
	
	МодульСверкаВзаиморасчетовСБПc2b = ОбщегоНазначения.ОбщийМодуль("СверкаВзаиморасчетовСБПc2b");
	Возврат МодульСверкаВзаиморасчетовСБПc2b.ИдентификаторТипаОперацииОплата();
	
КонецФункции

// Устарела. Следует использовать СверкаВзаиморасчетовСБПc2b.ИдентификаторТипаОперацииВозврат.
//
Функция ИдентификаторТипаОперацииВозврат() Экспорт
	
	МодульСверкаВзаиморасчетовСБПc2b = ОбщегоНазначения.ОбщийМодуль("СверкаВзаиморасчетовСБПc2b");
	Возврат МодульСверкаВзаиморасчетовСБПc2b.ИдентификаторТипаОперацииВозврат();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти
