////////////////////////////////////////////////////////////////////////////////
// Модуль содержит процедуры и функции интерфейсов взаимодействия БРО
// с другими библиотеками/конфигурациями.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ВыгрузкаДанныхАлгоритмамиРегламентированныхОтчетов

// Выгружает внешние данные алгоритмами выгрузки регламентированного отчета,
// в соответствии с форматом выгрузки, без сохранения регламентированного отчета.
// Такая выгрузка возможна только при условии, что данный отчет ее поддерживает.
//
// Параметры:
//   Контейнер               - Структура - см. СтруктураКонтейнераДанных(Параметры).
//   ДополнительныеПараметры - Структура - необязательный параметр, используемый
//                                         для передачи дополнительных параметров.
//
// Возвращаемое значение:
//   Структура - результат выгрузки (см. РегламентированнаяОтчетность.НовыйРезультатВыгрузкиРеглОтчета()).
//
// Пример реализации:
//   Парам = Новый Структура;
//   Парам.Вставить("ИсточникОтчета", "РегламентированныйОтчетПрослеживаемыеТоварыОстатки");
//   Парам.Вставить("ВыбраннаяФорма", "ФормаОтчета2021Кв3");
//   Парам.Вставить("ВерсияФормата",  "5.01");
//   Парам.Вставить("СсылкаНаВнешнийОбъект", СсылкаНаДокумент);
//   Контейнер = ИнтерфейсыВзаимодействияБРО.СтруктураКонтейнераДанных(Парам);
//   Результат = ИнтерфейсыВзаимодействияБРО.ВыгрузитьДанныеАлгоритмамиРегламентированногоОтчета(Контейнер);
//
Функция ВыгрузитьДанныеАлгоритмамиРегламентированногоОтчета(Контейнер, ДополнительныеПараметры = Неопределено) Экспорт
	
	Перем ИсточникОтчета;
	Перем ВыбраннаяФорма;
	Перем ВерсияФормата;
	Перем СсылкаНаВнешнийОбъект;
	
	Результат = РегламентированнаяОтчетность.НовыйРезультатВыгрузкиРеглОтчета();
	
	Если НЕ (ТипЗнч(Контейнер) = Тип("Структура")
		И Контейнер.Свойство("ИсточникОтчета", ИсточникОтчета) И ЗначениеЗаполнено(ИсточникОтчета)
		И Контейнер.Свойство("ВыбраннаяФорма", ВыбраннаяФорма) И ЗначениеЗаполнено(ВыбраннаяФорма)
		И Контейнер.Свойство("ВерсияФормата", ВерсияФормата) И ЗначениеЗаполнено(ВерсияФормата)
		И Контейнер.Свойство("СсылкаНаВнешнийОбъект", СсылкаНаВнешнийОбъект)
		И ЗначениеЗаполнено(СсылкаНаВнешнийОбъект)) Тогда
		
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(Результат, НСтр(
		"ru = 'Неверное значение контейнера для выгрузки данных алгоритмами регламентированного отчета'"));
		
		Возврат Результат;
		
	ИначеЕсли НЕ ((ИсточникОтчета = "РегламентированныйОтчетПрослеживаемыеТоварыВвоз"
		И ВыбраннаяФорма = "ФормаОтчета2021Кв3")
		ИЛИ (ИсточникОтчета = "РегламентированныйОтчетПрослеживаемыеТоварыОстатки"
		И ВыбраннаяФорма = "ФормаОтчета2021Кв3")
		ИЛИ (ИсточникОтчета = "РегламентированныйОтчетПрослеживаемыеТоварыПеремещение"
		И (ВыбраннаяФорма = "ФормаОтчета2022Кв4" ИЛИ ВыбраннаяФорма = "ФормаОтчета2021Кв3"))) Тогда
		
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(Результат,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
		"ru = 'Выгрузка данных алгоритмами регламентированного отчета %1 по форме %2 не поддерживается'"),
		ИсточникОтчета, ВыбраннаяФорма));
		
		Возврат Результат;
		
	КонецЕсли;
	
	ПутьКФорме = РегламентированнаяОтчетностьВызовСервера.ПолныйПутьКФорме(ИсточникОтчета, ВыбраннаяФорма);
	
	ОтчетОбъект = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета(ПутьКФорме);
	
	ПараметрыВыгрузки = Новый Структура;
	ПараметрыВыгрузки.Вставить("СтруктураКонтейнераДанных", Контейнер);
	ПараметрыВыгрузки.Вставить("РезультатВыгрузки", Результат);
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		Для Каждого ДополнительныйПараметр Из ДополнительныеПараметры Цикл
			ПараметрыВыгрузки.Вставить(ДополнительныйПараметр.Ключ, ДополнительныйПараметр.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ДанныеВыгрузки = ОтчетОбъект.УниверсальнаяВыгрузка(ПараметрыВыгрузки);
	
	ТаблицаСообщений = ДанныеВыгрузки["ТаблицаСообщений"];
	
	Если ТипЗнч(ТаблицаСообщений) <> Тип("ТаблицаЗначений") Тогда
		
		КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
		
		ШаблонСообщения = НСтр(
		"ru = 'Формат результата выгрузки данных алгоритмами регламентированного отчета %1 по форме %2 %3'",
		КодОсновногоЯзыка);
		
		СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонСообщения, ИсточникОтчета, ВыбраннаяФорма, "не соответствует ожидаемому");
		
		ЗаписьЖурналаРегистрации(НСтр(
		"ru = 'Выгрузка данных алгоритмами регламентированного отчета. Обработка результата'",
		КодОсновногоЯзыка), УровеньЖурналаРегистрации.Ошибка, , СсылкаНаВнешнийОбъект, СообщениеОбОшибке);
		
		ВызватьИсключение СообщениеОбОшибке;
		
	КонецЕсли;
	
	Для Каждого СтрокаОшибки Из ТаблицаСообщений Цикл
		
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(Результат, СтрокаОшибки.Описание);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

// Возвращает контейнер для наполнения внешними данными и последующей передачи в алгоритмы
// выгрузки или печати регламентированного отчета, без сохранения регламентированного отчета.
// Получение такого контейнера возможно только при условии, что данный отчет поддерживает
// выгрузку или печать регламентированного отчета, без сохранения регламентированного отчета.
//
// Параметры:
//   Параметры - Структура - данные, необходимые для получения контейнера:
//     * ИсточникОтчета        - Строка - имя объекта регламентированного отчета.
//     * ВыбраннаяФорма        - Строка - имя формы объекта регламентированного отчета.
//     * ВерсияФормата         - Строка - версия формата выгрузки.
//     * СсылкаНаВнешнийОбъект - Любая ссылка - ссылка на объект данных (например, ссылка на документ,
//                                              для которого выполняется получение контейнера).
//
// Возвращаемое значение:
//   Структура - контейнер для наполнения внешними данными.
//
// Пример реализации:
//   Парам = Новый Структура;
//   Парам.Вставить("ИсточникОтчета", "РегламентированныйОтчетПрослеживаемыеТоварыОстатки");
//   Парам.Вставить("ВыбраннаяФорма", "ФормаОтчета2021Кв3");
//   Парам.Вставить("ВерсияФормата",  "5.01");
//   Парам.Вставить("СсылкаНаВнешнийОбъект", СсылкаНаДокумент);
//   Контейнер = ИнтерфейсыВзаимодействияБРО.СтруктураКонтейнераДанных(Парам);
//
Функция СтруктураКонтейнераДанных(Параметры) Экспорт
	
	Перем ИсточникОтчета;
	Перем ВыбраннаяФорма;
	Перем ВерсияФормата;
	Перем СсылкаНаВнешнийОбъект;
	
	Результат = РегламентированнаяОтчетность.НовыйРезультатВыгрузкиРеглОтчета();
	
	ПодстрокаВСообщении = "для выгрузки алгоритмами регламентированного отчета";
	
	Если НЕ (ТипЗнч(Параметры) = Тип("Структура")
		И Параметры.Свойство("ИсточникОтчета", ИсточникОтчета) И ЗначениеЗаполнено(ИсточникОтчета)
		И Параметры.Свойство("ВыбраннаяФорма", ВыбраннаяФорма) И ЗначениеЗаполнено(ВыбраннаяФорма)
		И Параметры.Свойство("ВерсияФормата", ВерсияФормата) И ЗначениеЗаполнено(ВерсияФормата)
		И Параметры.Свойство("СсылкаНаВнешнийОбъект", СсылкаНаВнешнийОбъект)
		И ЗначениеЗаполнено(СсылкаНаВнешнийОбъект)) Тогда
		
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(Результат,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
		"ru = 'Неверное значение параметров получения контейнера данных %1'"), ПодстрокаВСообщении));
		
		Возврат Результат;
		
	ИначеЕсли НЕ ((ИсточникОтчета = "РегламентированныйОтчетПрослеживаемыеТоварыВвоз"
		И ВыбраннаяФорма = "ФормаОтчета2021Кв3")
		ИЛИ (ИсточникОтчета = "РегламентированныйОтчетПрослеживаемыеТоварыОстатки"
		И ВыбраннаяФорма = "ФормаОтчета2021Кв3")
		ИЛИ (ИсточникОтчета = "РегламентированныйОтчетПрослеживаемыеТоварыПеремещение"
		И (ВыбраннаяФорма = "ФормаОтчета2022Кв4" ИЛИ ВыбраннаяФорма = "ФормаОтчета2021Кв3"))) Тогда
		
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(Результат,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
		"ru = 'Получение контейнера данных %1 %2 по форме %3 не поддерживается'"),
		ПодстрокаВСообщении, ИсточникОтчета, ВыбраннаяФорма));
		
		Возврат Результат;
		
	КонецЕсли;
	
	ПутьКФорме = РегламентированнаяОтчетностьВызовСервера.ПолныйПутьКФорме(ИсточникОтчета, ВыбраннаяФорма);
	
	ОтчетОбъект = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета(ПутьКФорме);
	
	Контейнер = ОтчетОбъект.СтруктураКонтейнераДанных(Параметры);
	
	Если Контейнер = Неопределено Тогда
		
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(Результат,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
		"ru = 'Получение контейнера данных %1 %2 в формате %3 не поддерживается'"),
		ПодстрокаВСообщении, ИсточникОтчета, ВерсияФормата));
		
		Возврат Результат;
		
	КонецЕсли;
	
	Возврат Контейнер;
	
КонецФункции

#КонецОбласти
