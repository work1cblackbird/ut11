
#Область СлужебныеПроцедурыИФункции

// Проверяет состояние фонового задания по переданному идентификатору.
// 
// Параметры:
//  ИдентификаторЗадания - УникальныйИдентификатор - идентификатор фонового задания. 
//
// Возвращаемое значение:
//  Булево              - возвращает Истина, если задание успешно выполнено,
//                        Ложь - если выполняется. В иных случаях вызывается исключение.
// 
Функция ЗаданиеВыполнено(ИдентификаторЗадания) Экспорт
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

// Функция выполняет проверку использования объекта в длительной операции
// 
// Параметры:
//  Ссылка - ЛюбаяСсылка - Объект проверки.
//  УникальныйИдентификатор - УникальныйИдентификатор - идентификатор формы, в которой запускается проверка.
//  ФормаАдресХранилища - Строка - адрес хранилища в которое будут помещен результат проверки.
//  ЕстьСсылки - Булево - Флаг, указывающий на наличие ссылок на объект.
//  ИспользоватьЛокальнуюФункциюПроверки - Булево - Использовать локальную функцию проверки
// 
// Возвращаемое значение:
//  Структура - Проверить использование объекта:
//   * АдресХранилища  - Строка     - адрес временного хранилища, в которое будет помещен результат работы задания;
//   * ИдентификаторЗадания - УникальныйИдентификатор - уникальный идентификатор запущенного фонового задания;
//   * ЗаданиеВыполнено - Булево - Истина если задание было успешно выполнено за время вызова функции.
Функция ПроверитьИспользованиеОбъекта(Ссылка, УникальныйИдентификатор, ФормаАдресХранилища, ЕстьСсылки, ИспользоватьЛокальнуюФункциюПроверки = Ложь) Экспорт
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("Объект", Ссылка);
	
	Если ИспользоватьЛокальнуюФункциюПроверки Тогда
		ПроцедураПроверки = ОбщегоНазначения.ИмяБазовогоТипаПоОбъектуМетаданных(Ссылка.Метаданные())
		                  + "." +Ссылка.Метаданные().Имя
		                  + ".ПроверитьИспользованиеОбъекта";
	Иначе
		ПроцедураПроверки = "ОбщегоНазначенияУТ.ПроверитьИспользованиеОбъекта";
	КонецЕсли;
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		ФормаАдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		
		Параметры = Новый Массив();
		Параметры.Добавить(ПараметрыЗадания);		
		Параметры.Добавить(ФормаАдресХранилища);
		
		ОбщегоНазначения.ВыполнитьМетодКонфигурации(ПроцедураПроверки, Параметры);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		
		НаименованиеЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Проверка использования объекта %1'"),
				Ссылка);
				
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
				УникальныйИдентификатор,
				ПроцедураПроверки,
				ПараметрыЗадания,
				НаименованиеЗадания);
			
		ФормаАдресХранилища = Результат.АдресХранилища;
		
	КонецЕсли;
	
	Если Результат.ЗаданиеВыполнено Тогда
		ЕстьСсылки = ПолучитьИзВременногоХранилища(ФормаАдресХранилища);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
