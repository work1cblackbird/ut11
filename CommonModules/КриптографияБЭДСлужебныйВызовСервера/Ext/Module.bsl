
#Область СлужебныеПроцедурыИФункции

// Проверяет возможность использования сертификатов пользователя в облачном сервисе.
//
// Возвращаемое значение:
//  Булево - использование сертификатов пользователя в облачном сервисе возможно.
//
Функция ИспользованиеСертификатовОблачногоСервисаВозможно() Экспорт
	
	ИспользованиеВозможно = КриптографияБЭДСлужебный.ИспользованиеСертификатовОблачногоСервисаВозможно();
	
	Возврат ИспользованиеВозможно;
	
КонецФункции

Функция ДоступныеСертификаты(РезультатыПолученияОтпечатков, ОшибкаПолученияОтпечатков = "") Экспорт
	
	ВидОперации = НСтр("ru = 'Получение доступных сертификатов для электронного документооборота'");
	
	РезультатыПолученияОтпечатков = КриптографияБЭД.ПолучитьОтпечаткиСертификатов(ВидОперации, Неопределено,
		РезультатыПолученияОтпечатков);
	
	КриптографияБЭД.ЕстьОшибкаПолученияОтпечатков(РезультатыПолученияОтпечатков, ОшибкаПолученияОтпечатков);
	
	ОтборСертификатов = КриптографияБЭД.НовыйОтборСертификатов();
	ОтборСертификатов.Отпечатки = "&Отпечатки";
	ЗапросСертификатов = КриптографияБЭД.ЗапросДействующихСертификатов("Сертификаты", ОтборСертификатов);
	
	Запросы = Новый Массив;
	Запросы.Добавить(ЗапросСертификатов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Сертификаты.Ссылка
	|ИЗ
	|	Сертификаты КАК Сертификаты";
	ИтоговыйЗапрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, Запросы);
	
	ИтоговыйЗапрос.УстановитьПараметр("Отпечатки",
		КриптографияБЭД.ПолучитьВсеОтпечаткиСертификатов(РезультатыПолученияОтпечатков));
	РезультатЗапроса = ИтоговыйЗапрос.Выполнить();
	
	Сертификаты = Новый Массив;
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Сертификаты;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сертификаты.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Возврат Сертификаты;
	
КонецФункции

Функция ПолучитьДистрибутивCryptoProCSP(Параметры) Экспорт
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение дистрибутива CryptoPro CSP'");
	ПараметрыВыполнения.ДополнительныйРезультат = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("КриптографияБЭДСлужебный.ПолучитьДистрибутивCryptoProCSP",
		Параметры, ПараметрыВыполнения);
	
КонецФункции

Функция РезультатПолученияДистрибутиваКриптопровайдера(ДлительнаяОперация, ИдентификаторФормы) Экспорт
	
	Результат = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
	
	ДанныеДистрибутива = Новый Структура;
	Если Результат.ПараметрыДистрибутива <> Неопределено И Результат.ПараметрыДистрибутива.Свойство("Дистрибутив") Тогда
		ДанныеДистрибутива.Вставить("НомерДистрибутива", "");
		ДанныеДистрибутива.Вставить("Версия", Результат.ПараметрыДистрибутива.Версия);
		ДанныеДистрибутива.Вставить("КонтрольнаяСумма", Результат.ПараметрыДистрибутива.КонтрольнаяСумма);
		
		Если Результат.ПараметрыДистрибутива.Свойство("СерийныйНомер") Тогда
			ДанныеДистрибутива.Вставить("СерийныйНомер", Результат.ПараметрыДистрибутива.СерийныйНомер);
		КонецЕсли;
		
		ОписаниеФайлов = Новый Массив;
		Для каждого Файл Из Результат.ПараметрыДистрибутива.Дистрибутив Цикл
			ОписаниеФайлов.Добавить(Новый ОписаниеПередаваемогоФайла(Файл.Имя,
			ПоместитьВоВременноеХранилище(Файл.ДвоичныеДанные, ИдентификаторФормы)));
		КонецЦикла;
		
		ДанныеДистрибутива.Вставить("Дистрибутив", ОписаниеФайлов);
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ДанныеДистрибутива", ДанныеДистрибутива);
	СтруктураВозврата.Вставить("КонтекстДиагностики", Результат.КонтекстДиагностики);
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ОписанияПрограммЭлектроннойПодписиИШифрования() Экспорт
	
	Возврат КриптографияБЭД.ОписанияПрограммЭлектроннойПодписиИШифрования();
	
КонецФункции

#КонецОбласти