#Область ПрограммныйИнтерфейс 

#Область ВспомогательныеМетоды_ДоговорныйДокумент 

// Обработка нажатия на гиперссылку "СостояниеЭДО" в форме элемента справочника договора с контрагентом.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма учетного документа.
//  СтандартнаяОбработка - Булево - Признак стандартной обработки нажатия на гиперссылку (устанавливается в Ложь). 
//  ДанныеФайла - СправочникСсылка.ДоговорыКонтрагентовПрисоединенныеФайлы - ссылка на присоединенный файл договорного документа, отправляемый по ЭДО.
//
Процедура КонтроллерСостояниеЭДОНажатиеДоговорногоДокумента(Форма, СтандартнаяОбработка, ДанныеФайла = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;

	ПараметрыОбменаСКонтрагентами = Форма.ПараметрыОбменаСКонтрагентами;
	ДанныеСостоянияЭДО = ПараметрыОбменаСКонтрагентами.ДанныеСостоянияЭДОТекущие;
	
	Если Форма.ЕстьПравоОтправкиЭД И ФормаДоговорногоДокументаОткрыта(Форма.Объект.Ссылка) Тогда
		ОткрытьФорму(ИмяФормыИсходящегоДоговорногоДокумента(),,,Форма.Объект.Ссылка,,,); 
		Возврат;
	КонецЕсли;
	
	Если ДанныеСостоянияЭДО.СуществуетАктуальныйДокумент Тогда
		
		ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокументОбъектаУчета(Форма.Объект.Ссылка);
		
	ИначеЕсли Не ДанныеСостоянияЭДО.ЕстьПравоНастройки И ДанныеСостоянияЭДО.НеобходимаНастройка Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходима настройка электронного документооборота. Обратитесь к администратору.'"))
	Иначе
		Если Форма.Модифицированность Тогда
			Если ДанныеСостоянияЭДО.НеобходимаНастройка Тогда
				ТекстВопроса = НСтр("ru = 'Для того чтобы настроить ЭДО, нужно записать документ. Записать?'");
			Иначе
				ТекстВопроса = НСтр("ru = 'Для того чтобы начать ЭДО, нужно записать документ. Записать?'");
			КонецЕсли;
				
			ПараметрыОповещения = Новый Структура;
			ПараметрыОповещения.Вставить("Форма", Форма);  
			ПараметрыОповещения.Вставить("ДанныеФайла", ДанныеФайла);
			Оповещение = Новый ОписаниеОповещения("КонтроллерСостояниеЭДОНажатиеДоговорногоДокументаПродолжить", 
				ЭтотОбъект, ПараметрыОповещения);
			
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, ,
				КодВозвратаДиалога.Отмена, НСтр("ru = 'Необходимо записать документ'"));
		
		Иначе
			ОткрытьЭлектронныйДокументДоговорныйДокумент(Форма.Объект.Ссылка, ДанныеФайла);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

// Показывает пользователю форму справки для формата Договорного документа PDF/A3 или XML.
// 
// Параметры:
//  Результат - Неопределено - в случае, когда файл PDF, для отправки договорного документа по ЭДО, не выбран. 
//			  - СправочникСсылка.ДоговорыКонтрагентовПрисоединенныеФайлы - ссылка на присоединенный файл к договору с контрагентом.
//			  - Структура - структура с данными файла, в случае, когда файл ещё не присоединен к договору с контрагентом.
//	ПараметрыФормы - СправочникСсылка.ДоговорыКонтрагентов - ссылка на договор с контрагентом, отправляемый по ЭДО.
//				   - Структура - параметры для открытия формы ЭД.
//	ОбработчикЗавершения - ОписаниеОповещения - оповещение вызываемое дальнейшее действие для отправки файла через БЭД.
//
Процедура ПоказатьСправкуПоФорматуДоговорногоДокумента(Результат, ПараметрыФормы, ОбработчикЗавершения) Экспорт

	Если Не Результат = Неопределено Тогда  
		
		ПараметрыФормыСправки = Новый Структура;

		Если ТипЗнч(ПараметрыФормы) = Тип("Структура") И ПараметрыФормы.Свойство("РежимСправкаПоШаблону") Тогда
			ПараметрыФормыЭД = ПараметрыФормы.ПараметрыФормыЭД;
			ПараметрыФормыСправки.Вставить("РежимСправкаПоШаблону", ПараметрыФормы.РежимСправкаПоШаблону);
			ПараметрыФормыСправки.Вставить("ИмяШаблона", ПараметрыФормы.ИмяШаблона);
		Иначе
			ПараметрыФормыЭД = ПараметрыФормы; 
		КонецЕсли;
		
		ПараметрыФормыСправки.Вставить("ПараметрыФормыЭД",  ПараметрыФормыЭД);
		ПараметрыФормыСправки.Вставить("ВыбранныйФайл",  Результат);  
		
		Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("ФайлСсылка") Тогда
			ПараметрыФормыСправки.Вставить("ВыбранныйФайл",  Результат.ФайлСсылка);
			Оповестить("ДобавленФайлКЭДОДоговорныйДокумент", Результат.ФайлСсылка, 
			?(ТипЗнч(ПараметрыФормыЭД) = Тип("Структура") , ПараметрыФормыЭД.ОбъектУчета, ПараметрыФормыЭД));
		КонецЕсли;
		
		Если ТипЗнч(ПараметрыФормыЭД) = Тип("Структура") И ПараметрыФормыЭД.Свойство("Формат") Тогда
			Формат = ПараметрыФормыЭД.Формат;
		Иначе
		Формат = ПараметрыФормыЭД.ПросмотрПодготовленныхДанных.НастройкиФормирования.НастройкиОтправки.Формат;
		КонецЕсли;
		
		Если Формат = "ON_SODSD_1_999_02_01_01_01" Тогда	
					
			Пар = Новый Структура;
			Пар.Вставить("ИдентификаторОсновногоФайла", ПараметрыФормыЭД.ИдентификаторОсновногоФайла);			
			Пар.Вставить("ОповещениеОЗавершении",ОбработчикЗавершения);
			Пар.Вставить("ОбъектУчета", ПараметрыФормыЭД.Данные);
			ВыборВариантаФайлаЗавершен(Результат, Пар);

		Иначе
			ОткрытьФорму("Обработка.ФорматДоговорнойДокумент101XML.Форма.ФормаСправкиПДФ_А3ДляЭД", ПараметрыФормыСправки,,,,,ОбработчикЗавершения);
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

// Подготавливает данные после выбора файла PDF, и открывает форму исходящего ЭД Договорного документа.
//
// Параметры:
//  ДанныеФайла - Неопределено - в случае, когда файл PDF, для отправки договорного документа по ЭДО, не выбран. 
//				- СправочникСсылка.ДоговорыКонтрагентовПрисоединенныеФайлы - ссылка на присоединенный файл к договору с контрагентом. 
//				- Структура - структура с данными файла, в случае, когда файл ещё не присоединен к договору с контрагентом.
//	ПараметрыФормы - Структура - структура с информацией для подготовки данных открытия формы исходящего ЭД.				
//
Процедура ОткрытьДоговорнойДокумент101ИзФайла(ДанныеФайла, ПараметрыФормы) Экспорт
	
	Если ДанныеФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеФайлаДляПомещения = Новый Структура();
	Если ТипЗнч(ДанныеФайла) <> Тип("Структура") Тогда
		ФайлСсылка = ДанныеФайла;
		ДанныеФайлаПоСсылке = РаботаСФайламиКлиент.ДанныеФайла(ДанныеФайла); 	
		ДанныеФайлаДляПомещения.Вставить("ИмяФайла", ДанныеФайлаПоСсылке.ИмяФайла);  
		ДанныеФайлаДляПомещения.Вставить("Хранение", ДанныеФайлаПоСсылке.СсылкаНаДвоичныеДанныеФайла);
	ИначеЕсли ТипЗнч(ДанныеФайла) = Тип("Структура") Тогда
		ПараметрыФайла = РаботаСФайламиСлужебныйКлиентСервер.ПараметрыДобавленияФайла();
		ПараметрыФайла.ВладелецФайлов = ПараметрыФормы.ОбъектУчета;
		ПараметрыФайла.Автор = ПользователиКлиент.ТекущийПользователь();

		ПараметрыФайла.ИмяБезРасширения = ДанныеФайла.ИмяФайла;
		Адрес = ПоместитьВоВременноеХранилище(ДанныеФайла.ДвоичныеДанные);
			
		ФайлСсылка = РаботаСФайламиСлужебныйВызовСервера.ДобавитьФайл(ПараметрыФайла, Адрес);
		ДанныеФайлаПоСсылке = РаботаСФайламиКлиент.ДанныеФайла(ФайлСсылка); 	
		ДанныеФайлаДляПомещения.Вставить("ИмяФайла", ДанныеФайлаПоСсылке.ИмяФайла);  
		ДанныеФайлаДляПомещения.Вставить("Хранение", ДанныеФайлаПоСсылке.СсылкаНаДвоичныеДанныеФайла);
	КонецЕсли;
		
	ФайлДоговораСоответствие = Новый Соответствие;   
	ФайлДоговораСоответствие.Вставить("ИмяФайла", ДанныеФайлаПоСсылке.ИмяФайла);
	ФайлДоговораСоответствие.Вставить("ДвоичныеДанные", ПолучитьИзВременногоХранилища(ДанныеФайлаПоСсылке.СсылкаНаДвоичныеДанныеФайла));

	ПараметрыФормы.Вставить("ФайлДоговора", ФайлДоговораСоответствие); 
	ПараметрыФормы.Вставить("ДанныеФайла", ФайлСсылка);
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ОткрытьДоговорнойДокумент101ИзФайлаЗавершение", ЭтотОбъект,
				ПараметрыФормы);
	
	ОткрытьФорму(ИмяФормыИсходящегоДоговорногоДокумента(), ПараметрыФормы,,ПараметрыФормы.ОбъектУчета,,,ОбработчикЗавершения);
	
	Оповестить("ДобавленФайлКЭДОДоговорныйДокумент", ФайлСсылка, ПараметрыФормы.ОбъектУчета);
	
КонецПроцедуры

// Открывает пользователю форму выбора присоединенного файла для Договорного документа PDF/A3.
// 
// Параметры:
//  ПараметрыФормыЭД - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО - ссылка на объект ИБ, электронный документ которого надо отправить.
//					 - Структура - структура с ссылкой на объект ИБ, электронный документ которого надо отправить.
//	ОбработчикЗавершения - ОписаниеОповещения - оповещение вызываемое дальнейшее действие для отправки файла через БЭД.
//
Процедура ОткрытьФормуВыбораПрисоединенногоФайлаДоговорногоДокумента(ПараметрыФормыЭД, ОбработчикЗавершения) Экспорт	

	ПараметрыФормы = Новый Структура;
	
	Если ТипЗнч(ПараметрыФормыЭД) = Тип("Структура") Тогда  
		ПараметрыФормы.Вставить("ВладелецФайла", ПараметрыФормыЭД.ОбъектУчета) 
	Иначе	
		ПараметрыФормы.Вставить("ВладелецФайла", ПараметрыФормыЭД);
	КонецЕсли;
	 
	ПараметрыФормы.Вставить("РежимВыбора", Истина); 
	
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы", ПараметрыФормы,,,,,ОбработчикЗавершения);
	
КонецПроцедуры

// Подготавливает данные после выбора файла PDF, и совершает подпись и отправку ЭД Договорного документа,
// в случае, без предпросмотра его исходящего документа.
//
// Параметры:
//  ДанныеФайла - Неопределено - в случае, когда файл PDF, для отправки договорного документа по ЭДО, не выбран. 
//				- СправочникСсылка.ДоговорыКонтрагентовПрисоединенныеФайлы - ссылка на присоединенный файл к договору с контрагентом. 
//				- Структура - структура с данными файла, в случае, когда файл ещё не присоединен к договору с контрагентом.
// 	ПараметрКоманды - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО - ссылка на объект ИБ, электронный документ которого надо отправить.			
//
Процедура ЗапроситьФайлДляДоговорногоДокумента101Завершение(ДанныеФайла, ПараметрКоманды) Экспорт

	Если ДанныеФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеФайла) <> Тип("Структура") Тогда
		ФайлСсылка = ДанныеФайла;
		ДанныеФайлаПоСсылке = РаботаСФайламиКлиент.ДанныеФайла(ДанныеФайла); 	
		Хранение = ДанныеФайлаПоСсылке.СсылкаНаДвоичныеДанныеФайла;
	ИначеЕсли ТипЗнч(ДанныеФайла) = Тип("Структура") Тогда
		ПараметрыФайла = РаботаСФайламиСлужебныйКлиентСервер.ПараметрыДобавленияФайла();
		ПараметрыФайла.ВладелецФайлов = ПараметрКоманды;
		ПараметрыФайла.Автор = ПользователиКлиент.ТекущийПользователь();

		ПараметрыФайла.ИмяБезРасширения = ДанныеФайла.ИмяФайла;
		Адрес = ПоместитьВоВременноеХранилище(ДанныеФайла.ДвоичныеДанные);
					
		ФайлСсылка = РаботаСФайламиСлужебныйВызовСервера.ДобавитьФайл(ПараметрыФайла, Адрес);
		Оповестить("ДобавленФайлКЭДОДоговорныйДокумент", ФайлСсылка, ПараметрКоманды);
		ДанныеФайлаПоСсылке = РаботаСФайламиКлиент.ДанныеФайла(ФайлСсылка); 	
		Хранение = ДанныеФайлаПоСсылке.СсылкаНаДвоичныеДанныеФайла;
	КонецЕсли;
	
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(Хранение);

	ОписаниеФайла = Новый Структура;
	ОписаниеФайла.Вставить("ИмяФайла", ДанныеФайлаПоСсылке.ИмяФайла);
	ОписаниеФайла.Вставить("ДвоичныеДанные", ДвоичныеДанныеФайла);

	Соответствие = Новый Соответствие;
	Соответствие.Вставить(ПараметрКоманды, ОписаниеФайла);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДополнительныеФайлы", Соответствие);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ПараметрКоманды);
	
	ОбменСКонтрагентамиУТВызовСервера.ОбновитьСостояниеОтправленногоФайлаДоговорногоДокумента(ФайлСсылка, Истина);		
	
	ИнтерфейсДокументовЭДОКлиент.СформироватьПодписатьОтправитьЭДЗавершить(МассивПараметров, ДополнительныеПараметры);

КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

#Область ВспомогательныеМетоды_ДоговорныйДокумент 

// Открывает форму просмотра электронного документа по указанному объекту учета.
// 
// Параметры:
//  ОбъектУчета - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО - параметры объекта учета.
//  ДанныеФайла - Неопределено - в случае, когда файл PDF, для отправки договорного документа по ЭДО, не выбран. 
//				- СправочникСсылка.ДоговорыКонтрагентовПрисоединенныеФайлы - ссылка на присоединенный файл к договору с контрагентом. 
//				- Структура - структура с данными файла, в случае, когда файл ещё не присоединен к договору с контрагентом. 
//  ПараметрыОткрытия - см. ИнтерфейсДокументовЭДОКлиент.НовыеПараметрыОткрытияЭлектронногоДокумента.
//
Процедура ОткрытьЭлектронныйДокументДоговорныйДокумент(ОбъектУчета, ДанныеФайла, ПараметрыОткрытия = Неопределено) Экспорт
	
	Если ПараметрыОткрытия = Неопределено Тогда
		ПараметрыОткрытия = ИнтерфейсДокументовЭДОКлиент.НовыеПараметрыОткрытияЭлектронногоДокумента();
	КонецЕсли;
	
	ПараметрыПросмотра = ИнтерфейсДокументовЭДОВызовСервера.ПараметрыПросмотраЭлектронногоДокументаПоОбъектуУчета(
		ОбъектУчета, ПараметрыОткрытия);
		
	ПараметрыПросмотра.Вставить("ДанныеФайла", ДанныеФайла);
		
	ОткрытьЭлектронныйДокументДоговорныйДокументПоПараметрамПросмотра(ПараметрыПросмотра);
	
КонецПроцедуры

// Открывает электронный документ по параметрам просмотра.
// 
// Параметры:
//  ПараметрыПросмотра - См. ИнтерфейсДокументовЭДОВызовСервера.ПараметрыПросмотраЭлектронногоДокументаПоОбъектуУчета.
//
Процедура ОткрытьЭлектронныйДокументДоговорныйДокументПоПараметрамПросмотра(ПараметрыПросмотра)
	
	Если ЗначениеЗаполнено(ПараметрыПросмотра.ЭлектронныйДокумент) Тогда
		ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокумент(ПараметрыПросмотра.ЭлектронныйДокумент);
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПросмотра.ПросмотрСтатусовЭлектронныхДокументов <> Неопределено Тогда
		ОткрытьФорму("Обработка.ИнтерфейсДокументовЭДО.Форма.СтатусыЭлектронныхДокументов",
			ПараметрыПросмотра.ПросмотрСтатусовЭлектронныхДокументов,,,,,,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	КонецЕсли;
	
	ПредварительныйПросмотр = ПараметрыПросмотра.ПредварительныйПросмотр;
	Если ПредварительныйПросмотр = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Электронный документ отсутствует.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОбъектУчета = ПараметрыПросмотра.ОбъектУчета;
	
	// Пропускаем часть проверки на ПредварительныйПросмотр.РезультатПроверкиГотовности.Успех
	// и на ПредварительныйПросмотр.РезультатПодготовкиВложения.Ошибка
	// т.к. в данном случае вложения  и не успеха быть не может		
	Если Не ПредварительныйПросмотр.РезультатПоискаНастроек.Успех Тогда
		ПараметрыПоиска = ПредварительныйПросмотр.РезультатПоискаНастроек.ПараметрыПоиска;

		Оповещение = Новый ОписаниеОповещения("ОткрытьЭлектронныйДокументПослеСозданияНастроек", ЭтотОбъект, ПараметрыПоиска);
		// Пропускаем часть проверки на ПараметрыПоиска.Направление =  ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Внутренний") 
		// и на ПараметрыПоиска.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Интеркампани") 
		// т.к. в данном случае ЭД не может быть внутренним и интеркампани
		Если ПредварительныйПросмотр.РезультатПоискаНастроек.ФормированиеЗапрещено Тогда
			Параметры = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыПроблемПриОбработкеДокументов();
			ОписаниеОбъектаУчета = ПредварительныйПросмотр.РезультатПоискаНастроек.ОписаниеОбъектаУчета;
			СтруктураОшибки = Новый Структура("ОписаниеОбъектаУчета, ФормированиеЗапрещено", ОписаниеОбъектаУчета, Истина);
			ОшибкиФормирования = Новый Массив;
			ОшибкиФормирования.Добавить(СтруктураОшибки);
				
			Параметры.АдресСведенийОбОшибках = ПоместитьВоВременноеХранилище(ОшибкиФормирования);
			Параметры.СписокДокументовКОтправке.Добавить(ОбъектУчета);
				
			ПараметрыОповещения = Новый Структура("ОбъектУчета, ДанныеФайла", ОбъектУчета, ПараметрыПросмотра.ДанныеФайла); 
			Оповещение = Новый ОписаниеОповещения("ОткрытьЭлектронныйДокументПослеРедактированияНастроек",
				ЭтотОбъект, ПараметрыОповещения);
			ИнтерфейсДокументовЭДОКлиент.ПоказатьПроблемыПриОбработкеДокументов(Оповещение, Параметры); 
		Иначе
			Если ПараметрыПоиска.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Входящий")
				И ПараметрыПоиска.КлючНастроекОтправки = Неопределено Тогда 
					ТекстСообщения = НСтр("ru = 'Электронный документ отсутствует.'");
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
					Возврат;
			КонецЕсли;
			НастройкиЭДОКлиент.НастроитьОбменСКонтрагентом(ПараметрыПоиска.КлючНастроекОтправки, Оповещение);
		КонецЕсли;
		Возврат;
	Иначе
		ПараметрыПоиска = ПредварительныйПросмотр.РезультатПоискаНастроек.ПараметрыПоиска;
		Если ПараметрыПоиска.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Исходящий") Тогда
			Настройка = ПредварительныйПросмотр.РезультатПоискаНастроек.Настройки.НастройкиОтправки;
			
			Если Не Настройка.ГотовностьКОбмену 
				И Настройка.СпособОбмена <> ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезКаталог")
				И Настройка.СпособОбмена <> ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезFTP")
				И Настройка.СпособОбмена <> ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезЭлектроннуюПочту") Тогда
				
				ПараметрыПоиска = ПредварительныйПросмотр.РезультатПоискаНастроек.ПараметрыПоиска;
				ПараметрыПоиска.Вставить("ДанныеФайла",ПараметрыПросмотра.ДанныеФайла); 
	
				Оповещение = Новый ОписаниеОповещения("ОткрытьЭлектронныйДокументПослеСозданияНастроек", ЭтотОбъект, ПараметрыПоиска);
				НастройкиЭДОКлиент.НастроитьОбменСКонтрагентом(ПараметрыПоиска.КлючНастроекОтправки, Оповещение);
				
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;

	ОбработатьРезультатПодготовкиДанныхДляПросмотраДоговорногоДокумента(ПредварительныйПросмотр.РезультатПодготовкиДанных,
		ОбъектУчета, ПредварительныйПросмотр.РезультатПоискаНастроек.Настройки, ПараметрыПросмотра.ДанныеФайла); 
		
КонецПроцедуры

Процедура ОткрытьЭлектронныйДокументПослеРедактированияНастроек(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьЭлектронныйДокументДоговорныйДокумент(Параметры.ОбъектУчета, Параметры.ДанныеФайла);
	
КонецПроцедуры

Процедура ОткрытьЭлектронныйДокументПослеСозданияНастроек(НастройкиОтправки, Параметры) Экспорт
	
	Если Не ЗначениеЗаполнено(НастройкиОтправки) Тогда
		Возврат;
	КонецЕсли;	
	
	НастройкиФормирования = ИнтерфейсДокументовЭДОКлиентСервер.НовыеНастройкиФормированияЭлектронногоДокументаОбъектаУчета();
	НастройкиФормирования.Направление = Параметры.Направление;
	
	НастройкиФормирования.НастройкиОтправки = НастройкиОтправки;
	
	ПараметрыОткрытия = ИнтерфейсДокументовЭДОКлиент.НовыеПараметрыОткрытияЭлектронногоДокумента();
	
	РезультатПодготовкиДанных = ИнтерфейсДокументовЭДОВызовСервера.ПодготовитьДанныеДляПросмотра(
		Параметры.ОбъектУчета, НастройкиФормирования, ПараметрыОткрытия);
	
	ОбработатьРезультатПодготовкиДанныхДляПросмотраДоговорногоДокумента(РезультатПодготовкиДанных, Параметры.ОбъектУчета, НастройкиФормирования, Параметры.ДанныеФайла);
	
КонецПроцедуры

Процедура ОбработатьРезультатПодготовкиДанныхДляПросмотраДоговорногоДокумента(РезультатПодготовкиДанных, ОбъектУчета, НастройкиФормирования, ДанныеФайла)
	
	Если РезультатПодготовкиДанных.Ошибка Тогда
		Контекст = Новый Структура("НастройкиФормирования", НастройкиФормирования);
		Контекст.Вставить("ДанныеФайла", ДанныеФайла);
		Оповещение = Новый ОписаниеОповещения("ОткрытьЭлектронныйДокументПослеОбработкиПроблемПриФормировании",
			ИнтерфейсДокументовЭДОКлиент, Контекст);
		ОшибкиФормирования = ПолучитьИзВременногоХранилища(РезультатПодготовкиДанных.АдресСведенийОбОшибках);
		УдалитьИзВременногоХранилища(РезультатПодготовкиДанных.АдресСведенийОбОшибках);
		НачатьОбработкуОшибокФормированияДоговорногоДокумента(Оповещение, ОшибкиФормирования, , ДанныеФайла);
		Возврат;
		
	ИначеЕсли РезультатПодготовкиДанных.ДлительнаяОперация <> Неопределено Тогда
		Контекст = Новый Структура("ОбъектУчета, НастройкиФормирования", ОбъектУчета, НастройкиФормирования);
		Оповещение = Новый ОписаниеОповещения(
			"ОбработатьРезультатПодготовкиДанныхДляПросмотраПослеДлительнойОперации", ИнтерфейсДокументовЭДОКлиент, Контекст);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(РезультатПодготовкиДанных.ДлительнаяОперация, Оповещение);
		Возврат;
		
	ИначеЕсли Не ЗначениеЗаполнено(РезультатПодготовкиДанных.АдресДанныхПредварительногоПросмотра) Тогда
		ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(РезультатПодготовкиДанных.КонтекстДиагностики);
		Возврат;
	КонецЕсли;

КонецПроцедуры 

Процедура НачатьОбработкуОшибокФормированияДоговорногоДокумента(ОповещениеОЗавершении, ОшибкиФормирования, ДополнительныеПараметры = Неопределено, ДанныеФайла) Экспорт
	
	Если ОшибкиФормирования.Количество() = 1
		И ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			ОшибкиФормирования[0], "ФормированиеНедоступноДляГруппы", Ложь) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Данная функция недоступна для группы.'"));
		Возврат;
	КонецЕсли;
	
	ОшибкаНастройкиСОднимКлючем = Ложь;
	ТекущееОписание = ОшибкиФормирования[0].ОписаниеОбъектаУчета; 
	ОшибкаНастройкиСОднимКлючем = ОшибкиФормирования[0].ОтсутствуютНастройки;
	
	Если ОшибкаНастройкиСОднимКлючем Тогда
		Для Каждого Ошибка Из ОшибкиФормирования Цикл
			Описание = Ошибка.ОписаниеОбъектаУчета;
			Если ТекущееОписание.Организация <> Описание.Организация
				Или ТекущееОписание.Контрагент <> Описание.Контрагент
				Или ТекущееОписание.ТипДокумента <> Описание.ТипДокумента
				Или ТекущееОписание.Направление <> Описание.Направление 
				Или Не Ошибка.ОтсутствуютНастройки Тогда
			
				ОшибкаНастройкиСОднимКлючем = Ложь;
			КонецЕсли;	 
		КонецЦикла;
	КонецЕсли;
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	Контекст.Вставить("ОшибкаНастройкиСОднимКлючем", ОшибкаНастройкиСОднимКлючем);
	Оповещение = Новый ОписаниеОповещения("ПослеОбработкиОшибокФормирования", ИнтерфейсДокументовЭДОКлиент, Контекст);
	
	Если ОшибкаНастройкиСОднимКлючем Тогда
		
		Если ТекущееОписание.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Внутренний") Тогда
			
			ОписаниеВидаВнутреннегоДокумента = НастройкиЭДОКлиент.НовоеОписаниеВидаВнутреннегоДокумента();
			ОписаниеВидаВнутреннегоДокумента.ОбъектУчета = ТекущееОписание.ОбъектУчета;			
		
			НастройкиЭДОКлиент.НастроитьВнутреннийЭлектронныйДокументооборот(ТекущееОписание.Организация,
				ОписаниеВидаВнутреннегоДокумента, Оповещение);
		ИначеЕсли ТекущееОписание.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Интеркампани") Тогда
			ПараметрыОткрытия = НастройкиОтправкиЭДОКлиент.НовыеПараметрыФормыНастроекИнтеркампани();
			ПараметрыОткрытия.Отправитель = ТекущееОписание.Организация;
			ПараметрыОткрытия.Получатель = ТекущееОписание.Контрагент;
			НастройкиОтправкиЭДОКлиент.ОткрытьНастройкуИнтеркампани(ПараметрыОткрытия);	
		Иначе
			КлючНастроек = ИнтерфейсДокументовЭДОВызовСервера.КлючНастроекОтправкиОбъектаУчета(ТекущееОписание);
			НастройкиЭДОКлиент.НастроитьОбменСКонтрагентом(КлючНастроек, Оповещение);
		КонецЕсли;
		
	Иначе
		
		ПараметрыОбработки = ?(ТипЗнч(ДополнительныеПараметры) = Тип("Структура"),
			ДополнительныеПараметры, Новый Структура);
		
		Параметры = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыПроблемПриОбработкеДокументов();
		Параметры.АдресСведенийОбОшибках = ПоместитьВоВременноеХранилище(ОшибкиФормирования);
		
		Если ПараметрыОбработки.Свойство("ОбъектыУчета") Тогда
			Параметры.СписокДокументовКОтправке = ПараметрыОбработки.ОбъектыУчета;
		КонецЕсли;
		
		Если ПараметрыОбработки.Свойство("ИсправляемыйДокумент") Тогда
			Параметры.ИсправляемыйДокумент = ПараметрыОбработки.ИсправляемыйДокумент;
		КонецЕсли;
		
		Если ПараметрыОбработки.Свойство("ПараметрыВыполненияДействийПоЭДО")
			И ПараметрыОбработки.ПараметрыВыполненияДействийПоЭДО.НаборДействий.Получить(ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Подписать")) = Истина Тогда
			Параметры.РежимПодписатьОтправить = Истина;
		КонецЕсли;
		
		Если ОшибкиФормирования[0].Свойство("ОшибкаФормированияВПрикладнойЧасти") 
			И ОшибкиФормирования[0].ОшибкаФормированияВПрикладнойЧасти <> Неопределено Тогда  
			Параметры.Вставить("ОткрытьФормуРучногоФормированияОтветногоТитула", Истина);
		КонецЕсли;
		
		Если ОшибкиФормирования.Количество() = 1
			И ОшибкиФормирования[0].ОтсутствуетФайлДоговорногоДокумента <> Неопределено Тогда
			ОбъектУчета = ОшибкиФормирования[0].ОписаниеОбъектаУчета.ОбъектУчета;
			ПараметрыВыполненияДействийПоЭДО = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
				ПараметрыОбработки, "ПараметрыВыполненияДействийПоЭДО");
			Если Не ЗначениеЗаполнено(ПараметрыВыполненияДействийПоЭДО) Тогда
				ПараметрыВыполненияДействийПоЭДО = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();
				ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ОбъектыУчета.Добавить(ОбъектУчета);
			КонецЕсли;
			Контекст = Новый Структура("ОповещениеОЗавершении, ПараметрыВыполненияДействийПоЭДО",
				Оповещение, ПараметрыВыполненияДействийПоЭДО);
			ОповещениеПослеПолученияФайла = Новый ОписаниеОповещения(
				"ЗавершитьОбработкуОшибокФормированияПослеПолученияФайлаДоговорногоДокумента", ИнтерфейсДокументовЭДОКлиент, Контекст);
			ПараметрыВыбораФайла = ОшибкиФормирования[0].ОтсутствуетФайлДоговорногоДокумента;
			ПолучитьФайлДоговорногоДокумента(ОповещениеПослеПолученияФайла, ОбъектУчета, ПараметрыВыбораФайла.Формат,
				ПараметрыВыбораФайла.ИдентификаторОсновногоФайла, ДанныеФайла);
			Возврат;
		КонецЕсли;
		
		Если ПараметрыОбработки.Свойство("ПараметрыВыполненияДействийПоЭДО") Тогда
			ИнтерфейсДокументовЭДОКлиент.ПоказатьПроблемыПриОбработкеДокументов(Оповещение, Параметры, ПараметрыОбработки.ПараметрыВыполненияДействийПоЭДО);
		Иначе
			ИнтерфейсДокументовЭДОКлиент.ПоказатьПроблемыПриОбработкеДокументов(Оповещение, Параметры);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьДоговорнойДокумент101ИзФайлаЗавершение(ПомещенныйФайл, ПараметрыФормы) Экспорт
	
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(ПараметрыФормы.ОбъектУчета);
	
	Если ДанныеСостоянияЭДО.СуществуетАктуальныйДокумент = Истина Тогда 		
		ОбменСКонтрагентамиУТВызовСервера.ОбновитьСостояниеОтправленногоФайлаДоговорногоДокумента(ПараметрыФормы.ДанныеФайла, Истина);		
	КонецЕсли;

КонецПроцедуры

// Показывает пользователю выбор файла для Договорного документа PDF/A3.
// 
// Параметры:
//  ПараметрыФормыЭД - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО - ссылка на объект ИБ, электронный документ которого надо отправить.
//					 - Структура - структура с ссылкой на объект ИБ, электронный документ которого надо отправить.
//
Процедура ЗапроситьФайлПДФ_А3(ПараметрыФормыЭД) Экспорт

	Ссылка = ПараметрыФормыЭД.Данные;
	Если ФормаДоговорногоДокументаОткрыта(Ссылка) Тогда
		ОткрытьФорму(ИмяФормыИсходящегоДоговорногоДокумента(),,,Ссылка,,,); 
		Возврат;
	КонецЕсли;

	ПараметрыФормы = Новый Структура;	
	ПараметрыФормыЭДБезОбработчиковОповещений = Новый Структура;
	ПараметрыФормыЭДБезОбработчиковОповещений.Вставить("ОбъектУчета", Ссылка);
	ПараметрыФормыЭДБезОбработчиковОповещений.Вставить("Формат", ПараметрыФормыЭД.Формат);	
	
	ПараметрыФормы.Вставить("ПараметрыФормыЭД",  ПараметрыФормыЭДБезОбработчиковОповещений);	
	ОповещениеОЗавершенииВыбораФайла = Новый ОписаниеОповещения("ВыборФайлаПДФ_А3ДляЭДЗавершен", ЭтотОбъект, ПараметрыФормыЭД);
	
	ОткрытьФорму("Обработка.ФорматДоговорнойДокумент101XML.Форма.ФормаВыбораФайлаПДФ_А3ДляЭД", ПараметрыФормы, , , , ,
		ОповещениеОЗавершенииВыбораФайла);

	
КонецПроцедуры

// Описание оповещения для процедуры КонтроллерСостояниеЭДОНажатие
//
// Параметры:
//  Результат - КодВозвратаДиалога.ОК, КодВозвратаДиалога.Отмена - результат диалога с пользователем.
//  Параметры - Структура - дополнительные параметры.
//    * Форма - ФормаКлиентскогоПриложения - Форма учетного документа, из которого вызван диалог.
//
Процедура КонтроллерСостояниеЭДОНажатиеДоговорногоДокументаПродолжить(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если Результат = КодВозвратаДиалога.ОК Тогда
			Параметры.Форма.Записать();
			ОткрытьЭлектронныйДокументДоговорныйДокумент(Параметры.Форма.Объект.Ссылка, Параметры.ДанныеФайла);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Описание оповещения при выборе файла PDF.
//
// Параметры:
//  ДанныеВыбора - Неопределено - в случае, когда файл PDF, для отправки договорного документа по ЭДО, не выбран. 
//				 - СправочникСсылка.ДоговорыКонтрагентовПрисоединенныеФайлы - ссылка на присоединенный файл к договору с контрагентом. 
//				 - Структура - структура с данными файла, в случае, когда файл ещё не присоединен к договору с контрагентом.
//  Параметры - Структура:
//  * ИдентификаторОсновногоФайла - Строка - идентификатор создаваемого файла.
//  * ОповещениеОЗавершении - ОписаниеОповещения - оповещение вызываемое для отправки файла через БЭД.
//  * ОбъектУчета - СправочникСсылка.ДоговорыКонтрагентов - ссылка на отправляемый договор.
//
Процедура ВыборФайлаПДФ_А3ДляЭДЗавершен(ДанныеВыбора, Параметры) Экспорт
	
	Если ДанныеВыбора <> Неопределено Тогда
				
		Если ДанныеВыбора.Свойство("ФайлСсылка") Тогда   
			Ссылка = ДанныеВыбора.ФайлСсылка;
			ДанныеФайлаПоСсылке = РаботаСФайламиКлиент.ДанныеФайла(ДанныеВыбора.ФайлСсылка);
			ДанныеФайлаДляПомещения = Новый Структура;
			ДанныеФайлаДляПомещения.Вставить("Имя", ДанныеФайлаПоСсылке.ИмяФайла);  
			ДанныеФайлаДляПомещения.Вставить("Хранение", ДанныеФайлаПоСсылке.СсылкаНаДвоичныеДанныеФайла);  
		ИначеЕсли ДанныеВыбора.Свойство("РезультатВыбора") И ТипЗнч(ДанныеВыбора.РезультатВыбора) = Тип("Структура")
			И ДанныеВыбора.РезультатВыбора.Свойство("ФайлСсылка") Тогда  
			Ссылка = ДанныеВыбора.РезультатВыбора.ФайлСсылка;
			ДанныеФайлаПоСсылке = РаботаСФайламиКлиент.ДанныеФайла(ДанныеВыбора.РезультатВыбора.ФайлСсылка);
			ДанныеФайлаДляПомещения = Новый Структура;
			ДанныеФайлаДляПомещения.Вставить("Имя", ДанныеФайлаПоСсылке.ИмяФайла);  
			ДанныеФайлаДляПомещения.Вставить("Хранение", ДанныеФайлаПоСсылке.СсылкаНаДвоичныеДанныеФайла);			
		Иначе
			ДанныеФайла = ДанныеВыбора.РезультатВыбора;
			ДанныеФайлаПоСсылке = РаботаСФайламиКлиент.ДанныеФайла(ДанныеФайла); 
			Ссылка = ДанныеФайла;
			ДанныеФайлаДляПомещения = Новый Структура;
			ДанныеФайлаДляПомещения.Вставить("Имя", ДанныеФайлаПоСсылке.ИмяФайла);  
			ДанныеФайлаДляПомещения.Вставить("Хранение", ДанныеФайлаПоСсылке.СсылкаНаДвоичныеДанныеФайла);  

		КонецЕсли;
	
		Если Параметры.Свойство("ПараметрыВыполненияДействийПоЭДО") Тогда 
			ОбменСКонтрагентамиУТВызовСервера.ОбновитьСостояниеОтправленногоФайлаДоговорногоДокумента(Ссылка, Истина);		
		КонецЕсли;
	
		ВыполнитьОбработкуОповещения(Параметры.ОбработчикЗавершения, ДанныеФайлаДляПомещения);

	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборФайлаПДФ_А3ДляОткрытияНовогоЭДЗавершен(ДанныеВыбора, Параметры) Экспорт
	
	Если ДанныеВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьДоговорнойДокумент101ИзФайла(Параметры.ДанныеФайла, Параметры.ПараметрыФормы);
	
КонецПроцедуры

Процедура ПолучитьФайлДоговорногоДокумента(ОповещениеОЗавершении, ОбъектУчета, Формат, ИдентификаторОсновногоФайла = "", ДанныеФайла)
	
	Если ИнтерфейсДокументовЭДОКлиентСервер.ЭтоФорматДоговорногоДокументаПДФ_А3(Формат) Тогда
				
		ПараметрыФормыЭДБезОбработчиковОповещений = Новый Структура;
		ПараметрыФормыЭДБезОбработчиковОповещений.Вставить("ОбъектУчета", ОбъектУчета);
		ПараметрыФормыЭДБезОбработчиковОповещений.Вставить("Формат", Формат);

		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ДанныеФайла",ДанныеФайла);
		ДопПараметры.Вставить("ОповещениеОЗавершении",ОповещениеОЗавершении);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПоказСправкиПоФорматуЗавершение", ЭтотОбъект, ДопПараметры);
		ИнтерфейсДокументовЭДОУТКлиент.ПоказатьСправкуПоФорматуДоговорногоДокумента(ДанныеФайла, ПараметрыФормыЭДБезОбработчиковОповещений, ОписаниеОповещения);

	ИначеЕсли ИнтерфейсДокументовЭДОКлиентСервер.ЭтоФорматДоговорногоДокументаXML(Формат) Тогда
		
		ИдентификаторОсновногоФайла = ?(ЗначениеЗаполнено(ИдентификаторОсновногоФайла), ИдентификаторОсновногоФайла,
			Строка(Новый УникальныйИдентификатор()));
			
		ПараметрыПодготовки = Новый Структура;
		ПараметрыПодготовки.Вставить("Данные", ОбъектУчета);
		ПараметрыПодготовки.Вставить("ИдентификаторОсновногоФайла", ИдентификаторОсновногоФайла);	
		ПараметрыПодготовки.Вставить("Формат", Формат);
		
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ДанныеФайла", ДанныеФайла);
		ДопПараметры.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПоказСправкиПоФорматуЗавершение", ЭтотОбъект, ДопПараметры);
		ИнтерфейсДокументовЭДОУТКлиент.ПоказатьСправкуПоФорматуДоговорногоДокумента(ДанныеФайла, ПараметрыПодготовки, ОписаниеОповещения);

	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказСправкиПоФорматуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ДополнительныеПараметры.ДанныеФайла) = Тип("Структура") Тогда
		ПараметрыФайла = РаботаСФайламиСлужебныйКлиентСервер.ПараметрыДобавленияФайла();
		ПараметрыФайла.ВладелецФайлов = ДополнительныеПараметры.ОбъектУчета;
		ПараметрыФайла.Автор = ПользователиКлиент.ТекущийПользователь();

		ПараметрыФайла.ИмяБезРасширения = Результат.ИмяФайла;
		Адрес = ПоместитьВоВременноеХранилище(Результат.ДвоичныеДанные);
		
		ФайлСсылка = РаботаСФайламиСлужебныйВызовСервера.ДобавитьФайл(ПараметрыФайла, Адрес);
		Оповестить("ДобавленФайлКЭДОДоговорныйДокумент", ФайлСсылка, ДополнительныеПараметры.ОбъектУчета);
		ДанныеФайлаПоСсылке = РаботаСФайламиКлиент.ДанныеФайла(ФайлСсылка); 	
	Иначе
		ДанныеФайлаПоСсылке = РаботаСФайламиКлиент.ДанныеФайла(ДополнительныеПараметры.ДанныеФайла); 	
	КонецЕсли;

	ДанныеФайлаДляПомещения = Новый Структура;
	ДанныеФайлаДляПомещения.Вставить("Имя", ДанныеФайлаПоСсылке.ИмяФайла);  
	ДанныеФайлаДляПомещения.Вставить("Хранение", ДанныеФайлаПоСсылке.СсылкаНаДвоичныеДанныеФайла); 
	//ЗавершитьОбработкуОшибокФормированияПослеПолученияФайлаДоговорногоДокумента 
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, ДанныеФайлаДляПомещения);
	
КонецПроцедуры

Функция ФормаДоговорногоДокументаОткрыта(Уникальность) Экспорт
	 
	Форма = ПолучитьФорму(ИмяФормыИсходящегоДоговорногоДокумента(),,,Уникальность); 
	Возврат Форма.Открыта();

КонецФункции

Функция ИмяФормыИсходящегоДоговорногоДокумента() Экспорт
	
	ЭтоМобильныйКлиент = Ложь;
	#Если МобильныйКлиент Тогда
		ЭтоМобильныйКлиент = Истина;
	#КонецЕсли
	Если ЭтоМобильныйКлиент Тогда
		ИмяФормы = "Документ.ЭлектронныйДокументИсходящийЭДО.Форма.ФормаПросмотраМК";
	Иначе
		ИмяФормы = "Документ.ЭлектронныйДокументИсходящийЭДО.ФормаОбъекта";
	КонецЕсли;
	
	Возврат ИмяФормы;

КонецФункции 

#Область ВспомогательныеМетоды_ДоговорныйДокументXML 

// Описание оповещения для процедуры ОбменСКонтрагентамиКлиентПереопределяемый.ПриФормированииНовогоФайлаОбменаДоговорногоДокументаXML.
//
// Параметры:
//  ОбъектУчета                 - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//  ИдентификаторОсновногоФайла - Строка - Идентификатор основного файла обмена
//  ОповещениеОЗавершении       - ОписаниеОповещения - обработчик оповещения, который нужно вызвать после завершения подготовки файла:
//   * ПараметрыФайла - Структура - коллекция с данными подготовленного файла:
//     ** Имя      - Строка - имя файла нового электронного документа.
//     ** Хранение - Строка - адрес временного хранилища, содержащего двоичные данные файла.
//
Процедура ПриФормированииНовогоФайлаОбменаДоговорногоДокументаXML(ОбъектУчета, ИдентификаторОсновногоФайла,
	ОповещениеОЗавершении) Экспорт
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("ОбъектУчета", ОбъектУчета);
	ПараметрыОткрытия.Вставить("ИдентификаторОсновногоФайла", ИдентификаторОсновногоФайла);
	
	Пар = Новый Структура;
	Пар.Вставить("ИдентификаторОсновногоФайла",ИдентификаторОсновногоФайла);
	Пар.Вставить("ОповещениеОЗавершении",ОповещениеОЗавершении);
	Пар.Вставить("ОбъектУчета",ОбъектУчета);
	
	ОповещениеОЗавершенииВыбораФайла = Новый ОписаниеОповещения("ВыборВариантаФайлаЗавершен", ЭтотОбъект, Пар);
	
	ОткрытьФорму("Обработка.ФорматДоговорнойДокумент101XML.Форма.ФормаВыбораФайлаXMLЭД", ПараметрыОткрытия, ЭтотОбъект,,,, ОповещениеОЗавершенииВыбораФайла);
	
КонецПроцедуры

// Описание оповещения при выборе файла.
//
// Параметры:
//  ДанныеВыбора - Структура:
//   * ДобавленныйФайл - ОпределяемыйТип.ПрисоединенныйФайл, Неопределено - ссылка на присоединенный файл или Неопределено, если файл не создали.
//   * Предупреждения - Массив Из см. ОбщегоНазначенияБЭДКлиентСервер.НовыеПараметрыОшибки - предупреждения при формировании таблицы фрагментов.
//   * АдресТаблицыФрагментов - Строка - адрес временного хранилища таблицы фрагментов.
//   * АдресДанныхXML - Строка, Неопределено - адрес временного хранилища двоичных данных файла XML или Неопределено, если файл не создали.
//               - ОпределяемыйТип.ПрисоединенныйФайл - ссылка на присоединенный файл.
//  Пар - Структура:
//  * ИдентификаторОсновногоФайла - Строка - идентификатор создаваемого файла.
//  * ОповещениеОЗавершении - ОписаниеОповещения - оповещение вызываемое для отправки файла через БЭД.
//  * ОбъектУчета - СправочникСсылка.ДоговорыКонтрагентов - ссылка на отправляемый договор.
//
Процедура ВыборВариантаФайлаЗавершен(ДанныеВыбора, Пар) Экспорт
	
	Если ЗначениеЗаполнено(ДанныеВыбора) Тогда
		
		Предупреждения = Новый Массив();
		АдресТаблицыФрагментов = Неопределено;
		АдресДанныхXML = Неопределено;
		
		Если ТипЗнч(ДанныеВыбора) = Тип("Структура") Тогда
			ДобавленныйФайл = ДанныеВыбора.ДобавленныйФайл;
			Предупреждения = ДанныеВыбора.Предупреждения;
			АдресТаблицыФрагментов = ДанныеВыбора.АдресТаблицыФрагментов;
			АдресДанныхXML = ДанныеВыбора.АдресДанныхXML;
		Иначе
			ДобавленныйФайл = ДанныеВыбора;
		КонецЕсли;
		
		Пар.Вставить("ДобавленныйФайл", ДобавленныйФайл);
		
		Если Предупреждения <> Неопределено И Предупреждения.Количество() > 0 Тогда
			
			ПараметрыОткрытия = Новый Структура();
			ПараметрыОткрытия.Вставить("ОбъектУчета", Пар.ОбъектУчета);
			ПараметрыОткрытия.Вставить("ДобавленныйФайл", ДобавленныйФайл);
			ПараметрыОткрытия.Вставить("ИдентификаторОсновногоФайла", Пар.ИдентификаторОсновногоФайла);
			ПараметрыОткрытия.Вставить("Предупреждения", Предупреждения);
			Если АдресТаблицыФрагментов <> Неопределено Тогда
				ПараметрыОткрытия.Вставить("АдресТаблицыФрагментов", АдресТаблицыФрагментов);
			КонецЕсли;
			Если АдресДанныхXML <> Неопределено Тогда
				ПараметрыОткрытия.Вставить("АдресДанныхXML", АдресДанныхXML);
			КонецЕсли;
			
			ОповещениеОЗавершенииРедактирования = Новый ОписаниеОповещения("ЗавершениеРедактированиеФайла", ЭтотОбъект, Пар);
			ОткрытьФорму("Обработка.ФорматДоговорнойДокумент101XML.Форма.ФормаРедактированияФайлаXMLЭД", ПараметрыОткрытия,,,,, ОповещениеОЗавершенииРедактирования);
			
		Иначе
			
			ПараметрыОткрытия = Новый Структура();
			ПараметрыОткрытия.Вставить("ВыбранныйФайл", ДобавленныйФайл);
			ПараметрыОткрытия.Вставить("ИдентификаторОсновногоФайла", Пар.ИдентификаторОсновногоФайла);
			ПараметрыОткрытия.Вставить("ОбъектУчета", Пар.ОбъектУчета);

			ОповещениеОЗавершенииВыбораРешения = Новый ОписаниеОповещения("ВыборРешенияЗавершен", ЭтотОбъект, Пар);
			ОткрытьФорму("Обработка.ФорматДоговорнойДокумент101XML.Форма.ФормаСправкиXMLДляЭД", ПараметрыОткрытия,,,,, ОповещениеОЗавершенииВыбораРешения);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Описание оповещения при выборе отправки или редактирования полученного файла XML,
//
//  Параметры:
//   ПараметрЗакрытия - Строка - "Редактирование" или "Отправка". 
//   Пар - Структура:
//   * ОбъектУчета - СправочникСсылка.ДоговорыКонтрагентов - ссылка на отправляемый договор.
//   * ДобавленныйФайл - ОпределяемыйТип.ПрисоединенныйФайл, Неопределено - ссылка на присоединенный файл или Неопределено, если файл не создали.
//   * ИдентификаторОсновногоФайла - Строка - идентификатор создаваемого файла.
//
Процедура ВыборРешенияЗавершен(ПараметрЗакрытия, Пар) Экспорт
	
	Если ПараметрЗакрытия = "Редактирование" Тогда
		
		ПараметрыОткрытия = Новый Структура();
		ПараметрыОткрытия.Вставить("ОбъектУчета", Пар.ОбъектУчета);
		ПараметрыОткрытия.Вставить("ДобавленныйФайл", Пар.ДобавленныйФайл);
		ПараметрыОткрытия.Вставить("ИдентификаторОсновногоФайла", Пар.ИдентификаторОсновногоФайла);
		
		ОповещениеОЗавершенииРедактирования = Новый ОписаниеОповещения("ЗавершениеРедактированиеФайла", ЭтотОбъект, Пар);
		
		ОткрытьФорму("Обработка.ФорматДоговорнойДокумент101XML.Форма.ФормаРедактированияФайлаXMLЭД", ПараметрыОткрытия,,,,, ОповещениеОЗавершенииРедактирования);
		
	ИначеЕсли ПараметрЗакрытия = "Отправка" Тогда
		
		ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(Пар.ДобавленныйФайл);
		
		Если ДанныеФайла <> Неопределено Тогда
			
			ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);

			ПараметрыФайла = Новый Структура;
			ПараметрыФайла.Вставить("Имя", Пар.ИдентификаторОсновногоФайла + ".xml");
			ПараметрыФайла.Вставить("Хранение", ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла));
			ВыполнитьОбработкуОповещения(Пар.ОповещениеОЗавершении, ПараметрыФайла);
			
			Оповестить("ДобавленФайлКЭДОДоговорныйДокумент", Пар.ДобавленныйФайл, Пар.ОбъектУчета);
			
			Если Пар.ОповещениеОЗавершении.ИмяПроцедуры = "ПродолжитьФормированиеЭлектронногоДокументаДляОтправки" Тогда
				ОбменСКонтрагентамиУТВызовСервера.ОбновитьСостояниеОтправленногоФайлаДоговорногоДокумента(Пар.ДобавленныйФайл, Истина);		
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗавершениеРедактированиеФайла(ВыбранныйФайл, Пар) Экспорт
	
	Если ЗначениеЗаполнено(ВыбранныйФайл) Тогда
		
		ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(ВыбранныйФайл);
		
		Если ДанныеФайла <> Неопределено Тогда
			
			Оповестить("ВыбранФайлДляЭДО",,ВыбранныйФайл);

			ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
					
			ПараметрыФайла = Новый Структура;
			ПараметрыФайла.Вставить("Имя", Пар.ИдентификаторОсновногоФайла + ".xml");
			ПараметрыФайла.Вставить("Хранение", ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла));
			ВыполнитьОбработкуОповещения(Пар.ОповещениеОЗавершении, ПараметрыФайла);
			
			Оповестить("ДобавленФайлКЭДОДоговорныйДокумент",ВыбранныйФайл,Пар.ОбъектУчета);
			
			Если Пар.ОповещениеОЗавершении.ИмяПроцедуры = "ПродолжитьФормированиеЭлектронногоДокументаДляОтправки" Тогда
				ОбменСКонтрагентамиУТВызовСервера.ОбновитьСостояниеОтправленногоФайлаДоговорногоДокумента(ВыбранныйФайл, Истина);		
			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти 

#КонецОбласти
