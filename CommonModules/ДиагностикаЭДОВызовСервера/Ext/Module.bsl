////////////////////////////////////////////////////////////////////////////////
// ДиагностикаЭДОВызовСервера: механизм диагностики обмена электронными документами.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Запускает длительную операцию выполнения диагностики обмена электронными документами.
// 
// Параметры:
// 	ПараметрыВыполненияДиагностики - Неопределено - Описание
// Возвращаемое значение:
// 	См. ДлительныеОперации.ВыполнитьВФоне
Функция ВыполнитьДиагностику(ПараметрыВыполненияДиагностики = Неопределено) Экспорт
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "ДиагностикаЭДОСлужебный.ВыполнитьДиагностику",
		ПараметрыВыполненияДиагностики);
	
	Возврат ДлительнаяОперация;
	
КонецФункции 

// Заполнение отчета для администратора
// 
// Параметры:
//   РезультатДиагностики - Структура - с ключами:
//    * Результат - Булево - истина, если все виды диагностики выполнены успешно.
//    * Результаты - Структура - результаты диагностики:
//     ** Ключ - Строка - вид диагностики.
//     ** Значение - Структура - результат вида диагностики, см. ДиагностикаЭДОСлужебный.НовыйРезультатВидаДиагностики
//   ВидыДиагностики - Массив из Строка - виды диагностики, которые нужно выполнить. Если не заполнен, то выполняются
//                     все виды диагностики. См. область ВидыДиагностики общего
//                     модуля ДиагностикаЭДОКлиентСервер.
//   ПараметрыВыполненияДляОтчета  - Структура:
//    * ИнформационнаяБазаФайловая - Строка
//    * ИмяКомпьютераКлиент - Строка
//   Ошибки - Массив Из См. ОбработкаНеисправностейБЭДКлиентСервер.НоваяОшибка
//  ДополнительныеПараметры - Произвольный
Процедура ЗаполнитьОтчетыДляАдминистратора(РезультатДиагностики, ВидыДиагностики, ПараметрыВыполненияДляОтчета, Ошибки) Экспорт
	
	Если ДиагностикаЭДОКлиентСервер.ЕстьВидДиагностики(ВидыДиагностики,
		ДиагностикаЭДОКлиентСервер.ВидДиагностикиКриптография()) Тогда
		
		РезультатДиагностикиКриптографии = ДиагностикаЭДОКлиентСервер.РезультатВидаДиагностики(РезультатДиагностики,
			ДиагностикаЭДОКлиентСервер.ВидДиагностикиКриптография());
		
		РезультатДиагностикиКриптографии.ОтчетДляАдминистратора =
			ДиагностикаЭДОСлужебный.ОтчетДляАдминистратораКриптография(РезультатДиагностикиКриптографии, ПараметрыВыполненияДляОтчета);
		
		ДополнитьОтчетДляАдминистратораОшибками(РезультатДиагностикиКриптографии.ОтчетДляАдминистратора, Ошибки);
		
	КонецЕсли;
	
	Если ДиагностикаЭДОКлиентСервер.ЕстьВидДиагностики(ВидыДиагностики,
		ДиагностикаЭДОКлиентСервер.ВидДиагностикиТестАутентификации())
		И Не ДиагностикаЭДОКлиентСервер.СкрыватьРезультатТестаАутентификации(РезультатДиагностики) Тогда
		
		РезультатТестаАутентификации = ДиагностикаЭДОКлиентСервер.РезультатВидаДиагностики(РезультатДиагностики,
			ДиагностикаЭДОКлиентСервер.ВидДиагностикиТестАутентификации());
		
		РезультатТестаАутентификации.ОтчетДляАдминистратора =
			ДиагностикаЭДОСлужебный.ОтчетДляАдминистратораТестАутентификации(РезультатТестаАутентификации, ПараметрыВыполненияДляОтчета);
		
		ДополнитьОтчетДляАдминистратораОшибками(РезультатДиагностикиКриптографии.ОтчетДляАдминистратора, Ошибки);
		
	КонецЕсли;
		
КонецПроцедуры

// Дополняет отчет для администратора ошибками
//
// Параметры:
//  ОтчетДляАдминистратора - См. ДиагностикаЭДОСлужебный.ОтчетДляАдминистратораКриптография
//  Ошибки - Массив Из См. ОбработкаНеисправностейБЭДКлиентСервер.НоваяОшибка
Процедура ДополнитьОтчетДляАдминистратораОшибками(ОтчетДляАдминистратора, Ошибки)
	
	Если Ошибки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибок = НСтр("ru='Ошибки при выполнении:'") + Символы.ПС;
	
	Для Каждого СтрокаОшибки Из Ошибки Цикл
		ТекстОшибок = ТекстОшибок + СтрокаОшибки.ПодробноеПредставлениеОшибки + Символы.ПС;
	КонецЦикла;
	
	ОтчетДляАдминистратора.Текст = ОтчетДляАдминистратора.Текст + Символы.ПС + ТекстОшибок;
	
КонецПроцедуры

Функция УчетныеДанныеАбонентаТакском(ДанныеМаркера) Экспорт
	
	Если ЭтоАдресВременногоХранилища(ДанныеМаркера) Тогда
		ДвоичныеДанныеМаркера = ПолучитьИзВременногоХранилища(ДанныеМаркера);
	Иначе
		ДвоичныеДанныеМаркера = ДанныеМаркера;
	КонецЕсли;
		
	Возврат СервисЭДО.ИнформацияОбУчетнойЗаписи(ДвоичныеДанныеМаркера);
	
КонецФункции

#КонецОбласти

