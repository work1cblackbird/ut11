
#Область ПрограммныйИнтерфейс

// Получает данные по алкогольной продукции из прикладного документа при открытии формы проверки
// 
// Параметры:
//  Параметры - См. Обработки.ПроверкаИПодборАлкогольнойПродукцииЕГАИС.ЗагрузитьДанныеДокументаДлительнаяОперация.Параметры
//  ДанныеДокумента - См. Обработки.ПроверкаИПодборАлкогольнойПродукцииЕГАИС.ЗагрузитьДанныеДокументаДлительнаяОперация
//
Процедура ПриЗагрузкеДанныхДокумента(Параметры, ДанныеДокумента) Экспорт
	
	ИнтеграцияЕГАИСУТ.ПриЗагрузкеДанныхДокументаВФормуПроверки(Параметры, ДанныеДокумента);
	
КонецПроцедуры

// Возвращает данные по алкогольной продукции в прикладной документ при завершении проверки
// 
// Параметры:
//  РезультатПроверки - См. Обработки.ПроверкаИПодборАлкогольнойПродукцииЕГАИС.ЗафиксироватьРезультатПроверкиИПодбора.Параметры
//
Процедура ОтразитьРезультатыСканированияВДокументе(РезультатПроверки) Экспорт
	
	ИнтеграцияЕГАИСУТ.ОтразитьРезультатыСканированияВДокументе(РезультатПроверки);
	
КонецПроцедуры

// При определении параметров интеграции формы проверки и подбора.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма:
//  * Объект - ДанныеФормыСтруктураСКоллекцией - основной объект формы (документа):
//   ** Ссылка - ДокументСсылка - ссылка на объект базы данных
//  ПараметрыИнтеграции - См. ПроверкаИПодборПродукцииИС.ПараметрыИнтеграцииФормПроверкиИПодбора
Процедура ПриОпределенииПараметровИнтеграцииФормыПроверкиИПодбора(Форма, ПараметрыИнтеграции) Экспорт
	
	Если ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "РеализацияТоваровУслуг")
			Или ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ВозвратТоваровПоставщику")
			Или ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ВнутреннееПотребление")
			Или ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ПередачаТоваровХранителю") Тогда
		
		ПроверкаИПодборПродукцииИСМПУТ.НастроитьРасходныйДокументДляЕГАИС(
			ПараметрыИнтеграции, "ГруппаТовары", Форма.Объект.Ссылка.Метаданные());
		
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "РасходныйОрдерНаТовары") Тогда
		
		ПроверкаИПодборПродукцииИСМПУТ.НастроитьРасходныйДокументДляЕГАИС(
			ПараметрыИнтеграции, "ГруппаОтгружаемыеТовары", Метаданные.Документы.РасходныйОрдерНаТовары);
		ПараметрыИнтеграции.ИмяТабличнойЧастиТовары      = "ОтгружаемыеТовары";
		ПараметрыИнтеграции.ИмяЭлементаФормыТовары       = "ОтгружаемыеТовары";
		ПараметрыИнтеграции.ИмяСледующейКолонки          = "ОтгружаемыеТоварыНоменклатураАртикул";
		ПараметрыИнтеграции.ИмяПоследующегоЭлементаФормы = "ГруппаРежимПросмотраНавигация";
		ПараметрыИнтеграции.ИмяТабличнойЧастиСерии       = "";
		
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ОтборРазмещениеТоваров") Тогда
	
		ПроверкаИПодборПродукцииИСМПУТ.НастроитьРасходныйДокументДляЕГАИС(
			ПараметрыИнтеграции, "ГруппаТоварыОтбор", Метаданные.Документы.ОтборРазмещениеТоваров);
		ПараметрыИнтеграции.ИмяТабличнойЧастиТовары      = "ТоварыОтбор";
		ПараметрыИнтеграции.ИмяЭлементаФормыТовары       = "ТоварыОтбор";
		ПараметрыИнтеграции.ИмяСледующейКолонки          = "ТоварыОтборНоменклатура";
		ПараметрыИнтеграции.ИмяПоследующегоЭлементаФормы = "ТоварыОтбор";
		ПараметрыИнтеграции.ИмяТабличнойЧастиСерии       = "";
		
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ПеремещениеТоваров") Тогда
		
		ПроверкаИПодборПродукцииИСМПУТ.НастроитьРасходныйДокументДляЕГАИС(
			ПараметрыИнтеграции, "", Метаданные.Документы.ПеремещениеТоваров);
		
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "СборкаТоваров") Тогда
		
		ПроверкаИПодборПродукцииИСМПУТ.НастроитьРасходныйДокументДляЕГАИС(
			ПараметрыИнтеграции, "ГруппаТовары", Метаданные.Документы.СборкаТоваров);
		ПараметрыИнтеграции.ИспользоватьКолонкуСтатусаПроверкиПодбора  = Ложь; //динамически менять при разборке не получится

	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ПередачаТоваровМеждуОрганизациями")
		Или ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ВозвратТоваровМеждуОрганизациями") Тогда
		
		ПроверкаИПодборПродукцииИСМПУТ.НастроитьРасходныйДокументДляЕГАИС(
			ПараметрыИнтеграции, "", Форма.Объект.Ссылка.Метаданные());
		ПараметрыИнтеграции.ИмяТабличнойЧастиСерии       = "";
		


	КонецЕсли;
	
	Возврат;
	
КонецПроцедуры

// Заполняет специфику применения интеграции формы проверки и подбора в конкретную форму.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма для которой применяются параметры интеграции.
//
Процедура ПриПримененииПараметровИнтеграцииФормыПроверкиИПодбора(Форма) Экспорт
	
	
КонецПроцедуры

// Возвращает через третий параметр признак наличия маркируемой продукции.
//
// Параметры:
//  Коллекция                - ДанныеФормыКоллекция - ТЧ с товарами.
//  ЕстьМаркируемаяПродукция - Булево - Исходящий, признак наличия маркируемой продукции.
//
Процедура ЕстьМаркируемаяПродукцияВКоллекции(Коллекция, ЕстьМаркируемаяПродукция) Экспорт
	
	//++ НЕ ГОСИС
		
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ
	|	ВремТаблТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьМаркируемаяПродукция
	|ИЗ
	|	ВремТаблТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый,ЛОЖЬ)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаТовары", Коллекция.Выгрузить(, "Номенклатура"));
	Результат = Запрос.Выполнить();
	
	ЕстьМаркируемаяПродукция = НЕ Результат.Пустой();
	
//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#КонецОбласти
