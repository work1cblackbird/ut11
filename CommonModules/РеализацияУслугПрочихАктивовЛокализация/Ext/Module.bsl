////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Реализация услуг и прочих активов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.РеализацияУслугПрочихАктивов - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	Документы.СчетФактураВыданный.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);


	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		
		// Товарная накладная (ТОРГ-12)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "ТОРГ12";
		КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Истина);
		
	КонецЕсли;
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	
	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Счет-фактура (в валюте)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактураВВалюте";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)'");
		КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
		
		// Универсальный передаточный документ (УПД)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "УПД";
		КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

//++ Локализация

// Формирует текст запроса для получения данных основания при печати Счет-фактуры.
//
// Возвращаемое значение:
//	Строка - текст запроса
//
Функция ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                                   КАК Ссылка,
	|	ДанныеДокументов.ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Валюта                                   КАК Валюта,
	|	ДанныеДокументов.Организация                              КАК Организация,
	|	ДанныеДокументов.НалогообложениеНДС                       КАК НалогообложениеНДС,
	|	ДанныеДокументов.Подразделение                            КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                  КАК Склад,
	|	ДанныеДокументов.Грузоотправитель                         КАК Грузоотправитель,
	|	ДанныеДокументов.Грузополучатель                          КАК Грузополучатель,
	|	ЛОЖЬ                                                      КАК РасчетыЧерезОтдельногоКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                              КАК Номенклатура,
	|	""""                                                      КАК Содержание,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)             КАК Комиссионер,
	|	ДанныеДокументов.Основание                                КАК Основание,
	|	ДанныеДокументов.ОснованиеДата                            КАК ОснованиеДата,
	|	ДанныеДокументов.ОснованиеНомер                           КАК ОснованиеНомер,
	|	ДанныеДокументов.БанковскийСчетОрганизации                КАК БанковскийСчетОрганизации,
	|	ДанныеДокументов.БанковскийСчетКонтрагента                КАК БанковскийСчетКонтрагента,
	|	ДанныеДокументов.БанковскийСчетГрузоотправителя           КАК БанковскийСчетГрузоотправителя,
	|	ДанныеДокументов.БанковскийСчетГрузополучателя            КАК БанковскийСчетГрузополучателя,
	|	ДанныеДокументов.ДоверенностьНомер                        КАК ДоверенностьНомер,
	|	ДанныеДокументов.ДоверенностьДата                         КАК ДоверенностьДата,
	|	ДанныеДокументов.ДоверенностьВыдана                       КАК ДоверенностьВыдана,
	|	ДанныеДокументов.ДоверенностьЛицо                         КАК ДоверенностьЛицо,
	|	ДанныеДокументов.Менеджер                                 КАК Менеджер,
	|	ДанныеДокументов.Отпустил.Наименование                    КАК Кладовщик,
	|	ДанныеДокументов.ОтпустилДолжность                        КАК ДолжностьКладовщика,
	|	ДанныеДокументов.Дата                                     КАК Период
	|
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&ДокументОснование_РеализацияУслугПрочихАктивов)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает данные для формирования печатной формы УПД
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.РеализацияУслугПрочихАктивов - ссылки на документы, по которым необходимо
//																				получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемая при печати УПД, содержащая следующие свойства:
//		* РезультатПоШапке - РезультатЗапроса - общие данные накладной.
//		* РезультатПоТабличнойЧасти - РезультатЗапроса - данные табличной части накладной.
//		* Прослеживаемость - РезультатЗапроса - сведения о прослеживаемых товарах.
//
Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                  КАК Ссылка,
	|	ДанныеДокументов.Валюта                  КАК Валюта,
	|	ДанныеДокументов.Организация             КАК Организация,
	|	ДанныеДокументов.Подразделение           КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ДанныеДокументов.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Дата                    КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	УчетНДСРФ.ДополнитьЗапросПолученияДанныхДляПечатиУПД(Запрос, "ХозяйственнаяОперация");

	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	Обработки.ПечатьОбщихФорм.ПоместитьВременнуюТаблицуДанныхПоставщика(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Контрагент.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеПоставщика.ГоловнаяОрганизация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Контрагент
	|		ИНАЧЕ ДанныеДокумента.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Организация
	|		ИНАЧЕ ДанныеДокумента.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ДанныеПоставщика.КПППоставщика КАК КПППоставщика,
	|	""""                           КАК КПППокупателя,
	|	ДанныеДокумента.Контрагент.ИНН КАК ИННПокупателя,
	|	ДанныеДокумента.АдресДоставки КАК АдресДоставки,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЕстьПрослеживаемыеТовары,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	ДанныеДокумента.Основание КАК Основание,
	|	ДанныеДокумента.ОснованиеДата КАК ОснованиеДата,
	|	ДанныеДокумента.ОснованиеНомер КАК ОснованиеНомер,
	|	ДанныеДокумента.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ДанныеДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ДанныеДокумента.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ДанныеДокумента.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	ДанныеДокумента.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДанныеДокумента.ДоверенностьДата КАК ДоверенностьДата,
	|	ДанныеДокумента.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДанныеДокумента.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ДанныеДокумента.Отпустил КАК Кладовщик,
	|	ДанныеДокумента.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	ДанныеДокументов.ТребуетсяНаличиеСФ КАК ТребуетсяНаличиеСФ
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоставщика КАК ДанныеПоставщика
	|		ПО ДанныеДокумента.Ссылка = ДанныеПоставщика.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	ТаблицаДокумента.Содержание КАК НоменклатураНаименование,
	|	НЕОПРЕДЕЛЕНО КАК НоменклатураКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмеренияТНВЭД,
	|	"""" КАК ЕдиницаИзмеренияТНВЭДНаименование,
	|	"""" КАК ЕдиницаИзмеренияТНВЭДКод,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТДСсылка,
	|	ЕСТЬNULL(ТаблицаДокумента.НомерГТД.ТипНомераГТД, НЕОПРЕДЕЛЕНО) КАК ТипНомераГТД,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО КАК СтранаПроисхождения,
	|	НЕОПРЕДЕЛЕНО КАК СтранаПроисхожденияКод,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	(ВЫБОР
	|		КОГДА ТаблицаДокумента.Количество = 0 ТОГДА ТаблицаДокумента.СуммаБезНДС
	|		ИНАЧЕ ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.Количество КОНЕЦ) КАК Цена,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка КАК СчетФактура,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки КАК НомерСтрокиСФ,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД КАК НомерГТД,
	|	ДанныеСтраныПросхождения.Код КАК СтранаПроисхожденияКод,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер КАК РНПТ,
	|	ВЫБОР
	|		КОГДА РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер = """"
	|			ТОГДА РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД
	|		ИНАЧЕ РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер
	|	КОНЕЦ												КАК НомерТовара,	
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.Код КАК КодТНВЭД,
	|	СУММА(РеализацияУслугПрочихАктивовПрослеживаемыеТовары.СуммаПоРНПТ) КАК СуммаПоРНПТ,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	СУММА(РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КоличествоПоРНПТ) КАК Количество
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.ПрослеживаемыеТовары КАК РеализацияУслугПрочихАктивовПрослеживаемыеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацияУслугПрочихАктивовТаблицаТоваров КАК РеализацияУслугПрочихАктивовТаблицаТоваров
	|			ПО РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка = РеализацияУслугПрочихАктивовТаблицаТоваров.Ссылка
	|			И РеализацияУслугПрочихАктивовПрослеживаемыеТовары.ОсновноеСредство = РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
	|		ПО РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка 	
	|ГДЕ
	|	ЕСТЬNULL(РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.ТипНомераГТД, ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.ПустаяСсылка)) В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД,
	|	ДанныеСтраныПросхождения.Код,	
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер,
	|	ВЫБОР
	|		КОГДА РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер = """"
	|			ТОГДА РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД
	|		ИНАЧЕ РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер
	|	КОНЕЦ,	
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.ЕдиницаИзмерения.Код,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.ЕдиницаИзмерения.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактура
	|
	|ИТОГИ ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти	= МассивРезультатов[1];
	Прослеживаемость			= МассивРезультатов[2];
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке",			РезультатПоШапке);
	ДанныеДляПечати.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	ДанныеДляПечати.Вставить("Прослеживаемость",			Прослеживаемость);
	
	Возврат ДанныеДляПечати;
	
КонецФункции


// Функция получает данные для формирования печатной формы ТОРГ - 12
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив - Массив ссылок на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыТОРГ12(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                  КАК Ссылка,
	|	ДанныеДокументов.Валюта                  КАК Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация   КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.Номер КАК Номер,
	|	Шапка.Дата КАК Дата,
	|	Шапка.Статус КАК Статус,
	|	Шапка.Партнер КАК Партнер,
	|	Шапка.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Шапка.Организация.ОбособленноеПодразделение
	|			ТОГДА Шапка.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Шапка.Организация
	|	КОНЕЦ КАК Организация,
	|	Шапка.Организация.Префикс КАК Префикс,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	Шапка.Отпустил КАК Кладовщик,
	|	Шапка.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	Шапка.Основание КАК Основание,
	|	Шапка.ОснованиеНомер КАК ОснованиеНомер,
	|	Шапка.ОснованиеДата КАК ОснованиеДата,
	|	ВЫБОР
	|		КОГДА Шапка.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Шапка.Контрагент
	|		ИНАЧЕ Шапка.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА Шапка.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Шапка.Организация
	|		ИНАЧЕ Шапка.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	Шапка.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	Шапка.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	Шапка.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	Шапка.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	Шапка.АдресДоставки КАК АдресДоставки,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	Шапка.Валюта КАК Валюта,
	|	Шапка.ДоверенностьНомер КАК ДоверенностьНомер,
	|	Шапка.ДоверенностьДата КАК ДоверенностьДата,
	|	Шапка.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	Шапка.ДоверенностьЛицо КАК ДоверенностьЛицо
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|		ПО Шапка.Ссылка = ТаблицаДанныхДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Шапка.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	ТаблицаДокумента.Содержание КАК НоменклатураНаименование,
	|	"""" КАК НоменклатураКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.ЕдиницаИзмерения.Представление КАК ВидУпаковки,
	|	1 КАК КоличествоВОдномМесте,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	"""" КАК ХарактеристикаНаименование,
	|	НЕОПРЕДЕЛЕНО КАК Упаковка,
	|	"""" КАК УпаковкаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	(ВЫБОР
	|		КОГДА ТаблицаДокумента.Количество = 0 ТОГДА ТаблицаДокумента.СуммаБезНДС
	|		ИНАЧЕ ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.Количество КОНЕЦ) КАК Цена,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Количество КАК КоличествоМест,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС КАК СуммаСНДС,
	|	0 КАК МассаНетто,
	|	0 КАК МассаБрутто,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаДокумента.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
							РезультатыЗапроса[0], РезультатыЗапроса[1]);
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	Запрос.УстановитьПараметр("ПустаяГТД",                      Справочники.НомераГТД.ПустаяСсылка());
	
	//Получим Номер ГТД у одного прослеживаемого товара, при наличии.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ПрослеживаемыеТовары.НомерГТД) КАК НомерГТД
	|ПОМЕСТИТЬ ВтПрослеживаемыеТовары
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПрослеживаемыеТовары.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Ссылка";
	Запрос.Выполнить();
	
	Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
		Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		ТаблицаДанныхДокументов КАК ДанныеДокументов
			|	ПО
			|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
			|
			|ГДЕ
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	И РасчетыСКлиентами.Активность
			|";
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
			
			Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
				ОкончаниеПериодаРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
				АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
				Попытка
					РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, АналитикиРасчета);
				Исключение
					ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
					|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаДанныхДокументов КАК ДанныеДокументов
			|ГДЕ 
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
			
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Содержание                             КАК Содержание,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.Количество                             КАК КоличествоУпаковок,
	|	0                                                       КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.ЕдиницаИзмерения                       КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.ЕдиницаИзмерения                       КАК Упаковка,
	|	
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.БазаНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
	|	) КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	) КАК СуммаНДС,
	|	ТаблицаДокумента.АналитикаДоходов КАК АналитикаДоходов,
	|
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)          КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)     КАК Серия,
	|	&ПустаяГТД                                              КАК НомерГТД,
	|	ТаблицаДокумента.КодТНВЭД                               КАК КодТНВЭД,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ                                                   КАК ЭтоТовар,
	|	ЛОЖЬ                                                    КАК ВернутьМногооборотнуюТару
	|
	|ПОМЕСТИТЬ РеализацияУслугПрочихАктивовТаблицаТоваров
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.Доходы КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|		И СуммыДокументовВВалютахУчета.Активность
	|		И &ПересчитыватьВВалютуРегл	
	|;";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Текст запроса данных прослеживаемость.
// 
// Возвращаемое значение:
//  Строка - Текст запроса данных прослеживаемость
Функция ТекстЗапросаДанныхПрослеживаемость() Экспорт
	
	ТекстЗапроса = 
	"
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка КАК Ссылка,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.ОсновноеСредство КАК ОсновноеСредство,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД КАК НомерГТД,
	|	ДанныеСтраныПросхождения.Код КАК СтранаПроисхожденияКод,
	|	ДанныеСтраныПросхождения.Ссылка КАК ПредставлениеСтраны,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.РегистрационныйНомер КАК РНПТ,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.СуммаПоРНПТ КАК СуммаПоРНПТ,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.Код КАК КодТНВЭД,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КодТНВЭД.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ПрослеживаемыеТовары
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.ПрослеживаемыеТовары КАК РеализацияУслугПрочихАктивовПрослеживаемыеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
	|		ПО РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка 	
	|ГДЕ
	|	РеализацияУслугПрочихАктивовПрослеживаемыеТовары.Ссылка В(&МассивОснований)
	|	И ЕСТЬNULL(РеализацияУслугПрочихАктивовПрослеживаемыеТовары.НомерГТД.ТипНомераГТД, ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.ПустаяСсылка)) В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровНомераСтрокСФ.СчетФактура КАК СчетФактура,
	|	ТаблицаТоваровНомераСтрокСФ.НомерСтрокиСФ КАК НомерСтрокиСФ,
	|	ПрослеживаемыеТовары.НомерГТД КАК НомерГТД,	
	|	ПрослеживаемыеТовары.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
	|	ПрослеживаемыеТовары.ПредставлениеСтраны КАК ПредставлениеСтраны,
	|	ПрослеживаемыеТовары.РНПТ КАК НомерТовара,
	|	СУММА(ПрослеживаемыеТовары.СуммаПоРНПТ) КАК СуммаПоРНПТ,
	|	ПрослеживаемыеТовары.КодТНВЭД КАК КодТНВЭД,
	|	ПрослеживаемыеТовары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ПрослеживаемыеТовары.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	СУММА(ПрослеживаемыеТовары.КоличествоПоРНПТ) КАК Количество
	|ИЗ
	|	ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Доходы КАК Доходы
	|		ПО ПрослеживаемыеТовары.Ссылка = Доходы.Ссылка
	|			И ПрослеживаемыеТовары.ОсновноеСредство = Доходы.АналитикаДоходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровНомераСтрокСФ КАК ТаблицаТоваровНомераСтрокСФ
	|		ПО ПрослеживаемыеТовары.Ссылка = ТаблицаТоваровНомераСтрокСФ.ДокументОснование
	|			И (Доходы.Содержание = ТаблицаТоваровНомераСтрокСФ.Содержание)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваровНомераСтрокСФ.СчетФактура,
	|	ТаблицаТоваровНомераСтрокСФ.НомерСтрокиСФ,
	|	ПрослеживаемыеТовары.НомерГТД,
	|	ПрослеживаемыеТовары.СтранаПроисхожденияКод,
	|	ПрослеживаемыеТовары.ПредставлениеСтраны,
	|	ПрослеживаемыеТовары.РНПТ,
	|	ПрослеживаемыеТовары.КодТНВЭД,
	|	ПрослеживаемыеТовары.ЕдиницаИзмеренияКод,
	|	ПрослеживаемыеТовары.ЕдиницаИзмеренияНаименование
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактура
	|ИТОГИ ПО
	|	СчетФактура";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- Локализация

#КонецОбласти


#Область ФормаДокумента

// Процедура - обработчик изменения реквизита формы.
//
// Параметры:
//	ИмяЭлемента - Строка - имя элемента формы
//	Форма - ФормаКлиентскогоПриложения - форма документа
//	ДополнительныеПараметры - Структура - дополнительные параметры обработки
//
Процедура ПриИзмененииРеквизита(ИмяЭлемента, Форма, ДополнительныеПараметры) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	
	//-- Локализация
	
КонецПроцедуры

// Процедура - обработчик выполнения команлы формы.
// 
// Параметры:
//	ИмяКоманды - Строка - имя элемента формы
//	Форма - ФормаКлиентскогоПриложения - форма документа
//
Процедура ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	//++ Локализация
	
	
	//-- Локализация
	
КонецПроцедуры


#КонецОбласти


//++ Локализация
#Область Фискализация

// Возвращает параметры операции фискализации чека для печати чека по документу
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма документ, из которого печатается чек - содержит:
// 	* Объект - ДокументОбъект - Документ-объект, основной параметр формы.
// Возвращаемое значение:
// 	Структура - Структура параметров операции фискализации чека
Функция ОсновныеПараметрыОперации(Форма) Экспорт
	
	ОсновныеПараметрыОперации = ФормированиеФискальныхЧековСерверПереопределяемый.СтруктураОсновныхПараметровОперации();
	
	ОсновныеПараметрыОперации.ДокументСсылка       = Форма.Объект.Ссылка;
	ОсновныеПараметрыОперации.Организация          = Форма.Объект.Организация;
	ОсновныеПараметрыОперации.Контрагент           = Форма.Объект.Контрагент;
	ОсновныеПараметрыОперации.Партнер              = Форма.Объект.Партнер;
	ОсновныеПараметрыОперации.Валюта               = Форма.Объект.Валюта;
	ОсновныеПараметрыОперации.ВалютаВзаиморасчетов = Форма.Объект.ВалютаВзаиморасчетов;
	ОсновныеПараметрыОперации.СуммаДокумента       = Форма.Объект.СуммаДокумента;
	
	Возврат ОсновныеПараметрыОперации;
	
КонецФункции

// Определяет, разрешено ли пробитие фискального чека по документу
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма документ, из которого печатается чек - содержит:
// 	* Объект - ДокументОбъект - Документ-объект, основной параметр формы.
// Возвращаемое значение:
// 	Булево - Истина, если разрешено пробитие чека
Функция РазрешеноПробитиеФискальныхЧековПоДокументу(Форма) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Форма.Объект.Контрагент)
		ИЛИ НЕ ЗначениеЗаполнено(Форма.Объект.ХозяйственнаяОперация) Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	РазрешеноПробитиеФискальныхЧековПоДокументу = Истина;
	
	ЮрФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.Объект.Контрагент, "ЮрФизЛицо");
	РазрешеноПробитиеФискальныхЧековПоДокументу = (ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо);
	
	Если Форма.Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияКлиенту
		И Форма.Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов
		И Форма.Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав Тогда
		
		РазрешеноПробитиеФискальныхЧековПоДокументу	= Ложь;
	КонецЕсли;
	
	Возврат РазрешеноПробитиеФискальныхЧековПоДокументу;
	
КонецФункции

// Формирует массив форматированных строк для формирования гиперссылки пробития фискального чека
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ-ссылка, по которому пробивается фискальный чек
// 	Форма - ФормаКлиентскогоПриложения - Форма документ, из которого печатается чек - содержит:
// 	* Объект - ДокументОбъект - Документ-объект, основной параметр формы.
// 	МассивПредставлений - Массив из ФорматированнаяСтрока - Массив форматированных строк для формирования гиперссылки
//    пробития фискального чека.
Процедура ОбновитьГиперссылкуПробитияФискальногоЧека(ДокументСсылка, Форма, МассивПредставлений) Экспорт
	
	ФискальнаяОперацияДанныеЖурнала = ФормированиеФискальныхЧековСервер.ДанныеПробитогоФискальногоЧекаПоДокументу(ДокументСсылка);
	
	Если ФискальнаяОперацияДанныеЖурнала <> Неопределено Тогда
		
		НомерЧекаККМ = ФискальнаяОперацияДанныеЖурнала.НомерЧекаККМ;
		ТекстСсылки = "ОткрытьЗаписьФискальнойОперации";
		
		ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиКомандуЧекПробит(МассивПредставлений, НомерЧекаККМ, ТекстСсылки);
		
	ИначеЕсли ФормированиеФискальныхЧековСервер.ЕстьПравоНаПробитиеФискальногоЧекаПоДокументу(ДокументСсылка) Тогда
		
		Если ФормированиеФискальныхЧековСервер.ЕстьПодключенноеОборудованиеККассамОрганизации(Форма.Объект.Организация) Тогда 
			ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиКомандуПробитьЧек(МассивПредставлений, "ПробитьЧек");
		Иначе
			ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиСтатусЧекНеПробит(МассивПредставлений, "НастроитьОборудование");
		КонецЕсли;
		
	Иначе
		
		ФормированиеФискальныхЧековСервер.ДобавитьВПредставлениеГиперссылкиСтатусЧекНеПробит(МассивПредставлений);
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет виды фискальных чеков, доступных по документу
// 
// Параметры:
// 	ВидыЧеков - ТаблицаЗначений - Таблица значений, содержащая виды фискальных чеков, доступных по документу
// 	Операция - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция по документу
// 	ИмяКомандыПробитияЧека - Строка - Имя команды пробития чека
Процедура ЗаполнитьВидыФискальныхЧековПоДокументу(ВидыЧеков, Операция, ИмяКомандыПробитияЧека) Экспорт
	
	ВидЧека = ВидыЧеков.Добавить();
	ВидЧека.ТипФискальногоДокумента = Перечисления.ТипыФискальныхДокументовККТ.КассовыйЧек;
	ВидЧека.ТипРасчетаДенежнымиСредствами = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств;
	ВидЧека.ВидЧекаКоррекции = Неопределено;
	
	ВидЧека = ВидыЧеков.Добавить();
	ВидЧека.ТипФискальногоДокумента = Перечисления.ТипыФискальныхДокументовККТ.КассовыйЧекКоррекции;
	ВидЧека.ТипРасчетаДенежнымиСредствами = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств;
	ВидЧека.ВидЧекаКоррекции = Перечисления.ВидыЧековКоррекции.НеприменениеККТ;
	
КонецПроцедуры

// Возвращает таблицу товаров для заполнения позиций строк в параметрах чека
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для получения товарных позиций
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблицу с товарными позициями с количественными и суммовыми показателями
Функция ПозицииНоменклатурыПоДокументу(ДокументСсылка) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Валюта               КАК Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка = &Ссылка
	|;";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = Истина;
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	
	|	ВЫБОР КОГДА ТаблицаДанныхДокументов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов) 
	|		И НЕ РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 
	|		ТОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов.Представление
	|		ИНАЧЕ РеализацияУслугПрочихАктивовТаблицаТоваров.Содержание КОНЕЦ КАК Номенклатура,
	|	
	|	""""                      							  КАК Характеристика,
	|	""""                      							  КАК Упаковка,
	|	
	|	ВЫБОР
	|		КОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок = 0
	|			ТОГДА 1
	|		ИНАЧЕ РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ КАК Количество,
	|	
	|	ВЫБОР 
	|		КОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок = 0
	|			ТОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ((РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС) /
	|				РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК Цена,
	|	
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС КАК Сумма,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров КАК РеализацияУслугПрочихАктивовТаблицаТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов ПО ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Количество             КАК Количество,
	|	ТаблицаНоменклатуры.Сумма                  КАК Сумма,
	|	ТаблицаНоменклатуры.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаНоменклатуры.СуммаНДС               КАК СуммаНДС,
	|	ТаблицаНоменклатуры.Цена                   КАК Цена,
	|	
	|	ТаблицаНоменклатуры.Номенклатура           КАК НоменклатураНаименование,
	|	ТаблицаНоменклатуры.Характеристика         КАК ХарактеристикаНаименование,
	|	ТаблицаНоменклатуры.Упаковка               КАК Упаковка,
	|	ТаблицаНоменклатуры.Упаковка               КАК УпаковкаНаименование
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Определяет систему налогообложения по документу
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для определения системы налогообложения
// Возвращаемое значение:
// 	ПеречислениеСсылка.ТипыСистемНалогообложенияККТ - Система налогообложения по документу
Функция СистемаНалогообложенияПоДокументу(ДокументСсылка) Экспорт
	
	СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Организация, НалогообложениеНДС");
	Если РеквизитыДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.Патент;
	ИначеЕсли РеквизитыДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	Иначе
		СистемаНалогообложения = РозничныеПродажиЛокализация.СистемаНалогообложенияФискальнойОперации(РеквизитыДокумента.Организация);
	КонецЕсли;
	
	Возврат СистемаНалогообложения;
	
КонецФункции

// Возвращает таблицу товаров для заполнения позиций строк в параметрах чека на поставку
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для получения товарных позиций
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблица с товарными позициями с количественными и суммовыми показателями
Функция ПредметыРасчетовПоДокументу(ДокументСсылка) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Валюта               КАК Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка = &Ссылка
	|;";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = Истина;
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки,
	|	ВЫБОР КОГДА ТаблицаДанныхДокументов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов) 
	|		И НЕ РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) КОНЕЦ КАК ТипНоменклатуры,
	|	ЛОЖЬ                                           КАК ПодакцизныйТовар,
	|
	|	ВЫБОР КОГДА ТаблицаДанныхДокументов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов) 
	|		И НЕ РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 
	|		ТОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.АналитикаДоходов.Представление
	|		ИНАЧЕ РеализацияУслугПрочихАктивовТаблицаТоваров.Содержание КОНЕЦ КАК НоменклатураНаименование,
	|	""""                      КАК ХарактеристикаНаименование,
	|	НЕОПРЕДЕЛЕНО              КАК Упаковка,
	|	""""                      КАК УпаковкаНаименование,
	|	
	|	ВЫБОР 
	|		КОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок = 0
	|			ТОГДА 1
	|		ИНАЧЕ РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	
	|	ВЫБОР 
	|		КОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок = 0
	|			ТОГДА РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ((РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС) /
	|				РеализацияУслугПрочихАктивовТаблицаТоваров.КоличествоУпаковок КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК Цена,
	|	
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаБезНДС + РеализацияУслугПрочихАктивовТаблицаТоваров.СуммаНДС КАК СуммаСНДС,
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|
	|	0                        							 КАК СуммаСкидки
	|ИЗ
	|	РеализацияУслугПрочихАктивовТаблицаТоваров КАК РеализацияУслугПрочихАктивовТаблицаТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов ПО ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияУслугПрочихАктивовТаблицаТоваров.НомерСтроки";
	
	ПредметыРасчетов = Запрос.Выполнить().Выгрузить();
	
	Возврат ПредметыРасчетов;
	
КонецФункции

#КонецОбласти
//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//  ДокументОбъект - ДокументОбъект.РеализацияУслугПрочихАктивов -
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры


//++ Локализация


//-- Локализация

#КонецОбласти

//++ Локализация


//-- Локализация

#Область Прочее

//++ Локализация


//-- Локализация

#КонецОбласти

#КонецОбласти
