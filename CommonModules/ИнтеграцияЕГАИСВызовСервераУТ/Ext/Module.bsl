
#Область ПрограммныйИнтерфейс

Функция ТекстДокументаЕГАИСВПриобретенииТоваровВРаботе(ТТНВходящаяЕГАИС) Экспорт
	Возврат Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'Заполнение по документу: %1'"), ТТНВходящаяЕГАИС),,
		ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
КонецФункции

// Заполняет форматированную строку (связи с документами ЕГАИС) для формы документа Приобретение товаров услуг
//
// Параметры:
//   Объект - ДанныеФормыКоллекция - редактируемый в форме документ приобретения
//
// Возвращаемое значение:
//   ФорматированнаяСтрока, Строка - Описание доступных действий ЕГАИС
Функция ТекстДокументаЕГАИСВПриобретенииТоваров(Знач Объект, ТТНВходящаяЕГАИС) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(ТТНВходящаяЕГАИС) Тогда
		Возврат ТекстДокументаЕГАИСВПриобретенииТоваровВРаботе(ТТНВходящаяЕГАИС);
	КонецЕсли;
	
	Если Не Объект.ЕстьАлкогольнаяПродукция Тогда
		Возврат "";
	КонецЕсли;
	
	Строки = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТТНВходящаяЕГАИС.Ссылка       КАК Ссылка,
	|	СтатусыДокументовЕГАИС.Статус КАК Статус
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТТНВходящаяЕГАИС.Ссылка
	|ГДЕ
	|	ТТНВходящаяЕГАИС.ДокументОснование = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	ТТНПривязана = Ложь;
	Если Выборка.Следующий() Тогда
		Строки.Добавить(
			Новый ФорматированнаяСтрока(
				СтрШаблон(
					НСтр("ru = 'ТТН ЕГАИС (входящая): %1'"),
					Выборка.Статус),,
				ЦветаСтиля.ГиперссылкаЦвет,,
				ПолучитьНавигационнуюСсылку(Выборка.Ссылка)));
		Шаблон = НСтр("ru = 'Связать еще (%1)'");
		ТТНПривязана = Истина;
	Иначе
		Шаблон = НСтр("ru = 'Связать с ТТН ЕГАИС (входящей) (%1)'");
	КонецЕсли;
	
	Если ПравоДоступа("Изменение", Метаданные.Документы.ТТНВходящаяЕГАИС) ИЛИ Пользователи.ЭтоПолноправныйПользователь() Тогда
		
		ВозможныеТТНЕГАИС   = ИнтеграцияЕГАИСВызовСервера.ВозможныеТТНЕГАИС(Объект.Организация, Объект.Склад, Объект.Контрагент);
		КоличествоНакладных = ВозможныеТТНЕГАИС.Количество();
		
		Если КоличествоНакладных > 0 Тогда
			Строки.Добавить("  ");
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
					СтрШаблон(
						Шаблон,
						КоличествоНакладных),,
					ЦветаСтиля.ГиперссылкаЦвет,,
					"СвязатьСТТНЕГАИС"));
		ИначеЕсли НЕ ТТНПривязана Тогда
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru = 'В документе приобретения указана алкогольная продукция. Подходящая ТТН входящая ЕГАИС не найдена.'"),,
					ЦветаСтиля.ЦветТекстаПроблемаГосИС));
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(Строки);
	
КонецФункции

// Проверить сопоставление классификаторов
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - Документ, для которого необходимо проверить соответствие классификаторов.
//  УникальныйИдентификатор - УникальныйИдентификатор - Идентификатор формы открытого документа.
// 
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   *ЕстьНеСопоставленныеТовары - Булево - Признак наличия несопоставленных товаров.
//   *НеСопоставленныеТовары - Строка - Адрес по временном хранилище.
//
Функция ПроверитьСопоставлениеКлассификаторов(ДокументСсылка, УникальныйИдентификатор) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ЕстьНеСопоставленныеТовары", Ложь);
	ВозвращаемоеЗначение.Вставить("НеСопоставленныеТовары",     Неопределено);
	
	ИмяТаблицы = "Документ" + "." + ДокументСсылка.Метаданные().Имя + "." + "Товары";
	ИмяТаблицыСерии = "Документ" + "." + ДокументСсылка.Метаданные().Имя + "." + "Серии";
	ЕстьТЧСерии = ДокументСсылка.Метаданные().ТабличныеЧасти.Найти("Серии") <> Неопределено;
	ЕстьРеквизитСерия = ДокументСсылка.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("Серия") <> Неопределено;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.НомерСтроки    КАК НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
		|	ТабличнаяЧасть.Серия          КАК Серия,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
		|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.НоменклатураОприходование,
		|	ТабличнаяЧасть.СерияОприходование,
		|	ТабличнаяЧасть.ХарактеристикаОприходование
		|ИЗ
		|	ИмяТаблицы КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
		|	И ТабличнаяЧасть.НоменклатураОприходование.АлкогольнаяПродукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.Характеристика
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = Товары.Номенклатура)
		|			И (СоответствиеНоменклатурыЕГАИС.Характеристика = Товары.Характеристика)
		|			И (СоответствиеНоменклатурыЕГАИС.Серия = Товары.Серия
		|				ИЛИ НЕ СоответствиеНоменклатурыЕГАИС.Серия В (&НезаполненныеЗначенияСерии)
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL ");
		
	ИначеЕсли ЕстьРеквизитСерия И НЕ ЕстьТЧСерии Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|	ТабличнаяЧасть.Серия КАК Серия,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ИмяТаблицы КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
		|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.Характеристика
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = Товары.Номенклатура
		|			И СоответствиеНоменклатурыЕГАИС.Характеристика = Товары.Характеристика
		|			И (СоответствиеНоменклатурыЕГАИС.Серия = Товары.Серия
		|				ИЛИ НЕ СоответствиеНоменклатурыЕГАИС.Серия В (&НезаполненныеЗначенияСерии)
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL");
		
	ИначеЕсли ЕстьРеквизитСерия И ЕстьТЧСерии Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|	ТабличнаяЧасть.Серия КАК Серия,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ИмяТаблицы КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
		|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	1 КАК НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|	ТабличнаяЧасть.Серия КАК Серия,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика
		|ИЗ
		|	ИмяТЧСерии КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
		|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.Характеристика
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = Товары.Номенклатура
		|			И СоответствиеНоменклатурыЕГАИС.Характеристика = Товары.Характеристика
		|			И (СоответствиеНоменклатурыЕГАИС.Серия = Товары.Серия
		|				ИЛИ НЕ СоответствиеНоменклатурыЕГАИС.Серия В (&НезаполненныеЗначенияСерии)
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL");
		
	Иначе
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ИмяТаблицы КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
		|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
		|;
		|
		|ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура,
		|	Товары.Характеристика
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = Товары.Номенклатура
		|			И СоответствиеНоменклатурыЕГАИС.Характеристика = Товары.Характеристика
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL");
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяТаблицы", ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяТЧСерии", ИмяТаблицыСерии);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("НезаполненныеЗначенияСерии", ИнтеграцияИС.НезаполненныеЗначенияОпределяемогоТипа("СерияНоменклатуры"));
	
	НеСопоставленныеТовары = Запрос.Выполнить().Выгрузить();
	ВозвращаемоеЗначение.ЕстьНеСопоставленныеТовары = НеСопоставленныеТовары.Количество() > 0;
	
	Если ВозвращаемоеЗначение.ЕстьНеСопоставленныеТовары Тогда
		ВозвращаемоеЗначение.НеСопоставленныеТовары = ПоместитьВоВременноеХранилище(НеСопоставленныеТовары, УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Получает тип склада.
//
// Параметры:
//  Склад - СправочникСсылка.Склады - склад для которого необходимо получить тип.
//
// Возвращаемое значение:
//   СправочникСсылка.Контрагенты - контрагент партнера по умолчанию.
//
Функция ТипСклада(Склад) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ТипСклада");
	
КонецФункции

// Получает контрагента по умолчанию.
//
// Параметры:
//  Партнер - СправочникСсылка.Партнеры - партнер для которого необходимо получить контрагента.
//
// Возвращаемое значение:
//   СправочникСсылка.Контрагенты - контрагент партнера по умолчанию.
//
Функция ПолучитьКонтрагентаПартнераПоУмолчанию(Партнер) Экспорт
	
	Возврат ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(Партнер);
	
КонецФункции

#КонецОбласти
