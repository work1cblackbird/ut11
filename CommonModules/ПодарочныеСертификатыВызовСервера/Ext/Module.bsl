
#Область ПрограммныйИнтерфейс

// Возвращает структуру с данными подарочного сертификата на конец дня текущей даты сеанса, включая границу.
//
// Параметры:
//  ПодарочныйСертификат - СправочникСсылка.ПодарочныеСертификаты - Подарочный сертификат.
//  ВидПодарочногоСертификата - СправочникСсылка.ВидыПодарочныхСертификатов - Вид подарочного сертификата.
//
// Возвращаемое значение:
//  см. ПодарочныеСертификатыВызовСервера.ИнициализироватьОписаниеПодарочногоСертификата
//
Функция ПолучитьДанныеПодарочногоСертификата(ПодарочныйСертификат, ВидПодарочногоСертификата = Неопределено) Экспорт
	
	СтруктураДанныхКарты = ИнициализироватьОписаниеПодарочногоСертификата();
	
	Запрос = Новый Запрос(ТекстЗапросаПолученияДанныхПодарочныхСертификатов());
	
	Запрос.УстановитьПараметр("Ссылка", ПодарочныйСертификат);
	Запрос.УстановитьПараметр("ВидПодарочногоСертификата", ВидПодарочногоСертификата);
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	ГраницаТекущаяДатаКонецДня = Новый Граница(КонецДня(ТекущаяДатаСеанса), ВидГраницы.Включая);
	Запрос.УстановитьПараметр("ГраницаТекущаяДатаКонецДня", ГраницаТекущаяДатаКонецДня);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса);
	Запрос.УстановитьПараметр("ТекущийДокумент", Неопределено);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить(); // РезультатЗапроса
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанныхКарты, Выборка);
	КонецЕсли;
	
	Возврат СтруктураДанныхКарты;
	
КонецФункции

// Возвращает соответствие, где ключом является ссылка на справочник Подарочные сертификаты, 
// а значением структура с данными подарочного сертификата.
//
// Параметры:
//  ПодарочныеСертификаты - Массив Из СправочникСсылка.ПодарочныеСертификаты - Подарочные сертификат.
//  ТекущаяДата - Дата, Неопределено - Если передана дата, то остатки и срез последих будут посчитаны на конец дня, включая границу,
//										иначе будет использован конец дня текущей даты сеанса.
//  ТекущийДокумент - ДокументСсылка, Неопределено - Если передана ссылка, то остатки и срез последних будут посчитаны на момент времени исключая границу;
//													При этом, если значение ТекущаяДата не задано, то будет использована ТекущаяДатаСеанса.
//
// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
//  * Ключ - СправочникСсылка.ПодарочныеСертификаты
//  * Значение - см. ПодарочныеСертификатыВызовСервера.ИнициализироватьОписаниеПодарочногоСертификата
//
Функция ПолучитьДанныеПодарочныхСертификатов(ПодарочныеСертификаты, ТекущаяДата = Неопределено, ТекущийДокумент = Неопределено) Экспорт
		
	ДанныеРезультата = Новый Соответствие();
	Если ПодарочныеСертификаты.Количество() Тогда
		Запрос = Новый Запрос(ТекстЗапросаПолученияДанныхПодарочныхСертификатов());
		
		Запрос.УстановитьПараметр("Ссылка", ПодарочныеСертификаты);
		Запрос.УстановитьПараметр("ВидПодарочногоСертификата", Неопределено);
		ТекущаяДатаСеанса = ТекущаяДатаСеанса();
		Если ЗначениеЗаполнено(ТекущаяДата) Тогда
			ТекущаяДатаСеанса = ТекущаяДата;
		КонецЕсли;
		ГраницаТекущаяДатаКонецДня = Новый Граница(КонецДня(ТекущаяДатаСеанса), ВидГраницы.Включая);
		ТекущийДокументСсылка = Неопределено;
		Если ЗначениеЗаполнено(ТекущийДокумент) Тогда
			ТекущийДокументСсылка = ТекущийДокумент;
			// Если передали ссылку на документ, то граница исключает граничное значение.
			ГраницаТекущаяДатаКонецДня = Новый Граница(Новый МоментВремени(ТекущаяДатаСеанса, ТекущийДокумент), ВидГраницы.Исключая);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса);
		Запрос.УстановитьПараметр("ГраницаТекущаяДатаКонецДня", ГраницаТекущаяДатаКонецДня);
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокументСсылка);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтруктураДанныхКарты = ИнициализироватьОписаниеПодарочногоСертификата();
			ЗаполнитьЗначенияСвойств(СтруктураДанныхКарты, Выборка);
			ДанныеРезультата.Вставить(Выборка.Ссылка, СтруктураДанныхКарты);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДанныеРезультата;

КонецФункции

// Возращает структуру параметров, которая используется при обработке кода подарочного сертификата.
//
// Возвращаемое значение:
//  Структура - Структура со свойствами: 
//   * Отборы - Структура - Дополнительные отборы при поиске подарочных сертификатов; 
//							может иметь свойства, например: Организация, Статус, Валюта, УчетПодарочныхСертификатов2_5;
//							если свойство РегистрироватьНовые установлено в значение Истина, то в методе ПодарочныеСертификатыВызовСервера.ОбработатьПолученныйКодНаСервере 
//							отбор по полю Статус отключается, так как оно не является ключевым для проверки уникальности подарочного сертификата.
//   * РегистрироватьНовые - Булево - Необходимость регистрации подарочных сертификатов, которые не были найдены по коду.
//
Функция ПараметрыОбработкиПолученногоКода() Экспорт
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("Отборы", Новый Структура);
	ПараметрыОбработки.Вставить("РегистрироватьНовые", Истина);
	
	Возврат ПараметрыОбработки;
	
КонецФункции
	
// Функция возвращает пустую структуру данных подарочного сертификата.
//
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * Ссылка - СправочникСсылка.ПодарочныеСертификаты - Подарочный сертификат.
//   * Штрихкод - Строка - Штрихкод.
//   * МагнитныйКод - Строка - Магнитный код.
//   * СерийныйНомер - Строка - Серийный номер.
//   * ВидПодарочногоСертификата - СправочникСсылка.ВидыПодарочныхСертификатов - Вид подарочного сертификата.
//   * ЧастичнаяОплата - Булево - Если Истина, то сертификат многоразовый
//   * Наименование - Строка - Наименование подарочного сертификата.
//   * ТипКарты - ПеречислениеСсылка.ТипыКарт - Тип карты.
//   * СтатусАктивации - Булево - Статус активации подарочного сертификата.
//   * СтатусИзИсторииПодарочныхСертификатов - ПеречислениеСсылка.СтатусыПодарочныхСертификатов - Статус подарочного сертификата из регистра История подарочных сертификатов.
//   * Аннулирован - Булево - Признак того, что сертификат аннулирован.
//   * ОформленВозврат - Булево - Признак того, что был оформлен возврат сертификата.
//   * Номинал - Число - Номинал подарочного сертификата.
//   * Остаток - Число - Остаток номинала подарочного сертификата.
//   * Валюта - СправочникСсылка.Валюты - Валюта подарочного сертификата.
//   * СегментНоменклатуры - СправочникСсылка.СегментыНоменклатуры - Сегмент номенклатуры подарочного сертификата.
//   * ПериодДействия - ПеречислениеСсылка.Периодичность - Период действия подарочного сертификата.
//   * КоличествоПериодовДействия - Число - Количество периодов действия.
//   * ДатаНачалаДействия - Дата - Дата начала действия.
//   * ДатаОкончанияДействия - Дата - Дата окончания действия.
//   * ОбъектРасчетов - СправочникСсылка.ОбъектыРасчетов - Объект расчетов
//   * Партнер - СправочникСсылка.Партнеры - Партнер из объекта расчетов
//   * СтатьяДвиженияДенежныхСредствПродажа - СправочникСсылка.СтатьиДвиженияДенежныхСредств - 
//   * СтатьяДвиженияДенежныхСредствВозврат - СправочникСсылка.СтатьиДвиженияДенежныхСредств - 
//   * СтатьяДоходов - ПланВидовХарактеристикСсылка.СтатьиДоходов - 
//   * АналитикаДоходов - Характеристика.СтатьиДоходов -
//
Функция ИнициализироватьОписаниеПодарочногоСертификата() Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("Ссылка");
	СтруктураДанных.Вставить("Штрихкод");
	СтруктураДанных.Вставить("МагнитныйКод");
	СтруктураДанных.Вставить("СерийныйНомер");
	СтруктураДанных.Вставить("ВидПодарочногоСертификата");
	СтруктураДанных.Вставить("Наименование");
	СтруктураДанных.Вставить("ТипКарты");
	СтруктураДанных.Вставить("СтатусАктивации");
	СтруктураДанных.Вставить("СтатусИзИсторииПодарочныхСертификатов");
	СтруктураДанных.Вставить("Номинал");
	СтруктураДанных.Вставить("Остаток");
	СтруктураДанных.Вставить("Валюта");
	СтруктураДанных.Вставить("СегментНоменклатуры");
	СтруктураДанных.Вставить("ПериодДействия");
	СтруктураДанных.Вставить("КоличествоПериодовДействия");
	СтруктураДанных.Вставить("ДатаНачалаДействия");
	СтруктураДанных.Вставить("ДатаОкончанияДействия");
	СтруктураДанных.Вставить("УчетПодарочныхСертификатов2_5");
	СтруктураДанных.Вставить("Организация");
	СтруктураДанных.Вставить("СтатьяДвиженияДенежныхСредствПродажа");
	СтруктураДанных.Вставить("СтатьяДвиженияДенежныхСредствВозврат");	
	СтруктураДанных.Вставить("ОбъектРасчетов");
	СтруктураДанных.Вставить("Партнер");
	СтруктураДанных.Вставить("ДокументПродажи");
	СтруктураДанных.Вставить("Аннулирован");
	СтруктураДанных.Вставить("ЧастичнаяОплата");
	СтруктураДанных.Вставить("ОформленВозврат");
	СтруктураДанных.Вставить("СтатьяДоходов");
	СтруктураДанных.Вставить("АналитикаДоходов");
	
	Возврат СтруктураДанных;
	
КонецФункции

// Процедура записывает в базу данных подарочный сертификат на основании
// передаваемых данных о коде и виде сертификата.
//
// Параметры:
//  ВидПодарочногоСертификата - СправочникСсылка.ВидыПодарочныхСертификатов - Вид подарочного сертификата.
//  ТипКода - ПеречислениеСсылка.ТипыКодовКарт - Тип кода карты.
//  МагнитныйКод - Строка - Магнитный код.
//  Штрихкод - Строка - Штрихкод.
//
// Возвращаемое значение:
//  СправочникСсылка.ПодарочныеСертификаты - Зарегистрированный подарочный сертификат.
//
Функция ЗарегистрироватьПодарочныйСертификатУпрощенно(ВидПодарочногоСертификата, ТипКода, МагнитныйКод, Штрихкод) Экспорт
	
	СтруктураДанныхПодарочногоСертификата = ИнициализироватьОписаниеПодарочногоСертификата();
	СтруктураДанныхПодарочногоСертификата.ВидПодарочногоСертификата = ВидПодарочногоСертификата;
	Если ТипКода = ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.МагнитныйКод") Тогда
		СтруктураДанныхПодарочногоСертификата.МагнитныйКод = МагнитныйКод;
	ИначеЕсли ТипКода = ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.Штрихкод") Тогда
		СтруктураДанныхПодарочногоСертификата.Штрихкод = Штрихкод;
	КонецЕсли;
	
	Возврат ПодарочныеСертификатыСервер.ЗарегистрироватьПодарочныйСертификат(СтруктураДанныхПодарочногоСертификата);
	
КонецФункции

//Возвращает адрес во временном хранилище с данными табличной части документа для анализа возможности оплаты подарочными сертификатами.
//
// Параметры:
//  Ссылка - ДокументСсылка, СправочникСсылка - 
//  УникальныйИдентификатор - УникальныйИдентификатор - Уникальный идентификатор для привязки во временном хранилище.
//
// Возвращаемое значение:
//  Строка, Неопределено - Адрес во временном хранилище
//
Функция АдресТабличнойЧастиТоварыДляАнализаВозможностиОплатыПодарочнымиСертификатами(Знач Ссылка, Знач УникальныйИдентификатор) Экспорт
	АдресВоВременномХранилище = Неопределено;
	
	ТоварыДляАнализа = ПодарочныеСертификатыСервер.ТоварыДляАнализаВозможностиОплатыПодарочнымиСертификатами(Ссылка);
	Если ТоварыДляАнализа <> Неопределено  Тогда
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ТоварыДляАнализа, УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат АдресВоВременномХранилище;
КонецФункции

// Процедура записывает в базу данных подарочный сертификат на основании
// передаваемых данных о сертификате.
//
// Параметры:
//  СтруктураДанныхПодарочногоСертификата - см. ПодарочныеСертификатыВызовСервера.ИнициализироватьОписаниеПодарочногоСертификата
//
// Возвращаемое значение:
//  СправочникСсылка.ПодарочныеСертификаты - Зарегистрированный подарочный сертифика.
//
Функция ЗарегистрироватьПодарочныйСертификат(СтруктураДанныхПодарочногоСертификата) Экспорт
	
	Возврат ПодарочныеСертификатыСервер.ЗарегистрироватьПодарочныйСертификат(СтруктураДанныхПодарочногоСертификата);
	
КонецФункции

// Функция выполняет поиск подарочных сертификатов по коду.
//
// Параметры:
//  Данные - Строка - считанный код.
//  ТипКодаКарты - ПеречислениеСсылка.ТипыКодовКарт - тип считанного кода.
//	ДополнительныеПараметры - см. ПодарочныеСертификатыВызовСервера.ПараметрыОбработкиПолученногоКода
//
// Возвращаемое значение:
//  Массив Из СправочникСсылка.ПодарочныеСертификаты - Найденные подарочные сертификаты.
//
Функция ОбработатьПолученныйКодНаСервере(Данные, ТипКодаКарты, ДополнительныеПараметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НайденныеПодарочныеСертификаты = Новый Массив;
	
	Отборы = Новый Структура(Новый ФиксированнаяСтруктура(ДополнительныеПараметры.Отборы));	
	Если ДополнительныеПараметры.РегистрироватьНовые И Отборы.Свойство("Статус") Тогда
		Отборы.Удалить("Статус");
	КонецЕсли;
	
	Если ТипКодаКарты = Перечисления.ТипыКодовКарт.МагнитныйКод Тогда
		Если ПодарочныеСертификатыКлиентСервер.НеобходимаПредобработкаДанных(Данные, ТипКодаКарты) Тогда
			ТаблицаПодарочныеСертификаты = НайтиПодарочныеСертификатыПоДаннымСоСчитывателяМагнитныхКарт(Данные, Отборы);
		Иначе
			ТаблицаПодарочныеСертификаты = НайтиПодарочныеСертификатыПоМагнитномуКоду(Данные, Отборы);
		КонецЕсли;
	Иначе
		ТаблицаПодарочныеСертификаты = НайтиПодарочныеСертификатыПоШтрихкоду(Данные, Отборы);
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из ТаблицаПодарочныеСертификаты.ЗарегистрированныеПодарочныеСертификаты Цикл
		
		Если Не ДополнительныеПараметры.РегистрироватьНовые Или 
				ДополнительныеПараметры.РегистрироватьНовые И СтрокаТЧ.СтатусАктивации = Ложь Тогда
			НоваяСтрока = ИнициализироватьОписаниеПодарочногоСертификата();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			
			Если СтрокаТЧ.СтатусАктивации = Истина Тогда 
				НоваяСтрока.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1, Остаток: %2 %3'"), Строка(СтрокаТЧ.ВидПодарочногоСертификата), СтрокаТЧ.Остаток, СтрокаТЧ.Валюта);
			Иначе
				НоваяСтрока.Наименование = Строка(СтрокаТЧ.ВидПодарочногоСертификата);
			КонецЕсли;
			
			НайденныеПодарочныеСертификаты.Добавить(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДополнительныеПараметры.РегистрироватьНовые Тогда
		Для Каждого СтрокаТЧ Из ТаблицаПодарочныеСертификаты.НеЗарегистрированныеПодарочныеСертификаты Цикл
			
			НоваяСтрока = ИнициализироватьОписаниеПодарочногоСертификата();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			
			НоваяСтрока.Наименование = Строка(СтрокаТЧ.ВидПодарочногоСертификата);
			
			НайденныеПодарочныеСертификаты.Добавить(НоваяСтрока);
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат НайденныеПодарочныеСертификаты;
	
КонецФункции

#Область ПоискПодарочныхСертификатов

// Функция выполняет поиск подарочных сертификатов по данным, полученным из считывателя
// магнитных карт.
//
// Параметры:
//  Данные - Массив из Строка - Данные, полученные из считывателя магнитных карт.
//  Отборы - Структура -
//
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * ЗарегистрированныеПодарочныеСертификаты - Массив из см. ИнициализироватьОписаниеПодарочногоСертификата
//   * НеЗарегистрированныеПодарочныеСертификаты - Массив из см. ИнициализироватьОписаниеПодарочногоСертификата
//
Функция НайтиПодарочныеСертификатыПоДаннымСоСчитывателяМагнитныхКарт(Данные, Отборы = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗарегистрированныеПодарочныеСертификаты = Новый Массив;
	НеЗарегистрированныеПодарочныеСертификаты = Новый Массив;
	
	РасшифрованныеДанные = Данные[1][3];
	Если РасшифрованныеДанные <> Неопределено Тогда
		Для Каждого Структура Из РасшифрованныеДанные Цикл
			
			ШаблонМагнитнойКарты = Структура.Шаблон;
			КодКарты             = Данные[0];
			Для Каждого ДанныеПоля Из Структура.ДанныеДорожек Цикл
				Если ДанныеПоля.Поле = Перечисления.ПоляШаблоновМагнитныхКарт.Код Тогда
					КодКарты = ДанныеПоля.ЗначениеПоля;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка КАК Ссылка,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.ПериодДействия КАК ПериодДействия,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.КоличествоПериодовДействия КАК КоличествоПериодовДействия,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.Номинал КАК Номинал,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.Валюта КАК Валюта,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.ТипКарты КАК ТипКарты,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.СегментНоменклатуры КАК СегментНоменклатуры,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.УчетПодарочныхСертификатов2_5 КАК УчетПодарочныхСертификатов2_5,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.ЧастичнаяОплата КАК ЧастичнаяОплата,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.СтатьяДвиженияДенежныхСредствПродажа КАК СтатьяДвиженияДенежныхСредствПродажа,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.СтатьяДвиженияДенежныхСредствВозврат КАК СтатьяДвиженияДенежныхСредствВозврат,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.СтатьяДоходов КАК СтатьяДоходов,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.АналитикаДоходов КАК АналитикаДоходов,
			|	ШаблоныКодовПодарочныхСертификатов.Ссылка.Организация КАК Организация
			|ПОМЕСТИТЬ ВидыПодарочныхСертификатов
			|ИЗ
			|	Справочник.ВидыПодарочныхСертификатов.ШаблоныКодовПодарочныхСертификатов КАК ШаблоныКодовПодарочныхСертификатов
			|ГДЕ
			|	ШаблоныКодовПодарочныхСертификатов.НачалоДиапазонаМагнитногоКода <= &КодКарты
			|	И ШаблоныКодовПодарочныхСертификатов.КонецДиапазонаМагнитногоКода >= &КодКарты
			|	И ШаблоныКодовПодарочныхСертификатов.ДлинаМагнитногоКода = &ДлинаКода
			|	И ШаблоныКодовПодарочныхСертификатов.ШаблонМагнитнойКарты = &ШаблонМагнитнойКарты
			|	И &УсловиеОтбораВалюта
			|	И &УсловиеОтбораУчетПодарочныхСертификатов2_5
			|	И ШаблоныКодовПодарочныхСертификатов.Ссылка.ПометкаУдаления = ЛОЖЬ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПодарочныеСертификаты.Ссылка КАК Ссылка,
			|	ПодарочныеСертификаты.Наименование КАК Наименование,
			|	ПодарочныеСертификаты.МагнитныйКод КАК МагнитныйКод,
			|	ПодарочныеСертификаты.Штрихкод КАК Штрихкод,
			|	ПодарочныеСертификаты.Код КАК СерийныйНомер,
			|	ЕСТЬNULL(ОбъектыРасчетов.Ссылка, ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)) КАК ОбъектРасчетов,
			|	ЕСТЬNULL(ОбъектыРасчетов.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) КАК Партнер,
			|	ВЫБОР
			|		КОГДА ВидыПодарочныхСертификатов.УчетПодарочныхСертификатов2_5
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПустаяСсылка)
			|		ИНАЧЕ ЕСТЬNULL(ИсторияПодарочныхСертификатов.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.НеАктивирован))
			|	КОНЕЦ КАК СтатусИзИсторииПодарочныхСертификатов,
			|	ЕСТЬNULL(АктивацияПодарочныхСертификатов.Активность, ЛОЖЬ) КАК СтатусАктивации,
			|	ВидыПодарочныхСертификатов.Ссылка КАК ВидПодарочногоСертификата,
			|	ВидыПодарочныхСертификатов.ПериодДействия КАК ПериодДействия,
			|	ВидыПодарочныхСертификатов.КоличествоПериодовДействия КАК КоличествоПериодовДействия,
			|	ВидыПодарочныхСертификатов.Номинал КАК Номинал,
			|	ВидыПодарочныхСертификатов.Валюта КАК Валюта,
			|	ВидыПодарочныхСертификатов.ТипКарты КАК ТипКарты,
			|	ВидыПодарочныхСертификатов.СегментНоменклатуры КАК СегментНоменклатуры,
			|	ВидыПодарочныхСертификатов.УчетПодарочныхСертификатов2_5 КАК УчетПодарочныхСертификатов2_5,
			|	ВидыПодарочныхСертификатов.ЧастичнаяОплата КАК ЧастичнаяОплата,
			|	ВидыПодарочныхСертификатов.СтатьяДвиженияДенежныхСредствПродажа КАК СтатьяДвиженияДенежныхСредствПродажа,
			|	ВидыПодарочныхСертификатов.СтатьяДвиженияДенежныхСредствВозврат КАК СтатьяДвиженияДенежныхСредствВозврат,
			|	ВидыПодарочныхСертификатов.СтатьяДоходов КАК СтатьяДоходов,
			|	ВидыПодарочныхСертификатов.АналитикаДоходов КАК АналитикаДоходов,
			|	ЕСТЬNULL(АктивацияПодарочныхСертификатов.Организация, ВЫБОР
			|			КОГДА ВидыПодарочныхСертификатов.УчетПодарочныхСертификатов2_5
			|				ТОГДА ВидыПодарочныхСертификатов.Организация
			|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|		КОНЕЦ) КАК Организация,
			|	ЕСТЬNULL(АктивацияПодарочныхСертификатов.ДатаНачалаДействия, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаНачалаДействия,
			|	ЕСТЬNULL(АктивацияПодарочныхСертификатов.ДатаОкончанияДействия, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияДействия
			|ПОМЕСТИТЬ ПодарочныеСертификаты
			|ИЗ
			|	Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыПодарочныхСертификатов КАК ВидыПодарочныхСертификатов
			|		ПО (ВидыПодарочныхСертификатов.Ссылка = ПодарочныеСертификаты.Владелец)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АктивацияПодарочныхСертификатов КАК АктивацияПодарочныхСертификатов
			|		ПО (АктивацияПодарочныхСертификатов.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияПодарочныхСертификатов.СрезПоследних(, ) КАК ИсторияПодарочныхСертификатов
			|		ПО (ИсторияПодарочныхСертификатов.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
			|		ПО (ОбъектыРасчетов.Объект = ПодарочныеСертификаты.Ссылка)
			|			И НЕ ОбъектыРасчетов.ПометкаУдаления
			|ГДЕ
			|	ИСТИНА
			|	И ПодарочныеСертификаты.МагнитныйКод = &КодКарты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПодарочныеСертификаты.Ссылка КАК Ссылка,
			|	ПодарочныеСертификаты.ОбъектРасчетов КАК ОбъектРасчетов
			|ПОМЕСТИТЬ ПодарочныеСертификатыСтарогоОбразца
			|ИЗ
			|	ПодарочныеСертификаты КАК ПодарочныеСертификаты
			|ГДЕ
			|	НЕ ПодарочныеСертификаты.УчетПодарочныхСертификатов2_5
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПодарочныеСертификаты.Ссылка КАК Ссылка,
			|	ПодарочныеСертификаты.ОбъектРасчетов КАК ОбъектРасчетов
			|ПОМЕСТИТЬ ПодарочныеСертификатыНовогоОбразца
			|ИЗ
			|	ПодарочныеСертификаты КАК ПодарочныеСертификаты
			|ГДЕ
			|	ПодарочныеСертификаты.УчетПодарочныхСертификатов2_5
			|	И НЕ ПодарочныеСертификаты.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОбъектРасчетов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
			|	ОстаткиСертификатов.СуммаОстаток
			|ПОМЕСТИТЬ ОстаткиПодарочныхСертификатов
			|ИЗ
			|	РегистрНакопления.ПодарочныеСертификаты.Остатки(
			|		,
			|		ПодарочныйСертификат В
			|			(ВЫБРАТЬ
			|				Т.Ссылка
			|			ИЗ
			|				ПодарочныеСертификатыСтарогоОбразца КАК Т)) КАК ОстаткиСертификатов
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОстаткиСертификатов.ОбъектРасчетов.Объект КАК ПодарочныйСертификат,
			|	ВЫБОР КОГДА ОстаткиСертификатов.СуммаОстаток < 0 
			|		ТОГДА -ОстаткиСертификатов.СуммаОстаток
			|		ИНАЧЕ ОстаткиСертификатов.СуммаОстаток
			|	КОНЕЦ	
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами.Остатки(
			|		,
			|		ОбъектРасчетов В
			|			(ВЫБРАТЬ
			|				Т.ОбъектРасчетов
			|			ИЗ
			|				ПодарочныеСертификатыНовогоОбразца КАК Т)) КАК ОстаткиСертификатов
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ПодарочныйСертификат
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПодарочныеСертификаты.Ссылка КАК ПодарочныйСертификат,
			|	ВЫБОР КОГДА (ПодарочныеСертификаты.Ссылка, ИСТИНА) 
			|		В (ВЫБРАТЬ ПЕРВЫЕ 1
			|				Т.ПодарочныйСертификат, 
			|				ИСТИНА 
			|			ИЗ РегистрНакопления.ПодарочныеСертификаты КАК Т
			|			ГДЕ
			|				Т.Регистратор ССЫЛКА Документ.АннулированиеПодарочныхСертификатов
			|				И Т.Активность
			|				И Т.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК Аннулирован,
			|	ВЫБОР КОГДА (ПодарочныеСертификаты.Ссылка, ИСТИНА) 
			|		В (ВЫБРАТЬ ПЕРВЫЕ 1
			|				Т.ПодарочныйСертификат, 
			|				ИСТИНА 
			|			ИЗ РегистрНакопления.ПодарочныеСертификаты КАК Т
			|			ГДЕ
			|				Т.Регистратор ССЫЛКА Документ.ВозвратПодарочныхСертификатов
			|				И Т.Активность
			|				И Т.Сумма <> 0
			|				И Т.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ОформленВозврат
			|ПОМЕСТИТЬ СостояниеПодарочныхСертификатов
			|ИЗ
			|	ПодарочныеСертификатыСтарогоОбразца КАК ПодарочныеСертификаты
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПодарочныеСертификаты.Ссылка КАК ПодарочныйСертификат,
			|	ВЫБОР КОГДА (ПодарочныеСертификаты.ОбъектРасчетов, ИСТИНА) 
			|		В (ВЫБРАТЬ ПЕРВЫЕ 1
			|				Т.ОбъектРасчетов, 
			|				ИСТИНА 
			|			ИЗ РегистрНакопления.РасчетыСКлиентами КАК Т
			|			ГДЕ
			|				Т.Регистратор ССЫЛКА Документ.АннулированиеПодарочныхСертификатов
			|				И Т.Активность
			|				И Т.ОбъектРасчетов = ПодарочныеСертификаты.ОбъектРасчетов) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК Аннулирован,
			|	ВЫБОР КОГДА (ПодарочныеСертификаты.ОбъектРасчетов, ИСТИНА) 
			|		В (ВЫБРАТЬ ПЕРВЫЕ 1
			|				Т.ОбъектРасчетов, 
			|				ИСТИНА 
			|			ИЗ РегистрНакопления.РасчетыСКлиентами КАК Т
			|			ГДЕ
			|				(Т.Регистратор ССЫЛКА Документ.ВозвратПодарочныхСертификатов
			|				ИЛИ Т.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
			|				ИЛИ Т.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
			|				ИЛИ Т.Регистратор ССЫЛКА Документ.ОперацияПоПлатежнойКарте
			|				ИЛИ Т.Регистратор ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств)
			|				И Т.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
			|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса))
			|				И Т.Активность
			|				И Т.Сумма <> 0
			|				И Т.ОбъектРасчетов = ПодарочныеСертификаты.ОбъектРасчетов) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ОформленВозврат
			|ИЗ
			|	ПодарочныеСертификатыНовогоОбразца КАК ПодарочныеСертификаты
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ПодарочныйСертификат
			|
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	1 КАК Порядок,
			|	ПодарочныеСертификаты.Ссылка КАК Ссылка,
			|	ПодарочныеСертификаты.Наименование КАК Наименование,
			|	ПодарочныеСертификаты.МагнитныйКод КАК МагнитныйКод,
			|	ПодарочныеСертификаты.Штрихкод КАК Штрихкод,
			|	ПодарочныеСертификаты.СерийныйНомер КАК СерийныйНомер,
			|	ПодарочныеСертификаты.ДатаНачалаДействия КАК ДатаНачалаДействия,
			|	ПодарочныеСертификаты.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
			|	ПодарочныеСертификаты.СтатусИзИсторииПодарочныхСертификатов КАК СтатусИзИсторииПодарочныхСертификатов,
			|	ПодарочныеСертификаты.СтатусАктивации КАК СтатусАктивации,
			|	ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) КАК Остаток,
			|	ПодарочныеСертификаты.ВидПодарочногоСертификата КАК ВидПодарочногоСертификата,
			|	ПодарочныеСертификаты.ПериодДействия КАК ПериодДействия,
			|	ПодарочныеСертификаты.КоличествоПериодовДействия КАК КоличествоПериодовДействия,
			|	ПодарочныеСертификаты.Номинал КАК Номинал,
			|	ПодарочныеСертификаты.Валюта КАК Валюта,
			|	ПодарочныеСертификаты.ТипКарты КАК ТипКарты,
			|	ПодарочныеСертификаты.СегментНоменклатуры КАК СегментНоменклатуры,
			|	ПодарочныеСертификаты.УчетПодарочныхСертификатов2_5 КАК УчетПодарочныхСертификатов2_5,
			|	ПодарочныеСертификаты.ЧастичнаяОплата КАК ЧастичнаяОплата,
			|	ПодарочныеСертификаты.ОбъектРасчетов КАК ОбъектРасчетов,
			|	ПодарочныеСертификаты.Партнер КАК Партнер,
			|	ПодарочныеСертификаты.СтатьяДвиженияДенежныхСредствПродажа КАК СтатьяДвиженияДенежныхСредствПродажа,
			|	ПодарочныеСертификаты.СтатьяДвиженияДенежныхСредствВозврат КАК СтатьяДвиженияДенежныхСредствВозврат,
			|	ПодарочныеСертификаты.СтатьяДоходов КАК СтатьяДоходов,
			|	ПодарочныеСертификаты.АналитикаДоходов КАК АналитикаДоходов,
			|	ПодарочныеСертификаты.Организация КАК Организация,
			|	ЕСТЬNULL(СостояниеПодарочныхСертификатов.ОформленВозврат, ЛОЖЬ) КАК ОформленВозврат,
			|	ЕСТЬNULL(СостояниеПодарочныхСертификатов.Аннулирован, ЛОЖЬ) КАК Аннулирован
			|ИЗ
			|	ПодарочныеСертификаты КАК ПодарочныеСертификаты
			|   ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПодарочныхСертификатов КАК ОстаткиСертификатов
			|	ПО ОстаткиСертификатов.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка
			|	ЛЕВОЕ СОЕДИНЕНИЕ СостояниеПодарочныхСертификатов КАК СостояниеПодарочныхСертификатов
			|	ПО ПодарочныеСертификаты.Ссылка = СостояниеПодарочныхСертификатов.ПодарочныйСертификат
			|ГДЕ
			|	НЕ ПодарочныеСертификаты.УчетПодарочныхСертификатов2_5
			|	И &УсловиеОтбораОрганизацияПоТипуОперации
			|	И &УсловиеОтбораСтатусИзИсторииПодарочныхСертификатов
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	1 КАК Порядок,
			|	ПодарочныеСертификаты.Ссылка КАК Ссылка,
			|	ПодарочныеСертификаты.Наименование КАК Наименование,
			|	ПодарочныеСертификаты.МагнитныйКод КАК МагнитныйКод,
			|	ПодарочныеСертификаты.Штрихкод КАК Штрихкод,
			|	ПодарочныеСертификаты.СерийныйНомер КАК СерийныйНомер,
			|	ПодарочныеСертификаты.ДатаНачалаДействия КАК ДатаНачалаДействия,
			|	ПодарочныеСертификаты.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
			|	ПодарочныеСертификаты.СтатусИзИсторииПодарочныхСертификатов КАК СтатусИзИсторииПодарочныхСертификатов,
			|	ПодарочныеСертификаты.СтатусАктивации КАК СтатусАктивации,
			|	ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) КАК Остаток,
			|	ПодарочныеСертификаты.ВидПодарочногоСертификата КАК ВидПодарочногоСертификата,
			|	ПодарочныеСертификаты.ПериодДействия КАК ПериодДействия,
			|	ПодарочныеСертификаты.КоличествоПериодовДействия КАК КоличествоПериодовДействия,
			|	ПодарочныеСертификаты.Номинал КАК Номинал,
			|	ПодарочныеСертификаты.Валюта КАК Валюта,
			|	ПодарочныеСертификаты.ТипКарты КАК ТипКарты,
			|	ПодарочныеСертификаты.СегментНоменклатуры КАК СегментНоменклатуры,
			|	ПодарочныеСертификаты.УчетПодарочныхСертификатов2_5 КАК УчетПодарочныхСертификатов2_5,
			|	ПодарочныеСертификаты.ЧастичнаяОплата КАК ЧастичнаяОплата,
			|	ПодарочныеСертификаты.ОбъектРасчетов КАК ОбъектРасчетов,
			|	ПодарочныеСертификаты.Партнер КАК Партнер,
			|	ПодарочныеСертификаты.СтатьяДвиженияДенежныхСредствПродажа КАК СтатьяДвиженияДенежныхСредствПродажа,
			|	ПодарочныеСертификаты.СтатьяДвиженияДенежныхСредствВозврат КАК СтатьяДвиженияДенежныхСредствВозврат,
			|	ПодарочныеСертификаты.СтатьяДоходов КАК СтатьяДоходов,
			|	ПодарочныеСертификаты.АналитикаДоходов КАК АналитикаДоходов,
			|	ПодарочныеСертификаты.Организация КАК Организация,
			|	ЕСТЬNULL(СостояниеПодарочныхСертификатов.ОформленВозврат, ЛОЖЬ) КАК ОформленВозврат,
			|	ЕСТЬNULL(СостояниеПодарочныхСертификатов.Аннулирован, ЛОЖЬ) КАК Аннулирован
			|ИЗ
			|	ПодарочныеСертификаты КАК ПодарочныеСертификаты
			|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПодарочныхСертификатов КАК ОстаткиСертификатов
			|		ПО (ОстаткиСертификатов.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ СостояниеПодарочныхСертификатов КАК СостояниеПодарочныхСертификатов
			|		ПО ПодарочныеСертификаты.Ссылка = СостояниеПодарочныхСертификатов.ПодарочныйСертификат
			|ГДЕ
			|	ПодарочныеСертификаты.УчетПодарочныхСертификатов2_5
			|	И &УсловиеОтбораОрганизация
			|	И &УсловиеОтбораПоТипуОперации
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	2,
			|	ЗНАЧЕНИЕ(Справочник.ПодарочныеСертификаты.ПустаяСсылка),
			|	НЕОПРЕДЕЛЕНО,
			|	&КодКарты,
			|	"""",
			|	НЕОПРЕДЕЛЕНО,
			|	НЕОПРЕДЕЛЕНО,
			|	НЕОПРЕДЕЛЕНО,
			|	ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПустаяСсылка),
			|	ЛОЖЬ,
			|	0,
			|	ВидыПодарочныхСертификатов.Ссылка,
			|	ВидыПодарочныхСертификатов.ПериодДействия,
			|	ВидыПодарочныхСертификатов.КоличествоПериодовДействия,
			|	ВидыПодарочныхСертификатов.Номинал,
			|	ВидыПодарочныхСертификатов.Валюта,
			|	ВидыПодарочныхСертификатов.ТипКарты,
			|	ВидыПодарочныхСертификатов.СегментНоменклатуры,
			|	ВидыПодарочныхСертификатов.УчетПодарочныхСертификатов2_5,
			|	ВидыПодарочныхСертификатов.ЧастичнаяОплата,
			|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка),
			|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
			|	ВидыПодарочныхСертификатов.СтатьяДвиженияДенежныхСредствПродажа,
			|	ВидыПодарочныхСертификатов.СтатьяДвиженияДенежныхСредствВозврат,
			|	ВидыПодарочныхСертификатов.СтатьяДоходов КАК СтатьяДоходов,
			|	ВидыПодарочныхСертификатов.АналитикаДоходов КАК АналитикаДоходов,
			|	ЕСТЬNULL(Организации.Ссылка, ВидыПодарочныхСертификатов.Организация),
			|	ЛОЖЬ,
			|	ЛОЖЬ
			|ИЗ
			|	ВидыПодарочныхСертификатов КАК ВидыПодарочныхСертификатов
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
			|		ПО (&УсловиеСоединенияПоОрганизацииПоТипуОперации)
			|ГДЕ
			|	НЕ ВидыПодарочныхСертификатов.Ссылка В
			|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|					Т.ВидПодарочногоСертификата
			|				ИЗ
			|					ПодарочныеСертификаты КАК Т)
			|	И НЕ ВидыПодарочныхСертификатов.УчетПодарочныхСертификатов2_5
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	2,
			|	ЗНАЧЕНИЕ(Справочник.ПодарочныеСертификаты.ПустаяСсылка),
			|	НЕОПРЕДЕЛЕНО,
			|	&КодКарты,
			|	"""",
			|	НЕОПРЕДЕЛЕНО,
			|	НЕОПРЕДЕЛЕНО,
			|	НЕОПРЕДЕЛЕНО,
			|	ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПустаяСсылка),
			|	ЛОЖЬ,
			|	0,
			|	ВидыПодарочныхСертификатов.Ссылка,
			|	ВидыПодарочныхСертификатов.ПериодДействия,
			|	ВидыПодарочныхСертификатов.КоличествоПериодовДействия,
			|	ВидыПодарочныхСертификатов.Номинал,
			|	ВидыПодарочныхСертификатов.Валюта,
			|	ВидыПодарочныхСертификатов.ТипКарты,
			|	ВидыПодарочныхСертификатов.СегментНоменклатуры,
			|	ВидыПодарочныхСертификатов.УчетПодарочныхСертификатов2_5,
			|	ВидыПодарочныхСертификатов.ЧастичнаяОплата,
			|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка),
			|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
			|	ВидыПодарочныхСертификатов.СтатьяДвиженияДенежныхСредствПродажа,
			|	ВидыПодарочныхСертификатов.СтатьяДвиженияДенежныхСредствВозврат,
			|	ВидыПодарочныхСертификатов.СтатьяДоходов КАК СтатьяДоходов,
			|	ВидыПодарочныхСертификатов.АналитикаДоходов КАК АналитикаДоходов,
			|	ВидыПодарочныхСертификатов.Организация,
			|	ЛОЖЬ,
			|	ЛОЖЬ
			|ИЗ
			|	ВидыПодарочныхСертификатов КАК ВидыПодарочныхСертификатов
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
			|		ПО (&УсловиеСоединенияПоОрганизации)
			|ГДЕ
			|	НЕ ВидыПодарочныхСертификатов.Ссылка В
			|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|					Т.ВидПодарочногоСертификата
			|				ИЗ
			|					ПодарочныеСертификаты КАК Т)
			|	И ВидыПодарочныхСертификатов.УчетПодарочныхСертификатов2_5
			|	И &УсловиеОтбораВидаПодарочногоСертификатаПоОрганизации
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок");
			
			Запрос.УстановитьПараметр("ШаблонМагнитнойКарты", ШаблонМагнитнойКарты);
			Запрос.УстановитьПараметр("КодКарты",             КодКарты);
			Запрос.УстановитьПараметр("ДлинаКода",            СтрДлина(КодКарты));
			
			УсловияОтбора = Отборы;
			Если Не ТипЗнч(Отборы) = Тип("Структура") Тогда
				УсловияОтбора = Новый Структура;
			КонецЕсли;
			
			ТекущаяДатаСеанса = ТекущаяДатаСеанса();
			Если УсловияОтбора.Свойство("Дата") И ЗначениеЗаполнено(УсловияОтбора.Дата) Тогда
				ТекущаяДатаСеанса = УсловияОтбора.Дата;
			КонецЕсли;
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса);
			
			ТекстЗаменыУсловияОтбораПоТипуОперации = "ИСТИНА";
			Если УсловияОтбора.Свойство("ТипОперации") Тогда
				Если УсловияОтбора.ТипОперации = 1 Тогда
				// Продажа
					ТекстЗаменыУсловияОтбораПоТипуОперации = "НЕ ПодарочныеСертификаты.СтатусАктивации";
				ИначеЕсли УсловияОтбора.ТипОперации = 2 Тогда
				// Возврат
					ТекстЗаменыУсловияОтбораПоТипуОперации = "ПодарочныеСертификаты.СтатусАктивации
					|	И ЕСТЬNULL(СостояниеПодарочныхСертификатов.ОформленВозврат, ЛОЖЬ) = ЛОЖЬ
					|	И ПодарочныеСертификаты.ДатаОкончанияДействия >= &ТекущаяДата 
					|	И ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) = ПодарочныеСертификаты.Номинал";
				ИначеЕсли УсловияОтбора.ТипОперации = 3 Тогда
				// Оплата
					ТекстЗаменыУсловияОтбораПоТипуОперации = "ПодарочныеСертификаты.СтатусАктивации 
					|	И ПодарочныеСертификаты.ДатаНачалаДействия <= &ТекущаяДата И ПодарочныеСертификаты.ДатаОкончанияДействия >= &ТекущаяДата 
					|	И (ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) > 0 И ПодарочныеСертификаты.ЧастичнаяОплата
					|		ИЛИ ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) = ПодарочныеСертификаты.Номинал И НЕ ПодарочныеСертификаты.ЧастичнаяОплата)";
				ИначеЕсли УсловияОтбора.ТипОперации = 4 Тогда
				// Аннулирование
					ТекстЗаменыУсловияОтбораПоТипуОперации = "ПодарочныеСертификаты.СтатусАктивации
					|	И ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) > 0
					|	И (ПодарочныеСертификаты.ЧастичнаяОплата = ЛОЖЬ И 
					|			ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) <= ПодарочныеСертификаты.Номинал
					|		ИЛИ ПодарочныеСертификаты.ЧастичнаяОплата = ИСТИНА)";
				КонецЕсли;
			КонецЕсли;
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбораПоТипуОперации", ТекстЗаменыУсловияОтбораПоТипуОперации);
			
			ТекстЗаменыУсловияОтбора = "ИСТИНА";
			ТекстЗаменыУсловияОтбораПоТипуОперации = "ИСТИНА";
			ТекстЗаменыУсловияОтбораПоВиду = "ИСТИНА";
			ТекстЗаменыУсловияСоединенияПоТипуОперации = "ЛОЖЬ";
			Если УсловияОтбора.Свойство("Организация") Тогда
				ТекстЗаменыУсловияОтбора = "ПодарочныеСертификаты.Организация В (&Организация)";
				ТекстЗаменыУсловияОтбораПоВиду = "ВидыПодарочныхСертификатов.Организация В (&Организация)";
				Запрос.УстановитьПараметр("Организация", УсловияОтбора.Организация);
				Если УсловияОтбора.Свойство("ТипОперации") Тогда
					Если УсловияОтбора.ТипОперации > 1 Тогда
						ТекстЗаменыУсловияОтбораПоТипуОперации = "ПодарочныеСертификаты.Организация В (&Организация)";
						ТекстЗаменыУсловияСоединенияПоТипуОперации = "Организации.Ссылка В (&Организация)";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбораОрганизацияПоТипуОперации", ТекстЗаменыУсловияОтбораПоТипуОперации);
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбораОрганизация", ТекстЗаменыУсловияОтбора);
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСоединенияПоОрганизацииПоТипуОперации", ТекстЗаменыУсловияСоединенияПоТипуОперации);
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбораВидаПодарочногоСертификатаПоОрганизации", ТекстЗаменыУсловияОтбораПоВиду);
			
			ТекстЗаменыУсловияОтбора = "ИСТИНА";
			Если УсловияОтбора.Свойство("Валюта") Тогда
				ТекстЗаменыУсловияОтбора = "ШаблоныКодовПодарочныхСертификатов.Ссылка.Валюта В (&Валюта)";
				Запрос.УстановитьПараметр("Валюта", УсловияОтбора.Валюта);
			КонецЕсли;
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбораВалюта", ТекстЗаменыУсловияОтбора);
			
			ТекстЗаменыУсловияОтбора = "ИСТИНА";
			Если УсловияОтбора.Свойство("УчетПодарочныхСертификатов2_5") Тогда
				ТекстЗаменыУсловияОтбора = "ШаблоныКодовПодарочныхСертификатов.Ссылка.УчетПодарочныхСертификатов2_5 = &УчетПодарочныхСертификатов2_5";
				Запрос.УстановитьПараметр("УчетПодарочныхСертификатов2_5", УсловияОтбора.УчетПодарочныхСертификатов2_5);
			КонецЕсли;
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбораУчетПодарочныхСертификатов2_5", ТекстЗаменыУсловияОтбора);
			
			ТекстЗаменыУсловияОтбора = "ИСТИНА";		
			Если УсловияОтбора.Свойство("Статус") Тогда
				ТекстЗаменыУсловияОтбора = "ПодарочныеСертификаты.СтатусИзИсторииПодарочныхСертификатов В (&Статус)";
				Запрос.УстановитьПараметр("Статус", УсловияОтбора.Статус);
				Если УсловияОтбора.Свойство("ТипОперации") Тогда
					Если УсловияОтбора.ТипОперации = 3 Тогда
					// Оплата
						ТекстЗаменыУсловияОтбора = ТекстЗаменыУсловияОтбора + " И ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) > 0";
					ИначеЕсли УсловияОтбора.ТипОперации = 4 Тогда
					// Аннулирование
						// Нельзя аннулировать многоразовый подарочный сертификат, если он частично погашен и у него остаток равен нулю.
						// Документ Чек ККМ при вычислении статуса не учитывает остаток по подарочному сертификату.
						ТекстЗаменыУсловияОтбора = ТекстЗаменыУсловияОтбора + "
							|И НЕ (ПодарочныеСертификаты.ЧастичнаяОплата = ИСТИНА 
							|		И ПодарочныеСертификаты.СтатусИзИсторииПодарочныхСертификатов = ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноПогашен) 
							|		И ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) = 0)";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбораСтатусИзИсторииПодарочныхСертификатов", ТекстЗаменыУсловияОтбора);
			
			УстановитьПривилегированныйРежим(Истина);
			Результат = Запрос.Выполнить();
			УстановитьПривилегированныйРежим(Ложь);
			
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				НоваяСтрока = ИнициализироватьОписаниеПодарочногоСертификата();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
				Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
					ЗарегистрированныеПодарочныеСертификаты.Добавить(НоваяСтрока);
				Иначе
					НеЗарегистрированныеПодарочныеСертификаты.Добавить(НоваяСтрока);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	ВозвращаемоеЗначение = Новый Структура("ЗарегистрированныеПодарочныеСертификаты, НеЗарегистрированныеПодарочныеСертификаты");
	ВозвращаемоеЗначение.ЗарегистрированныеПодарочныеСертификаты   = ЗарегистрированныеПодарочныеСертификаты;
	ВозвращаемоеЗначение.НеЗарегистрированныеПодарочныеСертификаты = НеЗарегистрированныеПодарочныеСертификаты;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Функция выполняет поиск подарочных сертификатов по штрихкоду.
//
// Параметры:
//  Штрихкод - Строка - Штрихкод.
//	Отборы - Структура -
//	
// Возвращаемое значение:
//  см. ПодарочныеСертификатыСервер.НайтиПодарочныеСертификаты
//
Функция НайтиПодарочныеСертификатыПоШтрихкоду(Штрихкод, Отборы = Неопределено) Экспорт

	Возврат ПодарочныеСертификатыСервер.НайтиПодарочныеСертификаты(Штрихкод, Перечисления.ТипыКодовКарт.Штрихкод, Отборы);
	
КонецФункции

// Функция выполняет поиск подарочных сертификатов по магнитному коду.
//
// Параметры:
//  МагнитныйКод - Строка - Магнитный код.
//	Отборы - Структура -
//
// Возвращаемое значение:
// 	см. ПодарочныеСертификатыСервер.НайтиПодарочныеСертификаты
//
Функция НайтиПодарочныеСертификатыПоМагнитномуКоду(МагнитныйКод, Отборы = Неопределено) Экспорт
		
	Возврат ПодарочныеСертификатыСервер.НайтиПодарочныеСертификаты(МагнитныйКод, Перечисления.ТипыКодовКарт.МагнитныйКод, Отборы);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаПолученияДанныхПодарочныхСертификатов()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПодарочныеСертификаты.Ссылка КАК Ссылка,
	|	ПодарочныеСертификаты.Наименование КАК Наименование,
	|	ПодарочныеСертификаты.МагнитныйКод КАК МагнитныйКод,
	|	ПодарочныеСертификаты.Штрихкод КАК Штрихкод,
	|	ПодарочныеСертификаты.Код КАК СерийныйНомер,
	|	ЕСТЬNULL(ОбъектыРасчетов.Ссылка, ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)) КАК ОбъектРасчетов,
	|	ЕСТЬNULL(ОбъектыРасчетов.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) КАК Партнер,
	|
	|	ВЫБОР
	|		КОГДА ПодарочныеСертификаты.Владелец.УчетПодарочныхСертификатов2_5
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПустаяСсылка)
	|		ИНАЧЕ ЕСТЬNULL(ИсторияПодарочныхСертификатов.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.НеАктивирован))
	|	КОНЕЦ КАК СтатусИзИсторииПодарочныхСертификатов,
	|	ВЫБОР КОГДА &ТекущийДокумент = НЕОПРЕДЕЛЕНО 
	|					ИЛИ НЕ &ТекущийДокумент В (НЕОПРЕДЕЛЕНО, АктивацияПодарочныхСертификатов.Регистратор)
	|		ТОГДА ЕСТЬNULL(АктивацияПодарочныхСертификатов.Активность, ЛОЖЬ)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СтатусАктивации,
	|	ЕСТЬNULL(АктивацияПодарочныхСертификатов.Организация, ВЫБОР
	|			КОГДА ПодарочныеСертификаты.Владелец.УчетПодарочныхСертификатов2_5
	|				ТОГДА ПодарочныеСертификаты.Владелец.Организация
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		КОНЕЦ) КАК Организация,
	|	ПодарочныеСертификаты.Владелец КАК ВидПодарочногоСертификата,
	|	ПодарочныеСертификаты.Владелец.ПериодДействия КАК ПериодДействия,
	|	ПодарочныеСертификаты.Владелец.КоличествоПериодовДействия КАК КоличествоПериодовДействия,
	|	ПодарочныеСертификаты.Владелец.Номинал КАК Номинал,
	|	ПодарочныеСертификаты.Владелец.Валюта КАК Валюта,
	|	ПодарочныеСертификаты.Владелец.ТипКарты КАК ТипКарты,
	|	ПодарочныеСертификаты.Владелец.СегментНоменклатуры КАК СегментНоменклатуры,
	|	ПодарочныеСертификаты.Владелец.УчетПодарочныхСертификатов2_5 КАК УчетПодарочныхСертификатов2_5,
	|	ПодарочныеСертификаты.Владелец.ЧастичнаяОплата КАК ЧастичнаяОплата,
	|	ПодарочныеСертификаты.Владелец.СтатьяДвиженияДенежныхСредствПродажа КАК СтатьяДвиженияДенежныхСредствПродажа,
	|	ПодарочныеСертификаты.Владелец.СтатьяДвиженияДенежныхСредствВозврат КАК СтатьяДвиженияДенежныхСредствВозврат,
	|	ПодарочныеСертификаты.Владелец.СтатьяДоходов КАК СтатьяДоходов,
	|	ПодарочныеСертификаты.Владелец.АналитикаДоходов КАК АналитикаДоходов,
	|	ЕСТЬNULL(АктивацияПодарочныхСертификатов.ДатаНачалаДействия, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаНачалаДействия,
	|	ЕСТЬNULL(АктивацияПодарочныхСертификатов.ДатаОкончанияДействия, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияДействия,
	|	ЕСТЬNULL(АктивацияПодарочныхСертификатов.Регистратор, НЕОПРЕДЕЛЕНО) КАК ДокументПродажи	
	|ПОМЕСТИТЬ ПодарочныеСертификаты
	|ИЗ
	|	Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АктивацияПодарочныхСертификатов КАК АктивацияПодарочныхСертификатов
	|		ПО (АктивацияПодарочныхСертификатов.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияПодарочныхСертификатов.СрезПоследних(&ГраницаТекущаяДатаКонецДня, ПодарочныйСертификат В (&Ссылка)) КАК ИсторияПодарочныхСертификатов
	|		ПО (ИсторияПодарочныхСертификатов.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО (ОбъектыРасчетов.Объект = ПодарочныеСертификаты.Ссылка)
	|		И НЕ ОбъектыРасчетов.ПометкаУдаления
	|ГДЕ
	|	ПодарочныеСертификаты.Ссылка В (&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодарочныеСертификаты.Ссылка КАК Ссылка,
	|	ПодарочныеСертификаты.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ ПодарочныеСертификатыСтарогоОбразца
	|ИЗ
	|	ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|ГДЕ
	|	НЕ ПодарочныеСертификаты.УчетПодарочныхСертификатов2_5
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодарочныеСертификаты.Ссылка КАК Ссылка,
	|	ПодарочныеСертификаты.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ ПодарочныеСертификатыНовогоОбразца
	|ИЗ
	|	ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|ГДЕ
	|	ПодарочныеСертификаты.УчетПодарочныхСертификатов2_5
	|	И НЕ ПодарочныеСертификаты.ОбъектРасчетов = ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	СУММА(ОстаткиСертификатов.СуммаОстаток) КАК СуммаОстаток
	|ПОМЕСТИТЬ ОстаткиПодарочныхСертификатов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|		ОстаткиСертификатов.СуммаОстаток КАК СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.ПодарочныеСертификаты.Остатки(
	|				,
	|				ПодарочныйСертификат В
	|					(ВЫБРАТЬ
	|						Т.Ссылка
	|					ИЗ
	|						ПодарочныеСертификатыСтарогоОбразца КАК Т)) КАК ОстаткиСертификатов
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Движения.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|		ВЫБОР КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Движения.Сумма
	|			ИНАЧЕ Движения.Сумма
	|		КОНЕЦ КАК СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.ПодарочныеСертификаты КАК Движения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПодарочныеСертификатыСтарогоОбразца КАК ПодарочныеСертификаты
	|		ПО Движения.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка
	|	ГДЕ
	|		&ТекущийДокумент <> НЕОПРЕДЕЛЕНО
	|		И Движения.Регистратор = &ТекущийДокумент) КАК ОстаткиСертификатов
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСертификатов.ПодарочныйСертификат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ВЫБОР
	|		КОГДА СУММА(ОстаткиСертификатов.СуммаОстаток) < 0
	|			ТОГДА -СУММА(ОстаткиСертификатов.СуммаОстаток)
	|		ИНАЧЕ СУММА(ОстаткиСертификатов.СуммаОстаток)
	|	КОНЕЦ КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиСертификатов.ОбъектРасчетов.Объект КАК ПодарочныйСертификат,
	|		ОстаткиСертификатов.СуммаОстаток КАК СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентами.Остатки(
	|				,
	|				ОбъектРасчетов В
	|					(ВЫБРАТЬ
	|						Т.ОбъектРасчетов
	|					ИЗ
	|						ПодарочныеСертификатыНовогоОбразца КАК Т)) КАК ОстаткиСертификатов
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПодарочныеСертификаты.Ссылка КАК ПодарочныйСертификат,
	|		ВЫБОР КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Движения.Сумма
	|			ИНАЧЕ Движения.Сумма
	|		КОНЕЦ КАК СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентами КАК Движения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПодарочныеСертификатыНовогоОбразца КАК ПодарочныеСертификаты
	|		ПО Движения.ОбъектРасчетов = ПодарочныеСертификаты.ОбъектРасчетов
	|	ГДЕ
	|		&ТекущийДокумент <> НЕОПРЕДЕЛЕНО
	|		И Движения.Регистратор = &ТекущийДокумент) КАК ОстаткиСертификатов
	|СГРУППИРОВАТЬ ПО
	|		ОстаткиСертификатов.ПодарочныйСертификат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодарочныйСертификат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодарочныеСертификаты.Ссылка КАК ПодарочныйСертификат,
	|	ВЫБОР КОГДА (ПодарочныеСертификаты.Ссылка, ИСТИНА) 
	|		В (ВЫБРАТЬ ПЕРВЫЕ 1
	|				Т.ПодарочныйСертификат, 
	|				ИСТИНА 
	|			ИЗ РегистрНакопления.ПодарочныеСертификаты КАК Т
	|			ГДЕ
	|				Т.Регистратор ССЫЛКА Документ.АннулированиеПодарочныхСертификатов
	|				И Т.Активность
	|				И Т.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка
	|				И (&ТекущийДокумент = НЕОПРЕДЕЛЕНО
	|					ИЛИ НЕ &ТекущийДокумент В (НЕОПРЕДЕЛЕНО, Т.Регистратор))) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК Аннулирован,
	|	ВЫБОР КОГДА (ПодарочныеСертификаты.Ссылка, ИСТИНА) 
	|		В (ВЫБРАТЬ ПЕРВЫЕ 1
	|				Т.ПодарочныйСертификат, 
	|				ИСТИНА 
	|			ИЗ РегистрНакопления.ПодарочныеСертификаты КАК Т
	|			ГДЕ
	|				Т.Регистратор ССЫЛКА Документ.ВозвратПодарочныхСертификатов
	|				И Т.Активность
	|				И Т.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка
	|				И Т.Сумма <> 0
	|				И (&ТекущийДокумент = НЕОПРЕДЕЛЕНО
	|					ИЛИ НЕ &ТекущийДокумент В (НЕОПРЕДЕЛЕНО, Т.Регистратор))) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ОформленВозврат
	|ПОМЕСТИТЬ СостояниеПодарочныхСертификатов
	|ИЗ
	|	ПодарочныеСертификатыСтарогоОбразца КАК ПодарочныеСертификаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодарочныеСертификаты.Ссылка КАК ПодарочныйСертификат,
	|	ВЫБОР КОГДА (ПодарочныеСертификаты.ОбъектРасчетов, ИСТИНА) 
	|		В (ВЫБРАТЬ ПЕРВЫЕ 1
	|				Т.ОбъектРасчетов, 
	|				ИСТИНА 
	|			ИЗ РегистрНакопления.РасчетыСКлиентами КАК Т
	|			ГДЕ
	|				Т.Регистратор ССЫЛКА Документ.АннулированиеПодарочныхСертификатов
	|				И Т.Активность
	|				И Т.ОбъектРасчетов = ПодарочныеСертификаты.ОбъектРасчетов
	|				И (&ТекущийДокумент = НЕОПРЕДЕЛЕНО
	|					ИЛИ НЕ &ТекущийДокумент В (НЕОПРЕДЕЛЕНО, Т.Регистратор))) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК Аннулирован,
	|	ВЫБОР КОГДА (ПодарочныеСертификаты.ОбъектРасчетов, ИСТИНА) 
	|		В (ВЫБРАТЬ ПЕРВЫЕ 1
	|				Т.ОбъектРасчетов, 
	|				ИСТИНА 
	|			ИЗ РегистрНакопления.РасчетыСКлиентами КАК Т
	|			ГДЕ
	|				(Т.Регистратор ССЫЛКА Документ.ВозвратПодарочныхСертификатов
	|				ИЛИ Т.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|				ИЛИ Т.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|				ИЛИ Т.Регистратор ССЫЛКА Документ.ОперацияПоПлатежнойКарте
	|				ИЛИ Т.Регистратор ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств)
	|				И Т.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса))
	|				И Т.Активность
	|				И Т.ОбъектРасчетов = ПодарочныеСертификаты.ОбъектРасчетов
	|				И Т.Сумма <> 0
	|				И (&ТекущийДокумент = НЕОПРЕДЕЛЕНО
	|					ИЛИ НЕ &ТекущийДокумент В (НЕОПРЕДЕЛЕНО, Т.Регистратор))) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ОформленВозврат
	|ИЗ
	|	ПодарочныеСертификатыНовогоОбразца КАК ПодарочныеСертификаты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодарочныйСертификат
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодарочныеСертификаты.Ссылка КАК Ссылка,
	|	ПодарочныеСертификаты.Наименование КАК Наименование,
	|	ПодарочныеСертификаты.МагнитныйКод КАК МагнитныйКод,
	|	ПодарочныеСертификаты.Штрихкод КАК Штрихкод,
	|	ПодарочныеСертификаты.СерийныйНомер КАК СерийныйНомер,
	|	ПодарочныеСертификаты.СтатусИзИсторииПодарочныхСертификатов КАК СтатусИзИсторииПодарочныхСертификатов,
	|	ПодарочныеСертификаты.СтатусАктивации КАК СтатусАктивации,
	|	ЕСТЬNULL(ОстаткиСертификатов.СуммаОстаток, 0) КАК Остаток,
	|	ПодарочныеСертификаты.ВидПодарочногоСертификата КАК ВидПодарочногоСертификата,
	|	ПодарочныеСертификаты.ПериодДействия КАК ПериодДействия,
	|	ПодарочныеСертификаты.КоличествоПериодовДействия КАК КоличествоПериодовДействия,
	|	ПодарочныеСертификаты.Номинал КАК Номинал,
	|	ПодарочныеСертификаты.Валюта КАК Валюта,
	|	ПодарочныеСертификаты.ТипКарты КАК ТипКарты,
	|	ПодарочныеСертификаты.СегментНоменклатуры КАК СегментНоменклатуры,
	|	ПодарочныеСертификаты.УчетПодарочныхСертификатов2_5 КАК УчетПодарочныхСертификатов2_5,
	|	ПодарочныеСертификаты.ЧастичнаяОплата КАК ЧастичнаяОплата,
	|	ПодарочныеСертификаты.Организация КАК Организация,
	|	ПодарочныеСертификаты.СтатьяДвиженияДенежныхСредствПродажа КАК СтатьяДвиженияДенежныхСредствПродажа,
	|	ПодарочныеСертификаты.СтатьяДвиженияДенежныхСредствВозврат КАК СтатьяДвиженияДенежныхСредствВозврат,
	|	ПодарочныеСертификаты.СтатьяДоходов КАК СтатьяДоходов,
	|	ПодарочныеСертификаты.АналитикаДоходов КАК АналитикаДоходов,
	|	ПодарочныеСертификаты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ПодарочныеСертификаты.Партнер КАК Партнер,
	|	ПодарочныеСертификаты.ДатаНачалаДействия КАК ДатаНачалаДействия,
	|	ПодарочныеСертификаты.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
	|	ПодарочныеСертификаты.ДокументПродажи КАК ДокументПродажи,
	|	ЕСТЬNULL(СостояниеПодарочныхСертификатов.Аннулирован, ЛОЖЬ) КАК Аннулирован,
	|	ЕСТЬNULL(СостояниеПодарочныхСертификатов.ОформленВозврат, ЛОЖЬ) КАК ОформленВозврат
	|
	|ИЗ
	|	ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПодарочныхСертификатов КАК ОстаткиСертификатов
	|		ПО (ОстаткиСертификатов.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СостояниеПодарочныхСертификатов КАК СостояниеПодарочныхСертификатов
	|		ПО ПодарочныеСертификаты.Ссылка = СостояниеПодарочныхСертификатов.ПодарочныйСертификат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ПодарочныеСертификаты.ПустаяСсылка),
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.НеАктивирован),
	|	ЛОЖЬ,
	|	0,
	|	ВидыПодарочныхСертификатов.Ссылка,
	|	ВидыПодарочныхСертификатов.ПериодДействия,
	|	ВидыПодарочныхСертификатов.КоличествоПериодовДействия,
	|	ВидыПодарочныхСертификатов.Номинал,
	|	ВидыПодарочныхСертификатов.Валюта,
	|	ВидыПодарочныхСертификатов.ТипКарты,
	|	ВидыПодарочныхСертификатов.СегментНоменклатуры,
	|	ВидыПодарочныхСертификатов.УчетПодарочныхСертификатов2_5,
	|	ВидыПодарочныхСертификатов.ЧастичнаяОплата,
	|	ВидыПодарочныхСертификатов.Организация,
	|	ВидыПодарочныхСертификатов.СтатьяДвиженияДенежныхСредствПродажа,
	|	ВидыПодарочныхСертификатов.СтатьяДвиженияДенежныхСредствВозврат,
	|	ВидыПодарочныхСертификатов.СтатьяДоходов,
	|	ВидыПодарочныхСертификатов.АналитикаДоходов,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ КАК Аннулирован,
	|	ЛОЖЬ КАК ОформленВозврат
	|ИЗ
	|	Справочник.ВидыПодарочныхСертификатов КАК ВидыПодарочныхСертификатов
	|ГДЕ
	|	ВидыПодарочныхСертификатов.Ссылка = &ВидПодарочногоСертификата
	|	И ВидыПодарочныхСертификатов.ПометкаУдаления = ЛОЖЬ";
	
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти
