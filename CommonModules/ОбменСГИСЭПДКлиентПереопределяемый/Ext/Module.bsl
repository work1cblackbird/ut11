
#Область ПрограммныйИнтерфейс

//@skip-check module-empty-method
// Обработчик заполнения документа
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма:
//  ДанныеЗаполнения - произвольный - данные для заполнения
Процедура ОбработкаЗаполненияНаФормеЭТрН(Форма, ДанныеЗаполнения) Экспорт
КонецПроцедуры

//@skip-check module-empty-method
// Обработчик заполнения документа
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма:
//  ДанныеЗаполнения - произвольный - данные для заполнения
Процедура ОбработкаЗаполненияНаФормеЭСВ(Форма, ДанныеЗаполнения) Экспорт
КонецПроцедуры

//@skip-check module-empty-method
// Обработчик заполнения документа
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма:
//  ДанныеЗаполнения - произвольный - данные для заполнения
Процедура ОбработкаЗаполненияНаФормеЭЗН(Форма, ДанныеЗаполнения) Экспорт
КонецПроцедуры

//@skip-check module-empty-method
// Обработчик заполнения документа
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма:
//  ДанныеЗаполнения - произвольный - данные для заполнения
Процедура ОбработкаЗаполненияНаФормеЭЗЗ(Форма, ДанныеЗаполнения) Экспорт
КонецПроцедуры

//@skip-check module-empty-method
// Обработчик заполнения документа
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма:
//  ДанныеЗаполнения - произвольный - данные для заполнения
Процедура ОбработкаЗаполненияНаФормеЭПЛ(Форма, ДанныеЗаполнения) Экспорт
КонецПроцедуры

//@skip-check module-empty-method
// Обработчик заполнения документа
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма:
//  ДанныеЗаполнения - произвольный - данные для заполнения
Процедура ОбработкаЗаполненияНаФормеЭДФ(Форма, ДанныеЗаполнения) Экспорт
КонецПроцедуры

// Проверить и создать ЭПД (команда).
// 
// Параметры:
//  ПроверяемыеОбъекты - Массив из ДокументСсылка, ДокументОбъект.ЭлектроннаяТранспортнаяНакладная, ДокументОбъект.ЭлектронныйЗаказНаряд
//  ПараметрыВыполнения - см. ПодключаемыеКомандыКлиентСервер.ПараметрыВыполненияКоманды
Процедура ПроверитьИСоздатьЭПДКоманда(ПроверяемыеОбъекты, ПараметрыВыполнения) Экспорт
	
	ОписаниеКоманды = ПараметрыВыполнения.ОписаниеКоманды; // Структура
	ОперацияВыполнения = ОписаниеКоманды.Идентификатор;
	
	Если ПроверяемыеОбъекты.Количество() > 1 Тогда
		ТекстПредупреждения = НСтр("ru = 'Пакетное формирование электронных перевозочных документов не доступно. Выберите один документ основание.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат; 
	КонецЕсли;

	Если ОперацияВыполнения = "СоздатьЭТН" Тогда
		ПроверитьИСоздатьЭПД(Тип("ДокументСсылка.ЭлектроннаяТранспортнаяНакладная"), ПроверяемыеОбъекты);
	ИначеЕсли ОперацияВыполнения = "СоздатьЭЗН" Тогда
		ПроверитьИСоздатьЭПД(Тип("ДокументСсылка.ЭлектронныйЗаказНаряд"), ПроверяемыеОбъекты);
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Проверить и создать ЭПД.
// 
// Параметры:
//  ТипЭпд - Тип
//  ПроверяемыеОбъекты - Массив из ДокументСсылка, ДокументОбъект.ЭлектроннаяТранспортнаяНакладная, ДокументОбъект.ЭлектронныйЗаказНаряд -ПараметрыВыполнения - 
// См. ПодключаемыеКомандыКлиентСервер.ПараметрыВыполненияКоманды
Процедура ПроверитьИСоздатьЭПД(ТипЭпд, ПроверяемыеОбъекты) Экспорт
	
	ОчиститьСообщения();
	
	Если ТипЭпд = Тип("ДокументСсылка.ЭлектроннаяТранспортнаяНакладная") Тогда
		ФормаОбъекта = "Документ.ЭлектроннаяТранспортнаяНакладная.ФормаОбъекта";
	ИначеЕсли ТипЭпд = Тип("ДокументСсылка.ЭлектронныйЗаказНаряд") Тогда
		ФормаОбъекта = "Документ.ЭлектронныйЗаказНаряд.ФормаОбъекта";
	Иначе
		Возврат;
	КонецЕсли;

	Результат = ОбменСГИСЭПДВызовСервераПереопределяемый.ПроверитьИСоздатьНаСервере(ТипЭпд, ПроверяемыеОбъекты);

	ПараметрыФормы = Новый Структура;

	Если Результат.ДанныеДляЗаполнения.Количество() = 1 Тогда

		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Результат.ДанныеДляЗаполнения[0]);
		ОткрытьФорму(ФормаОбъекта, ПараметрыФормы);

	ИначеЕсли Результат.ДокументыПоКоторомуУжеСозданыЭПД.Количество() > 0 Тогда

		Если Результат.ДокументыПоКоторомуУжеСозданыЭПД.Количество() = 1 
			И Результат.СозданныеЭПД.Количество() = 1 Тогда
			
			ПоказатьЗначение(,Результат.СозданныеЭПД[0]);
			
		Иначе
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ОтборДокументОснование", Результат.ДокументыПоКоторомуУжеСозданыЭПД);
			ПараметрыОтбора.Вставить("ТипЭпд", ТипЭпд);
			
			ОткрытьФорму("Обработка.ЭлектронныеПеревозочныеДокументы.Форма.ФормаСпискаЭПД", ПараметрыОтбора);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработать результат выбора типа документа.
// 
// Параметры:
//  ВыбранноеЗначение - ЭлементСпискаЗначений -
//  ДополнительныеПараметры - Структура -
Процедура ОбработатьРезультатВыбораТипаДокумента(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроверяемыеОбъекты = Новый Массив;
	ПроверяемыеОбъекты.Добавить(ДополнительныеПараметры.Ссылка);
	
	ОбменСГИСЭПДКлиентПереопределяемый.ПроверитьИСоздатьЭПД(ВыбранноеЗначение.Значение, ПроверяемыеОбъекты);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Обработчик команды "Скопировать"
// Если в конфигурации нет реализации собственного метода следует использовать метод модуля ОбменСГИСЭПДКлиент
//
// Параметры:
//  Список - ТаблицаФормы - Таблица формы:
//  	* ТекущиеДанные - ДанныеФормыСтруктура - С полями:
//  		** Ссылка - ДокументСсылка - 
Процедура СкопироватьЭлемент(Список) Экспорт
	ОбщегоНазначенияУТКлиент.СкопироватьЭлемент(Список);
КонецПроцедуры

// Обработчик команды "Установить пометку удаления"
// Если в конфигурации нет реализации собственного метода следует использовать метод модуля ОбменСГИСЭПДКлиент
//
//	Параметры:
//		Список - ТаблицаФормы - 
//		ТипСписка - Строка - тип документов списка.
//		ОповещениеОЗавершении - ОписаниеОповещения - оповещение, которое должно быть вызвано после завершения попытки пометки на удаление.
//
Процедура УстановитьПометкуУдаления(Список, ТипСписка = "", ОповещениеОЗавершении = Неопределено) Экспорт
	ОбщегоНазначенияУТКлиент.УстановитьПометкуУдаления(Список, ТипСписка);
КонецПроцедуры

// Процедура позволяет установить период через стандартный диалог выбора периода
// Если в конфигурации нет реализации собственного метода следует использовать метод модуля ОбменСГИСЭПДКлиент
//
// Параметры:
//  Объект                - Произвольный - Объект в котором устанавливается значения периода
//  ПараметрыПериода      - Структура - структура со свойствами "ДатаНачала", "ДатаОкончания" и в значениях имена полей
//                              объекта, для свойства "Вариант" - значение варианта стандартного периода.
//  ОповещениеПослеВыбора - ОписаниеОповещения - Описание оповещение которое выполняется после установки периода. 
//                              Может быть установлена пост-обработка в месте вызова после выбора периода.
// 
Процедура РедактироватьПериод(Объект, ПараметрыПериода = Неопределено, ОповещениеПослеВыбора = Неопределено) Экспорт
	ОбщегоНазначенияУтКлиент.РедактироватьПериод(Объект,, ОповещениеПослеВыбора);
КонецПроцедуры

// Обработчик команды "Изменить"
// Если в конфигурации нет реализации собственного метода следует использовать метод модуля ОбменСГИСЭПДКлиент
//
// Параметры:
//  Список - ТаблицаФормы - Таблица формы:
//  	* ТекущиеДанные - ДанныеФормыСтруктура - С полями:
//  		** Ссылка - ДокументСсылка - 
Процедура ИзменитьЭлемент(Список) Экспорт
	ОбщегоНазначенияУТКлиент.ИзменитьЭлемент(Список);
КонецПроцедуры

#КонецОбласти 
