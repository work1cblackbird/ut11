
#Область ПрограммныйИнтерфейс

// Очистить неиспользуемые правила продаж.
//
// Параметры:
//  Объект - СправочникОбъект.НастройкиПродажДляПользователей, СправочникОбъект.СоглашенияСКлиентами - Объект.
//
Процедура ОчиститьНеиспользуемыеПравилаПродаж(Объект) Экспорт
	
	Если Не Объект.ОграничиватьРучныеСкидки Тогда
		Объект.ПроцентРучнойСкидки = 0;
		Объект.ПроцентРучнойНаценки = 0;
		
		Если ТипЗнч(Объект) <> Тип("СправочникОбъект.НастройкиПродажДляПользователей") Тогда
			МассивСтрокКУдалению = Новый Массив();
			Для Каждого СтрокаТЧ Из Объект.ЦеновыеГруппы Цикл
				СтрокаТЧ.ПроцентРучнойСкидки  = 0;
				СтрокаТЧ.ПроцентРучнойНаценки = 0;
				Если СтрокаТЧ.ВидЦен.Пустая() Тогда
					МассивСтрокКУдалению.Добавить(СтрокаТЧ);
				КонецЕсли;
			КонецЦикла;
			Для Каждого Элемент Из МассивСтрокКУдалению Цикл
				Объект.ЦеновыеГруппы.Удалить(Элемент);
			КонецЦикла;
		Иначе
			Объект.ЦеновыеГруппы.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Получить ограничения скидок (наценок)
//
// Параметры:
//  СоглашениеСКлиентом - СправочникСсылка.СоглашенияСКлиентами - Соглашение
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Ограничений скидок (наценок).
//
Функция ОграниченияСкидокНаценок(СоглашениеСКлиентом = Неопределено, Пользователь) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьРучныеСкидки                     = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВПродажах");
	ИспользоватьЦеновыеГруппы                    = ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы");
	ИспользоватьОграниченияРучныхСкидокВПродажах = ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям");
	
	Если ЗначениеЗаполнено(СоглашениеСКлиентом) Тогда
		ИспользоватьОграниченияПоСоглашениям         = ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям");
	Иначе
		ИспользоватьОграниченияПоСоглашениям = Ложь;
	КонецЕсли;

	ОграничиватьРучныеСкидки                     = ИспользоватьРучныеСкидки И (ИспользоватьОграниченияРучныхСкидокВПродажах ИЛИ ИспользоватьОграниченияПоСоглашениям);

	МассивПроверок = Новый Массив;

	Если ОграничиватьРучныеСкидки Тогда
		Если ИспользоватьОграниченияРучныхСкидокВПродажах Тогда
			МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей");
			МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей");
			МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям");
		КонецЕсли;
		МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения");
		МассивПроверок.Добавить("ВременнаяТаблицаОграниченияРучныхСкидок");
		МассивПроверок.Добавить("ОграниченияРучныхСкидокНаценок");
	Иначе
		Возврат Неопределено;
	КонецЕсли;

	ТекстЗапроса = "";
	
	Для Каждого ТекЭлемент Из МассивПроверок Цикл

		Если  ТекЭлемент = "ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей" Тогда
			
			СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей(ТекстЗапроса);
			
		ИначеЕсли  ТекЭлемент = "ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей" Тогда
			
			СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей(ТекстЗапроса, ИспользоватьЦеновыеГруппы);
			
		ИначеЕсли  ТекЭлемент = "ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям" Тогда
			
			СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям(ТекстЗапроса, ИспользоватьЦеновыеГруппы);
			
		ИначеЕсли  ТекЭлемент = "ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения" Тогда
			
			СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения(ТекстЗапроса, ИспользоватьЦеновыеГруппы, ИспользоватьОграниченияРучныхСкидокВПродажах, ИспользоватьОграниченияПоСоглашениям);
			
		ИначеЕсли  ТекЭлемент = "ВременнаяТаблицаОграниченияРучныхСкидок" Тогда
			
			СформироватьЗапросВременнаяТаблицаОграниченияРучныхСкидок(ТекстЗапроса);
			
		ИначеЕсли ТекЭлемент = "ОграниченияРучныхСкидокНаценок" Тогда
			
			СформироватьЗапросОграниченияРучныхСкидокНаценок(ТекстЗапроса);
			
		КонецЕсли;

	КонецЦикла;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Если ИспользоватьОграниченияПоСоглашениям Тогда
		Запрос.УстановитьПараметр("СоглашениеСКлиентом", СоглашениеСКлиентом);
	КонецЕсли;
	
	ГруппаПользователейСНастройкойПродаж = ПолучитьГруппуПользователяСНастройкойПродажДляПользователя(
		Пользователь, 
		"СкидкиНаценки"
	);
	Запрос.УстановитьПараметр("ГруппаПользователей", ГруппаПользователейСНастройкойПродаж);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Сформировать запрос временная таблица ограничение ручных скидок группы пользователей.
//
// Параметры:
//  ТекстЗапроса - Строка - Текст запроса.
//
Процедура СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыПользователейСостав.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей
	|ИЗ
	|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|ГДЕ
	|	ГруппыПользователейСостав.Ссылка = &ГруппаПользователей
	|;
	|";
	
КонецПроцедуры

// Сформировать запрос временная таблица ограничение ручных скидок ограничения по группам пользователей.
//
// Параметры:
//  ТекстЗапроса - Строка - Текст запроса
//  ИспользоватьЦеновыеГруппы - Булево - Признак использования ценовых групп.
//
Процедура СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей(ТекстЗапроса, ИспользоватьЦеновыеГруппы) Экспорт
	
	МассивТекстовЗапросов = Новый Массив();
	
	ТекстЗапросаОграничения = "
	|ВЫБРАТЬ
	|	ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей.Ссылка КАК ГруппаПользователей,
	|	ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка)                   КАК ЦеноваяГруппа,
	|	НастройкиПродажДляПользователей.ПроцентРучнойСкидки               КАК ПроцентРучнойСкидки,
	|	НастройкиПродажДляПользователей.ПроцентРучнойНаценки              КАК ПроцентРучнойНаценки
	|ПОМЕСТИТЬ ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей
	|ИЗ
	|	ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей КАК ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиПродажДляПользователей КАК НастройкиПродажДляПользователей
	|		ПО ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей.Ссылка = НастройкиПродажДляПользователей.Владелец
	|		И НастройкиПродажДляПользователей.ОграничиватьРучныеСкидки
	|";
	МассивТекстовЗапросов.Добавить(ТекстЗапросаОграничения);
	
	Если ИспользоватьЦеновыеГруппы Тогда
		
		ТекстЗапросаОграничения = "
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей.Ссылка КАК ГруппаПользователей,
		|	НастройкиПродажДляПользователейЦеновыеГруппы.ЦеноваяГруппа        КАК ЦеноваяГруппа,
		|	НастройкиПродажДляПользователейЦеновыеГруппы.ПроцентРучнойСкидки  КАК ПроцентРучнойСкидки,
		|	НастройкиПродажДляПользователейЦеновыеГруппы.ПроцентРучнойНаценки КАК ПроцентРучнойНаценки
		|ИЗ
		|	ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей КАК ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиПродажДляПользователей.ЦеновыеГруппы КАК НастройкиПродажДляПользователейЦеновыеГруппы
		|		ПО ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей.Ссылка = НастройкиПродажДляПользователейЦеновыеГруппы.Ссылка.Владелец
		|		И НастройкиПродажДляПользователейЦеновыеГруппы.Ссылка.ОграничиватьРучныеСкидки
		|";
		
		МассивТекстовЗапросов.Добавить(ТекстЗапросаОграничения);
		
	КонецЕсли;
	
	РазделительТекстовЗапросов = "
	|ОБЪЕДИНИТЬ ВСЕ
	|";
	
	ПолныйТекстЗапросаОграничения = СтрСоединить(МассивТекстовЗапросов, РазделительТекстовЗапросов);
	
	ТекстЗапроса = ТекстЗапроса + ПолныйТекстЗапросаОграничения + "
	|;";
	
КонецПроцедуры

// Сформировать запрос временная таблица ограничение ручных скидок ограничения по группам и пользователям.
//
// Параметры:
//  ТекстЗапроса - Строка - Текст запроса
//  ИспользоватьЦеновыеГруппы - Булево - Признак использования ценовых групп.
//
Процедура СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям(ТекстЗапроса, ИспользоватьЦеновыеГруппы) Экспорт
	
	МассивТекстовЗапросов = Новый Массив();
	
	ТекстЗапросаОграничений = "
	|ВЫБРАТЬ
	|	2                                                                                                       КАК Приоритет,
	|	ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей.ЦеноваяГруппа                  КАК ЦеноваяГруппа,
	|	МАКСИМУМ(ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей.ПроцентРучнойСкидки)  КАК ПроцентРучнойСкидки,
	|	МАКСИМУМ(ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей.ПроцентРучнойНаценки) КАК ПроцентРучнойНаценки
	|ПОМЕСТИТЬ ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям
	|ИЗ
	|	ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей КАК ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей.ЦеноваяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1                                                    КАК Приоритет,
	|	ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка)      КАК ЦеноваяГруппа,
	|	НастройкиПродажДляПользователей.ПроцентРучнойСкидки  КАК ПроцентРучнойСкидки,
	|	НастройкиПродажДляПользователей.ПроцентРучнойНаценки КАК ПроцентРучнойНаценки
	|ИЗ
	|	Справочник.НастройкиПродажДляПользователей КАК НастройкиПродажДляПользователей
	|ГДЕ
	|	НастройкиПродажДляПользователей.Владелец = &Пользователь
	|	И НастройкиПродажДляПользователей.ОграничиватьРучныеСкидки
	|";
	МассивТекстовЗапросов.Добавить(ТекстЗапросаОграничений);
	
	Если ИспользоватьЦеновыеГруппы Тогда
		
		ТекстЗапросаОграничений = "
		|ВЫБРАТЬ
		|	1                                                                 КАК Приоритет,
		|	НастройкиПродажДляПользователейЦеновыеГруппы.ЦеноваяГруппа КАК    ЦеноваяГруппа,
		|	НастройкиПродажДляПользователейЦеновыеГруппы.ПроцентРучнойСкидки  КАК ПроцентРучнойСкидки,
		|	НастройкиПродажДляПользователейЦеновыеГруппы.ПроцентРучнойНаценки КАК ПроцентРучнойНаценки
		|ИЗ
		|	Справочник.НастройкиПродажДляПользователей.ЦеновыеГруппы КАК НастройкиПродажДляПользователейЦеновыеГруппы
		|ГДЕ
		|	НастройкиПродажДляПользователейЦеновыеГруппы.Ссылка.Владелец = &Пользователь
		|	И НастройкиПродажДляПользователейЦеновыеГруппы.Ссылка.ОграничиватьРучныеСкидки
		|";
		МассивТекстовЗапросов.Добавить(ТекстЗапросаОграничений);
		
	КонецЕсли;
	
	РазделительТекстовЗапросов = "
	|ОБЪЕДИНИТЬ ВСЕ
	|";
	
	ПолныйТекстЗапросаОграничения = СтрСоединить(МассивТекстовЗапросов, РазделительТекстовЗапросов);
	
	ТекстЗапроса = ТекстЗапроса + ПолныйТекстЗапросаОграничения + "
	|;";
	
КонецПроцедуры

// Сформировать запрос временная таблица ограничение ручных скидок общие ограничения.
//
// Параметры:
//  ТекстЗапроса - Строка - Текст запроса
//  ИспользоватьЦеновыеГруппы - Булево - Признак использования ценовых групп.
//  ИспользоватьОграниченияПоПользователям - Булево - Признак использования ограничений по пользователям.
//  ИспользоватьОграниченияПоСоглашениям - Булево - Признак использования ограничений по соглашениям.
//
Процедура СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения(ТекстЗапроса, ИспользоватьЦеновыеГруппы, ИспользоватьОграниченияПоПользователям, ИспользоватьОграниченияПоСоглашениям) Экспорт
	
	МассивТекстовЗапросов = Новый Массив();
	
	ИмяВременнойТаблицы = "ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения";
	Если ИспользоватьОграниченияПоПользователям Тогда
		
		ТекстЗапросаОграничений =  "
		|ВЫБРАТЬ
		|	ЦеновыеГруппы.Ссылка КАК Ссылка,
		|	0.00                 КАК ПроцентРучнойСкидки,
		|	0.00                 КАК ПроцентРучнойНаценки
		|ПОМЕСТИТЬ ЦеновыеГруппы
		|ИЗ
		|	Справочник.ЦеновыеГруппы КАК ЦеновыеГруппы
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|			
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка),
		|	0.00 КАК ПроцентРучнойСкидки,
		|	0.00 КАК ПроцентРучнойНаценки
		|;
		|
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям.Приоритет) КАК Приоритет,
		|	ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям.ЦеноваяГруппа      КАК ЦеноваяГруппа
		|ПОМЕСТИТЬ ОграничениеРучныхСкидокПоГруппамИПользователям
		|ИЗ
		|	ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям КАК ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям.ЦеноваяГруппа
		|;
		|
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	Таблица.ЦеноваяГруппа                  КАК ЦеноваяГруппа,
		|	МАКСИМУМ(Таблица.ПроцентРучнойСкидки)  КАК ПроцентРучнойСкидки,
		|	МАКСИМУМ(Таблица.ПроцентРучнойНаценки) КАК ПроцентРучнойНаценки
		|ПОМЕСТИТЬ ТаблицаОграничений
		|ИЗ
		|	(ВЫБРАТЬ
		|		Ограничения.ЦеноваяГруппа        КАК ЦеноваяГруппа,
		|		Ограничения.ПроцентРучнойСкидки  КАК ПроцентРучнойСкидки,
		|		Ограничения.ПроцентРучнойНаценки КАК ПроцентРучнойНаценки
		|	ИЗ
		|		ОграничениеРучныхСкидокПоГруппамИПользователям
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям КАК Ограничения
		|		ПО (Ограничения.ЦеноваяГруппа = ОграничениеРучныхСкидокПоГруппамИПользователям.ЦеноваяГруппа)
		|			И (Ограничения.Приоритет = ОграничениеРучныхСкидокПоГруппамИПользователям.Приоритет)
		|	) КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ЦеноваяГруппа
		|;
		|
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеновыеГруппы.Ссылка                                                                        КАК ЦеноваяГруппа,
		|	ЕСТЬNULL(ТаблицаОграничений.ПроцентРучнойСкидки,  ТаблицаОграничений0.ПроцентРучнойСкидки)  КАК ПроцентРучнойСкидки,
		|	ЕСТЬNULL(ТаблицаОграничений.ПроцентРучнойНаценки, ТаблицаОграничений0.ПроцентРучнойНаценки) КАК ПроцентРучнойНаценки
		|ПОМЕСТИТЬ ИмяВременнойТаблицы
		|ИЗ ЦеновыеГруппы
		|ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОграничений
		|ПО ТаблицаОграничений.ЦеноваяГруппа = ЦеновыеГруппы.Ссылка 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОграничений КАК ТаблицаОграничений0
		|ПО ТаблицаОграничений0.ЦеноваяГруппа = ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка)";
		
		ТекстЗапросаОграничений = СтрЗаменить(ТекстЗапросаОграничений, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
		МассивТекстовЗапросов.Добавить(ТекстЗапросаОграничений);
		
	КонецЕсли;
	
	Если ИспользоватьОграниченияПоСоглашениям Тогда
		
		ТекстЗапросаОграничений = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка) КАК ЦеноваяГруппа,
		|	СоглашенияСКлиентами.ПроцентРучнойСкидки        КАК ПроцентРучнойСкидки,
		|	СоглашенияСКлиентами.ПроцентРучнойНаценки       КАК ПроцентРучнойНаценки
		|ПОМЕСТИТЬ ИмяВременнойТаблицы
		|ИЗ
		|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
		|ГДЕ
		|	СоглашенияСКлиентами.Ссылка = &СоглашениеСКлиентом
		|	И СоглашенияСКлиентами.ОграничиватьРучныеСкидки
		|";
		
		Если Не ИспользоватьОграниченияПоПользователям Тогда
			ТекстЗапросаОграничений = СтрЗаменить(ТекстЗапросаОграничений, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);			
		Иначе
			ТекстЗапросаОграничений = СтрЗаменить(ТекстЗапросаОграничений, "ПОМЕСТИТЬ ИмяВременнойТаблицы", "");
		КонецЕсли;
		
		МассивТекстовЗапросов.Добавить(ТекстЗапросаОграничений);
		
		Если ИспользоватьЦеновыеГруппы Тогда
			
			ТекстЗапросаОграничений = "
			|ВЫБРАТЬ
			|	СправочникЦеновыеГруппы.Ссылка                  КАК ЦеноваяГруппа,
			|	СоглашенияСКлиентами.ПроцентРучнойСкидки        КАК ПроцентРучнойСкидки,
			|	СоглашенияСКлиентами.ПроцентРучнойНаценки       КАК ПроцентРучнойНаценки
			|ИЗ
			|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЦеновыеГруппы КАК СправочникЦеновыеГруппы ПО ИСТИНА
			|ГДЕ
			|	СоглашенияСКлиентами.Ссылка = &СоглашениеСКлиентом
			|	И СправочникЦеновыеГруппы.Ссылка НЕ В (ВЫБРАТЬ Т.ЦеноваяГруппа ИЗ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК Т ГДЕ Т.Ссылка = &СоглашениеСКлиентом И Т.Ссылка.ОграничиватьРучныеСкидки)
			|	И СоглашенияСКлиентами.ОграничиватьРучныеСкидки
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СоглашенияСКлиентамиЦеновыеГруппы.ЦеноваяГруппа        КАК ЦеноваяГруппа,
			|	СоглашенияСКлиентамиЦеновыеГруппы.ПроцентРучнойСкидки  КАК ПроцентРучнойСкидки,
			|	СоглашенияСКлиентамиЦеновыеГруппы.ПроцентРучнойНаценки КАК ПроцентРучнойНаценки
			|ИЗ
			|	Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашенияСКлиентамиЦеновыеГруппы
			|ГДЕ
			|	СоглашенияСКлиентамиЦеновыеГруппы.Ссылка = &СоглашениеСКлиентом
			|	И СоглашенияСКлиентамиЦеновыеГруппы.Ссылка.ОграничиватьРучныеСкидки
			|";
			МассивТекстовЗапросов.Добавить(ТекстЗапросаОграничений);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивТекстовЗапросов.Количество() Тогда 
		
		РазделительТекстовЗапросов = "
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
		ПолныйТекстЗапросаОграничения = СтрСоединить(МассивТекстовЗапросов, РазделительТекстовЗапросов);
		
		ТекстЗапроса = ТекстЗапроса + ПолныйТекстЗапросаОграничения + "
		|;";
		
	КонецЕсли;
	
КонецПроцедуры

// Сформировать запрос временная таблица ограничения ручных скидок.
//
// Параметры:
//  ТекстЗапроса - Строка - Текст запроса.
//
Процедура СформироватьЗапросВременнаяТаблицаОграниченияРучныхСкидок(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения.ЦеноваяГруппа,
	|	МИНИМУМ(ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения.ПроцентРучнойНаценки) КАК ПроцентРучнойНаценки,
	|	МИНИМУМ(ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения.ПроцентРучнойСкидки) КАК ПроцентРучнойСкидки
	|ПОМЕСТИТЬ ВременнаяТаблицаОграниченияРучныхСкидок
	|ИЗ
	|	ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения КАК ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения.ЦеноваяГруппа
	|;
	|";
	
КонецПроцедуры

// Получить права доступа РМК для пользователя.
//
// Параметры:
//  Пользователь - СправочникСсылка - Пользователь.
// 
// Возвращаемое значение:
//  Структура - Права доступа пользователя.
//
Функция ПраваДоступаРМК(Пользователь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПраваДоступа = ПраваДоступаПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НастройкиПродажДляПользователей.Ссылка КАК Ссылка,
	|	НастройкиПродажДляПользователей.РМК_Отложить КАК Отложить,
	|	НастройкиПродажДляПользователей.РМК_Зарезервировать КАК Зарезервировать,
	|	НастройкиПродажДляПользователей.РМК_ВыемкаДенег КАК ВыемкаДенег,
	|	НастройкиПродажДляПользователей.РМК_ВнесениеДенег КАК ВнесениеДенег,
	|	НастройкиПродажДляПользователей.РМК_ОткрытьСмену КАК ОткрытьСмену,
	|	НастройкиПродажДляПользователей.РМК_ЗакрытьСмену КАК ЗакрытьСмену,
	|	НастройкиПродажДляПользователей.РМК_ВозвратТовара КАК ВозвратТовара,
	|	НастройкиПродажДляПользователей.РМК_КорректировкаСтрок КАК КорректировкаСтрок,
	|	НастройкиПродажДляПользователей.РМК_ИзменениеКартЛояльности КАК ИзменениеКартЛояльности,
	|	НастройкиПродажДляПользователей.РМК_РедактированиеИнформацииОКлиенте КАК РедактированиеИнформацииОКлиенте,
	|	НастройкиПродажДляПользователей.РМК_РазрешитьОплатуБезПодтвержденияОтСБП КАК РазрешитьОплатуБезПодтвержденияОтСБП,
	|	НастройкиПродажДляПользователей.РМК_РазрешитьИзменениеЦеныПриВозвратеБезЧека КАК РазрешитьИзменениеЦеныПриВозвратеБезЧека
	|
	|ПОМЕСТИТЬ Настройки
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Т.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.ГруппыПользователей.Состав КАК Т
	|	ГДЕ
	|		Т.Ссылка = &ГруппаПользователей) КАК ГруппыПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиПродажДляПользователей КАК НастройкиПродажДляПользователей
	|		ПО ГруппыПользователей.Ссылка = НастройкиПродажДляПользователей.Владелец
	|ГДЕ
	|	НастройкиПродажДляПользователей.РМК_Использовать
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	НастройкиПродажДляПользователей.Ссылка,
	|	НастройкиПродажДляПользователей.РМК_Отложить,
	|	НастройкиПродажДляПользователей.РМК_Зарезервировать,
	|	НастройкиПродажДляПользователей.РМК_ВыемкаДенег,
	|	НастройкиПродажДляПользователей.РМК_ВнесениеДенег,
	|	НастройкиПродажДляПользователей.РМК_ОткрытьСмену,
	|	НастройкиПродажДляПользователей.РМК_ЗакрытьСмену,
	|	НастройкиПродажДляПользователей.РМК_ВозвратТовара,
	|	НастройкиПродажДляПользователей.РМК_КорректировкаСтрок,
	|	НастройкиПродажДляПользователей.РМК_ИзменениеКартЛояльности,
	|	НастройкиПродажДляПользователей.РМК_РедактированиеИнформацииОКлиенте,
	|	НастройкиПродажДляПользователей.РМК_РазрешитьОплатуБезПодтвержденияОтСБП,
	|	НастройкиПродажДляПользователей.РМК_РазрешитьИзменениеЦеныПриВозвратеБезЧека
	|
	|ИЗ
	|	Справочник.НастройкиПродажДляПользователей КАК НастройкиПродажДляПользователей
	|ГДЕ
	|	НастройкиПродажДляПользователей.Владелец = &Пользователь
	|	И НастройкиПродажДляПользователей.РМК_Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Настройки.Приоритет КАК Приоритет,
	|	МАКСИМУМ(Настройки.Отложить) КАК Отложить,
	|	МАКСИМУМ(Настройки.Зарезервировать) КАК Зарезервировать,
	|	МАКСИМУМ(Настройки.ВыемкаДенег) КАК ВыемкаДенег,
	|	МАКСИМУМ(Настройки.ВнесениеДенег) КАК ВнесениеДенег,
	|	МАКСИМУМ(Настройки.ОткрытьСмену) КАК ОткрытьСмену,
	|	МАКСИМУМ(Настройки.ЗакрытьСмену) КАК ЗакрытьСмену,
	|	МАКСИМУМ(Настройки.ВозвратТовара) КАК ВозвратТовара,
	|	МАКСИМУМ(Настройки.КорректировкаСтрок) КАК КорректировкаСтрок,
	|	МАКСИМУМ(Настройки.ИзменениеКартЛояльности) КАК ИзменениеКартЛояльности,
	|	МАКСИМУМ(Настройки.РедактированиеИнформацииОКлиенте) КАК РедактированиеИнформацииОКлиенте,
	|	МАКСИМУМ(Настройки.РазрешитьОплатуБезПодтвержденияОтСБП) КАК РазрешитьОплатуБезПодтвержденияОтСБП,
	|	МАКСИМУМ(Настройки.РазрешитьИзменениеЦеныПриВозвратеБезЧека) КАК РазрешитьИзменениеЦеныПриВозвратеБезЧека
	|
	|ИЗ
	|	Настройки КАК Настройки
	|
	|СГРУППИРОВАТЬ ПО
	|	Настройки.Приоритет
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет");
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	ГруппаПользователейСНастройкойПродаж = ПолучитьГруппуПользователяСНастройкойПродажДляПользователя(
		Пользователь,
		"НастройкиРМК"
	);
	Запрос.УстановитьПараметр("ГруппаПользователей", ГруппаПользователейСНастройкойПродаж);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПраваДоступа, Выборка);
	КонецЕсли;
	
	Возврат ПраваДоступа;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьЗапросОграниченияРучныхСкидокНаценок(ТекстЗапроса)
	
	ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОграниченияРучныхСкидок.ЦеноваяГруппа        КАК ЦеноваяГруппа,
		|	ВременнаяТаблицаОграниченияРучныхСкидок.ПроцентРучнойСкидки  КАК МаксимальныйПроцентРучнойСкидки,
		|	ВременнаяТаблицаОграниченияРучныхСкидок.ПроцентРучнойНаценки КАК МаксимальныйПроцентРучнойНаценки
		|ИЗ
		|	ВременнаяТаблицаОграниченияРучныхСкидок КАК ВременнаяТаблицаОграниченияРучныхСкидок
		|";
	
КонецПроцедуры

Функция ПраваДоступаПоУмолчанию()

	ВозвращаемоеЗначение = Новый Структура;
	
	ЗначениеПоУмолчанию = Истина;
	
	ВозвращаемоеЗначение.Вставить("Отложить",        ЗначениеПоУмолчанию);
	ВозвращаемоеЗначение.Вставить("Зарезервировать", ЗначениеПоУмолчанию);
	
	ВозвращаемоеЗначение.Вставить("ВыемкаДенег",   ЗначениеПоУмолчанию);
	ВозвращаемоеЗначение.Вставить("ВнесениеДенег", ЗначениеПоУмолчанию);
	
	ВозвращаемоеЗначение.Вставить("ОткрытьСмену", ЗначениеПоУмолчанию);
	ВозвращаемоеЗначение.Вставить("ЗакрытьСмену", ЗначениеПоУмолчанию);
	
	ВозвращаемоеЗначение.Вставить("ВозвратТовара", ЗначениеПоУмолчанию);
	
	ВозвращаемоеЗначение.Вставить("КорректировкаСтрок",      ЗначениеПоУмолчанию);
	ВозвращаемоеЗначение.Вставить("ИзменениеКартЛояльности", ЗначениеПоУмолчанию);
	ВозвращаемоеЗначение.Вставить("РедактированиеИнформацииОКлиенте", ЗначениеПоУмолчанию);
	ВозвращаемоеЗначение.Вставить("РазрешитьОплатуБезПодтвержденияОтСБП", ЗначениеПоУмолчанию);
	ВозвращаемоеЗначение.Вставить("РазрешитьИзменениеЦеныПриВозвратеБезЧека", ЗначениеПоУмолчанию);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Получить группу пользователя с настройкой продаж для пользователя.
//
// Параметры:
//  Пользователь - СправочникСсылка - Пользователь.
//  Режим - Строка - Режим выбора группы по ограничению (СкидкиНаценки и НастройкиРМК).
// 
// Возвращаемое значение:
// СправочникСсылка.ГруппыПользователей - Группа пользователей.
//
Функция ПолучитьГруппуПользователяСНастройкойПродажДляПользователя(Пользователь, Режим = "СкидкиНаценки") Экспорт
	
	Результат = Неопределено;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСоставаГрупп.Ссылка КАК ГруппаПользователей
	|ИЗ
	|	Справочник.ГруппыПользователей.Состав КАК ТаблицаСоставаГрупп
	|ГДЕ
	|	ТаблицаСоставаГрупп.Пользователь = &Пользователь
	|	И НЕ ТаблицаСоставаГрупп.Ссылка.ПометкаУдаления
	|ИТОГИ ПО
	|	ГруппаПользователей ИЕРАРХИЯ";
	
	ДеревоГрупп = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ТаблицаГруппИерархия = Новый ТаблицаЗначений;
	ТаблицаГруппИерархия.Колонки.Добавить("ГруппаПользователей", Новый ОписаниеТипов("СправочникСсылка.ГруппыПользователей"));
	ТаблицаГруппИерархия.Колонки.Добавить("Приоритет", Новый ОписаниеТипов("Число"));
	
	СформироватьТаблицуГруппПользователейРекурсивно(ДеревоГрупп, ТаблицаГруппИерархия, 1);
	
	Если ТаблицаГруппИерархия.Количество() > 0 Тогда
		
		Запрос.УстановитьПараметр("ТаблицаГруппИерархия", ТаблицаГруппИерархия);
		Запрос.УстановитьПараметр("Режим", Режим);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ВТ.ГруппаПользователей КАК Справочник.ГруппыПользователей) КАК ГруппаПользователей,
		|	ВТ.Приоритет КАК Приоритет
		|ПОМЕСТИТЬ ТаблицаГруппИерархия
		|ИЗ
		|	&ТаблицаГруппИерархия КАК ВТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТаблицаГруппИерархия.ГруппаПользователей КАК ГруппаПользователей
		|ИЗ
		|	ТаблицаГруппИерархия КАК ТаблицаГруппИерархия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиПродажДляПользователей КАК ТаблицаНастроекПродаж
		|		ПО ТаблицаГруппИерархия.ГруппаПользователей = ТаблицаНастроекПродаж.Владелец
		|			И (ВЫБОР
		|				КОГДА &Режим = ""СкидкиНаценки""
		|					ТОГДА ТаблицаНастроекПродаж.ОграничиватьРучныеСкидки
		|				КОГДА &Режим = ""НастройкиРМК""
		|					ТОГДА ТаблицаНастроекПродаж.РМК_Использовать
		|				ИНАЧЕ ТаблицаНастроекПродаж.ОграничиватьРучныеСкидки
		|						И ТаблицаНастроекПродаж.РМК_Использовать
		|			КОНЕЦ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаГруппИерархия.Приоритет УБЫВ,
		|	ТаблицаГруппИерархия.ГруппаПользователей.Наименование";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Результат = Выборка.ГруппаПользователей;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Выполнить рекурсивный обход дерева иерархии выбранных групп пользователей
// и построение таблицы подходящих групп пользователей с учетом приоритета
//
// Параметры:
//  ДеревоГрупп - ДеревоЗначений - Дерево иерархии групп пользователей.
//  ТаблицаНастроекПродаж - ТаблицаЗначений - Пустая таблица значений для заполнения.
//  Приоритет - Число - Приоритет верхнего уровня дерева.
// 
Процедура СформироватьТаблицуГруппПользователейРекурсивно(ДеревоГрупп, ТаблицаНастроекПродаж, Приоритет)
	
	Для Каждого СтрокаДерева Из ДеревоГрупп.Строки Цикл
		
		Если ЗначениеЗаполнено(СтрокаДерева.Родитель)
			И СтрокаДерева.ГруппаПользователей = СтрокаДерева.Родитель.ГруппаПользователей Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаНастроекПродаж.Добавить();
		НоваяСтрока.ГруппаПользователей = СтрокаДерева.ГруппаПользователей;
		НоваяСтрока.Приоритет = Приоритет;
		
		СформироватьТаблицуГруппПользователейРекурсивно(СтрокаДерева, ТаблицаНастроекПродаж, Приоритет + 1);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
