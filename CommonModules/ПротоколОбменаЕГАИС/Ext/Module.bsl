#Область СлужебныеПроцедурыИФункции

Функция ТаблицаДокументы(Документ = Неопределено) Экспорт
	
	ТаблицаДокументы = Новый ТаблицаЗначений;
	ТаблицаДокументы.Колонки.Добавить("ОрганизацияЕГАИС",    Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));
	ТаблицаДокументы.Колонки.Добавить("Ссылка",              Метаданные.Справочники.ЕГАИСПрисоединенныеФайлы.Реквизиты.Документ.Тип);
	ТаблицаДокументы.Колонки.Добавить("Статус",              Метаданные.РегистрыСведений.СтатусыДокументовЕГАИС.Ресурсы.Статус.Тип);
	ТаблицаДокументы.Колонки.Добавить("ДальнейшееДействие1", Новый ОписаниеТипов("ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС"));
	ТаблицаДокументы.Колонки.Добавить("ДальнейшееДействие2", Новый ОписаниеТипов("ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС"));
	ТаблицаДокументы.Колонки.Добавить("ДальнейшееДействие3", Новый ОписаниеТипов("ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС"));
	
	Если Документ <> Неопределено Тогда
		
		ОрганизацияЕГАИС = Новый("СправочникСсылка.КлассификаторОрганизацийЕГАИС");
		
		ЭтоРасширеннаяВерсияГосИС = ОбщегоНазначенияЕГАИС.ЭтоРасширеннаяВерсияГосИС();
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Документ, "ОрганизацияЕГАИС") Тогда
			ОрганизацияЕГАИС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "ОрганизацияЕГАИС");
		ИначеЕсли ЭтоРасширеннаяВерсияГосИС Тогда
			МодульИнтеграцияЕГАИС = ОбщегоНазначения.ОбщийМодуль("ИнтеграцияЕГАИС");
			МодульИнтеграцияЕГАИС.ПриОпределенииОрганизацииЕГАИСпоДокументу(ОрганизацияЕГАИС, Документ);
			МодульИнтеграцияЕГАИСПереопределяемый = ОбщегоНазначения.ОбщийМодуль("ИнтеграцияЕГАИСПереопределяемый");
			МодульИнтеграцияЕГАИСПереопределяемый.ПриОпределенииОрганизацииЕГАИСпоДокументу(ОрганизацияЕГАИС, Документ);
		КонецЕсли;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	&ОрганизацияЕГАИС           КАК ОрганизацияЕГАИС,
		|	Таблица.Документ            КАК Ссылка,
		|	Таблица.Статус              КАК Статус,
		|	Таблица.ДальнейшееДействие1 КАК ДальнейшееДействие1,
		|	Таблица.ДальнейшееДействие2 КАК ДальнейшееДействие2,
		|	Таблица.ДальнейшееДействие3 КАК ДальнейшееДействие3
		|ИЗ
		|	РегистрСведений.СтатусыДокументовЕГАИС КАК Таблица
		|ГДЕ
		|	Таблица.Документ = &ДокументСсылка
		|");
		
		УстановитьПривилегированныйРежим(Истина);
		Запрос.УстановитьПараметр("ДокументСсылка",   Документ);
		Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаДокументы.Добавить(), Выборка);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаДокументы;
	
КонецФункции

Процедура ЗаполнитьПоДокументу(ТаблицаДокументы, ДеревоФайлов, ОтображатьСИерархией = Ложь) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВременнаяТаблицаДокументы.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ВременнаяТаблицаДокументы.Ссылка           КАК Ссылка
	|ПОМЕСТИТЬ ВременнаяТаблицаДокументы
	|ИЗ
	|	&ТаблицаДокументы КАК ВременнаяТаблицаДокументы
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕГАИСПрисоединенныеФайлы.Документ                            КАК Документ,
	|	ЕГАИСПрисоединенныеФайлы.Ссылка                              КАК Ссылка,
	|	ЕГАИСПрисоединенныеФайлы.ТипСообщения                        КАК ТипСообщения,
	|	ЕГАИСПрисоединенныеФайлы.Операция                            КАК Операция,
	|	ЕГАИСПрисоединенныеФайлы.СообщениеОснование                  КАК СообщениеОснование,
	|	ЕГАИСПрисоединенныеФайлы.СтатусОбработки                     КАК СтатусОбработки,
	|	ЕГАИСПрисоединенныеФайлы.ДатаСоздания                        КАК ДатаСоздания,
	|	ЕГАИСПрисоединенныеФайлы.Версия                              КАК Версия,
	|	ВЫРАЗИТЬ(ЕГАИСПрисоединенныеФайлы.Описание КАК Строка(1000)) КАК Описание
	|ПОМЕСТИТЬ втСообщения
	|ИЗ
	|	Справочник.ЕГАИСПрисоединенныеФайлы КАК ЕГАИСПрисоединенныеФайлы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
	|		ПО ЕГАИСПрисоединенныеФайлы.Документ = ВременнаяТаблицаДокументы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ Сообщения
	|ИЗ
	|	втСообщения КАК Сообщения
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСообщения КАК ОтветНаПередачуДанных
	|		ПО Сообщения.Ссылка = ОтветНаПередачуДанных.СообщениеОснование
	|		И (Сообщения.Операция = ОтветНаПередачуДанных.Операция)
	|		И (ОтветНаПередачуДанных.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Входящий))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередьПередачиДанныхЕГАИС КАК ОчередьПередачиДанныхЕГАИС
	|		ПО ОчередьПередачиДанныхЕГАИС.Сообщение = Сообщения.Ссылка
	|ГДЕ
	|	(Сообщения.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Исходящий)
	|	И (ВЫБОР // В очереди
	|		КОГДА ОчередьПередачиДанныхЕГАИС.Сообщение ЕСТЬ NULL ТОГДА
	|			ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|	ИЛИ ВЫБОР // Передано в УТМ
	|		КОГДА ОтветНаПередачуДанных.Ссылка ЕСТЬ NULL ТОГДА
	|			ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ)
	|	ИЛИ
	|	Сообщения.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Входящий))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сообщения.Документ     КАК Документ,
	|	Сообщения.Ссылка       КАК Ссылка,
	|	Сообщения.ДатаСоздания КАК ДатаСоздания,
	|	Сообщения.Операция     КАК Операция
	|ПОМЕСТИТЬ ИсходящиеСообщения
	|ИЗ
	|	Сообщения КАК Сообщения
	|ГДЕ
	|	Сообщения.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Исходящий)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаДанных.Документ КАК Документ,
	|
	|	ПередачаДанных.Ссылка                                          КАК Запрос,
	|	ПередачаДанных.ДатаСоздания                                    КАК ЗапросДатаСоздания,
	|
	|	ЕСТЬNULL(ОтветНаПередачуДанных.Ссылка, &ПустаяСсылка)          КАК КвитанцияУТМ,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.ДатаСоздания, ДатаВремя(1,1,1)) КАК КвитанцияУТМДатаСоздания,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.СтатусОбработки, Неопределено)  КАК КвитанцияУТМСостояниеОбработки,
	|
	|	ЕСТЬNULL(КвитанцияПолученЕГАИС.Ссылка, &ПустаяСсылка)          КАК КвитанцияПолученЕГАИС,
	|	ЕСТЬNULL(КвитанцияПолученЕГАИС.ДатаСоздания, &ПустаяСсылка)    КАК КвитанцияПолученЕГАИСДатаСоздания,
	|	ЕСТЬNULL(КвитанцияПолученЕГАИС.СтатусОбработки, Неопределено)  КАК КвитанцияПолученЕГАИССостояниеОбработки,
	|
	|	ЕСТЬNULL(КвитанцияПроведенЕГАИС.Ссылка, &ПустаяСсылка)         КАК КвитанцияПроведенЕГАИС,
	|	ЕСТЬNULL(КвитанцияПроведенЕГАИС.ДатаСоздания, &ПустаяСсылка)   КАК КвитанцияПроведенЕГАИСДатаСоздания,
	|	ЕСТЬNULL(КвитанцияПроведенЕГАИС.СтатусОбработки, Неопределено) КАК КвитанцияПроведенЕГАИССостояниеОбработки
	|ИЗ
	|	ИсходящиеСообщения КАК ПередачаДанных
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Сообщения КАК ОтветНаПередачуДанных
	|		ПО ПередачаДанных.Ссылка = ОтветНаПередачуДанных.СообщениеОснование
	|		И (ПередачаДанных.Операция = ОтветНаПередачуДанных.Операция)
	|		И (ОтветНаПередачуДанных.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Входящий))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Сообщения КАК КвитанцияПолученЕГАИС
	|		ПО ПередачаДанных.Ссылка = КвитанцияПолученЕГАИС.СообщениеОснование
	|		И (КвитанцияПолученЕГАИС.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Входящий))
	|		И (КвитанцияПолученЕГАИС.Операция В(&КвитанцияПолученЕГАИС))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Сообщения КАК КвитанцияПроведенЕГАИС
	|		ПО ПередачаДанных.Ссылка = КвитанцияПроведенЕГАИС.СообщениеОснование
	|		И (КвитанцияПроведенЕГАИС.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовИС.Входящий))
	|		И (КвитанцияПроведенЕГАИС.Операция В(&КвитанцияПроведенЕГАИС))
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ПередачаДанных.ДатаСоздания ВОЗР,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.ДатаСоздания,   ДатаВремя(1,1,1)) УБЫВ,
	|	ЕСТЬNULL(КвитанцияПолученЕГАИС.ДатаСоздания,   &ПустаяСсылка)    УБЫВ,
	|	ЕСТЬNULL(КвитанцияПроведенЕГАИС.ДатаСоздания,  &ПустаяСсылка)    УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаДокументы.ОрганизацияЕГАИС      КАК ОрганизацияЕГАИС,
	|	ВременнаяТаблицаДокументы.Ссылка                КАК Документ,
	|	ЕСТЬNULL(Запрос.Ссылка,       &ПустаяСсылка)    КАК Ссылка,
	|	ЕСТЬNULL(Запрос.Операция,     Неопределено)     КАК Операция,
	|	ЕСТЬNULL(Запрос.ДатаСоздания, ДатаВремя(1,1,1)) КАК ДатаСоздания,
	|	ЕСТЬNULL(Запрос.ТипСообщения, НЕОПРЕДЕЛЕНО)     КАК ТипСообщения,
	|	ЕСТЬNULL(Запрос.Версия,       1)                КАК Версия,
	|	ЕСТЬNULL(Запрос.Описание, """")                 КАК Описание
	|ИЗ
	|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Сообщения КАК Запрос
	|		ПО Запрос.Документ = ВременнаяТаблицаДокументы.Ссылка
	|		И (Запрос.СообщениеОснование = &ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Запрос.ДатаСоздания
	|ИТОГИ
	|	МАКСИМУМ(ВременнаяТаблицаДокументы.ОрганизацияЕГАИС)      КАК ОрганизацияЕГАИС,
	|	МАКСИМУМ(ЕСТЬNULL(Запрос.ДатаСоздания, ДатаВремя(1,1,1))) КАК ДатаСоздания
	|ПО
	|	ВременнаяТаблицаДокументы.Ссылка
	|");
	
	Запрос.УстановитьПараметр("ТаблицаДокументы", ТаблицаДокументы);
	Запрос.УстановитьПараметр("ПустаяСсылка",     Справочники.ЕГАИСПрисоединенныеФайлы.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("КвитанцияПроведенЕГАИС", Перечисления.ВидыДокументовЕГАИС.КвитанцияПроведенЕГАИС);
	Запрос.УстановитьПараметр("КвитанцияПолученЕГАИС",  Перечисления.ВидыДокументовЕГАИС.КвитанцияПолученЕГАИС);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаПоДокументам = Результат[Результат.Количество() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДанныеКвитанций     = Результат[Результат.Количество() - 2].Выгрузить();
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		ПолноеИмя = ВыборкаПоДокументам.Документ.Метаданные().ПолноеИмя();
		МенеджерОбъекта = ОбщегоНазначенияИС.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
		ПоследовательностьОпераций = МенеджерОбъекта.ПоследовательностьОпераций(ВыборкаПоДокументам.Документ);
		
		Если ОтображатьСИерархией Тогда
			СтрокаПервогоУровня = ДеревоФайлов.ПолучитьЭлементы().Добавить();
			СтрокаПервогоУровня.ОрганизацияЕГАИС = ВыборкаПоДокументам.ОрганизацияЕГАИС;
			СтрокаПервогоУровня.Документ         = ВыборкаПоДокументам.Документ;
			СтрокаПервогоУровня.Представление    = ВыборкаПоДокументам.Документ;
			СтрокаПервогоУровня.ИндексКартинки   = 5;
		Иначе
			СтрокаПервогоУровня = ДеревоФайлов;
		КонецЕсли;
		
		Операция          = Неопределено;
		ЕстьОшибка        = Ложь;
		ТребуетсяОжидание = Ложь;
		
		ВыборкаПоФайлам = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаПоФайлам.Следующий() Цикл
			
			Операция     = ВыборкаПоФайлам.Операция;
			ТипСообщения = ВыборкаПоФайлам.ТипСообщения;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоФайлам.Ссылка) Тогда
				// Если по документу еще не создано файлов
				Операция = ПоследовательностьОпераций[0].Операция;
			КонецЕсли;
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Операция", Операция);
			Если ЗначениеЗаполнено(ТипСообщения) Тогда
				ПараметрыОтбора.Вставить("ТипСообщения", ТипСообщения);
			КонецЕсли;
			НайденныеСтроки = ПоследовательностьОпераций.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() = 0 Тогда
				СтрокаПоследовательности = Неопределено;
			Иначе
				СтрокаПоследовательности = НайденныеСтроки[НайденныеСтроки.Количество() - 1];
			КонецЕсли;
			
			СтрокаВторогоУровня = СтрокаПервогоУровня.ПолучитьЭлементы().Добавить();
			СтрокаВторогоУровня.ОрганизацияЕГАИС = ВыборкаПоФайлам.ОрганизацияЕГАИС;
			СтрокаВторогоУровня.Документ         = ВыборкаПоФайлам.Документ;
			СтрокаВторогоУровня.Файл             = ВыборкаПоФайлам.Ссылка;
			СтрокаВторогоУровня.Операция         = Операция;
			СтрокаВторогоУровня.Дата             = ВыборкаПоФайлам.ДатаСоздания;
			СтрокаВторогоУровня.Представление    = ПредставлениеОперации(СтрокаПоследовательности, ВыборкаПоФайлам.Документ, ВыборкаПоФайлам);
			СтрокаВторогоУровня.ИндексКартинки   = ПротоколОбменаИС.ИндексКартинкиЗапроса(СтрокаПоследовательности);
			
			Если СтрокаПоследовательности <> Неопределено 
				И СтрокаПоследовательности.ТипСообщения = Перечисления.ТипыЗапросовИС.Исходящий Тогда
				
				ДанныеКвитанцийСообщения = ДанныеКвитанций.Найти(ВыборкаПоФайлам.Ссылка, "Запрос");
				ВозвращаемоеЗначение = ОбработатьПередачуДанных(
					ДанныеКвитанцийСообщения,
					СтрокаВторогоУровня,
					СтрокаПоследовательности);
				
				ЕстьОшибка        = ВозвращаемоеЗначение.Ошибка;
				ТребуетсяОжидание = ВозвращаемоеЗначение.Ожидание;
				
			Иначе
				
				ЕстьОшибка        = Ложь;
				ТребуетсяОжидание = Ложь;
				
			КонецЕсли;
			
			Если СтрокаПоследовательности<>Неопределено И Не ТребуетсяОжидание Тогда
				Для Каждого ДальнейшееДействие Из СтрокаПоследовательности.ДальнейшиеДействия Цикл
					СтрокаВторогоУровня.ДальнейшиеДействия.Добавить(ДальнейшееДействие);
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЕстьОшибка Тогда
			СтрокаПоследовательности = ПротоколОбменаИС.ПредыдущаяОперация(ПоследовательностьОпераций, СтрокаПоследовательности);
		КонецЕсли;
		
		Если СтрокаПоследовательности <> Неопределено Тогда
			
			Индекс = ПоследовательностьОпераций.Индекс(СтрокаПоследовательности);
			
			Для Итератор = Индекс + 1 По ПоследовательностьОпераций.Количество() - 1 Цикл
				
				СтрокаСледующаяОперация = ПоследовательностьОпераций.Получить(Итератор);
				Если СтрокаСледующаяОперация.Индекс = 0
					Или СтрокаПоследовательности.Индекс = СтрокаСледующаяОперация.Индекс Тогда
					
					СтрокаВторогоУровня = СтрокаПервогоУровня.ПолучитьЭлементы().Добавить();
					СтрокаВторогоУровня.ОрганизацияЕГАИС   = ВыборкаПоДокументам.ОрганизацияЕГАИС;
					СтрокаВторогоУровня.Документ           = ВыборкаПоДокументам.Документ;
					СтрокаВторогоУровня.Операция           = СтрокаСледующаяОперация.Операция;
					СтрокаВторогоУровня.УсловноеОформление = "УсловноеОформлениеСерый";
					СтрокаВторогоУровня.Представление      = ПредставлениеОперации(СтрокаСледующаяОперация, СтрокаВторогоУровня.Документ, Неопределено);
					СтрокаВторогоУровня.ИндексКартинки     = ПротоколОбменаИС.ИндексКартинкиЗапроса(СтрокаСледующаяОперация, Истина);
					
					Для Каждого ДальнейшееДействие Из СтрокаСледующаяОперация.ДальнейшиеДействия Цикл
						СтрокаВторогоУровня.ДальнейшиеДействия.Добавить(ДальнейшееДействие);
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПредставлениеОперации(СтрокаПоследовательности, ДокументСсылка, ВыборкаПоФайлам = Неопределено)
	
	Если СтрокаПоследовательности = Неопределено Тогда
		
		Возврат "";
		
	ИначеЕсли СтрокаПоследовательности.ТипСообщения = Перечисления.ТипыЗапросовИС.Исходящий Тогда
		
		Если ВыборкаПоФайлам = Неопределено Тогда
			Возврат ОбменДаннымиЕГАИС.ОписаниеОперацииПередачиДанных(СтрокаПоследовательности.Операция, Неопределено, Неопределено);
		Иначе
			Возврат ОбменДаннымиЕГАИС.ОписаниеОперацииПередачиДанных(СтрокаПоследовательности.Операция, Неопределено, ВыборкаПоФайлам.Версия);
		КонецЕсли;
		
	ИначеЕсли СтрокаПоследовательности.ТипСообщения = Перечисления.ТипыЗапросовИС.Входящий Тогда
		
		Если ВыборкаПоФайлам <> Неопределено
			И ЗначениеЗаполнено(ВыборкаПоФайлам.Описание)
			И ВыборкаПоФайлам.Операция = Перечисления.ВидыДокументовЕГАИС.КвитанцияПроведенЕГАИС Тогда
			Возврат ВыборкаПоФайлам.Описание;
		Иначе
			Возврат ОбменДаннымиЕГАИС.ОписаниеОперацииПолученияДанных(СтрокаПоследовательности.Операция);
		КонецЕсли;
		
	Иначе
		
		Возврат Строка(СтрокаПоследовательности.Операция);
		
	КонецЕсли;
	
КонецФункции

Функция ОбработатьПередачуДанных(СтрокаТЧ, СтрокаВторогоУровня, Последовательность)
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Ошибка",   Ложь);
	ВозвращаемоеЗначение.Вставить("Ожидание", Ложь);
	
	Если СтрокаТЧ <> Неопределено И ЗначениеЗаполнено(СтрокаТЧ.КвитанцияУТМ) Тогда
		
		Если ЗначениеЗаполнено(СтрокаТЧ.КвитанцияУТМ)
			И СтрокаТЧ.КвитанцияУТМСостояниеОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.Ошибка Тогда
			
			ВозвращаемоеЗначение.Ошибка = Истина;
			
		ИначеЕсли ЗначениеЗаполнено(СтрокаТЧ.КвитанцияПолученЕГАИС)
			И СтрокаТЧ.КвитанцияПолученЕГАИССостояниеОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.Ошибка Тогда
			
			ВозвращаемоеЗначение.Ошибка = Истина;
			
		ИначеЕсли ЗначениеЗаполнено(СтрокаТЧ.КвитанцияПроведенЕГАИС)
			И СтрокаТЧ.КвитанцияПроведенЕГАИССостояниеОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.Ошибка Тогда
			
			ВозвращаемоеЗначение.Ошибка = Истина;
			
		КонецЕсли;
		
		Если ВозвращаемоеЗначение.Ошибка Тогда
			
			СтрокаВторогоУровня.УсловноеОформление = "УсловноеОформлениеОшибка";
			СтрокаВторогоУровня.ИндексКартинки = 4; // Ошибка
			
		Иначе
			
			Если    (Не ЗначениеЗаполнено(СтрокаТЧ.КвитанцияУТМ) И Последовательность.КвитанцияУТМ)
				Или (Не ЗначениеЗаполнено(СтрокаТЧ.КвитанцияПолученЕГАИС) И Последовательность.КвитанцияПолученЕГАИС)
				Или (Не ЗначениеЗаполнено(СтрокаТЧ.КвитанцияПроведенЕГАИС) И Последовательность.КвитанцияПроведенЕГАИС) Тогда
				
				СтрокаВторогоУровня.ИндексКартинки = 3; // Ожидание
				ВозвращаемоеЗначение.Ожидание = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли СтрокаТЧ <> Неопределено И ЗначениеЗаполнено(СтрокаТЧ.Запрос) Тогда
		
		СтрокаВторогоУровня.ИндексКартинки = 3;
		
	Иначе
		
		СтрокаВторогоУровня.УсловноеОформление = "УсловноеОформлениеСерый";
		СтрокаВторогоУровня.ИндексКартинки = 7;
		
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти