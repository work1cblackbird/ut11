#Область ПрограммныйИнтерфейс

// Инициализировать структуру параметров запроса в ИС МОТП (ИС МП) для получения ключа сессии.
// 
// Параметры:
// 	Организация - ОпределяемыйТип.Организация - Организация.
// Возвращаемое значение:
// 	(См. ИнтерфейсАвторизацииИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии).
Функция ПараметрыЗапросаКлючаСессии(Организация = Неопределено) Экспорт
	
	ПараметрыОтправкиHTTPЗапросов = ПараметрыОтправкиHTTPЗапросов(Неопределено, Истина);
	
	ПараметрыЗапроса = ИнтерфейсАвторизацииИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии();
	ПараметрыЗапроса.Организация = Организация;
	
	ПараметрыЗапроса.ПредставлениеСервиса             = ПараметрыОтправкиHTTPЗапросов.ПредставлениеСервиса;
	ПараметрыЗапроса.Сервер                           = ПараметрыОтправкиHTTPЗапросов.Сервер;
	ПараметрыЗапроса.Порт                             = ПараметрыОтправкиHTTPЗапросов.Порт;
	ПараметрыЗапроса.Таймаут                          = ПараметрыОтправкиHTTPЗапросов.Таймаут;
	ПараметрыЗапроса.ИспользоватьЗащищенноеСоединение = ПараметрыОтправкиHTTPЗапросов.ИспользоватьЗащищенноеСоединение;
	
	ПараметрыЗапроса.ИмяПараметраСеанса                = ИмяДанныхКлючаСессии(ПредопределенноеЗначение("Перечисление.ТипыТокеновАвторизации.ИСМП"));
	ПараметрыЗапроса.АдресЗапросаПараметровАвторизации = "api/v3/true-api/auth/key";
	ПараметрыЗапроса.АдресЗапросаКлючаСессии           = "api/v3/true-api/auth/simpleSignIn";
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

// Инициализировать структуру параметров запроса в ИС МОТП (ИС МП) для получения ключа сессии СУЗ.
// 
// Параметры:
// 	ПараметрыСУЗ - Структура -
// Возвращаемое значение:
// 	(См. ИнтерфейсАвторизацииИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии).
Функция ПараметрыЗапросаКлючаСессииСУЗ(ПараметрыСУЗ) Экспорт
	
	ПараметрыОтправкиHTTPЗапросов = ПараметрыОтправкиHTTPЗапросов(Неопределено, Истина);
	
	ПараметрыЗапроса = ИнтерфейсАвторизацииИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии();
	ПараметрыЗапроса.Организация = ПараметрыСУЗ.Организация;
	
	ПараметрыЗапроса.ПредставлениеСервиса             = НСтр("ru = 'ГИС МТ (СУЗ)'");
	ПараметрыЗапроса.Сервер                           = ПараметрыОтправкиHTTPЗапросов.Сервер;
	ПараметрыЗапроса.Порт                             = ПараметрыОтправкиHTTPЗапросов.Порт;
	ПараметрыЗапроса.Таймаут                          = ПараметрыОтправкиHTTPЗапросов.Таймаут;
	ПараметрыЗапроса.ИспользоватьЗащищенноеСоединение = ПараметрыОтправкиHTTPЗапросов.ИспользоватьЗащищенноеСоединение;
	ПараметрыЗапроса.ИмяПараметраСеанса               = ИмяДанныхКлючаСессии(ПредопределенноеЗначение("Перечисление.ТипыТокеновАвторизации.СУЗ"));
	ПараметрыЗапроса.ПроизводственныйОбъект           = ПараметрыСУЗ.ПроизводственныйОбъект;
	ПараметрыЗапроса.ВремяЖизни                       = 60 * 60 * 9; // 9 часов
	
	ПараметрыЗапроса.АдресЗапросаПараметровАвторизации = "api/v3/true-api/auth/key";
	
	ПараметрыЗапроса.АдресЗапросаКлючаСессии = СтрШаблон(
		"api/v3/true-api/auth/simpleSignIn/%1",
		ПараметрыСУЗ.ИдентификаторСоединения);
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

// Инициализировать структуру параметров запроса в ГИС МТ для получения ключа сессии
// розничной продажи.
// 
// Параметры:
// 	Организация - ОпределяемыйТип.Организация - Организация.
// Возвращаемое значение:
// 	(См. ИнтерфейсАвторизацииИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии).
Функция ПараметрыЗапросаКлючаСессииИСМПРозница(Организация = Неопределено) Экспорт
	
	ПараметрыОтправкиHTTPЗапросов = ПараметрыОтправкиHTTPЗапросов(Неопределено, Истина);
	
	ПараметрыЗапроса = ИнтерфейсАвторизацииИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии();
	ПараметрыЗапроса.Организация = Организация;
	
	ПараметрыЗапроса.ПредставлениеСервиса             = ПараметрыОтправкиHTTPЗапросов.ПредставлениеСервиса;
	ПараметрыЗапроса.Сервер                           = ПараметрыОтправкиHTTPЗапросов.Сервер;
	ПараметрыЗапроса.Порт                             = ПараметрыОтправкиHTTPЗапросов.Порт;
	ПараметрыЗапроса.Таймаут                          = ПараметрыОтправкиHTTPЗапросов.Таймаут;
	ПараметрыЗапроса.ИспользоватьЗащищенноеСоединение = ПараметрыОтправкиHTTPЗапросов.ИспользоватьЗащищенноеСоединение;
	
	ПараметрыЗапроса.ИмяПараметраСеанса                  = ИмяДанныхКлючаСессии(ПредопределенноеЗначение("Перечисление.ТипыТокеновАвторизации.ИСМПРозница"));
	ПараметрыЗапроса.АдресЗапросаПараметровАвторизации   = "api/v3/true-api/auth/key";
	ПараметрыЗапроса.АдресЗапросаКлючаСессии             = "api/v3/true-api/auth/permissive-access";
	ПараметрыЗапроса.РазрешенаПодписьДоверенногоЛицаСМЧД = Ложь;
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

// Возвращает имя параметра сеанса, в котором хранится информация о токене авторизации.
// 
// Параметры:
// 	ТипТокенаАвторизации - ПеречислениеСсылка.ТипыТокеновАвторизации - Тип токена авторизации.
// Возвращаемое значение:
// 	Строка - имя параметра сеанса.
Функция ИмяДанныхКлючаСессии(ТипТокенаАвторизации) Экспорт
	
	Если ТипТокенаАвторизации = ПредопределенноеЗначение("Перечисление.ТипыТокеновАвторизации.ИСМП") Тогда
		Возврат "ДанныеКлючаСессииИСМП";
	ИначеЕсли ТипТокенаАвторизации = ПредопределенноеЗначение("Перечисление.ТипыТокеновАвторизации.СУЗ") Тогда
		Возврат "ДанныеКлючаСессииСУЗ";
	ИначеЕсли ТипТокенаАвторизации = ПредопределенноеЗначение("Перечисление.ТипыТокеновАвторизации.ИСМПРозница") Тогда
		Возврат "ДанныеКлючаСессииИСМПРозница";
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

// Возвращает адрес сервера ИС МП.
//
// Параметры:
//   ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции (В тестовом контуре адреса серверов
//                                                       могут отличаться для различных видов продукции).
//   ИспользоватьTrueAPI - Булево - Использовать true-api
//   ЗагрузкаCDNПлощадок - Булево - Загрузка CDN-площадок
//
// Возвращаемое значение:
//  Строка - адрес сервера ИС МП.
//
Функция АдресСервера(ВидПродукции = Неопределено, ИспользоватьTrueAPI = Ложь, ЗагрузкаCDNПлощадок = Ложь) Экспорт
	
	РежимРаботыСТестовымКонтуромИСМП = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.РежимРаботыСТестовымКонтуромИСМП();
	
	Если РежимРаботыСТестовымКонтуромИСМП Тогда
		Если ИспользоватьTrueAPI Или ЗагрузкаCDNПлощадок Тогда
			Возврат "markirovka.sandbox.crptech.ru";
		Иначе
			Возврат "sandbox.crptech.ru";
		КонецЕсли;
	Иначе
		Если ЗагрузкаCDNПлощадок Тогда
			Возврат "cdn.crpt.ru";
		ИначеЕсли ИспользоватьTrueAPI Тогда
			Возврат "markirovka.crpt.ru";
		Иначе
			Возврат "ismp.crpt.ru";
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Возвращает параметры для отправки HTTP запросов ИС МП.
//
// Параметры:
//   ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции (В тестовом контуре адреса серверов
//                                                       могут отличаться для различных видов продукции).
//   ИспользоватьTrueAPI - Булево - Использовать true-api.
//   ЗагрузкаCDNПлощадок - Булево - Загрузка CDN-площадок
//
// Возвращаемое значение:
//  Структура - Описание:
//   * ИспользоватьЗащищенноеСоединение - Булево - Признак использования SSL.
//   * Таймаут - Число - Таймаут соединения.
//   * Порт - Число - Порт соединения.
//   * Сервер - Строка - Адрес сервера.
//   * ПредставлениеСервиса - Строка - Представления сервиса.
//
Функция ПараметрыОтправкиHTTPЗапросов(ВидПродукции = Неопределено, ИспользоватьTrueAPI = Ложь, ЗагрузкаCDNПлощадок = Ложь) Экспорт
	
	ПараметрыОтправкиHTTPЗапросов = Новый Структура;
	ПараметрыОтправкиHTTPЗапросов.Вставить("ПредставлениеСервиса",             НСтр("ru = 'ГИС МТ'"));
	ПараметрыОтправкиHTTPЗапросов.Вставить("Сервер",                           АдресСервера(ВидПродукции, ИспользоватьTrueAPI, ЗагрузкаCDNПлощадок));
	ПараметрыОтправкиHTTPЗапросов.Вставить("Порт",                             443);
	ПараметрыОтправкиHTTPЗапросов.Вставить("Таймаут",                          60);
	ПараметрыОтправкиHTTPЗапросов.Вставить("ИспользоватьЗащищенноеСоединение", Истина);
	
	Возврат ПараметрыОтправкиHTTPЗапросов;
	
КонецФункции

// Функция преобразовывает список переданных сокращенных наименований гос. органов, устанавливающих
//  блокировку на реализацию конкретных кодов маркировки по данным ГИС МТ, в читаемое представление
// 
// Параметры:
//  МассивИдентификаторов - Массив из Строка - список сокращенных наименований организаций
// 
// Возвращаемое значение:
//  Массив из Строка - список полных наименований организаций
Функция ОрганыВластиУстанавливающиеБлокировкуНаКМПоДаннымГИСМТ(МассивИдентификаторов) Экспорт
	
	МассивПредставлений = Новый Массив;
	
	Если Не ТипЗнч(МассивИдентификаторов) = Тип("Массив") Тогда
		Возврат МассивПредставлений;
	КонецЕсли;
	
	СоответствиеПредставлений = Новый Соответствие();
	СоответствиеПредставлений.Вставить("RAR",  НСтр("ru = 'Росалкогольрегулирование'"));
	СоответствиеПредставлений.Вставить("FTS",  НСтр("ru = 'ФТС России'"));
	СоответствиеПредставлений.Вставить("FNS",  НСтр("ru = 'ФНС России'"));
	СоответствиеПредставлений.Вставить("RSHN", НСтр("ru = 'Россельхознадзор (РСХН)'"));
	СоответствиеПредставлений.Вставить("RPN",  НСтр("ru = 'Роспотребнадзор (РПН)'"));
	СоответствиеПредставлений.Вставить("MVD",  НСтр("ru = 'МВД России'"));
	СоответствиеПредставлений.Вставить("RZN",  НСтр("ru = 'Росздравнадзор'"));
	
	Для Каждого Идентификатор Из МассивИдентификаторов Цикл
		
		ЗначениеПредставления = СоответствиеПредставлений.Получить(Идентификатор);
		
		Если ЗначениеПредставления = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПредставлений.Добавить(ЗначениеПредставления);
		
	КонецЦикла;
	
	Возврат МассивПредставлений;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДоступныеМетодыИнтерфейса() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ЕмкостьУпаковкиПоGTIN",               "ЕмкостьУпаковкиПоGTIN");
	ВозвращаемоеЗначение.Вставить("ВыполнитьАвторизацию",                "ВыполнитьАвторизацию");
	ВозвращаемоеЗначение.Вставить("МестаОсуществленияДеятельности",      "МестаОсуществленияДеятельности");
	ВозвращаемоеЗначение.Вставить("АктуализацияCDNПлощадок",             "АктуализацияCDNПлощадок");
	ВозвращаемоеЗначение.Вставить("ПолучениеРозничногоТокена",           "ПолучениеРозничногоТокена");
	ВозвращаемоеЗначение.Вставить("СписокМестОсуществленияДеятельности", "СписокМестОсуществленияДеятельности");
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти
