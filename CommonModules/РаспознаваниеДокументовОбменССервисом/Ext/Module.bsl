#Область СлужебныйПрограммныйИнтерфейс

Процедура ВключитьОбмен() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	РаспознаваниеДокументовСлужебный.УстановитьПараметрРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбменССервисомРаспознаванияДокументов,
		"Использование",
		Истина
	);
	
КонецПроцедуры

Процедура ВыполнитьОбмен() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Выключение обмена, обмен будет включен при изменении распознанного документа
	РаспознаваниеДокументовСлужебный.УстановитьПараметрРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбменССервисомРаспознаванияДокументов,
		"Использование",
		Ложь
	);
	
	Если РегламентныеЗаданияСервер.РаботаСВнешнимиРесурсамиЗаблокирована() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не РаспознаваниеДокументов.ПодключеноКСервисуРаспознавания(Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбменПоПлануОбмена();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьОбменПоПлануОбмена()
	
	ПланыОбмена.ОбменССервисомРаспознаванияДокументов.СоздатьУзлыСервисаРаспознаванияДокументов();
	
	// Параметры обмена
	Узел = ПланыОбмена.ОбменССервисомРаспознаванияДокументов.УзелСервисаРаспознаванияДокументов();
	НомерПоследнегоУспешногоОбмена = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Узел, "НомерОтправленного");
	НомерТекущегоПакета = НомерПоследнегоУспешногоОбмена + 1;
	
	ОтправитьОбратнуюСвязьRecognitionResult(Узел, НомерТекущегоПакета);
	
	// Фиксация номера последнего успешного обмена
	УзелОбъект = Узел.ПолучитьОбъект();
	УзелОбъект.НомерОтправленного = НомерТекущегоПакета;
	УзелОбъект.Записать();
	
КонецПроцедуры

Процедура ОтправитьОбратнуюСвязьRecognitionResult(Узел, НомерТекущегоПакета)
	
	// Выбрать распознанные документы из очереди и присвоить этим документам номер отправленного пакета.
	Выборка = ПланыОбмена.ВыбратьИзменения(Узел, НомерТекущегоПакета, Метаданные.Документы.РаспознанныйДокумент);
	
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Получить();
		
		// Возможна ситуация, когда объект удален
		Если ТипЗнч(Объект) = Тип("УдалениеОбъекта") Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			
			// Сформировать пакеты отправки и выполнить отправку пакетов в сервис.
			РаспознаваниеДокументов.ОтправитьОбратнуюСвязьRecognitionResult(Объект);
			
		Исключение
			Комментарий = СтрШаблон(
				НСтр("ru = 'Произошла ошибка отправки обратной связи RecognitionResult
				           |по причине:
				           |%1'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				РаспознаваниеДокументов.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, , Объект.Ссылка, Комментарий);
		КонецПопытки;
		
	КонецЦикла;
	
	// Вне зависимости от того удались отправка или произошла ошибка при отправке удаляем документ из очереди
	ПланыОбмена.УдалитьРегистрациюИзменений(Узел, НомерТекущегоПакета);
	
КонецПроцедуры

#КонецОбласти