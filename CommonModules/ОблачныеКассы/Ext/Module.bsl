///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ИнтернетПоддержкаПользователей.ОблачныеКассы".
// ОбщийМодуль.ОблачныеКассы.
//
// Серверые процедуры обмена данными к Облачным кассам:
//  - обновление статуса кассы;
//  - отправка запроса на пробитие чека;
//  - обновление результата выполнения операции пробития чека.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет доступность использования функциональности настройки подключения к Облачным кассам на основании прав
// доступа пользователя.
//
// Возвращаемое значение:
//  Булево - если Истина, настройка подключения к Облачным кассам доступна.
//
Функция НастройкаПодключенияДоступна() Экспорт
	
	Возврат ПравоДоступа("Редактирование", Метаданные.Справочники.НастройкиПодключенияКОблачнымКассам)
		И ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Справочники.НастройкиПодключенияКОблачнымКассам);
	
КонецФункции

// Определяет доступность использования функциональности чтения настроек подключения к Облачным кассам на основании прав
// доступа пользователя.
//
// Возвращаемое значение:
//  Булево - если Истина, чтение настроек подключения к Облачным кассам доступно.
//
Функция ЧтениеНастроекПодключенияДоступно() Экспорт
	
	Возврат ПравоДоступа("Чтение", Метаданные.Справочники.НастройкиПодключенияКОблачнымКассам);
	
КонецФункции

// Определяет доступность использования функциональности выполнения операций на основании прав доступа пользователя.
//
// Возвращаемое значение:
//  Булево - если Истина, пробитие чеков в Облачной кассе и обновление статуса пробития чека доступна.
//
Функция ПробитиеЧековДоступно() Экспорт
	
	Возврат ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ДанныеОперацийОблачныхКасс)
		И ПравоДоступа("Чтение", Метаданные.Справочники.НастройкиПодключенияКОблачнымКассам);
	
КонецФункции

// Возвращает информацию о доступности печати чеков в Облачной кассе.
//
// Параметры:
//  Касса - ОпределяемыйТип.ОблачнаяКасса - ссылка на элемент справочника для которого настроена интеграция с Облачной
//    кассой.
//
// Возвращаемое значение:
//  Структура:
//    * КодОшибки - Строка - строковый код возникшей ошибки, который может быть обработан вызывающим методом.
//        Список ошибок:
//          "ОтсутствуютНастройкиПодключения" - не выполнена настройка подключения Облачной кассы.
//          "НеверныйФорматЗапроса" - передан некорректный запрос или ошибка сериализации данных чека в формат JSON.
//          "ОшибкаАутентификации" - неверный логин или пароль Интернет-поддержки или к системе Облачной кассе.
//          "ТребуетсяОплата" - требуется оплата сервиса.
//          "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису.
//          "ПревышеноКоличествоПопыток" - превышено количество попыток обращения к сервису с некорректным логином и
//            паролем.
//          "СервисВременноНеДоступен" - на сервере ведутся регламентные работы.
//          "ОшибкаСервиса" - внутренняя ошибка сервиса.
//          "ОшибкаПодключения" - ошибка при подключении к сервису.
//          "НеизвестнаяОшибка" - при получении информации возникла неизвестная (не обрабатываемая) ошибка.
//          "ОшибкаСохраненияПараметровПодключения" - ошибка обновления данных аутентификации к сервису Облачной кассы.
//          "ПрочаяОшибка" - ошибка получения идентификатора операции.
//    * СообщениеОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя.
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//    * Результат - Неопределено - ошибка получения состояния Облачной кассы.
//                - Структура - данные ответа Облачный кассы.
//
Функция СостояниеКассы(Касса) Экспорт
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"ОблачныеКассы.СостояниеКассы",
		"Касса",
		Касса,
		Метаданные.ОпределяемыеТипы.ОблачнаяКасса.Тип);
	
	Если Не ЧтениеНастроекПодключенияДоступно() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций с Облачными кассами.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	Возврат ОблачныеКассыСлужебный.СостояниеКассы(Касса);
	
КонецФункции

// Выполняет отправку запроса на пробитие чека в Облачной кассе.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииОблачнойКассы - ссылка на документ инициирующий пробитие чека.
//  Касса - ОпределяемыйТип.ОблачнаяКасса - ссылка на элемент справочника для которого настроена интеграция с Облачной
//    кассой.
//  ДанныеЧека - Структура - запрос операции в формате Структура.
//
// Возвращаемое значение:
//  Структура:
//    * КодОшибки - Строка - строковый код возникшей ошибки, который может быть обработан вызывающим методом.
//        Список ошибок:
//          "ОтсутствуютНастройкиПодключения" - не выполнена настройка подключения Облачной кассы.
//          "НеверныйФорматЗапроса" - передан некорректный запрос или ошибка сериализации данных чека в формат JSON.
//          "ОшибкаАутентификации" - неверный логин или пароль Интернет-поддержки или к системе Облачной кассе.
//          "ТребуетсяОплата" - требуется оплата сервиса.
//          "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису.
//          "ПревышеноКоличествоПопыток" - превышено количество попыток обращения к сервису с некорректным логином и
//            паролем.
//          "СервисВременноНеДоступен" - на сервере ведутся регламентные работы.
//          "ОшибкаСервиса" - внутренняя ошибка сервиса.
//          "ОшибкаПодключения" - ошибка при подключении к сервису.
//          "НеизвестнаяОшибка" - при получении информации возникла неизвестная (не обрабатываемая) ошибка.
//          "ОшибкаСохраненияПараметровПодключения" - ошибка обновления данных аутентификации к сервису Облачной кассы.
//          "ПрочаяОшибка" - ошибка получения идентификатора операции.
//    * СообщениеОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя.
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//    * ДанныеОперации - Структура - данные выполнения операции:
//        * ИдентификаторОперации - Строка - идентификатор операции в информационной базе.
//        * СтатусОперации - Строка - результат выполнения операции Облачной кассы.
//            Список статусов:
//              см. ОблачныеКассыКлиентСервер.СтатусОперацииВыполнена - успешное завершение операции.
//              см. ОблачныеКассыКлиентСервер.СтатусОперацииОтменена - операция отмена.
//              см. ОблачныеКассыКлиентСервер.СтатусОперацииВыполняется - операция выполняется. Для обновления статуса
//                следует вызвать метод см. ОблачныеКассы.СтатусПробитияЧека.
//        * ИдентификаторЧека - Строка - идентификатор операции в системе Облачной кассы.
//        * ОписаниеСтатусаОперации - Строка - описание статуса выполнения операции, полученное из Облачной кассы.
//    * Результат - Неопределено - ошибка отправки запроса на обработку операции Облачной кассы.
//                - Структура - данные ответа Облачный кассы.
//
Функция ПробитьЧек(ДокументОперации, Касса, ДанныеЧека) Экспорт
	
	// Проверка входных параметров
	ИмяФункции = "ОблачныеКассы.ПробитьЧек";
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		ИмяФункции,
		"ДокументОперации",
		ДокументОперации,
		Метаданные.ОпределяемыеТипы.ДокументОперацииОблачнойКассы.Тип);
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		ИмяФункции,
		"Касса",
		Касса,
		Метаданные.ОпределяемыеТипы.ОблачнаяКасса.Тип);
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		ИмяФункции,
		"ДанныеЧека",
		ДанныеЧека,
		Тип("Структура"));
	
	Если Не ПробитиеЧековДоступно() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций с Облачными кассами.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	Возврат ОблачныеКассыСлужебный.ПробитьЧек(ДокументОперации, Касса, ДанныеЧека);
	
КонецФункции

// Выполняет получение статуса пробития чека в Облачной кассе.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииОблачнойКассы - ссылка на документ инициирующий пробитие чека.
//  ВремяОжидания - Число - время ожидания терминального статуса в секундах.
//    Если параметр заполнен, то получение статуса будет выполняться в цикле с небольшими задержками между запросами.
//    Значение по умолчанию: 0 (один запрос).
//
// Возвращаемое значение:
//  Структура:
//    * КодОшибки - Строка - строковый код возникшей ошибки, который может быть обработан вызывающим методом.
//        Список ошибок:
//          "НеверныйФорматЗапроса" - передан некорректный запрос или ошибка сериализации данных чека в формат JSON.
//          "ОшибкаАутентификации" - неверный логин или пароль Интернет-поддержки или к системе Облачной кассе.
//          "ТребуетсяОплата" - требуется оплата сервиса.
//          "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису.
//          "ПревышеноКоличествоПопыток" - превышено количество попыток обращения к сервису с некорректным логином и
//            паролем.
//          "СервисВременноНеДоступен" - на сервере ведутся регламентные работы.
//          "ОшибкаСервиса" - внутренняя ошибка сервиса.
//          "ОшибкаПодключения" - ошибка при подключении к сервису.
//          "НеизвестнаяОшибка" - при получении информации возникла неизвестная (не обрабатываемая) ошибка.
//          "ОшибкаСохраненияПараметровПодключения" - ошибка обновления данных аутентификации к сервису Облачной кассы.
//          "ПрочаяОшибка" - ошибка получения идентификатора операции.
//    * СообщениеОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя.
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//    * ДанныеОперации - Структура - данные выполнения операции:
//        * ИдентификаторОперации - Строка - идентификатор операции в информационной базе.
//        * СтатусОперации - Строка - результат выполнения операции Облачной кассы.
//            Список статусов:
//              см. ОблачныеКассыКлиентСервер.СтатусОперацииВыполнена - успешное завершение операции.
//              см. ОблачныеКассыКлиентСервер.СтатусОперацииОтменена - операция отмена.
//              см. ОблачныеКассыКлиентСервер.СтатусОперацииВыполняется - операция выполняется. Для обновления статуса
//                следует вызвать метод см. ОблачныеКассы.СтатусПробитияЧека.
//        * ИдентификаторЧека - Строка - идентификатор операции в системе Облачной кассы.
//        * ОписаниеСтатусаОперации - Строка - описание статуса выполнения операции, полученное из Облачной кассы.
//    * Результат - Неопределено - ошибка отправки запроса на обработку операции Облачной кассы.
//                - Структура - данные ответа Облачный кассы.
//
Функция СтатусПробитияЧека(ДокументОперации, ВремяОжидания = 0) Экспорт
	
	// Проверка входных параметров
	ИмяФункции = "ОблачныеКассы.СтатусПробитияЧека";
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		ИмяФункции,
		"ДокументОперации",
		ДокументОперации,
		Метаданные.ОпределяемыеТипы.ДокументОперацииОблачнойКассы.Тип);
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		ИмяФункции,
		"ВремяОжидания",
		ВремяОжидания,
		Тип("Число"));
	
	Если Не ПробитиеЧековДоступно() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций с Облачными кассами.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	Возврат ОблачныеКассыСлужебный.СтатусПробитияЧека(ДокументОперации, ВремяОжидания);
	
КонецФункции

// Выполняет загрузку статусов операций Облачных касс, по которым было отложено получение результата.
//
// Возвращаемое значение:
//  Массив из ОпределяемыйТип.ДокументОперацииОблачнойКассы - данные обработанных документов.
//
Функция СтатусыОпераций() Экспорт
	
	Возврат ОблачныеКассыСлужебный.СтатусыОпераций();
	
КонецФункции

// Выполняет установку признака загрузки статуса регламентным заданием, если ранее по документу была выполнена операция
// см. ПробитьЧек. Установка признака доступна только для сформированных операций у которых текущий статус отличный от
// терминального см. ОблачныеКассыСлужебный.ТерминальныйСтатус.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииОблачнойКассы - ссылка на документ инициирующий пробитие чека.
//  Значение - Булево - если Истина, данные статуса будут загружены регламентным заданием.
//
// Возвращаемое значение:
//  Булево - Истина, если признак отложенной загрузки статуса установлен, Ложь если операция не найдена.
//
Функция УстановитьОтложенноеПолучениеСтатуса(ДокументОперации, Значение) Экспорт
	
	// Проверка входных параметров
	ИмяФункции = "ОблачныеКассы.УстановитьОтложенноеПолучениеСтатуса";
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		ИмяФункции,
		"ДокументОперации",
		ДокументОперации,
		Метаданные.ОпределяемыеТипы.ДокументОперацииОблачнойКассы.Тип);
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		ИмяФункции,
		"Значение",
		Значение,
		Тип("Булево"));
	
	Если Не ПробитиеЧековДоступно() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций с Облачными кассами.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	Возврат РегистрыСведений.ДанныеОперацийОблачныхКасс.УстановитьОтложенноеПолучениеСтатуса(
		ДокументОперации,
		Значение);
	
КонецФункции

#КонецОбласти
