#Область ПрограммныйИнтерфейс

#Область Локализация

Процедура МодификацияРеквизитовФормы(Форма, ПараметрыИнтеграции, ДобавляемыеРеквизиты) Экспорт
	
	ДобавитьОбщиеНастройкиВстраивания(Форма, ПараметрыИнтеграции);
	ДобавитьЭлементыПроверкиПодбораЕГАИС(Форма, ПараметрыИнтеграции, ДобавляемыеРеквизиты);
	СобытияФормЕГАИСПереопределяемый.МодификацияРеквизитовФормы(Форма, ПараметрыИнтеграции, ДобавляемыеРеквизиты);
	ДобавитьРеквизитыИнтеграцииЕГАИС(Форма, ПараметрыИнтеграции, ДобавляемыеРеквизиты);
	
КонецПроцедуры

Процедура МодификацияЭлементовФормы(Форма) Экспорт
	
	ПроверкаИПодборПродукцииЕГАИС.МодификацияЭлементовФормы(Форма);
	СобытияФормИС.ВстроитьСтрокуИнтеграцииВДокументОснованиеПоПараметрам(Форма, "ЕГАИС.ДокументОснование");
	ПроверкаИПодборПродукцииЕГАИС.ЗаполнитьКешШтрихкодовУпаковок(Форма);
	ПроверкаИПодборПродукцииЕГАИС.ПрименитьКешШтрихкодовУпаковок(Форма);
	ПроверкаИПодборПродукцииЕГАИС.УправлениеВидимостьюЭлементовПроверкиИПодбора(Форма);
	
КонецПроцедуры

Процедура ЗаполнениеРеквизитовФормы(Форма) Экспорт
	
	СобытияФормЕГАИСПереопределяемый.ЗаполнениеРеквизитовФормы(Форма);
	ИмяРеквизитаФормыОбъект = Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС").ИмяРеквизитаФормыОбъект;
	
	Общие = Форма.ПараметрыИнтеграцииГосИС.Получить("ИС.ДокументОснование");
	ПараметрыИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС.ДокументОснование");
	Если ПараметрыИнтеграции <> Неопределено И ЗначениеЗаполнено(ПараметрыИнтеграции.ИмяРеквизитаФормы) Тогда
		Если ЗначениеЗаполнено(Форма[Общие.ИмяРеквизитаФормы]) Тогда
			Форма.Элементы[ПараметрыИнтеграции.ИмяЭлементаФормы].Видимость = Ложь;
		Иначе
			ТекстНадписи = ИнтеграцияЕГАИСВызовСервера.ТекстДокументаЕГАИС(Форма[ИмяРеквизитаФормыОбъект].Ссылка);
			Форма[ПараметрыИнтеграции.ИмяРеквизитаФормы] = ТекстНадписи;
			Форма.Элементы[ПараметрыИнтеграции.ИмяЭлементаФормы].Видимость = ЗначениеЗаполнено(ТекстНадписи);
		КонецЕсли;
	КонецЕсли;
	
	ПроверкаИПодборПродукцииЕГАИС.ЗаполнитьКешШтрихкодовУпаковок(Форма);
	ПроверкаИПодборПродукцииЕГАИС.ПрименитьКешШтрихкодовУпаковок(Форма);
	ПроверкаИПодборПродукцииЕГАИС.УправлениеВидимостьюЭлементовПроверкиИПодбора(Форма);
	
КонецПроцедуры

Процедура ОбновитьСтатусыОформления(Ссылка, ПараметрыИнтеграцииГосИС, РеквизитыФормыСтатусовОформления) Экспорт
	
	ПараметрыИнтеграции = ПараметрыИнтеграцииГосИС.Получить("ЕГАИС.ДокументОснование");
	Если ПараметрыИнтеграции <> Неопределено И ЗначениеЗаполнено(ПараметрыИнтеграции.ИмяРеквизитаФормы) Тогда
		ТекстНадписи = ИнтеграцияЕГАИСВызовСервера.ТекстДокументаЕГАИС(Ссылка);
		РеквизитыФормыСтатусовОформления.Вставить(ПараметрыИнтеграции.ИмяРеквизитаФормы, ТекстНадписи);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписиНаСервере(Форма) Экспорт
	
	СобытияФормЕГАИСПереопределяемый.ПослеЗаписиНаСервере(Форма);
	
КонецПроцедуры

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	СобытияФормЕГАИСПереопределяемый.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	СобытияФормЕГАИСПереопределяемый.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	
КонецПроцедуры

// Обработчик команды формы, требующей контекстного вызова сервера.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма, из которой выполняется команда.
//   ПараметрыВызова - Структура - параметры вызова.
//   Источник - ТаблицаФормы, ДанныеФормыСтруктура - объект или список формы с полем "Ссылка".
//   Результат - Структура - результат выполнения команды.
//
Процедура ВыполнитьПереопределяемуюКоманду(Знач Форма, Знач ПараметрыВызова, Знач Источник, Результат) Экспорт
	
	СобытияФормЕГАИСПереопределяемый.ВыполнитьПереопределяемуюКоманду(Форма, ПараметрыВызова, Источник, Результат);
	
КонецПроцедуры

#Область СобытияЭлементовФорм

// Серверная переопределяемая процедура, вызываемая из обработчика события элемента.
//
// Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//   Элемент                 - Строка           - имя элемента-источника события "При изменении"
//   ДополнительныеПараметры - Структура        - значения дополнительных параметров влияющих на обработку.
//
Процедура ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	СобытияФормЕГАИСПереопределяемый.ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ДокументыЕГАИС

// Устанавливает оформление колонок количества как целое число для упакованной алкогольной продукции
//
// Параметры:
//   Форма                      - ФормаКлиентскогоПриложения - источник вызова
//   ПолеНеупакованнаяПродукция - Строка           - путь к данным значения "Неупакованная продукция"
//   ПоляКоличество             - Строка           - путь к реквизитам количества (через запятую)
//
Процедура УстановитьУсловноеОформлениеПоляКоличество(Форма, ПолеНеупакованнаяПродукция, Знач ПоляКоличество) Экспорт
	
	ПоляКоличество = СтрРазделить(ПоляКоличество, ",", Ложь);
	
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	
	ЭлементОформления.Использование = Истина;
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Формат", "ЧДЦ=0;");
	
	Для Каждого ПолеКОформлению Из ПоляКоличество Цикл
		ЭлементОформления.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(СокрЛП(ПолеКОформлению));
	КонецЦикла;
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ПолеНеупакованнаяПродукция);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
КонецПроцедуры

// Устанавливает оформление колонок количества как целое число для упакованной алкогольной продукции. Для поля 
//    "Количество упаковок" выполняется дополнительная проверка (на совпадение с полем "Количество")
//
// Параметры:
//   Форма                      - ФормаКлиентскогоПриложения - источник вызова
//   ПолеНеупакованнаяПродукция - Строка           - путь к данным значения "Неупакованная продукция"
//   ПоляКоличество             - Строка           - путь к реквизитам количества (через запятую)
//   ПолеДоступноДробноеКоличество - Строка - путь к данным значения "Доступно указание дробного количествав для алкогольной продукции"
//
Процедура УстановитьУсловноеОформлениеПоляКоличествоСУчетомУпаковок(Форма, ПолеНеупакованнаяПродукция, Знач ПоляКоличество = "", ПолеДоступноДробноеКоличество = "") Экспорт
	
	УстановитьУсловноеОформлениеПоляКоличество(Форма, ПолеНеупакованнаяПродукция, ПоляКоличество);
	
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	
	ЭлементОформления.Использование = Истина;
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Формат", "ЧДЦ=0;");
	ЭлементОформления.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("ТоварыКоличествоУпаковок");
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ПолеНеупакованнаяПродукция);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Если Не ПустаяСтрока(ПолеДоступноДробноеКоличество) Тогда
		
		ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ПолеДоступноДробноеКоличество);
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Ложь;
		
		ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
		
		ЭлементОформления.Использование = Истина;
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Формат", "ЧДЦ=3;");
		ЭлементОформления.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("ТоварыКоличествоУпаковок");
		
		ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ПолеНеупакованнаяПродукция);
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Ложь;
		
		ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ПолеДоступноДробноеКоличество);
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает оформление колонки "Единица измерения ЕГАИС"
//
// Параметры:
//   Форма             - ФормаКлиентскогоПриложения - источник вызова
//   ИмяТабличнойЧасти - Строка - имя табличной части
//   ИспользуетсяНоменклатураЧастичногоВыбытия - Булево - признак наличия реквизита ЭтоНоменклатураЧастичногоВыбытия
//
Процедура УстановитьУсловноеОформлениеПоляЕдиницаИзмеренияЕГАИС(Форма,
	ИмяТабличнойЧасти = "Товары",
	ИспользуетсяНоменклатураЧастичногоВыбытия = Ложь) Экспорт
	
	ПолеНеупакованнаяПродукция = СтрШаблон("Объект.%1.НеупакованнаяПродукция", ИмяТабличнойЧасти);
	ПолеЕдиницаИзмеренияЕГАИС  = СтрШаблон("%1ЕдиницаИзмеренияЕГАИС", ИмяТабличнойЧасти);
	Если ИспользуетсяНоменклатураЧастичногоВыбытия Тогда
		ПолеЭтоНоменклатураЧастичногоВыбытия = СтрШаблон("Объект.%1.ЭтоНоменклатураЧастичногоВыбытия", ИмяТабличнойЧасти);
	КонецЕсли;
	
	//
	Элемент = Форма.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ПолеЕдиницаИзмеренияЕГАИС);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПолеНеупакованнаяПродукция);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'дал'"));
	
	//
	Элемент = Форма.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ПолеЕдиницаИзмеренияЕГАИС);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПолеНеупакованнаяПродукция);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Если ИспользуетсяНоменклатураЧастичногоВыбытия Тогда
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПолеЭтоНоменклатураЧастичногоВыбытия);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Ложь;
	КонецЕсли;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'шт'"));
	
	//
	Если ИспользуетсяНоменклатураЧастичногоВыбытия Тогда
		
		Элемент = Форма.УсловноеОформление.Элементы.Добавить();
		
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ПолеЕдиницаИзмеренияЕГАИС);
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПолеНеупакованнаяПродукция);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Ложь;
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПолеЭтоНоменклатураЧастичногоВыбытия);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'мл'"));
		
	КонецЕсли;
	
КонецПроцедуры

//Устанавливает оформление колонок Цена с нарушениями минимальных цен алкогольной продукции
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - источник вызова
//
Процедура УстановитьУсловноеОформлениеПоляЦена(Форма) Экспорт
	
	Элемент = Форма.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Форма.Элементы.ТоварыЦена.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Цена");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.МинимальнаяЦена");
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаГосИС);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Заполнить алкогольную продукцию строки табличной части.
// 
// Параметры:
//  ТекущаяСтрока - Произвольный - строка (документа), в которой происходит заполнение
//  ПараметрыЗаполнения - См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти
Процедура ЗаполнитьАлкогольнуюПродукциюСтрокиТабличнойЧасти(ТекущаяСтрока, ПараметрыЗаполнения) Экспорт
	
	ЕстьПоляВыбора = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "НоменклатураДляВыбора");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Крепость КАК Крепость
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
	|	И СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика
	|	И (СоответствиеНоменклатурыЕГАИС.Серия = &Серия
	|		ИЛИ &СерияЗаполнена = ЛОЖЬ)
	|	И &ОтборМаркируемаяПродукция
	|	И &ОтборИмпортПроизводство
	|");
	
	Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
	Запрос.УстановитьПараметр("Серия",          ТекущаяСтрока.Серия);
	Запрос.УстановитьПараметр("СерияЗаполнена", ЗначениеЗаполнено(ТекущаяСтрока.Серия));
	
	Запрос.УстановитьПараметр("ОтборМаркируемаяПродукция", Истина);
	Запрос.УстановитьПараметр("ОтборИмпортПроизводство", Истина);
	
	Если ПараметрыЗаполнения.МаркируемаяАлкогольнаяПродукция <> Неопределено Тогда
		Запрос.УстановитьПараметр("ОтборМаркируемаяПродукция", ПараметрыЗаполнения.МаркируемаяАлкогольнаяПродукция);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборМаркируемаяПродукция",
		"СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ВидПродукции.Маркируемый = &ОтборМаркируемаяПродукция");
	КонецЕсли;
	Если ПараметрыЗаполнения.ИмпортПроизводство <> Неопределено Тогда
		Если ПараметрыЗаполнения.ИмпортПроизводство Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборИмпортПроизводство",
			"СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Производитель.ТипОрганизации В(
			|	ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЕГАИС.ЮридическоеЛицоРФ),
			|	ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЕГАИС.ИндивидуальныйПредпринимательРФ))");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборИмпортПроизводство",
			"СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Производитель.ТипОрганизации В(
			|	ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЕГАИС.КонтрагентТаможенногоСоюза),
			|	ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЕГАИС.ИностранныйКонтрагент))");
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	Выборка = Результат.Выбрать();
	
	КоличествоСопоставлено = Выборка.Количество();
	Если ЕстьПоляВыбора Тогда
		ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		Если КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
			Если ПараметрыЗаполнения.ЗаполнитьКрепость Тогда
				ТекущаяСтрока.Крепость = Выборка.Крепость;
				Если ЕстьПоляВыбора Тогда
					ТекущаяСтрока.ПредставлениеКрепости = Выборка.Крепость;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ЕстьПоляВыбора Тогда
			ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.АлкогольнаяПродукция);
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоСопоставлено = 0 Тогда
		ТекущаяСтрока.АлкогольнаяПродукция = Неопределено;
	КонецЕсли;
	Если ЕстьПоляВыбора Тогда
		Если КоличествоСопоставлено > 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		ИначеЕсли КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
		Иначе
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьОбщиеНастройкиВстраивания(Форма, ПараметрыИнтеграции)
	
	ОбщиеНастройки = СобытияФормИС.ОбщиеПараметрыИнтеграции("СобытияФормЕГАИС");
	ПараметрыИнтеграции.Вставить("ЕГАИС", ОбщиеНастройки);
	ПараметрыИнтеграции.Вставить("ЦветГиперссылки", ЦветаСтиля.ЦветГиперссылкиГосИС);
	
КонецПроцедуры

// Встраивает реквизит - форматированную строку перехода к ЕГАИС в прикладные формы
// 
// Параметры:
//   Форма                - ФормаКлиентскогоПриложения - форма в которую происходит встраивание
//   ПараметрыИнтеграции  - Структура        - (См. ПараметрыИнтеграцииЕГАИС)
//   ДобавляемыеРеквизиты - Массив           - массив реквизитов формы к добавлению

Процедура ДобавитьРеквизитыИнтеграцииЕГАИС(Форма, ПараметрыИнтеграции, ДобавляемыеРеквизиты)
	
	ПараметрыИнтеграцииЕГАИС = ПараметрыИнтеграцииЕГАИС(Форма);
	
	Если ЗначениеЗаполнено(ПараметрыИнтеграцииЕГАИС.ИмяРеквизитаФормы) Тогда
		ПараметрыИнтеграции.Вставить("ЕГАИС.ДокументОснование", ПараметрыИнтеграцииЕГАИС);
		Реквизит = Новый РеквизитФормы(
			ПараметрыИнтеграцииЕГАИС.ИмяРеквизитаФормы,
			Новый ОписаниеТипов("ФорматированнаяСтрока"),,
			ПараметрыИнтеграцииЕГАИС.Заголовок);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭлементыПроверкиПодбораЕГАИС(Форма, ПараметрыИнтеграции, ДобавляемыеРеквизиты)
	
	СтандартнаяОбработка = Истина;
	СобытияФормЕГАИСПереопределяемый.ПриОпределенииПараметровИнтеграции(Форма, СтандартнаяОбработка, ПараметрыИнтеграции);
	ПроверкаИПодборПродукцииЕГАИС.МодификацияРеквизитовФормы(Форма, ПараметрыИнтеграции, ДобавляемыеРеквизиты);
	
КонецПроцедуры

// Возвращает структуру, заполненную значениями по умолчанию, используемую для интеграции реквизитов ЕГАИС
//   в прикладные формы конфигурации - потребителя библиотеки ГосИС. Если передана форма - сразу заполняет ее
//   специфику в переопределяемом модуле.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения, Неопределено - форма для которой возвращаются параметры интеграции
//
// ВозвращаемоеЗначение:
//   Структура - (См. СобытияФормИС.ПараметрыИнтеграцииДляДокументаОснования).
//
Функция ПараметрыИнтеграцииЕГАИС(Форма = Неопределено)
	
	ПараметрыНадписи = СобытияФормИС.ПараметрыИнтеграцииДляДокументаОснования();
	ПараметрыНадписи.Вставить("Ключ",                       "ЗаполнениеТекстаДокументаЕГАИС");
	ПараметрыНадписи.Вставить("ИмяЭлементаФормы",           "ТекстДокументаЕГАИС");
	ПараметрыНадписи.Вставить("ИмяРеквизитаФормы",          "ТекстДокументаЕГАИС");
	
	Если НЕ(Форма = Неопределено) Тогда
		СобытияФормЕГАИСПереопределяемый.ПриОпределенииПараметровИнтеграцииЕГАИС(Форма, ПараметрыНадписи);
	КонецЕсли;
	
	Возврат ПараметрыНадписи;
	
КонецФункции

#КонецОбласти

