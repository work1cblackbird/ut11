#Область ПрограммныйИнтерфейс

// Ищет имеющиеся и создает новые счета-фактуры полученные или иные документы подтверждения НДС
// по таблице оснований.
//
// Параметры:
//   ТаблицаОснований - ТаблицаЗначений - Таблица с данными для регистрации счетов-фактур, содержащая колонки:
//          * ИдентификаторСтроки - Строка - Идентификатор строки
//          * Контрагент - СправочникСсылка.Контрагенты - Поставщик
//          * Дата - Дата - дата документа приобретения ценностей
//          * Валюта - СправочникСсылка.Валюты - Валюта счета-фактуры
//          * ПредъявленСФ - Булево - Истина, если предъявлен счет-фактура, иначе считается, что это иной документ
//          * НомерСФ - Строка - Входящий номер счета-фактуры
//          * ДатаСФ - Дата - Входящая дата счета-фактуры (дата составления)
//          * НаименованиеДокумента - Строка - Наименование иного документа подтверждения НДС
//          * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Тип налогообложение НДС поставщика
// 
// Возвращаемое значение:
//   ТаблицаЗначений - таблица с колонками СчетФактура, ДокументОснование и ИдентификаторСтроки
//
Функция ЗарегистрироватьСчетаФактурыПолученныеПоТаблицеОснований(ТаблицаОснований) Экспорт
	
	ТаблицаСФ = ТаблицаОснований.Скопировать(,"ИдентификаторСтроки,ДокументОснование");
	ТаблицаСФ.Колонки.Добавить("СчетФактура");
	ТаблицаСФ.Индексы.Добавить("ДокументОснование");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОснований", ТаблицаОснований);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование,
	|	ТаблицаОснований.ПредъявленСФ,
	|	ТаблицаОснований.НаименованиеДокумента,
	|	ТаблицаОснований.НомерСФ,
	|	ТаблицаОснований.ДатаСФ,
	|	ТаблицаОснований.Контрагент,
	|	ТаблицаОснований.Организация,
	|	ТаблицаОснований.Валюта,
	|	ТаблицаОснований.Дата,
	|	ТаблицаОснований.НалогообложениеНДС
	|ПОМЕСТИТЬ СчетаФактурыИтог
	|ИЗ
	|	&ТаблицаОснований КАК ТаблицаОснований
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаОснований.ПредъявленСФ
	|;
	|
	|ВЫБРАТЬ
	|	СчетаФактурыИтог.ПредъявленСФ,
	|	СчетаФактурыИтог.ДокументОснование,
	|	СчетаФактурыИтог.Организация,
	|	СчетаФактурыИтог.Дата,
	|	СчетаФактурыИтог.НомерСФ,
	|	СчетаФактурыИтог.ДатаСФ,
	|	СчетаФактурыИтог.Контрагент,
	|	СчетаФактурыИтог.Валюта,
	|	СчетаФактурыИтог.НалогообложениеНДС,
	|	NULL КАК НаименованиеДокумента,
	|	СозданныеСчетаФактуры.Ссылка КАК СчетФактура,
	|	СозданныеСчетаФактуры.Ссылка ЕСТЬ NULL КАК СчетФактураОтсутствует
	|ИЗ
	|	СчетаФактурыИтог
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК СозданныеСчетаФактуры
	|		
	|	ПО
	|		СозданныеСчетаФактуры.Ссылка.Номер = СчетаФактурыИтог.НомерСФ
	|		И СозданныеСчетаФактуры.Ссылка.ДатаСоставления = СчетаФактурыИтог.ДатаСФ
	|		И СозданныеСчетаФактуры.Ссылка.Контрагент = СчетаФактурыИтог.Контрагент
	|		И СозданныеСчетаФактуры.Ссылка.Валюта = СчетаФактурыИтог.Валюта
	|		И СозданныеСчетаФактуры.Ссылка.Организация = СчетаФактурыИтог.Организация
	|		И СозданныеСчетаФактуры.ДокументОснование = СчетаФактурыИтог.ДокументОснование
	|ГДЕ
	|	СчетаФактурыИтог.ПредъявленСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаФактурыИтог.ПредъявленСФ,
	|	СчетаФактурыИтог.ДокументОснование,
	|	СчетаФактурыИтог.Организация,
	|	СчетаФактурыИтог.Дата,
	|	СчетаФактурыИтог.НомерСФ,
	|	СчетаФактурыИтог.ДатаСФ,
	|	СчетаФактурыИтог.Контрагент,
	|	NULL,
	|	NULL,
	|	СчетаФактурыИтог.НаименованиеДокумента,
	|	СозданныеСчетаФактуры.Ссылка КАК СчетФактура,
	|	СозданныеСчетаФактуры.Ссылка ЕСТЬ NULL КАК СчетФактураОтсутствует
	|ИЗ
	|	СчетаФактурыИтог
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ИнойДокументПодтвержденияНДС КАК СозданныеСчетаФактуры
	|		
	|	ПО
	|		СозданныеСчетаФактуры.НомерВходящегоДокумента = СчетаФактурыИтог.НомерСФ
	|		И СозданныеСчетаФактуры.ДатаВходящегоДокумента = СчетаФактурыИтог.ДатаСФ
	|		И СозданныеСчетаФактуры.Дата = СчетаФактурыИтог.Дата
	|		И СозданныеСчетаФактуры.НаименованиеДокумента = СчетаФактурыИтог.НаименованиеДокумента
	|		И СозданныеСчетаФактуры.Контрагент = СчетаФактурыИтог.Контрагент
	|		И СозданныеСчетаФактуры.Организация = СчетаФактурыИтог.Организация
	|		И СозданныеСчетаФактуры.ДокументОснование = СчетаФактурыИтог.ДокументОснование
	|ГДЕ
	|	НЕ СчетаФактурыИтог.ПредъявленСФ
	|";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СчетФактураОтсутствует Тогда
			Если Выборка.ПредъявленСФ Тогда
				Если Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
					ПолноеИмяДокумента = "СчетФактураПолученныйНалоговыйАгент";
				Иначе
					ПолноеИмяДокумента = "СчетФактураПолученный";
				КонецЕсли;
			Иначе
				ПолноеИмяДокумента = "ИнойДокументПодтвержденияНДС";
			КонецЕсли;
			ДокументОбъект = Документы[ПолноеИмяДокумента].СоздатьДокумент();
			ДанныеЗаполнения = Новый Структура;
			ДанныеЗаполнения.Вставить("Организация", Выборка.Организация);
			ДанныеЗаполнения.Вставить("Контрагент", Выборка.Контрагент);
			ДанныеЗаполнения.Вставить("Дата", Выборка.Дата);
			ДанныеЗаполнения.Вставить("НомерСФ", Выборка.НомерСФ);
			ДанныеЗаполнения.Вставить("ДатаСоставления", Выборка.ДатаСФ);
			ДанныеЗаполнения.Вставить("ДокументОснование", Выборка.ДокументОснование);
			ДанныеЗаполнения.Вставить("НаименованиеДокумента", Выборка.НаименованиеДокумента);
			ДокументОбъект.Заполнить(ДанныеЗаполнения);
			ДокументОбъект.Записать();
			СчетФактура = ДокументОбъект.Ссылка;
		Иначе
			СчетФактура = Выборка.СчетФактура;
		КонецЕсли;
		
		СтрокиТЧ = ТаблицаСФ.НайтиСтроки(Новый Структура("ДокументОснование", Выборка.ДокументОснование));
		Для каждого СтрокаТЧ Из СтрокиТЧ Цикл
			СтрокаТЧ.СчетФактура = СчетФактура;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаСФ.Индексы.Добавить("ИдентификаторСтроки");
	Возврат ТаблицаСФ;
	
КонецФункции

// Процедура дополняет запрос получения данных шапок документов для печатной формы УПД признаком ТребуетсяНаличиеСФ
// Этот признак необходим для определения статуса формы УПД 1 (если требуется СФ) или 2 (только первичный документ, без СФ).
// 
// Параметры:
//  Запрос - Запрос - запрос с текстом формирования временной таблицы ТаблицаДанныхДокументов
//  ДополнительныеПоля - Строка - идентификаторы дополнительных полей из шапки документа, по которому печатается УПД. 
//
Процедура ДополнитьЗапросПолученияДанныхДляПечатиУПД(Запрос, ДополнительныеПоля = "") Экспорт
	
	ПоляЗапроса = "Валюта,Организация,Подразделение,Склад,Период," + ДополнительныеПоля;
	МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ПоляЗапроса,",");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПОМЕСТИТЬ ТаблицаДанныхДокументов", "ПОМЕСТИТЬ ТаблицаДанныхДокументов_Предварительная");
	ТекстТребуетсяНаличиеСФ = "
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПервичныхДокументов.ДатаРегистратора КАК Дата,
	|	ДанныеПервичныхДокументов.Организация КАК Организация,
	|	ДанныеПервичныхДокументов.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеПервичныхДокументов.Документ КАК Ссылка
	|ПОМЕСТИТЬ ДанныеПервичныхДокументов
	|ИЗ
	|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|ГДЕ
	|	ДанныеПервичныхДокументов.Документ В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПервичныхДокументов.Организация         КАК Организация,
	|	ДанныеПервичныхДокументов.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеПервичныхДокументов.Ссылка              КАК Ссылка,
	|	МАКСИМУМ(НастройкиУчетаНДС.Период) КАК Период
	|ПОМЕСТИТЬ ПериодыУчетныхПолитик
	|ИЗ
	|	ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ПО
	|		ДанныеПервичныхДокументов.Дата >= НастройкиУчетаНДС.Период
	|		И ДанныеПервичныхДокументов.ГоловнаяОрганизация = НастройкиУчетаНДС.Организация
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПервичныхДокументов.Организация,
	|	ДанныеПервичныхДокументов.ГоловнаяОрганизация,
	|	ДанныеПервичныхДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыУчетныхПолитик.Организация                     КАК Организация,
	|	ПериодыУчетныхПолитик.Ссылка                          КАК Ссылка,
	|	НастройкиУчетаНДС.ПрименяетсяОсвобождениеОтУплатыНДС  КАК ПрименяетсяОсвобождениеОтУплатыНДС
	|ПОМЕСТИТЬ УчетнаяПолитика
	|ИЗ
	|	ПериодыУчетныхПолитик КАК ПериодыУчетныхПолитик
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ПО
	|		ПериодыУчетныхПолитик.Период = НастройкиУчетаНДС.Период
	|		И ПериодыУчетныхПолитик.ГоловнаяОрганизация = НастройкиУчетаНДС.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	&Поля,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА НЕ ЖурналФискальныхОпераций.ДокументОснование ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			КОГДА ДанныеОснованийСчетовФактур.НалогообложениеНДС =
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС)
	|				ТОГДА ЛОЖЬ
	|			КОГДА ДанныеОснованийСчетовФактур.НалогообложениеНДС В (
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС))
	|					И УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС
	|				ТОГДА ИСТИНА
	|			КОГДА ДанныеОснованийСчетовФактур.НалогообложениеНДС В (
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|					И ДанныеОснованийСчетовФактур.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНаличиеСФ
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	ТаблицаДанныхДокументов_Предварительная КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		ПО ДанныеДокументов.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
	|			И (ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторМетаданных)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналФискальныхОпераций КАК ЖурналФискальныхОпераций
	|		ПО ДанныеДокументов.Ссылка = ЖурналФискальныхОпераций.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО ДанныеДокументов.Ссылка = УчетнаяПолитика.Ссылка
	|			И ДанныеДокументов.Организация = УчетнаяПолитика.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Ссылка,
	|	&Поля
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Для Индекс = 0 По МассивПолей.Количество()-1 Цикл
		МассивПолей[Индекс] = СтрШаблон("ДанныеДокументов.%1", МассивПолей[Индекс]);
	КонецЦикла;
	ТекстПолей = СтрСоединить(МассивПолей,",");
	ТекстТребуетсяНаличиеСФ = СтрЗаменить(ТекстТребуетсяНаличиеСФ, "&Поля", ТекстПолей);
	Запрос.Текст = Запрос.Текст + ТекстТребуетсяНаличиеСФ;
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный"));
	
КонецПроцедуры

// Возвращает массив типов документов, для которых используется ручная корректировка журнала счетов-фактур.
//	Возвращаемое значение:
//		Массив - массив типов документов.
//
Функция КорректируютсяЗаписиВЖурналеСФ() Экспорт
	
	МассивВозврата = Новый Массив;
	
	МассивВозврата.Добавить(Тип("ДокументСсылка.ЗаписьКнигиПокупок"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ИнойДокументПодтвержденияНДС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СводнаяСправкаНДС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СчетФактураВыданный"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СчетФактураВыданныйАванс"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СчетФактураКомиссионеру"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СчетФактураКомитента"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СчетФактураНалоговыйАгент"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СчетФактураНаНеподтвержденнуюРеализацию0"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СчетФактураПолученный"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СчетФактураПолученныйАванс"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт"));
	
	Возврат МассивВозврата;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ПолучениеНастроекИПараметровУчетаНДС

// Возвращает дату начала отражения возвратов корректировочными счетами-фактурами 
//
// Возвращаемое значение:
//   Дата   - по умолчанию 01 января 2019 года
//
Функция ДатаОтраженияВозвратовКорректировочнымиСФ() Экспорт

	Возврат '20190101';

КонецФункции

// Возвращает Истина, если указанная дата меньше даты начала действия закона 150-ФЗ
// В противном случае - Ложь.
// 
// Параметры:
//   Дата - Дата - проверяемая дата
// 
// Возвращаемое значение:
//   Булево -
//
Функция УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(Дата) Экспорт
	
	Возврат УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта <= Дата;
	
КонецФункции

// Определяет, является ли страна членом Таможенного союза
//
// Параметры:
//	Страна - СправочникСсылка.СтраныМира - Страна, для которой нужно определить членство в Таможенном союзе
//	Период - Дата - Дата, на которую необходимо определить членство в Таможенном союзе для страны. 
//			 Если не указано, то членство определяется на текущую дату.
//
// Возвращаемое значение:
//	Булево - Истина, если страна является членом Таможенного союза, иначе - Ложь.
//
Функция СтранаЯвляетсяЧленомТаможенногоСоюза(Страна, Период = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Страна) 
		ИЛИ ТипЗнч(Страна) <> Тип("СправочникСсылка.СтраныМира") Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	КодСтраны = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Страна, "Код");
	
	Если Период = Неопределено Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Период >= '2015-01-01' 
			И (КодСтраны = "112" ИЛИ КодСтраны = "398") Тогда // Казахстан, Беларусь
		Возврат Истина;
	КонецЕсли;
	
	Если Период >= '2015-01-02' И КодСтраны = "051" Тогда // Армения
		Возврат Истина;
	КонецЕсли;
	
	Если Период >= '2015-08-12' И КодСтраны = "417" Тогда // Киргизия
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область СтавкиНДС

// Возвращает текст выбора ставки НДС по умолчанию для подстановки в запрос.
//
// Параметры:
//  ПараметрыЗапроса - Запрос - Запрос, для которого требуется установить текст получения ставки НДС по умолчанию.
//  ИсточникДаты - Строка - путь к дате в запросе на которую необходимо получить ставку НДС по умолчанию,
//               если дата пустая, то будет получена ставка НДС на текущую дату
//  РасчетнаяСтавка - Булево - указывает необходимость получения расчетной ставки НДС X/(100 + X).
//
// Возвращаемое значение:
//	Строка - текст выбора ставки НДС.
//
Функция ТекстВыбораСтавкиНДСПоУмолчанию(ПараметрыЗапроса, ИсточникДаты = Неопределено, РасчетнаяСтавка = Ложь) Экспорт
	
	Если РасчетнаяСтавка Тогда
		СтавкаНДСДО2019		= УчетНДСЛокализация.СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС18_118);
		СтавкаНДСПосле2019 	= УчетНДСЛокализация.СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС20_120);
	Иначе
		СтавкаНДСДО2019		= УчетНДСЛокализация.СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС18);
		СтавкаНДСПосле2019 	= УчетНДСЛокализация.СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС20);
	КонецЕсли;
	
	ПараметрыЗапроса.Вставить("СтавкаНДСПосле2019", СтавкаНДСПосле2019);
	ПараметрыЗапроса.Вставить("СтавкаНДСДО2019", СтавкаНДСДО2019);
	
	Если ИсточникДаты = Неопределено Тогда
		Если ТекущаяДатаСеанса() > '20190101' Тогда
			Возврат "&СтавкаНДСПосле2019";
		Иначе
			Возврат "&СтавкаНДСДО2019";
		КонецЕсли;
	Иначе
		Возврат СтрШаблон(
		"ВЫБОР
		|	КОГДА %1 >= ДАТАВРЕМЯ(2019, 1, 1) ИЛИ (%1 = ДАТАВРЕМЯ(1, 1, 1) И ДАТАВРЕМЯ(%2) >= ДАТАВРЕМЯ(2019, 1, 1))
		|		ТОГДА &СтавкаНДСПосле2019
		|	ИНАЧЕ &СтавкаНДСДО2019
		|КОНЕЦ", ИсточникДаты, Формат(ТекущаяДатаСеанса(), "ДФ='yyyy, MM, dd'"));
	КонецЕсли;
	
КонецФункции

// Возвращает текст выбора процента НДС для подстановки в запрос.
//
// Параметры:
//  ИсточникСтавкаНДС - Строка - путь к ставке НДС в запросе для которой необходимо получить процент НДС.
//
// Возвращаемое значение:
//	Строка - текст выбора процента НДС.
//
Функция ТекстВыбораПроцентаНДС(ИсточникСтавкаНДС) Экспорт
	
	Возврат СтрШаблон("ВЫРАЗИТЬ (%1 КАК Справочник.СтавкиНДС).Ставка", ИсточникСтавкаНДС);
	
КонецФункции

// В функции указывается соответствие строковых представлений ставок НДС (используемые в БЭД)
// с прикладными значениями этих ставок.
//
// Параметры:
//   СоответствиеСтавокНДС - см. ОбменСКонтрагентамиПереопределяемый.ЗаполнитьСоответствиеСтавокНДС.
// Возвращаемое значение:
//   Соответствие Из КлючИЗначение:
//    * Ключ - Строка - строковое представление ставки НДС
//    * Значение - ПеречислениеСсылка.СтавкиНДС, Строка - прикладное значение ставки НДС  
//     - заполняемое соответствие ставок НДС. Возможные значения ставок в подсистеме:
//                                    "0",
//                                    "10",
//                                    "18",
//                                    "10/110",
//                                    "18/118",
//                                    "20",
//                                    "20/120",
//                                    "без НДС",
//                                    "НДС исчисляется налоговым агентом".
// 
Функция СоответствиеСтавокНДССтроковымЗначениям(СоответствиеСтавокНДС = Неопределено) Экспорт
	
	Соответствие = ?(СоответствиеСтавокНДС = Неопределено, Новый Соответствие, СоответствиеСтавокНДС);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтавкиНДС.Ставка КАК Ставка,
		|	СтавкиНДС.Ссылка КАК Ссылка,
		|	СтавкиНДС.РасчетнаяСтавка КАК РасчетнаяСтавка
		|ИЗ
		|	Справочник.СтавкиНДС КАК СтавкиНДС
		|ГДЕ
		|	НЕ СтавкиНДС.Ссылка = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.РасчетнаяСтавка Тогда
			КлючСоответствия = Строка(ВыборкаДетальныеЗаписи.Ставка) + "/" + Строка(ВыборкаДетальныеЗаписи.Ставка + 100);
		Иначе
			КлючСоответствия = Строка(ВыборкаДетальныеЗаписи.Ставка);
		КонецЕсли;
		
		Соответствие.Вставить(КлючСоответствия , ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Соответствие.Вставить("без НДС", Справочники.СтавкиНДС.БезНДС);
	
	Возврат Соответствие;
	
КонецФункции

#КонецОбласти

#Область УчетВходящегоНДС

#Область РегистрацияСчетовФактурПолученных

// см. УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПередЗаписью
Процедура АктуализироватьСчетаФактурыПолученныеПередЗаписью(ПараметрыРегистрации, Знач РежимЗаписи, Знач ПометкаУдаления, Знач Проведен) Экспорт
	
	СчетФактураНеТребуется = СчетФактураПолученныйНеТребуется(ПараметрыРегистрации);
	
	ДокументПроведен = Ложь;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ДокументПроведен = Истина;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись И Проведен Тогда
		ДокументПроведен = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументЗакупки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументЗакупки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	СчетаФактуры.Ссылка.Проведен КАК Проведен,
	|	СчетаФактуры.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|	ПО 
	|		СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	СчетаФактуры.Ссылка.Проведен КАК Проведен,
	|	СчетаФактуры.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК ТаблицаОснований
	|	ПО 
	|		СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка
	|";
	Запрос.УстановитьПараметр("ДокументЗакупки", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПометитьНаУдаление = Ложь;
		ОтменитьПроведение = Ложь;
		
		// Проверка типа счета-фактуры по налогообложению.
		Если (ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный") 
				И ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
			 ИЛИ (ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент")
				И ПараметрыРегистрации.НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)Тогда
			ПометитьНаУдаление = Истина;
		КонецЕсли;
		
		// Синхронизация проведения и пометки удаления.
		Если НЕ Выборка.ПометкаУдаления
			 И (ПометкаУдаления
			    Или Выборка.Организация <> ПараметрыРегистрации.Организация
			    Или СчетФактураНеТребуется) Тогда
			ПометитьНаУдаление = Истина;
		ИначеЕсли Выборка.Проведен И НЕ ДокументПроведен Тогда
			ОтменитьПроведение = Истина;
		КонецЕсли;
		
		Если ПометитьНаУдаление Или ОтменитьПроведение Тогда
			ИмяДокумента = Выборка.Ссылка.Метаданные().ПолноеИмя();
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		КонецЕсли;
		
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный")
		 Или Не ТипЗнч(ПараметрыРегистрации.Ссылка) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
		 Или Не Выборка.Проведен Тогда
			Если ПометитьНаУдаление Тогда
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				Если Выборка.КоличествоОснований = 1 Тогда
					ДокументОбъект.УстановитьПометкуУдаления(Истина);
				Иначе
					СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(ПараметрыРегистрации.Ссылка);
					Если СтрокаКУдалению <> Неопределено Тогда
						ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
						Если ДокументОбъект.Проведен Тогда
							РежимЗаписи = РежимЗаписиДокумента.Проведение;
						Иначе
							РежимЗаписи = РежимЗаписиДокумента.Запись;
						КонецЕсли;
						ДокументОбъект.Записать(РежимЗаписи);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ОтменитьПроведение Тогда
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				Если Выборка.КоличествоОснований = 1 Тогда
					ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Иначе
					СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(ПараметрыРегистрации.Ссылка);
					Если СтрокаКУдалению <> Неопределено Тогда
						ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
						Если ДокументОбъект.Проведен Тогда
							РежимЗаписи = РежимЗаписиДокумента.Проведение;
						Иначе
							РежимЗаписи = РежимЗаписиДокумента.Запись;
						КонецЕсли;
						ДокументОбъект.Записать(РежимЗаписи);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ПометитьНаУдаление Или ОтменитьПроведение Тогда
			УчетНДСРФВызовСервера.ОчиститьДокументПриобретенияВСчетеФактуреПолученномНалоговогоАгента(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// см. УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриПроведении
Процедура АктуализироватьСчетаФактурыПолученныеПриПроведении(ПараметрыРегистрации) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.Проведен КАК Проведен
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументЗакупки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Проведен КАК Проведен
	|ИЗ
	|	Документ.ИнойДокументПодтвержденияНДС КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументЗакупки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.Проведен КАК Проведен
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументЗакупки
	|";
	Запрос.УстановитьПараметр("ДокументЗакупки", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Блокировка = Новый БлокировкаДанных;
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураПолученный");
		ИначеЕсли ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ИнойДокументПодтвержденияНДС") Тогда
			ЭлементБлокировки = Блокировка.Добавить("Документ.ИнойДокументПодтвержденияНДС");
		Иначе
			ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураПолученныйНалоговыйАгент");
		КонецЕсли;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный")
		 Или Не ТипЗнч(ПараметрыРегистрации.Ссылка) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
		 Или Не Выборка.Проведен Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ДополнительныеСвойства.Вставить("ПроверкаДокументов_Отключить", Истина);
			Если Выборка.Проведен Тогда
				ДокументОбъект.ДополнительныеСвойства.Вставить("АктуализацияДвижений", Истина);
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				Если ТипЗнч(Выборка.Ссылка) <> Тип("ДокументСсылка.ИнойДокументПодтвержденияНДС") Тогда
					ДокументОбъект.ЗаполнитьПараметрыСчетаФактурыПоОснованию();
				КонецЕсли;
				ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		Иначе
			УчетНДСРФВызовСервера.ОтразитьПолучениеТовараСОбратнымОбложениемНДС(Выборка.Ссылка, ПараметрыРегистрации.Ссылка);
		КонецЕсли;
			
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не СчетФактураПолученныйНеТребуется(ПараметрыРегистрации) Тогда
		ОснованияСчетаФактуры = Новый Массив;
		ОснованияСчетаФактуры.Добавить(ПараметрыРегистрации.Ссылка);
		РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОбновитьСостояние(ПараметрыРегистрации.Ссылка, ОснованияСчетаФактуры);
	КонецЕсли;

КонецПроцедуры

// см. УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриУдаленииПроведения
Процедура АктуализироватьСчетаФактурыПолученныеПриУдаленииПроведения(ПараметрыРегистрации) Экспорт
	
	ОснованияСчетаФактуры = Новый Массив;
	ОснованияСчетаФактуры.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОбновитьСостояние(ПараметрыРегистрации.Ссылка, ОснованияСчетаФактуры, Истина);
	
КонецПроцедуры

// см. УчетНДСУП.СчетаФактурыПолученныеНаОсновании
Функция СчетаФактурыПолученныеНаОсновании(ПараметрыРегистрации) Экспорт
	
	Если ПараметрыРегистрации.ВвозТоваровИзТаможенногоСоюза Тогда
		Возврат ЗаявленияОВвозеТоваровПоДокументуЗакупки(ПараметрыРегистрации);
	Иначе
		Возврат СчетаФактурыПолученныеПоДокументуЗакупки(ПараметрыРегистрации);
	КонецЕсли;
	
КонецФункции

// см. УчетНДСУП.СчетаФактурыПолученныеПоДокументамОснованиям
Функция СчетаФактурыПолученныеПоДокументамОснованиям(ДокументыОснования, ТолькоПроведенные) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.ДатаСоставления КАК ДатаСоставления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаОснований.Ссылка.РучнаяКорректировкаСуммДокумента КАК РучнаяКорректировкаСуммДокумента
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование В (&ДокументыОснования)
	|	И НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|	И (ТаблицаОснований.Ссылка.Проведен 
	|		ИЛИ НЕ &ТолькоПроведенные)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.ДатаСоставления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления,
	|	ЛОЖЬ КАК РучнаяКорректировкаСуммДокумента
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование В (&ДокументыОснования)
	|	И НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|	И (ТаблицаОснований.Ссылка.Проведен 
	|		ИЛИ НЕ &ТолькоПроведенные)
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСоставления ВОЗР,
	|	ДатаИсправления ВОЗР
	|";
	
	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
	Запрос.УстановитьПараметр("ТолькоПроведенные",  ТолькоПроведенные);
	
	УстановитьПривилегированныйРежим(Истина);
	СчетаФактуры = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	СчетаФактуры.Свернуть("ДокументОснование,Ссылка,РучнаяКорректировкаСуммДокумента,ДатаСоставления");

	Возврат СчетаФактуры;

КонецФункции

Функция СчетаФактурыПолученныеПоДокументуЗакупки(ПараметрыРегистрации)
	
	СчетаФактуры = Новый Массив;
	ТекстСчетФактура = НСтр("ru = 'Регистрация счета-фактуры не требуется'");
	НавигационнаяСсылка = "";
	НавигационнаяСсылкаОчиститьДокументПриобретения = "";
	ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = Ложь;
	ЕстьРасхождения = Ложь;
	
	СчетФактураТребуется = Не СчетФактураПолученныйНеТребуется(ПараметрыРегистрации);
	Если СчетФактураТребуется Тогда
		
		Если ПараметрыРегистрации.ИнойДокументПодтвержденияНДС Тогда
			ТаблицаСчетаФактуры = Документы.ИнойДокументПодтвержденияНДС.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка, ПараметрыРегистрации.Организация, , Ложь);
			Если ТаблицаСчетаФактуры.Количество() > 0 Тогда
				СчетФактураТребуется = Ложь;
				СчетФактура = ТаблицаСчетаФактуры[0];
				ТекстСчетФактура = Документы.ИнойДокументПодтвержденияНДС.ПредставлениеСчетаФактуры(
					СчетФактура.НаименованиеДокумента, 
					СчетФактура.Номер, 
					?(СчетФактура.Исправление, СчетФактура.ДатаИсправления, СчетФактура.ДатаСоставления),
					СчетФактура.Проведен);
				НавигационнаяСсылка = "ОткрытьИнойДокументПодтвержденияНДС";
			КонецЕсли;
		КонецЕсли;
		
		Если СчетФактураТребуется Тогда
			Если ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
				ПолноеИмяДокумента = "Документ.СчетФактураПолученныйНалоговыйАгент";
			Иначе
				ПолноеИмяДокумента = "Документ.СчетФактураПолученный";
			КонецЕсли;
			ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = ПравоДоступа("ИнтерактивноеДобавление", Метаданные.НайтиПоПолномуИмени(ПолноеИмяДокумента));
			
			МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяДокумента);
			ТаблицаСчетаФактуры = МенеджерДокумента.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка, ПараметрыРегистрации.Организация, , Ложь);
			Если ТаблицаСчетаФактуры.Количество() > 0 Тогда
				Если ТаблицаСчетаФактуры.Количество() > 1 Тогда
					ТекстСчетФактура = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					                      НСтр("ru = 'Счета-фактуры (%1)'"),
					                      Строка(ТаблицаСчетаФактуры.Количество()));
					НавигационнаяСсылка = "ОткрытьСписокСчетовФактурПолученных";
				Иначе
					СчетФактура = ТаблицаСчетаФактуры[0];
					ТекстСчетФактура = МенеджерДокумента.ПредставлениеСчетаФактуры(
						СчетФактура.Номер, 
						?(СчетФактура.Исправление, СчетФактура.ДатаИсправления, СчетФактура.ДатаСоставления),
						СчетФактура.Проведен);
					НавигационнаяСсылка = "ОткрытьСчетФактуруПолученный";
				КонецЕсли;
				
				Если ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
					НавигационнаяСсылкаОчиститьДокументПриобретения = "ОчиститьДокументПриобретения";
				КонецЕсли;
				
				Расхождения = НайтиРасхожденияТорговыхДокументовИСчетовФактурПолученных(ПараметрыРегистрации.Ссылка);
				ЕстьРасхождения = Не Расхождения.Пустой();
				Если ЕстьРасхождения Тогда
					ТекстСчетФактура = ТекстСчетФактура + " " + НСтр("ru = '(суммы изменены)'");
				КонецЕсли;
				
			ИначеЕсли ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию Тогда
				ТекстСчетФактура = НСтр("ru = 'Зарегистрировать счет-фактуру'");
				НавигационнаяСсылка = "ВвестиНовыйСчетФактуру";
			Иначе
				ТекстСчетФактура = НСтр("ru = 'Счет-фактура не зарегистрирован'");
			КонецЕсли;
		КонецЕсли;
		
		СчетаФактуры = ТаблицаСчетаФактуры.ВыгрузитьКолонку("Ссылка");
		
	КонецЕсли;
	
	Если ЕстьРасхождения Тогда
		ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;
	ИначеЕсли ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
	Иначе
		ЦветТекста = Неопределено;
	КонецЕсли;
	
	Если НавигационнаяСсылкаОчиститьДокументПриобретения = "" Тогда
		Представление = Новый ФорматированнаяСтрока(ТекстСчетФактура, , ЦветТекста, , НавигационнаяСсылка);
	Иначе
		ТекстОчистить = НСтр("ru = 'Очистить документ приобретения в счете-фактуре'");
		Представление = Новый ФорматированнаяСтрока(
							Новый ФорматированнаяСтрока(ТекстСчетФактура, , ЦветТекста, , НавигационнаяСсылка),
							"     ",
							Новый ФорматированнаяСтрока(ТекстОчистить, , ЦветТекста, , НавигационнаяСсылкаОчиститьДокументПриобретения));
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Представление);
	Результат.Вставить("СчетаФактуры", СчетаФактуры);
	Результат.Вставить("ДокументПоОснованиюТребуется", СчетФактураТребуется);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию", ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию);
	
	Возврат Результат;
	
КонецФункции

Функция ЗаявленияОВвозеТоваровПоДокументуЗакупки(ПараметрыРегистрации)
	
	ТаблицаЗаявленияОВвозе = Документы.ЗаявлениеОВвозеТоваров.ЗаявленияОВвозеТоваровПоОснованию(
								ПараметрыРегистрации.Ссылка,
								ПараметрыРегистрации.Организация,
								Ложь);
	ТекстЗаявленияОВвозе = "";
	НавигационнаяСсылка = "";
	
	ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	
	Если ТаблицаЗаявленияОВвозе.Количество() > 0 И ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию Тогда
		ЗаявлениеОВвозе = ТаблицаЗаявленияОВвозе[0];
		ТекстЗаявленияОВвозе = Документы.ЗаявлениеОВвозеТоваров.ПредставлениеЗаявленияОВвозеТоваров(
		                         ЗаявлениеОВвозе.Номер,
		                         ЗаявлениеОВвозе.Дата,
		                         ЗаявлениеОВвозе.Проведен,
		                         ЗаявлениеОВвозе.ДатаПодтвержденияОплаты);
		НавигационнаяСсылка = "ОткрытьЗаявлениеОВвозеТоваров";
	ИначеЕсли ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию
		И Не (ПараметрыРегистрации.КорректировкаПоСогласованиюСторон
			Или ПараметрыРегистрации.ИсправлениеОшибок
			Или ПараметрыРегистрации.ВозвратТоваровОтНеплательщикаНДС
			Или ПараметрыРегистрации.ВозвратТоваровОтПлательщикаНДС) Тогда
		ТекстЗаявленияОВвозе = НСтр("ru = 'Зарегистрировать заявление о ввозе товаров'");
		НавигационнаяСсылка = "ВвестиНовыйЗаявлениеОВвозеТоваров";
	Иначе
		ТекстЗаявленияОВвозе = НСтр("ru = 'Заявление о ввозе товаров не зарегистрировано'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
	Иначе
		ЦветТекста = Неопределено;
	КонецЕсли;

	Представление = Новый ФорматированнаяСтрока(ТекстЗаявленияОВвозе, , ЦветТекста, , НавигационнаяСсылка);
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Представление);
	Результат.Вставить("СчетаФактуры",  ТаблицаЗаявленияОВвозе.ВыгрузитьКолонку("Ссылка"));
	Результат.Вставить("ДокументПоОснованиюТребуется",  Истина);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию", ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию);
	Результат.Вставить("ЕстьРасхождения", Ложь);
	
	Возврат Результат;
	
КонецФункции

Функция СчетФактураПолученныйНеТребуется(ПараметрыРегистрации)
	
	СчетФактураНеТребуется = Ложь;
	
	Если Не ПараметрыРегистрации.ПриобретениеТоваровРаботУслуг
		И Не ПараметрыРегистрации.ЗакупкаЧерезПодотчетноеЛицо
		И Не ПараметрыРегистрации.ВозвратТоваровОтПлательщикаНДС
		И Не ПараметрыРегистрации.ИсправлениеОшибок
		И Не ПараметрыРегистрации.КорректировкаПоСогласованиюСторон Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ПараметрыРегистрации.ВозвратТоваровОтПлательщикаНДС
		И (ПараметрыРегистрации.КорректировкаПоСогласованиюСторон
				И ПараметрыРегистрации.Дата < ДатаОтраженияВозвратовКорректировочнымиСФ()
			ИЛИ Не ПараметрыРегистрации.КорректировкаПоСогласованиюСторон
				И ПараметрыРегистрации.Дата >= ДатаОтраженияВозвратовКорректировочнымиСФ()) Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ТипЗнч(ПараметрыРегистрации.Контрагент) = Тип("СправочникСсылка.Организации")
		И ПараметрыРегистрации.НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		// При отражении операций между организациями напрямую, регистрация счета-фактуры полученного не требуется.
		// В этом случае счет-фактура выданный в одной организации отражается полученным в другой.
		// Исключение - операции с обратным налогообложением. 
		СчетФактураНеТребуется = Истина;
	КонецЕсли;
	
	Возврат СчетФактураНеТребуется;
	
КонецФункции

#КонецОбласти

#Область ПоискРасхожденийСчетовФактурПолученныхСПервичнымиДокументами

// Возвращает результат запроса со счетами-фактурами полученными, по которым есть расхождения с суммами документов-оснований.
// Анализируются только торговые документы, по которым выставлен и проведен счет-фактура полученный. Анализируются только
// счета-фактуры, в которые вручную вносились изменения в суммы документа (установлен флаг РучнаяКорректировкаСуммДокумента).
//
// Параметры:
//   ДокументыОснования - ДокументСсылка - проверяемые документы-основания (торговые документы)
//   РучнаяКорректировка - Булево - если Истина, то отбираются только счета-фактуры с ручными корректировками, Ложь - иначе
// 
// Возвращаемое значение:
//   РезультатЗапроса - таблица значений с колонками Организация, СчетФактура
//
Функция НайтиРасхожденияТорговыхДокументовИСчетовФактурПолученных(ДокументыОснования, РучнаяКорректировка = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаРасхожденияТорговыхДокументовИСчетовФактурПолученных();
	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
	Запрос.УстановитьПараметр("РучнаяКорректировка", РучнаяКорректировка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Помещает во временную таблицу счета-фактуры, в которых найдены расхождения сумм с торговыми документами.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - в него помещаем новую временную таблицу
//  ИмяВременнойТаблицы - Строка - с этим именем таблица добавится в менеджер временных таблиц
//  ДополнительныеПараметры - Структура - структура параметров для запроса:
//   - МассивОрганизаций - Массив - отбор по организациям
//   - НачалоПериода - Дата - начало периода отбора счетов-фактур полученных
//   - КонецПериода - Дата - окончание периода отбора счетов-фактур полученных
//   - ВсеОрганизации - Булево - Истина, если отбор необходимо вести по всем организациям и массив Организаций пустой или Неопределено
//   - РучнаяКорректировка - Булево - Истина, если отбираем только счета-фактуры с ручными корректировками сумм
//   
// Возвращаемое значение:
//  Число
//
Функция ПоместитьРасхожденияТорговыхДокументовИСчетовФактурПолученных(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ДополнительныеПараметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаТорговыеДокументыДляПроверкиРасхождений();

	ОбщегоНазначенияУТ.УстановитьПараметрыЗапроса(Запрос, ДополнительныеПараметры);
	ДокументыОснования = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаРасхожденияТорговыхДокументовИСчетовФактурПолученных(ИмяВременнойТаблицы);
	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
	Запрос.Выполнить();
	
	Возврат ДокументыОснования.Количество();
	
КонецФункции

Функция ТекстЗапросаРасхожденияТорговыхДокументовИСчетовФактурПолученных(ИмяВременнойТаблицы = Неопределено)
	
	// Для корректировочных счетов-фактур сравниваем суммы уменьшения и увеличения.
	// Для исправлений счетов-фактур не делаем проверку, т.к. в документе-основании хранятся только дельты.
	// Для обычных счетов-фактур сравниваем суммы с НДС.
	// Сравнение производим с учетом валюты счета-фактуры.
	
	Результат =
	"ВЫБРАТЬ
	|	СуммыДокументовВВалютахУчета.Регистратор КАК ДокументОснование,
	|	СуммыДокументовВВалютахУчета.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(СуммыДокументовВВалютахУчета.Валюта) КАК Валюта,
	|	СУММА(СуммыДокументовВВалютахУчета.СуммаБезНДС + СуммыДокументовВВалютахУчета.СуммаНДС) КАК Сумма,
	|	СУММА((СуммыДокументовВВалютахУчета.СуммаБезНДС + СуммыДокументовВВалютахУчета.СуммаНДС) * ВЫБОР
	|			КОГДА СуммыДокументовВВалютахУчета.СуммаБезНДС + СуммыДокументовВВалютахУчета.СуммаНДС > 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУвеличение,
	|	СУММА((СуммыДокументовВВалютахУчета.СуммаБезНДС + СуммыДокументовВВалютахУчета.СуммаНДС) * ВЫБОР
	|			КОГДА СуммыДокументовВВалютахУчета.СуммаБезНДС + СуммыДокументовВВалютахУчета.СуммаНДС > 0
	|				ТОГДА 0
	|			ИНАЧЕ -1
	|		КОНЕЦ) КАК СуммаУменьшение,
	|	СУММА(СуммыДокументовВВалютахУчета.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументовВВалютахУчета.СуммаНДС * ВЫБОР
	|			КОГДА СуммыДокументовВВалютахУчета.СуммаНДС > 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДСУвеличение,
	|	СУММА(СуммыДокументовВВалютахУчета.СуммаНДС * ВЫБОР
	|			КОГДА СуммыДокументовВВалютахУчета.СуммаНДС > 0
	|				ТОГДА 0
	|			ИНАЧЕ -1
	|		КОНЕЦ) КАК СуммаНДСУменьшение,
	|	СУММА(СуммыДокументовВВалютахУчета.БазаНДСРегл + СуммыДокументовВВалютахУчета.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА((СуммыДокументовВВалютахУчета.БазаНДСРегл + СуммыДокументовВВалютахУчета.СуммаНДСРегл) * ВЫБОР
	|			КОГДА СуммыДокументовВВалютахУчета.БазаНДСРегл + СуммыДокументовВВалютахУчета.СуммаНДСРегл > 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУвеличениеРегл,
	|	СУММА((СуммыДокументовВВалютахУчета.БазаНДСРегл + СуммыДокументовВВалютахУчета.СуммаНДСРегл) * ВЫБОР
	|			КОГДА СуммыДокументовВВалютахУчета.БазаНДСРегл + СуммыДокументовВВалютахУчета.СуммаНДСРегл > 0
	|				ТОГДА 0
	|			ИНАЧЕ -1
	|		КОНЕЦ) КАК СуммаУменьшениеРегл,
	|	СУММА(СуммыДокументовВВалютахУчета.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	СУММА(СуммыДокументовВВалютахУчета.СуммаНДСРегл * ВЫБОР
	|			КОГДА СуммыДокументовВВалютахУчета.СуммаНДСРегл > 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДСУвеличениеРегл,
	|	СУММА(СуммыДокументовВВалютахУчета.СуммаНДСРегл * ВЫБОР
	|			КОГДА СуммыДокументовВВалютахУчета.СуммаНДСРегл > 0
	|				ТОГДА 0
	|			ИНАЧЕ -1
	|		КОНЕЦ) КАК СуммаНДСУменьшениеРегл
	|ПОМЕСТИТЬ вт_СуммыТорговыхДокументов
	|ИЗ
	|	РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|ГДЕ
	|	СуммыДокументовВВалютахУчета.Регистратор В(&ДокументыОснования)
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыДокументовВВалютахУчета.Регистратор,
	|	СуммыДокументовВВалютахУчета.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервичныйДокумент.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка),
	|	ПервичныйДокумент.Валюта,
	|	ПервичныйДокумент.СуммаРегл,
	|	NULL,
	|	NULL,
	|	0,
	|	NULL,
	|	NULL,
	|	ПервичныйДокумент.СуммаРегл,
	|	NULL,
	|	NULL,
	|	0,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|ГДЕ
	|	ПервичныйДокумент.Ссылка В(&ДокументыОснования)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Организация КАК Организация,
	|	СчетФактураПолученныйДокументыОснования.Ссылка КАК СчетФактура,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.РучнаяКорректировкаСуммДокумента КАК РучнаяКорректировка,
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	СчетФактураПолученныйДокументыОснования.СтавкаНДС КАК СтавкаНДС,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Валюта КАК Валюта,
	|	СУММА(СчетФактураПолученныйДокументыОснования.Сумма) КАК Сумма,
	|	СУММА(СчетФактураПолученныйДокументыОснования.СуммаУвеличение) КАК СуммаУвеличение,
	|	СУММА(СчетФактураПолученныйДокументыОснования.СуммаУменьшение) КАК СуммаУменьшение,
	|	СУММА(СчетФактураПолученныйДокументыОснования.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СчетФактураПолученныйДокументыОснования.СуммаНДСУвеличение) КАК СуммаНДСУвеличение,
	|	СУММА(СчетФактураПолученныйДокументыОснования.СуммаНДСУменьшение) КАК СуммаНДСУменьшение,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.Ссылка.Исправление) КАК Исправление,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.Ссылка.НомерИсправления) КАК НомерИсправления,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.Ссылка.Корректировочный) КАК Корректировочный
	|ПОМЕСТИТЬ вт_СуммыСчетовФактур
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|ГДЕ
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Проведен
	|	И СчетФактураПолученныйДокументыОснования.Ссылка.РучнаяКорректировкаСуммДокумента = &РучнаяКорректировка
	|	И СчетФактураПолученныйДокументыОснования.ДокументОснование В(&ДокументыОснования)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураПолученныйДокументыОснования.Ссылка,
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование,
	|	СчетФактураПолученныйДокументыОснования.СтавкаНДС
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СуммыСчетовФактур.Организация КАК Организация,
	|	вт_СуммыСчетовФактур.СчетФактура КАК СчетФактура
	|//ПОМЕСТИТЬ
	|ИЗ
	|	вт_СуммыТорговыхДокументов КАК вт_СуммыТорговыхДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_СуммыСчетовФактур КАК вт_СуммыСчетовФактур
	|		ПО вт_СуммыТорговыхДокументов.ДокументОснование = вт_СуммыСчетовФактур.ДокументОснование
	|			И вт_СуммыТорговыхДокументов.СтавкаНДС = вт_СуммыСчетовФактур.СтавкаНДС
	|ГДЕ
	|	ВЫБОР
	|			КОГДА вт_СуммыСчетовФактур.Корректировочный
	|				ТОГДА НЕ ВЫБОР
	|								КОГДА вт_СуммыТорговыхДокументов.Валюта = вт_СуммыСчетовФактур.Валюта
	|									ТОГДА вт_СуммыТорговыхДокументов.СуммаУвеличение
	|								ИНАЧЕ вт_СуммыТорговыхДокументов.СуммаУвеличениеРегл
	|							КОНЕЦ = вт_СуммыСчетовФактур.СуммаУвеличение
	|						ИЛИ НЕ ВЫБОР
	|								КОГДА вт_СуммыТорговыхДокументов.Валюта = вт_СуммыСчетовФактур.Валюта
	|									ТОГДА вт_СуммыТорговыхДокументов.СуммаУменьшение
	|								ИНАЧЕ вт_СуммыТорговыхДокументов.СуммаУменьшениеРегл
	|							КОНЕЦ = вт_СуммыСчетовФактур.СуммаУменьшение
	|						ИЛИ НЕ ВЫБОР
	|								КОГДА вт_СуммыТорговыхДокументов.Валюта = вт_СуммыСчетовФактур.Валюта
	|									ТОГДА вт_СуммыТорговыхДокументов.СуммаНДСУменьшение
	|								ИНАЧЕ вт_СуммыТорговыхДокументов.СуммаНДСУменьшениеРегл
	|							КОНЕЦ = вт_СуммыСчетовФактур.СуммаНДСУменьшение
	|						ИЛИ НЕ ВЫБОР
	|								КОГДА вт_СуммыТорговыхДокументов.Валюта = вт_СуммыСчетовФактур.Валюта
	|									ТОГДА вт_СуммыТорговыхДокументов.СуммаНДСУменьшение
	|								ИНАЧЕ вт_СуммыТорговыхДокументов.СуммаНДСУменьшениеРегл
	|							КОНЕЦ = вт_СуммыСчетовФактур.СуммаНДСУменьшение
	|			КОГДА вт_СуммыСчетовФактур.Исправление И НЕ вт_СуммыСчетовФактур.НомерИсправления = ""1""
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ НЕ ВЫБОР
	|					КОГДА вт_СуммыТорговыхДокументов.Валюта = вт_СуммыСчетовФактур.Валюта
	|						ТОГДА вт_СуммыТорговыхДокументов.Сумма
	|					ИНАЧЕ вт_СуммыТорговыхДокументов.СуммаРегл
	|				КОНЕЦ = вт_СуммыСчетовФактур.Сумма
	|				ИЛИ НЕ ВЫБОР
	|					КОГДА вт_СуммыТорговыхДокументов.Валюта = вт_СуммыСчетовФактур.Валюта
	|						ТОГДА вт_СуммыТорговыхДокументов.СуммаНДС
	|					ИНАЧЕ вт_СуммыТорговыхДокументов.СуммаНДСРегл
	|				КОНЕЦ = вт_СуммыСчетовФактур.СуммаНДС
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_СуммыТорговыхДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_СуммыСчетовФактур";
	
	Если ЗначениеЗаполнено(ИмяВременнойТаблицы) Тогда
		Результат = СтрЗаменить(Результат, "//ПОМЕСТИТЬ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаТорговыеДокументыДляПроверкиРасхождений()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ПО СчетФактураПолученный.Ссылка = СчетФактураПолученныйДокументыОснования.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Проведен
	|	И СчетФактураПолученный.РучнаяКорректировкаСуммДокумента = &РучнаяКорректировка
	|	И (&ВсеОрганизации
	|			ИЛИ СчетФактураПолученный.Организация В (&МассивОрганизаций))
	|	И СчетФактураПолученный.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область УчетИсходящегоНДС

#Область ФормированиеСчетовФактурВыданных

// см. УчетНДСУП.СчетаФактурыВыданныеНаОсновании
Функция СчетаФактурыВыданныеНаОсновании(ПараметрыРегистрации) Экспорт
	
	СчетаФактуры = Новый Массив;
	ТекстСчетФактура = НСтр("ru = 'Оформление счета-фактуры не требуется'");
	НавигационнаяСсылка = "";
	ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = Ложь;
	
	СчетФактураТребуется = Не СчетФактураВыданныйНеТребуется(ПараметрыРегистрации);
	ВыставленФизЛицу = Ложь;
	Если ТипЗнч(ПараметрыРегистрации.Контрагент) = Тип("СправочникСсылка.Контрагенты")
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыРегистрации.Контрагент, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
 			ВыставленФизЛицу = Истина;
	КонецЕсли;
	
	Если СчетФактураТребуется Тогда
		ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.СчетФактураВыданный);
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", ПараметрыРегистрации.Организация);
		Отбор.Вставить("Перевыставленный", Ложь);
		ТаблицаСчетаФактуры = Документы.СчетФактураВыданный.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка, Отбор,  Неопределено, Ложь);
		ТаблицаСчетаФактуры.Свернуть("Номер,Дата,Проведен,Ссылка");
		
		Если ТаблицаСчетаФактуры.Количество() > 0 Тогда
			Если ТаблицаСчетаФактуры.Количество() > 1 Тогда
				ТекстСчетФактура = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				                      НСтр("ru = 'Счета-фактуры (%1)'"),
				                      Строка(ТаблицаСчетаФактуры.Количество()));
				НавигационнаяСсылка = "ОткрытьСписокСчетовФактурВыданных";
			Иначе
				СчетФактура = ТаблицаСчетаФактуры[0];
				ТекстСчетФактура = Документы.СчетФактураВыданный.ПредставлениеСчетаФактуры(
										СчетФактура.Номер, СчетФактура.Дата, СчетФактура.Проведен);
				НавигационнаяСсылка = "ОткрытьСчетФактуруВыданный";
			КонецЕсли;
		ИначеЕсли ВыставленФизЛицу Тогда
				ТекстСчетФактура = НСтр("ru = 'Оформление счета-фактуры не требуется'");
		ИначеЕсли ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию Тогда
			ТекстСчетФактура = НСтр("ru = 'Оформить счет-фактуру'");
			НавигационнаяСсылка = "ВвестиНовыйСчетФактуруВыданный";
		Иначе
			ТекстСчетФактура = НСтр("ru = 'Счет-фактура не оформлен'");
		КонецЕсли;
		
		СчетаФактуры = ТаблицаСчетаФактуры.ВыгрузитьКолонку("Ссылка");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
	Иначе
		ЦветТекста = Неопределено;
	КонецЕсли;
	
	Если ПараметрыРегистрации.Свойство("ПостфиксПредставленияДокумента") Тогда
		ПостфиксПредставления = ПараметрыРегистрации.ПостфиксПредставленияДокумента;
		МассивПодстрок = Новый Массив();
		МассивПодстрок.Добавить(ТекстСчетФактура);
		МассивПодстрок.Добавить(ПостфиксПредставления);
		ТекстСчетФактура = СтрСоединить(МассивПодстрок, " ");
	КонецЕсли;

	Представление = Новый ФорматированнаяСтрока(ТекстСчетФактура, , ЦветТекста, , НавигационнаяСсылка);
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Представление);
	Результат.Вставить("СчетаФактуры",  СчетаФактуры);
	Результат.Вставить("ДокументПоОснованиюТребуется",  СчетФактураТребуется);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию", ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию);
	
	Возврат Результат;
	
КонецФункции

// см. УчетНДСУП.СчетаФактурыВыданныеПоДокументамОснованиям
Функция СчетаФактурыВыданныеПоДокументамОснованиям(ДокументыОснования, ТолькоПроведенные) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.Корректировочный,
	|	ТаблицаОснований.Ссылка.Исправление,
	|	ТаблицаОснований.Ссылка.РучнаяКорректировкаСуммДокумента КАК РучнаяКорректировкаСуммДокумента
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование В (&ДокументыОснования)
	|	И НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|	И (ТаблицаОснований.Ссылка.Проведен 
	|		ИЛИ НЕ &ТолькоПроведенные)
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОснований.Ссылка.Дата ВОЗР
	|";
	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
	Запрос.УстановитьПараметр("ТолькоПроведенные", ТолькоПроведенные);
	
	СчетаФактуры = Запрос.Выполнить().Выгрузить();
	
	Возврат СчетаФактуры;

КонецФункции

// см. УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПередЗаписью
Процедура АктуализироватьСчетаФактурыВыданныеПередЗаписью(ПараметрыРегистрации, Знач РежимЗаписи, Знач ПометкаУдаления, Знач Проведен) Экспорт
	
	СчетФактураВыданныйНеТребуется = СчетФактураВыданныйНеТребуется(ПараметрыРегистрации);
	ДокументПроведен = Ложь;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ДокументПроведен = Истина;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись И Проведен Тогда
		ДокументПроведен = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументПродажи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	СчетаФактуры.Ссылка.Проведен КАК Проведен,
	|	СчетаФактуры.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	КОЛИЧЕСТВО(ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|	ПО 
	|		СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка
	|";
	Запрос.УстановитьПараметр("ДокументПродажи", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПометитьНаУдаление = Ложь;
		ОтменитьПроведение = Ложь;
		
		Если НЕ Выборка.ПометкаУдаления
			 И (ПометкаУдаления
			    Или Выборка.Организация <> ПараметрыРегистрации.Организация
			    Или СчетФактураВыданныйНеТребуется) Тогда
			ПометитьНаУдаление = Истина;
		ИначеЕсли Выборка.Проведен И НЕ ДокументПроведен Тогда
			ОтменитьПроведение = Истина;
		КонецЕсли;
		
		Если ПометитьНаУдаление Или ОтменитьПроведение Тогда
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураВыданный");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		КонецЕсли;
		
		Если ПометитьНаУдаление Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если Выборка.КоличествоОснований = 1 Тогда
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			Иначе
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(ПараметрыРегистрации.Ссылка);
				Если СтрокаКУдалению <> Неопределено Тогда
					ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				КонецЕсли;
				СтрокаКУдалениюПокупатели = ДокументОбъект.Покупатели.Найти(ПараметрыРегистрации.Ссылка);
				Если СтрокаКУдалениюПокупатели <> Неопределено Тогда
					ДокументОбъект.Покупатели.Удалить(СтрокаКУдалениюПокупатели);
					ДокументОбъект.КодВидаОперации = 
						Документы.СчетФактураВыданный.КодВидаОперации(ДокументОбъект.ДокументыОснования, 
							ДокументОбъект.Покупатели, ДокументОбъект.Дата);
				КонецЕсли;
				Если СтрокаКУдалению <> Неопределено Или СтрокаКУдалениюПокупатели <> Неопределено Тогда
					Если ДокументОбъект.Проведен Тогда
						РежимЗаписи = РежимЗаписиДокумента.Проведение;
					Иначе
						РежимЗаписи = РежимЗаписиДокумента.Запись;
					КонецЕсли;
					ДокументОбъект.Записать(РежимЗаписи);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ОтменитьПроведение Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если Выборка.КоличествоОснований = 1 Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(ПараметрыРегистрации.Ссылка);
				Если СтрокаКУдалению <> Неопределено Тогда
					ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				КонецЕсли;
				СтрокаКУдалениюПокупатели = ДокументОбъект.Покупатели.Найти(ПараметрыРегистрации.Ссылка);
				Если СтрокаКУдалениюПокупатели <> Неопределено Тогда
					ДокументОбъект.Покупатели.Удалить(СтрокаКУдалениюПокупатели);
					ДокументОбъект.КодВидаОперации = 
						Документы.СчетФактураВыданный.КодВидаОперации(ДокументОбъект.ДокументыОснования, 
							ДокументОбъект.Покупатели, ДокументОбъект.Дата);
				КонецЕсли;
				Если СтрокаКУдалению <> Неопределено Или СтрокаКУдалениюПокупатели <> Неопределено Тогда
					Если ДокументОбъект.Проведен Тогда
						РежимЗаписи = РежимЗаписиДокумента.Проведение;
					Иначе
						РежимЗаписи = РежимЗаписиДокумента.Запись;
					КонецЕсли;
					ДокументОбъект.Записать(РежимЗаписи);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// см. УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПриПроведении
Процедура АктуализироватьСчетаФактурыВыданныеПриПроведении(ПараметрыРегистрации) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументПродажи
	|	И ТаблицаОснований.Ссылка.Проведен
	|";
	Запрос.УстановитьПараметр("ДокументПродажи", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураВыданный");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ДополнительныеСвойства.Вставить("ПроверкаДокументов_Отключить", Истина);
		ДокументОбъект.ДополнительныеСвойства.Вставить("АктуализацияДвижений", Истина);
		
		Если Выборка.Контрагент <> ПараметрыРегистрации.Контрагент Тогда
			ДокументОбъект.ЗаполнитьПараметрыСчетаФактурыПоОснованию();
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	ОснованияСчетаФактуры = Новый Массив;
	ОснованияСчетаФактуры.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОбновитьСостояние(ПараметрыРегистрации.Ссылка, ОснованияСчетаФактуры);
	
КонецПроцедуры

// см. УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПриУдаленииПроведения
Процедура АктуализироватьСчетаФактурыВыданныеПриУдаленииПроведения(ПараметрыРегистрации) Экспорт
	
	ОснованияСчетаФактуры = Новый Массив;
	ОснованияСчетаФактуры.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОбновитьСостояние(ПараметрыРегистрации.Ссылка, ОснованияСчетаФактуры, Истина);
	
КонецПроцедуры

// см. УчетНДСУП.ЗаполнитьСчетФактураВыданный
Функция ЗаполнитьСчетФактураВыданный(СчетФактура, ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Проведен", Истина);
	Результат.Вставить("СообщениеОбОшибке", "");
	
	СчетФактураОбъект = СчетФактура;
	Если ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
	КонецЕсли;
	
	СчетФактураОбъект.ДокументыОснования.Очистить();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументОснование", ПараметрыРегистрации.Ссылка);
	ДанныеЗаполнения.Вставить("Организация", ПараметрыРегистрации.Организация);
	ДанныеЗаполнения.Вставить("Контрагент", ПараметрыРегистрации.Контрагент);
	ДанныеЗаполнения.Вставить("Исправление", ПараметрыРегистрации.ИсправлениеОшибок);
	ДанныеЗаполнения.Вставить("Корректировочный", ПараметрыРегистрации.КорректировкаПоСогласованиюСторон);
	
	СчетФактураОбъект.Заполнить(ДанныеЗаполнения);
	Попытка
		Результат.Проведен = Истина;
		СчетФактураОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Результат.Проведен = Ложь;
		Результат.СообщениеОбОшибке = ОписаниеОшибки();
		СчетФактураОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

// см. УчетНДСУП.СформироватьИсправительныеСчетаФактурыПоИзмененнымДокументам
Функция СформироватьИсправительныеСчетаФактурыПоИзмененнымДокументам(ТаблицаИзмененныхДокументов) Экспорт
	
	СформированныеДокументы = Новый Массив;
	
	КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
	
	СформированныеДокументы = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ТаблицаИзмененныхДокументов Цикл
		
		СтруктураОснование = Новый Структура;
		СтруктураОснование.Вставить("ДокументОснование", СтрокаТаблицы.Документ);
		СтруктураОснование.Вставить("Организация",       СтрокаТаблицы.Организация);
		СтруктураОснование.Вставить("Дата",              СтрокаТаблицы.Дата);
		СтруктураОснование.Вставить("Исправление",       Истина);
		
		НовыйДокумент = Документы.СчетФактураВыданный.СоздатьДокумент();
		НовыйДокумент.Заполнить(СтруктураОснование);
		Попытка
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			ДокументСозданУспешно = Истина;
		Исключение
			ДокументСозданУспешно = Ложь;
		КонецПопытки;
		
		Если ДокументСозданУспешно Тогда
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Сформирован исправительный счет-фактура'", КодЯзыка),
				УровеньЖурналаРегистрации.Информация,
				НовыйДокумент.Метаданные(),
				НовыйДокумент.Ссылка,
				НСтр("ru = 'Сформирован исправительный счет-фактура для документа реализации товаров'", КодЯзыка),
				РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
		КонецЕсли;
		
		СформированныеДокументы.Добавить(НовыйДокумент.Ссылка);
		
	КонецЦикла;
	
	Возврат СформированныеДокументы;
	
КонецФункции

Процедура ОбновитьСостояниеТребованийОформленияСчетовФактур(МассивОрганизаций = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВсеОрганизации", Не ЗначениеЗаполнено(МассивОрганизаций));
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Основание КАК Основание
	|ИЗ
	|	РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК Т
	|ГДЕ
	|	&ВсеОрганизации ИЛИ Т.Организация В (&МассивОрганизаций)";
	
	ДокументыОснования = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Основание");
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОбновитьСостояние(Неопределено, ДокументыОснования);
	
КонецПроцедуры

Функция СчетФактураВыданныйНеТребуется(ПараметрыРегистрации)
	
	СчетФактураНеТребуется = Ложь;
	
	Если НЕ ПараметрыРегистрации.РеализацияТоваров
	     И НЕ ПараметрыРегистрации.РеализацияРаботУслуг
	     И НЕ ПараметрыРегистрации.РеализацияПрочихАктивов
	     И НЕ ПараметрыРегистрации.ВозвратТоваровПоставщику
	     И НЕ ПараметрыРегистрации.ПрочееНачислениеНДС
	     И НЕ ПараметрыРегистрации.ИсправлениеОшибок
	     И НЕ ПараметрыРегистрации.КорректировкаПоСогласованиюСторон Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ПараметрыРегистрации.ВозвратТоваровПоставщику
		И (ПараметрыРегистрации.КорректировкаПоСогласованиюСторон
				И ПараметрыРегистрации.Дата < ДатаОтраженияВозвратовКорректировочнымиСФ()
			ИЛИ Не ПараметрыРегистрации.КорректировкаПоСогласованиюСторон
				И ПараметрыРегистрации.Дата >= ДатаОтраженияВозвратовКорректировочнымиСФ()) Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт  Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС  Тогда
		СчетФактураНеТребуется = Истина;
	КонецЕсли;
	
	Возврат СчетФактураНеТребуется;
	
КонецФункции

#КонецОбласти

#Область ФормированиеСчетовФактурКомиссионеру

// см. УчетНДСУП.СчетаФактурыКомиссионеруНаОсновании
Функция СчетаФактурыКомиссионеруНаОсновании(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаФактурыКомитентов.Покупатель,
	|	СчетаФактурыКомитентов.НомерСчетаФактуры,
	|	СчетаФактурыКомитентов.ДатаСчетаФактуры
	|ИЗ
	|	РегистрСведений.СчетаФактурыКомиссионерамКОформлению КАК СчетаФактурыКомитентов
	|ГДЕ
	|	СчетаФактурыКомитентов.ОтчетКомиссионера = &Ссылка
	|	И СчетаФактурыКомитентов.Организация = &Организация
	|";
	
	Запрос.УстановитьПараметр("Ссылка", ПараметрыРегистрации.Ссылка);
	Запрос.УстановитьПараметр("Организация", ПараметрыРегистрации.Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	НавигационнаяСсылка = "";
	СчетаФактуры = Новый Массив;;
	Если Не РезультатЗапроса.Пустой() Тогда
		
		КоличествоКОформлению = РезультатЗапроса.Выбрать().Количество();
		ТекстСчетФактура = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		                      НСтр("ru = 'Требуется оформление счетов-фактур комиссионеру (%1)'"),
		                      Строка(КоличествоКОформлению));
		НавигационнаяСсылка = "ОткрытьСчетаФактурыКомиссионеруКОформлению";
		
	ИначеЕсли ЗначениеЗаполнено(ПараметрыРегистрации.Ссылка) Тогда
		
		Если ПараметрыРегистрации.РеализацияЧерезКомиссионера Тогда
			ТаблицаСчетаФактуры = Документы.СчетФактураВыданный.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка,,, Истина);
		Иначе
			ТаблицаСчетаФактуры = Документы.СчетФактураКомиссионеру.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка, ПараметрыРегистрации.Организация, Истина);
		КонецЕсли;
		
		Если ТаблицаСчетаФактуры.Количество() > 1 Тогда
			ТекстСчетФактура = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			                      НСтр("ru = 'Счета-фактуры выданные комиссионеру (%1)'"),
			                      Строка(ТаблицаСчетаФактуры.Количество()));
			НавигационнаяСсылка = "ОткрытьСписокСчетовФактурКомиссионеру";
		ИначеЕсли ТаблицаСчетаФактуры.Количество() = 1 Тогда
			СчетФактура = ТаблицаСчетаФактуры[0];
			ТекстСчетФактура = Документы.СчетФактураКомиссионеру.ПредставлениеСчетаФактуры(
			                      СчетФактура.Номер, СчетФактура.Дата, СчетФактура.Проведен);
			НавигационнаяСсылка = "ОткрытьСчетФактуруКомиссионеру";
		Иначе
			ТекстСчетФактура = НСтр("ru = 'Оформление счетов-фактур комиссионеру не требуется'");
		КонецЕсли;
		СчетаФактуры = ТаблицаСчетаФактуры.ВыгрузитьКолонку("Ссылка");
		
	Иначе
		ТекстСчетФактура = НСтр("ru = 'Счета-фактуры комиссионеру'");
		НавигационнаяСсылка = "ОткрытьСчетаФактурыКомиссионеруКОформлению";
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
		
	Если ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
	Иначе
		ЦветТекста = Неопределено;
	КонецЕсли;
	
	Представление = Новый ФорматированнаяСтрока(ТекстСчетФактура, , ЦветТекста, , НавигационнаяСсылка);
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Представление);
	Результат.Вставить("СчетаФактуры",  СчетаФактуры);
	
	Возврат Результат;
	
КонецФункции

// см. УчетНДСУП.АктуализироватьСчетаФактурыКомиссионеруПередЗаписью
Процедура АктуализироватьСчетаФактурыКомиссионеруПередЗаписью(ПараметрыРегистрации, Знач РежимЗаписи, Знач ПометкаУдаления, Знач Проведен) Экспорт
	
	ДокументПроведен = Ложь;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ДокументПроведен = Истина;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись И Проведен Тогда
		ДокументПроведен = Истина;
	КонецЕсли;  
	
	Запрос = Новый Запрос;
	Если ПараметрыРегистрации.РеализацияЧерезКомиссионера Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетФактураКомиссионеру.Ссылка КАК Ссылка,
		|	СчетФактураКомиссионеру.ПометкаУдаления КАК ПометкаУдаления,
		|	СчетФактураКомиссионеру.Проведен КАК Проведен,
		|	СчетФактураКомиссионеру.Организация КАК Организация
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураКомиссионеру
		|ГДЕ
		|	СчетФактураКомиссионеру.ДокументОснование = &ОтчетКомиссионера
		|";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетФактураКомиссионеру.Ссылка КАК Ссылка,
		|	СчетФактураКомиссионеру.ПометкаУдаления КАК ПометкаУдаления,
		|	СчетФактураКомиссионеру.Проведен КАК Проведен,
		|	СчетФактураКомиссионеру.Организация КАК Организация
		|ИЗ
		|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
		|ГДЕ
		|	СчетФактураКомиссионеру.ДокументОснование = &ОтчетКомиссионера
		|";
	КонецЕсли;
	Запрос.УстановитьПараметр("ОтчетКомиссионера", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПометитьНаУдаление = Ложь;
		ОтменитьПроведение = Ложь;
		
		Если НЕ Выборка.ПометкаУдаления
			 И (ПометкаУдаления Или Выборка.Организация <> ПараметрыРегистрации.Организация) Тогда
			ПометитьНаУдаление = Истина;
		ИначеЕсли Выборка.Проведен И НЕ ДокументПроведен Тогда
			ОтменитьПроведение = Истина;
		КонецЕсли;
		
		Если ПометитьНаУдаление Или ОтменитьПроведение Тогда
			
			Блокировка = Новый БлокировкаДанных;
			Если ПараметрыРегистрации.РеализацияЧерезКомиссионера Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураВыданный");
			Иначе
				ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураКомиссионеру");
			КонецЕсли;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			Если ПометитьНаУдаление Тогда
				ДокументОбъект.УстановитьПометкуУдаления(Истина); 
			КонецЕсли;
			
			Если ОтменитьПроведение Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

// см. УчетНДСУП.АктуализироватьСчетаФактурыКомиссионеруПриПроведении
Процедура АктуализироватьСчетаФактурыКомиссионеруПриПроведении(ПараметрыРегистрации) Экспорт
	
	Запрос = Новый Запрос; 
	
	Если ПараметрыРегистрации.РеализацияЧерезКомиссионера Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетФактураКомиссионеру.Ссылка
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураКомиссионеру
		|ГДЕ
		|	СчетФактураКомиссионеру.ДокументОснование = &ОтчетКомиссионера
		|	И СчетФактураКомиссионеру.Проведен
		|";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетФактураКомиссионеру.Ссылка
		|ИЗ
		|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
		|ГДЕ
		|	СчетФактураКомиссионеру.ДокументОснование = &ОтчетКомиссионера
		|	И СчетФактураКомиссионеру.Проведен
		|";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтчетКомиссионера", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Блокировка = Новый БлокировкаДанных;
		Если ПараметрыРегистрации.РеализацияЧерезКомиссионера Тогда
			ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураВыданный");
		Иначе
			ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураКомиссионеру");
		КонецЕсли;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ДополнительныеСвойства.Вставить("АктуализацияДвижений", Истина);
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	МассивОснований = Новый Массив;
	МассивОснований.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.СчетаФактурыКомиссионерамКОформлению.ОбновитьСостояние(МассивОснований);
	
КонецПроцедуры

// см. УчетНДСУП.АктуализироватьСчетаФактурыКомиссионеруПриУдаленииПроведения
Процедура АктуализироватьСчетаФактурыКомиссионеруПриУдаленииПроведения(ПараметрыРегистрации) Экспорт
	
	МассивОснований = Новый Массив;
	МассивОснований.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.СчетаФактурыКомиссионерамКОформлению.ОбновитьСостояние(МассивОснований, Истина);

КонецПроцедуры

#КонецОбласти

#Область РегистрацияСчетовФактурКомитента

// см. УчетНДСУП.АктуализироватьСчетаФактурыКомитентаПриПроведении
Процедура АктуализироватьСчетаФактурыКомитентаПриПроведении(СчетаФактурыВыданныеПокупателям, Отказ = Ложь) Экспорт
	
	РегистрыСведений.СчетаФактурыКомитентовКРегистрации.ОбновитьСостояние(СчетаФактурыВыданныеПокупателям, Отказ);

КонецПроцедуры

// см. УчетНДСУП.АктуализироватьСчетаФактурыКомитентаПриУдаленииПроведения
Процедура АктуализироватьСчетаФактурыКомитентаПриУдаленииПроведения(СчетаФактурыВыданныеПокупателям) Экспорт
	
	РегистрыСведений.СчетаФактурыКомитентовКРегистрации.ОбновитьСостояние(СчетаФактурыВыданныеПокупателям);
	
КонецПроцедуры

// См. УчетНДСУП.ДополнитьТаблицуДаннымиСчетовФактурВыданныхПокупателям
// Возвращаемое значение:
//  Строка - ТекстЗапроса
//
Функция ТекстЗапросаСчетовФактурВыданныхПокупателямДляОтчетаКомитенту() Экспорт

	//если есть исправительные СФ, то нужно брать последнюю из них
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИмяТаблицы.ДокументРеализации КАК ДокументРеализации,
	|	ИмяТаблицы.Покупатель КАК Покупатель,
	|	ИмяТаблицы.Организация КАК Организация,
	|	ИмяТаблицы.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ИмяТаблицы.ДатаСчетаФактуры КАК ДатаСчетаФактуры
	|ПОМЕСТИТЬ ИмяТаблицыОтборДляПодбораСчетаФактуры
	|ИЗ ИмяТаблицы КАК ИмяТаблицы
	|
	|;
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИмяТаблицыОтбор.*,
	|   СчетФактураВыданныйПоРеализации.Ссылка КАК СчетФактура,
	|   СчетФактураВыданныйПоРеализации.Ссылка.Контрагент КАК КонтрагентСчетаФактуры,
	|   СчетФактураВыданныйПоРеализации.Ссылка.НомерИсправления КАК НомерИсправления
	|ПОМЕСТИТЬ ИмяТаблицыВсеСчетФактураВыданныйПоРеализации
	|ИЗ
	|	ИмяТаблицыОтборДляПодбораСчетаФактуры КАК ИмяТаблицыОтбор
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйПоРеализации
	|	ПО
	|		СчетФактураВыданныйПоРеализации.ДокументОснование = ИмяТаблицыОтбор.ДокументРеализации
	|		И СчетФактураВыданныйПоРеализации.Ссылка.Организация = ИмяТаблицыОтбор.Организация
	|		И СчетФактураВыданныйПоРеализации.Ссылка.Проведен
	|
	|;
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеСчетаФактуры.*
	|ПОМЕСТИТЬ ИмяТаблицыСчетФактураВыданныйПоРеализации
	|ИЗ ИмяТаблицыВсеСчетФактураВыданныйПоРеализации КАК ВсеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ВсеСчетаФактуры.ДокументРеализации,
	|			ВсеСчетаФактуры.Покупатель,
	|			ВсеСчетаФактуры.Организация,
	|			ВсеСчетаФактуры.НомерСчетаФактуры,
	|			ВсеСчетаФактуры.ДатаСчетаФактуры,
	|			МАКСИМУМ(ВсеСчетаФактуры.НомерИсправления) КАК МаксНомерИсправления
	|			
	|		ИЗ ИмяТаблицыВсеСчетФактураВыданныйПоРеализации КАК ВсеСчетаФактуры
	|		СГРУППИРОВАТЬ ПО
	|			ВсеСчетаФактуры.ДокументРеализации,
	|			ВсеСчетаФактуры.Покупатель,
	|			ВсеСчетаФактуры.Организация,
	|			ВсеСчетаФактуры.НомерСчетаФактуры,
	|			ВсеСчетаФактуры.ДатаСчетаФактуры
	|		) КАК ПоследнийНомерИсправления
	|	ПО ВсеСчетаФактуры.ДокументРеализации = ПоследнийНомерИсправления.ДокументРеализации
	|		И ВсеСчетаФактуры.Покупатель = ПоследнийНомерИсправления.Покупатель
	|		И ВсеСчетаФактуры.Организация = ПоследнийНомерИсправления.Организация
	|		И ВсеСчетаФактуры.НомерСчетаФактуры = ПоследнийНомерИсправления.НомерСчетаФактуры
	|		И ВсеСчетаФактуры.ДатаСчетаФактуры = ПоследнийНомерИсправления.ДатаСчетаФактуры
	|		И ВсеСчетаФактуры.НомерИсправления = ПоследнийНомерИсправления.МаксНомерИсправления
	|;
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицыВсеСчетФактураВыданныйПоРеализации
	|;
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИмяТаблицыОтбор.*,
	|   СчетФактураВыданныйПоДатеИНомеру.Ссылка КАК СчетФактура,
	|   СчетФактураВыданныйПоДатеИНомеру.Контрагент КАК КонтрагентСчетаФактуры,
	|   СчетФактураВыданныйПоДатеИНомеру.НомерИсправления КАК НомерИсправления
	|ПОМЕСТИТЬ ИмяТаблицыВсеСчетФактураВыданныйПоДатеИНомеру
	|ИЗ
	|	ИмяТаблицыОтборДляПодбораСчетаФактуры КАК ИмяТаблицыОтбор
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный КАК СчетФактураВыданныйПоДатеИНомеру
	|	ПО
	|		НАЧАЛОПЕРИОДА(СчетФактураВыданныйПоДатеИНомеру.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ИмяТаблицыОтбор.ДатаСчетаФактуры, ДЕНЬ)
	|		И СчетФактураВыданныйПоДатеИНомеру.Номер = ИмяТаблицыОтбор.НомерСчетаФактуры
	|		И СчетФактураВыданныйПоДатеИНомеру.Контрагент = ИмяТаблицыОтбор.Покупатель
	|		И СчетФактураВыданныйПоДатеИНомеру.Организация = ИмяТаблицыОтбор.Организация
	|		И СчетФактураВыданныйПоДатеИНомеру.Проведен
	|
	|;
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеСчетаФактуры.*
	|ПОМЕСТИТЬ ИмяТаблицыСчетФактураВыданныйПоДатеИНомеру
	|ИЗ ИмяТаблицыВсеСчетФактураВыданныйПоДатеИНомеру КАК ВсеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ВсеСчетаФактуры.ДокументРеализации,
	|			ВсеСчетаФактуры.Покупатель,
	|			ВсеСчетаФактуры.Организация,
	|			ВсеСчетаФактуры.НомерСчетаФактуры,
	|			ВсеСчетаФактуры.ДатаСчетаФактуры,
	|			МАКСИМУМ(ВсеСчетаФактуры.НомерИсправления) КАК МаксНомерИсправления
	|			
	|		ИЗ ИмяТаблицыВсеСчетФактураВыданныйПоДатеИНомеру КАК ВсеСчетаФактуры
	|		СГРУППИРОВАТЬ ПО
	|			ВсеСчетаФактуры.ДокументРеализации,
	|			ВсеСчетаФактуры.Покупатель,
	|			ВсеСчетаФактуры.Организация,
	|			ВсеСчетаФактуры.НомерСчетаФактуры,
	|			ВсеСчетаФактуры.ДатаСчетаФактуры
	|		) КАК ПоследнийНомерИсправления
	|	ПО ВсеСчетаФактуры.ДокументРеализации = ПоследнийНомерИсправления.ДокументРеализации
	|		И ВсеСчетаФактуры.Покупатель = ПоследнийНомерИсправления.Покупатель
	|		И ВсеСчетаФактуры.Организация = ПоследнийНомерИсправления.Организация
	|		И ВсеСчетаФактуры.НомерСчетаФактуры = ПоследнийНомерИсправления.НомерСчетаФактуры
	|		И ВсеСчетаФактуры.ДатаСчетаФактуры = ПоследнийНомерИсправления.ДатаСчетаФактуры
	|		И ВсеСчетаФактуры.НомерИсправления = ПоследнийНомерИсправления.МаксНомерИсправления
	|;
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицыВсеСчетФактураВыданныйПоДатеИНомеру
	|;
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИмяТаблицыОтбор.*,
	|   СчетФактураКомиссионеруПоДатеИНомеру.Ссылка КАК СчетФактура,
	|   СчетФактураКомиссионеруПоДатеИНомеру.Покупатель КАК КонтрагентСчетаФактуры,
	|   СчетФактураКомиссионеруПоДатеИНомеру.Ссылка.НомерИсправления КАК НомерИсправления
	|ПОМЕСТИТЬ ИмяТаблицыВсеСчетФактураКомиссионеруПоДатеИНомеру
	|ИЗ
	|	ИмяТаблицыОтборДляПодбораСчетаФактуры КАК ИмяТаблицыОтбор
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураКомиссионеру.Покупатели КАК СчетФактураКомиссионеруПоДатеИНомеру
	|	ПО
	|		НАЧАЛОПЕРИОДА(СчетФактураКомиссионеруПоДатеИНомеру.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ИмяТаблицыОтбор.ДатаСчетаФактуры, ДЕНЬ)
	|		И СчетФактураКомиссионеруПоДатеИНомеру.НомерСчетаФактуры = ИмяТаблицыОтбор.НомерСчетаФактуры
	|		И СчетФактураКомиссионеруПоДатеИНомеру.Покупатель = ИмяТаблицыОтбор.Покупатель
	|		И СчетФактураКомиссионеруПоДатеИНомеру.Ссылка.Организация = ИмяТаблицыОтбор.Организация
	|		И СчетФактураКомиссионеруПоДатеИНомеру.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИмяТаблицыОтбор.*,
	|   СчетФактураВыданныйПоДатеИНомеру.Ссылка КАК СчетФактура,
	|   СчетФактураВыданныйПоДатеИНомеру.Покупатель КАК КонтрагентСчетаФактуры,
	|   СчетФактураВыданныйПоДатеИНомеру.Ссылка.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	ИмяТаблицыОтборДляПодбораСчетаФактуры КАК ИмяТаблицыОтбор
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный.Покупатели КАК СчетФактураВыданныйПоДатеИНомеру
	|	ПО
	|		НАЧАЛОПЕРИОДА(СчетФактураВыданныйПоДатеИНомеру.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ИмяТаблицыОтбор.ДатаСчетаФактуры, ДЕНЬ)
	|		И СчетФактураВыданныйПоДатеИНомеру.НомерСчетаФактуры = ИмяТаблицыОтбор.НомерСчетаФактуры
	|		И СчетФактураВыданныйПоДатеИНомеру.Покупатель = ИмяТаблицыОтбор.Покупатель
	|		И СчетФактураВыданныйПоДатеИНомеру.Ссылка.Организация = ИмяТаблицыОтбор.Организация
	|		И СчетФактураВыданныйПоДатеИНомеру.Ссылка.Проведен
	|;
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеСчетаФактуры.*
	|ПОМЕСТИТЬ ИмяТаблицыСчетФактураКомиссионеруПоДатеИНомеру
	|ИЗ ИмяТаблицыВсеСчетФактураКомиссионеруПоДатеИНомеру КАК ВсеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ВсеСчетаФактуры.ДокументРеализации,
	|			ВсеСчетаФактуры.Покупатель,
	|			ВсеСчетаФактуры.Организация,
	|			ВсеСчетаФактуры.НомерСчетаФактуры,
	|			ВсеСчетаФактуры.ДатаСчетаФактуры,
	|			МАКСИМУМ(ВсеСчетаФактуры.НомерИсправления) КАК МаксНомерИсправления
	|			
	|		ИЗ ИмяТаблицыВсеСчетФактураКомиссионеруПоДатеИНомеру КАК ВсеСчетаФактуры
	|		СГРУППИРОВАТЬ ПО
	|			ВсеСчетаФактуры.ДокументРеализации,
	|			ВсеСчетаФактуры.Покупатель,
	|			ВсеСчетаФактуры.Организация,
	|			ВсеСчетаФактуры.НомерСчетаФактуры,
	|			ВсеСчетаФактуры.ДатаСчетаФактуры
	|		) КАК ПоследнийНомерИсправления
	|	ПО ВсеСчетаФактуры.ДокументРеализации = ПоследнийНомерИсправления.ДокументРеализации
	|		И ВсеСчетаФактуры.Покупатель = ПоследнийНомерИсправления.Покупатель
	|		И ВсеСчетаФактуры.Организация = ПоследнийНомерИсправления.Организация
	|		И ВсеСчетаФактуры.НомерСчетаФактуры = ПоследнийНомерИсправления.НомерСчетаФактуры
	|		И ВсеСчетаФактуры.ДатаСчетаФактуры = ПоследнийНомерИсправления.ДатаСчетаФактуры
	|		И ВсеСчетаФактуры.НомерИсправления = ПоследнийНомерИсправления.МаксНомерИсправления
	|;
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицыВсеСчетФактураКомиссионеруПоДатеИНомеру
	|;
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицыОтборДляПодбораСчетаФактуры
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ПоляТаблицы,
	|	ИмяТаблицы.ДокументРеализации КАК ДокументРеализации,
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(СчетФактураВыданныйПоРеализации.СчетФактура.Дата, 
	|		ЕСТЬNULL(СчетФактураВыданныйПоДатеИНомеру.СчетФактура.Дата,
	|			ЕСТЬNULL(СчетФактураКомиссионеруПоДатеИНомеру.СчетФактура.Дата,
	|				ИмяТаблицы.ДатаСчетаФактуры))), ДЕНЬ) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураВыданныйПоРеализации.СчетФактура.Номер,
	|		ЕСТЬNULL(СчетФактураВыданныйПоДатеИНомеру.СчетФактура.Номер,
	|			ЕСТЬNULL(СчетФактураКомиссионеруПоДатеИНомеру.СчетФактура.Номер,
	|				ИмяТаблицы.НомерСчетаФактуры))) КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураВыданныйПоРеализации.КонтрагентСчетаФактуры,
	|		ЕСТЬNULL(СчетФактураВыданныйПоДатеИНомеру.КонтрагентСчетаФактуры,
	|			ЕСТЬNULL(СчетФактураКомиссионеруПоДатеИНомеру.КонтрагентСчетаФактуры,
	|				ИмяТаблицы.Покупатель))) КАК Покупатель,
	|	ЕСТЬNULL(СчетФактураВыданныйПоРеализации.СчетФактура,
	|		ЕСТЬNULL(СчетФактураВыданныйПоДатеИНомеру.СчетФактура,
	|				СчетФактураКомиссионеруПоДатеИНомеру.СчетФактура))  КАК СчетФактура
	|ПОМЕСТИТЬ ИмяТаблицыПредварительная
	|ИЗ
	|	ИмяТаблицы КАК ИмяТаблицы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИмяТаблицыСчетФактураВыданныйПоРеализации КАК СчетФактураВыданныйПоРеализации
	|	ПО СчетФактураВыданныйПоРеализации.ДокументРеализации = ИмяТаблицы.ДокументРеализации
	|		И СчетФактураВыданныйПоРеализации.Покупатель = ИмяТаблицы.Покупатель
	|		И СчетФактураВыданныйПоРеализации.Организация = ИмяТаблицы.Организация
	|		И СчетФактураВыданныйПоРеализации.НомерСчетаФактуры = ИмяТаблицы.НомерСчетаФактуры
	|		И СчетФактураВыданныйПоРеализации.ДатаСчетаФактуры = ИмяТаблицы.ДатаСчетаФактуры
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИмяТаблицыСчетФактураВыданныйПоДатеИНомеру КАК СчетФактураВыданныйПоДатеИНомеру
	|	ПО СчетФактураВыданныйПоДатеИНомеру.ДокументРеализации = ИмяТаблицы.ДокументРеализации
	|		И СчетФактураВыданныйПоДатеИНомеру.Покупатель = ИмяТаблицы.Покупатель
	|		И СчетФактураВыданныйПоДатеИНомеру.Организация = ИмяТаблицы.Организация
	|		И СчетФактураВыданныйПоДатеИНомеру.НомерСчетаФактуры = ИмяТаблицы.НомерСчетаФактуры
	|		И СчетФактураВыданныйПоДатеИНомеру.ДатаСчетаФактуры = ИмяТаблицы.ДатаСчетаФактуры
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИмяТаблицыСчетФактураКомиссионеруПоДатеИНомеру КАК СчетФактураКомиссионеруПоДатеИНомеру
	|	ПО СчетФактураКомиссионеруПоДатеИНомеру.ДокументРеализации = ИмяТаблицы.ДокументРеализации
	|		И СчетФактураКомиссионеруПоДатеИНомеру.Покупатель = ИмяТаблицы.Покупатель
	|		И СчетФактураКомиссионеруПоДатеИНомеру.Организация = ИмяТаблицы.Организация
	|		И СчетФактураКомиссионеруПоДатеИНомеру.НомерСчетаФактуры = ИмяТаблицы.НомерСчетаФактуры
	|		И СчетФактураКомиссионеруПоДатеИНомеру.ДатаСчетаФактуры = ИмяТаблицы.ДатаСчетаФактуры
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицыСчетФактураВыданныйПоРеализации
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицыСчетФактураВыданныйПоДатеИНомеру
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицыСчетФактураКомиссионеруПоДатеИНомеру
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицы
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ИмяТаблицы
	|ИЗ
	|	ИмяТаблицыПредварительная
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицыПредварительная
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область РегистрацияСчетовФактурПеревыставленныхКомитенту

Функция ТекстЗапросаСчетовФактурПеревыставленныхКомитентамДляОтчетаКомитентуОЗакупках() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	СчетФактураВыданныйТовары.Ссылка КАК СчетФактураВыданныйКомитенту,
		               |	СчетФактураВыданныйТовары.Ссылка.Дата КАК ДатаСчетаФактуры,
		               |	СчетФактураВыданныйТовары.Ссылка.Номер КАК НомерСчетаФактуры,
		               |	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ОтчетКомитентуОЗакупках,
		               |	СчетФактураВыданныйТовары.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученный,
		               |	СчетФактураВыданныйТовары.Ссылка.Контрагент КАК Комитент,
		               |	ВЫБОР
		               |		КОГДА СчетаФактурыПоставщиковКПеревыставлениюКомитентам.ОтчетКомитентуОЗакупках ЕСТЬ NULL
		               |			ТОГДА ЛОЖЬ
		               |		ИНАЧЕ ИСТИНА
		               |	КОНЕЦ КАК ТребуетсяПереоформление
		               |ИЗ
		               |	Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
		               |		ПО (СчетФактураВыданныйДокументыОснования.ДокументОснование = &ДокументОснование)
		               |			И (СчетФактураВыданныйДокументыОснования.Ссылка = СчетФактураВыданныйТовары.Ссылка)
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыПоставщиковКПеревыставлениюКомитентам КАК СчетаФактурыПоставщиковКПеревыставлениюКомитентам
		               |		ПО (СчетаФактурыПоставщиковКПеревыставлениюКомитентам.ОтчетКомитентуОЗакупках = СчетФактураВыданныйДокументыОснования.ДокументОснование)
		               |			И (СчетаФактурыПоставщиковКПеревыставлениюКомитентам.СчетФактураПолученный = СчетФактураВыданныйТовары.СчетФактураПолученныйОтПродавца)
		               |			И (СчетаФактурыПоставщиковКПеревыставлениюКомитентам.Комитент = СчетФактураВыданныйТовары.Ссылка.Контрагент)
		               |ГДЕ
		               |	СчетФактураВыданныйТовары.Ссылка.Проведен
		               |	И СчетФактураВыданныйТовары.СчетФактураПолученныйОтПродавца в(&СчетаФактурыПолученные)
		               |	И СчетФактураВыданныйТовары.Ссылка.Перевыставленный";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

// Добавляет запрос в пакет запросов для получения данных, необходимых для заполнения данны о счете фактуре в документах  
// ОтчетеКомитентуОЗакупках при пакетной обработке строк табличных частей. 
//
// Параметры:
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия
//  ОписаниеЗапроса - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОписаниеЗапроса
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ДополнитьТекстЗапросаСчетФактурыПеревыставленныеВОтчетеКомитентуОЗакупках(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	Перем ПараметрыДействия;
	
	Если ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках",
			СтруктураДействий,
			КэшированныеЗначения,
			ПараметрыДействия) Тогда
		
		ТекстЗарпоса = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИсточникДанных.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
			|	
			|	СчетФактураВыданныйТовары.Ссылка КАК СчетФактураВыданныйКомитенту,
			|	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ОтчетКомитентуОЗакупках,
			|	СчетФактураВыданныйТовары.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученный
			|ИЗ
			|	ВтИсточникДанных КАК ИсточникДанных
			|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
			|		ПО СчетФактураВыданныйТовары.Ссылка.Проведен
			|			И СчетФактураВыданныйТовары.СчетФактураПолученныйОтПродавца = ИсточникДанных.СчетФактураПолученный
			|			И СчетФактураВыданныйТовары.Ссылка.Перевыставленный
			|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
			|		ПО (СчетФактураВыданныйДокументыОснования.ДокументОснование = &ДокументОснование)
			|			И (СчетФактураВыданныйДокументыОснования.Ссылка = СчетФактураВыданныйТовары.Ссылка)
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаФактурыПоставщиковКПеревыставлениюКомитентам КАК СчетаФактурыПоставщиковКПеревыставлениюКомитентам
			|		ПО (СчетаФактурыПоставщиковКПеревыставлениюКомитентам.ОтчетКомитентуОЗакупках = СчетФактураВыданныйДокументыОснования.ДокументОснование)
			|			И (СчетаФактурыПоставщиковКПеревыставлениюКомитентам.СчетФактураПолученный = СчетФактураВыданныйТовары.СчетФактураПолученныйОтПродавца)
			|			И (СчетаФактурыПоставщиковКПеревыставлениюКомитентам.Комитент = СчетФактураВыданныйТовары.Ссылка.Контрагент)
			|	";
	
		ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗарпоса, "СчетФактурыПеревыставленныеВОтчетеКомитентуОЗакупках");
		ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ДокументОснование", 
												ПараметрыДействия.ОтчетКомитентуОЗакупках);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбщиеПроцедурыСчетовФактур

// Устанавливает параметры запроса проведения по журналу счетов-фактур для счета-фактуры выставленного: 
//  ДатаВыставления и КодВидаОперацииКомиссия
//
// Параметры:
//  Реквизиты - ВыборкаИзРезультатаЗапроса - Выборка реквизитов шапки документа
//   *Необходимые реквизиты: Период, ДатаВыставления/ДатаПолучения, Исправление, ДатаСчетаФактурыОснования, КодВидаОперации
//  Запрос - Запрос - Запрос проведения документа
//
Процедура УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыВыставленного(Реквизиты, Запрос) Экспорт
	
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Макс(Реквизиты.ДатаВыставления,Реквизиты.Период));
	
	Если Не ЗначениеЗаполнено(Реквизиты.ДатаВыставления) Тогда
		ДатаВыставления = Реквизиты.Период;
	ИначеЕсли ВерсияПостановления1137 >= 4 Тогда
		ДатаВыставления = ?(Реквизиты.Исправление, Реквизиты.ДатаСчетаФактурыОснования, Реквизиты.Период);
	Иначе
		ДатаВыставления = Реквизиты.ДатаВыставления;
	КонецЕсли;
		
	КодВидаОперацииКомиссия = 
		УчетНДСПереопределяемый.КодВидаОперацииКомиссия(Реквизиты.КодВидаОперации, ДатаВыставления);
	
	Запрос.УстановитьПараметр("ДатаВыставления",         ДатаВыставления);
	Запрос.УстановитьПараметр("КодВидаОперацииКомиссия", КодВидаОперацииКомиссия);
	
КонецПроцедуры

// Устанавливает параметры запроса проведения по журналу счетов-фактур для счета-фактуры полученного:
//  ДатаПолучения и КодВидаОперацииКомиссия
//
// Параметры:
//  Реквизиты - ВыборкаИзРезультатаЗапроса - Выборка реквизитов шапки документа
//   *Необходимые реквизиты: Период, ДатаПолучения, Исправление, ДатаИсправления, КодВидаОперации
//  Запрос - Запрос - Запрос проведения документа
//
Процедура УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыПолученного(Реквизиты, Запрос) Экспорт
	
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Макс(Реквизиты.ДатаПолучения,Реквизиты.Период));
	
	Если Не ЗначениеЗаполнено(Реквизиты.ДатаПолучения) Тогда
		ДатаПолучения = Реквизиты.Период;
	ИначеЕсли ВерсияПостановления1137 >= 4 Тогда
		ДатаПолучения = ?(Реквизиты.Исправление, Реквизиты.ДатаИсправления, Реквизиты.Период);
	Иначе
		ДатаПолучения = Реквизиты.ДатаПолучения;
	КонецЕсли;
		
	КодВидаОперацииКомиссия = 
		УчетНДСПереопределяемый.КодВидаОперацииКомиссия(Реквизиты.КодВидаОперации, ДатаПолучения);
	
	Запрос.УстановитьПараметр("ДатаПолучения",           ДатаПолучения);
	Запрос.УстановитьПараметр("КодВидаОперацииКомиссия", КодВидаОперацииКомиссия);
	
КонецПроцедуры

Процедура ЗаполнитьЗависимыеОтКонтрагентаРеквизитыФормы(Форма, ДатаСведений, ИзменятьИННКПП = Ложь) Экспорт
	
	Форма.КонтрагентЮрЛицо                        = Ложь;
	Форма.НеобходимоЗаполнитьГоловногоКонтрагента = Ложь;
	
	Форма.СписокВыбораКПП.Очистить();
	
	Если ЗначениеЗаполнено(Форма.Объект.Контрагент) И ТипЗнч(Форма.Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		РеквизитыКлиента = ПартнерыИКонтрагенты.РеквизитыКонтрагента(Форма.Объект.Контрагент, ДатаСведений);
		
		Форма.НеобходимоЗаполнитьГоловногоКонтрагента = (РеквизитыКлиента.ОбособленноеПодразделение = Истина
			И Не ЗначениеЗаполнено(РеквизитыКлиента.ГоловнойКонтрагент));
		Форма.КонтрагентЮрЛицо = (РеквизитыКлиента.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо);
		
		Если ИзменятьИННКПП Тогда
			Форма.Объект.ИННКонтрагента = РеквизитыКлиента.ИНН;
			Форма.Объект.КППКонтрагента = РеквизитыКлиента.КПП;
		КонецЕсли;
		
	Иначе
		
		Форма.Объект.ИННКонтрагента = "";
		Форма.Объект.КППКонтрагента = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораКППСчетФактурыВыданные(СписокВыбора, Контрагент, ДатаСведений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КонтрагентыХолдинга
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	НЕ Контрагенты.Ссылка = &Контрагент
	|	И Контрагенты.ГоловнойКонтрагент = &Контрагент
	|	И Контрагенты.ОбособленноеПодразделение
	|	И НЕ Контрагенты.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ИсторияКППКонтрагентов.Период) КАК Период,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЗначенияКПП
	|ИЗ
	|	Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|ГДЕ
	|	ИсторияКППКонтрагентов.Ссылка  В (ВЫБРАТЬ РАЗЛИЧНЫЕ КонтрагентыХолдинга.Ссылка ИЗ КонтрагентыХолдинга КАК КонтрагентыХолдинга)
	|	И ИсторияКППКонтрагентов.Период <= &ДатаСведений
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияКППКонтрагентов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ИсторияКППКонтрагентов.КПП КАК КПП,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ИсторическоеЗначениеКПП
	|ИЗ
	|	ЗначенияКПП КАК ЗначенияКПП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|		ПО ЗначенияКПП.Ссылка = ИсторияКППКонтрагентов.Ссылка
	|			И ЗначенияКПП.Период = ИсторияКППКонтрагентов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИсторическоеЗначениеКПП.КПП, Контрагенты.КПП) КАК КПП,
	|	Контрагенты.Представление КАК ПредставлениеКонтрагента
	|ПОМЕСТИТЬ ДанныеКонтрагентов
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыХолдинга КАК КонтрагентыХолдинга
	|			ПО Контрагенты.Ссылка = КонтрагентыХолдинга.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсторическоеЗначениеКПП КАК ИсторическоеЗначениеКПП
	|			ПО ИсторическоеЗначениеКПП.Ссылка = Контрагенты.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	КПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	СчетФактураВыданный.КППКонтрагента КАК КПП
	|ПОМЕСТИТЬ ДанныеСчетовФактуры
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.Контрагент = &Контрагент
	|	И СчетФактураВыданный.Проведен
	|	И НЕ СчетФактураВыданный.КППКонтрагента = """"
	|	И НЕ СчетФактураВыданный.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураВыданныйАванс.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|ГДЕ
	|	СчетФактураВыданныйАванс.Контрагент = &Контрагент
	|	И СчетФактураВыданныйАванс.Проведен
	|	И НЕ СчетФактураВыданныйАванс.КППКонтрагента = """"
	|	И НЕ СчетФактураВыданныйАванс.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|	
	|ВЫБРАТЬ
	|	СчетФактураКомиссионеру.КПППокупателя
	|ИЗ
	|	Документ.СчетФактураКомиссионеру.Покупатели КАК СчетФактураКомиссионеру
	|ГДЕ
	|	СчетФактураКомиссионеру.Покупатель = &Контрагент
	|	И СчетФактураКомиссионеру.Ссылка.Проведен
	|	И НЕ СчетФактураКомиссионеру.КПППокупателя = """"
	|	И НЕ СчетФактураКомиссионеру.КПППокупателя В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКонтрагентов.КПП КАК КПП,
	|	ДанныеКонтрагентов.ПредставлениеКонтрагента КАК ПредставлениеКонтрагента
	|ИЗ
	|	ДанныеКонтрагентов КАК ДанныеКонтрагентов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеСчетовФактуры.КПП,
	|	""""
	|ИЗ
	|	ДанныеСчетовФактуры КАК ДанныеСчетовФактуры";
	

	СписокВыбора.Очистить();
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		ПредставлениеКПП = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2",
			?(ПустаяСтрока(Выборка.КПП), Нстр("ru = '<не задан>'"), Выборка.КПП),
			?(ПустаяСтрока(Выборка.ПредставлениеКонтрагента), "", "(" + Выборка.ПредставлениеКонтрагента + ")"));
		СписокВыбора.Добавить(Выборка.КПП, ПредставлениеКПП);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораКППСчетФактурыПолученные(СписокВыбора, Контрагент, ДатаСведений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КонтрагентыХолдинга
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	НЕ Контрагенты.Ссылка = &Контрагент
	|	И Контрагенты.ГоловнойКонтрагент = &Контрагент
	|	И Контрагенты.ОбособленноеПодразделение
	|	И НЕ Контрагенты.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	МАКСИМУМ(ИсторияКППКонтрагентов.Период) КАК Период,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЗначенияКПП
	|ИЗ
	|	Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|ГДЕ
	|	ИсторияКППКонтрагентов.Ссылка  В (ВЫБРАТЬ РАЗЛИЧНЫЕ КонтрагентыХолдинга.Ссылка ИЗ КонтрагентыХолдинга КАК КонтрагентыХолдинга)
	|	И ИсторияКППКонтрагентов.Период <= &ДатаСведений
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияКППКонтрагентов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ИсторияКППКонтрагентов.КПП КАК КПП,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ИсторическоеЗначениеКПП
	|ИЗ
	|	ЗначенияКПП КАК ЗначенияКПП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|		ПО ЗначенияКПП.Ссылка = ИсторияКППКонтрагентов.Ссылка
	|			И ЗначенияКПП.Период = ИсторияКППКонтрагентов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ 
	|	ЕСТЬNULL(ИсторическоеЗначениеКПП.КПП, Контрагенты.КПП) КАК КПП,
	|	Контрагенты.Представление КАК ПредставлениеКонтрагента
	|ПОМЕСТИТЬ ДанныеКонтрагентов
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыХолдинга КАК КонтрагентыХолдинга
	|			ПО Контрагенты.Ссылка = КонтрагентыХолдинга.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсторическоеЗначениеКПП КАК ИсторическоеЗначениеКПП
	|			ПО ИсторическоеЗначениеКПП.Ссылка = Контрагенты.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	КПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	СчетФактураПолученный.КППКонтрагента КАК КПП
	|ПОМЕСТИТЬ ДанныеСчетовФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Контрагент = &Контрагент
	|	И СчетФактураПолученный.Проведен
	|	И НЕ СчетФактураПолученный.КППКонтрагента = """"
	|	И НЕ СчетФактураПолученный.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураПолученный.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Контрагент = &Контрагент
	|	И СчетФактураПолученный.Проведен
	|	И НЕ СчетФактураПолученный.КППКонтрагента = """"
	|	И НЕ СчетФактураПолученный.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураПолученныйАванс.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|ГДЕ
	|	СчетФактураПолученныйАванс.Контрагент = &Контрагент
	|	И СчетФактураПолученныйАванс.Проведен
	|	И НЕ СчетФактураПолученныйАванс.КППКонтрагента = """"
	|	И НЕ СчетФактураПолученныйАванс.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	ЗаписьКнигиПокупок.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ЗаписьКнигиПокупок
	|ГДЕ
	|	ЗаписьКнигиПокупок.Контрагент = &Контрагент
	|	И ЗаписьКнигиПокупок.Проведен
	|	И НЕ ЗаписьКнигиПокупок.КППКонтрагента = """"
	|	И НЕ ЗаписьКнигиПокупок.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураНаНеподтвержденнуюРеализацию0.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК СчетФактураНаНеподтвержденнуюРеализацию0
	|ГДЕ
	|	СчетФактураНаНеподтвержденнуюРеализацию0.Контрагент = &Контрагент
	|	И СчетФактураНаНеподтвержденнуюРеализацию0.Проведен
	|	И НЕ СчетФактураНаНеподтвержденнуюРеализацию0.КППКонтрагента = """"
	|	И НЕ СчетФактураНаНеподтвержденнуюРеализацию0.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураКомитента.КППКомитента КАК КПП
	|ИЗ
	|	Документ.СчетФактураКомитента КАК СчетФактураКомитента
	|ГДЕ
	|	СчетФактураКомитента.Комитент = &Контрагент
	|	И СчетФактураКомитента.Проведен
	|	И НЕ СчетФактураКомитента.КППКомитента = """"
	|	И НЕ СчетФактураКомитента.КППКомитента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|ОБЪЕДИНИТЬ
	|	
	|ВЫБРАТЬ
	|	СчетФактураКомитентаПокупатели.КППСубкомиссионера
	|ИЗ
	|	Документ.СчетФактураКомитента.Покупатели КАК СчетФактураКомитентаПокупатели
	|ГДЕ
	|	СчетФактураКомитентаПокупатели.Покупатель = &Контрагент
	|	И СчетФактураКомитентаПокупатели.Ссылка.Проведен
	|	И НЕ СчетФактураКомитентаПокупатели.КППСубкомиссионера = """"
	|	И НЕ СчетФактураКомитентаПокупатели.КППСубкомиссионера В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|	
	|ВЫБРАТЬ
	|	СчетФактураПолученныйПродавцы.КПППродавца
	|ИЗ
	|	Документ.СчетФактураПолученный.Продавцы КАК СчетФактураПолученныйПродавцы
	|ГДЕ
	|	СчетФактураПолученныйПродавцы.Продавец = &Контрагент
	|	И СчетФактураПолученныйПродавцы.Ссылка.Проведен
	|	И НЕ СчетФактураПолученныйПродавцы.КПППродавца = """"
	|	И НЕ СчетФактураПолученныйПродавцы.КПППродавца В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|	
	|ВЫБРАТЬ
	|	СчетФактураПолученныйАвансПродавцы.КПППродавца
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Продавцы КАК СчетФактураПолученныйАвансПродавцы
	|ГДЕ
	|	СчетФактураПолученныйАвансПродавцы.Продавец = &Контрагент
	|	И СчетФактураПолученныйАвансПродавцы.Ссылка.Проведен
	|	И НЕ СчетФактураПолученныйАвансПродавцы.КПППродавца = """"
	|	И НЕ СчетФактураПолученныйАвансПродавцы.КПППродавца В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКонтрагентов.КПП КАК КПП,
	|	ДанныеКонтрагентов.ПредставлениеКонтрагента КАК ПредставлениеКонтрагента
	|ИЗ
	|	ДанныеКонтрагентов КАК ДанныеКонтрагентов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеСчетовФактуры.КПП,
	|	""""
	|ИЗ
	|	ДанныеСчетовФактуры КАК ДанныеСчетовФактуры";
	

	СписокВыбора.Очистить();
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		ПредставлениеКПП = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2",
			?(ПустаяСтрока(Выборка.КПП), Нстр("ru = '<не задан>'"), Выборка.КПП),
			?(ПустаяСтрока(Выборка.ПредставлениеКонтрагента), "", "(" + Выборка.ПредставлениеКонтрагента + ")"));
		СписокВыбора.Добавить(Выборка.КПП, ПредставлениеКПП);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПродавцов(Форма, СписокПродавцов, ДатаСведений, ПолучатьИННКПП = Ложь) Экспорт
	
	Форма.Объект.Продавцы.Очистить();
	Для Каждого Элемент Из СписокПродавцов Цикл
		НоваяСтрока = Форма.Объект.Продавцы.Добавить();
		Если ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент.Значение);
		Иначе
			НоваяСтрока.Продавец = Элемент.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Если ПолучатьИННКПП Тогда
		
		Продавцы = Новый Массив;
		Для каждого Строка Из Форма.Объект.Продавцы Цикл
			Если ЗначениеЗаполнено(Строка.Продавец) Тогда
				Продавцы.Добавить(Строка.Продавец);
			КонецЕсли;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ИсторияКППКонтрагентов.Период) КАК Период,
		|	ИсторияКППКонтрагентов.Ссылка           КАК Ссылка
		|ПОМЕСТИТЬ ЗначенияКПП
		|ИЗ
		|	Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
		|ГДЕ
		|	ИсторияКППКонтрагентов.Ссылка  В (&Контрагенты)
		|	И ИсторияКППКонтрагентов.Период <= &ДатаСведений
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсторияКППКонтрагентов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ИсторияКППКонтрагентов.КПП    КАК КПП,
		|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ИсторическоеЗначениеКПП
		|ИЗ
		|	ЗначенияКПП КАК ЗначенияКПП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
		|		ПО ЗначенияКПП.Ссылка = ИсторияКППКонтрагентов.Ссылка
		|			И ЗначенияКПП.Период = ИсторияКППКонтрагентов.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка                                     КАК Продавец,
		|	ЕСТЬNULL(ИсторическоеЗначениеКПП.КПП, Контрагенты.КПП) КАК КПППродавца,
		|	Контрагенты.ИНН                                        КАК ИННПродавца,
		|	ВЫБОР
		|		КОГДА Контрагенты.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                 КАК ЮрЛицо
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|	ЛЕВОЕ СОЕДИНЕНИЕ ИсторическоеЗначениеКПП КАК ИсторическоеЗначениеКПП
		|		ПО ИсторическоеЗначениеКПП.Ссылка = Контрагенты.Ссылка
		|ГДЕ
		|	Контрагенты.Ссылка В (&Контрагенты)
		|";
		
		Запрос.УстановитьПараметр("Контрагенты",  Продавцы);
		Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
		
		Форма.Объект.Продавцы.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
	ДокументОбъект = Форма.РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьКодВидаОперации();
	Форма.ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

// Проверяет выбранные в табличной части виды ценностей. Они не должны относиться одновременно к отгрузкам и оплатам.
//
// Параметры:
// 	Объект - ДокументОбъект - Объект для проверки
// 	ИмяТабличнойЧасти - Строка - Имя табличной части с видами ценностей
// 	Отказ - Булево - Отказ в проведении документа.
//
Процедура ПроверитьСовместимостьВидовЦенностейТабличнойЧасти(Объект, ИмяТабличнойЧасти, Отказ) Экспорт
	
	Если Объект[ИмяТабличнойЧасти].Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СписокВидовЦенностейОплаты = Новый СписокЗначений;
	СписокВидовЦенностейОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	СписокВидовЦенностейОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	СписокВидовЦенностейОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	СписокВидовЦенностейОплаты.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	
	// Все виды ценностей в ТЧ должны быть связаны с отгрузкой или с оплатой.
	// Определяем, куда относится вид ценностей в первой строке, и считаем, что все остальные должны относиться туда же.
	ОсновнойВидЦенности = Объект[ИмяТабличнойЧасти][0].ВидЦенности;
	ТолькоОплаты = СписокВидовЦенностейОплаты.НайтиПоЗначению(ОсновнойВидЦенности) <> Неопределено;
	
	ШаблонСообщения = НСтр("ru = 'В строке ""%1"" выбран вид ценностей ""%2"", а в первой строке - ""%3"". 
		|В одном документе нельзя указывать виды ценностей связанные и не связанные с оплатой.'");
	
	
	Для Каждого СтрокаТЧ Из Объект[ИмяТабличнойЧасти] Цикл
		СвязанСОплатой = СписокВидовЦенностейОплаты.НайтиПоЗначению(СтрокаТЧ.ВидЦенности) <> Неопределено;
		Если ТолькоОплаты <> СвязанСОплатой Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СтрокаТЧ.НомерСтроки, СтрокаТЧ.ВидЦенности, ОсновнойВидЦенности);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, СтрокаТЧ.НомерСтроки, "ВидЦенности");
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения, 
				Неопределено, 
				Поле, 
				"Объект",
				Отказ);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	

#КонецОбласти

#Область ОформлениеСчетовФактурИТаможенныхДокументов

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_ОформлениеСчетовФактурИТаможенныхДокументов(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеСчетовФактурИТаможенныхДокументов,
		Ложь, Истина, Ложь,
		Перечисления.ОперацииЗакрытияМесяца.ОформлениеОтчетовКомитентамОСписании);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"УчетНДСРФ.Использование_ОформлениеСчетовФактурИТаможенныхДокументов");
	Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		НоваяСтрока.Наименование = НСтр("ru = 'Оформление счетов-фактур'");
	КонецЕсли;
	
КонецПроцедуры

// Обработчики этапа.
Процедура Использование_ОформлениеСчетовФактурИТаможенныхДокументов(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	ОрганизацииКОбработке = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыРасчета.МассивОрганизаций);
	
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(
		ОрганизацииКОбработке,
		Справочники.Организации.УправленческаяОрганизация);
	
	Если ОрганизацииКОбработке.Количество() = 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Для управленческой организации данные документы не оформляются.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыУчетаНДС = Новый Структура;
	ПараметрыУчетаНДС.Вставить("НачалоПериода", 	НачалоМесяца(ПараметрыРасчета.ПериодРегистрации));
	ПараметрыУчетаНДС.Вставить("КонецПериода",  	КонецМесяца(ПараметрыРасчета.ПериодРегистрации));
	
	ЕстьОбязательныеОперацииКВыполнению = Ложь;  
	ЭтоБазоваяВерсия = ПолучитьФункциональнуюОпцию("БазоваяВерсия");
	
	ТекстВыполнить = НСтр("ru = 'Оформить'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Для Каждого Организация Из ОрганизацииКОбработке Цикл 
		
		ПараметрыУчетаНДС.Вставить("МассивОрганизаций", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация));
		ПараметрыУчетаНДС.Вставить("ЗакрытиеМесяца", Истина);
	
		Результат = Обработки.ПомощникПоУчетуНДС.ОперацииПоНДСКВыполнению(ПараметрыУчетаНДС);
	
		ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика,
			Результат.НевыполненныеОперации + Результат.ОбязательныеНевыполненныеОперации);
	
		Если Результат.ЕстьОбязательныеОперацииКВыполнению Тогда     
			
			ЕстьОбязательныеОперацииКВыполнению = Истина;
		
			ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По организации ""%1"" требуется оформление документов по учету НДС (%2 шт.)'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				Организация,
				Результат.ОбязательныеНевыполненныеОперации);         
			
			Если ЭтоБазоваяВерсия Тогда
				
				ДействиеВыполнить = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
					Метаданные.Обработки.ЖурналДокументовНДС.Формы.СписокДокументов.ПолноеИмя());
				ДействиеВыполнить.ПараметрыФормы.Вставить("Организация", Организация);
					
			Иначе
				
				ДействиеВыполнить = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
					Метаданные.Обработки.ПомощникПоУчетуНДС.Формы.Форма.ПолноеИмя());
				// Доп. параметры формы.
				ДействиеВыполнить.ПараметрыФормы.Вставить("ТолькоОформлениеДокументов", Истина);
				ДействиеВыполнить.ПараметрыФормы.Вставить("Организация", Организация);
			
			КонецЕсли;
		
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
				ПараметрыОбработчика,
				ТекстПояснения,
				ТекстВыполнить,
				ДействиеВыполнить,
				Перечисления.ВажностьПроблемыУчета.Предупреждение);
				
			
		КонецЕсли;
		
		Если Результат.ЕстьСчетФактураПолученныйАвансОшибкиСумм Тогда 
			ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По организации ""%1"" в этом квартале есть расхождения в суммах выданных авансов по данным взаиморасчетов и по данным СФ поставщиков'",
					ОбщегоНазначения.КодОсновногоЯзыка()), 
				Организация);
			ТекстВыполнить = НСтр("ru = 'Подробнее'", ОбщегоНазначения.КодОсновногоЯзыка());
			ДействиеВыполнить = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
				"Документ.СчетФактураПолученныйАванс.Форма.ФормаРабочееМесто");
			// Доп. параметры формы.
			
			СтруктураБыстрогоОтбора = Новый Структура;
			СтруктураБыстрогоОтбора.Вставить("Организация", Организация);
			СтруктураБыстрогоОтбора.Вставить("НачалоПериода", НачалоКвартала(ПараметрыУчетаНДС.НачалоПериода));
			СтруктураБыстрогоОтбора.Вставить("КонецПериода", КонецКвартала(ПараметрыУчетаНДС.КонецПериода));
			СтруктураБыстрогоОтбора.Вставить("ОтборСостояние", "РазличаютсяСуммыАвансаИ_СФ");
			ДействиеВыполнить.ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
			ДействиеВыполнить.ПараметрыФормы.Вставить("ЗаполнитьПриОткрытии");
			
			ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(ПараметрыОбработчика, ТекстПояснения, ТекстВыполнить, ДействиеВыполнить);
			
		КонецЕсли;
		Если Результат.ЕстьСчетФактураВыданныйАвансОшибкиСумм Тогда
			ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По организации ""%1"" в этом квартале есть расхождения в суммах полученных авансов по данным взаиморасчетов и по данным СФ'",
					ОбщегоНазначения.КодОсновногоЯзыка()), 
				Организация);
			ТекстВыполнить = НСтр("ru = 'Подробнее'", ОбщегоНазначения.КодОсновногоЯзыка());
			ДействиеВыполнить = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
				"Документ.СчетФактураВыданныйАванс.Форма.ФормаРабочееМесто");
			// Доп. параметры формы. 
			СтруктураБыстрогоОтбора = Новый Структура;
			СтруктураБыстрогоОтбора.Вставить("Организация", Организация);
			СтруктураБыстрогоОтбора.Вставить("НачалоПериода", НачалоКвартала(ПараметрыУчетаНДС.НачалоПериода));
			СтруктураБыстрогоОтбора.Вставить("КонецПериода", КонецКвартала(ПараметрыУчетаНДС.КонецПериода));
			СтруктураБыстрогоОтбора.Вставить("ПравилоОтбораАванса", ПредопределенноеЗначение("Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты")); 
			СтруктураБыстрогоОтбора.Вставить("ОтборСостояние", "РазличаютсяСуммыАвансаИ_СФ");
			ДействиеВыполнить.ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
			ДействиеВыполнить.ПараметрыФормы.Вставить("ЗаполнитьПриОткрытии");
			
			ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(ПараметрыОбработчика, ТекстПояснения, ТекстВыполнить, ДействиеВыполнить);
		КонецЕсли;

	КонецЦикла;
		
	Если НЕ ЕстьОбязательныеОперацииКВыполнению Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Нет неоформленных документов.'", ОбщегоНазначения.КодОсновногоЯзыка()));
			
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ПеречислениеНДСВБюджет

#Область ПеречислениеНДСВБюджетПоОтдельнымОперациям

// Возвращает пустую таблицу счетов-фактур для регистрации действий по оплате НДС в бюджет.
//
// Возвращаемое значение:
// 	ТаблицаЗначений - таблица с колонками:
//		* СчетФактура - ДокументСсылка - Документ, требующий оплаты НДС
//		* СуммаОплаты - Число - Сумма НДС к оплате
//		* ВидАгентскогоДоговора - ПеречислениеСсылка.ВидыАгентскихДоговоров - для счетов-фактур налогового агента
//		* ОплатаЧерезЕдиныйЛицевойСчет - Булево - оплата таможенных платежей через единый лицевой счет
//
Функция НоваяТаблицаСчетовФактур() Экспорт
	
	СчетаФактуры = Новый ТаблицаЗначений;
	// Общие свойства.
	СчетаФактуры.Колонки.Добавить("СчетФактура", Документы.ТипВсеСсылки());
	СчетаФактуры.Колонки.Добавить("СуммаОплаты", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	СчетаФактуры.Колонки.Добавить("ВидАгентскогоДоговора", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАгентскихДоговоров"));
	СчетаФактуры.Колонки.Добавить("ОплатаЧерезЕдиныйЛицевойСчет", Новый ОписаниеТипов("Булево"));
	// Для ТЧ Прочие расходы документа Авансовый отчет
	СчетаФактуры.Колонки.Добавить("НомерДокументаПеречисленияНалога", Новый ОписаниеТипов("Строка"));
	СчетаФактуры.Колонки.Добавить("ДатаДокументаПеречисленияНалога", Новый ОписаниеТипов("Дата"));
	
	Возврат СчетаФактуры;
	
КонецФункции

// Регистрирует документы начисления НДС к оплате.
// При этом формируются записи регистра ПодтверждениеОплатыНДСВБюджет с состоянием ОжидаетОплаты.
// Параметры:
// 	СчетаФактуры - ТаблицаЗначений - Таблица сумм НДС к оплате по счетам-фактурам.	
// 	Колонки таблицы:
//			* СчетФактура - ДокументСсылка - Документ, требующий оплаты НДС.
//			* СуммаОплаты - Число - Сумма НДС к оплате.
//			* ВидАгентскогоДоговора - ПеречислениеСсылка.ВидыАгентскихДоговоров - для счетов-фактур налогового агента. 
// 	ДокументРегистратор - ДокументСсылка - Документ-регистратор операции.
// 	Проведен - Булево - Признак проведения документа-регистратора.
Процедура ЗарегистрироватьСчетаФактурыОжидаетОплатыНДС(СчетаФактуры, ДокументРегистратор, Проведен) Экспорт

	РегистрыСведений.ПодтверждениеОплатыНДСВБюджет.ЗарегистрироватьСчетаФактурыОжидаетОплатыНДС(СчетаФактуры, ДокументРегистратор, Проведен);

КонецПроцедуры

// Регистрирует запланированную оплату НДС по документам.
// При этом в записи регистра ПодтверждениеОплатыНДСВБюджет с состоянием ОжидаетОплаты добавляется ссылка на заявку.
// Параметры:
// 	СчетаФактуры - ТаблицаЗначений - Таблица сумм НДС к оплате по счетам-фактурам.	
// 	Колонки таблицы:
//			* СчетФактура - ДокументСсылка - Документ, требующий оплаты НДС.
//			* СуммаОплаты - Число - Сумма НДС к оплате
// 	ТипНалога - СправочникСсылка.ВидыНалоговВзносов - тип уплачиваемого налога (налоговый агент, ввоз из ЕАЭС и т.п.)
// 	ДокументРегистратор - ДокументСсылка - Документ-регистратор операции.
// 	Проведен - Булево - Признак проведения документа-регистратора.
Процедура ЗарегистрироватьПланированиеОплатыНДСПоСчетамФактурам(СчетаФактуры, ТипНалога, ДокументРегистратор, Проведен) Экспорт

	РегистрыСведений.ПодтверждениеОплатыНДСВБюджет.ЗарегистрироватьПланированиеОплатыНДСПоСчетамФактурам(СчетаФактуры, ТипНалога, ДокументРегистратор, Проведен);

КонецПроцедуры

// Регистрирует фактическую оплату НДС по документам.
// При этом формируются записи регистра ПодтверждениеОплатыНДСВБюджет с состояние Оплачено.
// Параметры:
// 	СчетаФактуры - ТаблицаЗначений - Таблица сумм НДС к оплате по счетам-фактурам.	
// 	Колонки таблицы:
//			* СчетФактура - ДокументСсылка - Документ, требующий оплаты НДС.
//			* СуммаОплаты - Число - Сумма НДС к оплате
// 	ДокументРегистратор - ДокументСсылка - Документ-регистратор операции.
// 	РеквизитыДокументаОплаты - Структура - Структура реквизитов документа оплаты 
// 	Состав полей:
// 			* ДатаПеречисленияВБюджет - Дата - дата фактического перечисления НДС в бюджет.
// 			* ТипНалога - СправочникСсылка.ВидыНалоговВзносов - тип уплачиваемого налога (налоговый агент, ввоз из ЕАЭС и т.п.)
//			* НомерДокумента - Строка - номер документа перечисления налога.
//			* ДатаДокумента - Дата - дата документа перечисления налога.
// 	Проведен - Булево - Признак проведения документа-регистратора.
Процедура ЗарегистрироватьОплатуНДСПоСчетамФактурам(СчетаФактуры, ДокументРегистратор, РеквизитыДокументаОплаты, Проведен) Экспорт

	РегистрыСведений.ПодтверждениеОплатыНДСВБюджет.ЗарегистрироватьОплатуНДСПоСчетамФактурам(СчетаФактуры,
																							ДокументРегистратор,
																							РеквизитыДокументаОплаты,
																							Проведен);

КонецПроцедуры

// см. УчетНДСУП.ПолучитьЗаголовокСостоянияОплатыНДСПоСчетуФактуре
Процедура ПолучитьЗаголовокСостоянияОплатыНДСПоСчетуФактуре(Заголовок, СчетФактура) Экспорт
	
	Заголовок = РегистрыСведений.ПодтверждениеОплатыНДСВБюджет.ТекстСостояниеОплатыНДСВБюджет(СчетФактура);

КонецПроцедуры

#КонецОбласти

// см. УчетНДСЛокализация.ВидЦенностиВводОстатков
Функция ВидЦенностиВводОстатков(СчетФактура) Экспорт
		
	УстановитьПривилегированныйРежим(Истина);
	Возврат РегистрыСведений.ПодтверждениеОплатыНДСВБюджет.ВидЦенностиВводОстатков(СчетФактура);
	
КонецФункции


#КонецОбласти

#Область СформироватьЗаданияПоДокументам

Процедура СформироватьЗаданияПоДокументамЗаявлениеОВвозеТоваров(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, МЕСЯЦ) КАК Месяц,
	|	Операция.Организация КАК Организация,
	|	Операция.Ссылка КАК СчетФактура
	|ИЗ
	|	РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОВвозеТоваров КАК Операция
	|		ПО ПодтверждениеОплатыНДСВБюджет.СчетФактура = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка В(&Ссылка)
	|	И ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты <> ДАТАВРЕМЯ(1,1,1)
	|	И ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.ПолученоПодтверждение)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивСсылок);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

Процедура СформироватьЗаданияПоДокументамСчетФактураВыданный(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Операция.Дата, МЕСЯЦ) КАК Месяц,
	|	Операция.Контрагент КАК Организация,
	|	ТаблицаДокументыОснования.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаДокументыОснования
	|		ПО Операция.Ссылка = ТаблицаДокументыОснования.Ссылка
	|ГДЕ
	|	Операция.Контрагент ССЫЛКА Справочник.Организации
	|	И Операция.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Операция.ДатаВыставления, МЕСЯЦ) КАК Месяц,
	|	Операция.Контрагент КАК Организация,
	|	ТаблицаДокументыОснования.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаДокументыОснования
	|		ПО Операция.Ссылка = ТаблицаДокументыОснования.Ссылка
	|ГДЕ
	|	Операция.Контрагент ССЫЛКА Справочник.Организации
	|	И Операция.Ссылка В(&Ссылка)
	|	И Операция.ДатаВыставления <> ДАТАВРЕМЯ(1,1,1)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, МЕСЯЦ) КАК Месяц,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|ГДЕ
	|	НДСПредъявленный.Регистратор В (&Ссылка)
	|	И НДСПредъявленный.РегламентнаяОперация
	|";
	
	Запрос.УстановитьПараметр("Ссылка", МассивСсылок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

Процедура СформироватьЗаданияПоДокументамСчетФактураПолученный(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ДокументыОснования.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
	|	ДокументыОснования.Ссылка.Организация КАК Организация,
	|	ДокументыОснования.ДокументОснование КАК СчетФактура
	|ПОМЕСТИТЬ ВТ_ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ДокументыОснования.Ссылка.ДатаЗаписиКнигиПокупок, МЕСЯЦ) КАК Месяц,
	|	ДокументыОснования.Ссылка.Организация КАК Организация,
	|	ДокументыОснования.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|		КОГДА СчетаФактуры.ДатаПереходаПраваСобственности > СчетаФактуры.Дата
	|			ТОГДА СчетаФактуры.ДатаПереходаПраваСобственности
	|		ИНАЧЕ СчетаФактуры.Дата
	|	КОНЕЦ, МЕСЯЦ) КАК Месяц,
	|	СчетаФактуры.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА СчетаФактуры.Исправление
	|			ТОГДА СчетаФактуры.СчетФактураОснование
	|		ИНАЧЕ СчетаФактуры.Ссылка
	|	КОНЕЦ
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетаФактуры
	|ГДЕ
	|	СчетаФактуры.Ссылка В(&Ссылка)
	|	И СчетаФактуры.ДатаПереходаПраваСобственности <> ДАТАВРЕМЯ(1,1,1)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|		КОГДА СчетаФактуры.ДатаПереходаПраваСобственности > СчетаФактуры.ДатаЗаписиКнигиПокупок
	|			ТОГДА СчетаФактуры.ДатаПереходаПраваСобственности
	|		ИНАЧЕ СчетаФактуры.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ, МЕСЯЦ) КАК Месяц,
	|	СчетаФактуры.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА СчетаФактуры.Исправление
	|			ТОГДА СчетаФактуры.СчетФактураОснование
	|		ИНАЧЕ СчетаФактуры.Ссылка
	|	КОНЕЦ
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетаФактуры
	|ГДЕ
	|	СчетаФактуры.Ссылка В(&Ссылка)
	|	И СчетаФактуры.ДатаПереходаПраваСобственности <> ДАТАВРЕМЯ(1,1,1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДокументыОснования.Месяц КАК Месяц,
	|	ВТ_ДокументыОснования.Организация КАК Организация,
	|	ВТ_ДокументыОснования.СчетФактура КАК СчетФактура
	|ИЗ
	|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДокументыОснования.Месяц,
	|	ВТ_ДокументыОснования.Организация,
	|	КорректировкаПриобретения.ДокументОснование
	|ИЗ
	|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|		ПО ВТ_ДокументыОснования.СчетФактура = КорректировкаПриобретения.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДокументыОснования.Месяц,
	|	ВТ_ДокументыОснования.Организация,
	|	ДругиеКорректировкиОснования.Ссылка
	|ИЗ
	|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретенияОснование
	|		ПО ВТ_ДокументыОснования.СчетФактура = КорректировкаПриобретенияОснование.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК ДругиеКорректировкиОснования
	|		ПО (КорректировкаПриобретенияОснование.ДокументОснование = ДругиеКорректировкиОснования.ДокументОснование)
	|			И (ДругиеКорректировкиОснования.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, МЕСЯЦ) КАК Месяц,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|ГДЕ
	|	НДСПредъявленный.Регистратор В (&Ссылка)
	|	И НДСПредъявленный.РегламентнаяОперация
	|";
	
	Запрос.УстановитьПараметр("Ссылка", МассивСсылок);
	Выборка = Запрос.Выполнить().Выбрать();
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

Процедура СформироватьЗаданияПоДокументамСчетФактураНалоговыйАгент(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(СчетаФактуры.Дата, МЕСЯЦ) КАК Месяц,
	|	СчетаФактуры.Организация КАК Организация,
	|	СчетаФактуры.Ссылка КАК СчетФактура
	|ПОМЕСТИТЬ ВТ_ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетаФактуры
	|ГДЕ
	|	СчетаФактуры.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДокументыОснования.Месяц КАК Месяц,
	|	ВТ_ДокументыОснования.Организация КАК Организация,
	|	ВТ_ДокументыОснования.СчетФактура КАК СчетФактура
	|ИЗ
	|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, МЕСЯЦ) КАК Месяц,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|ГДЕ
	|	НДСПредъявленный.Регистратор В (&Ссылка)
	|	И НДСПредъявленный.РегламентнаяОперация
	|";
	
	Запрос.УстановитьПараметр("Ссылка", МассивСсылок);
	Выборка = Запрос.Выполнить().Выбрать();
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

Процедура СформироватьЗаданияПоИнымДокументамПодтвержденияНДС(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ИнойДокументПодтвержденияНДС.Дата, МЕСЯЦ) КАК Месяц,
	|	ИнойДокументПодтвержденияНДС.Организация КАК Организация,
	|	ИнойДокументПодтвержденияНДС.ДокументОснование КАК СчетФактура
	|ПОМЕСТИТЬ ВТ_ДокументыОснования
	|ИЗ
	|	Документ.ИнойДокументПодтвержденияНДС КАК ИнойДокументПодтвержденияНДС
	|ГДЕ
	|	ИнойДокументПодтвержденияНДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДокументыОснования.Месяц КАК Месяц,
	|	ВТ_ДокументыОснования.Организация КАК Организация,
	|	ВТ_ДокументыОснования.СчетФактура КАК СчетФактура
	|ИЗ
	|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, МЕСЯЦ) КАК Месяц,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|ГДЕ
	|	НДСПредъявленный.Регистратор В (&Ссылка)
	|	И НДСПредъявленный.РегламентнаяОперация
	|";
	
	Запрос.УстановитьПараметр("Ссылка", МассивСсылок);
	Выборка = Запрос.Выполнить().Выбрать();
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

#КонецОбласти

#Область РегламентнаяОперацияПоНДС

// См. УчетНДСУПСлужебный.ВыполнитьРасчет
Процедура ВыполнитьРасчет(ПараметрыРасчета) Экспорт
	
	// Расчет налоговых регистров
	СформироватьНДСЗаписиКнигиПокупок(ПараметрыРасчета);
	СформироватьНДСЗаписиКнигиПродаж(ПараметрыРасчета);

КонецПроцедуры

// См. УчетНДСУПСлужебный.ЗафиксироватьРезультат
Процедура ЗафиксироватьРезультат(ПараметрыРасчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Месяц                                 КАК Месяц,
	|	Задания.НомерЗадания                          КАК НомерЗадания,
	|	Задания.Организация                           КАК Организация,
	|	Задания.СчетФактура                           КАК СчетФактура
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения, МЕСЯЦ) КАК Месяц,
	|		&НомерЗадания                                КАК НомерЗадания,
	|		Партии.Организация                           КАК Организация,
	|		Партии.СчетФактура                           КАК СчетФактура
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО Партии.Организация = НДССостояниеРеализации0.Организация
	|			И Партии.ДокументРеализации = НДССостояниеРеализации0.ДокументРеализации
	|			И НДССостояниеРеализации0.Состояние В (
	|				ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0),
	|				ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0),
	|				ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтверждениеНеТребуется))
	|			И НДССостояниеРеализации0.ДатаПодтверждения > &КонецПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, МЕСЯЦ) КАК Месяц,
	|		&НомерЗадания                                 КАК НомерЗадания,
	|		Задания.Организация                           КАК Организация,
	|		Задания.СчетФактура                           КАК СчетФактура
	|	ИЗ
	|		Задания КАК Задания
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК Строки
	|		ПО Задания.СчетФактура = Строки.ДокументОснование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК Операция
	|		ПО Задания.Организация = Операция.Организация
	|			И Строки.Ссылка = Операция.Ссылка
	|			И Операция.ДатаЗаписиКнигиПокупок > &КонецПериода
	|	ГДЕ
	|		Операция.Проведен
	|		И НЕ Операция.Исправление
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, МЕСЯЦ) КАК Месяц,
	|		&НомерЗадания                                 КАК НомерЗадания,
	|		Задания.Организация                           КАК Организация,
	|		Задания.СчетФактура                           КАК СчетФактура
	|	ИЗ
	|		Задания КАК Задания
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК Строки
	|		ПО Задания.СчетФактура = Строки.ДокументОснование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент КАК Операция
	|		ПО Задания.Организация = Операция.Организация
	|			И Строки.Ссылка = Операция.Ссылка
	|			И Операция.ДатаЗаписиКнигиПокупок > &КонецПериода
	|	ГДЕ
	|		Операция.Проведен
	|		И НЕ Операция.Исправление
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, МЕСЯЦ) КАК Месяц,
	|		&НомерЗадания                                 КАК НомерЗадания,
	|		Задания.Организация                           КАК Организация,
	|		Задания.СчетФактура                           КАК СчетФактура
	|	ИЗ
	|		Задания КАК Задания
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
	|		ПО Задания.СчетФактура = ПодтверждениеОплатыНДСВБюджет.СчетФактура
	|			И ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.ПолученоПодтверждение)
	|			И ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты > &КонецПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(БлокировкаВычетаНДС.Дата, МЕСЯЦ) КАК Месяц,
	|		&НомерЗадания                                 КАК НомерЗадания,
	|		Задания.Организация                           КАК Организация,
	|		Задания.СчетФактура                           КАК СчетФактура
	|	ИЗ
	|		Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БлокировкаВычетаНДС.СчетаФактуры КАК БлокировкаВычетаНДССчетаФактуры
	|		ПО Задания.СчетФактура = БлокировкаВычетаНДССчетаФактуры.СчетФактура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БлокировкаВычетаНДС КАК БлокировкаВычетаНДС
	|		ПО Задания.Организация = БлокировкаВычетаНДС.Организация
	|			И БлокировкаВычетаНДССчетаФактуры.Ссылка = БлокировкаВычетаНДС.Ссылка
	|			И БлокировкаВычетаНДС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировкиВычетаНДС.Снята)
	|			И БлокировкаВычетаНДС.Дата > &КонецПериода
	|			И НЕ БлокировкаВычетаНДС.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(БлокировкаВычетаНДССчетаФактуры.СрокБлокировки, МЕСЯЦ) КАК Месяц,
	|		&НомерЗадания                                 КАК НомерЗадания,
	|		Задания.Организация                           КАК Организация,
	|		Задания.СчетФактура                           КАК СчетФактура
	|	ИЗ
	|		Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БлокировкаВычетаНДС.СчетаФактуры КАК БлокировкаВычетаНДССчетаФактуры
	|		ПО Задания.СчетФактура = БлокировкаВычетаНДССчетаФактуры.СчетФактура
	|			И БлокировкаВычетаНДССчетаФактуры.СрокБлокировки > &КонецПериода
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БлокировкаВычетаНДС КАК БлокировкаВычетаНДС
	|		ПО Задания.Организация = БлокировкаВычетаНДС.Организация
	|			И БлокировкаВычетаНДССчетаФактуры.Ссылка = БлокировкаВычетаНДС.Ссылка
	|			И БлокировкаВычетаНДС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировкиВычетаНДС.Установлена)
	|			И НЕ БлокировкаВычетаНДС.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(ДанныеПервичныхДокументов.ДатаРегистратора, МЕСЯЦ) КАК Месяц,
	|		&НомерЗадания                            КАК НомерЗадания,
	|		ПриобретенияЭлектронныхУслуг.Организация КАК Организация,
	|		ПриобретенияЭлектронныхУслуг.СчетФактура КАК СчетФактура
	|	ИЗ
	|		РасчетыСПоставщиками_ОснованияИДокументыОплаты КАК Оплаты
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриобретенияЭлектронныхУслуг КАК ПриобретенияЭлектронныхУслуг
	|		ПО
	|			Оплаты.АналитикаУчетаПоПартнерам = ПриобретенияЭлектронныхУслуг.АналитикаУчетаПоПартнерам
	|			И Оплаты.ОснованиеОплаты = ПриобретенияЭлектронныхУслуг.СчетФактура
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО
	|			Оплаты.АналитикаУчетаПоПартнерам.Организация = ДанныеПервичныхДокументов.Организация
	|			И Оплаты.ДокументОплаты = ДанныеПервичныхДокументов.Документ
	|	
	|	ГДЕ
	|		ПриобретенияЭлектронныхУслуг.СчетФактура <> Оплаты.ДокументОплаты
	|		И ДанныеПервичныхДокументов.ДатаРегистратора > &КонецПериода) КАК Задания";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("НомерЗадания",      ПараметрыРасчета.НомерЗадания);
	Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;

	ПараметрыПоиска = ВзаиморасчетыСервер.ИнициализироватьПараметрыПоискаОснованийИДокументовОплаты();
	ПараметрыПоиска.ПараметрыОтбораПоТаблицеДокументов.ИмяПоля          = "СчетФактура";
	ПараметрыПоиска.ПараметрыОтбораПоТаблицеДокументов.ИмяТаблицыОтбора = "ПриобретенияЭлектронныхУслуг";
	ПараметрыПоиска.Организации                                         = ПараметрыРасчета.МассивОрганизаций;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСПоставщиками_ОснованияИДокументыОплаты(
		ПараметрыРасчета.МенеджерВременныхТаблиц,
		ПараметрыПоиска);
	
	ВыборкаДляЗаписи = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДляЗаписи.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДляЗаписи);
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
КонецПроцедуры

#Область ПолучениеДанныхДляРасчета

// См. УчетНДСУПСлужебный.ПолучитьПартии
Процедура ПолучитьПартии(ПараметрыРасчета) Экспорт
	
	СтруктураПолей  = Новый Структура;
	СтруктураПолей.Вставить("Организация", "Организация");
	СтруктураПолей.Вставить("СчетФактура", "ДокументПоступления");
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Задания", СтруктураПолей);
	
	СтруктураДанных = РасчетСебестоимостиНДС.ИнициализироватьСтруктуруДанныхДетализацииПартийНДСДляУчетаНДС();
	
	РасчетСебестоимостиНДС.СформироватьДетализациюПартийНДС(
		ПараметрыРасчета.МенеджерВременныхТаблиц,
		ПараметрыРасчета.МассивОрганизаций,
		ПараметрыРасчета.НачалоПериода,
		ПараметрыРасчета.КонецПериода,
		,
		СтруктураОтбора,
		СтруктураДанных);
		
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Партии.Период КАК Период,
	|	Партии.Регистратор КАК Регистратор,
	|	Партии.Организация КАК Организация,
	|	Партии.АналитикаУчетаПартий.Контрагент КАК Контрагент,
	|	Партии.ДокументПоступления КАК СчетФактура,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления,
	|	ВЫБОР 
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.СчетФактураПолученныйНалоговыйАгент
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.СчетФактураНалоговыйАгент ТОГДА
	|			ВЫБОР 
	|				КОГДА ВЫРАЗИТЬ(Партии.ДокументПоступления КАК Документ.СчетФактураНалоговыйАгент).ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|				КОГДА ВЫРАЗИТЬ(Партии.ДокументПоступления КАК Документ.СчетФактураНалоговыйАгент).ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|				КОГДА ВЫРАЗИТЬ(Партии.ДокументПоступления КАК Документ.СчетФактураНалоговыйАгент).ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|				КОГДА ВЫРАЗИТЬ(Партии.ДокументПоступления КАК Документ.СчетФактураНалоговыйАгент).ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|			КОНЕЦ
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ЗаявлениеОВвозеТоваров 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|		ИНАЧЕ Партии.ВидЦенности 
	|	КОНЕЦ КАК ВидЦенности,
	|	Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|			И  ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаДействия150ФЗ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			И ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаВозможностиВычетаПриОказанииУслугНеВРФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Партии.НалогообложениеПартии
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|			И  ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаДействия150ФЗ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			И ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаВозможностиВычетаПриОказанииУслугНеВРФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Партии.НалогообложениеНДС
	|	КОНЕЦ КАК КорВидДеятельностиНДС,
	|	
	|	Партии.СтатьяСписанияНДС КАК СтатьяСписанияНДС,
	|	ВЫБОР 
	|		КОГДА Партии.СтатьяСписанияНДС <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 
	|			ТОГДА Партии.АналитикаСписанияНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаСписанияНДС,
	|	ВЫБОР 
	|		КОГДА Партии.СтатьяСписанияНДС <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 
	|			ТОГДА Партии.НаправлениеДеятельности
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК НаправлениеДеятельностиСписанияНДС,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Партии.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Партии.КорНаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА Партии.СтатьяСписанияНДС <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 
	|			ТОГДА Партии.ПодразделениеСписанияНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеСписанияНДС,
	|	
	|	Партии.ДокументРеализации КАК ДокументРеализации,
	|	Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	Партии.Сторно КАК Сторно,
	|	
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Партии.ДокументПоступления) В 
	|			(ТИП(Документ.ЗаявлениеОВвозеТоваров),
	|			 ТИП(Документ.СчетФактураПолученныйНалоговыйАгент),
	|			 ТИП(Документ.СчетФактураНалоговыйАгент)) ТОГДА 
	|			0
	|		ИНАЧЕ
	|			Партии.СтоимостьРегл 
	|	КОНЕЦ КАК СуммаБезНДС,
	|	Партии.НДСРегл КАК НДС,
	|	Партии.НДСУпр КАК НДСУпр
	|
	|ПОМЕСТИТЬ ПартииПредварительная
	|ИЗ (
	|	ВЫБРАТЬ
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьРегл,
	|		Партии.НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаПартий,
	|		ВЫБОР 
	|			КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|				ЕСТЬNULL(Партии.ВидЗапасов.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|			ИНАЧЕ ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС ,ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) 
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.Подразделение
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ПодразделениеСписанияНДС,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ТипыДокументовЭкспорта)
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации,
	|		ЛОЖЬ КАК Сторно
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПартий КАК АналитикаПартий
	|		ПО 
	|			АналитикаПартий.Ссылка = Партии.АналитикаУчетаПартий
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО 
	|			АналитикаНоменклатуры.Ссылка = Партии.АналитикаУчетаНоменклатуры
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0.
	|		И Партии.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.Период КАК Период,
	|		Партии.Регистратор КАК Регистратор,
	|		Партии.Организация КАК Организация,
	|		Партии.СтоимостьРегл КАК СтоимостьРегл,
	|		Партии.НДСРегл КАК НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступления КАК ДокументПоступления,
	|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		ВЫБОР КОГДА Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА 
	|				ВЫБОР 
	|					КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|						ЕСТЬNULL(Партии.ВидЗапасов.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|					ИНАЧЕ ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) 
	|				КОНЕЦ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС КАК НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.Подразделение
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ТипыДокументовЭкспорта)
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации,
	|		ЛОЖЬ КАК Сторно
	|	ИЗ
	|		РегистрНакопления.ПартииЗатратНаВыпуск КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПартий КАК АналитикаПартий
	|		ПО 
	|			АналитикаПартий.Ссылка = Партии.АналитикаУчетаПартий
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО 
	|			АналитикаНоменклатуры.Ссылка = Партии.АналитикаУчетаНоменклатуры
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.Период КАК Период,
	|		Партии.Регистратор КАК Регистратор,
	|		Партии.Организация КАК Организация,
	|		(ВЫБОР
	|			КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт ТОГДА
	|				(ВЫБОР КОГДА Партии.АналитикаУчетаПартий.СтавкаНДС.Ставка > 0 
	|					ТОГДА Партии.НДСРегл * 100 / Партии.АналитикаУчетаПартий.СтавкаНДС.Ставка	
	|					ИНАЧЕ 0 КОНЕЦ)
	|			ИНАЧЕ Партии.СтоимостьРегл КОНЕЦ) КАК СтоимостьРегл,
	|		Партии.НДСРегл КАК НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступленияРасходов КАК ДокументПоступления,
	|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		ВЫБОР 
	|			КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL 
	|				ТОГДА СтатьиРасходов.ВидЦенностиНДС
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|				ТОГДА 
	|					ВЫБОР 
	|						КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|							ЕСТЬNULL(Партии.ВидЗапасов.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|						ИНАЧЕ ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) 
	|					КОНЕЦ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС КАК НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.Подразделение
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ТипыДокументовЭкспорта)
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации,
	|		ЛОЖЬ КАК Сторно
	|	ИЗ
	|		РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПартий КАК АналитикаПартий
	|		ПО 
	|			АналитикаПартий.Ссылка = Партии.АналитикаУчетаПартий
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО 
	|			АналитикаНоменклатуры.Ссылка = Партии.АналитикаУчетаНоменклатуры
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО 
	|			Партии.СтатьяРасходов = СтатьиРасходов.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступленияРасходов
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.Период КАК Период,
	|		Партии.Регистратор КАК Регистратор,
	|		Партии.Организация КАК Организация,
	|		Партии.СтоимостьРегл КАК СтоимостьРегл,
	|		Партии.НДСРегл КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		Партии.ДокументПоступленияРасходов КАК ДокументПоступления,
	|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаПартий.ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|				ТОГДА Партии.АналитикаУчетаПартий.ВидЦенности        // Версия ПартионногоУчета 2.2
	|			ИНАЧЕ ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги))
	|		КОНЕЦ КАК ВидЦенности,
	|		ВЫБОР
	|			КОГДА СтатьиРасходов.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			КОГДА Партии.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|				ТОГДА Партии.ВидДеятельностиНДС // Версия ПартионногоУчета 2.2
	|			ИНАЧЕ Партии.АналитикаУчетаПартий.НалогообложениеНДС     // Версия ПартионногоУчета 2.1             
	|		КОНЕЦ                     КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС КАК НалогообложениеНДС,
	|		Партии.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		Партии.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО КАК ПодразделениеСписанияНДС,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяСписанияНДС,
	|		НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС,
	|		Партии.ДокументРеализации КАК ДокументРеализации,
	|		Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно КАК Сторно
	|	ИЗ
	|		РегистрНакопления.ПартииПрочихРасходов КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступленияРасходов
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО 
	|			Партии.СтатьяРасходов = СтатьиРасходов.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО
	|			Партии.АналитикаУчетаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|		
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И (НЕ Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|			ИЛИ СтатьиРасходов.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента))
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	// Для исключения движений свертки развернутого сальдо
	|		И НЕ (Партии.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|				И Партии.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Расчетное))
	|		И НЕ Партии.Сторно
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьРегл,
	|		Партии.НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаПартий,
	|		ВЫБОР КОГДА Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) 
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.Подразделение
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ТипыДокументовЭкспорта)
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации,
	|		ЛОЖЬ КАК Сторно
	|	ИЗ
	|		РегистрНакопления.ПартииПроизводственныхЗатрат КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьРегл,
	|		Партии.НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаПартий,
	|		ВЫБОР КОГДА Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА 
	|				ВЫБОР 
	|					КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|						ЕСТЬNULL(Партии.ВидЗапасов.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|					ИНАЧЕ ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) 
	|				КОНЕЦ 
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО КАК ПодразделениеСписанияНДС,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяСписанияНДС,
	|		НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (
	|					ТИП(Документ.ОтчетКомиссионера), 
	|					ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями))
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации,
	|		ЛОЖЬ КАК Сторно
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Партии.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьБезНДС КАК СтоимостьРегл,
	|		Партии.НДС КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		ВЫБОР КОГДА НЕ Корректировка.ДокументОснование ЕСТЬ NULL
	|			И (ВЫБОР КОГДА Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат 
	|				ТОГДА Партии.КорВидДеятельностиНДС
	|				ИНАЧЕ Партии.ВидДеятельностиНДС КОНЕЦ В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|														 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|					ИЛИ Партии.НДС < 0)
	|			ТОГДА Корректировка.ДокументОснование
	|			ИНАЧЕ Партии.ДокументПоступления
	|		КОНЕЦ КАК ДокументПоступления,
	|		Партии.АналитикаУчетаПартий,
	|		ЕСТЬNULL(Партии.АналитикаУчетаПартий.ВидЦенности, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|		ВЫБОР КОГДА Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|			ТОГДА Партии.КорВидДеятельностиНДС
	|			ИНАЧЕ Партии.ВидДеятельностиНДС
	|		КОНЕЦ КАК НалогообложениеПартии,
	|		ВЫБОР КОГДА Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|			ТОГДА Партии.ВидДеятельностиНДС
	|			ИНАЧЕ Партии.КорВидДеятельностиНДС
	|		КОНЕЦ КАК НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ЕСТЬNULL(ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|			ИНАЧЕ Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		КОНЕЦ, Партии.КорНаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|		Партии.Подразделение,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ТипыДокументовЭкспорта)
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ВЫБОР
	|			КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка)
	|		КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно КАК Сторно
	|	ИЗ
	|		РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Документ.КорректировкаПриобретения КАК Корректировка
	|		ПО
	|			Корректировка.Ссылка = Партии.ДокументПоступления
	|			И Корректировка.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И (Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИЛИ Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|				И Партии.СтатьяРасходовАктивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента))
	|		И Партии.НДС <> 0
	|		И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Партии.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|		И НЕ Партии.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионераПрошлыхПериодов))
	|		И НЕ Партии.Сторно
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьБезНДС КАК СтоимостьРегл,
	|		Партии.НДС КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаДокументаПоступления,
	|		ЕСТЬNULL(Партии.АналитикаУчетаДокументаПоступления.ВидЦенности, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|		ВЫБОР КОГДА Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|			ТОГДА Партии.КорВидДеятельностиНДС
	|			ИНАЧЕ Партии.ВидДеятельностиНДС
	|		КОНЕЦ КАК НалогообложениеПартии,
	|		ВЫБОР КОГДА Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|			ТОГДА Партии.ВидДеятельностиНДС
	|			ИНАЧЕ Партии.КорВидДеятельностиНДС
	|		КОНЕЦ КАК НалогообложениеНДС,
	|		Партии.НаправлениеДеятельности,
	|		ЕСТЬNULL(Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,Партии.КорНаправлениеДеятельности),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ТипыДокументовЭкспорта)
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно КАК Сторно
	|	ИЗ
	|		РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4 КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И (Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИЛИ Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|				И Партии.СтатьяРасходовАктивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента))
	|		И Партии.НДС <> 0
	|		И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И НЕ Партии.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионераПрошлыхПериодов))
	|		И НЕ Партии.Сторно
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьБезНДС КАК СтоимостьРегл,
	|		Партии.НДС КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаДокументаПоступления,
	|		ЕСТЬNULL(Партии.АналитикаУчетаДокументаПоступления.ВидЦенности, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|		Партии.ВидДеятельностиНДС КАК НалогообложениеПартии,
	|		Партии.КорВидДеятельностиНДС КАК НалогообложениеНДС,
	|		Партии.НаправлениеДеятельности,
	|		ЕСТЬNULL(Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,Партии.КорНаправлениеДеятельности),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ТипыДокументовЭкспорта)
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно КАК Сторно
	|	ИЗ
	|		РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4 КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДС <> 0
	|		И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|		И Партии.Регистратор <> Партии.Партия
	|		И НЕ Партии.Сторно
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВЫБОР КОГДА Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|			ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.РаспределениеПрочихЗатрат).Дата
	|			ИНАЧЕ Партии.Период
	|		КОНЕЦ КАК Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьБезНДС КАК СтоимостьРегл,
	|		Партии.НДС КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаПартийДокументаПоступления,
	|		ЕСТЬNULL(Партии.АналитикаУчетаПартийДокументаПоступления.ВидЦенности, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|		Партии.ВидДеятельностиНДС КАК НалогообложениеПартии,
	|		Партии.КорВидДеятельностиНДС КАК НалогообложениеНДС,
	|		Партии.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		Партии.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ТипыДокументовЭкспорта)
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно КАК Сторно
	|	ИЗ
	|		ВТСтоимостьПартийНДС КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		(Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИЛИ Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|				И Партии.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента))
	|		И Партии.НДС <> 0
	|		И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Партии.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|		И НЕ Партии.Сторно
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьБезНДС КАК СтоимостьРегл,
	|		Партии.НДС КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаПартийДокументаПоступления,
	|		ЕСТЬNULL(Партии.АналитикаУчетаПартийДокументаПоступления.ВидЦенности, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|		Партии.ВидДеятельностиНДС КАК НалогообложениеПартии,
	|		Партии.КорВидДеятельностиНДС КАК НалогообложениеНДС,
	|		Партии.НаправлениеДеятельности,
	|		Партии.КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ТипыДокументовЭкспорта)
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации,
	|		&ИдентификаторНеиспользуемойФинЗаписи КАК ИдентификаторФинЗаписи,
	|		Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|		Партии.Сторно КАК Сторно
	|	ИЗ
	|		ВТСтоимостьПартийНДС КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДС <> 0
	|		И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|		И Партии.Регистратор <> Партии.Партия
	|		И НЕ Партии.Сторно
	|	) КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация.ГоловнаяОрганизация = Партии.Организация.ГоловнаяОрганизация
	|		И ДанныеПервичныхДокументов.Документ = Партии.ДокументПоступления
	|	
	|ГДЕ
	|	Партии.НалогообложениеПартии <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ИЛИ Партии.ДокументПоступления ССЫЛКА Документ.СчетФактураНалоговыйАгент
	|		ИЛИ Партии.ДокументПоступления ССЫЛКА Документ.СчетФактураПолученныйНалоговыйАгент
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Партии.Период КАК Период,
	|	Партии.Регистратор КАК Регистратор,
	|	Партии.Организация КАК Организация,
	|	Партии.Поставщик КАК Контрагент,
	|	Партии.ДокументПоступленияРасходов КАК СчетФактура,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления,
	|	Партии.ВидЦенности КАК ВидЦенности,
	|	Партии.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|			И  ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаДействия150ФЗ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			И ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаВозможностиВычетаПриОказанииУслугНеВРФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Партии.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|			И  ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаДействия150ФЗ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			И ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаВозможностиВычетаПриОказанииУслугНеВРФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Партии.КорВидДеятельностиНДС
	|	КОНЕЦ КАК КорВидДеятельностиНДС,
	|	Партии.СтатьяОтраженияРасходов КАК СтатьяСписанияНДС,
	|	Партии.АналитикаОтраженияРасходов КАК АналитикаСписанияНДС,
	|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиСписанияНДС,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Партии.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Партии.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|	Партии.Подразделение КАК ПодразделениеСписанияНДС,
	|	Партии.ДокументРеализации КАК ДокументРеализации,
	|	Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	Партии.Сторно КАК Сторно,
	|	Партии.СтоимостьРегл КАК СуммаБезНДС,
	|	Партии.НДСРегл КАК НДС,
	|	Партии.НДСУпр КАК НДСУпр
	|ИЗ
	|	РегистрНакопления.ПартииНДСКРаспределению КАК Партии
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация = Партии.Организация
	|		И Задания.СчетФактура = Партии.ДокументПоступленияРасходов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация.ГоловнаяОрганизация = Партии.Организация.ГоловнаяОрганизация
	|		И ДанныеПервичныхДокументов.Документ = Партии.ДокументПоступленияРасходов
	|		
	|ГДЕ
	|	Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Партии.Активность
	|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Партии.НДСРегл <> 0
	|	И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И НЕ Партии.Сторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партии.Период КАК Период,
	|	Партии.Регистратор КАК Регистратор,
	|	Партии.Организация КАК Организация,
	|	Партии.Контрагент КАК Контрагент,
	|	Партии.СчетФактура КАК СчетФактура,
	|	Партии.ДатаПоступления КАК ДатаПоступления,
	|	Партии.ВидЦенности КАК ВидЦенности,
	|	Партии.СтавкаНДС КАК СтавкаНДС,
	|	Партии.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Партии.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	Партии.СтатьяСписанияНДС КАК СтатьяСписанияНДС,
	|	Партии.АналитикаСписанияНДС КАК АналитикаСписанияНДС,
	|	Партии.НаправлениеДеятельностиСписанияНДС КАК НаправлениеДеятельностиСписанияНДС,
	|	ЕСТЬNULL(Партии.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(Партии.КорНаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
	|	Партии.ПодразделениеСписанияНДС КАК ПодразделениеСписанияНДС,
	|	Партии.ДокументРеализации КАК ДокументРеализации,
	|	Партии.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Партии.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	Партии.Сторно КАК Сторно,
	|	СУММА(Партии.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(Партии.НДС) КАК НДС,
	|	СУММА(Партии.НДСУпр) КАК НДСУпр
	|ПОМЕСТИТЬ Партии
	|ИЗ
	|	ПартииПредварительная КАК Партии
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Период,
	|	Партии.Регистратор,
	|	Партии.Организация,
	|	Партии.Контрагент,
	|	Партии.СчетФактура,
	|	Партии.ДатаПоступления,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.ВидДеятельностиНДС,
	|	Партии.КорВидДеятельностиНДС,
	|	Партии.СтатьяСписанияНДС,
	|	Партии.АналитикаСписанияНДС,
	|	Партии.НаправлениеДеятельностиСписанияНДС,
	|	ЕСТЬNULL(Партии.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	ЕСТЬNULL(Партии.КорНаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	Партии.ПодразделениеСписанияНДС,
	|	Партии.ДокументРеализации,
	|	Партии.ИдентификаторФинЗаписи,
	|	Партии.НастройкаХозяйственнойОперации,
	|	Партии.Сторно
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПартииПредварительная
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ДатаНачалаДействия150ФЗ", УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", УчетНДСУП.НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	Запрос.УстановитьПараметр("ДатаВозможностиВычетаПриОказанииУслугНеВРФ", Дата("20190701"));
	Запрос.УстановитьПараметр("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	Запрос.УстановитьПараметр("ТипыДокументовЭкспорта",  Метаданные.РегистрыНакопления.НДСПредъявленный.Измерения.РеализацияЭкспорт.Тип.Типы());
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// См. УчетНДСУПСлужебный.ПолучитьСчетаФактурыДокументы
Процедура ПолучитьСчетаФактурыДокументы(ПараметрыРасчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация                  КАК Организация,
	|	Задания.СчетФактура                  КАК СчетФактура,
	|	Операция.Ссылка                      КАК Ссылка,
	|	Операция.ДатаСоставления             КАК Дата,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НЕ ПартииНДСКРаспределению.Регистратор ЕСТЬ NULL
	|			ТОГДА КОНЕЦПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		КОГДА Операция.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Операция.Дата
	|		ИНАЧЕ
	|			Операция.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ)                               КАК ДатаЗаписиКнигиПокупок,
	|	Операция.ДатаЗаписиКнигиПродаж       КАК ДатаЗаписиКнигиПродаж,
	|	Операция.КодВидаОперацииНаУменьшение КАК КодВидаОперацииНаУменьшение,
	|	НЕОПРЕДЕЛЕНО                         КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО                         КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ СчетаФактурыДокументы
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК Строки
	|	ПО 
	|		Операция.Ссылка = Строки.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Задания КАК Задания
	|	ПО 
	|		Операция.Организация = Задания.Организация
	|		И Строки.ДокументОснование = Задания.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииНДСКРаспределению КАК ПартииНДСКРаспределению
	|	ПО
	|		Операция.Корректировочный
	|		И ПартииНДСКРаспределению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Строки.ДокументОснование = ПартииНДСКРаспределению.Регистратор
	|		И ПартииНДСКРаспределению.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|ГДЕ
	|	Операция.Проведен
	|	И НЕ Операция.Исправление
	|
	|СГРУППИРОВАТЬ ПО
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	Операция.Ссылка,
	|	Операция.ДатаСоставления
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НЕ ПартииНДСКРаспределению.Регистратор ЕСТЬ NULL
	|			ТОГДА КОНЕЦПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		КОГДА Операция.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Операция.Дата
	|		ИНАЧЕ
	|			Операция.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ) <= &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация                 КАК Организация,
	|	Задания.СчетФактура                 КАК СчетФактура,
	|	Операция.Ссылка                     КАК Ссылка,
	|	Операция.ДатаСоставления            КАК Дата,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НЕ ПартииНДСКРаспределению.Регистратор ЕСТЬ NULL
	|			ТОГДА КОНЕЦПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		КОГДА Операция.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Операция.Дата
	|		ИНАЧЕ
	|			Операция.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ)                               КАК ДатаЗаписиКнигиПокупок,
	|	Операция.ДатаСоставления             КАК ДатаЗаписиКнигиПродаж,
	|	Операция.КодВидаОперацииНаУменьшение КАК КодВидаОперацииНаУменьшение,
	|	НЕОПРЕДЕЛЕНО                         КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО                         КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Задания КАК Задания
	|	ПО 
	|		Операция.Организация = Задания.Организация
	|		И Операция.Ссылка = Задания.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииНДСКРаспределению КАК ПартииНДСКРаспределению
	|	ПО
	|		Операция.Корректировочный
	|		И ПартииНДСКРаспределению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Операция.Ссылка = ПартииНДСКРаспределению.ДокументПоступленияРасходов
	|		И ПартииНДСКРаспределению.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|ГДЕ
	|	Операция.Проведен
	|	И НЕ Операция.Исправление
	|
	|СГРУППИРОВАТЬ ПО
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	Операция.Ссылка,
	|	Операция.Дата 
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НЕ ПартииНДСКРаспределению.Регистратор ЕСТЬ NULL
	|			ТОГДА КОНЕЦПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		КОГДА Операция.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Операция.Дата
	|		ИНАЧЕ
	|			Операция.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ) <= &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация                  КАК Организация,
	|	Задания.СчетФактура                  КАК СчетФактура,
	|	Операция.Ссылка                      КАК Ссылка,
	|	Операция.ДатаВыставления             КАК Дата,
	|	Операция.ДатаВыставления             КАК ДатаЗаписиКнигиПокупок,
	|	Операция.ДатаВыставления             КАК ДатаЗаписиКнигиПродаж,
	|	Операция.КодВидаОперацииНаУменьшение КАК КодВидаОперацииНаУменьшение,
	|	НЕОПРЕДЕЛЕНО                         КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО                         КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.СчетФактураВыданный КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК Строки
	|		ПО Операция.Ссылка = Строки.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО Операция.Контрагент = Задания.Организация
	|		И Строки.ДокументОснование = Задания.СчетФактура
	|		И ЕСТЬNULL(ВЫРАЗИТЬ(Строки.ДокументОснование КАК Документ.ПередачаТоваровМеждуОрганизациями).НалогообложениеНДС,
	|								ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) 
	|							<> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|ГДЕ
	|	Операция.ДатаВыставления <= &КонецПериода
	|	И Операция.ДатаВыставления <> ДАТАВРЕМЯ(1, 1, 1)
	|	И Операция.Проведен
	|	И НЕ Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	Операция.Ссылка     КАК Ссылка,
	|	Операция.Дата       КАК Дата,
	|	Операция.Дата       КАК ДатаЗаписиКнигиПокупок,
	|	Операция.Дата       КАК ДатаЗаписиКнигиПродаж,
	|	НЕОПРЕДЕЛЕНО        КАК КодВидаОперацииНаУменьшение,
	|	НЕОПРЕДЕЛЕНО        КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО        КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.ИнойДокументПодтвержденияНДС КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Задания КАК Задания
	|	ПО 
	|		Операция.Организация = Задания.Организация
	|		И Операция.ДокументОснование = Задания.СчетФактура
	|ГДЕ
	|	Операция.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураНалоговыйАгент.Организация КАК Организация,
	|	СчетФактураНалоговыйАгент.Ссылка      КАК СчетФактура,
	|	СчетФактураНалоговыйАгент.Ссылка      КАК Ссылка,
	|	СчетФактураНалоговыйАгент.Дата        КАК Дата,
	|	ДАТАВРЕМЯ(1,1,1)                      КАК ДатаЗаписиКнигиПокупок, // Определяется периодом оплаты НДС в бюджет
	|	ДАТАВРЕМЯ(1,1,1)                      КАК ДатаЗаписиКнигиПродаж,
	|	НЕОПРЕДЕЛЕНО                          КАК КодВидаОперацииНаУменьшение,
	|	СчетФактураНалоговыйАгент.ДокументОснование КАК ДокументОплаты,
	|	СчетФактураНалоговыйАгент.Договор           КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|ГДЕ
	|	СчетФактураНалоговыйАгент.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	Операция.Ссылка     КАК Ссылка,
	|	Операция.Дата       КАК Дата,
	|	Операция.Дата       КАК ДатаЗаписиКнигиПокупок,
	|	Операция.Дата       КАК ДатаЗаписиКнигиПродаж,
	|	""18""              КАК КодВидаОперацииНаУменьшение,
	|	НЕОПРЕДЕЛЕНО        КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО        КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Задания КАК Задания
	|	ПО 
	|		Операция.Организация = Задания.Организация
	|		И Операция.Ссылка = Задания.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК Строки
	|	ПО 
	|		Операция.Ссылка = Строки.ДокументОснование
	|		И Строки.Ссылка.Проведен
	|ГДЕ
	|	Операция.Проведен
	|	И Строки.Ссылка ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// См. УчетНДСУПСлужебный.ПолучитьИсправленныеСчетаФактурыДокументы
Процедура ПолучитьИсправленныеСчетаФактурыДокументы(ПараметрыРасчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	0 КАК Приоритет,
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	КорректировкаПриобретенияИсправление.Ссылка КАК ИсправленныйСчетФактура,
	|	ИсправленныйСчетФактура.Ссылка КАК Ссылка,
	|	ИсправленныйСчетФактура.Ссылка.НомерИсправления КАК НомерИсправления,
	|	ИсправленныйСчетФактура.Ссылка.ДатаИсправления КАК ДатаИсправления,
	|	ВЫБОР
	|		КОГДА ИсправленныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИсправленныйСчетФактура.Ссылка.ДатаИсправления
	|		ИНАЧЕ ИсправленныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ КАК ДатаЗаписиКнигиПокупок,
	|	ИсправленныйСчетФактура.Ссылка.Дата КАК ДатаПолучения,
	|	ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР КОГДА ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправленныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ КАК КорректируемыйПериод,
	|	ВЫБОР КОГДА КорректировкаПриобретенияИсправление.ТипКорректировки <> ЗНАЧЕНИЕ(Перечисление.ТипыКорректировки.ОбычнаяКорректировка)
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ ЛОЖЬ КОНЕЦ КАК КорректировкаДоВводаОстатков
	|ПОМЕСТИТЬ ВсеИсправленныеСчетаФактуры
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретенияИсправление
	|		ПО Задания.СчетФактура = КорректировкаПриобретенияИсправление.ДокументОснование
	|			И (КорректировкаПриобретенияИсправление.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
	|			И (КорректировкаПриобретенияИсправление.Проведен)
	|			И (КорректировкаПриобретенияИсправление.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ИсправленныйСчетФактура
	|		ПО (КорректировкаПриобретенияИсправление.Ссылка = ИсправленныйСчетФактура.ДокументОснование)
	|			И (ИсправленныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправленныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправленныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|			И (НЕ ИсправленныйСчетФактура.Ссылка.Корректировочный)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК ДругиеИсправленныеСчетаФактуры
	|		ПО (ИсправленныйСчетФактура.Ссылка.СчетФактураОснование = ДругиеИсправленныеСчетаФактуры.СчетФактураОснование)
	|			И (ИсправленныйСчетФактура.Ссылка.НомерИсправления < ДругиеИсправленныеСчетаФактуры.НомерИсправления)
	|			И (ДругиеИсправленныеСчетаФактуры.Проведен)
	|			И (ДругиеИсправленныеСчетаФактуры.Исправление)
	|			И (ДругиеИсправленныеСчетаФактуры.Дата <= &КонецПериода)
	|			И (НЕ ДругиеИсправленныеСчетаФактуры.Корректировочный)
	|ГДЕ
	|	ДругиеИсправленныеСчетаФактуры.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	0 КАК Приоритет,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	КорректировкаПриобретенияИсправление.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправленныйСчетФактура.Ссылка.ДатаИсправления,
	|	ВЫБОР
	|		КОГДА ИсправленныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИсправленныйСчетФактура.Ссылка.ДатаИсправления
	|		ИНАЧЕ ИсправленныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ,
	|	ИсправленныйСчетФактура.Ссылка.Дата,
	|	ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправленныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ,
	|	ЛОЖЬ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретенияПоСогласованию
	|		ПО Задания.СчетФактура = КорректировкаПриобретенияПоСогласованию.Ссылка
	|			И (КорректировкаПриобретенияПоСогласованию.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|			И (КорректировкаПриобретенияПоСогласованию.Проведен)
	|			И (КорректировкаПриобретенияПоСогласованию.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретенияИсправление
	|		ПО (КорректировкаПриобретенияПоСогласованию.ДокументОснование = КорректировкаПриобретенияИсправление.ДокументОснование)
	|			И (КорректировкаПриобретенияПоСогласованию.Дата < КорректировкаПриобретенияИсправление.Дата)
	|			И (КорректировкаПриобретенияИсправление.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
	|			И (КорректировкаПриобретенияИсправление.Проведен)
	|			И (КорректировкаПриобретенияИсправление.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ИсправленныйСчетФактура
	|		ПО (КорректировкаПриобретенияИсправление.Ссылка = ИсправленныйСчетФактура.ДокументОснование)
	|			И (ИсправленныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправленныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправленныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|			И (ИсправленныйСчетФактура.Ссылка.Корректировочный)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК ДругиеИсправленныеСчетаФактуры
	|		ПО (ИсправленныйСчетФактура.Ссылка.СчетФактураОснование = ДругиеИсправленныеСчетаФактуры.СчетФактураОснование)
	|			И (ИсправленныйСчетФактура.Ссылка.НомерИсправления < ДругиеИсправленныеСчетаФактуры.НомерИсправления)
	|			И (ДругиеИсправленныеСчетаФактуры.Проведен)
	|			И (ДругиеИсправленныеСчетаФактуры.Исправление)
	|			И (ДругиеИсправленныеСчетаФактуры.Дата <= &КонецПериода)
	|			И (НЕ ДругиеИсправленныеСчетаФактуры.Корректировочный)
	|ГДЕ
	|	ДругиеИсправленныеСчетаФактуры.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1 КАК Приоритет,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправленныйСчетФактура.Ссылка.ДатаИсправления,
	|	ИсправленныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок,
	|	ИсправленныйСчетФактура.Ссылка.Дата,
	|	ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправленныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ,
	|	ЛОЖЬ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ИсправленныйСчетФактура
	|		ПО Задания.СчетФактура = ИсправленныйСчетФактура.ДокументОснование
	|			И (ИсправленныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправленныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправленныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправленныйСчетФактура.Ссылка.ДатаИсправления,
	|	ИсправленныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок,
	|	ИсправленныйСчетФактура.Ссылка.Дата,
	|	ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправленныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ,
	|	ЛОЖЬ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйОснования
	|		ПО Задания.СчетФактура = СчетФактураПолученныйОснования.ДокументОснование
	|			И (СчетФактураПолученныйОснования.Ссылка.Проведен)
	|			И (СчетФактураПолученныйОснования.Ссылка.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК ИсправленныйСчетФактура
	|		ПО (СчетФактураПолученныйОснования.Ссылка = ИсправленныйСчетФактура.СчетФактураОснование)
	|			И (ИсправленныйСчетФактура.Проведен)
	|			И (ИсправленныйСчетФактура.Исправление)
	|			И (ИсправленныйСчетФактура.Дата <= &КонецПериода)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	0 КАК Приоритет,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.НомерИсправления,
	|	ИсправленныйСчетФактура.ДатаИсправления,
	|	ИсправленныйСчетФактура.ДатаЗаписиКнигиПокупок,
	|	ИсправленныйСчетФактура.Дата,
	|	ИсправленныйСчетФактура.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправленныйСчетФактура.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправленныйСчетФактура.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ,
	|	ЛОЖЬ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент КАК ИсправленныйСчетФактура
	|		ПО Задания.СчетФактура = ИсправленныйСчетФактура.СчетФактураОснование
	|			И (ИсправленныйСчетФактура.Проведен)
	|			И (ИсправленныйСчетФактура.Исправление)
	|			И (ИсправленныйСчетФактура.Дата <= &КонецПериода)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправленныйСчетФактура.Ссылка.ДатаИсправления,
	|	ИсправленныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок,
	|	ИсправленныйСчетФактура.Ссылка.Дата,
	|	ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправленныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправленныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ,
	|	ЛОЖЬ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК СчетФактураПолученныйОснования
	|		ПО Задания.СчетФактура = СчетФактураПолученныйОснования.ДокументОснование
	|			И (СчетФактураПолученныйОснования.Ссылка.Проведен)
	|			И (СчетФактураПолученныйОснования.Ссылка.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент КАК ИсправленныйСчетФактура
	|		ПО (СчетФактураПолученныйОснования.Ссылка = ИсправленныйСчетФактура.СчетФактураОснование)
	|			И (ИсправленныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправленныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправленныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1 КАК Приоритет,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка,
	|	ИсправленныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправленныйСчетФактура.Ссылка.Дата,
	|	ИсправленныйСчетФактура.Ссылка.Дата,
	|	ИсправленныйСчетФактура.Ссылка.Дата,
	|	ЛОЖЬ,
	|	ДАТАВРЕМЯ(1,1,1),
	|	ЛОЖЬ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ИсправленныйСчетФактура
	|		ПО Задания.СчетФактура = ИсправленныйСчетФактура.ДокументОснование
	|			И (ИсправленныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправленныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправленныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсправленныеСчетаФактуры.Приоритет КАК Приоритет,
	|	ИсправленныеСчетаФактуры.Организация КАК Организация,
	|	ИсправленныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	ИсправленныеСчетаФактуры.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ИсправленныеСчетаФактуры.Ссылка КАК Ссылка,
	|	ИсправленныеСчетаФактуры.ДатаИсправления КАК ДатаИсправления,
	|	ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок КАК ДатаЗаписиКнигиПокупок,
	|	ИсправленныеСчетаФактуры.ДатаПолучения,
	|	ИсправленныеСчетаФактуры.ЗаписьДополнительногоЛиста,
	|	ИсправленныеСчетаФактуры.КорректируемыйПериод,
	|	ИсправленныеСчетаФактуры.КорректировкаДоВводаОстатков
	|ПОМЕСТИТЬ ИсправленныеСчетаФактурыПредварительная
	|ИЗ
	|	ВсеИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеИсправленныеСчетаФактуры КАК ОтборПоследнееИсправление
	|		ПО ИсправленныеСчетаФактуры.Организация = ОтборПоследнееИсправление.Организация
	|			И ИсправленныеСчетаФактуры.СчетФактура = ОтборПоследнееИсправление.СчетФактура
	|			И ИсправленныеСчетаФактуры.НомерИсправления < ОтборПоследнееИсправление.НомерИсправления
	|
	|ГДЕ
	|	ОтборПоследнееИсправление.ИсправленныйСчетФактура ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсправленныеСчетаФактуры.Организация КАК Организация,
	|	ИсправленныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	ИсправленныеСчетаФактуры.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ИсправленныеСчетаФактуры.Ссылка КАК Ссылка,
	|	ИсправленныеСчетаФактуры.ДатаИсправления КАК ДатаИсправления,
	|	ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок КАК ДатаЗаписиКнигиПокупок,
	|	ИсправленныеСчетаФактуры.ДатаПолучения,
	|	ИсправленныеСчетаФактуры.ЗаписьДополнительногоЛиста,
	|	ИсправленныеСчетаФактуры.КорректируемыйПериод,
	|	ИсправленныеСчетаФактуры.КорректировкаДоВводаОстатков
	|ПОМЕСТИТЬ ИсправленныеСчетаФактурыПоследние
	|ИЗ
	|	ИсправленныеСчетаФактурыПредварительная КАК ИсправленныеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеСчетаФактурыПредварительная КАК ОтборПриоритет
	|		ПО ИсправленныеСчетаФактуры.Организация = ОтборПриоритет.Организация
	|			И ИсправленныеСчетаФактуры.СчетФактура = ОтборПриоритет.СчетФактура
	|			И ИсправленныеСчетаФактуры.Приоритет > ОтборПриоритет.Приоритет
	|
	|ГДЕ
	|	ОтборПриоритет.Ссылка ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ИсправленныйСчетФактура
	|;
	|
	|ВЫБРАТЬ
	|	ИсправленныеСчетаФактуры.Организация КАК Организация,
	|	ИсправленныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	ИсправленныеСчетаФактуры.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ИсправленныеСчетаФактуры.Ссылка КАК Ссылка,
	|	ИсправленныеСчетаФактуры.ДатаИсправления КАК ДатаИсправления,
	|	ИсправленныеСчетаФактуры.ДатаПолучения КАК ДатаПолучения,
	|	МАКСИМУМ(ВЫБОР 
	|		КОГДА НЕ ПартииНДСКРаспределению.Регистратор ЕСТЬ NULL 
	|			ТОГДА КОНЕЦПЕРИОДА(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		ИНАЧЕ ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ) КАК ДатаЗаписиКнигиПокупок,
	|	ИсправленныеСчетаФактуры.ЗаписьДополнительногоЛиста,
	|	ИсправленныеСчетаФактуры.КорректируемыйПериод,
	|	ИсправленныеСчетаФактуры.КорректировкаДоВводаОстатков
	|
	|ПОМЕСТИТЬ ИсправленныеСчетаФактуры
	|ИЗ
	|	ИсправленныеСчетаФактурыПоследние КАК ИсправленныеСчетаФактуры
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииНДСКРаспределению КАК ПартииНДСКРаспределению
	|	ПО
	|		ПартииНДСКРаспределению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ИсправленныеСчетаФактуры.ИсправленныйСчетФактура = ПартииНДСКРаспределению.Регистратор
	|		И ПартииНДСКРаспределению.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноСчетФактура
	|	ПО
	|		ИсправленныеСчетаФактуры.ИсправленныйСчетФактура = ДокументыСторноСчетФактура.СторнируемыйДокумент
	|ГДЕ
	|	ДокументыСторноСчетФактура.Ссылка ЕСТЬ NULL
	|	
	|СГРУППИРОВАТЬ ПО
	|	ИсправленныеСчетаФактуры.Организация,
	|	ИсправленныеСчетаФактуры.СчетФактура,
	|	ИсправленныеСчетаФактуры.ИсправленныйСчетФактура,
	|	ИсправленныеСчетаФактуры.Ссылка,
	|	ИсправленныеСчетаФактуры.ДатаИсправления,
	|	ИсправленныеСчетаФактуры.ДатаПолучения,
	|	ИсправленныеСчетаФактуры.ЗаписьДополнительногоЛиста,
	|	ИсправленныеСчетаФактуры.КорректируемыйПериод,
	|	ИсправленныеСчетаФактуры.КорректировкаДоВводаОстатков
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР 
	|		КОГДА НЕ ПартииНДСКРаспределению.Регистратор ЕСТЬ NULL 
	|			ТОГДА КОНЕЦПЕРИОДА(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		ИНАЧЕ ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ) <= &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура,
	|	ИсправленныйСчетФактура
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВсеИсправленныеСчетаФактуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсправленныеСчетаФактурыПредварительная
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсправленныеСчетаФактурыПоследние
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// См. УчетНДСУПСлужебный.ПолучитьКорректировочныеСчетаФактурыДокументы
Процедура ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ КорректировочныеСчетаФактуры
	|ИЗ
	|	Задания КАК Задания
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК КорректировкаПоСогласованиюСторон
	|	ПО
	|		Задания.СчетФактура = КорректировкаПоСогласованиюСторон.Ссылка
	|		И Задания.Организация = КорректировкаПоСогласованиюСторон.Организация
	|		И КорректировкаПоСогласованиюСторон.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйНалоговыйАгент КАК КорректировочныйСчетФактура
	|	ПО
	|		Задания.СчетФактура = КорректировочныйСчетФактура.Ссылка
	|		И Задания.Организация = КорректировочныйСчетФактура.Организация
	|		И КорректировочныйСчетФактура.Корректировочный
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|	ПО
	|		Задания.СчетФактура = ВозвратТоваровПоставщику.Ссылка
	|		И Задания.Организация = ВозвратТоваровПоставщику.Организация
	|		И ВозвратТоваровПоставщику.Дата >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваровМеждуОрганизациями
	|	ПО
	|		Задания.СчетФактура = ВозвратТоваровМеждуОрганизациями.Ссылка
	|		И Задания.Организация = ВозвратТоваровМеждуОрганизациями.Организация
	|		И ВозвратТоваровМеждуОрганизациями.Дата >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|ГДЕ
	|	НЕ КорректировкаПоСогласованиюСторон.Ссылка ЕСТЬ NULL
	|	ИЛИ НЕ КорректировочныйСчетФактура.Ссылка ЕСТЬ NULL
	|	ИЛИ НЕ ВозвратТоваровПоставщику.Ссылка ЕСТЬ NULL
	|	ИЛИ НЕ ВозвратТоваровМеждуОрганизациями.Ссылка ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", ДатаОтраженияВозвратовКорректировочнымиСФ());
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// См. УчетНДСУПСлужебный.ПолучитьРазрезыВычетаНДС
Процедура ПолучитьРазрезыВычетаНДС(ПараметрыРасчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РазрезыВычетаНДС.Организация КАК Организация,
	|	РазрезыВычетаНДС.СчетФактура КАК СчетФактура,
	|	РазрезыВычетаНДС.ВидДеятельностиНДС  КАК ВидДеятельностиНДС,
	|	РазрезыВычетаНДС.ВидЦенности КАК ВидЦенности,
	|	РазрезыВычетаНДС.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НДССостояниеРеализации0.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0)
	|		КОГДА ЕСТЬNULL(НДССостояниеРеализации0.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0)
	|		КОГДА РазрезыВычетаНДС.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету)
	|		КОГДА РазрезыВычетаНДС.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)
	|	КОНЕЦ КАК Событие,
	|	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1))) < &НачалоПериода
	|				И ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1)) < &НачалоПериода 
	|				И ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1)) < &НачалоПериода
	|				И ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) < &НачалоПериода
	|			ТОГДА &КонецПериода
	|			
	|		КОГДА ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|					>= ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|					>= ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|					>= ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|			ТОГДА ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|			
	|		КОГДА ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|				И ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|			ТОГДА ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|		
	|		КОГДА ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|				И ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|			ТОГДА ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|		
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|			ТОГДА ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|		
	|		КОГДА НЕ ДанныеПервичныхДокументовСчетФактура.ДатаРегистратора ЕСТЬ NULL
	|			ТОГДА ДанныеПервичныхДокументовСчетФактура.ДатаРегистратора
	|			
	|		ИНАЧЕ &КонецПериода
	|	КОНЕЦ КАК Период,
	|	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|					>= ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|					>= ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|					>= ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|				И НЕ ЕСТЬNULL(ИсправленныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка) ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(ИсправленныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка)
	|		
	|		КОГДА ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|				И ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|				И НЕ НДССостояниеРеализации0.ДокументРеализации ЕСТЬ NULL
	|				И ТИПЗНАЧЕНИЯ(НДССостояниеРеализации0.ДокументРеализации) В (&ТипыДокументовВычетаНДС)
	|			ТОГДА НДССостояниеРеализации0.ДокументРеализации
	|		
	|		КОГДА ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|				И ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|				И НЕ ПодтверждениеОплатыНДСВБюджет.СчетФактура ЕСТЬ NULL
	|				И ТИПЗНАЧЕНИЯ(ПодтверждениеОплатыНДСВБюджет.СчетФактура) В (&ТипыДокументовВычетаНДС)
	|			ТОГДА ПодтверждениеОплатыНДСВБюджет.СчетФактура
	|		
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(НДССостояниеРеализации0.ДатаПодтверждения, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты, ДАТАВРЕМЯ(1,1,1))
	|				И ЕСТЬNULL(ДанныеПервичныхДокументовРеализацияЭкспорт.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1))
	|					>= ЕСТЬNULL(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, ЕСТЬNULL(СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок, ДАТАВРЕМЯ(1,1,1)))
	|				И НЕ ДанныеПервичныхДокументовРеализацияЭкспорт.Документ ЕСТЬ NULL
	|				И ТИПЗНАЧЕНИЯ(ДанныеПервичныхДокументовРеализацияЭкспорт.Документ) В (&ТипыДокументовВычетаНДС)
	|			ТОГДА ДанныеПервичныхДокументовРеализацияЭкспорт.Документ
	|		
	|		КОГДА НЕ ЕСТЬNULL(ИсправленныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка) ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(ИсправленныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка)
	|		
	|		ИНАЧЕ РазрезыВычетаНДС.СчетФактура
	|	КОНЕЦ КАК Регистратор,
	|	РазрезыВычетаНДС.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|
	|ПОМЕСТИТЬ РазрезыВычетаНДС
	|ИЗ
	|	ВозможныеРазрезыВычетаНДС КАК РазрезыВычетаНДС
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		РазрезыВычетаНДС.Организация = СчетаФактурыДокументы.Организация
	|		И РазрезыВычетаНДС.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	ПО
	|		РазрезыВычетаНДС.Организация = ИсправленныеСчетаФактуры.Организация
	|		И РазрезыВычетаНДС.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|		И РазрезыВычетаНДС.ИсправленныйСчетФактура = ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ВсеИсправленныеСчетаФактуры
	|	ПО
	|		РазрезыВычетаНДС.Организация = ВсеИсправленныеСчетаФактуры.Организация
	|		И РазрезыВычетаНДС.СчетФактура = ВсеИсправленныеСчетаФактуры.СчетФактура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
	|	ПО
	|		РазрезыВычетаНДС.СчетФактура = ПодтверждениеОплатыНДСВБюджет.СчетФактура
	|		И ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.ПолученоПодтверждение)
	|		И ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты <= &КонецПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НДССостояниеРеализации0.СрезПоследних(&КонецПериода) КАК НДССостояниеРеализации0
	|	ПО
	|		РазрезыВычетаНДС.Организация = НДССостояниеРеализации0.Организация
	|		И РазрезыВычетаНДС.РеализацияЭкспорт = НДССостояниеРеализации0.ДокументРеализации
	|		И НДССостояниеРеализации0.Состояние В (
	|				ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0),
	|				ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактура
	|	ПО
	|		РазрезыВычетаНДС.Организация = ДанныеПервичныхДокументовСчетФактура.Организация
	|		И РазрезыВычетаНДС.СчетФактура = ДанныеПервичныхДокументовСчетФактура.Документ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовРеализацияЭкспорт
	|	ПО
	|		РазрезыВычетаНДС.Организация = ДанныеПервичныхДокументовРеализацияЭкспорт.Организация
	|		И РазрезыВычетаНДС.РеализацияЭкспорт = ДанныеПервичныхДокументовРеализацияЭкспорт.Документ
	|		И ДанныеПервичныхДокументовРеализацияЭкспорт.Документ <> НЕОПРЕДЕЛЕНО
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		УчетныеПолитикиПоПериодичностиРасчетаНДС КАК НастройкиУчетаНДС
	|	ПО
	|		РазрезыВычетаНДС.Организация = НастройкиУчетаНДС.Организация
	|ГДЕ
	|	(НастройкиУчетаНДС.ПериодичностьФормированияВычетовИВосстановленийНДС = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|	ИЛИ &КонецПериода = &КонецКвартала)
	|	И ВЫБОР
	|		КОГДА РазрезыВычетаНДС.ВидЦенности В (
	|								ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежиОС),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентКомитент),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги))
	|			ТОГДА НЕ ПодтверждениеОплатыНДСВБюджет.СчетФактура ЕСТЬ NULL
	|				И (ТИПЗНАЧЕНИЯ(РазрезыВычетаНДС.СчетФактура) В (&ТипыДокументовВычетаНДС)
	|					ИЛИ НЕ СчетаФактурыДокументы.СчетФактура ЕСТЬ NULL)
	|		КОГДА РазрезыВычетаНДС.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ЭлектронныеУслуги)
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ (НЕ СчетаФактурыДокументы.СчетФактура ЕСТЬ NULL И РазрезыВычетаНДС.ИсправленныйСчетФактура = НЕОПРЕДЕЛЕНО И ВсеИсправленныеСчетаФактуры.СчетФактура ЕСТЬ NULL)
	|				ИЛИ (НЕ ИсправленныеСчетаФактуры.СчетФактура ЕСТЬ NULL И РазрезыВычетаНДС.ИсправленныйСчетФактура <> НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА РазрезыВычетаНДС.ВидДеятельностиНДС В (
	|								ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт))
	|			ТОГДА НЕ НДССостояниеРеализации0.Состояние ЕСТЬ NULL
	|		КОГДА РазрезыВычетаНДС.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров) ТОГДА
	|			ВЫБОР 
	|				КОГДА ЕСТЬNULL(ДанныеПервичныхДокументовСчетФактура.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) < &ДатаНачалаДействия150ФЗ
	|					ТОГДА НЕ НДССостояниеРеализации0.Состояние ЕСТЬ NULL
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|		КОГДА РазрезыВычетаНДС.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|			ТОГДА РазрезыВычетаНДС.РеализацияЭкспорт <> НЕОПРЕДЕЛЕНО
	|		КОГДА РазрезыВычетаНДС.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос)
	|			ТОГДА РазрезыВычетаНДС.РеализацияЭкспорт <> НЕОПРЕДЕЛЕНО
	|		КОГДА РазрезыВычетаНДС.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаДействия150ФЗ", УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(ПараметрыРасчета.КонецПериода));
	Запрос.УстановитьПараметр("ТипыДокументовВычетаНДС",
		Метаданные.РегистрыНакопления.НДСПредъявленный.СтандартныеРеквизиты.Регистратор.Тип.Типы());
	Запрос.Выполнить();
	
КонецПроцедуры

// См. УчетНДСУПСлужебный.ПолучитьБлокировкиНДС
Процедура ПолучитьБлокировкиНДС(ПараметрыРасчета) Экспорт
	
	ПолучитьДокументыОплатыЭлектронныхУслуг(ПараметрыРасчета);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Оплаты.Организация КАК Организация,
	|	Оплаты.СчетФактура КАК СчетФактура,
	|	ВЫРАЗИТЬ(МАКСИМУМ(Оплаты.СуммаПриобретения) КАК ЧИСЛО(15, 2)) КАК СуммаПриобретения,
	|	ВЫРАЗИТЬ(СУММА(Оплаты.СуммаОплаты) КАК ЧИСЛО(15, 2)) КАК СуммаОплаты,
	|	ВЫРАЗИТЬ(МАКСИМУМ(Оплаты.НДСПриобретения) КАК ЧИСЛО(15, 2)) КАК НДСПриобретения
	|ПОМЕСТИТЬ ОплаченныеЭлектронныеУслуги
	|ИЗ
	|	ДокументыОплатыЭлектронныхУслуг КАК Оплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	Оплаты.Организация,
	|	Оплаты.СчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БлокировкаВычетаНДССчетаФактуры.СчетФактура КАК СчетФактура,
	|	МАКСИМУМ(БлокировкаВычетаНДССчетаФактуры.Ссылка.Дата) КАК ДатаПоследнегоДокумента
	|ПОМЕСТИТЬ ДатыПоследнихОперацийПоБлокировке
	|ИЗ
	|	Документ.БлокировкаВычетаНДС.СчетаФактуры КАК БлокировкаВычетаНДССчетаФактуры
	|ГДЕ
	|	НЕ БлокировкаВычетаНДССчетаФактуры.Ссылка.ПометкаУдаления
	|	И БлокировкаВычетаНДССчетаФактуры.Ссылка.Дата <= &КонецПериода
	|	И (БлокировкаВычетаНДССчетаФактуры.Ссылка.Организация, БлокировкаВычетаНДССчетаФактуры.СчетФактура) В
	|			(ВЫБРАТЬ
	|				Задания.Организация,
	|				Задания.СчетФактура
	|			ИЗ
	|				Задания КАК Задания)
	|СГРУППИРОВАТЬ ПО
	|	БлокировкаВычетаНДССчетаФактуры.СчетФактура
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДатаПоследнегоДокумента
	|;
	|
	|ВЫБРАТЬ
	|	БлокировкаВычетаНДССчетаФактуры.СчетФактура КАК СчетФактура,
	|	МАКСИМУМ(БлокировкаВычетаНДССчетаФактуры.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТ_СрезПоследнихДокументовБлокировки
	|ИЗ
	|	Документ.БлокировкаВычетаНДС.СчетаФактуры КАК БлокировкаВычетаНДССчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыПоследнихОперацийПоБлокировке
	|		ПО ДатыПоследнихОперацийПоБлокировке.СчетФактура = БлокировкаВычетаНДССчетаФактуры.СчетФактура
	|			И ДатыПоследнихОперацийПоБлокировке.ДатаПоследнегоДокумента = БлокировкаВычетаНДССчетаФактуры.Ссылка.Дата
	|ГДЕ
	|	НЕ БлокировкаВычетаНДССчетаФактуры.Ссылка.ПометкаУдаления
	|СГРУППИРОВАТЬ ПО
	|	БлокировкаВычетаНДССчетаФактуры.СчетФактура
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеБлокировки.Организация КАК Организация,
	|	ВсеБлокировки.СчетФактура КАК СчетФактура,
	|	МАКСИМУМ(ВсеБлокировки.НДС) КАК НДС
	|ПОМЕСТИТЬ БлокировкаВычетаНДС
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗаблокированныеСФ.Ссылка.Организация КАК Организация,
	|		ЗаблокированныеСФ.СчетФактура КАК СчетФактура,
	|		СУММА(ЗаблокированныеСФ.НДС) КАК НДС
	|	ИЗ
	|		Документ.БлокировкаВычетаНДС.СчетаФактуры КАК ЗаблокированныеСФ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СрезПоследнихДокументовБлокировки КАК ВТ_СрезПоследнихДокументовБлокировки
	|			ПО ЗаблокированныеСФ.СчетФактура = ВТ_СрезПоследнихДокументовБлокировки.СчетФактура
	|				И ЗаблокированныеСФ.Ссылка = ВТ_СрезПоследнихДокументовБлокировки.Ссылка
	|	ГДЕ
	|		(ЗаблокированныеСФ.СрокБлокировки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ИЛИ ЗаблокированныеСФ.СрокБлокировки > &КонецПериода)
	|		И ЗаблокированныеСФ.Ссылка.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировкиВычетаНДС.Установлена)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаблокированныеСФ.Ссылка.Организация,
	|		ЗаблокированныеСФ.СчетФактура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОплаченныеЭлектронныеУслуги.Организация,
	|		ОплаченныеЭлектронныеУслуги.СчетФактура,
	|		ВЫБОР КОГДА ОплаченныеЭлектронныеУслуги.СуммаОплаты = 0
	|			ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ОплаченныеЭлектронныеУслуги.НДСПриобретения
	|					* ВЫРАЗИТЬ((ОплаченныеЭлектронныеУслуги.СуммаПриобретения - ОплаченныеЭлектронныеУслуги.СуммаОплаты)
	|								/ ОплаченныеЭлектронныеУслуги.СуммаПриобретения КАК ЧИСЛО(21, 8)) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ
	|	ИЗ
	|		ОплаченныеЭлектронныеУслуги КАК ОплаченныеЭлектронныеУслуги
	|	ГДЕ
	|		ОплаченныеЭлектронныеУслуги.СуммаПриобретения <> ОплаченныеЭлектронныеУслуги.СуммаОплаты) КАК ВсеБлокировки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеБлокировки.Организация,
	|	ВсеБлокировки.СчетФактура";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.Выполнить();
		
КонецПроцедуры

// См. УчетНДСУПСлужебный.ПолучитьПовторноПринятыйКВычетуНДС
Процедура ПолучитьПовторноПринятыйКВычетуНДС(ПараметрыРасчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.Поставщик КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	-НДСЗаписиКнигиПокупок.СуммаБезНДС КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПокупок.НДС КАК НДС,
	|	-НДСЗаписиКнигиПокупок.НДСУпр КАК НДСУпр
	|ПОМЕСТИТЬ ПовторноПринятыйКВычетуНДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО НДСЗаписиКнигиПокупок.Организация = Задания.Организация
	|			И НДСЗаписиКнигиПокупок.СчетФактура = Задания.СчетФактура
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период < &НачалоПериода
	|	И НДСЗаписиКнигиПокупок.КодВидаОперации = ""25""";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.Выполнить();
		
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#Область ОписаниеЭтаповЗакрытияМесяца

#Область ФормированиеДвиженийПоНДС

// Описание проверок этапа закрытия месяца.
//
// Параметры:
//	ТаблицаПроверок - ТаблицаЗначений - см. АудитСостоянияСистемыПереопределяемый.ЗаполнитьПроверкиДляРегистрации.
//
Процедура ОписаниеПроверок_ФормированиеДвиженийПоНДС(ТаблицаПроверок) Экспорт
	
	// Дополнительное предупреждение, если суммы документа скорректированы вручную и на момент закрытия месяца отличаются от сумм торгового документа.
	
	ОписаниеПроверки = ЗакрытиеМесяцаСервер.ДобавитьОписаниеНовойПроверки(ТаблицаПроверок,
		"ПроверкаРасхожденияСумм",
		Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоНДС,
		Перечисления.МоментЗапускаПроверкиОперацииЗакрытияМесяца.ДоИПослеРасчета,
		"УчетНДСРФ.ПроверкаРасхожденияСумм");
	
	ЗакрытиеМесяцаСервер.ЗаполнитьПредставлениеНовойПроверки(ОписаниеПроверки,
		НСтр("ru = 'Есть расхождения сумм торговых документов и счетов-фактур'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
КонецПроцедуры

// Регистрирует проблему выполнения проверки, если суммы документа Счет-фактура полученный скорректированы вручную
// и на момент закрытия месяца отличаются от сумм торгового документа.
//
Процедура ПроверкаРасхожденияСумм(ПараметрыПроверки) Экспорт
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация", НСтр("ru = 'Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("СчетФактура", НСтр("ru = 'Счет-фактура полученный'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ПараметрыЗапросПолученияРасхождений = Новый Структура("НачалоПериода,КонецПериода,МассивОрганизаций");
	ЗаполнитьЗначенияСвойств(ПараметрыЗапросПолученияРасхождений, ПараметрыПроверки.ДополнительныеПараметры);
	ПараметрыЗапросПолученияРасхождений.Вставить("ВсеОрганизации", Ложь); // Массив организаций всегда не пустой
	ПараметрыЗапросПолученияРасхождений.Вставить("РучнаяКорректировка", Истина); // Здесь проверяем только счета-фактуры с ручными корректировками сумм
	
	МенеджерВременныхТаблиц = ПараметрыПроверки.ДополнительныеПараметры.МенеджерВременныхТаблиц;
	
	ОбработаноДокументов = ПоместитьРасхожденияТорговыхДокументовИСчетовФактурПолученных(
		МенеджерВременныхТаблиц,
		"вт_СчетаФактурыРасхождениеСумм",
		ПараметрыЗапросПолученияРасхождений);
	
	Если ЗначениеЗаполнено(ПараметрыПроверки.ДополнительныеПараметры) Тогда
		ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыПроверки.ДополнительныеПараметры,
			ОбработаноДокументов);
	КонецЕсли;
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
		"вт_СчетаФактурыРасхождениеСумм",
		НСтр("ru = 'По организации %1 обнаружено расхождение сумм счета-фактуры и торгового документа-основания.
		|Убедитесь в корректности сумм счета-фактуры полученного'", ОбщегоНазначения.КодОсновногоЯзыка()),
		СписокПолей,
		"СчетФактура");
	
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(
		ПараметрыПроверки,
		ПараметрыРегистрации,,,
		Перечисления.ВажностьПроблемыУчета.ПолезныйСовет);
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеСводныхСправок

// Добавляет этап закрытия месяца Формирование сводных справок НДС.
// 
// Параметры:
//  ТаблицаЭтапов - ТаблицаЗначений - таблица этапов, в которую требуется добавить новый этап
//  ТекущийРодитель - Строка - группа. в которую нужно добавить новый этап
//  ПредшествующийЭтап - Перечисления.ОперацииЗакрытияМесяца - этап, после которого будет следовать новый.
//
Процедура ДобавитьЭтап_ФормированиеСводныхСправокНДС(ТаблицаЭтапов, ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ФормированиеСводныхСправокНДС,
		Ложь, Истина, Ложь,
		Перечисления.ОперацииЗакрытияМесяца.РаспределениеДоходовПоНаправлениямДеятельности);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Сформировать'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"УчетНДСРФ.Использование_ФормированиеСводныхСправокНДС");
	НоваяСтрока.ДействиеВыполнить = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"УчетНДСРФ.Выполнить_ФормированиеСводныхСправокНДС");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Обработки.ЖурналДокументовНДС.Формы.СписокДокументов.ПолноеИмя());
	
КонецПроцедуры

// Проверка необходимости использования этапа закрытия месяца.
//
// Параметры:
//  ПараметрыОбработчика - Структура - параметры обработчика события этапа.
//
Процедура Использование_ФормированиеСводныхСправокНДС(ПараметрыОбработчика) Экспорт
	
	Если ЗакрытиеМесяцаСервер.СостояниеЭтапаОпределено(ПараметрыОбработчика.ДанныеЭтапа)
	 И ЗакрытиеМесяцаСервер.ТребуетсяПересчетЭтапа(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	// Для этапа уже установлено состояние "Не требуется", поэтому проверку состояния не выполняем.
	Если ПараметрыОбработчика.ДанныеЭтапа.Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.НеТребуется Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	Запрос.УстановитьПараметр("НачалоКварталаПериода",Новый Граница(НачалоКвартала(Запрос.Параметры.НачалоПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ТипыДокументовВводаОстатков", РеглУчетСервер.ДокументыВводаОстатков());
	
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицГоловнымиОрганизациями(Запрос.МенеджерВременныхТаблиц,
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Ссылка,
	|	НастройкиУчетаНДССрезПоследних.ПериодичностьОформленияСводныхСправок КАК ПериодичностьОформления
	|ПОМЕСТИТЬ ОрганизацииОСНО
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|		ПО (КлючиАналитикиУчетаПоПартнерам.Организация = ГоловныеОрганизации.Организация)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК Выручка
	|		ПО (Выручка.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&НачалоПериода, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиСистемыНалогообложенияСрезПоследних
	|		ПО ГоловныеОрганизации.Организация = НастройкиСистемыНалогообложенияСрезПоследних.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНДС.СрезПоследних(&НачалоПериода, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиУчетаНДССрезПоследних
	|		ПО ГоловныеОрганизации.Организация = НастройкиУчетаНДССрезПоследних.Организация
	|ГДЕ
	|	НастройкиСистемыНалогообложенияСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|	И ГоловныеОрганизации.ОбособленноеПодразделение <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Выручка.Регистратор ЕСТЬ NULL
	|	И Выручка.Период <= &КонецПериода
	|	И НЕ ТИПЗНАЧЕНИЯ(Выручка.Регистратор) В (&ТипыДокументовВводаОстатков)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииОСНО.Ссылка КАК Организация
	|ПОМЕСТИТЬ НеСформированыСводныеСправки
	|ИЗ
	|	ОрганизацииОСНО КАК ОрганизацииОСНО
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|	ПО
	|		ОрганизацииОСНО.ПериодичностьОформления = СводнаяСправкаНДС.ПериодичностьОформления
	|		И ОрганизацииОСНО.Ссылка = СводнаяСправкаНДС.Организация
	|		И СводнаяСправкаНДС.Проведен
	|		И СводнаяСправкаНДС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|ГДЕ
	|	КОНЕЦПЕРИОДА(&НачалоПериода, КВАРТАЛ) = КОНЕЦПЕРИОДА(&НачалоПериода, МЕСЯЦ)
	|	И ОрганизацииОСНО.ПериодичностьОформления = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|	И СводнаяСправкаНДС.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОрганизацииОСНО.Ссылка КАК Организация
	|ИЗ
	|	ОрганизацииОСНО КАК ОрганизацииОСНО
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|	ПО
	|		ОрганизацииОСНО.ПериодичностьОформления = СводнаяСправкаНДС.ПериодичностьОформления
	|		И ОрганизацииОСНО.Ссылка = СводнаяСправкаНДС.Организация
	|		И СводнаяСправкаНДС.Проведен
	|		И СводнаяСправкаНДС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|ГДЕ
	|	ОрганизацииОСНО.ПериодичностьОформления = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|	И СводнаяСправкаНДС.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводнаяСправкаНДС.Ссылка КАК СводнаяСправка,
	|	СводнаяСправкаНДС.Организация КАК Организация
	|ПОМЕСТИТЬ вт_РучныеКорректировкиСводныхСправок
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|ГДЕ
	|	СводнаяСправкаНДС.Проведен
	|	И СводнаяСправкаНДС.РучнаяКорректировка
	|	И СводнаяСправкаНДС.Организация В (&МассивОрганизаций)
	|	И СводнаяСправкаНДС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииОСНО.Ссылка КАК Организация
	|ИЗ
	|	ОрганизацииОСНО КАК ОрганизацииОСНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНДС.СрезПоследних(&НачалоКварталаПериода, ) КАК НастройкиУчетаНДССрезПервых
	|		ПО ОрганизацииОСНО.Ссылка = НастройкиУчетаНДССрезПервых.Организация
	|ГДЕ
	|	НастройкиУчетаНДССрезПервых.ПериодичностьОформленияСводныхСправок ЕСТЬ NULL
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	РазмерыВременныхТаблиц = ЗакрытиеМесяцаСервер.РазмерыВременныхТаблиц(Запрос, ПараметрыОбработчика);
	
	Если ПараметрыОбработчика.ПараметрыРасчета.НачалоПериода < Константы.ДатаНачалаПримененияСводныхСправок.Получить()
		ИЛИ РазмерыВременныхТаблиц.ОрганизацииОСНО = 0 Тогда
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Сводные справки не применяются'", ОбщегоНазначения.КодОсновногоЯзыка()));
	ИначеЕсли ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Ложь, "ОрганизацииОСНО")
			ИЛИ РазмерыВременныхТаблиц.НеСформированыСводныеСправки > 0 Тогда
			
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			НСтр("ru = 'Необходимо сформировать сводные справки'", ОбщегоНазначения.КодОсновногоЯзыка()));

		Выборка = РезультатЗапроса.Выбрать();
	
		Пока Выборка.Следующий() Цикл
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
				ПараметрыОбработчика,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Для организации ""%1"" не установлена учетная политика по НДС на начало квартала'", ОбщегоНазначения.КодОсновногоЯзыка()),
					Выборка.Организация));
		КонецЦикла;
	Иначе
		ПараметрыОбработчика.ДанныеЭтапа.Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.ВыполненоУспешно;
	КонецЕсли;
	
КонецПроцедуры

// Выполнение этапа закрытия месяца.
//
// Параметры:
//  ПараметрыОбработчика - Структура - параметры обработчика события этапа.
//
Процедура Выполнить_ФормированиеСводныхСправокНДС(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	НачалоПериода = ЗакрытиеМесяцаСервер.НачалоРасчета(ПараметрыОбработчика.ДанныеЭтапа.Код, ПараметрыРасчета.КонецПериода,,
		ПараметрыРасчета.МассивОрганизаций);
		
	//нет заданий закрытия месяца, но надо пересчитать, т.к. пункт может быть красным из-за отсутствия справок
	Если НачалоПериода > ПараметрыРасчета.КонецПериода Тогда
		НачалоПериода = ПараметрыРасчета.НачалоПериода;
	КонецЕсли;
	
	Пока НачалоПериода <= ПараметрыРасчета.КонецПериода Цикл

		ОкончаниеПериода = КонецМесяца(НачалоПериода);
		ДоступныеОрганизации = ЗакрытиеМесяцаСервер.ДоступныеДляРасчетаОрганизации(НачалоПериода, ПараметрыРасчета.МассивОрганизаций);
		НомерЗаданияДоРасчета = ЗакрытиеМесяцаСервер.УвеличитьНомерЗадания();
		
		// Этап 1. Подготовка работы с заданиями.
		
		НачатьТранзакцию();
		
		Попытка
			ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(НомерЗаданияДоРасчета, ДоступныеОрганизации,
				ПараметрыОбработчика.ДанныеЭтапа.Код);
			ДанныеКРасчетуЗаМесяц = ЗакрытиеМесяцаСервер.ЗаданияКРасчетуЗаМесяц(НачалоПериода, ОкончаниеПериода, НомерЗаданияДоРасчета,
				ДоступныеОрганизации, ПараметрыОбработчика.ДанныеЭтапа.Код);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр(
					"ru = 'При выполнении расчета за период %1 произошла ошибка:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоПериода),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(ПараметрыОбработчика, ТекстОшибки,
				ДоступныеОрганизации, НачалоПериода);
		КонецПопытки;
		
		// Этап 2. Собственно расчет по организациям и периоду.
		Попытка
			Если НачалоПериода = ПараметрыРасчета.НачалоПериода Тогда
				Документы.СводнаяСправкаНДС.СформироватьСводныеСправкиНДС(ДоступныеОрганизации, НачалоПериода);
			Иначе
				Документы.СводнаяСправкаНДС.СформироватьСводныеСправкиНДС(ДанныеКРасчетуЗаМесяц.Организация, НачалоПериода);
			КонецЕсли;
		Исключение
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр(
					"ru = 'Формирование сводных справок НДС за период %1 завершилось с ошибкой:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоПериода),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(ПараметрыОбработчика, ТекстОшибки,
				ДанныеКРасчетуЗаМесяц.Организация, НачалоПериода);
		КонецПопытки;
		
		// Этап 3. Завершение работы с заданиями.
		
		ЗакрытиеМесяцаСервер.УдалитьЗаданияКРасчетуЗаТекущийПериод(ПараметрыОбработчика, ДанныеКРасчетуЗаМесяц);
		
		НачалоПериода = ОкончаниеПериода + 1;
	КонецЦикла;
	
КонецПроцедуры

// Описание проверок этапа закрытия месяца.
//
// Параметры:
//	ТаблицаПроверок - ТаблицаЗначений - см. АудитСостоянияСистемыПереопределяемый.ЗаполнитьПроверкиДляРегистрации.
//
Процедура ОписаниеПроверок_ФормированиеСводныхСправокНДС(ТаблицаПроверок) Экспорт
	// Дополнительное предупреждение, если суммы сводных справок скорректированы вручную.
	
	ОписаниеПроверки = ЗакрытиеМесяцаСервер.ДобавитьОписаниеНовойПроверки(ТаблицаПроверок,
		"ПроверкаРучныеКорректировкиСводныхСправок",
		Перечисления.ОперацииЗакрытияМесяца.ФормированиеСводныхСправокНДС,
		Перечисления.МоментЗапускаПроверкиОперацииЗакрытияМесяца.ДоИПослеРасчета,
		"УчетНДСРФ.ПроверкаРучныеКорректировкиСводныхСправок");
	
	ЗакрытиеМесяцаСервер.ЗаполнитьПредставлениеНовойПроверки(ОписаниеПроверки,
		НСтр("ru = 'Есть расхождения сумм торговых документов и счетов-фактур'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
КонецПроцедуры

// Проверяет, были ли ручные корректировки сводных справок.
//
// Параметры:
//	ПараметрыПроверки - Структура - параметр процедуры-обработчика проверки, см. АудитСостоянияСистемы.ИнициализироватьПараметрыПроверки
//
Процедура ПроверкаРучныеКорректировкиСводныхСправок(ПараметрыПроверки) Экспорт
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация",    НСтр("ru = 'Организация'", ОбщегоНазначения.КодОсновногоЯзыка()));
	СписокПолей.Добавить("СводнаяСправка", НСтр("ru = 'Сводная справка НДС'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
		"вт_РучныеКорректировкиСводныхСправок",
		НСтр("ru = 'По организации %1 оформлены сводные справки НДС, в которых вручную отредактированы суммы.'", ОбщегоНазначения.КодОсновногоЯзыка()),
		СписокПолей,
		"СводнаяСправка");
		
	Если ЗначениеЗаполнено(ПараметрыПроверки.ДополнительныеПараметры) Тогда
		КоличествоДанных = РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(
			ПараметрыПроверки.ДополнительныеПараметры.МенеджерВременныхТаблиц,
			"вт_РучныеКорректировкиСводныхСправок");
		ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыПроверки.ДополнительныеПараметры,
			КоличествоДанных);
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(
		ПараметрыПроверки,
		ПараметрыРегистрации,,,
		Перечисления.ВажностьПроблемыУчета.ПолезныйСовет);
	
КонецПроцедуры

#КонецОбласти

Функция ПроверитьКорректностьПримененияПравила5Процентов(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	НеобходимаПроверка = (Месяц(ПараметрыРасчета.ПериодРегистрации) % 3 = 0);
	БылиОшибки = Ложь;
	
	Если НЕ НеобходимаПроверка Тогда
		Возврат НЕ БылиОшибки;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицДействующимиПараметрамиНалоговУчетныхПолитик(
		Метаданные.РегистрыСведений.НастройкиУчетаНДС.Имя,
		Запрос.МенеджерВременныхТаблиц,
		Запрос.Параметры.НачалоПериода,
		"ВТНастройкиУчетаНДС",
		Запрос.Параметры.МассивОрганизаций);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	МАКСИМУМ(Т.ПрименитьПравило5Процентов) КАК ПрименитьПравило5Процентов
	|ПОМЕСТИТЬ ОрганизацииСДокументамиРаспределения
	|ИЗ
	|	Документ.РаспределениеНДС КАК Т
	|ГДЕ
	|	Т.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И Т.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Организация КАК Организация,
	|	Организации.ПрименитьПравило5Процентов КАК ПрименитьПравило5Процентов
	|ИЗ
	|	ОрганизацииСДокументамиРаспределения КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиУчетаНДС КАК Политики
	|		ПО Организации.Организация = Политики.Организация
	|ГДЕ
	|	ЕСТЬNULL(Политики.Учитывать5ПроцентныйПорог, ЛОЖЬ)";
	
	ТаблицаОрганизаций = Запрос.Выполнить().Выгрузить();
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ТаблицаОрганизаций.Количество());
	
	Если ТаблицаОрганизаций.Количество() = 0 Тогда
		Возврат НЕ БылиОшибки;
	КонецЕсли;
	
	Оценка = РаспределениеНДСЛокализация.ОценкаПримененияПравила5Процентов(
		ТаблицаОрганизаций.ВыгрузитьКолонку("Организация"),
		ПараметрыРасчета.ПериодРегистрации);
		
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, Оценка.Количество());
	
	Для Каждого СтрокаОрганизации Из ТаблицаОрганизаций Цикл
		
		СтрокаОценки = Оценка.Найти(СтрокаОрганизации.Организация, "Организация");
		
		Если СтрокаОценки = Неопределено Тогда
			
			Продолжить;
		
		ИначеЕсли НЕ СтрокаОрганизации.ПрименитьПравило5Процентов И СтрокаОценки.Доля <= 5 Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У организации ""%1"" расходы по реализации не облагаемой НДС не превышают 5% от общих расходов. НДС может быть принят к вычету в полном объеме.'", ОбщегоНазначения.КодОсновногоЯзыка()),
				СтрокаОрганизации.Организация);
			
			ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
				ПараметрыОбработчика,
				ТекстСообщения,
				,
				,
				Перечисления.ВажностьПроблемыУчета.ПолезныйСовет);
			
		ИначеЕсли СтрокаОрганизации.ПрименитьПравило5Процентов И СтрокаОценки.Доля > 5 Тогда
			
			БылиОшибки = Истина;
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У организации ""%1"" расходы по реализации не облагаемой НДС превышают 5% от общих расходов. Необходимо выполнить распределение НДС между видами деятельности.'", ОбщегоНазначения.КодОсновногоЯзыка()),
				СтрокаОрганизации.Организация);
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеВыполненСОшибками(
				ПараметрыОбработчика,
				ТекстСообщения);
			
		КонецЕсли;
		
	КонецЦикла;		
	
	Возврат НЕ БылиОшибки;
	
КонецФункции

#КонецОбласти

#Область ПакетнаяОбработкаТабличныхЧастей

// Добавляет запрос в пакет запросов заполнения счета-фактуры.
//
// Параметры:
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//  ОписаниеЗапроса - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОписаниеЗапроса
//  КэшированныеЗначения - Структура
//
Процедура ДополнитьТекстЗапросаЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	Перем ПараметрыДействия;
	
	Если ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках",
			СтруктураДействий,
			КэшированныеЗначения,
			ПараметрыДействия) Тогда
		
		СписокЗапросов = ТекстыЗапросовЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках();
		Для Каждого ЭлементСписка Из СписокЗапросов Цикл
			ОписаниеЗапроса.ТекстыЗапросов.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЦикла;
		
		ВидыНалогообложения = Новый Массив;
		ВидыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		ВидыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги);
		
		ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ВидыНалогообложения", ВидыНалогообложения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Формирует задания на отражение в книге покупок вычета НДС по приобретенным электронным услугам.
//
// Параметры:
// 	ТаблицаИзменений - ТаблицаЗначений - с колонками:
//	* Документ - документ, по которому изменилось состояние взаиморасчетов
//	* Период - период изменения
//
Процедура СформироватьЗаданияПоПриобретениюЭлектронныхУслуг(ТаблицаИзменений) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаИзменений", ТаблицаИзменений);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИзменений.Период КАК Период,
	|	ТаблицаИзменений.Документ КАК РасчетныйДокумент
	|ПОМЕСТИТЬ ВтРасчеты
	|ИЗ
	|	&ТаблицаИзменений КАК ТаблицаИзменений
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.СчетФактура КАК СчетФактура,
	|	НДСПредъявленный.Организация КАК Организация,
	|	Расчеты.Период               КАК Месяц
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтРасчеты КАК Расчеты
	|	ПО
	|		Расчеты.РасчетныйДокумент = НДСПредъявленный.СчетФактура
	|
	|ГДЕ
	|	НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ЭлектронныеУслуги)
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры


// Записывает вручную отредактированный набор записей Журнала счетов-фактур или возвращает дефолтные движения документа.
// Устанавливает признак редактирования журнала в документе.
// 
// Параметры:
// 	ДокументДвижений - ДокументСсылка - документ, в котором нужно изменить движения по журналу СФ
// 	НаборЗаписей - РегистрСведенийНаборЗаписей.ЖурналУчетаСчетовФактур - отредактированный набор записей
// 	РучнаяКорректировка - Булево - если Истина, то мы записываем новый набор, если Ложь - возвращаем дефолтные движения
// 	Отказ - Булево - признак ошибки записи
// Возвращаемое значение:
// 	Булево - статус ручной корректировки после записи набора.
//
Функция ЗаписатьДвиженияЖурналаСФ(ДокументДвижений, НаборЗаписей, РучнаяКорректировка, Отказ) Экспорт

	Если РучнаяКорректировка Тогда

		НачатьТранзакцию();
		Попытка
			ДокОбъект = ДокументДвижений.ПолучитьОбъект();
			Если Не ДокОбъект.РучнаяКорректировкаЖурналаСФ Тогда
				ДокОбъект.РучнаяКорректировкаЖурналаСФ = Истина;
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			НаборЗаписей.Отбор.Регистратор.Установить(ДокументДвижений);
			НаборЗаписей.УстановитьАктивность(Истина);
			НаборЗаписей.Записать(Истина);
			ЗафиксироватьТранзакцию();
			Возврат Истина;
		Исключение
			Отказ = Истина;
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Ручная корректировка журнала СФ'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,, 
				ДокументДвижений, 
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ВызватьИсключение ОписаниеОшибки();
		КонецПопытки;
		
	Иначе
		
		НачатьТранзакцию();
		Попытка
			ДокОбъект = ДокументДвижений.ПолучитьОбъект();
			Если ДокОбъект.РучнаяКорректировкаЖурналаСФ Тогда
				ДокОбъект.РучнаяКорректировкаЖурналаСФ = Ложь;
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			ДополнительныеСвойства = Новый Структура;
			ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
			Движения = Новый Структура;
			ЖурналУчетаСчетовФактур = РегистрыСведений.ЖурналУчетаСчетовФактур.СоздатьНаборЗаписей();
			ЖурналУчетаСчетовФактур.Отбор.Регистратор.Установить(ДокументДвижений);
			Движения.Вставить("ЖурналУчетаСчетовФактур", ЖурналУчетаСчетовФактур);
			Регистры = Новый Структура;
			Регистры.Вставить("ЖурналУчетаСчетовФактур");
			ТаблицыДляДвижений = ПроведениеДокументов.ДанныеДокументаДляПроведения(ДокументДвижений, Регистры);
			УчетНДСЛокализация.ОтразитьДвижения(ТаблицыДляДвижений, Движения, Ложь);
			Движения.ЖурналУчетаСчетовФактур.Записать();
			ЗафиксироватьТранзакцию();
			Возврат Ложь;
		Исключение
			Отказ = Истина;
			ОтменитьТранзакцию();
			ШаблонОшибки = НСтр("ru='Не удалось перепровести документ по причине %1'") 
				+ Символы.ПС + НСтр("ru='Проведение документа отменено.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонОшибки, 
				ОписаниеОшибки());
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументДвижений);
			ВызватьИсключение;
		КонецПопытки;

	КонецЕсли;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеДвиженияНДСЗаписиКнигиПокупок

Процедура СформироватьНДСЗаписиКнигиПокупок(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыНДСЗаписиКнигиПокупок(ПараметрыРасчета);
	
	ПолучитьДокументыОплатыГрафа7(ПараметрыРасчета);
	
	ИменаТаблицНДСЗаписиКнигиПокупок = Новый Массив;
	ИменаТаблицНДСЗаписиКнигиПокупок.Добавить(РассчитатьНДСЗаписиКнигиПокупокСторно(ПараметрыРасчета));
	ИменаТаблицНДСЗаписиКнигиПокупок.Добавить(РассчитатьНДСЗаписиКнигиПокупокПоНДСПредъявленный(ПараметрыРасчета));
	ИменаТаблицНДСЗаписиКнигиПокупок.Добавить(РассчитатьНДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурам(ПараметрыРасчета));
	Если ПараметрыРасчета.РасчетАвансовПолученных Тогда
		ИменаТаблицНДСЗаписиКнигиПокупок.Добавить(РассчитатьНДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурамВыданнымНаАванс(ПараметрыРасчета));
		ИменаТаблицНДСЗаписиКнигиПокупок.Добавить(РассчитатьНДСЗаписиКнигиПокупокПоАвансуПолученному(ПараметрыРасчета));
	КонецЕсли;
	Если ПараметрыРасчета.РасчетАвансовВыданных Тогда
		ИменаТаблицНДСЗаписиКнигиПокупок.Добавить(РассчитатьНДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурамПолученнымНаАванс(ПараметрыРасчета));
		ИменаТаблицНДСЗаписиКнигиПокупок.Добавить(РассчитатьНДСЗаписиКнигиПокупокПоАвансуВыданному(ПараметрыРасчета));
	КонецЕсли;
	
	ИменаТаблицНДСЗаписиКнигиПокупок.Добавить(РассчитатьНДСЗаписиКнигиПокупокСохранение(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПокупок));
	
	ЗаписатьНДСЗаписиКнигиПокупок(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПокупок);
	ОчиститьНДСЗаписиКнигиПокупок(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПокупок);
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыНДСЗаписиКнигиПокупок(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НДСЗаписиКнигиПокупок.Период КАК Период,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ТекущиеРегистраторыНДСЗаписиКнигиПокупок
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО НДСЗаписиКнигиПокупок.Организация = Задания.Организация
	|			И НДСЗаписиКнигиПокупок.СчетФактура = Задания.СчетФактура
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьДокументыОплатыЭлектронныхУслуг(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор КАК СчетФактура,
	|	НДСПредъявленный.Организация КАК Организация,
	|	СУММА(НДСПредъявленный.НДС)  КАК НДСПриобретения
	|ПОМЕСТИТЬ НДСПриПриобретенииЭлектронныхУслуг
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.СчетФактура = НДСПредъявленный.Регистратор
	|
	|ГДЕ
	|	НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ЭлектронныеУслуги)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.Регистратор,
	|	НДСПредъявленный.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПриПриобретенииЭлектронныхУслуг.Организация КАК Организация,
	|	НДСПриПриобретенииЭлектронныхУслуг.СчетФактура КАК СчетФактура,
	|	НДСПриПриобретенииЭлектронныхУслуг.НДСПриобретения КАК НДСПриобретения,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Сумма КАК Сумма
	|ПОМЕСТИТЬ ПриобретенияЭлектронныхУслуг
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НДСПриПриобретенииЭлектронныхУслуг КАК НДСПриПриобретенииЭлектронныхУслуг
	|	ПО
	|		НДСПриПриобретенииЭлектронныхУслуг.СчетФактура = Расчеты.Регистратор
	|ГДЕ
	|	Расчеты.Сумма <> 0
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	СчетФактура
	|";
	
	Запрос.Выполнить();
	
	ПараметрыПоиска = ВзаиморасчетыСервер.ИнициализироватьПараметрыПоискаОснованийИДокументовОплаты();
	ПараметрыПоиска.ПараметрыОтбораПоТаблицеДокументов.ИмяПоля          = "СчетФактура";
	ПараметрыПоиска.ПараметрыОтбораПоТаблицеДокументов.ИмяТаблицыОтбора = "ПриобретенияЭлектронныхУслуг";
	ПараметрыПоиска.Организации                                         = ПараметрыРасчета.МассивОрганизаций;
	ПараметрыПоиска.НаДату                                              = ПараметрыРасчета.КонецПериода;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСПоставщиками_ОснованияИДокументыОплаты(
		ПараметрыРасчета.МенеджерВременныхТаблиц,
		ПараметрыПоиска);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриобретенияЭлектронныхУслуг.Организация КАК Организация,
	|	ПриобретенияЭлектронныхУслуг.СчетФактура КАК СчетФактура,
	|	ЕСТЬNULL(Оплаты.ДокументОплаты, НЕОПРЕДЕЛЕНО) КАК ДокументОплаты,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, НЕОПРЕДЕЛЕНО) КАК ДатаДокументаОплаты,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, НЕОПРЕДЕЛЕНО) КАК НомерДокументаОплаты,
	|	СУММА(ЕСТЬNULL(Оплаты.СуммаОплаты,0)) КАК СуммаОплаты,
	|	МАКСИМУМ(ПриобретенияЭлектронныхУслуг.Сумма) КАК СуммаПриобретения,
	|	МАКСИМУМ(ПриобретенияЭлектронныхУслуг.НДСПриобретения) КАК НДСПриобретения
	|ПОМЕСТИТЬ ДокументыОплатыЭлектронныхУслуг
	|ИЗ
	|	ПриобретенияЭлектронныхУслуг КАК ПриобретенияЭлектронныхУслуг
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыСПоставщиками_ОснованияИДокументыОплаты КАК Оплаты
	|	ПО 
	|		Оплаты.АналитикаУчетаПоПартнерам = ПриобретенияЭлектронныхУслуг.АналитикаУчетаПоПартнерам
	|		И Оплаты.ОснованиеОплаты = ПриобретенияЭлектронныхУслуг.СчетФактура
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		Оплаты.АналитикаУчетаПоПартнерам.Организация = ДанныеПервичныхДокументов.Организация
	|		И Оплаты.ДокументОплаты = ДанныеПервичныхДокументов.Документ
	|	
	|ГДЕ
	|	ПриобретенияЭлектронныхУслуг.СчетФактура <> Оплаты.ДокументОплаты
	|	ИЛИ Оплаты.ДокументОплаты ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриобретенияЭлектронныхУслуг.Организация,
	|	ПриобретенияЭлектронныхУслуг.СчетФактура,
	|	Оплаты.ДокументОплаты,
	|	ДанныеПервичныхДокументов.Дата,
	|	ДанныеПервичныхДокументов.Номер
	|;
	|
	|УНИЧТОЖИТЬ РасчетыСПоставщиками_ОснованияИДокументыОплаты
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьДокументыОплатыГрафа7(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	ПодтверждениеОплатыНДСВБюджет.НомерДокументаПеречисленияНалога КАК НомерДокументаОплаты,
	|	ПодтверждениеОплатыНДСВБюджет.ДатаДокументаПеречисленияНалога КАК ДатаДокументаОплаты
	|ПОМЕСТИТЬ ДокументыОплатыГрафа7
	|ИЗ
	|	Задания КАК Задания
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
	|	ПО
	|		Задания.СчетФактура = ПодтверждениеОплатыНДСВБюджет.СчетФактура
	|		И ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.Оплачено)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОплатыЭлектронныхУслуг.Организация КАК Организация,
	|	ДокументыОплатыЭлектронныхУслуг.СчетФактура КАК СчетФактура,
	|	ДокументыОплатыЭлектронныхУслуг.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ДокументыОплатыЭлектронныхУслуг.ДатаДокументаОплаты КАК ДатаДокументаОплаты
	|ИЗ
	|	ДокументыОплатыЭлектронныхУслуг КАК ДокументыОплатыЭлектронныхУслуг
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();

КонецПроцедуры

Функция РассчитатьНДСЗаписиКнигиПокупокСторно(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ДокументыСторноРегистратор.Ссылка,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.Ссылка, 
	|				ДокументыСторноИсправленныйСчетФактура.Ссылка)) КАК Ссылка,
	|	ЕСТЬNULL(ДокументыСторноРегистратор.Период,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.Период, 
	|				ДокументыСторноИсправленныйСчетФактура.Период)) КАК Период,
	|	ЕСТЬNULL(ДокументыСторноРегистратор.СторнируемыйДокумент,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.СторнируемыйДокумент, 
	|				ДокументыСторноИсправленныйСчетФактура.СторнируемыйДокумент)) КАК СторнируемыйДокумент,
	|	ЕСТЬNULL(ДокументыСторноРегистратор.ДатаИсправляемогоДокумента,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.ДатаИсправляемогоДокумента, 
	|				ДокументыСторноИсправленныйСчетФактура.ДатаИсправляемогоДокумента)) КАК ДатаИсправляемогоДокумента,
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокОтборСторно
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		НДСЗаписиКнигиПокупок.Организация = Задания.Организация
	|		И НДСЗаписиКнигиПокупок.СчетФактура = Задания.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноРегистратор
	|	ПО
	|		НДСЗаписиКнигиПокупок.Регистратор = ДокументыСторноРегистратор.СторнируемыйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноСчетФактура
	|	ПО
	|		НДСЗаписиКнигиПокупок.СчетФактура = ДокументыСторноСчетФактура.СторнируемыйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноИсправленныйСчетФактура
	|	ПО
	|		НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура = ДокументыСторноИсправленныйСчетФактура.СторнируемыйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК ПрошлыеСторноРегистратора
	|	ПО
	|		НДСЗаписиКнигиПокупок.Регистратор = ПрошлыеСторноРегистратора.СторнируемыйДокумент
	|		И ПрошлыеСторноРегистратора.СторноИсправление
	|		И НЕ ПрошлыеСторноРегистратора.ДополнительнаяЗапись
	|		И ПрошлыеСторноРегистратора.Проведен
	|		И ПрошлыеСторноРегистратора.ДатаДокументаИБ < &НачалоПериода
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК ПрошлыеСторноСчетаФактуры
	|	ПО
	|		НДСЗаписиКнигиПокупок.СчетФактура = ПрошлыеСторноСчетаФактуры.СторнируемыйДокумент
	|		И ПрошлыеСторноСчетаФактуры.СторноИсправление
	|		И НЕ ПрошлыеСторноСчетаФактуры.ДополнительнаяЗапись
	|		И ПрошлыеСторноСчетаФактуры.Проведен
	|		И ПрошлыеСторноСчетаФактуры.ДатаДокументаИБ < &НачалоПериода
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК ПрошлыеСторноИсправительногоСчетаФактуры
	|	ПО
	|		НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура = ПрошлыеСторноИсправительногоСчетаФактуры.СторнируемыйДокумент
	|		И ПрошлыеСторноИсправительногоСчетаФактуры.СторноИсправление
	|		И НЕ ПрошлыеСторноИсправительногоСчетаФактуры.ДополнительнаяЗапись
	|		И ПрошлыеСторноИсправительногоСчетаФактуры.Проведен
	|		И ПрошлыеСторноИсправительногоСчетаФактуры.ДатаДокументаИБ < &НачалоПериода
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период < &НачалоПериода 
	|	И НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|	И НЕ НДСЗаписиКнигиПокупок.Сторно
	|	И НЕ (ДокументыСторноРегистратор.СторнируемыйДокумент ЕСТЬ NULL
	|		И ДокументыСторноСчетФактура.СторнируемыйДокумент ЕСТЬ NULL
	|		И ДокументыСторноИсправленныйСчетФактура.СторнируемыйДокумент ЕСТЬ NULL)
	|	И ПрошлыеСторноРегистратора.Ссылка ЕСТЬ NULL
	|	И ПрошлыеСторноСчетаФактуры.Ссылка ЕСТЬ NULL
	|	И ПрошлыеСторноИсправительногоСчетаФактуры.Ссылка ЕСТЬ NULL
	|;
	|
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0                                            КАК Приоритет,
	|	НДСЗаписиКнигиПокупокОтборСторно.Период      КАК Период,
	|	НДСЗаписиКнигиПокупокОтборСторно.Ссылка      КАК Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация            КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик              КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура            КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности            КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС              КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты             КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты         КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие                КАК Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия            КАК ДатаСобытия,
	|	ВЫБОР 
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупокОтборСторно.Период, КВАРТАЛ) > НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, КВАРТАЛ)
	|			И НЕ НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста 
	|	КОНЕЦ                                         КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР 
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупокОтборСторно.Период, КВАРТАЛ) > НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, КВАРТАЛ)
	|			И НДСЗаписиКнигиПокупок.КорректируемыйПериод = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПокупок.Период
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.КорректируемыйПериод  
	|	КОНЕЦ                                         КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента      КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	-НДСЗаписиКнигиПокупок.СуммаБезНДС            КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПокупок.НДС                    КАК НДС,
	|	-НДСЗаписиКнигиПокупок.НДСУпр                 КАК НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты    КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты     КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации         КАК КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация    КАК РегламентнаяОперация,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.Регистратор = НДСЗаписиКнигиПокупокОтборСторно.СторнируемыйДокумент
	|			ТОГДА ИСТИНА 
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Сторно,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки        КАК ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация КАК ПродавцомВыступаетОрганизация
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокСторно
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПокупокОтборСторно КАК НДСЗаписиКнигиПокупокОтборСторно
	|	ПО
	|		НДСЗаписиКнигиПокупок.Регистратор = НДСЗаписиКнигиПокупокОтборСторно.Регистратор
	|		И НДСЗаписиКнигиПокупок.Организация = НДСЗаписиКнигиПокупокОтборСторно.Организация
	|		И НДСЗаписиКнигиПокупок.СчетФактура = НДСЗаписиКнигиПокупокОтборСторно.СчетФактура
	|
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|	И НЕ НДСЗаписиКнигиПокупок.Сторно
	|	И НДСЗаписиКнигиПокупок.Период < &НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСЗаписиКнигиПокупокОтборСторно
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПокупокСторно";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПокупокПоНДСПредъявленный(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	// Записи по событию НДСПринятКВычету
	"ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет                                      КАК Приоритет,
	|	НДСПредъявленный.Период                                         КАК Период,
	|	НДСПредъявленный.Регистратор                                    КАК Регистратор,
	|	НДСПредъявленный.Организация                                    КАК Организация,
	|	НДСПредъявленный.Поставщик                                      КАК Поставщик,
	|	НДСПредъявленный.СчетФактура                                    КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                    КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС.ПеречислениеСтавкаНДС                КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                                КАК ДатаОплаты,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ДокументОплаты, НЕОПРЕДЕЛЕНО)    КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ)                  КАК ДатаСобытия,
	|	ЕСТЬNULL(ИСФ.ЗаписьДополнительногоЛиста, ЛОЖЬ)                  КАК ЗаписьДополнительногоЛиста,
	|	ЕСТЬNULL(ИСФ.КорректируемыйПериод, ДАТАВРЕМЯ(1,1,1))            КАК КорректируемыйПериод,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ДоговорКонтрагента, НЕОПРЕДЕЛЕНО) КАК ДоговорКонтрагента,
	|	НДСПредъявленный.ИсправленныйСчетФактура                        КАК ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС.Ставка > 0
	|			ТОГДА НДСПредъявленный.НДС * 100 / НДСПредъявленный.СтавкаНДС.Ставка
	|		ИНАЧЕ НДСПредъявленный.СуммаБезНДС
	|	КОНЕЦ                                                           КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                                            КАК НДС,
	|	НДСПредъявленный.НДСУпр                                         КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеНДСкВычету) КАК ХозяйственнаяОперация,
	|	""""                                                            КАК НомерДокументаОплаты,
	|	""""                                                            КАК ДатаДокументаОплаты,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|			ТОГДА ""20""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|			ТОГДА ""19""
	|		ИНАЧЕ """"
	|	КОНЕЦ                                                           КАК КодВидаОперации,
	|	НДСПредъявленный.РегламентнаяОперация                           КАК РегламентнаяОперация,
	|	НДСПредъявленный.Сторно                                         КАК Сторно,
	|	НДСПредъявленный.РеализацияЭкспорт                              КАК ДокументОтгрузки,
	|	НДСПредъявленный.ВидДеятельностиНДС                             КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.КорНаправлениеДеятельности                     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                    КАК ПродавцомВыступаетОрганизация
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокПоНДСПредъявленный
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		НДСПредъявленный.Организация = СчетаФактурыДокументы.Организация
	|		И НДСПредъявленный.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ИСФ
	|	ПО
	|		НДСПредъявленный.Организация = ИСФ.Организация
	|		И НДСПредъявленный.СчетФактура = ИСФ.СчетФактура
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ИСФ.ИсправленныйСчетФактура
	|	
	|ГДЕ
	|	НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Записи по событиям ПодтвержденаСтавка0 и НеПодтвержденаСтавка0
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет                                      КАК Приоритет,
	|	НДСПредъявленный.Период                                         КАК Период,
	|	НДСПредъявленный.Регистратор                                    КАК Регистратор,
	|	НДСПредъявленный.Организация                                    КАК Организация,
	|	НДСПредъявленный.Поставщик                                      КАК Поставщик,
	|	НДСПредъявленный.СчетФактура                                    КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                    КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС.ПеречислениеСтавкаНДС                КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                                КАК ДатаОплаты,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ДокументОплаты, НЕОПРЕДЕЛЕНО)    КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0)
	|	КОНЕЦ                                                           КАК Событие,
	|	КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ)                  КАК ДатаСобытия,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0)
	|			И КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ) > ЕСТЬNULL(КОНЕЦПЕРИОДА(ДанныеПервичныхДокументов.ДатаРегистратора, КВАРТАЛ), ДАТАВРЕМЯ(2100,1,1))
	|			И НДСПредъявленный.Период < ДАТАВРЕМЯ(2024, 1, 1)
	|			ТОГДА ИСТИНА
	|		КОГДА КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ) > ЕСТЬNULL(КОНЕЦПЕРИОДА(ИСФ.КорректируемыйПериод, КВАРТАЛ), ДАТАВРЕМЯ(1,1,1))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ
	|			ЕСТЬNULL(ИСФ.ЗаписьДополнительногоЛиста, ЛОЖЬ)
	|	КОНЕЦ                                                           КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0)
	|			И КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ) > ЕСТЬNULL(КОНЕЦПЕРИОДА(ДанныеПервичныхДокументов.ДатаРегистратора, КВАРТАЛ), ДАТАВРЕМЯ(2100,1,1))
	|			И НДСПредъявленный.Период < ДАТАВРЕМЯ(2024, 1, 1)
	|			ТОГДА ДанныеПервичныхДокументов.ДатаРегистратора
	|		КОГДА КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ) > ЕСТЬNULL(КОНЕЦПЕРИОДА(ИСФ.КорректируемыйПериод, КВАРТАЛ), ДАТАВРЕМЯ(1,1,1))
	|			ТОГДА ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ
	|			ЕСТЬNULL(ИСФ.КорректируемыйПериод, ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ                                                            КАК КорректируемыйПериод,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ДоговорКонтрагента, НЕОПРЕДЕЛЕНО) КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(НДСПредъявленный.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.СуммаБезНДС                                     КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                                             КАК НДС,
	|	НДСПредъявленный.НДСУпр                                          КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеНДСкВычету) КАК ХозяйственнаяОперация,
	|	""""                                                            КАК НомерДокументаОплаты,
	|	""""                                                            КАК ДатаДокументаОплаты,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.ПовторныйВычет
	|			ТОГДА ""25""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|			ТОГДА ""20""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|			ТОГДА ""19""
	|		ИНАЧЕ """"
	|	КОНЕЦ                                                           КАК КодВидаОперации,
	|	НДСПредъявленный.РегламентнаяОперация                           КАК РегламентнаяОперация,
	|	НДСПредъявленный.Сторно                                         КАК Сторно,
	|	НДСПредъявленный.РеализацияЭкспорт                              КАК ДокументОтгрузки,
	|	НДСПредъявленный.ВидДеятельностиНДС                             КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.КорНаправлениеДеятельности                     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                    КАК ПродавцомВыступаетОрганизация
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		НДСПредъявленный.Организация = СчетаФактурыДокументы.Организация
	|		И НДСПредъявленный.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ИСФ
	|	ПО
	|		НДСПредъявленный.Организация = ИСФ.Организация
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ИСФ.ИсправленныйСчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО 
	|		ДанныеПервичныхДокументов.Организация = НДСПредъявленный.Организация
	|		И ДанныеПервичныхДокументов.Документ = НДСПредъявленный.РеализацияЭкспорт
	|ГДЕ
	|	НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НДСПредъявленный.Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0),
	|								ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0),
	|								ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету))
	|	И НДСПредъявленный.НДС > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Регистрация документов оплаты
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет                                      КАК Приоритет,
	|	НДСПредъявленный.Период                                         КАК Период,
	|	НДСПредъявленный.Регистратор                                    КАК Регистратор,
	|	НДСПредъявленный.Организация                                    КАК Организация,
	|	НДСПредъявленный.Поставщик                                      КАК Поставщик,
	|	НДСПредъявленный.СчетФактура                                    КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                    КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС.ПеречислениеСтавкаНДС                КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                                КАК ДатаОплаты,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ДокументОплаты, НЕОПРЕДЕЛЕНО)    КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0)
	|	КОНЕЦ                                                          КАК Событие,
	|	НДСПредъявленный.Период                                        КАК ДатаСобытия,
	|	ЕСТЬNULL(ИСФ.ЗаписьДополнительногоЛиста, ЛОЖЬ)                 КАК ЗаписьДополнительногоЛиста,
	|	ЕСТЬNULL(ИСФ.КорректируемыйПериод, ДАТАВРЕМЯ(1,1,1))           КАК КорректируемыйПериод,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ДоговорКонтрагента, НЕОПРЕДЕЛЕНО) КАК ДоговорКонтрагента,
	|	НДСПредъявленный.ИсправленныйСчетФактура                       КАК ИсправленныйСчетФактура,
	|	0                                                              КАК СуммаБезНДС,
	|	0                                                              КАК НДС,
	|	0                                                              КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеНДСкВычету) КАК ХозяйственнаяОперация,
	|	ДокументыОплатыГрафа7.НомерДокументаОплаты                      КАК НомерДокументаОплаты,
	|	ДокументыОплатыГрафа7.ДатаДокументаОплаты                       КАК ДатаДокументаОплаты,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|			ТОГДА ""20""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|			ТОГДА ""19""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|			ТОГДА ""06""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|			ТОГДА ""06""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|			ТОГДА ""06""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|			ТОГДА ""06""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентКомитент)
	|			ТОГДА ""06""
	|		ИНАЧЕ """"
	|	КОНЕЦ                                                           КАК КодВидаОперации,
	|	НДСПредъявленный.РегламентнаяОперация                           КАК РегламентнаяОперация,
	|	НДСПредъявленный.Сторно                                         КАК Сторно,
	|	НДСПредъявленный.РеализацияЭкспорт                              КАК ДокументОтгрузки,
	|	НДСПредъявленный.ВидДеятельностиНДС                             КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.КорНаправлениеДеятельности                     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                    КАК ПродавцомВыступаетОрганизация
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		НДСПредъявленный.Организация = СчетаФактурыДокументы.Организация
	|		И НДСПредъявленный.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыОплатыГрафа7 КАК ДокументыОплатыГрафа7
	|	ПО
	|		НДСПредъявленный.Организация = ДокументыОплатыГрафа7.Организация
	|		И НДСПредъявленный.СчетФактура = ДокументыОплатыГрафа7.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактуры КАК ИСФ
	|	ПО
	|		НДСПредъявленный.Организация = ИСФ.Организация
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ИСФ.ИсправленныйСчетФактура
	|
	|ГДЕ
	|	НЕ НДСПредъявленный.ПовторныйВычет
	|	И НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НДСПредъявленный.Событие В (
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету),
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0),
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0),
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету))
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПокупокПоНДСПредъявленный";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурам(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                          КАК Приоритет,
	|	ИсправленныеСчетаФактуры.Ссылка            КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ИсправленныеСчетаФактуры.ДатаПолучения < &НачалоПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ ИсправленныеСчетаФактуры.ДатаПолучения
	|	КОНЕЦ                                      КАК Период,
	|	НДСЗаписиКнигиПокупок.Организация          КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик            КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура          КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности          КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС            КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС         КАК СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты           КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты       КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие              КАК Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия          КАК ДатаСобытия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК ЗаписьДополнительногоЛиста,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА НДСЗаписиКнигиПокупок.Период
	|	КОНЕЦ) КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента      КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	-СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС)     КАК СуммаБезНДС,
	|	-СУММА(НДСЗаписиКнигиПокупок.НДС)             КАК НДС,
	|	-СУММА(НДСЗаписиКнигиПокупок.НДСУпр)          КАК НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты    КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты     КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации         КАК КодВидаОперации,
	|	ИСТИНА                                        КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки        КАК ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЛОЖЬ                                          КАК Сторно,
	|	НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация КАК ПродавцомВыступаетОрганизация
	|
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурам
	|ИЗ
	|	ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|	ПО
	|		НДСЗаписиКнигиПокупок.Организация = ИсправленныеСчетаФактуры.Организация
	|		И НДСЗаписиКнигиПокупок.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|		И НДСЗаписиКнигиПокупок.Период < &НачалоПериода
	|		И НЕ ТИПЗНАЧЕНИЯ(НДСЗаписиКнигиПокупок.Регистратор) В (ТИП(Документ.СчетФактураВыданныйАванс),
	|															   ТИП(Документ.СчетФактураПолученныйАванс))
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|	И НЕ ИсправленныеСчетаФактуры.КорректировкаДоВводаОстатков
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсправленныеСчетаФактуры.Ссылка,
	|	ВЫБОР
	|		КОГДА ИсправленныеСчетаФактуры.ДатаПолучения < &НачалоПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ ИсправленныеСчетаФактуры.ДатаПолучения
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСЗаписиКнигиПокупок.НДС) <> 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурам";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурамВыданнымНаАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                          КАК Приоритет,
	|	НДСЗаписиКнигиПокупок.Регистратор          КАК Регистратор,
	|	НДСЗаписиКнигиПокупок.Период               КАК Период,
	|	НДСЗаписиКнигиПокупок.Организация          КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик            КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура          КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности          КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС            КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС         КАК СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты           КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты       КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие              КАК Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия          КАК ДатаСобытия,
	|	МАКСИМУМ(НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста) КАК ЗаписьДополнительногоЛиста,
	|	МАКСИМУМ(НДСЗаписиКнигиПокупок.КорректируемыйПериод)       КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента      КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(НДСЗаписиКнигиПокупок.НДС)              КАК НДС,
	|	СУММА(НДСЗаписиКнигиПокупок.НДСУпр)           КАК НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты    КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты     КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации         КАК КодВидаОперации,
	|	ИСТИНА                                        КАК РегламентнаяОперация,
	|	ЛОЖЬ                                          КАК Сторно,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки        КАК ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация КАК ПродавцомВыступаетОрганизация
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурамВыданнымНаАванс
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка            КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период            КАК Период,
	|		НДСЗаписиКнигиПокупок.Организация          КАК Организация,
	|		НДСЗаписиКнигиПокупок.Поставщик            КАК Поставщик,
	|		НДСЗаписиКнигиПокупок.СчетФактура          КАК СчетФактура,
	|		НДСЗаписиКнигиПокупок.ВидЦенности          КАК ВидЦенности,
	|		НДСЗаписиКнигиПокупок.СтавкаНДС            КАК СтавкаНДС,
	|		НДСЗаписиКнигиПокупок.СчетУчетаНДС         КАК СчетУчетаНДС,
	|		НДСЗаписиКнигиПокупок.ДатаОплаты           КАК ДатаОплаты,
	|		НДСЗаписиКнигиПокупок.ДокументОплаты       КАК ДокументОплаты,
	|		НДСЗаписиКнигиПокупок.Событие              КАК Событие,
	|		НДСЗаписиКнигиПокупок.ДатаСобытия          КАК ДатаСобытия,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА НДСЗаписиКнигиПокупок.Период
	|		КОНЕЦ КАК КорректируемыйПериод,
	|		НДСЗаписиКнигиПокупок.ДоговорКонтрагента      КАК ДоговорКонтрагента,
	|		НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		-НДСЗаписиКнигиПокупок.СуммаБезНДС            КАК СуммаБезНДС,
	|		-НДСЗаписиКнигиПокупок.НДС                    КАК НДС,
	|		-НДСЗаписиКнигиПокупок.НДСУпр                 КАК НДСУпр,
	|		НДСЗаписиКнигиПокупок.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|		НДСЗаписиКнигиПокупок.НомерДокументаОплаты    КАК НомерДокументаОплаты,
	|		НДСЗаписиКнигиПокупок.ДатаДокументаОплаты     КАК ДатаДокументаОплаты,
	|		НДСЗаписиКнигиПокупок.КодВидаОперации         КАК КодВидаОперации,
	|		НДСЗаписиКнигиПокупок.ДокументОтгрузки        КАК ДокументОтгрузки,
	|		НДСЗаписиКнигиПокупок.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|		НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация КАК ПродавцомВыступаетОрганизация
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ПО
	|			НДСЗаписиКнигиПокупок.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСЗаписиКнигиПокупок.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСЗаписиКнигиПокупок.Период < &НачалоПериода
	|			И НДСЗаписиКнигиПокупок.Активность
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка            КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период            КАК Период,
	|		НДСЗаписиКнигиПокупок.Организация          КАК Организация,
	|		НДСЗаписиКнигиПокупок.Поставщик            КАК Поставщик,
	|		НДСЗаписиКнигиПокупок.СчетФактура          КАК СчетФактура,
	|		НДСЗаписиКнигиПокупок.ВидЦенности          КАК ВидЦенности,
	|		НДСЗаписиКнигиПокупок.СтавкаНДС            КАК СтавкаНДС,
	|		НДСЗаписиКнигиПокупок.СчетУчетаНДС         КАК СчетУчетаНДС,
	|		НДСЗаписиКнигиПокупок.ДатаОплаты           КАК ДатаОплаты,
	|		НДСЗаписиКнигиПокупок.ДокументОплаты       КАК ДокументОплаты,
	|		НДСЗаписиКнигиПокупок.Событие              КАК Событие,
	|		НДСЗаписиКнигиПокупок.ДатаСобытия          КАК ДатаСобытия,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА НДСЗаписиКнигиПокупок.Период
	|		КОНЕЦ КАК КорректируемыйПериод,
	|		НДСЗаписиКнигиПокупок.ДоговорКонтрагента      КАК ДоговорКонтрагента,
	|		НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		-НДСЗаписиКнигиПокупок.СуммаБезНДС            КАК СуммаБезНДС,
	|		-НДСЗаписиКнигиПокупок.НДС                    КАК НДС,
	|		-НДСЗаписиКнигиПокупок.НДСУпр                 КАК НДСУпр,
	|		НДСЗаписиКнигиПокупок.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|		НДСЗаписиКнигиПокупок.НомерДокументаОплаты    КАК НомерДокументаОплаты,
	|		НДСЗаписиКнигиПокупок.ДатаДокументаОплаты     КАК ДатаДокументаОплаты,
	|		НДСЗаписиКнигиПокупок.КодВидаОперации         КАК КодВидаОперации,
	|		НДСЗаписиКнигиПокупок.ДокументОтгрузки        КАК ДокументОтгрузки,
	|		НДСЗаписиКнигиПокупок.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|		НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация КАК ПродавцомВыступаетОрганизация
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ПО
	|			НДСЗаписиКнигиПокупок.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСЗаписиКнигиПокупок.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НЕ НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|			И НДСЗаписиКнигиПокупок.Активность) КАК НДСЗаписиКнигиПокупок
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС) <> 0 ИЛИ СУММА(НДСЗаписиКнигиПокупок.НДС) <> 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурамВыданнымНаАванс";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПокупокПоАвансуПолученному(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	2                                                       КАК Приоритет,
	|	НДСАвансыПолученныеЗачеты.Период                        КАК Период,
	|	НДСАвансыПолученныеЗачеты.Регистратор                   КАК Регистратор,
	|	НДСАвансыПолученныеЗачеты.Организация                   КАК Организация,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Ссылка.Контрагент, 
	|		ЕСТЬNULL(СчетаФактурыВыданныеАванс.Ссылка.Контрагент, НДСАвансыПолученныеЗачеты.Контрагент)) КАК Поставщик,
	|	НДСАвансыПолученныеЗачеты.ДокументОплаты                КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА НДСАвансыПолученныеЗачеты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.ВычетПриВозвратеАванса)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|		ИНАЧЕ  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|	КОНЕЦ                                                           КАК ВидЦенности,
	|	НДСАвансыПолученныеЗачеты.СтавкаНДС.ПеречислениеСтавкаНДС       КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                                                    КАК СчетУчетаНДС,
	|	НДСАвансыПолученныеЗачеты.Период                                КАК ДатаОплаты,
	|	НДСАвансыПолученныеЗачеты.ДокументОплаты                        КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	НДСАвансыПолученныеЗачеты.Период                                КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСАвансыПолученныеЗачеты.Исправление 
	|			И НАЧАЛОПЕРИОДА(НДСАвансыПолученныеЗачеты.Период, Квартал) > НАЧАЛОПЕРИОДА(НДСАвансыПолученныеЗачеты.ДатаЗачетаАванса, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСАвансыПолученныеЗачеты.Исправление 
	|			И НАЧАЛОПЕРИОДА(НДСАвансыПолученныеЗачеты.Период, Квартал) > НАЧАЛОПЕРИОДА(НДСАвансыПолученныеЗачеты.ДатаЗачетаАванса, Квартал)
	|			ТОГДА НДСАвансыПолученныеЗачеты.ДатаЗачетаАванса
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ                                                   КАК КорректируемыйПериод,
	|	НЕОПРЕДЕЛЕНО                                            КАК ДоговорКонтрагента,
	|	НДСАвансыПолученныеЗачеты.ИсправленныйСчетФактура       КАК ИсправленныйСчетФактура,
	|	НДСАвансыПолученныеЗачеты.СуммаБезНДС                   КАК СуммаБезНДС,
	|	НДСАвансыПолученныеЗачеты.НДС                           КАК НДС,
	|	НДСАвансыПолученныеЗачеты.НДСУпр                        КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	ВЫБОР 
	|		КОГДА НДСАвансыПолученныеЗачеты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.ВычетПриВозвратеАванса)
	|			ТОГДА РеквизитыДокументаЗачетаОплаты.Номер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                   КАК НомерДокументаОплаты,
	|	ВЫБОР 
	|		КОГДА НДСАвансыПолученныеЗачеты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.ВычетПриВозвратеАванса)
	|			ТОГДА РеквизитыДокументаЗачетаОплаты.Дата
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                   КАК ДатаДокументаОплаты,
	|	ВЫБОР 
	|		КОГДА &ВерсияКодовВидовОпераций >= 3
	|			И ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.Ссылка.КодВидаОперации, СчетаФактурыВыданныеАванс.Ссылка.КодВидаОперации) = ""26""
	|			ТОГДА ""26""
	|		ИНАЧЕ ""22""
	|	КОНЕЦ                                                   КАК КодВидаОперации,
	|	ИСТИНА                                                  КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                            КАК ДокументОтгрузки,
	|	НЕОПРЕДЕЛЕНО                                            КАК ВидДеятельностиНДС,
	|	НДСАвансыПолученныеЗачеты.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НДСАвансыПолученныеЗачеты.Сторно                        КАК Сторно,
	|	НЕОПРЕДЕЛЕНО                                            КАК ПродавцомВыступаетОрганизация
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокПоАвансамПолученным
	|ИЗ
	|	НДСАвансыПолученныеЗачеты КАК НДСАвансыПолученныеЗачеты
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыВыданныеАванс КАК СчетаФактурыВыданныеАванс
	|	ПО
	|		НДСАвансыПолученныеЗачеты.Организация = СчетаФактурыВыданныеАванс.Организация
	|		И НДСАвансыПолученныеЗачеты.ДокументОплаты = СчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(НДСАвансыПолученныеЗачеты.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА НДСАвансыПолученныеЗачеты.Контрагент = СчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактурыВыданныеАванс
	|	ПО
	|		НДСАвансыПолученныеЗачеты.Организация = ИсправленныеСчетаФактурыВыданныеАванс.Организация
	|		И НДСАвансыПолученныеЗачеты.ДокументОплаты = ИсправленныеСчетаФактурыВыданныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(НДСАвансыПолученныеЗачеты.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА НДСАвансыПолученныеЗачеты.Контрагент = ИсправленныеСчетаФактурыВыданныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументаОплаты
	|	ПО
	|		НДСАвансыПолученныеЗачеты.Организация = РеквизитыДокументаОплаты.Организация
	|		И НДСАвансыПолученныеЗачеты.ДокументОплаты = РеквизитыДокументаОплаты.Документ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументаЗачетаОплаты
	|	ПО
	|		НДСАвансыПолученныеЗачеты.Организация = РеквизитыДокументаЗачетаОплаты.Организация
	|		И НДСАвансыПолученныеЗачеты.ДокументЗачетаАванса = РеквизитыДокументаЗачетаОплаты.Документ
	|
	|ГДЕ
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыВыданныеАванс.НалогообложениеНДС, СчетаФактурыВыданныеАванс.НалогообложениеНДС) <>
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НДСАвансыПолученныеЗачеты.НДС <> 0
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВерсияКодовВидовОпераций", УчетНДСКлиентСервер.ВерсияКодовВидовОпераций(ПараметрыРасчета.КонецПериода));
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПокупокПоАвансамПолученным";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурамПолученнымНаАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                          КАК Приоритет,
	|	НДСЗаписиКнигиПокупок.Регистратор          КАК Регистратор,
	|	НДСЗаписиКнигиПокупок.Период               КАК Период,
	|	НДСЗаписиКнигиПокупок.Организация          КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик            КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура          КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности          КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС            КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС         КАК СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты           КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты       КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие              КАК Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия          КАК ДатаСобытия,
	|	МАКСИМУМ(НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста) КАК ЗаписьДополнительногоЛиста,
	|	МАКСИМУМ(НДСЗаписиКнигиПокупок.КорректируемыйПериод)       КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента      КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(НДСЗаписиКнигиПокупок.НДС)              КАК НДС,
	|	СУММА(НДСЗаписиКнигиПокупок.НДСУпр)           КАК НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты    КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты     КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации         КАК КодВидаОперации,
	|	ИСТИНА                                        КАК РегламентнаяОперация,
	|	ЛОЖЬ                                          КАК Сторно,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки        КАК ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация КАК ПродавцомВыступаетОрганизация
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурамПолученнымНаАванс
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка            КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период            КАК Период,
	|		НДСЗаписиКнигиПокупок.Организация          КАК Организация,
	|		НДСЗаписиКнигиПокупок.Поставщик            КАК Поставщик,
	|		НДСЗаписиКнигиПокупок.СчетФактура          КАК СчетФактура,
	|		НДСЗаписиКнигиПокупок.ВидЦенности          КАК ВидЦенности,
	|		НДСЗаписиКнигиПокупок.СтавкаНДС            КАК СтавкаНДС,
	|		НДСЗаписиКнигиПокупок.СчетУчетаНДС         КАК СчетУчетаНДС,
	|		НДСЗаписиКнигиПокупок.ДатаОплаты           КАК ДатаОплаты,
	|		НДСЗаписиКнигиПокупок.ДокументОплаты       КАК ДокументОплаты,
	|		НДСЗаписиКнигиПокупок.Событие              КАК Событие,
	|		НДСЗаписиКнигиПокупок.ДатаСобытия          КАК ДатаСобытия,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА НДСЗаписиКнигиПокупок.Период
	|		КОНЕЦ КАК КорректируемыйПериод,
	|		НДСЗаписиКнигиПокупок.ДоговорКонтрагента      КАК ДоговорКонтрагента,
	|		НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		-НДСЗаписиКнигиПокупок.СуммаБезНДС            КАК СуммаБезНДС,
	|		-НДСЗаписиКнигиПокупок.НДС                    КАК НДС,
	|		-НДСЗаписиКнигиПокупок.НДСУпр                 КАК НДСУпр,
	|		НДСЗаписиКнигиПокупок.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|		НДСЗаписиКнигиПокупок.НомерДокументаОплаты    КАК НомерДокументаОплаты,
	|		НДСЗаписиКнигиПокупок.ДатаДокументаОплаты     КАК ДатаДокументаОплаты,
	|		НДСЗаписиКнигиПокупок.КодВидаОперации         КАК КодВидаОперации,
	|		НДСЗаписиКнигиПокупок.ДокументОтгрузки        КАК ДокументОтгрузки,
	|		НДСЗаписиКнигиПокупок.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|		НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация КАК ПродавцомВыступаетОрганизация
	|	ИЗ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ПО
	|			НДСЗаписиКнигиПокупок.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСЗаписиКнигиПокупок.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСЗаписиКнигиПокупок.Период < &НачалоПериода
	|			И НДСЗаписиКнигиПокупок.Активность
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка            КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период            КАК Период,
	|		НДСЗаписиКнигиПокупок.Организация          КАК Организация,
	|		НДСЗаписиКнигиПокупок.Поставщик            КАК Поставщик,
	|		НДСЗаписиКнигиПокупок.СчетФактура          КАК СчетФактура,
	|		НДСЗаписиКнигиПокупок.ВидЦенности          КАК ВидЦенности,
	|		НДСЗаписиКнигиПокупок.СтавкаНДС            КАК СтавкаНДС,
	|		НДСЗаписиКнигиПокупок.СчетУчетаНДС         КАК СчетУчетаНДС,
	|		НДСЗаписиКнигиПокупок.ДатаОплаты           КАК ДатаОплаты,
	|		НДСЗаписиКнигиПокупок.ДокументОплаты       КАК ДокументОплаты,
	|		НДСЗаписиКнигиПокупок.Событие              КАК Событие,
	|		НДСЗаписиКнигиПокупок.ДатаСобытия          КАК ДатаСобытия,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА НДСЗаписиКнигиПокупок.Период
	|		КОНЕЦ КАК КорректируемыйПериод,
	|		НДСЗаписиКнигиПокупок.ДоговорКонтрагента      КАК ДоговорКонтрагента,
	|		НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		-НДСЗаписиКнигиПокупок.СуммаБезНДС            КАК СуммаБезНДС,
	|		-НДСЗаписиКнигиПокупок.НДС                    КАК НДС,
	|		-НДСЗаписиКнигиПокупок.НДСУпр                 КАК НДСУпр,
	|		НДСЗаписиКнигиПокупок.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|		НДСЗаписиКнигиПокупок.НомерДокументаОплаты    КАК НомерДокументаОплаты,
	|		НДСЗаписиКнигиПокупок.ДатаДокументаОплаты     КАК ДатаДокументаОплаты,
	|		НДСЗаписиКнигиПокупок.КодВидаОперации         КАК КодВидаОперации,
	|		НДСЗаписиКнигиПокупок.ДокументОтгрузки        КАК ДокументОтгрузки,
	|		НДСЗаписиКнигиПокупок.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|		НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация КАК ПродавцомВыступаетОрганизация
	|	ИЗ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ПО
	|			НДСЗаписиКнигиПокупок.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСЗаписиКнигиПокупок.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НЕ НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|			И НДСЗаписиКнигиПокупок.Активность) КАК НДСЗаписиКнигиПокупок
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС) <> 0 ИЛИ СУММА(НДСЗаписиКнигиПокупок.НДС) <> 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПокупокСторноПоИсправленнымСчетамФактурамПолученнымНаАванс";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПокупокПоАвансуВыданному(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	2                                                                    КАК Приоритет,
	|	НДСАвансыВыданныеЗачеты.Период                                       КАК Период,
	|	НДСАвансыВыданныеЗачеты.Регистратор                                  КАК Регистратор,
	|	НДСАвансыВыданныеЗачеты.Организация                                  КАК Организация,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка.Контрагент, 
	|		ЕСТЬNULL(СчетаФактурыПолученныеАванс.Ссылка.Контрагент, НДСАвансыВыданныеЗачеты.Контрагент)) КАК Поставщик,
	|	НДСАвансыВыданныеЗачеты.ДокументОплаты                               КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученныеНалоговыйАгент)  КАК ВидЦенности,
	|	НДСАвансыВыданныеЗачеты.СтавкаНДС.ПеречислениеСтавкаНДС              КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                                                         КАК СчетУчетаНДС,
	|	НДСАвансыВыданныеЗачеты.Период                                       КАК ДатаОплаты,
	|	НДСАвансыВыданныеЗачеты.ДокументОплаты                               КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)      КАК Событие,
	|	НДСАвансыВыданныеЗачеты.Период                                       КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСАвансыВыданныеЗачеты.Исправление 
	|			И НАЧАЛОПЕРИОДА(НДСАвансыВыданныеЗачеты.Период, Квартал) > НАЧАЛОПЕРИОДА(НДСАвансыВыданныеЗачеты.ДатаЗачетаАванса, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСАвансыВыданныеЗачеты.Исправление 
	|			И НАЧАЛОПЕРИОДА(НДСАвансыВыданныеЗачеты.Период, Квартал) > НАЧАЛОПЕРИОДА(НДСАвансыВыданныеЗачеты.ДатаЗачетаАванса, Квартал)
	|			ТОГДА НДСАвансыВыданныеЗачеты.ДатаЗачетаАванса
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ                                                                КАК КорректируемыйПериод,
	|	НЕОПРЕДЕЛЕНО                                                         КАК ДоговорКонтрагента,
	|	НДСАвансыВыданныеЗачеты.ИсправленныйСчетФактура                      КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданныеЗачеты.СуммаБезНДС                                  КАК СуммаБезНДС,
	|	НДСАвансыВыданныеЗачеты.НДС                                          КАК НДС,
	|	НДСАвансыВыданныеЗачеты.НДСУпр                                       КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССВыданногоАванса) КАК ХозяйственнаяОперация,
	|	ВЫБОР 
	|		КОГДА НДСАвансыВыданныеЗачеты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.ВычетПриВозвратеАванса)
	|			ТОГДА РеквизитыДокументаЗачетаОплаты.Номер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                 КАК НомерДокументаОплаты,
	|	ВЫБОР 
	|		КОГДА НДСАвансыВыданныеЗачеты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСАвансы.ВычетПриВозвратеАванса)
	|			ТОГДА РеквизитыДокументаЗачетаОплаты.Дата
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                 КАК ДатаДокументаОплаты,
	|	""43""                                                                КАК КодВидаОперации,
	|	ИСТИНА                                                                КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                                          КАК ДокументОтгрузки,
	|	НЕОПРЕДЕЛЕНО                                                          КАК ВидДеятельностиНДС,
	|	НДСАвансыВыданныеЗачеты.НаправлениеДеятельности                       КАК НаправлениеДеятельности,
	|	НДСАвансыВыданныеЗачеты.Сторно                                        КАК Сторно,
	|	НЕОПРЕДЕЛЕНО                                                          КАК ПродавцомВыступаетОрганизация
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокПоАвансамВыданным
	|ИЗ
	|	НДСАвансыВыданныеЗачеты КАК НДСАвансыВыданныеЗачеты
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыПолученныеАванс КАК СчетаФактурыПолученныеАванс
	|	ПО 
	|		НДСАвансыВыданныеЗачеты.Организация = СчетаФактурыПолученныеАванс.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = СчетаФактурыПолученныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(НДСАвансыВыданныеЗачеты.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА НДСАвансыВыданныеЗачеты.Контрагент = СчетаФактурыПолученныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактурыПолученныеАванс
	|	ПО 
	|		НДСАвансыВыданныеЗачеты.Организация = ИсправленныеСчетаФактурыПолученныеАванс.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(НДСАвансыВыданныеЗачеты.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА НДСАвансыВыданныеЗачеты.Контрагент = ИсправленныеСчетаФактурыПолученныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументаОплаты
	|	ПО
	|		НДСАвансыВыданныеЗачеты.Организация = РеквизитыДокументаОплаты.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = РеквизитыДокументаОплаты.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументаЗачетаОплаты
	|	ПО
	|		НДСАвансыВыданныеЗачеты.Организация = РеквизитыДокументаЗачетаОплаты.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументЗачетаАванса = РеквизитыДокументаЗачетаОплаты.Документ
	|
	|ГДЕ
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС,
	|			СчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПокупокПоАвансамВыданным";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПокупокСохранение(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПокупок)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор
	|ИЗ
	|	%1 КАК НДСЗаписиКнигиПокупок";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицНДСЗаписиКнигиПокупок Цикл
		МассивТекстовРегистраторыЗапись.Добавить(СтрШаблон(ШаблонЗапроса, ИмяТаблицыЗаписей));
	КонецЦикла;
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	ТекстЗапросаСохранение =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ
	|
	|%ТекстРегистраторыЗапись
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.НДС,
	|	НДСЗаписиКнигиПокупок.НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.Сторно,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокСохранение
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО
	|		НДСЗаписиКнигиПокупок.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		НДСЗаписиКнигиПокупок.Организация = Задания.Организация
	|		И НДСЗаписиКнигиПокупок.СчетФактура = Задания.СчетФактура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК ЗаданияПоРегистратору
	|	ПО
	|		НДСЗаписиКнигиПокупок.Организация = ЗаданияПоРегистратору.Организация
	|		И НДСЗаписиКнигиПокупок.Регистратор = ЗаданияПоРегистратору.СчетФактура 
	|
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период < &НачалоПериода
	|		ИЛИ НДСЗаписиКнигиПокупок.Период > &КонецПериода
	|		ИЛИ НЕ НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|		ИЛИ Задания.СчетФактура ЕСТЬ NULL 
	|			И ЗаданияПоРегистратору.СчетФактура ЕСТЬ NULL
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапросаСохранение, "%ТекстРегистраторыЗапись", ТекстРегистраторыЗапись);
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПокупокСохранение";
	
КонецФункции

Процедура ЗаписатьНДСЗаписиКнигиПокупок(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПокупок)
	
	МассивТекстовДанных = Новый Массив;
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.Приоритет,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.НДС,
	|	НДСЗаписиКнигиПокупок.НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.Сторно,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.ПродавцомВыступаетОрганизация
	|ИЗ
	|	%1 КАК НДСЗаписиКнигиПокупок
	|";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицНДСЗаписиКнигиПокупок Цикл
		МассивТекстовДанных.Добавить(СтрШаблон(ШаблонЗапроса, ИмяТаблицыЗаписей));
	КонецЦикла;
	ТекстДанныеДляЗаписи = СтрСоединить(МассивТекстовДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		ТекстДанныеДляЗаписи
		+ "
		|
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор,
		|	Период,
		|	Приоритет
		|
		|ИТОГИ ПО
		|	Регистратор
		|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьНДСЗаписиКнигиПокупок(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПокупок)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор
	|ИЗ
	|	%1 КАК НДСЗаписиКнигиПокупок";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицНДСЗаписиКнигиПокупок Цикл
		МассивТекстовРегистраторыЗапись.Добавить(СтрШаблон(ШаблонЗапроса, ИмяТаблицыЗаписей));
	КонецЦикла;
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	ТекстУстаревшиеРегистраторы = 
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ
	|
	|%ТекстРегистраторыЗапись
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|//////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПокупок КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО
	|		УстаревшиеРегистраторы.Регистратор = РегистраторыЗапись.Регистратор
	|
	|ГДЕ
	|	РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстУстаревшиеРегистраторы, "%ТекстРегистраторыЗапись", ТекстРегистраторыЗапись);
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ФормированиеДвиженияНДСЗаписиКнигиПродаж

Процедура СформироватьНДСЗаписиКнигиПродаж(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыНДСЗаписиКнигиПродаж(ПараметрыРасчета);
	
	ИменаТаблицНДСЗаписиКнигиПродаж = Новый Массив;
	ИменаТаблицНДСЗаписиКнигиПродаж.Добавить(РассчитатьНДСЗаписиКнигиПродажСторно(ПараметрыРасчета));
	ИменаТаблицНДСЗаписиКнигиПродаж.Добавить(РассчитатьНДСЗаписиКнигиПродажПоНДСПредъявленный(ПараметрыРасчета));
	ИменаТаблицНДСЗаписиКнигиПродаж.Добавить(РассчитатьНДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурам(ПараметрыРасчета));
	Если ПараметрыРасчета.РасчетАвансовПолученных Тогда
		ИменаТаблицНДСЗаписиКнигиПродаж.Добавить(РассчитатьНДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурамВыданнымНаАванс(ПараметрыРасчета));
	КонецЕсли;
	Если ПараметрыРасчета.РасчетАвансовВыданных Тогда
		ИменаТаблицНДСЗаписиКнигиПродаж.Добавить(РассчитатьНДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурамПолученнымНаАванс(ПараметрыРасчета));
		ИменаТаблицНДСЗаписиКнигиПродаж.Добавить(РассчитатьНДСЗаписиКнигиПродажПоАвансуВыданному(ПараметрыРасчета));
	КонецЕсли;
	ИменаТаблицНДСЗаписиКнигиПродаж.Добавить(РассчитатьНДСЗаписиКнигиПродажОплатыСФ(ПараметрыРасчета));
	
	ИменаТаблицНДСЗаписиКнигиПродаж.Добавить(РассчитатьНДСЗаписиКнигиПродажСохранение(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПродаж));
	
	ЗаписатьНДСЗаписиКнигиПродаж(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПродаж);
	ОчиститьНДСЗаписиКнигиПродаж(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПродаж);
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыНДСЗаписиКнигиПродаж(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Период КАК Период,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ТекущиеРегистраторыНДСЗаписиКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО НДСЗаписиКнигиПродаж.Организация = Задания.Организация
	|			И НДСЗаписиКнигиПродаж.СчетФактура = Задания.СчетФактура
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция РассчитатьНДСЗаписиКнигиПродажСторно(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ДокументыСторноРегистратор.Ссылка,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.Ссылка, 
	|				ДокументыСторноИсправленныйСчетФактура.Ссылка)) КАК Ссылка,
	|	ЕСТЬNULL(ДокументыСторноРегистратор.Период,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.Период, 
	|				ДокументыСторноИсправленныйСчетФактура.Период)) КАК Период,
	|	ЕСТЬNULL(ДокументыСторноРегистратор.СторнируемыйДокумент,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.СторнируемыйДокумент, 
	|				ДокументыСторноИсправленныйСчетФактура.СторнируемыйДокумент)) КАК СторнируемыйДокумент,
	|	ЕСТЬNULL(ДокументыСторноРегистратор.ДатаИсправляемогоДокумента,
	|		ЕСТЬNULL(ДокументыСторноСчетФактура.ДатаИсправляемогоДокумента, 
	|				ДокументыСторноИсправленныйСчетФактура.ДатаИсправляемогоДокумента)) КАК ДатаИсправляемогоДокумента,
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажОтборСторно
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		НДСЗаписиКнигиПродаж.Организация = Задания.Организация
	|		И НДСЗаписиКнигиПродаж.СчетФактура = Задания.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноРегистратор
	|	ПО
	|		НДСЗаписиКнигиПродаж.Регистратор = ДокументыСторноРегистратор.СторнируемыйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноСчетФактура
	|	ПО
	|		НДСЗаписиКнигиПродаж.СчетФактура = ДокументыСторноСчетФактура.СторнируемыйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыСторно КАК ДокументыСторноИсправленныйСчетФактура
	|	ПО
	|		НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура = ДокументыСторноИсправленныйСчетФактура.СторнируемыйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК ПрошлыеСторноРегистратора
	|	ПО
	|		НДСЗаписиКнигиПродаж.Регистратор = ПрошлыеСторноРегистратора.СторнируемыйДокумент
	|		И ПрошлыеСторноРегистратора.СторноИсправление
	|		И НЕ ПрошлыеСторноРегистратора.ДополнительнаяЗапись
	|		И ПрошлыеСторноРегистратора.Проведен
	|		И ПрошлыеСторноРегистратора.ДатаДокументаИБ < &НачалоПериода
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК ПрошлыеСторноСчетаФактуры
	|	ПО
	|		НДСЗаписиКнигиПродаж.СчетФактура = ПрошлыеСторноСчетаФактуры.СторнируемыйДокумент
	|		И ПрошлыеСторноСчетаФактуры.СторноИсправление
	|		И НЕ ПрошлыеСторноСчетаФактуры.ДополнительнаяЗапись
	|		И ПрошлыеСторноСчетаФактуры.Проведен
	|		И ПрошлыеСторноСчетаФактуры.ДатаДокументаИБ < &НачалоПериода
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК ПрошлыеСторноИсправительногоСчетаФактуры
	|	ПО
	|		НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура = ПрошлыеСторноИсправительногоСчетаФактуры.СторнируемыйДокумент
	|		И ПрошлыеСторноИсправительногоСчетаФактуры.СторноИсправление
	|		И НЕ ПрошлыеСторноИсправительногоСчетаФактуры.ДополнительнаяЗапись
	|		И ПрошлыеСторноИсправительногоСчетаФактуры.Проведен
	|		И ПрошлыеСторноИсправительногоСчетаФактуры.ДатаДокументаИБ < &НачалоПериода
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период < &НачалоПериода 
	|	И НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|	И НЕ НДСЗаписиКнигиПродаж.Сторно
	|	И НЕ (ДокументыСторноРегистратор.СторнируемыйДокумент ЕСТЬ NULL
	|		И ДокументыСторноСчетФактура.СторнируемыйДокумент ЕСТЬ NULL
	|		И ДокументыСторноИсправленныйСчетФактура.СторнируемыйДокумент ЕСТЬ NULL)
	|	И ПрошлыеСторноРегистратора.Ссылка ЕСТЬ NULL
	|	И ПрошлыеСторноСчетаФактуры.Ссылка ЕСТЬ NULL
	|	И ПрошлыеСторноИсправительногоСчетаФактуры.Ссылка ЕСТЬ NULL
	|;
	|
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0                                               КАК Приоритет,
	|	НДСЗаписиКнигиПродажОтборСторно.Период          КАК Период,
	|	НДСЗаписиКнигиПродажОтборСторно.Ссылка          КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация                КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель                 КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура                КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности                КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты                 КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты             КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                    КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия                КАК ДатаСобытия,
	|	ВЫБОР 
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродажОтборСторно.Период, КВАРТАЛ) > НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, КВАРТАЛ)
	|			И НЕ НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста 
	|	КОНЕЦ                                           КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР 
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродажОтборСторно.Период, КВАРТАЛ) > НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, КВАРТАЛ)
	|			И НДСЗаписиКнигиПродаж.КорректируемыйПериод = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.КорректируемыйПериод  
	|	КОНЕЦ                                           КАК КорректируемыйПериод,
	|	ВЫБОР 
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродажОтборСторно.Период, КВАРТАЛ) > НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, КВАРТАЛ)
	|			И  НЕ НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста  
	|	КОНЕЦ                                           КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента         КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление                КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДС               КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДС                       КАК НДС,
	|	-НДСЗаписиКнигиПродаж.НДСУпр                    КАК НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты       КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты        КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации            КАК КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация       КАК РегламентнаяОперация,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор = НДСЗаписиКнигиПродажОтборСторно.СторнируемыйДокумент
	|			ТОГДА ИСТИНА 
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Сторно,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности    КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажСторно
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПродажОтборСторно КАК НДСЗаписиКнигиПродажОтборСторно
	|	ПО
	|		НДСЗаписиКнигиПродаж.Регистратор = НДСЗаписиКнигиПродажОтборСторно.Регистратор
	|		И НДСЗаписиКнигиПродаж.Организация = НДСЗаписиКнигиПродажОтборСторно.Организация
	|		И НДСЗаписиКнигиПродаж.СчетФактура = НДСЗаписиКнигиПродажОтборСторно.СчетФактура
	|
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|	И НЕ НДСЗаписиКнигиПродаж.Сторно
	|	И НДСЗаписиКнигиПродаж.Период < &НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСЗаписиКнигиПродажОтборСторно
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПродажСторно";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПродажПоНДСПредъявленный(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                                            КАК Приоритет,
	|	НДСПредъявленный.Период                                      КАК Период,
	|	НДСПредъявленный.Регистратор                                 КАК Регистратор,
	|	НДСПредъявленный.Организация                                 КАК Организация,
	|	НДСПредъявленный.Поставщик                                   КАК Покупатель,
	|	НДСПредъявленный.СчетФактура                                 КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                 КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС.ПеречислениеСтавкаНДС             КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО                                                 КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	НДСПредъявленный.Период                                      КАК ДатаСобытия,
	|	ЛОЖЬ                                                         КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК КорректируемыйПериод,
	|	НЕОПРЕДЕЛЕНО                                                 КАК ДоговорКонтрагента,
	|	ЛОЖЬ                                                         КАК СторнирующаяЗаписьДопЛиста,
	|	НДСПредъявленный.ИсправленныйСчетФактура                     КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ                                                         КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаСчетаФактурыКомиссионера,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0
	|				И НДСПредъявленный.СтавкаНДС.Ставка > 0
	|			ТОГДА НДСПредъявленный.НДС * 100 / НДСПредъявленный.СтавкаНДС.Ставка
	|		ИНАЧЕ НДСПредъявленный.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                                         КАК НДС,
	|	НДСПредъявленный.НДСУпр                                      КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)    КАК ХозяйственнаяОперация,
	|	""""                                                         КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаДокументаОплаты,
	|	""21""                                                       КАК КодВидаОперации,
	|	ИСТИНА                                                       КАК РегламентнаяОперация,
	|	НДСПредъявленный.Сторно                                      КАК Сторно,
	|	НДСПредъявленный.ВидДеятельностиНДС                          КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.НаправлениеДеятельности                     КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажПоНДСПредъявленный
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПодВидДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1                                                            КАК Приоритет,
	|	НДСПредъявленный.Период                                      КАК Период,
	|	НДСПредъявленный.Регистратор                                 КАК Регистратор,
	|	НДСПредъявленный.Организация                                 КАК Организация,
	|	НДСПредъявленный.Поставщик                                   КАК Покупатель,
	|	НДСПредъявленный.СчетФактура                                 КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                 КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС.ПеречислениеСтавкаНДС             КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО                                                 КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(СчетаФактурыДокументы.ДатаЗаписиКнигиПродаж, КВАРТАЛ) < НДСПредъявленный.Период
	|			ТОГДА СчетаФактурыДокументы.ДатаЗаписиКнигиПродаж
	|		ИНАЧЕ
	|			НДСПредъявленный.Период
	|	КОНЕЦ                                                        КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(СчетаФактурыДокументы.ДатаЗаписиКнигиПродаж, КВАРТАЛ) < НДСПредъявленный.Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                                        КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(СчетаФактурыДокументы.ДатаЗаписиКнигиПродаж, КВАРТАЛ) < НДСПредъявленный.Период
	|			ТОГДА СчетаФактурыДокументы.ДатаЗаписиКнигиПродаж
	|		ИНАЧЕ
	|			ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ                                                        КАК КорректируемыйПериод,
	|	НЕОПРЕДЕЛЕНО                                                 КАК ДоговорКонтрагента,
	|	ЛОЖЬ                                                         КАК СторнирующаяЗаписьДопЛиста,
	|	НДСПредъявленный.ИсправленныйСчетФактура                     КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ                                                         КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаСчетаФактурыКомиссионера,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0
	|				И НДСПредъявленный.СтавкаНДС.РасчетнаяСтавка = ИСТИНА
	|			ТОГДА НДСПредъявленный.НДС * 100 / НДСПредъявленный.СтавкаНДС.Ставка
	|		ИНАЧЕ НДСПредъявленный.СуммаБезНДС
	|	КОНЕЦ                                                        КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                                         КАК НДС,
	|	НДСПредъявленный.НДСУпр                                      КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)    КАК ХозяйственнаяОперация,
	|	""""                                                         КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаДокументаОплаты,
	|	СчетаФактурыДокументы.КодВидаОперацииНаУменьшение            КАК КодВидаОперации,
	|	ИСТИНА                                                       КАК РегламентнаяОперация,
	|	НДСПредъявленный.Сторно                                      КАК Сторно,
	|	НДСПредъявленный.ВидДеятельностиНДС                          КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.НаправлениеДеятельности                     КАК НаправлениеДеятельности
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПоКСФ КАК НДСПредъявленный
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		НДСПредъявленный.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|		И НДСПредъявленный.Организация = СчетаФактурыДокументы.Организация
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПродажПоНДСПредъявленный";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурам(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                           КАК Приоритет,
	|	ИсправленныеСчетаФактуры.Ссылка             КАК Регистратор,
	|	ИсправленныеСчетаФактуры.ДатаИсправления    КАК Период,
	|	НДСЗаписиКнигиПродаж.Организация            КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель             КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура            КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности            КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС              КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты             КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты         КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия            КАК ДатаСобытия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)  КАК ЗаписьДополнительногоЛиста,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ) КАК КорректируемыйПериод,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)  КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	ИСТИНА                                            КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-СУММА(НДСЗаписиКнигиПродаж.СуммаБезНДС)          КАК СуммаБезНДС,
	|	-СУММА(НДСЗаписиКнигиПродаж.НДС)                  КАК НДС,
	|	-СУММА(НДСЗаписиКнигиПродаж.НДСУпр)               КАК НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|	ИСТИНА                                            КАК РегламентнаяОперация,
	|	ЛОЖЬ                                              КАК Сторно,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурам
	|ИЗ
	|	ИсправленныеСчетаФактуры КАК ИсправленныеСчетаФактуры
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|	ПО
	|		НДСЗаписиКнигиПродаж.Организация = ИсправленныеСчетаФактуры.Организация
	|		И НДСЗаписиКнигиПродаж.СчетФактура = ИсправленныеСчетаФактуры.СчетФактура
	|		И НДСЗаписиКнигиПродаж.Период < &НачалоПериода
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК КорректировкаПоСогласованиюСторон
	|	ПО
	|		ИсправленныеСчетаФактуры.СчетФактура = КорректировкаПоСогласованиюСторон.Ссылка
	|		И ИсправленныеСчетаФактуры.Организация = КорректировкаПоСогласованиюСторон.Организация
	|		И КорректировкаПоСогласованиюСторон.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
	|	
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсправленныеСчетаФактуры.Ссылка,
	|	ИсправленныеСчетаФактуры.ДатаИсправления,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСЗаписиКнигиПродаж.НДС) <> 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурам";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурамВыданнымНаАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                           КАК Приоритет,
	|	НДСЗаписиКнигиПродаж.Регистратор            КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Период                 КАК Период,
	|	НДСЗаписиКнигиПродаж.Организация            КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель             КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура            КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности            КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС              КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты             КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты         КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия            КАК ДатаСобытия,
	|	МАКСИМУМ(НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста) КАК ЗаписьДополнительногоЛиста,
	|	МАКСИМУМ(НДСЗаписиКнигиПродаж.КорректируемыйПериод)       КАК КорректируемыйПериод,
	|	МАКСИМУМ(НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста) КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	ИСТИНА                                            КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	СУММА(НДСЗаписиКнигиПродаж.СуммаБезНДС)           КАК СуммаБезНДС,
	|	СУММА(НДСЗаписиКнигиПродаж.НДС)                   КАК НДС,
	|	СУММА(НДСЗаписиКнигиПродаж.НДСУпр)                КАК НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|	ИСТИНА                                            КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ЛОЖЬ                                              КАК Сторно
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурамВыданнымНаАванс
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка             КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период             КАК Период,
	|		НДСЗаписиКнигиПродаж.Организация            КАК Организация,
	|		НДСЗаписиКнигиПродаж.Покупатель             КАК Покупатель,
	|		НДСЗаписиКнигиПродаж.СчетФактура            КАК СчетФактура,
	|		НДСЗаписиКнигиПродаж.ВидЦенности            КАК ВидЦенности,
	|		НДСЗаписиКнигиПродаж.СтавкаНДС              КАК СтавкаНДС,
	|		НДСЗаписиКнигиПродаж.ДатаОплаты             КАК ДатаОплаты,
	|		НДСЗаписиКнигиПродаж.ДокументОплаты         КАК ДокументОплаты,
	|		НДСЗаписиКнигиПродаж.Событие                КАК Событие,
	|		НДСЗаписиКнигиПродаж.ДатаСобытия            КАК ДатаСобытия,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ  КАК ЗаписьДополнительногоЛиста,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА НДСЗаписиКнигиПродаж.Период
	|		КОНЕЦ КАК КорректируемыйПериод,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ  КАК СторнирующаяЗаписьДопЛиста,
	|		НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|		НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|		НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|		-НДСЗаписиКнигиПродаж.СуммаБезНДС                 КАК СуммаБезНДС,
	|		-НДСЗаписиКнигиПродаж.НДС                         КАК НДС,
	|		-НДСЗаписиКнигиПродаж.НДСУпр                      КАК НДСУпр,
	|		НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|		НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|		НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|		НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|		НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|		НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности
	|		
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ПО
	|			НДСЗаписиКнигиПродаж.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСЗаписиКнигиПродаж.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСЗаписиКнигиПродаж.Период < &НачалоПериода
	|			И НДСЗаписиКнигиПродаж.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка             КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период             КАК Период,
	|		НДСЗаписиКнигиПродаж.Организация            КАК Организация,
	|		НДСЗаписиКнигиПродаж.Покупатель             КАК Покупатель,
	|		НДСЗаписиКнигиПродаж.СчетФактура            КАК СчетФактура,
	|		НДСЗаписиКнигиПродаж.ВидЦенности            КАК ВидЦенности,
	|		НДСЗаписиКнигиПродаж.СтавкаНДС              КАК СтавкаНДС,
	|		НДСЗаписиКнигиПродаж.ДатаОплаты             КАК ДатаОплаты,
	|		НДСЗаписиКнигиПродаж.ДокументОплаты         КАК ДокументОплаты,
	|		НДСЗаписиКнигиПродаж.Событие                КАК Событие,
	|		НДСЗаписиКнигиПродаж.ДатаСобытия            КАК ДатаСобытия,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ  КАК ЗаписьДополнительногоЛиста,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА НДСЗаписиКнигиПродаж.Период
	|		КОНЕЦ КАК КорректируемыйПериод,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ  КАК СторнирующаяЗаписьДопЛиста,
	|		НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|		НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|		НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|		-НДСЗаписиКнигиПродаж.СуммаБезНДС                 КАК СуммаБезНДС,
	|		-НДСЗаписиКнигиПродаж.НДС                         КАК НДС,
	|		-НДСЗаписиКнигиПродаж.НДСУпр                      КАК НДСУпр,
	|		НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|		НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|		НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|		НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|		НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|		НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности
	|		
	|	ИЗ
	|		ИсправленныеСчетаФактурыВыданныеАванс КАК ИсправленныеСчетаФактуры
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ПО
	|			НДСЗаписиКнигиПродаж.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСЗаписиКнигиПродаж.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НЕ НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|			И НДСЗаписиКнигиПродаж.Активность) КАК НДСЗаписиКнигиПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСЗаписиКнигиПродаж.СуммаБезНДС) <> 0 ИЛИ СУММА(НДСЗаписиКнигиПродаж.НДС) <> 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурамВыданнымНаАванс";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурамПолученнымНаАванс(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                           КАК Приоритет,
	|	НДСЗаписиКнигиПродаж.Регистратор            КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Период                 КАК Период,
	|	НДСЗаписиКнигиПродаж.Организация            КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель             КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура            КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности            КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС              КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты             КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты         КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия            КАК ДатаСобытия,
	|	МАКСИМУМ(НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста) КАК ЗаписьДополнительногоЛиста,
	|	МАКСИМУМ(НДСЗаписиКнигиПродаж.КорректируемыйПериод)       КАК КорректируемыйПериод,
	|	МАКСИМУМ(НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста) КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	ИСТИНА                                            КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	СУММА(НДСЗаписиКнигиПродаж.СуммаБезНДС)           КАК СуммаБезНДС,
	|	СУММА(НДСЗаписиКнигиПродаж.НДС)                   КАК НДС,
	|	СУММА(НДСЗаписиКнигиПродаж.НДСУпр)                КАК НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|	ИСТИНА                                            КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ЛОЖЬ                                              КАК Сторно
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурамПолученнымНаАванс
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка             КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период             КАК Период,
	|		НДСЗаписиКнигиПродаж.Организация            КАК Организация,
	|		НДСЗаписиКнигиПродаж.Покупатель             КАК Покупатель,
	|		НДСЗаписиКнигиПродаж.СчетФактура            КАК СчетФактура,
	|		НДСЗаписиКнигиПродаж.ВидЦенности            КАК ВидЦенности,
	|		НДСЗаписиКнигиПродаж.СтавкаНДС              КАК СтавкаНДС,
	|		НДСЗаписиКнигиПродаж.ДатаОплаты             КАК ДатаОплаты,
	|		НДСЗаписиКнигиПродаж.ДокументОплаты         КАК ДокументОплаты,
	|		НДСЗаписиКнигиПродаж.Событие                КАК Событие,
	|		НДСЗаписиКнигиПродаж.ДатаСобытия            КАК ДатаСобытия,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ  КАК ЗаписьДополнительногоЛиста,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА НДСЗаписиКнигиПродаж.Период
	|		КОНЕЦ КАК КорректируемыйПериод,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ  КАК СторнирующаяЗаписьДопЛиста,
	|		НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|		НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|		НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|		-НДСЗаписиКнигиПродаж.СуммаБезНДС                 КАК СуммаБезНДС,
	|		-НДСЗаписиКнигиПродаж.НДС                         КАК НДС,
	|		-НДСЗаписиКнигиПродаж.НДСУпр                      КАК НДСУпр,
	|		НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|		НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|		НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|		НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|		НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|		НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности
	|		
	|	ИЗ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактуры
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ПО
	|			НДСЗаписиКнигиПродаж.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСЗаписиКнигиПродаж.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСЗаписиКнигиПродаж.Период < &НачалоПериода
	|			И НДСЗаписиКнигиПродаж.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсправленныеСчетаФактуры.Ссылка             КАК Регистратор,
	|		ИсправленныеСчетаФактуры.Период             КАК Период,
	|		НДСЗаписиКнигиПродаж.Организация            КАК Организация,
	|		НДСЗаписиКнигиПродаж.Покупатель             КАК Покупатель,
	|		НДСЗаписиКнигиПродаж.СчетФактура            КАК СчетФактура,
	|		НДСЗаписиКнигиПродаж.ВидЦенности            КАК ВидЦенности,
	|		НДСЗаписиКнигиПродаж.СтавкаНДС              КАК СтавкаНДС,
	|		НДСЗаписиКнигиПродаж.ДатаОплаты             КАК ДатаОплаты,
	|		НДСЗаписиКнигиПродаж.ДокументОплаты         КАК ДокументОплаты,
	|		НДСЗаписиКнигиПродаж.Событие                КАК Событие,
	|		НДСЗаписиКнигиПродаж.ДатаСобытия            КАК ДатаСобытия,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ  КАК ЗаписьДополнительногоЛиста,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА НДСЗаписиКнигиПродаж.Период
	|		КОНЕЦ КАК КорректируемыйПериод,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА ИСТИНА
	|			КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|					НАЧАЛОПЕРИОДА(ИсправленныеСчетаФактуры.Период, Квартал)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ  КАК СторнирующаяЗаписьДопЛиста,
	|		НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|		НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|		НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|		-НДСЗаписиКнигиПродаж.СуммаБезНДС                 КАК СуммаБезНДС,
	|		-НДСЗаписиКнигиПродаж.НДС                         КАК НДС,
	|		-НДСЗаписиКнигиПродаж.НДСУпр                      КАК НДСУпр,
	|		НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|		НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|		НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|		НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|		НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|		НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности
	|		
	|	ИЗ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактуры
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ПО
	|			НДСЗаписиКнигиПродаж.Организация = ИсправленныеСчетаФактуры.Организация
	|			И НДСЗаписиКнигиПродаж.СчетФактура = ИсправленныеСчетаФактуры.ДокументОплаты
	|			И НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура <> ИсправленныеСчетаФактуры.ИсправленныйСчетФактура
	|			И НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|			И НЕ НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|			И НДСЗаписиКнигиПродаж.Активность) КАК НДСЗаписиКнигиПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСЗаписиКнигиПродаж.СуммаБезНДС) <> 0 ИЛИ СУММА(НДСЗаписиКнигиПродаж.НДС) <> 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПродажСторноПоИсправленнымСчетамФактурамПолученнымНаАванс";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПродажПоАвансуВыданному(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1                                                                             КАК Приоритет,
	|	НДСАвансыВыданныеЗачеты.Период                                                КАК Период,
	|	НДСАвансыВыданныеЗачеты.Регистратор                                           КАК Регистратор,
	|	НДСАвансыВыданныеЗачеты.Организация                                           КАК Организация,
	|	ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка.Контрагент, 
	|		ЕСТЬNULL(СчетаФактурыПолученныеАванс.Ссылка.Контрагент,
	|			НДСАвансыВыданныеЗачеты.Контрагент))                                  КАК Покупатель,
	|	НДСАвансыВыданныеЗачеты.ДокументОплаты                                        КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС,
	|						СчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|	КОНЕЦ                                                                         КАК ВидЦенности,
	|	НДСАвансыВыданныеЗачеты.СтавкаНДС.ПеречислениеСтавкаНДС                       КАК СтавкаНДС,
	|	РеквизитыДокументаОплаты.Дата                                                 КАК ДатаОплаты,
	|	НДСАвансыВыданныеЗачеты.ДокументОплаты                                        КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС)                  КАК Событие,
	|	НДСАвансыВыданныеЗачеты.Период                                                КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСАвансыВыданныеЗачеты.Исправление 
	|			И НАЧАЛОПЕРИОДА(НДСАвансыВыданныеЗачеты.Период, Квартал) > НАЧАЛОПЕРИОДА(НДСАвансыВыданныеЗачеты.ДатаЗачетаАванса, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСАвансыВыданныеЗачеты.Исправление 
	|			И НАЧАЛОПЕРИОДА(НДСАвансыВыданныеЗачеты.Период, Квартал) > НАЧАЛОПЕРИОДА(НДСАвансыВыданныеЗачеты.ДатаЗачетаАванса, Квартал)
	|			ТОГДА НДСАвансыВыданныеЗачеты.ДатаЗачетаАванса
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ                                                                         КАК КорректируемыйПериод,
	|	ЛОЖЬ                                                                          КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО                                                                  КАК ДоговорКонтрагента,
	|	НДСАвансыВыданныеЗачеты.ИсправленныйСчетФактура                               КАК ИсправленныйСчетФактура,
	|	НДСАвансыВыданныеЗачеты.Исправление                                           КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1)                                                              КАК ДатаСчетаФактурыКомиссионера,
	|	НДСАвансыВыданныеЗачеты.СуммаБезНДС                                           КАК СуммаБезНДС,
	|	НДСАвансыВыданныеЗачеты.НДС                                                   КАК НДС,
	|	НДСАвансыВыданныеЗачеты.НДСУпр                                                КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеНДССВыданногоАванса) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                                                   КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1)                                                               КАК ДатаДокументаОплаты,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ИсправленныеСчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС,
	|						СчетаФактурыПолученныеАванс.Ссылка.НалогообложениеНДС) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ""43""
	|		ИНАЧЕ ""21""
	|	КОНЕЦ                                                                          КАК КодВидаОперации,
	|	ИСТИНА                                                                         КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                                                   КАК ВидДеятельностиНДС,
	|	НДСАвансыВыданныеЗачеты.НаправлениеДеятельности                                КАК НаправлениеДеятельности,
	|	НДСАвансыВыданныеЗачеты.Сторно                                                 КАК Сторно
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажПоАвансамВыданным
	|ИЗ
	|	НДСАвансыВыданныеЗачеты КАК НДСАвансыВыданныеЗачеты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыПолученныеАванс КАК СчетаФактурыПолученныеАванс
	|	ПО
	|		НДСАвансыВыданныеЗачеты.Организация = СчетаФактурыПолученныеАванс.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = СчетаФактурыПолученныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(НДСАвансыВыданныеЗачеты.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА НДСАвансыВыданныеЗачеты.Контрагент = СчетаФактурыПолученныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправленныеСчетаФактурыПолученныеАванс КАК ИсправленныеСчетаФактурыПолученныеАванс
	|	ПО
	|		НДСАвансыВыданныеЗачеты.Организация = ИсправленныеСчетаФактурыПолученныеАванс.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = ИсправленныеСчетаФактурыПолученныеАванс.ДокументОплаты
	|		И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(НДСАвансыВыданныеЗачеты.ДокументОплаты) = ТИП(Документ.ВводОстатков)
	|					ТОГДА НДСАвансыВыданныеЗачеты.Контрагент = ИсправленныеСчетаФактурыПолученныеАванс.Контрагент
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументаОплаты
	|	ПО
	|		НДСАвансыВыданныеЗачеты.Организация = РеквизитыДокументаОплаты.Организация
	|		И НДСАвансыВыданныеЗачеты.ДокументОплаты = РеквизитыДокументаОплаты.Документ
	|ГДЕ
	|	НДСАвансыВыданныеЗачеты.НДС <> 0
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыРасчета.КонецПериода);
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПродажПоАвансамВыданным";
	
КонецФункции

Функция РассчитатьНДСЗаписиКнигиПродажОплатыСФ(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ПодтверждениеОплатыНДСВБюджет.НомерДокументаПеречисленияНалога КАК НомерДокументаОплаты,
	|	ПодтверждениеОплатыНДСВБюджет.ДатаДокументаПеречисленияНалога КАК ДатаДокументаОплаты,
	|	ПодтверждениеОплатыНДСВБюджет.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ВтДанныеОплат
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО ДанныеДокумента.Ссылка = Задания.СчетФактура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
	|		ПО ДанныеДокумента.Ссылка = ПодтверждениеОплатыНДСВБюджет.СчетФактура
	|ГДЕ
	|	ДанныеДокумента.ВидАгентскогоДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент), ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги))
	|	И ДанныеДокумента.Дата <= &ДатаНачалаОбязательногоПримененияЕНП
	|	И ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.Оплачено)
	|	И ДанныеДокумента.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.ДатаВходящегоДокумента, ДанныеПервичныхДокументов.Дата),
	|	ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.НомерВходящегоДокумента, ДанныеПервичныхДокументов.Номер),
	|	ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.ДатаВходящегоДокумента, ДанныеПервичныхДокументов.Дата),
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО ДанныеДокумента.Ссылка = Задания.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Документ = ДанныеДокумента.ДокументОснование)
	|			И (ДанныеПервичныхДокументов.Организация = ДанныеДокумента.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|		ПО ДанныеДокумента.ДокументОснование = СписаниеБезналичныхДенежныхСредств.Ссылка
	|ГДЕ
	|	(НЕ ДанныеДокумента.ВидАгентскогоДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент), ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги))
	|		ИЛИ ДанныеДокумента.Дата >= &ДатаНачалаОбязательногоПримененияЕНП)
	|	И ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.ДатаВходящегоДокумента, ДанныеПервичныхДокументов.Дата) МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	ВтДанныеОплат.Период КАК Период,
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия КАК ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	0 КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации КАК КодВидаОперации,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	ЛОЖЬ КАК Сторно,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	0 КАК НДСУпр,
	|	ВтДанныеОплат.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ВтДанныеОплат.ДатаДокументаОплаты КАК ДатаДокументаОплаты
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажОплатыСФ
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДанныеОплат КАК ВтДанныеОплат
	|		ПО НДСЗаписиКнигиПродаж.Регистратор = ВтДанныеОплат.СчетФактура
	|ГДЕ
	|	НЕ НДСЗаписиКнигиПродаж.РегламентнаяОперация";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("ДатаНачалаОбязательногоПримененияЕНП", РеглУчетСервер.ДатаНачалаОбязательногоПримененияЕНП());
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПродажОплатыСФ";

КонецФункции

Функция РассчитатьНДСЗаписиКнигиПродажСохранение(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПродаж)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор
	|ИЗ
	|	%1 КАК НДСЗаписиКнигиПродаж";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицНДСЗаписиКнигиПродаж Цикл
		МассивТекстовРегистраторыЗапись.Добавить(СтрШаблон(ШаблонЗапроса, ИмяТаблицыЗаписей));
	КонецЦикла;
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	ТекстЗапросаСохранение =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ
	|
	|%ТекстРегистраторыЗапись
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.Сторно,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажСохранение
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		НДСЗаписиКнигиПродаж.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		НДСЗаписиКнигиПродаж.Организация = Задания.Организация
	|		И НДСЗаписиКнигиПродаж.СчетФактура = Задания.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК ЗаданияПоРегистратору
	|	ПО
	|		НДСЗаписиКнигиПродаж.Организация = ЗаданияПоРегистратору.Организация
	|		И НДСЗаписиКнигиПродаж.Регистратор = ЗаданияПоРегистратору.СчетФактура 
	|
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период < &НачалоПериода
	|		ИЛИ НДСЗаписиКнигиПродаж.Период > &КонецПериода
	|		ИЛИ НЕ НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|		ИЛИ Задания.СчетФактура ЕСТЬ NULL
	|			И ЗаданияПоРегистратору.СчетФактура ЕСТЬ NULL
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись";
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапросаСохранение, "%ТекстРегистраторыЗапись", ТекстРегистраторыЗапись);
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСЗаписиКнигиПродажСохранение";
	
КонецФункции

Процедура ЗаписатьНДСЗаписиКнигиПродаж(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПродаж)
	
	МассивТекстовДанных = Новый Массив;
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Приоритет,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.Сторно,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|ИЗ
	|	%1 КАК НДСЗаписиКнигиПродаж
	|";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицНДСЗаписиКнигиПродаж Цикл
		МассивТекстовДанных.Добавить(СтрШаблон(ШаблонЗапроса, ИмяТаблицыЗаписей));
	КонецЦикла;
	ТекстДанныеДляЗаписи = СтрСоединить(МассивТекстовДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		ТекстДанныеДляЗаписи
		+ "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор,
		|	Период,
		|	Приоритет
		|
		|ИТОГИ ПО
		|	Регистратор
		|";
		
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьНДСЗаписиКнигиПродаж(ПараметрыРасчета, ИменаТаблицНДСЗаписиКнигиПродаж)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор
	|ИЗ
	|	%1 КАК НДСЗаписиКнигиПродаж";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицНДСЗаписиКнигиПродаж Цикл
		МассивТекстовРегистраторыЗапись.Добавить(СтрШаблон(ШаблонЗапроса, ИмяТаблицыЗаписей));
	КонецЦикла;
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	ТекстУстаревшиеРегистраторы = 
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ
	|
	|%ТекстРегистраторыЗапись
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|//////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПродаж КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО
	|		УстаревшиеРегистраторы.Регистратор = РегистраторыЗапись.Регистратор
	|
	|ГДЕ
	|	РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстУстаревшиеРегистраторы, "%ТекстРегистраторыЗапись", ТекстРегистраторыЗапись);
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти


#Область ФормированиеОтчетности


Процедура ДополнитьПокупкиИнформациейОНомерахДекларацийНаТовары(Знач ДополнительнаяИнформация, Знач СтруктураПараметров, Запрос) Экспорт

	Запрос.Текст = ТекстЗапросаИнформацияПоТаможеннымДекларациямПокупки();
	
	ПолныеИменаСчетовФактур = Новый Массив;
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураПолученный");
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураВыданный");
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураПолученныйНалоговыйАгент");
	ИдентификаторыСчетовФактур = ОбщегоНазначения.ИдентификаторыОбъектовМетаданных(ПолныеИменаСчетовФактур);
	
	ТипыСчетФактураПолученный = Новый Массив();
	ТипыСчетФактураПолученный.Добавить(ИдентификаторыСчетовФактур["Документ.СчетФактураПолученный"]);
	ТипыСчетФактураПолученный.Добавить(ИдентификаторыСчетовФактур["Документ.СчетФактураВыданный"]);
	ТипыСчетФактураПолученный.Добавить(ИдентификаторыСчетовФактур["Документ.СчетФактураПолученныйНалоговыйАгент"]);
	Запрос.УстановитьПараметр("ТипыСчетФактураПолученный", ТипыСчетФактураПолученный);
	
	СтрокаСФ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока СтрокаСФ.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаИнформации = "";
		
		СтрокаДопИнформации = ДополнительнаяИнформация.Найти(СтрокаСФ.СчетФактура, "Ссылка");
		Если СтрокаДопИнформации = Неопределено Тогда
			СтрокаДопИнформации        = ДополнительнаяИнформация.Добавить();
			СтрокаДопИнформации.Ссылка = СтрокаСФ.СчетФактура;
		КонецЕсли;
		
		СтрокаСтраныПроисхождения = СтрокаСФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока СтрокаСтраныПроисхождения.Следующий() Цикл
			СтрокаИнформации = СтрокаИнформации 
			+ ?(ПустаяСтрока(СтрокаИнформации), "", Символы.ПС) + СокрЛП(СтрокаСтраныПроисхождения.СтранаПроисхождения);
			ГТДРез = "";
			СтрокаНомерГТД = СтрокаСтраныПроисхождения.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока СтрокаНомерГТД.Следующий() Цикл 
				ГТДРез = ГТДРез + ?(ГТДРез = "","",", ") + СокрЛП(СтрокаНомерГТД.НомерГТД);
				
				Если Найти(СтрокаДопИнформации.ГТД, СокрЛП(СтрокаНомерГТД.НомерГТД)) = 0 Тогда // Исключаем дубли номеров ГТД
					СтрокаДопИнформации.ГТД = СтрокаДопИнформации.ГТД 
					+ ?(ПустаяСтрока(СтрокаДопИнформации.ГТД), "", ";") + СокрЛП(СтрокаНомерГТД.НомерГТД);
				КонецЕсли;
				
				Если Найти(СтрокаДопИнформации.РегистрационныйНомерТД, СокрЛП(СтрокаНомерГТД.РегистрационныйНомерТД)) = 0 Тогда
					СтрокаДопИнформации.РегистрационныйНомерТД = СтрокаДопИнформации.РегистрационныйНомерТД
					+ ?(ПустаяСтрока(СтрокаДопИнформации.РегистрационныйНомерТД), "", ";")
					+ СокрЛП(СтрокаНомерГТД.РегистрационныйНомерТД);
				КонецЕсли;
				
			КонецЦикла;
			СтрокаИнформации = СтрокаИнформации 
			+ ?(ПустаяСтрока(СтрокаИнформации), "", ?(ПустаяСтрока(ГТДРез), "", ";")) + ГТДРез;
		КонецЦикла;
		СтрокаДопИнформации.ГТДиСтрана = СтрокаИнформации;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьИнформациейОПосредникахИПлатежах(Знач ДополнительнаяИнформация, Знач СтруктураПараметров, 
		Запрос, ТекстЗапросаРеквизитыКонтрагентовДокументовОплаты) Экспорт
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПродавцы.СчетФактураДокумент КАК СчетФактураДокумент,
	|	НАЧАЛОПЕРИОДА(ТаблицаПродавцы.СчетФактураДата, ДЕНЬ) КАК ДатаСведений,
	|	ТаблицаПродавцы.ПродавецСсылка КАК Ссылка,
	|	ТаблицаПродавцы.ДатаПлатежногоДокумента КАК ДатаПлатежногоДокумента,
	|	ТаблицаПродавцы.НомерПлатежногоДокумента КАК НомерПлатежногоДокумента
	|ПОМЕСТИТЬ СсылкиНаДаты
	|ИЗ
	|	(" + ТекстЗапросаРеквизитыКонтрагентовДокументовОплаты + ") КАК ТаблицаПродавцы
	|";

	Запрос.Выполнить();
	УчетНДСПереопределяемый.РегистрационныеСведенияНаДаты(СтруктураПараметров.МенеджерВременныхТаблиц);
	Запрос.Текст = ТекстЗапросаРеквизитыКонтрагентовДокументовОплаты();
	СтрокаСФ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Запрос.МенеджерВременныхТаблиц = Неопределено;

	Пока СтрокаСФ.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаСФ.СчетФактураДокумент) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаГрафа9 = "";
		СтрокаГрафа10 = "";
		МассивСвПрод = Новый Массив();
		МассивПлатежныеДокументы = Новый Массив();
		
		СтрокаДетальнойИнформации = СтрокаСФ.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		Пока СтрокаДетальнойИнформации.Следующий() Цикл 
			
			Если ЗначениеЗаполнено(СтрокаДетальнойИнформации.ДатаДокументаОплаты)
				И ЗначениеЗаполнено(СтрокаДетальнойИнформации.НомерДокументаОплаты) Тогда
				
				РеквизитыПлатежногоДокумента = Новый Структура("НомерДокументаОплаты,ДатаДокументаОплаты");
				ЗаполнитьЗначенияСвойств(РеквизитыПлатежногоДокумента, СтрокаДетальнойИнформации);
				МассивПлатежныеДокументы.Добавить(РеквизитыПлатежногоДокумента);
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(СтрокаДетальнойИнформации.Продавец) Тогда
				СтрокаГрафа9 = ?(ПустаяСтрока(СтрокаГрафа9), "", СтрокаГрафа9 + ";" + Символы.ПС) 
				+ СокрЛП(СтрокаДетальнойИнформации.Продавец);
				
				СтрокаГрафа10 = ?(ПустаяСтрока(СтрокаГрафа10), "", СтрокаГрафа10 + ";" + Символы.ПС) 
				+ СокрЛП(СтрокаДетальнойИнформации.ИНН) 
				+ ?(ПустаяСтрока(СтрокаДетальнойИнформации.КПП), "", "/" + СокрЛП(СтрокаДетальнойИнформации.КПП));
				
				СтруктураРеквизитовКонтрагента = Новый Структура();
				
				Если СтрокаДетальнойИнформации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
					СтруктураРеквизитовКонтрагента.Вставить("ИННФЛ", СтрокаДетальнойИнформации.ИНН);
				Иначе
					СтруктураРеквизитовКонтрагента.Вставить("ИННЮЛ", СтрокаДетальнойИнформации.ИНН);
					СтруктураРеквизитовКонтрагента.Вставить("КПП",   СтрокаДетальнойИнформации.КПП);
				КонецЕсли;
				
				СтруктураРеквизитовКонтрагента.Вставить("КонтрагентНаименование", СтрокаДетальнойИнформации.Продавец);
				СтруктураРеквизитовКонтрагента.Вставить("Контрагент",             СтрокаДетальнойИнформации.ПродавецСсылка);
				МассивСвПрод.Добавить(СтруктураРеквизитовКонтрагента);
				
			КонецЕсли;
			
		КонецЦикла;
		
		СтрокаДопИнформации = ДополнительнаяИнформация.Найти(СтрокаСФ.СчетФактураДокумент, "Ссылка");
		Если СтрокаДопИнформации = Неопределено Тогда
			СтрокаДопИнформации        = ДополнительнаяИнформация.Добавить();
			СтрокаДопИнформации.Ссылка = СтрокаСФ.СчетФактураДокумент;
		КонецЕсли;
		
		СтрокаДопИнформации.Графа9  = СтрокаГрафа9;
		СтрокаДопИнформации.Графа10 = СтрокаГрафа10;
		СтрокаДопИнформации.МассивСвПрод = МассивСвПрод;
		СтрокаДопИнформации.МассивПлатежныеДокументы = МассивПлатежныеДокументы;
		
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаРеквизитыКонтрагентовДокументовОплаты()
	
	Возврат
	"ВЫБРАТЬ
	|	ОшибочныеРеквизитыКонтрагентов.СчетФактура КАК СчетФактура,
	|	ОшибочныеРеквизитыКонтрагентов.Контрагент КАК Контрагент,
	|	ОшибочныеРеквизитыКонтрагентов.ИНН,
	|	ОшибочныеРеквизитыКонтрагентов.КПП
	|ПОМЕСТИТЬ ОшибочныеРеквизитыКонтрагентов
	|ИЗ
	|	РегистрСведений.ОшибочныеРеквизитыКонтрагентов.СрезПоследних(, Организация В (&Организация)) КАК ОшибочныеРеквизитыКонтрагентов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СсылкиНаДаты.СчетФактураДокумент КАК СчетФактураДокумент,
	|	СсылкиНаДаты.Ссылка КАК ПродавецСсылка,
	|	ЕСТЬNULL(СведенияОСсылкахНаДаты.Наименование, """") КАК Продавец,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКонтрагентов.ИНН ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКонтрагентов.ИНН
	|		ИНАЧЕ ЕСТЬNULL(СведенияОСсылкахНаДаты.ИНН, """")
	|	КОНЕЦ КАК ИНН,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКонтрагентов.КПП ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКонтрагентов.КПП
	|		ИНАЧЕ ЕСТЬNULL(СведенияОСсылкахНаДаты.КПП, """")
	|	КОНЕЦ КАК КПП,
	|	СсылкиНаДаты.ДатаПлатежногоДокумента КАК ДатаДокументаОплаты,
	|	СсылкиНаДаты.НомерПлатежногоДокумента КАК НомерДокументаОплаты,
	|	СУММА(1) КАК КоличествоЭлементов,
	|	СсылкиНаДаты.Ссылка.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо
	|ИЗ
	|	СсылкиНаДаты КАК СсылкиНаДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОСсылкахНаДаты КАК СведенияОСсылкахНаДаты
	|		ПО СсылкиНаДаты.Ссылка = СведенияОСсылкахНаДаты.Ссылка
	|			И СсылкиНаДаты.ДатаСведений = СведенияОСсылкахНаДаты.ДатаСведений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОшибочныеРеквизитыКонтрагентов КАК ОшибочныеРеквизитыКонтрагентов
	|		ПО СсылкиНаДаты.СчетФактураДокумент = ОшибочныеРеквизитыКонтрагентов.СчетФактура
	|			И СсылкиНаДаты.Ссылка = ОшибочныеРеквизитыКонтрагентов.Контрагент
	|	
	|СГРУППИРОВАТЬ ПО
	|	СсылкиНаДаты.Ссылка,
	|	СсылкиНаДаты.СчетФактураДокумент,
	|	ЕСТЬNULL(СведенияОСсылкахНаДаты.Наименование, """"),
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКонтрагентов.ИНН ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКонтрагентов.ИНН
	|		ИНАЧЕ ЕСТЬNULL(СведенияОСсылкахНаДаты.ИНН, """")
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКонтрагентов.КПП ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКонтрагентов.КПП
	|		ИНАЧЕ ЕСТЬNULL(СведенияОСсылкахНаДаты.КПП, """")
	|	КОНЕЦ,
	|	СсылкиНаДаты.ДатаПлатежногоДокумента,
	|	СсылкиНаДаты.НомерПлатежногоДокумента,
	|	СсылкиНаДаты.Ссылка.ЮридическоеФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	Продавец УБЫВ
	|ИТОГИ
	|	СУММА(КоличествоЭлементов)
	|ПО
	|	СчетФактураДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СведенияОСсылкахНаДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СсылкиНаДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОшибочныеРеквизитыКонтрагентов";

КонецФункции

Функция ТекстЗапросаИнформацияПоТаможеннымДекларациямПокупки()
	
	ТекстНомераГТДпоСчетамФактурам = УчетНДСПереопределяемый.ТекстЗапросаНомераГТДпоСчетамФактурам(Новый Запрос);
	
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТоваров.СчетФактура КАК СчетФактура,
	|	ТаблицаТоваров.СтранаПроисхождения.Код КАК СтранаПроисхождения,
	|	ТаблицаТоваров.НомерГТД.Код КАК НомерГТД,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТД,
	|	1 КАК КоличествоЭлементов
	|ИЗ
	|	(" + ТекстНомераГТДпоСчетамФактурам + ") КАК ТаблицаТоваров
	|ИТОГИ
	|	СУММА(КоличествоЭлементов)
	|ПО
	|	СчетФактура,
	|	СтранаПроисхождения";

КонецФункции

Процедура ДополнитьИнформациейОТНВЭД(Знач ДополнительнаяИнформация, Знач Запрос) Экспорт

	Запрос.Текст = ТекстЗапросаИнформацияПоТНВЭД();
	
	СтрокаСФ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока СтрокаСФ.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДопИнформации = ДополнительнаяИнформация.Найти(СтрокаСФ.СчетФактура, "Ссылка");
		Если СтрокаДопИнформации = Неопределено Тогда
			СтрокаДопИнформации        = ДополнительнаяИнформация.Добавить();
			СтрокаДопИнформации.Ссылка = СтрокаСФ.СчетФактура;
		КонецЕсли;
		
		СтрокаДетальныеЗаписи = СтрокаСФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока СтрокаДетальныеЗаписи.Следующий() Цикл 
			Если ЗначениеЗаполнено(СтрокаДетальныеЗаписи.КодТНВЭД)
				И Найти(СтрокаДопИнформации.ТНВЭД, СокрЛП(СтрокаДетальныеЗаписи.КодТНВЭД)) = 0 Тогда // Исключаем дубли ТНВЭД
				СтрокаДопИнформации.ТНВЭД = СтрокаДопИнформации.ТНВЭД 
				+ ?(ПустаяСтрока(СтрокаДопИнформации.ТНВЭД ), "", ";") + СокрЛП(СтрокаДетальныеЗаписи.КодТНВЭД);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

Процедура ДополнитьПродажиИнформациейОНомерахДекларацийНаТовары(Знач ДополнительнаяИнформация, Знач СтруктураПараметров, Запрос) Экспорт

	Запрос.Текст = ТекстЗапросаИнформацияПоТаможеннымДекларациямПродажи();
	ВыборкаПоДокументам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоДокументам.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивСвРегНом = Новый Массив();
		ВыборкаПоРегНомерамТД = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		Пока ВыборкаПоРегНомерамТД.Следующий() Цикл 
			
			Если ЗначениеЗаполнено(ВыборкаПоРегНомерамТД.РегистрационныйНомер) Тогда
				
				СтруктураСвРегНом = Новый Структура("РегНомПросл,КолТовПросл,СтоимТовПросл,ОКЕИ");
				СтруктураСвРегНом.РегНомПросл = ВыборкаПоРегНомерамТД.РегистрационныйНомер;
				МассивСвРегНом.Добавить(СтруктураСвРегНом);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(МассивСвРегНом) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДопИнформации = ДополнительнаяИнформация.Найти(ВыборкаПоДокументам.СчетФактура, "Ссылка");
		Если СтрокаДопИнформации = Неопределено Тогда
			СтрокаДопИнформации        = ДополнительнаяИнформация.Добавить();
			СтрокаДопИнформации.Ссылка = ВыборкаПоДокументам.СчетФактура;
		КонецЕсли;
		СтрокаДопИнформации.СвРегНомТД = МассивСвРегНом;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаИнформацияПоТНВЭД()
	
	Возврат
	"ВЫБРАТЬ
	|	СписокСчетовФактур.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ СчетаФактурыВЕАЭС
	|ИЗ
	|	СписокСчетовФактур КАК СписокСчетовФактур
	|ГДЕ
	|	СписокСчетовФактур.УчастникЕАЭС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаФактурыВЕАЭС.СчетФактура КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ДанныеОснованийСчетовФактур.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ДанныеОснованийСчетовФактур.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодТНВЭД,
	|	СУММА(1) КАК КоличествоЭлементов
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыВЕАЭС КАК СчетаФактурыВЕАЭС
	|	ПО
	|		ДанныеОснованийСчетовФактур.Регистратор = СчетаФактурыВЕАЭС.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыВЕАЭС.СчетФактура,
	|	ВЫБОР
	|		КОГДА ДанныеОснованийСчетовФактур.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ДанныеОснованийСчетовФактур.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаФактурыВЕАЭС.СчетФактура,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйТовары.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА СчетФактураВыданныйТовары.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	СУММА(1)
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыВЕАЭС КАК СчетаФактурыВЕАЭС
	|		ПО СчетФактураВыданныйТовары.Ссылка = СчетаФактурыВЕАЭС.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыВЕАЭС.СчетФактура,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйТовары.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА СчетФактураВыданныйТовары.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|
	|ИТОГИ
	|	СУММА(КоличествоЭлементов)
	|ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СчетаФактурыВЕАЭС";

КонецФункции

Функция ТекстЗапросаИнформацияПоТаможеннымДекларациямПродажи()
	
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Ссылка КАК СчетФактура,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомер,
	|	1 КАК КоличествоЭлементов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			И ЕСТЬNULL(ТаблицаТоваров.НомерГТД.ТипНомераГТД, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерГТД)
	|			И (ТаблицаТоваров.Ссылка.Исправление
	|				ИЛИ ТаблицаТоваров.Ссылка.Корректировочный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовКорректировкаВыручки КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовОприходование КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовСписание КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ОтгрузкаТоваровСХранения.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ВыкупТоваровХранителем.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураКомиссионеру.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ОтчетКомиссионера.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|		ПО ТаблицаТоваров.Ссылка = СчетФактураКомиссионеру.ДокументОснование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО СчетФактураКомиссионеру.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокСчетовФактур.СчетФактура,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.СчетФактураВыставленныйКомиссионера = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ОтчетОРозничныхВозвратах.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	1
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ТаблицаТоваров.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТоваров.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ИТОГИ
	|	СУММА(КоличествоЭлементов)
	|
	|ПО
	|	СчетФактура";

КонецФункции

Процедура ПреобразоватьПоказателиРНПТКСторнирующейЗаписи(Знач МассивСвРегНом) Экспорт

	Перем ЭлементМассива;

	Для Каждого ЭлементМассива Из МассивСвРегНом Цикл
		Если ЗначениеЗаполнено(ЭлементМассива.КолТовПросл) 
			Или ЗначениеЗаполнено(ЭлементМассива.СтоимТовПросл) Тогда // Для обычных товаров количество и сумма = Неопределено
			ЭлементМассива.КолТовПросл   = - ЭлементМассива.КолТовПросл;
			ЭлементМассива.СтоимТовПросл = - ЭлементМассива.СтоимТовПросл;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры
Функция ТекстЗапросаПодготовкаСведенийРНПТЖурнал() Экспорт
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ПредварительныйСписокСчетовФактур
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактур КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	|ГДЕ
	|	НЕ ЗаписиРегистраЖурналУчетаСчетовФактур.Сторно
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныйСписокСчетовФактур.СчетФактура КАК СчетФактура,
	|	ПредварительныйСписокСчетовФактур.СчетФактура КАК ДокументОснование,
	|	ЛОЖЬ КАК НаАванс
	|ПОМЕСТИТЬ СписокСчетовФактур
	|ИЗ
	|	ПредварительныйСписокСчетовФактур КАК ПредварительныйСписокСчетовФактур
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПредварительныйСписокСчетовФактур.СчетФактура,
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование,
	|	ЛОЖЬ
	|ИЗ
	|	ПредварительныйСписокСчетовФактур КАК ПредварительныйСписокСчетовФактур
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО ПредварительныйСписокСчетовФактур.СчетФактура = СчетФактураВыданныйДокументыОснования.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПредварительныйСписокСчетовФактур.СчетФактура,
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование,
	|	ЛОЖЬ
	|ИЗ
	|	ПредварительныйСписокСчетовФактур КАК ПредварительныйСписокСчетовФактур
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ПО ПредварительныйСписокСчетовФактур.СчетФактура = СчетФактураПолученныйДокументыОснования.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура";
	
КонецФункции


#КонецОбласти 

#Область ПакетнаяОбработкаТабличныхЧастейСлужебная

// Возвращает список запросов для заполнения счета-фактуры.
//
// Возвращаемое значение:
// 	СписокЗначений Из Строка.
//
Функция ТекстыЗапросовЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках()
	
	Результат = Новый СписокЗначений;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтИсточникДанных.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
	|	ТаблицаДокументов.Ссылка КАК ДокументПриобретения,
	|	ТаблицаДокументов.Ссылка КАК ДокументОснование,
	|	ТаблицаДокументов.Организация КАК Организация
	|ПОМЕСТИТЬ ТаблицаДокументовПриобретения
	|ИЗ
	|	ВтИсточникДанных КАК ВтИсточникДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ТаблицаДокументов
	|		ПО ВтИсточникДанных.ДокументПриобретения = ТаблицаДокументов.Ссылка
	|		И (НЕ ТаблицаДокументов.НалогообложениеНДС В (&ВидыНалогообложения))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтИсточникДанных.ИдентификаторСтрокиВТ,
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.ДокументПоступления,
	|	ТаблицаДокументов.Организация
	|ИЗ
	|	ВтИсточникДанных КАК ВтИсточникДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ТаблицаДокументов
	|		ПО ВтИсточникДанных.ДокументПриобретения = ТаблицаДокументов.Ссылка
	|		И (НЕ ТаблицаДокументов.НалогообложениеНДС В (&ВидыНалогообложения))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтИсточникДанных.ИдентификаторСтрокиВТ,
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.ДокументОснование,
	|	ТаблицаДокументов.Организация
	|ИЗ
	|	ВтИсточникДанных КАК ВтИсточникДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК ТаблицаДокументов
	|		ПО ВтИсточникДанных.ДокументПриобретения = ТаблицаДокументов.Ссылка
	|		И (НЕ ТаблицаДокументов.НалогообложениеНДС В (&ВидыНалогообложения))";
	
	Результат.Добавить(ТекстЗапроса, "ТаблицаДокументовПриобретения");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""ЗаявлениеОВвозеТоваров"" КАК ВидДокумента,
	|	ТаблицаДокументовПриобретения.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
	|	ЗаявленияОВвозе.Ссылка КАК Ссылка
	|ИЗ
	|	ТаблицаДокументовПриобретения КАК ТаблицаДокументовПриобретения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОВвозеТоваров.Товары КАК ЗаявленияОВвозе
	|		ПО ТаблицаДокументовПриобретения.ДокументОснование = ЗаявленияОВвозе.ДокументПоступления
	|		И (ЗаявленияОВвозе.Ссылка.Проведен)
	|		И (ТаблицаДокументовПриобретения.Организация = ЗаявленияОВвозе.Ссылка.Организация
	|		ИЛИ ТаблицаДокументовПриобретения.Организация = НЕОПРЕДЕЛЕНО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""СчетФактураПолученный"",
	|	ТаблицаДокументовПриобретения.ИдентификаторСтрокиВТ,
	|	СчетаФактуры.Ссылка
	|ИЗ
	|	ТаблицаДокументовПриобретения КАК ТаблицаДокументовПриобретения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетаФактуры
	|		ПО ТаблицаДокументовПриобретения.ДокументОснование = СчетаФактуры.ДокументОснование
	|		И (СчетаФактуры.Ссылка.Проведен)
	|		И (ТаблицаДокументовПриобретения.Организация = СчетаФактуры.Ссылка.Организация
	|		ИЛИ ТаблицаДокументовПриобретения.Организация = НЕОПРЕДЕЛЕНО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""СчетФактураПолученныйНалоговыйАгент"",
	|	ТаблицаДокументовПриобретения.ИдентификаторСтрокиВТ,
	|	СчетаФактуры.Ссылка
	|ИЗ
	|	ТаблицаДокументовПриобретения КАК ТаблицаДокументовПриобретения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК СчетаФактуры
	|		ПО ТаблицаДокументовПриобретения.ДокументОснование = СчетаФактуры.ДокументОснование
	|		И (СчетаФактуры.Ссылка.Проведен)
	|		И (ТаблицаДокументовПриобретения.Организация = СчетаФактуры.Ссылка.Организация
	|		ИЛИ ТаблицаДокументовПриобретения.Организация = НЕОПРЕДЕЛЕНО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ИнойДокументПодтвержденияНДС"",
	|	ТаблицаДокументовПриобретения.ИдентификаторСтрокиВТ,
	|	ИнойДокументПодтвержденияНДС.Ссылка
	|ИЗ
	|	ТаблицаДокументовПриобретения КАК ТаблицаДокументовПриобретения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнойДокументПодтвержденияНДС КАК ИнойДокументПодтвержденияНДС
	|		ПО ТаблицаДокументовПриобретения.ДокументПриобретения = ИнойДокументПодтвержденияНДС.ДокументОснование
	|		И (ИнойДокументПодтвержденияНДС.Проведен)
	|		И (ТаблицаДокументовПриобретения.Организация = ИнойДокументПодтвержденияНДС.Организация
	|		ИЛИ ТаблицаДокументовПриобретения.Организация = НЕОПРЕДЕЛЕНО)";
	
	Результат.Добавить(ТекстЗапроса, "ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти
