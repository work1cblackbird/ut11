Функция ВерсияФормата(НаименованиеДокумента = Неопределено) Экспорт 
	
	Результат = "5.01";
	
	Если НаименованиеДокумента = "ЭлектронныйПутевойЛист" Тогда
		Результат = "5.01";	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ВерсияПрограммы() Экспорт
	
	#Если Сервер Тогда
		МодульОбменСГИСЭПД = ОбменСГИСЭПД;
	#Иначе
		МодульОбменСГИСЭПД = ОбменСГИСЭПДВызовСервера;
	#КонецЕсли
	
	Возврат МодульОбменСГИСЭПД.НазваниеИВерсияПрограммы();
	
КонецФункции

Функция ДанныеСертификатаУчетнойЗаписиЭДО(ИдентификаторУчетнойЗаписи, ОтборПодписанта = Неопределено) Экспорт
	
	#Если Сервер Тогда
		МодульОбменСГИСЭПД = ОбменСГИСЭПД;
	#Иначе
		МодульОбменСГИСЭПД = ОбменСГИСЭПДВызовСервера;
	#КонецЕсли
	
	Возврат МодульОбменСГИСЭПД.ДанныеСертификатаУчетнойЗаписиЭДО(ИдентификаторУчетнойЗаписи, ОтборПодписанта);
	
КонецФункции

Функция ПолучитьСообщениеТитула(Документ, ТипЭлементаРегламента) Экспорт
	
	#Если Сервер Тогда
		МодульОбменСГИСЭПД = ОбменСГИСЭПД;
	#Иначе
		МодульОбменСГИСЭПД = ОбменСГИСЭПДВызовСервера;
	#КонецЕсли
	
	Возврат МодульОбменСГИСЭПД.ПолучитьСообщениеТитула(Документ, ТипЭлементаРегламента);
	
КонецФункции

Функция ПолучитьАдресаДоставки(ЗначениеОтбора) Экспорт
	
	#Если Сервер Тогда
		МодульОбменСГИСЭПД = ОбменСГИСЭПД;
	#Иначе
		МодульОбменСГИСЭПД = ОбменСГИСЭПДВызовСервера;
	#КонецЕсли
	
	Возврат МодульОбменСГИСЭПД.ПолучитьАдресаДоставки(ЗначениеОтбора);
	
КонецФункции

Функция ИспользуютсяДополнительныеРеквизитыЭПД() Экспорт
	
	// 0 - не используются, 1 - только по формату, 2 - по формату и произвольные (передаются в card.xml)
	Возврат 2;
	
КонецФункции

Функция НоваяСтруктураДляРеестраЭПД() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("Ссылка");
	Результат.Вставить("ТипСсылки");
	Результат.Вставить("Организация");
	Результат.Вставить("Грузоотправитель");
	Результат.Вставить("Перевозчик");
	Результат.Вставить("Грузополучатель");
	Результат.Вставить("НомерЭПД");
	Результат.Вставить("ДатаЭПД");
	Результат.Вставить("Проведен");
	Результат.Вставить("ПометкаУдаления");
	Результат.Вставить("НомерДокументаИБ");
	Результат.Вставить("ДатаДокументаИБ");
	Результат.Вставить("ТекущийШаг");
	Результат.Вставить("ТекущийШагВыполнен");
	Результат.Вставить("РольУчастника");
	Результат.Вставить("Комментарий");
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнениеСпискаСохраненныхАдресов(Форма, ЗначениеОтбора, Элемент, ДанныеВыбора = Неопределено, ЗаполнитьПоУмолчанию = Ложь) Экспорт
	
	#Если Сервер Или ВнешнееСоединение Тогда
		СохраненныеАдресаГрузополучателя = ОбменСГИСЭПДКлиентСервер.ПолучитьАдресаДоставки(ЗначениеОтбора);
	#ИначеЕсли Клиент Тогда
		СохраненныеАдресаГрузополучателя = ОбменСГИСЭПДКлиентПовтИсп.ПолучитьАдресаДоставки(Строка(Форма.УникальныйИдентификатор), ЗначениеОтбора);
	#КонецЕсли
	
	ОсновнойАдресСтруктура = Неопределено;
	Для Каждого АдресКиЗ Из СохраненныеАдресаГрузополучателя Цикл
		СтруктураАдреса = Новый Структура;
		СтруктураАдреса.Вставить("Адрес", АдресКиЗ.Значение.Адрес);
		СтруктураАдреса.Вставить("Представление", АдресКиЗ.Значение.ПредставлениеАдреса);
		Если ДанныеВыбора = Неопределено Тогда
			ДанныеВыбора = Новый СписокЗначений;
			ДанныеВыбора.Добавить(СтруктураАдреса, АдресКиЗ.Значение.Представление);
		Иначе
			ДанныеВыбора.Вставить(0, СтруктураАдреса, АдресКиЗ.Значение.Представление);
		КонецЕсли;
		Если АдресКиЗ.Значение.Основной = Истина Тогда
			ОсновнойАдресСтруктура = СтруктураАдреса;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗаполнитьПоУмолчанию И СохраненныеАдресаГрузополучателя.Получить(Форма[Элемент.Имя]) = Неопределено
		И ОсновнойАдресСтруктура <> Неопределено Тогда
		Форма[Элемент.Имя] = ОсновнойАдресСтруктура.Представление;
		ОбменСГИСЭПДКлиентСервер.ЗаполнитьРеквизитыАдреса(Форма, ОсновнойАдресСтруктура, Элемент.Имя);	
	КонецЕсли;
	
КонецПроцедуры


Функция ПрефиксыТитуловДокумента(ИмяДокумента) Экспорт
	
	МассивПрефиксов = Новый Массив;
	Если ИмяДокумента = "Документ.ЭлектроннаяТранспортнаяНакладная" Тогда
		МассивПрефиксов.Добавить("ТитулУказаниеПереадрес");
		МассивПрефиксов.Добавить("ТитулПереадресовка");
		МассивПрефиксов.Добавить("ТитулГрузоотправителяФХЖ");
		МассивПрефиксов.Добавить("ТитулГрузоотправителя");
		МассивПрефиксов.Добавить("ТитулПеревозчикаПриемка");
		МассивПрефиксов.Добавить("ТитулГрузополучателя");
		МассивПрефиксов.Добавить("ТитулПеревозчикаВыдача");
		МассивПрефиксов.Добавить("ТитулПеревозчикаЗамены");
		МассивПрефиксов.Добавить("ТитулПеревозчикаФХЖ");
		МассивПрефиксов.Добавить("ДопТитулПереадресовка");
		МассивПрефиксов.Добавить("ДопТитулПеревозчикаЗамены");
		МассивПрефиксов.Добавить("ДопТитулГрузополучателя");
		МассивПрефиксов.Добавить("ДопТитулПеревозчикаВыдача");
		МассивПрефиксов.Добавить("ДопТитулУказаниеПереадрес");
	ИначеЕсли ИмяДокумента = "Документ.ЭлектронныйЗаказНаряд" Тогда
		МассивПрефиксов.Добавить("ТитулФрахтователяПодача");
		МассивПрефиксов.Добавить("ТитулФрахтовщикаВозврат");
		МассивПрефиксов.Добавить("ТитулФрахтователя");
		МассивПрефиксов.Добавить("ТитулФрахтовщика");
	ИначеЕсли ИмяДокумента = "Документ.ЭлектроннаяСопроводительнаяВедомость" Тогда
		МассивПрефиксов.Добавить("ТитулПеревозчика");
		МассивПрефиксов.Добавить("ТитулГрузоотправителя");
		МассивПрефиксов.Добавить("ТитулГрузополучателя");
		МассивПрефиксов.Добавить("ДопТитулПеревозчика");
	ИначеЕсли ИмяДокумента = "Документ.ЭлектронныйЗаказЗаявка" Тогда
		МассивПрефиксов.Добавить("ТитулПеревозчика");
		МассивПрефиксов.Добавить("ТитулГрузоотправителя");
	ИначеЕсли ИмяДокумента = "Документ.ЭлектронныйПутевойЛист" Тогда
		МассивПрефиксов.Добавить("ТитулОформление");
		МассивПрефиксов.Добавить("ТитулМедосмотрПосле");
		МассивПрефиксов.Добавить("ТитулМедосмотр");
		МассивПрефиксов.Добавить("ТитулВыпуск");
		МассивПрефиксов.Добавить("ТитулВыезд");
		МассивПрефиксов.Добавить("ТитулЗаезд");
	ИначеЕсли ИмяДокумента = "Документ.ЭлектронныйДоговорФрахтования" Тогда
		МассивПрефиксов.Добавить("ТитулФрахтователя");
		МассивПрефиксов.Добавить("ТитулФрахтовщика");
	КонецЕсли;
	
	Возврат МассивПрефиксов;
	
КонецФункции 


Функция ПрефиксТитулаРеквизита(ИмяРеквизита, ИмяДокумента) Экспорт

	Результат = ""; 
	
	МассивПрефиксов = ПрефиксыТитуловДокумента(ИмяДокумента);
	
	Для Каждого Префикс Из МассивПрефиксов Цикл
		ИмяРеквизитаБезСлужебныхПрефиксов = ИмяРеквизита;
		МассивУдалитьПрефиксы = Новый Массив;
		МассивУдалитьПрефиксы.Добавить("Ссылка");
		МассивУдалитьПрефиксы.Добавить("ХранимыеДанные");
		МассивУдалитьПрефиксы.Добавить("Представление");
		Для Каждого УдалитьПрефикс Из МассивУдалитьПрефиксы Цикл
			Если СтрНачинаетсяС(ИмяРеквизитаБезСлужебныхПрефиксов, УдалитьПрефикс) Тогда
				ИмяРеквизитаБезСлужебныхПрефиксов = Сред(ИмяРеквизитаБезСлужебныхПрефиксов, СтрДлина(УдалитьПрефикс) + 1);
			КонецЕсли;
		КонецЦикла;
		Если СтрНачинаетсяС(ИмяРеквизитаБезСлужебныхПрефиксов, Префикс) Тогда
			Результат = Префикс;
			Прервать;
		КонецЕсли;		
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

Функция ПроверитьСоответствиеТребованиямИНН(Знач ИНН) Экспорт
	
	РезультатПроверки = Новый Структура("СоответствуетТребованиям, ОписаниеОшибки", Ложь, "");
	
	Если ЗначениеЗаполнено(ИНН) Тогда
		ИНН = СокрП(ИНН);
		
		ЭтоИННФизическогоЛица  = СтрДлина(ИНН) = 12;
		Если ЭтоИННФизическогоЛица И Лев(ИНН, 2) = "00" Тогда
			ЭтоИННФизическогоЛица = Ложь;
			ИНН = Сред(ИНН, 3);
		КонецЕсли;		
		
		Если Лев(ИНН, 2) = "00" Тогда
			РезультатПроверки.ОписаниеОшибки = НСтр("ru = 'Первые две цифры ИНН не могут быть ""00""'");
			РезультатПроверки.СоответствуетТребованиям = Ложь;
		Иначе
			ТекстОшибкиФорматнаяПроверка = "";
			РезультатПроверки.СоответствуетТребованиям = РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, НЕ ЭтоИННФизическогоЛица, ТекстОшибкиФорматнаяПроверка);		
			Если НЕ РезультатПроверки.СоответствуетТребованиям Тогда
				РезультатПроверки.ОписаниеОшибки = ТекстОшибкиФорматнаяПроверка;
			КонецЕсли; 		
		КонецЕсли;
	КонецЕсли;
	
	Возврат РезультатПроверки;
	
КонецФункции

Функция ПолучитьМассивТиповТС() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("Легковой автомобиль общего назначения");
	Результат.Добавить("Специальный легковой автомобиль");
	Результат.Добавить("Грузовой автомобиль общего назначения");
	Результат.Добавить("Специальный грузовой автомобиль");
	Результат.Добавить("Грузопассажирский автомобиль");
	Результат.Добавить("Автомобиль-тягач");
	Результат.Добавить("Седельный тягач");
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьМассивТиповПрицепов() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("Пассажирский прицеп");
	Результат.Добавить("Грузовой прицеп общего назначения");
	Результат.Добавить("Специальный прицеп");
	Результат.Добавить("Пассажирский полуприцеп");
	Результат.Добавить("Грузовой полуприцеп общего назначения");
	Результат.Добавить("Специальный полуприцеп");
	
	Возврат Результат;
	
КонецФункции


Функция ПолучитьМассивМаркировокГруза() Экспорт
	
	Результат = Новый Массив;
		
	Результат.Добавить("Хрупкое. Осторожно");
	Результат.Добавить("Беречь от солнечных лучей");
	Результат.Добавить("Беречь от влаги");
	Результат.Добавить("Беречь от излучения");
	Результат.Добавить("Пределы температуры");
	Результат.Добавить("Скоропортящийся груз");
	Результат.Добавить("Герметичная упаковка");
	Результат.Добавить("Крюками не брать");
	Результат.Добавить("Место строповки");
	Результат.Добавить("Здесь поднимать тележкой запрещается");
	Результат.Добавить("Верх");
	Результат.Добавить("Центр тяжести");
	Результат.Добавить("Тропическая упаковка");
	Результат.Добавить("Штабелировать запрещается");
	Результат.Добавить("Поднимать непосредственно за груз");
	Результат.Добавить("Открывать здесь");
	Результат.Добавить("Защищать от радиоактивных источников");
	Результат.Добавить("Не кантовать");
	Результат.Добавить("Предел штабелирования по массе");
	Результат.Добавить("Зажимать здесь");
	Результат.Добавить("Не зажимать");
	Результат.Добавить("Предел по количеству ярусов в штабеле");
	Результат.Добавить("Вилочные погрузчики не использовать");
	
	Возврат Результат;
	
КонецФункции


Процедура УстановитьДоступностьЭлементовПоСостоянию(Форма, ДанныеСостоянияЭДО, ЭтоНеЗаконченнаяОтправка)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	// Статус-бары
	Элементы.ГруппаСтатусОшибки.Видимость = Ложь;
 	Элементы.ГруппаСтатус.Видимость = Ложь;
 	
 	МассивТиповОтклонений = Новый Массив;
 	МассивТиповОтклонений.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ОткП"));
 	МассивТиповОтклонений.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ОткТ3"));
 	МассивТиповОтклонений.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ОткГО"));
 	МассивТиповОтклонений.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_ОткФщ"));
 	МассивТиповОтклонений.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_ОткФщ"));
	МассивТиповОтклонений.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_ОткМ"));
 	
 	#Если Сервер Или ВнешнееСоединение Тогда 
 		ШрифтСостояния = ШрифтыСтиля.ШрифтСостоянияНаФормеЭПД;
 		ЦветСостоянияСерый = ЦветаСтиля.ЦветСостоянияСерыйЭПД;
 	#Иначе
 		ШрифтСостояния = ОбщегоНазначенияКлиентПовтИсп.ШрифтСтиля("ШрифтСостоянияНаФормеЭПД");
 		ЦветСостоянияСерый = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ЦветСостоянияСерыйЭПД");
 	#КонецЕсли	
	
	ЭтоНеЗаконченнаяОтправка = Ложь;
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Закрыт с отклонением" Тогда												
		ЭлектронныйДокумент = ОбменСГИСЭПДВызовСервера.ПолучитьСообщениеТитула(Объект.Ссылка, 
									МассивТиповОтклонений, Истина);
		КомментарийКСостоянию = "";
		Если ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
			СостояниеДокументаПодробное = ОбменСГИСЭПДВызовСервера.СостояниеДокументаПодробное(ЭлектронныйДокумент);
			КомментарийКСостоянию = " (" + СостояниеДокументаПодробное.Комментарий + ")";
		КонецЕсли;
		
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ДанныеСостоянияЭДО.ПредставлениеСостояния 
															+ КомментарийКСостоянию + ". ", 
															ШрифтСостояния));
															
		Элементы.НадписьСтатусаОшибка.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
		Элементы.ГруппаСтатусОшибки.Видимость = Истина;
	ИначеЕсли ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется повторная отправка" Тогда
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("Ошибка документооборота. ", 
															ШрифтСостояния));
															
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("Информация об ошибках", , , , "ОписаниеОшибки"));
		Элементы.НадписьСтатусаОшибка.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
		Элементы.ГруппаСтатусОшибки.Видимость = Истина;
		
		ЭтоНеЗаконченнаяОтправка = Истина;
	ИначеЕсли ДанныеСостоянияЭДО.ПредставлениеСостояния = "Ожидается исправление"
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется уточнение" Тогда
		КомментарийКСостоянию = "";
		СообщениеУОУ = ОбменСГИСЭПДВызовСервера.ПолучитьСообщениеТитула(Объект.Ссылка, МассивТиповОтклонений);	
		РеквизитыСообщениеУОУ = ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(СообщениеУОУ, 
																		"ЭлектронныйДокумент, ТипЭлементаРегламента");
		Если ЗначениеЗаполнено(СообщениеУОУ) Тогда
			СостояниеДокументаПодробное = ОбменСГИСЭПДВызовСервера.СостояниеДокументаПодробное(РеквизитыСообщениеУОУ.ЭлектронныйДокумент);
			КомментарийКСостоянию = " (" + СостояниеДокументаПодробное.Комментарий + ")";
		КонецЕсли;
			
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ДанныеСостоянияЭДО.ПредставлениеСостояния 
															+ КомментарийКСостоянию + ". ", 
															ШрифтСостояния));
		Указания = "";
		Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Требуется уточнение" Тогда
			Если (РеквизитыСообщениеУОУ.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ОткТ3")
					И (Объект.РольУчастника = 2
						Или (Объект.РольУчастника = 3 И Объект.ИдентификаторГрузоотправителя = Объект.ИдентификаторГрузополучателя)))
				Или (РеквизитыСообщениеУОУ.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ОткГО")
					И Объект.РольУчастника = 1) Тогда
				Указания = "После исправления (уточнения) нужно отправить титул повторно. ";
				ЭтоНеЗаконченнаяОтправка = Истина;	
			КонецЕсли;
		КонецЕсли;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Указания + "Открыть форму просмотра ", , ЦветСостоянияСерый));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("документа ЭДО", , , , "ТекущиеДелаПоЭДО"));
		Элементы.НадписьСтатуса.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
		Элементы.ГруппаСтатус.Видимость = Истина;		
	ИначеЕсли ЗначениеЗаполнено(ДанныеСостоянияЭДО.ПредставлениеСостояния) 
		И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Не начат" 
		И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Не получен"
		И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Завершен"
		И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Ожидается подтверждение"
		И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Ожидается извещение о получении" Тогда
		СообщениеТекущегоТитула = ПолучитьСообщениеТитула(Объект.Ссылка, Объект.ТекущийТитул);
		Если ЗначениеЗаполнено(СообщениеТекущегоТитула) Тогда
			ПоследнийТитулВходящий = Ложь;
			РеквизитыСообщениеТекущегоТекущегоТитула = ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(СообщениеТекущегоТитула, "Дата, Статус");
			Если ЗначениеЗаполнено(Объект.ТекущийПолученныйТитул) Тогда
				СообщениеТекущегоПолученногоТитула = ПолучитьСообщениеТитула(Объект.Ссылка, Объект.ТекущийПолученныйТитул);
				Если СообщениеТекущегоПолученногоТитула <> Неопределено Тогда
					РеквизитыСообщениеТекущегоПолученногоТитула = ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(СообщениеТекущегоПолученногоТитула, "Дата");
					ПоследнийТитулВходящий = РеквизитыСообщениеТекущегоПолученногоТитула.Дата > РеквизитыСообщениеТекущегоТекущегоТитула.Дата;
				Иначе
					ПоследнийТитулВходящий = Ложь;	
				КонецЕсли;		
			КонецЕсли;
			Если ПоследнийТитулВходящий = Ложь
				И РеквизитыСообщениеТекущегоТекущегоТитула.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыСообщенийЭДО.Отправлен") Тогда
				МассивСтрок = Новый Массив;
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока("Пакет для отправки сформирован, " + НРег(ДанныеСостоянияЭДО.ПредставлениеСостояния) + ". ", 
																	ШрифтСостояния));
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока("Открыть форму просмотра ", , ЦветСостоянияСерый));
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока("документа ЭДО", , , , "ТекущиеДелаПоЭДО"));
				Элементы.НадписьСтатуса.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
				Элементы.ГруппаСтатус.Видимость = Истина;	
				
				ЭтоНеЗаконченнаяОтправка = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура УстановитьДоступностьЭлементовЭСВ(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка, Истина);
	
	ЭтоНеЗаконченнаяОтправка = Ложь;
	УстановитьДоступностьЭлементовПоСостоянию(Форма, ДанныеСостоянияЭДО, ЭтоНеЗаконченнаяОтправка);	
	Если Форма.ВводимИсправление = Истина Тогда
		ТребуетсяПовторно = Истина;	
	Иначе
		ТребуетсяПовторно = ЭтоНеЗаконченнаяОтправка;	
	КонецЕсли;
	
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Закрыт с отклонением" Тогда
		Объект.ТекущийТитул = Неопределено;
	Иначе
		УстановитьТекущийДоступныйТитулЭСВ(Объект, ТитулыПоДокументу, ТребуетсяПовторно);
	КонецЕсли;
	
	// По имеющимся титулам
	Элементы.СтраницаСодСВИнфПрв.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1")) <> Неопределено
		Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2")) <> Неопределено
		Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5")) <> Неопределено;	
	Элементы.СтраницаДопСодСВИнфПрв.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3")) <> Неопределено
			Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4")) <> Неопределено;
	Элементы.СтраницаСодСВИнфГО.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1")) <> Неопределено
			Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2")) <> Неопределено;
	Элементы.СтраницаСодСВИнфГП.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1")) <> Неопределено
			Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2")) <> Неопределено;

	// Документ еще не отправлялся - дадим редактировать
	Если ДанныеСостоянияЭДО.СуществуетАктуальныйДокумент = Ложь Или ЭтоНеЗаконченнаяОтправка = Истина Тогда 
		Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5") Тогда
			Элементы.СтраницаСодСВИнфПрв.ТолькоПросмотр = Ложь;
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4") Тогда
			Элементы.СтраницаДопСодСВИнфПрв.ТолькоПросмотр = Ложь;
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2") Тогда
			Элементы.СтраницаСодСВИнфГО.ТолькоПросмотр = Ложь;
		ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2") Тогда
			Элементы.СтраницаСодСВИнфГП.ТолькоПросмотр = Ложь;
		КонецЕсли;	
	КонецЕсли;
	
	Элементы.ФормаОтправитьЧерезЭДО.Доступность = ЗначениеЗаполнено(Объект.ТекущийТитул);
	
КонецПроцедуры

Процедура УстановитьТекущийДоступныйТитулЭСВ(Объект, ТитулыПоДокументу = Неопределено, ТребуетсяПовторно = Ложь) Экспорт
	
	ТекущийДоступныйТитул = Неопределено;	
	
	Если ТитулыПоДокументу = Неопределено Тогда
		ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект, Истина);	
	КонецЕсли;
	
	Если Объект.РольУчастника = 0 Тогда
		Объект.РольУчастника = 1;
	КонецЕсли;
	
	// Перевозчик
	Если Объект.РольУчастника = 1 Тогда
		Если Объект.ВидОперации = 0
			И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1")) = Неопределено
			И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1")) = Неопределено) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1");
		ИначеЕсли Объект.ВидОперации = 1
			И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2")) = Неопределено
			И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2")) = Неопределено) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2");
		ИначеЕсли Объект.ВидОперации = 2
			И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2")) = Неопределено
			И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5")) = Неопределено) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5");
		ИначеЕсли ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2")) <> Неопределено 
			И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3")) = Неопределено) Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3");
		ИначеЕсли ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2")) <> Неопределено 
			И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4")) = Неопределено) Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4");
		КонецЕсли;
	// Грузополучатель
	ИначеЕсли Объект.РольУчастника = 2 Тогда
		Если Объект.ТекущийПолученныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3") 
			И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1")) = Неопределено) Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1");
		ИначеЕсли Объект.ТекущийПолученныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5") 
			И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2")) = Неопределено) Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2");	
		КонецЕсли;
	// Грузоотправитель
	ИначеЕсли Объект.РольУчастника = 3 Тогда
		Если Объект.ТекущийПолученныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1") 
			И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1")) = Неопределено) Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1");
		ИначеЕсли Объект.ТекущийПолученныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2") 
			И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2")) = Неопределено) Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2");
		КонецЕсли;
	КонецЕсли;
	
	Объект.ТекущийТитул = ТекущийДоступныйТитул;
	
КонецПроцедуры


Процедура УстановитьДоступностьЭлементовЭТрН(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка, Истина);
	ВерсииТитулов = ОбменСГИСЭПДВызовСервера.ПолучитьВерсииТитуловДокумента(Объект.Ссылка, Объект.Организация);
	
	ВводимЛюбойДопТитул = Форма.ВводимДопТитулКорректировкиЭстафета
							Или Форма.ВводимДопТитулПереадресовки
							Или Форма.ВводимТитулКорректировкиСтоимости
							Или Форма.ВводимТитулКорректировкиЭстафета
							Или Форма.ВводимТитулПереадресовки
							Или Форма.ВводимТитулУказаниеПереадресовки
							Или Форма.ВводимДопТитулУказаниеПереадресовки;
	
	ЭтоНеЗаконченнаяОтправка = Ложь;
	УстановитьДоступностьЭлементовПоСостоянию(Форма, ДанныеСостоянияЭДО, ЭтоНеЗаконченнаяОтправка);	
	Если Форма.ВводимИсправление = Истина Тогда
		ТребуетсяПовторно = Истина;	
	Иначе
		ТребуетсяПовторно = ЭтоНеЗаконченнаяОтправка;	
	КонецЕсли;
	
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Закрыт с отклонением"
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Ожидается исправление" Тогда
		Объект.ТекущийТитул = Неопределено;
	Иначе
		УстановитьТекущийДоступныйТитулЭТрН(Объект, ТитулыПоДокументу, ВерсииТитулов, ВводимЛюбойДопТитул, ТребуетсяПовторно);
	КонецЕсли;
	
	// По имеющимся титулам
	Элементы.СтраницаСодИнфГО.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1")) <> Неопределено;	
	Элементы.СтраницаСодИнфПрвПрием.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2")) <> Неопределено;
	Элементы.СтраницаСодИнфГП.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3")) <> Неопределено;
	Элементы.СтраницаСодПрвВыд.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4")) <> Неопределено;
	
	Элементы.СтраницаСодИнфПА.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7")) <> Неопределено
			И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7");
	Элементы.СтраницаСодИнфЗамен.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8")) <> Неопределено
			И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8");
	Элементы.СтраницаТитулУказаниеПереадрес.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9")) <> Неопределено
			И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9");
	
	Элементы.СтраницаСодФХЖ1.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5")) <> Неопределено;
	Элементы.СтраницаСодФХЖ2.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6")) <> Неопределено;
		
	Элементы.СтраницаДопСодИнфПА.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7")) <> Неопределено
			И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7");
	Элементы.СтраницаДопСодИнфЗамен.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8")) <> Неопределено
			И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8");
	Элементы.СтраницаДопСодИнфГП.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3")) <> Неопределено
			И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3");
	Элементы.СтраницаДопСодПрвВыд.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4")) <> Неопределено
			И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4");
	Элементы.СтраницаДопТитулУказаниеПереадрес.ТолькоПросмотр = 
		ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9")) <> Неопределено
			И Объект.ТекущийТитул <> ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9");
	
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1") Тогда
		Элементы.СтраницаСодИнфГО.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда
		Элементы.СтраницаСодИнфПрвПрием.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3") Тогда
		Элементы.СтраницаСодИнфГП.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4") Тогда
		Элементы.СтраницаСодПрвВыд.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7") Тогда
		Элементы.СтраницаСодИнфПА.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8") Тогда
		Элементы.СтраницаСодИнфЗамен.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9") Тогда
		Элементы.СтраницаТитулУказаниеПереадрес.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5") Тогда
		Элементы.СтраницаСодФХЖ1.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6") Тогда
		Элементы.СтраницаСодФХЖ2.ТолькоПросмотр = Ложь; 
		
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7") Тогда
		Элементы.СтраницаДопСодИнфПА.ТолькоПросмотр = Ложь;	
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8") Тогда
		Элементы.СтраницаДопСодИнфЗамен.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3") Тогда
		Элементы.СтраницаДопСодИнфГП.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4") Тогда
		Элементы.СтраницаДопСодПрвВыд.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9") Тогда
		Элементы.СтраницаДопТитулУказаниеПереадрес.ТолькоПросмотр = Ложь;
	КонецЕсли;	
	
	Элементы.ФормаОтправитьЧерезЭДО.Доступность = ЗначениеЗаполнено(Объект.ТекущийТитул);
	Элементы.ФормаОтправитьQR.Видимость = ЗначениеЗаполнено(Объект.ТитулПеревозчикаПриемкаИдентификаторФайла)
												И ЗначениеЗаполнено(Объект.ТитулГрузополучателяИдентификаторФайла) = Ложь
															И (Объект.РольУчастника = 1 Или Объект.РольУчастника = 3);
	
	// Видимость кнопок ввода дополнительных титулов
	Элементы.ФормаСоздатьУказаниеПереадресовки.Видимость = Ложь;
	Элементы.ФормаСоздатьУказаниеПереадресовкиДоп.Видимость = Ложь;
	Элементы.ФормаСоздатьПереадресовку.Видимость = Ложь;
	Элементы.ФормаСоздатьЭстафету.Видимость = Ложь;
	Элементы.ФормаСоздатьПереадресовкуДоп.Видимость = Ложь;
	Элементы.ФормаСоздатьЭстафетуДоп.Видимость = Ложь; 
	Элементы.ФормаСоздатьКорректировкуСтоимости.Видимость = Ложь;
	
	КолПереадресовокНаЧастичнуюВыгрузку = ВерсииТитулов.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7")).Количество();
	КолПовторныхПриемок = ВерсииТитулов.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3")).Количество();
	КолПовторныхРазгрузок = ВерсииТитулов.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4")).Количество();
	
	ВсеЧастичныеПриемкиВыполнены = КолПереадресовокНаЧастичнуюВыгрузку = КолПовторныхРазгрузок; 
	ПередПриемкой = КолПереадресовокНаЧастичнуюВыгрузку > КолПовторныхПриемок;
	
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Закрыт с отклонением" Тогда
		Если ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1")) <> Неопределено
			И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2")) <> Неопределено
			И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется повторная отправка" Тогда
			Если Объект.РольУчастника = 1 Тогда 
				Если ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3")) = Неопределено
					И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4")) = Неопределено
					И ВводимЛюбойДопТитул = Ложь Тогда
					Элементы.ФормаСоздатьЭстафету.Видимость = Истина;
				КонецЕсли;
				
				Если ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3")) = Неопределено
					// Пока ГИС не поддерживает Т9
					// И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9")) <> Неопределено
					И ВводимЛюбойДопТитул = Ложь Тогда
					Элементы.ФормаСоздатьПереадресовку.Видимость = Истина;
				КонецЕсли;
				
				Если ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5")) = Неопределено
					И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4")) <> Неопределено
					// Пока ГИС не поддерживает Т9
					// И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9")) <> Неопределено
					И ВсеЧастичныеПриемкиВыполнены = Истина
					И ВводимЛюбойДопТитул = Ложь Тогда
					Элементы.ФормаСоздатьПереадресовкуДоп.Видимость = Истина;
				КонецЕсли;			
				
				Если ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4")) <> Неопределено
					И ПередПриемкой = Истина
					И ВводимЛюбойДопТитул = Ложь Тогда
					Элементы.ФормаСоздатьЭстафетуДоп.Видимость = Истина;
					Если Объект.РольУчастника = 1 Или Объект.РольУчастника = 3 Тогда
						Элементы.ФормаОтправитьQR.Видимость = Истина;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Объект.РольУчастника = 2 Или Объект.РольУчастника = 3 Тогда
				Если ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4")) <> Неопределено
					И ВсеЧастичныеПриемкиВыполнены = Истина
					И ВводимЛюбойДопТитул = Ложь Тогда
					// Пока ГИС не поддерживает Т9
					// Элементы.ФормаСоздатьУказаниеПереадресовкиДоп.Видимость = Истина;
					Элементы.ФормаСоздатьУказаниеПереадресовкиДоп.Видимость = Ложь;
				ИначеЕсли ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3")) = Неопределено Тогда
					// Пока ГИС не поддерживает Т9
					// Элементы.ФормаСоздатьУказаниеПереадресовки.Видимость = Истина;
					Элементы.ФормаСоздатьУказаниеПереадресовки.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РольУчастника = 1 
		И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4")) <> Неопределено
		И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5")) = Неопределено
		И ДанныеСостоянияЭДО.ПредставлениеСостояния <> "Требуется повторная отправка"
		И ВводимЛюбойДопТитул = Ложь
		И ВсеЧастичныеПриемкиВыполнены = Истина Тогда
		Элементы.ФормаСоздатьКорректировкуСтоимости.Видимость = Истина;	
	КонецЕсли;
	
	Элементы.ОтменаВводаДопТитула.Видимость = ВводимЛюбойДопТитул;
	
	Если (Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") 
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4")
		Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6"))
			И Форма.ВводимИсправление = Ложь Тогда
			Элементы.ФормаОтправитьУОУ.Видимость = Истина;
			Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда
				Элементы.ФормаОтправитьУОУ.Заголовок = "Отказаться от перевозки";	
			КонецЕсли;
	Иначе
		Элементы.ФормаОтправитьУОУ.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры


Процедура УстановитьТекущийДоступныйТитулЭТрН(Объект, ТитулыПоДокументу = Неопределено, ВерсииТитулов = Неопределено, ВводимДопТитул = Ложь, ТребуетсяПовторно = Ложь) Экспорт
	
	Если ТитулыПоДокументу = Неопределено Тогда
		ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект, Истина);	
	КонецЕсли;
	
	Если ВерсииТитулов = Неопределено Тогда
		ВерсииТитулов = ОбменСГИСЭПДВызовСервера.ПолучитьВерсииТитуловДокумента(Объект, Объект.Организация);	
	КонецЕсли;
	
	ТекущийДоступныйТитул = Неопределено;	
	
	Если Объект.РольУчастника = 0 Тогда
		Объект.РольУчастника = 3;
	КонецЕсли;
	
	// Перевозчик
	Если Объект.РольУчастника = 1 Тогда	
		Если ТребуетсяПовторно И ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5"))) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5");
		ИначеЕсли ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3")))
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4"))) = Ложь) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4");
		ИначеЕсли ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3")) <> Неопределено 
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4"))) = Ложь) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4");		
		ИначеЕсли ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1")))
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"))) = Ложь) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2");
		КонецЕсли;			
	// Грузополучатель
	ИначеЕсли (Объект.РольУчастника = 2 
				Или (Объект.РольУчастника = 3 
					И ЗначениеЗаполнено(Объект.СсылкаТитулГрузоотправителяГрузоотправитель)
					И (Объект.СсылкаТитулГрузоотправителяГрузополучатель = Объект.СсылкаТитулГрузоотправителяГрузоотправитель
						Или Объект.СсылкаДопТитулПереадресовкаНовыйГрузополучатель = Объект.СсылкаТитулГрузоотправителяГрузоотправитель
						Или Объект.СсылкаТитулПереадресовкаНовыйГрузополучатель = Объект.СсылкаТитулГрузоотправителяГрузоотправитель))) Тогда
		Если ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7"))) 
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3"))) = Ложь) Тогда	
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3");
		ИначеЕсли (ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"))))
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3"))) = Ложь) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3");				
		КонецЕсли;
	КонецЕсли;
	// Грузоотправитель
	Если ТекущийДоступныйТитул = Неопределено И Объект.РольУчастника = 3 Тогда	
		Если ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5"))) 
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6"))) = Ложь) Тогда	
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6");
		ИначеЕсли ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1"))) = Ложь Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1");	
		КонецЕсли;
	КонецЕсли;
	
	// Учитываем ввод дополнительных титулов
	Если (Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9")) Тогда
		Если (ВводимДопТитул = Ложь И ТребуетсяПовторно = Ложь)
			Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3"))) Тогда
			Объект.ТекущийТитул = ТекущийДоступныйТитул;	
		КонецЕсли;
	ИначеЕсли (Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8")
			Или Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9")) Тогда
			Если (ВводимДопТитул = Ложь И ТребуетсяПовторно = Ложь) Тогда
				Объект.ТекущийТитул = ТекущийДоступныйТитул;
			Иначе	
				КолПереадресовокНаЧастичнуюВыгрузку = ВерсииТитулов.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7")).Количество();
				КолПовторныхПриемок = ВерсииТитулов.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3")).Количество();
				КолПовторныхРазгрузок = ВерсииТитулов.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4")).Количество();
				
				ВсеЧастичныеПриемкиВыполнены = КолПереадресовокНаЧастичнуюВыгрузку = КолПовторныхРазгрузок; 
				ПередПриемкой = КолПереадресовокНаЧастичнуюВыгрузку > КолПовторныхПриемок;
				Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7") 
					И ВсеЧастичныеПриемкиВыполнены = Ложь
					И ТребуетсяПовторно = Ложь Тогда
					Объект.ТекущийТитул = ТекущийДоступныйТитул;
				ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8")
					И ПередПриемкой = Ложь
					И ТребуетсяПовторно = Ложь Тогда
					Объект.ТекущийТитул = ТекущийДоступныйТитул;
				ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9")
					И ВсеЧастичныеПриемкиВыполнены = Ложь
					И ТребуетсяПовторно = Ложь Тогда
					Объект.ТекущийТитул = ТекущийДоступныйТитул;
				КонецЕсли;
			КонецЕсли;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5") Тогда
		Если (ВводимДопТитул = Ложь И ТребуетсяПовторно = Ложь)
			Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5"))) Тогда
			Объект.ТекущийТитул = ТекущийДоступныйТитул;
		КонецЕсли;
	// Устанавливаем рассчитанный текущий титул	
	ИначеЕсли Объект.ТекущийТитул <> ТекущийДоступныйТитул Тогда
		Объект.ТекущийТитул = ТекущийДоступныйТитул;
	КонецЕсли;		 

КонецПроцедуры


Процедура УстановитьДоступностьЭлементовЭЗН(Форма) Экспорт

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка, Истина);
	
	ЭтоНеЗаконченнаяОтправка = Ложь;
	УстановитьДоступностьЭлементовПоСостоянию(Форма, ДанныеСостоянияЭДО, ЭтоНеЗаконченнаяОтправка);	
	Если Форма.ВводимИсправление = Истина Тогда
		ТребуетсяПовторно = Истина;	
	Иначе
		ТребуетсяПовторно = ЭтоНеЗаконченнаяОтправка;	
	КонецЕсли;
	
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Закрыт с отклонением"
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Ожидается исправление" Тогда
		Объект.ТекущийТитул = Неопределено;
	Иначе
		УстановитьТекущийДоступныйТитулЭЗН(Объект, ТитулыПоДокументу, ТребуетсяПовторно);
	КонецЕсли;
	
	// По имеющимся титулам
	Элементы.СтраницаСодЗНИнфФт.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул1")) <> Неопределено;	
	Элементы.СтраницаСодЗНИнфФщ.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул2")) <> Неопределено;
	Элементы.СтраницаСодЗНИнфФтПодача.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул3")) <> Неопределено;	
	Элементы.СтраницаСодЗНИнфФщВозврат.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул4")) <> Неопределено;
	
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул1") Тогда
		Элементы.СтраницаСодЗНИнфФт.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул2") Тогда
		Элементы.СтраницаСодЗНИнфФщ.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул3") Тогда
		Элементы.СтраницаСодЗНИнфФтПодача.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул4") Тогда
		Элементы.СтраницаСодЗНИнфФщВозврат.ТолькоПросмотр = Ложь;	
	КонецЕсли;	
	
	Элементы.ФормаОтправитьЧерезЭДО.Доступность = ЗначениеЗаполнено(Объект.ТекущийТитул);
	
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул2")
		И Форма.ВводимИсправление = Ложь Тогда
		Элементы.ФормаОтправитьУОУ.Видимость = Истина;
	Иначе
		Элементы.ФормаОтправитьУОУ.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьТекущийДоступныйТитулЭЗН(Объект, ТитулыПоДокументу = Неопределено, ТребуетсяПовторно = Ложь) Экспорт
	
	ТекущийДоступныйТитул = Неопределено;	
	
	Если ТитулыПоДокументу = Неопределено Тогда
		ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект, Истина);	
	КонецЕсли;
	
	Если Объект.РольУчастника = 0 Тогда
		Объект.РольУчастника = 3;
	КонецЕсли;
	
	// Фрахтовщик
	Если Объект.РольУчастника = 1 Тогда	
		Если ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул3")))
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул4"))) = Ложь) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул4");	
		ИначеЕсли ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул1")))
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул2"))) = Ложь) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул2");
		КонецЕсли;					
	// Фрахтователь
	ИначеЕсли Объект.РольУчастника = 3 Тогда	
		Если ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул2")))
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул3"))) = Ложь) Тогда	
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул3");
		ИначеЕсли ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул1"))) = Ложь Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул1");	
		КонецЕсли;
	КонецЕсли;	 
	
	Объект.ТекущийТитул = ТекущийДоступныйТитул;

КонецПроцедуры


Процедура УстановитьДоступностьЭлементовЭЗЗ(Форма) Экспорт

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;

	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка, Истина);
	
	ЭтоНеЗаконченнаяОтправка = Ложь;
	УстановитьДоступностьЭлементовПоСостоянию(Форма, ДанныеСостоянияЭДО, ЭтоНеЗаконченнаяОтправка);	
	ТребуетсяПовторно = ЭтоНеЗаконченнаяОтправка;	
	
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Закрыт с отклонением" Тогда
		Объект.ТекущийТитул = Неопределено;
	Иначе
		УстановитьТекущийДоступныйТитулЭЗЗ(Объект, ТитулыПоДокументу, ТребуетсяПовторно);
	КонецЕсли;
	
	// По имеющимся титулам
	Элементы.СтраницаТитулГрузоотправителя.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1")) <> Неопределено;	
	Элементы.СтраницаТитулПеревозчика.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2")) <> Неопределено;
	
	// Документ еще не отправлялся - дадим редактировать
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1") Тогда
		Элементы.СтраницаТитулГрузоотправителя.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2") Тогда
		Элементы.СтраницаТитулПеревозчика.ТолькоПросмотр = Ложь;	
	КонецЕсли;	
	
	Элементы.ФормаОтправитьЧерезЭДО.Доступность = ЗначениеЗаполнено(Объект.ТекущийТитул);
		
КонецПроцедуры

Процедура УстановитьТекущийДоступныйТитулЭЗЗ(Объект, ТитулыПоДокументу = Неопределено, ТребуетсяПовторно = Ложь) Экспорт
	
	ТекущийДоступныйТитул = Неопределено;	
	
	Если ТитулыПоДокументу = Неопределено Тогда
		ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект, Истина);	
	КонецЕсли;
	
	Если Объект.РольУчастника = 0 Тогда
		Объект.РольУчастника = 3;
	КонецЕсли;
	
	// Перевозчик
	Если Объект.РольУчастника = 1 Тогда	
		Если ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1")))
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2"))) = Ложь) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2");
		КонецЕсли;					
	// Грузоотправитель
	ИначеЕсли Объект.РольУчастника = 3	
		И ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1"))) = Ложь Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1");	
	КонецЕсли;	 
	
	Объект.ТекущийТитул = ТекущийДоступныйТитул;

КонецПроцедуры


Процедура УстановитьДоступностьЭлементовЭДФ(Форма) Экспорт

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;

	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка, Истина);
	
	ЭтоНеЗаконченнаяОтправка = Ложь;
	УстановитьДоступностьЭлементовПоСостоянию(Форма, ДанныеСостоянияЭДО, ЭтоНеЗаконченнаяОтправка);	
	ТребуетсяПовторно = ЭтоНеЗаконченнаяОтправка;	
	
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Закрыт с отклонением"
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Ожидается исправление" Тогда
		Объект.ТекущийТитул = Неопределено;
	Иначе
		УстановитьТекущийДоступныйТитулЭДФ(Объект, ТитулыПоДокументу, ТребуетсяПовторно);
	КонецЕсли;
	
	// По имеющимся титулам
	Элементы.СтраницаТитулФрахтователя.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул1")) <> Неопределено;	
	Элементы.СтраницаТитулФрахтовщика.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул2")) <> Неопределено;
	
	// Документ еще не отправлялся - дадим редактировать
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул1") Тогда
		Элементы.СтраницаТитулФрахтователя.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул2") Тогда
		Элементы.СтраницаТитулФрахтовщика.ТолькоПросмотр = Ложь;	
	КонецЕсли;	
	
	Элементы.ФормаОтправитьQR.Видимость = ЗначениеЗаполнено(Объект.ТитулФрахтовщикаИдентификаторФайла);
	
	Элементы.ФормаОтправитьЧерезЭДО.Доступность = ЗначениеЗаполнено(Объект.ТекущийТитул);
	
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул2") Тогда
		// Пока правилами обмена не предусмотрено УОУ
		Элементы.ФормаОтправитьУОУ.Видимость = Ложь;
	Иначе
		Элементы.ФормаОтправитьУОУ.Видимость = Ложь;	
	КонецЕсли;
		
КонецПроцедуры

Процедура УстановитьТекущийДоступныйТитулЭДФ(Объект, ТитулыПоДокументу = Неопределено, ТребуетсяПовторно = Ложь) Экспорт
	
	ТекущийДоступныйТитул = Неопределено;	
	
	Если ТитулыПоДокументу = Неопределено Тогда
		ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект, Истина);	
	КонецЕсли;
	
	Если Объект.РольУчастника = 0 Тогда
		Объект.РольУчастника = 3;
	КонецЕсли;
	
	// Перевозчик
	Если Объект.РольУчастника = 1 Тогда	
		Если ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул1")))
			И (ТребуетсяПовторно Или ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул2"))) = Ложь) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул2");
		КонецЕсли;					
	// Грузоотправитель
	ИначеЕсли Объект.РольУчастника = 3	
		И ЗначениеЗаполнено(ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул1"))) = Ложь Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул1");	
	КонецЕсли;	 
	
	Объект.ТекущийТитул = ТекущийДоступныйТитул;

КонецПроцедуры


Процедура УстановитьДоступностьЭлементовЭПЛ(Форма) Экспорт

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(Объект.Ссылка);
	ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект.Ссылка, Истина);
	
	ВводимДопТитул = Форма.ВводимМедосмотрПосле;
			
	ЭтоНеЗаконченнаяОтправка = Ложь;
	УстановитьДоступностьЭлементовПоСостоянию(Форма, ДанныеСостоянияЭДО, ЭтоНеЗаконченнаяОтправка);	
	Если Форма.ВводимИсправление = Истина Тогда
		ТребуетсяПовторно = Истина;	
	Иначе
		ТребуетсяПовторно = ЭтоНеЗаконченнаяОтправка;	
	КонецЕсли;
	
	Если ДанныеСостоянияЭДО.ПредставлениеСостояния = "Закрыт с отклонением"
		Или ДанныеСостоянияЭДО.ПредставлениеСостояния = "Ожидается исправление" Тогда
		Объект.ТекущийТитул = Неопределено;
	Иначе
		УстановитьТекущийДоступныйТитулЭПЛ(Объект, Форма, ТитулыПоДокументу, ТребуетсяПовторно, ВводимДопТитул);
	КонецЕсли;
	
	// По имеющимся титулам
	Элементы.СтраницаТитулОформление.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1")) <> Неопределено;	
	Элементы.СтраницаТитулМедосмотр.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2")) <> Неопределено;
	Элементы.СтраницаТитулВыпуск.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3")) <> Неопределено;	
	Элементы.СтраницаТитулВыезд.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4")) <> Неопределено;
	Элементы.СтраницаТитулЗаезд.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5")) <> Неопределено;	
	Элементы.СтраницаТитулМедосмотрПосле.ТолькоПросмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6")) <> Неопределено;
	
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1") Тогда
		Элементы.СтраницаТитулОформление.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
		Элементы.СтраницаТитулМедосмотр.ТолькоПросмотр = Ложь;
		// По нормативке последовательность составления Т2 и Т3 не имеет значения
		Если ВхождениеРоли(Объект.РольУчастника, 4)
			И Объект.ТитулОформлениеПризнакНачалаРейса = "1" Тогда
			Элементы.СтраницаТитулВыпуск.ТолькоПросмотр = Ложь;
		КонецЕсли;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3") Тогда
		Элементы.СтраницаТитулВыпуск.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
		Элементы.СтраницаТитулВыезд.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда
		Элементы.СтраницаТитулЗаезд.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
		Элементы.СтраницаТитулМедосмотрПосле.ТолькоПросмотр = Ложь;
	КонецЕсли;	
	
	Элементы.ФормаОтправитьЧерезЭДО.Доступность = ЗначениеЗаполнено(Объект.ТекущийТитул);
	
	Элементы.ФормаОтправитьQR.Видимость = ЗначениеЗаполнено(Объект.ТитулВыездИдентификаторФайла) 
											И Объект.ЭтоВходящий = Ложь;
											
	Элементы.ФормаСоздатьМедосмотрПосле.Видимость = ВхождениеРоли(Объект.РольУчастника, 2)
								И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5")) <> Неопределено
								И Форма.ВводимМедосмотрПосле = Ложь;
	Элементы.ФормаОтменаВводаДопТитула.Видимость = ВводимДопТитул;
	
	Если Объект.ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
		Элементы.ФормаОтправитьУОУ.Видимость = Истина;
	Иначе
		Элементы.ФормаОтправитьУОУ.Видимость = Ложь;	
	КонецЕсли;
		
КонецПроцедуры

Процедура УстановитьТекущийДоступныйТитулЭПЛ(Объект, Форма = Неопределено, ТитулыПоДокументу = Неопределено, ТребуетсяПовторно = Ложь, ВводимДопТитул = Ложь) Экспорт
	
	ТекущийДоступныйТитул = Неопределено;	
	
	Если ТитулыПоДокументу = Неопределено Тогда
		ТитулыПоДокументу = ОбменСГИСЭПДВызовСервера.ПолучитьТитулыПоДокументу(Объект, Истина);	
	КонецЕсли;
	
	Если Объект.РольУчастника = 0 Тогда
		Объект.РольУчастника = 1;
	КонецЕсли;
	
	КоличествоВодителей = 0;
	ИмяТаблицы = "ТитулОформлениеВодители";
	Если Форма <> Неопределено Тогда
		КоличествоВодителей = ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(Форма, ИмяТаблицы);
	Иначе
		ДанныеРеквизитовТитула = ОбменСГИСЭПДВызовСервера.ДанныеРеквизитовЭПД(Объект.Ссылка, 
															ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1"));
		МассивСтрокВодителей = Неопределено;
		Если ДанныеРеквизитовТитула.Свойство(ИмяТаблицы, МассивСтрокВодителей)
			И ТипЗнч(МассивСтрокВодителей) = Тип("Массив") Тогда
			КоличествоВодителей = МассивСтрокВодителей.Количество();	
		КонецЕсли;
	КонецЕсли;
	
	
	// Определим необходимость отправки нескольких титулов медосмотра
	МедосмотрыНеПройденыПолностью = Истина;
	СтатусМедосмотра = ?(ВхождениеРоли(Объект.РольУчастника, 2), 
							ПредопределенноеЗначение("Перечисление.СтатусыСообщенийЭДО.Отправлен"), 
							ПредопределенноеЗначение("Перечисление.СтатусыСообщенийЭДО.Получен"));
	Если ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1")) <> Неопределено Тогда
		ТитулыМедосмотр = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2"));
		КоличествоМедосмотров = 0;
		Если ТитулыМедосмотр <> Неопределено Тогда
			Для Каждого СтруктураМедосмотр Из ТитулыМедосмотр Цикл
				Если СтруктураМедосмотр.Статус = СтатусМедосмотра Тогда
					КоличествоМедосмотров = КоличествоМедосмотров + 1;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		МедосмотрыНеПройденыПолностью = КоличествоВодителей > КоличествоМедосмотров;
	КонецЕсли;
	
	Если (Объект.ТитулОформлениеОбязательностьМедОсмотраПосле = "1"
			Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6")) <> Неопределено)
		И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5")) <> Неопределено Тогда
		ТитулыМедосмотрПосле = ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6"));
		КоличествоМедосмотровПосле = 0;
		Если ТитулыМедосмотрПосле <> Неопределено Тогда
			Для Каждого СтруктураМедосмотр Из ТитулыМедосмотрПосле Цикл
				Если СтруктураМедосмотр.Статус = СтатусМедосмотра Тогда
					КоличествоМедосмотровПосле = КоличествоМедосмотровПосле + 1;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		МедосмотрыНеПройденыПолностью = КоличествоВодителей > КоличествоМедосмотровПосле;
	КонецЕсли;

	
	// Роли участников обмена:
	// 1 - оформитель
	// 2 - медосмотр
	// 4 - техконтроль
	// 8 - показания одометра
			
	// Медработник (после)
	Если ВхождениеРоли(Объект.РольУчастника, 2)
		И Объект.ТитулОформлениеОбязательностьМедОсмотраПосле = "1"
		И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5")) <> Неопределено
		И (ТребуетсяПовторно Или МедосмотрыНеПройденыПолностью) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6");
	// Показания одометра (заезд)
	ИначеЕсли ВхождениеРоли(Объект.РольУчастника, 8)
		И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4")) <> Неопределено 
		И (ТребуетсяПовторно = Ложь И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5")) = Неопределено
			Или ТребуетсяПовторно И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5")) <> Неопределено) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5");
	// Показания одометра (выезд)
	ИначеЕсли ВхождениеРоли(Объект.РольУчастника, 8)
		И (ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3")) <> Неопределено
			И Объект.ТитулВыпускРезультатПроведенияПредсменногоКонтроля = "1"
				Или Объект.ТитулОформлениеПризнакНачалаРейса = "2")
		И МедосмотрыНеПройденыПолностью = Ложь
		И (ТребуетсяПовторно = Ложь И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4")) = Неопределено
			Или ТребуетсяПовторно И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4")) <> Неопределено) Тогда
		ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4");
	// Техконтроль
	ИначеЕсли ВхождениеРоли(Объект.РольУчастника, 4)
		И Объект.ТитулОформлениеПризнакНачалаРейса = "1"
		И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1")) <> Неопределено
		И (МедосмотрыНеПройденыПолностью = Ложь
			Или ВхождениеРоли(Объект.РольУчастника, 2) = Ложь)
		И (ТребуетсяПовторно = Ложь И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3")) = Неопределено
			Или ТребуетсяПовторно И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3")) <> Неопределено) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3");
	// Медработник
	ИначеЕсли ВхождениеРоли(Объект.РольУчастника, 2)
		И ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1")) <> Неопределено
		И (ТребуетсяПовторно Или МедосмотрыНеПройденыПолностью) Тогда
		ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2");		
	// Оформитель
	ИначеЕсли ВхождениеРоли(Объект.РольУчастника, 1)
		И (ТребуетсяПовторно Или ТитулыПоДокументу.Получить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1")) = Неопределено) Тогда
			ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1");
	КонецЕсли;	 
	
	Если ВводимДопТитул = Ложь
		И Объект.ТекущийТитул <> ТекущийДоступныйТитул Тогда
		Объект.ТекущийТитул = ТекущийДоступныйТитул;
	КонецЕсли;

КонецПроцедуры


Функция ВхождениеРоли(РольУчастникаОбшая, РольУчастника, ВсегоРолей = 4) Экспорт
	
	Если РольУчастникаОбшая = РольУчастника Тогда
		Возврат Истина;
	КонецЕсли;
		
	МассивВключающихРолей = ВсеВключающиеРоли(РольУчастника, ВсегоРолей);
	
	Возврат МассивВключающихРолей.Найти(РольУчастникаОбшая) <> Неопределено;
	
КонецФункции

Функция ВсеВключающиеРоли(РольУчастника, ВсегоРолей = 4) Экспорт
	
	МаксРоль = 1;
	ЗначениеРоли = 1;
	Для Итератор = 2 По ВсегоРолей Цикл
		ЗначениеРоли = ЗначениеРоли * 2;
		МаксРоль = МаксРоль + ЗначениеРоли;
	КонецЦикла;	
	
	Если ТипЗнч(РольУчастника) = Тип("Массив") Тогда
		МассивРолей = РольУчастника;
	Иначе
		МассивРолей = Новый Массив;
		МассивРолей.Добавить(РольУчастника);
	КонецЕсли;
	
	МассивВключающихРолей = Новый Массив;
	ИтераторИнтервалов = 0;
	ДобавлениеРоли = Истина;
	Для Каждого РольМассива Из МассивРолей Цикл
		Для ИтераторРоли = РольМассива По МаксРоль Цикл
			Если ИтераторИнтервалов < РольМассива Тогда
				Если ДобавлениеРоли = Истина Тогда
					МассивВключающихРолей.Добавить(ИтераторРоли);
				КонецЕсли;
				ИтераторИнтервалов = ИтераторИнтервалов + 1;
			КонецЕсли;
			Если ИтераторИнтервалов = РольМассива Тогда
				ИтераторИнтервалов = 0;
				ДобавлениеРоли = Не ДобавлениеРоли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат МассивВключающихРолей;
	
КонецФункции

Функция АдресатыПоИдФайл(ИдФайл) Экспорт
	
	Результат = Новый Структура("Грузоотправитель, Грузоперевозчик, Грузополучатель, ЕстьИные", "", "", "", Ложь);
	
	МассивЧастейИдФайла = СтрРазделить(ИдФайл, "_", Истина);
	
	Результат.ЕстьИные = МассивЧастейИдФайла[5] = "1";
	
	// Электронная транспортная накладная
	Если СтрНачинаетсяС(ИдФайл, "ON_TRNACLGROT") Или СтрНачинаетсяС(ИдФайл, "ON_TRNGO") Тогда
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
		Результат.Грузополучатель = МассивЧастейИдФайла[3];
		Результат.Грузоотправитель = МассивЧастейИдФайла[4];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_TRNACLPPRIN") Или СтрНачинаетсяС(ИдФайл, "ON_TRNPERPRIN") Тогда
		Результат.Грузополучатель = МассивЧастейИдФайла[2];
		Результат.Грузоотправитель = МассивЧастейИдФайла[3];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[4];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_TRNINFGO") Тогда
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
		Результат.Грузоотправитель = МассивЧастейИдФайла[3];
		Результат.Грузополучатель = МассивЧастейИдФайла[3];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_TRNPEREADR") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[2];
		Результат.Грузополучатель = МассивЧастейИдФайла[3];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[4];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_TRNZAMEN") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[2];
		Результат.Грузополучатель = МассивЧастейИдФайла[3];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[4];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_TRNACLGRPO") Или СтрНачинаетсяС(ИдФайл, "ON_TRNGP") Тогда
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
		Результат.Грузоотправитель = МассивЧастейИдФайла[3];
		Результат.Грузополучатель = МассивЧастейИдФайла[4];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_TRNACLPVYN") Или СтрНачинаетсяС(ИдФайл, "ON_TRNPERVYD") Тогда
		Результат.Грузополучатель = МассивЧастейИдФайла[2];
		Результат.Грузоотправитель = МассивЧастейИдФайла[3];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[4];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_TRNPUDPER") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[2];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[4];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_TRNPUDGO") Тогда
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
		Результат.Грузоотправитель = МассивЧастейИдФайла[4];
	
	// Заказ-наряд	
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_ZAKAZNARSOG") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[2];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[3];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_ZAKAZNARPOD") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[3];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_ZAKAZNARVOZ") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[2];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[3];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_ZAKAZNAR") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[3];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
	
	// Сопроводительная ведомость
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_SOPVEDPER") Тогда
		Результат.Грузополучатель = МассивЧастейИдФайла[3];
		Результат.Грузоотправитель = МассивЧастейИдФайла[2];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[4];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_SOPVEDGO") Тогда
		Результат.Грузополучатель = МассивЧастейИдФайла[3];
		Результат.Грузоотправитель = МассивЧастейИдФайла[4];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_SOPVEDGP") Тогда
		Результат.Грузополучатель = МассивЧастейИдФайла[4];
		Результат.Грузоотправитель = МассивЧастейИдФайла[3];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
		
	// Заказ (заявка)	
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_ZAKZVGO") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[3];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_ZAKZVPER") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[2];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[3];
		
	// Путевой лист	
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_PTLSSOBTS") Тогда
		Результат.Вставить("Медосмотр", МассивЧастейИдФайла[2]);
		Результат.Вставить("Техконтроль", МассивЧастейИдФайла[3]);
		Результат.Вставить("Одометр", МассивЧастейИдФайла[4]);
		Результат.Вставить("Оформитель", МассивЧастейИдФайла[5]);
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_PTLSPRMO") Тогда
		Результат.Вставить("Оформитель", МассивЧастейИдФайла[2]);
		Результат.Вставить("Техконтроль", МассивЧастейИдФайла[3]);
		Результат.Вставить("Медосмотр", МассивЧастейИдФайла[4]);
		Результат.Вставить("Одометр", "");
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_PTLSVIPTS") Тогда
		Результат.Вставить("Оформитель", МассивЧастейИдФайла[2]);
		Результат.Вставить("Одометр", МассивЧастейИдФайла[3]);
		Результат.Вставить("Техконтроль", МассивЧастейИдФайла[4]);
		Результат.Вставить("Медосмотр", "");
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_PTLSODVZD") Тогда
		Результат.Вставить("Оформитель", МассивЧастейИдФайла[2]);
		Результат.Вставить("Одометр", МассивЧастейИдФайла[3]);
		Результат.Вставить("Медосмотр", "");
		Результат.Вставить("Техконтроль", "");
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_PTLSODPARK") Тогда
		Результат.Вставить("Оформитель", МассивЧастейИдФайла[2]);
		Результат.Вставить("Медосмотр", МассивЧастейИдФайла[3]);
		Результат.Вставить("Одометр", МассивЧастейИдФайла[4]);
		Результат.Вставить("Техконтроль", "");		
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_PTLSPOSMO") Тогда
		Результат.Вставить("Оформитель", МассивЧастейИдФайла[2]);
		Результат.Вставить("Медосмотр", МассивЧастейИдФайла[3]);
		Результат.Вставить("Техконтроль", "");		
		Результат.Вставить("Одометр", "");
		
	// Договор фрахтования
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_DOGFRAKHTEL") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[3];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[2];
	ИначеЕсли СтрНачинаетсяС(ИдФайл, "ON_DOGFRASHCH") Тогда
		Результат.Грузоотправитель = МассивЧастейИдФайла[2];
		Результат.Грузоперевозчик = МассивЧастейИдФайла[3];
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции


Функция ПрефиксТитулаПоЭлементуРегламентаЭДО(ЭлементРегламента) Экспорт
	
	Результат = Новый Структура("ВПрограмме, ПолеУИД, ДляФайла");
	Результат.Вставить("ШаблонИмениФайла");
	Результат.Вставить("КНД"); 
	Результат.Вставить("ПоФактХЖ");
	Если ЗначениеЗаполнено(ЭлементРегламента) Тогда
		// Электронная транспортная накладная
		Если ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1") Тогда
			Результат.ВПрограмме = "ТитулГрузоотправителя";
			Результат.ДляФайла = "ON_TRNACLGROT";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГП_ИдГО_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110339";
			Результат.ПоФактХЖ = "Транспортная накладная, информация грузоотправителя";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда
			Результат.ВПрограмме = "ТитулПеревозчикаПриемка";
			Результат.ДляФайла = "ON_TRNACLPPRIN";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГП_ИдГО_ИдПЕР_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110340";
			Результат.ПоФактХЖ = "Транспортная накладная, информация перевозчика о приеме груза";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3") Тогда
			Результат.ВПрограмме = "ТитулГрузополучателя";	
			Результат.ДляФайла = "ON_TRNACLGRPO";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГО_ИдГП_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110341";
			Результат.ПоФактХЖ = "Транспортная накладная, информация грузополучателя о приеме груза";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4") Тогда
			Результат.ВПрограмме = "ТитулПеревозчикаВыдача";	
			Результат.ДляФайла = "ON_TRNACLPVYN";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГП_ИдГО_ИдПЕР_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110342";
			Результат.ПоФактХЖ = "Транспортная накладная, информация перевозчика о выдаче груза грузополучателю";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9") Тогда
			Результат.ВПрограмме = "ТитулУказаниеПереадрес";
			Результат.ДляФайла = "ON_TRNINFGO";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГО_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1167009";
			Результат.ПоФактХЖ = "Транспортная накладная, указание о переадресовке";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9") Тогда
			Результат.ВПрограмме = "ДопТитулУказаниеПереадрес";
			Результат.ДляФайла = "ON_TRNINFGO";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГО_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1167009";
			Результат.ПоФактХЖ = "Транспортная накладная, указание о переадресовке";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7") Тогда
			Результат.ВПрограмме = "ТитулПереадресовка";
			Результат.ДляФайла = "ON_TRNPEREADR";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдГП_ИдПЕР_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110343";
			Результат.ПоФактХЖ = "Транспортная накладная, информация о переадресовке";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8") Тогда
			Результат.ВПрограмме = "ТитулПеревозчикаЗамены";	
			Результат.ДляФайла = "ON_TRNZAMEN";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдГП_ИдПЕР_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110344";
			Результат.ПоФактХЖ = "Транспортная накладная, информация о заменах водителя (водителей) и (или) транспортного средства";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5") Тогда
			Результат.ВПрограмме = "ТитулПеревозчикаФХЖ";	
			Результат.ДляФайла = "ON_TRNPUDPER";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО__ИдПЕР__GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110345";
			Результат.ПоФактХЖ = "Транспортная накладная, информация перевозчика об изменении финансового состояния перевозчика и грузоотправителя в результате выполнения грузовой перевозки";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6") Тогда
			Результат.ВПрограмме = "ТитулГрузоотправителяФХЖ";
			Результат.ДляФайла = "ON_TRNPUDGO";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР__ИдГО__GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110346";
			Результат.ПоФактХЖ = "Транспортная накладная, информация грузоотправителя об изменении финансового состояния перевозчика и грузоотправителя в результате выполнения грузовой перевозки";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7") Тогда
			Результат.ВПрограмме = "ДопТитулПереадресовка";
			Результат.ДляФайла = "ON_TRNPEREADR";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдГП_ИдПЕР_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110343";
			Результат.ПоФактХЖ = "Транспортная накладная, информация о переадресовке";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8") Тогда
			Результат.ВПрограмме = "ДопТитулПеревозчикаЗамены";	
			Результат.ДляФайла = "ON_TRNZAMEN";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдГП_ИдПЕР_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110344";
			Результат.ПоФактХЖ = "Транспортная накладная, информация о заменах водителя (водителей) и (или) транспортного средства";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3") Тогда
			Результат.ВПрограмме = "ДопТитулГрузополучателя";	
			Результат.ДляФайла = "ON_TRNACLGRPO";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГО_ИдГП_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110341";
			Результат.ПоФактХЖ = "Транспортная накладная, информация грузополучателя о приеме груза";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4") Тогда
			Результат.ВПрограмме = "ДопТитулПеревозчикаВыдача";	
			Результат.ДляФайла = "ON_TRNACLPVYN";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГП_ИдГО_ИдПЕР_НалДр_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110342";
			Результат.ПоФактХЖ = "Транспортная накладная, информация перевозчика о выдаче груза грузополучателю";
		
		
		// Заказ-наряд
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул1") Тогда
			Результат.ВПрограмме = "ТитулФрахтователя";
			Результат.ДляФайла = "ON_ZAKAZNAR";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГО_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110350";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул2") Тогда
			Результат.ВПрограмме = "ТитулФрахтовщика";
			Результат.ДляФайла = "ON_ZAKAZNARSOG";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдПЕР_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110351";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул3") Тогда
			Результат.ВПрограмме = "ТитулФрахтователяПодача";
			Результат.ДляФайла = "ON_ZAKAZNARPOD";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГО_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110352";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул4") Тогда
			Результат.ВПрограмме = "ТитулФрахтовщикаВозврат";
			Результат.ДляФайла = "ON_ZAKAZNARVOZ";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдПЕР_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110353";
			Результат.ПоФактХЖ = "";
			
		// Сопроводительная ведомость
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1")
			Или ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2")
			Или ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5") Тогда
			Результат.ВПрограмме = "ТитулПеревозчика";
			Если ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1") Тогда
				Результат.ДляФайла = "ON_SOPVEDPER1";
			ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2") Тогда
				Результат.ДляФайла = "ON_SOPVEDPER2";
			ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5") Тогда
				Результат.ДляФайла = "ON_SOPVEDPER5";
			КонецЕсли;
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдГП_ИдПЕР_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110347";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3")
			Или ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4") Тогда
			Результат.ВПрограмме = "ДопТитулПеревозчика";
			Если ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3") Тогда
				Результат.ДляФайла = "ON_SOPVEDPER3";
			ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4") Тогда
				Результат.ДляФайла = "ON_SOPVEDPER4";
			КонецЕсли;
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдГП_ИдПЕР_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110347";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1")
			Или ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2") Тогда
			Результат.ВПрограмме = "ТитулГрузоотправителя";
			Если ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1") Тогда
				Результат.ДляФайла = "ON_SOPVEDGO1";
			ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2") Тогда
				Результат.ДляФайла = "ON_SOPVEDGO2";
			КонецЕсли;
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГП_ИдГО_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110348";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1")
			Или ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2") Тогда
			Результат.ВПрограмме = "ТитулГрузополучателя";
			Если ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1") Тогда
				Результат.ДляФайла = "ON_SOPVEDGP1";
			ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2") Тогда
				Результат.ДляФайла = "ON_SOPVEDGP2";	
			КонецЕсли;
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГО_ИдГП_GGGGMMDD_ГУИДФайла";	
			Результат.КНД = "1110349";
			
		// Заказ (заявка)
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1") Тогда
			Результат.ВПрограмме = "ТитулГрузоотправителя";
			Результат.ДляФайла = "ON_ZAKZVGO";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГО_НалДр_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110361";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2") Тогда
			Результат.ВПрограмме = "ТитулПеревозчика";
			Результат.ДляФайла = "ON_ZAKZVPER";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдПЕР_НалДр_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110362";
			Результат.ПоФактХЖ = "";
			
		// Путевой лист
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1") Тогда
			Результат.ВПрограмме = "ТитулОформление";
			Результат.ДляФайла = "ON_PTLSSOBTS";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдМО_ИдТК_ИдОД_ИдОФ_НалДр_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110380";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
			Результат.ВПрограмме = "ТитулМедосмотр";
			Результат.ДляФайла = "ON_PTLSPRMO";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдОФ_ИдОД_ИдМО_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110381";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3") Тогда
			Результат.ВПрограмме = "ТитулВыпуск";
			Результат.ДляФайла = "ON_PTLSVIPTS";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдОФ_ИдОД_ИдТК_НалДр_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110382";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
			Результат.ВПрограмме = "ТитулВыезд";
			Результат.ДляФайла = "ON_PTLSODVZD";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдОФ_ИдОД_ИдОД_НалДр_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110383";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда
			Результат.ВПрограмме = "ТитулЗаезд";
			Результат.ДляФайла = "ON_PTLSODPARK";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдОФ_ИдМО_ИдОД_НалДр_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110384";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
			Результат.ВПрограмме = "ТитулМедосмотрПосле";
			Результат.ДляФайла = "ON_PTLSPOSMO";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдОФ_ИдМО_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110385";
			Результат.ПоФактХЖ = "";
			
		// Договор фрахтования
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул1") Тогда
			Результат.ВПрограмме = "ТитулФрахтователя";
			Результат.ДляФайла = "ON_DOGFRAKHTEL";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдПЕР_ИдГО_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110373";
			Результат.ПоФактХЖ = "";
		ИначеЕсли ЭлементРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул2") Тогда
			Результат.ВПрограмме = "ТитулФрахтовщика";
			Результат.ДляФайла = "ON_DOGFRASHCH";
			Результат.ПолеУИД = Результат.ВПрограмме + "УИДМинтранс";
			Результат.ШаблонИмениФайла = Результат.ДляФайла + "_ИдГО_ИдПЕР_GGGGMMDD_ГУИДФайла";
			Результат.КНД = "1110374";
			Результат.ПоФактХЖ = "";
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

Процедура ПосчитатьКоличествСтрокВсехТаблиц(Форма)
	
	ГруппаТаблицы = Форма.Элементы.Найти("СтраницыТаблиц");
	Если ГруппаТаблицы <> Неопределено Тогда
		Если СтрЗаканчиваетсяНа(Форма.ИмяФормы, "ОсновнаяФорма") Тогда
			КонтейнерРеквизитов = Форма.Объект;
		Иначе
			КонтейнерРеквизитов = Форма;
		КонецЕсли;	
		Для Каждого СтраницаТаблица Из ГруппаТаблицы.ПодчиненныеЭлементы Цикл
			Если СтрНачинаетсяС(СтраницаТаблица.Имя, "СтраницаОднострочная") Тогда
				Продолжить;
			КонецЕсли;
			ПосчитатьКоличествСтрокТаблицы(КонтейнерРеквизитов, СтраницаТаблица);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПосчитатьКоличествСтрокТаблицы(КонтейнерРеквизитов, СтраницаТаблица, КоличествоДобавить = 0) Экспорт
	
	Если СтрЗаканчиваетсяНа(СтраницаТаблица.Заголовок, ")") Тогда
		ПозКон = СтрНайти(СтраницаТаблица.Заголовок, " (", НаправлениеПоиска.СКонца);
		СтраницаТаблица.Заголовок = Лев(СтраницаТаблица.Заголовок, ПозКон - 1);	
	КонецЕсли;
	ИмяТаблицы = СтрЗаменить(СтраницаТаблица.Имя, "Страница", "");
	// Некоторые имена страниц не совпадают с именами таблиц, т.к. имя страниц не уложилось в 80 символов
	Если ИмяТаблицы = "ТитулГОПереадресовкаНовыйГрузополучательАдресаЭлектроннойПочты" Тогда
		ИмяТаблицы = "ТитулПереадресовкаНовыйГрузополучательАдресаЭлектроннойПочты";
	ИначеЕсли ИмяТаблицы = "ТитулПрвЗаменыТранспортныеСредстваДокументПередачиГрузаРеквизитыСторон" Тогда
		ИмяТаблицы = "ТитулПеревозчикаЗаменыТранспортныеСредстваДокументПередачиРеквизитыСторон";
	КонецЕсли;
	ТекущееКоличество = КонтейнерРеквизитов[ИмяТаблицы].Количество();
	Если ТекущееКоличество + КоличествоДобавить > 0 Тогда
		СтраницаТаблица.Заголовок = СтраницаТаблица.Заголовок 
						+ " ("
						+ Строка(ТекущееКоличество + КоличествоДобавить)
						+ ")";
	КонецЕсли;	

КонецПроцедуры


// Параметры:
//   ТаблицаЗначений - ТаблицаЗначений - таблица значений для преобразования
//
Функция ТаблицаВМассивСтруктур(Знач ТаблицаЗначений) Экспорт
	
	Результат = Новый Массив;
	
	ИменаКолонок = "";
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		ИменаКолонок = ИменаКолонок + "," + Колонка.Имя;
	КонецЦикла;
	ИменаКолонок = Сред(ИменаКолонок, 2);
	
	Для Каждого Строка Из ТаблицаЗначений Цикл
		СтруктураСтроки = Новый Структура(ИменаКолонок);
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, Строка);
		Результат.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


#Область ПреобразованиеТипов

Функция ПреобразоватьВДату(Знач ДатаСтрока) Экспорт
	
	Если ТипЗнч(ДатаСтрока) = Тип("Дата") Тогда
		Возврат ДатаСтрока;
	КонецЕсли;
	
	Если ДатаСтрока = Неопределено Тогда
		Возврат '00010101';
	КонецЕсли;
	
	// Обход необычного формата времени, где разделитель - точка
	Если СтрДлина(ДатаСтрока) = 8 Тогда
		ДатаСтрока = СтрЗаменить(ДатаСтрока, ".", ":");
	КонецЕсли;

	Цифры = "1234567890";
	СтруктураПодстрок = Новый Структура("Год, Месяц, День");
	СтруктураПодстрок.Вставить("Час");
	СтруктураПодстрок.Вставить("Минута");
	СтруктураПодстрок.Вставить("Секунда");
	ТекущаяПодстрока = "";
	НачалисьСимволыВремени = Ложь;
	Для К = 1 По СтрДлина(ДатаСтрока) + 1 Цикл
		ТекущийСимвол = Сред(ДатаСтрока, К, 1);
		Если ТекущийСимвол <> "" И СтрНайти(Цифры, ТекущийСимвол) > 0 Тогда
			ТекущаяПодстрока = ТекущаяПодстрока + ТекущийСимвол;
		Иначе
			Если ТекущийСимвол = ":" Тогда
				НачалисьСимволыВремени = Истина;
			КонецЕсли;
			Если НачалисьСимволыВремени = Ложь Тогда 
				Если СтрДлина(ТекущаяПодстрока) = 2 Тогда
					Если СтруктураПодстрок.Месяц = Неопределено
					И (СтруктураПодстрок.Год <> Неопределено
						Или СтруктураПодстрок.День <> Неопределено) Тогда
						СтруктураПодстрок.Вставить("Месяц", ТекущаяПодстрока);
					Иначе
						СтруктураПодстрок.Вставить("День", ТекущаяПодстрока);
					КонецЕсли;
				ИначеЕсли СтрДлина(ТекущаяПодстрока) = 4 Тогда
					СтруктураПодстрок.Вставить("Год", ТекущаяПодстрока);
				КонецЕсли;
			Иначе
				Если СтрДлина(ТекущаяПодстрока) = 2 И СтруктураПодстрок.Час = Неопределено Тогда
					СтруктураПодстрок.Вставить("Час", ТекущаяПодстрока);
				ИначеЕсли СтрДлина(ТекущаяПодстрока) = 2 И СтруктураПодстрок.Минута = Неопределено Тогда
					СтруктураПодстрок.Вставить("Минута", ТекущаяПодстрока);
				ИначеЕсли СтрДлина(ТекущаяПодстрока) = 2 Тогда
					СтруктураПодстрок.Вставить("Секунда", ТекущаяПодстрока);
				ИначеЕсли СтрДлина(ТекущаяПодстрока) = 4 Тогда
					СтруктураПодстрок.Вставить("Миллисекунда", ТекущаяПодстрока);	
				КонецЕсли;
			КонецЕсли;
			Если ТекущийСимвол = "T" Тогда
				НачалисьСимволыВремени = Истина;
			ИначеЕсли ТекущийСимвол = "+" Тогда
				Прервать;
			КонецЕсли;
			ТекущаяПодстрока = "";
		КонецЕсли;
	КонецЦикла;
	
	Возврат Дата(?(СтруктураПодстрок.Год <> Неопределено, СтруктураПодстрок.Год, "0001") 
					+ ?(СтруктураПодстрок.Месяц <> Неопределено, СтруктураПодстрок.Месяц, "01") 
					+ ?(СтруктураПодстрок.День <> Неопределено, СтруктураПодстрок.День, "01") 
					+ ?(СтруктураПодстрок.Час <> Неопределено, СтруктураПодстрок.Час, "00") 
					+ ?(СтруктураПодстрок.Минута <> Неопределено, СтруктураПодстрок.Минута, "00") 
					+ ?(СтруктураПодстрок.Секунда <> Неопределено, СтруктураПодстрок.Секунда, "00"));
	
КонецФункции

Функция ПреобразоватьВЧисло(Знач ЧислоСтрока) Экспорт
	
	Если ТипЗнч(ЧислоСтрока) = Тип("Число") Тогда
		Возврат ЧислоСтрока;
	КонецЕсли;
	
	Если ЧислоСтрока = Неопределено Тогда
		Возврат 0;
	КонецЕсли;

	Возврат Число(ЧислоСтрока);
		
КонецФункции

Функция ПреобразоватьВБулево(Знач БулевоСтрока) Экспорт
	
	Если ТипЗнч(БулевоСтрока) = Тип("Булево") Тогда
		Возврат БулевоСтрока;
	КонецЕсли;
	
	Если БулевоСтрока = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Булево(Число(БулевоСтрока));
	
КонецФункции

#КонецОбласти


#Область РаботаСоСтруктуройРеквизитовНаФорме 

// Скопировать из фиксированного значения рекурсивно.
// 
// Параметры:
//  Данные - Массив из Произвольный - Данные
//  	   - Структура - Данные
// 
// Возвращаемое значение:
//  Структура, Массив из Произвольный -- Результат копирования
Функция СкопироватьИзФиксированногоЗначенияРекурсивно(Данные) Экспорт
	
	Результат = Неопределено;
	
	ТипДанных = ТипЗнч(Данные);
	Если ТипДанных = Тип("Структура") Или ТипДанных = Тип("ФиксированнаяСтруктура") Тогда
		Результат = Новый Структура;
		Для Каждого КиЗ Из Данные Цикл
			Результат.Вставить(КиЗ.Ключ, СкопироватьИзФиксированногоЗначенияРекурсивно(КиЗ.Значение));
		КонецЦикла;
	ИначеЕсли ТипДанных = Тип("Массив") Или ТипДанных = Тип("ФиксированныйМассив") Тогда
		Результат = Новый Массив;
		Для Каждого ЗначениеМассива Из Данные Цикл
			Результат.Добавить(СкопироватьИзФиксированногоЗначенияРекурсивно(ЗначениеМассива));
		КонецЦикла;
	Иначе
		Результат = Данные;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Скопировать в фиксированное значения рекурсивно.
// 
// Параметры:
//  Данные - Структура, Массив из Произвольный - Данные
// 
// Возвращаемое значение:
//  ФиксированныйМассив из Произвольный, ФиксированнаяСтруктура - Скопировать в фиксированное значения рекурсивно
Функция СкопироватьВФиксированноеЗначенияРекурсивно(Данные) Экспорт
	
	Результат = Неопределено;
	
	ТипДанных = ТипЗнч(Данные);
	Если ТипДанных = Тип("Структура") Или ТипДанных = Тип("ФиксированнаяСтруктура") Тогда
		РезультатЗаполняемый = Новый Структура;
		Для Каждого КиЗ Из Данные Цикл
			РезультатЗаполняемый.Вставить(КиЗ.Ключ, СкопироватьВФиксированноеЗначенияРекурсивно(КиЗ.Значение));
		КонецЦикла;
		Результат = Новый ФиксированнаяСтруктура(РезультатЗаполняемый);
	ИначеЕсли ТипДанных = Тип("Массив") Или ТипДанных = Тип("ФиксированныйМассив") Тогда
		РезультатЗаполняемый = Новый Массив;
		Для Каждого ЗначениеМассива Из Данные Цикл
			РезультатЗаполняемый.Добавить(СкопироватьВФиксированноеЗначенияРекурсивно(ЗначениеМассива));
		КонецЦикла;
		Результат = Новый ФиксированныйМассив(РезультатЗаполняемый);
	Иначе
		Результат = Данные;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, ИмяЭлемента, ЗначениеПоУмолчанию = Неопределено, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяЭлемента);
	КонецЕсли;
	
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	СтруктураВерсииТитула.Свойство(ИмяЭлемента, Результат);
	
	Если Результат = Неопределено И ЗначениеПоУмолчанию <> Неопределено Тогда
		Результат = ЗначениеПоУмолчанию;
	ИначеЕсли ЗначениеПоУмолчанию <> Неопределено Тогда
		Если ТипЗнч(ЗначениеПоУмолчанию) = Тип("Булево") Тогда
			Результат = ПреобразоватьВБулево(Результат);
		ИначеЕсли ТипЗнч(ЗначениеПоУмолчанию) = Тип("Число") Тогда
			Результат = ПреобразоватьВЧисло(Результат);
		ИначеЕсли ТипЗнч(ЗначениеПоУмолчанию) = Тип("Дата") Тогда
			Результат = ПреобразоватьВДату(Результат);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьЗначениеРеквизитаВСтруктуреФормы(Форма, ИмяЭлемента, Значение = Неопределено, Перезаписывать = Истина, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяЭлемента);
	КонецЕсли;
	
	ТекущееЗначение = Неопределено;
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	СтруктураВерсииТитула.Свойство(ИмяЭлемента, ТекущееЗначение);
	Если Перезаписывать = Истина Или ЗначениеЗаполнено(ТекущееЗначение) = Ложь Тогда
		Если Значение = Неопределено И СтруктураВерсииТитула.Свойство(ИмяЭлемента) Тогда
			СтруктураВерсииТитула.Удалить(ИмяЭлемента);
		Иначе	
			СтруктураВерсииТитула.Вставить(ИмяЭлемента, Значение);
			Если ТипЗнч(Значение) = Тип("Дата") Тогда
				СтруктураВерсииТитула.Вставить(ИмяЭлемента + "ИспользуетсяUTC", Истина);	
			КонецЕсли;
		КонецЕсли;
		Форма.СтруктураРеквизитов = СкопироватьВФиксированноеЗначенияРекурсивно(КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение);
		
		СтруктураРеквизитовОбъекта = Новый Структура(Форма.ОписаниеРеквизитовФормы.РеквизитыОбъекта);
		Если СтруктураРеквизитовОбъекта.Свойство(ИмяЭлемента) Тогда
			Форма.Объект[ИмяЭлемента] = Значение;	
		КонецЕсли;
		
		СтруктураРеквизитовФормы = Новый Структура(Форма.ОписаниеРеквизитовФормы.ПараметрыФормы);
		Если СтруктураРеквизитовФормы.Свойство(ИмяЭлемента) Тогда
			Форма[ИмяЭлемента] = Значение;
			
			МодульСервисВзаимодействияМПЭПДКлиентСервер = Неопределено;
			#Если Сервер ИЛИ ВнешнееСоединение Тогда
			Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД") Тогда
				МодульСервисВзаимодействияМПЭПДКлиентСервер = ОбщегоНазначения.ОбщийМодуль("СервисВзаимодействияМПЭПДКлиентСервер");	
			КонецЕсли;
			#Иначе
			Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД") Тогда
				МодульСервисВзаимодействияМПЭПДКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("СервисВзаимодействияМПЭПДКлиентСервер");	
			КонецЕсли;	
			#КонецЕсли
			
			Если МодульСервисВзаимодействияМПЭПДКлиентСервер <> Неопределено
				И МодульСервисВзаимодействияМПЭПДКлиентСервер.ТитулПоддерживаетсяМобильнымПриложением(КонтейнерОтображаемойВерсии.ПрефиксТитула) Тогда
				ЭлементДанныеМП = Форма.Элементы.Найти("МП_" + ИмяЭлемента);
				Если ЭлементДанныеМП <> Неопределено Тогда
					ПодстрокиЗаголовкаДанныеМП = СтрРазделить(ЭлементДанныеМП.Заголовок, ":");
					ЗначениеМП = СокрЛП(ПодстрокиЗаголовкаДанныеМП[1]);
					Если ЗначениеМП = МодульСервисВзаимодействияМПЭПДКлиентСервер.ПредставлениеПустогоЗначенияДанныхМП() Тогда
						ЗначениеМП = "";
					КонецЕсли;
					ЭлементДанныеМП.Родитель.Видимость = ЗначениеМП <> Строка(Значение);	
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗначениеПодчиненнойСтрокиВСтруктуреФормы(Форма, ИмяТаблицы, ИдентификаторСтрокиРодителя, Значения, Перезаписывать = Истина, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяТаблицы);
	КонецЕсли;
	
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	ИтераторСтроки = 1;
	КлючИдентификаторСтрокиРодителя = ИмяТаблицы + "__" + ИтераторСтроки + "__ИдентификаторСтрокиРодителя";
	ТекущийИдентификаторСтрокиРодителя = Неопределено;
	СтрокаНайдена = Ложь;
	Пока СтруктураВерсииТитула.Свойство(КлючИдентификаторСтрокиРодителя, ТекущийИдентификаторСтрокиРодителя) Цикл
		Если ТекущийИдентификаторСтрокиРодителя = ИдентификаторСтрокиРодителя Тогда
			Для Каждого КиЗ Из Значения Цикл
				КлючЗначения = ИмяТаблицы + "__" + ИтераторСтроки + "__" + КиЗ.Ключ;
				УстановитьЗначениеРеквизитаВСтруктуреФормы(
					Форма, КлючЗначения, КиЗ.Значение, Перезаписывать, КонтейнерОтображаемойВерсии);
			КонецЦикла;	
			СтрокаНайдена = Истина;
			Прервать;	
		КонецЕсли;
		ИтераторСтроки = ИтераторСтроки + 1;
		КлючИдентификаторСтрокиРодителя = ИмяТаблицы + "__" + ИтераторСтроки + "__ИдентификаторСтрокиРодителя";
	КонецЦикла;
	Если СтрокаНайдена = Ложь Тогда
		Для Каждого КиЗ Из Значения Цикл
			КлючЗначения = ИмяТаблицы + "__" + ИтераторСтроки + "__" + КиЗ.Ключ;
			УстановитьЗначениеРеквизитаВСтруктуреФормы(
				Форма, КлючЗначения, КиЗ.Значение, Перезаписывать, КонтейнерОтображаемойВерсии);
		КонецЦикла;
		КлючЗначения = ИмяТаблицы + "__" + ИтераторСтроки + "__ИдентификаторСтрокиРодителя";	
		УстановитьЗначениеРеквизитаВСтруктуреФормы(
				Форма, КлючЗначения, ИдентификаторСтрокиРодителя, , КонтейнерОтображаемойВерсии);
	КонецЕсли;
	
	Форма.СтруктураРеквизитов = СкопироватьВФиксированноеЗначенияРекурсивно(КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение);
	
КонецПроцедуры

Функция ЗагрузитьТаблицуВСтруктуруФормы(Форма, ИмяТаблицы, Перезаписывать = Истина, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	Таблица = Форма[ИмяТаблицы].Выгрузить();
	
	Если Перезаписывать = Истина Тогда
		УдалитьСтрокиТаблицыИзСтруктурыФормы(Форма, ИмяТаблицы, , КонтейнерОтображаемойВерсии);
	КонецЕсли;
	
	НомерСтроки = 1;
	Для Каждого СтрТЧ Из Таблица Цикл 
		ЕстьДанныеВСтроке = Ложь; 
		СтруктураСтроки = Новый Структура;
		Для Каждого Колонка Из Таблица.Колонки Цикл
			ЗначениеКолонки = СтрТЧ[Колонка.Имя];
			Если СтрЗаканчиваетсяНа(ИмяТаблицы, "ИнформационныеПоля") Тогда
				ЕстьДанныеВСтроке = Истина;
			ИначеЕсли СтрЗаканчиваетсяНа(ИмяТаблицы, "ДополнительнаяИнформация") Тогда
				Если Колонка.Имя = "Значение"
					И ЗначениеЗаполнено(ЗначениеКолонки) Тогда
					ЕстьДанныеВСтроке = Истина;
				ИначеЕсли Таблица.Колонки.Найти("Обязательный") <> Неопределено
					И СтрТЧ.Обязательный = Истина Тогда
					ЕстьДанныеВСтроке = Истина;
				КонецЕсли;
			ИначеЕсли Колонка.Имя <> "ИдентификаторСтроки"
				И Колонка.Имя <> "ИдентификаторСтрокиРодителя"
				И ЗначениеЗаполнено(ЗначениеКолонки) Тогда
				ЕстьДанныеВСтроке = Истина;
			КонецЕсли;  
			СтруктураСтроки.Вставить(ИмяТаблицы + "__" + Строка(НомерСтроки) + "__" + Колонка.Имя, ЗначениеКолонки);
		КонецЦикла;
		
		Если ЕстьДанныеВСтроке = Истина Тогда
			Для Каждого КиЗ Из СтруктураСтроки Цикл
				УстановитьЗначениеРеквизитаВСтруктуреФормы(Форма,
					КиЗ.Ключ,
					КиЗ.Значение, Перезаписывать, КонтейнерОтображаемойВерсии);
			КонецЦикла;	
			НомерСтроки = НомерСтроки + 1;
		КонецЕсли;
	КонецЦикла;      
	
	Возврат НомерСтроки > 1;

КонецФункции

Функция СкопироватьРеквизитыВСтруктуреФормы(Форма, ПрефиксОткуда, ПрефиксКуда) Экспорт
	
	СтруктураРеквизитовЗаполнение = СкопироватьИзФиксированногоЗначенияРекурсивно(Форма.СтруктураРеквизитов);
	
	МассивЧастейИмениФормы = СтрРазделить(Форма.ИмяФормы, ".");
	ТипДокумента = МассивЧастейИмениФормы[1];
	ПрефиксТитулаОткуда = ПрефиксТитулаРеквизита(ПрефиксОткуда, "Документ." + ТипДокумента);
	ПрефиксТитулаКуда = ПрефиксТитулаРеквизита(ПрефиксКуда, "Документ." + ТипДокумента);
	
	МассивВерсийОткуда = Неопределено;
	СтруктураРеквизитовЗаполнение.Свойство(ПрефиксТитулаОткуда, МассивВерсийОткуда);
	
	МассивВерсийКуда = Неопределено;
	СтруктураРеквизитовЗаполнение.Свойство(ПрефиксТитулаКуда, МассивВерсийКуда);
	
	ЕстьИзменение = Ложь;
	Если МассивВерсийОткуда <> Неопределено И МассивВерсийОткуда.Количество() > 0 Тогда
		СтруктураРеквизитовТитулаОткуда = МассивВерсийОткуда[МассивВерсийОткуда.ВГраница()];
		Если МассивВерсийКуда = Неопределено Тогда
			МассивВерсийКуда = Новый Массив;
		КонецЕсли;
		Если МассивВерсийКуда.Количество() = 0 Тогда
			СтруктураРеквизитовТитулаКуда = Новый Структура;
			МассивВерсийКуда.Добавить(СтруктураРеквизитовТитулаКуда);
		Иначе
			СтруктураРеквизитовТитулаКуда = МассивВерсийКуда[МассивВерсийКуда.ВГраница()];	
		КонецЕсли;
		Для Каждого ОткудаКиЗ Из СтруктураРеквизитовТитулаОткуда Цикл
			Если СтрНачинаетсяС(ОткудаКиЗ.Ключ, ПрефиксОткуда) Тогда
				КлючКуда = ПрефиксКуда + Сред(ОткудаКиЗ.Ключ, СтрДлина(ПрефиксОткуда) + 1);
				СтруктураРеквизитовТитулаКуда.Вставить(КлючКуда, ОткудаКиЗ.Значение);	
				ЕстьИзменение = Истина;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Если ЕстьИзменение = Истина Тогда
		Форма.СтруктураРеквизитов = СкопироватьВФиксированноеЗначенияРекурсивно(СтруктураРеквизитовЗаполнение);
	КонецЕсли;
	
	Возврат ЕстьИзменение;
	
КонецФункции

Функция ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(Форма, ИмяТаблицы, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	Результат = 0;
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяТаблицы);
	КонецЕсли;
	
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	Для Каждого КиЗ Из СтруктураВерсииТитула Цикл
		МассивЧастей = РазделитьСтрокуСоСложнымРазделителем(КиЗ.Ключ, "__");
		Если МассивЧастей[0] = ИмяТаблицы И МассивЧастей.Количество() = 3 Тогда
			Результат = Макс(Результат, Число(МассивЧастей[1]));	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СуммаПоСтрокамТаблицыИзСтруктурыФормы(Форма, ИмяТаблицы, ИмяКолонки, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяТаблицы);
	КонецЕсли;
	
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	Возврат СуммаПоСтрокамТаблицыИзСтруктурыРеквизитов(СтруктураВерсииТитула, ИмяТаблицы, ИмяКолонки);
	
КонецФункции

Функция СуммаПоСтрокамТаблицыИзСтруктурыРеквизитов(СтруктураРеквизитов, ИмяТаблицы, ИмяКолонки) Экспорт
	
	Результат = 0;
	
	ИтераторСтроки = 1;
	КлючКолонки = ИмяТаблицы + "__" + ИтераторСтроки + "__" + ИмяКолонки;
	ЗначениеКолонки = Неопределено;
	Пока СтруктураРеквизитов.Свойство(КлючКолонки, ЗначениеКолонки) Цикл
		Если ТипЗнч(ЗначениеКолонки) = Тип("Число") Тогда
			Результат = Результат + ЗначениеКолонки;	
		КонецЕсли;	
		ИтераторСтроки = ИтераторСтроки + 1;
		КлючКолонки = ИмяТаблицы + "__" + ИтераторСтроки + "__" + ИмяКолонки;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура УдалитьРеквизитыПоГруппеДанных(Форма, ГруппаДанных, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ГруппаДанных);
	КонецЕсли;
	
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	ОписаниеГруппы = ОписаниеГруппыДанных(ГруппаДанных, Форма.ИмяФормы);
	
	Если ОписаниеГруппы.ЕстьХранимыеДанные = Истина Тогда
		Для Каждого ИмяРеквизита Из ОписаниеГруппы.Реквизиты Цикл
			Если СтрНачинаетсяС(ИмяРеквизита, ГруппаДанных) = Ложь Тогда
				ИмяРеквизитаДляСтруктуры = ГруппаДанных + ИмяРеквизита;
			Иначе
				ИмяРеквизитаДляСтруктуры = ИмяРеквизита;
			КонецЕсли;
			УстановитьЗначениеРеквизитаВСтруктуреФормы(Форма, ИмяРеквизитаДляСтруктуры, Неопределено, Истина, КонтейнерОтображаемойВерсии);	
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьСтрокиТаблицыИзСтруктурыФормы(Форма, ИмяТаблицы, НомерСтроки = Неопределено, КонтейнерОтображаемойВерсии = Неопределено, КромеУказанной = Ложь) Экспорт
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяТаблицы);
	КонецЕсли;
	
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	Если УдалитьСтрокиТаблицыИзСтруктурыВерсии(СтруктураВерсииТитула, ИмяТаблицы, НомерСтроки, КромеУказанной) Тогда
		Форма.СтруктураРеквизитов = СкопироватьВФиксированноеЗначенияРекурсивно(КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение);
	КонецЕсли;
	
КонецПроцедуры

Функция УдалитьСтрокиТаблицыИзСтруктурыВерсии(СтруктураВерсииТитула, ИмяТаблицы, НомерСтроки = Неопределено, КромеУказанной = Ложь)
	
	ВсеСтрокикУдалению = Новый Массив;
	Для Каждого КиЗ Из СтруктураВерсииТитула Цикл
		МассивЧастей = РазделитьСтрокуСоСложнымРазделителем(КиЗ.Ключ, "__");
		Если МассивЧастей[0] = ИмяТаблицы И МассивЧастей.Количество() = 3 Тогда
			Если КромеУказанной = Истина И МассивЧастей[1] = Строка(НомерСтроки) Тогда
				Продолжить;
			КонецЕсли;
			Если КромеУказанной = Истина Тогда
				Если МассивЧастей[1] <> Строка(НомерСтроки) Тогда
					ВсеСтрокикУдалению.Добавить(КиЗ.Ключ);
				КонецЕсли;
			Иначе 
				Если (МассивЧастей[1] = Строка(НомерСтроки) Или НомерСтроки = Неопределено) Тогда
					ВсеСтрокикУдалению.Добавить(КиЗ.Ключ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КлючУдаления Из ВсеСтрокикУдалению Цикл
		СтруктураВерсииТитула.Удалить(КлючУдаления);		
	КонецЦикла;
	
	Возврат ВсеСтрокикУдалению.Количество() > 0;
	
КонецФункции

Функция МассивЗначенийПоСтрокамТаблицыИзСтруктурыФормы(Форма, ИмяТаблицы, ИмяКолонки, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяТаблицы);
	КонецЕсли;
	
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	МассивЗначений = Новый Массив;
	СчетчикСтрок = 1;
	КлючСтруктуры = ИмяТаблицы + "__" + СчетчикСтрок + "__" + ИмяКолонки;
	ЗначениеРеквизита = Неопределено;
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	Пока СтруктураВерсииТитула.Свойство(КлючСтруктуры, ЗначениеРеквизита) Цикл
		Если ТипЗнч(ЗначениеРеквизита) = Тип("СправочникСсылка.ХранимыеДанныеЭПД") Тогда
			МассивЗначений.Добавить(ЗначениеРеквизита);
		КонецЕсли;	
		СчетчикСтрок = СчетчикСтрок + 1;
		КлючСтруктуры = ИмяТаблицы + "__" + СчетчикСтрок + "__" + ИмяКолонки;
	КонецЦикла;
	
	Возврат МассивЗначений;
		
КонецФункции

Функция МассивСтрокТаблицыИзСтруктурыФормы(Форма, ИмяТаблицы, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяТаблицы);
	КонецЕсли;
	
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	Возврат МассивСтрокТаблицыИзСтруктурыРеквизитов(СтруктураВерсииТитула, ИмяТаблицы);
		
КонецФункции

Функция МассивСтрокТаблицыИзСтруктурыРеквизитов(СтруктураРеквизитов, ИмяТаблицы) Экспорт
	
	МассивЗначений = Новый Массив;
	НачалоКлюча = ИмяТаблицы + "__";
	Для Каждого КиЗ Из СтруктураРеквизитов Цикл
		Если СтрНачинаетсяС(КиЗ.Ключ, НачалоКлюча) Тогда
			МассивЧастей = РазделитьСтрокуСоСложнымРазделителем(КиЗ.Ключ, "__");
			НомерСтрокиТаблицы = Число(МассивЧастей[1]);
			Если МассивЗначений.Количество() >= НомерСтрокиТаблицы Тогда
				СтруктураСтроки = МассивЗначений[НомерСтрокиТаблицы - 1];	
			Иначе
				СтруктураСтроки = Новый Структура;
				МассивЗначений.Вставить(НомерСтрокиТаблицы - 1);
			КонецЕсли;
			СтруктураСтроки.Вставить(МассивЧастей[2], КиЗ.Значение);
			МассивЗначений[НомерСтрокиТаблицы - 1] = СтруктураСтроки;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивЗначений;
		
КонецФункции

Процедура ОчиститьДанныеПоТитулуВСтруктуреФормы(Форма, Титул, КонтейнерОтображаемойВерсии = Неопределено) Экспорт
	
	ИнформацияПоПрефиксамТитула = ПрефиксТитулаПоЭлементуРегламентаЭДО(Титул);
	
	Если КонтейнерОтображаемойВерсии = Неопределено Тогда
		КонтейнерОтображаемойВерсии = КонтейнерОтображаемойВерсииРеквизита(Форма, ИнформацияПоПрефиксамТитула.ВПрограмме);
	КонецЕсли;
	
	СтруктураВерсииТитула = КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии];
	
	СтруктураВерсииТитула.Очистить();	
	Форма.СтруктураРеквизитов = СкопироватьВФиксированноеЗначенияРекурсивно(КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение);
	
	МассивУдалитьПрефиксы = Новый Массив;
	МассивУдалитьПрефиксы.Добавить("Ссылка");
	МассивУдалитьПрефиксы.Добавить("ХранимыеДанные");
	
	СтруктураРеквизитовФормы = Новый Структура(Форма.ОписаниеРеквизитовФормы.ПараметрыФормы);
	Для Каждого КиЗ Из СтруктураРеквизитовФормы Цикл
		ИмяРеквизитаБезСлужебныхПрефиксов = Киз.Ключ;
		Для Каждого УдалитьПрефикс Из МассивУдалитьПрефиксы Цикл
			Если СтрНачинаетсяС(ИмяРеквизитаБезСлужебныхПрефиксов, УдалитьПрефикс) Тогда
				ИмяРеквизитаБезСлужебныхПрефиксов = Сред(ИмяРеквизитаБезСлужебныхПрефиксов, СтрДлина(УдалитьПрефикс) + 1);
			КонецЕсли;
		КонецЦикла;
		Если СтрНачинаетсяС(ИмяРеквизитаБезСлужебныхПрефиксов, ИнформацияПоПрефиксамТитула.ВПрограмме) Тогда   
			Форма[Киз.Ключ] = Неопределено;
		КонецЕсли;
	КонецЦикла;	
	
	СтруктураРеквизитовОбъекта = Новый Структура(Форма.ОписаниеРеквизитовФормы.РеквизитыОбъекта);
	Для Каждого КиЗ Из СтруктураРеквизитовОбъекта Цикл
		ИмяРеквизитаБезСлужебныхПрефиксов = Киз.Ключ;
		Для Каждого УдалитьПрефикс Из МассивУдалитьПрефиксы Цикл
			Если СтрНачинаетсяС(ИмяРеквизитаБезСлужебныхПрефиксов, УдалитьПрефикс) Тогда
				ИмяРеквизитаБезСлужебныхПрефиксов = Сред(ИмяРеквизитаБезСлужебныхПрефиксов, СтрДлина(УдалитьПрефикс) + 1);
			КонецЕсли;
		КонецЦикла;
		Если СтрНачинаетсяС(ИмяРеквизитаБезСлужебныхПрефиксов, ИнформацияПоПрефиксамТитула.ВПрограмме) Тогда   
			Форма.Объект[Киз.Ключ] = Неопределено;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти


Процедура ИзменитьОформлениеФормы(Форма, ИмяЭлемента = Неопределено) Экспорт
	
	Элементы = Форма.Элементы;
	Если Форма.ЗапретитьИзменение Тогда
		Элементы.ГруппаРеквизиты.ТолькоПросмотр = Истина;
		Элементы.ГруппаТаблицы.ТолькоПросмотр = Истина;
		Элементы.ФормаСохранить.Видимость = Ложь;
	КонецЕсли;
	
	ПосчитатьКоличествСтрокВсехТаблиц(Форма);
	
	#Если Сервер ИЛИ ВнешнееСоединение Тогда
		ЦветНекорректныхДанных = ЦветаСтиля.ЦветНекорректныхДанныхЭПД;
		ЦветВыделенияУчастникаЭПД = ЦветаСтиля.ЦветВыделенияУчастникаЭПД;
	#Иначе
		ЦветНекорректныхДанных = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ЦветНекорректныхДанныхЭПД");
		ЦветВыделенияУчастникаЭПД = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ЦветВыделенияУчастникаЭПД");
	#КонецЕсли
	
	Если Форма.ИмяФормы = "Документ.ЭлектроннаяТранспортнаяНакладная.Форма.ОсновнаяФорма" Тогда
		// Страница "Оформление"
		Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяЗаказчик.Видимость = 
			ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулГрузоотправителяЭкспедитор", Ложь);
		Элементы.ГруппаРеквизитаЗаполнитьТитулГрузоотправителяОснованиеРасчетовИнымЛицом.Видимость = 
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяЗаказчик.Видимость;
		Элементы.ГруппаРеквизитаЗаполнитьТитулГрузоотправителяДоговорНаУсловияПеревозки.Видимость = 
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяЗаказчик.Видимость;
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулГрузоотправителяПредставительГрузоотправителя")) Тогда
			Форма.ВариантПоДоверенности = 1;	
		ИначеЕсли ИмяЭлемента <> "ВариантПоДоверенности" Тогда
			Форма.ВариантПоДоверенности = 0;
		КонецЕсли;	
		Если Форма.ВариантПоДоверенности = 1 Тогда
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяСоставитель.Видимость = Истина;
			Элементы.ГруппаРеквизитаЗаполнитьТитулГрузоотправителяДоверенность.Видимость = Истина;
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяГрузоотправитель.ЦветФона = Новый Цвет;
			Если Форма.Объект.РольУчастника = 3 Тогда
				Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяСоставитель.ЦветФона = ЦветВыделенияУчастникаЭПД;
			КонецЕсли;
		Иначе
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяСоставитель.Видимость = Ложь;
			Элементы.ГруппаРеквизитаЗаполнитьТитулГрузоотправителяДоверенность.Видимость = Ложь;
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяСоставитель.ЦветФона = Новый Цвет;
			Если Форма.Объект.РольУчастника = 3 Тогда
				Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяГрузоотправитель.ЦветФона = ЦветВыделенияУчастникаЭПД;	
			КонецЕсли;
		КонецЕсли;
		
		// Страница "Погрузка"
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаПриемкаЗамечанияДатаВремяПрибытия"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаПриемкаЗамечанияДатаВремяУбытия"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаПриемкаЗамечанияДатаВремяПостановкиНаПогрузку"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаПриемкаЗамечанияВОтношенииФактическогоСостояниеГруза"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаПриемкаЗамечанияВОтношенииМассыГруза"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаПриемкаЗамечанияВОтношенииКоличестваГрузовыхМест"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаПриемкаЗамечанияВОтношенииПроведенияПогрузочныхРабот"))
			Или ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(Форма, "ТитулПеревозчикаПриемкаОтметкиПеревозчикаПриПриемеГруза") > 0 Тогда
			Форма.ВариантПогрузки = 1;	
		ИначеЕсли ИмяЭлемента <> "ВариантПогрузки" Тогда
			Форма.ВариантПогрузки = 0;	
		КонецЕсли;
		Для Каждого ТекущийЭлемент Из Элементы.ГруппаРеквизитыСодИнфПрвПрием.ПодчиненныеЭлементы Цикл
			Если ТекущийЭлемент.Имя <> "ГруппаВариантПогрузки" Тогда
				ТекущийЭлемент.Видимость = Форма.ВариантПогрузки > 0;	
			КонецЕсли;
		КонецЦикла;
		Элементы.ГруппаТаблицыСодИнфПрвПрием.Видимость = Форма.ВариантПогрузки > 0;
		
		// Страница "Переадресовка"
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПереадресовкаНовыйГрузополучательИП_ИНН"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПереадресовкаНовыйГрузополучательЮЛ_ИНН"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПереадресовкаНовыйГрузополучательФЛФамилия")) Тогда
			Форма.ВариантПереадресовки = 1;	
		ИначеЕсли ИмяЭлемента <> "ВариантПереадресовки" Тогда
			Форма.ВариантПереадресовки = 0;
		КонецЕсли;
		Элементы.ГруппаРеквизитаСсылкаТитулПереадресовкаНовыйГрузополучатель.Видимость = Форма.ВариантПереадресовки = 1;
		Элементы.ГруппаРеквизитаПереадресовкаНовыйГрузополучательАдрес.Видимость = Форма.ВариантПереадресовки = 1;
		Элементы.ГруппаРеквизитаЗаполнитьТитулПереадресовкаКонтактДанНовогоГрузополучателя.Видимость = Форма.ВариантПереадресовки = 1;
		
		// Страница "Переадресовка" (дополнительный)
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПереадресовкаНовыйГрузополучательИП_ИНН"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПереадресовкаНовыйГрузополучательЮЛ_ИНН"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПереадресовкаНовыйГрузополучательФЛФамилия")) Тогда
			Форма.ВариантПереадресовкиДоп = 1;
		ИначеЕсли ИмяЭлемента <> "ВариантПереадресовкиДоп" Тогда
			Форма.ВариантПереадресовкиДоп = 0;	
		КонецЕсли;
		Элементы.ГруппаРеквизитаСсылкаДопТитулПереадресовкаНовыйГрузополучатель.Видимость = Форма.ВариантПереадресовкиДоп = 1;
		Элементы.ГруппаРеквизитаДопПереадресовкаНовыйГрузополучательАдрес.Видимость = Форма.ВариантПереадресовкиДоп = 1;
		Элементы.ГруппаРеквизитаЗаполнитьДопТитулПереадресовкаКонтактДанНовогоГрузополучателя.Видимость = Форма.ВариантПереадресовкиДоп = 1;
		
		// Страница "Замены"
		Элементы.ГруппаРеквизитаЗаполнитьТитулПеревозчикаЗаменыТранспортныеСредства.Видимость = Истина;
		Элементы.ГруппаРеквизитаЗаполнитьТитулПеревозчикаЗаменыЗаменыВодителей.Видимость = Истина;
		ТитулПеревозчикаЗаменыСодержаниеОперации = ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаЗаменыСодержаниеОперации");
		Если ТитулПеревозчикаЗаменыСодержаниеОперации = "Замена водителя"
			Или ТитулПеревозчикаЗаменыСодержаниеОперации = "Замена водителей" Тогда
			Элементы.ГруппаРеквизитаЗаполнитьТитулПеревозчикаЗаменыТранспортныеСредства.Видимость = Ложь;
		ИначеЕсли ТитулПеревозчикаЗаменыСодержаниеОперации = "Замена транспортного средства"
			Или ТитулПеревозчикаЗаменыСодержаниеОперации = "Замена транспортных средств" Тогда
			Элементы.ГруппаРеквизитаЗаполнитьТитулПеревозчикаЗаменыЗаменыВодителей.Видимость = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаЗаменыДокументНомер")) Тогда
			Форма.ВариантПричиныЗамены = 1;	
		ИначеЕсли ИмяЭлемента <> "ВариантПричиныЗамены" Тогда
			Форма.ВариантПричиныЗамены = 0;
		КонецЕсли;
		Элементы.ГруппаРеквизитаТитулПеревозчикаЗаменыПричинаЗаменыПроизвольныйТекст.Видимость = Форма.ВариантПричиныЗамены = 0;
		Элементы.ГруппаРеквизитаТитулПеревозчикаЗаменыДокументНаименование.Видимость = Форма.ВариантПричиныЗамены = 1;
		Элементы.ГруппаРеквизитаТитулПеревозчикаЗаменыДокументНомер.Видимость = Форма.ВариантПричиныЗамены = 1;
		Элементы.ГруппаРеквизитаТитулПеревозчикаЗаменыДокументДата.Видимость = Форма.ВариантПричиныЗамены = 1;
		Элементы.ГруппаРеквизитаТитулПеревозчикаЗаменыДокументДополнительныеСведения.Видимость = Форма.ВариантПричиныЗамены = 1;
		Элементы.ГруппаРеквизитаЗаполнитьТитулПеревозчикаЗаменыДокументРеквизитыСторон.Видимость = Форма.ВариантПричиныЗамены = 1;
			
		
		// Страница "Замены" (дополнительный)
		Элементы.ГруппаРеквизитаЗаполнитьДопТитулПеревозчикаЗаменыТранспортныеСредства.Видимость = Истина;
		Элементы.ГруппаРеквизитаЗаполнитьДопТитулПеревозчикаЗаменыЗаменыВодителей.Видимость = Истина;
		ДопТитулПеревозчикаЗаменыСодержаниеОперации = ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПеревозчикаЗаменыСодержаниеОперации");
		Если ДопТитулПеревозчикаЗаменыСодержаниеОперации = "Замена водителя"
			Или ДопТитулПеревозчикаЗаменыСодержаниеОперации = "Замена водителей" Тогда
			Элементы.ГруппаРеквизитаЗаполнитьДопТитулПеревозчикаЗаменыТранспортныеСредства.Видимость = Ложь;
		ИначеЕсли ДопТитулПеревозчикаЗаменыСодержаниеОперации = "Замена транспортного средства"
			Или ДопТитулПеревозчикаЗаменыСодержаниеОперации = "Замена транспортных средств" Тогда
			Элементы.ГруппаРеквизитаЗаполнитьДопТитулПеревозчикаЗаменыЗаменыВодителей.Видимость = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПеревозчикаЗаменыДокументНомер")) Тогда
			Форма.ВариантПричиныЗаменыДоп = 1;	
		ИначеЕсли ИмяЭлемента <> "ВариантПричиныЗаменыДоп" Тогда
			Форма.ВариантПричиныЗаменыДоп = 0;
		КонецЕсли;
		Элементы.ГруппаРеквизитаДопТитулПеревозчикаЗаменыПричинаЗаменыПроизвольныйТекст.Видимость = Форма.ВариантПричиныЗаменыДоп = 0;
		Элементы.ГруппаРеквизитаДопТитулПеревозчикаЗаменыДокументНаименование.Видимость = Форма.ВариантПричиныЗаменыДоп = 1;
		Элементы.ГруппаРеквизитаДопТитулПеревозчикаЗаменыДокументНомер.Видимость = Форма.ВариантПричиныЗаменыДоп = 1;
		Элементы.ГруппаРеквизитаДопТитулПеревозчикаЗаменыДокументДата.Видимость = Форма.ВариантПричиныЗаменыДоп = 1;
		Элементы.ГруппаРеквизитаДопТитулПеревозчикаЗаменыДокументДополнительныеСведения.Видимость = Форма.ВариантПричиныЗаменыДоп = 1;
		Элементы.ГруппаРеквизитаЗаполнитьДопТитулПеревозчикаЗаменыДокументРеквизитыСторон.Видимость = Форма.ВариантПричиныЗаменыДоп = 1;
			
		
		// Страница "Приемка"
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулГрузополучателяПричинаОтказаВПриемеГруза")) Тогда
			Форма.ВариантПриемки = 2;
		ИначеЕсли ИмяЭлемента <> "ВариантПриемки" Тогда
			Форма.ВариантПриемки = 1;
		КонецЕсли;
		Элементы.ГруппаРеквизитаТитулГрузополучателяПричинаОтказаВПриемеГруза.Видимость = Форма.ВариантПриемки = 2;	
		Для Каждого ТекущийЭлемент Из Элементы.ГруппаРеквизитыСодИнфГП.ПодчиненныеЭлементы Цикл
			Если ТекущийЭлемент.Имя <> "ГруппаРеквизитаВариантПриемки"
			И ТекущийЭлемент.Имя <> "ГруппаРеквизитаТитулГрузополучателяПричинаОтказаВПриемеГруза" Тогда
				ТекущийЭлемент.Видимость = Форма.ВариантПриемки <> 2;	
			КонецЕсли;
		КонецЦикла;
		
		// Страница "Приемка" (дополнительный)
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулГрузополучателяПричинаОтказаВПриемеГруза")) Тогда
			Форма.ВариантПриемкиДоп = 2;
		ИначеЕсли ИмяЭлемента <> "ВариантПриемкиДоп" Тогда
			Форма.ВариантПриемкиДоп = 1;
		КонецЕсли;
		Элементы.ГруппаРеквизитаДопТитулГрузополучателяПричинаОтказаВПриемеГруза.Видимость = Форма.ВариантПриемкиДоп = 2;	
		Для Каждого ТекущийЭлемент Из Элементы.ГруппаРеквизитыДопСодИнфГП.ПодчиненныеЭлементы Цикл
			Если ТекущийЭлемент.Имя <> "ГруппаРеквезитаВариантПриемкиДоп" 
			И ТекущийЭлемент.Имя <> "ГруппаРеквизитаДопТитулГрузополучателяПричинаОтказаВПриемеГруза" Тогда
				ТекущийЭлемент.Видимость = Форма.ВариантПриемкиДоп <> 2;	
			КонецЕсли;
		КонецЦикла;
		
		// Страница "Разгрузка"
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаВыдачаДатаВремяПрибытия"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаВыдачаДатаВремяУбытия"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаВыдачаДатаИВремяПостановкиНаВыгрузку"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаВыдачаЗамечанияВОтношенииФактическогоСостоянияГруза"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаВыдачаЗамечанияВОтношенииПроведенияРаботПоВыгрузке"))
			Или ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(Форма, "ТитулПеревозчикаВыдачаОтметкиПриВыдачеГруза") > 0 Тогда
			Форма.ВариантВыгрузки = 1;
		ИначеЕсли ИмяЭлемента <> "ВариантВыгрузки" Тогда
			Форма.ВариантВыгрузки = 0;	
		КонецЕсли;
		Для Каждого ТекущийЭлемент Из Элементы.ГруппаРеквизитыСодПрвВыд.ПодчиненныеЭлементы Цикл
			Если ТекущийЭлемент.Имя <> "ГруппаВариантВыгрузки" Тогда
				ТекущийЭлемент.Видимость = Форма.ВариантВыгрузки > 0;	
			КонецЕсли;
		КонецЦикла;
		Элементы.ГруппаТаблицыСодПрвВыд.Видимость = Форма.ВариантВыгрузки > 0;
		
		// Страница "Разгрузка" (дополнительный)
		Если ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПеревозчикаВыдачаДатаВремяПрибытия"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПеревозчикаВыдачаДатаВремяУбытия"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПеревозчикаВыдачаДатаИВремяПостановкиНаВыгрузку"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПеревозчикаВыдачаЗамечанияВОтношенииФактическогоСостоянияГруза"))
			Или ЗначениеЗаполнено(ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ДопТитулПеревозчикаВыдачаЗамечанияВОтношенииПроведенияРаботПоВыгрузке"))
			Или ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(Форма, "ДопТитулПеревозчикаВыдачаОтметкиПриВыдачеГруза") > 0 Тогда
			Форма.ВариантВыгрузкиДоп = 1;
		ИначеЕсли ИмяЭлемента <> "ВариантВыгрузкиДоп" Тогда
			Форма.ВариантВыгрузкиДоп = 0;	
		КонецЕсли;
		Для Каждого ТекущийЭлемент Из Элементы.ГруппаРеквизитыДопСодПрвВыд.ПодчиненныеЭлементы Цикл
			Если ТекущийЭлемент.Имя <> "ГруппаВариантВыгрузкиДоп" Тогда
				ТекущийЭлемент.Видимость = Форма.ВариантВыгрузкиДоп > 0;	
			КонецЕсли;
		КонецЦикла;
		Элементы.ГруппаТаблицыДопСодПрвВыд.Видимость = Форма.ВариантВыгрузкиДоп > 0;
		
		// Страница "Стоимость"
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСодФХЖ1 Тогда
			ТитулПеревозчикаФХЖПризнакБезНДС = ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаФХЖПризнакБезНДС", "");
			ТитулПеревозчикаФХЖНалоговаяСтавка = ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаФХЖНалоговаяСтавка", "");
			ТитулПеревозчикаФХЖСуммаНДС = ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаФХЖСуммаНДС", 0);
			ТитулПеревозчикаФХЖСтоимостьПеревозкиБезНалога = ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаФХЖСтоимостьПеревозкиБезНалога", 0);
			Элементы.ГруппаРеквизитаТитулПеревозчикаФХЖСуммаНДС.Доступность = ТитулПеревозчикаФХЖПризнакБезНДС = "";
			Элементы.ГруппаРеквизитаТитулПеревозчикаФХЖНалоговаяСтавка.Доступность = ТитулПеревозчикаФХЖПризнакБезНДС = "";
			Элементы.ГруппаРеквизитаТитулПеревозчикаФХЖСтоимостьПеревозкиСНалогом.Доступность = ТитулПеревозчикаФХЖПризнакБезНДС = "";
			Если ТитулПеревозчикаФХЖНалоговаяСтавка = "без НДС" Тогда
				УстановитьЗначениеРеквизитаВСтруктуреФормы(Форма, "ТитулПеревозчикаФХЖПризнакБезНДС", "без НДС");
			Иначе
				ТитулПеревозчикаФХЖСуммаНДС = РассчетНДСПоСтавкеСтрокой(ТитулПеревозчикаФХЖСтоимостьПеревозкиБезНалога, ТитулПеревозчикаФХЖНалоговаяСтавка);
				УстановитьЗначениеРеквизитаВСтруктуреФормы(Форма, "ТитулПеревозчикаФХЖСуммаНДС", ТитулПеревозчикаФХЖСуммаНДС);
				Если ТитулПеревозчикаФХЖСуммаНДС > 0 Тогда
					УстановитьЗначениеРеквизитаВСтруктуреФормы(Форма, "ТитулПеревозчикаФХЖСтоимостьПеревозкиСНалогом", 
						ТитулПеревозчикаФХЖСтоимостьПеревозкиБезНалога + ТитулПеревозчикаФХЖСуммаНДС);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли СтрЗаканчиваетсяНа(Форма.ИмяФормы, "ТитулГрузоотправителяРаботникНаПогрузке") Тогда 
		Если ЗначениеЗаполнено(Форма.ТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийНаименование) Тогда
			Форма.ВариантОснованияПолномочий = 1;
		ИначеЕсли ИмяЭлемента <> "ВариантОснованияПолномочий" Тогда
			Форма.ВариантОснованияПолномочий = 0;
		КонецЕсли;
		Элементы.ГруппаРеквизитаТитулГрузоотправителяРаботникНаПогрузкеОснованиеПолномочий.Видимость = Форма.ВариантОснованияПолномочий = 0;
		Элементы.ГруппаРеквизитаТитулГОРаботНаПогрузкеДокументПолномочийНаименование.Видимость = Форма.ВариантОснованияПолномочий = 1;
		Элементы.ГруппаРеквизитаТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийНомер.Видимость = Форма.ВариантОснованияПолномочий = 1;
		Элементы.ГруппаРеквизитаТитулГрузоотправителяРаботникНаПогрузкеДокументПолномочийДата.Видимость = Форма.ВариантОснованияПолномочий = 1;
		Элементы.ГруппаРеквизитаТитулГОРаботНаПогрузкеДокументПолномочийДополнительныеСведения.Видимость = Форма.ВариантОснованияПолномочий = 1;
		Элементы.ГруппаТаблицы.Видимость = Форма.ВариантОснованияПолномочий = 1;
		
	ИначеЕсли СтрЗаканчиваетсяНа(Форма.ИмяФормы, "ТитулГрузоотправителяПогрузка") Тогда
		Если ЗначениеЗаполнено(Форма.ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем) = Ложь Тогда
			Форма.ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем = "1";
		КонецЕсли;	
		Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяЛицоОсуществляющееПогрузку.Видимость = Форма.ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем = "2";
		Элементы.ГруппаРеквизитаЗаполнитьТитулГрузоотправителяОснованиеОсуществленияПогрузки.Видимость = Форма.ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем = "2";
		Элементы.ГруппаРеквизитаЗаполнитьТитулГрузоотправителяРаботникНаПогрузке.Видимость = Форма.ТитулГрузоотправителяЛицоОсуществляющееПогрузкуЯвляетсяГрузоотправителем = "2";
	
	ИначеЕсли СтрЗаканчиваетсяНа(Форма.ИмяФормы, "ТитулГрузоотправителяВладелецПунктаПогрузки") Тогда
		Если ЗначениеЗаполнено(Форма.ТитулГрузоотправителяВладелецПунктаПогрузкиЯвляетсяГрузоотправителем) = Ложь Тогда
			Форма.ТитулГрузоотправителяВладелецПунктаПогрузкиЯвляетсяГрузоотправителем = "1";
		КонецЕсли;
		
		Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяВладелецПунктаПогрузки.Доступность = Форма.ТитулГрузоотправителяВладелецПунктаПогрузкиЯвляетсяГрузоотправителем = "2";
		Элементы.ГруппаРеквизитаХранимыеДанныеТитулГОРеквизитыГОКакВладелецаПунктаПогрузки.Доступность = Форма.ТитулГрузоотправителяВладелецПунктаПогрузкиЯвляетсяГрузоотправителем = "2";
		
		Элементы.ГруппаРеквизитаТитулГ0ПричинаОтсутствияИнформацииОВладельцеПунктаПогрузки.Доступность = Форма.ТитулГрузоотправителяВладелецПунктаПогрузкиЯвляетсяГрузоотправителем = "3";
		
	ИначеЕсли СтрЗаканчиваетсяНа(Форма.ИмяФормы, "ТитулПеревозчикаФХЖПеревозчик") Тогда
		Если Элементы.СсылкаТитулПеревозчикаФХЖБанковскиеРеквизиты.СвязиПараметровВыбора.Количество() = 0 Тогда
			СвязиПараметровВыбора = Новый Массив();
			СвязиПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "СсылкаТитулГрузоотправителяПеревозчик"));
			Элементы.СсылкаТитулПеревозчикаФХЖБанковскиеРеквизиты.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
		КонецЕсли;
		
	ИначеЕсли СтрЗаканчиваетсяНа(Форма.ИмяФормы, "Груз") Тогда 
		БылРазделитель = Ложь;
		Для Каждого ТекущийЭлемент Из Элементы.ГруппаРеквизиты.ПодчиненныеЭлементы Цикл
			Если БылРазделитель И ТекущийЭлемент.Имя <> "ГруппаРеквизитаИмеетУчетВГИС" Тогда
				ТекущийЭлемент.Видимость = Форма["ИмеетУчетВГИС"];	
			КонецЕсли;
			Если ТекущийЭлемент.Имя = "ГруппаРазделительИмеетУчетВГИС" Тогда
				БылРазделитель = Истина;	
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли СтрЗаканчиваетсяНа(Форма.ИмяФормы, "Водитель") Тогда
		Если Форма.ОписаниеРеквизитовФормы <> Неопределено И ТипЗнч(Форма.ОписаниеРеквизитовФормы) = Тип("Структура") Тогда
			СтрутураРеквизитов = Новый Структура(Форма.ОписаниеРеквизитовФормы.ПараметрыФормы);
			Для Каждого КиЗ Из СтрутураРеквизитов Цикл
				Если СтрЗаканчиваетсяНа(КиЗ.Ключ, "ФЛ_ИНН") 
					И ЗначениеЗаполнено(Форма[КиЗ.Ключ]) Тогда
					ЗначениеИНН = Форма[КиЗ.Ключ];
					
					РезультатПроверкиИНН = ПроверитьСоответствиеТребованиямИНН(ЗначениеИНН);
					ГруппаПроверкаИНН = Элементы.Найти("ГруппаПоясненияНекорректногоИНН");
					Если ГруппаПроверкаИНН <> Неопределено Тогда
						Форма["НадписьПоясненияНекорректногоИНН"] = Новый ФорматированнаяСтрока(РезультатПроверкиИНН.ОписаниеОшибки, , ЦветНекорректныхДанных);
						ГруппаПроверкаИНН.Видимость = РезультатПроверкиИНН.СоответствуетТребованиям = Ложь;
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли СтрЗаканчиваетсяНа(Форма.ИмяФормы, "СторонаПодписавшаяДокумент")
		Или СтрЗаканчиваетсяНа(Форма.ИмяФормы, "ГОКакВладелецаПунктаПогрузки") Тогда
		Если Форма.ОписаниеРеквизитовФормы <> Неопределено Тогда
			СтрутураРеквизитов = Новый Структура(Форма.ОписаниеРеквизитовФормы.ПараметрыФормы);
			Для Каждого КиЗ Из СтрутураРеквизитов Цикл
				Если (СтрЗаканчиваетсяНа(КиЗ.Ключ, "ФЛ_ИНН") Или СтрЗаканчиваетсяНа(КиЗ.Ключ, "ЮЛ_ИНН")) 
					И ЗначениеЗаполнено(Форма[КиЗ.Ключ]) Тогда
					ИмяПоляИНН = КиЗ.Ключ;
					ИмяОбщегоПоляВвода = "ОбщееПолеВводаИНН";
					Если ИмяЭлемента = Неопределено Тогда
						// При открытии формы
						ЗначениеИНН = Форма[ИмяПоляИНН];
						Форма[ИмяОбщегоПоляВвода] = ЗначениеИНН;
					Иначе
						ЗначениеИНН = Форма[ИмяОбщегоПоляВвода];
					КонецЕсли;
					
					РезультатПроверкиИНН = ПроверитьСоответствиеТребованиямИНН(ЗначениеИНН);
					ГруппаПроверкаИНН = Элементы.Найти("ГруппаПоясненияНекорректногоИНН");
					Если ГруппаПроверкаИНН <> Неопределено Тогда
						Форма["НадписьПоясненияНекорректногоИНН"] = Новый ФорматированнаяСтрока(РезультатПроверкиИНН.ОписаниеОшибки, , ЦветНекорректныхДанных);
						ГруппаПроверкаИНН.Видимость = Форма.РФИлиНет = 0 И РезультатПроверкиИНН.СоответствуетТребованиям = Ложь;
					КонецЕсли;	
				ИначеЕсли СтрНачинаетсяС(КиЗ.Ключ, "ИнострЛицоБезУчета") 
				 	И ЗначениеЗаполнено(Форма[КиЗ.Ключ]) Тогда
				 		ЕстьДанныеИностранногоЛица = Истина;
				КонецЕсли;
			КонецЦикла;
			Если ИмяЭлемента = "РФИлиНет" Тогда
				Если Форма.РФИлиНет = 0 Тогда
					Для Каждого КиЗ Из СтрутураРеквизитов Цикл
						Если СтрНачинаетсяС(КиЗ.Ключ, "ИнострЛицоБезУчета") Тогда
						 	Форма[КиЗ.Ключ] = Неопределено;
					 	КонецЕсли;	
					КонецЦикла;
					Форма["ОрганВластиВыдавшийДокумент"] = Неопределено;
				ИначеЕсли Форма.РФИлиНет = 1 Тогда
					Если ЗначениеЗаполнено(ИмяПоляИНН) Тогда
						Форма[ИмяПоляИНН] = Неопределено;
					КонецЕсли;	
					Форма["ОрганВластиВыдавшийДокумент"] = Неопределено;
				КонецЕсли;
			ИначеЕсли ЕстьДанныеИностранногоЛица = Истина Тогда
				Форма.РФИлиНет = 1;
			ИначеЕсли ЗначениеЗаполнено(Форма["ОрганВластиВыдавшийДокумент"]) Тогда
				Форма.РФИлиНет = 2;
			КонецЕсли;
		КонецЕсли;
		Для Каждого ТекущийЭлемент Из Элементы.ГруппаРеквизиты.ПодчиненныеЭлементы Цикл
			Если ТекущийЭлемент.Имя <> "ГруппаРеквизитаРФИлиНет"
				И НЕ СтрЗаканчиваетсяНа(ТекущийЭлемент.Имя, "ИНН")
				И НЕ СтрЗаканчиваетсяНа(ТекущийЭлемент.Имя, "ОрганВластиВыдавшийДокумент")
				И НЕ ТекущийЭлемент.Имя = "ГруппаПоясненияНекорректногоИНН" Тогда
				ТекущийЭлемент.Видимость = Форма.РФИлиНет = 1;
			ИначеЕсли СтрЗаканчиваетсяНа(ТекущийЭлемент.Имя, "ИНН")
				И НЕ ТекущийЭлемент.Имя = "ГруппаПоясненияНекорректногоИНН" Тогда
				ТекущийЭлемент.Видимость = Форма.РФИлиНет = 0;	
			ИначеЕсли СтрЗаканчиваетсяНа(ТекущийЭлемент.Имя, "ОрганВластиВыдавшийДокумент")Тогда	
				ТекущийЭлемент.Видимость = Форма.РФИлиНет = 2;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЭлектронныйЗаказЗаявка.Форма.ОсновнаяФорма" Тогда
		// Страница "Оформление"
		Если ЗначениеЗаполнено(Форма.Объект.СсылкаТитулГрузоотправителяСоставитель) Тогда
			Форма.ВариантПоДоверенностиЗаГрузоотправителя = 1;	
		ИначеЕсли ИмяЭлемента <> "ВариантПоДоверенностиЗаГрузоотправителя" Тогда
			Форма.ВариантПоДоверенностиЗаГрузоотправителя = 0;
		КонецЕсли;	
		Если Форма.ВариантПоДоверенностиЗаГрузоотправителя = 1 Тогда
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяСоставитель.Видимость = Истина;
			Элементы.ГруппаРеквизитаЗаполнитьТитулГрузоотправителяСоставительДоверенность.Видимость = Истина;
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяГрузоотправитель.ЦветФона = Новый Цвет;
			Если Форма.Объект.РольУчастника = 3 Тогда
				Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяСоставитель.ЦветФона = ЦветВыделенияУчастникаЭПД;
			КонецЕсли;
		Иначе
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяСоставитель.Видимость = Ложь;
			Элементы.ГруппаРеквизитаЗаполнитьТитулГрузоотправителяСоставительДоверенность.Видимость = Ложь;
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяСоставитель.ЦветФона = Новый Цвет;
			Если Форма.Объект.РольУчастника = 3 Тогда
				Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяГрузоотправитель.ЦветФона = ЦветВыделенияУчастникаЭПД;	
			КонецЕсли;
		КонецЕсли;
		
		// Страница "Подтверждение"
		Если ЗначениеЗаполнено(Форма.Объект.СсылкаТитулПеревозчикаСоставитель) Тогда
			Форма.ВариантПоДоверенностиЗаПеревозчика = 1;	
		ИначеЕсли ИмяЭлемента <> "ВариантПоДоверенностиЗаПеревозчика" Тогда
			Форма.ВариантПоДоверенностиЗаПеревозчика = 0;
		КонецЕсли;	
		Если Форма.ВариантПоДоверенностиЗаПеревозчика = 1 Тогда
			Элементы.ГруппаРеквизитаСсылкаТитулПеревозчикаСоставитель.Видимость = Истина;
			Элементы.ГруппаРеквизитаЗаполнитьТитулПеревозчикаСоставительДоверенность.Видимость = Истина;
			Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяПеревозчик.ЦветФона = Новый Цвет;
			Если Форма.Объект.РольУчастника = 1 Тогда
				Элементы.ГруппаРеквизитаСсылкаТитулПеревозчикаСоставитель.ЦветФона = ЦветВыделенияУчастникаЭПД;
			КонецЕсли;
		Иначе
			Элементы.ГруппаРеквизитаСсылкаТитулПеревозчикаСоставитель.Видимость = Ложь;
			Элементы.ГруппаРеквизитаЗаполнитьТитулПеревозчикаСоставительДоверенность.Видимость = Ложь;
			Элементы.ГруппаРеквизитаСсылкаТитулПеревозчикаСоставитель.ЦветФона = Новый Цвет;
			Если Форма.Объект.РольУчастника = 1 Тогда
				Элементы.ГруппаРеквизитаСсылкаТитулГрузоотправителяПеревозчик.ЦветФона = ЦветВыделенияУчастникаЭПД;	
			КонецЕсли;
		КонецЕсли;
		
		Если ПолучитьЗначениеРеквизитаИзСтруктурыФормы(Форма, "ТитулПеревозчикаСодержаниеОперации") = "2" Тогда
			Форма.ВариантПодтверждения = 1;		
		КонецЕсли;
		Для Каждого ТекущийЭлемент Из Элементы.ГруппаРеквизитыТитулПеревозчика.ПодчиненныеЭлементы Цикл
			Если ТекущийЭлемент.Имя <> "ГруппаВариантПодтверждения"
				И ТекущийЭлемент.Имя <> "ГруппаРеквизитаТитулПеревозчикаПричинаОтказа"
				И ТекущийЭлемент.Имя <> "ГруппаВариантПоДоверенностиЗаПеревозчика"
				И ТекущийЭлемент.Имя <> "ГруппаРеквизитаЗаполнитьТитулПеревозчикаСоставительДоверенность"
				И ТекущийЭлемент.Имя <> "ГруппаРеквизитаСсылкаТитулПеревозчикаСоставитель" Тогда
				ТекущийЭлемент.Видимость = Форма.ВариантПодтверждения = 0;	
			КонецЕсли;
		КонецЦикла;
		Элементы.ГруппаРеквизитаТитулПеревозчикаПричинаОтказа.Видимость = Форма.ВариантПодтверждения = 1;
		Элементы.ГруппаТаблицыТитулПеревозчика.Видимость = Форма.ВариантПодтверждения = 0;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЭлектронныйПутевойЛист.Форма.ОсновнаяФорма" Тогда
		// Страница "Оформление"
		Элементы.ГруппаРеквизитаТитулОформлениеПредыдущийПутевойЛист.Видимость = 
												Форма.Объект.ТитулОформлениеПризнакНачалаРейса = "2" И Форма.Объект.ЭтоВходящий = Ложь;
		Элементы.ГруппаРеквизитаТитулОформлениеВидКоммерческойПеревозки.Видимость = 
												Форма.ТитулОформлениеСведенияОВидеПеревозки = "КП";
		Элементы.ГруппаРеквизитаПредставлениеТитулОформлениеАдресМестаОтправления.Видимость = 
												Форма.ТитулОформлениеВидКоммерческойПеревозки = "ПГ";
		Элементы.ГруппаРеквизитаЗаполнитьТитулОформлениеАдресаПунктовПогрузкиИВыгрузки.Видимость = 
												Форма.ТитулОформлениеВидКоммерческойПеревозки = "ПГ";
		Элементы.ГруппаРеквизитаТитулОформлениеДатаВТечениеКоторойПутевойЛистМожетБытьИспользован.Видимость = 
												Форма.ТитулОформлениеПризнакФормированияПутевогоЛистаНаОдинДень = "1";
		Элементы.ГруппаРеквизитаТитулОформлениеДатаНачалаСрокаИспользованияПутевогоЛиста.Видимость = 
												Форма.ТитулОформлениеПризнакФормированияПутевогоЛистаНаОдинДень <> "1";
		Элементы.ГруппаРеквизитаТитулОформлениеДатаОкончанияСрокаИспользованияПутевогоЛиста.Видимость = 
												Форма.ТитулОформлениеПризнакФормированияПутевогоЛистаНаОдинДень <> "1";
		Элементы.СсылкаТитулОформлениеМедорганизация.Видимость = Форма.ВариантМедосмотр = 1;
		Элементы.СсылкаТитулОформлениеТехконтроль.Видимость = Форма.ВариантТехконтроль = 1;
		Элементы.СсылкаТитулОформлениеПоказанияОдометра.Видимость = Форма.ВариантПоказанияОдометра = 1;
												
		// Страница Медосмотр
		Элементы.ГруппаРеквизитаХранимыеДанныеТитулМедосмотрШтатныйМедработник.Видимость =
																			Форма.ВариантМедработник = 0;
		Элементы.ГруппаРеквизитаХранимыеДанныеТитулМедосмотрСтороннийМедработник.Видимость =
																			Форма.ВариантМедработник = 1;
																			
		// Страница Выезд
		Элементы.ГруппаРеквизитаТитулВыездДатаИВремяВыезда.Видимость = Форма.ТитулВыездПризнакНачалаРейса = "1";
		Элементы.ГруппаРеквизитаТитулВыездПоказанияОдометраПриВыезде.Видимость = Форма.ТитулВыездПризнакНачалаРейса = "1";
		Элементы.ГруппаРеквизитаТитулВыездДатаИВремяПриема.Видимость = Форма.ТитулВыездПризнакНачалаРейса = "2";
		Элементы.ГруппаРеквизитаТитулВыездПоказанияОдометраПриПриеме.Видимость = Форма.ТитулВыездПризнакНачалаРейса = "2";
		Элементы.ГруппаРеквизитаТитулВыездПризнакНачалаРейса.Доступность = Ложь;
		
		// Страница Заезд
		Элементы.ГруппаРеквизитаТитулЗаездДатаИВремяЗаезда.Видимость = Форма.Объект.ТитулЗаездПризнакОкончанияРейса = "1";
		Элементы.ГруппаРеквизитаТитулЗаездПоказанияОдометраПриЗаезде.Видимость = Форма.Объект.ТитулЗаездПризнакОкончанияРейса = "1";
		Элементы.ГруппаРеквизитаТитулЗаездДатаИВремяСдачи.Видимость = Форма.Объект.ТитулЗаездПризнакОкончанияРейса = "2";
		Элементы.ГруппаРеквизитаТитулЗаездПоказанияОдометраПриСдаче.Видимость = Форма.Объект.ТитулЗаездПризнакОкончанияРейса = "2";
		
		// Страница Медосмотр (после)
		Элементы.ГруппаРеквизитаХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник.Видимость =
																		Форма.ВариантМедработникПосле = 0;
		Элементы.ГруппаРеквизитаХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник.Видимость =
																		Форма.ВариантМедработникПосле = 1;		
	
	ИначеЕсли Форма.ИмяФормы = "Документ.ЭлектронныйДоговорФрахтования.Форма.ОсновнаяФорма" Тогда
		Если ИмяЭлемента = "ТитулФрахтователяФункция" Или ИмяЭлемента = Неопределено Тогда
			Элементы.ГруппаРеквизитаТитулФрахтователяПассажиры.Видимость = Форма.ТитулФрахтователяФункция = "1";
			Элементы.ГруппаРеквизитаТитулФрахтователяПорядокДопускаПассажировДляПосадки.Видимость = Форма.ТитулФрахтователяФункция = "1";
		КонецЕсли;
		
		Если ИмяЭлемента = "ВариантЗаФрахтователяПоДоверенности" Или ИмяЭлемента = Неопределено Тогда
			Элементы.ГруппаРеквизитаСсылкаТитулФрахтователяСоставитель.Видимость = Форма.ВариантЗаФрахтователяПоДоверенности;
			Элементы.ГруппаРеквизитаЗаполнитьТитулФрахтователяОснованиеСоставленияФайла.Видимость = Форма.ВариантЗаФрахтователяПоДоверенности;
		КонецЕсли;
		
		Если ИмяЭлемента = "ВариантЗаФрахтовщикаПоДоверенности" Или ИмяЭлемента = Неопределено Тогда
			Элементы.ГруппаРеквизитаСсылкаТитулФрахтовщикаСоставитель.Видимость = Форма.ВариантЗаФрахтовщикаПоДоверенности;
			Элементы.ГруппаРеквизитаЗаполнитьТитулФрахтовщикаОснованиеСоставленияФайла.Видимость = Форма.ВариантЗаФрахтовщикаПоДоверенности;
		КонецЕсли;
	КонецЕсли;
	 
	
КонецПроцедуры


Функция РассчетНДСПоСтавкеСтрокой(СуммаБезНДС, СтавкаСтрокой)
	
	Если СтавкаСтрокой = "10%" Тогда
		Возврат СуммаБезНДС * 10 / 100;
	ИначеЕсли СтавкаСтрокой = "18%" Тогда
		Возврат СуммаБезНДС * 18 / 100;
	ИначеЕсли СтавкаСтрокой = "20%" Тогда
		Возврат СуммаБезНДС * 20 / 100;
	ИначеЕсли СтавкаСтрокой = "10/110" Тогда
		Возврат СуммаБезНДС * 10 / 110;
	ИначеЕсли СтавкаСтрокой = "18/118" Тогда
		Возврат СуммаБезНДС * 18 / 118;
	ИначеЕсли СтавкаСтрокой = "20/120" Тогда
		Возврат СуммаБезНДС * 20 / 120;
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции


Функция ПолучитьПредставлениеТелефона(Телефон) Экспорт
		
	Представление = "";
	ТекстДляОбработки = Телефон; //СокрЛП(Телефон); 
	КодСтраны = "7";
	Если Лев(ТекстДляОбработки, 1) = "+" Тогда
		Если Сред(ТекстДляОбработки, 2, 1) = "7" Тогда
			ТекстДляОбработки = Сред(ТекстДляОбработки, 3);
		Иначе
			МассивЧастей = СтрРазделить(ТекстДляОбработки, " ", Ложь);
			Если МассивЧастей.Количество() > 1 Тогда
				КодСтраны = СтрЗаменить(МассивЧастей[0], "+", "");
				МассивЧастей.Удалить(0);
				ТекстДляОбработки = СтрСоединить(МассивЧастей);		
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ТолькоЦифры = "";
	Добавочный = "";
	Для Индекс = 1 По СтрДлина(ТекстДляОбработки) Цикл
		ТекущийСимвол = Сред(ТекстДляОбработки, Индекс, 1);
		Если СтрНайти("0123456789", ТекущийСимвол) Тогда
			ТолькоЦифры = ТолькоЦифры + ТекущийСимвол;
			Если СтрДлина(ТолькоЦифры) = 10 Тогда
				СледующийСимвол = Сред(ТекстДляОбработки, Индекс + 1, 1);
				Если СтрНайти("0123456789", СледующийСимвол) Тогда
					ТолькоЦифры = ТолькоЦифры + СледующийСимвол;
					Индекс = Индекс + 1;
				КонецЕсли;
				Добавочный = Сред(ТекстДляОбработки, Индекс + 1);
				Прервать;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если СтрДлина(ТолькоЦифры) = 11 Тогда
		ТолькоЦифры = Сред(ТолькоЦифры, 2);
	КонецЕсли;

	Если СтрДлина(ТолькоЦифры) = 10 Тогда
		Представление = СтрШаблон(
			"+" + КодСтраны + " %1 %2-%3-%4", 
			Сред(ТолькоЦифры, 1, 3), 
			Сред(ТолькоЦифры, 4, 3),
			Сред(ТолькоЦифры, 7, 2),
			Сред(ТолькоЦифры, 9));		
	КонецЕсли;
	
	Возврат Представление + Добавочный;	

КонецФункции


Функция ТитулПоПрефиксу(ТипДокумента, ПрефиксТитула, ИндексТитула = 1) Экспорт
	
	Результат = Неопределено;
	
	// ЭТрН
	Если ТипДокумента = "Документ.ЭлектроннаяТранспортнаяНакладная" Тогда
		Если ПрефиксТитула = "ТитулГрузоотправителя" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1");
		ИначеЕсли ПрефиксТитула = "ТитулПеревозчикаПриемка" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2");
		ИначеЕсли ПрефиксТитула = "ТитулГрузополучателя" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул3");
		ИначеЕсли ПрефиксТитула = "ТитулПеревозчикаВыдача" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4");
		ИначеЕсли ПрефиксТитула = "ТитулПеревозчикаФХЖ" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул5");
		ИначеЕсли ПрефиксТитула = "ТитулГрузоотправителяФХЖ" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул6");
		ИначеЕсли ПрефиксТитула = "ТитулПереадресовка" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул7");
		ИначеЕсли ПрефиксТитула = "ТитулПеревозчикаЗамены" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул8");
		ИначеЕсли ПрефиксТитула = "ТитулУказаниеПереадрес" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул9");
		ИначеЕсли ПрефиксТитула = "ДопТитулПереадресовка" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул7");
		ИначеЕсли ПрефиксТитула = "ДопТитулПеревозчикаЗамены" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул8");
		ИначеЕсли ПрефиксТитула = "ДопТитулУказаниеПереадрес" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул9");
		ИначеЕсли ПрефиксТитула = "ДопТитулГрузополучателя" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул3");
		ИначеЕсли ПрефиксТитула = "ДопТитулПеревозчикаВыдача" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_ДопТитул4");
		КонецЕсли;
	// ЭСВ
	ИначеЕсли ТипДокумента = "Документ.ЭлектроннаяСопроводительнаяВедомость" Тогда		
		Если ПрефиксТитула = "ТитулПеревозчика" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_" + ИндексТитула);
		ИначеЕсли ПрефиксТитула = "ТитулГрузоотправителя" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_" + ИндексТитула);
		ИначеЕсли ПрефиксТитула = "ТитулГрузополучателя" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_" + ИндексТитула);	
		КонецЕсли;
	// ЭЗН
	ИначеЕсли ТипДокумента = "Документ.ЭлектронныйЗаказНаряд" Тогда
		Если ПрефиксТитула = "ТитулФрахтователя" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул1");
		ИначеЕсли ПрефиксТитула = "ТитулФрахтовщика" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул2");
		ИначеЕсли ПрефиксТитула = "ТитулФрахтователяПодача" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул3");
		ИначеЕсли ПрефиксТитула = "ТитулФрахтовщикаВозврат" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗН_Титул4");	
		КонецЕсли;
	// ЭЗЗ
	ИначеЕсли ТипДокумента = "Документ.ЭлектронныйЗаказЗаявка" Тогда
		Если ПрефиксТитула = "ТитулГрузоотправителя" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул1");
		ИначеЕсли ПрефиксТитула = "ТитулПеревозчика" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭЗЗ_Титул2");	
		КонецЕсли;
	// ЭПЛ
	ИначеЕсли ТипДокумента = "Документ.ЭлектронныйПутевойЛист" Тогда
		Если ПрефиксТитула = "ТитулОформление" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1");
		ИначеЕсли ПрефиксТитула = "ТитулМедосмотр" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2");
		ИначеЕсли ПрефиксТитула = "ТитулВыпуск" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3");
		ИначеЕсли ПрефиксТитула = "ТитулВыезд" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4");
		ИначеЕсли ПрефиксТитула = "ТитулЗаезд" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5");
		ИначеЕсли ПрефиксТитула = "ТитулМедосмотрПосле" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6");	
		КонецЕсли;
	// ЭДФ
	ИначеЕсли ТипДокумента = "Документ.ЭлектронныйДоговорФрахтования" Тогда
		Если ПрефиксТитула = "ТитулФрахтователя" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул1");
		ИначеЕсли ПрефиксТитула = "ТитулФрахтовщика" Тогда
			Результат = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭДФ_Титул2");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


Функция КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяЭлемента, ИндексТитула = 1) Экспорт

	МассивЧастейИмениФормы = СтрРазделить(Форма.ИмяФормы, ".");
	ТипДокумента = МассивЧастейИмениФормы[1];
	ПрефиксТитула = ПрефиксТитулаРеквизита(ИмяЭлемента, "Документ." + ТипДокумента);
	
	СтруктураРеквизитовЗаполнение = СкопироватьИзФиксированногоЗначенияРекурсивно(Форма.СтруктураРеквизитов);
	
	МассивВерсий = Неопределено;
	НомерВерсии = 0;
	Если СтруктураРеквизитовЗаполнение.Свойство(ПрефиксТитула, МассивВерсий) = Ложь Тогда
		МассивВерсий = Новый Массив;
		СтруктураРеквизитовТитула = Новый Структура;
		МассивВерсий.Добавить(СтруктураРеквизитовТитула);	
		СтруктураРеквизитовЗаполнение.Вставить(ПрефиксТитула, МассивВерсий);
	Иначе
		Если Форма.ОтображаемыеВерсииТитулов <> Неопределено 
			И Форма.ОтображаемыеВерсииТитулов.Свойство(ПрефиксТитула) Тогда
			НомерВерсии = Форма.ОтображаемыеВерсииТитулов[ПрефиксТитула];
		Иначе
			Титул = ТитулПоПрефиксу("Документ." + ТипДокумента, ПрефиксТитула, ИндексТитула);
			Для Каждого СтрВерсии Из Форма.ВерсииТитулов Цикл
				Если СтрВерсии.Титул = Титул Тогда
					НомерВерсии = Макс(НомерВерсии, СтрВерсии.НомерВерсии);
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
		
		Если НомерВерсии > МассивВерсий.ВГраница() Тогда
			МассивВерсий.Вставить(НомерВерсии, Новый Структура);	
		КонецЕсли;

	КонецЕсли;		
	
	Результат = Новый Структура;
	Результат.Вставить("СтруктураРеквизитовЗаполнение", СтруктураРеквизитовЗаполнение);
	Результат.Вставить("ПрефиксТитула", ПрефиксТитула);
	Результат.Вставить("НомерВерсии", НомерВерсии);
	
	Возврат Результат;
		
КонецФункции


Функция ПолучитьКонтейнерРеквизитов(Форма, ИмяЭлемента = Неопределено, ТекущиеДанные = Неопределено) Экспорт
	
	Если ТекущиеДанные <> Неопределено Тогда
		Возврат ТекущиеДанные;
	КонецЕсли;
	
	Если Форма.ОписаниеРеквизитовФормы.ЕстьОбъект = Истина Тогда
		Если ИмяЭлемента = Неопределено Тогда
			КонтейнерРеквизитов = Форма.Объект;
		Иначе
			КонтейнерРеквизитов = КонтейнерОтображаемойВерсииРеквизита(Форма, ИмяЭлемента);
		КонецЕсли;
	Иначе
		КонтейнерРеквизитов = Форма;	
	КонецЕсли;
		
	Возврат КонтейнерРеквизитов;
	
КонецФункции


Процедура ИзменитьОформлениеЭлементовФормы(Форма, ГруппаДанных = "") Экспорт
	
	Возврат;
	
КонецПроцедуры


Функция ПолучитьСтруктуруАдресаУчастника(ИмяРеквизита, Форма, ТекущиеДанные = Неопределено) Экспорт
	
	Префикс = СтрЗаменить(ИмяРеквизита, "Представление", "");
	
	КонтейнерРеквизитов = ПолучитьКонтейнерРеквизитов(Форма, ИмяРеквизита, ТекущиеДанные);
	
	СтруктураРеквизитовАдреса = Новый Структура;
	
	СтруктураРеквизитовАдреса.Вставить("Индекс", "");
	СтруктураРеквизитовАдреса.Вставить("КодРегиона", "");
	СтруктураРеквизитовАдреса.Вставить("Город", "");
	СтруктураРеквизитовАдреса.Вставить("Район", "");
	СтруктураРеквизитовАдреса.Вставить("НаселенныйПункт", "");
	СтруктураРеквизитовАдреса.Вставить("Улица", "");
	СтруктураРеквизитовАдреса.Вставить("Дом", "");
	СтруктураРеквизитовАдреса.Вставить("Корпус", "");
	
	Если КонтейнерРеквизитов <> Неопределено Тогда
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			СтруктураВерсииТитула = КонтейнерРеквизитов.СтруктураРеквизитовЗаполнение[КонтейнерРеквизитов.ПрефиксТитула][КонтейнерРеквизитов.НомерВерсии];
			Для Каждого КиЗ Из СтруктураРеквизитовАдреса Цикл
				Если СтруктураВерсииТитула.Свойство(Префикс + КиЗ.Ключ) Тогда
					СтруктураРеквизитовАдреса.Вставить(КиЗ.Ключ, СтруктураВерсииТитула[Префикс + КиЗ.Ключ]);	
				КонецЕсли;
			КонецЦикла;
			Если СтруктураВерсииТитула.Свойство(Префикс + "Представление")
				И ЗначениеЗаполнено(СтруктураВерсииТитула[Префикс + "Представление"]) Тогда
				СтруктураРеквизитовАдреса.Вставить("Представление", СтруктураВерсииТитула[Префикс + "Представление"]);	
				СтруктураРеквизитовАдреса.Вставить("КодСтраны", СтруктураВерсииТитула[Префикс + "КодСтраны"]);
			КонецЕсли;
		Иначе
			Для Каждого КиЗ Из СтруктураРеквизитовАдреса Цикл
				СтруктураРеквизитовАдреса.Вставить(КиЗ.Ключ, КонтейнерРеквизитов[Префикс + КиЗ.Ключ]);	
			КонецЦикла;	
			Если ТекущиеДанные = Неопределено Тогда
				СтруктураРеквизитовФормы = Новый Структура(КонтейнерРеквизитов.ОписаниеРеквизитовФормы.ПараметрыФормы);
				Если СтруктураРеквизитовФормы.Свойство(Префикс + "Представление") Тогда
					СтруктураРеквизитовАдреса.Вставить("Представление", КонтейнерРеквизитов[Префикс + "Представление"]);	
					СтруктураРеквизитовАдреса.Вставить("КодСтраны", КонтейнерРеквизитов[Префикс + "КодСтраны"]);	
				КонецЕсли;
			ИначеЕсли ТекущиеДанные.Свойство(Префикс + "Представление") Тогда
				СтруктураРеквизитовАдреса.Вставить("Представление", ТекущиеДанные[Префикс + "Представление"]);	
				СтруктураРеквизитовАдреса.Вставить("КодСтраны", ТекущиеДанные[Префикс + "КодСтраны"]); 	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураРеквизитовАдреса;
	
КонецФункции

Процедура ЗаполнитьПредставлениеАдреса(ИмяРеквизита, Форма, ТекущиеДанные = Неопределено) Экспорт 
	
	СтруктураРеквизитовАдреса = ПолучитьСтруктуруАдресаУчастника(ИмяРеквизита, Форма, ТекущиеДанные);	
	
	#Если Сервер Тогда
		МодульОбменСГИСЭПД = ОбменСГИСЭПД;
	#Иначе
		МодульОбменСГИСЭПД = ОбменСГИСЭПДВызовСервера;
	#КонецЕсли
	
	КонтактнаяИнформация = МодульОбменСГИСЭПД.КонтактнаяИнформацияВXML(СтруктураРеквизитовАдреса, ,
																ОбменСГИСЭПДВызовСервера.ВидФактическийАдресКонтрагента());

	Если ТекущиеДанные = Неопределено Тогда
		Форма[ИмяРеквизита] = ПредставлениеКонтактнойИнформации(КонтактнаяИнформация);
	Иначе
		ТекущиеДанные[ИмяРеквизита] = ПредставлениеКонтактнойИнформации(КонтактнаяИнформация);
	КонецЕсли;
	
	Префикс = СтрЗаменить(ИмяРеквизита, "Представление", "");
	
	КонтейнерРеквизитовИлиОписание = ПолучитьКонтейнерРеквизитов(Форма, ИмяРеквизита, ТекущиеДанные);
	Если ТипЗнч(КонтейнерРеквизитовИлиОписание) = Тип("Структура") Тогда
		КонтейнерРеквизитов = КонтейнерРеквизитовИлиОписание.СтруктураРеквизитовЗаполнение[КонтейнерРеквизитовИлиОписание.ПрефиксТитула][КонтейнерРеквизитовИлиОписание.НомерВерсии];
	Иначе
		КонтейнерРеквизитов = КонтейнерРеквизитовИлиОписание;
	КонецЕсли;
	
	ПоказатьОшибкиПоАдресу(Форма, КонтейнерРеквизитов, Префикс, ИмяРеквизита);
	
КонецПроцедуры

Функция ПредставлениеКонтактнойИнформации(КонтактнаяИнформация) Экспорт
	
	#Если Сервер Тогда
		МодульОбменСГИСЭПД = ОбменСГИСЭПД;
	#Иначе
		МодульОбменСГИСЭПД = ОбменСГИСЭПДВызовСервера;
	#КонецЕсли
	
	Возврат МодульОбменСГИСЭПД.ПредставлениеКонтактнойИнформации(КонтактнаяИнформация);
	
КонецФункции


Функция РазделитьСтрокуСоСложнымРазделителем(Строка, Разделитель) Экспорт
	
	Результат = Новый Массив;
	
	ДлинаРазделителя = СтрДлина(Разделитель);
	ДлинаСтроки = СтрДлина(Строка);
	ПоискЗакончен = Ложь;
	ПозНач = 1;
	Пока ПоискЗакончен = Ложь Цикл
		Если ПозНач > ДлинаСтроки Тогда
			ПоискЗакончен = Истина;
		Иначе
			ПозКон = СтрНайти(Строка, Разделитель, НаправлениеПоиска.СНачала, ПозНач);
			Если ПозКон = 0 Тогда
				Результат.Добавить(Сред(Строка, ПозНач));
				ПоискЗакончен = Истина;
			Иначе
				Результат.Добавить(Сред(Строка, ПозНач, ПозКон - ПозНач));
			КонецЕсли;
			ПозНач = ПозКон + ДлинаРазделителя;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьРеквизитыУчастника(Участник, ПрефиксРеквизитов, КонтейнерРеквизитов, Форма, ПрефиксТитула = Неопределено) Экспорт
	
	ПостфиксТелефоны = "НомераТелефонов";
	ПостфиксЭлПочта = "АдресаЭлектроннойПочты";
	
	ЕстьТелефоны = Ложь;
	ЕстьЭлПочта = Ложь;
	Если ПрефиксРеквизитов <> "Заказчик" Тогда
		ЕстьТелефоны = Истина;
		ЕстьЭлПочта = Истина;
	КонецЕсли;
	
	ПрефиксПодчиненныхТаблиц = "";
	Если ПрефиксТитула <> Неопределено И СтрНачинаетсяС(ПрефиксРеквизитов, ПрефиксТитула) = Ложь Тогда
		ПрефиксПодчиненныхТаблиц = ПрефиксТитула;
	КонецЕсли;
	
	#Если Сервер Тогда
		МодульОбменСГИСЭПД = ОбменСГИСЭПД;
	#Иначе
		МодульОбменСГИСЭПД = ОбменСГИСЭПДВызовСервера;
	#КонецЕсли
	
	РеквизитыУчастника = МодульОбменСГИСЭПД.ПолучитьРеквизитыУчастника(Участник, Ложь);
	
	ПрефиксКонтактов = "";
	ПрефиксАдреса = "";
	Если ПрефиксРеквизитов = "ТитулФрахтователяФрахтователь"
		Или ПрефиксРеквизитов = "ТитулФрахтователяФрахтовщик"
		Или ПрефиксРеквизитов = "ТитулФрахтователяСоставитель"
		Или ПрефиксРеквизитов = "ТитулФрахтовщикаСоставитель" Тогда
		Если РеквизитыУчастника.Свойство("ЮЛ_ИНН") И ЗначениеЗаполнено(РеквизитыУчастника.ЮЛ_ИНН) Тогда
			ПрефиксКонтактов = "ЮЛ";
			ПрефиксАдреса = "ЮЛ";
		Иначе
			ПрефиксКонтактов = "ФЛ";
			ПрефиксАдреса = Неопределено;
		КонецЕсли;
	ИначеЕсли ПрефиксРеквизитов = "ТитулФрахтовщикаФрахтовщик"
		Или ПрефиксРеквизитов = "ТитулПеревозчикаПеревозчик"
		Или ПрефиксРеквизитов = "ТитулПеревозчикаГрузоотправитель"
		Или ПрефиксРеквизитов = "ТитулПеревозчикаГрузополучатель"
		Или ПрефиксРеквизитов = "ТитулПеревозчикаЛицоОсуществляющееПогрузку"
		Или ПрефиксРеквизитов = "ТитулПеревозчикаЛицоОсуществляющееПриемку"
		Или ПрефиксРеквизитов = "ДопТитулПеревозчикаПеревозчик"
		Или ПрефиксРеквизитов = "ДопТитулПеревозчикаГрузоотправитель"
		Или ПрефиксРеквизитов = "ДопТитулПеревозчикаГрузополучатель"
		Или ПрефиксРеквизитов = "ДопТитулПеревозчикаЛицоОсуществляющееПогрузку"
		Или ПрефиксРеквизитов = "ДопТитулПеревозчикаЛицоОсуществляющееПриемку" Тогда
		Если (РеквизитыУчастника.Свойство("ЮЛ_ИНН") И ЗначениеЗаполнено(РеквизитыУчастника.ЮЛ_ИНН))
			ИЛИ (РеквизитыУчастника.Свойство("ЮЛ_КПП") И ЗначениеЗаполнено(РеквизитыУчастника.ЮЛ_КПП)) Тогда
			ПрефиксКонтактов = "ЮЛ";
			ПрефиксАдреса = "ЮЛ";
		Иначе
			ПрефиксКонтактов = "ИП";
			ПрефиксАдреса = Неопределено;
		КонецЕсли;	
	КонецЕсли;
	
	СтруктураДляЗаполнения = Новый Структура;
	Для Каждого КиЗ Из РеквизитыУчастника Цикл
		Если КиЗ.Ключ <> ПостфиксТелефоны И КиЗ.Ключ <> ПостфиксЭлПочта Тогда
			Если СтрНачинаетсяС(КиЗ.Ключ, "Адрес") И ПрефиксАдреса <> Неопределено Тогда
				КороткоеИмя = ПрефиксАдреса + КиЗ.Ключ;	
			Иначе
				КороткоеИмя = КиЗ.Ключ
			КонецЕсли;
			МассивЧастей = СтрРазделить(ПрефиксРеквизитов, "_");
			ИмяРеквизита = МассивЧастей[МассивЧастей.ВГраница()] + КороткоеИмя;
			СтруктураДляЗаполнения.Вставить(ИмяРеквизита, КиЗ.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
		Для Каждого КиЗ Из СтруктураДляЗаполнения Цикл
			КонтейнерРеквизитов.Вставить(КиЗ.Ключ, КиЗ.Значение);	
		КонецЦикла;	
	Иначе
		ЗаполнитьЗначенияСвойств(КонтейнерРеквизитов, СтруктураДляЗаполнения);
	КонецЕсли;
	
	Если ЕстьТелефоны = Истина Тогда
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			УдалитьСтрокиТаблицыИзСтруктурыВерсии(КонтейнерРеквизитов, ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны);
		Иначе
			Если ТипЗнч(КонтейнерРеквизитов) = Тип("ДанныеФормыЭлементКоллекции") Тогда
				ТаблицаТелефоны = Форма[ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны];
				КолСтрок = ТаблицаТелефоны.Количество();
				Для К = 1 По КолСтрок Цикл
					СтрТелефон = ТаблицаТелефоны[КолСтрок - К];
					Если СтрТелефон.ИдентификаторСтрокиРодителя = КонтейнерРеквизитов.ИдентификаторСтроки Тогда
						ТаблицаТелефоны.Удалить(СтрТелефон);
					КонецЕсли;
				КонецЦикла;
			Иначе
				КонтейнерРеквизитов[ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны].Очистить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьТелефоны = Истина И РеквизитыУчастника.Свойство(ПостфиксТелефоны) Тогда
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			НомерСтроки = 0;
			Для Каждого Телефон Из РеквизитыУчастника[ПостфиксТелефоны] Цикл
				НомерСтроки = НомерСтроки + 1;
				КонтейнерРеквизитов.Вставить(ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны 
													+ "__" + НомерСтроки + "__Телефон", Телефон);
			КонецЦикла;
		Иначе
			Если РеквизитыУчастника.Свойство(ПостфиксТелефоны) Тогда
				Для Каждого Телефон Из РеквизитыУчастника[ПостфиксТелефоны] Цикл
					Если ТипЗнч(КонтейнерРеквизитов) = Тип("ДанныеФормыЭлементКоллекции") Тогда
						НоваяСтрока = Форма[ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны].Добавить();
						НоваяСтрока.ИдентификаторСтрокиРодителя = КонтейнерРеквизитов.ИдентификаторСтроки;
					Иначе
						НоваяСтрока = КонтейнерРеквизитов[ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны].Добавить();
					КонецЕсли;
					НоваяСтрока.Телефон = Телефон;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьЭлПочта = Истина Тогда
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			УдалитьСтрокиТаблицыИзСтруктурыВерсии(КонтейнерРеквизитов, ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта);
		Иначе
			Если ТипЗнч(КонтейнерРеквизитов) = Тип("ДанныеФормыЭлементКоллекции") Тогда
				ТаблицаЭлПочта = Форма[ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта];
				КолСтрок = ТаблицаЭлПочта.Количество();
				Для К = 1 По КолСтрок Цикл
					СтрЭлПочта = ТаблицаЭлПочта[КолСтрок - К];
					Если СтрЭлПочта.ИдентификаторСтрокиРодителя = КонтейнерРеквизитов.ИдентификаторСтроки Тогда
						ТаблицаЭлПочта.Удалить(СтрЭлПочта);
					КонецЕсли;
				КонецЦикла;
			Иначе
				КонтейнерРеквизитов[ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта].Очистить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьЭлПочта = Истина И РеквизитыУчастника.Свойство(ПостфиксЭлПочта) Тогда
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			НомерСтроки = 0;
			Для Каждого АдресЭлектроннойПочты Из РеквизитыУчастника[ПостфиксЭлПочта] Цикл
				НомерСтроки = НомерСтроки + 1;
				КонтейнерРеквизитов.Вставить(ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта 
													+ "__" + НомерСтроки + "__АдресЭлектроннойПочты", АдресЭлектроннойПочты);
			КонецЦикла;
		Иначе
			Если РеквизитыУчастника.Свойство(ПостфиксЭлПочта) Тогда
				Для Каждого АдресЭлектроннойПочты Из РеквизитыУчастника[ПостфиксЭлПочта] Цикл
					Если ТипЗнч(КонтейнерРеквизитов) = Тип("ДанныеФормыЭлементКоллекции") Тогда
						НоваяСтрока = Форма[ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта].Добавить();
						НоваяСтрока.ИдентификаторСтрокиРодителя = КонтейнерРеквизитов.ИдентификаторСтроки;
					Иначе
						НоваяСтрока = КонтейнерРеквизитов[ПрефиксПодчиненныхТаблиц + ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта].Добавить();
					КонецЕсли;
					НоваяСтрока.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьРеквизитыФизическогоЛица(ФизическоеЛицо, ПрефиксРеквизитов, КонтейнерРеквизитов, Организация = Неопределено) Экспорт
	
	ПостфиксТелефоны = "НомераТелефонов";
	ПостфиксЭлПочта = "АдресаЭлектроннойПочты";
	
	ЕстьТелефоны = Истина;
	ЕстьЭлПочта = Истина;
	
	#Если Сервер Тогда
		МодульОбменСГИСЭПД = ОбменСГИСЭПД;
	#Иначе
		МодульОбменСГИСЭПД = ОбменСГИСЭПДВызовСервера;
	#КонецЕсли
	
	РеквизитыФизЛица = МодульОбменСГИСЭПД.ПолучитьРеквизитыФизЛица(ФизическоеЛицо, Организация);
	
	ПрефиксКонтактов = "";
	ПрефиксАдреса = "";
	
	СтруктураДляЗаполнения = Новый Структура;
	Для Каждого КиЗ Из РеквизитыФизЛица Цикл
		Если КиЗ.Ключ <> ПостфиксТелефоны И КиЗ.Ключ <> ПостфиксЭлПочта Тогда
			Если СтрНачинаетсяС(КиЗ.Ключ, "Адрес") И ПрефиксАдреса <> Неопределено Тогда
				КороткоеИмя = ПрефиксАдреса + КиЗ.Ключ;	
			Иначе
				КороткоеИмя = КиЗ.Ключ
			КонецЕсли;
			МассивЧастей = СтрРазделить(ПрефиксРеквизитов, "_");
			ИмяРеквизита = МассивЧастей[МассивЧастей.ВГраница()] + КороткоеИмя;
			СтруктураДляЗаполнения.Вставить(ИмяРеквизита, КиЗ.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
		Для Каждого КиЗ Из СтруктураДляЗаполнения Цикл
			КонтейнерРеквизитов.Вставить(КиЗ.Ключ, КиЗ.Значение);	
		КонецЦикла; 	
	Иначе
		ЗаполнитьЗначенияСвойств(КонтейнерРеквизитов, СтруктураДляЗаполнения);
	КонецЕсли;
	
	Если ЕстьТелефоны = Истина Тогда
		УдалитьСтрокиТаблицыИзСтруктурыВерсии(КонтейнерРеквизитов, ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны);
	КонецЕсли;
	
	Если ЕстьТелефоны = Истина И РеквизитыФизЛица.Свойство(ПостфиксТелефоны) Тогда
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			НомерСтроки = 0;
			Для Каждого Телефон Из РеквизитыФизЛица[ПостфиксТелефоны] Цикл
				КонтейнерРеквизитов.Вставить(ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны 
													+ "__" + НомерСтроки + "__Телефон", Телефон);
				НомерСтроки = НомерСтроки + 1;
			КонецЦикла;
		Иначе
			КонтейнерРеквизитов[ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны].Очистить();
			Если РеквизитыФизЛица.Свойство(ПостфиксТелефоны) Тогда
				Для Каждого Телефон Из РеквизитыФизЛица[ПостфиксТелефоны] Цикл
					НоваяСтрока = КонтейнерРеквизитов[ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксТелефоны].Добавить();
					НоваяСтрока.Телефон = Телефон;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьЭлПочта = Истина Тогда
		УдалитьСтрокиТаблицыИзСтруктурыВерсии(КонтейнерРеквизитов, ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта);
	КонецЕсли;
	
	Если ЕстьЭлПочта = Истина И РеквизитыФизЛица.Свойство(ПостфиксЭлПочта) Тогда
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			НомерСтроки = 0;
			Для Каждого АдресЭлектроннойПочты Из РеквизитыФизЛица[ПостфиксЭлПочта] Цикл
				КонтейнерРеквизитов.Вставить(ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта 
													+ "__" + НомерСтроки + "__АдресЭлектроннойПочты", АдресЭлектроннойПочты);
				НомерСтроки = НомерСтроки + 1;
			КонецЦикла;
		Иначе
			КонтейнерРеквизитов[ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта].Очистить();
			Если РеквизитыФизЛица.Свойство(ПостфиксЭлПочта) Тогда
				Для Каждого АдресЭлектроннойПочты Из РеквизитыФизЛица[ПостфиксЭлПочта] Цикл
					НоваяСтрока = КонтейнерРеквизитов[ПрефиксРеквизитов + ПрефиксКонтактов + ПостфиксЭлПочта].Добавить();
					НоваяСтрока.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


Процедура ЗаполнитьРеквизитыВалюты(Валюта, ПрефиксРеквизитов, КонтейнерРеквизитов) Экспорт
	
	РеквизитыВалюты = ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(Валюта, "Код, НаименованиеПолное");
	
	ИмяКодВалюты = СтрЗаменить(ПрефиксРеквизитов, "Валюта", "КодВалюты");
	ИмяНаименованиеВалюты = СтрЗаменить(ПрефиксРеквизитов, "Валюта", "НаименованиеВалюты");
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
		КонтейнерРеквизитов.Вставить(ИмяКодВалюты, РеквизитыВалюты.Код);
		КонтейнерРеквизитов.Вставить(ИмяНаименованиеВалюты, РеквизитыВалюты.НаименованиеПолное);
	Иначе
		КонтейнерРеквизитов[ИмяКодВалюты] = РеквизитыВалюты.Код;			
		КонтейнерРеквизитов[ИмяНаименованиеВалюты] = РеквизитыВалюты.НаименованиеПолное;
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьРеквизитыКлассификатораДОПОГ(ЗначениеКлассификатора, ПрефиксРеквизитов, КонтейнерРеквизитов) Экспорт

	РеквизитыКлассификатора = ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(ЗначениеКлассификатора, 
													"Класс, КлассификационныйКод, КодОграниченияПроездаЧерезТуннели, 
													|НаименованиеИНаписание, Код, ГруппаУпаковки, ЗнакОпасности");
								
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
		КонтейнерРеквизитов.Вставить("Класс", РеквизитыКлассификатора.Класс);
		КонтейнерРеквизитов.Вставить("КлассификационныйКод", РеквизитыКлассификатора.КлассификационныйКод);
		КонтейнерРеквизитов.Вставить("КодОграниченияПроездаЧерезТуннели", РеквизитыКлассификатора.КодОграниченияПроездаЧерезТуннели);
		КонтейнерРеквизитов.Вставить("НадлежащееОтгрузочноеНаименование", РеквизитыКлассификатора.НаименованиеИНаписание);
		КонтейнерРеквизитов.Вставить("НомерООН", РеквизитыКлассификатора.Код);
		КонтейнерРеквизитов.Вставить("ГруппаУпаковки", РеквизитыКлассификатора.ГруппаУпаковки);
		КонтейнерРеквизитов.Вставить("ЗнакОпасности", РеквизитыКлассификатора.ЗнакОпасности);
	Иначе					
		КонтейнерРеквизитов["Класс"] = РеквизитыКлассификатора.Класс;
		КонтейнерРеквизитов["КлассификационныйКод"] = РеквизитыКлассификатора.КлассификационныйКод;
		КонтейнерРеквизитов["КодОграниченияПроездаЧерезТуннели"] = РеквизитыКлассификатора.КодОграниченияПроездаЧерезТуннели;
		КонтейнерРеквизитов["НадлежащееОтгрузочноеНаименование"] = РеквизитыКлассификатора.НаименованиеИНаписание;
		КонтейнерРеквизитов["НомерООН"] = РеквизитыКлассификатора.Код;
		КонтейнерРеквизитов["ГруппаУпаковки"] = РеквизитыКлассификатора.ГруппаУпаковки;
		КонтейнерРеквизитов["ЗнакОпасности"] = РеквизитыКлассификатора.ЗнакОпасности;
	КонецЕсли;

КонецПроцедуры


Процедура ЗаполнитьРеквизитыБанковскогоСчета(БанковскийСчет, ПрефиксРеквизитов, КонтейнерРеквизитов) Экспорт

	РеквизитыБанковскогоСчета = ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(БанковскийСчет, "НомерСчета, Банк.Код, Банк.КоррСчет, Банк.Наименование");
	
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
		КонтейнерРеквизитов.Вставить(ПрефиксРеквизитов + "НомерБанковскогоСчета", РеквизитыБанковскогоСчета.НомерСчета);
		КонтейнерРеквизитов.Вставить(ПрефиксРеквизитов + "БИК", РеквизитыБанковскогоСчета.БанкКод);
		КонтейнерРеквизитов.Вставить(ПрефиксРеквизитов + "КорреспондентскийСчет", РеквизитыБанковскогоСчета.БанкКоррСчет);
		КонтейнерРеквизитов.Вставить(ПрефиксРеквизитов + "НаименованиеБанка", РеквизитыБанковскогоСчета.БанкНаименование);
	Иначе
		КонтейнерРеквизитов[ПрефиксРеквизитов + "НомерБанковскогоСчета"] = РеквизитыБанковскогоСчета.НомерСчета;
		КонтейнерРеквизитов[ПрефиксРеквизитов + "БИК"] = РеквизитыБанковскогоСчета.БанкКод;
		КонтейнерРеквизитов[ПрефиксРеквизитов + "КорреспондентскийСчет"] = РеквизитыБанковскогоСчета.БанкКоррСчет;
		КонтейнерРеквизитов[ПрефиксРеквизитов + "НаименованиеБанка"] = РеквизитыБанковскогоСчета.БанкНаименование;
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьРеквизитыАдреса(Форма, Результат, ИмяЭлемента, ТекущиеДанные = Неопределено) Экспорт
	
	Префикс = СтрЗаменить(ИмяЭлемента, "Представление", "");
	
	КонтейнерРеквизитов = ПолучитьКонтейнерРеквизитов(Форма, ИмяЭлемента, ТекущиеДанные);
	
	Если ТекущиеДанные = Неопределено Тогда
		Форма[ИмяЭлемента] = Результат.Представление;
	Иначе
		ТекущиеДанные[ИмяЭлемента] = Результат.Представление;	
	КонецЕсли;
	
	РезультатЗначение = ?(Результат.Свойство("Значение"), Результат.Значение, Результат.Адрес);	
	
	ДополнительныеПараметры = Новый Структура("БезПредставлений, ПроверитьАдрес, КодыАдреса", Ложь, Истина, Истина);
	СтруктураАдреса = ОбменСГИСЭПДВызовСервера.СведенияОбАдресе(РезультатЗначение, ДополнительныеПараметры);
	
	СтруктураВерсииТитула = Неопределено;
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
		СтруктураВерсииТитула = КонтейнерРеквизитов.СтруктураРеквизитовЗаполнение[КонтейнерРеквизитов.ПрефиксТитула][КонтейнерРеквизитов.НомерВерсии];
		ОчиститьАдрес(СтруктураВерсииТитула, Префикс);
	Иначе
		ОчиститьАдрес(КонтейнерРеквизитов, Префикс);
	КонецЕсли;
	
	Если КонтейнерРеквизитов <> Неопределено Тогда
		Если СтруктураАдреса.ТипАдреса = "ВСвободнойФорме" Тогда
			Если СтруктураВерсииТитула <> Неопределено Тогда
				СтруктураВерсииТитула.Вставить(Префикс + "Представление", СтруктураАдреса.Представление);
				СтруктураВерсииТитула.Вставить(Префикс + "КодСтраны", СтруктураАдреса.КодСтраны);	
			Иначе
				КонтейнерРеквизитов[Префикс + "Представление"] = СтруктураАдреса.Представление;
				КонтейнерРеквизитов[Префикс + "КодСтраны"] = СтруктураАдреса.КодСтраны;
			КонецЕсли;
		Иначе	
			Если СтруктураВерсииТитула <> Неопределено Тогда
				СтруктураВерсииТитула.Вставить(Префикс + "Индекс", СтруктураАдреса.Индекс);
				СтруктураВерсииТитула.Вставить(Префикс + "КодРегиона", СтруктураАдреса.КодРегиона);
				СтруктураВерсииТитула.Вставить(Префикс + "Город", СтруктураАдреса.Город + ?(СтруктураАдреса.ГородТипКраткий = "", "", " ") + СтруктураАдреса.ГородТипКраткий);
				СтруктураВерсииТитула.Вставить(Префикс + "Район", СтруктураАдреса.Район + ?(СтруктураАдреса.РайонТипКраткий = "", "", " ") + СтруктураАдреса.РайонТипКраткий);
				СтруктураВерсииТитула.Вставить(Префикс + "НаселенныйПункт", СтруктураАдреса.НаселенныйПункт + ?(СтруктураАдреса.НаселенныйПунктТипКраткий = "", "", " ") + СтруктураАдреса.НаселенныйПунктТипКраткий);
				СтруктураВерсииТитула.Вставить(Префикс + "Улица", СтруктураАдреса.Улица + ?(СтруктураАдреса.УлицаТипКраткий = "", "", " ") + СтруктураАдреса.УлицаТипКраткий);
				СтруктураВерсииТитула.Вставить(Префикс + "Дом", СтруктураАдреса.Здание.Номер);
				Если СтруктураАдреса.Корпуса.Количество() > 0 Тогда
					СтруктураВерсииТитула.Вставить(Префикс + "Корпус", СтруктураАдреса.Корпуса[0].Номер);
				КонецЕсли;	
				ПоказатьОшибкиПоАдресу(Форма, СтруктураВерсииТитула, Префикс, ИмяЭлемента);
			Иначе
				КонтейнерРеквизитов[Префикс + "Индекс"] = СтруктураАдреса.Индекс;
				КонтейнерРеквизитов[Префикс + "КодРегиона"] = СтруктураАдреса.КодРегиона;
				КонтейнерРеквизитов[Префикс + "Город"] = СтруктураАдреса.Город + ?(СтруктураАдреса.ГородТипКраткий = "", "", " ") + СтруктураАдреса.ГородТипКраткий;
				КонтейнерРеквизитов[Префикс + "Район"] = СтруктураАдреса.Район + ?(СтруктураАдреса.РайонТипКраткий = "", "", " ") + СтруктураАдреса.РайонТипКраткий;
				КонтейнерРеквизитов[Префикс + "НаселенныйПункт"] = СтруктураАдреса.НаселенныйПункт + ?(СтруктураАдреса.НаселенныйПунктТипКраткий = "", "", " ") + СтруктураАдреса.НаселенныйПунктТипКраткий;
				КонтейнерРеквизитов[Префикс + "Улица"] = СтруктураАдреса.Улица + ?(СтруктураАдреса.УлицаТипКраткий = "", "", " ") + СтруктураАдреса.УлицаТипКраткий;
				КонтейнерРеквизитов[Префикс + "Дом"] = СтруктураАдреса.Здание.Номер;
				Если СтруктураАдреса.Корпуса.Количество() > 0 Тогда
					КонтейнерРеквизитов[Префикс + "Корпус"] = СтруктураАдреса.Корпуса[0].Номер;
				КонецЕсли;
				ПоказатьОшибкиПоАдресу(Форма, КонтейнерРеквизитов, Префикс, ИмяЭлемента);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
		Форма.СтруктураРеквизитов = СкопироватьВФиксированноеЗначенияРекурсивно(КонтейнерРеквизитов.СтруктураРеквизитовЗаполнение);
	КонецЕсли;
	
	Форма.Модифицированность = Истина;	
	
КонецПроцедуры

#КонецОбласти


Процедура ОчиститьАдрес(КонтейнерРеквизитов, Префикс)
	
	Если КонтейнерРеквизитов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
		КонтейнерРеквизитов.Удалить(Префикс + "Индекс");	
		КонтейнерРеквизитов.Удалить(Префикс + "КодРегиона");
		КонтейнерРеквизитов.Удалить(Префикс + "Город");
		КонтейнерРеквизитов.Удалить(Префикс + "Район");
		КонтейнерРеквизитов.Удалить(Префикс + "НаселенныйПункт");
		КонтейнерРеквизитов.Удалить(Префикс + "Улица");
		КонтейнерРеквизитов.Удалить(Префикс + "Дом");
		КонтейнерРеквизитов.Удалить(Префикс + "Корпус");
	Иначе
		КонтейнерРеквизитов[Префикс + "Индекс"] = Неопределено;
		КонтейнерРеквизитов[Префикс + "КодРегиона"] = Неопределено;
		КонтейнерРеквизитов[Префикс + "Город"] = Неопределено;
		КонтейнерРеквизитов[Префикс + "Район"] = Неопределено;
		КонтейнерРеквизитов[Префикс + "НаселенныйПункт"] = Неопределено;
		КонтейнерРеквизитов[Префикс + "Улица"] = Неопределено;
		КонтейнерРеквизитов[Префикс + "Дом"] = Неопределено;
		КонтейнерРеквизитов[Префикс + "Корпус"] = Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("ФормаКлиентскогоПриложения") Тогда
		СтруктураРеквизитов = Новый Структура(КонтейнерРеквизитов.ОписаниеРеквизитовФормы.ПараметрыФормы);
		ЕстьПредставление = СтруктураРеквизитов.Свойство(Префикс + "Представление");
	Иначе
		ЕстьПредставление = КонтейнерРеквизитов.Свойство(Префикс + "Представление");
	КонецЕсли;
	
	Если ЕстьПредставление Тогда
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			КонтейнерРеквизитов.Удалить(Префикс + "Представление");	
			КонтейнерРеквизитов.Удалить(Префикс + "КодСтраны");	
		Иначе
			КонтейнерРеквизитов[Префикс + "Представление"] = Неопределено;
			КонтейнерРеквизитов[Префикс + "КодСтраны"] = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьТипОрганизация() Экспорт
	
	Результат = Неопределено;
	
	#Если Сервер Тогда
		Результат = ОбменСГИСЭПДСерверПовтИсп.ПолучитьТипОрганизация();
	#Иначе
		Результат = ОбменСГИСЭПДВызовСервера.ПолучитьТипОрганизация();
	#КонецЕсли
	
	Возврат Результат;
	
КонецФункции


Функция ПолучитьТипКонтрагент() Экспорт
	
	Результат = Неопределено;
	
	#Если Сервер Тогда
		Результат = ОбменСГИСЭПДСерверПовтИсп.ПолучитьТипКонтрагент();
	#Иначе
		Результат = ОбменСГИСЭПДВызовСервера.ПолучитьТипКонтрагент();
	#КонецЕсли
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьКонтрагентовДляФормы(КонтейнерРеквизитов, Форма) Экспорт
	
	// В первом уровне форм уже должны быть определены контрагенты, передаем их в следующий уровень
	Если ТипЗнч(КонтейнерРеквизитов) = Тип("ФормаКлиентскогоПриложения") Тогда
		СписокКонтрагентов = Неопределено;
		Если Форма.Параметры.Свойство("КонтрагентыДокумента", СписокКонтрагентов) = Ложь Тогда
			СписокКонтрагентов = Неопределено;
		КонецЕсли;
		Результат = СписокКонтрагентов;
	Иначе
		ТипКонтрагент = ПолучитьТипКонтрагент();
		Результат = Новый СписокЗначений;
		МассивВозможныхКонтрагентов = Новый Массив;
		Если ТипЗнч(КонтейнерРеквизитов.Ссылка) = Тип("ДокументСсылка.ЭлектроннаяТранспортнаяНакладная") Тогда
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулГрузоотправителяСоставитель");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулГрузоотправителяГрузоотправитель");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулГрузоотправителяПеревозчик");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулГрузоотправителяГрузополучатель");	
		ИначеЕсли ТипЗнч(КонтейнерРеквизитов.Ссылка) = Тип("ДокументСсылка.ЭлектроннаяСопроводительнаяВедомость") Тогда
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулПеревозчикаГрузоотправитель");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулПеревозчикаГрузополучатель");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулПеревозчикаПеревозчик");
		ИначеЕсли ТипЗнч(КонтейнерРеквизитов.Ссылка) = Тип("ДокументСсылка.ЭлектронныйДоговорФрахтования") Тогда
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулФрахтователяФрахтователь");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулФрахтователяСоставитель");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулФрахтователяФрахтовщик");
		ИначеЕсли ТипЗнч(КонтейнерРеквизитов.Ссылка) = Тип("ДокументСсылка.ЭлектронныйЗаказЗаявка") Тогда
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулГрузоотправителяГрузоотправитель");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулГрузоотправителяСоставитель");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулГрузоотправителяПеревозчик");
		ИначеЕсли ТипЗнч(КонтейнерРеквизитов.Ссылка) = Тип("ДокументСсылка.ЭлектронныйЗаказНаряд") Тогда
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулФрахтователяФрахтователь");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулФрахтователяФрахтовщик");
		ИначеЕсли ТипЗнч(КонтейнерРеквизитов.Ссылка) = Тип("ДокументСсылка.ЭлектронныйПутевойЛист") Тогда
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулОформлениеОформитель");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулОформлениеМедорганизация");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулОформлениеТехконтроль");
			МассивВозможныхКонтрагентов.Добавить("СсылкаТитулОформлениеПоказанияОдометра");
		КонецЕсли;
		
		Для Каждого ИмяРеквизита Из МассивВозможныхКонтрагентов Цикл
			ЗначениеРеквизита = КонтейнерРеквизитов[ИмяРеквизита];
			Если ТипЗнч(ЗначениеРеквизита) = ТипКонтрагент 
				И ЗначениеЗаполнено(ЗначениеРеквизита)
				И Результат.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда
				Результат.Добавить(ЗначениеРеквизита);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьРеквизитыПоСсылке(Элемент, Форма, ТекущиеДанные = Неопределено, ПрефиксТитула = Неопределено) Экспорт
	
	ГруппаДанных = СтрЗаменить(Элемент.Имя, "Ссылка", "");
	
	Если ТекущиеДанные = Неопределено Тогда
		Если Форма.ОписаниеРеквизитовФормы = Неопределено Тогда
			#Если Сервер Или ВнешнееСоединение Тогда
				Форма.ОписаниеРеквизитовФормы = ОбменСГИСЭПД.ОписаниеРеквизитовФормы(Форма);	
			#Иначе
				Форма.ОписаниеРеквизитовФормы = ОбменСГИСЭПДКлиентПовтИсп.РеквизитыПодчиненнойФормы(Форма.ИмяФормы);
			#КонецЕсли
		КонецЕсли;
		СтруктураРеквизитовФормы = Новый Структура(Форма.ОписаниеРеквизитовФормы.ПараметрыФормы);
		Если Форма.ОписаниеРеквизитовФормы.ЕстьОбъект = Истина Тогда
			СтруктураРеквизитовОбъекта = Новый Структура(Форма.ОписаниеРеквизитовФормы.РеквизитыОбъекта);
		КонецЕсли;
		Если СтруктураРеквизитовФормы.Свойство(Элемент.Имя) Тогда
			ЗначениеРеквизита = Форма[Элемент.Имя];		
		ИначеЕсли Форма.ОписаниеРеквизитовФормы.ЕстьОбъект = Истина И СтруктураРеквизитовОбъекта.Свойство(Элемент.Имя) Тогда
			ЗначениеРеквизита = Форма.Объект[Элемент.Имя];		
		КонецЕсли;
	Иначе
		ЗначениеРеквизита = ТекущиеДанные[Элемент.Имя];
	КонецЕсли;
	
	КонтейнерРеквизитовИлиОписание = ПолучитьКонтейнерРеквизитов(Форма, Элемент.Имя, ТекущиеДанные);
	
	Если ТипЗнч(КонтейнерРеквизитовИлиОписание) = Тип("Структура") Тогда
		КонтейнерРеквизитов = КонтейнерРеквизитовИлиОписание.СтруктураРеквизитовЗаполнение[КонтейнерРеквизитовИлиОписание.ПрефиксТитула][КонтейнерРеквизитовИлиОписание.НомерВерсии];
		Если ПрефиксТитула = Неопределено Тогда
			ПрефиксТитула = КонтейнерРеквизитовИлиОписание.ПрефиксТитула;
		КонецЕсли;
	Иначе
		КонтейнерРеквизитов = КонтейнерРеквизитовИлиОписание;
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеРеквизита) = ПолучитьТипОрганизация()
		Или ТипЗнч(ЗначениеРеквизита) = ПолучитьТипКонтрагент() Тогда
		ПрефиксРеквизитов = ГруппаДанных;
		ЗаполнитьРеквизитыУчастника(ЗначениеРеквизита, ПрефиксРеквизитов, КонтейнерРеквизитов, Форма, ПрефиксТитула);
	ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип("СправочникСсылка.Валюты") Тогда
		ПрефиксРеквизитов = ГруппаДанных;
		ЗаполнитьРеквизитыВалюты(ЗначениеРеквизита, ПрефиксРеквизитов, КонтейнерРеквизитов);
	ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип(ОбменСГИСЭПДВызовСервера.ИмяТипаБанковскиеСчетаОрганизации()) Тогда
		ЗаполнитьРеквизитыБанковскогоСчета(ЗначениеРеквизита, ГруппаДанных, КонтейнерРеквизитов);
	ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип("СправочникСсылка.КлассификаторДОПОГЭПД") Тогда
		ПрефиксРеквизитов = ГруппаДанных;
		ЗаполнитьРеквизитыКлассификатораДОПОГ(ЗначениеРеквизита, ПрефиксРеквизитов, КонтейнерРеквизитов);
	ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ЗаполнитьРеквизитыФизическогоЛица(ЗначениеРеквизита, ГруппаДанных, КонтейнерРеквизитов, Форма.Объект.Организация);
	КонецЕсли;
	
	Если ТипЗнч(КонтейнерРеквизитовИлиОписание) = Тип("Структура") Тогда
		Форма.СтруктураРеквизитов = СкопироватьВФиксированноеЗначенияРекурсивно(КонтейнерРеквизитовИлиОписание.СтруктураРеквизитовЗаполнение);
	КонецЕсли;

	Если ГруппаДанных = "ТитулГрузоотправителяГрузоотправитель"
		Или ГруппаДанных = "ТитулГрузоотправителяСоставитель"
		Или ГруппаДанных = "ТитулГрузоотправителяПеревозчик"
		Или ГруппаДанных = "ТитулГрузоотправителяГрузополучатель"
		Или ГруппаДанных = "ТитулФрахтователяФрахтователь"
		Или ГруппаДанных = "ТитулФрахтователяФрахтовщик"
		Или ГруппаДанных = "ТитулПеревозчикаГрузоотправитель"
		Или ГруппаДанных = "ТитулПеревозчикаГрузополучатель"
		Или ГруппаДанных = "ТитулПеревозчикаПеревозчик" Тогда
		Форма.ИзмененСоставУчастников = Истина;
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеРеквизита) = ПолучитьТипОрганизация()
		Или ТипЗнч(ЗначениеРеквизита) = ПолучитьТипКонтрагент()  Тогда
		ПоказатьОшибкиПоКонтрагенту(Форма, Элемент, ЗначениеРеквизита);		
	КонецЕсли;
		
КонецПроцедуры


Функция ОкруглениеДатыПриИзменении(Знач Дата) Экспорт
	
	#Если Сервер Или ВнешнееСоединение Тогда
		ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	#ИначеЕсли Клиент Тогда
		ТекущаяДатаСеанса = ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли
	
	Если НачалоДня(Дата) = НачалоДня(ТекущаяДатаСеанса) Тогда
		Дата = ОкруглитьВремя(ТекущаяДатаСеанса, ШагОкругленияВремени());		
	КонецЕсли;
	
	Возврат Дата;
	
КонецФункции

Процедура ОкруглениеДатыПриРегулировании(Дата, Направление, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Дата) = Ложь Тогда
		#Если Сервер Или ВнешнееСоединение Тогда
			ТекущаяДатаСеанса = ТекущаяДатаСеанса();
		#ИначеЕсли Клиент Тогда
			ТекущаяДатаСеанса = ОбщегоНазначенияКлиент.ДатаСеанса();
		#КонецЕсли
		Дата = ОкруглитьВремя(ТекущаяДатаСеанса, ШагОкругленияВремени() + ?(Направление > 0, 1, 0));	
	КонецЕсли;
	
	Дата = Дата + Направление * ШагОкругленияВремени();
	
КонецПроцедуры


Функция ОкруглитьВремя(ДатаИВремя, ШагОкругления = 0, ТолькоПрошедшеееВремя = Истина)
	
    Если ШагОкругления = 0 Или ШагОкругления > 60 * 60 Тогда
        ШагОкругления = 60 * 60;
    КонецЕсли;
    
    Разница = ДатаИВремя - НачалоЧаса(ДатаИВремя);
    
    Пока Разница >= ШагОкругления Цикл 
        Разница = Разница - ШагОкругления;
    КонецЦикла;
    
	Если ТолькоПрошедшеееВремя = Ложь И Разница / ШагОкругления >= 0.5 Тогда 
	    Результат = ДатаИВремя + ШагОкругления - Разница;        
	Иначе 
        Результат = ДатаИВремя - Разница;
    КонецЕсли;
         
    Возврат Результат;
	
КонецФункции 

Функция ШагОкругленияВремени()
	
	Возврат 30 * 60;
	
КонецФункции



#Область ХранимыеДанные

Функция ГруппыХранимыхДанных(Знач ИмяОбъекта) Экспорт
	
	МассивЧастейИмениФормы = СтрРазделить(ИмяОбъекта, ".");	
	ИмяОбъектаДляФормы = МассивЧастейИмениФормы[0] + "." + МассивЧастейИмениФормы[1];
	
	Результат = Новый Структура;
	
	Результат.Вставить("Прицеп");
	Результат.Вставить("СторонаПодписавшаяДокумент");
	Результат.Вставить("Груз");
	Результат.Вставить("Водитель");	
	Результат.Вставить("Контейнер");
	
	Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная" Тогда
		Результат.Вставить("ТитулГрузоотправителяТранспортноеСредство");
	КонецЕсли;
	
	Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказЗаявка" Тогда
		Результат.Вставить("ТитулГрузоотправителяПараметрыТранспортногоСредства");
	КонецЕсли;
	
	Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная" Тогда
		Результат.Вставить("ТитулГрузоотправителяИнойГрузоотправитель");
		Результат.Вставить("НовыйВодитель");
		Результат.Вставить("ТитулПеревозчикаЗаменыТранспортноеСредство");
	КонецЕсли;
	
	Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказЗаявка"
		Или ИмяОбъектаДляФормы = "Документ.ЭлектроннаяСопроводительнаяВедомость" Тогда
		Результат.Вставить("ТитулПеревозчикаТранспортноеСредство");	
		Результат.Вставить("ТитулПеревозчикаПрицеп");
	КонецЕсли;
	
	Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказНаряд" Тогда
		Результат.Вставить("ТитулФрахтователяПараметрыТранспортногоСредства");
		Результат.Вставить("ТитулФрахтовщикаТранспортноеСредство");	
	КонецЕсли;
	
	Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйПутевойЛист" Тогда
		Результат.Вставить("ТитулОформлениеТранспортноеСредство");
		Результат.Вставить("ТитулМедосмотрВодитель");
		Результат.Вставить("ТитулМедосмотрПослеВодитель");
		Результат.Вставить("ТитулМедосмотрВодитель");
		Результат.Вставить("ТитулМедосмотрШтатныйМедработник");
		Результат.Вставить("ТитулМедосмотрПослеШтатныйМедработник");
		Результат.Вставить("ТитулМедосмотрСтороннийМедработник");
		Результат.Вставить("ТитулМедосмотрПослеСтороннийМедработник");
		Результат.Вставить("ТитулВыпускТранспортноеСредство");
		Результат.Вставить("ТитулВыпускОтветственныйЗаСостояниеТС");
		Результат.Вставить("ТитулВыездУполномоченныйНаПроставлениеДанных");
		Результат.Вставить("ТитулЗаездУполномоченныйНаПроставлениеДанных");
	КонецЕсли;
	
	Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйДоговорФрахтования" Тогда
		Результат.Вставить("СведенияОПутевомЛисте");
		Результат.Вставить("ТранспортноеСредство");
	КонецЕсли;
	
	Для Каждого КиЗ Из Результат Цикл
		Результат.Вставить(КиЗ.Ключ, ОписаниеГруппыДанных(КиЗ.Ключ, ИмяОбъекта));
	КонецЦикла;
	
	Возврат Результат;
		
КонецФункции


Функция ОписаниеГруппыДанных(Знач ГруппаДанных, Знач ИмяОбъекта) Экспорт
	
	Результат = Новый Структура("Заголовок, Тип, ИмяФормы");
	Результат.Вставить("ЕстьХранимыеДанные");
	
	ИмяОбъектаДляФормы = "";
	Если ИмяОбъекта <> Неопределено Тогда		
		МассивЧастейИмениФормы = СтрРазделить(ИмяОбъекта, ".");	
		ИмяОбъектаДляФормы = МассивЧастейИмениФормы[0] + "." + МассивЧастейИмениФормы[1]; //"Документ.ЭлектроннаяТранспортнаяНакладная";
		Если ГруппаДанных = "" Тогда
			ГруппаДанных = МассивЧастейИмениФормы[МассивЧастейИмениФормы.ВГраница()];
		КонецЕсли;
	КонецЕсли;
	
	Результат.Вставить("ИмяОбъекта", ИмяОбъектаДляФормы);
	
	ЭтоДоп = Ложь;
	Если СтрНачинаетсяС(ГруппаДанных, "ДопТитул") Тогда
		ГруппаДанных = Сред(ГруппаДанных, 4);
		ЭтоДоп = Истина;
	КонецЕсли;
	
	Результат.ЕстьХранимыеДанные = Ложь;
	СписокРеквизитов = "";
	СписокТаблиц = "";
	
	ГруппыТС = Новый Массив;
	// ЭТрН
	ГруппыТС.Добавить("ТитулГрузоотправителяТранспортноеСредство");
	ГруппыТС.Добавить("ТитулПеревозчикаТранспортноеСредство");
	ГруппыТС.Добавить("ТитулПеревозчикаЗаменыТранспортноеСредство");
	// ЭПЛ
	ГруппыТС.Добавить("ТитулОформлениеТранспортноеСредство");
	ГруппыТС.Добавить("ТитулВыпускТранспортноеСредство");
	// ЭЗН 
	ГруппыТС.Добавить("ТитулФрахтовщикаТранспортноеСредство");
	
	ГруппыПараметрыТС = Новый Массив;
	// ЭЗЗ
	ГруппыПараметрыТС.Добавить("ТитулГрузоотправителяПараметрыТранспортногоСредства");
	// ЭЗН
	ГруппыПараметрыТС.Добавить("ТитулФрахтователяПараметрыТранспортногоСредства");
	
	ГруппыПрицепы = Новый Массив;
	ГруппыПрицепы.Добавить("ТитулПеревозчикаПрицеп");
	
	ГруппыВодитель = Новый Массив;
	// ЭПЛ
	ГруппыВодитель.Добавить("ТитулМедосмотрВодитель");
	ГруппыВодитель.Добавить("ТитулМедосмотрПослеВодитель");
	
	ГруппыШтатныйМедработник = Новый Массив;
	// ЭПЛ
	ГруппыШтатныйМедработник.Добавить("ТитулМедосмотрШтатныйМедработник");
	ГруппыШтатныйМедработник.Добавить("ТитулМедосмотрПослеШтатныйМедработник");
	
	ГруппыСтороннийМедработник = Новый Массив;
	// ЭПЛ
	ГруппыСтороннийМедработник.Добавить("ТитулМедосмотрСтороннийМедработник");
	ГруппыСтороннийМедработник.Добавить("ТитулМедосмотрПослеСтороннийМедработник");	
	
	ГруппыКонтрольТС = Новый Массив;
	// ЭПЛ
	ГруппыКонтрольТС.Добавить("ТитулВыпускОтветственныйЗаСостояниеТС");
	
	ГруппыОдометр = Новый Массив;
	// ЭПЛ
	ГруппыОдометр.Добавить("ТитулВыездУполномоченныйНаПроставлениеДанных");
	ГруппыОдометр.Добавить("ТитулЗаездУполномоченныйНаПроставлениеДанных");
	
	ВсеГруппы = Новый Массив;
	Если ГруппаДанных = "ТранспортноеСредство"
		Или ГруппаДанных = "ТранспортноеСредствоЭПЛ" 
		Или ГруппыТС.Найти(ГруппаДанных) <> Неопределено Тогда
		Результат.Заголовок = "Транспортные средства";	
		Результат.Тип = "ТранспортноеСредство";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма." + Результат.Тип;
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокРеквизитов = "Марка,
							|РегистрационныйНомер,
							|Тип";
		Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйПутевойЛист" Тогда
			СписокРеквизитов = СписокРеквизитов + ",
							|Модель,
							|ИнвентарныйНомер";
		ИначеЕсли ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная" Тогда
			СписокРеквизитов = СписокРеквизитов + ",
							|VIN,
							|Вместимость,
							|Грузоподъемность,
							|НомерСТС,
							|ТипВладения";
		ИначеЕсли ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказНаряд" Тогда
			СписокРеквизитов = СписокРеквизитов + ",
							|Вместимость,
							|Грузоподъемность";
		ИначеЕсли ИмяОбъектаДляФормы = "Документ.ЭлектронныйДоговорФрахтования" Тогда
			СписокРеквизитов = СписокРеквизитов + ",
							|Вместимость,
							|Грузоподъемность";
		КонецЕсли;
		
		Если ГруппаДанных = "ТитулПеревозчикаЗаменыТранспортноеСредство"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулПеревозчикаЗаменыТранспортныеСредства";
		КонецЕсли;
		
		Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйДоговорФрахтования"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулФрахтовщикаСведенияОТранспортномСредстве";
		КонецЕсли;	
		СписокТаблиц = ?(СписокТаблиц = "", "", "," + СписокТаблиц);
		ВсеГруппы = ГруппыТС;
	ИначеЕсли ГруппаДанных = "ПараметрыТранспортногоСредства" Или ГруппыПараметрыТС.Найти(ГруппаДанных) <> Неопределено Тогда
		Результат.Заголовок = "Параметры транспортных средств";	
		Результат.Тип = "ПараметрыТранспортногоСредства";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма." + Результат.Тип;
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокРеквизитов = "Тип,
							|Грузоподъемность,
							|Вместимость";
		Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказНаряд" Тогда
			СписокРеквизитов = СписокРеквизитов + ",
							|Марка";
		ИначеЕсли ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказЗаявка" Тогда	
			СписокРеквизитов = СписокРеквизитов + ",
							|ТипКузова,
							|ТипПогрузки,
							|ИныеПараметры";
		КонецЕсли;
		СписокТаблиц = ?(СписокТаблиц = "", "", "," + СписокТаблиц);
		ВсеГруппы = ГруппыПараметрыТС;
	ИначеЕсли ГруппаДанных = "Прицеп" Или ГруппыПрицепы.Найти(ГруппаДанных) <> Неопределено Тогда	
		Результат.Заголовок = "Прицепы";	
		Результат.Тип = "Прицеп";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма." + Результат.Тип;
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
						
		СписокРеквизитов = "Вместимость,
							|Грузоподъемность,
							|Марка,
							|НомерСТС,
							|РегистрационныйНомер,
							|Тип,
							|ТипВладения";
		Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяСопроводительнаяВедомость" Тогда
			СписокРеквизитов = СписокРеквизитов + ",
							|VIN";	
		КонецЕсли;
		
		Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказЗаявка" 
			Или ИмяОбъектаДляФормы = "Документ.ЭлектроннаяСопроводительнаяВедомость"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулПеревозчикаПрицепы";
		КонецЕсли;
		
		Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулГрузоотправителяПрицепы,
							|ТитулПеревозчикаЗаменыПрицепы,
							|ДопТитулПеревозчикаЗаменыПрицепы";
		КонецЕсли;
		СписокТаблиц = ?(СписокТаблиц = "", "", "," + СписокТаблиц);
		ВсеГруппы = ГруппыПрицепы;
	ИначеЕсли ГруппаДанных = "СторонаПодписавшаяДокумент" Тогда
		Результат.Заголовок = "Стороны, подписавшие документ";	
		Результат.Тип = "СторонаПодписавшаяДокумент";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма." + ГруппаДанных;
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная"
		Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
						  |") + "ТитулГрузоотправителяРеквизитыСторонОснованияРасчетовИнымЛицом,
								|ТитулГрузоотправителяРеквизитыСторонДоговораНаПеревозкуГруза,
								|ТитулГрузоотправителяРеквизитыСторонСопроводительныхДокументов,
								|ТитулГрузоотправителяРеквизитыСторонСертификатовУдостоверений,
								|ТитулГрузоотправителяРеквизитыСторонДокументаПодтверждающегоОтгрузку,
								|ТитулГрузоотправителяРеквизитыСторонВедомостиНаКонтейнер,
								|ТитулГрузоотправителяДокументПолномочийПереадресовкиРеквизитыСторон,
								|ТитулГрузоотправителяПутевойЛистРеквизитыСторон,
								|ТитулГрузоотправителяОснованиеВладенияТСРеквизитыСторон,
								|ТитулГрузоотправителяОснованиеВладенияПрицепомРеквизитыСторон,
								|ТитулГрузоотправителяОснованиеОсуществленияПогрузкиРеквизитыСторон,
								|ТитулГрузоотправителяИныеОснованияПолномочийПогрузкиРеквизитыСторон,
								|ТитулГрузоотправителяОснованиеДоступаКПунктуПогрузкиРеквизитыСторон,
								|ТитулГрузоотправителяАктРеквизитыСторон,
								|ТитулГрузоотправителяАктВзвешиванияРеквизитыСторон,
								|ТитулПеревозчикаПриемкаАктРеквизитыСторон,
								|ТитулГрузополучателяДоверенностьПредставителяРеквизитыСторон,
								|ТитулГрузополучателяАктРеквизитыСторон,
								|ТитулГрузополучателяАктыВзвешивания,
								|ТитулПеревозчикаВыдачаАктРеквизитыСторон,
								|ТитулПереадресовкаОснованиеРеквизитыСторон,
								|ТитулПеревозчикаЗаменыДокументРеквизитыСторон,
								|ТитулПеревозчикаЗаменыВодительДокументПередачиГрузаРеквизитыСторон,
								|ТитулПеревозчикаЗаменыПутевойЛистРеквизитыСторон,
								|ТитулПеревозчикаЗаменыОснованиеВладенияТранспортнымСредствомРеквизитыСторон,
								|ТитулПеревозчикаЗаменыОснованиеВладенияПрицепомРеквизитыСторон,
								|ТитулПеревозчикаЗаменыТранспортныеСредстваДокументПередачиРеквизитыСторон,
								|ТитулПеревозчикаЗаменыАктРеквизитыСторон,
								|ТитулПеревозчикаФХЖДоверенностьРеквизитыСторон,
								|ТитулГрузоотправителяФХЖДоверенностьРеквизитыСторон,
								|ТитулГрузоотправителяФХЖОснованиеПлатежаРеквизитыСторон,
								|ДопТитулПеревозчикаВыдачаАктРеквизитыСторон,
								|ДопТитулПереадресовкаОснованиеРеквизитыСторон,
								|ДопТитулПеревозчикаЗаменыДокументРеквизитыСторон,
								|ДопТитулПеревозчикаЗаменыВодительДокументПередачиГрузаРеквизитыСторон,
								|ДопТитулПеревозчикаЗаменыПутевойЛистРеквизитыСторон,
								|ДопТитулПеревозчикаЗаменыОснованиеВладенияТранспортнымСредствомРеквизитыСторон,
								|ДопТитулПеревозчикаЗаменыОснованиеВладенияПрицепомРеквизитыСторон,
								|ДопТитулПеревозчикаЗаменыТранспортныеСредстваДокументПередачиРеквизитыСторон,
								|ДопТитулПеревозчикаЗаменыАктРеквизитыСторон,
								|ДопТитулГрузополучателяДоверенностьПредставителяРеквизитыСторон,
								|ДопТитулГрузополучателяАктРеквизитыСторон,
								|ДопТитулГрузополучателяАктыВзвешивания,
								|ДопТитулПеревозчикаВыдачаАктРеквизитыСторон";
		КонецЕсли;
		Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказНаряд"
		Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулФрахтователяСопроводительныеДокументыНаГрузРеквизитыСторон,
							|ТитулФрахтователяПрилагаемыеСертификатыПаспортаКачестваИДр,
							|ТитулФрахтователяСопроводительнаяВедомостьРеквизитыСторон,
							|ТитулФрахтовщикаКоммерческиеИИныеАктыРеквизитыСторон,
							|ТитулФрахтователяПодачаКоммерческиеИИныеАктыРеквизитыСторон,
							|ТитулФрахтователяПодачаАктыВзвешиванияРеквизитыСторон,
							|ТитулФрахтовщикаВозвратКоммерческиеИИныеАктыРеквизитыСторон,
							|ТитулФрахтовщикаВозвратАктыВзвешиванияРеквизитыСторон";
		КонецЕсли;
		Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяСопроводительнаяВедомость"
		Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулПеревозчикаОснованияВладенияТС,
							|ТитулПеревозчикаПрицепОснованиеВладенияРеквизитыСторон,
							|ДопТитулПеревозчикаОснованияВладенияТС,
							|ДопТитулПеревозчикаПрицепОснованиеВладенияРеквизитыСторон";
		КонецЕсли;
		Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказЗаявка"
		Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = ?(СписокТаблиц = "", "", ",
							|") + "ТитулГрузоотправителяДоверенностьРеквизитыСторон,
							|ТитулГрузоотправителяДоговорРеквизитыСторон,
							|ТитулГрузоотправителяРеквизитыСторонПодтвержденияПолномочий,
							|ТитулГрузоотправителяСтороныДоговораНаВыполнениеУслуг,
							|ТитулПеревозчикаДоверенностьРеквизитыСторон,
							|ТитулПеревозчикаСоставительДоверенностьРеквизитыСторон,
							|ТитулПеревозчикаОснованиеВладенияТСРеквизитыСторон,
							|ТитулПеревозчикаОснованиеВладенияПрицепомРеквизитыСторон";	
		КонецЕсли;
		СписокРеквизитов = "ИнострЛицоБезУчетаВидУдостоверения,
							|ИнострЛицоБезУчетаДатаУдостоверения,
							|ИнострЛицоБезУчетаИдентификатор,
							|ИнострЛицоБезУчетаИныеСведения,
							|ИнострЛицоБезУчетаНаименование,
							|ИнострЛицоБезУчетаНомерУдостоверения,
							|ИнострЛицоБезУчетаСтатусФЛ_ЮЛ,
							|ИнострЛицоБезУчетаСтрана,
							|ОрганВластиВыдавшийДокумент,
							|ФЛ_ИНН,
							|ЮЛ_ИНН";
	ИначеЕсли ГруппаДанных = "ТитулГрузоотправителяИнойГрузоотправитель" Тогда
		Результат.Заголовок = "Стороны, подписавшие документ";	
		Результат.Тип = "СторонаПодписавшаяДокумент";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма." + ГруппаДанных;
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокРеквизитов = "ТитулГрузоотправителяИнойГрузоотправительИнострЛицоБезУчетаДатаУдостоверения,
							|ТитулГрузоотправителяИнойГрузоотправительИнострЛицоБезУчетаИдентификатор,
							|ТитулГрузоотправителяИнойГрузоотправительИнострЛицоБезУчетаИныеСведения,
							|ТитулГрузоотправителяИнойГрузоотправительИнострЛицоБезУчетаНомерУдостоверения,
							|ТитулГрузоотправителяИнойГрузоотправительИнострЛицоБезУчетаСтрана,
							|ТитулГрузоотправителяИнойГрузоотправительИнострЛицоБезУчетаВидУдостоверения,
							|ТитулГрузоотправителяИнойГрузоотправительИнострЛицоБезУчетаНаименование,
							|ТитулГрузоотправителяИнойГрузоотправительОрганВластиВыдавшийДокумент,
							|ТитулГрузоотправителяИнойГрузоотправительФЛ_ИНН,
							|ТитулГрузоотправителяИнойГрузоотправительИнострЛицоБезУчетаСтатусФЛ_ЮЛ,
							|ТитулГрузоотправителяИнойГрузоотправительЮЛ_ИНН";
	ИначеЕсли ГруппаДанных = "Груз" Тогда
		Результат.Заголовок = "Грузы";	
		Результат.Тип = "Груз";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма." + ГруппаДанных;
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокРеквизитов = "ВидТары,
							|ОтгрузочноеНаименованиеГруза,
							|Плотность,
							|СпособУпаковки";
		Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная" Тогда
			СписокРеквизитов = СписокРеквизитов + "
							|ИмеетУчетВГИС,
							|КодТоварнойНоменклатуры,
							|СведенияГИСИнаяИнформацияОТоваре,
							|СведенияГИСНаименование,
							|СведенияГИСУчетнаяЕдиница";
		ИначеЕсли ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная" Тогда
			СписокРеквизитов = СписокРеквизитов + "
							|КодТоварнойНоменклатуры";
		ИначеЕсли ИмяОбъектаДляФормы = "Документ.ЭлектронныйДоговорФрахтования" Тогда
			СписокРеквизитов = СписокРеквизитов + "
							|КодТоварнойНоменклатуры";
		КонецЕсли;
							
		Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная"
		Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулГрузоотправителяГрузы";
		КонецЕсли;
		Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказНаряд"
		Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулФрахтователяОписаниеГруза";
		КонецЕсли;
		Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяСопроводительнаяВедомость"	
		Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулПеревозчикаОписаниеГруза,
							|ДопТитулПеревозчикаОписаниеГруза";
		КонецЕсли;
		Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйДоговорФрахтования"
		Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
			СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
							|") + "ТитулФрахтователяОписаниеГруза";
		КонецЕсли;
	ИначеЕсли ГруппаДанных = "Водитель"
		Или ГруппаДанных = "НовыйВодитель"
		Или ГруппыВодитель.Найти(ГруппаДанных) <> Неопределено Тогда
		Результат.Заголовок = "Водители";	
		Результат.Тип = "Водитель";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма." + Результат.Тип;
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		
		СписокРеквизитов = "Фамилия,
							|Имя,
							|Отчество,
							|СерияВУ,
							|НомерВУ,
							|ДатаВыдачиВУ,
							|ФЛ_ИНН";
		Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная"
		Или ИмяОбъектаДляФормы = "Документ.ЭлектроннаяСопроводительнаяВедомость"
		Или ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказНаряд" Тогда
			СписокРеквизитов = СписокРеквизитов + "
							|СпособИдентификацииПростойПодписи";	
		КонецЕсли;
		
		Если ГруппаДанных = "НовыйВодитель" Тогда
			Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная" Тогда
				СписокТаблиц = СписокТаблиц + "ТитулПеревозчикаЗаменыЗаменыВодителей";	
			КонецЕсли;	
		Иначе
			Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказЗаявка"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
				СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
								|") + "ТитулПеревозчикаВодители";	
			КонецЕсли;
			Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйДоговорФрахтования"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда 
				СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
								|") + "ТитулФрахтовщикаВодитель";
			КонецЕсли;
			Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйЗаказНаряд"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда 
				СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
								|") + "ТитулФрахтовщикаВодитель";
			КонецЕсли;
			Если ИмяОбъектаДляФормы = "Документ.ЭлектронныйПутевойЛист"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда 
				СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
								|") + "ТитулОформлениеВодители";
			КонецЕсли;
			Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяТранспортнаяНакладная"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
				СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
									|") + "ТитулГрузоотправителяВодители";
			КонецЕсли;
			Если ИмяОбъектаДляФормы = "Документ.ЭлектроннаяСопроводительнаяВедомость"
			Или ЗначениеЗаполнено(ИмяОбъектаДляФормы) = Ложь Тогда
				СписокТаблиц = СписокТаблиц + ?(СписокТаблиц = "", "", ",
								|") + "ТитулГрузоотправителяВодители";
			КонецЕсли;
		КонецЕсли;	
		СписокТаблиц = ?(СписокТаблиц = "", "", "," + СписокТаблиц);
		ВсеГруппы = ГруппыВодитель;
	ИначеЕсли ГруппаДанных = "Контейнер" Тогда
		Результат.Заголовок = "Контейнеры";	
		Результат.Тип = "Контейнер";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма." + Результат.Тип;
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокТаблиц = "ТитулПеревозчикаСведенияОКонтейнерах";
		СписокРеквизитов = "Грузоподъемность,
							|КодРазмеровИТипаКонтейнера,
							|КодСтраны,
							|МассаКонтейнера,
							|НаличиеТабличкиВозможностьРаботыПодПломбами";	
	ИначеЕсли ГруппаДанных = "ШтатныйМедработникЭПЛ"
		Или ГруппыШтатныйМедработник.Найти(ГруппаДанных) <> Неопределено Тогда
		Результат.Заголовок = "Штатный медицинский работник";	
		Результат.Тип = "ШтатныйМедработникЭПЛ";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма.ШтатныйМедработник";
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокРеквизитов = "Имя,
							|Фамилия,
							|Отчество,
							|Должность,
							|ЛицензияНомер,
							|ЛицензияСерия,
							|ЛицензияДатаВыдачи,
							|ЛицензияСрокОкончания";
		СписокТаблиц = ?(СписокТаблиц = "", "", "," + СписокТаблиц);
		ВсеГруппы = ГруппыШтатныйМедработник;
	ИначеЕсли ГруппаДанных = "СтороннийМедработникЭПЛ"
		Или ГруппыСтороннийМедработник.Найти(ГруппаДанных) <> Неопределено Тогда
		Результат.Заголовок = "Работник медицинской организации";	
		Результат.Тип = "СтороннийМедработникЭПЛ";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма.СтороннийМедработник";
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокРеквизитов = "Имя,
							|Фамилия,
							|Отчество,
							|МедорганизацияНаименование,
							|Должность,
							|ЛицензияНомер,
							|ЛицензияСерия,
							|ЛицензияДатаВыдачи,
							|ЛицензияСрокОкончания";
		СписокТаблиц = ?(СписокТаблиц = "", "", "," + СписокТаблиц);
		ВсеГруппы = ГруппыСтороннийМедработник;
	ИначеЕсли ГруппаДанных = "ОтветственныйЗаСостояниеТСЭПЛ"
		Или ГруппыКонтрольТС.Найти(ГруппаДанных) <> Неопределено Тогда
		Результат.Заголовок = "Ответственное лицо";	
		Результат.Тип = "ОтветственныйЗаСостояниеТСЭПЛ";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма.ТитулВыпускОтветственныйЗаСостояниеТС";
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокРеквизитов = "ТитулВыпускОтветственныйЗаСостояниеТСИмя,
							|ТитулВыпускОтветственныйЗаСостояниеТСФамилия,
							|ТитулВыпускОтветственныйЗаСостояниеТСОтчество,
							|ТитулВыпускОтветственныйЗаСостояниеТСДолжность";
		СписокТаблиц = ?(СписокТаблиц = "", "", "," + СписокТаблиц);
		ВсеГруппы = ГруппыКонтрольТС;
	ИначеЕсли ГруппаДанных = "УполномоченныйНаПроставлениеДанныхЭПЛ"
		Или ГруппыОдометр.Найти(ГруппаДанных) <> Неопределено Тогда
		Результат.Заголовок = "Уполномоченное лицо";	
		Результат.Тип = "УполномоченныйНаПроставлениеДанныхЭПЛ";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма.УполномоченныйНаПроставлениеДанных";
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокРеквизитов = "Имя,
							|Фамилия,
							|Отчество,
							|Должность";
		СписокТаблиц = ?(СписокТаблиц = "", "", "," + СписокТаблиц);
		ВсеГруппы = ГруппыОдометр; 
	ИначеЕсли ГруппаДанных = "СведенияОПутевомЛисте"
		Или ГруппаДанных = "СведенияОПутевомЛистеЭДФ" Тогда
		Результат.Заголовок = "Путевой лист";	
		Результат.Тип = "СведенияОПутевомЛистеЭДФ";
		Если ЗначениеЗаполнено(ИмяОбъектаДляФормы) Тогда
			Результат.ИмяФормы = ИмяОбъектаДляФормы + ".Форма.СведенияОПутевомЛисте";
		КонецЕсли;
		Результат.ЕстьХранимыеДанные = Истина;
		СписокТаблиц = "ТитулФрахтовщикаСведенияОВодителе";
		СписокРеквизитов = "ДатаВыпискиПутевогоЛиста,
							|НаименованиеПутевогоЛиста,
							|НомерПутевогоЛиста,
							|СведенияОСрокеДействия";
	КонецЕсли;
	
	Если ЭтоДоп = Истина Тогда
		СписокРеквизитов = СтрЗаменить(СписокРеквизитов, "Титул", "ДопТитул");
	КонецЕсли;
	
	Результат.Вставить("Реквизиты", СтрРазделить(СтрЗаменить(СписокРеквизитов, Символы.ПС, ""), ",", Ложь));
	Результат.Вставить("Таблицы", СтрРазделить(СтрЗаменить(СписокТаблиц, Символы.ПС, ""), ",", Истина));
	Результат.Вставить("ВсеГруппы", ВсеГруппы);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОформлениеОбязательныхРеквизитов

#Область ОшибкиЗаполнения

// Возвращает постфикс для информации об ошибке.
// 
// Возвращаемое значение:
//  Строка - Постфикс для информации об ошибке
Функция ПостфиксДляИнформацииОбОшибке() Экспорт
	
	Возврат "_Ошибка";
	
КонецФункции

// Показывает ошибки по контрагентам.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//  МассивЭлементовКонтрагентов - Массив - Массив элементов формы для проверки
Процедура ПоказатьОшибкиПоКонтрагентам(Форма, МассивЭлементовКонтрагентов) Экспорт

	Для Каждого ЭлементФормыКонтрагент Из МассивЭлементовКонтрагентов Цикл
		
		Если СтрНачинаетсяС(ЭлементФормыКонтрагент.ПутьКДанным, "Объект.") Тогда
			ПутьКДанным = Сред(ЭлементФормыКонтрагент.ПутьКДанным, 8);
			Контрагент = Форма.Объект[ПутьКДанным];	
		Иначе
			Контрагент = Форма[ЭлементФормыКонтрагент.ПутьКДанным];
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Контрагент) Тогда
			ПоказатьОшибкиПоКонтрагенту(Форма, ЭлементФормыКонтрагент, Контрагент);	
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПоказатьОшибкиПоКонтрагенту(Форма, ЭлементФормы, Контрагент)

	Шаблон = "%1%2";
	ПостфиксДляИнформацииОбОшибке = ПостфиксДляИнформацииОбОшибке();
	ИмяПоляИнформацииОбОШибке = СтрШаблон(Шаблон, ЭлементФормы.Имя, ПостфиксДляИнформацииОбОшибке);	
	ДекорацияСИнформациейОбОшибке = Форма.Элементы.Найти(ИмяПоляИнформацииОбОШибке);
	
	Если ДекорацияСИнформациейОбОшибке = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОшибок = ПолучитьОшибкиПоКонтрагенту(Форма, ЭлементФормы, Контрагент);
	
	ДекорацияСИнформациейОбОшибке.Видимость = СтруктураОшибок.ЕстьОшибки;
	ДекорацияСИнформациейОбОшибке.Заголовок = СтруктураОшибок.ОписаниеОшибок;

КонецПроцедуры

Процедура ПоказатьОшибкиПоАдресу(Форма, КонтейнерРеквизитов, Префикс, ИмяЭлемента)

	Шаблон = "%1%2";
	ПостфиксДляИнформацииОбОшибке = ПостфиксДляИнформацииОбОшибке();
	ИмяЭлементаИнформацииОбОШибке = СтрШаблон(Шаблон, ИмяЭлемента, ПостфиксДляИнформацииОбОшибке);
	ЭлементСИнформациейОбОшибке = Форма.Элементы.Найти(ИмяЭлементаИнформацииОбОШибке);

	Если ЭлементСИнформациейОбОшибке = Неопределено Тогда
		Возврат;
	КонецЕсли;

	МассивОшибокАдреса = Новый Массив;
	ПредставлениеАдреса = "";
	Если КонтейнерРеквизитов = Неопределено Тогда
		МассивОшибокАдреса.Добавить("Не заполнен адрес");
	Иначе	
		КодРегиона = Неопределено;
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			КонтейнерРеквизитов.Свойство(Префикс + "КодРегиона", КодРегиона);
			КонтейнерРеквизитов.Свойство(ИмяЭлемента, ПредставлениеАдреса);
		Иначе
			КодРегиона = КонтейнерРеквизитов[Префикс + "КодРегиона"];
			ПредставлениеАдреса = КонтейнерРеквизитов[ИмяЭлемента];
		КонецЕсли; 
			
		Если ЗначениеЗаполнено(КодРегиона) = Ложь Тогда
			МассивОшибокАдреса.Добавить("Не заполнен регион");
		КонецЕсли;
		
		Индекс = Неопределено;
		Если ТипЗнч(КонтейнерРеквизитов) = Тип("Структура") Тогда
			КонтейнерРеквизитов.Свойство(Префикс + "Индекс", Индекс);
		Иначе
			Индекс = КонтейнерРеквизитов[Префикс + "Индекс"];
		КонецЕсли;
		Если ЗначениеЗаполнено(Индекс) = Ложь Тогда
			МассивОшибокАдреса.Добавить("Не заполнен индекс");	
		КонецЕсли;
	КонецЕсли;

	Если ПустаяСтрока(ПредставлениеАдреса)
		Или МассивОшибокАдреса.Количество() = 0 Тогда
			
		ЭлементСИнформациейОбОшибке.Видимость = Ложь;
		
	ИначеЕсли МассивОшибокАдреса.Количество() > 0 Тогда
		
		Заголовок = СтрСоединить(МассивОшибокАдреса, ", ");
		
		Если ПредставлениеАдреса <> "" И ТипЗнч(КонтейнерРеквизитов) = Тип("ДанныеФормыЭлементКоллекции") Тогда
			Заголовок = Заголовок + " для адреса """ + ПредставлениеАдреса + """";	
		КонецЕсли;
		
		ЭлементСИнформациейОбОшибке.Заголовок = Заголовок;
		ЭлементСИнформациейОбОшибке.Видимость = Истина;
		
	КонецЕсли; 	
	
КонецПроцедуры

Функция НовоеОписаниеОшибокЗаполнения()

	Структура = Новый Структура;
	
	Структура.Вставить("ЕстьОшибки", Ложь);
	Структура.Вставить("ОписаниеОшибок", "");	
	
	Возврат Структура;
	
КонецФункции

Функция ПолучитьОшибкиПоКонтрагенту(Форма, ЭлементФормы, Контрагент)
	
	СтруктураОшибок = НовоеОписаниеОшибокЗаполнения();
	
	Если Не ЗначениеЗаполнено(Контрагент) 
		Или ТипЗнч(Контрагент) = Тип("Строка") Тогда
		Возврат СтруктураОшибок;
	КонецЕсли;
	
	#Если Сервер Тогда
		МодульОбменСГИСЭПД = ОбменСГИСЭПД;
	#Иначе
		МодульОбменСГИСЭПД = ОбменСГИСЭПДВызовСервера;
	#КонецЕсли
	
	Попытка
		РеквизитыУчастника = МодульОбменСГИСЭПД.ПолучитьРеквизитыУчастника(Контрагент, Ложь);
		Если РеквизитыУчастника.НомераТелефонов.Количество() = 0 
			Или Не ЗначениеЗаполнено(РеквизитыУчастника.НомераТелефонов[0]) Тогда
			СтруктураОшибок.ЕстьОшибки = Истина;
			СтруктураОшибок.ОписаниеОшибок = "Не заполнен номер телефона контрагента";
		КонецЕсли;
	Исключение
		Возврат СтруктураОшибок;
	КонецПопытки;
	
	Возврат СтруктураОшибок;
	
КонецФункции

#КонецОбласти

#Область ОформлениеКнопок

// Оформляет кнопки на форме по переданому массиву оформления
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма, в которой необходимо оформить кнопки
//	СтруктураРеквизитов - Структура - Структура содержащие данные титула
//  МассивОформленияКнопок - Массив - массив содержащий структуры см. ОбменСГИСЭПД.НоваяСтруктураОформленияКнопки()
//
Процедура ОформлениеКнопокНаФорме(Форма, СтруктураРеквизитов, МассивОформленияКнопок) Экспорт
	
	Если МассивОформленияКнопок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтруктураОформления Из МассивОформленияКнопок Цикл
	
		Если СтруктураОформления.ЭтоРеквизитТабЧасти Тогда
			ОформитьКнопкуСтрокиТабЧасти(Форма,
				СтруктураОформления.ТабЧасть,
				СтруктураОформления.ИндексСтрокиТабЧасти,
				СтруктураОформления.РеквизитУстановкиПризнакаПроверкиТабЧасти,
				СтруктураОформления.ЗначениеОформленияТабчасти,
				СтруктураОформления.РеквизитТабчасти,
				СтруктураОформления.ТекстКнопки);
		Иначе
			ОформитьКнопкуФормы(Форма, 
				СтруктураОформления.ПутьКЭлементуФормы,
				СтруктураОформления.РезультатОбработкиЗаполнения,
				Форма,
				СтруктураРеквизитов,
				СтруктураОформления.ТекстКнопки);
		КонецЕсли;
			
	КонецЦикла;

КонецПроцедуры

Процедура ОформитьКнопкуСтрокиТабЧасти(Форма,
	ТабЧасть,
	ИндексСтрокиТабЧасти,
	РеквизитУстановкиПризнакаПроверкиТабЧасти,
	ЗначениеОформленияТабчасти,
	РеквизитТабчасти,
	ТекстКнопки)

	Строка = Форма[ТабЧасть][ИндексСтрокиТабЧасти];
	Строка[РеквизитУстановкиПризнакаПроверкиТабЧасти] = ЗначениеОформленияТабчасти;
	Строка[РеквизитТабчасти] = ТекстКнопки;
	
КонецПроцедуры

Процедура ОформитьКнопкуФормы(Форма,
	ПутьКЭлементуФормы,
	РезультатОбработкиЗаполнения,
	ОбъектСДаннымиДокумента,
	СтруктураРеквизитов,
	Заголовок = Неопределено)

	// Заполнено с ошибкой или необходимо заполнить
	Если Не РезультатОбработкиЗаполнения.ОбязательныеЭлементыЗаполнены Тогда
	
		ОформлениеЭлементаНеобходимогоКЗаполнению(Форма, ПутьКЭлементуФормы);
		
	// Есть заполненные поля без ошибки		
	ИначеЕсли РезультатОбработкиЗаполнения.ЕстьЗаполненныеЭлементы Тогда
		
		ОформлениеЭлементаЗаполненногоБезОшибки(Форма, ПутьКЭлементуФормы, Заголовок);
	
	// Нет заполненных полей	 
	Иначе
		
		ОформлениеЭлементаНеОбязательно(Форма, ПутьКЭлементуФормы);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОформлениеЭлементаНеобходимогоКЗаполнению(Форма, ПутьКЭлементуФормы)

	Форма.Элементы[ПутьКЭлементуФормы].ЦветТекста = WebЦвета.Красный;
	Форма.Элементы[ПутьКЭлементуФормы].Заголовок = "Заполнить";
	
КонецПроцедуры

Процедура ОформлениеЭлементаЗаполненногоБезОшибки(Форма, ПутьКЭлементуФормы, Заголовок = Неопределено)

	Форма.Элементы[ПутьКЭлементуФормы].ЦветТекста = Форма.ЦветТекстаКнопки;
	Если ЗначениеЗаполнено(Заголовок) Тогда
		Форма.Элементы[ПутьКЭлементуФормы].Заголовок = Заголовок;
	Иначе
		Форма.Элементы[ПутьКЭлементуФормы].Заголовок = "Сведения заполнены";
	КонецЕсли;
	
КонецПроцедуры

Процедура ОформлениеЭлементаНеОбязательно(Форма, ПутьКЭлементуФормы)
		
	Форма.Элементы[ПутьКЭлементуФормы].ЦветТекста = WebЦвета.Серый;
	Форма.Элементы[ПутьКЭлементуФормы].Заголовок = "<заполнение необязательно>";
			
КонецПроцедуры 

#КонецОбласти

// Возвращает тип документа по имени формы.
// 
// Параметры:
//  ИмяФормы Имя формы
// 
// Возвращаемое значение:
//  Строка - Тип документа по имени формы
Функция ТипДокументаПоИмениФормы(ИмяФормы) Экспорт
	
	МассивЧастейИмениФормы = СтрРазделить(ИмяФормы, ".");
	Возврат МассивЧастейИмениФормы[1];
	
КонецФункции

Функция ПолучитьИндексПоТекущемуТитулу(ТекущийТитул)
	
	Индекс = Неопределено;
	
	Если ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1") Тогда
		Индекс = 1;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2") Тогда
		Индекс = 2;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3") Тогда
		Индекс = 3;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4") Тогда
		Индекс = 4;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5") Тогда
		Индекс = 5;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1") Тогда
		Индекс = 1;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2") Тогда
		Индекс = 2;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1") Тогда
		Индекс = 1;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2") Тогда
		Индекс = 2;
	КонецЕсли;
	
	Если Индекс = Неопределено Тогда
		Индекс = 1;
	КонецЕсли;
	
	Возврат Индекс;
	
КонецФункции

// Возвращает структуру реквизитов по титулу и версии.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
// 
// Возвращаемое значение:
//  Неопределено, Структура - Структура для основной формы, Неопределено для подчиненных
Функция ПолучитьСтруктуруПоТитулуИВерсии(Форма) Экспорт
	
	ЭтоОсновнаяФорма = ЭтоОсновнаяФорма(Форма);
	Если Не ЭтоОсновнаяФорма Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТипДокумента = ТипДокументаПоИмениФормы(Форма.ИмяФормы);
	ТекущаяСтраница = Форма.Элементы.Страницы.ТекущаяСтраница.Имя;
	Префикс = ПолучитьПрефиксТитулаПоСтраницеОсновнойФормы(ТекущаяСтраница, ТипДокумента);
	
	Если Не Форма.СтруктураРеквизитов.Свойство(Префикс) Тогда
		Возврат Новый Структура;	
	КонецЕсли;
	
	Если ТипДокумента = ТипДокументаСопроводительнаяВедомость() Тогда
		Индекс = ПолучитьИндексПоТекущемуТитулу(Форма.Объект.ТекущийТитул);
		СтруктураРеквизитов = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(Форма, Префикс, Индекс);
	Иначе
		СтруктураРеквизитов = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(Форма, Префикс);
	КонецЕсли;
	
	МассивВерсий = Форма.СтруктураРеквизитов[Префикс];
	Если Форма.ОтображаемыеВерсииТитулов = Неопределено Тогда
		НомерВерсии = МассивВерсий.ВГраница();
	ИначеЕсли Форма.ОтображаемыеВерсииТитулов.Свойство(Префикс) Тогда
		НомерВерсии = Мин(МассивВерсий.ВГраница(), Форма.ОтображаемыеВерсииТитулов[Префикс]);
	Иначе
		НомерВерсии = 0;	
	КонецЕсли;
	
	СтруктураРеквизитов = МассивВерсий[НомерВерсии];
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

// Это основная форма.
// 
// Параметры:
//  ПараметрЗадающийФорму - ФормаКлиентскогоПриложения, Строка - Параметр задающий форму
// 
// Возвращаемое значение:
//  Булево - Истина если это основная форма
Функция ЭтоОсновнаяФорма(ПараметрЗадающийФорму) Экспорт
	
	Если ТипЗнч(ПараметрЗадающийФорму) = Тип("Строка") Тогда
		ИмяФормы = ПараметрЗадающийФорму;	
	Иначе
		ИмяФормы = ПараметрЗадающийФорму.ИмяФормы;	
	КонецЕсли;
	
	Возврат СтрЗаканчиваетсяНа(ИмяФормы, "ОсновнаяФорма");
	
КонецФункции

// Возвращает префикс титула по странице основной формы.
// 
// Параметры:
//  ИмяТекущейСтраницы - Строка - Имя текущей страницы
//  ТипДокумента - Строка - Тип документа
// 
// Возвращаемое значение:
//  Строка - Получить префикс
Функция ПолучитьПрефиксТитулаПоСтраницеОсновнойФормы(ИмяТекущейСтраницы, ТипДокумента) Экспорт

	Если ТипДокумента = ТипДокументаТранспортнаяНакладная() Тогда
		
		Если ИмяТекущейСтраницы = "СтраницаСодИнфГО" Тогда
			Возврат "ТитулГрузоотправителя";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодИнфПрвПрием" Тогда
			Возврат "ТитулПеревозчикаПриемка";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодИнфГП" Тогда
			Возврат "ТитулГрузополучателя";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодПрвВыд" Тогда
			Возврат "ТитулПеревозчикаВыдача";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаТитулУказаниеПереадрес" Тогда
			Возврат "ТитулУказаниеПереадрес";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаДопТитулУказаниеПереадрес" Тогда 
			Возврат "ДопТитулУказаниеПереадрес";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодИнфПА" Тогда
			Возврат "ТитулПереадресовка";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодИнфЗамен" Тогда
			Возврат "ТитулПеревозчикаЗамены";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодФХЖ1" Тогда
			Возврат "ТитулПеревозчикаФХЖ";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодФХЖ2" Тогда
			Возврат "ТитулГрузоотправителяФХЖ";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаДопСодИнфПА" Тогда
			Возврат "ДопТитулПереадресовка";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаДопСодИнфЗамен" Тогда
			Возврат "ДопТитулПеревозчикаЗамены";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаДопСодИнфГП" Тогда
			Возврат "ДопТитулГрузополучателя";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаДопСодПрвВыд" Тогда
			Возврат "ДопТитулПеревозчикаВыдача";
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = ТипДокументаЗаказНаряд() Тогда 
	
		Если ИмяТекущейСтраницы = "СтраницаСодЗНИнфФт" Тогда
			Возврат "ТитулФрахтователя";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодЗНИнфФщ" Тогда
			Возврат "ТитулФрахтовщика";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодЗНИнфФтПодача" Тогда
			Возврат "ТитулФрахтователяПодача";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодЗНИнфФщВозврат" Тогда
			Возврат "ТитулФрахтовщикаВозврат";	
		КонецЕсли;
	
	ИначеЕсли ТипДокумента = ТипДокументаСопроводительнаяВедомость() Тогда
			
		Если ИмяТекущейСтраницы = "СтраницаСодСВИнфПрв" Тогда
			Возврат "ТитулПеревозчика";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодСВИнфГО" Тогда
			Возврат "ТитулГрузоотправителя";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаСодСВИнфГП" Тогда
			Возврат "ТитулГрузополучателя";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаДопСодСВИнфПрв" Тогда
			Возврат "ДопТитулПеревозчика";
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = ТипДокументаЗаказЗаявка() Тогда 
	
		Если ИмяТекущейСтраницы = "СтраницаТитулГрузоотправителя" Тогда
			Возврат "ТитулГрузоотправителя";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаТитулПеревозчика" Тогда
			Возврат "ТитулПеревозчика";	
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = ТипДокументаПутевойЛист() Тогда 
	
		Если ИмяТекущейСтраницы = "СтраницаТитулОформление" Тогда
			Возврат "ТитулОформление";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаТитулМедосмотр" Тогда
			Возврат "ТитулМедосмотр";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаТитулВыпуск" Тогда
			Возврат "ТитулВыпуск";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаТитулВыезд" Тогда
			Возврат "ТитулВыезд";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаТитулЗаезд" Тогда
			Возврат "ТитулЗаезд";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаТитулМедосмотрПосле" Тогда
			Возврат "ТитулМедосмотрПосле";
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = ТипДокументаДоговорФрахтования() Тогда 
	
		Если ИмяТекущейСтраницы = "СтраницаТитулФрахтователя" Тогда
			Возврат "ТитулФрахтователя";
		ИначеЕсли ИмяТекущейСтраницы = "СтраницаТитулФрахтовщика" Тогда
			Возврат "ТитулФрахтовщика";
		КонецЕсли;
			
	КонецЕсли;	

	Возврат ""

КонецФункции

// Возвращает текстовое представление типа документа транспортной накладной.
// 
// Возвращаемое значение:
//  Строка - текстовое представление типа документа транспортной накладной.
Функция ТипДокументаТранспортнаяНакладная() Экспорт
	
	Возврат "ЭлектроннаяТранспортнаяНакладная";
	
КонецФункции

// Возвращает текстовое представление типа документа заказ наряда.
// 
// Возвращаемое значение:
//  Строка - текстовое представление типа документа заказ наряда.
Функция ТипДокументаЗаказНаряд() Экспорт
	
	Возврат "ЭлектронныйЗаказНаряд";
	
КонецФункции

// Возвращает текстовое представление типа документа заказа (заявки).
// 
// Возвращаемое значение:
//  Строка - текстовое представление типа документа заказ наряда.
Функция ТипДокументаЗаказЗаявка() Экспорт
	
	Возврат "ЭлектронныйЗаказЗаявка";
	
КонецФункции

// Возвращает текстовое представление типа документа электронный путевой лист.
// 
// Возвращаемое значение:
//  Строка - текстовое представление типа документа заказ наряда.
Функция ТипДокументаПутевойЛист() Экспорт
	
	Возврат "ЭлектронныйПутевойЛист";
	
КонецФункции

// Возвращает текстовое представление типа документа электронный путевой лист.
// 
// Возвращаемое значение:
//  Строка - текстовое представление типа документа заказ наряда.
Функция ТипДокументаДоговорФрахтования() Экспорт
	
	Возврат "ЭлектронныйДоговорФрахтования";
	
КонецФункции


// Возвращает текстовое представление типа документа сопроводительная ведомость.
// 
// Возвращаемое значение:
//  Строка - текстовое представление типа документа сопроводительная ведомость.
Функция ТипДокументаСопроводительнаяВедомость() Экспорт
	
	Возврат "ЭлектроннаяСопроводительнаяВедомость";
	
КонецФункции

// Возвращает сериализуемый объект содержащий данные документа.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -
// 
// Возвращаемое значение:
//  Структура - Структура с данными документа
Функция ПолучитьСериализуемыйОбъектСДаннымиДокумента(Форма) Экспорт
	
	СтруктураДанныхОбъекта = Новый Структура; 
	                                                      
	МассивРеквизитов = СтрРазделить(Форма.ОписаниеРеквизитовФормы.ПараметрыФормы, ",", Ложь);
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		СтруктураДанныхОбъекта.Вставить(СокрЛП(Реквизит),Форма[Реквизит]);	
	КонецЦикла;
	
	СтруктураТаблицФормы = Новый Структура;
	
	МассивТаблиц = СтрРазделить(Форма.ОписаниеРеквизитовФормы.ИменаТаблиц, ",", Ложь);
	Для Каждого Таблица Из МассивТаблиц Цикл
		СтруктураТаблицФормы.Вставить(СокрЛП(Таблица),Форма[Таблица]);	
	КонецЦикла;
	
	СтруктураДанныхОбъекта.Вставить("СтруктураТаблицФормы", СтруктураТаблицФормы);
	
	Возврат СтруктураДанныхОбъекта;
	
КонецФункции

// Возвращает структуру с данными формы, необходиммыми для оформления кнопок.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
// 
// Возвращаемое значение:
//  Структура - Структура с данными формы для оформления кнопок:
// * ИмяФормы - Строка - Имя формы
// * АдресДереваСоответствийИтаблицыКнопок - Строка - Адрес дерева
// * УникальныйИдентификатор - Строка - Уникальный идентификатор формы
Функция СтруктураСДаннымиФормыДляОформленияКнопок(Форма) Экспорт
	
	Структура = Новый Структура;
	
	Структура.Вставить("ИмяФормы", Форма.ИмяФормы);
	Структура.Вставить("АдресДереваСоответствийИтаблицыКнопок", Форма.АдресДереваСоответствийИтаблицыКнопок);
	Структура.Вставить("УникальныйИдентификатор", Форма.УникальныйИдентификатор);

	Возврат Структура;
	
КонецФункции

#КонецОбласти
