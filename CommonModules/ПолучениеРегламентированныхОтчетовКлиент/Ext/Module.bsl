///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ИнтернетПоддержкаПользователей.ПолучениеРегламентированныхОтчетов".
// ОбщийМодуль.ПолучениеРегламентированныхОтчетовКлиент.
//
// Клиентские процедуры и функции загрузки регламентированных отчетов:
//  - обработка событий панели Интернет-поддержка и сервисы;
//  - переход к интерактивному обновлению регламентированных отчетов;
//  - настройка автоматической загрузки обновлений регламентированных отчетов;
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывает помощник обновления регламентированных отчетов.
//
Процедура ОбновитьРегламентированныеОтчеты() Экспорт
	
	ОткрытьФорму("Обработка.ОбновлениеРегламентированныхОтчетов.Форма.Форма");
	
КонецПроцедуры

// Определяет имя события, которое будет содержать оповещение
// о завершении загрузки регламентированных отчетов.
//
// Возвращаемое значение:
//  Строка - Имя события. Может быть использовано для идентификации
//           сообщений принимающими их формами.
//
Функция ИмяСобытияОповещенияОЗагрузки() Экспорт
	
	Возврат "ПолучениеРегламентированныхОтчетов.ЗагруженыРегламентированныеОтчеты";
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ИнтеграцияПодсистемИнтернетПоддержкиПользователей

// Выполняет обработку оповещения на панели администрирования
// "Интернет-поддержка и сервисы" (БСП).
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, в которой обрабатывается оповещение;
//  ИмяСобытия - Строка - имя события;
//  Параметр - Произвольный - параметр;
//  Источник - Произвольный - источник события.
//
Процедура ИнтернетПоддержкаИСервисыОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия <> "ИнтернетПоддержкаОтключена" И ИмяСобытия <> "ИнтернетПоддержкаПодключена" Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ПолучениеРегламентированныхОтчетовВызовСервера.НастройкиОбновленияРегламентированныхОтчетов();
	
	Если ИмяСобытия = "ИнтернетПоддержкаОтключена" Тогда
		Если Результат.ВариантОбновления = 1 Тогда
			Форма.Элементы.ДекорацияОбновлениеРегламентированныхОтчетовНеВыполняется.Видимость = Истина;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИнтернетПоддержкаПодключена" Тогда
		Если Результат.Расписание <> Неопределено Тогда
			Форма.Элементы.ДекорацияРасписаниеОбновленияРегламентированныхОтчетов.Заголовок =
				ИнтернетПоддержкаПользователейКлиентСервер.ПредставлениеРасписания(
				Результат.Расписание);
		КонецЕсли;
		Форма.ВариантОбновленияРегламентированныхОтчетов = Результат.ВариантОбновления;
		Форма.Элементы.ДекорацияОбновлениеРегламентированныхОтчетовНеВыполняется.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Определяет идентификаторы и номера версий, которые содержит файла с обновлениями.
//
// Параметры:
//  ИмяФайла - Строка - расположение архива с регламентированными отчетами.
//
// Возвращаемое значение:
//  Массив из Структура- содержит идентификаторы регламентированных отчетов и номер версий.
//
Функция ВерсииРегламентированныхОтчетовВФайле(ИмяФайла) Экспорт
	
	#Если Не ВебКлиент Тогда
	
	ВерсииРегламентированныхОтчетов = Новый Массив;
	
	Если ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла) <> "zip" Тогда
		Возврат ВерсииРегламентированныхОтчетов;
	КонецЕсли;
	
	// АПК:574-выкл код не используется в мобильном клиенте
	
	ЧтениеZipФайла = Новый ЧтениеZipФайла(ИмяФайла);
	Для Каждого Элемент Из ЧтениеZipФайла.Элементы Цикл
		
		// Зашифрованные элементы архива не обрабатываются.
		Если Элемент.Зашифрован 
			Или Элемент.Расширение <> "zip" Тогда
			Продолжить;
		КонецЕсли;
		
		КаталогОписанияОтчета = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(
				ПолучитьИмяВременногоФайла(Элемент.ИмяБезРасширения));
		ЧтениеZipФайла.Извлечь(Элемент, КаталогОписанияОтчета, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
		ИмяФайлаОтчета = КаталогОписанияОтчета + Элемент.Имя;
		
		ОписаниеВерсии = ОписаниеВерсииРегламентированногоОтчетаИзФайла(ИмяФайлаОтчета);
		
		// Если имя файла содержит некорректные данные, подсистема не должна
		// выполнять его обработку.
		Если Не ЗначениеЗаполнено(ОписаниеВерсии.Идентификатор)
			Или Не ЗначениеЗаполнено(ОписаниеВерсии.ИдентификаторВидаОтчета)
			Или Не ЗначениеЗаполнено(ОписаниеВерсии.Версия) Тогда
			Продолжить;
		КонецЕсли;
		
		ВерсииРегламентированныхОтчетов.Добавить(ОписаниеВерсии);
		УдалитьФайлы(КаталогОписанияОтчета);
		
	КонецЦикла;
	
	ЧтениеZipФайла.Закрыть();
	
	// АПК:574-вкл
	
	Возврат ВерсииРегламентированныхОтчетов;
	
	#Иначе
	
	ВызватьИсключение НСтр("ru = 'Интерактивная загрузка архива с регламентированными отчетами при работе в веб-клиенте запрещена.'");
	
	#КонецЕсли
	
КонецФункции

// Возвращает имя события для журнала регистрации
//
// Возвращаемое значение:
//  Строка - имя события.
//
Функция ИмяСобытияЖурналаРегистрации() Экспорт
	
	Возврат НСтр("ru = 'Получение регламентированных отчетов'",
		ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	
КонецФункции

// Определяет идентификаторы и номера версий, которые содержит файл с обновлениями.
//
// Параметры:
//  ИмяФайлаОтчета - Строка - расположение архива с регламентированным отчетом.
//
// Возвращаемое значение:
//  Структура - содержит описание регламентированного отчета.
//
Функция ОписаниеВерсииРегламентированногоОтчетаИзФайла(ИмяФайлаОтчета)
	
	#Если Не ВебКлиент Тогда
	
	ОписаниеОтчета = ОписаниеВерсииРегламентированногоОтчета();
	
	СоставИмениФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ИмяФайлаОтчета);
	ОписаниеОтчета.Имя = СоставИмениФайла.Имя;
	
	Если СоставИмениФайла.Расширение <> ".zip" Тогда
		Возврат ОписаниеОтчета;
	КонецЕсли;
	
	// АПК:574-выкл код не используется в мобильном клиенте
	
	ФайлМанифеста = Неопределено;
	
	ЧтениеZipФайла = Новый ЧтениеZipФайла(ИмяФайлаОтчета);
	Для Каждого ЭлементАрхива Из ЧтениеZipФайла.Элементы Цикл
		
		Если ВРег(ЭлементАрхива.Имя) = "MANIFEST.JSON" Тогда
			ФайлМанифеста = ЭлементАрхива;
			Прервать;
		Иначе
			
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
	Если ФайлМанифеста = Неопределено Тогда 
		ИнформацияОбОшибке = НСтр("ru = 'Отсутствует файл описания отчета.'");
		Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось получить описание регламентированного отчета из файла по причине:
				|%1'"),
			ИнформацияОбОшибке);
		ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(
			ИмяСобытияЖурналаРегистрации(),
			"Предупреждение",
			Комментарий);
			
		ЧтениеZipФайла.Закрыть();
		
		Возврат ОписаниеОтчета;
	КонецЕсли;
	
	КаталогМанифеста  = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(
		ПолучитьИмяВременногоФайла(ФайлМанифеста.Имя));
	ЧтениеZipФайла.Извлечь(ФайлМанифеста, КаталогМанифеста, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
	ИмяФайлаМанифеста = КаталогМанифеста + ФайлМанифеста.Имя;
	ПрочитатьФайлМанифеста(ИмяФайлаМанифеста, ОписаниеОтчета);
	УдалитьФайлы(КаталогМанифеста);
	
	ЧтениеZipФайла.Закрыть();
	
	// АПК:574-вкл
	
	Возврат ОписаниеОтчета;
	
	#Иначе
	
	ВызватьИсключение НСтр("ru = 'Интерактивная загрузка архива с регламентированными отчетами при работе в веб-клиенте запрещена.'");
	
	#КонецЕсли

КонецФункции

// Возвращает пустую структуру описания версии регламентированного отчета.
// 
// Возвращаемое значение:
//  Структура - характеристики версии отчета.
//
Функция ОписаниеВерсииРегламентированногоОтчета()
	
	Результат = Новый Структура();
	Результат.Вставить("Идентификатор");
	Результат.Вставить("Наименование");
	Результат.Вставить("ИдентификаторВидаОтчета");
	Результат.Вставить("Версия");
	Результат.Вставить("ВерсииПрограмм");
	Результат.Вставить("ОписаниеВерсии");
	Результат.Вставить("Имя");
	
	Возврат Результат;
	
КонецФункции

// Заполняет описание регламентированного отчета на основании данных файла-манифеста.
//
// Параметры:
//  ИмяФайлаМанифеста - Строка - расположение файла с описанием регламентированного отчета.
//  ОписаниеОтчета - Структура - содержит описание регламентированного отчета.
//
Процедура ПрочитатьФайлМанифеста(ИмяФайлаМанифеста, ОписаниеОтчета)
	
	#Если Не ВебКлиент Тогда
	
	ОписаниеИзМанифеста = Новый Структура;
	
	Попытка
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.ОткрытьФайл(ИмяФайлаМанифеста);
		МанифестОтчета = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		
		ОписаниеИзМанифеста.Вставить("Идентификатор",           МанифестОтчета.reportIdentifier);
		ОписаниеИзМанифеста.Вставить("Наименование",            МанифестОтчета.name);
		ОписаниеИзМанифеста.Вставить("ИдентификаторВидаОтчета", МанифестОтчета.reportType);
		ОписаниеИзМанифеста.Вставить("Версия",                  МанифестОтчета.version);
		ОписаниеИзМанифеста.Вставить("ОписаниеВерсии",          МанифестОтчета.description);
		ОписаниеИзМанифеста.Вставить("ВерсииПрограмм",          Новый Массив);
		Для Каждого ВерсияПрограммы Из МанифестОтчета.programVersionApplicability Цикл
			ДанныеВерсииПрограммы = Новый Структура;
			ДанныеВерсииПрограммы.Вставить("Программа", ВерсияПрограммы.program);
			ДанныеВерсииПрограммы.Вставить("Версия",    ВерсияПрограммы.version);
			ОписаниеИзМанифеста.ВерсииПрограмм.Добавить(ДанныеВерсииПрограммы);
		КонецЦикла;
		
	Исключение
		ИнформацияОбОшибке = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось получить описание регламентированного отчета из файла по причине:
				|%1'"),
			ИнформацияОбОшибке);
		ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(
			ИмяСобытияЖурналаРегистрации(),
			"Предупреждение",
			Комментарий);
	КонецПопытки;
	
	ЗаполнитьЗначенияСвойств(ОписаниеОтчета, ОписаниеИзМанифеста);
	
	#Иначе
	
	ВызватьИсключение НСтр("ru = 'Интерактивная загрузка архива с регламентированными отчетами при работе в веб-клиенте запрещена.'");
	
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти
