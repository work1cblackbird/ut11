
#Область ПрограммныйИнтерфейс

// Принимает значение Истина, если обмен с сервисом 1С:EDI используется.
// 
// Возвращаемое значение:
//  Булево - признак использования интеграции с 1C:EDI
//
Функция ИспользуетсяФункциональностьПодсистемы() Экспорт 
    
    Возврат ПолучитьФункциональнуюОпцию("ИспользоватьОбменEDI");
    
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ИспользуемыеТипыДокументов() Экспорт
	
	ИспользуемыеТипыДокументов = Новый Массив;
	
	НастройкиУчета = НастройкиУчета();
	
	Для Каждого ЭлементСоответствия Из НастройкиУчета.СоответствиеДокументовEDIПрикладнымОбъектам Цикл
		
		Если ЭлементСоответствия.Значение <> Неопределено Тогда
			 ИспользуемыеТипыДокументов.Добавить(ЭлементСоответствия.Ключ);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИспользуемыеТипыДокументов;
	
КонецФункции

Функция ТипОрганизация() Экспорт
	
	ТипОрганизация = Неопределено;
	
	Для Каждого ТипОрганизация Из Метаданные.ОпределяемыеТипы.ОрганизацияEDI.Тип.Типы() Цикл
		
		МетаданныеПрикладногоОбъекта = Метаданные.НайтиПоТипу(ТипОрганизация);
		Если МетаданныеПрикладногоОбъекта = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ОбщегоНазначения.ЭтоСсылка(ТипОрганизация) Тогда
			Продолжить;
		КонецЕсли;
		
		Возврат ТипОрганизация;
		
	КонецЦикла;
	
	Возврат ТипОрганизация;
	
КонецФункции

Функция ЕстьНастройкиОрганизаций() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	НастройкиИнтеграцииEDI.Организация КАК Организация
	               |ИЗ
	               |	РегистрСведений.НастройкиИнтеграцииEDI КАК НастройкиИнтеграцииEDI";
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// См. НастройкиБЭДСобытия.ПриФормированииТаблицыЗависимостейКонстант
Процедура ПриФормированииТаблицыЗависимостейКонстант(ТаблицаЗависимостей) Экспорт
	
	// Отключаем использование сервиса EDI в случае отключения обмена с 1С:Бизнес-сеть
	НастройкиБЭД.ДобавитьСтрокуТаблицыЗависимостиКонстант(ТаблицаЗависимостей,
		Метаданные.Константы.ИспользоватьОбменБизнесСеть.Имя, Ложь,
		Метаданные.Константы.ИспользоватьОбменEDI.Имя, Ложь);
	
КонецПроцедуры

// Устанавливает использование регламентных заданий при изменении значений
//  функциональных опций.
//
Процедура УстановитьИспользованиеРегламентныхЗаданий() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		Возврат; // Неразделенный режим выполнения регламентных заданий
	КонецЕсли;
	
	Использование = ПолучитьФункциональнуюОпцию("ИспользоватьОбменEDI") 
		И ПолучитьФункциональнуюОпцию("ИспользоватьОбменБизнесСеть");
	
	РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбновлениеЗагрузкаДокументовEDI, Использование);
	РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбновлениеИтоговЛентыСобытийEDI, Использование);
	РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбновлениеНастроекОрганизацийEDI, Использование);
	РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбновлениеНастроекПоставщиковEDI, Использование);
	РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбновлениеРеестраДокументовEDI, Использование);
	РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.СинхронизацияССервисомEDI, Использование);
	РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.УдалениеУстаревшихИтоговЛентыСобытийEDI, Использование);
	
КонецПроцедуры

// Предназначена для определения настроек учета в прикладной конфигурации
//
// Возвращаемое значение:
//  Структура - содержит поля:
//  * СоответствиеДокументовEDIПрикладнымОбъектам     - Соответствие - задает соответствие перечислению "Типы документов EDI" и типам соответствующих им прикладных документов.
//  * СоответствиеПрикладныхОбъектовДокументамEDI     - Соответствие - задает соответствие типов прикладных документов и перечисления "Типы документов EDI".
//  * ТипИнтеграции                                   - ПеречислениеСсылка.ТипыИнтеграцииEDI - какой вариант интеграции библиотеки выполнен, полное встраивание или используется только обработка.
//  * ИспользуетсяОтменаСтрокЗаказовКлиента           - Булево - признак того, что для заказов клиентов используется отмена строк заказов клиентов.
//  * ИспользуетсяОтменаСтрокЗаказовКлиента           - Булево - признак того, что в конфигурации используется причины отмены заказов клиента .
//  * ИспользуетсяОтменаСтрокЗаказовПоставщикам       - Булево - признак того, что используются причины отмены строк заказов поставщикам.
//  * ИспользуютсяПричиныОтменСтрокЗаказовПоставщикам - Булево - признак того, что в конфигурации используется причины отмены заказов поставщикам.
//
Функция НастройкиУчета() Экспорт
	
	НастройкиУчета = Новый Структура;
	НастройкиУчета.Вставить("СоответствиеДокументовEDIПрикладнымОбъектам",          СоответствиеДокументовEDIПрикладнымОбъектам());
	НастройкиУчета.Вставить("ТипИнтеграции",                                        Перечисления.ТипыИнтеграцииEDI.ИспользуетсяТолькоОбработка);
	НастройкиУчета.Вставить("ИспользуетсяОтменаСтрокЗаказовКлиента",                Ложь);
	НастройкиУчета.Вставить("ИспользуютсяПричиныОтменСтрокЗаказовКлиента",          Ложь);
	НастройкиУчета.Вставить("ИспользуетсяОтменаСтрокЗаказовПоставщикам",            Ложь);
	НастройкиУчета.Вставить("ИспользуютсяПричиныОтменСтрокЗаказовПоставщикам",      Ложь);
	НастройкиУчета.Вставить("ИспользуютсяСклады",                                   Ложь);
	НастройкиУчета.Вставить("ДоступноАвтоматическоеЗаполнениеСклада",               Ложь);
	НастройкиУчета.Вставить("ПредставлениеНастройкиАвтоматическогоЗаполненияСклада", "");
	НастройкиУчета.Вставить("ПояснениеМеханизмаАвтоматическогоЗаполненияСклада",     "");
	
	СервисEDIПереопределяемый.ПриОпределенииНастроекУчета(НастройкиУчета);
	
	НастройкиУчета.Вставить("СоответствиеПрикладныхОбъектовДокументамEDI", 
	                        СоответствиеПрикладныхОбъектовДокументамEDI(НастройкиУчета.СоответствиеДокументовEDIПрикладнымОбъектам));
	
	Возврат НастройкиУчета;
	
КонецФункции

// Получает настройки автообновления по организации
// 
// Параметры:
//  Организация - СправочникСсылка -организация, по которой требуется получить настройки.
// 
// Возвращаемое значение:
//  Структура - Описание:
//   * ПричинаОтменыСтрокЗаказовКлиента - ОпределяемыйТип.ПричинаОтменыСтрокЗаказаКлиентаEDI - причина отмены строк в заказе клиента.
//   * ПричинаОтменыСтрокЗаказаПоставщику - ОпределяемыйТип.ПричинаОтменыСтрокЗаказаПоставщикуEDI - причина отмены строк в заказе поставщику.
//   * ОтменятьСтрокиЗаказаПоставщикуПриОтмене - Булево - надо ли отменять строки в заказе поставщику при отмене документа в сервисе.
//   * ОтменятьСтрокиЗаказаКлиентаПриОтмене - Булево - надо ли отменять строки в заказе клиента при отмене документа в сервисе.
//   * ОтправляемЗаказыПоставщикамEDI - Булево - отправляются ли документы в сервис EDI.
//   * АвтоматическиОбновляемЗаказыПоставщикам - Булево - требуется ли автоматическое обновление заказов поставщикам при изменении в сервисе.
//   * АвтоматическиОбновляемЗаказыКлиента - Булево - требуется ли автоматическое обновление заказов клиентов при изменении в сервисе.
//   * АвтоматическиЗагружаемЗаказыКлиента - Булево - требуется ли автоматически загружать новые заказы клиента из сервиса.
//   * ПрефиксНомеровДокументовСервис - Строка - префикс номеров документов, которые создаются в сервисе.
//   * Организация - ОпределяемыйТип.ОрганизацияEDI - организация, по которой получены настройки.
//
Функция НастройкиИнтеграцииEDI(Организация) Экспорт
	
	Возврат РегистрыСведений.НастройкиИнтеграцииEDI.НастройкиИнтеграцииEDI(Организация);
	
КонецФункции

// См. РегламентныеЗаданияПереопределяемый.ПриОпределенииНастроекРегламентныхЗаданий
Процедура ПриОпределенииНастроекРегламентныхЗаданий(Настройки) Экспорт
	
	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.РегламентноеЗадание = Метаданные.РегламентныеЗадания.ОбновлениеЗагрузкаДокументовEDI;
	НоваяСтрока.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьОбменEDI;
	НоваяСтрока.РаботаетСВнешнимиРесурсами = Истина;

	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.РегламентноеЗадание = Метаданные.РегламентныеЗадания.ОбновлениеИтоговЛентыСобытийEDI;
	НоваяСтрока.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьОбменEDI;
	НоваяСтрока.РаботаетСВнешнимиРесурсами = Истина;

	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.РегламентноеЗадание = Метаданные.РегламентныеЗадания.ОбновлениеНастроекОрганизацийEDI;
	НоваяСтрока.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьОбменEDI;
	НоваяСтрока.РаботаетСВнешнимиРесурсами = Истина;

	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.РегламентноеЗадание = Метаданные.РегламентныеЗадания.ОбновлениеНастроекПоставщиковEDI;
	НоваяСтрока.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьОбменEDI;
	НоваяСтрока.РаботаетСВнешнимиРесурсами = Истина;

	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.РегламентноеЗадание = Метаданные.РегламентныеЗадания.ОбновлениеРеестраДокументовEDI;
	НоваяСтрока.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьОбменEDI;
	НоваяСтрока.РаботаетСВнешнимиРесурсами = Истина;

	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.РегламентноеЗадание = Метаданные.РегламентныеЗадания.СинхронизацияССервисомEDI;
	НоваяСтрока.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьОбменEDI;
	НоваяСтрока.РаботаетСВнешнимиРесурсами = Истина;

	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.РегламентноеЗадание = Метаданные.РегламентныеЗадания.УдалениеУстаревшихИтоговЛентыСобытийEDI;
	НоваяСтрока.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьОбменEDI;
	НоваяСтрока.РаботаетСВнешнимиРесурсами = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоответствиеДокументовEDIПрикладнымОбъектам()
	
	СоответствиеДокументовEDIПрикладнымОбъектам = Новый Соответствие;
	
	Для Инд =1 По Перечисления.ТипыДокументовEDI.Количество() Цикл
		
		ЗначениеПеречисления = Перечисления.ТипыДокументовEDI.Получить(Инд - 1);
		СоответствиеДокументовEDIПрикладнымОбъектам.Вставить(ЗначениеПеречисления, Неопределено);
		
	КонецЦикла;
	
	Возврат СоответствиеДокументовEDIПрикладнымОбъектам;
	
КонецФункции

Функция СоответствиеПрикладныхОбъектовДокументамEDI(СоответствиеДокументовEDIПрикладнымОбъектам)
	
	СоответствиеПрикладныхОбъектовДокументамEDI = Новый Соответствие;
	
	Для Каждого ЭлементСоответствия Из СоответствиеДокументовEDIПрикладнымОбъектам Цикл
		
		 СоответствиеПрикладныхОбъектовДокументамEDI.Вставить(ЭлементСоответствия.Значение, ЭлементСоответствия.Ключ);
		
	КонецЦикла;
	
	Возврат СоответствиеПрикладныхОбъектовДокументамEDI;
	
КонецФункции

#КонецОбласти