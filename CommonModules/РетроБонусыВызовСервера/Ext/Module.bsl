//@strict-types

#Область ПрограммныйИнтерфейс

// Заголовок документа.
// 
// Параметры:
//  Документ - ДокументСсылка.УсловияРетроБонусовКлиентов - Обрабатываемый документ
//  НомерДокумента - Строка - Номер документа
//  ДатаДокумента - Дата - Дата документа
//  Исправление - Булево - Исправление
// 
// Возвращаемое значение:
//  Строка - представление документа
//
Функция ЗаголовокДокумента(Знач Документ, Знач НомерДокумента, Знач ДатаДокумента, Знач Исправление) Экспорт
	
	Возврат РетроБонусыСервер.ЗаголовокДокумента(Документ, НомерДокумента, ДатаДокумента, Исправление);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  Документ - ДокументСсылка.УсловияРетроБонусовКлиентов - 
// 
// Возвращаемое значение:
//	- Неопределено -
//	- см. ДлительныеОперации.ВыполнитьПроцедуру
//
Функция ДлительнаяОперацияФиксацииСегментов(Документ) Экспорт
	
	ШаблонКлюча = "ФиксацияСоставаСегментов_%1";
	ИдентификаторДокумента = Строка(Документ.УникальныйИдентификатор());
	Ключ = СтрШаблон(ШаблонКлюча, ИдентификаторДокумента);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ", Ключ);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	ФоновыеЗаданияПоДокументу = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	ДлительнаяОперация = Неопределено;
	
	Если ФоновыеЗаданияПоДокументу.Количество() = 0 Тогда
		
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
		ПараметрыВыполнения.КлючФоновогоЗадания = Ключ;
		ПараметрыВыполнения.УточнениеОшибки = НСтр("ru = 'Не удалось зафиксировать состав сегментов:'");
		
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьПроцедуру(
			ПараметрыВыполнения,
			"РетроБонусыСервер.ЗафиксироватьСоставСегментов",
			Документ);
		
	КонецЕсли;
	
	Возврат ДлительнаяОперация;
	
КонецФункции

// Параметры:
//  Документ - ДокументСсылка.УсловияРетроБонусовКлиентов
// 
// Возвращаемое значение:
//	- Неопределено -
//	- см. ДлительныеОперации.ВыполнитьПроцедуру 
//
Функция ДлительнаяОперацияОтменыФиксацииСегментов(Документ) Экспорт
	
	ШаблонКлюча = "ФиксацияСоставаСегментов_%1";
	ИдентификаторДокумента = Строка(Документ.УникальныйИдентификатор());
	Ключ = СтрШаблон(ШаблонКлюча, ИдентификаторДокумента);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ", Ключ);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	ФоновыеЗаданияПоДокументу = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	ДлительнаяОперация = Неопределено;
	
	Если ФоновыеЗаданияПоДокументу.Количество() = 0 Тогда
		
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
		ПараметрыВыполнения.КлючФоновогоЗадания = Ключ;
		ПараметрыВыполнения.УточнениеОшибки = НСтр("ru = 'Не удалось отменить фиксацию состава сегментов:'");
		
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьПроцедуру(
			ПараметрыВыполнения,
			"РетроБонусыСервер.ОтменитьФиксациюСоставаСегментов",
			Документ);
		
	КонецЕсли;
	
	Возврат ДлительнаяОперация;
	
КонецФункции

// Параметры:
//  ПараметрыРасчета - см. Отчеты.РасчетРетроБонусовКлиентов.ПараметрыРасчетаРетроБонусов
//  ИдентификаторФормы - см. ДлительныеОперации.ПараметрыВыполненияФункции.ИдентификаторФормы
// 
// Возвращаемое значение:
//	см. ДлительныеОперации.ВыполнитьФункцию 
//
Функция ДлительнаяОперацияПолученияРетроБонусовПоДокументамПродажи(ПараметрыРасчета, ИдентификаторФормы) Экспорт
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	ПараметрыВыполнения.УточнениеОшибки = НСтр("ru = 'Не удалось получить данные ретро-бонусов по документам продажи:'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"Отчеты.РасчетРетроБонусовКлиентов.РетроБонусыЗаПериодПоДокументамПродажи",
		ПараметрыРасчета);
	
	Возврат ДлительнаяОперация;
	
КонецФункции

// Параметры:
//  АдресДанныхДляФормирования - Строка
//  ПараметрыРасчета - см. Отчеты.РасчетРетроБонусовКлиентов.ПараметрыРасчетаРетроБонусов
//  ПараметрыФормирования - см. Обработки.ГрупповоеНачислениеРетроБонусовКлиентов.ПараметрыФормированияДокументов
//  ИдентификаторФормы - см. ДлительныеОперации.ПараметрыВыполненияФункции.ИдентификаторФормы
// 
// Возвращаемое значение:
//  см. ДлительныеОперации.ВыполнитьФункцию
//
Функция ДлительнаяОперацияФормированияДокументовНачисления(АдресДанныхДляФормирования, ПараметрыРасчета, ПараметрыФормирования, ИдентификаторФормы) Экспорт
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	ПараметрыВыполнения.УточнениеОшибки = НСтр("ru = 'Не удалось сформировать документы начисления:'");
	ДанныеДляФормирования = ПолучитьИзВременногоХранилища(АдресДанныхДляФормирования); // см. НовыеДанныеДляФормированияДокументовНачисления
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"Обработки.ГрупповоеНачислениеРетроБонусовКлиентов.СформироватьДокументыНачисления",
		ДанныеДляФормирования,
		ПараметрыРасчета,
		ПараметрыФормирования);
	
	Возврат ДлительнаяОперация;
	
КонецФункции

#КонецОбласти