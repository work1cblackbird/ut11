#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗапросМетодаИнтефрейсаСОбработкой(ПараметрыОбработки) Экспорт

	Если Не ЭлектроннаяПодпись.ИспользоватьЭлектронныеПодписи() И Не ПараметрыОбработки.ПроверкаПоТокенуРозничнойПродажи Тогда
		ПараметрыОбработки.ЕстьОшибки  = Истина;
		ПараметрыОбработки.ТекстОшибки = НСтр("ru = 'Подсистема электронной подписи отключена.'");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьОрганизациюПараметровОбработкиПоКлючуСессии(ПараметрыОбработки);
	
	Если Не ЗначениеЗаполнено(ПараметрыОбработки.Организация)
		И ПараметрыОбработки.ОрганизацияПоСертификатам = Неопределено Тогда
		ПараметрыОбработки.ОрганизацияПоСертификатам = Истина;
		Возврат;
	КонецЕсли;
	
	ТребуетсяОбновлениеКлючаСессии        = Ложь;
	ТребуетсяОбновлениеКлючаСессииРозница = Ложь;
	ТекстОшибки                           = Неопределено;
	ДанныеДляОбработки                    = Неопределено;
	
	ДоступныеМетодыИнтерфейса = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ДоступныеМетодыИнтерфейса();
	
	Если ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.ЕмкостьУпаковкиПоGTIN Тогда
		
		ТаблицаНоменклатуры = Новый ТаблицаЗначений();
		ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура",   Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
		ТаблицаНоменклатуры.Колонки.Добавить("Характеристика", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип);
		
		НоваяСтрока = ТаблицаНоменклатуры.Добавить();
		НоваяСтрока.Номенклатура = ПараметрыОбработки.Параметры.Номенклатура;
		МассивGTIN = Новый Массив();
		ШтрихкодированиеОбщегоНазначенияИС.ЗаполнитьПроверяемыеGTIN(ТаблицаНоменклатуры, МассивGTIN, Новый Соответствие(),, Ложь);
		
		Если МассивGTIN.Количество() = 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'Не найдено GTIN для получения емкости упаковки по данным ГИС МТ.'");
			
		Иначе
			
			Результат = ИнтерфейсИСМПОбщегоНазначения.ДанныеПродукцииПоШтрихкодуEAN(
				МассивGTIN,,
				ПараметрыОбработки.Организация);
			
			ТребуетсяОбновлениеКлючаСессии = Результат.ТребуетсяОбновлениеКлючаСессии;
			ТекстОшибки                    = Результат.ТекстОшибки;
			ДанныеДляОбработки             = Результат.ДанныеПродукцииПоШтрихкодуEAN;
			
		КонецЕсли;
	
	ИначеЕсли ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.МестаОсуществленияДеятельности Тогда
		
		Результат = ИнтерфейсИСМПОбщегоНазначения.МестаОсуществленияДеятельности(ПараметрыОбработки.Организация, ПараметрыОбработки.ВидПродукции);
		
		ТребуетсяОбновлениеКлючаСессии = Результат.ТребуетсяОбновлениеКлючаСессии;
		ТекстОшибки                    = Результат.ТекстОшибки;
		ДанныеДляОбработки             = Результат.МестаОсуществленияДеятельности;
		
	ИначеЕсли ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.СписокМестОсуществленияДеятельности Тогда
		
		Результат = ИнтерфейсИСМПОбщегоНазначения.СписокМестОсуществленияДеятельности(ПараметрыОбработки.Организация);
		
		ТребуетсяОбновлениеКлючаСессии = Результат.ТребуетсяОбновлениеКлючаСессии;
		ТекстОшибки                    = Результат.ТекстОшибки;
		ДанныеДляОбработки             = Результат.МестаОсуществленияДеятельности;
		
	ИначеЕсли ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.АктуализацияCDNПлощадок Тогда
		
		ОбновлятьБезПроверкиДатыОбновления = Ложь;
		
		Если ТипЗнч(ПараметрыОбработки.Параметры) = Тип("Структура") И ПараметрыОбработки.Параметры.Свойство("ОбновлятьБезПроверкиДатыОбновления") Тогда
			ОбновлятьБезПроверкиДатыОбновления = ПараметрыОбработки.Параметры.ОбновлятьБезПроверкиДатыОбновления;
		КонецЕсли;
		
		РезультатОбновления = ОбщегоНазначенияИСМПВызовСервера.ЗапуститьОбновлениеCDNПлощадок(ПараметрыОбработки.Организация, ПараметрыОбработки.УникальныйИдентификатор, ОбновлятьБезПроверкиДатыОбновления);
		
	Иначе
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Внутренняя ошибка. Не описан метод интерфейса с запросом ключа авторизации %1'"),
			ПараметрыОбработки.ИмяОбработчика);
	КонецЕсли;
	
	Если ТребуетсяОбновлениеКлючаСессии Тогда
		
		ПараметрыОбработки.ТребуетсяОбновлениеКлючаСессии = Истина;
		
	ИначеЕсли ТребуетсяОбновлениеКлючаСессииРозница Тогда
		
		ПараметрыОбработки.ТребуетсяОбновлениеКлючаСессииРозница = Истина;
	
	ИначеЕсли ЗначениеЗаполнено(ТекстОшибки) Тогда
		
		ПараметрыОбработки.ЕстьОшибки  = Истина;
		ПараметрыОбработки.ТекстОшибки = ТекстОшибки;
		
	Иначе
		
		Если ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.ЕмкостьУпаковкиПоGTIN Тогда
			ПараметрыОбработки.Результат = ОбработкаРезультатаЕмкостьУпаковкиПоGTIN(ДанныеДляОбработки);
		ИначеЕсли ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.МестаОсуществленияДеятельности
			Или ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.СписокМестОсуществленияДеятельности Тогда
			ПараметрыОбработки.Результат = ОбработкаМестаОсуществленияДеятельности(ДанныеДляОбработки);
		ИначеЕсли ПараметрыОбработки.ИмяОбработчика = ДоступныеМетодыИнтерфейса.АктуализацияCDNПлощадок Тогда
			ПараметрыОбработки.ДлительнаяОперация = РезультатОбновления;
		Иначе
			ВызватьИсключение НСтр("ru = 'Внутренняя ошибка. Не описан метод интерфейса с запросом ключа авторизации (после авторизации).'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбработкаРезультатаЕмкостьУпаковкиПоGTIN(ИсходныеДанные)
	
	Результат     = Новый Соответствие();
	ОписаниеЧисло = Новый ОписаниеТипов("Число");
	Для Каждого КлючИЗначение Из ИсходныеДанные Цикл
		
		GTIN                 = КлючИЗначение.Ключ;
		ДанныеОписанияТовара = КлючИЗначение.Значение;
		ЕмкостьУпаковки      = ОписаниеЧисло.ПривестиЗначение(ДанныеОписанияТовара.ЕмкостьУпаковки);
		Если Не ЗначениеЗаполнено(ЕмкостьУпаковки) Тогда
			Продолжить;
		КонецЕсли;
		
		Результат.Вставить(GTIN, ЕмкостьУпаковки);
	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ОбработкаМестаОсуществленияДеятельности(ИсходныеДанные)
	
	ВозвращаемоеЗначение = Новый Массив();
	КешДобавленных       = Новый Соответствие();
	
	Для Каждого СтрокаДанных Из ИсходныеДанные Цикл
		
		Если КешДобавленных[СтрокаДанных.КодФИАС] <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаДанных = Новый Структура("КодФИАС, ДанныеАдреса, ПредставлениеАдреса", СтрокаДанных.КодФИАС);
		
		НоваяСтрокаДанных.ДанныеАдреса = РаботаСАдресами.АдресПоИдентификатору(СтрокаДанных.КодФИАС);
		
		Если НоваяСтрокаДанных.ДанныеАдреса <> Неопределено Тогда
			НоваяСтрокаДанных.ПредставлениеАдреса = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(
				НоваяСтрокаДанных.ДанныеАдреса);
		КонецЕсли;
		
		ВозвращаемоеЗначение.Добавить(НоваяСтрокаДанных);
		
		КешДобавленных[СтрокаДанных.КодФИАС] = НоваяСтрокаДанных;
		
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Процедура ЗаполнитьОрганизациюПараметровОбработкиПоКлючуСессии(ПараметрыОбработки)
	
	Если ЗначениеЗаполнено(ПараметрыОбработки.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыОбработки.ПроверкаПоТокенуРозничнойПродажи Тогда
		ПараметрыЗапроса = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыЗапросаКлючаСессииИСМПРозница();
	Иначе
		ПараметрыЗапроса = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыЗапросаКлючаСессии();
	КонецЕсли;
	
	ДанныеКлючаСессии = ИнтерфейсАвторизацииИСМПСлужебный.ПолучитьСохраненныеДанныеКлючаСессии(ПараметрыЗапроса.ИмяПараметраСеанса);
	ОрганизацииСИстекшимКлючем = Новый ТаблицаЗначений();
	ОрганизацииСИстекшимКлючем.Колонки.Добавить("Организация");
	ОрганизацииСИстекшимКлючем.Колонки.Добавить("ДействуетДо");
	
	Если ДанныеКлючаСессии <> Неопределено Тогда
		Для Каждого КлючИЗначение Из ДанныеКлючаСессии Цикл
			Организация          = КлючИЗначение.Ключ;
			ПараметрыКлючаСессии = КлючИЗначение.Значение;
			Если ПараметрыКлючаСессии.ДействуетДо > ТекущаяДатаСеанса() Тогда
				ПараметрыОбработки.Организация = Организация;
				Возврат;
			Иначе
				НоваяСтрока = ОрганизацииСИстекшимКлючем.Добавить();
				НоваяСтрока.Организация = Организация;
				НоваяСтрока.ДействуетДо = ПараметрыКлючаСессии.ДействуетДо;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СертификатыДляПодписания = ИнтерфейсАвторизацииИСМПСлужебный.СертификатыДляПодписанияНаСервере();
	
	Если СертификатыДляПодписания <> Неопределено
		И СертификатыДляПодписания.Сертификаты.Количество() Тогда
		ПараметрыОбработки.Организация = СертификатыДляПодписания.Сертификаты[0].Организация;
		Возврат;
	КонецЕсли;
	
	Если ОрганизацииСИстекшимКлючем.Количество() Тогда
		ОрганизацииСИстекшимКлючем.Сортировать("ДействуетДо убыв");
		ПараметрыОбработки.Организация = ОрганизацииСИстекшимКлючем[0].Организация;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
