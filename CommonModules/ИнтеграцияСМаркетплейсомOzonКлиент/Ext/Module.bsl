
#Область ПрограммныйИнтерфейс

// Вызывает диалог вопроса по очистке настроек авторизации.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма, из которой инициирована очистка настроек авторизации.
//
Процедура ОчисткаНастроекАвторизацииВопрос(Форма) Экспорт

	Оповещение = Новый ОписаниеОповещения("ОчиститьНастройкиЗавершение", Форма);
	ТекстВопроса = НСтр("ru = 'Настройки авторизации будут удалены, что приведет к невозможности управления продажами товаров текущей учетной записи.
			|Очистить настройки?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);

КонецПроцедуры

// Показывает состояние выполнения действия.
//
// Параметры:
//   Результат                - Структура - любая структура, ожидаются ключи "КодОшибки", "ОписаниеОшибки".
//   ДополнительныеПараметры  - см. ИнтеграцияСМаркетплейсомOzonКлиент.НовоеОписаниеПараметровДействия.
//   ВывестиСообщениеОбОшибке - Булево - признак вывода сообщения.
//
Процедура ВывестиСостояние(Результат, ДополнительныеПараметры, ВывестиСообщениеОбОшибке = Ложь) Экспорт

	ИнтеграцияСМаркетплейсамиКлиент.ВывестиСостояние(Результат, ДополнительныеПараметры, ВывестиСообщениеОбОшибке);

КонецПроцедуры

// Возвращает новую структуру с описанием параметров действия.
//
// Возвращаемое значение:
//   Структура из КлючИЗначение - структура с описанием параметров действия.
//
Функция НовоеОписаниеПараметровДействия() Экспорт

	Возврат ИнтеграцияСМаркетплейсамиКлиент.НовоеОписаниеПараметровДействия();

КонецФункции

// Открывает форму печати этикеток поставки на склады Ozon.
//
// Параметры:
//   ОписаниеКоманды - Структура - сведения о выполняемой команде.
// 
// Возвращаемое значение:
//   Неопределено
//
Функция ПечатьЭтикеток(ОписаниеКоманды) Экспорт
	
	ЭтоFBO = НЕ ИнтеграцияСМаркетплейсомOzonВызовСервера.ЕстьЗаказыFBSВМассиве(ОписаниеКоманды.ОбъектыПечати);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Объекты", ОписаниеКоманды.ОбъектыПечати); 
	ПараметрыОткрытия.Вставить("ЭтоFBO",  ЭтоFBO);
	
	ОткрытьФорму(
		"Обработка.УправлениеПродажамиНаOzon.Форма.ПечатьЭтикеток",
		ПараметрыОткрытия);
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КэшПодсистемы()

	Если ПараметрыПриложения = Неопределено Тогда
		ПараметрыПриложения = Новый Соответствие;
	КонецЕсли;

	ИмяПодсистемы = "Продажи.РаботаСOzon";
	Если ПараметрыПриложения[ИмяПодсистемы] = Неопределено Тогда
		ПараметрыПриложения.Вставить(ИмяПодсистемы, Новый Структура);
	КонецЕсли;

	Возврат ПараметрыПриложения[ИмяПодсистемы];

КонецФункции

Функция КэшКатегорий() Экспорт

	КэшПодсистемы = КэшПодсистемы();

	КэшКатегорий     = Неопределено;
	НаименованиеКэша = "КэшКатегорийOzon";

	КэшПодсистемы.Свойство(НаименованиеКэша, КэшКатегорий);

	Если КэшКатегорий = Неопределено Тогда
		КэшПодсистемы.Вставить(НаименованиеКэша, Новый Структура);
	КонецЕсли;

	Возврат КэшПодсистемы[НаименованиеКэша];

КонецФункции

// Возвращает данные из кэша категорий по запрашиваемому идентификатору.
//
// Параметры:
//   ИдентификаторДанных - Строка - идентификатор данных, начинается с "Категория_", "ХарактеристикаКатегории_",
//                           например: "Категория_100549328", "ХарактеристикаКатегории_8229".
//
// Возвращаемое значение:  
//   - Неопределено - при отсутствии данных в кэше для переданного идентификатора.
//   - Произвольный - данные, помещаемые в кэш для переданного идентификатора.
//
Функция ПолучитьДанныеИзКэшаКатегорий(ИдентификаторДанных) Экспорт

	КэшКатегорий = КэшКатегорий(); 

	ДанныеИзКэша = Неопределено;
	КэшКатегорий.Свойство(ИдентификаторДанных, ДанныеИзКэша); 

	Возврат ДанныеИзКэша;

КонецФункции

// Помещает данные в кэш категорий по переданному идентификатору.
//
// Параметры:
//   ДанныеКэша          - ТаблицаЗначений - данные, помещаемые в кэш для переданного идентификатора, см.
//                           ИнтеграцияСМаркетплейсомOzonСервер.НоваяТаблицаАтрибутовКатегорииМаркетплейса().
//   ИдентификаторДанных - Строка - идентификатор данных, начинается с "Категория_", "ХарактеристикаКатегории_",
//                           например: "Категория_100549328", "ХарактеристикаКатегории_8229".
//
Процедура СохранитьДанныеВКэшКатегорий(ДанныеКэша, ИдентификаторДанных) Экспорт

	КэшКатегорий = КэшКатегорий();
	КэшКатегорий.Вставить(ИдентификаторДанных, ДанныеКэша);

КонецПроцедуры

#КонецОбласти
