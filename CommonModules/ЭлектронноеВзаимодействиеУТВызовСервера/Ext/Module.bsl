
#Область ПрограммныйИнтерфейс

// Находит ссылку на объект ИБ по типу, ИД и дополнительным реквизитам.
// 
// Параметры:
//  ТипОбъекта - Строка - идентификатор типа объекта, который необходимо найти;
//  ИДОбъекта - Строка - идентификатор объекта заданного типа;
//  ДополнительныеРеквизиты - Структура - набор дополнительных полей объекта для поиска;
//
Функция НайтиСсылкуНаОбъект(ТипОбъекта,
							ИдОбъекта = "",
							ДополнительныеРеквизиты = Неопределено) Экспорт
							
	Результат = Неопределено;
	ЭлектронноеВзаимодействиеПереопределяемый.НайтиСсылкуНаОбъект(ТипОбъекта,
																	Результат,
																	ИдОбъекта,
																	ДополнительныеРеквизиты);
																	
	Возврат Результат 
	
КонецФункции

Функция ДанныеДляЗаполнения(НоменклатураКонтрагента) Экспорт
	
	ДанныеЗаполнения = ОбменСКонтрагентамиУТ.ДанныеДляЗаполнения(НоменклатураКонтрагента);
	Возврат ДанныеЗаполнения;
	
КонецФункции

// Для указанной номенклатуры функция возвращает единицу хранения.
//
// Параметры:
//	Номенклатура - СправочникСсылка.Номенклатура - номенклатура, для которой необходимо получить единицу хранения.
//
// Возвращаемое значение:
//	СправочникСсылка.УпаковкиЕдиницыИзмерения - единица хранения.
//
Функция ЕдиницаХраненияНоменклатуры(Знач Номенклатура) Экспорт
	
	Возврат Справочники.УпаковкиЕдиницыИзмерения.ЕдиницаХраненияНоменклатуры(Номенклатура);
	
КонецФункции

// Возвращает значение ФО.
// 
// Параметры:
//  НаименованиеФО - Строка - имя ФО, значение который необходимо получить.
//
// Возвращаемое значение:
//	Булево - значение функциональной опции.
//   
Функция ПолучитьЗначениеФО(НаименованиеФО) Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию(НаименованиеФО);
	
КонецФункции

// Формирует представление этапа госконтракта для отображения в формах документов.
// 
// Параметры:
//  Данные - Структура - данные для формирования представления:
// * НомерСтроки - Число.
// * ДатаНачала - Дата.
// * ДатаОкончания - Дата.
// 
// Возвращаемое значение:
//  Строка - Представление этапа
//
Функция СформироватьПредставлениеЭтапаГосконтракта(Данные) Экспорт
	
	Результат = ЭлектронноеАктированиеЕИСУТ.СформироватьПредставлениеЭтапаГосконтракта(Данные);
	
	Возврат Результат;
	
КонецФункции

// Предназначена для проверки наличия параметров ЭДО по ссылке на объект учета.
//
// Параметры:
//  Источник - ЛюбаяСсылка - документ или справочник источника.
// 
// Возвращаемое значение:
//  Соответствие - Результат проверки.
//
Функция ПроверитьНаличиеПараметровЭДПоИсточнику(Источник) Экспорт

	ПараметрыЭлектронногоДокумента = Новый ТаблицаЗначений;
	ПараметрыЭлектронногоДокумента.Колонки.Добавить("Тип");
	ПараметрыЭлектронногоДокумента.Колонки.Добавить("ФормированиеУниверсальногоДокумента");
	ПараметрыЭлектронногоДокумента.Колонки.Добавить("Направление");
	ПараметрыЭлектронногоДокумента.Колонки.Добавить("Организация", Метаданные.ОпределяемыеТипы.Организация.Тип);
	ПараметрыЭлектронногоДокумента.Колонки.Добавить("Контрагент", Метаданные.ОпределяемыеТипы.УчастникЭДО.Тип);
	ПараметрыЭлектронногоДокумента.Колонки.Добавить("ДоговорКонтрагента", Метаданные.ОпределяемыеТипы.ДоговорСКонтрагентомЭДО.Тип);

	ОбменСКонтрагентамиУТ.ЗаполнитьПараметрыЭДПоИсточнику(Источник, ПараметрыЭлектронногоДокумента);
	
	СтрокаНастроек = ПараметрыЭлектронногоДокумента[0];
	
	Результат = Новый Соответствие;
	
	Если ЗначениеЗаполнено(СтрокаНастроек.Тип) Тогда
		Результат.Вставить("ЕстьЭДО", Истина);
		Результат.Вставить("Направление", Строка(СтрокаНастроек.Направление));
	Иначе
		Результат.Вставить("ЕстьЭДО", Ложь);
		Результат.Вставить("Направление", Неопределено);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
