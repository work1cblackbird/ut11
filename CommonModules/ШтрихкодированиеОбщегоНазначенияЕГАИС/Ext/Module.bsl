
#Область ПрограммныйИнтерфейс

// Заполняет представления статусов, владельцев и прочую дополнительную информацию
//
// Параметры:
//  ДанныеПоШтрихкодам - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализацияДанныхПоШтрихкодам).
//  ПараметрыСканирования - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования).
Процедура ЗаполнитьПредставленияДанных(ДанныеПоШтрихкодам, ПараметрыСканирования) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Определяет по значению штрихкода принадлежность продукции к акцизной марке. Заполняет параметр ТипШтрихкода.
// 
// Параметры:
//  Штрихкод - Строка - Значение штрихкода.
//  ТипШтрихкода - Неопределено, ПеречислениеСсылка.ТипыШтрихкодов - Тип штрихкода.
// Возвращаемое значение:
//  Булево - Истина, если значение штрихкода является штрихкодом акцизной марки.
Функция ЭтоШтрихкодАкцизнойМарки(Штрихкод, ТипШтрихкода = Неопределено) Экспорт
	
	ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ЧекККМ;
	ТипШтрихкодМарки = ФабрикаXDTO.Тип(
		Перечисления.ВидыДокументовЕГАИС.ПространствоИмен(
			ВидДокумента, Перечисления.ФорматыОбменаЕГАИС.ПустаяСсылка()), "BK");
	
	Попытка
		ТипШтрихкодМарки.Проверить(Штрихкод);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Если СтрДлина(Штрихкод) = 150 Тогда
		ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	Иначе 
		ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает результат обработки штрихкода с описанием ошибки.
//
// Параметры:
//  ДанныеШтрихкода - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьДанныеШтрихкода).
// Возвращаемое значение:
//  Структура - (См. ИнициализироватьРезультатОбработкиШтрихкода).
Функция РезультатОбработкиШтрихкодаМаркируемойПродукцииПриОшибках(ДанныеШтрихкода) Экспорт
	
	РезультатДобавления = ИнициализироватьРезультатОбработкиШтрихкода(ДанныеШтрихкода);
	РезультатДобавления.Штрихкод        = ДанныеШтрихкода.Штрихкод;
	РезультатДобавления.ТипШтрихкода    = ДанныеШтрихкода.ТипШтрихкода;
	РезультатДобавления.ТекстОшибки     = ДанныеШтрихкода.ТекстОшибки;
	РезультатДобавления.ДанныеШтрихкода = ДанныеШтрихкода;
	
	Возврат РезультатДобавления;
	
КонецФункции

// Дополняет свойства структуры "Результат обработки штрихкода" - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьРезультатОбработкиШтрихкода)
//
// Параметры:
//  РезультатОбработкиШтрихкода - Структура - Описание:
// * Справки2 - Массив из СправочникСсылка.Справки2ЕГАИС - Структура с данными по справкам 2.
// * ТребуетсяВыборСправки2 - Булево - Истина, если необходимо открыть диалоговое окно с возможностью выбора справки 2.
// * АлкогольнаяПродукция - СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС - Элемент справочника.
//  ДанныеШтрихкода - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьДанныеШтрихкода).
//@skip-check doc-comment-type
//@skip-check doc-comment-field-type-strict
//@skip-check doc-comment-field-type
Процедура ДополнитьСвойстваРезультатаОбработкиШтрихкода(РезультатОбработкиШтрихкода, ДанныеШтрихкода = Неопределено) Экспорт
	
	РезультатОбработкиШтрихкода.Вставить("Справки2",               Новый Массив);
	РезультатОбработкиШтрихкода.Вставить("ТребуетсяВыборСправки2", Ложь);
	
	// Для вывода сообщения об ошибке.
	РезультатОбработкиШтрихкода.Вставить("АлкогольнаяПродукция", Неопределено);
	
	Если ЗначениеЗаполнено(ДанныеШтрихкода) И ДанныеШтрихкода.ВидПродукции = Перечисления.ВидыПродукцииИС.Алкогольная Тогда
		
		РезультатОбработкиШтрихкода.Штрихкод     = ДанныеШтрихкода.Штрихкод;
		РезультатОбработкиШтрихкода.ТипШтрихкода = ДанныеШтрихкода.ТипШтрихкода;
		
		Если ДанныеШтрихкода.Свойство("АлкогольнаяПродукция") Тогда
			РезультатОбработкиШтрихкода.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

// Формирует структуру, описывающую результат обработки штрихкода акцизной марки.
//
// Параметры:
//  ФормаУникальныйИдентификатор - ФормаКлиентскогоПриложения - Форма, для которой выполняется обработка штрихкода
//                               - Строка - Идентификатор формы
//  ДанныеШтрихкода - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьДанныеШтрихкода)
//  ПараметрыСканирования - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования)
// Возвращаемое значение:
//  Структура - содержит в себе информацию по результату обработки штрихкодов алкогольной продукции.
Функция РезультатОбработкиШтрихкодаМаркируемойПродукции(ФормаУникальныйИдентификатор, ДанныеШтрихкода, ПараметрыСканирования) Экспорт
	
	РезультатОбработкиШтрихкода = Неопределено;
	
	Если (ДанныеШтрихкода.ВидУпаковки <> Перечисления.ВидыУпаковокИС.Потребительская
		Или ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура))
		И ПараметрыСканирования.РасширеннаяВерсияГосИС Тогда
		МодульШтрихкодированиеЕГАИС = ОбщегоНазначения.ОбщийМодуль("ШтрихкодированиеЕГАИС");
		МодульШтрихкодированиеЕГАИС.СоздатьШтрихкодУпаковкиПоДаннымШтрихкода(ДанныеШтрихкода, ПараметрыСканирования);
	КонецЕсли;
	
	РасширеннаяОбработкаСохранениеШтрихкодаУпаковкиПоДаннымШтрихкодаМаркируемойПродукции(ДанныеШтрихкода, ПараметрыСканирования);
	
	Если ДанныеШтрихкода.ВидУпаковки = Перечисления.ВидыУпаковокИС.Потребительская
		Или ДанныеШтрихкода.ОбработатьБезМаркировки Тогда
		
		Если ТипЗнч(ФормаУникальныйИдентификатор) = Тип("ФормаКлиентскогоПриложения") Тогда
			УникальныйИдентификатор = ФормаУникальныйИдентификатор.УникальныйИдентификатор;
		Иначе
			УникальныйИдентификатор = ФормаУникальныйИдентификатор;
		КонецЕсли;
		
		РезультатОбработкиШтрихкода = РезультатОбработкиШтрихкодаАкцизнойМарки(ДанныеШтрихкода, ПараметрыСканирования, УникальныйИдентификатор);
		
		Если Не РезультатОбработкиШтрихкода.ТребуетсяВыборНоменклатуры
			И Не РезультатОбработкиШтрихкода.ТребуетсяУточнениеДанных Тогда
			
			РезультатОбработкиШтрихкода = ШтрихкодированиеОбщегоНазначенияИС.ОбработатьДанныеШтрихкода(ФормаУникальныйИдентификатор, ДанныеШтрихкода, ПараметрыСканирования);
			
		КонецЕсли;
		
	ИначеЕсли ДанныеШтрихкода.ВидУпаковки = Перечисления.ВидыУпаковокИС.АкцизнаяМаркаСНомеромИСерией Тогда
		
		РезультатОбработкиШтрихкода = РезультатОбработкиШтрихкодаСНомеромИСерией(ФормаУникальныйИдентификатор, ДанныеШтрихкода, ПараметрыСканирования);
		
	КонецЕсли;
	
	//@skip-check constructor-function-return-section
	Возврат РезультатОбработкиШтрихкода;
	
КонецФункции

// Получает базовую структуру "Результат обработки штрихкода" и дополняет ее свойствами, индивидуальными для алкогольной
// продукции.
//
// Параметры:
//  ДанныеШтрихкода - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьДанныеШтрихкода).
// Возвращаемое значение:
//  Структура - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьРезультатОбработкиШтрихкода)
//       и (См. ДополнитьСвойстваРезультатаОбработкиШтрихкода)
Функция ИнициализироватьРезультатОбработкиШтрихкода(ДанныеШтрихкода = Неопределено) Экспорт
	
	РезультатОбработкиШтрихкода = ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьРезультатОбработкиШтрихкода();
	ДополнитьСвойстваРезультатаОбработкиШтрихкода(РезультатОбработкиШтрихкода, ДанныеШтрихкода);
	РезультатОбработкиШтрихкода.ВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Алкогольная);
	
	//@skip-check constructor-function-return-section
	Возврат РезультатОбработкиШтрихкода;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует структуру, описывающую результат обработки штрихкода акцизной марки.
//
// Параметры:
//  ДанныеШтрихкода - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьДанныеШтрихкода).
//  ПараметрыСканирования - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования)
//  УникальныйИдентификатор - УникальныйИдентификатор - Уникальный идентификатор формы, во временное хранилище которой
//  надо поместить данные.
//  Форма - ФормаКлиентскогоПриложения - Форма, для которой выполняется обработка штрихкода.
//  МодульШтрихкодированиеЕГАИС - ОбщийМодуль, Неопределено - Модуль расширенной обработки
// Возвращаемое значение:
//  Структура - содержит в себе информацию по результату обработки штрихкодов обувной продукции.
Функция РезультатОбработкиШтрихкодаАкцизнойМарки(ДанныеШтрихкода, ПараметрыСканирования, УникальныйИдентификатор, МодульШтрихкодированиеЕГАИС = Неопределено) Экспорт
	
	РезультатОбработки = ИнициализироватьРезультатОбработкиШтрихкода(ДанныеШтрихкода);
	РезультатОбработки.ДанныеШтрихкода     = ДанныеШтрихкода;
	РезультатОбработки.АдресДереваУпаковок = ДанныеШтрихкода.АдресДереваУпаковок;
	РезультатОбработки.ТекстОшибки         = ДанныеШтрихкода.ТекстОшибки;
	
	РасширенныйРезультатОбработкиШтрихкодаАкцизнойМарки(РезультатОбработки, ДанныеШтрихкода, ПараметрыСканирования, УникальныйИдентификатор, МодульШтрихкодированиеЕГАИС);
	
	Возврат РезультатОбработки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура РасширенныйРезультатОбработкиШтрихкодаАкцизнойМарки(РезультатОбработки, ДанныеШтрихкода, ПараметрыСканирования, УникальныйИдентификатор, МодульШтрихкодированиеЕГАИС)
	
	Если ПараметрыСканирования.РасширеннаяВерсияГосИС Тогда
		
		//@skip-check wrong-string-literal-content
		Модуль = ОбщегоНазначения.ОбщийМодуль("ШтрихкодированиеЕГАИС");
		Модуль.РасширенныйРезультатОбработкиШтрихкодаАкцизнойМарки(РезультатОбработки, ДанныеШтрихкода, ПараметрыСканирования, УникальныйИдентификатор, МодульШтрихкодированиеЕГАИС);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасширеннаяОбработкаСохранениеШтрихкодаУпаковкиПоДаннымШтрихкодаМаркируемойПродукции(ДанныеШтрихкода, ПараметрыСканирования)
	
	Если ПараметрыСканирования.РасширеннаяВерсияГосИС Тогда
		
		//@skip-check wrong-string-literal-content
		Модуль = ОбщегоНазначения.ОбщийМодуль("ШтрихкодированиеЕГАИС");
		Модуль.СоздатьШтрихкодУпаковкиПоДаннымШтрихкода(ДанныеШтрихкода, ПараметрыСканирования);
		
	КонецЕсли;
	
КонецПроцедуры

// Результат обработки данных штрихкода акцизной марки с номером и серией.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, для которой происходит обработка штрихкодов.
//  ДанныеШтрихкода - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьДанныеШтрихкода).
//  ПараметрыСканирования - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования).
// Возвращаемое значение:
//  (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьРезультатОбработкиШтрихкода).
Функция РезультатОбработкиШтрихкодаСНомеромИСерией(Форма, ДанныеШтрихкода, ПараметрыСканирования)
	
	Если ПараметрыСканирования.РасширеннаяВерсияГосИС Тогда
		
		//@skip-check wrong-string-literal-content
		Модуль = ОбщегоНазначения.ОбщийМодуль("ШтрихкодированиеЕГАИС");
		Модуль.РезультатОбработкиШтрихкодаСНомеромИСерией(Форма, ДанныеШтрихкода, ПараметрыСканирования);
		
	Иначе
		РезультатДобавленияШтрихкодаВДокумент = ШтрихкодированиеОбщегоНазначенияИС.ОбработатьДанныеШтрихкода(Форма, ДанныеШтрихкода, ПараметрыСканирования); // ШК с номером и серией
	КонецЕсли;
	
	Возврат РезультатДобавленияШтрихкодаВДокумент;
	
КонецФункции

#КонецОбласти

