#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка - Текст заполнения
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

// Выполняет обработку документа "Бронирование" при выполнении события "ПередУдалением"
// 
// Параметры:
//  ДокументОбъект - ДокументОбъект.Бронирование - документ, который удаляется.
//  Отказ - Булево - признак отмены выполнения обработчика.
//
Процедура ПередУдалением(ДокументОбъект, Отказ) Экспорт

	//++ Локализация
	Если Не Отказ Тогда
		ОбновитьНомерПоследнегоЗапросаСмартвэй(ДокументОбъект);
	КонецЕсли;
	//-- Локализация
	
	Возврат;

КонецПроцедуры

#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация


Процедура ОбновитьНомерПоследнегоЗапросаСмартвэй(ДокументОбъект)

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьИнтеграциюСоСмартвей") Тогда
		Возврат;
	КонецЕсли;
	
	МинимальнаяВерсияОпераций = МинимальнаяВерсияБронирования(ДокументОбъект);
	
	Если МинимальнаяВерсияОпераций <> 0 Тогда
		
		НомерВерсии = Константы.ВерсияДанныхСмартвей.Получить();
		
		Если НомерВерсии > МинимальнаяВерсияОпераций Тогда
			Константы.ВерсияДанныхСмартвей.Установить(МинимальнаяВерсияОпераций);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Функция МинимальнаяВерсияБронирования(ДокументОбъект)
	
	Версия = 0;
	
	КопияОперации = ДокументОбъект.Операции.Выгрузить();
	КопияОперации.Сортировать("ИдентификаторВерсииСмартвей Убыв");
	
	Если КопияОперации.Количество() <> 0 Тогда
		Версия = КопияОперации.Получить(0).ИдентификаторВерсииСмартвей;
	КонецЕсли;
	
	Возврат Версия;
	
КонецФункции

//-- Локализация

#КонецОбласти
