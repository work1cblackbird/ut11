///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Описание подключения внешней компоненты (FECNSPK).
//
// Возвращаемое значение:
//  Структура:
//   * ПолноеИмяМакета - Строка
//   * ИмяОбъекта      - Строка
//
Функция ОписаниеКомпоненты() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ИмяОбъекта", "FECNSPK");
	Параметры.Вставить("ПолноеИмяМакета", "ОбщийМакет.КомпонентаИнтеграцииНСПК");
	Возврат Параметры;               
	
КонецФункции

// Пустая структура для выполнения операции взаимодействия с сервером НСПК
// 
// Возвращаемое значение:
//   Структура:
//   * АдресСервера - Строка - Endpoint
//   * КлючДоступа - Строка - APIKey
//   * КлючКассы - Строка - MACKey                               
//   * ПроверятьКорневыеСертификаты - Булево - Проверка корневого сертификата сервера НСПК
//   * ИдентификаторЗапроса - Строка - Уникальный идентификатор запроса (нужно генерировать на прикладном коде в формате uuid).
//   * ИдентификаторКассы - Строка - Идентификатор кассы.
//   * ХешНомерКарты - Строка - Хешированный PAN карты.   
//   * СсылкаНаПлатежныйСчет - Строка - Payment Account Reference, Уникальный идентификатор для токенезированных (виртуальных) карт  связанный с PAN конкретного держателя карты.  
//   * ИдентификаторКорзины - Строка - Идентификатор корзины.
//   * ТоварныеПозиции - Массив - Структур - ПараметрыТоварнойПозиции() 
//   * КодТовараТРУ - Строка - Полный код товара, согласованный с перечнем ТРУ     
//   * НомерФискальногоНакопителя - Строка - Заводской номер фискального накопителя
//   * ФискальныйТипРасчета - Перечисление.ТипыРасчетаДенежнымиСредствами - Признак расчета
//   * ФискальныйПризнакЧека - Строка - Фискальный признак документа
//   * ФискальныйЧекНомер - Число - Порядковый номер фискального документа
//   * ФискальныйЧекДатаВремя - ДатаВремя - Дата и время осуществления расчета
//   * ФискальныйЧекСумма - Число - Сумма расчета
//   * ФискальныйМестоРасчетов - Строка - Место расчетов 
//   * QRКодЧекаККТ - Строка - QR код чека ККТ 
//   * ОснованиеФискальнойОперации - Ссылка - ОснованиеФискальнойОперацииБПО
//
Функция ПараметрыОперацииНСПК() Экспорт
	
	Параметры = Новый Структура();
	
	Параметры.Вставить("АдресСервера"); // Endpoint
	Параметры.Вставить("КлючДоступа");  // APIKey
	Параметры.Вставить("КлючКассы");    // MACKey
	Параметры.Вставить("ПроверятьКорневыеСертификаты", Истина); // Булево - Проверка корневого сертификата сервера НСПК
	Параметры.Вставить("ИдентификаторЗапроса"); // Строка - Уникальный идентификатор запроса (нужно генерировать на прикладном коде в формате uuid).
	Параметры.Вставить("ИдентификаторКассы"); // Строка - Идентификатор кассы.
	Параметры.Вставить("ХешНомерКарты"); // Строка - Хешированный PAN карты.   
	Параметры.Вставить("СсылкаНаПлатежныйСчет", ""); // Строка - Payment Account Reference, Уникальный идентификатор для токенезированных (виртуальных) карт  связанный с PAN конкретного держателя карты.  

	Параметры.Вставить("ИдентификаторКорзины"); // Строка - Идентификатор корзины.
	Параметры.Вставить("ТоварныеПозиции", Новый Массив()); // Массив - Структур - ПараметрыТоварнойПозиции() 
	Параметры.Вставить("КодТовараТРУ"); // Строка - Полный код товара, согласованный с перечнем ТРУ
	
	Параметры.Вставить("НомерФискальногоНакопителя"); // Строка - Заводской номер фискального накопителя
	Параметры.Вставить("ФискальныйТипРасчета", ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств")); // Перечисление.ТипыРасчетаДенежнымиСредствами - Признак расчета
	Параметры.Вставить("ФискальныйПризнакЧека"); // Строка - Фискальный признак документа
	Параметры.Вставить("ФискальныйЧекНомер"); // Число - Порядковый номер фискального документа
	Параметры.Вставить("ФискальныйЧекДатаВремя"); // ДатаВремя - Дата и время осуществления расчета
	Параметры.Вставить("ФискальныйЧекСумма"); // Число - Сумма расчета
	Параметры.Вставить("ФискальныйМестоРасчетов"); // Строка - Место расчетов 
	
	Параметры.Вставить("QRКодЧекаККТ"); // Строка - QR код чека ККТ 
	Параметры.Вставить("ОснованиеФискальнойОперации"); // Ссылка - ОснованиеФискальнойОперацииБПО
	
	Возврат Параметры; 
	
КонецФункции

// Пустая структура для параметров товарной позиции
// 
// Возвращаемое значение:
//   Структура:
//   * НомерПозиции - Строка - Порядковый номер позиции в корзине начиная с 1
//   * Артикул - Строка - Артикул товара
//   * КодТовараТРУ - Строка - Полный код товара, согласованный с перечнем ТРУ
//   * Количество - Число - Количество единиц товара
//   * Цена - Число - Цена за единицу товара в рублях
//   * Сертификаты - Массив из см.ЭлектронныеСертификатыНСПК.ПараметрыСертификата
//
Функция ПараметрыТоварнойПозиции() Экспорт
	
	Параметры = Новый Структура();
	Параметры.Вставить("НомерПозиции"); // Строка - Порядковый номер позиции в корзине начиная с 1
	Параметры.Вставить("НомерПозицииВозврата"); // Строка - Порядковый номер позиции в корзине покупки, которая содержит возвращаемый товар
	Параметры.Вставить("Артикул");      // Строка - Артикул товара
	Параметры.Вставить("КодТовараТРУ"); // Строка - Полный код товара, согласованный с перечнем ТРУ
	Параметры.Вставить("Количество");   // Число - Количество единиц товара
	Параметры.Вставить("Цена");         // Число - Цена за единицу товара в рублях
	Параметры.Вставить("Сертификаты", Новый Массив()); // Сертификаты
	Возврат Параметры; 
	
КонецФункции

// Пустая структура для параметров товарной позиции
// 
// Возвращаемое значение:
//   Структура:
//   * КодТовараТРУ - Строка - Полный код товара, согласованный с перечнем ТРУ
//   * БалансКоличество - Число - Доступное количество
//   * БалансДенежныхСредств - Число - Баланс денежных средств
//   * ЛимитДенежныхСредств - Число - Лимит денежных средств
//
Функция ПараметрыДоступногоКодТовараТРУ() Экспорт
	
	Параметры = Новый Структура(); 
	Параметры.Вставить("КодТовараТРУ"); // Строка - Полный код товара, согласованный с перечнем ТРУ
	Параметры.Вставить("БалансКоличество"); // Число - Доступное количество
	Параметры.Вставить("БалансДенежныхСредств"); // Число - Баланс денежных средств
	Параметры.Вставить("ЛимитДенежныхСредств"); // Число - Лимит денежных средств
	Возврат Параметры; 
	
КонецФункции

// Пустая структура для параметров доступного сертификата
// 
// Возвращаемое значение:
//   Структура:     
//   * БалансКоличество - Число - Доступное количество
//   * БалансДенежныхСредств - Число - Баланс денежных средств
//   * Идентификатор - Строка - Идентификатор сертификата
//   * Комментарий - Строка - Комментарий
//   * ДатаНачалаДействия - ДатаВремя - Дата начала действия
//   * ДатаЗавершенияДействия - ДатаВремя - Дата завершения действия
//   * ЛимитДенежныхСредств - Число - Лимит денежных средств
//   * Тип - Строка - Тип сертификата
//   * КодыТоваровТРУ - Массив - Доступные для сертификата коды товаров ТРУ 
//
Функция ПараметрыДоступногоСертификата() Экспорт
	
	Параметры = Новый Структура();                   
	Параметры.Вставить("БалансКоличество"); // Число - Доступное количество
	Параметры.Вставить("БалансДенежныхСредств"); // Число - Баланс денежных средств
	Параметры.Вставить("Идентификатор"); // Строка - Идентификатор сертификата
	Параметры.Вставить("Комментарий"); // Строка - Комментарий
	Параметры.Вставить("ДатаНачалаДействия"); // ДатаВремя - Дата начала действия
	Параметры.Вставить("ДатаЗавершенияДействия"); // ДатаВремя - Дата завершения действия
	Параметры.Вставить("ЛимитДенежныхСредств"); // Число - Лимит денежных средств
	Параметры.Вставить("Тип"); // Строка - Тип сертификата
	Параметры.Вставить("КодыТоваровТРУ", Новый Массив()); // Массив - Доступные для сертификата коды товаров ТРУ 
	Возврат Параметры; 
	
КонецФункции  

// Пустая структура параметров сертификата
// 
// Возвращаемое значение:
//   Структура:
//   * Идентификатор - Строка - Идентификатор сертификата
//   * Количество - Число - Количество
//   * Цена - Число - Цена 
//   * МаксимальнаяЦена - Число - Максимальная цена
//
Функция ПараметрыСертификата() Экспорт
	
	Параметры = Новый Структура();
	Параметры.Вставить("Идентификатор");    // Идентификатор
	Параметры.Вставить("Количество");       // Количество
	Параметры.Вставить("Цена");             // Цена 
	Параметры.Вставить("МаксимальнаяЦена"); // Максимальная цена
	Возврат Параметры; 
	
КонецФункции  

// Пустая структура параметров идентификаторов корзин покупок ТСП
// 
// Возвращаемое значение:
//   Структура:
//   * ИдентификаторКорзины - Строка - Идентификатор сертификата
//   * ДатаАвторизации - ДатаВремя - Дата авторизации
//
Функция ПараметрыИдентификаторовКорзинПокупокТСП() Экспорт
	
	Параметры = Новый Структура();
	Параметры.Вставить("ИдентификаторКорзины");  // Идентификатор корзины
	Параметры.Вставить("ДатаАвторизации");       // Дата авторизации
	Возврат Параметры; 
	
КонецФункции  

// Результат выполнения операции взаимодействия с сервером НСПК
//
// Параметры:
//   Результат - Булево.
//   ОписаниеОшибки - Строка.
//
// Возвращаемое значение:
//   Структура:
//   * Результат - Булево.
//   * КодРезультата - Число.
//   * ОписаниеОшибки - Строка.
//   * ТоварныеПозиции - Массив.
//   * ИдентификаторКорзины - Число.
//   * СуммаСертификатами - Число.
//
Функция ПараметрыВыполненияОперации(Результат = Ложь, ОписаниеОшибки = Неопределено) Экспорт
	
	РезультатВыполнения = Новый Структура();
	РезультатВыполнения.Вставить("Результат"     , Результат);
	РезультатВыполнения.Вставить("КодРезультата" , 999);
	РезультатВыполнения.Вставить("ОписаниеОшибки", ОписаниеОшибки);
	РезультатВыполнения.Вставить("ТоварныеПозиции", Новый Массив());   
	РезультатВыполнения.Вставить("ДоступныеСертификаты", Новый Массив());   
	РезультатВыполнения.Вставить("ИдентификаторКорзины");
	РезультатВыполнения.Вставить("СуммаСертификатами", 0); 
	РезультатВыполнения.Вставить("ИдентификаторыКорзинПокупок", Новый Массив());  
	
	Возврат РезультатВыполнения;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьJSONТоварныеПозиции(ТоварныеПозиции) Экспорт
	
	#Если ВебКлиент Тогда
	Возврат ЭлектронныеСертификатыНСПКВызовСервера.ПолучитьJSONТоварныеПозиции(ТоварныеПозиции);
	#Иначе
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.ПроверятьСтруктуру = Ложь;
	ЗаписьJSON.УстановитьСтроку();  
	Позиции = Новый Массив();
	Для Каждого Позиция Из ТоварныеПозиции Цикл
		Товар = Новый Структура();
		Товар.Вставить("articleNumber", Позиция.НомерПозиции);
		Если Позиция.Свойство("Артикул") Тогда
			Товар.Вставить("articleCode", Позиция.Артикул);
		КонецЕсли;
		Если Позиция.Свойство("НомерПозицииВозврата") Тогда
			Товар.Вставить("originalArticleNumber", Позиция.НомерПозицииВозврата);
		КонецЕсли;
		Товар.Вставить("truCode", Позиция.КодТовараТРУ);
		Товар.Вставить("count"  , Позиция.Количество);
		Товар.Вставить("price"  , Позиция.Цена * 100); // Цена за единицу товара в копейках
		Позиции.Добавить(Товар);
	КонецЦикла;
	ЗаписатьJSON(ЗаписьJSON, Позиции);
	Результат = ЗаписьJSON.Закрыть();
	
	Возврат Результат;
	#КонецЕсли
	
КонецФункции

Функция ПараметрыВыполненияОперацииНаСервере() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ТекстРезультата", "");
	Результат.Вставить("СписокОшибок", "");
	Результат.Вставить("ОснованиеФискальнойОперации", Неопределено);
	Результат.Вставить("ПараметрыОперации"); // Структура
	Результат.Вставить("ТипПлатежнойОперации", ""); 
	
	Возврат Результат;
	
КонецФункции

Функция ТипПлатежнойОперацииПредварительноеОдобрениеИспользованияЭС() Экспорт
	
	Возврат "ПредварительноеОдобрениеИспользованияЭС"; // Не локализовывать    
	
КонецФункции

Функция ТипПлатежнойОперацииПредварительноеОдобрениеВозвратаЭС() Экспорт
	
	Возврат "ПредварительноеОдобрениеВозвратаЭС"; // Не локализовывать   
	
КонецФункции

Функция ТипПлатежнойОперацииПередачаДанныхФискальногоЧека() Экспорт
	Возврат "ПередачаДанныхФискальногоЧека";
КонецФункции

Функция ТипПлатежнойОперацииПолучениеИдентификатораОперации() Экспорт
	
	Возврат "ПолучениеИдентификатораОперации"; // Не локализовывать
	
КонецФункции

Функция ТипПлатежнойОперацииПолучениеСоставаКорзины() Экспорт
	
	Возврат "ПолучениеСоставаКорзины"; // Не локализовывать  
	
КонецФункции

Функция ТипПлатежнойОперацииПолучениеСпискаСертификатов() Экспорт
	
	Возврат "ПолучениеСпискаСертификатов"; // Не локализовывать  
	
КонецФункции     

Функция ТипПлатежнойОперацииПолучениеСпискаИдентификаторовКорзинПокупокТСП() Экспорт
	
	Возврат "ПолучениеСпискаИдентификаторовКорзинПокупокТСП"; // Не локализовывать  
	
КонецФункции  

#КонецОбласти
