#Область ПрограммныйИнтерфейс

#Область ПроцедурыИФункцииОбработкиНаСервереСобытийОтМобильногоПриложения

// Получает мобильное приложение, хранимое в ИБ.
//
// Параметры:
//  ИмяПользователя - Строка - имя пользователя, для которого требуется получить приложение.
//  КодМобильногоКомпьютера - Строка - код компьютера, для которого требуется получить приложение.
//  ПараметрыОбменаДанными - Строка - xml-строка, содержащая параметры обмена данными.
//
// Возвращаемое значение:
//  Строка - мобильное приложение в виде кодированной строки.
//
Функция ПолучитьПриложение(ИмяПользователя, КодМобильногоКомпьютера, ПараметрыОбменаДанными = "") Экспорт
	
	МенеджерМобильныхПриложений = Обработки.МенеджерМобильныхПриложений.Создать();
	Возврат МенеджерМобильныхПриложений.ПолучитьМобильноеПриложение(ИмяПользователя, КодМобильногоКомпьютера, ПараметрыОбменаДанными);
	
КонецФункции

// Возвращает данные, выбранные из ИБ в соответствии с заданной для пользователя схемой обмена.
//
// Параметры:
//  ИмяПользователя - Строка - имя пользователя мобильного приложения, для которого требуется получить данные ИБ.
//  КодМобильногоКомпьютера - Строка - код мобильного компьютера, для которого запрашиваются данные.
//  НачальнаяИнициализацияИБ - Булево - признак, указывающий на то, что производится начальная инициализация мобильной ИБ.
//  ПараметрыОбменаДанными - Строка - XMl-строка параметров, определенных в мобильном приложении.
//   
// Возвращаемое значение:
//  Строка - данные ИБ в виде строки.
//
Функция ПолучитьДанные(ИмяПользователя, КодМобильногоКомпьютера, Знач НачальнаяИнициализацияИБ = Ложь, ПараметрыОбменаДанными = "") Экспорт
	
	МенеджерМобильныхПриложений = Обработки.МенеджерМобильныхПриложений.Создать();
	Возврат МенеджерМобильныхПриложений.ПолучитьДанные(ИмяПользователя, КодМобильногоКомпьютера, НачальнаяИнициализацияИБ, ПараметрыОбменаДанными);
	
КонецФункции

// Выполняет запись данных, полученных от мобильного приложения, в текущую ИБ.
//
// Параметры:
//  ИмяПользователя - Строка - имя пользователя мобильного приложения, чьи данные необходимо записать.
//  КодМобильногоКомпьютера - Строка - код мобильного компьютера, от которого получены данные.
//  ДанныеМобильногоПриложения - Строка - строка, содержащая сериализованные в XML данные, полученные от мобильного приложения.
//  ПараметрыОбменаДанными - Строка - XMl-строка параметров, определенных в мобильном приложении.
//
Процедура ЗаписатьДанные(ИмяПользователя, КодМобильногоКомпьютера, ДанныеМобильногоПриложения, ПараметрыОбменаДанными = "") Экспорт
	
	МенеджерМобильныхПриложений = Обработки.МенеджерМобильныхПриложений.Создать();
	МенеджерМобильныхПриложений.ЗаписатьДанные(ИмяПользователя, КодМобильногоКомпьютера, ДанныеМобильногоПриложения, ПараметрыОбменаДанными);
	
КонецПроцедуры

// Осуществляет отражение в ИБ факта получения данных мобильным клиентом.
//
// Параметры:
//  ИмяПользователя - Строка - имя пользователя мобильного приложения, получение данных которого нужно зарегистрировать.
//  КодМобильногоКомпьютера - Строка - код мобильного компьютера, получение данных от которого нужно зарегистрировать.
//  ПараметрыОбменаДанными - Строка - XMl-строка параметров, определенных в мобильном приложении.
//
Процедура ЗарегистрироватьПолучениеДанных(ИмяПользователя, КодМобильногоКомпьютера, ПараметрыОбменаДанными = "") Экспорт
	
	МенеджерМобильныхПриложений = Обработки.МенеджерМобильныхПриложений.Создать();
	МенеджерМобильныхПриложений.ЗарегистрироватьПолучениеДанных(ИмяПользователя, КодМобильногоКомпьютера, ПараметрыОбменаДанными);
	
КонецПроцедуры

// Выполняет аутентификацию мобильного пользователя.
//
// Параметры:
//  ИмяПользователя - Строка - имя пользователя мобильного приложения, получение данных которого нужно зарегистрировать.
//  КодМобильногоКомпьютера - Строка - код мобильного компьютера, аутентификация которого выполняется.
//  ПарольПользователя - Строка - пароль мобильного пользователя.
//   
// Возвращаемое значение:
//  Булево - результат аутентификации: Истина - аутентификация выполнена, Ложь - аутентификация не выполнена.
//
Функция АутентификацияВыполнена(ИмяПользователя, КодМобильногоКомпьютера, ПарольПользователя) Экспорт
	
	МенеджерМобильныхПриложений = Обработки.МенеджерМобильныхПриложений.Создать();
	Возврат МенеджерМобильныхПриложений.ВыполнитьАутентификацию(ИмяПользователя, КодМобильногоКомпьютера, ПарольПользователя);
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииРаботыСНастройкамиИПараметрамиОбмена

// Получает настройки пользователя.
//
// Возвращаемое значение:
//  Произвольный - настройки пользователя.
//
Функция ПолучитьНастройкиРаботыПользователяСКомпонентойОбменаДанными() Экспорт
	
	Настройки = Новый СписокЗначений();
	
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		
		СписокНастроек = ХранилищеОбщихНастроек.ПолучитьСписок("НастройкиРаботыПользователяСКомпонентойОбменаДанными");
		
		Для Каждого Элемент Из СписокНастроек Цикл
			КлючНастройки = Элемент.Значение;
			ЗначениеНастройки = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыПользователяСКомпонентойОбменаДанными", КлючНастройки);
			Если ЗначениеНастройки <> Неопределено Тогда
				Настройки.Добавить(ЗначениеНастройки, КлючНастройки);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

#КонецОбласти

#КонецОбласти
