#Область ПрограммныйИнтерфейс

// Процедура вызывается при выборе номенклатуры в документе 
// Уведомление об остатках прослеживаемых товаров
// 
// Параметры:
// 
// ДанныеСтрокиТаблицы - Структура - данные которые заполняются с текущей строки таблицы товаров 
//          * Номенклатура - СправочникСсылка.Номенклатура - Номеклатура
//          * ЕдиницаИзмерения - ОпределяемыйТип.ЕдиницаИзмерения -  Единица измерения
//          * Количество - Число - Количество
//          * КодОКПД2 - СправочникСсылка.КлассификаторОКПД2 - ОКПД2
//          * ЕдиницаИзмеренияПрослеживаемости - ОпределяемыйТип.ЕдиницаИзмерения - Единица измерения прослеживаемости
//          * КоличествоПрослеживаемости - Число -Количество по прослеживаемости
//          * Сумма - Число - Сумма
// 
Процедура ДанныеСтрокиТаблицыТоварыУведомленияОбОстатках(ДанныеСтрокиТаблицы) Экспорт
	
	Возврат ;
	
КонецПроцедуры

// Процедура вызывается при выборе номенклатуры в документе 
// Уведомление об остатках прослеживаемых товаров
// 
// Параметры:
// 
// ДанныеОбъекта - Структура - данные, которые заполняются с шапки объекта 
//         * КодТНВЭД - СправочникСсылка.КлассификаторТНВЭД - Код ТНВЭД
// 
Процедура ДанныеОбъектаУведомленияОбОСтатках(ДанныеОбъекта) Экспорт
	
	Возврат ;
	
КонецПроцедуры

// Процедура вызывается при выборе сопроводительного документа в табличной части Товары
// Уведомление о перемещении прослеживаемых товаров
// 
// Параметры:
// 
// Форма - ФормаКлиентскогоПриложения - Форма объекта
// ТекущиеДанные - ДанныеФормыЭлементКоллекции - Текущие данные таблицы Контрагенты 
// 
Процедура ОткрытьФормуПодбораСопроводительногоДокумента(Форма, ТекущиеДанные) Экспорт
	
	СписокТиповДокументов = Новый СписокЗначений;
	СписокТиповДокументов.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));
	СписокТиповДокументов.Добавить(Тип("ДокументСсылка.РеализацияУслугПрочихАктивов"));
	
	Параметры = Новый Структура;
	Параметры.Вставить("Форма", Форма);
	Параметры.Вставить("Организация", Форма.Объект.Организация);
	Параметры.Вставить("Контрагент", ТекущиеДанные.Контрагент);
	
	СписокТиповДокументов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ОткрытьФормуПодбораСопроводительногоДокументаЗавершение", ЭтотОбъект, Параметры));
	
КонецПроцедуры

Процедура ОткрытьФормуПодбораСопроводительногоДокументаЗавершение(ТипДокумента, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	
	СтруктураОтбора = Новый Структура("Организация, Контрагент");
	ЗаполнитьЗначенияСвойств(СтруктураОтбора, ДополнительныеПараметры);
	
	Если ТипДокумента.Значение = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
		ОткрытьФорму("Документ.РеализацияУслугПрочихАктивов.Форма.ФормаВыбора", Новый Структура("Отбор", СтруктураОтбора), Форма);
	Иначе
		ОткрытьФорму("Документ.РеализацияТоваровУслуг.Форма.ФормаВыбора", Новый Структура("Отбор", СтруктураОтбора), Форма);
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет печать документов: УведомлениеОбОстаткахПрослеживаемыхТоваров,
// УведомлениеОВвозеПрослеживаемыхТоваров, УведомлениеОПеремещенииПрослеживаемыхТоваров 
// из формы 1С-отчетность вкладка отчеты
// 
// Параметры:
// Ссылка - ДокументСсылка - Ссылка на документ уведомления 
// СтандартнаяОбработка - Булево - признак стандартной обработки
// 
Процедура ПечатьРегламентированногоОтчета(Ссылка, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Процедура открывает форму выбора первичного документа
// 
// Параметры:
// 
// Форма - ФормаКлиентскогоПриложения - Форма объекта
//
Процедура ПервичныйДокументНачалоВыбораУведомлениеОбОстатках(ВидОперации, Форма) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыбратьТипПервичногоДокументаЗавершение(ВыбранныйЭлемент, ДопПараметры) Экспорт
	
КонецПроцедуры


Функция ПолучитьЗаголовокПечатнойФормы(ОбъектыПечати) Экспорт
	
	Возврат ОбщегоНазначенияБПКлиент.ПолучитьЗаголовокПечатнойФормы(ОбъектыПечати);
	
КонецФункции

#КонецОбласти
