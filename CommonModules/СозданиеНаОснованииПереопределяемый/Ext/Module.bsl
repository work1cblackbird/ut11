///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Переопределяет настройки команд ввода на основании.
//
// Параметры:
//  Настройки - Структура:
//   * ИспользоватьКомандыВводаНаОсновании - Булево - разрешает использование программных команд ввода на основании
//                                                    вместо штатных. Значение по умолчанию: Истина.
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
КонецПроцедуры

// Определяет список объектов конфигурации, в модулях менеджеров которых предусмотрена процедура 
// ДобавитьКомандыСозданияНаОсновании, формирующая команды создания на основании объектов.
// Синтаксис процедуры ДобавитьКомандыСозданияНаОсновании см. в документации.
//
// Параметры:
//   Объекты - Массив - объекты метаданных (ОбъектМетаданных) с командами создания на основании.
//
// Пример:
//  Объекты.Добавить(Метаданные.Справочники.Организации);
//
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт
	
	//++ НЕ ГОСИС
	
	ТМЦВЭксплуатацииСервер.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты);
	
	
	
	
	
	// СлужебныеПодсистемы.ОбъектыУТКАУП
	Объекты.Добавить(Метаданные.Документы.ВыкупПринятыхНаХранениеТоваров);
	Объекты.Добавить(Метаданные.Документы.ВыкупТоваровХранителем);
	Объекты.Добавить(Метаданные.Документы.ОтгрузкаТоваровСХранения);
	Объекты.Добавить(Метаданные.Документы.ПередачаТоваровХранителю);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеТоваровОтХранителя);
	Объекты.Добавить(Метаданные.Документы.ПриемкаТоваровНаХранение);
	Объекты.Добавить(Метаданные.Документы.ОтчетОСписанииТоваровУХранителя);
	Объекты.Добавить(Метаданные.Документы.ОприходованиеИзлишковТоваровУХранителя);
	Объекты.Добавить(Метаданные.Документы.ОтчетОСписанииТоваровСХранения);
	Объекты.Добавить(Метаданные.Документы.ПересортицаТоваровУХранителя);
	Объекты.Добавить(Метаданные.Документы.ПорчаТоваровУХранителя);
	Объекты.Добавить(Метаданные.Документы.АвансовыйОтчет);
	Объекты.Добавить(Метаданные.Документы.АктВыполненныхРабот);
	Объекты.Добавить(Метаданные.Документы.АктОРасхожденияхПослеОтгрузки);
	Объекты.Добавить(Метаданные.Документы.АктОРасхожденияхПослеПеремещения);
	Объекты.Добавить(Метаданные.Документы.АктОРасхожденияхПослеПриемки);
	Объекты.Добавить(Метаданные.Документы.АннулированиеПодарочныхСертификатов);
	Объекты.Добавить(Метаданные.Документы.ВводОстатков);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковВзаиморасчетов);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковОПродажахЗаПрошлыеПериоды);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковПоФинансовымИнструментам);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковПрочиеРасходы);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковПрочихАктивовПассивов);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковРасчетовПоЭквайрингу);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковСПодотчетниками);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковТоваров);
	Объекты.Добавить(Метаданные.Документы.ВзаимозачетЗадолженности);
	Объекты.Добавить(Метаданные.Документы.ВнутреннееПотребление);
	Объекты.Добавить(Метаданные.Документы.ВозвратТоваровМеждуОрганизациями);
	Объекты.Добавить(Метаданные.Документы.ВозвратТоваровОтКлиента);
	Объекты.Добавить(Метаданные.Документы.ВозвратТоваровПоставщику);
	Объекты.Добавить(Метаданные.Документы.ВнесениеДенежныхСредствВКассуККМ);
	Объекты.Добавить(Метаданные.Документы.ВозвратПодарочныхСертификатов);
	Объекты.Добавить(Метаданные.Документы.ВыемкаДенежныхСредствИзКассыККМ);
	Объекты.Добавить(Метаданные.Документы.ВыкупВозвратнойТарыКлиентом);
	Объекты.Добавить(Метаданные.Документы.ВыкупВозвратнойТарыУПоставщика);
	Объекты.Добавить(Метаданные.Документы.ДвижениеПрочихАктивовПассивов);
	Объекты.Добавить(Метаданные.Документы.ДоверенностьВыданная);
	Объекты.Добавить(Метаданные.Документы.ЗаданиеНаПеревозку);
	Объекты.Добавить(Метаданные.Документы.ЗаданиеТорговомуПредставителю);
	Объекты.Добавить(Метаданные.Документы.ЗаказКлиента);
	Объекты.Добавить(Метаданные.Документы.ЗаказНаВнутреннееПотребление);
	Объекты.Добавить(Метаданные.Документы.ЗаказНаПеремещение);
	Объекты.Добавить(Метаданные.Документы.ЗаказНаСборку);
	Объекты.Добавить(Метаданные.Документы.ЗаказПоставщику);
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента);
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаКомандировку);
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.ИзменениеАссортимента);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризационнаяОпись);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияНаличныхДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.КоммерческоеПредложениеКлиенту);
	Объекты.Добавить(Метаданные.Документы.КорректировкаЗадолженности);
	Объекты.Добавить(Метаданные.Документы.КорректировкаЗадолженностиПоФинансовымИнструментам);
	Объекты.Добавить(Метаданные.Документы.КорректировкаИзлишковНедостачПоТоварнымМестам);
	Объекты.Добавить(Метаданные.Документы.КорректировкаНазначенияТоваров);
	Объекты.Добавить(Метаданные.Документы.КорректировкаПоОрдеруНаТовары);
	Объекты.Добавить(Метаданные.Документы.КорректировкаПриобретения);
	Объекты.Добавить(Метаданные.Документы.КорректировкаРеализации);
	Объекты.Добавить(Метаданные.Документы.КорректировкаРегистров);
	Объекты.Добавить(Метаданные.Документы.ЛимитыРасходаДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.НачислениеИСписаниеБонусныхБаллов);
	Объекты.Добавить(Метаданные.Документы.НачисленияКредитовИДепозитов);
	Объекты.Добавить(Метаданные.Документы.НормативРаспределенияПлановПродажПоКатегориям);
	Объекты.Добавить(Метаданные.Документы.ОжидаемоеПоступлениеДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.ОперацияПоПлатежнойКарте);
	Объекты.Добавить(Метаданные.Документы.ОприходованиеИзлишковТоваров);
	Объекты.Добавить(Метаданные.Документы.ОрдерНаОтражениеИзлишковТоваров);
	Объекты.Добавить(Метаданные.Документы.ОрдерНаОтражениеНедостачТоваров);
	Объекты.Добавить(Метаданные.Документы.ОрдерНаОтражениеПересортицыТоваров);
	Объекты.Добавить(Метаданные.Документы.ОрдерНаОтражениеПорчиТоваров);
	Объекты.Добавить(Метаданные.Документы.ОрдерНаПеремещениеТоваров);
	Объекты.Добавить(Метаданные.Документы.ОтборРазмещениеТоваров);
	Объекты.Добавить(Метаданные.Документы.ОтражениеРасхожденийПриИнкассацииДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.ОтчетБанкаПоОперациямЭквайринга);
	Объекты.Добавить(Метаданные.Документы.ОтчетКомиссионера);
	Объекты.Добавить(Метаданные.Документы.ОтчетКомиссионераОСписании);
	Объекты.Добавить(Метаданные.Документы.ОтчетКомитенту);
	Объекты.Добавить(Метаданные.Документы.ОтчетКомитентуОСписании);
	Объекты.Добавить(Метаданные.Документы.ОтчетОРозничныхПродажах);
	Объекты.Добавить(Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациями);
	Объекты.Добавить(Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациямиОСписании);
	Объекты.Добавить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеТоваров);
	Объекты.Добавить(Метаданные.Документы.ПересортицаТоваров);
	Объекты.Добавить(Метаданные.Документы.ПересчетТоваров);
	Объекты.Добавить(Метаданные.Документы.ПланЗакупок);
	Объекты.Добавить(Метаданные.Документы.ПланОстатков);
	Объекты.Добавить(Метаданные.Документы.ПланПродаж);
	Объекты.Добавить(Метаданные.Документы.ПланПродажПоКатегориям);
	Объекты.Добавить(Метаданные.Документы.ПланСборкиРазборки);
	Объекты.Добавить(Метаданные.Документы.ПланВнутреннихПотреблений);
	Объекты.Добавить(Метаданные.Документы.ПорчаТоваров);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеТоваровНаСклад);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеУслугВПодразделение);
	Объекты.Добавить(Метаданные.Документы.ПриобретениеТоваровУслуг);
	Объекты.Добавить(Метаданные.Документы.ПриобретениеУслугПрочихАктивов);
	Объекты.Добавить(Метаданные.Документы.ПриходныйКассовыйОрдер);
	Объекты.Добавить(Метаданные.Документы.ПриходныйОрдерНаТовары);
	Объекты.Добавить(Метаданные.Документы.ПрочееОприходованиеТоваров);
	Объекты.Добавить(Метаданные.Документы.ПрочиеДоходыРасходы);
	Объекты.Добавить(Метаданные.Документы.РаспоряжениеНаПеремещениеДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.РаспределениеДоходовПоНаправлениямДеятельности);
	Объекты.Добавить(Метаданные.Документы.РаспределениеРасходовБудущихПериодов);
	Объекты.Добавить(Метаданные.Документы.РассылкаКлиентам);
	Объекты.Добавить(Метаданные.Документы.РасходныйКассовыйОрдер);
	Объекты.Добавить(Метаданные.Документы.РасходныйОрдерНаТовары);
	Объекты.Добавить(Метаданные.Документы.РасчетКурсовыхРазниц);
	Объекты.Добавить(Метаданные.Документы.РасчетПроцентныхРасходовДисконтирования);
	Объекты.Добавить(Метаданные.Документы.РасчетСебестоимостиТоваров);
	Объекты.Добавить(Метаданные.Документы.РеализацияПодарочныхСертификатов);
	Объекты.Добавить(Метаданные.Документы.РеализацияТоваровУслуг);
	Объекты.Добавить(Метаданные.Документы.РеализацияУслугПрочихАктивов);
	Объекты.Добавить(Метаданные.Документы.РегистрацияЦенНоменклатурыПоставщика);
	Объекты.Добавить(Метаданные.Документы.СборкаТоваров);
	Объекты.Добавить(Метаданные.Документы.СверкаВзаиморасчетов2_4);
	Объекты.Добавить(Метаданные.Документы.СверкаВзаиморасчетов2_5_11);
	Объекты.Добавить(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств);
	Объекты.Добавить(Метаданные.Документы.СписаниеРасхожденийПоступлениеПриобретение);
	Объекты.Добавить(Метаданные.Документы.СписаниеНедостачТоваров);
	Объекты.Добавить(Метаданные.Документы.СчетНаОплатуКлиенту);
	Объекты.Добавить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт);
	Объекты.Добавить(Метаданные.Документы.УпаковочныйЛист);
	Объекты.Добавить(Метаданные.Документы.УсловияРетроБонусовКлиентов);
	Объекты.Добавить(Метаданные.Документы.НачислениеРетроБонусовКлиента);
	Объекты.Добавить(Метаданные.Документы.УстановкаБлокировокЯчеек);
	Объекты.Добавить(Метаданные.Документы.УстановкаКвотАссортимента);
	Объекты.Добавить(Метаданные.Документы.УстановкаЦенНоменклатуры);
	Объекты.Добавить(Метаданные.Обработки.РабочееМестоМенеджераПоДоставке);
	Объекты.Добавить(Метаданные.Обработки.УправлениеПоступлением);
	Объекты.Добавить(Метаданные.Справочники.ВидыНоменклатуры);
	Объекты.Добавить(Метаданные.Справочники.ДоговорыКонтрагентов);
	Объекты.Добавить(Метаданные.Справочники.ДоговорыКредитовИДепозитов);
	Объекты.Добавить(Метаданные.Справочники.КонтактныеЛицаПартнеров);
	Объекты.Добавить(Метаданные.Справочники.Контрагенты);
	Объекты.Добавить(Метаданные.Справочники.Номенклатура);
	Объекты.Добавить(Метаданные.Справочники.ОбластиХранения);
	Объекты.Добавить(Метаданные.Справочники.Партнеры);
	Объекты.Добавить(Метаданные.Справочники.ПодарочныеСертификаты);
	Объекты.Добавить(Метаданные.Справочники.КартыЛояльности);
	Объекты.Добавить(Метаданные.Справочники.Претензии); 
	Объекты.Добавить(Метаданные.Справочники.СегментыНоменклатуры);
	Объекты.Добавить(Метаданные.Справочники.СегментыПартнеров);
	Объекты.Добавить(Метаданные.Справочники.СоглашенияСКлиентами);
	Объекты.Добавить(Метаданные.Справочники.СоглашенияСПоставщиками);
	Объекты.Добавить(Метаданные.Справочники.Склады);
	Объекты.Добавить(Метаданные.Справочники.СкладскиеПомещения); 
	Объекты.Добавить(Метаданные.Справочники.СкладскиеЯчейки); 
	Объекты.Добавить(Метаданные.Справочники.ВидыЦен);
	Объекты.Добавить(Метаданные.Справочники.ВариантыКомплектацииНоменклатуры); 
	Объекты.Добавить(Метаданные.Справочники.ВидыКартЛояльности);
	
	Объекты.Добавить(Метаданные.Документы.ОтчетКомитентуОЗакупках);
	Объекты.Добавить(Метаданные.Документы.ПервичныйДокумент);
	
	УчетНДСУП.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты);
	
	
	// Конец СлужебныеПодсистемы.ОбъектыУТКАУП
	
	СозданиеНаОснованииЛокализация.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты);
	
	//-- НЕ ГОСИС
	
	
КонецПроцедуры

// Вызывается для формирования списка команд создания на основании КомандыСозданияНаОсновании, однократно для при первой
// необходимости, а затем результат кэшируется с помощью модуля с повторным использованием возвращаемых значений.
// Здесь можно определить команды создания на основании, общие для большинства объектов конфигурации.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - сформированные команды для вывода в подменю:
//     
//     Общие настройки:
//       * Идентификатор - Строка - идентификатор команды.
//     
//     Настройки внешнего вида:
//       * Представление - Строка   - представление команды в форме.
//       * Важность      - Строка   - группа в подменю, в которой следует вывести эту команду.
//                                    Допустимо использовать: "Важное", "Обычное" и "СмТакже".
//       * Порядок       - Число    - порядок размещения команды в подменю. Используется для настройки под конкретное
//                                    рабочее место.
//       * Картинка      - Картинка - картинка команды.
//     
//     Настройки видимости и доступности:
//       * ТипПараметра - ОписаниеТипов - типы объектов, для которых предназначена эта команда.
//       * ВидимостьВФормах    - Строка - имена форм через запятую, в которых должна отображаться команда.
//                                        Используется когда состав команд отличается для различных форм.
//       * ФункциональныеОпции - Строка - имена функциональных опций через запятую, определяющих видимость команды.
//       * УсловияВидимости    - Массив - определяет видимость команды в зависимости от контекста.
//                                        Для регистрации условий следует использовать процедуру
//                                        ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды().
//                                        Условия объединяются по "И".
//       * ИзменяетВыбранныеОбъекты - Булево - определяет доступность команды в ситуации,
//                                        когда у пользователя нет прав на изменение объекта.
//                                        Если Истина, то в описанной выше ситуации кнопка будет недоступна.
//                                        Необязательный. Значение по умолчанию: Ложь.
//     
//     Настройки процесса выполнения:
//       * МножественныйВыбор - Булево
//                            - Неопределено - если Истина, то команда поддерживает множественный выбор.
//             В этом случае в параметре выполнения будет передан список ссылок.
//             Необязательный. Значение по умолчанию: Ложь.
//       * РежимЗаписи - Строка - действия, связанные с записью объекта, которые выполняются перед обработчиком команды.
//             "НеЗаписывать"          - Объект не записывается, а в параметрах обработчика вместо ссылок передается
//                                       вся форма. В этом режиме рекомендуется работать напрямую с формой,
//                                       которая передается в структуре 2 параметра обработчика команды.
//             "ЗаписыватьТолькоНовые" - Записывать новые объекты.
//             "Записывать"            - Записывать новые и модифицированные объекты.
//             "Проводить"             - Проводить документы.
//             Перед записью и проведением у пользователя запрашивается подтверждение.
//             Необязательный. Значение по умолчанию: "Записывать".
//       * ТребуетсяРаботаСФайлами - Булево - если Истина, то в веб-клиенте предлагается
//             установить расширение работы с файлами.
//             Необязательный. Значение по умолчанию: Ложь.
//     
//     Настройки обработчика:
//       * Менеджер - Строка - объект, отвечающий за выполнение команды.
//       * ИмяФормы - Строка - имя формы, которую требуется получить для выполнения команды.
//             Если Обработчик не указан, то у формы вызывается метод "Открыть".
//       * ПараметрыФормы - Неопределено
//                        - ФиксированнаяСтруктура - необязательный. Параметры формы, указанной в ИмяФормы.
//       * Обработчик - Строка - описание процедуры, обрабатывающей основное действие команды.
//             Формат "<ИмяОбщегоМодуля>.<ИмяПроцедуры>" используется когда процедура размещена в общем модуле.
//             Формат "<ИмяПроцедуры>" используется в следующих случаях:
//               1) если ИмяФормы заполнено то в модуле указанной формы ожидается клиентская процедура.
//               2) если ИмяФормы не заполнено то в модуле менеджера этого объекта ожидается серверная процедура.
//       * ДополнительныеПараметры - ФиксированнаяСтруктура - необязательный. Параметры обработчика, указанного в Обработчик.
//   
//   Параметры - Структура - сведения о контексте исполнения:
//       * ИмяФормы - Строка - полное имя формы.
//
//   СтандартнаяОбработка - Булево - если установить в Ложь, то событие "ДобавитьКомандыСозданияНаОсновании" менеджера
//                                   объекта не будет вызвано.
//
Процедура ПередДобавлениемКомандСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры, СтандартнаяОбработка) Экспорт
	
	//++ НЕ ГОСИС
	
	СозданиеНаОснованииЛокализация.ПередДобавлениемКомандСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры, СтандартнаяОбработка);
	
	ИмяФормы = Параметры.ИмяФормы;
	МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы,".");
	Если МассивПолей.Количество() < 4 Тогда
		Возврат;
	КонецЕсли;
	
	Если (ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеОбработкиСозданияСвязанныхОбъектов", 
				Новый Структура("ДополнительныеОтчетыИОбработкиОбъектНазначения,ДополнительныеОтчетыИОбработкиТипФормы", 
				Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя",МассивПолей[0]+"."+МассивПолей[1]), МассивПолей[3]))
			ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеОбработкиСозданияСвязанныхОбъектов", 
				Новый Структура("ДополнительныеОтчетыИОбработкиОбъектНазначения,ДополнительныеОтчетыИОбработкиТипФормы", 
				Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя",МассивПолей[0]+"."+МассивПолей[1]), 
				?(СтрНайти(МассивПолей[3], "ФормаСписка") <> 0,ДополнительныеОтчетыИОбработкиКлиентСервер.ТипФормыСписка(),
				ДополнительныеОтчетыИОбработкиКлиентСервер.ТипФормыОбъекта())))) 
			И СтрНайти(ИмяФормы,"ЖурналДокументов") = 0 Тогда
		
		КомандаСозданияНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСозданияНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.СозданиеСвязанныхОбъектов";
		КомандаСозданияНаОсновании.Идентификатор = "СозданиеСвязанныхОбъектов";
		КомандаСозданияНаОсновании.Представление = НСтр("ru = 'Создание связанных объектов...'");
		КомандаСозданияНаОсновании.РежимЗаписи = "Проводить";
		КомандаСозданияНаОсновании.МножественныйВыбор = Истина;
		КомандаСозданияНаОсновании.Порядок = 100;
	КонецЕсли;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПередДобавлениемКомандСозданияНаОсновании(
		КомандыСозданияНаОсновании,
		Параметры,
		СтандартнаяОбработка);
	// Конец ИнтеграцияС1СДокументооборотом
	
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Определяет список команд создания на основании. Вызывается перед вызовом "ДобавитьКомандыСозданияНаОсновании" модуля
// менеджера объекта.
//
// Параметры:
//  Объект - ОбъектМетаданных - объект, для которого добавляются команды.
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//  СтандартнаяОбработка - Булево - если установить в Ложь, то событие "ДобавитьКомандыСозданияНаОсновании" менеджера
//                                  объекта не будет вызвано.
//
Процедура ПриДобавленииКомандСозданияНаОсновании(Объект, КомандыСозданияНаОсновании, Параметры, СтандартнаяОбработка) Экспорт
	
	//++ НЕ ГОСИС
	Если Объект = Метаданные.Документы.ТелефонныйЗвонок Тогда
		Справочники.СделкиСКлиентами.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
		Справочники.Претензии.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании)
	КонецЕсли;
	Если Объект = Метаданные.Документы.Встреча Тогда
		Справочники.Претензии.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	КонецЕсли;
	Если Объект = Метаданные.Документы.ЭлектронноеПисьмоВходящее Тогда
		Справочники.Претензии.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	КонецЕсли;
	Если Объект = Метаданные.Документы.ЗапланированноеВзаимодействие Тогда
		БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	КонецЕсли;
	//-- НЕ ГОСИС
	
	
КонецПроцедуры

#КонецОбласти