////////////////////////////////////////////////////////////////////////////////
// Ответственные лица: процедуры и функции для работы с ответственным лицами.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция возвращает структуру с реквизитами ответственных лиц.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация, для которой нужно определить руководящих лиц.
//	ДатаСреза - Дата - Дата со временем, на которые необходимо определить сведения.
//	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, для которого необходимо определить ответственных лиц.
//
// Возвращаемое значение:
//	Структура - См. ОтветственныеЛицаБП.ПустаяСтруктураОтветственныхЛиц().
//
Функция ОтветственныеЛица(Организация, ДатаСреза, Подразделение = Неопределено) Экспорт

	ДанныеОтветственныхЛиц = ОтветственныеЛицаБП.ПустаяСтруктураОтветственныхЛиц();

	Отбор = Новый Структура();
	Отбор.Вставить("Организация", 	Организация);
	Отбор.Вставить("Дата",			ДатаСреза);

	ТаблицаОтветственныхЛиц = ОтветственныеЛицаСервер.ПолучитьТаблицуОтветственныхЛицПоОтбору(Отбор);
	ТаблицаОтветственныхЛиц.Индексы.Добавить("ОтветственноеЛицо");
	
	МетаЗначенияПеречисления = Метаданные.Перечисления.ОтветственныеЛицаОрганизаций.ЗначенияПеречисления;
	
	Для Каждого ЗначениеПеречисления Из МетаЗначенияПеречисления Цикл
		
		ИмяЗначенияПеречисления = ЗначениеПеречисления.Имя;
		Если НЕ ДанныеОтветственныхЛиц.Свойство(ИмяЗначенияПеречисления) Тогда
			Продолжить;
		КонецЕсли;
		
		РольОтветственногоЛица 	= Перечисления.ОтветственныеЛицаОрганизаций[ИмяЗначенияПеречисления];
		НайденнаяСтрока = ТаблицаОтветственныхЛиц.Найти(РольОтветственногоЛица, "ОтветственноеЛицо");
		
		Если НайденнаяСтрока <> Неопределено Тогда
		
			ДанныеОтветственныхЛиц[ИмяЗначенияПеречисления] = НайденнаяСтрока.ФизическоеЛицо;
			ДанныеОтветственныхЛиц[ИмяЗначенияПеречисления + "ФИО"] = ФизическиеЛицаУТ.ФамилияИмяОтчество(НайденнаяСтрока.ФизическоеЛицо, ДатаСреза);
			ДанныеОтветственныхЛиц[ИмяЗначенияПеречисления + "Представление"] =	ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(НайденнаяСтрока.ФизическоеЛицо, ДатаСреза);
			ДанныеОтветственныхЛиц[ИмяЗначенияПеречисления + "ДолжностьПредставление"] = НайденнаяСтрока.Должность;
			
		КонецЕсли;
	
	КонецЦикла;

	Возврат ДанныеОтветственныхЛиц;

КонецФункции

// Функция возвращает массив с датами изменения в ответственных лицах.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Проверяемая организация.
//
// Возвращаемое значение:
//	Массив - Массив дат.
//
Функция ДатыИзмененияОтветственныхЛицОрганизаций(Организация) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтветственныеЛицаОрганизаций.ДатаНачала КАК Период
	|ИЗ
	|	Справочник.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|ГДЕ
	|	ОтветственныеЛицаОрганизаций.Владелец = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Период");
	
КонецФункции

// Возвращает ответственное лицо на складе на указанную дату.
//
// Параметры:
//	Склад - СправочникСсылка.Склады - Склад, для которого необходимо определить ответственное лицо.
//	Дата - Дата - Дата, по состоянию на которую необходимо получить данные.
//
// Возвращаемое значение:
//	СправочникСсылка.ФизическиеЛица - МОЛ на складе.
//
Функция ОтветственноеЛицоНаСкладе(Склад, Дата) Экспорт
	
	Если ЗначениеЗаполнено(Склад) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ТекущийОтветственный");
	Иначе
		Возврат Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти
