////////////////////////////////////////////////////////////////////////////////
// ОбменСБанкамиСлужебныйКлиентСервер: механизм обмена электронными документами с банками.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Функция ТекстСлужебногоМаркераВЖР() Экспорт
	
	Возврат НСтр("ru = '#ДеталиОшибкиВыведены#'");
	
КонецФункции

// Возвращает дату, с которой Сбербанк отключил возможность подписания документов по sms.
// 
// Возвращаемое значение:
// Дата
//
Функция ДатаОтключенияПодписанияSMSСбербанк() Экспорт

	Возврат '2023-06-01';
	
КонецФункции

#Область ОшибкиСетевойДоступности

// Определяет тип ошибки интернет соединения по представлению ошибки
// 
// Параметры:
//  ПредставлениеОшибки - Строка, Число - краткое описание ошибки, сформированное платформой,
//											или код состояния http ответа.
// 
// Возвращаемое значение: 
// Строка - тип ошибки интернет соединения.
//
Функция ТипОшибкиИнтернетСоединения(ПредставлениеОшибки)Экспорт

	ТипОшибки = "";
	
	Если ТипЗнч(ПредставлениеОшибки) = Тип("Строка") Тогда
		Если СтрНайти(ПредставлениеОшибки, "Couldn't resolve host name") Тогда  
			ТипОшибки = "НаличиеИнтернетСоединения";
		ИначеЕсли СтрНайти(ПредставлениеОшибки, "Не могу установить соединение") 
					ИЛИ СтрНайти(ПредставлениеОшибки, "Unable to connect") Тогда
			ТипОшибки = "ДоступностьСервисов";
		КонецЕсли;
	ИначеЕсли ТипЗнч(ПредставлениеОшибки) = Тип("Число") Тогда
		Если ПредставлениеОшибки >= 500 И ПредставлениеОшибки <= 599 Тогда
			ТипОшибки = "АктивностьСервисов";	
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТипОшибки; 
	
КонецФункции

// Возвращает детали ошибки интернет соединения в виде структуры
// 
// Параметры:
//  ТипОшибки - Строка - тип ошибки, см. ТипОшибкиИнтернетСоединения.
// 
// Возвращаемое значение:
//	Структура - состоящая из полей:
// 		* ТипОшибки - Строка - тип ошибки, см. ТипОшибкиИнтернетСоединения,
//		* КраткоеПредставлениеТипаОшибки - Строка - краткое представление ошибки пользователю.
//		* РекомендацияПользователю - Строка - Рекомендация пользователю о необходимых действиях.
//		* РекомендацияАдминистратору - Строка - Рекомендация администратору или техническому специалисту 
//												о необходимых действиях. Заполняется только если ошибка находится 
//												в зоне ответственности Администратора.
Функция ДеталиОшибкиИнтернетСоединения(ТипОшибки)Экспорт
	
	Если ТипОшибки = "НаличиеИнтернетСоединения" Тогда
		Возврат ОшибкаИнтернетСоединения();	
	ИначеЕсли ТипОшибки = "ДоступностьСервисов" Тогда
		Возврат ОшибкаДоступностьСервисов();
	ИначеЕсли ТипОшибки = "АктивностьСервисов" Тогда
		Возврат ОшибкаАктивностьСервисов();
	Иначе
		Возврат НеизвестнаяОшибкаСетевойДоступности();
	КонецЕсли;
		
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОшибкаИнтернетСоединения()
	
	Результат = НоваяОшибкаСетевойДоступности();
	Результат.ТипОшибки                      = "НаличиеИнтернетСоединения";
	Результат.КраткоеПредставлениеТипаОшибки =
		НСтр("ru = 'Нет подключения к сети Интернет'");
	Результат.РекомендацияПользователю       =
		НСтр("ru = 'Проверьте подключение к сети Интернет, настройки прокси сервера либо обратитесь к администратору или техническому специалисту'");
	Результат.РекомендацияАдминистратору     =
		НСтр("ru = 'Проверьте качество Интернет соединения или настройки прокси сервера'");
	
	Возврат Результат;
	
КонецФункции

Функция ОшибкаДоступностьСервисов()
	
	Результат = НоваяОшибкаСетевойДоступности();
	Результат.ТипОшибки                      = "ДоступностьСервисов";
	Результат.КраткоеПредставлениеТипаОшибки = 
		НСтр("ru = 'Доступ к сервисам банков заблокирован'");
	Результат.РекомендацияПользователю       = 
		НСтр("ru = 'Проверьте сетевую доступность указанных адресов либо обратитесь к администратору или техническому специалисту'");
	Результат.РекомендацияАдминистратору     = 
		НСтр("ru = 'Необходимо проверить сетевую доступность следующих адресов:'");
	
	Возврат Результат;
	
КонецФункции

Функция ОшибкаАктивностьСервисов()
	
	Результат = НоваяОшибкаСетевойДоступности();
	Результат.ТипОшибки                      = "АктивностьСервисов";
	Результат.КраткоеПредставлениеТипаОшибки = 
		НСтр("ru = 'Сервисы банков временно не активны'");
	Результат.РекомендацияПользователю       = 
		НСтр("ru = 'Повторите отправку документов позднее или обратитесь в службу поддержки банка'");
	Результат.РекомендацияАдминистратору     = "";
	
	Возврат Результат;
	
КонецФункции
	
Функция НеизвестнаяОшибкаСетевойДоступности()

	Результат = НоваяОшибкаСетевойДоступности();
	Результат.ТипОшибки                      = "НеизвестнаяОшибка";
	Результат.КраткоеПредставлениеТипаОшибки = 
		НСтр("ru = 'Неизвестная ошибка'");
	Результат.РекомендацияПользователю       = "";
	Результат.РекомендацияАдминистратору     = "";
	
	Возврат Результат;
	
КонецФункции 

Функция НоваяОшибкаСетевойДоступности()
                                 
	Результат = Новый Структура;
	Результат.Вставить("ТипОшибки","");
	Результат.Вставить("КраткоеПредставлениеТипаОшибки","");
	Результат.Вставить("РекомендацияПользователю","");
	Результат.Вставить("РекомендацияАдминистратору","");
	
	Возврат Результат;
	
КонецФункции
		
#Область Письма

// Возвращает форматированное наименование для переписки с банком
// 
// Параметры:
//		Наименование - Строка - наименование файла
//		Расширение - Строка - расширение файла
//
// Возвращаемое значение:
//		Строка
//
Функция ПредставлениеПрисоединенногоФайла(Наименование, Расширение) Экспорт 
	
	ПредставлениеРасширение = СтрЗаменить(Расширение,".","");   
	ПредставлениеНаименование = СтрШаблон("%1.%2",Наименование, ПредставлениеРасширение);   
	Возврат ПредставлениеНаименование;      
	
КонецФункции    

// Пересчитывает размер присоединенного файла из Байт в КБ
// Параметры:
//		Размер - Число - размер файла в Байтах
//
// Возвращаемое значение:
//		Число
//
Функция ПеревестиРазмерПрисоединенногоФайлаИзБайт_В_КБ(Размер) Экспорт 
	
	РазмерКБ = Размер/1024; 
	Возврат Окр(РазмерКБ);      
	
КонецФункции   

#КонецОбласти

#КонецОбласти

