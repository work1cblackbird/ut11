///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Вызывается для получения контактов (участников) по указанному предмету взаимодействия.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий.
//
// Параметры:
//  ИмяТаблицыКонтактов   - Строка - имя таблицы предмета взаимодействий, в котором требуется выполнить поиск.
//                                   Например, "Документы.ЗаказПокупателя".
//  ТекстЗапросаДляПоиска - Строка - в этот параметр указать фрагмент запроса для поиска. При выполнении запроса 
//                                   в параметр запроса &Предмет подставляется ссылка на предмет взаимодействия.
//
Процедура ПриПоискеКонтактов(Знач ИмяТаблицыКонтактов, ТекстЗапросаДляПоиска) Экспорт
	
	ТекстЗапросаДляПоиска = "
	| ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПартнерыИКонтактныеЛица.Партнер КАК Контакт
	|ИЗ
	|	&ИмяСправочника КАК ТаблицаПартнерыИКонтактныеЛица
	|ГДЕ
	|	ТаблицаПартнерыИКонтактныеЛица.Ссылка = &Предмет
	|	И (НЕ ТаблицаПартнерыИКонтактныеЛица.Партнер ЕСТЬ NULL )
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПартнерыИКонтактныеЛица.КонтактноеЛицо
	|ИЗ
	|	&ИмяСправочника КАК ТаблицаПартнерыИКонтактныеЛица
	|ГДЕ
	|	ТаблицаПартнерыИКонтактныеЛица.Ссылка = &Предмет
	|	И (НЕ ТаблицаПартнерыИКонтактныеЛица.КонтактноеЛицо ЕСТЬ NULL )"; //@Query-part
	
	ТекстЗапросаДляПоиска = СтрЗаменить(ТекстЗапросаДляПоиска, "&ИмяСправочника", ИмяТаблицыКонтактов + ".ПартнерыИКонтактныеЛица");	
	
КонецПроцедуры	

// Позволяет переопределить владельца присоединенных файлов для письма.
// Такая необходимость может возникнуть, например, при массовых рассылках, когда имеет смысл 
// хранить одни и те же присоединенные файлы в одном месте, а не тиражировать их на все письма рассылки.
//
// Параметры:
//  Письмо - ДокументСсылка.ЭлектронноеПисьмоВходящее
//         - ДокументСсылка.ЭлектронноеПисьмоИсходящее - электронное письмо, 
//           для которого необходимо получить вложения.
//  ПрисоединенныеФайлы - Структура - задать сведения о файлах, присоединенных к письму:
//    * ВладелецФайлов                     - ОпределяемыйТип.ПрисоединенныйФайл - владелец присоединенных файлов.
//    * ИмяСправочникаПрисоединенныхФайлов - Строка - имя объекта метаданных присоединенных файлов.
//
Процедура ПриПолученииПрисоединенныхФайлов(Письмо, ПрисоединенныеФайлы) Экспорт

	Если ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(Письмо) Тогда
		РеквизитыПисьма = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Письмо, "ВзаимодействиеОснование");
		Если ТипЗнч(РеквизитыПисьма.ВзаимодействиеОснование) = Тип("ДокументСсылка.РассылкаКлиентам") Тогда
			ПрисоединенныеФайлы = Новый Структура ("ВладелецФайлов, ИмяСправочникаПрисоединенныхФайлов",
			                         РеквизитыПисьма.ВзаимодействиеОснование, "РассылкаКлиентамПрисоединенныеФайлы"); 
		КонецЕсли;
	ИначеЕсли ТипЗнч(Письмо) = Тип("СправочникСсылка.ШаблоныСообщений") Тогда
		ПрисоединенныеФайлы = Новый Структура("ВладелецФайлов, ИмяСправочникаПрисоединенныхФайлов",
			                         Письмо, "ШаблоныСообщенийПрисоединенныеФайлы");
	ИначеЕсли ТипЗнч(Письмо) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее")
		      И ТипЗнч(Письмо.ВзаимодействиеОснование) = Тип("ДокументСсылка.РассылкаКлиентам") Тогда
		ПрисоединенныеФайлы = Новый Структура("ВладелецФайлов, ИмяСправочникаПрисоединенныхФайлов",
		                         Письмо.ВзаимодействиеОснование, "РассылкаКлиентамПрисоединенныеФайлы");
	Иначе
		Если ТипЗнч(Письмо) =Тип("ДокументСсылка.РассылкаКлиентам") Тогда
			ПрисоединенныеФайлы = Новый Структура("ВладелецФайлов, ИмяСправочникаПрисоединенныхФайлов",
			                         Письмо, "РассылкаКлиентамПрисоединенныеФайлы"); 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается для настройки логики ограничения доступа к взаимодействиям.
// Пример заполнения наборов значений доступа см. в комментарии
// к процедуре УправлениеДоступом.ЗаполнитьНаборыЗначенийДоступа.
//
// Параметры:
//  Объект - ДокументОбъект.Встреча
//         - ДокументОбъект.ЗапланированноеВзаимодействие
//         - ДокументОбъект.СообщениеSMS
//         - ДокументОбъект.ТелефонныйЗвонок
//         - ДокументОбъект.ЭлектронноеПисьмоВходящее
//         - ДокументОбъект.ЭлектронноеПисьмоИсходящее - объект, для которого нужно заполнить наборы.
//  Таблица - см. УправлениеДоступом.ТаблицаНаборыЗначенийДоступа
//
Процедура ПриЗаполненииНаборовЗначенийДоступа(Объект, Таблица) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Учетная запись" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "Ответственный".
	НомерНабора = 1;
	
	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	// Ограничение по "Автор".
	Если ТипЗнч(Объект) <> Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") Тогда
		НомерНабора = НомерНабора + 1;
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = НомерНабора;
		СтрокаТаб.ЗначениеДоступа = Объект.Автор;
	КонецЕсли;

	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") ИЛИ 
			ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		НомерНабора = НомерНабора + 1;
			
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = НомерНабора;
		СтрокаТаб.ЗначениеДоступа = Объект.УчетнаяЗапись;			
	КонецЕсли;
		
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ТелефонныйЗвонок") Тогда
		Если ЗначениеЗаполнено(Объект.АбонентКонтакт) Тогда

			Если ТипЗнч(Объект.АбонентКонтакт) = Тип("СправочникСсылка.Партнеры") Тогда

				НомерНабора = НомерНабора + 1;

				СтрокаТаб = Таблица.Добавить();
				СтрокаТаб.НомерНабора     = НомерНабора;
				СтрокаТаб.ЗначениеДоступа = Объект.АбонентКонтакт;

			ИначеЕсли ТипЗнч(Объект.АбонентКонтакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

				Запрос = Новый Запрос(
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
				|ИЗ
				|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
				|ГДЕ
				|	КонтактныеЛицаПартнеров.Ссылка =&АбонентКонтакт
				|");
				Запрос.УстановитьПараметр("АбонентКонтакт", Объект.АбонентКонтакт);
				Выборка = Запрос.Выполнить().Выбрать();

				Пока Выборка.Следующий() Цикл

					НомерНабора = НомерНабора + 1;

					СтрокаТаб = Таблица.Добавить();
					СтрокаТаб.НомерНабора     = НомерНабора;
					СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") Тогда
		МассивКонтактныхЛиц = Новый Массив;

		МассивТабличныхЧастей = Новый Массив;
		МассивТабличныхЧастей.Добавить("ПолучателиПисьма");
		МассивТабличныхЧастей.Добавить("ПолучателиКопий");
		МассивТабличныхЧастей.Добавить("ПолучателиОтвета");
		Для Каждого ТабличнаяЧасть Из МассивТабличныхЧастей Цикл

			Для Каждого СтрокаТаблицы Из Объект[ТабличнаяЧасть] Цикл

				Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
					Продолжить;
				КонецЕсли;

				Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда

					НомерНабора = НомерНабора + 1;

					СтрокаТаб = Таблица.Добавить();
					СтрокаТаб.НомерНабора     = НомерНабора;
					СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

				ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

					МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

				КонецЕсли;

			КонецЦикла;
		КонецЦикла;

		Если МассивКонтактныхЛиц.Количество() > 0 Тогда

			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
			|ИЗ
			|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
			|ГДЕ
			|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)
			|");
			Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
			Выборка = Запрос.Выполнить().Выбрать();

			Пока Выборка.Следующий() Цикл

				НомерНабора = НомерНабора + 1;

				СтрокаТаб = Таблица.Добавить();
				СтрокаТаб.НомерНабора     = НомерНабора;
				СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

			КонецЦикла;

		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		МассивКонтактныхЛиц = Новый Массив;

		МассивТабличныхЧастей = Новый Массив;
		МассивТабличныхЧастей.Добавить("ПолучателиПисьма");
		МассивТабличныхЧастей.Добавить("ПолучателиКопий");
		МассивТабличныхЧастей.Добавить("ПолучателиОтвета");
		МассивТабличныхЧастей.Добавить("ПолучателиСкрытыхКопий");
		Для Каждого ТабличнаяЧасть Из МассивТабличныхЧастей Цикл

			Для Каждого СтрокаТаблицы Из Объект[ТабличнаяЧасть] Цикл

				Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
					Продолжить;
				КонецЕсли;

				Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда

					НомерНабора = НомерНабора + 1;

					СтрокаТаб = Таблица.Добавить();
					СтрокаТаб.НомерНабора     = НомерНабора;
					СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

				ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

					МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

				КонецЕсли;

			КонецЦикла;
		КонецЦикла;

		Если МассивКонтактныхЛиц.Количество() > 0 Тогда

			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
			|ИЗ
			|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
			|ГДЕ
			|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)
			|");
			Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
			Выборка = Запрос.Выполнить().Выбрать();

			Пока Выборка.Следующий() Цикл

				НомерНабора = НомерНабора + 1;

				СтрокаТаб = Таблица.Добавить();
				СтрокаТаб.НомерНабора     = НомерНабора;
				СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

			КонецЦикла;

		КонецЕсли;
		
	Иначе
		
		МассивКонтактныхЛиц = Новый Массив;
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.СообщениеSMS") Тогда
			ИмяТЧ = Объект.Адресаты;
		Иначе
			ИмяТЧ = Объект.Участники;
		КонецЕсли;
		
		Для Каждого СтрокаТаблицы Из ИмяТЧ Цикл

			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
				Продолжить;
			КонецЕсли;

			Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда

				НомерНабора = НомерНабора + 1;

				СтрокаТаб = Таблица.Добавить();
				СтрокаТаб.НомерНабора     = НомерНабора;
				СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

			ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

				МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

			КонецЕсли;

		КонецЦикла;

		Если МассивКонтактныхЛиц.Количество() > 0 Тогда

			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
			|ИЗ
			|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
			|ГДЕ
			|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)
			|");
			Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
			Выборка = Запрос.Выполнить().Выбрать();

			Пока Выборка.Следующий() Цикл
				
				НомерНабора = НомерНабора + 1;
				
				СтрокаТаб = Таблица.Добавить();
				СтрокаТаб.НомерНабора     = НомерНабора;
				СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;
			
			КонецЦикла;
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ВзаимодействияПереопределяемый.ПриПоискеКонтактов.
// Возвращает текст запроса, отбирающего контакты (участников) предмета взаимодействия.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий.
//
// Параметры:
//  УдалитьПомещатьВоВременнуюТаблицу - Булево - всегда Ложь.
//  ИмяТаблицы                        - Строка - имя таблицы предмета взаимодействий, в котором будет выполнен поиск.
//  УдалитьОбъединить                 - Булево - всегда Истина.
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаПоискКонтактовПоПредмету(УдалитьПомещатьВоВременнуюТаблицу, ИмяТаблицы, УдалитьОбъединить = Ложь) Экспорт
	
	ПомещатьВоВременнуюТаблицу = УдалитьПомещатьВоВременнуюТаблицу;
	Объединить = УдалитьОбъединить;
	
	ПостфиксВыбрать = ?(Объединить,"РАЗЛИЧНЫЕ","РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ");
	
	ТекстЗапроса =" 
	|ВЫБРАТЬ &ПостфиксВыбрать,
	|	ТаблицаПартнерыИКонтактныеЛица.Партнер КАК Контакт
	|ПОМЕСТИТЬ табКонтакты
	|ИЗ
	|	&ИмяТаблицы КАК ТаблицаПартнерыИКонтактныеЛица
	|ГДЕ
	|	ТаблицаПартнерыИКонтактныеЛица.Ссылка = &Предмет
	|	И (НЕ ТаблицаПартнерыИКонтактныеЛица.Партнер ЕСТЬ NULL )
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ &ПостфиксРазличные,
	|	ТаблицаПартнерыИКонтактныеЛица.КонтактноеЛицо
	|ИЗ
	|	&ИмяТаблицы КАК ТаблицаПартнерыИКонтактныеЛица
	|ГДЕ
	|	ТаблицаПартнерыИКонтактныеЛица.Ссылка = &Предмет
	|	И (НЕ ТаблицаПартнерыИКонтактныеЛица.КонтактноеЛицо ЕСТЬ NULL )";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ПостфиксВыбрать,",   ПостфиксВыбрать);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ПостфиксРазличные,", "РАЗЛИЧНЫЕ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ИмяТаблицы",          ИмяТаблицы + ".ПартнерыИКонтактныеЛица");
	
	Если Не ПомещатьВоВременнуюТаблицу Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ПОМЕСТИТЬ табКонтакты","");
	КонецЕсли;
	
	Если Объединить Тогда
		
		ТекстЗапроса = "
		| ОБЪЕДИНИТЬ
		|" + ТекстЗапроса;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Устарела. Следует использовать ВзаимодействияПереопределяемый.ПриПолученииПрисоединенныхФайлов.
// Возможность переопределить владельца присоединенных файлов для письма.
// Такая необходимость может возникнуть например при массовых рассылках. В этом случае имеет смысл 
// хранить одни и те же присоединенные файлы в одном месте, а не тиражировать их на все письма рассылки.
//
// Параметры:
//  Письмо  - ДокументСсылка
//          - ДокументОбъект - документ электронное письмо, для которого необходимо получить вложения.
//
// Возвращаемое значение:
//  Структура, Неопределено  - Неопределено, если присоединенные файлы хранятся при письме.
//                             Структура, если присоединенные файлы хранятся в другом объекте:
//                              * Владелец - ОпределяемыйТип.ПрисоединенныйФайл - владелец присоединенных файлов.
//                              * ИмяСправочникаПрисоединенныеФайлы - Строка - имя объекта метаданных присоединенных файлов.
//
Функция ДанныеОбъектаМетаданныхПрисоединенныхФайловПисьма(Письмо) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти
