#Область ПрограммныйИнтерфейс

// Вызывается при определении представления валюты оплаты сервиса.
// @skip-warning - обратная совместимость.
// @skip-check module-empty-method 
// 
// Параметры:
//  ПредставлениеВалютыОплаты - Строка - представление валюты оплаты.
//
Процедура ПриУстановкеПредставленияВалютыОплаты(ПредставлениеВалютыОплаты) Экспорт
КонецПроцедуры

// Вызывается при получении имени формы обработки ответа на запрос счета на оплату.
// @skip-warning - обратная совместимость.
// @skip-check module-empty-method 
// 
// Параметры:
//  ИмяФормыОбработкиОтвета - Строка - имя формы обработки ответа.
//
Процедура ПриПолученииИмениФормыОбработкиОтвета(ИмяФормыОбработкиОтвета) Экспорт
КонецПроцедуры

// Вызывается при установке настроек оплаты сервиса.
// @skip-check module-empty-method 
//
// Параметры:
//  КодАбонента - Число - код абонента-владельца учетной системы
//  РезультатОбработки - Структура - результаты обработки метода (возвращаемые данные):
//   * Ошибка - Булево - признак ошибки обработки
//   * Сообщение - Строка - сообщение об ошибке обработки.
//
Процедура ПриУстановкеНастроекОплатыСервиса(КодАбонента, РезультатОбработки) Экспорт
	
	
КонецПроцедуры

// Вызывается при удалении настроек оплаты сервиса.
// @skip-check module-empty-method 
//
// Параметры:
//  КодАбонента - Число - код абонента-владельца учетной системы
//  РезультатОбработки - Структура - результаты обработки метода (возвращаемые данные):
//   * Ошибка - Булево - признак ошибки обработки
//   * Сообщение - Строка - сообщение об ошибке обработки.
//
Процедура ПриУдаленииНастроекОплатыСервиса(КодАбонента, РезультатОбработки) Экспорт
	
	
КонецПроцедуры

// Вызывается при определении возможности загрузки тарифов сервиса.
// @skip-warning ПустойМетод - переопределяемый метод.
// @skip-check module-empty-method 
//   
// Параметры:
//  Результат - Булево - результат определения возможности загрузки.
//  
Процедура ПриОпределенииПоддержкиЗагрузкиТарифов(Результат) Экспорт

	
КонецПроцедуры

// Вызывается при загрузке тарифов в информационную базу по данным менеджера сервиса.
// Метод является идемпотентным. Поддерживается повторное выполнение с получением аналогичного результата.
// @skip-warning - обратная совместимость.
// @skip-check module-empty-method 
//
// Параметры:
//  ИсходныеДанные - Структура:
//   * ТарифыПровайдера - см. ПрограммныйИнтерфейсСервиса.ТарифыСервиса
//   * ТарифыОбслуживающейОрганизации - см. ПрограммныйИнтерфейсСервиса.ТарифыОбслуживающейОрганизации
//  РезультатОбработки - Структура - результаты обработки метода (возвращаемые данные):
//   * Ошибка - Булево - признак ошибки обработки
//   * Сообщение - Строка - сообщение об ошибке обработки.
//
Процедура ПриЗагрузкеТарифов(ИсходныеДанные, РезультатОбработки) Экспорт
	
	
КонецПроцедуры

// Вызывается при создании на сервере формы сведений абонента, если требуется их заполнение.
// @skip-warning - обратная совместимость.
// @skip-check module-empty-method
//  
//  Параметры:
//   ОбязательныеСведения - Структура:
//   * ЕстьОшибки - Булево - признак наличия ошибок заполнения.
//   * Реквизиты - ТаблицаЗначений - дополнительные реквизиты абонента:
//     ** Ключ - Строка - имя дополнительного реквизита
//     ** Заголовок - Строка - заголовок дополнительного реквизита
//     ** Тип - Строка - тип значения 
//     ** Значение - Строка, Число, Дата, Булево - значение дополнительного реквизита
//     ** ЗаполнятьОбязательно - Булево - признак обяз 
//     ** Подсказка - Строка - подсказка заполнения
//     ** Ошибка - Булево - признак ошибки заполнения
//     ** Сообщение - Строка - сообщение об ошибке
//     ** Видимость - Булево - признак отображения на форме заполнения
//   * Свойства - ТаблицаЗначений - дополнительные свойства абонента:
//     ** Ключ - Строка - имя дополнительного свойства
//     ** Заголовок - Строка - заголовок дополнительного реквизита
//     ** Тип - Строка - тип значения
//     ** Значение - Строка, Число, Дата, Булево - значение дополнительного свойства
//     ** ЗаполнятьОбязательно - Булево - признак обяз 
//     ** Подсказка - Строка - подсказка заполнения
//     ** Ошибка - Булево - признак ошибки заполнения
//     ** Сообщение - Строка - сообщение об ошибке
//     ** Видимость - Булево - признак отображения на форме заполнения
//   Абонент - см. ПрограммныйИнтерфейсСервиса.АбонентЭтогоПриложения
Процедура ПриЗаполненииОбязательныхСведенийДляОформленияПодписки(ОбязательныеСведения, Абонент) Экспорт
	
	
КонецПроцедуры

// Вызывается при создании счета на оплату по запросу от менеджера сервиса.
// @skip-warning - обратная совместимость.
// @skip-check module-empty-method 
//
// Параметры:
//  ДанныеЗапроса - см. ОплатаСервиса.ДанныеЗапросаСчетаНаОплату
//  СчетНаОплату - ДокументСсылка - созданный счет на оплату (возвращаемые данные)
//  РезультатОбработки - Структура - результаты обработки метода (возвращаемые данные):
//   * Ошибка - Булево - признак ошибки обработки
//   * Сообщение - Строка - сообщение об ошибке обработки.
//
Процедура ПриСозданииСчетаНаОплату(ДанныеЗапроса, СчетНаОплату, РезультатОбработки) Экспорт

	
КонецПроцедуры

// Устанавливает печатную форму счета на оплату.
// @skip-warning - обратная совместимость.
// @skip-check module-empty-method 
//
// Параметры:
//  ДанныеЗапроса - см. ОплатаСервиса.ДанныеЗапросаСчетаНаОплату
//  СчетНаОплату - ДокументСсылка - счет на оплату
//  ПечатнаяФорма - ТабличныйДокумент - печатная форма счета на оплату (возвращаемые данные)
//  РезультатОбработки - Структура - результаты обработки метода (возвращаемые данные):
//   * Ошибка - Булево - признак ошибки обработки
//   * Сообщение - Строка - сообщение об ошибке обработки.
//
Процедура ПриПолученииПечатнойФормыСчетаНаОплату(ДанныеЗапроса, СчетНаОплату, ПечатнаяФорма, РезультатОбработки) экспорт


КонецПроцедуры

// Устанавливает двоичные данные счета на оплату.
// @skip-warning - обратная совместимость.
// @skip-check module-empty-method 
//  
// Параметры:
//  ДанныеЗапроса - см. ОплатаСервиса.ДанныеЗапросаСчетаНаОплату
//  СчетНаОплату - ДокументСсылка - счет на оплату
//  Данные - ДвоичныеДанные - данные счета на оплату (возвращаемые данные)
//  РезультатОбработки - Структура - результаты обработки метода (возвращаемые данные):
//   * Ошибка - Булево - признак ошибки обработки
//   * Сообщение - Строка - сообщение об ошибке обработки.
//
Процедура ПриПолученииДанныхСчетаНаОплату(ДанныеЗапроса, СчетНаОплату, Данные, РезультатОбработки) Экспорт
	
	
КонецПроцедуры

// Устанавливает значение платежной ссылки счета на оплату.
// @skip-warning - обратная совместимость.
// @skip-check module-empty-method 
//
// Параметры:
//  ДанныеЗапроса - см. ОплатаСервиса.ДанныеЗапросаСчетаНаОплату
//  СчетНаОплату - ДокументСсылка - счет на оплату
//  ПлатежнаяСсылка - Строка - платежная ссылка (возаращаемые данные)
//  РезультатОбработки - Структура - результаты обработки метода (возвращаемые данные):
//   * Ошибка - Булево - признак ошибки обработки
//   * Сообщение - Строка - сообщение об ошибке обработки.
//
Процедура ПриПолученииПлатежнойСсылки(ДанныеЗапроса, СчетНаОплату, ПлатежнаяСсылка, РезультатОбработки) Экспорт
	
	
КонецПроцедуры

#КонецОбласти