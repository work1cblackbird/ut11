
#Область СлужебныйПрограммныйИнтерфейс

#Область МаркируемаяПродукция

// Возвращаемое значение:
// см. СкладыЛокализация.ИспользуетсяМаркируемаяПродукция
Функция ИспользуетсяМаркируемаяПродукция() Экспорт

	Возврат СкладыЛокализация.ИспользуетсяМаркируемаяПродукция();

КонецФункции

// Параметры:
// РазмерПакета - Число - Количество запросов в озвращаемом пакете (возвращаемое значение)
// Возвращаемое значение:
// Строка - текст пакетного запроса, добавляемый фрагмент
Функция ТекстЗапросаМаркировки(РазмерПакета = 0) Экспорт
	
	ТекстЗапроса = "";
	
	// ++ Локализация
	ТекстЗапроса = 
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоОстаткамСОрдерами.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ДанныеПоОстаткамСОрдерами.Номенклатура КАК Номенклатура,
	|	ДанныеПоОстаткамСОрдерами.Характеристика КАК Характеристика,
	|	ДанныеПоОстаткамСОрдерами.Серия КАК Серия,
	|	ДанныеПоОстаткамСОрдерами.Назначение КАК Назначение,
	|	ДанныеПоОстаткамСОрдерами.Склад КАК Склад,
	|	ДанныеПоОстаткамСОрдерами.КоличествоОтгрузить КАК КоличествоОтгрузить,
	|	ДанныеПоОстаткамСОрдерами.Ордер КАК Ордер
	|ПОМЕСТИТЬ ДанныеПоОстаткамСОрдерами
	|ИЗ
	|	ВТТоварыКОтгрузке КАК ДанныеПоОстаткамСОрдерами
	|ГДЕ
	|	НЕ ДанныеПоОстаткамСОрдерами.Ордер ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТоварыШтрихкодыУпаковок.Ссылка КАК Ордер,
	|	РасходныйОрдерНаТоварыШтрихкодыУпаковок.ШтрихкодУпаковки.Номенклатура КАК Номенклатура,
	|	РасходныйОрдерНаТоварыШтрихкодыУпаковок.ШтрихкодУпаковки.Характеристика КАК Характеристика,
	|	РасходныйОрдерНаТоварыШтрихкодыУпаковок.ШтрихкодУпаковки.Серия КАК Серия,
	|	РасходныйОрдерНаТоварыШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ПОМЕСТИТЬ МаркиВОрдерах
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ШтрихкодыУпаковок КАК РасходныйОрдерНаТоварыШтрихкодыУпаковок
	|ГДЕ
	|	РасходныйОрдерНаТоварыШтрихкодыУпаковок.Ссылка В
	|			(ВЫБРАТЬ
	|				ДанныеПоОстаткамСОрдерами.Ордер КАК Ордер
	|			ИЗ
	|				ДанныеПоОстаткамСОрдерами КАК ДанныеПоОстаткамСОрдерами)
	|	И РасходныйОрдерНаТоварыШтрихкодыУпаковок.ШтрихкодУпаковки.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоОстаткамСОрдерами.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ДанныеПоОстаткамСОрдерами.Номенклатура КАК Номенклатура,
	|	ДанныеПоОстаткамСОрдерами.Характеристика КАК Характеристика,
	|	ДанныеПоОстаткамСОрдерами.Серия КАК Серия,
	|	ДанныеПоОстаткамСОрдерами.Назначение КАК Назначение,
	|	ДанныеПоОстаткамСОрдерами.Склад КАК Склад,
	|	ДанныеПоОстаткамСОрдерами.КоличествоОтгрузить КАК КоличествоОтгрузить,
	|	ДанныеПоОстаткамСОрдерами.Ордер КАК Ордер,
	|	МаркиВОрдерах.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ИЗ
	|	ДанныеПоОстаткамСОрдерами КАК ДанныеПоОстаткамСОрдерами
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаркиВОрдерах КАК МаркиВОрдерах
	|		ПО ДанныеПоОстаткамСОрдерами.Ордер = МаркиВОрдерах.Ордер
	|			И ДанныеПоОстаткамСОрдерами.Номенклатура = МаркиВОрдерах.Номенклатура
	|			И ДанныеПоОстаткамСОрдерами.Характеристика = МаркиВОрдерах.Характеристика
	|			И ДанныеПоОстаткамСОрдерами.Серия = МаркиВОрдерах.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОтгрузки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Склад,
	|	Ордер,
	|	ШтрихкодУпаковки
	|";
	
	РазмерПакета = 3;
	// -- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроверкаКорректностиЗаполненияДокументаПродажи

// Дополняет массив проверок корректности заполнения документа продажи.
//
// Параметры:
//  МассивПроверок - Массив Из Строка
//  ПараметрыПроверкиКорректностиЗаполнения - см. ПродажиСервер.ПараметрыПроверкиКорректностиЗаполненияДокументаПродажи
//
Процедура ДополнитьМассивПроверокКорректностиЗаполненияДокументаПродажи(МассивПроверок, ПараметрыПроверкиКорректностиЗаполнения) Экспорт

//++ Локализация
	ДокументПродажи = ПараметрыПроверкиКорректностиЗаполнения.ДокументПродажи;
	ТипДокумента = ПараметрыПроверкиКорректностиЗаполнения.ТипДокумента;
	ИмяТаблицы = ПараметрыПроверкиКорректностиЗаполнения.ИмяТаблицы;
	
	ИменаТаблицДляКонтроляНоменклатурыПриПродажеПоПатенту = Новый Массив;
	ИменаТаблицДляКонтроляНоменклатурыПриПродажеПоПатенту.Добавить("Документ.ЗаказКлиента");
	ИменаТаблицДляКонтроляНоменклатурыПриПродажеПоПатенту.Добавить("Документ.АктВыполненныхРабот");
	ИменаТаблицДляКонтроляНоменклатурыПриПродажеПоПатенту.Добавить("Документ.РеализацияТоваровУслуг");
	ИменаТаблицДляКонтроляНоменклатурыПриПродажеПоПатенту.Добавить("Документ.КорректировкаРеализации");
	ИменаТаблицДляКонтроляНоменклатурыПриПродажеПоПатенту.Добавить("Документ.ЗаявкаНаВозвратТоваровОтКлиента");
	ИменаТаблицДляКонтроляНоменклатурыПриПродажеПоПатенту.Добавить("Документ.ВозвратТоваровОтКлиента");
	
	ДобавитьКонтрольНоменклатурыПриПродажеПоПатенту = Ложь;
	Если Не ИменаТаблицДляКонтроляНоменклатурыПриПродажеПоПатенту.Найти(ИмяТаблицы) = Неопределено 
		И ДокументПродажи.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		ДобавитьКонтрольНоменклатурыПриПродажеПоПатенту = РозничныеПродажи.ПокупательФизическоеЛицо(ДокументПродажи.Контрагент);
	КонецЕсли;
	
	Если ТипДокумента <> Тип("ОбработкаОбъект.ПомощникПродаж") Тогда 
		Если ИмяТаблицы = "Документ.ЗаказКлиента" Тогда

			Если ДобавитьКонтрольНоменклатурыПриПродажеПоПатенту Тогда
				ДобавитьПроверкуКонтрольНоменклатурыПриПродажеПоПатенту(МассивПроверок);
			КонецЕсли;
			
		ИначеЕсли ИмяТаблицы = "Документ.АктВыполненныхРабот" Тогда

			Если ДобавитьКонтрольНоменклатурыПриПродажеПоПатенту Тогда
				ДобавитьПроверкуКонтрольНоменклатурыПриПродажеПоПатенту(МассивПроверок);
			КонецЕсли;
			
		ИначеЕсли ИмяТаблицы = "Документ.РеализацияТоваровУслуг" Тогда

			Если ДобавитьКонтрольНоменклатурыПриПродажеПоПатенту Тогда
				ДобавитьПроверкуКонтрольНоменклатурыПриПродажеПоПатенту(МассивПроверок);
			КонецЕсли;
			
		ИначеЕсли ИмяТаблицы = "Документ.КорректировкаРеализации" Тогда

			Если ДобавитьКонтрольНоменклатурыПриПродажеПоПатенту Тогда
				ДобавитьПроверкуКонтрольНоменклатурыПриПродажеПоПатенту(МассивПроверок);
			КонецЕсли;
			
		ИначеЕсли ИмяТаблицы = "Документ.ЗаявкаНаВозвратТоваровОтКлиента" Тогда

			Если ДобавитьКонтрольНоменклатурыПриПродажеПоПатенту Тогда
				ДобавитьПроверкуКонтрольНоменклатурыПриПродажеПоПатенту(МассивПроверок);
			КонецЕсли;
			
		ИначеЕсли ИмяТаблицы = "Документ.ВозвратТоваровОтКлиента" Тогда

			Если ДобавитьКонтрольНоменклатурыПриПродажеПоПатенту Тогда
				ДобавитьПроверкуКонтрольНоменклатурыПриПродажеПоПатенту(МассивПроверок);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
//-- Локализация
	
КонецПроцедуры


// Дополняет запросы проверок корректности заполнения документа продажи.
//
// Параметры:
//  ЭлементПроверки - Строка
//  ТекстЗапроса - Строка
//  ПараметрыЗапроса - Структура из КлючИЗначение
//  ПараметрыПроверкиКорректностиЗаполнения - см. ПродажиСервер.ПараметрыПроверкиКорректностиЗаполненияДокументаПродажи
//
Процедура ДополнитьЗапросыПроверокКорректностиЗаполненияДокументаПродажи(ЭлементПроверки, ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения) Экспорт

//++ Локализация
	
	Если ЭлементПроверки = "ВременнаяТаблицаВышестоящиеПодразделения" Тогда
	
		СформироватьЗапросВременнаяТаблицаВышестоящиеПодразделения(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения);

	ИначеЕсли ЭлементПроверки = "ВременнаяТаблицаДействующихПатентовПоОрганизации" Тогда
	
		СформироватьЗапросВременнаяТаблицаДействующихПатентовПоОрганизации(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения);
		
	ИначеЕсли ЭлементПроверки = "ВременнаяТаблицаДействующихПатентовДляПроверки" Тогда
	
		СформироватьЗапросВременнаяТаблицаДействующихПатентовДляПроверки(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения);
		
	ИначеЕсли ЭлементПроверки = "ВременнаяТаблицаСводныеДанныеПатентовДляПроверки" Тогда
	
		СформироватьЗапросВременнаяТаблицаСводныеДанныеПатентовДляПроверки(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения);
		
	ИначеЕсли ЭлементПроверки = "КонтрольНоменклатурыПриПродажеПоПатенту" Тогда
	
		СформироватьЗапросКонтрольНоменклатурыПриПродажеПоПатенту(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения);
		
	КонецЕсли;
	
//-- Локализация

КонецПроцедуры

// Выводит сообщение об ошибках при проверке корректности заполнения документа продажи.
//
// Параметры:
//  ЭлементПроверки - Строка
//  Выборка - ВыборкаИзРезультатаЗапроса
//  ПараметрыПроверкиКорректностиЗаполнения - см. ПродажиСервер.ПараметрыПроверкиКорректностиЗаполненияДокументаПродажи
//  Отказ - Булево
//
Процедура СообщитьОбОшибкахПроверкиКорректностиЗаполненияДокументаПродажи(ЭлементПроверки, Выборка, ПараметрыПроверкиКорректностиЗаполнения, Отказ) Экспорт

//++ Локализация

	Если ЭлементПроверки = "КонтрольНоменклатурыПриПродажеПоПатенту" Тогда
	
		СообщитьОбОшибкахКонтрольНоменклатурыПриПродажеПоПатенту(Выборка, ПараметрыПроверкиКорректностиЗаполнения, Отказ);
		
	КонецЕсли;
	
//-- Локализация

КонецПроцедуры

//++ Локализация

// Проверяет что в строках табличной части Объекта присутствует номенклатура, которая не подлежит продаже по патенту.
// Возвращает выборку из результата запроса, содержащую данные о строках с такой номенклатурой.
// Метод поддерживает только таблицы 
//  1)Товары для: Чек ККМ, Чек ККМ возврат, Заказ Клиента, Реализация, Корректировка реализации,
//   Акт выполненных работ, Возврат товаров от клиента, Заявка на возврат товаров от клиента
//  2) ВозвращаемыеТовары документа Заявка на возврат товаров от клиента.
//
// Параметры:
//  Объект - см. ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи.ДокументПродажи
//  ИмяТЧ - Строка - Может принимать значения Товары, ВозвращаемыеТовары (только для документа Заявка на возврат товаров от клиента)
//  ПредставлениеТЧ - Строка
//  ВернутьТаблицу - Булево - признак необходимости вернуть таблицу значений.
//
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса, ТаблицаЗначений -
//
Функция НоменклатураЗапрещеннаяКПродажеПоПатенту(Знач Объект, ИмяТЧ = "Товары", ПредставлениеТЧ = "Товары", ВернутьТаблицу = Ложь) Экспорт

	ТипДокумента = ТипЗнч(Объект.Ссылка);
	МассивПроверок = Новый Массив;
	ИндексРезультатаЗапроса = Неопределено;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");
	МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
	МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
	МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
	МассивПроверок.Добавить("ВременнаяТаблицаНаборы");

	Если ТипДокумента = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") 
		И ИмяТЧ = "ВозвращаемыеТовары" Тогда
		
		МассивПроверок.Добавить("ВременнаяТаблицаТоварыИзВозвращаемыхТоваровЗаявкиНаВозвратТоваровОтКлиента");
	Иначе
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");
	КонецЕсли;
	
	ДобавитьПроверкуКонтрольНоменклатурыПриПродажеПоПатенту(МассивПроверок);
	ИндексРезультатаЗапроса = МассивПроверок.ВГраница();

	ПараметрыПроверкиКорректностиЗаполнения = ПродажиСервер.ПараметрыПроверкиКорректностиЗаполненияДокументаПродажи(Объект, "", ИмяТЧ, ПредставлениеТЧ);
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИмяТаблицы", ОбщегоНазначения.ИмяТаблицыПоСсылке(Объект.Ссылка));
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("УчитыватьСкидкиНаценки", Истина);	
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("ПроверятьСкидкиРассчитаны", Ложь);
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИспользоватьПроверкиПоЦенам", Ложь);
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИспользоватьЦеновыеГруппы", ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы"));
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИспользоватьОграниченияПоПользователям", Ложь);
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИспользоватьОграниченияПоСоглашениям", Ложь);
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИспользоватьРучныеСкидки", ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВПродажах"));
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИспользоватьАвтоматическиеСкидки", ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах"));
	ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИспользоватьРасширенныеВозможностиЗаказаКлиента", ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
	
	ТекстЗапроса = "";
	ПараметрыЗапроса = Новый Структура();
		
	ПараметрыЗапроса.Вставить("Дата",          Объект.Дата);
	ПараметрыЗапроса.Вставить("Ссылка",        Объект.Ссылка);
	ПараметрыЗапроса.Вставить("Пользователь",  Пользователи.АвторизованныйПользователь());
	
	ПродажиСервер.СформироватьТекстЗапросаПроверкиКорректностиЗаполненияДокументаПродажи(ТекстЗапроса, ПараметрыЗапроса, МассивПроверок, ПараметрыПроверкиКорректностиЗаполнения);
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Для Каждого ПараметрЗапроса Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
	КонецЦикла;
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ВернутьТаблицу Тогда
		Результат = МассивРезультатов[ИндексРезультатаЗапроса].Выгрузить();
	Иначе
		Результат = МассивРезультатов[ИндексРезультатаЗапроса].Выбрать();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Проверяет, что в строках табличной части Объекта присутствует номенклатура, разрешенная для продажи по патенту.
// Метод поддерживает только таблицы 
//  1)Товары для: Чек ККМ, Чек ККМ возврат, Заказ Клиента, Реализация, Корректировка реализации,
//   Акт выполненных работ, Возврат товаров от клиента, Заявка на возврат товаров от клиента
//  2) ВозвращаемыеТовары документа Заявка на возврат товаров от клиента.
//
// Параметры:
//  Объект - см. ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи.ДокументПродажи
//  СообщатьОбОшибке - Булево - 
//  ИмяТЧ - Строка - Может принимать значения Товары, ВозвращаемыеТовары (только для документа Заявка на возврат товаров от клиента)
//  ПредставлениеТЧ - Строка
//
// Возвращаемое значение:
//  Булево - 
//
Функция РазрешенаПродажаНоменклатурыПоПатенту(Знач Объект, СообщатьОбОшибке = Истина, ИмяТЧ = "Товары", ПредставлениеТЧ = "Товары") Экспорт
	Результат = Истина;

	ТипДокумента = ТипЗнч(Объект.Ссылка);
	
	Если (ТипДокумента = Тип("ДокументСсылка.ЧекККМ") 
			Или ТипДокумента = Тип("ДокументСсылка.ЧекККМВозврат")
			Или ТипДокумента = Тип("ДокументСсылка.ЧекККМКоррекции")
			Или ТипДокумента = Тип("ДокументСсылка.ЗаказКлиента") 
			Или ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			Или ТипДокумента = Тип("ДокументСсылка.КорректировкаРеализации") 
			Или ТипДокумента = Тип("ДокументСсылка.АктВыполненныхРабот")
			Или ТипДокумента = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента")
			Или ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")) 
		  И Объект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда

		Выборка = НоменклатураЗапрещеннаяКПродажеПоПатенту(Объект, ИмяТЧ, ПредставлениеТЧ);
		Результат = (Выборка.Количество() = 0);
		
		Отказ = Ложь;
		// Сообщим пользователю о результатах проверки 
		Если СообщатьОбОшибке Тогда
			ПараметрыПроверкиКорректностиЗаполнения = Новый Структура;
			ПараметрыПроверкиКорректностиЗаполнения.Вставить("ДокументПродажи", Объект);
			ПараметрыПроверкиКорректностиЗаполнения.Вставить("ТипДокумента", ТипДокумента);
			ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИмяТаблицы", ОбщегоНазначения.ИмяТаблицыПоСсылке(Объект.Ссылка));
			ПараметрыПроверкиКорректностиЗаполнения.Вставить("ИмяТЧ", ИмяТЧ);
			ПараметрыПроверкиКорректностиЗаполнения.Вставить("ПредставлениеТЧ", ПредставлениеТЧ);
			СообщитьОбОшибкахКонтрольНоменклатурыПриПродажеПоПатенту(Выборка, ПараметрыПроверкиКорректностиЗаполнения, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

//-- Локализация

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Процедура ДобавитьПроверкуКонтрольНоменклатурыПриПродажеПоПатенту(МассивПроверок)

	МассивПроверок.Добавить("ВременнаяТаблицаВышестоящиеПодразделения");
	МассивПроверок.Добавить("ВременнаяТаблицаДействующихПатентовПоОрганизации");	
	МассивПроверок.Добавить("ВременнаяТаблицаДействующихПатентовДляПроверки");
	МассивПроверок.Добавить("ВременнаяТаблицаСводныеДанныеПатентовДляПроверки");
	МассивПроверок.Добавить("КонтрольНоменклатурыПриПродажеПоПатенту");
	
КонецПроцедуры

Процедура СформироватьЗапросВременнаяТаблицаВышестоящиеПодразделения(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения)

	ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
	|	ТаблицаПодразделений.Подразделение КАК ВышестоящаяСтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВременнаяТаблицаВышестоящиеПодразделения
	|ИЗ
	|	&ТаблицаВышестоящихПодразделений КАК ТаблицаПодразделений
	|;
	|";
	
	ТаблицаВышестоящихПодразделений = Новый ТаблицаЗначений;
	ТаблицаВышестоящихПодразделений.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	
	ДокументПродажи = ПараметрыПроверкиКорректностиЗаполнения.ДокументПродажи; // см. ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи.ДокументПродажи
	ТипДокументаПродажи = ТипЗнч(ДокументПродажи.Ссылка);
	Подразделение = Неопределено;
	Если ТипДокументаПродажи = Тип("ДокументСсылка.ЧекККМВозврат")
		Или ТипДокументаПродажи = Тип("ДокументСсылка.ЧекККМКоррекции") Тогда
		РеквизитыКассыККМ = Справочники.КассыККМ.РеквизитыКассыККМ(ПараметрыПроверкиКорректностиЗаполнения.ДокументПродажи.КассаККМ);
		Подразделение = РеквизитыКассыККМ.Подразделение;
	Иначе
		Подразделение = ПараметрыПроверкиКорректностиЗаполнения.ДокументПродажи.Подразделение;
	КонецЕсли;
	Если ЗначениеЗаполнено(Подразделение) Тогда
		МассивПодразделений = Справочники.Патенты.ПолучитьМассивВышестоящихПодразделений(Подразделение);
		Для Каждого Подразделение Из МассивПодразделений Цикл
			НоваяСтрока = ТаблицаВышестоящихПодразделений.Добавить();
			НоваяСтрока.Подразделение = Подразделение;
		КонецЦикла;
	КонецЕсли;
	ПараметрыЗапроса.Вставить("ТаблицаВышестоящихПодразделений", ТаблицаВышестоящихПодразделений);
	
КонецПроцедуры

Процедура СформироватьЗапросВременнаяТаблицаДействующихПатентовПоОрганизации(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения)

	ТекстЗапросаВременнойТаблицы = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                               |	Патенты.Ссылка КАК Патент,
	                               |	Патенты.КодПоКВПД КАК КодПоКВПД,
	                               |	Патенты.ПродаватьНоменклатуруПустымКодомПоКВПД КАК ПродаватьНоменклатуруПустымКодомПоКВПД,
	                               |	ВЫБОР
	                               |		КОГДА ПОДСТРОКА(Патенты.КодПоКВПД + ""      "", 1, 6) = ""      ""
	                               |			ТОГДА ЛОЖЬ
	                               |		ИНАЧЕ ИСТИНА
	                               |	КОНЕЦ КАК ЗаполненКодПоКВПД
	                               |ПОМЕСТИТЬ ВременнаяТаблицаДействующихПатентовПоОрганизации
	                               |ИЗ
	                               |	Справочник.Патенты КАК Патенты
	                               |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
	                               |		ПО (ИСТИНА)
	                               |ГДЕ
	                               |	Патенты.Владелец = ВременнаяТаблицаДокументПродажи.Организация
	                               |	И НЕ Патенты.ПометкаУдаления
	                               |	И Патенты.ДатаНачала <= КОНЕЦПЕРИОДА(ВременнаяТаблицаДокументПродажи.Дата, ДЕНЬ)
	                               |	И Патенты.ДатаОкончания >= НАЧАЛОПЕРИОДА(ВременнаяТаблицаДокументПродажи.Дата, ДЕНЬ)
	                               |
	                               |ИНДЕКСИРОВАТЬ ПО
	                               |	Патент
	                               |;
	                               |";
                              
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаВременнойТаблицы;
	
КонецПроцедуры

Процедура СформироватьЗапросВременнаяТаблицаДействующихПатентовДляПроверки(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения)

	ТекстЗапросаВременнойТаблицы = "ВЫБРАТЬ
	                               |	Патенты.Патент КАК Патент,
	                               |	Патенты.КодПоКВПД КАК КодПоКВПД,
	                               |	Патенты.ПродаватьНоменклатуруПустымКодомПоКВПД КАК ПродаватьНоменклатуруПустымКодомПоКВПД,
	                               |	Патенты.ЗаполненКодПоКВПД КАК ЗаполненКодПоКВПД
	                               |ПОМЕСТИТЬ ВременнаяТаблицаДействующихПатентовДляПроверки
	                               |ИЗ
	                               |	ВременнаяТаблицаДействующихПатентовПоОрганизации КАК Патенты
	                               |ГДЕ
	                               |	ИСТИНА В
	                               |			(ВЫБРАТЬ ПЕРВЫЕ 1
	                               |				ИСТИНА
	                               |			ИЗ
	                               |				Справочник.Патенты.ПрименениеПатента КАК ПрименениеПатента
	                               |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаВышестоящиеПодразделения КАК Т
	                               |					ПО
	                               |						Т.ВышестоящаяСтруктурнаяЕдиница = ПрименениеПатента.Подразделение
	                               |			ГДЕ
	                               |				ПрименениеПатента.Ссылка = Патенты.Патент)
	                               |
	                               |ОБЪЕДИНИТЬ ВСЕ
	                               |
	                               |ВЫБРАТЬ
	                               |	Патенты.Патент,
	                               |	Патенты.КодПоКВПД,
	                               |	Патенты.ПродаватьНоменклатуруПустымКодомПоКВПД,
	                               |	Патенты.ЗаполненКодПоКВПД
	                               |ИЗ
	                               |	ВременнаяТаблицаДействующихПатентовПоОрганизации КАК Патенты
	                               |ГДЕ
	                               |	НЕ ИСТИНА В
	                               |				(ВЫБРАТЬ ПЕРВЫЕ 1
	                               |					ИСТИНА
	                               |				ИЗ
	                               |					Справочник.Патенты.ПрименениеПатента КАК Т
	                               |				ГДЕ
	                               |					Т.Ссылка = Патенты.Патент)
	                               |
	                               |ИНДЕКСИРОВАТЬ ПО
	                               |	ЗаполненКодПоКВПД,
	                               |	КодПоКВПД
	                               |;
	                               |";
                              
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаВременнойТаблицы;
	
КонецПроцедуры

Процедура СформироватьЗапросВременнаяТаблицаСводныеДанныеПатентовДляПроверки(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения)

	ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
	                              |	МАКСИМУМ(ПатентыДляПроверки.ПродаватьНоменклатуруПустымКодомПоКВПД) КАК РазрешенаПродажаСПустымКодомПоКВПД,
	                              |	МАКСИМУМ(ВЫБОР
	                              |			КОГДА ПатентыДляПроверки.ПродаватьНоменклатуруПустымКодомПоКВПД
	                              |					ИЛИ ПатентыДляПроверки.ЗаполненКодПоКВПД
	                              |				ТОГДА ИСТИНА
	                              |			ИНАЧЕ ЛОЖЬ
	                              |		КОНЕЦ) КАК ЕстьНастроенныеПатенты
	                              |ПОМЕСТИТЬ ВременнаяТаблицаСводныеДанныеПатентовДляПроверки
	                              |ИЗ
	                              |	ВременнаяТаблицаДействующихПатентовДляПроверки КАК ПатентыДляПроверки
	                              |
	                              |ИМЕЮЩИЕ
	                              |	НЕ МАКСИМУМ(ПатентыДляПроверки.ПродаватьНоменклатуруПустымКодомПоКВПД) ЕСТЬ NULL
	                              |;
	                              |";
	
КонецПроцедуры

Процедура СформироватьЗапросКонтрольНоменклатурыПриПродажеПоПатенту(ТекстЗапроса, ПараметрыЗапроса, ПараметрыПроверкиКорректностиЗаполнения)

	ТекстЗапросаДляКонтроля = "ВЫБРАТЬ
	                          |	Таблица.НомерСтроки КАК НомерСтроки,
	                          |	Таблица.Номенклатура КАК Номенклатура,
	                          |	1 КАК КодОшибки
	                          |ИЗ
	                          |	ВременнаяТаблицаТовары КАК Таблица
	                          |ГДЕ
	                          |	&ТекстУсловияДляИсключенияСтрокИзПроверки
	                          |	И ПОДСТРОКА(Таблица.Номенклатура.КодПоКВПД + ""      "", 1, 6) = ""      ""
	                          |	И ЕСТЬNULL(Таблица.Номенклатура.ВидНоменклатуры.ЗапрещенаПродажаЧерезПатент, ЛОЖЬ) = ИСТИНА
	                          |
	                          |ОБЪЕДИНИТЬ ВСЕ
	                          |
	                          |ВЫБРАТЬ
	                          |	Таблица.НомерСтроки,
	                          |	Таблица.Номенклатура,
	                          |	2
	                          |ИЗ
	                          |	ВременнаяТаблицаТовары КАК Таблица
	                          |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСводныеДанныеПатентовДляПроверки КАК СводныеДанныеПатентовДляПроверки
	                          |		ПО (ИСТИНА)
	                          |ГДЕ
	                          |	&ТекстУсловияДляИсключенияСтрокИзПроверки
	                          |	И ПОДСТРОКА(Таблица.Номенклатура.КодПоКВПД + ""      "", 1, 6) = ""      ""
	                          |	И ЕСТЬNULL(Таблица.Номенклатура.ВидНоменклатуры.ЗапрещенаПродажаЧерезПатент, ЛОЖЬ) = ЛОЖЬ
	                          |	И СводныеДанныеПатентовДляПроверки.РазрешенаПродажаСПустымКодомПоКВПД = ЛОЖЬ
	                          |	И СводныеДанныеПатентовДляПроверки.ЕстьНастроенныеПатенты = ИСТИНА
	                          |
	                          |ОБЪЕДИНИТЬ ВСЕ
	                          |
	                          |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                          |	Таблица.НомерСтроки,
	                          |	Таблица.Номенклатура,
	                          |	3
	                          |ИЗ
	                          |	ВременнаяТаблицаТовары КАК Таблица
	                          |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСводныеДанныеПатентовДляПроверки КАК СводныеДанныеПатентовДляПроверки
	                          |		ПО (ИСТИНА)
	                          |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДействующихПатентовДляПроверки КАК ПатентыДляПроверки
	                          |		ПО Таблица.Номенклатура.КодПоКВПД = ПатентыДляПроверки.КодПоКВПД
	                          |			И (ПатентыДляПроверки.ЗаполненКодПоКВПД = ИСТИНА)
	                          |ГДЕ
	                          |	&ТекстУсловияДляИсключенияСтрокИзПроверки
	                          |	И НЕ ПОДСТРОКА(Таблица.Номенклатура.КодПоКВПД + ""      "", 1, 6) = ""      ""
	                          |	И ПатентыДляПроверки.Патент ЕСТЬ NULL
	                          |
	                          |УПОРЯДОЧИТЬ ПО
	                          |	Таблица.НомерСтроки
	                          |;
	                          |";

	ТекстУсловияДляИсключенияСтрокИзПроверки = "ИСТИНА";
	
	ПараметрыЗапросаСсылка = ПараметрыЗапроса.Ссылка; // ДокументСсылка
	ТипСсылки = ТипЗнч(ПараметрыЗапросаСсылка);
	
	Если ТипСсылки = Тип("ДокументСсылка.ЗаказКлиента") 
		Или ТипСсылки = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		ТекстУсловияДляИсключенияСтрокИзПроверки = "Таблица.Отменено = ЛОЖЬ";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
		// Условие для случая, когда оформляется возврат по чеку и в табличной части могут быть строки с нулевым количеством.
		ТекстУсловияДляИсключенияСтрокИзПроверки = "НЕ Таблица.Сумма = 0";
	КонецЕсли;
	
	ТекстЗапросаДляКонтроля = СтрЗаменить(ТекстЗапросаДляКонтроля, "&ТекстУсловияДляИсключенияСтрокИзПроверки", ТекстУсловияДляИсключенияСтрокИзПроверки);
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаДляКонтроля;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахКонтрольНоменклатурыПриПродажеПоПатенту(Выборка, ПараметрыПроверкиКорректностиЗаполнения, Отказ)
	
	ДокументПродажи   = ПараметрыПроверкиКорректностиЗаполнения.ДокументПродажи; // см. ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи.ДокументПродажи
	ПредставлениеТЧ   = ПараметрыПроверкиКорректностиЗаполнения.ПредставлениеТЧ;
	ПутьКТабличнойЧасти = "";
	
	Пока Выборка.Следующий() Цикл

		ТекстОшибки = НСтр("ru = 'Номенклатура %Номенклатура% не подлежит продаже по Патенту'"); 
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%",      Выборка.Номенклатура);
		
		АдресОшибки = " " + НСтр("ru = 'в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
		АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ПредставлениеТЧ);
		
		ПродажиСервер.СообщитьПользователюОбОшибке(
			ТекстОшибки + АдресОшибки,
			ДокументПродажи.Ссылка,
			ПутьКТабличнойЧасти,);

	КонецЦикла;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти
