#Область ПрограммныйИнтерфейс

// Выполняет подключение внешней компоненты MAppDataExch для обмена данными с мобильными приложениями.
//
Процедура ПодключитьВнешнююКомпонентуДляОбменаДаннымиСМобильнымиПриложениями() Экспорт

	Оповещение = Новый ОписаниеОповещения("ПодключитьКомпонентуЗавершение", ЭтотОбъект);
	
	ПараметрыПодключения = ОбщегоНазначенияКлиент.ПараметрыПодключенияКомпоненты();
	
	ОбщегоНазначенияКлиент.ПодключитьКомпонентуИзМакета(Оповещение, 
		"MAppDataExchange",
	    "ОбщийМакет.КомпонентаОбменДаннымиСМобильнымиПриложениями",
	    ПараметрыПодключения);

КонецПроцедуры

Процедура ПодключитьКомпонентуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Подключено Тогда
		
		Сообщение = НСтр("ru='Компонента подключена.'");
		Картинка = БиблиотекаКартинок.Информация32;
	
		Попытка
			ПараметрыПриложения.Вставить("СтандартныеПодсистемы.ОбъектыУТКАУП.КомпонентаОбменаСМП", Результат.ПодключаемыйМодуль);
			УстановитьНастройкиПользователяПриРаботеСКомпонентойОбменаДанными();
		Исключение
			ПараметрыПриложения.Вставить("СтандартныеПодсистемы.ОбъектыУТКАУП.КомпонентаОбменаСМП", Неопределено);
			Сообщение = НСтр("ru='при подключении возникли ошибки.'");
			Картинка = БиблиотекаКартинок.Ошибка32;
		КонецПопытки;
	Иначе
		ПараметрыПриложения.Вставить("СтандартныеПодсистемы.ОбъектыУТКАУП.КомпонентаОбменаСМП", Неопределено);
		Сообщение = НСтр("ru='при подключении возникли ошибки.'");
		Картинка = БиблиотекаКартинок.Ошибка32;
	КонецЕсли;
	
	ЗаголовокСообщения = НСтр("ru='Подключение компоненты:'");
	ПоказатьОповещениеПользователя(ЗаголовокСообщения,,Сообщение, Картинка);
	
	Оповестить("ПодключениеКомпонентыОбменаДаннымиСМобильнымиПриложениями");

КонецПроцедуры

// Выполняет обработку внешнего события, полученного от мобильного приложения
//
// Параметры:
//  Источник - Строка - строка, описывающая источник
//  Событие - Строка - строка,  идентифицирующая конкретное событие
//	Данные - Строка - данные, полученные в рамках события.
//
Процедура ОбработатьВнешнееСобытиеОтМобильногоПриложения(Источник, Событие, Данные) Экспорт
	
	СтруктураИсточникаСобытия = ОписаниеИсточникаСобытия(Источник);
	
	КомпонентаОбменаСМобильнымиПриложениями = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске().СлужебныеПодсистемы_ОбъектыУТКАУП_КомпонентаОбменаСМП;
	
	КодМобильногоКомпьютера = СтруктураИсточникаСобытия.КодМобильногоКомпьютера;
	ИдентификаторМобильнойБазы = СтруктураИсточникаСобытия.ИдентификаторМобильнойБазы;
	ИмяПользователя = СтруктураИсточникаСобытия.ИмяПользователя;
	ПарольПользователя = СтруктураИсточникаСобытия.ПарольПользователя;
	
	ПараметрыОбменаДанными = Данные;
	
	// Сначала проверяется, определены ли настройки для указанного устройства и пользователя.
	Если НЕ МобильныеПриложенияВызовСервера.АутентификацияВыполнена(ИмяПользователя, КодМобильногоКомпьютера, ПарольПользователя) Тогда
		ТекстСообщения = НСтр("ru='Для пользователя не определены настройки в системе'");
		Попытка
			КомпонентаОбменаСМобильнымиПриложениями.СообщитьКлиентуОбОшибке(КодМобильногоКомпьютера, ТекстСообщения);
			Возврат;
		Исключение
			ИмяСобытия = НСтр("ru='Ошибка при вызове метода компоненты обмена данными'");
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,"Ошибка",ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,Истина);
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	Если Событие = "ПолучитьПриложение" Тогда
		
		ПриложениеСтрокой = МобильныеПриложенияВызовСервера.ПолучитьПриложение(ИмяПользователя, КодМобильногоКомпьютера, ПараметрыОбменаДанными);
		Попытка
			КомпонентаОбменаСМобильнымиПриложениями.УстановитьПриложение(КодМобильногоКомпьютера, ПриложениеСтрокой);
		Исключение
			ИмяСобытия = НСтр("ru='Ошибка при вызове метода компоненты обмена данными'");
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,"Ошибка",ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,Истина);
			Возврат;
		КонецПопытки;
			
	ИначеЕсли Событие = "ПолучитьДанные" Тогда
		
		Попытка
			НачальнаяИнициализацияИБ = КомпонентаОбменаСМобильнымиПриложениями.ПолучитьРежимНачальнойИнициализации(КодМобильногоКомпьютера);
		Исключение
			ИмяСобытия = НСтр("ru='Ошибка при вызове метода компоненты обмена данными'");
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,"Ошибка",ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,Истина);
			Возврат;
		КонецПопытки;
		
		ДанныеДляОбмена = МобильныеПриложенияВызовСервера.ПолучитьДанные(ИмяПользователя, КодМобильногоКомпьютера, НачальнаяИнициализацияИБ, ПараметрыОбменаДанными);
		
		Попытка
			КомпонентаОбменаСМобильнымиПриложениями.ПередатьДанныеКлиенту(КодМобильногоКомпьютера, ДанныеДляОбмена);
		Исключение
			ИмяСобытия = НСтр("ru='Ошибка при вызове метода компоненты обмена данными'");
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,"Ошибка",ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,Истина);
			Возврат;
		КонецПопытки;
		
	ИначеЕсли Событие = "ЗаписатьДанные" Тогда
		
		Попытка
			ДанныеМобильногоПриложения = КомпонентаОбменаСМобильнымиПриложениями.ПолучитьДанныеКлиента(КодМобильногоКомпьютера);
		Исключение
			ИмяСобытия = НСтр("ru='Ошибка при вызове метода компоненты обмена данными'");
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,"Ошибка",ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,Истина);
			Возврат;
		КонецПопытки;
		
		Попытка
			МобильныеПриложенияВызовСервера.ЗаписатьДанные(ИмяПользователя, КодМобильногоКомпьютера, ДанныеМобильногоПриложения, ПараметрыОбменаДанными);
		Исключение
			ТекстСообщения = ИнформацияОбОшибке().Описание;
			Попытка
				КомпонентаОбменаСМобильнымиПриложениями.СообщитьКлиентуОбОшибке(КодМобильногоКомпьютера, ТекстСообщения);
				Возврат;
			Исключение
				ИмяСобытия = НСтр("ru='Ошибка при вызове метода компоненты обмена данными'");
				ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,"Ошибка",ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,Истина);			
				Возврат;
			КонецПопытки;
			ИмяСобытия = НСтр("ru='Ошибка при записи данных, полученных от мобильного приложения'");
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,"Ошибка",ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,Истина);
		КонецПопытки;
		
	ИначеЕсли Событие = "ПодтвердитьЗавершениеСеанса" Тогда
		
		Попытка
			МобильныеПриложенияВызовСервера.ЗарегистрироватьПолучениеДанных(ИмяПользователя, КодМобильногоКомпьютера, ПараметрыОбменаДанными);
		Исключение
			ИмяСобытия = НСтр("ru='Ошибка при регистрации получения данных от мобильного приложения'");
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,"Ошибка",ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,Истина);
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет необходимые действия, связанные с мобильными приложениями, при старте системы.
//
Процедура ПриНачалеРаботыСистемы() Экспорт
	
	Если СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске().ПодключатьКомпонентуОбменаДаннымиПриСтартеСистемы Тогда
		ПодключитьВнешнююКомпонентуДляОбменаДаннымиСМобильнымиПриложениями();
	КонецЕсли;
	
КонецПроцедуры

// Выполняется перед интерактивном завершении работы пользователя с областью данных или в локальном режиме.
//
Процедура ПередЗавершениемРаботыСистемы() Экспорт
	
КонецПроцедуры

// Устанавливает компоненте обмена данными настройки, определенные для текущего пользователя.
//
Процедура УстановитьНастройкиПользователяПриРаботеСКомпонентойОбменаДанными() Экспорт
	
	СписокНастроек = МобильныеПриложенияВызовСервера.ПолучитьНастройкиРаботыПользователяСКомпонентойОбменаДанными();
	
	КомпонентаОбменаСМобильнымиПриложениями = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске().СлужебныеПодсистемы_ОбъектыУТКАУП_КомпонентаОбменаСМП;
	
	ИспользоватьTCPIP = Ложь;
	ИспользоватьIRDA = Ложь;
	ИспользоватьCOMПорт = Ложь;
	
	ПортTCPIP = 2002;
	ИмяСервисаIRDA = "S1C8";
	COMПорт = 1;
	
	ВестиЖурналСобытий = Ложь;
	КаталогЖурналаСобытий = "";
	
	Для Каждого Настройка Из СписокНастроек Цикл
		Если Настройка.Представление = "ИспользоватьTCPIP" Тогда
			ИспользоватьTCPIP = Настройка.Значение;
		ИначеЕсли Настройка.Представление = "ИспользоватьIRDA" Тогда
			ИспользоватьIRDA = Настройка.Значение;
		ИначеЕсли Настройка.Представление = "ИспользоватьCOMПорт" Тогда
			ИспользоватьCOMПорт = Настройка.Значение;
		ИначеЕсли Настройка.Представление = "ПортTCPIP" Тогда
			ПортTCPIP = Настройка.Значение;
		ИначеЕсли Настройка.Представление = "ИмяСервисаIRDA" Тогда
			ИмяСервисаIRDA = Настройка.Значение;
		ИначеЕсли Настройка.Представление = "COMПорт" Тогда
			COMПорт = Настройка.Значение;
		ИначеЕсли Настройка.Представление = "ВестиЖурналСобытий" Тогда
			ВестиЖурналСобытий = Настройка.Значение;
		ИначеЕсли Настройка.Представление = "КаталогЖурналаСобытий" Тогда
			КаталогЖурналаСобытий = Настройка.Значение;
		КонецЕсли;
	КонецЦикла;
	
	КомпонентаОбменаСМобильнымиПриложениями = ПараметрыПриложения["СтандартныеПодсистемы.ОбъектыУТКАУП.КомпонентаОбменаСМобильнымиПриложениями"];
	
	Если ИспользоватьTCPIP Тогда
		КомпонентаОбменаСМобильнымиПриложениями.ПодключитьTCPIP(ПортTCPIP);
	КонецЕсли;
	
	Если ИспользоватьIRDA Тогда
		КомпонентаОбменаСМобильнымиПриложениями.ПодключитьIRDA(ИмяСервисаIRDA);
	КонецЕсли;
	
	Если ИспользоватьCOMПорт Тогда
		КомпонентаОбменаСМобильнымиПриложениями.ПодключитьCOMПорт(COMПорт);
	КонецЕсли;
	
	Если ВестиЖурналСобытий Тогда
		КомпонентаОбменаСМобильнымиПриложениями.КаталогЖурналаСобытий = КаталогЖурналаСобытий;
		КомпонентаОбменаСМобильнымиПриложениями.ВестиЖурналСобытий = ВестиЖурналСобытий;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует и возвращает структуру, содержащую информацию об инициаторе обмена
//
// Параметры:
//  Источник - Строка - строка с разделителями, содержащая информацию об источнике.
//
// Возвращаемое значение:
//  Структура - Структура, содержащая информацию об инициаторе обмена.
//
Функция ОписаниеИсточникаСобытия(Источник)
	
	СтруктураИсточника = Новый Структура();
	СтруктураИсточника.Вставить("КодМобильногоКомпьютера", СтрЗаменить(СтрПолучитьСтроку(Источник,2), Символы.ПС, ""));
	СтруктураИсточника.Вставить("ИдентификаторМобильнойБазы", СтрЗаменить(СтрПолучитьСтроку(Источник,3), Символы.ПС, ""));
	СтруктураИсточника.Вставить("ИмяПользователя", СтрЗаменить(СтрПолучитьСтроку(Источник,4), Символы.ПС, ""));
	СтруктураИсточника.Вставить("ПарольПользователя", СтрЗаменить(СтрПолучитьСтроку(Источник,5), Символы.ПС, ""));
		
	Возврат СтруктураИсточника;
	
КонецФункции

#КонецОбласти
