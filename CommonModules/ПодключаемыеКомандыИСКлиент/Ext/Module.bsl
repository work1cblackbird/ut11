#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиКомандФормы

Процедура ОбработатьДействиеОформленияОснования(ИмяПараметраКоманды, ПараметрыВыполнения) Экспорт
	
	СтандартнаяОбработка = Истина;
	ПодключаемыеКомандыИСКлиентПереопределяемый.ОбработатьДействиеОформленияОснования(
		ИмяПараметраКоманды, ПараметрыВыполнения, СтандартнаяОбработка);
	
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ПередСозданиемОснования = ПараметрыВыполнения.Форма.НастройкиВыполненияПодключаемыхКомандИС.ПередСозданиемОснования;
	Если ЗначениеЗаполнено(ПередСозданиемОснования) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения(ПередСозданиемОснования, ПараметрыВыполнения.Форма, ПараметрыВыполнения);
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуСозданияОснованияДокументаИС(
		ПараметрыВыполнения.Форма,
		СтрЗаменить(ПараметрыВыполнения.ОписаниеКоманды.Идентификатор,"ОформитьИС",""),
		ПараметрыВыполнения.ОписаниеКоманды.ТипПараметра.Типы()[0]);
	
КонецПроцедуры

Процедура ОбработатьДействиеВыбораОснования(ИмяПараметраКоманды, ПараметрыВыполнения) Экспорт
	
	СтандартнаяОбработка = Истина;
	ПодключаемыеКомандыИСКлиентПереопределяемый.ОбработатьДействиеВыбораОснования(
		ИмяПараметраКоманды, ПараметрыВыполнения, СтандартнаяОбработка);
	
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуВыбораОснованияДокументаИС(
		ПараметрыВыполнения.Форма,
		ОбработчикЗавершенияВыбораОснованияНаФорме(ПараметрыВыполнения.Форма),
		СтрЗаменить(ПараметрыВыполнения.ОписаниеКоманды.Идентификатор,"ВыбратьИС",""),
		ПараметрыВыполнения.ОписаниеКоманды.ТипПараметра.Типы()[0]);
	
КонецПроцедуры

Процедура ОбработатьДействиеОформленияОснованияПослеПроверок(ПараметрыВыполнения) Экспорт
	
	ОткрытьФормуСозданияОснованияДокументаИС(
		ПараметрыВыполнения.Форма,
		СтрЗаменить(ПараметрыВыполнения.ОписаниеКоманды.Идентификатор,"ОформитьИС",""),
		ПараметрыВыполнения.ОписаниеКоманды.ТипПараметра.Типы()[0]);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОкончанияДействий

#Область ВыборОснования

// Возвращает структуру параметров завершения выбора основания.
//
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * Форма                   - ФормаКлиентскогоПриложения   - форма, в которой происходит выбор основания,
//                             - Неопределено - инициализация структура
//   * ОповещениеПриЗавершении - ОписаниеОповещения - действие при выборе основания,
//                             - Неопределено - инициализация структура
//   * ПерезаполнениеДоступно  - Булево             - признак доступности объекта для перезаполнения.
Функция ПараметрыЗавершенияВыбораОснования() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Форма",                   Неопределено);
	Результат.Вставить("ОповещениеПриЗавершении", Неопределено);
	Результат.Вставить("ПерезаполнениеДоступно",  Ложь);
	
	Возврат Результат;
	
КонецФункции

Процедура ОткрытьФормуВыбораОснования(ИмяФормыВыбора, ПараметрыОткрытияФормы, Владелец, ДополнительныеПараметры) Экспорт
	
	ОткрытьФорму(
		ИмяФормыВыбора,
		ПараметрыОткрытияФормы,
		Владелец,
		Владелец.УникальныйИдентификатор,,,
		Новый ОписаниеОповещения("ПослеЗавершенияВыбораОснования", ЭтотОбъект, ДополнительныеПараметры),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДействияПоУмолчанию

Процедура ОткрытьФормуСозданияОснованияДокументаИС(ФормаВладелец, ИмяДокументаОснования, ТипОбъекта)
	
	ИмяФормыДокумента = СтрШаблон("Документ.%1.ФормаОбъекта", ИмяДокументаОснования);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ФормаВладелец.Объект.Ссылка);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   ФормаВладелец);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОбработчикЗавершенияВыбораОснованияНаФорме(ФормаВладелец));
	ДополнительныеПараметры.Вставить("ТипОбъекта",              ТипОбъекта);
	
	ОткрытьФорму(
		ИмяФормыДокумента,
		ПараметрыФормы,
		ФормаВладелец,
		ФормаВладелец.УникальныйИдентификатор,,,
		Новый ОписаниеОповещения("ПослеЗавершенияВводаОснования", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

// Открывает форму выбора документа-основания.
//
// Параметры:
//  Форма                   - ФормаКлиентскогоПриложения   - форма, из которой выполняется команда выбора,
//  ОповещениеПриЗавершении - ОписаниеОповещения - действие формы после завершения выбора,
//  ИмяДокумента            - Строка             - имя метаданных документа-основания.
//  ТипОбъекта              - Тип                - тип документа ИС для которого происходит выбор основания
//
Процедура ОткрытьФормуВыбораОснованияДокументаИС(Форма, ОповещениеПриЗавершении, ИмяДокумента, ТипОбъекта)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ГосИС.ВетИС") Тогда
		Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль("СобытияФормВЕТИСКлиент");
		Если Модуль.ОткрытьФормуВыбораОснованияДокументаИС(Форма, ОповещениеПриЗавершении, ИмяДокумента, ТипОбъекта) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	
	ДополнительныеПараметры = ПараметрыЗавершенияВыбораОснования();
	ДополнительныеПараметры.Форма                   = Форма;
	ДополнительныеПараметры.ОповещениеПриЗавершении = ОповещениеПриЗавершении;
	ДополнительныеПараметры.ПерезаполнениеДоступно  = Не Форма.ТолькоПросмотр
		И Форма.НастройкиВыполненияПодключаемыхКомандИС.ДоступноПерезаполнение;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "РедактированиеФормыНедоступно") Тогда
		ДополнительныеПараметры.ПерезаполнениеДоступно = ДополнительныеПараметры.ПерезаполнениеДоступно
			И Не Форма.РедактированиеФормыНедоступно;
	КонецЕсли;
	
	ИмяФормыВыбора = СтрШаблон("Документ.%1.ФормаВыбора", ИмяДокумента);
	
	СоответствиеПолей = Новый Соответствие;
	СтруктураОтбора = Новый Структура;
	ПодключаемыеКомандыИСКлиентСервер.ЗаполнитьСоответствиеПолейДокументовОснований(Форма, ТипОбъекта, СоответствиеПолей);
	
	Если СоответствиеПолей.Получить(ИмяДокумента)<>Неопределено Тогда
		Для Каждого СоответствиеПоля Из СоответствиеПолей[ИмяДокумента] Цикл
			//Прямой отбор
			Если ТипЗнч(СоответствиеПоля.Ключ) = Тип("Строка") Тогда
				Если ЗначениеЗаполнено(Форма.Объект[СоответствиеПоля.Ключ]) Тогда
					СтруктураОтбора.Вставить(СоответствиеПоля.Значение, Форма.Объект[СоответствиеПоля.Ключ]);
				КонецЕсли;
			//Безусловный отбор
			Иначе
				СтруктураОтбора.Вставить(СоответствиеПоля.Значение, СоответствиеПоля.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СтруктураОтбора.Количество() > 0 Тогда
		ПараметрыОткрытияФормы.Вставить("Отбор", СтруктураОтбора);
	КонецЕсли;
		
	ОткрытьФормуВыбораОснования(
		ИмяФормыВыбора,
		ПараметрыОткрытияФормы,
		Форма,
		ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеОснования

Процедура ПослеЗавершенияВводаОснования(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Форма.Объект.ДокументОснование = Результат;
	
	Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВыборОснования

Процедура ПредложитьПерезаполнениеОбъекта(Форма, ОповещениеПриЗавершении, РезультатЗаполнения)
	
	ОбработчикЗавершения = Новый ОписаниеОповещения(
		"ОбработатьВозможностьПерезаполненияОбъектаЗавершение",
		ЭтотОбъект,
		Новый Структура("Форма, ОповещениеПриЗавершении, Результат", Форма, ОповещениеПриЗавершении, РезультатЗаполнения));
			
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "Ссылка") Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "Товары") Тогда
			ЗадаватьВопросПоПерезаполнению = Форма.Объект.Товары.Количество();
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "Сырье") Тогда
			ЗадаватьВопросПоПерезаполнению = Форма.Объект.Сырье.Количество();
		Иначе
			ЗадаватьВопросПоПерезаполнению = Ложь;
		КонецЕсли;
		
	ИначеЕсли Форма.Объект.Товары.Количество() > 0 Тогда
		ЗадаватьВопросПоПерезаполнению = Истина;
	Иначе
		ЗадаватьВопросПоПерезаполнению = Ложь;
	КонецЕсли;
	
	Если ЗадаватьВопросПоПерезаполнению Тогда
		ПоказатьВопрос(
			ОбработчикЗавершения,
			НСтр("ru = 'Перезаполнить текущий документ по документу-основанию?'"),
			РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьОбработкуОповещения(ОбработчикЗавершения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьВозможностьПерезаполненияОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ(ДополнительныеПараметры.ОповещениеПриЗавершении = Неопределено) Тогда
		Если Результат = КодВозвратаДиалога.Да Тогда
			Если ТипЗнч(ДополнительныеПараметры.ОповещениеПриЗавершении.ДополнительныеПараметры) = Тип("Структура")Тогда
				ДополнительныеПараметры.ОповещениеПриЗавершении.ДополнительныеПараметры.Вставить("ОбработатьПерезаполнение");
			КонецЕсли;
		КонецЕсли;
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, ДополнительныеПараметры.Результат);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗавершенияВыбораОснования(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Форма.Объект.ДокументОснование = Результат;
	Если ДополнительныеПараметры.ПерезаполнениеДоступно Тогда
		ПредложитьПерезаполнениеОбъекта(
			ДополнительныеПараметры.Форма,
			ДополнительныеПараметры.ОповещениеПриЗавершении,
			Результат);
	ИначеЕсли ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ОбработчикЗавершенияВыбораОснованияНаФорме(Форма)
	
	Возврат Новый ОписаниеОповещения("Подключаемый_ПослеВыбораОснования", Форма, Новый Структура)
	
КонецФункции

#КонецОбласти
