
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ОформлениеСДИЗЗЕРНО") Тогда
		
		ИнтеграцияЗЕРНОУТ.ЗаполнитьПередачуТоваровХранителюНаОснованииОформленияСДИЗЗЕРНО(
			Объект, 
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьДанныеПрослеживаемостиНомеровГТД(Объект, Объект.ВидыЗапасов, Объект.Дата, "ВидыЗапасов");
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	Документы.ТранспортнаяНакладная.ОбновитьРеквизитыТранспортныхНакладныхПриЗаписиДокументаОснования(Объект, Отказ);
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт

//++ Локализация

	Объект.ШтрихкодыУпаковок.Очистить();

//-- Локализация

КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	ОбменСГИСЭПДПереопределяемый.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	РегистрыСведений.ДополнительныеСведенияПоТоварамЗаказовТорговыхПлощадок.ДобавитьКомандуСоздатьНаОсновании(
		КомандыСозданияНаОсновании,
		"ИспользоватьКомиссиюПриПродажах");
	//-- Локализация
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	
	ЭтоПартнер = ПраваПользователяПовтИсп.ЭтоПартнер();
	
	Если Не ЭтоПартнер Тогда
		// Товарная накладная (ТОРГ-12)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "ТОРГ12";
		КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Ложь);
		КомандаПечати.Порядок = 17;
		
		// Товарная накладная с номерами ГТД (ТОРГ-12)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "ТОРГ12";
		КомандаПечати.Представление = НСтр("ru = 'Товарная накладная с номерами ГТД (ТОРГ-12)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Ложь);
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьГТД",    Истина);
		КомандаПечати.Порядок = 19;
		УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати,
														  "ХозяйственнаяОперация",
														  Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи,
														  ВидСравнения.Равно);
	КонецЕсли;
	
	Если ПравоДоступа("Изменение", Метаданные.Документы.ПередачаТоваровХранителю) Тогда
		// Реестр номеров ГТД
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "РеестрНомеровГТД";
		КомандаПечати.Представление = НСтр("ru = 'Реестр номеров ГТД'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 22;
		КомандаПечати.ФункциональныеОпции = "ИспользоватьИмпортныеТовары";
		УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати,
														  "ХозяйственнаяОперация",
														  Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи,
														  ВидСравнения.Равно);
	КонецЕсли;
	
	// Порядок 23 - ТТН, 24 - Транспортная накладная
	Документы.ТранспортнаяНакладная.ДобавитьКомандыПечати(КомандыПечати, 23);
	
	Если Не ЭтоПартнер Тогда
		// Накладная (М-15)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "М15";
		КомандаПечати.Представление = НСтр("ru = 'Накладная (М-15)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 25;
		
		// МХ-1
		
		ХозяйственныеОперацииКоманды = Новый Массив;
		ХозяйственныеОперацииКоманды.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи);
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru = 'Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 39;
		УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
			КомандаПечати,
			"ХозяйственнаяОперация",
			ХозяйственныеОперацииКоманды,
			ВидСравнения.ВСписке);
		
	КонецЕсли;
	

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//++ Локализация
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрНомеровГТД") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РеестрНомеровГТД",
			НСтр("ru = 'Реестр номеров ГТД'"),
			СформироватьПечатнуюФормуРеестрНомеровГТД(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.ПередачаТоваровХранителю.ПФ_MXL_РеестрНомеровГТД");
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура СформироватьКомплектПечатныхФорм(МассивОбъектов,
										ПараметрыПечати,
										КоллекцияПечатныхФорм,
										ОбъектыПечати,
										КомплектПечатныхФорм) Экспорт
	
	//++ Локализация
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
																									КомплектПечатныхФорм,
																									МассивОбъектов,
																									"ТОРГ12");
	
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПередачаТоваровХранителю", КомплектПечати.Объекты);
		
		ПараметрыПечатиФормы = Новый Структура("ВыводитьУслуги", Ложь);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуТОРГ12(СтруктураТипов, ОбъектыПечати, ПараметрыПечатиФормы));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
																									КомплектПечатныхФорм,
																									МассивОбъектов,
																									"ТОРГ12_ГТД");
		
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПередачаТоваровХранителю", КомплектПечати.Объекты);
		
		ПараметрыПечатиФормы = Новый Структура("ВыводитьУслуги, ВыводитьГТД", Ложь, Истина);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуТОРГ12(СтруктураТипов, ОбъектыПечати, ПараметрыПечатиФормы));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
																									КомплектПечатныхФорм,
																									МассивОбъектов,
																									"РеестрНомеровГТД");
	
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			СформироватьПечатнуюФормуРеестрНомеровГТД(КомплектПечати.Объекты, ОбъектыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
																									КомплектПечатныхФорм,
																									МассивОбъектов,
																									"ТТН");
	
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		ОбъектыКоторыеМожноПечатать = Документы.ТранспортнаяНакладная.ОбъектыКоторыеМожноПечатать(КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Документы.ТранспортнаяНакладная.СформироватьПечатнуюФормуТТН(ОбъектыКоторыеМожноПечатать, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
																									КомплектПечатныхФорм,
																									МассивОбъектов,
																									"ТранспортнаяНакладная");
	
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		ОбъектыКоторыеМожноПечатать = Документы.ТранспортнаяНакладная.ОбъектыКоторыеМожноПечатать(КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Документы.ТранспортнаяНакладная.СформироватьПечатнуюФормуТранспортнойНакладной(ОбъектыКоторыеМожноПечатать,
																								ОбъектыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
																									КомплектПечатныхФорм,
																									МассивОбъектов,
																									"М15");
	
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПередачаТоваровХранителю", КомплектПечати.Объекты);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуМ15(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
																									КомплектПечатныхФорм,
																									МассивОбъектов,
																									"МХ1");
	
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПередачаТоваровХранителю", КомплектПечати.Объекты);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуМХ1(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

Процедура КомплектПечатныхФорм(КомплектПечатныхФорм) Экспорт
	
	//++ Локализация
	
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
																			"ТОРГ12",
																			НСтр("ru = 'Товарная накладная (ТОРГ-12)'"),
																			0);
	
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
																			"ТОРГ12_ГТД",
																			НСтр("ru = 'Товарная накладная с номерами ГТД (ТОРГ-12)'"),
																			0);
	
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
																			"РеестрНомеровГТД",
																			НСтр("ru = 'Реестр номеров ГТД'"),
																			0);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьТТН") Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
																				"ТТН",
																				НСтр("ru = 'Товарно-транспортная накладная (1-Т)'"),
																				0);
		
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
																				"ТранспортнаяНакладная",
																				НСтр("ru = 'Транспортная накладная'"),
																				0);
	КонецЕсли;
	
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
																			"М15",
																			НСтр("ru = 'Накладная (М-15)'"),
																			0);
	
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
																			"МХ1",
																			НСтр("ru = 'Акт о приеме-передаче ТМЦ на хранение (МХ-1)'"),
																			0);
	
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

// Функция получает данные для формирования печатной формы ТОРГ - 12
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив - Массив ссылок на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыТОРГ12(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПередачаТоваровХранителю КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	Если ПараметрыПечати.Свойство("ВыводитьГТД") Тогда
		ПараметрыЗаполнения.ВключаяНомераГТД = ПараметрыПечати.ВыводитьГТД;
	КонецЕсли;
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	ПродажиСервер.ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц, "ПередачаТоваровХранителюТаблицаТоваров");
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка     КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО               КАК Статус,
	|	ЕСТЬNULL(ПередачаТоваров.ИсправляемыйДокумент.Номер, ПередачаТоваров.Номер) КАК Номер,
	|	ЕСТЬNULL(ПередачаТоваров.ИсправляемыйДокумент.Дата, ПередачаТоваров.Дата) КАК Дата,
	|	ПередачаТоваров.Партнер    КАК Партнер,
	|	ПередачаТоваров.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.Организация.ОбособленноеПодразделение
	|			ТОГДА ПередачаТоваров.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ ПередачаТоваров.Организация
	|	КОНЕЦ                      КАК Организация,
	|	ПередачаТоваров.Организация.Префикс КАК Префикс,
	|	ПередачаТоваров.Валюта     КАК Валюта,
	|	ПередачаТоваров.АдресДоставки КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПередачаТоваров.Контрагент
	|		ИНАЧЕ ПередачаТоваров.Грузополучатель
	|	КОНЕЦ                     КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПередачаТоваров.Организация
	|		ИНАЧЕ ПередачаТоваров.Грузоотправитель
	|	КОНЕЦ                     КАК Грузоотправитель,
	|	ПередачаТоваров.БанковскийСчетОрганизации      КАК БанковскийСчетОрганизации,
	|	ПередачаТоваров.БанковскийСчетКонтрагента      КАК БанковскийСчетКонтрагента,
	|	ПередачаТоваров.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ПередачаТоваров.БанковскийСчетГрузополучателя  КАК БанковскийСчетГрузополучателя,
	|	ПередачаТоваров.Подразделение  КАК Подразделение,
	|	ПередачаТоваров.Основание      КАК Основание,
	|	ПередачаТоваров.ОснованиеДата  КАК ОснованиеДата,
	|	ПередачаТоваров.ОснованиеНомер КАК ОснованиеНомер,
	|	ПередачаТоваров.Отпустил          КАК Кладовщик,
	|	ПередачаТоваров.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	ТаблицаОтветственныеЛица.РуководительНаименование     КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность        КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПередачаТоваров.ДоверенностьНомер  КАК ДоверенностьНомер,
	|	ПередачаТоваров.ДоверенностьДата   КАК ДоверенностьДата,
	|	ПередачаТоваров.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ПередачаТоваров.ДоверенностьЛицо   КАК ДоверенностьЛицо,
	|	&ЕдиницаИзмеренияВеса     КАК ЕдиницаИзмеренияВеса
	|ИЗ
	|	Документ.ПередачаТоваровХранителю КАК ПередачаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПередачаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПередачаТоваров.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыПечати
	|ИЗ
	|	ПередачаТоваровХранителюТаблицаТоваров КАК Товары
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры
	|ПОМЕСТИТЬ КомплектацииДокументов
	|ИЗ
	|	ПередачаТоваровХранителюТаблицаТоваров КАК Товары
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка               КАК Ссылка,
	|	МИНИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТоваров.НоменклатураНабора   КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	СУММА(ВЫБОР
	|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL
	|						ТОГДА ТаблицаТоваров.Количество
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТаблицаТоваров.Упаковка.ТипИзмеряемойВеличины = Значение(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|								ТОГДА 0
	|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|						КОНЕЦ
	|				КОНЕЦ * &ТекстЗапросаВесУпаковки
	|		ИНАЧЕ 0
	|	КОНЕЦ)                              КАК МассаБрутто,
	|	СУММА(ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры) КАК МассаНетто,
	|	СУММА(ТаблицаТоваров.СуммаБезНДС)   КАК СуммаБезНДС,
	|	0                                   КАК СуммаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	ПередачаТоваровХранителюТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НоменклатураНабора,
	|	ХарактеристикаНабора
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 4
	|ВЫБРАТЬ
	|	Товары.Ссылка               КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|				И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                       КАК ОсновнаяКомплектующая,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора   КАК НоменклатураНабора,
	|	Товары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Товары.Номенклатура         КАК Номенклатура,
	|	Товары.Характеристика       КАК Характеристика,
	|	0                           КАК КоличествоПоУмолчанию,
	|	Товары.Количество           КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС) КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|				И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика
	|			ТОГДА Товары.НомерГТД
	|		ИНАЧЕ NULL
	|	КОНЕЦ                       КАК НомерГТД
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	ПередачаТоваровХранителюТаблицаТоваров КАК Товары
	|
	|ГДЕ
	|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыКомплектации.Ссылка                  КАК Ссылка,
	|	ЛОЖЬ                                       КАК ОсновнаяКомплектующая,
	|	ВариантыКомплектации.Ссылка                КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектации.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектации.Ссылка.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектации.Ссылка.Владелец       КАК НоменклатураНабора,
	|	ВариантыКомплектации.Ссылка.Характеристика КАК ХарактеристикаНабора,
	|	ВариантыКомплектации.Номенклатура          КАК Номенклатура,
	|	ВариантыКомплектации.Характеристика        КАК Характеристика,
	|	СУММА(ВариантыКомплектации.Количество)     КАК КоличествоПоУмолчанию,
	|	0                                          КАК Количество,
	|	NULL                                       КАК СтавкаНДС,
	|	NULL                                       КАК НомерГТД
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПечати КАК ТоварыКомплектации
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектации.Ссылка В
	|		(ВЫБРАТЬ
	|			Товары.ВариантКомплектацииНоменклатуры
	|		ИЗ КомплектацииДокументов КАК Товары)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКомплектации.Ссылка,
	|	ВариантыКомплектации.Ссылка,
	|	ВариантыКомплектации.Ссылка.Владелец,
	|	ВариантыКомплектации.Ссылка.Характеристика,
	|	ВариантыКомплектации.Номенклатура,
	|	ВариантыКомплектации.Характеристика,
	|	ВариантыКомплектации.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НоменклатураНабора,
	|	ХарактеристикаНабора
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 5
	|ВЫБРАТЬ
	|	Таблица.Ссылка               КАК Ссылка,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	|	Таблица.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора   КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Таблица.Номенклатура         КАК Номенклатура,
	|	Таблица.Характеристика       КАК Характеристика,
	|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	|	СУММА(Таблица.Количество)    КАК Количество,
	|	МАКСИМУМ(Таблица.СтавкаНДС)  КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.НомерГТД)   КАК НомерГТД
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 6
	|ВЫБРАТЬ
	|	Результат.Ссылка               КАК Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора   КАК НоменклатураНабора,
	|	Результат.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|		КОГДА Результат.КоличествоПоУмолчанию <> 0
	|				И Результат.ОсновнаяКомплектующая
	|			ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|		ИНАЧЕ NULL
	|	КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Результат.ОсновнаяКомплектующая
	|			ТОГДА Результат.СтавкаНДС
	|		ИНАЧЕ NULL
	|	КОНЕЦ)                         КАК СтавкаНДС,
	|	МАКСИМУМ(Результат.НомерГТД)   КАК НомерГТД,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Результат.КоличествоПоУмолчанию <> 0
	|			ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|		ИНАЧЕ NULL
	|	КОНЕЦ)                         КАК КоэффициентМаксимум,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|		КОГДА Результат.КоличествоПоУмолчанию <> 0
	|			ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|		ИНАЧЕ NULL
	|	КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК КоэффициентМинимум
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НоменклатураНабора,
	|	ХарактеристикаНабора
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 7
	|ВЫБРАТЬ
	|	Таблица.Ссылка               КАК Ссылка,
	|	Таблица.НомерСтроки          КАК НомерСтроки,
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|				ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|				И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В(
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	|		ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|	КОНЕЦ                        КАК ВариантРасчетаЦеныНабора,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|		ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|	КОНЕЦ                        КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора   КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК КоличествоУпаковок,
	|	Таблица.МассаБрутто          КАК МассаБрутто,
	|	Таблица.МассаНетто           КАК МассаНетто,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаНаборыДополнительно.КоэффициентМинимум = ВременнаяТаблицаНаборыДополнительно.КоэффициентМаксимум
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                        КАК ПолныйНабор,
	|	Таблица.СуммаБезНДС          КАК СуммаБезНДС,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС) КАК СтавкаНДС,
	|	0                            КАК СуммаНДС,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.НомерГТД, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК НомерГТД
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|			И Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|			И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НоменклатураНабора,
	|	ХарактеристикаНабора
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 8
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Ссылка КАК Документ.ПередачаТоваровХранителю) КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки          КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
	|			ТОГДА ВременнаяТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ ТаблицаТоваров.НомерСтроки
	|	КОНЕЦ                        КАК НомерСтрокиНаборы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
	|			ТОГДА ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
	|	КОНЕЦ                        КАК ВариантРасчетаЦеныНабора,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
	|			ТОГДА ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	|	КОНЕЦ                        КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ТаблицаТоваров.НоменклатураНабора   КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Серия КАК Справочник.СерииНоменклатуры) КАК Серия,
	|	ТаблицаТоваров.Упаковка             КАК Упаковка,
	|	ТаблицаТоваров.Количество           КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок   КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL
	|						ТОГДА ТаблицаТоваров.Количество
	|					ИНАЧЕ
	|						ВЫБОР
	|							КОГДА ТаблицаТоваров.Упаковка.ТипИзмеряемойВеличины = Значение(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|								ТОГДА 0
	|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|						КОНЕЦ
	|				КОНЕЦ * &ТекстЗапросаВесУпаковки
	|		ИНАЧЕ 0
	|	КОНЕЦ                        КАК МассаБрутто,
	|	ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры КАК МассаНетто,
	|	ТаблицаТоваров.СуммаБезНДС          КАК СуммаБезНДС,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС) КАК СтавкаНДС,
	|	0                                   КАК СуммаНДС,
	|	ТаблицаТоваров.НомерГТД             КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                        КАК ЭтоКомплектующие,
	|	ЛОЖЬ                         КАК ЭтоНабор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
	|			ТОГДА ВременнаяТаблицаНаборы.ПолныйНабор
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                        КАК ПолныйНабор
	|ПОМЕСТИТЬ ВременнаяТаблицаТоваров
	|ИЗ
	|	ПередачаТоваровХранителюТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|		ПО ВременнаяТаблицаНаборы.Ссылка = ТаблицаТоваров.Ссылка
	|			И ВременнаяТаблицаНаборы.НоменклатураНабора = ТаблицаТоваров.НоменклатураНабора
	|			И ВременнаяТаблицаНаборы.ХарактеристикаНабора = ТаблицаТоваров.ХарактеристикаНабора
	|
	|ГДЕ
	|	(ТаблицаТоваров.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	ИЛИ (ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В(
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВременнаяТаблицаНаборы.Ссылка КАК Документ.ПередачаТоваровХранителю) КАК Ссылка,
	|	0                                           КАК НомерСтроки,
	|	ВременнаяТаблицаНаборы.НомерСтроки          КАК НомерСтрокиНаборы,
	|	ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВременнаяТаблицаНаборы.НоменклатураНабора   КАК НоменклатураНабора,
	|	ВременнаяТаблицаНаборы.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ВЫРАЗИТЬ(ВременнаяТаблицаНаборы.НоменклатураНабора КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВременнаяТаблицаНаборы.ХарактеристикаНабора КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|	ВременнаяТаблицаНаборы.Количество           КАК Количество,
	|	ВременнаяТаблицаНаборы.КоличествоУпаковок   КАК КоличествоУпаковок,
	|	ВременнаяТаблицаНаборы.МассаБрутто          КАК МассаБрутто,
	|	ВременнаяТаблицаНаборы.МассаНетто           КАК МассаНетто,
	|	ВременнаяТаблицаНаборы.СуммаБезНДС          КАК СуммаБезНДС,
	|	ВременнаяТаблицаНаборы.СтавкаНДС            КАК СтавкаНДС,
	|	ВременнаяТаблицаНаборы.СуммаНДС             КАК СуммаНДС,
	|	ВременнаяТаблицаНаборы.НомерГТД             КАК НомерГТД,
	|	ЛОЖЬ                                        КАК ЭтоКомплектующие,
	|	ИСТИНА                                      КАК ЭтоНабор,
	|	ВременнаяТаблицаНаборы.ПолныйНабор          КАК ПолныйНабор
	|ИЗ
	|	ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|ГДЕ
	|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 9
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка               КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки          КАК НомерСтроки,
	|	ТаблицаТоваров.НомерСтрокиНаборы    КАК НомерСтрокиНаборы,
	|	ТаблицаТоваров.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаТоваров.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ТаблицаТоваров.НоменклатураНабора   КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.Номенклатура         КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ                               КАК НоменклатураКод,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ТаблицаТоваров.Номенклатура.Наименование КАК НоменклатураНаименованиеКраткое,
	|	ТаблицаТоваров.Характеристика       КАК Характеристика,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	ТаблицаТоваров.Серия.Наименование КАК СерияНаименование,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ                               КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
	|	КОНЕЦ                               КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|	КОНЕЦ                               КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаТоваров.Упаковка             КАК Упаковка,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|			&ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|		ИНАЧЕ
	|			&ТекстЗапросаНаименованиеЕдиницыИзмерения2
	|	КОНЕЦ                               КАК ВидУпаковки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА """"
	|		ИНАЧЕ ТаблицаТоваров.Упаковка.Наименование
	|	КОНЕЦ                               КАК УпаковкаНаименование,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения ИЛИ ТаблицаТоваров.ЭтоНабор
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ КоэффициентыУпаковок.Количество / КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|	КОНЕЦ                               КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|				И Не ТаблицаТоваров.ЭтоНабор
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|						ТОГДА КоэффициентыУпаковок.Количество
	|					ИНАЧЕ КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА 1
	|				ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
	|			КОНЕЦ
	|	КОНЕЦ                               КАК КоличествоВОдномМесте,
	|	ТаблицаТоваров.МассаНетто           КАК МассаНетто,
	|	ТаблицаТоваров.МассаБрутто          КАК МассаБрутто,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	КОНЕЦ                               КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС          КАК СуммаБезНДС,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС) КАК СтавкаНДС,
	|	0                                   КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС          КАК СуммаСНДС,
	|	ТаблицаТоваров.НомерГТД             КАК НомерГТД,
	|	ТаблицаТоваров.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТоваров.ЭтоКомплектующие     КАК ЭтоКомплектующие,
	|	ТаблицаТоваров.ЭтоНабор             КАК ЭтоНабор,
	|	ТаблицаТоваров.ПолныйНабор          КАК ПолныйНабор,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
	|				И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ВременнаяТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО ТаблицаТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
	|			И ТаблицаТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
	|			И ТаблицаТоваров.КоличествоУпаковок = КоэффициентыУпаковок.КоличествоУпаковок 
	|			И НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтрокиНаборы,
	|	ЭтоНабор УБЫВ,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"КоэффициентыУпаковок.ВидУпаковки",
			"ТаблицаТоваров.Номенклатура"));
	
	ЕдиницаИзмеренияВеса            = Константы.ЕдиницаИзмеренияВеса.Получить();
	ВыводитьБазовыеЕдиницыИзмерения = Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить()
										ИЛИ ПараметрыЗаполнения.ВключаяНомераГТД;
	
	Запрос.УстановитьПараметр("КолонкаКодов",                    КолонкаКодов);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",            ЕдиницаИзмеренияВеса);
	Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса",   ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", ВыводитьБазовыеЕдиницыИзмерения);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[9];
	
	СтруктураДанныхДляПечати = Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
												РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		* Ссылка 				- ДокументСсылка.ПередачаТоваровХранителю 	- ссылка на документ.
//		* Валюта 				- СправочникСсылка.Валюты 					- валюта документа.
//		* ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации 	- операция документа.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                     КАК Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНаборов      КАК АналитикаУчетаНаборов,
	|	ТаблицаТоваров.Упаковка                   КАК Упаковка,
	|	ТаблицаТоваров.Цена                       КАК Цена,
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки)      КАК НомерСтроки
	|
	|ПОМЕСТИТЬ СтрокиТоваров
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНаборов,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.Цена
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНаборов,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.Цена
	|;
	|///////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	СтрокиТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка   КАК Ссылка,
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыКомплектацииНоменклатуры.ПустаяСсылка)) КАК ВариантКомплектацииНоменклатуры,
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах, ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)) КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ЕСТЬNULL(АналитикаУчетаНаборов.НоменклатураНабора, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК НоменклатураНабора,
	|	ЕСТЬNULL(АналитикаУчетаНаборов.ХарактеристикаНабора, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК ХарактеристикаНабора,
	|	АналитикаУчетаНоменклатуры.Номенклатура    КАК Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика  КАК Характеристика,
	|	АналитикаУчетаНоменклатуры.Серия           КАК Серия,
	|	ТаблицаДокумента.Упаковка КАК Упаковка,
	|	СУММА(ТаблицаДокумента.Количество)         КАК Количество,
	|	0                                          КАК КоличествоПоРНПТ,
	|	СУММА(ТаблицаДокумента.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора, ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)) КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаДокумента.Цена      КАК Цена,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС) КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаНДСРегл, 0)) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, ТаблицаДокумента.Сумма)) КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА &ВключаяНомераГТД
	|			ТОГДА ТаблицаДокумента.НомерГТД
	|		ИНАЧЕ &ПустаяГТД
	|	КОНЕЦ  КАК НомерГТД,
	|	ИСТИНА КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				И ТаблицаДокумента.Ссылка.ВернутьМногооборотнуюТару
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                             КАК ЭтоНеВозвратнаяТара,
	|	ТаблицаДокумента.Ссылка.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару
	|ПОМЕСТИТЬ ПередачаТоваровХранителюТаблицаТоваров
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.ВидыЗапасов КАК ТаблицаДокумента
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|		ПО ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|			И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|			И СуммыДокументовВВалютахУчета.Активность
	|			И &ПересчитыватьВВалютуРегл
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиТоваров КАК СтрокиТоваров
	|		ПО ТаблицаДокумента.Ссылка = СтрокиТоваров.Ссылка
	|			И ТаблицаДокумента.АналитикаУчетаНоменклатуры = СтрокиТоваров.АналитикаУчетаНоменклатуры
	|			И ТаблицаДокумента.АналитикаУчетаНаборов = СтрокиТоваров.АналитикаУчетаНаборов
	|			И ТаблицаДокумента.Упаковка = СтрокиТоваров.Упаковка
	|			И ТаблицаДокумента.Цена = СтрокиТоваров.Цена
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|			ПО ВариантыКомплектацииНоменклатуры.Владелец = ТаблицаДокумента.АналитикаУчетаНаборов.НоменклатураНабора
	|			И ВариантыКомплектацииНоменклатуры.Характеристика = ТаблицаДокумента.АналитикаУчетаНаборов.ХарактеристикаНабора
	|			И ВариантыКомплектацииНоменклатуры.Основной
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиТоваров.НомерСтроки,
	|	ТаблицаДокумента.Ссылка,
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыКомплектацииНоменклатуры.ПустаяСсылка)),
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах, ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)),
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора, ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)),
	|	ЕСТЬNULL(АналитикаУчетаНаборов.НоменклатураНабора, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|	ЕСТЬNULL(АналитикаУчетаНаборов.ХарактеристикаНабора, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|	АналитикаУчетаНоменклатуры.Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика,
	|	АналитикаУчетаНоменклатуры.Серия,
	|	ТаблицаДокумента.Упаковка,
	|	ТаблицаДокумента.Цена,
	|	ВЫБОР
	|		КОГДА &ВключаяНомераГТД
	|			ТОГДА ТаблицаДокумента.НомерГТД
	|		ИНАЧЕ &ПустаяГТД
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				И ТаблицаДокумента.Ссылка.ВернутьМногооборотнуюТару
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	НомерСтроки,
	|	ЕСТЬNULL(АналитикаУчетаНаборов.НоменклатураНабора, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|	ЕСТЬNULL(АналитикаУчетаНаборов.ХарактеристикаНабора, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтрокиТоваров
	|";
	
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	Запрос.УстановитьПараметр("ВключаяНомераГТД",         ПараметрыЗаполнения.ВключаяНомераГТД);
	Запрос.УстановитьПараметр("ПустаяГТД",                Справочники.НомераГТД.ПустаяСсылка());
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Функция получает данные для формирования печатной формы Реестр номеров ГТД.
//
// Параметры:
//	ПараметрыПечати - Структура - структура дополнительных параметров печати,
//	МассивОбъектов  - Массив    - массив ссылок на объекты которые нужно распечатать.
//
// Возвращаемое значение:
//	ТабличныйДокумент - печатная форма Реестр номеров ГТД документов передачи товаров хранителю.
//
Функция СформироватьПечатнуюФормуРеестрНомеровГТД(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВидыЗапасов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВтТаблицаДокументов
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка В(&МассивОбъектов)
	|	И ТаблицаВидыЗапасов.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|;
	|
	|///////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка      КАК Ссылка,
	|	ДанныеДокумента.Номер       КАК Номер,
	|	ДанныеДокумента.Дата        КАК Дата,
	|	ДанныеДокумента.ИсправляемыйДокумент.Номер КАК НомерИсправляемогоДокумента,
	|	ДанныеДокумента.ИсправляемыйДокумент.Дата  КАК ДатаИсправляемогоДокумента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Контрагент  КАК Контрагент,
	|	ДанныеДокумента.Менеджер.ФизическоеЛицо КАК МенеджерФизическоеЛицо
	|ИЗ
	|	Документ.ПередачаТоваровХранителю КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.Ссылка                       КАК Ссылка,
	|	АналитикаУчетаНоменклатуры.Номенклатура         КАК Номенклатура,
	|	АналитикаУчетаНоменклатуры.Номенклатура.Код     КАК Код,
	|	АналитикаУчетаНоменклатуры.Номенклатура.Артикул КАК Артикул,
	|	АналитикаУчетаНоменклатуры.Номенклатура.НаименованиеПолное КАК НаименованиеНоменклатуры,
	|	АналитикаУчетаНоменклатуры.Характеристика.НаименованиеПолное КАК Характеристика,
	|	АналитикаУчетаНоменклатуры.Серия                КАК Серия,
	|	ПРЕДСТАВЛЕНИЕ(АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	СУММА(ТаблицаВидыЗапасов.Количество)            КАК Количество,
	|	ТаблицаВидыЗапасов.НомерГТД                     КАК НомерГТД,
	|	ТаблицаВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.Ссылка.ВернутьМногооборотнуюТару
	|				И АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                           КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокументов.Ссылка
	|ГДЕ
	|	ТаблицаВидыЗапасов.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.Ссылка,
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	АналитикаУчетаНоменклатуры.Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика,
	|	АналитикаУчетаНоменклатуры.Серия,
	|	ТаблицаВидыЗапасов.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаВидыЗапасов.НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаТоваровХранителю КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокументов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|	И ТаблицаДокументов.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	УстановитьПривилегированныйРежим(Истина);
	МассивРезультатов = Запрос.ВыполнитьПакет(); 
	УстановитьПривилегированныйРежим(Ложь);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТоваровХранителю_РеестрНомеровГТД";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПередачаТоваровХранителю.ПФ_MXL_РеестрНомеровГТД");
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов();
	ИмяКолонкиКодов = КолонкаКодов.ИмяКолонки;
	ПредставлениеКолонкиКодов = КолонкаКодов.ПредставлениеКолонки;
	ВыводитьКоды = ЗначениеЗаполнено(ИмяКолонкиКодов);
	
	ДанныеПечати              = МассивРезультатов[1].Выбрать();
	ВыборкаПоДокументам       = МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаПоДокументамБезГТД = МассивРезультатов[3].Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Область = Макет.ПолучитьОбласть("Шапка");
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, Область,
			ДанныеПечати.Ссылка);
			
		ДатаПолученияСведений = ?(ЗначениеЗаполнено(ДанныеПечати.ДатаИсправляемогоДокумента), ДанныеПечати.ДатаИсправляемогоДокумента, ДанныеПечати.Дата);
		
		ТекстЗаголовка           = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати,
																						НСтр("ru='Реестр номеров ГТД к накладной'"));
		ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
										ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДатаПолученияСведений),
										"ПолноеНаименование");
		ПредставлениеПартнера    = ФормированиеПечатныхФорм.ОписаниеОрганизации(
										ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДатаПолученияСведений),
										"ПолноеНаименование");
		
		ДанныеШапки = Новый Структура;
		ДанныеШапки.Вставить("ТекстЗаголовка",           ТекстЗаголовка);
		ДанныеШапки.Вставить("Организация",              ДанныеПечати.Организация);
		ДанныеШапки.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		ДанныеШапки.Вставить("Контрагент",               ДанныеПечати.Контрагент);
		ДанныеШапки.Вставить("ПредставлениеПартнера",    ПредставлениеПартнера);
		
		Область.Параметры.Заполнить(ДанныеШапки);
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
		ТабличныйДокумент.Вывести(Область);
		
		Если ВыводитьКоды Тогда
			Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			
			УстановитьПараметр(Область, "ИмяКолонкиКодов", ПредставлениеКолонкиКодов);
			ТабличныйДокумент.Присоединить(Область);
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
		ТабличныйДокумент.Присоединить(Область);
		
		НомерСтроки = 1;
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
			
			УстановитьПараметр(Область, "НомерСтроки", НомерСтроки);
			ТабличныйДокумент.Вывести(Область);
			
			НомерСтроки = НомерСтроки + 1;
			
			Если ВыводитьКоды Тогда
				Область = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
				
				УстановитьПараметр(Область, "ЗначениеКода", ВыборкаПоТоварам[ИмяКолонкиКодов]);
				ТабличныйДокумент.Присоединить(Область);
			КонецЕсли;
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			
			ДополнительныеПараметрыПолученияНаименованияДляПечати =
				НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
			ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = ВыборкаПоТоварам.ЭтоВозвратнаяТара;
			ДополнительныеПараметрыПолученияНаименованияДляПечати.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
			
			Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(ВыборкаПоТоварам.НаименованиеНоменклатуры,
																				ВыборкаПоТоварам.Характеристика,
																				,
																				,
																				ДополнительныеПараметрыПолученияНаименованияДляПечати);
			
			УстановитьПараметр(Область, "Товар", Товар);
			ТабличныйДокумент.Присоединить(Область);
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
		ТабличныйДокумент.Вывести(Область);
		
		Если ВыводитьКоды Тогда
			Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			ТабличныйДокумент.Присоединить(Область);
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
		ТабличныйДокумент.Присоединить(Область);
		
		Область = Макет.ПолучитьОбласть("Подписи");
		
		ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Всего наименований %1'"),
																				Строка(НомерСтроки - 1));
		
		ДанныеПодписей = Новый Структура;
		ДанныеПодписей.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		
		Если ЗначениеЗаполнено(ДанныеПечати.МенеджерФизическоеЛицо) Тогда
			ДанныеПодписей.Вставить("Менеджер",
									ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.МенеджерФизическоеЛицо, ДатаПолученияСведений));
		КонецЕсли;
		
		Область.Параметры.Заполнить(ДанныеПодписей);
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	// Выведем сообщения о документах, для которых не требуется печатать реестр номеров ГТД.
	Пока ВыборкаПоДокументамБезГТД.Следующий() Цикл
		ТекстСообщения = НСтр("ru = 'В документе %1 отсутствуют товары с номерами ГТД. Печать реестра номеров ГТД не требуется.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
																					Строка(ВыборкаПоДокументамБезГТД.Ссылка));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ВыборкаПоДокументамБезГТД.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура УстановитьПараметр(ОбластьМакета, ИмяПараметра, ЗначениеПараметра)
	
	ОбластьМакета.Параметры.Заполнить(Новый Структура(ИмяПараметра, ЗначениеПараметра));
	
КонецПроцедуры

// Функция получает данные для формирования печатной формы М15
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ПередачаТоваровХранителю - Массив ссылок на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыМ15(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПередачаТоваровХранителю КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка      КАК Ссылка,
	|	ПередачаТоваров.Дата        КАК Дата,
	|	ЕСТЬNULL(ПередачаТоваров.ИсправляемыйДокумент.Номер, ПередачаТоваров.Номер) КАК Номер,
	|	ЕСТЬNULL(ПередачаТоваров.ИсправляемыйДокумент.Дата, ПередачаТоваров.Дата) КАК ДатаДокумента,
	|	ЕСТЬNULL(ПередачаТоваров.ИсправляемыйДокумент.Дата, ПередачаТоваров.Дата) КАК ДатаСоставления,
	|	ПередачаТоваров.Партнер     КАК Партнер,
	|	ПередачаТоваров.Контрагент  КАК Контрагент,
	|	ПередачаТоваров.Организация КАК Организация,
	|	ПередачаТоваров.Организация.Префикс КАК Префикс,
	|	ПередачаТоваров.Склад       КАК Склад,
	|	ПередачаТоваров.Склад.Наименование КАК СкладНаименование,
	|	ПередачаТоваров.Валюта      КАК Валюта,
	|	ПередачаТоваров.Подразделение КАК СтруктурноеПодразделение,
	|	ПередачаТоваров.Основание   КАК Основание,
	|	ПередачаТоваров.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ПередачаТоваров.Отпустил          КАК Кладовщик,
	|	ПередачаТоваров.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	ТаблицаОтветственныеЛица.РуководительНаименование     КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность        КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер
	|ИЗ
	|	Документ.ПередачаТоваровХранителю КАК ПередачаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПередачаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПередачаТоваров.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка             КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки        КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура       КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.Код   КАК НоменклатураКод,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	ТаблицаТоваров.Серия.Наименование КАК СерияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения  КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Упаковка
	|	КОНЕЦ                             КАК Упаковка,
	|	ТаблицаТоваров.КоличествоУпаковок КАК Количество,
	|	0                                 КАК КоличествоМест,
	|	ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС        КАК СуммаБезНДС,
	|	0                                 КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС        КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
	|				И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ПередачаТоваровХранителюТаблицаТоваров КАК ТаблицаТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	УстановитьПривилегированныйРежим(Истина);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати = Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
												РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Возвращает данные для формирования печатной формы МХ - 1.
//
// Параметры:
//	ПараметрыПечати	- Структура -дополнительные настройки печати.
//	МассивОбъектов	- Массив из ДокументСсылка.ПередачаТоваровХранителю - коллекция значений ссылок на документы,
//																			по которым необходимо получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемых для печати, содержащая следующие следующие свойства:
//		* РезультатПоШапке			- РезультатЗапроса - данные шапки документа.
//		* РезультатПоСкладам		- РезультатЗапроса - данные о складе ответственного хранения.
//		* РезультатПоТабличнойЧасти	- РезультатЗапроса - данные табличной части документа.
//		* РезультатПоОшибкам		- Неорпеделено - данные об ошибках, возникающих при печати документа.
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыПередачи.Ссылка                     КАК Ссылка,
	|	ЕСТЬNULL(ДокументПередачи.ИсправляемыйДокумент.Номер, ДокументПередачи.Номер) КАК Номер,
	|	ЕСТЬNULL(ДокументПередачи.ИсправляемыйДокумент.Дата, ДокументПередачи.Дата)   КАК Дата,
	|	ЕСТЬNULL(ДокументПередачи.ИсправляемыйДокумент.Дата, ДокументПередачи.Дата)   КАК ДатаДокумента,
	|	ДокументПередачи.Дата                     КАК ДатаПолученияСебестоимости,
	|	ДокументПередачи.Контрагент               КАК Поклажедержатель,
	|	ДокументПередачи.Организация              КАК Организация,
	|	ТоварыПередачи.Склад                      КАК Склад,
	|	ДокументПередачи.Договор.Дата             КАК ДоговорДата,
	|	ДокументПередачи.Договор.Номер            КАК ДоговорНомер,
	|	ДокументПередачи.Валюта                   КАК Валюта,
	|	ДокументПередачи.Отпустил                 КАК Сдал,
	|	ДокументПередачи.ОтпустилДолжность        КАК СдалДолжность,
	|	ДокументПередачи.КоэффициентПересчетаРегл КАК КоэффициентПересчета
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.Товары КАК ТоварыПередачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю КАК ДокументПередачи
	|		ПО ТоварыПередачи.Ссылка = ДокументПередачи.Ссылка
	|ГДЕ
	|	ДокументПередачи.Ссылка В(&МассивДокументов)
	|	И ДокументПередачи.Проведен
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтШапка.Ссылка                     КАК Ссылка,
	|	ВтШапка.Номер                      КАК Номер,
	|	ВтШапка.Дата                       КАК Дата,
	|	ВтШапка.Дата                       КАК ДатаДокумента,
	|	ВтШапка.ДатаПолученияСебестоимости КАК ДатаПолученияСебестоимости,
	|	ВтШапка.Организация                КАК Организация,
	|	ВтШапка.ДоговорДата                КАК ДоговорДата,
	|	ВтШапка.ДоговорНомер               КАК ДоговорНомер
	|ИЗ
	|	ВтШапка КАК ВтШапка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	ВтШапка.Ссылка           КАК Ссылка,
	|	ВтШапка.Поклажедержатель КАК Поклажедержатель,
	|	ВтШапка.Склад            КАК Склад,
	|	ЛОЖЬ                     КАК ПредварительныйРасчет,
	|	НЕОПРЕДЕЛЕНО             КАК ИсточникИнформацииОЦенахДляПечати,
	|	""""                     КАК ПредставлениеСклада,
	|	""""                     КАК ПредставлениеПодразделения,
	|	""""                     КАК ОсобыеОтметки,
	|	""""                     КАК УсловияХранения,
	|	ВтШапка.Сдал             КАК Сдал,
	|	ВтШапка.СдалДолжность    КАК СдалДолжность
	|ИЗ
	|	ВтШапка КАК ВтШапка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	Товары.Ссылка       КАК Ссылка,
	|	Товары.Склад        КАК Склад,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ Товары.Номенклатура.Код
	|	КОНЕЦ               КАК НоменклатураКод,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	Товары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	&ТекстЗапросаКодЕдиницыИзмерения          КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА ВтШапка.Валюта = ВтШапка.Организация.ВалютаРегламентированногоУчета
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ Товары.Цена * ВтШапка.КоэффициентПересчета
	|	КОНЕЦ                     КАК Цена,
	|	ВЫБОР
	|		КОГДА ВтШапка.Валюта = ВтШапка.Организация.ВалютаРегламентированногоУчета
	|			ТОГДА ВЫРАЗИТЬ(Товары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) * Товары.Количество КАК ЧИСЛО(31, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) * Товары.Количество КАК ЧИСЛО(31, 2)) * ВтШапка.КоэффициентПересчета
	|	КОНЕЦ                     КАК Сумма
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК ВтШапка
	|		ПО Товары.Ссылка = ВтШапка.Ссылка
	|			И Товары.Склад = ВтШапка.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	НомерСтроки,
	|	Номенклатура,
	|	ПредставлениеХарактеристики,
	|	ВидУпаковки
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад
	|;";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КолонкаКодов",     КолонкаКодов);
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	УстановитьПривилегированныйРежим(Истина);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	РезультатПоШапке          = МассивРезультатов[1];
	РезультатПоСкладам        = МассивРезультатов[2];
	РезультатПоТабличнойЧасти = МассивРезультатов[3];
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",          МассивРезультатов[1]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСкладам",        МассивРезультатов[2]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", МассивРезультатов[3]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоОшибкам",        Неопределено);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции


//-- Локализация
#КонецОбласти


//++ Локализация

// Правила получения значений реквизитов ТТН
// 
// Возвращаемое значение:
//  Структура -  см. Документы.ТранспортнаяНакладная.ПараметрыФормированияТранспортныхНакладных 
//
Функция ПараметрыФормированияТранспортныхНакладных() Экспорт
	
	ПараметрыФормированияТранспортныхНакладных =
		Документы.ТранспортнаяНакладная.ПараметрыФормированияТранспортныхНакладных();
		
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Грузоотправитель = 
	"	ВЫБОР
	|		КОГДА ОснованиеТранспортнойНакладной.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ОснованиеТранспортнойНакладной.Организация
	|		ИНАЧЕ ОснованиеТранспортнойНакладной.Грузоотправитель
	|	КОНЕЦ";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Грузополучатель = 
	"		ВЫБОР
	|			КОГДА ОснованиеТранспортнойНакладной.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ОснованиеТранспортнойНакладной.Контрагент
	|			ИНАЧЕ ОснованиеТранспортнойНакладной.Грузополучатель
	|		КОНЕЦ";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ЗаказчикПеревозки                 = "ОснованиеТранспортнойНакладной.Контрагент";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.БанковскийСчетЗаказчикаПеревозки  = "ОснованиеТранспортнойНакладной.БанковскийСчетКонтрагента";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Плательщик                        = "ОснованиеТранспортнойНакладной.Контрагент";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.БанковскийСчетПлательщика         = "ОснованиеТранспортнойНакладной.БанковскийСчетКонтрагента";
	
	ПараметрыФормированияТранспортныхНакладных.ЕстьЗаказы = Истина;
	ПараметрыФормированияТранспортныхНакладных.ТекстУсловияИспользоватьРасширенныеВозможностиЗаказа = 
		"ЕСТЬNULL(ДокументТовары.ЗаказКлиента.ЭтоЗаказКакСчет, &ИспользоватьРасширенныеВозможностиЗаказа)";
	ПараметрыФормированияТранспортныхНакладных.ИмяПоляЗаказВТЧТовары = "ЗаказКлиента";
	ПараметрыФормированияТранспортныхНакладных.ИмяПоляНакладнаяПоЗаказу = "ПередачаПоЗаказам";
	
	ПараметрыФормированияТранспортныхНакладных.ИспользоватьРасширенныеВозможностиЗаказа = Истина;
	
	Возврат	ПараметрыФормированияТранспортныхНакладных;
	
КонецФункции

// Правила получения значений реквизитов ЭТН
// 
// Возвращаемое значение:
//  см. ОбменСГИСЭПДПереопределяемый.ПараметрыФормированияЭлектронныхТранспортныхНакладных
//
Функция ПараметрыФормированияЭлектронныхТранспортныхНакладных() Экспорт
	
	ПараметрыФормирования =
		ОбменСГИСЭПДПереопределяемый.ПараметрыФормированияЭлектронныхТранспортныхНакладных();

	ПараметрыФормирования.Реквизиты.СсылкаТитулГрузоотправителяГрузополучатель = 
	"		ВЫБОР
	|			КОГДА ОснованиеТранспортнойНакладной.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ОснованиеТранспортнойНакладной.Контрагент
	|			ИНАЧЕ ОснованиеТранспортнойНакладной.Грузополучатель
	|		КОНЕЦ";
	
	ПараметрыФормирования.ЕстьЗаказы = Истина;
	ПараметрыФормирования.ТекстУсловияИспользоватьРасширенныеВозможностиЗаказа = 
		"ЕСТЬNULL(ДокументТовары.ЗаказКлиента.ЭтоЗаказКакСчет, &ИспользоватьРасширенныеВозможностиЗаказа)";
	ПараметрыФормирования.ИмяПоляЗаказВТЧТовары = "ЗаказКлиента";
	ПараметрыФормирования.ИмяПоляНакладнаяПоЗаказу = "ПередачаПоЗаказам";
	ПараметрыФормирования.ИмяПоляСуммы = "Сумма";
	
	ПараметрыФормирования.ИспользоватьРасширенныеВозможностиЗаказа = Истина;

	Возврат	ПараметрыФормирования;
	
КонецФункции

// Правила получения значений реквизитов ЭЗН
// 
// Возвращаемое значение:
//  см. ОбменСГИСЭПДПереопределяемый.ПараметрыФормированияЭлектронныхЗаказНарядов
//
Функция ПараметрыФормированияЭлектронныхЗаказНарядов() Экспорт
	
	ПараметрыФормирования =
		ОбменСГИСЭПДПереопределяемый.ПараметрыФормированияЭлектронныхЗаказНарядов();
		
	ПараметрыФормирования.ЕстьЗаказы = Истина;
	ПараметрыФормирования.ИмяПоляЗаказВТЧТовары = "ЗаказКлиента";
	ПараметрыФормирования.ИмяПоляНакладнаяПоЗаказу = "ПередачаПоЗаказам";
	
	Возврат	ПараметрыФормирования;
	
КонецФункции

//-- Локализация

#Область МаркируемаяПродукция

// Дополнить параметры заполнения.
// 
// Параметры:
//  ПараметрыЗаполнения - Структура - 
//  РеквизитыДокумента - ВыборкаИзРезультатаЗапроса, Структура - 
Процедура ДополнитьПараметрыЗаполнения(ПараметрыЗаполнения, РеквизитыДокумента) Экспорт
	
	//++ Локализация
	СвойствоИмя = "ВидГОСИС";
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(РеквизитыДокумента, СвойствоИмя) Тогда
		ЗначениеСвойства = РеквизитыДокумента[СвойствоИмя];
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(РеквизитыДокумента, "ПараметрыОформления")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПараметрыЗаполнения.ПараметрыОформления, СвойствоИмя) Тогда
		ЗначениеСвойства = ПараметрыЗаполнения.ПараметрыОформления[СвойствоИмя];
	Иначе
		ЗначениеСвойства = Неопределено;
	КонецЕсли; 
	ПараметрыЗаполнения.Вставить(СвойствоИмя, ЗначениеСвойства);
	//-- Локализация	
	
КонецПроцедуры

// Установить параметры особенности учета номенклатуры.
// 
// Параметры:
//  ПараметрыЗаполнения - Структура -
//  ПараметрыЗапроса - Структура -
Процедура УстановитьПараметрыОсобенностиУчетаНоменклатуры(ПараметрыЗаполнения, ПараметрыЗапроса) Экспорт
	
	НеОтбиратьПоОсобенностямУчета = Истина;
	ОсобенностиУчетаНоменклатуры = Новый Массив;

	//++ Локализация
	ВидГОСИС = Неопределено;
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИЛиСвойствоОбъекта(ПараметрыЗаполнения, "ВидГОСИС") Тогда
		ВидГОСИС = ПараметрыЗаполнения.ВидГОСИС;
	КонецЕсли;
	 
	Если ВидГОСИС = "ЕГАИС" Тогда
		НеОтбиратьПоОсобенностямУчета = Ложь;
		ОсобенностиУчетаНоменклатуры = ИнтеграцияЕГАИСУТ.ОсобенностиУчетаНоменклатуры();
	ИначеЕсли ВидГОСИС = "ГИСМ" Тогда
		НеОтбиратьПоОсобенностямУчета = Ложь;
		ОсобенностиУчетаНоменклатуры = ИнтеграцияГИСМУТ.ОсобенностиУчетаНоменклатуры();
	ИначеЕсли ВидГОСИС = "ВЕТИС" Тогда
		НеОтбиратьПоОсобенностямУчета = Ложь;
		ОсобенностиУчетаНоменклатуры = ИнтеграцияВЕТИСУТ.ОсобенностиУчетаНоменклатуры();
	ИначеЕсли ВидГОСИС = "ИСМП" Тогда
		НеОтбиратьПоОсобенностямУчета = Ложь;
		ОсобенностиУчетаНоменклатуры = ИнтеграцияИСМПУТ.ОсобенностиУчетаНоменклатуры();
	ИначеЕсли ВидГОСИС = "Не задан" Тогда
		НеОтбиратьПоОсобенностямУчета = Ложь;
		ОсобенностиУчетаНоменклатуры = ИнтеграцияИСУТ.ОсобенностиУчетаНоменклатурыБезПодсистем();
	КонецЕсли;
	//-- Локализация
	
	ПараметрыЗапроса.Вставить("НеОтбиратьПоОсобенностямУчета", НеОтбиратьПоОсобенностямУчета);
	ПараметрыЗапроса.Вставить("ОсобенностиУчетаНоменклатуры", ОсобенностиУчетаНоменклатуры);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

//++ Локализация


//-- Локализация

#КонецОбласти

#Область Прочее

#КонецОбласти

//++ Локализация


//-- Локализация

#КонецОбласти
