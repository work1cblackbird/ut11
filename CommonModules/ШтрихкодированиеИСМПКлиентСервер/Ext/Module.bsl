#Область ПрограммныйИнтерфейс

// Возвращает сокращенное представление штрихкода маркируемой продукции.
// 
// Параметры:
// 	Штрихкод - Строка - Штрихкод строкой.
// 	ВидуУпаковки - ПеречислениеСсылка.ВидыУпаковокИС - Значение упаковки
// Возвращаемое значение:
// 	Строка - Краткое представление штрихкода маркируемой продукции.
Функция ПредставлениеШтрихкодаПоВидуУпаковки(Штрихкод, ВидуУпаковки) Экспорт
	
	Если ВидуУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Потребительская") Тогда
		ПредставлениеШтрихкода = Штрихкод;
	Иначе
		ПредставлениеШтрихкода = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ПредставлениеШтрихкода(Штрихкод);
	КонецЕсли;
	
	Возврат ПредставлениеШтрихкода;
	
КонецФункции

Функция SSCCАгрегата(Штрихкод) Экспорт
	
	ПараметрыШтрихкода = ШтрихкодыУпаковокКлиентСервер.ПараметрыШтрихкода(Штрихкод);
	Если ПараметрыШтрихкода.Результат = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Внутренняя ошибка'");
	КонецЕсли;
	Если ПараметрыШтрихкода.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.SSCC") Тогда
		КодАгрегата = ШтрихкодыУпаковокКлиентСервер.ШтрихкодSSCC(ПараметрыШтрихкода.Результат, Ложь, Ложь);
	Иначе
		ВызватьИсключение НСтр("ru = 'Внутренняя ошибка'");
	КонецЕсли;
	
	Возврат КодАгрегата;
	
КонецФункции

// Возвращает способ ввода в оборот СУЗ по виду операции.
// 
// Параметры:
//  ВидОперации  - ПеречислениеСсылка.ВидыОперацийИСМП - Вид операции документа.
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС  - Вид продукции.
// Возвращаемое значение:
//  ПеречислениеСсылка.СпособыВводаВОборотСУЗ, Массив из ПеречислениеСсылка.СпособыВводаВОборотСУЗ - Способ ввода в оборот СУЗ.
Функция СпособВводаВОборотСУЗПоВидуОперации(ВидОперации, ВидПродукции = Неопределено) Экспорт
	
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотИмпортСФТС")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотИмпортСФТСМех") Тогда
		Возврат ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.Импорт");
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля") Тогда
		ВозвращаемоеЗначение = Новый Массив();
		ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.ТрансграничнаяТорговля"));
		ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.Импорт"));
		Возврат ВозвращаемоеЗначение;
	ИначеЕсли ВидОперации = ПредопределенноеЗначение(
			"Перечисление.ВидыОперацийИСМП.ВводВОборотПолучениеПродукцииОтФизическихЛиц") Тогда
		ВозвращаемоеЗначение = Новый Массив();
		ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.Производство"));
		ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.Комиссия"));
		Возврат ВозвращаемоеЗначение;
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговору")
		Или ВидОперации = ПредопределенноеЗначение(
			"Перечисление.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговоруНаСторонеЗаказчика") Тогда
		Возврат ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.Производство");
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков") Тогда
		Возврат ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.МаркировкаОстатков");
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаЕАЭССПризнаниемКИ") Тогда
		ВозвращаемоеЗначение = Новый Массив();
		ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.Производство"));
		ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.ТрансграничнаяТорговля"));
		ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.Импорт"));
		ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.Перемаркировка"));
		ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.Комиссия"));
		Возврат ВозвращаемоеЗначение;
	КонецЕсли;
	
	Возврат ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗ.ПустаяСсылка");
	
КонецФункции

#Область ШаблоныПараметровСканирования

// Настройки параметров сканирования документа производства, заполняемые при внедрении библиотеки.
// 
// Возвращаемое значение:
//  Структура - Настройки параметров сканирования документа производства:
//   * Организация - Неопределено, ОпределяемыйТип.Организация - организация документа производства,
//   * Склад - Неопределено, ОпределяемыйТип.Склад - склад документа производства.
Функция НастройкиПараметровСканированияДокументаПроизводства() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Организация");
	Результат.Вставить("Склад");
	Возврат Результат;
	
КонецФункции

// Заполняет библиотечные настройки параметров сканирования для документов производства товара.
//   Применимо для настроек ИСМП: весовая молочная продукция.
//
// Параметры:
//   ПараметрыСканирования - см. ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.БазовыеПараметрыСканирования
//   ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
//   Настройки - см. НастройкиПараметровСканированияДокументаПроизводства.
// Возвращаемое значение:
//   Булево - параметры сканирования дополнены спецификой ИС МП.
Функция ЗаполнитьПараметрыСканированияДокументаПроизводства(ПараметрыСканирования, ВидПродукции, Настройки) Экспорт
	
	Если Не ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции(
			ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС")) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КонтрольСтатусов = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.КонтролироватьСтатусыКодовМаркировки();
	
	Если ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		
		ДоступнаПечатьЭтикеток = (ВидПродукции <> ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха"));
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Эмитирован"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
		
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Неопределен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Эмитирован"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(Неопределено);
		
		ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеНеизвестныхУпаковокИСМП(ПараметрыСканирования, КонтрольСтатусов);
		
		ПараметрыСканирования.ОтборПоВидуПродукции                     = Истина;
		
		ПараметрыСканирования.КонтрольПустыхУпаковок             = Ложь;
		ПараметрыСканирования.ПоддерживаютсяОперацииАгрегации    = Истина;
		ПараметрыСканирования.ДоступнаПечатьЭтикеток             = ДоступнаПечатьЭтикеток;
		ПараметрыСканирования.ВозможнаЗагрузкаТСД                = Истина;
		
		ПараметрыСканирования.Организация = Настройки.Организация;
		ПараметрыСканирования.Склад       = Настройки.Склад;
		// Для обогащения информации об ошибке при выводе пользователю
		ПараметрыСканирования.ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот");
		
		НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Заполняет библиотечные настройки параметров сканирования для документов розничной продажи товара (например чеков).
//   Применимо для настроек МОТП, ИСМП.
//
// Параметры:
//   ПараметрыСканирования - см. ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.БазовыеПараметрыСканирования
//   ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
// Возвращаемое значение:
//   Булево - параметры сканирования дополнены спецификой ИС МП.
Функция ЗаполнитьПараметрыСканированияДокументаРозничнойПродажи(ПараметрыСканирования, ВидПродукции) Экспорт
	
	Если Не ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа");
	
	ВключенаПоддержкаМОТП = ШтрихкодированиеОбщегоНазначенияМОТПКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции,, ВидОперацииИСМП);
	ВключенаПоддержкаИСМП = ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции);
	
	Если ВключенаПоддержкаМОТП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		
		ПараметрыСканирования.ДопустимыПроверкиСеройЗоныМОТП = ОбщегоНазначенияИСМПКлиентСервер.ЗначениеПараметраСканированияЗапрашиватьДанныеСервисаИСМП(ПараметрыСканирования);
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ПодключенКОборудованиюРозлива"));
		
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		
		Если Не ЗначениеЗаполнено(ВидПродукции) И ИнтеграцияИСКлиентСервер.ПрисутствуютВидыПродукцииСоСрокомГодности(ПараметрыСканирования.ДопустимыеВидыПродукции)
				Или ОбщегоНазначенияИСКлиентСервер.ЭтоВидПродукцииСоСрокамиГодности(ВидПродукции) Тогда
			ПараметрыСканирования.КонтролироватьОкончаниеСрокаГодности = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Или ВключенаПоддержкаМОТП Тогда
		
		ПараметрыСканирования.ТребуетсяЧастичноеВыбытие       = Истина;
		ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП = Истина;
		ПараметрыСканирования.ДетализацияСтруктурыХранения    = ПредопределенноеЗначение("Перечисление.ДетализацияСтруктурыХраненияИС.ГрупповыеУпаковки");
		ПараметрыСканирования.ОтборПоВидуПродукции            = Истина;
		ПараметрыСканирования.ВидОперацииИСМП                 = ВидОперацииИСМП;
		НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
		Возврат Истина;
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Заполняет библиотечные настройки параметров сканирования для документов розничного возврата товара
//   (например чеков на возврат). Применимо для настроек МОТП, ИСМП.
//
// Параметры:
//   ПараметрыСканирования - см. ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.БазовыеПараметрыСканирования
//   ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
// Возвращаемое значение:
//   Булево - параметры сканирования дополнены спецификой ИС МП.
Функция ЗаполнитьПараметрыСканированияДокументаРозничногоВозврата(ПараметрыСканирования, ВидПродукции) Экспорт
	
	Если Не ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВозвратВОборотПриРозничнойРеализации");
	
	ВключенаПоддержкаМОТП = ШтрихкодированиеОбщегоНазначенияМОТПКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции,, ВидОперацииИСМП);
	ВключенаПоддержкаИСМП = ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции);
	
	Если ВключенаПоддержкаМОТП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Продан"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Продан"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		
		ПараметрыСканирования.ДопустимыПроверкиСеройЗоныМОТП = ОбщегоНазначенияИСМПКлиентСервер.ЗначениеПараметраСканированияЗапрашиватьДанныеСервисаИСМП(ПараметрыСканирования);
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаРозничнаяПродажа"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ПодключенКОборудованиюРозлива"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаРозничнаяПродажа"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Или ВключенаПоддержкаМОТП Тогда
		
		ПараметрыСканирования.ТребуетсяЧастичноеВыбытие       = Истина;
		ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП = Истина;
		ПараметрыСканирования.ДетализацияСтруктурыХранения    = ПредопределенноеЗначение("Перечисление.ДетализацияСтруктурыХраненияИС.ГрупповыеУпаковки");
		ПараметрыСканирования.ОтборПоВидуПродукции            = Истина;
		ПараметрыСканирования.ВидОперацииИСМП                 = ВидОперацииИСМП;
		
		НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
		Возврат Истина;
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Заполняет библиотечные настройки параметров сканирования для документов оптовой продажи товара (например реализации).
//   Применимо для настроек МОТП, ИСМП.
//
// Параметры:
//   ПараметрыСканирования - см. ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.БазовыеПараметрыСканирования
//   ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
// Возвращаемое значение:
//   Булево - параметры сканирования дополнены спецификой ИС МП.
Функция ЗаполнитьПараметрыСканированияДокументаОптовойОтгрузки(ПараметрыСканирования, ВидПродукции) Экспорт
	
	Если Не ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа");
	
	ВключенаПоддержкаМОТП = ШтрихкодированиеОбщегоНазначенияМОТПКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции,, ВидОперацииИСМП);
	ВключенаПоддержкаИСМП = ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции);
	
	Если ВключенаПоддержкаМОТП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Нанесен"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.НанесенОплачен"));
		
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Нанесен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.НанесенОплачен"));
		
		ПараметрыСканирования.ВариантПолученияМРЦ             = "Вычисление";
		ПараметрыСканирования.ОтборПоВидуПродукции            = Истина;
		ПараметрыСканирования.ДопустимыПроверкиСеройЗоныМОТП  = Истина;
		ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП = Истина;
		
		// Для обогащения информации об ошибке при выводе пользователю
		ПараметрыСканирования.ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа");
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		
		ПараметрыСканирования.ОтборПоВидуПродукции            = Истина;
		ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП = Истина;
		
		ПараметрыСканирования.ПоддерживаетсяОбъемноСортовойУчет  = Истина;
		ПараметрыСканирования.ЗапрашиватьКоличествоМерногоТовара = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки().ЗапрашиватьКоличествоМерногоТовара;
		// Для обогащения информации об ошибке при выводе пользователю
		ПараметрыСканирования.ВидОперацииИСМП                 = ВидОперацииИСМП;
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Или ВключенаПоддержкаМОТП Тогда
		НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Заполняет библиотечные настройки параметров сканирования для документов оптовового возврата товара.
//   Применимо для настроек МОТП, ИСМП.
//
// Параметры:
//   ПараметрыСканирования - см. ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.БазовыеПараметрыСканирования
//   ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
// Возвращаемое значение:
//   Булево - параметры сканирования дополнены спецификой ИС МП.
Функция ЗаполнитьПараметрыСканированияДокументаОптовогоВозврата(ПараметрыСканирования, ВидПродукции) Экспорт
	
	Если Не ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаПродажа");
	
	ВключенаПоддержкаМОТП = ШтрихкодированиеОбщегоНазначенияМОТПКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции,, ВидОперацииИСМП);
	ВключенаПоддержкаИСМП = ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции);
	
	Если ВключенаПоддержкаМОТП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		
		ПараметрыСканирования.ДопустимыПроверкиСеройЗоныМОТП  = Истина;
		ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП = Истина;
		ПараметрыСканирования.ОтборПоВидуПродукции            = Истина;
		
		// Для обогащения информации об ошибке при выводе пользователю
		ПараметрыСканирования.ВидОперацииИСМП = ВидОперацииИСМП;
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаРозничнаяПродажа"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаПоДоговоруРассрочки"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетДоставки"));
		
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаРозничнаяПродажа"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаПоДоговоруРассрочки"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетДоставки"));
		
		ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП = Истина;
		ПараметрыСканирования.ОтборПоВидуПродукции            = Истина;
		
		ПараметрыСканирования.ПоддерживаетсяОбъемноСортовойУчет  = Истина;
		ПараметрыСканирования.ЗапрашиватьКоличествоМерногоТовара = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки().ЗапрашиватьКоличествоМерногоТовара;
		// Для обогащения информации об ошибке при выводе пользователю
		ПараметрыСканирования.ВидОперацииИСМП = ВидОперацииИСМП;
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Или ВключенаПоддержкаМОТП Тогда
		НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Заполняет библиотечные настройки параметров сканирования для документов закупки (приобретения) товара.
//   Применимо для настроек МОТП, ИСМП.
//
// Параметры:
//   ПараметрыСканирования - см. ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.БазовыеПараметрыСканирования
//   ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
// Возвращаемое значение:
//   Булево - параметры сканирования дополнены спецификой ИС МП.
Функция ЗаполнитьПараметрыСканированияДокументаЗакупки(ПараметрыСканирования, ВидПродукции) Экспорт
	
	Если Не ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка");
	
	ВключенаПоддержкаМОТП = ШтрихкодированиеОбщегоНазначенияМОТПКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции,, ВидОперацииИСМП);
	ВключенаПоддержкаИСМП = ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции);
	
	Если ВключенаПоддержкаМОТП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Нанесен"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.НанесенОплачен"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.НанесенНеОплачен"));
		
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборотВозвращен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Нанесен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.НанесенОплачен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.НанесенНеОплачен"));
		
		ПараметрыСканирования.ОтборПоВидуПродукции           = Истина;
		ПараметрыСканирования.ДопустимыПроверкиСеройЗоныМОТП = Истина;
		
		// Для обогащения информации об ошибке при выводе пользователю
		ПараметрыСканирования.ВидОперацииИСМП = ВидОперацииИСМП;
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетДоставки"));
		
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетДоставки"));
		
		ПараметрыСканирования.ОтборПоВидуПродукции = Истина;
		
		ПараметрыСканирования.ПоддерживаетсяОбъемноСортовойУчет  = Истина;
		ПараметрыСканирования.ЗапрашиватьКоличествоМерногоТовара = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки().ЗапрашиватьКоличествоМерногоТовара;
		// Для обогащения информации об ошибке при выводе пользователю
		ПараметрыСканирования.ВидОперацииИСМП = ВидОперацииИСМП;
		
	КонецЕсли;
	
	Если ВключенаПоддержкаИСМП Или ВключенаПоддержкаМОТП Тогда
		НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Включает поддержку маркируемой продукции, дополняя базовые параметры сканирования, параметрами необходимыми для обработки
// штрихкодов ИСМП (кроме табака).
//
// Параметры:
//   ПараметрыСканирования - Структура - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования), дополняются параметрами:
//    * ЗапрашиватьДанныеСервисаИСМП - Булево, Строка - Истина, если требуется разрешить запрашивать данные в ГИС МТ, "ПоУмолчанию" - если проверяется по ФО с учетом исключений
//    * ДопустимыеСтатусыИСМП - Массив из ПеречислениеСсылка.СтатусыКодовМаркировкиИСМП - Статусы, которые разрешены.
//    * КонтролироватьРасхожденияСИСМП - Булево - Истина, если требуется сравнить данные, хранящиеся в справочнике
//          Штрихкоды упаковок товаров с данными сервиса ИС МП и отобразить расхождения.
//   ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции
//   АнализироватьУчитываемыеВидыПродукции - Булево - Анализировать учитываемые виды продукции
//
// Возвращаемое значение:
//  Булево - параметры сканирования штрихкодов обуви добавлены
//
Функция ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции = Неопределено, АнализироватьУчитываемыеВидыПродукции = Истина) Экспорт
	
	Если ЗначениеЗаполнено(ВидПродукции)
		И Не ОбщегоНазначенияИСКлиентСервер.ЭтоПродукцияИСМП(ВидПродукции) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если АнализироватьУчитываемыеВидыПродукции Тогда
		ВидыПродукцииИСМП = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции(, Ложь);
		Если ВидыПродукцииИСМП.Количество() = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
	Иначе
		ВидыПродукцииИСМП = ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииИСМП(Ложь);
	КонецЕсли;
	
	Если ВидПродукции = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПараметрыСканирования.ДопустимыеВидыПродукции, ВидыПродукцииИСМП, Истина);
	ИначеЕсли ВидыПродукцииИСМП.Найти(ВидПродукции) = Неопределено Тогда
		Возврат Ложь;
	Иначе
		ПараметрыСканирования.ДопустимыеВидыПродукции.Добавить(ВидПродукции);
	КонецЕсли;
	
	ПараметрыСканирования.Вставить("ДопустимыеСтатусыИСМП",                                Новый Массив);
	ПараметрыСканирования.Вставить("ДопустимыеСтатусыУпаковокИСМП",                        Новый Массив);
	ПараметрыСканирования.Вставить("ДопустимыеСтатусыНаборовИСМП",                         Неопределено);
	ПараметрыСканирования.Вставить("КонтролироватьРасхождениеСоставаУпаковокМеждуИБиИСМП", Ложь);
	ПараметрыСканирования.Вставить("ЭтоМаркировкаОстатков",                                Неопределено);
	ПараметрыСканирования.Вставить("ЗаполнятьДанныеВЕТИС",                                 Ложь);
	ПараметрыСканирования.Вставить("ЗаполнятьСрокГодности",                                Ложь);
	ПараметрыСканирования.Вставить("КонтролироватьОкончаниеСрокаГодности",                 Ложь);
	ПараметрыСканирования.Вставить("ИндивидуализироватьКИЗ",                               Ложь);
	
	// ДатаДокумента - Используется для документов, кроме розничной продажи. Параметр был предназначен установки даты отслеживания в контроле сроков годности продукции.
	// Изменен принцип проверки - для розничной продажи срок годности даже при пробитии из чека прошлой даты должен проверяться по актуальной дате.
	ПараметрыСканирования.Вставить("ДатаДокумента",                                        '00010101');
	
	ШтрихкодированиеОбщегоНазначенияИСМПКлиентСервер.ДополнитьПараметрамиСканированияИСМП(ПараметрыСканирования);
	
	Возврат Истина;
	
КонецФункции

Процедура ДополнитьПараметрыЗаполненияТабличнойЧастиТовары(ПараметрыЗаполнения) Экспорт
	
	ПараметрыЗаполнения.Вставить("ЗаполнитьGTIN", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьРасширенныеПараметрыСканированияПоДокументам(Контекст, ПараметрыСканирования, ПараметрыРежимаИсправленияОшибок) Экспорт
	
	Если ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ЭтоФормаПроверкиИПодбора(Контекст) Тогда
		ЗаполнитьРасширенныеПараметрыСканированияПоДокументам(Контекст.Контекст, ПараметрыСканирования, ПараметрыРежимаИсправленияОшибок);
		Возврат;
	КонецЕсли;
	
	Если ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.МаркировкаТоваровИСМП") Тогда
		
		ЗаполнитьПараметрыСканированияМаркировкаТоваров(Контекст, ПараметрыСканирования, ПараметрыРежимаИсправленияОшибок);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.ВыводИзОборотаИСМП") Тогда
		
		ЗаполнитьПараметрыСканированияВыводаИзОборота(Контекст, ПараметрыСканирования);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.ВозвратВОборотИСМП") Тогда
		
		ЗаполнитьПараметрыСканированияВозвратаВОборот(Контекст, ПараметрыСканирования);
	
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.СписаниеКодовМаркировкиИСМП") Тогда
		
		ЗаполнитьПараметрыСканированияСписанияКодовМаркировки(Контекст, ПараметрыСканирования);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.ПеремаркировкаТоваровИСМП")
		Или ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Обработка.РаботаСКМПриПеремаркировкеТоваровИСМП") Тогда
		
		ЗаполнитьПараметрыСканированияПеремаркировкаТоваров(Контекст, ПараметрыСканирования);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.ОтгрузкаТоваровИСМП") Тогда 
		
		ЗаполнитьПараметрыСканированияОтгрузкаТоваровИСМП(Контекст, ПараметрыСканирования);
	
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.ПриемкаТоваровИСМП") Тогда 
		
		ЗаполнитьПараметрыСканированияПриемкаТоваровИСМП(Контекст, ПараметрыСканирования);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ") Тогда 
		
		ЗаполнитьПараметрыСканированияЗаказНаЭмиссиюКодовМаркировкиСУЗ(Контекст, ПараметрыСканирования);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Обработка.ПроверкаИПодборПродукцииИСМП") Тогда 
		
		ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования);
		ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = Неопределено;
		ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = Неопределено;
		ПараметрыСканирования.ТолькоМаркируемаяПродукция = Истина;
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Обработка.ПроверкаКодовМаркировкиИСМП") Тогда 
		
		ЗаполнитьПараметрыСканированияПроверкаКодовМаркировки(Контекст, ПараметрыСканирования);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.УточнениеСведенийОКодахМаркировкиИСМП") Тогда
		
		ЗаполнитьПараметрыСканированияУточнениеСведенийОКодахМаркировкиИСМП(Контекст, ПараметрыСканирования);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.ОтчетОбИмпортеЕГАИС") Тогда
		
		ЗаполнитьПараметрыСканированияОтчетОбИмпортеЕГАИС(ПараметрыСканирования, Контекст);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.ОтчетОПроизводствеЕГАИС") Тогда
		
		ЗаполнитьПараметрыСканированияОтчетОПроизводствеЕГАИС(ПараметрыСканирования, Контекст);
	
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "ОбщаяФорма.ВскрытыеПотребительскиеУпаковкиИС")
		Или ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "ОбщаяФорма.ВскрытиеПотребительскойУпаковкиИС") Тогда
		
		ЗаполнитьПараметрыСканированияВскрытыеПотребительскиеУпаковки(Контекст, ПараметрыСканирования);
		
	ИначеЕсли ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(Контекст, "Документ.ОтчетИСМП") Тогда
		
		ЗаполнитьПараметрыСканированияОтчетИСМП(Контекст, ПараметрыСканирования);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции) Экспорт
	
	ЗапрашиватьДанныеСервиса = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ЗапрашиватьДанныеСервиса();
	
	Если ЗапрашиватьДанныеСервиса Тогда
	
		ПараметрыСканирования.КонтролироватьСтатусыКодовМаркировкиИСМП = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.КонтролироватьСтатусыКодовМаркировки(
			ВидПродукции,
			ПараметрыСканирования.ВидОперацииИСМП,
			ПараметрыСканирования.ТребуетсяПроверкаСредствамиККТ);
		
		ПараметрыСканирования.КонтролироватьВладельцевКодовМаркировкиИСМП = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.КонтролироватьВладельцевКодовМаркировки(
			ВидПродукции,
			ПараметрыСканирования.ВидОперацииИСМП);
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует новую структуру данных описания расширенного представления ошибки.
// 
// Возвращаемое значение:
// 	Структура:
// * Статус               - Неопределено, ПеречислениеСсылка.СтатусыКодовМаркировкиИСМП - Ошибочный статус.
// * ВидОперацииИСМП      - Неопределено, ПеречислениеСсылка.ВидыОперацийИСМП           - Вид операции.
// * СпособВводаВОборот   - Неопределено, ПеречислениеСсылка.СпособыВводаВОборотСУЗ     - Способ ввода в оборот.
// * Владелец             - Булево - Признак ошибки владельца.
// * ВозможноИгнорировать - Булево - Признак продолжения операциия после подтверждения пользователя.
// * ЗаголовокПродолжить  - Неопределено, Строка    - Заголовок кнопки игнорирования ошибки.
// * ДанныеПроверкиНаККТ  - Неопределено, Структура - Данные проверки ККТ.
// * ОбщаяОшибка          - Булево                  - Признак общей ошибки.
// * ТокенАвторизацииГИСМТ - Булево - Признак отсутствия токена авторизации для получения идентификаторов ГИС МТ
// * ЧастичноеВыбытиеНастроитьКарточкуНоменклатуры - Булево - Вывод подсказки настройки карточки номенклатуры.
// * ЧастичноеВыбытиеНоменклатура                  - Булево, Неопределено - Гиперссылкка настройки номенклатуры.
// * ЗагрузитьCDNПлощадки                          - Булево - Вывод подсказки загрузки CDN-площадок
// * ЗапретитьОтключениеКонтроляСтатусов           - Булево - Истина, если продукция подлежит розничному контролю и отключить контроли нельзя
Функция ПараметрыРасширенногоОписанияОшибки() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	
	ВозвращаемоеЗначение.Вставить("Статус",                                        Неопределено);
	ВозвращаемоеЗначение.Вставить("ОсобоеСостояние",                               Неопределено);
	ВозвращаемоеЗначение.Вставить("Владелец",                                      Ложь);
	ВозвращаемоеЗначение.Вставить("ВидОперацииИСМП",                               Неопределено);
	ВозвращаемоеЗначение.Вставить("ОбщаяОшибка",                                   Ложь);
	ВозвращаемоеЗначение.Вставить("ВозможноИгнорировать",                          Ложь);
	ВозвращаемоеЗначение.Вставить("ДанныеПроверкиНаККТ",                           Неопределено);
	ВозвращаемоеЗначение.Вставить("ЗаголовокПродолжить",                           Неопределено);
	ВозвращаемоеЗначение.Вставить("СпособВводаВОборот",                            Неопределено);
	ВозвращаемоеЗначение.Вставить("ТокенАвторизацииГИСМТ",                         Ложь);
	ВозвращаемоеЗначение.Вставить("ЧастичноеВыбытиеНастроитьКарточкуНоменклатуры", Ложь);
	ВозвращаемоеЗначение.Вставить("ЧастичноеВыбытиеНоменклатура",                  Неопределено);
	ВозвращаемоеЗначение.Вставить("ЗагрузитьCDNПлощадки",                          Ложь);
	ВозвращаемоеЗначение.Вставить("ЗапретитьОтключениеКонтроляСтатусов",           Ложь);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ТребуетсяУточнениеДанных(КодМаркировкиДляУточнения) Экспорт
	
	ПараметрыСканирования = КодМаркировкиДляУточнения.ПараметрыСканирования;
	РезультатОбработкиШтрихкода = КодМаркировкиДляУточнения.РезультатОбработкиШтрихкода;
	ДанныеШтрихкода = РезультатОбработкиШтрихкода.ДанныеШтрихкода;
	
	Если РезультатОбработкиШтрихкода.ТребуетсяВыборСерии
			И Не ЗначениеЗаполнено(ДанныеШтрихкода.Серия) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ПараметрыСканирования.ЗаполнятьДанныеВЕТИС = Истина
			И Не ЗначениеЗаполнено(ДанныеШтрихкода.ИдентификаторПроисхожденияВЕТИС) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ПараметрыСканирования.ЗаполнятьСрокГодности = Истина
			И Не ЗначениеЗаполнено(ДанныеШтрихкода.ГоденДо) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура ЗаполнитьДопустимыеНачальныеСтатусыОтчетОНанесении(Статусы) Экспорт
	
	Статусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Эмитирован"));
	
КонецПроцедуры

Процедура ЗаполнитьОжидаемыеСтатусыПослеПередачиОтчетаОНанесении(Статусы) Экспорт
	
	Статусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
	
КонецПроцедуры

Функция ПараметрыОткрытияФормыУточненияПодобраннойПродукцииИСМП() Экспорт
	
	ПараметрыОткрытияФормы = Новый Структура;
	
	ПараметрыОткрытияФормы.Вставить("ПараметрыСканирования", Неопределено);
	ПараметрыОткрытияФормы.Вставить("ВидПродукции",          Неопределено);
	ПараметрыОткрытияФормы.Вставить("Номенклатура",          Неопределено);
	ПараметрыОткрытияФормы.Вставить("Характеристика",        Неопределено);
	ПараметрыОткрытияФормы.Вставить("Серия",                 Неопределено);
	ПараметрыОткрытияФормы.Вставить("GTIN",                  Неопределено);
	ПараметрыОткрытияФормы.Вставить("КодыGTIN",              Неопределено);
	
	ПараметрыОткрытияФормы.Вставить("ГоденДо",                          '00010101');
	ПараметрыОткрытияФормы.Вставить("ИдентификаторыПроисхожденияВЕТИС", Неопределено);
	ПараметрыОткрытияФормы.Вставить("СкоропортящаясяПродукция",         Ложь);
	
	ПараметрыОткрытияФормы.Вставить("КоличествоПотребительскихУпаковок",                     0);
	ПараметрыОткрытияФормы.Вставить("КоличествоПотребительскихУпаковокТребующихВзвешивания", 0);
	ПараметрыОткрытияФормы.Вставить("КоличествоПодобрано",                                   0);
	ПараметрыОткрытияФормы.Вставить("КоличествоПодобраноВзвешено",                           0);
	ПараметрыОткрытияФормы.Вставить("КоличествоПодобраноВзвешеноОСУ",                        0);
	ПараметрыОткрытияФормы.Вставить("КоличествоПотребительскихУпаковокОСУ",                  0);
	
	ПараметрыОткрытияФормы.Вставить("УточнениеДанныхОТовареДопустимо",    Ложь);
	ПараметрыОткрытияФормы.Вставить("УточнениеКоличестваТовараДопустимо", Ложь);
	ПараметрыОткрытияФормы.Вставить("УточнениеКоличестваОСУДопустимо",    Ложь);
	
	
	ПараметрыОткрытияФормы.Вставить("ДопустимаПроизвольнаяЕдиницаУчета", Ложь);
	ПараметрыОткрытияФормы.Вставить("ЭтоДобавлениеОСУ",                  Ложь);
	
	Возврат ПараметрыОткрытияФормы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеПараметровСканирования

// Дополняются свойства параметров сканирования и заполняются значения для документа "Маркировка товаров ИСМП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - См. ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования.
//  ПараметрыРежимаИсправленияОшибок - Структура - Параметры режима исправления ошибок.
Процедура ЗаполнитьПараметрыСканированияМаркировкаТоваров(Контекст, ПараметрыСканирования, ПараметрыРежимаИсправленияОшибок = Неопределено)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	ВидПродукции = ИсточникДанных.ВидПродукции;
	Операция     = ИсточникДанных.Операция;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "ШтрихкодыУпаковок";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "ШтрихкодУпаковки";
	
	ПараметрыСканирования.СозданиеНаборов = Истина;
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	ДоступнаПечатьЭтикеток = (ВидПродукции <> ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха"));
	
	ПараметрыСканирования.ДоступнаПечатьЭтикеток                         = ДоступнаПечатьЭтикеток;
	ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции = Истина;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция                     = Истина;
	ПараметрыСканирования.КонтрольПустыхУпаковок                         = Ложь;
	ПараметрыСканирования.ПоддерживаютсяОперацииАгрегации                = Истина;
	ПараметрыСканирования.КонтролироватьСтандартнуюВложенность           = Ложь;
	
	ПараметрыСканирования.КонтрольРасхожденийСДокументомОснованием       = Истина;
	ПараметрыСканирования.ВозможнаЗагрузкаТСД                            = Истина;
	ПараметрыСканирования.РазрешенаОбработкаКодовСПустойНоменклатурой    = Истина;
	
	ПараметрыСканирования.Организация       = ИсточникДанных.Организация;
	ПараметрыСканирования.Владелец          = ИсточникДанных.Организация;
	ПараметрыСканирования.ДокументОснование = ИсточникДанных.ДокументОснование;
	
	ОперацииМаркировки = ИнтеграцияИСМПСлужебныйКлиентСервер.ОперацииМаркировки(Операция);
	ЭтоВводВОборотИмпортСФТС = (Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотИмпортСФТС"));
	ЭтоЗаполнениеДекларацииПоКодамУпаковок = (ЭтоВводВОборотИмпортСФТС
		И ИсточникДанных.ВариантВыполненияАгрегации = ПредопределенноеЗначение("Перечисление.ВариантыЗаполненияДекларацииИСМП.КодыУпаковок"));
	ЭтоАгрегацияПередВводомВОборот = (Не ЭтоВводВОборотИмпортСФТС
		И ИсточникДанных.ВариантВыполненияАгрегации = ПредопределенноеЗначение("Перечисление.ВариантыВыполненияАгрегацииИСМП.ПередВводомВОборот"));
	ПрисутствуетОперацияНанесения = ОперацииМаркировки.ЭтоОперацияНанесения Или ЗначениеЗаполнено(ИсточникДанных.ОперацияНанесения);
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = Операция;
	
	ПараметрыСканирования.ДопустимыйСпособВводаВОборот = СпособВводаВОборотСУЗПоВидуОперации(Операция);
	
	ДальнейшееДействие = Неопределено;
	Если ПараметрыРежимаИсправленияОшибок <> Неопределено Тогда
		ДальнейшееДействие = ПараметрыРежимаИсправленияОшибок.ДальнейшееДействие;
	КонецЕсли;
	
	Если ОперацииМаркировки.ЭтоАгрегация Тогда
		ПараметрыСканирования.ЭтоАгрегацияКодовМаркировкиИСМП = Истина;
	КонецЕсли;
	
	Если ОперацииМаркировки.ЭтоМаркировкаОстатков Тогда
		ПараметрыСканирования.ЭтоМаркировкаОстатков = Истина;
	Иначе
		ПараметрыСканирования.ЭтоМаркировкаОстатков = Ложь;
	КонецЕсли;
	
	Если ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха")
		И ОперацииМаркировки.ЭтоПриемкаКИЗ Тогда
		ПараметрыСканирования.СопоставлятьНоменклатуру = Ложь;
	КонецЕсли;
	
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(Неопределено);
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Неопределен"));
	
	Если Не ОперацииМаркировки.ЭтоАгрегация
		И (ДальнейшееДействие = ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.ВыполнитеАгрегацию")
			Или ДальнейшееДействие = ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.ВыполнитеАгрегациюСИсправлениями")) Тогда
		
		Если ЭтоЗаполнениеДекларацииПоКодамУпаковок Или ЭтоАгрегацияПередВводомВОборот Тогда
			
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
			ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
			
		Иначе
			
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
			ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
			
		КонецЕсли;
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетПередачуСобственнику"));
		
	ИначеЕсли ОперацииМаркировки.ЭтоАгрегация Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетПередачуСобственнику"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		
		Если ПараметрыСканирования.ДопустимыеСтатусыНаборовИСМП = Неопределено Тогда
			ПараметрыСканирования.ДопустимыеСтатусыНаборовИСМП = Новый Массив;
		КонецЕсли;
		
		ПараметрыСканирования.ДопустимыеСтатусыНаборовИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
		
	ИначеЕсли ДальнейшееДействие = ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.ПередайтеДанныеСИсправлениями") Тогда
		
		Если ИсточникДанных.ОперацияНанесенияТолькоДляНаборов Тогда
			
			Если ПараметрыСканирования.ДопустимыеСтатусыНаборовИСМП = Неопределено Тогда
				ПараметрыСканирования.ДопустимыеСтатусыНаборовИСМП = Новый Массив;
			КонецЕсли;
			
			ПараметрыСканирования.ДопустимыеСтатусыНаборовИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
			
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
			
		Иначе
			
			Если ЭтоЗаполнениеДекларацииПоКодамУпаковок Или ЭтоАгрегацияПередВводомВОборот Тогда
				ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
			КонецЕсли;
			
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
			
		КонецЕсли;
		
	Иначе
		
		Если ИсточникДанных.ОперацияНанесенияТолькоДляНаборов Тогда
			
			Если ПараметрыСканирования.ДопустимыеСтатусыНаборовИСМП = Неопределено Тогда
				ПараметрыСканирования.ДопустимыеСтатусыНаборовИСМП = Новый Массив;
			КонецЕсли;
			
			ПараметрыСканирования.ДопустимыеСтатусыНаборовИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Эмитирован"));
			
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
			
		Иначе
			
			Если ПрисутствуетОперацияНанесения Или ОперацииМаркировки.ЭтоПриемкаКИЗ Тогда
				
				ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
					ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Эмитирован"));
				ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
					ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Эмитирован"));
					
				Если ОперацииМаркировки.ЭтоПриемкаКИЗ Тогда
					ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
						ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.НеИндивидуализирован"));
					ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
						ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Индивидуализирован"));
				КонецЕсли;
				
			Иначе
				ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
					ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
				ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
					ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
				ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
					ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
				ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
					ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ОперацииМаркировки.ЭтоИмпортСФТС Тогда
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетПодтверждениеФТС"));
			ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетПодтверждениеФТС"));
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначенияИСКлиентСервер.ЭтоПродукцияПодконтрольнаяВЕТИС(ВидПродукции) Тогда
		ИнтеграцияИСМПВЕТИСКлиентСервер.ДополнитьПараметрыСканированияМаркировкаТоваров(Операция, ПараметрыСканирования);
	КонецЕсли;
	
	Если ПрисутствуетОперацияНанесения Тогда
		
		ПараметрыСканирования.ОперацияНанесенияТолькоДляНаборов = ИсточникДанных.ОперацияНанесенияТолькоДляНаборов;
		ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП   = Истина;
		ПараметрыСканирования.ТребоватьПолныйКодМаркировкиИСМП  = Истина;
		
		Если ОбщегоНазначенияИСКлиентСервер.ЭтоВидПродукцииСоСрокамиГодности(ВидПродукции) Тогда
			ПараметрыСканирования.ЗаполнятьСрокГодности = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
	
	ПараметрыСканирования.ИндивидуализироватьКИЗ = ОперацииМаркировки.ЭтоИндивидуализацияКИЗ
		Или ИсточникДанных.ОперацияНанесения = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ИндивидуализацияКИЗ");
	
	Если ПрисутствуетОперацияНанесения Тогда
		ПараметрыСканирования.ЗапрашиватьКоличествоМерногоТовара = Истина;
	Иначе
		ПараметрыСканирования.ЗапрашиватьКоличествоМерногоТовара = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки().ЗапрашиватьКоличествоМерногоТовара;
	КонецЕсли;
	
	ПараметрыСканирования.ЭтоМаркировкаТоваровИСМП = Истина;
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для документа "Вывод из оборота ИСМП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - Структура - (См. ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования).
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
Процедура ЗаполнитьПараметрыСканированияВыводаИзОборота(Контекст, ПараметрыСканирования)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	ВидПродукции = ИсточникДанных.ВидПродукции;
	Операция     = ИсточникДанных.Операция;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "ШтрихкодыУпаковок";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "ШтрихкодУпаковки";
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции = Истина;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция                     = Истина;
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеНеизвестныхУпаковокИСМП(ПараметрыСканирования, Истина);
	
	ПараметрыСканирования.ВозможнаЗагрузкаТСД = Истина;
	ПараметрыСканирования.Организация         = ИсточникДанных.Организация;
	
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
	
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = Операция;
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
	
	ПараметрыСканирования.РазрешеноЗапрашиватьКодМаркировки = (Не ИсточникДанных.ОбъемноСортовойУчет);
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для документа "Списание кодов маркировки ИСМП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - Структура - (См. ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования).
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
Процедура ЗаполнитьПараметрыСканированияСписанияКодовМаркировки(Контекст, ПараметрыСканирования)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	ВидПродукции = ИсточникДанных.ВидПродукции;
	Операция     = ИсточникДанных.Операция;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "ШтрихкодыУпаковок";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "ШтрихкодУпаковки";
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.ТолькоМаркируемаяПродукция                  = Истина;
	ПараметрыСканирования.КонтрольПустыхУпаковок                      = Ложь;
	ПараметрыСканирования.ПоддерживаютсяОперацииАгрегации             = Ложь;
	ПараметрыСканирования.КонтролироватьСтандартнуюВложенность        = Ложь;
	ПараметрыСканирования.РазрешенаОбработкаКодовСПустойНоменклатурой = Истина;
	
	ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции = Истина;
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеНеизвестныхУпаковокИСМП(ПараметрыСканирования, Истина);
	
	ПараметрыСканирования.Организация = ИсточникДанных.Организация;
	
	Если ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха") Тогда
		
		ПараметрыСканирования.ВидОперацииИСМП = ИсточникДанных.Операция;
		Если ИсточникДанных.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.СписаниеЭмитированныхКодовМаркировкиПриПоступлении") Тогда
			ПараметрыСканирования.СопоставлятьНоменклатуру = Ложь;
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Эмитирован"));
		Иначе
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
		КонецЕсли;
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.НеИндивидуализирован"));
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Индивидуализирован"));
		
	Иначе
		// Для обогащения информации об ошибке при выводе пользователю
		Если ИсточникДанных.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.СписаниеКодовВыбывшихДоОбязательностиМаркировки") Тогда
			ПараметрыСканирования.ВидОперацииИСМП = ИсточникДанных.Операция;
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
		Иначе
			ПараметрыСканирования.ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.СписаниеЭмитированныхКодовМаркировки");
		КонецЕсли;
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
		
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Эмитирован"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Эмитирован"));
		
	КонецЕсли;
	
	Если ИнтеграцияИСКлиентСервер.ВидПродукцииИспользуетПередачуОтчетаОбОтбраковкеЧерезСУЗ(ВидПродукции) Тогда
		ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП  = Истина;
		ПараметрыСканирования.ТребоватьПолныйКодМаркировкиИСМП = Истина;
	КонецЕсли;
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для документа "Перемаркировка ИСМП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - Структура - (См. ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования).
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
Процедура ЗаполнитьПараметрыСканированияПеремаркировкаТоваров(Контекст, ПараметрыСканирования)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	ВидПродукции = ИсточникДанных.ВидПродукции;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "Товары";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "КодМаркировки, НовыйКодМаркировки";
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.ТолькоМаркируемаяПродукция = Истина;
	
	ПараметрыСканирования.Организация = ИсточникДанных.Организация;
	
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Перемаркировка");
	
	ПараметрыСканирования.ИндивидуализироватьКИЗ = ИсточникДанных.ТребуетсяИндивидуализацияКИЗ;
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для документа "Уведомление об отгрузке маркированных товаровИСМП ИСМП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - Структура - (См. ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования).
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
Процедура ЗаполнитьПараметрыСканированияОтгрузкаТоваровИСМП(Контекст, ПараметрыСканирования)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	ВидПродукции = ИсточникДанных.ВидПродукции;
	Операция     = ИсточникДанных.Операция;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "ШтрихкодыУпаковок";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "ШтрихкодУпаковки";
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	Если Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаЕАЭССПризнаниемКИ") Тогда
		ПараметрыСканирования.ДопустимыйСпособВводаВОборот =
			СпособВводаВОборотСУЗПоВидуОперации(Операция);
	КонецЕсли;
	
	ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции = Истина;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция                     = Истина;
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеНеизвестныхУпаковокИСМП(ПараметрыСканирования, Истина);
	
	Если ЗначениеЗаполнено(ИсточникДанных.ДатаОтгрузки) Тогда
		ПараметрыСканирования.ДатаДокумента = ИсточникДанных.ДатаОтгрузки;
	Иначе
		ПараметрыСканирования.ДатаДокумента = ИсточникДанных.Дата;
	КонецЕсли;
	
	ПараметрыСканирования.ВозможнаЗагрузкаТСД = Истина;
	ПараметрыСканирования.Организация         = ИсточникДанных.Организация;
	
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетПередачуСобственнику"));
	
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетПередачуСобственнику"));
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = Операция;
	
	Если Не ЗначениеЗаполнено(ВидПродукции) И ИнтеграцияИСКлиентСервер.ПрисутствуютВидыПродукцииСоСрокомГодности(ПараметрыСканирования.ДопустимыеВидыПродукции)
			Или ОбщегоНазначенияИСКлиентСервер.ЭтоВидПродукцииСоСрокамиГодности(ВидПродукции) Тогда
		ПараметрыСканирования.КонтролироватьОкончаниеСрокаГодности = Истина;
	КонецЕсли;
	
	Если ИнтеграцияИСМПСлужебныйКлиентСервер.ДоступенСрокГодностиПриПриемкеОтгрузке(Операция, ВидПродукции) Тогда
		ПараметрыСканирования.ЗаполнятьСрокГодности = Истина;
	КонецЕсли;
	
	ПараметрыСканирования.РазрешеноЗапрашиватьКодМаркировки = (Операция <> ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаВЕАЭСПриОСУ"));
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для документа "Уведомление об отгрузке маркированных товаровИСМП ИСМП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - (См. ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования).
Процедура ЗаполнитьПараметрыСканированияПриемкаТоваровИСМП(Контекст, ПараметрыСканирования)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	ВидПродукции = ИсточникДанных.ВидПродукции;
	Операция     = ИсточникДанных.Операция;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "ШтрихкодыУпаковок";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "ШтрихкодУпаковки";
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции = Истина;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция                     = Истина;
	
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеНеизвестныхУпаковокИСМП(ПараметрыСканирования, Истина);
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеСервисаИСМП(ПараметрыСканирования, Истина);
	
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетДоставки"));
	
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ОжидаетДоставки"));
	
	ПараметрыСканирования.СопоставлятьНоменклатуру  = (Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаИзЕАЭСПриОСУ"));
	ПараметрыСканирования.СоздаватьШтрихкодУпаковки = Ложь;
	ПараметрыСканирования.СсылкаНаОбъект            = Неопределено;
	
	Если ИнтеграцияИСМПСлужебныйКлиентСервер.ЭтоПриемкаИзСтранЕАЭС(Операция) Тогда
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
	КонецЕсли;
	
	Если ИнтеграцияИСМПСлужебныйКлиентСервер.ДоступенСрокГодностиПриПриемкеОтгрузке(Операция, ВидПродукции) Тогда
		ПараметрыСканирования.ЗаполнятьСрокГодности = Истина;
	КонецЕсли;
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП                   = Операция;
	ПараметрыСканирования.ПоддерживаетсяОбъемноСортовойУчет = (Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаИзЕАЭСПриОСУ"));
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
	
КонецПроцедуры


// Дополняются свойства параметров сканирования и заполняются значения для документа "Возврат в оборот ИСМП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования.
Процедура ЗаполнитьПараметрыСканированияВозвратаВОборот(Контекст, ПараметрыСканирования)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	ВидПродукции = ИсточникДанных.ВидПродукции;
	Операция     = ИсточникДанных.Операция;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "Товары";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "КодМаркировки";
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.ТолькоМаркируемаяПродукция = Истина;
	
	ПараметрыСканирования.Организация = ИсточникДанных.Организация;
	
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаВозвращенФизическомуЛицу"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаВРезультатеСписания"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаИспользованДляСобственныхНуждПредприятия"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаКонфискация"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаЛиквидацияПредприятия"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаПоДоговоруРассрочки"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаПриУтратеИлиПовреждении"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаРозничнаяПродажа"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаЭкспортированВСтраныЕАЭС"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаЭкспортированЗаПределыСтранЕАЭС"));
	
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаВозвращенФизическомуЛицу"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаВРезультатеСписания"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаИспользованДляСобственныхНуждПредприятия"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаКонфискация"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаЛиквидацияПредприятия"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаПоДоговоруРассрочки"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаПриУтратеИлиПовреждении"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаРозничнаяПродажа"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаЭкспортированВСтраныЕАЭС"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборотаЭкспортированЗаПределыСтранЕАЭС"));
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = Операция;
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для документа "Отчет ИСМП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - См. ШтрихкодированиеИСКлиент.ПараметрыСканирования.
Процедура ЗаполнитьПараметрыСканированияОтчетИСМП(Контекст, ПараметрыСканирования)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	ВидПродукции = ИсточникДанных.ВидПродукции;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок  = Неопределено;
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки          = Неопределено;
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.СоздаватьШтрихкодУпаковки           = Ложь;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция          = Истина;
	ПараметрыСканирования.КонтрольУникальностиКодовМаркировки = Ложь;
	ПараметрыСканирования.РазрешенаОбработкаБезУказанияМарки  = Истина;
	ПараметрыСканирования.РазрешеноЗапрашиватьКодМаркировки   = Ложь;
	ПараметрыСканирования.ЗапрашиватьКоличествоМерногоТовара  = Ложь;
	
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеНеизвестныхУпаковокИСМП(ПараметрыСканирования, Ложь);
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеСервисаИСМП(ПараметрыСканирования, Ложь);
	
	ПараметрыСканирования.Организация = ИсточникДанных.Организация;
	ПараметрыСканирования.Владелец    = Неопределено;
	ПараметрыСканирования.СозданиеНаборов = Ложь;
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтчетИСМПСписокКИНаБалансе");
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для документа "Заказ на эмиссию кодов маркировки СУЗ".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - Структура - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования).
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
Процедура ЗаполнитьПараметрыСканированияЗаказНаЭмиссиюКодовМаркировкиСУЗ(Контекст, ПараметрыСканирования)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	ВидПродукции = ИсточникДанных.ВидПродукции;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок  = Неопределено;
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки          = Неопределено;
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.СоздаватьШтрихкодУпаковки           = Ложь;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция          = Истина;
	ПараметрыСканирования.КонтрольУникальностиКодовМаркировки = Ложь;
	ПараметрыСканирования.РазрешенаОбработкаБезУказанияМарки  = Истина;
	ПараметрыСканирования.РазрешеноЗапрашиватьКодМаркировки   = Ложь;
	ПараметрыСканирования.ЗапрашиватьКоличествоМерногоТовара  = Ложь;
	
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеНеизвестныхУпаковокИСМП(ПараметрыСканирования, Ложь);
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеСервисаИСМП(ПараметрыСканирования, Ложь);
	
	ПараметрыСканирования.Организация = ИсточникДанных.Организация;
	ПараметрыСканирования.Владелец    = Неопределено;
	ПараметрыСканирования.СозданиеНаборов = Истина;
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ЗаказНаЭмиссиюКодовМаркировки");
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для РМ "Проверка кодов маркировки".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования.
Процедура ЗаполнитьПараметрыСканированияПроверкаКодовМаркировки(Контекст, ПараметрыСканирования)
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования,, Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.ДопустимыеВидыПродукции.Очистить();
	ПараметрыСканирования.РазрешенаОбработкаНеНайденныхЛогистическихУпаковок = Истина;
	ПараметрыСканирования.Владелец                                           = Неопределено;
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок                 = Неопределено;
	ПараметрыСканирования.ВозможнаЗагрузкаТСД                                = Истина;
	ПараметрыСканирования.РазрешенаОбработкаКодовСПустойНоменклатурой        = Истина;
	ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции     = Истина;
	ПараметрыСканирования.СоздаватьШтрихкодУпаковки                          = Ложь;
	ПараметрыСканирования.СопоставлятьНоменклатуру                           = Ложь;
	ПараметрыСканирования.Организация                                        = Контекст.Организация;
	ПараметрыСканирования.ЗаполнятьСрокГодности                              = Истина;
	
	ПараметрыСканирования.ЭтоПроверкаКодовМаркировкиИСМП = Истина;
	ПараметрыСканирования.ОпределениеВидаПродукцииИСМП   = Истина;
	ПараметрыСканирования.ЗаписыватьЛогЗапросовИСМП      = Истина;
	ПараметрыСканирования.ТребуетсяЧастичноеВыбытие      = Истина;
	ПараметрыСканирования.СозданиеНаборов                = Истина;
	
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеНеизвестныхУпаковокИСМП(ПараметрыСканирования, Истина);
	ОбщегоНазначенияИСМПКлиентСервер.УстановитьПараметрСканированияЗапрашиватьДанныеСервисаИСМП(ПараметрыСканирования, Истина);
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для документа "Вывод из оборота ИСМП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - Структура - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования).
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
Процедура ЗаполнитьПараметрыСканированияУточнениеСведенийОКодахМаркировкиИСМП(Контекст, ПараметрыСканирования)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	ВидПродукции = ИсточникДанных.ВидПродукции;
	Операция     = ИсточникДанных.Операция;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "ШтрихкодыУпаковок";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "ШтрихкодУпаковки";
	
	Если Не ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.КонтрольПустыхУпаковок               = Ложь;
	ПараметрыСканирования.ПоддерживаютсяОперацииАгрегации      = Ложь;
	ПараметрыСканирования.КонтролироватьСтандартнуюВложенность = Ложь;
	
	ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции = Истина;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция                     = Истина;
	
	ПараметрыСканирования.ВозможнаЗагрузкаТСД = Истина;
	ПараметрыСканирования.Организация         = ИсточникДанных.Организация;
	
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	
	Если Операция <> ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодностиВСД") Тогда
		ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
		ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(
			ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
	КонецЕсли;
	
	ПараметрыСканирования.ОтборПоВидуПродукции = Истина;
	
	Если ОбщегоНазначенияИСКлиентСервер.ЭтоПродукцияПодконтрольнаяВЕТИС(ВидПродукции) Тогда
		ИнтеграцияИСМПВЕТИСКлиентСервер.ДополнитьПараметрыСканированияУточнениеСведенийОКодах(Операция, ПараметрыСканирования);
		Если Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодностиВСД") Тогда
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
			ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
				ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Списан"));
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП   = Ложь;
	ПараметрыСканирования.ТребоватьПолныйКодМаркировкиИСМП  = Ложь;
	
	Если (Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодности")
		И ОбщегоНазначенияИСКлиентСервер.ЭтоВидПродукцииСоСрокамиГодности(ВидПродукции))
		Или Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.КорректировкаСведенийКМСрокГодностиВСД") Тогда
		ПараметрыСканирования.ЗаполнятьСрокГодности = Истина;
	КонецЕсли;
	
	Если Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.КорректировкаСведенийКМФактическийВес")
		Или Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтчетОПеревзвешивании") Тогда
		ПараметрыСканирования.ТолькоВесоваяПродукция             = Истина;
		ПараметрыСканирования.ЗапрашиватьКоличествоМерногоТовара = Истина;
		ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП    = Истина;
		ПараметрыСканирования.ТребоватьПолныйКодМаркировкиИСМП   = Истина;
	КонецЕсли;
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = Операция;
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, ВидПродукции);
	
КонецПроцедуры

// Дополняются свойства параметров сканирования и заполняются значения для регистра "Кеги на оборудовании розлива ИС МП".
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка, СправочникСсылка - Контекст.
//  ПараметрыСканирования - Структура - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования).
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
Процедура ЗаполнитьПараметрыСканированияВскрытыеПотребительскиеУпаковки(Контекст, ПараметрыСканирования) Экспорт
	
	Если Контекст.ИмяПодсистемы <> "ИСМП" Тогда
		Возврат;
	КонецЕсли;
	
	Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВскрытиеПотребительскойУпаковки");
	
	ВключенаПоддержкаИСМП = ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования);
	ВключенаПоддержкаМОТП = ШтрихкодированиеОбщегоНазначенияМОТПКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования,,, Операция);
	
	Если Не (ВключенаПоддержкаИСМП Или ВключенаПоддержкаМОТП) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.ВидОперацииИСМП                                = Операция;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция                     = Истина;
	ПараметрыСканирования.СоздаватьШтрихкодУпаковки                      = Истина;
	ПараметрыСканирования.ТребоватьПолныйКодМаркировкиИСМП               = Истина;
	ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП                = Истина;
	ПараметрыСканирования.РазрешеноЗапрашиватьКодМаркировки              = Истина;

	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборот"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВведенВОборотПриВозврате"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ВыведенИзОборота"));
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(
		ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.ПодключенКОборудованиюРозлива"));
	
	ПараметрыСканирования.ДопустимыеВидыПродукции = Новый Массив(
		ИнтеграцияИСКлиентСерверПовтИсп.ВидыПродукцииИспользующиеВскрытыеПотребительскихУпаковок(Истина, Ложь, Ложь));
	
КонецПроцедуры

#Область ПроизводствоМаркировкаПива

Процедура ЗаполнитьПараметрыСканированияОтчетОбИмпортеЕГАИС(ПараметрыСканирования, Контекст)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
		Организация = Контекст.Организация;
	Иначе
		ИсточникДанных = Контекст;
		Организация = Неопределено;
	КонецЕсли;
	
	Если Не ВключитьПоддержкуПродукцииИСМПЕГАИС(ПараметрыСканирования) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "ШтрихкодыУпаковок";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "ШтрихкодУпаковки";
	
	ПараметрыСканирования.ДоступнаПечатьЭтикеток                         = Ложь;
	ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции = Истина;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция                     = Истина;
	ПараметрыСканирования.КонтролироватьСтандартнуюВложенность           = Ложь;
	ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП                = Истина;
	
	ПараметрыСканирования.КонтрольРасхожденийСДокументомОснованием       = Истина;
	ПараметрыСканирования.ВозможнаЗагрузкаТСД                            = Истина;
	
	ПараметрыСканирования.Организация       = Организация;
	ПараметрыСканирования.Владелец          = Организация;
	ПараметрыСканирования.ДокументОснование = ИсточникДанных.ДокументОснование;
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля");
	
	ПараметрыСканирования.ДопустимыйСпособВводаВОборот = СпособВводаВОборотСУЗПоВидуОперации(ПараметрыСканирования.ВидОперацииИСМП);
	
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, Неопределено);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыСканированияОтчетОПроизводствеЕГАИС(ПараметрыСканирования, Контекст)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
		Организация = Контекст.Организация;
	Иначе
		ИсточникДанных = Контекст;
		Организация = Неопределено;
	КонецЕсли;
	
	Если Не ВключитьПоддержкуПродукцииИСМПЕГАИС(ПараметрыСканирования) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования.ИмяТабличнойЧастиШтрихкодыУпаковок = "ШтрихкодыУпаковок";
	ПараметрыСканирования.ИмяКолонкиШтрихкодУпаковки         = "ШтрихкодУпаковки";
	
	ПараметрыСканирования.ДоступнаПечатьЭтикеток                         = Ложь;
	ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции = Истина;
	ПараметрыСканирования.ТолькоМаркируемаяПродукция                     = Истина;
	ПараметрыСканирования.КонтролироватьСтандартнуюВложенность           = Ложь;
	ПараметрыСканирования.СохранятьКодыМаркировкиВПулИСМП                = Истина;
	
	ПараметрыСканирования.КонтрольРасхожденийСДокументомОснованием       = Истина;
	ПараметрыСканирования.ВозможнаЗагрузкаТСД                            = Истина;
	
	ПараметрыСканирования.Организация       = Организация;
	ПараметрыСканирования.Владелец          = Организация;
	ПараметрыСканирования.ДокументОснование = ИсточникДанных.ДокументОснование;
	
	// Для обогащения информации об ошибке при выводе пользователю
	ПараметрыСканирования.ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ");
	
	ПараметрыСканирования.ДопустимыйСпособВводаВОборот = СпособВводаВОборотСУЗПоВидуОперации(ПараметрыСканирования.ВидОперацииИСМП);
	
	ПараметрыСканирования.ДопустимыеСтатусыИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
	ПараметрыСканирования.ДопустимыеСтатусыУпаковокИСМП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиИСМП.Нанесен"));
	
	НастроитьПараметрыСканированияПоРаздельномуКонтролю(ПараметрыСканирования, Неопределено);
	
КонецПроцедуры

Функция ВключитьПоддержкуПродукцииИСМПЕГАИС(ПараметрыСканирования)
	
	Результат = Ложь;
	ВидыПродукции = ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииЕГАИС();
	ВидыПродукцииИСМП = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции();
	Для Каждого ВидПродукции Из ВидыПродукции Цикл
		Если ВидыПродукцииИСМП.Найти(ВидПродукции) <> Неопределено Тогда
			Если Результат Тогда
				ПараметрыСканирования.ДопустимыеВидыПродукции.Добавить(ВидПродукции);
			Иначе
				Результат = Истина;
				ВключитьПоддержкуПродукцииИСМП(ПараметрыСканирования, ВидПродукции);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;

КонецФункции

#КонецОбласти

#КонецОбласти

Функция РазрешеноЗапрашиватьСтатусыКодовЕАЭС(ПараметрыСканирования) Экспорт
	
	Если ПараметрыСканирования = Неопределено Тогда
		
		Возврат Ложь;
		
	Иначе
		
		Возврат ПараметрыСканирования.ВидОперацииИСМП = ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа")
			Или ПараметрыСканирования.Свойство("ЭтоПроверкаКодовМаркировкиИСМП")
				И ПараметрыСканирования.ЭтоПроверкаКодовМаркировкиИСМП;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
