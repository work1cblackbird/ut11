
#Область ПрограммныйИнтерфейс

#Область МаркируемаяПродукция

// Возвращает таблицу "ОтсканированныеМарки".
//
// Возвращаемое значение:
// 	ТаблицаЗначений:
// 		* ШтрихкодМаркировки - СправочникСсылка - штрихкод упаковки.
// 		* ЗначениеШтрихкодаМаркировки - Строка.
// 		* ЭтоВложеннаяУпаковка - Булево.
// 		* ТипУпаковки - ПеречислениеСсылка.ТипыУпаковок.
//
Функция ТаблицаОтсканированныеМарки() Экспорт

	ОтсканированныеМарки = Новый ТаблицаЗначений;
	//++ Локализация
	ТипШтрихкодаМаркировки = Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров");
	ТипУпаковкиМаркировки = Новый ОписаниеТипов("ПеречислениеСписок.ТипыУпаковок");
	
	ТипБулево = Новый ОписаниеТипов("Булево");
	ТипСтрокаЗначениеШтрихкода = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(200));
	
	ОтсканированныеМарки.Колонки.Добавить("ШтрихкодМаркировки", ТипШтрихкодаМаркировки);
	ОтсканированныеМарки.Колонки.Добавить("ЗначениеШтрихкодаМаркировки", ТипСтрокаЗначениеШтрихкода);
	ОтсканированныеМарки.Колонки.Добавить("ЭтоВложеннаяУпаковка", ТипБулево);
	ОтсканированныеМарки.Колонки.Добавить("ТипУпаковки", ТипУпаковкиМаркировки);
	//-- Локализация
	
	Возврат ОтсканированныеМарки;

КонецФункции

// Возвращает список отсканированных марок товаров
//
// Параметры:
//	ТаблицаОтсканированныеМарки - см. ТаблицаОтсканированныеМарки
//	ЗначенияМарокWS - ЗначениеXDTO - Список "ТаблицаМаркировкиВерхнегоУровня" XDTO-пакета WMSMobileClientExchange* 
//	ВерсияСервиса - Строка - версия сервиса WMSMobileClientExchange*
//
// Возвращаемое значение:
//	см. ТаблицаОтсканированныеМарки
//
Функция ОтсканированныеМарки(ТаблицаОтсканированныеМарки, ЗначенияМарокWS, ВерсияСервиса) Экспорт
	
	//++ Локализация
	Если ТипЗнч(ЗначенияМарокWS) = Тип("ОбъектXDTO") Тогда
		
		ЗначенияМарок = Новый ТаблицаЗначений;
		ЗначенияМарок.Колонки.Добавить("ЗначениеШтрихкода", ОбщегоНазначения.ОписаниеТипаСтрока(200));

		Для каждого Элем Из ЗначенияМарокWS.ЗначениеШтрихкода Цикл
			НовСтрока = ЗначенияМарок.Добавить();
			НовСтрока.ЗначениеШтрихкода = Элем;
		КонецЦикла; 
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗначенияШтрихкодов.ЗначениеШтрихкода КАК ЗначениеШтрихкода
		|ПОМЕСТИТЬ ЗначенияШтрихкодов
		|ИЗ
		|	&ЗначенияШтрихкодов КАК ЗначенияШтрихкодов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШтрихкодыУпаковокТоваров.Ссылка КАК ШтрихкодМаркировки,
		|	ЕСТЬNULL(ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода, ЗначенияШтрихкодов.ЗначениеШтрихкода) КАК ЗначениеШтрихкодаМаркировки,
		|	ШтрихкодыУпаковокТоваров.ТипУпаковки КАК ТипУпаковки,
		|	ВЫБОР
		|		КОГДА ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоВложеннаяУпаковка
		|ИЗ
		|	ЗначенияШтрихкодов КАК ЗначенияШтрихкодов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
		|			ПО ШтрихкодыУпаковокТоваров.Ссылка = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод
		|				И (НЕ ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка.ПометкаУдаления)
		|		ПО ЗначенияШтрихкодов.ЗначениеШтрихкода = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ЗначенияШтрихкодов", ЗначенияМарок);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НовСтрока = ТаблицаОтсканированныеМарки.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,Выборка);
		КонецЦикла; 
		
	КонецЕсли; 
	//-- Локализация
	
	Возврат ТаблицаОтсканированныеМарки;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область МаркируемаяПродукция

// Результат проверки маркировки.
// 
// Параметры:
//  ОтсканированныеТовары - ТаблицаЗначений - таблица товаров, соответствующая табличной части выполняемого задания
// и содержащая информацию об отсканированных товарах в операциях отбора, размещения, перемещения и проверки отбора.
// В операциях на пересчет хранится исходная информация о товарах документа "ПересчетТоваров".
//  СканированныеЗначенияМарок - ТаблицаЗначений - Сканированные значения марок
// 
// Возвращаемое значение:
// 	ТаблицаЗначений -- Результат проверки маркировки:
// 		* ЗначениеШтрихкода - Строка.
// 		* ЗначениеПринято - Булево.
// 		* РезультатКонтроля - Строка.
// 		* ШтрихкодУпаковки - СправочникСсылка - штрихкод упаковки.
// 		* ЭтоВложеннаяУпаковка - Булево.
// 		* ЛишниеТовары - Булево.
// 		* НетДанных - Булево.
//
Функция РезультатПроверкиМаркировки(ОтсканированныеТовары, СканированныеЗначенияМарок) Экспорт
	
	РезультатПроверкиМаркировки = Новый ТаблицаЗначений;
	//++ Локализация
	ТипСтрока = ОбщегоНазначения.ОписаниеТипаСтрока(200);
	ТипБулево = Новый ОписаниеТипов("Булево");
	РезультатПроверкиМаркировки.Колонки.Добавить("ЗначениеШтрихкода", ТипСтрока);
	РезультатПроверкиМаркировки.Колонки.Добавить("ЗначениеПринято", ТипБулево);
	РезультатПроверкиМаркировки.Колонки.Добавить("РезультатКонтроля", ТипСтрока);
	
	РезультатПроверкиМаркировки.Колонки.Добавить("ШтрихкодУпаковки", Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	РезультатПроверкиМаркировки.Колонки.Добавить("ЭтоВложеннаяУпаковка", ТипБулево);
	РезультатПроверкиМаркировки.Колонки.Добавить("ЛишниеТовары", ТипБулево);
	РезультатПроверкиМаркировки.Колонки.Добавить("НетДанных", ТипБулево);
	
	Если ТипЗнч(ОтсканированныеТовары) <> Тип("ТаблицаЗначений") Тогда
		Возврат РезультатПроверкиМаркировки;
	КонецЕсли; 
	
	ТоварыУпаковокВерхнегоУровня = ТоварыУпаковокВерхнегоУровня(СканированныеЗначенияМарок);
	
	Для каждого Элем Из СканированныеЗначенияМарок Цикл
		
		НовСтрока = РезультатПроверкиМаркировки.Добавить();
		НовСтрока.ШтрихкодУпаковки = Элем.ШтрихкодМаркировки;
		НовСтрока.ЗначениеШтрихкода = Элем.ЗначениеШтрихкодаМаркировки;
		
		Если НЕ ЗначениеЗаполнено(Элем.ШтрихкодМаркировки) Тогда
			НовСтрока.НетДанных = Истина;
			Продолжить;
		ИначеЕсли Элем.ЭтоВложеннаяУпаковка Тогда
			НовСтрока.ЭтоВложеннаяУпаковка = Истина;
			Продолжить;
		Иначе
			НовСтрока.ЗначениеПринято = Истина;
			ТоварыУпаковки = ТоварыУпаковокВерхнегоУровня.Получить(Элем.ШтрихкодМаркировки);
			ОтборСтрок = Новый Структура("Номенклатура, Характеристика, Серия");
			
			Для каждого ТоварУпаковки Из ТоварыУпаковки Цикл
				ЗаполнитьЗначенияСвойств(ОтборСтрок,ТоварУпаковки);
				СтрокиТоваров = ОтсканированныеТовары.НайтиСтроки(ОтборСтрок);
				Если СтрокиТоваров.Количество() = 0 Тогда
					НовСтрока.ЗначениеПринято = Ложь;
					НовСтрока.ЛишниеТовары = Истина;
					Прервать;
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
		
	КонецЦикла; 
	//-- Локализация
	
	Возврат РезультатПроверкиМаркировки;
	
КонецФункции // РезультатПроверкиМаркировки()

//++ Локализация

// Структура переданных упаковок верхнего уровня, включая список подчиненных товаров
// 
// Параметры:
//	СканированныеЗначенияМарок - ТаблицаЗначений - :
//	*ЗначениеШтрихкодаМаркировки - Строка - 
//	*ТипУпаковки - 
//	*ЭтоВложеннаяУпаковка - Булево
//
// Результат:
// Соответствие - 
//	*Ключ - ссылка на марку верхнего уровня
//	*Значение - ТаблицаЗначений - товарный состав маркированной упаковки
//		*Номенклатура - СправочникСсылка.Номенклатура
//		*Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры
//		*Серия - СправочникСсылка.СерииНоменклатуры
//		*Упаковка - СправочникСсылка.УпаковкиЕдиницыИзмерения
//		*Количество - Число
Функция ТоварыУпаковокВерхнегоУровня(Знач СканированныеЗначенияМарок)
	
	Результат = Новый Соответствие;
	
	Для каждого ТекСтрока Из СканированныеЗначенияМарок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекСтрока.ШтрихкодМаркировки) ИЛИ ТекСтрока.ЭтоВложеннаяУпаковка Тогда
			Продолжить;
		КонецЕсли; 
		
		ТоварныйСостав = Новый ТаблицаЗначений;
		ТоварныйСостав.Колонки.Добавить("УпаковкаМаркировки");
		ТоварныйСостав.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТоварныйСостав.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТоварныйСостав.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		ТоварныйСостав.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
		ТоварныйСостав.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(12,2,ДопустимыйЗнак.Неотрицательный));
		
		ЭтоУпаковкаВерхнегоУровня = Истина;
		ДополнитьСоставМаркируемойУпаковки(ТоварныйСостав, ТекСтрока.ШтрихкодМаркировки, ЭтоУпаковкаВерхнегоУровня);
		
		Результат.Вставить(ТекСтрока.ШтрихкодМаркировки, ТоварныйСостав);
		
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции 
 
Процедура ДополнитьСоставМаркируемойУпаковки(ТоварныйСостав, Знач ШтрихкодМаркировки, ЭтоУпаковкаВерхнегоУровня = Истина)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ШтрихкодМаркировки", ШтрихкодМаркировки);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК УпаковкаТоваров,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА РодительскаяУпаковка.Штрихкод ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЭтоВложеннаяУпаковка,
	|	ШтрихкодыУпаковокТоваров.ТипУпаковки КАК ТипУпаковки
	|ПОМЕСТИТЬ УпаковкиТоваров
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК РодительскаяУпаковка
	|		ПО ШтрихкодыУпаковокТоваров.Ссылка = РодительскаяУпаковка.Штрихкод
	|			И (НЕ РодительскаяУпаковка.Ссылка.ПометкаУдаления)
	|ГДЕ
	|	НЕ ШтрихкодыУпаковокТоваров.ПометкаУдаления
	|	И ШтрихкодыУпаковокТоваров.Ссылка = &ШтрихкодМаркировки
	|
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыУпаковокТоваров.Ссылка,
	|	ШтрихкодыУпаковокТоваров.ТипУпаковки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиТоваров.УпаковкаТоваров КАК УпаковкаМаркировки,
	|	УпаковкиТоваров.ЭтоВложеннаяУпаковка КАК ЭтоВложеннаяУпаковка,
	|	УпаковкиТоваров.ТипУпаковки КАК ТипУпаковки,
	|	УпаковкиТоваров.УпаковкаТоваров.Номенклатура КАК Номенклатура,
	|	УпаковкиТоваров.УпаковкаТоваров.Характеристика КАК Характеристика,
	|	УпаковкиТоваров.УпаковкаТоваров.Серия КАК КАКСерия,
	|	ВЫБОР
	|		КОГДА УпаковкиТоваров.УпаковкаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА УпаковкиТоваров.УпаковкаТоваров.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ УпаковкиТоваров.УпаковкаТоваров.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	УпаковкиТоваров.УпаковкаТоваров.Количество КАК Количество
	|ИЗ
	|	УпаковкиТоваров КАК УпаковкиТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыУпаковокТоваровВложенныеТовары.Ссылка КАК УпаковкаМаркировки,
	|	ШтрихкодыУпаковокТоваровВложенныеТовары.Номенклатура КАК Номенклатура,
	|	ШтрихкодыУпаковокТоваровВложенныеТовары.Характеристика КАК Характеристика,
	|	ШтрихкодыУпаковокТоваровВложенныеТовары.Упаковка КАК Упаковка,
	|	ШтрихкодыУпаковокТоваровВложенныеТовары.Серия КАК Серия,
	|	ШтрихкодыУпаковокТоваровВложенныеТовары.Количество КАК Количество
	|ИЗ
	|	УпаковкиТоваров КАК УпаковкиТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеТовары КАК ШтрихкодыУпаковокТоваровВложенныеТовары
	|		ПО УпаковкиТоваров.УпаковкаТоваров = ШтрихкодыУпаковокТоваровВложенныеТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	УпаковкиТоваров КАК УпаковкиТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|		ПО УпаковкиТоваров.УпаковкаТоваров = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|ГДЕ
	|	НЕ ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.ПометкаУдаления";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатыЗапроса[0].Выгрузить()[0].Количество = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ДанныеТекущейУпаковки = РезультатыЗапроса[1].Выгрузить()[0];
	ТекущаяУпаковка = ДанныеТекущейУпаковки.УпаковкаМаркировки;
	ЭтоУпаковкаВерхнегоУровня = НЕ ДанныеТекущейУпаковки.ЭтоВложеннаяУпаковка;
	ТипТекущейУпаковки = ДанныеТекущейУпаковки.ТипУпаковки;
	
	Если ТипТекущейУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
		
		НовСтрока = ТоварныйСостав.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, РезультатыЗапроса[1].Выгрузить()[0]);
		
	//ИначеЕсли ТипТекущейУпаковки = Перечисления.ТипыУпаковок.МонотоварнаяУпаковка Тогда
	//	
	//	Выборка = РезультатыЗапроса[2].Выбрать();
	//	
	//	Пока Выборка.Следующий() Цикл
	//		НовСтрока = ТоварныйСостав.Добавить();
	//		ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
	//	КонецЦикла; 
		
	ИначеЕсли ТипТекущейУпаковки = Перечисления.ТипыУпаковок.МультитоварнаяУпаковка
		ИЛИ ТипТекущейУпаковки = Перечисления.ТипыУпаковок.МонотоварнаяУпаковка Тогда
	 
		Выборка = РезультатыЗапроса[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			ДополнитьСоставМаркируемойУпаковки(ТоварныйСостав, Выборка.Штрихкод);
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

// Марки задания.
// 
// Параметры:
//  Задание - ДокументСсылка - складского задание,
//  ТипЗадания - Строка - Тип задания
//  ГлубинаДетализацииМаркировки - Число - Глубина детализации маркировки
// 
// Возвращаемое значение:
//  Неопределено, Структура - Марки задания:
// * МаркировкаВерхнегоУровня - ТаблицаЗначений:
// **ЗначениеШтрихкода - Строка
// * МаркировкаДетализированная - см. ДанныеМаркировкиДетализированные
Функция МаркиЗадания(Задание, ТипЗадания, ГлубинаДетализацииМаркировки = 1) Экспорт
	
	Если ТипЗадания = "Отбор" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Документ.ШтрихкодУпаковки.ЗначениеШтрихкода КАК ЗначениеШтрихкода
		|ИЗ
		|	Документ.ОтборРазмещениеТоваров.ШтрихкодыУпаковок КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Задание
		|	И Документ.ШтрихкодУпаковки.ЗначениеШтрихкода <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
		|";
		
	ИначеЕсли  ТипЗадания = "Приемка" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Документ.ШтрихкодУпаковки.ЗначениеШтрихкода КАК ЗначениеШтрихкода
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары.ШтрихкодыУпаковок КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Задание
		|	И Документ.ШтрихкодУпаковки.ЗначениеШтрихкода <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
		|;";
		
	ИначеЕсли  ТипЗадания = "ПроверкаОтбора" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Документ.ШтрихкодУпаковки.ЗначениеШтрихкода КАК ЗначениеШтрихкода
		|ИЗ
		|	Документ.РасходныйОрдерНаТовары.ШтрихкодыУпаковок КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Задание
		|	И Документ.ШтрихкодУпаковки.ЗначениеШтрихкода <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
		|;";
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	
	ДанныеМаркировкиДетализированные = ДанныеМаркировкиДетализированные(Задание);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Задание", Задание);
	
	МаркиЗадания = Новый Структура; // см. ПараметрыЗадания
	РезультатЗапроса = Запрос.Выполнить();
	МаркиЗадания.Вставить("МаркировкаВерхнегоУровня", РезультатЗапроса.Выгрузить());
	МаркиЗадания.Вставить("МаркировкаДетализированная", ДанныеМаркировкиДетализированные);
	
	Возврат МаркиЗадания;
	
КонецФункции

Функция ДанныеМаркировкиДетализированные(ДокСсылка)
	
	ОбрабатываемыеТипы = Новый Массив;
	ОбрабатываемыеТипы.Добавить(Тип("ДокументСсылка.ПриходныйОрдерНаТовары"));
	ОбрабатываемыеТипы.Добавить(Тип("ДокументСсылка.РасходныйОрдерНаТовары"));
	ОбрабатываемыеТипы.Добавить(Тип("ДокументСсылка.ОтборРазмещениеТоваров"));
	
	Если ОбрабатываемыеТипы.Найти(ТИпЗнч(ДокСсылка)) = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	ВложенныеШтрихкодыУпаковокПоДокументу = ШтрихкодированиеИСМП.ВложенныеШтрихкодыУпаковокПоДокументу(
		ДокСсылка, Неопределено);
		
	Если ТипЗнч(ВложенныеШтрихкодыУпаковокПоДокументу) <> Тип("Структура") Тогда
		Возврат Неопределено;
	ИначеЕсли ВложенныеШтрихкодыУпаковокПоДокументу.ЕстьОшибки Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Попытка
		ДеревоУпаковок = ВложенныеШтрихкодыУпаковокПоДокументу.ВложенныеШтрихкоды.ДеревоУпаковок;
	Исключение
		Возврат Неопределено;
	КонецПопытки; 
	
	ДетальнаяТаблица = НовыйДанныеМаркировкиДетализированные();
	
	ПеренестиСтрокиМаркировки(ДеревоУпаковок.Строки, ДетальнаяТаблица);
	
	Возврат ДетальнаяТаблица;

КонецФункции

Функция НовыйДанныеМаркировкиДетализированные()
	
	ТипСтрокаШтрихкод = ОбщегоНазначения.ОписаниеТипаСтрока(200);
	ТипСтрокаНаименование = ОбщегоНазначения.ОписаниеТипаСтрока(150);
	ТипУпаковки = Новый ОписаниеТипов("ПеречислениеСсылка.ТипыУпаковок");
	ТипНоменклатура = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	ТипХарактеристика = Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры");
	ТипСерия = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
	ТипУпаковка = Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения");
	ТипКоличество = ОбщегоНазначения.ОписаниеТипаЧисло(12,2,ДопустимыйЗнак.Неотрицательный);
	
	ДетальнаяТаблица = Новый ТаблицаЗначений;
	ДетальнаяТаблица.Колонки.Добавить("ЗначениеШтрихкода", ТипСтрокаШтрихкод);
	ДетальнаяТаблица.Колонки.Добавить("РодительскаяУпаковкаМаркировкиЗначениеШтрихкода", ТипСтрокаШтрихкод);
	ДетальнаяТаблица.Колонки.Добавить("ТипУпаковкиМаркировки", ТипУпаковки);
	ДетальнаяТаблица.Колонки.Добавить("Номенклатура", ТипНоменклатура);
	
	ДетальнаяТаблица.Колонки.Добавить("Характеристика", ТипХарактеристика);
	ДетальнаяТаблица.Колонки.Добавить("Серия", ТипСерия);
	ДетальнаяТаблица.Колонки.Добавить("Упаковка", ТипУпаковка);
	ДетальнаяТаблица.Колонки.Добавить("Количество", ТипКоличество);
	
	ДетальнаяТаблица.Колонки.Добавить("НаименованиеНоменклатуры", ТипСтрокаНаименование);

	
	Возврат ДетальнаяТаблица;

КонецФункции

Процедура ПеренестиСтрокиМаркировки(СтрокиДерева, ЦелеваяТаблица)
	
	Для каждого ТекСтрока Из СтрокиДерева Цикл
		
		НовСтрока = ЦелеваяТаблица.Добавить();
		НовСтрока.ЗначениеШтрихкода = ТекСтрока.Штрихкод;
		НовСтрока.РодительскаяУпаковкаМаркировкиЗначениеШтрихкода = 
			?(СтрокиДерева.Родитель = Неопределено, "",  СтрокиДерева.Родитель.Штрихкод);
		НовСтрока.ТипУпаковкиМаркировки = ТекСтрока.ТипУпаковки;
		НовСтрока.Номенклатура = ТекСтрока.Номенклатура;
		НовСтрока.Характеристика = ТекСтрока.Характеристика;
		НовСтрока.Серия = ТекСтрока.Серия;
		Если ЗначениеЗаполнено(ТекСтрока.ШтрихкодУпаковки) Тогда
			НовСтрока.Упаковка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрока.ШтрихкодУпаковки,"Упаковка");
		КонецЕсли; 
		
		РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекСтрока.Номенклатура,"Наименование");
		НовСтрока.НаименованиеНоменклатуры = РеквизитыНоменклатуры.Наименование;
		
		НовСтрока.Количество = ТекСтрока.Количество;
		
		ПеренестиСтрокиМаркировки(ТекСтрока.Строки, ЦелеваяТаблица);
		
	КонецЦикла; 

КонецПроцедуры
//-- Локализация

#КонецОбласти

#КонецОбласти
