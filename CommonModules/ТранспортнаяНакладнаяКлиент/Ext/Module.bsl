
#Область ПрограммныйИнтерфейс

// Обработка навигационной ссылки форматированной строки транспортной накладной,
// размещенной в форме документа-основания
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения:
//  	* Объект - ДанныеФормыСтруктура:
//  		** Ссылка - ДокументСсылка.ТранспортнаяНакладная
//  НавигационнаяСсылкаФорматированнойСтроки  - Строка 
//  СтандартнаяОбработка - Булево 
//
Процедура ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
		
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "ОткрытьТТН_") > 0 Тогда
		
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(Прав(НавигационнаяСсылкаФорматированнойСтроки,СтрДлина(НавигационнаяСсылкаФорматированнойСтроки) - СтрДлина("ОткрытьТТН_"))); 	
		СтандартнаяОбработка = Ложь;
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОформитьТТН" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОбщегоНазначенияУТКлиент.ОткрытьФормуПослеПроверкиПроведенностиДокумента("Документ.ТранспортнаяНакладная.ФормаОбъекта",
			Новый Структура,
			Форма,
			"Независимый",
			"Основание");
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьСписокТТН" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Новый Структура("ДокументОснование", Форма.Объект.Ссылка));
		
		ОткрытьФорму("Документ.ТранспортнаяНакладная.ФормаСписка",
						ПараметрыФормы,
						Форма,
						,
						,
						,
						,
						РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

// Проверяет, что оповещение пришло от транспортной накладной
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения:
//  	* Объект - ДанныеФормыСтруктура:
//  		** Ссылка - ДокументСсылка.ТранспортнаяНакладная
//  ИмяСобытия	 - Строка
//  Параметр	 - Произвольный
//  Источник	 - ФормаКлиентскогоПриложения
//
// Возвращаемое значение:
//  Булево - 
//
Функция ЭтоОповещениеЗаписиТранспортнойНакладной(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия = "Запись_ТранспортнаяНакладная" Тогда
		
		Если ТипЗнч(Параметр) = Тип("Массив") Тогда
			Возврат Параметр.Найти(Форма.Объект.Ссылка) <> Неопределено;
		Иначе
			Возврат Истина;
		КонецЕсли;
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Функция-обработчик команды печати
//
// Параметры:
//  ОписаниеКоманды	 - Структура
//
// Возвращаемое значение:
//  Неопределено - 
//
Функция ПечатьТТН(ОписаниеКоманды) Экспорт
	
	ОчиститьСообщения();
	ЭтоПечатьОдногоДокумента = ОписаниеКоманды.ОбъектыПечати.Количество() = 1;
	
	РезультатыПроверки = УправлениеПечатьюУТВызовСервераЛокализация.ПроверитьДокументыОснования(ОписаниеКоманды.ОбъектыПечати);
	
	ОписаниеКоманды.ОбъектыПечати = 
				ОбщегоНазначенияКлиентСервер.РазностьМассивов(ОписаниеКоманды.ОбъектыПечати,
																РезультатыПроверки.ОбъектыПоКоторымСоздаватьТранспортныеНакладныеНельзя);
	ОписаниеКоманды.ОбъектыПечати = 
				ОбщегоНазначенияКлиентСервер.РазностьМассивов(ОписаниеКоманды.ОбъектыПечати,
																РезультатыПроверки.ОбъектыПоКоторымМожноИНужноСоздатьТранспортныеНакладные);
	
	Если ОписаниеКоманды.ОбъектыПечати.Количество() = 0
		И (Не ОписаниеКоманды.ДополнительныеПараметры.ИнтерактивноеДобавление
			Или РезультатыПроверки.ОбъектыПоКоторымМожноИНужноСоздатьТранспортныеНакладные.Количество() = 0) Тогда
			
		Если ЭтоПечатьОдногоДокумента Тогда
			ТекстСообщения = НСтр("ru = 'Нельзя напечатать транспортные накладные и ТТН по данному документу.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Нет документов, по которым можно напечатать транспортные накладные или ТТН.'");
		КонецЕсли;
		
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
	Если РезультатыПроверки.ОбъектыПоКоторымМожноИНужноСоздатьТранспортныеНакладные.Количество() > 0 Тогда
		
		СписокЗначенийКнопок = Новый СписокЗначений;
		
		Если ЭтоПечатьОдногоДокумента Тогда
			ЗаголовокВопроса = НСтр("ru = 'По документу не создана транспортная накладная.'");
		Иначе
			ЗаголовокВопроса = НСтр("ru = 'Для некоторых распоряжений не созданы транспортные накладные.'");
		КонецЕсли;
		
		Если ОписаниеКоманды.ДополнительныеПараметры.ИнтерактивноеДобавление Тогда
			СписокЗначенийКнопок.Добавить("СоздатьИНапечатать", НСтр("ru = 'Создать и вывести на печать'"));
		КонецЕсли;
				
		Если ОписаниеКоманды.ОбъектыПечати.Количество() > 0 Тогда
			СписокЗначенийКнопок.Добавить("НапечататьСуществующие", НСтр("ru = 'Напечатать уже созданные'"));
		КонецЕсли;
		
		СписокЗначенийКнопок.Добавить("Отмена", НСтр("ru = 'Отмена'"));
			
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("РезультатыПроверки", РезультатыПроверки);
		ДополнительныеПараметры.Вставить("ОписаниеКоманды", ОписаниеКоманды);
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("НеСозданыТранспортныеНакладныеЗавершение", 
								ТранспортнаяНакладнаяКлиент,
								ДополнительныеПараметры);
		
		ПоказатьВопрос(ОповещениеОЗавершении,
						ЗаголовокВопроса, 
						СписокЗначенийКнопок);
		
	Иначе
		
		ВыполнитьКомандуПечатиПечатьТТН(Неопределено, ОписаниеКоманды);
		
	КонецЕсли;	
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик оповещения
//
// Параметры:
//  КодВозврата				 - 	КодВозвратаДиалога - КодВозвратаДиалога.ОК или другое значение
//  ДополнительныеПараметры	 - 	Структура - структура дополнительных параметров оповещения.
//
Процедура НеСозданыТранспортныеНакладныеЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	РезультатыПроверки = ДополнительныеПараметры.РезультатыПроверки;
		
	Если КодВозврата = "СоздатьИНапечатать" Тогда 
		
		Если РезультатыПроверки.ЗаданияНаПеревозкуДляСозданияТранспортныхНакладных.Количество() > 0 Тогда
			СозданныеТранспортныеНакладные = УправлениеПечатьюУТВызовСервераЛокализация.СоздатьТранспортныеНакладные(
											РезультатыПроверки.ЗаданияНаПеревозкуДляСозданияТранспортныхНакладных, 
											РезультатыПроверки.ОбъектыПоКоторымНакладныеУжеСозданы);
		Иначе
			СозданныеТранспортныеНакладные = УправлениеПечатьюУТВызовСервераЛокализация.СоздатьТранспортныеНакладные(
											РезультатыПроверки.ОбъектыПоКоторымМожноИНужноСоздатьТранспортныеНакладные);
		КонецЕсли;
		
		Оповестить("Запись_ТранспортнаяНакладная", РезультатыПроверки.ОбъектыПоКоторымМожноИНужноСоздатьТранспортныеНакладные);
		
		Если РезультатыПроверки.ЗаданияНаПеревозкуДляСозданияТранспортныхНакладных.Количество() > 0 Тогда
			Оповестить("Запись_ТранспортнаяНакладная", РезультатыПроверки.ЗаданияНаПеревозкуДляСозданияТранспортныхНакладных);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СозданныеТранспортныеНакладные) Тогда
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ТранспортныеНакладные", СозданныеТранспортныеНакладные);
			ПараметрыФормы.Вставить("Печать", Истина);
			
			Если РезультатыПроверки.ЗаданияНаПеревозкуДляСозданияТранспортныхНакладных.Количество() > 0 Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДополнительныеПараметры.ОписаниеКоманды.ОбъектыПечати,
																   РезультатыПроверки.ЗаданияНаПеревозкуДляСозданияТранспортныхНакладных);
			Иначе
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДополнительныеПараметры.ОписаниеКоманды.ОбъектыПечати,
																   РезультатыПроверки.ОбъектыПоКоторымМожноИНужноСоздатьТранспортныеНакладные);
			КонецЕсли;
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьКомандуПечатиПечатьТТН",
															ТранспортнаяНакладнаяКлиент,
															ДополнительныеПараметры.ОписаниеКоманды);
			
			ОткрытьФорму(
				"Документ.ТранспортнаяНакладная.Форма.СозданныеТранспортныеНакладные", 
				ПараметрыФормы,,,,,
				ОписаниеОповещения);
				
		Иначе 
			
			ТекстСообщения = НСтр("ru = 'Транспортные накладные не созданы.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;
		
	ИначеЕсли КодВозврата = "НапечататьСуществующие" Тогда 
		ВыполнитьКомандуПечатиПечатьТТН(Неопределено, ДополнительныеПараметры.ОписаниеКоманды);
	КонецЕсли;	
	
КонецПроцедуры

// Обработчик оповещения
//
// Параметры:
//  КодВозврата			- 	КодВозвратаДиалога - любое значение, параметр не используется, но необходим для синтаксической проверки
//  ОписаниеКоманды	 	- 	Структура - структура описания команды.
//
Процедура ВыполнитьКомандуПечатиПечатьТТН(КодВозврата, ОписаниеКоманды) Экспорт
				
	Если ОписаниеКоманды.Идентификатор = "ТТН" Тогда
		МенеджерПечати = "Документ.ТранспортнаяНакладная.Печать";
		ИменаМакетов = "ТТН";	
	Иначе
		МенеджерПечати = "Документ.ТранспортнаяНакладная.Печать";
		ИменаМакетов = "ТранспортнаяНакладная";
	КонецЕсли;
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			МенеджерПечати,
			ИменаМакетов,
			ОписаниеКоманды.ОбъектыПечати,
			ОписаниеКоманды.Форма);
							
КонецПроцедуры

#КонецОбласти
