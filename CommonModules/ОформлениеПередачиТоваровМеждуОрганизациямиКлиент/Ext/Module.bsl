// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

#Область РаботаСГиперссылкойПередачиМеждуОрганизациями

// Обработка навигационной ссылки интеркампани ИС.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма:
//   * Объект - ДанныеФормыСтруктураСКоллекцией - документ-основание на форме:
//   ** Ссылка - ОпределяемыйТип.ДокументыСПредварительнойПередачейМеждуОрганизациями - ссылка на объект.
//  НавигационнаяСсылкаФорматированнойСтроки - Строка - Навигационная ссылка форматированной строки
//  СтандартнаяОбработка - Булево - Стандартная обработка
Процедура ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьОбработкуОформлениеПередачиТоваровМеждуОрганизациями" Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияОбработкиПередачиТоваровМеждуОрганизациями", ЭтотОбъект, Форма);
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Обработка.ОформлениеПередачиТоваровМеждуОрганизациями.Форма",
			Новый Структура("Основание", Форма.Объект.Ссылка), Форма,,,,
			Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	КонецЕсли;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПроверитьНаСоответствиеТребованиямГИСМТ" Тогда
		СтандартнаяОбработка = Ложь;
		СоответствиеТребованиямГИСМТКлиент.ОткрытьФормуСРезультатомПроверкиДокументаНаСоответствиеТребованиямГИСМТ(Форма);
	КонецЕсли;
	
КонецПроцедуры

// Обработка оповещения интеркампани ИС.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма:
//   * Объект - ДанныеФормыСтруктураСКоллекцией - документ-основание на форме:
//   ** Ссылка - ОпределяемыйТип.ДокументыСПредварительнойПередачейМеждуОрганизациями - ссылка на объект.
//  ИмяСобытия - Строка - Имя события
//  Параметр - Структура - Параметр события оповещения:
//   * Основание - ОпределяемыйТип.ДокументыСПредварительнойПередачейМеждуОрганизациями - ссылка на объект.
Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр) Экспорт
	
	Если Форма.Элементы.Найти("ТекстПерейтиКОбработкеПередачиТоваровМеждуОрганизациями") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоЗаписьОбъектаГосИС(ИмяСобытия) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметр) <> Тип("Структура") Тогда
		Возврат;
	ИначеЕсли НЕ Параметр.Свойство("Основание") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметр.Основание = Форма.Объект.Ссылка Тогда
		ОформлениеПередачиТоваровМеждуОрганизациямиКлиентСервер.ЗаполнениеРеквизитовФормыДокументаОснования(Форма);
		Возврат;
	КонецЕсли;

КонецПроцедуры

// Обновить гиперссылку после закрытия формы оформления передачи между организациями
// 
// Параметры:
//  Результат - Неопределено - Не используется
//  Форма - ФормаКлиентскогоПриложения - Форма-источник
Процедура ПослеЗакрытияОбработкиПередачиТоваровМеждуОрганизациями(Результат, Форма) Экспорт
	
	ОформлениеПередачиТоваровМеждуОрганизациямиКлиентСервер.ЗаполнениеРеквизитовФормыДокументаОснования(Форма);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Это запись объекта ГосИС (может влиять на расчет гиперссылки).
// 
// Параметры:
//  ИмяСобытия - Строка - Имя события
// 
// Возвращаемое значение:
//  Булево - Это запись объекта ГосИС
Функция ЭтоЗаписьОбъектаГосИС(ИмяСобытия)
	
	Если СтрНайти(ИмяСобытия, "ЕГАИС")>0
		Или СтрНайти(ИмяСобытия, "ВЕТИС")>0
		Или СтрНайти(ИмяСобытия, "ИСМП")>0
		Или СтрНайти(ИмяСобытия, "ЗЕРНО")>0
		Или СтрНайти(ИмяСобытия, "САТУРН")>0
	Тогда
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
