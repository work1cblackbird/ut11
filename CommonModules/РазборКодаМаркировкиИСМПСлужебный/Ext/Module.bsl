#Область СлужебныйПрограммныйИнтерфейс

#Область НастройкиРазбораКодаМаркировки

Процедура ДополнитьОписанияКодовМаркировки(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля) Экспорт
	
	ДлинаСерийногоНомера = РазборКодаМаркировкиИСМПСлужебныйКлиентСервер.ДлинаСерийногоНомераКодаМаркировки(ВидПродукции);
	
	Если ИспользуетсяСтандартноеОписаниеКодаМаркировки(ВидПродукции) Тогда
		
		ОписаниеКодаМаркировкиПродукцииИСМП(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.Табак Тогда
		
		ОписаниеКодаМаркировкиТабачногоБлока(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера);
		
		ОписаниеКодаМаркировкиТабачнойПачки(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера);
		
		ОписаниеКодаМаркировкиТабачнойПачкиКодПроверки8(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.АльтернативныйТабак Тогда
		
		ОписаниеКодаМаркировкиАльтернативногоТабачногоБлока(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера);
		
		ОписаниеКодаМаркировкиАльтернативнойТабачнойПачки(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера);
		
		ОписаниеКодаМаркировкиАльтернативнойТабачнойПачкиСИдентификаторамиПрименения(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.НикотиносодержащаяПродукция Тогда
		
		ОписаниеКодаМаркировкиПродукцииНикотиносодержащаяПродукцияDataMatrixGS1(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Групповая, ДлинаСерийногоНомера);
		ОписаниеКодаМаркировкиПродукцииНикотиносодержащаяПродукцияDataMatrixGS1(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Набор, ДлинаСерийногоНомера);
		
		ОписаниеКодаМаркировкиПродукцииНикотиносодержащаяПродукцияDataMatrix(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Потребительская, ДлинаСерийногоНомера);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.Обувь Тогда
		
		ОписаниеКодаМаркировкиОбуви(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера);
		ОписаниеКодаМаркировкиОбувиКодТНВЭД10(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		
		ОписаниеКодаМаркировкиМолочнаяПродукция(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Потребительская, ДлинаСерийногоНомера);
		ОписаниеКодаМаркировкиМолочнаяПродукция(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Групповая, ДлинаСерийногоНомера);
		ОписаниеКодаМаркировкиМолочнаяПродукция(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Набор, ДлинаСерийногоНомера);
		
		ОписаниеКодаМаркировкиМолочнаяПродукцияБелоруссия(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
		УстаревшийФорматОписаниеКодаМаркировкиМолочнаяПродукция(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		УстаревшийФорматОписаниеКодаМаркировкиМолочнаяПродукцияСкоропортящаяся(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.Пиво
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ПивоВПотребительскихУпаковках Тогда
		
		ОписаниеКодаМаркировкиПродукцииПиво(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Потребительская, ДлинаСерийногоНомера);
		ОписаниеКодаМаркировкиПродукцииПиво(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Групповая, ДлинаСерийногоНомера);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.МорепродуктыПодконтрольныеВЕТИС Тогда
		
		ОписаниеКодаМаркировкиПродукцииМорепродукты(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Потребительская, ДлинаСерийногоНомера);
		ОписаниеКодаМаркировкиПродукцииМорепродукты(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля,
			Перечисления.ВидыУпаковокИС.Групповая, ДлинаСерийногоНомера);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха Тогда

		ОписаниеКодаМаркировкиПродукцииИзНатуральногоМеха(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);

		// Упаковки отсутствуют
		Возврат;

	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	// Упаковка
	ОписаниеКодаМаркировкиЛогистическаяУпаковка20(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
	
	Если Не ОбщегоНазначенияИСПовтИсп.ЭтоПродукцияМОТП(ВидПродукции) Тогда
		
		ОписаниеКодаМаркировкиЛогистическаяУпаковка18(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	КонецЕсли;
	
	ОписаниеАгрегированногоТаможенногоКода(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
	
КонецПроцедуры

Процедура ДополнитьВспомогательнымиНастройкиРазбораКодаМаркировки(НастройкиРазбораКодаМаркировки, ВидПродукции, МодулиВыбраннойПодсистемы) Экспорт
	
	ДополнительныеПараметры(НастройкиРазбораКодаМаркировки, ВидПродукции, МодулиВыбраннойПодсистемы);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкиРазбораКодаМаркировки

#Область ОписаниеКодаМаркировки

Функция ИспользуетсяСтандартноеОписаниеКодаМаркировки(ВидПродукции)
	
	Возврат ВидПродукции = Перечисления.ВидыПродукцииИС.Духи
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Шины
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Велосипеды
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.КреслаКоляски
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ТехническиеСредстваРеабилитации
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.МедицинскиеИзделия
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Фотоаппараты
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.УпакованнаяВода
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.БАДы
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Антисептики
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.СоковаяПродукция
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.БезалкогольныеНапитки
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.БезалкогольноеПиво
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхПодконтрольныеВЕТИС
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхБезВЕТИС
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.МясоПодконтрольноеВЕТИС
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ВетеринарныеПрепараты
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ИгрыИИгрушкиДляДетей
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.РадиоэлектроннаяПродукция
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ТитановаяМеталлопродукция
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияПодконтрольнаяВЕТИС
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияБезВЕТИС
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.РастительныеМасла
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ОптоволокноИОптоволоконнаяПродукция
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ПарфюмерныеИКосметическиеСредстваИБытоваяХимия
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ПечатнаяПродукция
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.СтроительныеМатериалы
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ОтопительныеПриборы
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Бакалея
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.АлкогольнаяПродукцияДо9Процентов
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ТелефоныИНоутбуки
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ПиротехническиеИзделияИСредстваПожарнойБезопасности
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.КабельнаяПродукция
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.МоторныеМасла;
	
КонецФункции

Функция ИспользуетсяСтандартныйКодМаркировки(ВидПродукции)
	
	Если ВидПродукции = Перечисления.ВидыПродукцииИС.Духи
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Шины
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Велосипеды
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.КреслаКоляски
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ТехническиеСредстваРеабилитации
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.МедицинскиеИзделия
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Фотоаппараты
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.БАДы
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Антисептики
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.МорепродуктыПодконтрольныеВЕТИС Тогда
		Возврат Истина;
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхПодконтрольныеВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КормаДляЖивотныхПодконтрольныеВЕТИСИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхБезВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КормаДляЖивотныхБезВЕТИСИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.МясоПодконтрольноеВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.МясоПодконтрольноеВЕТИСИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ВетеринарныеПрепараты Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ВетеринарныеПрепаратыИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ИгрыИИгрушкиДляДетей Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ИгрыИИгрушкиДляДетейИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.РадиоэлектроннаяПродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.РадиоэлектроннаяПродукцияИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ТитановаяМеталлопродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ТитановаяМеталлопродукцияИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КонсервированнаяПродукцияПодконтрольнаяВЕТИСИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияБезВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КонсервированнаяПродукцияБезВЕТИСИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.РастительныеМасла Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.РастительныеМаслаИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ОптоволокноИОптоволоконнаяПродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ОптоволокноИОптоволоконнаяПродукцияИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ПарфюмерныеИКосметическиеСредстваИБытоваяХимия Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ПарфюмерныеИКосметическиеСредстваИБытоваяХимияИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ПечатнаяПродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ПечатнаяПродукцияИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.СтроительныеМатериалы Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.СтроительныеМатериалыИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ОтопительныеПриборы Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ОтопительныеПриборыИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.Бакалея Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.БакалеяИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.АлкогольнаяПродукцияДо9Процентов Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.АлкогольнаяПродукцияДо9ПроцентовИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ТелефоныИНоутбуки Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ТелефоныИНоутбукиИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ПиротехническиеИзделияИСредстваПожарнойБезопасности Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ПиротехническиеИзделияИСредстваПожарнойБезопасностиИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КабельнаяПродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КабельнаяПродукцияИспользуетСтандартныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.МоторныеМасла Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.МоторныеМаслаИспользуетСтандартныйКМ();
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ИспользуетсяУкороченныйКодМаркировки(ВидПродукции)
	
	Если ВидПродукции = Перечисления.ВидыПродукцииИС.УпакованнаяВода
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.БАДы
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Антисептики
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.СоковаяПродукция
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.БезалкогольныеНапитки
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.БезалкогольноеПиво
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.МорепродуктыПодконтрольныеВЕТИС Тогда
		Возврат Истина;
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхПодконтрольныеВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КормаДляЖивотныхПодконтрольныеВЕТИСИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КормаДляЖивотныхБезВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КормаДляЖивотныхБезВЕТИСИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.МясоПодконтрольноеВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.МясоПодконтрольноеВЕТИСИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ВетеринарныеПрепараты Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ВетеринарныеПрепаратыИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ИгрыИИгрушкиДляДетей Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ИгрыИИгрушкиДляДетейИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.РадиоэлектроннаяПродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.РадиоэлектроннаяПродукцияИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ТитановаяМеталлопродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ТитановаяМеталлопродукцияИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КонсервированнаяПродукцияПодконтрольнаяВЕТИСИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КонсервированнаяПродукцияБезВЕТИС Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КонсервированнаяПродукцияБезВЕТИСИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.РастительныеМасла Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.РастительныеМаслаИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ОптоволокноИОптоволоконнаяПродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ОптоволокноИОптоволоконнаяПродукцияИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ПарфюмерныеИКосметическиеСредстваИБытоваяХимия Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ПарфюмерныеИКосметическиеСредстваИБытоваяХимияИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ПечатнаяПродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ПечатнаяПродукцияИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.СтроительныеМатериалы Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.СтроительныеМатериалыИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ОтопительныеПриборы Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ОтопительныеПриборыИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.Бакалея Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.БакалеяИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.АлкогольнаяПродукцияДо9Процентов Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.АлкогольнаяПродукцияДо9ПроцентовИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ТелефоныИНоутбуки Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ТелефоныИНоутбукиИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ПиротехническиеИзделияИСредстваПожарнойБезопасности Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.ПиротехническиеИзделияИСредстваПожарнойБезопасностиИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КабельнаяПродукция Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.КабельнаяПродукцияИспользуетУкороченныйКМ();
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.МоторныеМасла Тогда
		Возврат ОбщегоНазначенияИСМПКлиентСервер.МоторныеМаслаИспользуетУкороченныйКМ();
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура ОписаниеКодаМаркировкиПродукцииИСМП(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера)
	
	ВидыУпаковки = Новый Массив;
	ВидыУпаковки.Добавить(Перечисления.ВидыУпаковокИС.Потребительская);
	Если ОбщегоНазначенияИСКлиентСервер.ВидПродукцииИспользуетГрупповыеУпаковки(ВидПродукции) Тогда
		ВидыУпаковки.Добавить(Перечисления.ВидыУпаковокИС.Групповая);
	КонецЕсли;
	Если ОбщегоНазначенияИСКлиентСервер.ВидПродукцииИспользуетНаборы(ВидПродукции) Тогда
		ВидыУпаковки.Добавить(Перечисления.ВидыУпаковокИС.Набор);
	КонецЕсли;
	
	ИспользуетсяСтандартныйКодМаркировки = ИспользуетсяСтандартныйКодМаркировки(ВидПродукции);
	ИспользуетсяУкороченныйКодМаркировки = ИспользуетсяУкороченныйКодМаркировки(ВидПродукции);
	
	Если ВидПродукции = Перечисления.ВидыПродукцииИС.ИгрыИИгрушкиДляДетей Тогда
		ДлинаСерийногоНомераСтандартногоКМ = РазборКодаМаркировкиИСМПСлужебныйКлиентСервер.ДлинаСерийногоНомераКодаМаркировки(
			Перечисления.ВидыПродукцииИС.ИгрыИИгрушкиДляДетей, Истина);
		ДлинаСерийногоНомераУкороченногоКМ = РазборКодаМаркировкиИСМПСлужебныйКлиентСервер.ДлинаСерийногоНомераКодаМаркировки(
			Перечисления.ВидыПродукцииИС.ИгрыИИгрушкиДляДетей, Ложь);
	Иначе
		ДлинаСерийногоНомераСтандартногоКМ = ДлинаСерийногоНомера;
		ДлинаСерийногоНомераУкороченногоКМ = ДлинаСерийногоНомера;
	КонецЕсли;
	
	Для Каждого ВидУпаковки Из ВидыУпаковки Цикл
		Если ИспользуетсяСтандартныйКодМаркировки Тогда
			ОписаниеСтандартногоКодаМаркировкиПродукцииИСМП(
				ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомераСтандартногоКМ);
		КонецЕсли;
		Если ИспользуетсяУкороченныйКодМаркировки Тогда
			ОписаниеУкороченногоКодаМаркировкиПродукцииИСМП(
				ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомераУкороченногоКМ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОписаниеСтандартногоКодаМаркировкиПродукцииИСМП(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КлючПроверки, Подпись");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01", "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21", "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КлючПроверки  = ОписаниеЭлементаКодаМаркировки("91", "КлючПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.Подпись       = ОписаниеЭлементаКодаМаркировки("92", "Подпись",       44, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КлючПроверки + Подпись");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ВидУпаковки;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

Процедура ОписаниеУкороченногоКодаМаркировкиПродукцииИСМП(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01", "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21", "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93", "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ВидУпаковки;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для табачного блока
Процедура ОписаниеКодаМаркировкиТабачногоБлока(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура;
	ОписаниеЭлементовКМ.Вставить("GTIN");
	ОписаниеЭлементовКМ.Вставить("СерийныйНомер");
	ОписаниеЭлементовКМ.Вставить("МРЦСтрокой");
	ОписаниеЭлементовКМ.Вставить("КодПроверки");
	ОписаниеЭлементовКМ.Вставить("КодТНВЭД");
	
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("8005", "МРЦСтрокой",    6, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодТНВЭД      = ОписаниеЭлементаКодаМаркировки("240",  "КодТНВЭД",      8, Алфавит.Цифры);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодТНВЭД");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки + КодТНВЭД");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Групповая;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для табачной пачки
Процедура ОписаниеКодаМаркировкиТабачнойПачки(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура;
	ОписаниеЭлементовКМ.Вставить("GTIN");
	ОписаниеЭлементовКМ.Вставить("СерийныйНомер");
	ОписаниеЭлементовКМ.Вставить("МРЦСтрокой");
	ОписаниеЭлементовКМ.Вставить("КодПроверки");
	
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("", "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("", "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("", "МРЦСтрокой",    4, Алфавит.БуквыЦифрыЗнакиМРЦ);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("", "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

Процедура ОписаниеКодаМаркировкиТабачнойПачкиКодПроверки8(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("", "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("", "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("", "КодПроверки",   8, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для альтернативного табачного блока
Процедура ОписаниеКодаМаркировкиАльтернативногоТабачногоБлока(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура;
	ОписаниеЭлементовКМ.Вставить("GTIN");
	ОписаниеЭлементовКМ.Вставить("СерийныйНомер");
	ОписаниеЭлементовКМ.Вставить("МРЦСтрокой");
	ОписаниеЭлементовКМ.Вставить("КодПроверки");
	ОписаниеЭлементовКМ.Вставить("КодТНВЭД");
	
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("8005", "МРЦСтрокой",    6, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодТНВЭД      = ОписаниеЭлементаКодаМаркировки("240",  "КодТНВЭД",      8, Алфавит.Цифры);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки + КодТНВЭД");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Групповая;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для альтернативной табачной пачки
Процедура ОписаниеКодаМаркировкиАльтернативнойТабачнойПачки(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, МРЦСтрокой, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("", "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("", "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("", "МРЦСтрокой",    4, Алфавит.БуквыЦифрыЗнакиМРЦ);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("", "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для альтернативной табачной пачки с идентификаторами применения
Процедура ОписаниеКодаМаркировкиАльтернативнойТабачнойПачкиСИдентификаторамиПрименения(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, МРЦСтрокой, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01", "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21", "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93", "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для обуви
Процедура ОписаниеКодаМаркировкиОбуви(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодТНВЭД, КлючПроверки, Подпись");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",  "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",  "СерийныйНомер",  ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодТНВЭД      = ОписаниеЭлементаКодаМаркировки("240", "КодТНВЭД",       4, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КлючПроверки  = ОписаниеЭлементаКодаМаркировки("91",  "КлючПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.Подпись       = ОписаниеЭлементаКодаМаркировки("92",  "Подпись",       88, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодТНВЭД");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодТНВЭД + КлючПроверки + Подпись");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КлючПроверки + Подпись");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КлючПроверки + Подпись + КодТНВЭД");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("КодТНВЭД", "");
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

Процедура ОписаниеКодаМаркировкиОбувиКодТНВЭД10(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодТНВЭД, КлючПроверки, Подпись");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",  "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",  "СерийныйНомер",  ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодТНВЭД      = ОписаниеЭлементаКодаМаркировки("240", "КодТНВЭД",      10, Алфавит.Цифры);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодТНВЭД");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("КодТНВЭД", "");
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для молочной продукции
Процедура ОписаниеКодаМаркировкиМолочнаяПродукция(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, ГоденДо, КодПроверки, МассаНеттоВКг");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер",  ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МассаНеттоВКг = ОписаниеЭлементаКодаМаркировки("3103", "МассаНеттоВКг",  6, Алфавит.Цифры);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки + МассаНеттоВКг");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ВидУпаковки;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("МассаНеттоВКг", Неопределено);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

Процедура ОписаниеКодаМаркировкиМолочнаяПродукцияБелоруссия(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, ГоденДо, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер",  8, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("МассаНеттоВКг", Неопределено);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для молочной продукции
Процедура УстаревшийФорматОписаниеКодаМаркировкиМолочнаяПродукция(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, ГоденДо, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер", 13, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.ГоденДо       = ОписаниеЭлементаКодаМаркировки("17",   "ГоденДо",        6, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + ГоденДо");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + ГоденДо + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("ГоденДо",                  '00010101');
	СоставКодаМаркировки.Вставить("СкоропортящаясяПродукция", Ложь);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для молочной продукции
Процедура УстаревшийФорматОписаниеКодаМаркировкиМолочнаяПродукцияСкоропортящаяся(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, ГоденДо, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер", 13, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.ГоденДо       = ОписаниеЭлементаКодаМаркировки("7003", "ГоденДо",       10, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + ГоденДо");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + ГоденДо + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("ГоденДо",                  '00010101');
	СоставКодаМаркировки.Вставить("СкоропортящаясяПродукция", Истина);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для Пиво
Процедура ОписаниеКодаМаркировкиПродукцииПиво(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01", "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21", "СерийныйНомер",  ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93", "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ВидУпаковки;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
	// Шаблоны с объемом
	Для ПоложениеДесятичнойТочки = 0 По 5 Цикл
		
		Идентификатор335N = СтрШаблон("335%1", ПоложениеДесятичнойТочки);
		
		ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодПроверки, ОбъемВЛитрах");
		ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",              "GTIN",          14);
		ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",              "СерийныйНомер",  7, Алфавит.БуквыЦифрыЗнаки);
		ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",              "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
		ОписаниеЭлементовКМ.ОбъемВЛитрах  = ОписаниеЭлементаКодаМаркировки(Идентификатор335N, "ОбъемВЛитрах",   6, Алфавит.Цифры);
		
		ШаблоныСтрокой = Новый Массив;
		ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки + ОбъемВЛитрах");
		
		СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
		
		ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
		ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
		ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ВидУпаковки;
		
		СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
		СоставКодаМаркировки.Вставить("ОбъемВЛитрах", Неопределено);
		
		// Добавление настроек
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
		НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
		
		ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для НикотиносодержащаяПродукция групповая
Процедура ОписаниеКодаМаркировкиПродукцииНикотиносодержащаяПродукцияDataMatrixGS1(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура;
	ОписаниеЭлементовКМ.Вставить("GTIN");
	ОписаниеЭлементовКМ.Вставить("СерийныйНомер");
	ОписаниеЭлементовКМ.Вставить("МРЦСтрокой");
	ОписаниеЭлементовКМ.Вставить("КодПроверки");
	Если ВидУпаковки = Перечисления.ВидыУпаковокИС.Групповая Тогда
		ОписаниеЭлементовКМ.Вставить("КодТНВЭД");
	КонецЕсли;
	
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("8005", "МРЦСтрокой",    6, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	Если ВидУпаковки = Перечисления.ВидыУпаковокИС.Групповая Тогда
		ОписаниеЭлементовКМ.КодТНВЭД  = ОписаниеЭлементаКодаМаркировки("240",  "КодТНВЭД",      8, Алфавит.Цифры);
	КонецЕсли;
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	Если ВидУпаковки = Перечисления.ВидыУпаковокИС.Групповая Тогда
		ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки + КодТНВЭД");
	КонецЕсли;
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ВидУпаковки;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для НикотиносодержащаяПродукция потребительская
Процедура ОписаниеКодаМаркировкиПродукцииНикотиносодержащаяПродукцияDataMatrix(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, МРЦСтрокой, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("", "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("", "СерийныйНомер", ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("", "МРЦСтрокой",    4, Алфавит.БуквыЦифрыЗнакиМРЦ);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("", "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ВидУпаковки;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для Морепродукты
Процедура ОписаниеКодаМаркировкиПродукцииМорепродукты(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодПроверки, МассаНеттоВКг");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер",  ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МассаНеттоВКг = ОписаниеЭлементаКодаМаркировки("3103", "МассаНеттоВКг",  6, Алфавит.Цифры);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки + МассаНеттоВКг");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ВидУпаковки;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("МассаНеттоВКг", Неопределено);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
	ОписаниеКодаМаркировкиПродукцииМорепродуктыСтандартныйКМ(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомера);
	
КонецПроцедуры

// Формирует описание кода маркировки для Морепродукты - Стандартный КМ
Процедура ОписаниеКодаМаркировкиПродукцииМорепродуктыСтандартныйКМ(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля, ВидУпаковки, ДлинаСерийногоНомера)
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура;
	ОписаниеЭлементовКМ.Вставить("GTIN",          ОписаниеЭлементаКодаМаркировки("01", "GTIN",            14));
	ОписаниеЭлементовКМ.Вставить("СерийныйНомер", ОписаниеЭлементаКодаМаркировки("21", "СерийныйНомер",   ДлинаСерийногоНомера, Алфавит.БуквыЦифрыЗнаки));
	ОписаниеЭлементовКМ.Вставить("КлючПроверки",  ОписаниеЭлементаКодаМаркировки("91", "КлючПроверки",     4, Алфавит.БуквыЦифрыЗнаки));
	ОписаниеЭлементовКМ.Вставить("Подпись",       ОписаниеЭлементаКодаМаркировки("92", "Подпись",         44, Алфавит.БуквыЦифрыЗнаки));
	ОписаниеЭлементовКМ.Вставить("МассаНеттоВКг", ОписаниеЭлементаКодаМаркировки("3103", "МассаНеттоВКг",  6, Алфавит.Цифры));
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КлючПроверки + Подпись");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КлючПроверки + Подпись + МассаНеттоВКг");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ВидУпаковки;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("МассаНеттоВКг", Неопределено);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

Процедура ОписаниеКодаМаркировкиПродукцииИзНатуральногоМеха(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)

	// Шаблон: (RU|AM|BY|KZ|KG)[-]{1}[A-Z0-9]{6}[-]{1}[A-Z0-9]{10}

	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;

	ОписаниеЭлементовКМ = Новый Структура("КодСтраны, Секция6, Секция10, Разделитель1, Разделитель2");

	ОписаниеЭлементовКМ.КодСтраны    = ОписаниеЭлементаКодаМаркировки("", "КодСтраны",    2);
	ОписаниеЭлементовКМ.Секция6      = ОписаниеЭлементаКодаМаркировки("", "Секция6",      6, Алфавит.БуквыПрописныеЦифры);
	ОписаниеЭлементовКМ.Секция10     = ОписаниеЭлементаКодаМаркировки("", "Секция10",    10, Алфавит.БуквыПрописныеЦифры);
	ОписаниеЭлементовКМ.Разделитель1 = ОписаниеЭлементаКодаМаркировки("", "Разделитель1",  1, "-");
	ОписаниеЭлементовКМ.Разделитель2 = ОписаниеЭлементаКодаМаркировки("", "Разделитель2",  1, "-");

	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("КодСтраны + Разделитель1 + Секция6 + Разделитель2 + Секция10");

	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);

	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.Code128;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;

	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);

	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;

	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);

КонецПроцедуры

// Формирует описание кода маркировки для логистической упаковки
Процедура ОписаниеКодаМаркировкиЛогистическаяУпаковка18(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	// Примеры:
	//	- исмп:
	//	* 199988888800000013 - из сервиса
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("SSCC");
	ОписаниеЭлементовКМ.SSCC = ОписаниеЭлементаКодаМаркировки("", "SSCC", 18, Алфавит.Цифры); // Серийный код транспортной упаковки, представленный в виде цифрового номера.
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("SSCC");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.SSCC;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Логистическая;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

// Формирует описание кода маркировки для логистической упаковки
Процедура ОписаниеКодаМаркировкиЛогистическаяУпаковка20(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	// Примеры:
	//	- исмп:
	//	* (00)199988888800000013 - в ИБ
	//	* 00199988888800000013 - от сканера
	//	- мотп:
	//	* 00199988888800000013 - из сервиса, от сканера
	//	* (00)199988888800000013 - в ИБ
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("SSCC");
	ОписаниеЭлементовКМ.SSCC = ОписаниеЭлементаКодаМаркировки("00", "SSCC", 18, Алфавит.Цифры); // Серийный код транспортной упаковки, представленный в виде цифрового номера.
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("SSCC");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.SSCC;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Логистическая;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

Процедура ОписаниеАгрегированногоТаможенногоКода(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	// XXXXXXXXXXXXДДММГГXXXXXXX
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("ИНН, ДатаФормированияАТК, ПризнакУникальности");
	ОписаниеЭлементовКМ.ИНН                 = ОписаниеЭлементаКодаМаркировки("", "ИНН",                 12, Алфавит.Цифры); // ИНН заявителя (если ИНН состоит из меньшего количества цифр, то ему предшествуют нули (00)
	ОписаниеЭлементовКМ.ДатаФормированияАТК = ОписаниеЭлементаКодаМаркировки("", "ДатаФормированияАТК",  6, Алфавит.Цифры); // дата формирования оператором агрегированного таможенного кода (ДДММГГ)
	ОписаниеЭлементовКМ.ПризнакУникальности = ОписаниеЭлементаКодаМаркировки("", "ПризнакУникальности",  7, Алфавит.БуквыЦифры); // генерируются оператором автоматически по произвольному (как правило, последовательному) порядку присвоения. Они обеспечивают уникальность агрегированного таможенного кода на протяжении 5 лет.
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("ИНН + ДатаФормированияАТК + ПризнакУникальности");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.ПустаяСсылка();
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.АгрегированныйТаможенныйКод;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

#КонецОбласти

Функция ОписаниеЭлементаКодаМаркировки(Код, Имя, КоличествоЗнаков, АлфавитДопустимыхСимволов = "")
	Возврат РазборКодаМаркировкиИССлужебный.ОписаниеЭлементаКодаМаркировки(Код, Имя, КоличествоЗнаков, АлфавитДопустимыхСимволов);
КонецФункции

Функция НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки)
	Возврат РазборКодаМаркировкиИСМПСлужебныйКлиентСервер.НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
КонецФункции

Процедура ДополнительныеПараметры(НастройкиРазбораКодаМаркировки, ВидПродукции, МодулиВыбраннойПодсистемы)
	
	ДополнительныеПараметры = НастройкиРазбораКодаМаркировки.ДополнительныеПараметры[МодулиВыбраннойПодсистемы.Подсистема];
	
	Если ОбщегоНазначенияИСПовтИсп.ЭтоПродукцияМОТП(ВидПродукции) Тогда
		ИмяСвойстваМОТП = "Табак";
		Если Не ДополнительныеПараметры.Свойство(ИмяСвойстваМОТП) Тогда
			ДополнительныеПараметры.Вставить(ИмяСвойстваМОТП, Новый Структура);
		КонецЕсли;
		ДополнительныеПараметрыКодМаркировкиГрупповойУпаковкиТабакаСХвостом(НастройкиРазбораКодаМаркировки, ВидПродукции, ДополнительныеПараметры[ИмяСвойстваМОТП]);
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ПродукцияИзНатуральногоМеха Тогда
		БуквенныеКодыСтран = Новый Соответствие;
		Для Каждого БуквенныйКодСтраны Из СтрРазделить("RU|AM|BY|KZ|KG", "|") Цикл
			БуквенныеКодыСтран[БуквенныйКодСтраны] = Истина;
		КонецЦикла;
		ДополнительныеПараметры.Вставить("ПродукцияИзНатуральногоМеха", Новый Структура("БуквенныеКодыСтран", БуквенныеКодыСтран));
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.КреслаКоляски
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.ТехническиеСредстваРеабилитации
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.МедицинскиеИзделия Тогда
		ДополнительныеПараметры.Вставить("КреслаКоляски",
			ДополнительныеПараметрыКодаМаркировкиКреслаКоляски(НастройкиРазбораКодаМаркировки, ВидПродукции));
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнительныеПараметрыКодМаркировкиГрупповойУпаковкиТабакаСХвостом(НастройкиРазбораКодаМаркировки, ВидПродукции, ДополнительныеПараметры)
	
	// После идентификатора 93 для блоков и только для них может быть произвольное количество идентификаторов применения
	// 010460620310255621!MmNZo2800514900093Ij5E240FA075486.00
	
	Если Не ДополнительныеПараметры.Свойство("ШаблоныКодаМаркировкиСХвостом") Тогда
		ДополнительныеПараметры.Вставить("ШаблоныКодаМаркировкиСХвостом",    Новый Массив);
		ДополнительныеПараметры.Вставить("ДобавленныеШаблоныКодаМаркировки", Новый Соответствие);
	КонецЕсли;
	ШаблоныКодаМаркировкиСХвостом    = ДополнительныеПараметры.ШаблоныКодаМаркировкиСХвостом;
	ДобавленныеШаблоныКодаМаркировки = ДополнительныеПараметры.ДобавленныеШаблоныКодаМаркировки;
	
	ИдентификаторКодаПроверки = "КодПроверки";
	
	ОтборПоТабачнымБлокам = Новый Структура("ВидПродукции, ВидУпаковки",
		ВидПродукции, Перечисления.ВидыУпаковокИС.Групповая);
	
	ШаблоныКодовМаркировки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ШаблоныКодовМаркировкиПоОтбору(
		НастройкиРазбораКодаМаркировки.ШаблоныКодовМаркировкиПоВидамПродукции, ОтборПоТабачнымБлокам);
	
	Для Каждого ШаблонКодаМаркировки Из ШаблоныКодовМаркировки Цикл
		
		Если ДобавленныеШаблоныКодаМаркировки[ШаблонКодаМаркировки.Шаблон] <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеШаблона = НастройкиРазбораКодаМаркировки.ШаблоныИОписанияВидовПродукции[ШаблонКодаМаркировки.Шаблон];
		
		Если ДанныеШаблона.ОписаниеЭлементовКодаМаркировки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеИдентификатора = ДанныеШаблона.ОписаниеЭлементовКодаМаркировки[ДанныеШаблона.ОписаниеЭлементовКодаМаркировки.ВГраница()];
		
		Если ВРег(ОписаниеИдентификатора.Имя) <> ВРег(ИдентификаторКодаПроверки) Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавленныеШаблоныКодаМаркировки[ШаблонКодаМаркировки.Шаблон] = Истина;
		
		СтрокаШаблонаКМ = НастройкиРазбораКодаМаркировки.ШаблоныКодовМаркировки.Найти(ШаблонКодаМаркировки.Шаблон, "Шаблон");
		
		Если НастройкиРазбораКодаМаркировки.ТолькоСервер Тогда
			ШаблоныКодаМаркировкиСХвостом.Добавить(СтрокаШаблонаКМ);
		Иначе
			ШаблоныКодаМаркировкиСХвостом.Добавить(
				ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаШаблонаКМ));
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДополнительныеПараметрыКодаМаркировкиКреслаКоляски(НастройкиРазбораКодаМаркировки, ВидПродукции)
	
	Результат = Новый Структура;
	Результат.Вставить("ШаблоныНеФормализованныхКодовМаркировки", Новый Массив);
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидПродукции",        ВидПродукции);
	Отбор.Вставить("ВидУпаковки",         Перечисления.ВидыУпаковокИС.Потребительская);
	Отбор.Вставить("КоличествоЭлементов", 4);
	
	ШаблоныКодовМаркировки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ШаблоныКодовМаркировкиПоОтбору(
		НастройкиРазбораКодаМаркировки.ШаблоныКодовМаркировкиПоВидамПродукции, Отбор);
	
	Для Каждого ШаблонКодаМаркировки Из ШаблоныКодовМаркировки Цикл
		СтрокаШаблонаКМ = НастройкиРазбораКодаМаркировки.ШаблоныКодовМаркировки.Найти(ШаблонКодаМаркировки.Шаблон, "Шаблон");
		Если СтрокаШаблонаКМ <> Неопределено Тогда
			Если НастройкиРазбораКодаМаркировки.ТолькоСервер Тогда
				Результат.ШаблоныНеФормализованныхКодовМаркировки.Добавить(СтрокаШаблонаКМ);
			Иначе
				Результат.ШаблоныНеФормализованныхКодовМаркировки.Добавить(
					ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаШаблонаКМ));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки)
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("ВключаетМРЦ",         Ложь);
	СоставКодаМаркировки.Вставить("МРЦ",                 0);
	СоставКодаМаркировки.Вставить("МРЦСтрокой",          "");
	СоставКодаМаркировки.Вставить("КодТНВЭД",            "");
	СоставКодаМаркировки.Вставить("ВключаетКриптоХвост", Ложь);
	Возврат СоставКодаМаркировки;
КонецФункции

Функция НовыйСоставКодаМаркировкиИСМП(ТипШтрихкодаИВидУпаковки)
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	СоставКодаМаркировки.Вставить("ВключаетКриптоХвост", Ложь);
	Возврат СоставКодаМаркировки;
КонецФункции

#КонецОбласти

#КонецОбласти
