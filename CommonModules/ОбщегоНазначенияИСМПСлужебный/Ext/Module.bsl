
#Область JWT

Функция РасшифроватьТокенJWT(Токен) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("РезультатРасшифровки", Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",          "");
	ВозвращаемоеЗначение.Вставить("Данные",               Неопределено);
	
	ЭлементыТокена = СтрРазделить(Токен, ".");
	Если ЭлементыТокена.Count() <> 3 Тогда
		ВозвращаемоеЗначение.ТекстОшибки = НСтр("ru = 'Токен не соответствует формату JWT'");
		Возврат ВозвращаемоеЗначение;
	КонецЕсли;
	
	ЭлементТокенаДанные = ЭлементыТокена[1];
	
	ВозвращаемоеЗначение.Данные = ОбщегоНазначенияИСМП.ТекстJSONВОбъект(
		ПолучитьСтрокуИзДвоичныхДанных(
			ДвоичныеДанныеЭлементаТокенаJWT(ЭлементТокенаДанные)));
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ДвоичныеДанныеЭлементаТокенаJWT(Знач Значение)
	
	Значение = СтрЗаменить(Значение, "-", "+");
	Значение = СтрЗаменить(Значение, "_", "/");
	
	Остаток = СтрДлина(Значение) % 4;

	Если Остаток = 1 Тогда
		Возврат Неопределено;
	ИначеЕсли Остаток = 2 Тогда
		Значение = Значение + "==";
	ИначеЕсли Остаток = 3 Тогда
		Значение = Значение + "=";
	КонецЕсли;
	
	Возврат Base64Значение(Значение);
	
КонецФункции

#КонецОбласти

Функция ПодписьИзСвойствПодписи(ВходящиеДанные) Экспорт

	Если ТипЗнч(ВходящиеДанные) = Тип("Строка") Тогда
		СвойстваПодписи = ПолучитьИзВременногоХранилища(ВходящиеДанные);
	Иначе
		СвойстваПодписи = ВходящиеДанные;
	КонецЕсли;

	Если ТипЗнч(СвойстваПодписи) = Тип("Структура") Тогда
		Подпись = СвойстваПодписи.Подпись;
	Иначе
		Подпись = "";
	КонецЕсли;

	Возврат Подпись;

КонецФункции