
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	Движения = Объект.Движения;
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт

	//++ Локализация
	//-- Локализация

КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	
	ЭтоПартнер = ПраваПользователяПовтИсп.ЭтоПартнер();

	Если НЕ ЭтоПартнер
		 И ПолучитьФункциональнуюОпцию("ИспользоватьСчетаНаОплатуКлиентам") Тогда
		// Извещение
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьИзвещений";
		КомандаПечати.Идентификатор = "Извещение";
		КомандаПечати.Представление = НСтр("ru = 'Извещение'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, КомплектПечатныхФорм) Экспорт
	
	//++ Локализация
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"Извещение");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.СчетНаОплатуКлиенту", КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьИзвещений.СформироватьПечатнуюФормуИзвещение(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		КонецЦикла;
		
	//-- Локализация
	
КонецПроцедуры

Процедура КомплектПечатныхФорм(КомплектПечатныхФорм) Экспорт
	
	//++ Локализация
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "Извещение", НСтр("ru = 'Извещение'"), 0);
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

// Функция получает данные для формирования печатной формы "Извещение"
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив - Массив ссылок на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоЭтапамОплаты - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыИзвещения(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Возврат Документы.СчетНаОплатуКлиенту.ДанныеДляПечатныхФормСчетаНаОплатуИзвещения(ПараметрыПечати, МассивОбъектов);
	
КонецФункции

#Область СчетНаОплату_1_01

// Возвращает данные для формирования электронного Счета на оплату.
//
// Параметры:
//	МассивОбъектов - Массив из ДокументСсылка.СчетНаОплатуКлиенту - ссылки на документы, по которым необходимо
//																	получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемая для формирования электронного Счета на оплату, содержащая следующие свойства:
//		* РезультатПоШапке - РезультатЗапроса - общие данные документа.
//		* РезультатПоЭтапамОплаты - РезультатЗапроса - данные графика оплаты по документу.
//		* РезультатПоТабличнойЧасти - РезультатЗапроса - данные табличной части документа.
//
Функция ДанныеДокументовДляСчетаНаОплату_1_01(МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	ОтображатьСкидки = Константы.ОтображениеСкидокВПечатныхФормахДокументовПродажи.Получить()
						<> Перечисления.ВариантыВыводаСкидокВПечатныхФормах.НеВыводитьСкидки;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныхДокументовДляСчетаНаОплату();
	
	Запрос.УстановитьПараметр("МассивОбъектов",		МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов",		КолонкаКодов);
	Запрос.УстановитьПараметр("ОтображатьСкидки",	ОтображатьСкидки);
	
	ПакетРезультатаЗапроса		= Запрос.ВыполнитьПакет();
	МаксимальныйИндексПакета	= ПакетРезультатаЗапроса.ВГраница();
	РезультатПоШапке			= ПакетРезультатаЗапроса[МаксимальныйИндексПакета - 2];
	РезультатПоЭтапамОплаты		= ПакетРезультатаЗапроса[МаксимальныйИндексПакета - 1];
	РезультатПоТабличнойЧасти	= ПакетРезультатаЗапроса[МаксимальныйИндексПакета];
	
	ДанныеДокументов = Новый Структура;
	ДанныеДокументов.Вставить("РезультатПоШапке",			РезультатПоШапке);
	ДанныеДокументов.Вставить("РезультатПоЭтапамОплаты",	РезультатПоЭтапамОплаты);
	ДанныеДокументов.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	
	Возврат ДанныеДокументов;
	
КонецФункции

// Возвращает текст запроса для получения временной таблицы о товарах документа основания, используемого при
// формировании ЭД Счета на оплату.
//
// Возвращаемое значение:
//	Строка - текст запроса для получения данных.
//
Функция ТекстЗапросаВТТоваровСчетаНаОплату_1_01() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОснования.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОснованияСТоварами
	|ИЗ
	|	ТоварыОснования КАК ТоварыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка							КАК Ссылка,
	|	ТоварыДокумента.ХозяйственнаяОперация			КАК ХозяйственнаяОперация,
	|	МИНИМУМ(ТоварыДокумента.НомерСтроки)			КАК НомерСтроки,
	|	МАКСИМУМ(ТоварыДокумента.ЭтоТовар)				КАК ЭтоТовар,
	|	ТоварыДокумента.НоменклатураНабора				КАК НоменклатураНабора,
	|	ТоварыДокумента.ХарактеристикаНабора			КАК ХарактеристикаНабора,
	|	СУММА(ТоварыДокумента.СтоимостьБезНДС)			КАК СтоимостьБезНДС,
	|	СУММА(ТоварыДокумента.СтоимостьБезНДСБезСкидки)	КАК СтоимостьБезНДСБезСкидки,
	|	СУММА(ТоварыДокумента.СуммаНДС)					КАК СуммаНДС,
	|	СУММА(ТоварыДокумента.СтоимостьСНДС)			КАК СтоимостьСНДС,
	|	СУММА(ТоварыДокумента.СуммаСкидки)				КАК СуммаСкидки,
	|	СУММА(ТоварыДокумента.СтоимостьСНДСБезСкидки)	КАК СтоимостьСНДСБезСкидки
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	ТоварыОснования КАК ТоварыДокумента
	|
	|ГДЕ
	|	ТоварыДокумента.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДокумента.Ссылка,
	|	ТоварыДокумента.ХозяйственнаяОперация,
	|	ТоварыДокумента.НоменклатураНабора,
	|	ТоварыДокумента.ХарактеристикаНабора
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НоменклатураНабора,
	|	ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка					КАК Ссылка,
	|	ТоварыДокумента.ВариантКомплектацииНоменклатуры				КАК ВариантКомплектацииНоменклатуры,
	|	ТоварыДокумента.ВариантПредставленияНабораВПечатныхФормах	КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ТоварыДокумента.ВариантРасчетаЦеныНабора					КАК ВариантРасчетаЦеныНабора,
	|	ТоварыДокумента.НоменклатураНабора		КАК НоменклатураНабора,
	|	ТоварыДокумента.ХарактеристикаНабора	КАК ХарактеристикаНабора,
	|	ТоварыДокумента.Номенклатура			КАК Номенклатура,
	|	ТоварыДокумента.Характеристика			КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ВариантыКомплектации.НоменклатураОсновногоКомпонента = ТоварыДокумента.Номенклатура
	|				И ВариантыКомплектации.ХарактеристикаОсновногоКомпонента = ТоварыДокумента.Характеристика
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ									КАК ОсновнаяКомплектующая,
	|	ТоварыДокумента.СтавкаНДС				КАК СтавкаНДС,
	|	0										КАК КоличествоПоУмолчанию,
	|	ТоварыДокумента.Количество				КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	ТоварыОснования КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектации
	|		ПО ТоварыДокумента.ВариантКомплектацииНоменклатуры = ВариантыКомплектации.Ссылка
	|
	|ГДЕ
	|	ТоварыДокумента.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка				КАК Ссылка,
	|	ТоварыКомплектов.Ссылка											КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектации.ВариантПредставленияНабораВПечатныхФормах	КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектации.ВариантРасчетаЦеныНабора					КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектации.Владелец		КАК НоменклатураНабора,
	|	ВариантыКомплектации.Характеристика	КАК ХарактеристикаНабора,
	|	ТоварыКомплектов.Номенклатура		КАК Номенклатура,
	|	ТоварыКомплектов.Характеристика		КАК Характеристика,
	|	ЛОЖЬ								КАК ОсновнаяКомплектующая,
	|	NULL								КАК СтавкаНДС,
	|	СУММА(ТоварыКомплектов.Количество)	КАК КоличествоПоУмолчанию,
	|	0									КАК Количество
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ТоварыКомплектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектации
	|		ПО ТоварыКомплектов.Ссылка = ВариантыКомплектации.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОснованияСТоварами КАК ТоварыДокумента
	|		ПО ИСТИНА
	|
	|ГДЕ
	|	ТоварыКомплектов.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТоварыОснования.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры
	|			ИЗ
	|				ТоварыОснования КАК ТоварыОснования)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДокумента.Ссылка,
	|	ТоварыКомплектов.Ссылка,
	|	ВариантыКомплектации.ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектации.ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектации.Владелец,
	|	ВариантыКомплектации.Характеристика,
	|	ТоварыКомплектов.Номенклатура,
	|	ТоварыКомплектов.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНаборы.Ссылка							КАК Ссылка,
	|	ТаблицаНаборы.ВариантКомплектацииНоменклатуры			КАК ВариантКомплектацииНоменклатуры,
	|	ТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах	КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ТаблицаНаборы.ВариантРасчетаЦеныНабора					КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаНаборы.НоменклатураНабора				КАК НоменклатураНабора,
	|	ТаблицаНаборы.ХарактеристикаНабора				КАК ХарактеристикаНабора,
	|	ТаблицаНаборы.Номенклатура						КАК Номенклатура,
	|	ТаблицаНаборы.Характеристика					КАК Характеристика,
	|	МАКСИМУМ(ТаблицаНаборы.СтавкаНДС)				КАК СтавкаНДС,
	|	МАКСИМУМ(ТаблицаНаборы.ОсновнаяКомплектующая)	КАК ОсновнаяКомплектующая,
	|	СУММА(ТаблицаНаборы.КоличествоПоУмолчанию)		КАК КоличествоПоУмолчанию,
	|	СУММА(ТаблицаНаборы.Количество)					КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК ТаблицаНаборы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНаборы.Ссылка,
	|	ТаблицаНаборы.ВариантКомплектацииНоменклатуры,
	|	ТаблицаНаборы.ВариантРасчетаЦеныНабора,
	|	ТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|	ТаблицаНаборы.НоменклатураНабора,
	|	ТаблицаНаборы.ХарактеристикаНабора,
	|	ТаблицаНаборы.Номенклатура,
	|	ТаблицаНаборы.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНаборы.Ссылка				КАК Ссылка,
	|	ТаблицаНаборы.ВариантКомплектацииНоменклатуры			КАК ВариантКомплектацииНоменклатуры,
	|	ТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах	КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ТаблицаНаборы.ВариантРасчетаЦеныНабора					КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаНаборы.НоменклатураНабора	КАК НоменклатураНабора,
	|	ТаблицаНаборы.ХарактеристикаНабора	КАК ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаНаборы.ОсновнаяКомплектующая
	|			ТОГДА ТаблицаНаборы.СтавкаНДС
	|		ИНАЧЕ NULL
	|	КОНЕЦ)								КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|		КОГДА ТаблицаНаборы.КоличествоПоУмолчанию <> 0
	|				И ТаблицаНаборы.ОсновнаяКомплектующая
	|			ТОГДА ТаблицаНаборы.Количество / ТаблицаНаборы.КоличествоПоУмолчанию
	|		ИНАЧЕ NULL
	|	КОНЕЦ) + 0.5 КАК ЧИСЛО(10,0)) - 1	КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК ТаблицаНаборы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНаборы.Ссылка,
	|	ТаблицаНаборы.ВариантКомплектацииНоменклатуры,
	|	ТаблицаНаборы.ВариантРасчетаЦеныНабора,
	|	ТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|	ТаблицаНаборы.НоменклатураНабора,
	|	ТаблицаНаборы.ХарактеристикаНабора
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НоменклатураНабора,
	|	ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНаборы.Ссылка								КАК Ссылка,
	|	ТаблицаНаборы.НомерСтроки							КАК НомерСтроки,
	|	ТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаНаборы.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию),
	|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи))
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|					ИНАЧЕ ТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|	КОНЕЦ												КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВЫБОР
	|		КОГДА ТаблицаНаборы.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию),
	|													ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи))
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫБОР
	|							КОГДА ТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор)
	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|							ИНАЧЕ ТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|						КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|							И ТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),
	|																					ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	|					ИНАЧЕ ТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|	КОНЕЦ												КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаНаборы.НоменклатураНабора					КАК НоменклатураНабора,
	|	ТаблицаНаборы.ХарактеристикаНабора					КАК ХарактеристикаНабора,
	|	ЕСТЬNULL(ТаблицаНаборыДополнительно.Количество, 1)	КАК Количество,
	|	ЕСТЬNULL(ТаблицаНаборыДополнительно.Количество, 1)	КАК КоличествоУпаковок,
	|	ТаблицаНаборы.СтоимостьБезНДС						КАК СтоимостьБезНДС,
	|	ТаблицаНаборы.СтоимостьБезНДСБезСкидки				КАК СтоимостьБезНДСБезСкидки,
	|	ТаблицаНаборыДополнительно.СтавкаНДС				КАК СтавкаНДС,
	|	ТаблицаНаборы.СуммаНДС								КАК СуммаНДС,
	|	ТаблицаНаборы.СтоимостьСНДС							КАК СтоимостьСНДС,
	|	ТаблицаНаборы.СуммаСкидки							КАК СуммаСкидки,
	|	ТаблицаНаборы.СтоимостьСНДСБезСкидки				КАК СтоимостьСНДСБезСкидки,
	|	ТаблицаНаборы.ЭтоТовар								КАК ЭтоТовар
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК ТаблицаНаборы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ТаблицаНаборыДополнительно
	|		ПО ТаблицаНаборы.Ссылка = ТаблицаНаборыДополнительно.Ссылка
	|			И ТаблицаНаборы.НоменклатураНабора = ТаблицаНаборыДополнительно.НоменклатураНабора
	|			И ТаблицаНаборы.ХарактеристикаНабора = ТаблицаНаборыДополнительно.ХарактеристикаНабора
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НоменклатураНабора,
	|	ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка						КАК Ссылка,
	|	ТоварыДокумента.НомерСтроки					КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаНаборы.НомерСтроки, 0) <> 0
	|			ТОГДА ТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ ТоварыДокумента.НомерСтроки
	|	КОНЕЦ										КАК НомерСтрокиНаборы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаНаборы.НомерСтроки, 0) <> 0
	|			ТОГДА ТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	|	КОНЕЦ										КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаНаборы.НомерСтроки, 0) <> 0
	|			ТОГДА ТаблицаНаборы.ВариантРасчетаЦеныНабора
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
	|	КОНЕЦ										КАК ВариантРасчетаЦеныНабора,
	|	ТоварыДокумента.НоменклатураНабора			КАК НоменклатураНабора,
	|	ТоварыДокумента.ХарактеристикаНабора		КАК ХарактеристикаНабора,
	|	ТоварыДокумента.Номенклатура				КАК Номенклатура,
	|	ТоварыДокумента.Характеристика				КАК Характеристика,
	|	ТоварыДокумента.Упаковка					КАК Упаковка,
	|	ТоварыДокумента.Количество					КАК Количество,
	|	ТоварыДокумента.КоличествоУпаковок			КАК КоличествоУпаковок,
	|	ТоварыДокумента.Цена						КАК Цена,
	|	ТоварыДокумента.СтоимостьБезНДС				КАК СтоимостьБезНДС,
	|	ТоварыДокумента.СтавкаНДС					КАК СтавкаНДС,
	|	ТоварыДокумента.СтоимостьСНДС				КАК СтоимостьСНДС,
	|	ТоварыДокумента.СуммаСкидки					КАК СуммаСкидки,
	|	ТоварыДокумента.ЦенаБезСкидки				КАК ЦенаБезСкидки,
	|	ТоварыДокумента.СтоимостьБезНДСБезСкидки	КАК СтоимостьБезНДСБезСкидки,
	|	ТоварыДокумента.СтоимостьСНДСБезСкидки		КАК СтоимостьСНДСБезСкидки,
	|	ТоварыДокумента.СуммаНДС					КАК СуммаНДС,
	|	ТоварыДокумента.Содержание					КАК Содержание,
	|	ЛОЖЬ										КАК ЭтоНабор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаНаборы.НомерСтроки, 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ										КАК ЭтоКомплектующие,
	|	ТоварыДокумента.ЭтоТовар					КАК ЭтоТовар,
	|	ТоварыДокумента.ЭтоВозвратнаяТара			КАК ЭтоВозвратнаяТара
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ТоварыОснования КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ТаблицаНаборы
	|		ПО ТоварыДокумента.Ссылка = ТаблицаНаборы.Ссылка
	|			И ТоварыДокумента.НоменклатураНабора = ТаблицаНаборы.НоменклатураНабора
	|			И ТоварыДокумента.ХарактеристикаНабора = ТаблицаНаборы.ХарактеристикаНабора
	|
	|ГДЕ
	|	ТоварыДокумента.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	ИЛИ (ТоварыДокумента.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		И ТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В
	|			(ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНаборы.Ссылка					КАК Ссылка,
	|	ТаблицаНаборы.НомерСтроки				КАК НомерСтроки,
	|	ТаблицаНаборы.НомерСтроки				КАК НомерСтрокиНаборы,
	|	ТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ТаблицаНаборы.ВариантРасчетаЦеныНабора	КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаНаборы.НоменклатураНабора		КАК НоменклатураНабора,
	|	ТаблицаНаборы.ХарактеристикаНабора		КАК ХарактеристикаНабора,
	|	ТаблицаНаборы.НоменклатураНабора		КАК Номенклатура,
	|	ТаблицаНаборы.ХарактеристикаНабора		КАК Характеристика,
	|	&ПустаяУпаковка							КАК Упаковка,
	|	ТаблицаНаборы.Количество				КАК Количество,
	|	ТаблицаНаборы.КоличествоУпаковок		КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаНаборы.КоличествоУпаковок, 1) <> 0
	|			ТОГДА ТаблицаНаборы.СтоимостьБезНДС / ЕСТЬNULL(ТаблицаНаборы.КоличествоУпаковок, 1)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена,
	|	ТаблицаНаборы.СтоимостьБезНДС			КАК СтоимостьБезНДС,
	|	ТаблицаНаборы.СтавкаНДС					КАК СтавкаНДС,
	|	ТаблицаНаборы.СтоимостьСНДС				КАК СтоимостьСНДС,
	|	ТаблицаНаборы.СуммаСкидки				КАК СуммаСкидки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаНаборы.КоличествоУпаковок, 1) <> 0
	|			ТОГДА ТаблицаНаборы.СтоимостьБезНДСБезСкидки / ЕСТЬNULL(ТаблицаНаборы.КоличествоУпаковок, 1)
	|		ИНАЧЕ 0
	|	КОНЕЦ									КАК ЦенаБезСкидки,
	|	ТаблицаНаборы.СтоимостьБезНДСБезСкидки	КАК СтоимостьБезНДСБезСкидки,
	|	ТаблицаНаборы.СтоимостьСНДСБезСкидки	КАК СтоимостьСНДСБезСкидки,
	|	ТаблицаНаборы.СуммаНДС					КАК СуммаНДС,
	|	""""									КАК Содержание,
	|	ИСТИНА									КАК ЭтоНабор,
	|	ЛОЖЬ									КАК ЭтоКомплектующие,
	|	ТаблицаНаборы.ЭтоТовар					КАК ЭтоТовар,
	|	ЛОЖЬ									КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ВременнаяТаблицаНаборы КАК ТаблицаНаборы
	|
	|ГДЕ
	|	ТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В
	|		(ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПустаяУпаковка",
								"ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)");
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса для получения информации о номенклатурном составе товаров документа основания, используемого
// при формировании ЭД Счета на оплату.
//
// Возвращаемое значение:
//	Строка - текст запроса для получения данных.
//
Функция ТекстЗапросаВТНоменклатураДокументовСчетаНаОплату_1_01() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка	КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НЕ ТоварыДокумента.ЭтоТовар
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)					КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТоварыДокумента.ЭтоТовар
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)					КАК ЕстьТовары
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	ТоварыОснования КАК ТоварыДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДокумента.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса для получения данных о  товарах документа основания, используемого при формировании ЭД
// Счета на оплату.
//
// Возвращаемое значение:
//	Строка - текст запроса для получения данных.
//
Функция ТекстЗапросаДанныеТоваровСчетаНаОплату_1_01() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка										КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки									КАК НомерСтроки,
	|	ТаблицаТоваров.ВариантПредставленияНабораВПечатныхФормах	КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ТаблицаТоваров.ВариантРасчетаЦеныНабора						КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаТоваров.НоменклатураНабора							КАК НоменклатураНабора,
	|	ЕСТЬNULL(ТаблицаТоваров.НоменклатураНабора.НаименованиеПолное, """")	КАК НоменклатураНабораНаименованиеПолное,
	|	ТаблицаТоваров.ХарактеристикаНабора							КАК ХарактеристикаНабора,
	|	ЕСТЬNULL(ТаблицаТоваров.ХарактеристикаНабора.НаименованиеПолное, """")	КАК ХарактеристикаНабораНаименованиеПолное,
	|	ТаблицаТоваров.Номенклатура									КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ЕСТЬNULL(ДанныеНоменклатуры.Артикул, """")
	|		ИНАЧЕ ЕСТЬNULL(ДанныеНоменклатуры.Код, """")
	|	КОНЕЦ														КАК КодТовара,
	|	ЕСТЬNULL(ДанныеНоменклатуры.КодТНВЭД, НЕОПРЕДЕЛЕНО)			КАК КодТНВЭД,
	|	ЕСТЬNULL(ДанныеНоменклатуры.КодТНВЭД.Код, """")				КАК КодВидаТовара,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Содержание = """"
	|			ТОГДА ЕСТЬNULL(ДанныеНоменклатуры.НаименованиеПолное, """")
	|		ИНАЧЕ ТаблицаТоваров.Содержание
	|	КОНЕЦ														КАК НоменклатураНаименование,
	|	ЕСТЬNULL(ДанныеНоменклатуры.ТипНоменклатуры, НЕОПРЕДЕЛЕНО)	КАК ТипНоменклатуры,
	|	ЕСТЬNULL(ДанныеНоменклатуры.СтранаПроисхождения, НЕОПРЕДЕЛЕНО) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ДанныеНоменклатуры.СтранаПроисхождения.Код, """")	КАК КодСтраныПроисхождения,
	|	ЕСТЬNULL(ДанныеНоменклатуры.СтранаПроисхождения.Наименование, """") КАК НаименованиеСтраныПроисхождения,
	|	ТаблицаТоваров.Характеристика								КАК Характеристика,
	|	ЕСТЬNULL(ТаблицаТоваров.Характеристика.НаименованиеПолное, """") КАК ХарактеристикаНаименование,
	|	ТаблицаТоваров.Упаковка										КАК Упаковка,
	|	&ТекстЗапросаЕдиницаИзмерения								КАК ЕдиницаИзмерения,
	|	&ТекстЗапросаКодЕдиницыИзмерения							КАК КодЕдиницыИзмерения,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения					КАК НаименованиеЕдиницыИзмерения,
	|	ТаблицаТоваров.КоличествоУпаковок							КАК Количество,
	|	ТаблицаТоваров.Цена											КАК Цена,
	|	ТаблицаТоваров.СтоимостьБезНДС								КАК СтоимостьБезНДС,
	|	ТаблицаТоваров.СтавкаНДС									КАК СтавкаНДС,
	|	ТаблицаТоваров.СтоимостьСНДС								КАК СтоимостьСНДС,
	|	ТаблицаТоваров.СуммаСкидки									КАК СуммаСкидки,
	|	ТаблицаТоваров.ЦенаБезСкидки								КАК ЦенаБезСкидки,
	|	ТаблицаТоваров.СтоимостьБезНДСБезСкидки						КАК СтоимостьБезНДСБезСкидки,
	|	ТаблицаТоваров.СтоимостьСНДСБезСкидки						КАК СтоимостьСНДСБезСкидки,
	|	ТаблицаТоваров.СуммаНДС										КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаНДС										КАК СуммаНДСБезСкидки,
	|	ТаблицаТоваров.ЭтоНабор										КАК ЭтоНабор,
	|	ТаблицаТоваров.ЭтоКомплектующие								КАК ЭтоКомплектующие,
	|	ТаблицаТоваров.ЭтоТовар										КАК ЭтоТовар,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара							КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерСтрокиНаборы,
	|	ТаблицаТоваров.ЭтоНабор УБЫВ,
	|	ТаблицаТоваров.НомерСтроки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаЕдиницаИзмерения",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
									"Ссылка",
									"ТаблицаТоваров.Упаковка",
									"ТаблицаТоваров.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
									"Наименование",
									"ТаблицаТоваров.Упаковка",
									"ТаблицаТоваров.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаКодЕдиницыИзмерения",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
									"Код",
									"ТаблицаТоваров.Упаковка",
									"ТаблицаТоваров.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

//-- Локализация
#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
//++ Локализация
//-- Локализация


#КонецОбласти

//++ Локализация
#Область Печать

#Область СчетНаОплату_1_01

Функция ТекстЗапросаДанныхДокументовДляСчетаНаОплату()
	
	ТекстыЗапроса = Новый Массив;
	ТекстыЗапроса.Добавить(ТекстЗапросаВТОснованийСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаВТТоваровОснованияСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаВТТоваровСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаВТНоменклатураДокументовСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаДанныеШапкиСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаДанныеЭтаповОплатыСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаДанныеТоваровСчетаНаОплату_1_01());
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТОснованийСчетаНаОплату_1_01()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка				КАК Ссылка,
	|	ТаблицаОснований.ДокументОснование	КАК ДокументОснование
	|ПОМЕСТИТЬ ТаблицаОснований
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ДокументОснование";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТТоваровОснованияСчетаНаОплату_1_01()
	
	ТекстыЗапроса = Новый Массив;
	// Первый текст запроса должен создавать временную таблицу.
	ТекстыЗапроса.Добавить(АктВыполненныхРаботЛокализация.ТекстЗапросаВТТоваровОснованияСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаТоваровДоговораОснованияСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ЗаказКлиентаЛокализация.ТекстЗапросаВТТоваровОснованияСчетаНаОплату_1_01(Ложь));
	ТекстыЗапроса.Добавить(ОтчетКомитентуЛокализация.ТекстЗапросаВТТоваровОснованияСчетаНаОплату_1_01(Ложь));
	ТекстыЗапроса.Добавить(ОтчетКомитентуОЗакупкахЛокализация.ТекстЗапросаВТТоваровОснованияСчетаНаОплату_1_01(Ложь));
	ТекстыЗапроса.Добавить(РеализацияТоваровУслугЛокализация.ТекстЗапросаВТТоваровОснованияСчетаНаОплату_1_01(Ложь));
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоваровДоговораОснованияСчетаНаОплату_1_01()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка				КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО						КАК ХозяйственнаяОперация,
	|	1									КАК НомерСтроки,
	|	NULL								КАК ВариантКомплектацииНоменклатуры,
	|	&ПустойВариантПредставленияНаборов	КАК ВариантПредставленияНабораВПечатныхФормах,
	|	&ПустойВариантРасчетаЦенНаборов		КАК ВариантРасчетаЦеныНабора,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)	КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	КАК ХарактеристикаНабора,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)					КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	КАК Характеристика,
	|	&ПустаяУпаковка						КАК Упаковка,
	|	1									КАК Количество,
	|	1									КАК КоличествоУпаковок,
	|	0									КАК Цена,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|		ИНАЧЕ ДанныеДокумента.СуммаДокумента - ДанныеДокумента.СуммаДокумента
	|				* (ТоварыДокумента.СтавкаНДС.Ставка / 100) / ((ТоварыДокумента.СтавкаНДС.Ставка + 100) / 100)
	|	КОНЕЦ								КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|		ИНАЧЕ ТоварыДокумента.СтавкаНДС
	|	КОНЕЦ								КАК СтавкаНДС,
	|	ДанныеДокумента.СуммаДокумента		КАК СтоимостьСНДС,
	|	0									КАК СуммаСкидки,
	|	0									КАК ЦенаБезСкидки,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|		ИНАЧЕ ДанныеДокумента.СуммаДокумента - ДанныеДокумента.СуммаДокумента
	|				* (ТоварыДокумента.СтавкаНДС.Ставка / 100) / ((ТоварыДокумента.СтавкаНДС.Ставка + 100) / 100)
	|	КОНЕЦ								КАК СтоимостьБезНДСБезСкидки,
	|	ДанныеДокумента.СуммаДокумента		КАК СтоимостьСНДСБезСкидки,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ ДанныеДокумента.СуммаДокумента * (ТоварыДокумента.СтавкаНДС.Ставка / 100)
	|				/ ((ТоварыДокумента.СтавкаНДС.Ставка + 100) / 100)
	|	КОНЕЦ								КАК СуммаНДС,
	|	""""								КАК Содержание,
	|	ЛОЖЬ								КАК ЭтоТовар,
	|	ЛОЖЬ								КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ТоварыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОснований КАК ТаблицаОснований
	|		ПО ТоварыДокумента.Ссылка = ТаблицаОснований.ДокументОснование
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуКлиенту КАК ДанныеДокумента
	|		ПО ТаблицаОснований.Ссылка = ДанныеДокумента.Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПустойВариантПредставленияНаборов",
								"ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПустойВариантРасчетаЦенНаборов",
								"ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПустаяУпаковка",
								"ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеШапкиСчетаНаОплату_1_01()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка	КАК Ссылка,
	|	ДанныеДокумента.Номер	КАК НомерДокумента,
	|	ДанныеДокумента.Дата	КАК ДатаДокумента,
	|	ДанныеДокумента.ДокументОснование							КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.ДокументОснование)			КАК НаименованиеОснования,
	|	ДанныеДокумента.ДокументОснование.Номер						КАК НомерОснования,
	|	ДанныеДокумента.ДокументОснование.Дата						КАК ДатаОснования,
	|	ЕСТЬNULL(ДанныеДоговора.ИдентификаторГосКонтракта, """")	КАК ИдентификаторГосКонтракта,
	|	ВЫРАЗИТЬ(ДанныеДокумента.ДополнительнаяИнформация КАК СТРОКА(1000))	ДополнительныеСведения,
	|	ЕСТЬNULL(ДанныеСчетаОрганизации.Владелец, ДанныеДокумента.Организация)	КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.БанковскийСчет											КАК БанковскийСчет,
	|	ДанныеДокумента.Организация	КАК Организация,
	|	ДанныеДокумента.Контрагент	КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО				КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО	КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО	КАК БанковскийСчетГрузоотправителя,
	|	НЕОПРЕДЕЛЕНО	КАК Грузополучатель,
	|	НЕОПРЕДЕЛЕНО	КАК БанковскийСчетГрузополучателя,
	|	ДанныеДокумента.СуммаДокумента	КАК СтоимостьСНДС,
	|	ДанныеДокумента.Дата						КАК ДатаНачалаПоставки,
	|	ДанныеДокумента.НазначениеПлатежа			КАК НазначениеПлатежа,
	|	ДанныеДокумента.ИдентификаторПлатежа		КАК ИнформацияДляОплаты,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.ФормаОплаты)	КАК СпособОплаты,
	|	ДанныеДокумента.Валюта								КАК Валюта,
	|	ДанныеВалюты.НаименованиеПолное						КАК НаименованиеВалюты,
	|	ДанныеВалюты.Код									КАК КодВалюты,
	|	ДанныеОрганизации.ВалютаРегламентированногоУчета	КАК ВалютаРегламентированногоУчета,
	|	ДанныеДокумента.ДокументОснование.НалогообложениеНДС	КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование.НалогообложениеНДС В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ								КАК УчитыватьНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ								КАК ОперацияОблагаетсяНДСУПокупателя,
	|	ДанныеДокумента.ЧастичнаяОплата		КАК ЧастичнаяОплата,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ВЫБОР
	|				КОГДА ДанныеДокумента.ДокументОснование.ТребуетсяЗалогЗаТару
	|					ТОГДА 100 * ДанныеДокумента.СуммаДокумента
	|							/ (ДанныеДокумента.ДокументОснование.СуммаДокумента
	|							+ ДанныеДокумента.ДокументОснование.СуммаВозвратнойТары)
	|				ИНАЧЕ 100 * ДанныеДокумента.СуммаДокумента / ДанныеДокумента.ДокументОснование.СуммаДокумента
	|			КОНЕЦ
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ОтчетКомитенту
	|			ТОГДА ВЫБОР
	|				КОГДА ДанныеДокумента.ДокументОснование.СуммаВознаграждения = 0
	|					ТОГДА 0
	|				ИНАЧЕ ДанныеДокумента.СуммаДокумента * 100 / ДанныеДокумента.ДокументОснование.СуммаВознаграждения
	|			КОНЕЦ
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ОтчетКомитентуОЗакупках
	|			ТОГДА 100 * ДанныеДокумента.СуммаДокумента / (ДанныеДокумента.ДокументОснование.СуммаДокумента
	|					+ ДанныеДокумента.ДокументОснование.СуммаВознаграждения)
	|			
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА 100
	|		ИНАЧЕ 100 * ДанныеДокумента.СуммаДокумента / ДанныеДокумента.ДокументОснование.СуммаДокумента
	|	КОНЕЦ								КАК ПроцентОплаты,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ								КАК ТолькоУслуги
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОснований КАК ТаблицаОснований
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОснований.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДанныеДоговора
	|		ПО ДанныеДокумента.Договор = ДанныеДоговора.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК ДанныеСчетаОрганизации
	|		ПО ДанныеДокумента.БанковскийСчет = ДанныеСчетаОрганизации.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
	|		ПО ДанныеДокумента.Валюта = ДанныеВалюты.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизации
	|		ПО ДанныеДокумента.Организация = ДанныеОрганизации.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	|		ПО ДанныеДокумента.Ссылка = НоменклатураДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеЭтаповОплатыСчетаНаОплату_1_01()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1							КАК Порядок,
	|	ЭтапыОплаты.Ссылка			КАК Ссылка,
	|	ЭтапыОплаты.НомерСтроки		КАК НомерСтроки,
	|	ЭтапыОплаты.ДатаПлатежа		КАК ДатаПлатежа,
	|	ЭтапыОплаты.ПроцентПлатежа	КАК ПроцентПлатежа,
	|	ЭтапыОплаты.СуммаПлатежа	КАК СуммаПлатежа,
	|	ЭтапыОплаты.ЭтоЗалогЗаТару	КАК ЭтоЗалогЗаТару
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту.ЭтапыГрафикаОплаты КАК ЭтапыОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОснований КАК ТаблицаОснований
	|		ПО ЭтапыОплаты.Ссылка = ТаблицаОснований.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыОплаты.Ссылка,
	|	ЭтапыОплаты.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти
//-- Локализация

#КонецОбласти
