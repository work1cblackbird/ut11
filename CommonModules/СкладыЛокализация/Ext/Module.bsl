#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика справочника
//
// Параметры:
//  Объект - СправочникОбъект.Склады - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив из Строка - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область МаркируемаяПродукция

// Определяет ведение учета маркируемой продукции.
// 
// Возвращаемое значение:
//  Булево - Используется маркируемая продукция
Функция ИспользуетсяМаркируемаяПродукция() Экспорт
	
	Результат = Ложь;
	//++ Локализация
	Результат = ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции")
		Или( ОбщегоНазначенияИСМП.ИспользуетсяМаркируемаяПродукция()
			И ОбщегоНазначенияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции().Количество());
	//-- Локализация
	Возврат Результат;
	
КонецФункции

// Получает виды маркируемой продукции по товарам, содержащимся в документе
//
// Параметры:
// 	ДокументСсылка - ДокументСсылка - документ, виды маркируемой продукции которого необходимо получить.
//
// Возвращаемое значение:
// 	Массив Из ПеречислениеСсылка - Массив видов продукции.
//
Функция ВидыПродукцииДокумента(ДокументСсылка) Экспорт
	
	Результат = Новый Массив();
	//++ Локализация
	Результат = ИнтеграцияИСМПУТ.ВидыПродукцииДокумента(ДокументСсылка);
	//-- Локализация
	Возврат Результат;
	
КонецФункции

// Установить признак использования маркируемой продукции.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения:
//		* Объект - ДокументОбъект - основной реквизит формы
//		* ПараметрыИнтеграцииГосИС - ФиксированноеСоответствие из КлючИЗначение
Процедура УстановитьПризнакИспользованияМаркируемойПродукции(Форма) Экспорт
	
	ЕстьМаркируемаяПродукция = Ложь;

	//++ Локализация
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПараметрыИнтеграцииГосИС") Тогда
		ПараметрыИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП");
		
		Если Не (ПараметрыИнтеграции = Неопределено) Тогда
			
			
			Если ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
				ТабличнаяЧастьТовары = Форма.Объект.ОтгружаемыеТовары;
			ИначеЕсли ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда
				ТабличнаяЧастьТовары = Форма.Объект.Товары;
			КонецЕсли;
			
			ЕстьМаркируемаяПродукция = Ложь;
			
			ПроверкаИПодборПродукцииИСМПУТ.ЕстьМаркируемаяПродукцияВКоллекции(
				ТабличнаяЧастьТовары, ОбщегоНазначенияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции(), ЕстьМаркируемаяПродукция);
				
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
	
	Форма.ЕстьМаркируемаяПродукция = ЕстьМаркируемаяПродукция;
	Форма.ИспользоватьУпаковочныеЛисты = Форма.ИспользоватьУпаковочныеЛисты И Не ЕстьМаркируемаяПродукция;

КонецПроцедуры

#Область ПодборТоваровИзЗаказа

// Сформировать структуру штрихкоды упаковок накладной.
//
// Возвращаемое значение:
// 	ТаблицаЗначений - Сформировать структуру штрихкоды упаковок накладной:
// 		* СтрокаВыбрана - Булево - строка выбрана.
// 		* Номенклатура - СправочникСсылка.Номенклатура - номенклатура.
// 		* Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика.
// 		* Серия - СправочникСсылка.СерииНоменклатуры - серия.
// 		* ШтрихкодУпаковки - СправочникСсылка - штрихкод упаковки.
//
Функция СформироватьСтруктуруШтрихкодыУпаковокНакладной() Экспорт
	
	Таблица = Новый ТаблицаЗначений();
	//++ Локализация
	Таблица.Колонки.Добавить("СтрокаВыбрана", 	Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("Номенклатура", 	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("Характеристика", 	Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Таблица.Колонки.Добавить("Серия", 			Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	Таблица.Колонки.Добавить("ШтрихкодУпаковки",Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	//-- Локализация
	
	Возврат Таблица;
	
КонецФункции

// Распределить марки.
// 
// Параметры:
//  ШтрихкодыУпаковокНакладной - см. СкладыЛокализация.СформироватьСтруктуруШтрихкодыУпаковокНакладной
//  ТаблицаШтрихкодыУпаковок - ТаблицаЗначений
//  ТаблицаТовары - ТаблицаЗначений
//  ЗаполнятьДанныеПоМаркам - Булево - Заполнять данные по маркам
Процедура РаспределитьМарки(ШтрихкодыУпаковокНакладной,
							ТаблицаШтрихкодыУпаковок,
							ТаблицаТовары) Экспорт
	
	//++ Локализация
	Если НЕ (ШтрихкодыУпаковокНакладной.Количество() > 0 Или ТаблицаШтрихкодыУпаковок.Количество() > 0) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнитьДанныеПоМаркам(ШтрихкодыУпаковокНакладной, ТаблицаТовары);
	
	Для Каждого ТекСтрока Из ТаблицаТовары Цикл
		
		НаборМарокРазный = Ложь;
					
		СтруктураПоискаМарки = Новый Структура("Номенклатура, Характеристика, Серия");
		ЗаполнитьЗначенияСвойств(СтруктураПоискаМарки, ТекСтрока);
		НайденныеМарки = ТаблицаШтрихкодыУпаковок.НайтиСтроки(СтруктураПоискаМарки);
		
		МассивУдаляемыхСтрокМарокРеализации = Новый Массив;
		Для каждого Строка Из НайденныеМарки Цикл
			СтруктураПоискаМарки = Новый Структура("Номенклатура, Характеристика, Серия, ШтрихкодУпаковки");
			ЗаполнитьЗначенияСвойств(СтруктураПоискаМарки, Строка);
			НайденныеМаркиНакладной = ШтрихкодыУпаковокНакладной.НайтиСтроки(СтруктураПоискаМарки);
			Если НайденныеМаркиНакладной.Количество() > 0 Тогда
				МассивУдаляемыхСтрокМарокРеализации.Добавить(НайденныеМаркиНакладной[0]);
			Иначе
				НаборМарокРазный = Истина;
			КонецЕсли; 
		КонецЦикла; 
		
		Если НЕ НаборМарокРазный Тогда
			НаборМарокРазный = (НайденныеМарки.Количество() <> МассивУдаляемыхСтрокМарокРеализации.Количество());
		КонецЕсли; 
		
		Если НаборМарокРазный Тогда
			ТекСтрока.СтатусПроверкиГосИС = 2;
			
			Для Каждого Строка Из МассивУдаляемыхСтрокМарокРеализации Цикл
				НоваяСтрока = ТаблицаШтрихкодыУпаковок.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
				ШтрихкодыУпаковокНакладной.Удалить(Строка);
			КонецЦикла;
		Иначе
			Для Каждого Элемент Из НайденныеМарки Цикл
				Элемент.ВыгружатьВДокумент = Истина;
			КонецЦикла;
			
			Для Каждого Строка Из МассивУдаляемыхСтрокМарокРеализации Цикл
				ШтрихкодыУпаковокНакладной.Удалить(Строка);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	//-- Локализация
	
КонецПроцедуры

// Дополнить реквизитами маркировки.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//  ЗаполнятьДанныеПоМаркам -Булево -Заполнять данные по маркам
Процедура ДополнитьРеквизитамиМаркировки(Форма) Экспорт
	
	//++ Локализация
	
	Настройки = Новый Структура("ИмяТабличнойЧастиТовары, ИмяЭлементаФормыТовары, ИмяСледующейКолонки");
	
	Настройки.ИмяТабличнойЧастиТовары = "ТаблицаТовары";
	Настройки.ИмяЭлементаФормыТовары = "ТаблицаТоваровГруппаВОрдерах";
	Настройки.ИмяСледующейКолонки = "КоличествоУпаковокВОрдере";
	
	ДобавляемыеРеквизиты = Новый Массив();

	Колонка = Новый РеквизитФормы("МаркируемаяПродукция", Новый ОписаниеТипов("Булево"), Настройки.ИмяТабличнойЧастиТовары, НСтр("ru = 'Маркируемая продукция'"));
	ДобавляемыеРеквизиты.Добавить(Колонка);
	Колонка = Новый РеквизитФормы("СтатусПроверкиГосИС", Новый ОписаниеТипов("Число"), Настройки.ИмяТабличнойЧастиТовары, НСтр("ru = 'Статус проверки подбора'"));
	ДобавляемыеРеквизиты.Добавить(Колонка);

	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ДобавитьКолонкуСтатусаПроверкиПодбора(Форма, Настройки);
	//-- Локализация
	
КонецПроцедуры

// Добавляет на форму колонку статуса проверки и подбора в табличной части
//
// Параметры:
//   Форма               - ФормаКлиентскогоПриложения                   - форма для встраивания
//   Настройки - Структура                          - параметры интеграции прикладной формы
//
Процедура ДобавитьКолонкуСтатусаПроверкиПодбора(Форма, Настройки) Экспорт
	
	//++ Локализация
	ПутьКРеквизиту = Настройки.ИмяТабличнойЧастиТовары + ".СтатусПроверкиГосИС";
	ИмяКолонкиРеквизита = СтрШаблон("%1СтатусПроверкиГосИС",Настройки.ИмяТабличнойЧастиТовары);
	
	Если Форма.Элементы.Найти(ИмяКолонкиРеквизита) = Неопределено Тогда
	
		КолонкаИнтерфейса = Форма.Элементы.Вставить(
			ИмяКолонкиРеквизита,
			Тип("ПолеФормы"),
			Форма.Элементы[Настройки.ИмяЭлементаФормыТовары],
			Форма.Элементы[Настройки.ИмяСледующейКолонки]);
		КолонкаИнтерфейса.ПутьКДанным = ПутьКРеквизиту;
		КолонкаИнтерфейса.Вид = ВидПоляФормы.ПолеКартинки;
		КолонкаИнтерфейса.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		КолонкаИнтерфейса.КартинкаЗначений = БиблиотекаКартинок.МаркируемаяПродукцияТЧ;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура УправлениеЭлементами_ПанельСправочниковСклад(Элементы, ЕстьДанныеДляОтображения) Экспорт

	//++ Локализация

	ПравоДоступаКатегорииЭксплуатации = 
		ПравоДоступа("Просмотр", Метаданные.Справочники.КатегорииЭксплуатации)
		И ПолучитьФункциональнуюОпцию("УправлениеТорговлей");
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ОткрытьКатегорииЭксплуатации",
		"Видимость",
		ПравоДоступаКатегорииЭксплуатации);
		
	ЕстьДанныеДляОтображения = ЕстьДанныеДляОтображения ИЛИ ПравоДоступаКатегорииЭксплуатации;
	
	//-- Локализация
		
КонецПроцедуры

//++ Локализация
Процедура ДополнитьДанныеПоМаркам(ШтрихкодыУпаковокНакладной, ТаблицаТовары)
	
	Если ШтрихкодыУпаковокНакладной = Неопределено Тогда
		ШтрихкодыУпаковокНакладной = СформироватьСтруктуруШтрихкодыУпаковокНакладной();
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТоварыРеализации.Номенклатура КАК Номенклатура,
	               |	ТоварыРеализации.Характеристика КАК Характеристика,
	               |	ТоварыРеализации.Серия КАК Серия
	               |ПОМЕСТИТЬ ВтТоварыРеализации
	               |ИЗ
	               |	&ТоварыРеализации КАК ТоварыРеализации
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ШтрихкодыУпаковокТоваров.Ссылка КАК ШтрихкодУпаковки,
	               |	ШтрихкодыУпаковокТоваров.Номенклатура КАК Номенклатура,
	               |	ШтрихкодыУпаковокТоваров.Характеристика КАК Характеристика,
	               |	ШтрихкодыУпаковокТоваров.Серия КАК Серия
	               |ИЗ
	               |	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыРеализации КАК ВтТоварыРеализации
	               |		ПО ШтрихкодыУпаковокТоваров.Номенклатура = ВтТоварыРеализации.Номенклатура
	               |			И ШтрихкодыУпаковокТоваров.Характеристика = ВтТоварыРеализации.Характеристика
	               |			И ШтрихкодыУпаковокТоваров.Серия = ВтТоварыРеализации.Серия
	               |ГДЕ
	               |	ШтрихкодыУпаковокТоваров.Ссылка В(&Марки)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия,
	               |	ШтрихкодУпаковки";
	
	Запрос.УстановитьПараметр("Марки", ШтрихкодыУпаковокНакладной.ВыгрузитьКолонку("ШтрихкодУпаковки"));
	Запрос.УстановитьПараметр("ТоварыРеализации", ТаблицаТовары.Выгрузить(, "Номенклатура, Характеристика, Серия"));
	
	ШтрихкодыУпаковокНакладной = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры
//-- Локализация

#КонецОбласти
