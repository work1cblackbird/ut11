////////////////////////////////////////////////////////////////////////////////
// Модуль "Распределение запасов (движения)", содержит процедуры и функции
// обслуживающие движения документов по регистру накопления "Распределение запасов - Движения".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. ПроведениеДокументов.СвойстваДокумента).
//
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	Параметры.ЕстьПроизводныеДвижения = Истина;
	
	ТипДокумента = ТипЗнч(Документ);
	
	ДополнительныеДокументы = Новый Структура;
	ПроведениеДокументовЛокализация.ЗаполнитьЛокальныеДокументыОбеспечения(ДополнительныеДокументы);
	Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ЗапасыИПотребности);
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ЗапасыИПотребности);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда

			ИсправительныйДокумент = ИсправлениеДокументов.ЭтоИсправительныйДокумент(Документ);
		
		Если Не ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(Документ)
			И (Не Документ.ДополнительныеСвойства.Свойство("КонтролироватьОбеспечение")
				Или Документ.ДополнительныеСвойства.КонтролироватьОбеспечение) Тогда
			
				Если ТипДокумента = Тип("ДокументОбъект.АктОРасхожденияхПослеОтгрузки")
					Или ТипДокумента = Тип("ДокументОбъект.АктОРасхожденияхПослеПеремещения")
					Или ТипДокумента = Тип("ДокументОбъект.ВнутреннееПотребление")
					Или ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказКлиента")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаВнутреннееПотребление")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаПеремещение")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаСборку")
					Или ТипДокумента = Тип("ДокументОбъект.КорректировкаНазначенияТоваров")
						И Не Документ.ДополнительныеСвойства.Свойство("ПрограммноеСозданиеДокумента")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику")
					Или ТипДокумента = Тип("ДокументОбъект.КорректировкаРеализации")
					Или ТипДокумента = Тип("ДокументОбъект.ОтгрузкаТоваровСХранения")
					Или ТипДокумента = Тип("ДокументОбъект.ОтчетОРозничныхПродажах")
					Или ТипДокумента = Тип("ДокументОбъект.ПередачаТоваровХранителю")
					Или ТипДокумента = Тип("ДокументОбъект.ПеремещениеТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровНаСклад")
					Или ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровОтХранителя")
					Или ТипДокумента = Тип("ДокументОбъект.ПриемкаТоваровНаХранение")
					Или ТипДокумента = Тип("ДокументОбъект.ПриобретениеТоваровУслуг")
					Или ТипДокумента = Тип("ДокументОбъект.ПриходныйОрдерНаТовары")
					Или ТипДокумента = Тип("ДокументОбъект.ПрочееОприходованиеТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг")
					Или ТипДокумента = Тип("ДокументОбъект.СборкаТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.ЧекККМ")
					Или ТипДокумента = Тип("ДокументОбъект.ЧекККМВозврат")
					Или ТипДокумента = Тип("ДокументОбъект.ЧекККМКоррекции")
					
					Или ИсправительныйДокумент
						И НЕ Документ.ДополнительныеСвойства.Свойство("ПрограммноеСозданиеДокумента") 
					
					Или (ДополнительныеДокументы.Свойство("КонтрольныеРегистрыИзменений")
						И ДополнительныеДокументы.КонтрольныеРегистрыИзменений.Свойство("ЗапасыИПотребности")
						И ДополнительныеДокументы.КонтрольныеРегистрыИзменений.ЗапасыИПотребности.Найти(ТипДокумента)<>Неопределено)
					Тогда
						Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ЗапасыИПотребности);
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
//
	ТекстыЗапросов = Новый Соответствие();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ЗапасыИПотребности;
	ДопУсловие = "ДанныеРегистра.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)";
	ТекстСторнирования = ПроведениеДокументов.ТекстСторнирующегоЗапроса(МетаданныеРегистра, МетаданныеДокумента, ДопУсловие);
	ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(), ТекстСторнирования);
	Возврат ТекстыЗапросов;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам обеспечения.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ЗапасыИПотребности");
	
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений Из Строка - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ЗапасыИПотребностиИзменение") Тогда
		
		ЗначениеПараметра = Пользователи.РолиДоступны(
			"ПроведениеНеподтвержденныхЗаказовСверхОбособленнойПотребности", Неопределено, Ложь);
		Запрос.УстановитьПараметр("КонтролироватьПодтвержденныйГрафикПоступления", ЗначениеПараметра);
		Запрос.УстановитьПараметр("КонтролироватьЗапасыТоваровПодлежащихРезервированиюПоМереПоступления",
			Константы.КонтролироватьЗапасыТоваровПодлежащихРезервированиюПоМереПоступления.Получить());
		
		РаспределениеЗапасов.ДобавитьТекстЗапросаКонтроль(Запрос, ТекстыЗапроса, Документ);
		
	КонецЕсли;
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ЗапасыИПотребностиИзменение") Тогда
		
		ТаблицаРезультатовКонтроля = РезультатыКонтроля.ОбеспечениеРезультатыКонтроля;
		РаспределениеЗапасов.СообщитьОбОшибкахПроведения(Документ, Отказ, ТаблицаРезультатовКонтроля);
		
		Если РезультатыКонтроля.Свойство("ОбеспечениеРезультатыКонтроляПревышенияОбособленногоОбеспечения") Тогда
			ТаблицаРезультатовКонтроля = РезультатыКонтроля.ОбеспечениеРезультатыКонтроляПревышенияОбособленногоОбеспечения;
			РаспределениеЗапасов.СообщитьОбОшибкахПроведенияПревышениеОбособленногоОбеспечения(Документ, Отказ, ТаблицаРезультатовКонтроля);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Перераспределяет запасы при групповом изменении приоритета заказов на отгрузку.
// 
// Параметры:
// 	Заказы - Массив - ссылки на заказы.
//
Процедура ПриИзмененииПриоритета(Заказы) Экспорт
	
	Если Заказы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Заказы", Заказы);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Сведения.Номенклатура КАК Номенклатура,
		|	Сведения.Характеристика КАК Характеристика,
		|	Сведения.Склад КАК Склад,
		|	Сведения.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	0 КАК ВНаличииРасход,
		|	0 КАК РезервироватьНаСкладе
		|ПОМЕСТИТЬ ЗапасыИПотребностиИзменение
		|ИЗ
		|	РегистрНакопления.ЗапасыИПотребности.Остатки(, Заказ В(&Заказы)) КАК Сведения
		|ГДЕ
		|	Сведения.КОбеспечениюОстаток <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение";
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	Документ = ПроведениеДокументов.ЭмуляцияДокумента(Заказы[0], Неопределено); // нужна ссылка на заказ, для механизма состояний заказов клиентов
	
	НачатьТранзакцию();
	Попытка
		
		ЭмуляцияДокумента = ПроведениеДокументов.ЭмуляцияДокумента(Неопределено, Неопределено);
		ОтразитьЗаданияКРаспределениюЗапасов(ЭмуляцияДокумента, МенеджерВременныхТаблиц);
		Если Не РаспределениеЗапасов.ДосчитыватьРегистрРегламентнымЗаданием() Тогда
			СостоянияДокументов.ОтразитьСостоянияДокументов(Документ, МенеджерВременныхТаблиц);
		КонецЕсли;
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ТекстСообщения = НСтр("ru = 'Изменение приоритета заказа завершилось неудачно по причине: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ТекстОшибки);
		СобытиеЖурнала = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации();
		ЗаписьЖурналаРегистрации(СобытиеЖурнала,
		                         УровеньЖурналаРегистрации.Ошибка,
		                         Метаданные.РегистрыСведений.ЗаданияКРаспределениюЗапасов,
		                         ,
		                         ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
		
	КонецПопытки;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Шаблоны движений документов.

// Дополняет тексты запроса проведения документа текстами движений регистра ЗапасыИПотребности
// Отражает операцию движения товаров к отгрузке (списание из доступного остатка).
// Уменьшает фактический и свободный остаток товара на складе, работы в подразделении.
// Проведение документа может быть выполнено с контролем остатков.
// Если свободного остатка недостаточно могут быть задействованы запасы на складе,
// распределенные ранее на указанный документ планируемого расхода запаса.
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений Из Строка - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка                                     - ДокументСсылка                        - отражаемый документ.
//   * Период                                     - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура         - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -             - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -         - назначение номенклатуры.
//   * Количество                                 - Число                                 - списываемое количество.
//   * ЗапланированныйРасходРаспределенногоЗапаса - ОпределяемыйТип.ОжидаемаяОтгрузка     - документ планирования расхода запасов,
//                                                                                          распределенные запасы которого будут израсходованы.
//   * КонтрольСвободногоОстатка                  - Булево                                - контроль свободного остатка при списании запасов.
//  ТекстыШаблоновВременныхТаблиц - см. ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента.ТекстыШаблоновВременныхТаблиц
Процедура РасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть, ТекстыШаблоновВременныхТаблиц = Неопределено) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ТабЧасть.КонтрольСвободногоОстатка
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА ТабЧасть.КонтрольСвободногоОстатка
		|			ТОГДА ТабЧасть.Количество
		|		ИНАЧЕ -ТабЧасть.Количество
		|	КОНЕЦ КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	0 КАК РезервироватьНаСкладе,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечению,
		|	0 КАК НеОбеспечивать,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	ТабЧасть.ЗапланированныйРасходРаспределенногоЗапаса КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка В (&Ссылка)
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации, "ЗапасыИПотребности");
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения,
		ТекстыЗапросовТаблицДокумента, ТекстыШаблоновВременныхТаблиц);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра ЗапасыИПотребности.
// Отражает операцию планируемого расхода товаров.
// Резервировать: уменьшает свободный остаток с контролем остатка, формирует резерв товара на складе по заказу.
// НеОбеспечивать: не формирует потребности и резервов, фиксирует факт приема заказа
// КОбеспечению, если есть свободный остаток на складе / в ожидаемых поступлениях: уменьшает свободный остаток,
// формирует резерв товара на складе по заказуКОбеспечению, если нет свободного остатка на складе / в ожидаемых поступлениях: формирует потребность в товаре / работах.
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений Из Строка - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка                                     - ДокументСсылка                         - отражаемый документ.
//   * Период                                     - Дата                                   - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура          - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -              - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -          - назначение номенклатуры.
//   * Количество                                 - Число                                  - заказываемое количество.
//   * ВариантОбеспечения                         - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения.
//   * Заказ                                      - ОпределяемыйТип.ОжидаемаяОтгрузка      - заказ.
//   * ЖелаемаяДатаОтгрузки                       - Дата                                   - планируемая дата списания запасов.
//   * ПоГрафику                                  - Булево - признак, что расход товара происходит по ранее запланированному в графике расходу.
//   * РаспоряжениеВГрафике                       - ОпределяемыйТип.ОжидаемаяОтгрузка      - документ планирования расхода запаса,
//                                                                                           запасы которого будут уменьшены.
//   * КоличествоВГрафике                         - Число                                  - количество запаса, на которое будет уменьшен запас
//                                                                                           ранее запланированного в графике расхода.
//  ПоГрафику - Булево - Ложь, если не нужно добавлять блок движений закрытия графика.
Процедура ЗапланироватьРасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть, ПоГрафику = Неопределено) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	ТабЧасть.Заказ КАК Заказ,
		|	ВЫБОР КОГДА ТабЧасть.ЖелаемаяДатаОтгрузки = НЕОПРЕДЕЛЕНО ТОГДА
		|				ДАТАВРЕМЯ(1,1,1)
		|			ИНАЧЕ
		|				ТабЧасть.ЖелаемаяДатаОтгрузки
		|		КОНЕЦ КАК ДатаСобытия,
		|	0 КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
		|			ТОГДА ТабЧасть.Количество
		|			ИНАЧЕ 0
		|	КОНЕЦ КАК РезервироватьНаСкладе,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.РезервироватьПоМереПоступления)
		|			ТОГДА ТабЧасть.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
		|			ТОГДА ТабЧасть.Количество
		|			ИНАЧЕ 0
		|	КОНЕЦ КАК КОбеспечению,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|			ТОГДА ТабЧасть.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НеОбеспечивать,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка В (&Ссылка)
		|		И ТабЧасть.Количество <> 0
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
		
	Если ПоГрафику <> Ложь Тогда
		
		Тексты = Новый Массив();
		Тексты.Добавить(ТекстЗапросаОперации);
		
		ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	ТабЧасть.РаспоряжениеВГрафике КАК Заказ,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСобытия,
		|	0 КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	0 КАК РезервироватьНаСкладе,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечению,
		|	0 КАК НеОбеспечивать,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	ТабЧасть.КоличествоВГрафике КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка В (&Ссылка)
		|		И ТабЧасть.ПоГрафику
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
		
		Тексты.Добавить(ТекстЗапросаОперации);
		ТекстЗапросаОперации = СтрСоединить(Тексты, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	КонецЕсли;
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации, "ЗапасыИПотребности");
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра ЗапасыИПотребности
// Отражает операцию отмены запланированного расхода товаров со склада.
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений Из Строка - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка                                     - ДокументСсылка                         - отражаемый документ.
//   * Период                                     - Дата                                   - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура          - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -              - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -          - назначение номенклатуры.
//   * Количество                                 - Число                                  - отменяемое количество.
//   * РаспоряжениеВГрафике                       - ОпределяемыйТип.ОжидаемаяОтгрузка      - документ планирования расхода запаса,
//                                                                                           запасы которого будут уменьшены.
Процедура ОтменитьЗапланированныйРасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	ТабЧасть.РаспоряжениеВГрафике КАК Заказ,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСобытия,
		|	0 КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	0 КАК РезервироватьНаСкладе,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечению,
		|	0 КАК НеОбеспечивать,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	ТабЧасть.Количество КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка В (&Ссылка)
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
		
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации, "ЗапасыИПотребности");
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра ЗапасыИПотребности
// и регистра ЗапасыИПотребности, отражающего операцию фактического поступления товаров на склад
// (пополнение доступного остатка).
// Увеличивает фактический и свободный остаток товара на складе, работы в подразделении.
// Если приход товара ранее был запланирован документом планового прихода запаса (приход по графику),
// то при проведении будет уменьшен запас и свободный остаток в данном ожидаемом приходе (распоряжении).
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений Из Строка - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка               - ДокументСсылка                        - отражаемый документ.
//   * Период               - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура         - СправочникСсылка.Номенклатура         - приходуемая номенклатура.
//   * Характеристика       - СправочникСсылка.ХарактеристикиНоменклатуры - приходуемая характеристика номенклатуры.
//   * Склад                - СправочникСсылка.Склады -             - склад оприходования.
//   * Назначение           - СправочникСсылка.Назначения -         - назначение приходуемой номенклатуры.
//   * Количество           - Число                                 - приходуемое количество.
//   * ПоГрафику            - Булево                                - признак, что приход товара происходит по ранее запланированному в графике поступлению.
//   * РаспоряжениеВГрафике - ОпределяемыйТип.ОжидаемоеПоступление  - документ планирования прихода запаса,
//                                                                    запасы которого будут уменьшены на величину данного прихода запаса.
//  ТекстыШаблоновВременныхТаблиц - см. ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента.ТекстыШаблоновВременныхТаблиц
//  ПоГрафику - Булево - Ложь, если не нужно добавлять блок движений закрытия графика.
Процедура ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть,
						ТекстыШаблоновВременныхТаблиц = Неопределено, ПоГрафику = Неопределено) Экспорт
	
	ТекстЗапросаОперации = 
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСобытия,
		|	ТабЧасть.Количество КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	0 КАК РезервироватьНаСкладе,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечению,
		|	0 КАК НеОбеспечивать,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка В (&Ссылка)
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
		
	Если ПоГрафику <> Ложь Тогда
		
		Тексты = Новый Массив();
		Тексты.Добавить(ТекстЗапросаОперации);
		
		ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	ТабЧасть.РаспоряжениеВГрафике КАК Заказ,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСобытия,
		|	0 КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	0 КАК РезервироватьНаСкладе,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечению,
		|	0 КАК НеОбеспечивать,
		|	ТабЧасть.Количество КАК ЗакрытьГрафикПоступления,
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка В (&Ссылка)
		|		И ТабЧасть.ПоГрафику
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
		Тексты.Добавить(ТекстЗапросаОперации);
		ТекстЗапросаОперации = СтрСоединить(Тексты, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	КонецЕсли;
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации, "ЗапасыИПотребности");
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения,
		ТекстыЗапросовТаблицДокумента, ТекстыШаблоновВременныхТаблиц);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра ЗапасыИПотребности
// и регистра ЗапасыИПотребности, отражающего операцию фактического поступления товаров на склад
// (пополнение доступного остатка).
// Увеличивает фактический и свободный остаток товара на складе, работы в подразделении.
// Если приход товара ранее был запланирован документом планового прихода запаса (приход по графику),
// то при проведении будет уменьшен запас и свободный остаток в данном ожидаемом приходе (распоряжении).
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений Из Строка - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка               - ДокументСсылка                        - отражаемый документ.
//   * Период               - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура         - СправочникСсылка.Номенклатура         - приходуемая номенклатура.
//   * Характеристика       - СправочникСсылка.ХарактеристикиНоменклатуры - приходуемая характеристика номенклатуры.
//   * Склад                - СправочникСсылка.Склады -             - склад оприходования.
//   * Назначение           - СправочникСсылка.Назначения -         - назначение приходуемой номенклатуры.
//   * Количество           - Число                                 - приходуемое количество.
//   * Заказ                - ОпределяемыйТип.ОжидаемоеПоступление  - заказ по которому планируется поступление.
//   * ДатаПоступления      - Булево                                - дата на которую планируется поступление.
//   * ДоступенДляРасхода   - Булево                                - признак, что данный запас можно использовать для обеспечения запланированного расхода запаса.
//   * ПоГрафику            - Булево                                - признак, что приход товара происходит по ранее запланированному в графике поступлению.
//   * РаспоряжениеВГрафике - ОпределяемыйТип.ОжидаемоеПоступление  - документ планирования прихода запаса,
//                                                                    запасы которого будут уменьшены.
//   * КоличествоВГрафике   - Число                                 - количество запаса, на которое будет уменьшен запас ранее запланированного в графике поступления.
//  ПоГрафику - Булево - Ложь, если не нужно добавлять блок движений закрытия графика.
Процедура ЗапланироватьПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть, ПоГрафику = Неопределено) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	ТабЧасть.Заказ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ДоступенДляРасхода
		|			ТОГДА НАЧАЛОПЕРИОДА(ТабЧасть.ДатаПоступления, ДЕНЬ)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК ДатаСобытия,
		|	0 КАК ВНаличии,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ДоступенДляРасхода
		|			ТОГДА ТабЧасть.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Поступит,
		|	ТабЧасть.Количество КАК Заказано,
		|	0 КАК РезервироватьНаСкладе,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечению,
		|	0 КАК НеОбеспечивать,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка В (&Ссылка)
		|		И ТабЧасть.Количество <> 0
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
		
	Если ПоГрафику <> Ложь Тогда
		
		Тексты = Новый Массив();
		Тексты.Добавить(ТекстЗапросаОперации);
		
		ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	ТабЧасть.РаспоряжениеВГрафике КАК Заказ,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления,
		|	0 КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	0 КАК РезервироватьНаСкладе,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечению,
		|	0 КАК НеОбеспечивать,
		|	ТабЧасть.КоличествоВГрафике КАК ЗакрытьГрафикПоступления,
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка В (&Ссылка)
		|		И ТабЧасть.ПоГрафику
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
		
		Тексты.Добавить(ТекстЗапросаОперации);
		ТекстЗапросаОперации = СтрСоединить(Тексты, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	КонецЕсли;
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации, "ЗапасыИПотребности");
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра ЗапасыИПотребности.
// Отражает операцию отмены запланированного прихода товаров на склад.
// Увеличивает фактический и свободный остаток товара на складе, работы в подразделении.
// Будет уменьшен запас и свободный остаток в ожидаемом приходе (распоряжении).
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений Из Строка - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка               - ДокументСсылка                        - отражаемый документ.
//   * Период               - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура         - СправочникСсылка.Номенклатура         - приходуемая номенклатура.
//   * Характеристика       - СправочникСсылка.ХарактеристикиНоменклатуры - приходуемая характеристика номенклатуры.
//   * Склад                - СправочникСсылка.Склады -             - склад оприходования.
//   * Назначение           - СправочникСсылка.Назначения -         - назначение приходуемой номенклатуры.
//   * Количество           - Число                                 - отменяемое количество.
//   * РаспоряжениеВГрафике - ОпределяемыйТип.ОжидаемоеПоступление  - документ планирования прихода запаса,
//                                                                    запасы которого будут уменьшены.
Процедура ОтменитьЗапланированныйПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	ТабЧасть.РаспоряжениеВГрафике КАК Заказ,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСобытия,
		|	0 КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	0 КАК РезервироватьНаСкладе,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечению,
		|	0 КАК НеОбеспечивать,
		|	ТабЧасть.Количество КАК ЗакрытьГрафикПоступления,
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации, "ЗапасыИПотребности");
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра ЗапасыИПотребности,
// отражающего операцию планирования графика отгрузки по датам, а также движения товаров к отгрузке.
//
// Параметры:
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Период                                     - Дата                                   - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура          - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -              - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -          - назначение номенклатуры.
//   * Количество                                 - Число                                  - заказываемое количество.
//   * ВариантОбеспечения                         - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения.
//   * ЗаказНаОтгрузку                            - ОпределяемыйТип.ОжидаемаяОтгрузка      - заказ.
//   * ЖелаемаяДатаОтгрузки                       - Дата                                   - планируемая дата списания запасов.
//   * ДатаПриема - Дата - 
//   * ПорядокПоПриоритету - Число - 
//   * ГотовКОбеспечению - Булево - 
//   * ГотовКОтгрузке - Булево - 
//  ИгнорироватьГотовностьКОбеспечению - Булево -
//
//	Возвращаемое значение:
//   Строка - Текст запроса.
Функция ТекстЗапросаРаспоряжениеНаОбеспечениеИОтгрузку(ТекстЗапросаТабЧасть, ИгнорироватьГотовностьКОбеспечению) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСобытия,
		|	ТабЧасть.Количество КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	0 КАК РезервироватьНаСкладе,
		|	0 КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	0 КАК КОбеспечению,
		|	0 КАК НеОбеспечивать,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	ТабЧасть.ЗапланированныйРасходРаспределенногоЗапаса КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И ТабЧасть.Количество <> 0
		|		И ТабЧасть.ГотовКОтгрузке
		|		И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабЧасть.Ссылка КАК Регистратор,
		|	ТабЧасть.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТабЧасть.Номенклатура КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад КАК Склад,
		|	ТабЧасть.Назначение КАК Назначение,
		|	ТабЧасть.ЗаказНаОтгрузку КАК Заказ,
		|	ВЫБОР КОГДА ТабЧасть.ЖелаемаяДатаОтгрузки = НЕОПРЕДЕЛЕНО ТОГДА
		|				ДАТАВРЕМЯ(1,1,1)
		|			ИНАЧЕ
		|				ТабЧасть.ЖелаемаяДатаОтгрузки
		|		КОНЕЦ КАК ДатаСобытия,
		|	0 КАК ВНаличии,
		|	0 КАК Поступит,
		|	0 КАК Заказано,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ВариантОбеспечения В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить))
		|			ТОГДА ТабЧасть.Количество
		|			ИНАЧЕ 0
		|	КОНЕЦ КАК РезервироватьНаСкладе,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ГотовКОбеспечению И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.РезервироватьПоМереПоступления)
		|			ТОГДА ТабЧасть.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РезервироватьПоМереПоступления,
		|	0 КАК ОтложитьРезервирование,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ГотовКОбеспечению И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению)
		|			ТОГДА ТабЧасть.Количество
		|			ИНАЧЕ 0
		|	КОНЕЦ КАК КОбеспечению,
		|	ВЫБОР
		|		КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|				ИЛИ НЕ ТабЧасть.ГотовКОбеспечению И ТабЧасть.ВариантОбеспечения В(
		|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.РезервироватьПоМереПоступления),
		|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.КОбеспечению))
		|			ТОГДА ТабЧасть.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НеОбеспечивать,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	НЕОПРЕДЕЛЕНО КАК ОтгружаемыйЗаказ,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И ТабЧасть.Количество <> 0
		|		И НЕ (ТабЧасть.ГотовКОтгрузке
		|				И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить))
		|		И ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
	
	
	Если ИгнорироватьГотовностьКОбеспечению Тогда
	
		ТекстЗапросаОперации = СтрЗаменить(ТекстЗапросаОперации, "ТабЧасть.ГотовКОбеспечению", "ИСТИНА");
	
	КонецЕсли;
	
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	ПроведениеДокументов.ПодготовитьТекстЗапросаОтраженияДокумента(ТекстЗапросаОперации, ТекстыЗапросовТаблицДокумента);
	
	Возврат ТекстЗапросаОперации;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции обслуживающие регистр накопления ЗапасыИПотребности

Процедура ПередЗаписьюДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Набор = Документ.Движения.ЗапасыИПотребности;
	
	Если Набор.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц; // здесь есть временная таблица изменений регистра Реестр документов.
	
	// Для нового документа расчет и так идет по всем записям набора, так как все они есть в таблице изменений набора.
	ИзменилосьМестоВОчереди =
		Метаданные.ОпределяемыеТипы.ОжидаемаяОтгрузка.Тип.СодержитТип(ТипЗнч(Набор.Отбор.Регистратор.Значение))
		И Набор.ДополнительныеСвойства.Свойство("СвойстваДокумента") // при пакетном проведении этапов свойства документа могут быть не инициализированы.
		И Набор.ДополнительныеСвойства.СвойстваДокумента.РежимЗаписи = РежимЗаписиДокумента.Проведение
		И Не Набор.ДополнительныеСвойства.СвойстваДокумента.ЭтоНовый
		И ИзменилосьМестоВОчереди(Запрос);
		
	Если ИзменилосьМестоВОчереди Тогда
		Набор.ДополнительныеСвойства.Вставить("ИзменилосьМестоВОчередиРаспределенияЗапасов", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписиДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Возврат; // в текущей конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры

Процедура ЗапасыИПотребностиДвиженияПриЗаписиВоВременнуюТаблицу(Запрос, ЕстьПолеАктивность) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Движения.Регистратор КАК Регистратор,
		|	Движения.Номенклатура КАК Номенклатура,
		|	Движения.Характеристика КАК Характеристика,
		|	Движения.Склад КАК Склад,
		|	Движения.Назначение КАК Назначение,
		|	Движения.Заказ КАК Заказ,
		|	Движения.ОтгружаемыйЗаказ КАК ОтгружаемыйЗаказ,
		|	Движения.ДатаСобытия КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА Движения.ВНаличии
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВНаличииРасход,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.ВНаличии
		|		ИНАЧЕ - Движения.ВНаличии
		|	КОНЕЦ КАК ВНаличии,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.Поступит
		|		ИНАЧЕ - Движения.Поступит
		|	КОНЕЦ КАК Поступит,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.Заказано
		|		ИНАЧЕ - Движения.Заказано
		|	КОНЕЦ КАК Заказано,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.РезервироватьНаСкладе
		|		ИНАЧЕ - Движения.РезервироватьНаСкладе
		|	КОНЕЦ КАК РезервироватьНаСкладе,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.РезервироватьПоМереПоступления
		|		ИНАЧЕ - Движения.РезервироватьПоМереПоступления
		|	КОНЕЦ КАК РезервироватьПоМереПоступления,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.ОтложитьРезервирование
		|		ИНАЧЕ - Движения.ОтложитьРезервирование
		|	КОНЕЦ КАК ОтложитьРезервирование,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.КОбеспечению
		|		ИНАЧЕ - Движения.КОбеспечению
		|	КОНЕЦ КАК КОбеспечению,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.НеОбеспечивать
		|		ИНАЧЕ - Движения.НеОбеспечивать
		|	КОНЕЦ КАК НеОбеспечивать,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.ЗакрытьГрафикПоступления
		|		ИНАЧЕ - Движения.ЗакрытьГрафикПоступления
		|	КОНЕЦ КАК ЗакрытьГрафикПоступления,
		|	ВЫБОР
		|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА Движения.ЗакрытьГрафикОтгрузки
		|		ИНАЧЕ - Движения.ЗакрытьГрафикОтгрузки
		|	КОНЕЦ КАК ЗакрытьГрафикОтгрузки
		|ПОМЕСТИТЬ ДвиженияПриЗаписи
		|ИЗ
		|	&НаборЗаписейЗапасыИПотребности КАК Движения
		|ГДЕ
		|	&ПроверятьАктивность";
	Подстановка = ?(ЕстьПолеАктивность, "Движения.Активность", "ИСТИНА");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПроверятьАктивность", Подстановка);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗапасыИПотребностиИзменениеВоВременнуюТаблицу(Запрос) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Изменения.Номенклатура КАК Номенклатура,
		|	Изменения.Характеристика КАК Характеристика,
		|	Изменения.Склад КАК Склад,
		|	Изменения.Назначение КАК Назначение,
		|	ВЫБОР
		|		КОГДА Изменения.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА Изменения.ОтгружаемыйЗаказ
		|		ИНАЧЕ Изменения.Заказ
		|	КОНЕЦ КАК Заказ,
		|	Изменения.ДатаСобытия КАК ДатаСобытия,
		|	СУММА(Изменения.ВНаличииРасход) КАК ВНаличииРасход,
		|	СУММА(Изменения.ВНаличии) КАК ВНаличии,
		|	СУММА(Изменения.Поступит) КАК Поступит,
		|	СУММА(Изменения.Заказано) КАК Заказано,
		|	СУММА(Изменения.РезервироватьНаСкладе) КАК РезервироватьНаСкладе,
		|	СУММА(Изменения.РезервироватьПоМереПоступления) КАК РезервироватьПоМереПоступления,
		|	СУММА(Изменения.ОтложитьРезервирование) КАК ОтложитьРезервирование,
		|	СУММА(Изменения.КОбеспечению) КАК КОбеспечению,
		|	СУММА(Изменения.НеОбеспечивать) КАК НеОбеспечивать,
		|	СУММА(Изменения.ЗакрытьГрафикПоступления) КАК ЗакрытьГрафикПоступления,
		|	СУММА(Изменения.ЗакрытьГрафикОтгрузки) КАК ЗакрытьГрафикОтгрузки
		|ПОМЕСТИТЬ ЗапасыИПотребностиИзменение
		|ИЗ(
		|	ВЫБРАТЬ
		|		ДвиженияПриЗаписи.Номенклатура КАК Номенклатура,
		|		ДвиженияПриЗаписи.Характеристика КАК Характеристика,
		|		ДвиженияПриЗаписи.Склад КАК Склад,
		|		ДвиженияПриЗаписи.Назначение КАК Назначение,
		|		ДвиженияПриЗаписи.Заказ КАК Заказ,
		|		ДвиженияПриЗаписи.ОтгружаемыйЗаказ КАК ОтгружаемыйЗаказ,
		|		ДвиженияПриЗаписи.ДатаСобытия КАК ДатаСобытия,
		|		ДвиженияПриЗаписи.ВНаличииРасход КАК ВНаличииРасход,
		|		ДвиженияПриЗаписи.ВНаличии КАК ВНаличии,
		|		ДвиженияПриЗаписи.Поступит КАК Поступит,
		|		ДвиженияПриЗаписи.Заказано КАК Заказано,
		|		ДвиженияПриЗаписи.РезервироватьНаСкладе КАК РезервироватьНаСкладе,
		|		ДвиженияПриЗаписи.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
		|		ДвиженияПриЗаписи.ОтложитьРезервирование КАК ОтложитьРезервирование,
		|		ДвиженияПриЗаписи.КОбеспечению КАК КОбеспечению,
		|		ДвиженияПриЗаписи.НеОбеспечивать КАК НеОбеспечивать,
		|		ДвиженияПриЗаписи.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления,
		|		ДвиженияПриЗаписи.ЗакрытьГрафикОтгрузки КАК ЗакрытьГрафикОтгрузки
		|	ИЗ
		|		ДвиженияПриЗаписи КАК ДвиженияПриЗаписи
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДвиженияПередЗаписью.Номенклатура КАК Номенклатура,
		|		ДвиженияПередЗаписью.Характеристика КАК Характеристика,
		|		ДвиженияПередЗаписью.Склад КАК Склад,
		|		ДвиженияПередЗаписью.Назначение КАК Назначение,
		|		ДвиженияПередЗаписью.Заказ КАК Заказ,
		|		ДвиженияПередЗаписью.ОтгружаемыйЗаказ КАК ОтгружаемыйЗаказ,
		|		ДвиженияПередЗаписью.ДатаСобытия КАК ДатаСобытия,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА - ДвиженияПередЗаписью.ВНаличии
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ВНаличииРасход,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.ВНаличии
		|			ИНАЧЕ ДвиженияПередЗаписью.ВНаличии
		|		КОНЕЦ КАК ВНаличии,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.Поступит
		|			ИНАЧЕ ДвиженияПередЗаписью.Поступит
		|		КОНЕЦ КАК Поступит,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.Заказано
		|			ИНАЧЕ ДвиженияПередЗаписью.Заказано
		|		КОНЕЦ КАК Заказано,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.РезервироватьНаСкладе
		|			ИНАЧЕ ДвиженияПередЗаписью.РезервироватьНаСкладе
		|		КОНЕЦ КАК РезервироватьНаСкладе,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.РезервироватьПоМереПоступления
		|			ИНАЧЕ ДвиженияПередЗаписью.РезервироватьПоМереПоступления
		|		КОНЕЦ КАК РезервироватьПоМереПоступления,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.ОтложитьРезервирование
		|			ИНАЧЕ ДвиженияПередЗаписью.ОтложитьРезервирование
		|		КОНЕЦ КАК ОтложитьРезервирование,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.КОбеспечению
		|			ИНАЧЕ ДвиженияПередЗаписью.КОбеспечению
		|		КОНЕЦ КАК КОбеспечению,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.НеОбеспечивать
		|			ИНАЧЕ ДвиженияПередЗаписью.НеОбеспечивать
		|		КОНЕЦ КАК НеОбеспечивать,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.ЗакрытьГрафикПоступления
		|			ИНАЧЕ ДвиженияПередЗаписью.ЗакрытьГрафикПоступления
		|		КОНЕЦ КАК ЗакрытьГрафикПоступления,
		|		ВЫБОР
		|			КОГДА ДвиженияПередЗаписью.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА - ДвиженияПередЗаписью.ЗакрытьГрафикОтгрузки
		|			ИНАЧЕ ДвиженияПередЗаписью.ЗакрытьГрафикОтгрузки
		|		КОНЕЦ КАК ЗакрытьГрафикОтгрузки
		|	ИЗ
		|		РегистрНакопления.ЗапасыИПотребности КАК ДвиженияПередЗаписью
		|	ГДЕ
		|		ДвиженияПередЗаписью.Регистратор В(&Регистратор)
		|			И ДвиженияПередЗаписью.Активность) КАК Изменения
		|СГРУППИРОВАТЬ ПО
		|	Изменения.Номенклатура,
		|	Изменения.Характеристика,
		|	Изменения.Склад,
		|	Изменения.Назначение,
		|	ВЫБОР
		|		КОГДА Изменения.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА Изменения.ОтгружаемыйЗаказ
		|		ИНАЧЕ Изменения.Заказ
		|	КОНЕЦ,
		|	Изменения.ДатаСобытия
		|ИМЕЮЩИЕ
		|	СУММА(Изменения.ВНаличии) <> 0
		|		ИЛИ СУММА(Изменения.Поступит) <> 0
		|		ИЛИ СУММА(Изменения.Заказано) <> 0
		|		ИЛИ СУММА(Изменения.РезервироватьНаСкладе) <> 0
		|		ИЛИ СУММА(Изменения.РезервироватьПоМереПоступления) <> 0
		|		ИЛИ СУММА(Изменения.ОтложитьРезервирование) <> 0
		|		ИЛИ СУММА(Изменения.КОбеспечению) <> 0
		|		ИЛИ СУММА(Изменения.НеОбеспечивать) <> 0
		|		ИЛИ СУММА(Изменения.ЗакрытьГрафикПоступления) <> 0
		|		ИЛИ СУММА(Изменения.ЗакрытьГрафикОтгрузки) <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, Заказ, ДатаСобытия";
	Запрос.Выполнить();
		
КонецПроцедуры

// Параметры:
//  Запрос - Запрос - 
Процедура ЗаписатьРаспределениеЗапасовНаПотребностиПоТаблицеРазличныеТовары(Запрос) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РазличныеТовары.Номенклатура                                     КАК Номенклатура,
		|	РазличныеТовары.Характеристика                                   КАК Характеристика,
		|	РазличныеТовары.Склад                                            КАК Склад,
		|	РазличныеТовары.Назначение                                       КАК Назначение,
		|	СУММА(ЕСТЬNULL(ОжидаемаяОтгрузка.РезервироватьПоМереПоступления, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(ОжидаемаяОтгрузка.ОтложитьРезервирование + ОжидаемаяОтгрузка.КОбеспечениюБезРезерва, 0)) КАК КоличествоБезРезерва,
		|	МАКСИМУМ(РазличныеТовары.РаспределятьЕслиОстатокНеотрицательный) КАК РаспределятьЕслиОстатокНеотрицательный
		|ПОМЕСТИТЬ Потребности
		|ИЗ
		|	РазличныеТовары КАК РазличныеТовары
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК ОжидаемаяОтгрузка
		|		ПО ОжидаемаяОтгрузка.Номенклатура    = РазличныеТовары.Номенклатура
		|		 И ОжидаемаяОтгрузка.Характеристика  = РазличныеТовары.Характеристика
		|		 И ОжидаемаяОтгрузка.Склад           = РазличныеТовары.Склад
		|		 И ОжидаемаяОтгрузка.Назначение      = РазличныеТовары.Назначение
		|		 И ОжидаемаяОтгрузка.Состояние       = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
		|		 И (ОжидаемаяОтгрузка.РезервироватьПоМереПоступления > 0
		|			ИЛИ ОжидаемаяОтгрузка.ОтложитьРезервирование > 0
		|			ИЛИ ОжидаемаяОтгрузка.КОбеспечениюБезРезерва > 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	РазличныеТовары.Номенклатура,
		|	РазличныеТовары.Характеристика,
		|	РазличныеТовары.Склад,
		|	РазличныеТовары.Назначение
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Потребности.Количество                             КАК Количество,
		|	Потребности.КоличествоБезРезерва                   КАК КоличествоБезРезерва,
		|	Остатки.Состояние                                  КАК Состояние,
		|	1                                                  КАК ТипЗаписиРаспределенияЗапасов,
		|	Остатки.Номенклатура                               КАК Номенклатура,
		|	Остатки.Характеристика                             КАК Характеристика,
		|	Остатки.Склад                                      КАК Склад,
		|	Остатки.Назначение                                 КАК Назначение,
		|	Остатки.ЗаказНаПоступление                         КАК ЗаказНаПоступление,
		|	Остатки.ДатаПоступления                            КАК ДатаПоступления,
		|	Остатки.Запас                                      КАК Запас,
		|	Остатки.Резерв                                     КАК Резерв,
		|	Остатки.Свободно                                   КАК Свободно,
		|	Остатки.Излишек                                    КАК Изилшек,
		|	Остатки.ВНаличии                                   КАК ВНаличии,
		|	Потребности.РаспределятьЕслиОстатокНеотрицательный
		|		И Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) КАК РаспределятьЕслиОстатокНеотрицательный,
		|	ВЫБОР КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) ТОГДА
		|					1
		|				КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление) ТОГДА
		|					2
		|				КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное) ТОГДА
		|					3
		|		КОНЕЦ КАК Порядок
		|ИЗ
		|	Потребности КАК Потребности
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК Остатки
		|		ПО Остатки.Номенклатура    = Потребности.Номенклатура
		|		 И Остатки.Характеристика  = Потребности.Характеристика
		|		 И Остатки.Склад           = Потребности.Склад
		|		 И Остатки.Назначение      = Потребности.Назначение
		|		 И Остатки.Состояние В(
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное))
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, Порядок, ДатаПоступления, ЗаказНаПоступление
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Потребности";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[1].Выбрать();
	
	Количество = 0;
	КоличествоБезРезерва = 0;
	
	Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
	Набор.Отбор.ТипЗаписиРаспределенияЗапасов.Установить(1);
	Набор.Отбор.ЗаказНаПоступление.Использование = Истина;
	Набор.Отбор.ЗаказНаОтгрузку.Использование = Истина;
	Набор.Отбор.ЗаказНаОтгрузку.Значение = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Номенклатура <> Набор.Отбор.Номенклатура.Значение
				Или Выборка.Характеристика <> Набор.Отбор.Характеристика.Значение
				Или Выборка.Склад <> Набор.Отбор.Склад.Значение
				Или Выборка.Назначение <> Набор.Отбор.Назначение.Значение Тогда
				
				Набор.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
				Набор.Отбор.Характеристика.Установить(Выборка.Характеристика);
				Набор.Отбор.Склад.Установить(Выборка.Склад);
				Набор.Отбор.Назначение.Установить(Выборка.Назначение);
				
				Количество = Выборка.Количество;
				КоличествоБезРезерва = Выборка.КоличествоБезРезерва;
				
		КонецЕсли;
		
		Если Не Выборка.РаспределятьЕслиОстатокНеотрицательный Или Выборка.Свободно >= 0 Тогда
			
			КоличествоРаспределить = Мин(Количество, Макс(Выборка.Запас - Выборка.Резерв, 0));
			Свободно = Выборка.Запас - Выборка.Резерв - КоличествоРаспределить;
			Количество = Количество - КоличествоРаспределить;
			КоличествоБезРезерваРаспределить = Мин(КоличествоБезРезерва, Макс(Свободно, 0));
			Излишек = Свободно - КоличествоБезРезерваРаспределить;
			КоличествоБезРезерва = КоличествоБезРезерва - КоличествоБезРезерваРаспределить;
			Набор.Отбор.Состояние.Установить(Выборка.Состояние);
			Набор.Отбор.ЗаказНаПоступление.Значение = Выборка.ЗаказНаПоступление;
			Набор.Отбор.ДатаПоступления.Установить(Выборка.ДатаПоступления);
			
			Если Выборка.Запас <> 0
					Или Выборка.Резерв <> 0
					Или Свободно <> 0
					Или Излишек <> 0
					Или Выборка.ВНаличии <> 0 Тогда
					
				НоваяСтрока = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.Свободно = Свободно;
				НоваяСтрока.Излишек = Излишек;
				
			КонецЕсли;
			
			Набор.Записать();
			Набор.Очистить();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для пакетной работы с регистром сведений "Распределение запасов"

////////////////////////////////////////////////////////////////////////////////
// Служебные

// Параметры:
//  Таблица - ТаблицаЗначений - таблица в которую нужно добавить колонки.
Процедура ДобавитьКолонкиРегистра(Таблица) Экспорт
	
	ТаблицаРегистра = РегистрыНакопления.ЗапасыИПотребности.СоздатьНаборЗаписей().ВыгрузитьКолонки(
		"Регистратор,ЗакрытьГрафикОтгрузки,ЗакрытьГрафикПоступления");
	Если Таблица.Колонки.Найти("Регистратор") = Неопределено Тогда
		Таблица.Колонки.Добавить("Регистратор", ТаблицаРегистра.Колонки.Регистратор.ТипЗначения);
	КонецЕсли;
	Если Таблица.Колонки.Найти("ЗакрытьГрафикОтгрузки") = Неопределено Тогда
		Таблица.Колонки.Добавить("ЗакрытьГрафикОтгрузки", ТаблицаРегистра.Колонки.ЗакрытьГрафикОтгрузки.ТипЗначения);
	КонецЕсли;
	Если Таблица.Колонки.Найти("ЗакрытьГрафикПоступления") = Неопределено Тогда
		Таблица.Колонки.Добавить("ЗакрытьГрафикПоступления", ТаблицаРегистра.Колонки.ЗакрытьГрафикПоступления.ТипЗначения);
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  ПолноеИмяДокумента - Строка - полное имя документа.
//  ВременныеТаблицы - Массив из Строка - массив в который необходимо добавлять тексты временных таблиц
Процедура ТекстыЗапросовВременныхТаблицПроведенияДокументовПакетно(ПолноеИмяДокумента, ВременныеТаблицы) Экспорт
	
	Если ПолноеИмяДокумента = "Документ.ПриходныйОрдерНаТовары" Тогда
		
		Текст =
			"ВЫБРАТЬ
			|	ТабЧасть.Ссылка КАК Ссылка,
			|	ТабЧасть.Номенклатура КАК Номенклатура,
			|	ТабЧасть.Характеристика КАК Характеристика,
			|	ТабЧасть.Назначение КАК Назначение,
			|	ТабЧасть.Серия КАК Серия,
			|	МАКСИМУМ(ТабЧасть.Упаковка) КАК Упаковка
			|ПОМЕСТИТЬ ТоварныеМеста
			|ИЗ
			|	Документ.ПриходныйОрдерНаТовары.Товары КАК ТабЧасть
			|ГДЕ
			|	ТабЧасть.Ссылка.Проведен
			|		И НЕ ТабЧасть.ЭтоУпаковочныйЛист
			|		И ТабЧасть.Количество <> 0
			|		И ТабЧасть.Упаковка.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
			|		И ТабЧасть.Ссылка.Статус = Значение(Перечисление.СтатусыПриходныхОрдеров.Принят)
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.Ссылка,
			|	ТабЧасть.Номенклатура,
			|	ТабЧасть.Характеристика,
			|	ТабЧасть.Назначение,
			|	ТабЧасть.Серия
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка, Номенклатура, Характеристика, Назначение, Серия, Упаковка";
		ВременныеТаблицы.Добавить(Текст);
			
	ИначеЕсли ПолноеИмяДокумента = "Документ.ОрдерНаОтражениеИзлишковТоваров" Тогда
		
		Текст =
			"ВЫБРАТЬ
			|	ТабЧасть.Ссылка КАК Ссылка,
			|	ТабЧасть.Номенклатура КАК Номенклатура,
			|	ТабЧасть.Характеристика КАК Характеристика,
			|	ТабЧасть.Назначение КАК Назначение,
			|	ТабЧасть.Серия КАК Серия,
			|	МАКСИМУМ(ТабЧасть.Упаковка) КАК Упаковка
			|ПОМЕСТИТЬ ТоварныеМеста
			|ИЗ
			|	Документ.ОрдерНаОтражениеИзлишковТоваров.Товары КАК ТабЧасть
			|ГДЕ
			|	ТабЧасть.Ссылка.Проведен
			|		И ТабЧасть.Упаковка.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.Ссылка,
			|	ТабЧасть.Номенклатура,
			|	ТабЧасть.Характеристика,
			|	ТабЧасть.Назначение,
			|	ТабЧасть.Серия
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка, Номенклатура, Характеристика, Назначение, Серия, Упаковка";
		ВременныеТаблицы.Добавить(Текст);
			
	ИначеЕсли ПолноеИмяДокумента = "Документ.ОрдерНаОтражениеНедостачТоваров" Тогда
		
		Текст =
			"ВЫБРАТЬ
			|	ТабЧасть.Ссылка КАК Ссылка,
			|	ТабЧасть.Номенклатура КАК Номенклатура,
			|	ТабЧасть.Характеристика КАК Характеристика,
			|	ТабЧасть.Назначение КАК Назначение,
			|	ТабЧасть.Серия КАК Серия,
			|	МАКСИМУМ(ТабЧасть.Упаковка) КАК Упаковка
			|ПОМЕСТИТЬ ТоварныеМеста
			|ИЗ
			|	Документ.ОрдерНаОтражениеНедостачТоваров.Товары КАК ТабЧасть
			|ГДЕ
			|	ТабЧасть.Ссылка.Проведен
			|		И ТабЧасть.Упаковка.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.Ссылка,
			|	ТабЧасть.Номенклатура,
			|	ТабЧасть.Характеристика,
			|	ТабЧасть.Назначение,
			|	ТабЧасть.Серия
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка, Номенклатура, Характеристика, Назначение, Серия, Упаковка";
		ВременныеТаблицы.Добавить(Текст);
	
	ИначеЕсли ПолноеИмяДокумента = "Документ.ОрдерНаОтражениеПересортицыТоваров" Тогда
	
		Текст =
			"ВЫБРАТЬ
			|	ТабЧасть.Ссылка КАК Ссылка,
			|	ТабЧасть.Номенклатура КАК Номенклатура,
			|	ТабЧасть.Характеристика КАК Характеристика,
			|	ТабЧасть.Назначение КАК Назначение,
			|	ТабЧасть.Серия КАК Серия,
			|	МАКСИМУМ(ТабЧасть.Упаковка) КАК Упаковка,
			|	ТабЧасть.НоменклатураОприходование КАК НоменклатураОприходование,
			|	ТабЧасть.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
			|	ТабЧасть.НазначениеОприходование КАК НазначениеОприходование,
			|	ТабЧасть.СерияОприходование КАК СерияОприходование,
			|	МАКСИМУМ(ТабЧасть.УпаковкаОприходование) КАК УпаковкаОприходование
			|ПОМЕСТИТЬ ТоварныеМеста
			|ИЗ
			|	Документ.ОрдерНаОтражениеПересортицыТоваров.Товары КАК ТабЧасть
			|ГДЕ
			|	ТабЧасть.Ссылка.Проведен
			|		И ТабЧасть.Упаковка.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.Ссылка,
			|	ТабЧасть.Номенклатура,
			|	ТабЧасть.Характеристика,
			|	ТабЧасть.Назначение,
			|	ТабЧасть.Серия,
			|	ТабЧасть.НоменклатураОприходование,
			|	ТабЧасть.ХарактеристикаОприходование,
			|	ТабЧасть.НазначениеОприходование,
			|	ТабЧасть.СерияОприходование
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка, Номенклатура, Характеристика, Назначение, Серия, Упаковка,
			|	НоменклатураОприходование, ХарактеристикаОприходование, НазначениеОприходование, СерияОприходование, УпаковкаОприходование";
		ВременныеТаблицы.Добавить(Текст);
	
	ИначеЕсли ПолноеИмяДокумента = "Документ.ОрдерНаОтражениеПорчиТоваров" Тогда
	
		Текст =
			"ВЫБРАТЬ
			|	ТабЧасть.Ссылка КАК Ссылка,
			|	ТабЧасть.Номенклатура КАК Номенклатура,
			|	ТабЧасть.Характеристика КАК Характеристика,
			|	ТабЧасть.Назначение КАК Назначение,
			|	ТабЧасть.Серия КАК Серия,
			|	МАКСИМУМ(ТабЧасть.Упаковка) КАК Упаковка,
			|	ТабЧасть.НоменклатураОприходование КАК НоменклатураОприходование,
			|	ТабЧасть.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
			|	ВЫБОР КОГДА ТабЧасть.ПодНазначение ТОГДА
			|				ТабЧасть.Назначение
			|			ИНАЧЕ
			|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
			|		КОНЕЦ КАК НазначениеОприходование,
			|	МАКСИМУМ(ТабЧасть.УпаковкаОприходование) КАК УпаковкаОприходование
			|ПОМЕСТИТЬ ТоварныеМеста
			|ИЗ
			|	Документ.ОрдерНаОтражениеПорчиТоваров.Товары КАК ТабЧасть
			|ГДЕ
			|	ТабЧасть.Ссылка.Проведен
			|		И ТабЧасть.Упаковка.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.Ссылка,
			|	ТабЧасть.Номенклатура,
			|	ТабЧасть.Характеристика,
			|	ТабЧасть.Назначение,
			|	ТабЧасть.Серия,
			|	ТабЧасть.НоменклатураОприходование,
			|	ТабЧасть.ХарактеристикаОприходование,
			|	ВЫБОР КОГДА ТабЧасть.ПодНазначение ТОГДА
			|				ТабЧасть.Назначение
			|			ИНАЧЕ
			|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
			|		КОНЕЦ
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка, Номенклатура, Характеристика, Назначение, Серия, Упаковка,
			|	НоменклатураОприходование, ХарактеристикаОприходование, НазначениеОприходование, УпаковкаОприходование";
		ВременныеТаблицы.Добавить(Текст);
			
	ИначеЕсли ПолноеИмяДокумента = "Документ.КорректировкаИзлишковНедостачПоТоварнымМестам" Тогда
	
		Текст =
			"ВЫБРАТЬ
			|	ТабЧасть.Ссылка КАК Ссылка,
			|	ТабЧасть.Номенклатура КАК Номенклатура,
			|	ТабЧасть.Характеристика КАК Характеристика,
			|	ТабЧасть.Назначение КАК Назначение,
			|	ТабЧасть.Серия КАК Серия,
			|	ТабЧасть.ВидОперации КАК ВидОперации,
			|	МАКСИМУМ(ТабЧасть.Упаковка) КАК Упаковка
			|ПОМЕСТИТЬ ТоварныеМеста
			|ИЗ
			|	Документ.КорректировкаИзлишковНедостачПоТоварнымМестам.Товары КАК ТабЧасть
			|ГДЕ
			|	ТабЧасть.Ссылка.Проведен
			|		И ТабЧасть.Упаковка.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.Ссылка,
			|	ТабЧасть.Номенклатура,
			|	ТабЧасть.Характеристика,
			|	ТабЧасть.Назначение,
			|	ТабЧасть.Серия,
			|	ТабЧасть.ВидОперации
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка, Номенклатура, Характеристика, Назначение, Серия, ВидОперации, Упаковка";
		ВременныеТаблицы.Добавить(Текст);
			
	ИначеЕсли ПолноеИмяДокумента = "Документ.ПересчетТоваров" Тогда
		
		Текст =
			"ВЫБРАТЬ
			|	ТабЧасть.Ссылка КАК Ссылка,
			|	ТабЧасть.Номенклатура КАК Номенклатура,
			|	ТабЧасть.Характеристика КАК Характеристика,
			|	ТабЧасть.Назначение КАК Назначение,
			|	ТабЧасть.Упаковка КАК ТоварноеМесто,
			|	ВЫБОР
			|		КОГДА ТабЧасть.СтатусУказанияСерий В (4, 6, 8, 10, 14)
			|			ТОГДА ТабЧасть.Серия
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|	КОНЕЦ КАК Серия,
			|	СУММА(ТабЧасть.КоличествоУпаковокФакт - ТабЧасть.КоличествоУпаковок) КАК КоличествоОстаток
			|ПОМЕСТИТЬ ТоварныеМестаВДокументе
			|ИЗ
			|	Документ.ПересчетТоваров.Товары КАК ТабЧасть
			|ГДЕ
			|	ТабЧасть.Ссылка.Проведен
			|		И ТабЧасть.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПересчетовТоваров.Выполнено)
			|		И ТабЧасть.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
			|		И ТабЧасть.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач <= ТабЧасть.Ссылка.Дата
			|		И ТабЧасть.Упаковка.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.Ссылка,
			|	ТабЧасть.Упаковка,
			|	ТабЧасть.Номенклатура,
			|	ТабЧасть.Характеристика,
			|	ТабЧасть.Назначение,
			|	ВЫБОР
			|		КОГДА ТабЧасть.СтатусУказанияСерий В (4, 6, 8, 10, 14)
			|			ТОГДА ТабЧасть.Серия
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|	КОНЕЦ
			|ИМЕЮЩИЕ
			|	СУММА(ТабЧасть.КоличествоУпаковокФакт - ТабЧасть.КоличествоУпаковок) <> 0
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка, Номенклатура, ТоварноеМесто";
		ВременныеТаблицы.Добавить(Текст);
			
	ИначеЕсли ПолноеИмяДокумента = "Документ.КорректировкаПоОрдеруНаТовары" Тогда
		
		Текст =
			"ВЫБРАТЬ
			|	ТабЧасть.Ссылка КАК Ссылка,
			|	ТабЧасть.Номенклатура КАК Номенклатура,
			|	ТабЧасть.Характеристика КАК Характеристика,
			|	ТабЧасть.Назначение КАК Назначение,
			|	ТабЧасть.Упаковка КАК ТоварноеМесто,
			|	ВЫБОР
			|		КОГДА ТабЧасть.СтатусУказанияСерий В (4, 6, 8, 10, 14)
			|			ТОГДА ТабЧасть.Серия
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|	КОНЕЦ КАК Серия,
			|	СУММА(ВЫБОР
			|			КОГДА ТабЧасть.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировокОстатковТоваров.ОтразитьИзлишек)
			|					ИЛИ ТабЧасть.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировокОстатковТоваров.ОтразитьИзлишекОставитьВЗонеОтгрузки)
			|				ТОГДА ТабЧасть.КоличествоУпаковок
			|			КОГДА ТабЧасть.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировокОстатковТоваров.ОтразитьНедостачу)
			|				ТОГДА -ТабЧасть.КоличествоУпаковок
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК КоличествоОстаток
			|ПОМЕСТИТЬ ТоварныеМестаВДокументе
			|ИЗ
			|	Документ.КорректировкаПоОрдеруНаТовары.Товары КАК ТабЧасть
			|ГДЕ
			|	ТабЧасть.Ссылка.Проведен
			|		И ТабЧасть.ВидОперации В (
			|			ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировокОстатковТоваров.ОтразитьИзлишек),
			|			ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировокОстатковТоваров.ОтразитьНедостачу),
			|			ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировокОстатковТоваров.ОтразитьИзлишекОставитьВЗонеОтгрузки))
			|		И ТабЧасть.Упаковка.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.Ссылка,
			|	ТабЧасть.Упаковка,
			|	ТабЧасть.Номенклатура,
			|	ТабЧасть.Характеристика,
			|	ТабЧасть.Назначение,
			|	ВЫБОР
			|		КОГДА ТабЧасть.СтатусУказанияСерий В (4, 6, 8, 10, 14)
			|			ТОГДА ТабЧасть.Серия
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|	КОНЕЦ
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА ТабЧасть.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировокОстатковТоваров.ОтразитьИзлишек)
			|					ИЛИ ТабЧасть.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировокОстатковТоваров.ОтразитьИзлишекОставитьВЗонеОтгрузки)
			|				ТОГДА ТабЧасть.КоличествоУпаковок
			|			КОГДА ТабЧасть.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировокОстатковТоваров.ОтразитьНедостачу)
			|				ТОГДА -ТабЧасть.КоличествоУпаковок
			|			ИНАЧЕ 0
			|		КОНЕЦ) <> 0
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка, Номенклатура, ТоварноеМесто";
		ВременныеТаблицы.Добавить(Текст);
	
	КонецЕсли;
	
	Если ПолноеИмяДокумента = "Документ.ПересчетТоваров"
			Или ПолноеИмяДокумента = "Документ.КорректировкаПоОрдеруНаТовары" Тогда
			
			Текст =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ТоварныеМестаОстатки.Ссылка КАК Ссылка,
				|	ТоварныеМестаОстатки.Номенклатура КАК Номенклатура,
				|	УпаковкиЕдиницыИзмерения.Ссылка КАК ТоварноеМесто,
				|	УпаковкиЕдиницыИзмерения.КоличествоУпаковок КАК КоличествоМест
				|ПОМЕСТИТЬ ТоварныеМестаВНоменклатуре
				|ИЗ
				|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварныеМестаВДокументе КАК ТоварныеМестаОстатки
				|		ПО (УпаковкиЕдиницыИзмерения.Владелец = ВЫБОР
				|				КОГДА ТоварныеМестаОстатки.Номенклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
				|					ТОГДА ТоварныеМестаОстатки.Номенклатура.Ссылка
				|				ИНАЧЕ ТоварныеМестаОстатки.Номенклатура.НаборУпаковок
				|			КОНЕЦ)
				|ГДЕ
				|	УпаковкиЕдиницыИзмерения.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
				|ИНДЕКСИРОВАТЬ ПО
				|	Ссылка, Номенклатура, ТоварноеМесто";
			ВременныеТаблицы.Добавить(Текст);
			
			Текст =
				"ВЫБРАТЬ
				|	ТабЧасть.Ссылка КАК Ссылка,
				|	ТабЧасть.Номенклатура КАК Номенклатура,
				|	ТабЧасть.Характеристика КАК Характеристика,
				|	ТабЧасть.Назначение КАК Назначение,
				|	ТабЧасть.Серия КАК Серия,
				|	МИНИМУМ(ВЫБОР
				|			КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ТабЧасть.КоличествоОстаток, 0) / ТоварныеМестаВНоменклатуре.КоличествоМест КАК ЧИСЛО(12, 0)))
				|					- ЕСТЬNULL(ТабЧасть.КоличествоОстаток, 0) / ТоварныеМестаВНоменклатуре.КоличествоМест <= 0
				|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ТабЧасть.КоличествоОстаток, 0) / ТоварныеМестаВНоменклатуре.КоличествоМест КАК ЧИСЛО(12, 0))
				|			ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ТабЧасть.КоличествоОстаток, 0) / ТоварныеМестаВНоменклатуре.КоличествоМест КАК ЧИСЛО(12, 0))) - 1
				|		КОНЕЦ) КАК КоличествоКомплектов
				|ПОМЕСТИТЬ ЦелыеКомплекты
				|ИЗ
				|	ТоварныеМестаВНоменклатуре КАК ТоварныеМестаВНоменклатуре
				|		
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварныеМестаВДокументе КАК ТабЧасть
				|		ПО ТабЧасть.Ссылка = ТоварныеМестаВНоменклатуре.Ссылка
				|			И ТабЧасть.Номенклатура = ТоварныеМестаВНоменклатуре.Номенклатура
				|			И ТабЧасть.ТоварноеМесто = ТоварныеМестаВНоменклатуре.ТоварноеМесто
				|		
				|СГРУППИРОВАТЬ ПО
				|	ТабЧасть.Ссылка,
				|	ТабЧасть.Номенклатура,
				|	ТабЧасть.Характеристика,
				|	ТабЧасть.Назначение,
				|	ТабЧасть.Серия
				|ИМЕЮЩИЕ
				|	МИНИМУМ(ВЫБОР
				|			КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ТабЧасть.КоличествоОстаток, 0) / ТоварныеМестаВНоменклатуре.КоличествоМест КАК ЧИСЛО(12, 0)))
				|					- ЕСТЬNULL(ТабЧасть.КоличествоОстаток, 0) / ТоварныеМестаВНоменклатуре.КоличествоМест <= 0
				|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ТабЧасть.КоличествоОстаток, 0) / ТоварныеМестаВНоменклатуре.КоличествоМест КАК ЧИСЛО(12, 0))
				|			ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ТабЧасть.КоличествоОстаток, 0) / ТоварныеМестаВНоменклатуре.КоличествоМест КАК ЧИСЛО(12, 0))) - 1
				|		КОНЕЦ) <> 0";
			ВременныеТаблицы.Добавить(Текст);
			
	КонецЕсли;
	
КонецПроцедуры

// Возвращаемое значение:
//  Структура - структура с полями:
//   * ТипыОжидаемоеПоступление - Массив из Тип -
Функция ЗначенияПараметровДляТекстовЗапросовПроведенияДокументов() Экспорт
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ТипыОжидаемоеПоступление",
		Метаданные.ОпределяемыеТипы.ОжидаемоеПоступление.Тип.Типы());
	
	Возврат ЗначенияПараметров;
	
КонецФункции

Процедура ОтразитьЗаданияКРаспределениюЗапасов(Документ, МенеджерВременныхТаблиц) Экспорт
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ЗапасыИПотребностиИзменение") = Неопределено
			Или Документ.ДополнительныеСвойства.Свойство("БлокироватьРаспределениеЗапасов")
				И Документ.ДополнительныеСвойства.БлокироватьРаспределениеЗапасов Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("РаспределениеЗапасовДвижения.ОтразитьЗаданияКРаспределениюЗапасов");

	Если РаспределениеЗапасов.ДосчитыватьРегистрРегламентнымЗаданием() Тогда
		
		Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененияДвижений.Номенклатура КАК Номенклатура,
			|	ИзмененияДвижений.Характеристика КАК Характеристика,
			|	ИзмененияДвижений.Склад КАК Склад,
			|	ИзмененияДвижений.Назначение КАК Назначение,
			|	НЕОПРЕДЕЛЕНО КАК ЗаказНаОтгрузку,
			|	0 КАК КСнятиюРезерва
			|ИЗ
			|	ЗапасыИПотребностиИзменение КАК ИзмененияДвижений
			|ГДЕ
			|	НЕ ТИПЗНАЧЕНИЯ(ИзмененияДвижений.Заказ) В(&ТипыОжидаемаяОтгрузка)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИзмененияДвижений.Номенклатура КАК Номенклатура,
			|	ИзмененияДвижений.Характеристика КАК Характеристика,
			|	ИзмененияДвижений.Склад КАК Склад,
			|	ИзмененияДвижений.Назначение КАК Назначение,
			|	ИзмененияДвижений.Заказ КАК ЗаказНаОтгрузку,
			|	ВЫБОР
			|		КОГДА СУММА(ИзмененияДвижений.ВНаличииРасход + ИзмененияДвижений.РезервироватьНаСкладе) > 0
			|			ТОГДА СУММА(ИзмененияДвижений.ВНаличииРасход + ИзмененияДвижений.РезервироватьНаСкладе)
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КСнятиюРезерва
			|ИЗ
			|	ЗапасыИПотребностиИзменение КАК ИзмененияДвижений
			|ГДЕ
			|	ТИПЗНАЧЕНИЯ(ИзмененияДвижений.Заказ) В(&ТипыОжидаемаяОтгрузка)
			|СГРУППИРОВАТЬ ПО
			|	ИзмененияДвижений.Номенклатура,
			|	ИзмененияДвижений.Характеристика,
			|	ИзмененияДвижений.Склад,
			|	ИзмененияДвижений.Назначение,
			|	ИзмененияДвижений.Заказ";
		
		Если Документ.Ссылка <> Неопределено И Документ.Движения.ЗапасыИПотребности.ДополнительныеСвойства.Свойство("ИзменилосьМестоВОчередиРаспределенияЗапасов") Тогда
			
			ТекстыЗапросов = Новый Массив();
			ТекстыЗапросов.Добавить(Текст);
			
			Текст =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Движения.Номенклатура КАК Номенклатура,
				|	Движения.Характеристика КАК Характеристика,
				|	Движения.Склад КАК Склад,
				|	Движения.Назначение КАК Назначение,
				|	Движения.Заказ КАК ЗаказНаОтгрузку,
				|	0 КАК КСнятиюРезерва
				|ИЗ
				|	РегистрНакопления.ЗапасыИПотребности КАК Движения
				|ГДЕ
				|	Движения.Регистратор = &Регистратор
				|		И Движения.Активность";
				
			ТекстыЗапросов.Добавить(Текст);
			ТекстВложенногоЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
			Текст =
				"ВЫБРАТЬ
				|	Набор.Номенклатура КАК Номенклатура,
				|	Набор.Характеристика КАК Характеристика,
				|	Набор.Склад КАК Склад,
				|	Набор.Назначение КАК Назначение,
				|	Набор.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
				|	МАКСИМУМ(Набор.КСнятиюРезерва) КАК КСнятиюРезерва
				|ИЗ
				|	ТекстВложенногоЗапроса КАК Набор
				|СГРУППИРОВАТЬ ПО
				|	Набор.Номенклатура,
				|	Набор.Характеристика,
				|	Набор.Склад,
				|	Набор.Назначение,
				|	Набор.ЗаказНаОтгрузку";
			Текст = СтрЗаменить(Текст, "ТекстВложенногоЗапроса", СтрШаблон("(%1)", ТекстВложенногоЗапроса));
			
		КонецЕсли;
		
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Регистратор", Документ.Ссылка);
		Запрос.Текст = Текст;
		Запрос.УстановитьПараметр("ТипыОжидаемаяОтгрузка", Метаданные.ОпределяемыеТипы.ОжидаемаяОтгрузка.Тип.Типы());
		
		Таблица = Запрос.Выполнить().Выгрузить();
		Таблица.Колонки.Добавить("ДатаЗаписи");
		Таблица.ЗаполнитьЗначения(ТекущаяУниверсальнаяДата(), "ДатаЗаписи");
		
		ОтложенныеЗадания.ОбработатьЗаданияОчереди("ЗаданияКРаспределениюЗапасов", Таблица);
		
	Иначе
		
		Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененияДвижений.Номенклатура КАК Номенклатура,
			|	ИзмененияДвижений.Характеристика КАК Характеристика,
			|	ИзмененияДвижений.Склад КАК Склад,
			|	ИзмененияДвижений.Назначение КАК Назначение
			|ПОМЕСТИТЬ ТоварыДляРаспределенияЗапасов
			|ИЗ
			|	ЗапасыИПотребностиИзменение КАК ИзмененияДвижений";
		
		Если Документ.Ссылка <> Неопределено И Документ.Движения.ЗапасыИПотребности.ДополнительныеСвойства.Свойство("ИзменилосьМестоВОчередиРаспределенияЗапасов") Тогда
			
			ТекстыЗапросов = Новый Массив();
			ТекстыЗапросов.Добавить(Текст);
			
			Текст =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Движения.Номенклатура КАК Номенклатура,
				|	Движения.Характеристика КАК Характеристика,
				|	Движения.Склад КАК Склад,
				|	Движения.Назначение КАК Назначение
				|ИЗ
				|	РегистрНакопления.ЗапасыИПотребности КАК Движения
				|ГДЕ
				|	Движения.Регистратор = &Регистратор
				|		И Движения.Активность";
				
			ТекстыЗапросов.Добавить(Текст);
			Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
			
		КонецЕсли;
		
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Регистратор", Документ.Ссылка);
		Запрос.Текст = Текст;
		Запрос.Выполнить();
		
		ЗапросСостояний = Новый Запрос();
		ЗапросСостояний.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
		РаспределениеЗапасов.ДобавитьВременныеТаблицыАктуализацииСостояний(ЗапросСостояний, "ТоварыДляРаспределенияЗапасов", "ПередЗаписью");
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ИзмененияДвижений.Номенклатура КАК Номенклатура,
			|	ИзмененияДвижений.Характеристика КАК Характеристика,
			|	ИзмененияДвижений.Склад КАК Склад,
			|	ИзмененияДвижений.Назначение КАК Назначение,
			|	ИзмененияДвижений.Заказ КАК ЗаказНаОтгрузку,
			|	СУММА(ИзмененияДвижений.ВНаличииРасход + ИзмененияДвижений.РезервироватьНаСкладе) КАК Отгрузка
			|ПОМЕСТИТЬ ИзменениеОстаткаПоТоварамДляКонтроляОстатков
			|ИЗ
			|	ЗапасыИПотребностиИзменение КАК ИзмененияДвижений
			|СГРУППИРОВАТЬ ПО
			|	ИзмененияДвижений.Номенклатура,
			|	ИзмененияДвижений.Характеристика,
			|	ИзмененияДвижений.Склад,
			|	ИзмененияДвижений.Назначение,
			|	ИзмененияДвижений.Заказ
			|ИМЕЮЩИЕ
			|	СУММА(ИзмененияДвижений.ВНаличииРасход + ИзмененияДвижений.РезервироватьНаСкладе) > 0
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад, Назначение, Заказ";
		Запрос.Выполнить();
		РаспределениеЗапасов.ЗаписатьРаспределениеЗапасовВТранзакцииПроведения(Запрос);
		Запрос.Текст = "УНИЧТОЖИТЬ ИзменениеОстаткаПоТоварамДляКонтроляОстатков";
		Запрос.Выполнить();
		
		РаспределениеЗапасов.ДобавитьВременныеТаблицыАктуализацииСостояний(ЗапросСостояний, "ТоварыДляРаспределенияЗапасов", "ПриЗаписи");
		РаспределениеЗапасов.ТаблицаИзмененийРаспределениеЗапасовДляРасчетаСостояний(ЗапросСостояний);
		
	КонецЕсли;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьПустуюТаблицуИзменениеОстаткаПоТоварамДляКонтроляОстатков(Запрос) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	NULL КАК Номенклатура,
		|	NULL КАК Характеристика,
		|	NULL КАК Склад,
		|	NULL КАК Назначение,
		|	NULL КАК ЗаказНаОтгрузку,
		|	0 КАК Отгрузка
		|ПОМЕСТИТЬ ИзменениеОстаткаПоТоварамДляКонтроляОстатков
		|ГДЕ
		|	ЛОЖЬ";
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации, ИмяРегистра)
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить(ИмяРегистра, ТекстЗапросаОперации);
	КонецЕсли;
	Возврат ТекстыШаблоновОтражения;
	
КонецФункции

Функция ИзменилосьМестоВОчереди(Запрос)
	
	Результат = Ложь;
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("РеестрДокументовИзменения") <> Неопределено Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА КАК ИзменилосьМестоВОчереди
			|ИЗ
			|	РеестрДокументовИзменения КАК Таблица
			|ГДЕ
			|	НЕ Таблица.ДополнительнаяЗаписьДоИзменения
			|		ИЛИ НЕ Таблица.ДополнительнаяЗапись
			|СГРУППИРОВАТЬ ПО
			|	Таблица.Ссылка
			|ИМЕЮЩИЕ
			|	НЕ МАКСИМУМ(Таблица.ПриоритетДоИзменения) ЕСТЬ NULL
			|		И НЕ МАКСИМУМ(Таблица.Приоритет) ЕСТЬ NULL
			|		И (МАКСИМУМ(Таблица.ПриоритетДоИзменения) <> МАКСИМУМ(Таблица.Приоритет)
			|			ИЛИ МАКСИМУМ(Таблица.ДатаДокументаИБ) <> МИНИМУМ(Таблица.ДатаДокументаИБ))";
		Результат = Не Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
