#Область СлужебныйПрограммныйИнтерфейс

Функция ПараметрыСоединенияССервисом(ДанныеСервера) Экспорт
	
	Возврат ИнтеграцияССервисомEDIСлужебный.ПараметрыСоединенияССервисом(ДанныеСервера);
	
КонецФункции

Функция СловарьСервиса() Экспорт
	
	Результат = Новый Структура;
	
	СтатусыЗаказа = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "inApprovingBySupplier",
		Перечисления.СтатусыЗаказаEDI.СогласуетсяПоставщиком);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "inApprovingByCustomer",
		Перечисления.СтатусыЗаказаEDI.СогласуетсяПокупателем);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "fulfilling",
		Перечисления.СтатусыЗаказаEDI.Выполняется);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "changeRequestInApprovingBySupplier",
		Перечисления.СтатусыЗаказаEDI.ИзмененияПодтверждаютсяПоставщиком);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "changeRequestInApprovingByCustomer",
		Перечисления.СтатусыЗаказаEDI.ИзмененияПодтверждаютсяПокупателем);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "fulfilledRequestInApproving",
		Перечисления.СтатусыЗаказаEDI.ПодтверждаетсяВыполнение);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "fulfilledRequestRejected",
		Перечисления.СтатусыЗаказаEDI.ВыполнениеОтклонено);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "fulfilled",
		Перечисления.СтатусыЗаказаEDI.Выполнен);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "cancelRequestInApprovingBySupllier",
		Перечисления.СтатусыЗаказаEDI.ОтменаПодтверждаетсяПоставщиком);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "cancelRequestInApprovingByCustomer",
		Перечисления.СтатусыЗаказаEDI.ОтменаПодтверждаетсяПокупателем);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтатусыЗаказа, "canceled",
		Перечисления.СтатусыЗаказаEDI.Отменен);
	Результат.Вставить("СтатусыЗаказа", СтатусыЗаказа);
	
	ДействияУчастников = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "created",
		Перечисления.ДействияПроцессаЗаказаEDI.Оформлен);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "sentForApproval",
		Перечисления.ДействияПроцессаЗаказаEDI.НаправленНаСогласование);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "approved",
		Перечисления.ДействияПроцессаЗаказаEDI.Согласовано);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "canceled",
		Перечисления.ДействияПроцессаЗаказаEDI.Отменен);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "changeRequestCreated",
		Перечисления.ДействияПроцессаЗаказаEDI.ЗапрошеноИзменение);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "changeRequestApproved",
		Перечисления.ДействияПроцессаЗаказаEDI.СогласованоИзменение);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "changeRequestRejected",
		Перечисления.ДействияПроцессаЗаказаEDI.ОтклоненоИзменение);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "fulfilmentRequestCreated",
		Перечисления.ДействияПроцессаЗаказаEDI.ОтмеченоВыполнение);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "fulfilmentRequestRejected",
		Перечисления.ДействияПроцессаЗаказаEDI.ОтклоненоВыполнение);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "fulfilmentRequestApproved",
		Перечисления.ДействияПроцессаЗаказаEDI.ПодтвержденоВыполнение);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "returnedToFulfilling",
		Перечисления.ДействияПроцессаЗаказаEDI.ВозвращенНаВыполнение);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "cancelRequestCreated",
		Перечисления.ДействияПроцессаЗаказаEDI.ЗапрошенаОтмена);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ДействияУчастников, "cancelRequestApproved ",
		Перечисления.ДействияПроцессаЗаказаEDI.ПодтвержденаОтмена);
	Результат.Вставить("ДействияУчастников", ДействияУчастников);
	
	СтороныУчастники = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтороныУчастники, "supplier",
		Перечисления.СтороныУчастникиСервисаEDI.Поставщик);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СтороныУчастники, "customer",
		Перечисления.СтороныУчастникиСервисаEDI.Покупатель);
	Результат.Вставить("СтороныУчастники", СтороныУчастники);

	ТипыДокументов = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ТипыДокументов, "ORDERS",
		Перечисления.ТипыДокументовEDI.ЗаказПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ТипыДокументов, "ORDERSP",
		Перечисления.ТипыДокументовEDI.ЗаказКлиента);
	Результат.Вставить("ТипыДокументов", ТипыДокументов);
	
	НаправленияСобытий = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(НаправленияСобытий, "inbound",
		Перечисления.НаправленияСобытийEDI.Входящее);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(НаправленияСобытий, "outbound",
		Перечисления.НаправленияСобытийEDI.Исходящее);
	Результат.Вставить("НаправленияСобытий", НаправленияСобытий);
	
	РежимРаботыСЗаказами = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РежимРаботыСЗаказами, "1",
		Перечисления.РежимыРаботыСЗаказамиКлиентаEDI.НеПриниматьЗаказы);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РежимРаботыСЗаказами, "2",
		Перечисления.РежимыРаботыСЗаказамиКлиентаEDI.ПриниматьВТерминахПоставщика);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РежимРаботыСЗаказами, "3",
		Перечисления.РежимыРаботыСЗаказамиКлиентаEDI.ПриниматьВТерминахПоставщикаИПокупателя);
	Результат.Вставить("РежимРаботыСЗаказами", РежимРаботыСЗаказами);
	
	КомандыСервиса = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-cancel-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтменитьЗаказПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-cancel-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтменитьЗаказКлиента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-confirm-changed-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.НаправитьНаСогласованиеВерсиюПоставщика);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-confirm-changed-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.НаправитьНаСогласованиеВерсиюПокупателя);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-revoke-cancel-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтозватьОтменуЗаказаПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-revoke-cancel-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтозватьОтменуЗаказаКлиента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-confirm-cancel-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ПодтвердитьОтменуЗаказаПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-confirm-cancel-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ПодтвердитьОтменуЗаказаКлиента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-confirm-unchanged-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.СогласоватьВерсиюПоставщика);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-confirm-unchanged-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.СогласоватьВерсиюПокупателя);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-revoke-change-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтозватьЗапросНаИзменениеЗаказаПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-revoke-change-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтозватьЗапросНаИзменениеЗаказаКлиента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-confirm-fulfilled-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ПодтвердитьВыполнениеЗаказаПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-reject-fulfilled-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтклонитьЗапросНаВыполнениеЗаказаПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-reject-change-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтклонитьЗапросНаИзменениеЗаказаПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-reject-change-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтклонитьЗапросНаИзменениеЗаказаКлиента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-fulfilled-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтметитьВыполнениеЗаказаКлиента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-revoke-fulfilled-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтозватьОтметкуВыполненияЗаказаКлиента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-change-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтправитьЗапросНаИзменениеЗаказаПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-change-request-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.ОтправитьЗапросНаИзменениеЗаказаКлиента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs-confirm-minor-changed-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.СогласоватьНезначительныеИзмененияВерсииПокупателя);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs-confirm-minor-changed-v1",
		Перечисления.КомандыПроцессаЗаказаEDI.СогласоватьНезначительныеИзмененияВерсииПоставщика);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs.en-edi-v1.1-comparison.v1.1+json",
		Перечисления.КомандыПроцессаЗаказаEDI.ПерейтиКСравнениюВерсийЗаказаПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs.en-edi-v1.1-comparison.v1.1+json",
		Перечисления.КомандыПроцессаЗаказаEDI.ПерейтиКСравнениюВерсийЗаказаКлиента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-cust-ordrs.en-edi-v1.1+json",
		Перечисления.КомандыПроцессаЗаказаEDI.ПерейтиКПросмотруВерсииЗаказаПоставщику);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(КомандыСервиса, "application/vnd-1cbn-suppl-ordrs.en-edi-v1.1+json",
		Перечисления.КомандыПроцессаЗаказаEDI.ПерейтиКПросмотруВерсииЗаказаКлиента);
	Результат.Вставить("КомандыСервиса", КомандыСервиса);
	
	ВариантыУказанияНоменклатурыПокупателя = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ВариантыУказанияНоменклатурыПокупателя, 1,//покупатель
		СопоставлениеНоменклатурыКонтрагентовКлиентСервер.ВариантУказанияНоменклатураОрганизации());
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ВариантыУказанияНоменклатурыПокупателя, 2,//поставщик
		СопоставлениеНоменклатурыКонтрагентовКлиентСервер.ВариантУказанияНоменклатураКонтрагента());
	Результат.Вставить("ВариантыУказанияНоменклатурыПокупателя", ВариантыУказанияНоменклатурыПокупателя);
	
	ВариантыУказанияНоменклатурыПоставщика = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ВариантыУказанияНоменклатурыПоставщика, 1,
		СопоставлениеНоменклатурыКонтрагентовКлиентСервер.ВариантУказанияНоменклатураКонтрагента());
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ВариантыУказанияНоменклатурыПоставщика, 2,
		СопоставлениеНоменклатурыКонтрагентовКлиентСервер.ВариантУказанияНоменклатураОрганизации());
	Результат.Вставить("ВариантыУказанияНоменклатурыПоставщика", ВариантыУказанияНоменклатурыПоставщика);
	
	ТипыСобытий = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ТипыСобытий, "statusChange",
		Перечисления.ТипыСобытийEDI.ИзменениеСтатуса);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ТипыСобытий, "conditionChange",
		Перечисления.ТипыСобытийEDI.ИзменениеСостоянияВыполнения);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(ТипыСобытий, "message",
		Перечисления.ТипыСобытийEDI.Сообщение);
	Результат.Вставить("ТипыСобытий", ТипыСобытий);
	
	СценарийВыполнения = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СценарийВыполнения, "createOrder",
		Перечисления.СценарииВыполненияКомандEDI.СоздатьДокументВСервисе);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СценарийВыполнения, "changeStatus",
		Перечисления.СценарииВыполненияКомандEDI.ИзменитьСтатусДокументаВСервисе);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СценарийВыполнения, "sendNewVersion",
		Перечисления.СценарииВыполненияКомандEDI.ОтправитьНаСогласованиеВерсиюОрганизации);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СценарийВыполнения, "acceptCounterpartyVersion",
		Перечисления.СценарииВыполненияКомандEDI.ПринятьВерсиюКонтрагента);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СценарийВыполнения, "switchToVersion",
		Перечисления.СценарииВыполненияКомандEDI.ПерейтиКСравнениюВерсий);
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(СценарийВыполнения, "downloadVersion",
		Перечисления.СценарииВыполненияКомандEDI.СкачатьВерсиюИзСервиса);
	Результат.Вставить("СценарийВыполнения", СценарийВыполнения);
	
	РедактируемыеРеквизиты = ИнтеграцияССервисомEDIСлужебный.НовыйГлоссарий();
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "paymentSchedule",
		"ЭтапыГрафикаОплаты");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "paymentSchedule.option",
		"ЭтапыГрафикаОплаты.ВариантОплаты");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "paymentSchedule.kind",
		"ЭтапыГрафикаОплаты.ФормаОплаты");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "paymentSchedule.date",
		"ЭтапыГрафикаОплаты.ДатаПлатежа");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "paymentSchedule.percent",
		"ЭтапыГрафикаОплаты.ПроцентПлатежа");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "paymentSchedule.amount",
		"ЭтапыГрафикаОплаты.СуммаПлатежа");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "paymentSchedule.delay",
		"ЭтапыГрафикаОплаты.Сдвиг");
	
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "termsAndConditions.priceTaxIncluded",
		"ЦенаВключаетНДС");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "termsAndConditions.taxed",
		"НалогообложениеНДС");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "termsAndConditions.currency",
		"Валюта");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "delivery.form",
		"СпособДоставки");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "delivery.point",
		"АдресДоставки");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "parties.buyer",
		"Покупатель");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "parties.seller",
		"Поставщик");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "parties.invoicee",
		"Плательщик");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "termsAndConditions.wholeOrderDeliveryOnly",
		"ОтгружатьЗаказЦеликом");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "termsAndConditions.expectedDeliveryDate",
		"ПлановаяДатаПоставки");
		
	
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines",
		"Товары");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.price",
		"Товары.Цена");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.amount",
		"Товары.Сумма");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.taxRate",
		"Товары.СтавкаНДС");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.taxAmount",
		"Товары.СуммаНДС");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.unit",
		"Товары.ПокупательЕдиницаИзмерения");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.package",
		"Товары.ПокупательУпаковка");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.quantity",
		"Товары.ПокупательКоличество");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.quantity",
		"Товары.ПокупательКоличествоУпаковок");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.description",
		"Товары.ПокупательНоменклатура");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.extendedDescription",
		"Товары.ПокупательХарактеристикаНоменклатуры");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.unit",
		"Товары.ПоставщикЕдиницаИзмерения");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.package",
		"Товары.ПоставщикУпаковка");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.quantity",
		"Товары.ПоставщикКоличество");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.quantity",
		"Товары.ПоставщикКоличествоУпаковок");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.description",
		"Товары.ПоставщикНоменклатура");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.extendedDescription",
		"Товары.ПоставщикХарактеристикаНоменклатуры");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.manufacturer",
		"Товары.Производитель");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "itemLines.expectedDeliveryDate",
		"Товары.СрокПоставки");
	
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "summary.totalLines",
		"КоличествоСтрокДокумента");
	ИнтеграцияССервисомEDIСлужебный.УстановитьОписаниеТермина(РедактируемыеРеквизиты, "summary.totalAmount",
		"СуммаДокумента");
	
	
	Результат.Вставить("РедактируемыеРеквизиты", РедактируемыеРеквизиты);

	
	Возврат Результат;
	
КонецФункции

Функция Типы() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор",          Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)));
	Результат.Вставить("Ревизия",                Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(5)));
	Результат.Вставить("НомерДокумента",         Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
	Результат.Вставить("СтроковоеПредставление", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(400)));
	Результат.Вставить("ИНН",                    Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(12)));
	Результат.Вставить("КПП",                    Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(9)));
	Результат.Вставить("КодОКСМ",                Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(3)));
	Результат.Вставить("КодОКВ",                 Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(4)));
	Результат.Вставить("Количество",             Новый ОписаниеТипов("Число",  Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	Результат.Вставить("Сумма",                  Новый ОписаниеТипов("Число",  Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	Результат.Вставить("Процент",                Новый ОписаниеТипов("Число",  Новый КвалификаторыЧисла(5, 2, ДопустимыйЗнак.Неотрицательный)));
	Результат.Вставить("ЦелоеПоложительноеЧисло",Новый ОписаниеТипов("Число",  Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Неотрицательный)));
	Результат.Вставить("БИК",                    Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(9)));
	Результат.Вставить("НомерБанковскогоСчета",  Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(34)));
	Результат.Вставить("GLN",                    Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(13)));
	Результат.Вставить("GTIN",                   Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(13)));
	Результат.Вставить("КодОКЕИ",                Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(4)));

	Результат.Вставить("СтатусЗаказа",           Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыЗаказаEDI"));
	Результат.Вставить("ДействиеУчастника",      Новый ОписаниеТипов("ПеречислениеСсылка.ДействияПроцессаЗаказаEDI"));
	Результат.Вставить("СторонаУчастник",        Новый ОписаниеТипов("ПеречислениеСсылка.СтороныУчастникиСервисаEDI"));
	Результат.Вставить("НаправлениеСобытия",     Новый ОписаниеТипов("ПеречислениеСсылка.НаправленияСобытийEDI"));
	Результат.Вставить("ТипДокумента",           Новый ОписаниеТипов("ПеречислениеСсылка.ТипыДокументовEDI"));
	Результат.Вставить("РежимыРаботыСЗаказами",  Новый ОписаниеТипов("ПеречислениеСсылка.РежимыРаботыСЗаказамиКлиентаEDI"));
	Результат.Вставить("ОрганизацияБизнесСеть",  Метаданные.ОпределяемыеТипы.Организация.Тип);
	Результат.Вставить("КонтрагентБизнесСеть",   Метаданные.ОпределяемыеТипы.КонтрагентEDI.Тип);
	Результат.Вставить("ПользовательEDI",        Метаданные.ОпределяемыеТипы.ПользовательEDI.Тип);
	Результат.Вставить("Валюта",                 Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	Результат.Вставить("ТипыСобытий",            Новый ОписаниеТипов("ПеречислениеСсылка.ТипыСобытийEDI"));
	Результат.Вставить("ПрикладнойОбъект",       Метаданные.ОпределяемыеТипы.ПрикладнойОбъектEDI.Тип);
	Результат.Вставить("ВариантыУказанияНоменклатуры", Новый ОписаниеТипов("ПеречислениеСсылка.ВариантыУказанияНоменклатурыБЭД"));
	
	Результат.Вставить("Строка",                 Новый ОписаниеТипов("Строка"));
	Результат.Вставить("Число",                  Новый ОписаниеТипов("Число"));
	Результат.Вставить("Булево",                 Новый ОписаниеТипов("Булево"));
	Результат.Вставить("Дата",                   Новый ОписаниеТипов("Дата"));
	Результат.Вставить("Массив",                 Новый ОписаниеТипов("Массив"));
	Результат.Вставить("Структура",              Новый ОписаниеТипов("Структура"));
	Результат.Вставить("Соответствие",           Новый ОписаниеТипов("Соответствие"));
	Результат.Вставить("ТаблицаЗначений",        Новый ОписаниеТипов("ТаблицаЗначений"));
	Результат.Вставить("ОбъектXDTO",             Новый ОписаниеТипов("ОбъектXDTO"));
	
	Возврат Результат;
	
КонецФункции

Функция ОрганизацияПоИдентификаторуБизнесСети(Знач Идентификатор) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПодключенныеОрганизацииБизнесСети = БизнесСеть.ПодключенныеОрганизации();
	Если ПодключенныеОрганизацииБизнесСети.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПодключенныеОрганизацииБизнесСети.Индексы.Добавить("Идентификатор");
	
	ОрганизацияБизнесСети = ПодключенныеОрганизацииБизнесСети.Найти(
		Идентификатор, "Идентификатор");
	Если Не ЗначениеЗаполнено(ОрганизацияБизнесСети) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ОрганизацияБизнесСети.Организация;
	
КонецФункции

Функция КонтрагентПоИдентификаторуБизнесСети(Знач Идентификатор) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеКонтрагентов = БизнесСеть.КонтрагентыПоИдентификаторам(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Идентификатор));
		
	ДанныеКонтрагентов = ДанныеКонтрагентов.Данные;
	Если Не ЗначениеЗаполнено(ДанныеКонтрагентов) Или ДанныеКонтрагентов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ДанныеКонтрагентов[0].Контрагент;

КонецФункции

Функция ВалютаПоКоду(Знач КодВалюты) Экспорт
	
	КодВалюты = СокрЛП(КодВалюты);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютыИнформационнойБазы = РаботаСКурсамиВалют.ДобавитьВалютыПоКоду(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КодВалюты));
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ВалютыИнформационнойБазы.Количество() Тогда 
		Возврат ВалютыИнформационнойБазы[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
		
КонецФункции

#КонецОбласти

