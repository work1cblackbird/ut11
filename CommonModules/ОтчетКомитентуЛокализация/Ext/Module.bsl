#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

// Переопределение текста запроса для отражения в учете НДС в части отчета комитента
//
// Параметры:
//  ТекстТовары - Строка - исходный текст запроса
//
Процедура ТекстЗапросаОтражениеВУчетеНДСТекстТовары(ТекстТовары) Экспорт

	ТекстЗаменыВидыЗапасов = "ЛОЖЬ";
	ТекстЗаменыТовары      = "ЛОЖЬ";
	//++ Локализация
	
	ТекстЗаменыВидыЗапасов = "ТаблицаВидыЗапасов.СчетФактураВыставленный.Исправление";
	ТекстЗаменыТовары      = "Товары.СчетФактураВыставленный.Исправление";
	//-- Локализация
	ТекстТовары = СтрЗаменить(ТекстТовары, "&ПолеИсправлениеОшибокВидыЗапасов", ТекстЗаменыВидыЗапасов);
	ТекстТовары = СтрЗаменить(ТекстТовары, "&ПолеИсправлениеОшибокТовары", ТекстЗаменыТовары);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	Если ЗначениеЗаполнено(Объект.ДокументПродажи) Тогда
		ДанныеПоСчетуФактуре = ЗаполнитьПокупателяИСчетФактуру(Объект.ДокументПродажи);
		Для каждого СтрокаТовара Из Объект.Товары Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТовара, ДанныеПоСчетуФактуре);
		КонецЦикла;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (Комиссионное вознаграждение)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);

	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Счет-фактура (в валюте)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактураВВалюте";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (Комиссионное вознаграждение в валюте)'");
		КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
	КонецЕсли;

	// УПД (Универсальный передаточный документ)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'УПД (Сведения о реализации комиссионером)'");
	КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьТовары", Истина);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	УсловиеВидимостиПечатнойФормыПоДокументуПродажи = Новый Структура;
	УсловиеВидимостиПечатнойФормыПоДокументуПродажи.Вставить("Реквизит", Метаданные.Документы.ОтчетКомитенту.Реквизиты.ДокументПродажи.Имя);
	УсловиеВидимостиПечатнойФормыПоДокументуПродажи.Вставить("ВидСравнения", ВидСравнения.НеРавно);
	УсловиеВидимостиПечатнойФормыПоДокументуПродажи.Вставить("Значение", Документы.РеализацияТоваровУслуг.ПустаяСсылка());
	КомандаПечати.УсловияВидимости.Добавить(УсловиеВидимостиПечатнойФормыПоДокументуПродажи);
	
	// УПД (Универсальный передаточный документ)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'УПД (Комиссионное вознаграждение)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

//++ Локализация

// Формирует текст запроса для получения данных основания при печати Счет-фактуры.
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                                   КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Валюта                                   КАК Валюта,
	|	ДанныеДокументов.Организация                              КАК Организация,
	|	ДанныеДокументов.НалогообложениеНДС                       КАК НалогообложениеНДС,
	|	ДанныеДокументов.Подразделение                            КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                  КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)             КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)             КАК Грузополучатель,
	|	ЛОЖЬ                                                      КАК РасчетыЧерезОтдельногоКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                              КАК Номенклатура,
	|	""""                                                      КАК Содержание,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)             КАК Комиссионер,
	|	НЕОПРЕДЕЛЕНО                                              КАК Основание,
	|	НЕОПРЕДЕЛЕНО                                              КАК ОснованиеДата,
	|	НЕОПРЕДЕЛЕНО                                              КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО                                              КАК БанковскийСчетОрганизации,
	|	НЕОПРЕДЕЛЕНО                                              КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                              КАК БанковскийСчетГрузоотправителя,
	|	НЕОПРЕДЕЛЕНО                                              КАК БанковскийСчетГрузополучателя,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьЛицо,
	|	ДанныеДокументов.Менеджер                                 КАК Менеджер,
	|	НЕОПРЕДЕЛЕНО                                              КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДолжностьКладовщика,
	|	ДанныеДокументов.Дата                                     КАК Период
	|
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&ДокументОснование_ОтчетКомитенту)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция получает данные для формирования печатной формы УПД
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ОтчетКомитенту - Массив ссылок на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	ДанныеПечатнойФормы = Неопределено;
	
	Если Не ПараметрыПечати = Неопределено
		И ПараметрыПечати.Свойство("ВыводитьТовары")
		И ПараметрыПечати.ВыводитьТовары Тогда
		ДанныеПечатнойФормы = ПолучитьДанныеДляПечатнойФормыУПД_Товары(ПараметрыПечати, МассивОбъектов);
	Иначе
		ДанныеПечатнойФормы = ПолучитьДанныеДляПечатнойФормыУПД_Вознаграждение(ПараметрыПечати, МассивОбъектов);
	КонецЕсли;
	
	Возврат ДанныеПечатнойФормы;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	
	Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
		Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		ТаблицаДанныхДокументов КАК ДанныеДокументов
			|	ПО
			|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
			|
			|ГДЕ
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	И РасчетыСКлиентами.Активность
			|";
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
			
			Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
				ОкончаниеПериодаРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
				АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
				Попытка
					РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, АналитикиРасчета);
				Исключение
					ТекстСообщения = НСтр("ru = 'Печатная форма сформирована по неактуальным данным.
					|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаДанныхДокументов КАК ДанныеДокументов
			|ГДЕ 
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
			
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                      КАК Ссылка,
	|	1                                                            КАК НомерСтроки,
	|	ТаблицаДокумента.Услуга                                      КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)          КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)                  КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)       КАК Упаковка,
	|	1                                                            КАК Количество,
	|	1                                                            КАК КоличествоУпаковок,
	|	0                                                            КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.СтавкаНДСВознаграждения                     КАК СтавкаНДС,
	|
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.БазаНДСРегл,
	|		ТаблицаДокумента.СуммаВознаграждения - ТаблицаДокумента.СуммаНДСВознаграждения
	|	)                                                            КАК СуммаБезНДС,
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДСВознаграждения
	|	)                                                            КАК СуммаНДС,
	|	
	|	ЛОЖЬ                                                         КАК ЭтоТовар,
	|	ЛОЖЬ                                                         КАК ВернутьМногооборотнуюТару
	|
	|ПОМЕСТИТЬ ОтчетКомитентуТаблицаТоваров
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|		И СуммыДокументовВВалютахУчета.ИдентификаторСтроки = """"
	|		И СуммыДокументовВВалютахУчета.Активность
	|		И &ПересчитыватьВВалютуРегл
	|;";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияНДСПродажиПоДаннымРеализации(Объект) Экспорт
	
	ТаблицаПараметров = Новый ТаблицаЗначений();
	ТаблицаПараметров.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаПараметров.Колонки.Добавить("Характеристика",Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаПараметров.Колонки.Добавить("Упаковка",Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	ТаблицаПараметров.Колонки.Добавить("СуммаПродажи", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблицаПараметров.Колонки.Добавить("СчетФактураВыставленный",Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));
	
	Для каждого Стр Из Объект.Товары Цикл
		СтрНов = ТаблицаПараметров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрНов,Стр);
		СтрНов.СчетФактураВыставленный = Стр.СчетФактураВыставленный;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ОтчетКомитентуТовары",ТаблицаПараметров);
	
	Запрос.Текст = " 
	|ВЫБРАТЬ
	|ОтчетКомитентуТовары.Номенклатура КАК Номенклатура,
	|ОтчетКомитентуТовары.Характеристика КАК Характеристика,
	|ОтчетКомитентуТовары.Упаковка КАК Упаковка,
	|ОтчетКомитентуТовары.СуммаПродажи КАК СуммаПродажи,
	|ОтчетКомитентуТовары.СчетФактураВыставленный
	|
	|ПОМЕСТИТЬ СтрокиСРеализациейПодготовка	
	|	ИЗ
	|		&ОтчетКомитентуТовары КАК ОтчетКомитентуТовары
	|;
	|
	|ВЫБРАТЬ
	|ОтчетКомитентуТовары.Номенклатура КАК Номенклатура,
	|ОтчетКомитентуТовары.Характеристика КАК Характеристика,
	|ОтчетКомитентуТовары.Упаковка КАК Упаковка,
	|ОтчетКомитентуТовары.СуммаПродажи КАК СуммаПродажи,
	|СчетФактураВыданный.ДокументОснование КАК СчетФактураВыставленныйДокументОснование
	|
	|ПОМЕСТИТЬ СтрокиСРеализацией
	|	ИЗ
	|		СтрокиСРеализациейПодготовка КАК ОтчетКомитентуТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|			Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|			ПО ОтчетКомитентуТовары.СчетФактураВыставленный = СчетФактураВыданный.Ссылка
	|
	|;
	|ВЫБРАТЬ
	|СтрокиСРеализацией.Номенклатура КАК Номенклатура,
	|СтрокиСРеализацией.Характеристика КАК Характеристика,
	|СтрокиСРеализацией.Упаковка КАК Упаковка,
	|СуммыДокументовВВалютахУчета.СуммаНДСРегл КАК СуммаНДСРегл,
	|СуммыДокументовВВалютахУчета.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|СуммыДокументовВВалютахУчета.СтавкаНДС КАК СтавкаНДС
	|	ИЗ 
	|		СтрокиСРеализацией
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|			ПО СтрокиСРеализацией.СчетФактураВыставленныйДокументОснование = РеализацияТоваровИУслугТовары.Ссылка И
	|			СтрокиСРеализацией.Номенклатура = РеализацияТоваровИУслугТовары.Номенклатура  И
	|			СтрокиСРеализацией.Характеристика = РеализацияТоваровИУслугТовары.Характеристика  И
	|			СтрокиСРеализацией.Упаковка = РеализацияТоваровИУслугТовары.Упаковка 
	|				ЛЕВОЕ СОЕДИНЕНИЕ
	|					Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК РеализацияТоваровИУслугВидыЗапасов
	|					ПО РеализацияТоваровИУслугТовары.Ссылка = РеализацияТоваровИУслугВидыЗапасов.Ссылка И
	|					РеализацияТоваровИУслугТовары.АналитикаУчетаНоменклатуры = РеализацияТоваровИУслугВидыЗапасов.АналитикаУчетаНоменклатуры
	|						ЛЕВОЕ СОЕДИНЕНИЕ
	|							РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|							ПО РеализацияТоваровИУслугВидыЗапасов.Ссылка = СуммыДокументовВВалютахУчета.Регистратор И
	|							РеализацияТоваровИУслугВидыЗапасов.ИдентификаторСтроки  =  СуммыДокументовВВалютахУчета.ИдентификаторСтроки	
	|
	|ГДЕ  СуммыДокументовВВалютахУчета.СуммаНДСРегл IS NOT NULL		
	|И СтрокиСРеализацией.СуммаПродажи = СуммыДокументовВВалютахУчета.СуммаБезНДСРегл+СуммыДокументовВВалютахУчета.СуммаНДСРегл;
	|";
	
	УстановитьПривилегированныйРежим(Истина);
		
	Рез = Запрос.Выполнить().Выбрать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Рез.Следующий() Цикл
		
		Структура = Новый Структура();
		Структура.Вставить("Номенклатура",Рез.Номенклатура);
		Структура.Вставить("Характеристика",Рез.Характеристика);
		Структура.Вставить("Упаковка",Рез.Упаковка); 
		Структура.Вставить("СуммаПродажи", Рез.СуммаБезНДСРегл + Рез.СуммаНДСРегл);
		
		ТЧТовары = Объект.Товары;
		Строки = ТЧТовары.НайтиСтроки(Структура);
		
		Если Строки.Количество()>0 Тогда
			Стр = Строки[0];
			Стр.СуммаПродажиНДС = Рез.СуммаНДСРегл; 
			Стр.СтавкаНДС = Рез.СтавкаНДС;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область СчетНаОплату_1_01

// Возвращает данные для формирования электронного Счета на оплату.
//
// Параметры:
//	МассивОбъектов - Массив из ДокументСсылка.ОтчетКомитенту - ссылки на документы, по которым необходимо
//																получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемая для формирования электронного Счета на оплату, содержащая следующие свойства:
//		* РезультатПоШапке - РезультатЗапроса - общие данные документа.
//		* РезультатПоЭтапамОплаты - РезультатЗапроса - данные графика оплаты по документу.
//		* РезультатПоТабличнойЧасти - РезультатЗапроса - данные табличной части документа.
//
Функция ДанныеДокументовДляСчетаНаОплату_1_01(МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныхДокументовДляСчетаНаОплату();
	
	Запрос.УстановитьПараметр("МассивОбъектов",	МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов",	КолонкаКодов);
	
	ПакетРезультатаЗапроса		= Запрос.ВыполнитьПакет();
	МаксимальныйИндексПакета	= ПакетРезультатаЗапроса.ВГраница();
	РезультатПоШапке			= ПакетРезультатаЗапроса[МаксимальныйИндексПакета - 2];
	РезультатПоЭтапамОплаты		= ПакетРезультатаЗапроса[МаксимальныйИндексПакета - 1];
	РезультатПоТабличнойЧасти	= ПакетРезультатаЗапроса[МаксимальныйИндексПакета];
	
	ДанныеДокументов = Новый Структура;
	ДанныеДокументов.Вставить("РезультатПоШапке",			РезультатПоШапке);
	ДанныеДокументов.Вставить("РезультатПоЭтапамОплаты",	РезультатПоЭтапамОплаты);
	ДанныеДокументов.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	
	Возврат ДанныеДокументов;
	
КонецФункции

// Возвращает текст запроса для получения данных о товарах отчета-основания, используемого при формировании ЭД
// Счета на оплату.
//
// Параметры:
//	ЭтоТекстВТ - Булево - признак необходимости формирования текста запроса временной таблицы. Если значение Истина,
//							тогда формируется текст временной таблицы.
//
// Возвращаемое значение:
//	Строка - текст запроса для получения данных.
//
Функция ТекстЗапросаВТТоваровОснованияСчетаНаОплату_1_01(ЭтоТекстВТ = Истина) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка				КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО						КАК ХозяйственнаяОперация,
	|	1									КАК НомерСтроки,
	|	NULL								КАК ВариантКомплектацииНоменклатуры,
	|	&ПустойВариантПредставленияНаборов	КАК ВариантПредставленияНабораВПечатныхФормах,
	|	&ПустойВариантРасчетаЦенНаборов		КАК ВариантРасчетаЦеныНабора,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)	КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	КАК ХарактеристикаНабора,
	|	ТоварыДокумента.Услуга				КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	КАК Характеристика,
	|	&ПустаяУпаковка						КАК Упаковка,
	|	1									КАК Количество,
	|	1									КАК КоличествоУпаковок,
	|	0									КАК Цена,
	|	ТоварыДокумента.СуммаВознаграждения - ТоварыДокумента.СуммаНДСВознаграждения	КАК СтоимостьБезНДС,
	|	ТоварыДокумента.СтавкаНДСВознаграждения	КАК СтавкаНДС,
	|	ТоварыДокумента.СуммаВознаграждения		КАК СтоимостьСНДС,
	|	0									КАК СуммаСкидки,
	|	0									КАК ЦенаБезСкидки,
	|	ТоварыДокумента.СуммаВознаграждения - ТоварыДокумента.СуммаНДСВознаграждения	КАК СтоимостьБезНДСБезСкидки,
	|	ТоварыДокумента.СуммаВознаграждения		КАК СтоимостьСНДСБезСкидки,
	|	ТоварыДокумента.СуммаНДСВознаграждения	КАК СуммаНДС,
	|	""""								КАК Содержание,
	|	ЛОЖЬ								КАК ЭтоТовар,
	|	ЛОЖЬ								КАК ЭтоВозвратнаяТара
	|ПОМЕСТИТЬ ТоварыОснования
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ТоварыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОснований КАК ТаблицаОснований
	|		ПО ТоварыДокумента.Ссылка = ТаблицаОснований.ДокументОснование
	|
	|ГДЕ
	|	ТоварыДокумента.СуммаВознаграждения > 0";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПустойВариантПредставленияНаборов",
								"ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПустойВариантРасчетаЦенНаборов",
								"ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ПустаяУпаковка",
								"ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)");
	
	Если Не ЭтоТекстВТ Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТоварыОснования", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
//-- Локализация

#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

//++ Локализация


//-- Локализация

#КонецОбласти

//++ Локализация
#Область Печать

#Область СчетНаОплату_1_01

Функция ТекстЗапросаДанныхДокументовДляСчетаНаОплату()
	
	ТекстыЗапроса = Новый Массив;
	ТекстыЗапроса.Добавить(ТекстЗапросаВТОснованийСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаВТТоваровОснованияСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаДанныеШапкиСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаДанныеЭтаповОплатыСчетаНаОплату_1_01());
	ТекстыЗапроса.Добавить(ТекстЗапросаДанныеТоваровСчетаНаОплату_1_01());
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТОснованийСчетаНаОплату_1_01()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка	КАК Ссылка,
	|	ТаблицаОснований.Ссылка	КАК ДокументОснование
	|ПОМЕСТИТЬ ТаблицаОснований
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ДокументОснование";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеШапкиСчетаНаОплату_1_01()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка	КАК Ссылка,
	|	ДанныеДокумента.Номер	КАК НомерДокумента,
	|	ДанныеДокумента.Дата	КАК ДатаДокумента,
	|	ДанныеДокумента.Ссылка										КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.Ссылка)						КАК НаименованиеОснования,
	|	ДанныеДокумента.Номер										КАК НомерОснования,
	|	ДанныеДокумента.Дата										КАК ДатаОснования,
	|	ЕСТЬNULL(ДанныеДоговора.ИдентификаторГосКонтракта, """")	КАК ИдентификаторГосКонтракта,
	|	""""														КАК ДополнительныеСведения,
	|	ЕСТЬNULL(ДанныеСчетаОрганизации.Владелец, ДанныеДокумента.Организация)	КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.БанковскийСчет											КАК БанковскийСчет,
	|	ДанныеДокумента.Организация	КАК Организация,
	|	ДанныеДокумента.Контрагент	КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО				КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО	КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО	КАК БанковскийСчетГрузоотправителя,
	|	НЕОПРЕДЕЛЕНО	КАК Грузополучатель,
	|	НЕОПРЕДЕЛЕНО	КАК БанковскийСчетГрузополучателя,
	|	ДанныеДокумента.СуммаВознаграждения	КАК СтоимостьСНДС,
	|	ДанныеДокумента.Дата						КАК ДатаНачалаПоставки,
	|	""""										КАК НазначениеПлатежа,
	|	ДанныеДокумента.ИдентификаторПлатежа		КАК ИнформацияДляОплаты,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.ФормаОплаты)	КАК СпособОплаты,
	|	ДанныеДокумента.Валюта								КАК Валюта,
	|	ДанныеВалюты.НаименованиеПолное						КАК НаименованиеВалюты,
	|	ДанныеВалюты.Код									КАК КодВалюты,
	|	ДанныеОрганизации.ВалютаРегламентированногоУчета	КАК ВалютаРегламентированногоУчета,
	|	ДанныеДокумента.НалогообложениеНДС	КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ								КАК УчитыватьНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ								КАК ОперацияОблагаетсяНДСУПокупателя,
	|	ЛОЖЬ								КАК ЧастичнаяОплата,
	|	100									КАК ПроцентОплаты,
	|	ИСТИНА								КАК ТолькоУслуги
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОснований КАК ТаблицаОснований
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОснований.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДанныеДоговора
	|		ПО ДанныеДокумента.Договор = ДанныеДоговора.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК ДанныеСчетаОрганизации
	|		ПО ДанныеДокумента.БанковскийСчет = ДанныеСчетаОрганизации.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
	|		ПО ДанныеДокумента.Валюта = ДанныеВалюты.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизации
	|		ПО ДанныеДокумента.Организация = ДанныеОрганизации.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеЭтаповОплатыСчетаНаОплату_1_01()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1								КАК Порядок,
	|	ЭтапыОплаты.Ссылка				КАК Ссылка,
	|	1								КАК НомерСтроки,
	|	ЭтапыОплаты.ДатаПлатежа			КАК ДатаПлатежа,
	|	100								КАК ПроцентПлатежа,
	|	ЭтапыОплаты.СуммаВознаграждения	КАК СуммаПлатежа,
	|	ЛОЖЬ							КАК ЭтоЗалогЗаТару
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ЭтапыОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОснований КАК ТаблицаОснований
	|		ПО ЭтапыОплаты.Ссылка = ТаблицаОснований.Ссылка
	|
	|ГДЕ
	|	ЭтапыОплаты.СуммаВознаграждения > 0
	|	И НЕ ЭтапыОплаты.УдержатьВознаграждение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеТоваровСчетаНаОплату_1_01()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка										КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки									КАК НомерСтроки,
	|	ТаблицаТоваров.ВариантПредставленияНабораВПечатныхФормах	КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ТаблицаТоваров.ВариантРасчетаЦеныНабора						КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаТоваров.НоменклатураНабора							КАК НоменклатураНабора,
	|	ТаблицаТоваров.НоменклатураНабора.НаименованиеПолное		КАК НоменклатураНабораНаименованиеПолное,
	|	ТаблицаТоваров.ХарактеристикаНабора							КАК ХарактеристикаНабора,
	|	ЕСТЬNULL(ТаблицаТоваров.ХарактеристикаНабора.НаименованиеПолное, """") КАК ХарактеристикаНабораНаименованиеПолное,
	|	ТаблицаТоваров.Номенклатура									КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ЕСТЬNULL(ДанныеНоменклатуры.Артикул, """")
	|		ИНАЧЕ ЕСТЬNULL(ДанныеНоменклатуры.Код, """")
	|	КОНЕЦ														КАК КодТовара,
	|	ЕСТЬNULL(ДанныеНоменклатуры.КодТНВЭД, НЕОПРЕДЕЛЕНО)			КАК КодТНВЭД,
	|	ЕСТЬNULL(ДанныеНоменклатуры.КодТНВЭД.Код, """")				КАК КодВидаТовара,
	|	ДанныеНоменклатуры.НаименованиеПолное						КАК НоменклатураНаименование,
	|	ДанныеНоменклатуры.ТипНоменклатуры							КАК ТипНоменклатуры,
	|	ЕСТЬNULL(ДанныеНоменклатуры.СтранаПроисхождения, НЕОПРЕДЕЛЕНО) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ДанныеНоменклатуры.СтранаПроисхождения.Код, """")	КАК КодСтраныПроисхождения,
	|	ЕСТЬNULL(ДанныеНоменклатуры.СтранаПроисхождения.Наименование, """") КАК НаименованиеСтраныПроисхождения,
	|	ТаблицаТоваров.Характеристика								КАК Характеристика,
	|	ЕСТЬNULL(ТаблицаТоваров.Характеристика.НаименованиеПолное, """") КАК ХарактеристикаНаименование,
	|	ТаблицаТоваров.Упаковка										КАК Упаковка,
	|	&ТекстЗапросаЕдиницаИзмерения								КАК ЕдиницаИзмерения,
	|	&ТекстЗапросаКодЕдиницыИзмерения							КАК КодЕдиницыИзмерения,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения					КАК НаименованиеЕдиницыИзмерения,
	|	ТаблицаТоваров.КоличествоУпаковок							КАК Количество,
	|	ТаблицаТоваров.Цена											КАК Цена,
	|	ТаблицаТоваров.СтоимостьБезНДС								КАК СтоимостьБезНДС,
	|	ТаблицаТоваров.СтавкаНДС									КАК СтавкаНДС,
	|	ТаблицаТоваров.СтоимостьСНДС								КАК СтоимостьСНДС,
	|	ТаблицаТоваров.СуммаСкидки									КАК СуммаСкидки,
	|	ТаблицаТоваров.ЦенаБезСкидки								КАК ЦенаБезСкидки,
	|	ТаблицаТоваров.СтоимостьБезНДСБезСкидки						КАК СтоимостьБезНДСБезСкидки,
	|	ТаблицаТоваров.СтоимостьСНДСБезСкидки						КАК СтоимостьСНДСБезСкидки,
	|	ТаблицаТоваров.СуммаНДС										КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаНДС										КАК СуммаНДСБезСкидки,
	|	ЛОЖЬ														КАК ЭтоНабор,
	|	ЛОЖЬ														КАК ЭтоКомплектующие,
	|	ТаблицаТоваров.ЭтоТовар										КАК ЭтоТовар,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара							КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ТоварыОснования КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерСтроки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаЕдиницаИзмерения",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
									"Ссылка",
									"ТаблицаТоваров.Упаковка",
									"ТаблицаТоваров.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
									"Наименование",
									"ТаблицаТоваров.Упаковка",
									"ТаблицаТоваров.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"&ТекстЗапросаКодЕдиницыИзмерения",
								Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
									"Код",
									"ТаблицаТоваров.Упаковка",
									"ТаблицаТоваров.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти
//-- Локализация

//++ Локализация

// Возвращает данные по выставленному счету-фактуре
//
// Параметры:
//  ДокументПродажи - ДокументСсылка.РеализацияТоваровУслуг
//
// Возвращаемое значение:
//   Структура - сформированный текст запроса:
//   *ДатаСчетаФактуры - Дата - дата выставленного счета-фактуры
//   *СчетФактураВыставленный - ДокументСсылка.СчетФактураВыданный - документ счета-фактуры
//   *Покупатель - СправочникСсылка.Организации, СправочникСсылка.Контрагенты - покупатель
//
Функция ЗаполнитьПокупателяИСчетФактуру(ДокументПродажи) Экспорт
	
	ДанныеПоСтроке = Новый Структура;
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка     КАК СчетФактураВыставленный,
	|	СчетФактураВыданный.Дата       КАК ДатаСчетаФактуры,
	|	СчетФактураВыданный.Контрагент КАК Покупатель
	|ИЗ
	|		Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.ДокументОснование = &ДокументОснование
	|	И СчетФактураВыданный.Проведен";
	Запрос.УстановитьПараметр("ДокументОснование", ДокументПродажи);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		ДанныеПоСтроке.Вставить("ДатаСчетаФактуры", Результат.ДатаСчетаФактуры);
		ДанныеПоСтроке.Вставить("СчетФактураВыставленный", Результат.СчетФактураВыставленный);
		ДанныеПоСтроке.Вставить("Покупатель", Результат.Покупатель);
	КонецЕсли;
	
	Возврат ДанныеПоСтроке;
	
КонецФункции

// Функция получает данные для формирования печатной формы УПД
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ОтчетКомитенту - Массив ссылок на документы, по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыУПД_Вознаграждение(ПараметрыПечати, МассивОбъектов)
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                  КАК Ссылка,
	|	ДанныеДокументов.Валюта                  КАК Валюта,
	|	ДанныеДокументов.Организация             КАК Организация,
	|	ДанныеДокументов.Подразделение           КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ДанныеДокументов.Дата                    КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|	И НЕ ДанныеДокументов.СпособРасчетаВознаграждения = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	УчетНДСРФ.ДополнитьЗапросПолученияДанныхДляПечатиУПД(Запрос);

	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	Обработки.ПечатьОбщихФорм.ПоместитьВременнуюТаблицуДанныхПоставщика(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Контрагент.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеПоставщика.ГоловнаяОрганизация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетОрганизации,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетГрузоотправителя,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетГрузополучателя,
	|
	|	ДанныеПоставщика.КПППоставщика КАК КПППоставщика,
	|	""""                           КАК КПППокупателя,
	|	ДанныеДокумента.Контрагент.ИНН КАК ИННПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ИСТИНА КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЕстьПрослеживаемыеТовары,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	НЕОПРЕДЕЛЕНО КАК Основание,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО КАК ДолжностьКладовщика,
	|	ДанныеДокументов.ТребуетсяНаличиеСФ КАК ТребуетсяНаличиеСФ
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоставщика КАК ДанныеПоставщика
	|		ПО ДанныеДокумента.Ссылка = ДанныеПоставщика.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД          КАК ЕдиницаИзмеренияТНВЭД,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД.Представление КАК ЕдиницаИзмеренияТНВЭДНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД.Код      КАК ЕдиницаИзмеренияТНВЭДКод,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД.Код      КАК КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО КАК СтранаПроисхождения,
	|	НЕОПРЕДЕЛЕНО КАК СтранаПроисхожденияКод,
	|	1 КАК Количество,
	|	0 КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.СуммаБезНДС КАК Цена,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС КАК СуммаСНДС,
	|	1 КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ОтчетКомитентуТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы УПД
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.РеализацияТоваровУслуг - Массив ссылок на документы, 
//																		по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыУПД_Товары(ПараметрыПечати, МассивОбъектов)
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ДокументПродажи КАК ДокументПродажи,
	|	ВЫБОР
	|		КОГДА СчетФактура.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СчетФактура.Номер
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактура.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СчетФактура.Дата
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ДанныеДокумента.Валюта                  КАК Валюта,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ДокументПродажи <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
	|				ТОГДА ЛОЖЬ
	|			КОГДА ДанныеОснованийСчетовФактур.НалогообложениеНДС В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС))
	|					И ДанныеОснованийСчетовФактур.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНаличиеСФ,
	|	ДанныеДокумента.Дата КАК Период
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		ПО ДанныеДокумента.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактура
	|		ПО ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером = СчетФактура.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивОбъектов)
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	СчетФактура.Ссылка,
	|	ДанныеДокумента.Валюта,
	|	ДанныеДокумента.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПараметрыЗаполнения.ВключаяНомераГТД                 = Истина;
	ПараметрыЗаполнения.ОбработатьНастройкиПечатиНаборов = Ложь;
	ПоместитьВременнуюТаблицуТоваров_Товары(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Обработки.ПечатьОбщихФорм.ПоместитьВременнуюТаблицуДанныхПоставщика(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаТоваров.Номенклатура.ПрослеживаемыйТовар, ЛОЖЬ)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьПрослеживаемыеТовары,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	ОтчетКомитентуТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДокументРеализации.Номер КАК Номер,
	|	ДокументРеализации.Дата КАК Дата,
	|	ДокументРеализации.Ссылка КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	ДанныеДокументов.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ДанныеДокументов.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.Контрагент КАК Комитент,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеПоставщика.ГоловнаяОрганизация КАК Организация,
	|
	|	ВЫБОР
	|		КОГДА ДокументРеализации.Контрагент.ОбособленноеПодразделение
	|			ТОГДА ДокументРеализации.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДокументРеализации.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|
	|	ВЫБОР
	|		КОГДА ДокументРеализации.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДокументРеализации.Организация
	|		ИНАЧЕ ДокументРеализации.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДокументРеализации.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДокументРеализации.Контрагент
	|		ИНАЧЕ ДокументРеализации.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|
	|	ДокументРеализации.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ДокументРеализации.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ДокументРеализации.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ДокументРеализации.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|
	|	ЕСТЬNULL(ДанныеПоставщика.ИндексПодразделения, 0) КАК ИндексПодразделения,
	|
	|	ДанныеПоставщика.КПППоставщика КАК КПППоставщика,
	|
	|	ВЫБОР
	|		КОГДА
	|			ДокументРеализации.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			И ДокументРеализации.Грузополучатель.ГоловнойКонтрагент = ДокументРеализации.Контрагент
	|		ТОГДА
	|			ДокументРеализации.Грузополучатель.КПП
	|		ИНАЧЕ
	|			ДокументРеализации.Контрагент.КПП
	|	КОНЕЦ КАК КПППокупателя,
	|
	|	ДанныеДокумента.Контрагент.ИНН КАК ИННПокупателя,
	|
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДокументРеализации.АдресДоставки КАК АдресДоставки,
	|
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ЕСТЬNULL(НоменклатураДокументов.ЕстьПрослеживаемыеТовары, ЛОЖЬ) КАК ЕстьПрослеживаемыеТовары,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	НЕОПРЕДЕЛЕНО КАК Основание,
	|	НЕОПРЕДЕЛЕНО КАК ОснованиеДата,
	|	НЕОПРЕДЕЛЕНО КАК ОснованиеНомер,
	|	ДокументРеализации.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДокументРеализации.ДоверенностьДата КАК ДоверенностьДата,
	|	ДокументРеализации.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДокументРеализации.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ДокументРеализации.Отпустил КАК Кладовщик,
	|	ДокументРеализации.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	ДанныеДокументов.ТребуетсяНаличиеСФ КАК ТребуетсяНаличиеСФ,
	|	""ПредставлениеСтроки5а"" КАК ПредставлениеСтроки5а
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоставщика КАК ДанныеПоставщика
	|		ПО ДанныеДокумента.Ссылка = ДанныеПоставщика.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	|		ПО ДанныеДокумента.Ссылка = НоменклатураДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
	|		ПО ДанныеПодразделений.Организация = ДанныеДокумента.Организация
	|			И ДанныеПодразделений.Подразделение = ДанныеДокумента.Подразделение
	|			И ДанныеПодразделений.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДокументРеализации
	|		ПО ДокументРеализации.Ссылка = ДанныеДокумента.ДокументПродажи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО Договоры.Ссылка = ДанныеДокумента.Договор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.НомерГТД.ЕдиницаИзмерения               КАК ЕдиницаИзмеренияТНВЭД,
	|	ТаблицаДокумента.НомерГТД.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияТНВЭДНаименование,
	|	ТаблицаДокумента.НомерГТД.ЕдиницаИзмерения.Код           КАК ЕдиницаИзмеренияТНВЭДКод,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.Серия.Наименование КАК СерияНаименование,	
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТДСсылка,
	|	ЕСТЬNULL(ТаблицаДокумента.НомерГТД.ТипНомераГТД, НЕОПРЕДЕЛЕНО) КАК ТипНомераГТД,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаДокумента.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаДокумента.НомерГТД.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаДокумента.Количество
	|		ИНАЧЕ ТаблицаДокумента.КоличествоУпаковок
	|	КОНЕЦ КАК Количество,
	|	ТаблицаДокумента.Количество КАК КоличествоБазовыхЕдиниц,
	|	ТаблицаДокумента.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ВЫБОР КОГДА НЕ ТаблицаДокумента.КоличествоУпаковок = 0 ТОГДА ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.КоличествоУпаковок ИНАЧЕ 0 КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА НЕ ТаблицаДокумента.Количество = 0 ТОГДА ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.Количество ИНАЧЕ 0 КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Серия КАК Серия,
	|	ТаблицаДокумента.Упаковка КАК Упаковка,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ОтчетКомитентуТаблицаТоваров КАК ТаблицаДокумента
	|ГДЕ
	|	(ТаблицаДокумента.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ ТаблицаДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ШтрихкодУпаковки КАК Штрихкод
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ОтчетыКомитенту
	|		ПО ОтчетыКомитенту.ДокументПродажи = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтгрузкаТоваровИСМП КАК ДокументыПрямогоОбмена
	|		ПО ТаблицаДокумента.Ссылка = ДокументыПрямогоОбмена.ДокументОснование
	|		И НЕ ДокументыПрямогоОбмена.ПометкаУдаления
	|ГДЕ
	|	ДокументыПрямогоОбмена.Ссылка ЕСТЬ NULL;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка								КАК Ссылка,
	|	ТаблицаДокумента.НомерГТД							КАК НомерГТД,
	|	Комплектующие.НомерРНПТ								КАК НомерРНПТ,
	|	ВЫБОР
	|		КОГДА Комплектующие.НомерРНПТ.РегистрационныйНомер = """"
	|			ТОГДА Комплектующие.НомерРНПТ
	|		ИНАЧЕ Комплектующие.НомерРНПТ.РегистрационныйНомер
	|	КОНЕЦ												КАК НомерТовара,
	|	НомераГТД.СуммаПоРНПТ								КАК ОбщаяСуммаПоКомплекту,
	|	Комплектующие.СуммаПоРНПТ							КАК СуммаПоРНПТ,
	|	Комплектующие.КоличествоПоРНПТ						КАК Количество,
	|	Комплектующие.ЕдиницаИзмеренияТНВЭД					КАК ЕдиницаИзмерения,
	|	Комплектующие.ЕдиницаИзмеренияТНВЭД.Код				КАК ЕдиницаИзмеренияКод,
	|	Комплектующие.ЕдиницаИзмеренияТНВЭД.Представление	КАК ЕдиницаИзмеренияНаименование
	|ИЗ
	|	ОтчетКомитентуТаблицаТоваров КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД.ПрослеживаемыеКомплектующие КАК Комплектующие
	|		ПО ТаблицаДокумента.НомерГТД = Комплектующие.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ТаблицаДокумента.НомерГТД = НомераГТД.Ссылка";
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаДокумента.Упаковка",
			"ТаблицаДокумента.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаДокумента.Упаковка",
			"ТаблицаДокумента.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаДокумента.Упаковка",
			"ТаблицаДокумента.Номенклатура"));
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru = 'счет-фактура'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	Запрос.УстановитьПараметр("ДатаСФ", Дата('20220304'));
	
	МассивРезультатов			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти	= МассивРезультатов[2];
	ШтрихкодыУпаковок			= МассивРезультатов[3].Выгрузить();
	
	Если ПараметрыПечати.Свойство("ЗаполнениеЭлектронногоДокумента") Тогда
		ТаблицаТоварыДляЭДО = ИнтеграцияИСМПУТ.ТаблицаТоварыДляЭДО(РезультатПоТабличнойЧасти.Выгрузить(), "КоличествоБазовыхЕдиниц");
		Если ТаблицаТоварыДляЭДО.Количество() Тогда
			ПараметрыСканирования = ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования(ТаблицаТоварыДляЭДО[0].Ссылка);
		КонецЕсли;
		Маркировка = ЭлектронноеВзаимодействиеИСМП.ЧастичноеСодержимоеИКодыОСУ(
			ШтрихкодыУпаковок,
			ТаблицаТоварыДляЭДО,
			ПараметрыСканирования);
	Иначе
		Маркировка = ЭлектронноеВзаимодействиеИСМП.ЧастичноеСодержимое(ШтрихкодыУпаковок);
	КонецЕсли;
	
	ПрослеживаемыеКомплектующие	= УчетПрослеживаемыхТоваровЛокализация.ПрослеживаемыеКомплектующиеДляПечатиДанных(
									МассивРезультатов[4]);
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке",			РезультатПоШапке);
	ДанныеДляПечати.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	ДанныеДляПечати.Вставить("Маркировка",					Маркировка);
	ДанныеДляПечати.Вставить("ПрослеживаемыеКомплектующие",	ПрослеживаемыеКомплектующие);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров_Товары(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено)
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	Запрос.УстановитьПараметр("ВключаяНомераГТД",               ПараметрыЗаполнения.ВключаяНомераГТД);
	Запрос.УстановитьПараметр("ПустаяГТД",                      Справочники.НомераГТД.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВыводитьСерии",                  ПараметрыЗаполнения.ВыводитьСерииНоменклатуры);
	
	Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
		Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		ТаблицаДанныхДокументов КАК ДанныеДокументов
			|	ПО
			|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
			|
			|ГДЕ
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	И РасчетыСКлиентами.Активность
			|";
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
			
			Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
				ОкончаниеПериодаРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
				АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
				Попытка
					РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, АналитикиРасчета);
				Исключение
					ТекстСообщения = НСтр("ru = 'Печатная форма сформирована по неактуальным данным.
					|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаДанныхДокументов КАК ДанныеДокументов
			|ГДЕ 
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.Цена КАК Цена,
	|	ТаблицаТоваров.Покупатель КАК Покупатель,
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки
	|
	|ПОМЕСТИТЬ СтрокиТоваров
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.Цена,
	|	ТаблицаТоваров.Покупатель
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.Цена,
	|	ТаблицаТоваров.Покупатель
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	
	|	ЗНАЧЕНИЕ(Справочник.ВариантыКомплектацииНоменклатуры.ПустаяСсылка) КАК ВариантКомплектацииНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка) КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка) КАК ВариантРасчетаЦеныНабора,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)   КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК ХарактеристикаНабора,
	|	
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                                            КАК Серия,
	|	&ПустаяГТД                                              КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)    КАК КодТНВЭД,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                     КАК КоличествоУпаковок,
	|	0                                                       КАК КоличествоПоРНПТ,
	|	
	|	ТаблицаДокумента.Цена                                   КАК Цена,
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаПродажи - ТаблицаДокумента.СуммаПродажиНДС
	|	)                                                       КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаПродажиНДС
	|	)                                                       КАК СуммаНДС,
	|	
	|	ЛОЖЬ                                                    КАК ЭтоТовар,
	|	ЛОЖЬ                                                    КАК ЭтоНеВозвратнаяТара,
	|	ЛОЖЬ                                                    КАК ВернутьМногооборотнуюТару,
	|	ТаблицаДокумента.Упаковка                               КАК Упаковка
	|
	|ПОМЕСТИТЬ ОтчетКомитентуТаблицаТоваров
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|		И СуммыДокументовВВалютахУчета.Активность
	|		И &ПересчитыватьВВалютуРегл
	|
	|ГДЕ
	|	ТаблицаДокумента.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                        КАК Ссылка,
	|
	|	ЗНАЧЕНИЕ(Справочник.ВариантыКомплектацииНоменклатуры.ПустаяСсылка) КАК ВариантКомплектацииНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка) КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка) КАК ВариантРасчетаЦеныНабора,
	|
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)   КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК ХарактеристикаНабора,
	|
	|	МИНИМУМ(СтрокиТоваров.НомерСтроки)                             КАК НомерСтроки,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура       КАК Номенклатура,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика     КАК Характеристика,
	|	ВЫБОР КОГДА &ВыводитьСерии ТОГДА
	|		ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия
	|	ИНАЧЕ 
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	
	|	ВЫБОР КОГДА &ВключаяНомераГТД ТОГДА
	|		ТаблицаДокумента.НомерГТД
	|	ИНАЧЕ
	|		&ПустаяГТД
	|	КОНЕЦ КАК НомерГТД,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|
	|	СУММА(ТаблицаДокумента.Количество)                             КАК Количество,
	|	СУММА(ТаблицаДокумента.КоличествоУпаковок)                     КАК КоличествоУпаковок,
	|	СУММА(ВЫБОР
	|			КОГДА &ВключаяНомераГТД
	|				ТОГДА ТаблицаДокумента.КоличествоПоРНПТ
	|			ИНАЧЕ 0
	|	КОНЕЦ)                                                         КАК КоличествоПоРНПТ,
	|	
	|	ТаблицаДокумента.Цена                                          КАК Цена,
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
	|	))                                                             КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                                     КАК СтавкаНДС,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	)) КАК СуммаНДС,
	|	
	|	ИСТИНА                                                         КАК ЭтоТовар,
	|	ЛОЖЬ                                                           КАК ЭтоНеВозвратнаяТара,
	|	ЛОЖЬ                                                           КАК ВернутьМногооборотнуюТару,
	|	ТаблицаДокумента.Упаковка                                      КАК Упаковка
	|
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|		И СуммыДокументовВВалютахУчета.Активность
	|		И &ПересчитыватьВВалютуРегл
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СтрокиТоваров КАК СтрокиТоваров
	|	ПО
	|		ТаблицаДокумента.Ссылка = СтрокиТоваров.Ссылка
	|		И ТаблицаДокумента.АналитикаУчетаНоменклатуры = СтрокиТоваров.АналитикаУчетаНоменклатуры
	|		И ТаблицаДокумента.Упаковка = СтрокиТоваров.Упаковка
	|		И ТаблицаДокумента.Цена = СтрокиТоваров.Цена
	|		И ТаблицаДокумента.Покупатель = СтрокиТоваров.Покупатель
	|
	|
	|		
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика,
	|	ВЫБОР КОГДА &ВыводитьСерии ТОГДА
	|		ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия
	|	ИНАЧЕ 
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Упаковка,
	|	ТаблицаДокумента.Цена,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Количество = 0
	|			ТОГДА ТаблицаДокумента.СуммаСНДС
	|		ИНАЧЕ ТаблицаДокумента.СуммаСНДС/ТаблицаДокумента.Количество
	|	КОНЕЦ,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД,
	|
	|	ВЫБОР КОГДА &ВключаяНомераГТД ТОГДА
	|		ТаблицаДокумента.НомерГТД
	|	ИНАЧЕ
	|		&ПустаяГТД
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтрокиТоваров
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

//-- Локализация
#КонецОбласти
