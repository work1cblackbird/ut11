// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  Форма - ФормаКлиентскогоПриложения:
//  * ИдентификаторПакета - УникальныйИдентификатор
//  Элемент - ДекорацияФормы,КнопкаФормы 
//  НавигационнаяСсылка - Строка
//  СтандартнаяОбработка - Булево
//  РезультатОбработкиНаСервере - Структура:
//  * СоставМенюВыбора - СписокЗначений из ДокументСсылка.ЭлектронныйДокументВходящийЭДО,ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
Процедура ЭлементУправленияПакета_ОбработкаНавигационнойСсылки(Форма, Элемент, НавигационнаяСсылка, СтандартнаяОбработка, РезультатОбработкиНаСервере) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "Show" Тогда
		
		СоставМеню = РезультатОбработкиНаСервере.СоставМенюВыбора;
		Если Не ЗначениеЗаполнено(СоставМеню) Тогда
			Возврат;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура("ИдентификаторПакета", Форма.ИдентификаторПакета);
		ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ПослеВыбораДокументаПакетаИзМенюЕще",
			ПакетыДокументовЭДОКлиент, ДополнительныеПараметры);
		
		Форма.ПоказатьВыборИзМеню(ОписаниеОповещенияОЗавершении, СоставМеню, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  Форма - ФормаКлиентскогоПриложения:
//  * Объект - ДанныеФормыСтруктура:
//  ** Ссылка - ДокументСсылка.ЭлектронныйДокументВходящийЭДО,ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  ** Организация - ОпределяемыйТип.Организация
//  ** Контрагент - ОпределяемыйТип.УчастникЭДО
//  ** ДоговорКонтрагента - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  * ИдентификаторПакета - УникальныйИдентификатор
//  * ОтображаемыеДокументыПакета - СписокЗначений из ДокументСсылка.ЭлектронныйДокументВходящийЭДО,ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  * ОтключитьТранслитерацию - Булево
//  Элемент - ДекорацияФормы,КнопкаФормы
//  СтандартнаяОбработка - Булево
Процедура ЭлементУправленияПакета_Нажатие(Форма, Элемент, СтандартнаяОбработка) Экспорт

	Если Элемент = Форма.Элементы["ЭлементУправленияПакета_ЭлементУправленияПакета_ДобавитьДокумент"] Тогда
		
		СписокПунктовМеню = Новый СписокЗначений; // СписокЗначений из Строка
		СписокПунктовМеню.Добавить("ДобавитьВПакетФайлСКомпьютера" , НСтр("ru = 'Файл с компьютера'"));
		СписокПунктовМеню.Добавить("ДобавитьВПакетПрисоединенныйФайл" , НСтр("ru = 'Файл из хранилища'"));
		СписокПунктовМеню.Добавить("ДобавитьВПакетДокументИнформационнойБазы" , НСтр("ru = 'Документ информационной базы'"));
		
		ДополнительныеПараметры = НовыеПараметрыДобавленияВПакет();
		ДополнительныеПараметры.ИдентификаторПакета = Форма.ИдентификаторПакета;
		ДополнительныеПараметры.ЭлектронныйДокумент = Форма.Объект.Ссылка;
		ДополнительныеПараметры.Отправитель = Форма.Объект.Организация;
		ДополнительныеПараметры.Получатель = Форма.Объект.Контрагент;
		ДополнительныеПараметры.Договор = Форма.Объект.ДоговорКонтрагента;
		ДополнительныеПараметры.ОтключитьТранслитерацию = Форма.ОтключитьТранслитерацию;
		
		ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ПослеВыбораСпособаДобавленияДокументаВПакет",
			ЭтотОбъект, ДополнительныеПараметры);
			
		Форма.ПоказатьВыборИзМеню(ОписаниеОповещенияОЗавершении, СписокПунктовМеню, Элемент);
		
	ИначеЕсли СтрНайти(Элемент.Имя, "ЭлементУправленияПакета_УдалитьДокумент_") > 0 Тогда
		ИндексДокумента = Число(СтрЗаменить(Элемент.Имя, "ЭлементУправленияПакета_УдалитьДокумент_", "")); 
		ДокументКУдалениюИзПакета = Форма.ОтображаемыеДокументыПакета[ИндексДокумента - 1].Значение; // ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
		
		УдалитьДокументИзПакета(Форма.ИдентификаторПакета, ДокументКУдалениюИзПакета);
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  ИдентификаторПакета - УникальныйИдентификатор
//  ДокументКУдалениюИзПакета - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
Процедура УдалитьДокументИзПакета(ИдентификаторПакета, ДокументКУдалениюИзПакета) Экспорт

	КонтекстДиагностики = ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики();
	ПакетыДокументовЭДОВызовСервера.УдалитьДокументИзПакета(ИдентификаторПакета,
		ДокументКУдалениюИзПакета, КонтекстДиагностики);
		
	Если ОбработкаНеисправностейБЭДКлиентСервер.ЕстьОшибки(КонтекстДиагностики) Тогда
		ИнтерфейсДокументовЭДОКлиент.ПоказатьПредставлениеОшибокКонтекстаДиагностики(КонтекстДиагностики);
	Иначе
		Оповестить(ИмяСобытияУдалениеДокументаИзПакета(), ДокументКУдалениюИзПакета, ИдентификаторПакета);
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  ВыбранныйСпособДобавления - Неопределено - если пользователь отказался от выбора.
//                            - ЭлементСпискаЗначений
//                            - Строка
//  ДополнительныеПараметры - см. НовыеПараметрыДобавленияВПакет
Процедура ПослеВыбораСпособаДобавленияДокументаВПакет(ВыбранныйСпособДобавления, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйСпособДобавления = Неопределено Тогда		
		Возврат;
	ИначеЕсли ТипЗнч(ВыбранныйСпособДобавления) = Тип("ЭлементСпискаЗначений") Тогда
		СпособДобавления = ВыбранныйСпособДобавления.Значение;
	Иначе
		СпособДобавления = ВыбранныйСпособДобавления;
	КонецЕсли;
	
	ОграниченияИОбъемПакета =
		ПакетыДокументовЭДОВызовСервера.ОграниченияИОбъемПакета(ДополнительныеПараметры);
	ДополнительныеПараметры.ОграниченияОбъемаПакетаДокументов = ОграниченияИОбъемПакета.ОграниченияОбъемаПакетаДокументов;
	ДополнительныеПараметры.ОбъемПакетаДокументов = ОграниченияИОбъемПакета.ОбъемПакетаДокументов;
	
	РезультатПроверкиПревышения = ПревышеноМаксимальноеКоличествоДокументовВПакете(ОграниченияИОбъемПакета.ОграниченияОбъемаПакетаДокументов,
		ОграниченияИОбъемПакета.ОбъемПакетаДокументов, ДополнительныеПараметры);
	Если РезультатПроверкиПревышения.Превышено Тогда
		
		ПоказатьВопросОСозданииПакета(РезультатПроверкиПревышения.ПревышаемыеОграничения, СпособДобавления,
			ДополнительныеПараметры);
		Возврат;
		
	КонецЕсли;
	
	ДобавитьДокументВПакет(СпособДобавления, ДополнительныеПараметры);
	
КонецПроцедуры

// Параметры:
//  ВыбранныйЭлемент - Неопределено - если пользователь отказался от выбора.
//                   - ЭлементСпискаЗначений
//  ДополнительныеПараметры - Структура:
//  * ИдентификаторПакета - УникальныйИдентификатор
//
Процедура ПослеВыбораДокументаПакетаИзМенюЕще(ВыбранныйЭлемент, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Оповестить("ВыборТекущегоДокументаПакета", ВыбранныйЭлемент.Значение, ДополнительныеПараметры.ИдентификаторПакета);
	КонецЕсли;
	
КонецПроцедуры

// Возвращаемое значение:
//  Структура:
// * ИдентификаторПакета - Неопределено,УникальныйИдентификатор
// * ЭлектронныйДокумент - Неопределено,ДокументСсылка.ЭлектронныйДокументВходящийЭДО,ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
// * Отправитель - Неопределено,ОпределяемыйТип.Организация
// * Получатель - Неопределено,ОпределяемыйТип.УчастникЭДО
// * Договор - Неопределено,ОпределяемыйТип.ДоговорСКонтрагентомЭДО
// * ОбъектыУчета - Массив из ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
// * ЭтоОблачныйЭДО - Булево
// * ОтключитьТранслитерацию - Булево
// * ОграниченияОбъемаПакетаДокументов - Неопределено
// 									   - см. ПакетыДокументовЭДО.НовыеОграниченияОбъемаПакетаДокументовУчастников
// * ОбъемПакетаДокументов - Неопределено
//						   - см. ПакетыДокументовЭДОКлиентСервер.НовыйОбъемПакетаДокументов
// * СозданиеНовогоПакета - Булево
Функция НовыеПараметрыДобавленияВПакет() Экспорт
	Параметры = Новый Структура;
	Параметры.Вставить("ИдентификаторПакета", Неопределено); 
	Параметры.Вставить("ЭлектронныйДокумент", Неопределено);
	Параметры.Вставить("Отправитель", Неопределено);
	Параметры.Вставить("Получатель", Неопределено);
	Параметры.Вставить("Договор", Неопределено);
	Параметры.Вставить("ОбъектыУчета", Новый Массив);
	Параметры.Вставить("ЭтоОблачныйЭДО", Ложь);
	Параметры.Вставить("ОтключитьТранслитерацию", Ложь);
	Параметры.Вставить("ОграниченияОбъемаПакетаДокументов", Неопределено);
	Параметры.Вставить("ОбъемПакетаДокументов", Неопределено);
	Параметры.Вставить("СозданиеНовогоПакета", Ложь);
	Возврат Параметры;
КонецФункции

// Возвращаемое значение:
//  Строка
Функция ИмяСобытияДобавленияДокументаВПакет() Экспорт
	Возврат "ДобавлениеДокументаВПакет";
КонецФункции

// Возвращаемое значение:
//  Строка
Функция ИмяСобытияУдалениеДокументаИзПакета() Экспорт
	Возврат "УдалениеДокументаИзПакета";
КонецФункции

// Параметры:
//  ОграниченияОбъемаПакетаДокументов - см. СервисНастроекЭДО.НовыеОграниченияОбъемаПакетаДокументов
//
// Возвращаемое значение:
//  Строка
Функция ТекстОПревышенииМаксимальногоРазмераПакетаСохранениеДокумента(ОграниченияОбъемаПакетаДокументов) Экспорт
	
	Возврат СтрШаблон(НСтр("ru = 'Невозможно сохранить документ из-за ограничений оператора %1 (размер пакета %2 Кб).
		|Выберите файл меньшего размера.'"), ОграниченияОбъемаПакетаДокументов.ОператорЭДО,
		ОграниченияОбъемаПакетаДокументов.МаксимальныйРазмерПакетаЭД);
	
КонецФункции

// Параметры:
//  ОграниченияОбъемаПакетаДокументов - см. СервисНастроекЭДО.НовыеОграниченияОбъемаПакетаДокументов
Процедура ПредупредитьОПревышенииМаксимальногоРазмерПакета(ОграниченияОбъемаПакетаДокументов) Экспорт
	
	ТекстПредупреждения =
		СтрШаблон(НСтр("ru = 'Невозможно добавить документ из-за ограничений оператора %1 (размер пакета %2 Кб).
		|Выберите документ меньшего размера.'"), ОграниченияОбъемаПакетаДокументов.ОператорЭДО,
		ОграниченияОбъемаПакетаДокументов.МаксимальныйРазмерПакетаЭД);
	
	ПоказатьПредупреждение(, ТекстПредупреждения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Параметры:
//  ДополнительныеПараметры - Неопределено,Структура:
//  * ИдентификаторПакета - УникальныйИдентификатор
//  * ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  * Отправитель - ОпределяемыйТип.Организация
//  * Получатель - ОпределяемыйТип.УчастникЭДО
//  * Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  ПараметрыФайла - Структура:
// * ИмяФайла - Строка
// * АдресХранилища - Строка
Процедура СформироватьИДобавитьПроизвольныйДокументВПакетПолучитьРеквизиты(ДополнительныеПараметры, ПараметрыФайла)

	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	ПараметрыОповещения.Вставить("ПараметрыФайла", ПараметрыФайла);
	
	РеквизитыДокумента = ИнтерфейсДокументовЭДОВызовСервера.РеквизитыДокументаПоФайлу(ПараметрыФайла);
	Если ЗначениеЗаполнено(РеквизитыДокумента) Тогда
		СформироватьИДобавитьПроизвольныйДокументВПакетПолучитьРеквизитыЗавершение(РеквизитыДокумента, ПараметрыОповещения);
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("СформироватьИДобавитьПроизвольныйДокументВПакетПолучитьРеквизитыЗавершение",
		ПакетыДокументовЭДОКлиент, ПараметрыОповещения);
	
	ИнтерфейсДокументовЭДОКлиент.ОткрытьВводРеквизитовПроизвольногоДокумента(Оповещение);

КонецПроцедуры

// Параметры:
//  Результат - Неопределено,Структура:
//  * ВидДокумента - СправочникСсылка.ВидыДокументовЭДО
//  * Номер - Строка
//  * Дата - Дата
//  * Сумма - Число
//  Параметры - Структура:
//  * ДополнительныеПараметры - Неопределено,Структура:
//  ** ИдентификаторПакета - УникальныйИдентификатор
//  ** ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  ** Отправитель - ОпределяемыйТип.Организация
//  ** Получатель - ОпределяемыйТип.УчастникЭДО
//  ** Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  ** ОбъектыУчета - Массив из ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//  * ПараметрыФайла - Структура:
//  ** ИмяФайла - Строка
//  ** АдресХранилища - Строка
Процедура СформироватьИДобавитьПроизвольныйДокументВПакетПолучитьРеквизитыЗавершение(Результат, Параметры) Экспорт

	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;

	ПараметрыФормирования = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыСозданияДокументаПоФайлу();
	ПараметрыФормирования.Организация = Параметры.ДополнительныеПараметры.Отправитель;
	ПараметрыФормирования.Контрагент = Параметры.ДополнительныеПараметры.Получатель;
	ПараметрыФормирования.Договор = Параметры.ДополнительныеПараметры.Договор;
	ПараметрыФормирования.НомерДокумента = Результат.Номер;
	ПараметрыФормирования.ДатаДокумента = Результат.Дата;
	ПараметрыФормирования.СуммаДокумента = Результат.Сумма;
	ПараметрыФормирования.ВидДокумента = Результат.ВидДокумента;
	ОбъектыУчета =
		ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры.ДополнительныеПараметры, "ОбъектыУчета", Новый Массив); // Массив из ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
	ПараметрыФормирования.ОбъектыУчета = ОбъектыУчета;

	СформироватьИДобавитьПроизвольныйДокументВПакет(Параметры.ДополнительныеПараметры,
		ПараметрыФормирования, Параметры.ПараметрыФайла);

КонецПроцедуры

// Параметры:
//  ВыбранноеЗначение - ОпределяемыйТип.ПрисоединенныйФайл
//  ДополнительныеПараметры - Структура:
//  * ИдентификаторПакета - УникальныйИдентификатор
//  * ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  * Отправитель - ОпределяемыйТип.Организация
//  * Получатель - ОпределяемыйТип.УчастникЭДО
//  * Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  * ОтключитьТранслитерацию - Булево
//  * ОграниченияОбъемаПакетаДокументов - см. ПакетыДокументовЭДО.НовыеОграниченияОбъемаПакетаДокументовУчастников
//  * ОбъемПакетаДокументов - см. ПакетыДокументовЭДОКлиентСервер.НовыйОбъемПакетаДокументов
Процедура ДобавитьДокументВПакетИзПрисоединенногоФайлаЗавершениеВыбора(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(ВыбранноеЗначение, Новый УникальныйИдентификатор, Истина);
		
		РезультатПроверкиПревышения = ПакетыДокументовЭДОКлиентСервер.ПроверкаПревышенияМаксимальногоРазмераПакета(
			ДополнительныеПараметры.ОграниченияОбъемаПакетаДокументов,
				ДополнительныеПараметры.ОбъемПакетаДокументов, ДанныеФайла.Размер);
		
		Если РезультатПроверкиПревышения.Превышено Тогда
			
			ПредупредитьОПревышенииМаксимальногоРазмерПакета(РезультатПроверкиПревышения.ПревышаемыеОграничения);
			Возврат;
			
		КонецЕсли;
		
		ПодготовитьДокументДляДобавленияВПакет(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла, ДанныеФайла.ИмяФайла,
			ДополнительныеПараметры);
	
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  Результат - Неопределено,ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//  ДополнительныеПараметры - Структура:
//  * ИдентификаторПакета - УникальныйИдентификатор
//  * ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  * Отправитель - ОпределяемыйТип.Организация
//  * Получатель - ОпределяемыйТип.УчастникЭДО
//  * Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
Процедура ДобавитьВПакетДокументИнформационнойБазыЗавершениеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Оповестить("ВыборТекущегоДокументаПакета", ДополнительныеПараметры.ЭлектронныйДокумент,
			ДополнительныеПараметры.ИдентификаторПакета);
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  Результат - Неопределено,Структура:
//  * ПараметрыВыполненияДействийПоЭДО - см. ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО
//  Контекст - Структура:
//  * ПараметрыДобавления - Структура:
//  ** ИдентификаторПакета - УникальныйИдентификатор
//  ** ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  ** Отправитель - ОпределяемыйТип.Организация
//  ** Получатель - ОпределяемыйТип.УчастникЭДО
//  ** Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  * ПараметрыФормирования - См. ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыСозданияДокументаПоФайлу
//  * ПараметрыФайла - Структура:
//  ** ИмяФайла - Строка
//  ** АдресХранилища - Строка
//
Процедура ДобавитьВПакетПослеОбработкиОшибокФормирования(Результат, Контекст) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ПараметрыВыполненияДействийПоЭДО)
		И ЗначениеЗаполнено(Результат.ПараметрыВыполненияДействийПоЭДО.ПодписантыОбъектов) Тогда
		Подписанты = Результат.ПараметрыВыполненияДействийПоЭДО.ПодписантыОбъектов[
			Контекст.ПараметрыДобавления.ЭлектронныйДокумент];
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Контекст.ПараметрыФормирования.Подписанты, Подписанты);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ПараметрыВыполненияДействийПоЭДО)
		И ЗначениеЗаполнено(Результат.ПараметрыВыполненияДействийПоЭДО.МаршрутыПодписанияОбъектов) Тогда
		МаршрутПодписания = Результат.ПараметрыВыполненияДействийПоЭДО.МаршрутыПодписанияОбъектов[
			Контекст.ПараметрыДобавления.ЭлектронныйДокумент];
		Если ЗначениеЗаполнено(МаршрутПодписания) Тогда
			Контекст.ПараметрыФормирования.МаршрутПодписания = МаршрутПодписания;
		КонецЕсли;	
	КонецЕсли;
		
	СформироватьИДобавитьПроизвольныйДокументВПакет(Контекст.ПараметрыДобавления, Контекст.ПараметрыФормирования,
		Контекст.ПараметрыФайла);
	
КонецПроцедуры

// Параметры:
//  ОписаниеПомещенногоФайла - ОписаниеПомещенногоФайла
//  ДополнительныеПараметры - Структура:
//  * ИдентификаторПакета - УникальныйИдентификатор
//  * ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  * Отправитель - ОпределяемыйТип.Организация
//  * Получатель - ОпределяемыйТип.УчастникЭДО
//  * Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  * ОтключитьТранслитерацию - Булево
//  * ОграниченияОбъемаПакетаДокументов - см. СервисНастроекЭДО.НовыеОграниченияОбъемаПакетаДокументов
//  * ОбъемПакетаДокументов - см. ПакетыДокументовЭДОКлиентСервер.НовыйОбъемПакетаДокументов
Процедура ДобавитьДокументВПакетИзФайлаНаДискеЗавершениеВыбораФайла(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	
	Если ОписаниеПомещенногоФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьДокументДляДобавленияВПакет(ОписаниеПомещенногоФайла.Адрес, ОписаниеПомещенногоФайла.СсылкаНаФайл.Имя,
		 ДополнительныеПараметры);
	
КонецПроцедуры

// Параметры:
//  ПараметрыДобавления - Структура:
//  * ИдентификаторПакета - УникальныйИдентификатор
//  * ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  * Отправитель - ОпределяемыйТип.Организация
//  * Получатель - ОпределяемыйТип.УчастникЭДО
//  * Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  * СозданиеНовогоПакета - Булево
//  ПараметрыФормирования - См. ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыСозданияДокументаПоФайлу
//  ПараметрыФайла - Структура:
// * ИмяФайла - Строка
// * АдресХранилища - Строка
Процедура СформироватьИДобавитьПроизвольныйДокументВПакет(ПараметрыДобавления, ПараметрыФормирования, ПараметрыФайла)
	
	ДокументыПакета = ?(ПараметрыДобавления.СозданиеНовогоПакета, Новый Массив,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыДобавления.ЭлектронныйДокумент));
	
	Результат = ИнтерфейсДокументовЭДОВызовСервера.СоздатьЭлектронныйДокументПоФайлу(
		ПараметрыФормирования, ПараметрыФайла);
	Если Не Результат.Успех Тогда
		Если Результат.Ошибки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Контекст = Новый Структура("ПараметрыДобавления, ПараметрыФормирования, ПараметрыФайла",
			ПараметрыДобавления, ПараметрыФормирования, ПараметрыФайла);
		Оповещение = Новый ОписаниеОповещения("ДобавитьВПакетПослеОбработкиОшибокФормирования",
			ПакетыДокументовЭДОКлиент, Контекст);
		ДополнительныеПараметры = Новый Структура("ОбъектыУчета", ДокументыПакета);
		ИнтерфейсДокументовЭДОКлиент.НачатьОбработкуОшибокФормированияДокумента(Оповещение, Результат.Ошибки,
			ДополнительныеПараметры);
		Возврат;
	КонецЕсли;
	
	Если ПараметрыДобавления.СозданиеНовогоПакета Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Результат.ЭлектронныйДокумент);
		ИнтерфейсДокументовЭДОКлиент.ОткрытьФормуЭлектронногоДокумента(ПараметрыФормы);
		Возврат;
		
	КонецЕсли;
	
	ДокументыПакета.Добавить(Результат.ЭлектронныйДокумент);
	ИдентификаторПакета = ПараметрыДобавления.ИдентификаторПакета;
	
	Если ЗначениеЗаполнено(ИдентификаторПакета) Тогда
		ПакетыДокументовЭДОВызовСервера.ДобавитьДокументВПакет(ИдентификаторПакета, Результат.ЭлектронныйДокумент);
	Иначе
		ИдентификаторПакета = ПакетыДокументовЭДОВызовСервера.СоздатьПакетДокументов(ДокументыПакета);
	КонецЕсли;
	
	Оповестить(ИмяСобытияДобавленияДокументаВПакет(), ДокументыПакета, ИдентификаторПакета);
	
КонецПроцедуры

// Параметры:
//  АдресХранилища - Строка
//  ИмяФайла - Строка
//  ДополнительныеПараметры - Структура:
//  * ИдентификаторПакета - УникальныйИдентификатор
//  * ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  * Отправитель - ОпределяемыйТип.Организация
//  * Получатель - ОпределяемыйТип.УчастникЭДО
//  * Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  * ОтключитьТранслитерацию - Булево
//  
Процедура ПодготовитьДокументДляДобавленияВПакет(АдресХранилища, ИмяФайла, ДополнительныеПараметры)
	
	ДополнительныеПараметры.Вставить("АдресХранилища", АдресХранилища);
	
	СтруктураИмениФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ИмяФайла);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПодготовитьДокументДляДобавленияВПакетЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	РаботаСФайламиБЭДКлиент.СкорректироватьИмяФайлаСУчетомКодировки(ОповещениеОЗавершении, СтруктураИмениФайла.Имя);
	
КонецПроцедуры

// Параметры:
//  ИмяФайла - Строка
//  ДополнительныеПараметры - Структура:
//  * АдресХранилища - Строка
//  * ИдентификаторПакета - УникальныйИдентификатор
//  * ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  * Отправитель - ОпределяемыйТип.Организация
//  * Получатель - ОпределяемыйТип.УчастникЭДО
//  * Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  * ОтключитьТранслитерацию - Булево
// 
Процедура ПодготовитьДокументДляДобавленияВПакетЗавершение(ИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ИмяФайла) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаПослеПреобразования = РаботаСФайламиБЭДКлиент.ПреобразоватьИмяФайлаСУчетомТранслитерации(
		ИмяФайла, ДополнительныеПараметры.ОтключитьТранслитерацию);

	ПараметрыФайла = Новый Структура;
	ПараметрыФайла.Вставить("ИмяФайла", ИмяФайлаПослеПреобразования);
	ПараметрыФайла.Вставить("АдресХранилища", ДополнительныеПараметры.АдресХранилища);

	СформироватьИДобавитьПроизвольныйДокументВПакетПолучитьРеквизиты(ДополнительныеПараметры, ПараметрыФайла);
	
КонецПроцедуры

// Параметры:
//  ОграниченияОбъемаПакетаДокументов - см. ПакетыДокументовЭДО.НовыеОграниченияОбъемаПакетаДокументовУчастников
//  ОбъемПакетаДокументов - см. ПакетыДокументовЭДОКлиентСервер.НовыйОбъемПакетаДокументов
//  ДополнительныеПараметры - см. НовыеПараметрыДобавленияВПакет
//
// Возвращаемое значение:
//  см. ПакетыДокументовЭДОКлиентСервер.НовыйРезультатПроверкиПревышения
Функция ПревышеноМаксимальноеКоличествоДокументовВПакете(ОграниченияОбъемаПакетаДокументов, ОбъемПакетаДокументов,
	ДополнительныеПараметры)
	
	Если ДополнительныеПараметры.СозданиеНовогоПакета Тогда
		Возврат ПакетыДокументовЭДОКлиентСервер.НовыйРезультатПроверкиПревышения();
	КонецЕсли;
	
	Возврат ПакетыДокументовЭДОКлиентСервер.ПроверкаПревышенияМаксимальногоКоличестваДокументовВПакете(
		ОграниченияОбъемаПакетаДокументов, ОбъемПакетаДокументов, 1);
	
КонецФункции

// Параметры:
//  ОграниченияОбъемаПакетаДокументов - см. СервисНастроекЭДО.НовыеОграниченияОбъемаПакетаДокументов
//  ВыбранныйСпособДобавления - ЭлементСпискаЗначений
//							  - Строка
//  ДополнительныеПараметры - см. НовыеПараметрыДобавленияВПакет
Процедура ПоказатьВопросОСозданииПакета(ОграниченияОбъемаПакетаДокументов, ВыбранныйСпособДобавления,
	ДополнительныеПараметры)
	
	ТекстВопроса = ТекстВопросаОСозданииПакета(ОграниченияОбъемаПакетаДокументов);
		
	ПараметрыОповещенияПослеВопроса = Новый Структура;
	ПараметрыОповещенияПослеВопроса.Вставить("ВыбранныйСпособДобавления", ВыбранныйСпособДобавления);
	ПараметрыОповещенияПослеВопроса.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросОСозданииПакета_Завершение",
		ЭтотОбъект, ПараметрыОповещенияПослеВопроса);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

// Параметры:
//  ОграниченияОбъемаПакетаДокументов - см. СервисНастроекЭДО.НовыеОграниченияОбъемаПакетаДокументов
//
// Возвращаемое значение:
//  Строка
Функция ТекстВопросаОСозданииПакета(ОграниченияОбъемаПакетаДокументов) Экспорт
	
	Возврат 
		СтрШаблон(НСтр("ru = 'Невозможно добавить документ из-за ограничений оператора %1 (не более %2 документов в пакете).
		|Сформировать еще один пакет документов?'"), ОграниченияОбъемаПакетаДокументов.ОператорЭДО,
		ОграниченияОбъемаПакетаДокументов.МаксимальноеКоличествоЭДВПакете);
	
КонецФункции

// Параметры:
//  Результат - КодВозвратаДиалога
//  ПараметрыОповещенияПослеВопроса - Структура:
//										* ВыбранныйСпособДобавления - ЭлементСпискаЗначений
//																	- Строка
//										* ДополнительныеПараметры - см. НовыеПараметрыДобавленияВПакет
Процедура ПоказатьВопросОСозданииПакета_Завершение(Результат, ПараметрыОповещенияПослеВопроса) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ПараметрыОповещенияПослеВопроса.ДополнительныеПараметры;
	ДополнительныеПараметры.СозданиеНовогоПакета = Истина;
	ДополнительныеПараметры.ОбъемПакетаДокументов = ПакетыДокументовЭДОКлиентСервер.НовыйОбъемПакетаДокументов();
	ДобавитьДокументВПакет(ПараметрыОповещенияПослеВопроса.ВыбранныйСпособДобавления, ДополнительныеПараметры);
	
КонецПроцедуры

// Параметры:
//  ПомещаемыйФайл - СсылкаНаФайл
//  ОтказОтПомещенияФайла - Булево
//  ДополнительныеПараметры - см. НовыеПараметрыДобавленияВПакет
Процедура ПередНачаломДобавленияФайлаВПакет(ПомещаемыйФайл, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт
	
	РезультатПроверкиПревышения = ПакетыДокументовЭДОКлиентСервер.ПроверкаПревышенияМаксимальногоРазмераПакета(
		ДополнительныеПараметры.ОграниченияОбъемаПакетаДокументов, ДополнительныеПараметры.ОбъемПакетаДокументов,
			ПомещаемыйФайл.Размер());
	Если РезультатПроверкиПревышения.Превышено Тогда
		
		ПредупредитьОПревышенииМаксимальногоРазмерПакета(РезультатПроверкиПревышения.ПревышаемыеОграничения);
		ОтказОтПомещенияФайла = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  СпособДобавления - Строка
//  ДополнительныеПараметры - см. НовыеПараметрыДобавленияВПакет
Процедура ДобавитьДокументВПакет(СпособДобавления, ДополнительныеПараметры)
	
	Если СпособДобавления = "ДобавитьВПакетФайлСКомпьютера" Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьДокументВПакетИзФайлаНаДискеЗавершениеВыбораФайла",
			ЭтотОбъект, ДополнительныеПараметры);
		ПередНачаломДобавленияФайлаВПакет = Новый ОписаниеОповещения("ПередНачаломДобавленияФайлаВПакет",
			ЭтотОбъект, ДополнительныеПараметры);
		НачатьПомещениеФайлаНаСервер(ОписаниеОповещения,,ПередНачаломДобавленияФайлаВПакет,,, Новый УникальныйИдентификатор());
		
	ИначеЕсли СпособДобавления = "ДобавитьВПакетПрисоединенныйФайл" Тогда
		
		Параметры = ИнтеграцияБСПБЭДКлиент.НовыеПараметрыВыбораФайловИзОбщегоХранилища();
		Параметры.ЗакрыватьПриВыборе = Истина;
		Параметры.МножественныйВыбор = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ДобавитьДокументВПакетИзПрисоединенногоФайлаЗавершениеВыбора",
			ЭтотОбъект, ДополнительныеПараметры);
	
		ИнтеграцияБСПБЭДКлиент.ОткрытьФормуВыбораФайловИзОбщегоХранилища(Параметры, Оповещение);
		
	ИначеЕсли СпособДобавления = "ДобавитьВПакетДокументИнформационнойБазы" Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьВПакетДокументИнформационнойБазыЗавершениеВыбора",
			ЭтотОбъект, ДополнительныеПараметры);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ИдентификаторПакета", ДополнительныеПараметры.ИдентификаторПакета);
		ПараметрыФормы.Вставить("ЭлектронныйДокумент", ДополнительныеПараметры.ЭлектронныйДокумент);
		ПараметрыФормы.Вставить("Организация", ДополнительныеПараметры.Отправитель);
		ПараметрыФормы.Вставить("Контрагент", ДополнительныеПараметры.Получатель);
		ПараметрыФормы.Вставить("Договор", ДополнительныеПараметры.Договор);
		ПараметрыФормы.Вставить("ОтключитьТранслитерацию", ДополнительныеПараметры.ОтключитьТранслитерацию);
		ПараметрыФормы.Вставить("ОграниченияОбъемаПакетаДокументов", ДополнительныеПараметры.ОграниченияОбъемаПакетаДокументов);
		ПараметрыФормы.Вставить("ОбъемПакетаДокументов", ДополнительныеПараметры.ОбъемПакетаДокументов);
		ПараметрыФормы.Вставить("СозданиеНовогоПакета", ДополнительныеПараметры.СозданиеНовогоПакета);
		
		ОткрытьФорму("РегистрСведений.ПакетыДокументовЭДО.Форма.ДобавлениеДокументовВПакет", ПараметрыФормы, , , , ,
			Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
