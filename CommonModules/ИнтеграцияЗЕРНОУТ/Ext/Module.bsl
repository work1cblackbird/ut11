#Область ПрограммныйИнтерфейс

// Коэффициенты единиц измерения ЗЕРНО.
// 
// Параметры:
//  ДанныеСтрокЗЕРНО - Массив Из Структура:
//   * Номенклатура - СправочникСсылка.Номенклатура - обязательное поле
//     - Строки в массиве
// 
// Возвращаемое значение:
//  Соответствие Из СправочникСсылка.Номенклатура - ключ ссылка на номенклатуру, значение структура:
//   * КодОшибки - Число  - Код ошибки получения коэффициента:
//        0 - Нет ошибок;
//        1 - Не заполнена единица измерения в справочнике 'ЕдиницыИзмеренияВЕТИС';
//        2 - В справочнике 'Номенклатура' выключена возможность пересчета количества в соответствующую мерную единицу измерения;
//        3 - Не удалось сопоставить единицу хранения справочника 'Номенклатура' с единицей измерения  "Килограмм".
//   * Коэффициент - Число  - Коэффициент пересчета единицы измерения из "Килограмм".
Функция КоэффициентыЕдиницИзмеренияЗЕРНО(ДанныеСтрокЗЕРНО) Экспорт
	
	Если ДанныеСтрокЗЕРНО.Количество() = 0 Тогда
		Возврат Новый Соответствие;
	КонецЕсли;
	
	ШаблонРезультата = Новый Структура;
	ШаблонРезультата.Вставить("КодОшибки",   0);
	ШаблонРезультата.Вставить("Коэффициент", 1);
	
	Номенклатура = Новый Массив; //Массив Из СправочникСсылка.Номенклатура
	Для каждого СтрокаИсточника Из ДанныеСтрокЗЕРНО Цикл
		Номенклатура.Добавить(СтрокаИсточника.Номенклатура);
	КонецЦикла;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЕдиницаИзмеренияКилограммИС.Значение КАК Упаковка
	|ПОМЕСТИТЬ ДанныеУпаковок
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура,
	|	Константа.ЕдиницаИзмеренияКилограммИС КАК ЕдиницаИзмеренияКилограммИС
	|		ГДЕ Номенклатура.Ссылка В (&Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеУпаковок.Номенклатура КАК Номенклатура,
	|	ДанныеУпаковок.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ДанныеУпаковок.Упаковка = Номенклатура.ЕдиницаИзмерения
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 0)
	|	КОНЕЦ КАК Коэффициент
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ЕдиницыХранения
	|		ПО Номенклатура.ЕдиницаИзмерения = ЕдиницыХранения.Ссылка";

	ИсточникНоменклатуры = "Номенклатура";
	ИсточникУпаковки     = "Упаковка";
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(ИсточникУпаковки, ИсточникНоменклатуры));

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	КоэффициентыУпаковокНоменклатуры = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		
		Результат = ОбщегоНазначения.СкопироватьРекурсивно(ШаблонРезультата);
		
		Если Выборка.Коэффициент = 0 Тогда
			Результат.Коэффициент = 1;
			Результат.КодОшибки = 3;
		Иначе
			Результат.Коэффициент = Выборка.Коэффициент;
		КонецЕсли;
		
		КоэффициентыУпаковокНоменклатуры.Вставить(Выборка.Номенклатура, Результат);
		
	КонецЦикла;
	
	Возврат КоэффициентыУпаковокНоменклатуры;
	
КонецФункции

// Возвращает массив особенностей учета номенклатуры подсистемы
//
// Возвращаемое значение:
//   Массив из ПеречислениеСсылка.ОсобенностиУчетаНоменклатуры
Функция ОсобенностиУчетаНоменклатуры() Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.Зерно);
	Массив.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.ЗерноВЕТИС);
	Массив.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна);
	Массив.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС);
	
	Возврат Массив;
	
КонецФункции

#Область Серии

// Параметры указания серий внесение сведений о собранном урожае ЗЕРНО.
// 
// Параметры:
//  Объект - ДокументОбъект - Объект
// 
// Возвращаемое значение:
//  См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
Функция ПараметрыУказанияСерийВнесениеСведенийОСобранномУрожаеЗЕРНО(Объект) Экспорт
	
	ПараметрыУказанияСерий        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ПолноеИмяОбъекта               = "Документ.ВнесениеСведенийОСобранномУрожаеЗЕРНО";
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии                     = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад                   = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Параметры указания серий запрос остатков партий ЗЕРНО.
// 
// Параметры:
//  Объект - ДокументОбъект - Объект
// 
// Возвращаемое значение:
//  См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
Функция ПараметрыУказанияСерийЗапросОстатковПартийЗЕРНО(Объект) Экспорт
	
	ПараметрыУказанияСерий        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ПолноеИмяОбъекта               = "Документ.ЗапросОстатковПартийЗЕРНО";
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧТовары                    = "ОстаткиПоДаннымЗЕРНО";
	ПараметрыУказанияСерий.ИмяТЧСерии                     = "ОстаткиПоДаннымЗЕРНО";
	ПараметрыУказанияСерий.ИмяПоляСклад                   = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Параметры указания серий оформление СДИЗ ЗЕРНО.
// 
// Параметры:
//  Объект - ДокументОбъект - Объект
// 
// Возвращаемое значение:
//  См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
Функция ПараметрыУказанияСерийОформлениеСДИЗЗЕРНО(Объект) Экспорт
	
	ПараметрыУказанияСерий        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ПолноеИмяОбъекта               = "Документ.ОформлениеСДИЗЗЕРНО";
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии                     = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад                   = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Параметры указания серий погашение СДИЗ ЗЕРНО.
// 
// Параметры:
//  Объект - ДокументОбъект - Объект
// 
// Возвращаемое значение:
//  См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
Функция ПараметрыУказанияСерийПогашениеСДИЗЗЕРНО(Объект) Экспорт
	
	ПараметрыУказанияСерий        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ПолноеИмяОбъекта               = "Документ.ПогашениеСДИЗЗЕРНО";
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии                     = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад                   = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Параметры указания серий списание партий ЗЕРНО.
// 
// Параметры:
//  Объект - ДокументОбъект - Объект
// 
// Возвращаемое значение:
//  См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
Функция ПараметрыУказанияСерийСписаниеПартийЗЕРНО(Объект) Экспорт
	
	ПараметрыУказанияСерий        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ПолноеИмяОбъекта               = "Документ.СписаниеПартийЗЕРНО";
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии                     = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад                   = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Параметры указания серий формирование партий ЗЕРНО.
// 
// Параметры:
//  Объект - ДокументОбъект - Объект
// 
// Возвращаемое значение:
//  См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
Функция ПараметрыУказанияСерийФормированиеПартийЗЕРНО(Объект) Экспорт
	
	ПараметрыУказанияСерий        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ПолноеИмяОбъекта               = "Документ.ФормированиеПартийЗЕРНО";
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии                     = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад                   = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Параметры указания серий формирование партий из других партий ЗЕРНО.
// 
// Параметры:
//  Объект - ДокументОбъект - Объект
// 
// Возвращаемое значение:
//  См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
Функция ПараметрыУказанияСерийФормированиеПартийИзДругихПартийЗЕРНО(Объект) Экспорт
	
	ПараметрыУказанияСерий        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ПолноеИмяОбъекта               = "Документ.ФормированиеПартийИзДругихПартийЗЕРНО";
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ТоварВШапке                    = Истина;
	ПараметрыУказанияСерий.ИмяПоляСклад                   = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	ПараметрыУказанияСерий.ИмяТЧТовары                    = Неопределено;
	ПараметрыУказанияСерий.ИмяТЧСерии                     = Неопределено;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Параметры указания серий формирование партий при производстве ЗЕРНО.
// 
// Параметры:
//  Объект - ДокументОбъект - Объект
// 
// Возвращаемое значение:
//  Структура - параметры указания серий объектов:
//  * Шапка - См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
//  * Сырье - См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
Функция ПараметрыУказанияСерийФормированиеПартийПриПроизводствеЗЕРНО(Объект) Экспорт
	
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	Шапка        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	Шапка.ПолноеИмяОбъекта               = "Документ.ФормированиеПартийПриПроизводствеЗЕРНО";
	Шапка.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	Шапка.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	Шапка.ТоварВШапке                    = Истина;
	Шапка.ИмяПоляСклад                   = Неопределено;
	Шапка.ПодготовкаОрдера               = Истина;
	Шапка.ИмяТЧТовары                    = Неопределено;
	Шапка.ИмяТЧСерии                     = Неопределено;
	
	Сырье        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	Сырье.ПолноеИмяОбъекта               = "Документ.ФормированиеПартийПриПроизводствеЗЕРНО";
	Сырье.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	Сырье.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	Сырье.ИмяТЧТовары                    = "Сырье";
	Сырье.ИмяТЧСерии                     = "Сырье";
	Сырье.ИмяПоляСклад                   = Неопределено;
	Сырье.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий = Новый Структура("Шапка,Сырье", Шапка, Сырье);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Параметры указания серий соответствие партий ЗЕРНО.
// 
// Параметры:
//  Объект - ДокументОбъект - Объект
// 
// Возвращаемое значение:
//  См. НоменклатураКлиентСервер.ПараметрыУказанияСерий
Функция ПараметрыУказанияСерийСоответствиеПартийЗЕРНО(Объект) Экспорт
	
	ПараметрыУказанияСерий        = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "РегистрСведений.СоответствиеПартийЗЕРНО";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

#Область ОбщиеПроцедуры

Процедура ЗаполнитьТабличнуюЧастьДокумента(ТабличнаяЧасть, РезультатЗапроса, ДанныеЗаполнения, СоответствиеКолонокКоличествоЗЕРНО, БезСопоставления = Истина, ДополнительныеПараметры = Неопределено)
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Если Выборка.Количество() = 0 
		И ТипЗнч(ТабличнаяЧасть)<> Тип("ДокументТабличнаяЧасть.ФормированиеПартийПриПроизводствеЗЕРНО.Сырье") Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'В %1 отсутствует продукция для заполнения.'"),
			Основание);
		
	КонецЕсли;
	
	КолонкиТабличнойЧасти = ТабличнаяЧасть.Выгрузить(Новый Массив);
	ЕстьКоличествоЗЕРНО   = КолонкиТабличнойЧасти.Колонки.Найти("КоличествоЗЕРНО") <> Неопределено;
	ЕстьСкладКонтрагент   = КолонкиТабличнойЧасти.Колонки.Найти("СкладКонтрагент") <> Неопределено;
	ЕстьМестоположение    = КолонкиТабличнойЧасти.Колонки.Найти("Местоположение") <> Неопределено;
	ЕстьСерии             = КолонкиТабличнойЧасти.Колонки.Найти("Серия") <> Неопределено;
	ЕстьИдентификатор     = КолонкиТабличнойЧасти.Колонки.Найти("Идентификатор") <> Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если ЕстьИдентификатор И НЕ ЗначениеЗаполнено(НоваяСтрока.Идентификатор) Тогда
			НоваяСтрока.Идентификатор = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		
		Если ЕстьСерии И ЗначениеЗаполнено(НоваяСтрока.Серия) Тогда
			НоваяСтрока.СтатусУказанияСерий = 2;
		КонецЕсли;
		
		// Связанные табличные части
		Если ДополнительныеПараметры <> Неопределено
			И ДополнительныеПараметры.Свойство("ПотребительскиеСвойства") Тогда
			
			ПотребительскиеСвойстваПоОДКПД2 = ИнтеграцияЗЕРНО.ПотребительскиеСвойстваПродукцииПоДаннымОКПД2(НоваяСтрока.ОКПД2);
			
			Для Каждого ЭлементДанных Из ПотребительскиеСвойстваПоОДКПД2 Цикл
				СтрокаТЧ = ДополнительныеПараметры.ПотребительскиеСвойства.Добавить();
				СтрокаТЧ.ПотребительскоеСвойство = ЭлементДанных.ПотребительскоеСвойство;
				СтрокаТЧ.ИдентификаторСтрокиТоваров = НоваяСтрока.Идентификатор;
			КонецЦикла;
			
		КонецЕсли;
		
		Если ДополнительныеПараметры <> Неопределено
			И ДополнительныеПараметры.Свойство("ЗаполнитьСкладВШапке")
			И НоваяСтрока.НомерСтроки = 1 Тогда
			
			ДополнительныеПараметры.ДокументОбъект[ДополнительныеПараметры.ИмяПоляСклад] = Выборка[ДополнительныеПараметры.ИмяПоляСклад];
			
		КонецЕсли;
		
		Если ДополнительныеПараметры <> Неопределено
			И ДополнительныеПараметры.Свойство("ДобавленныеСтроки") Тогда
			
			ДополнительныеПараметры.ДобавленныеСтроки.Добавить(НоваяСтрока);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьСкладКонтрагент И ЕстьМестоположение Тогда
		
		МассивСкладов = ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "СкладКонтрагент", Истина);
		
		КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
			МассивСкладов, Перечисления.ТипыКонтактнойИнформации.Адрес,, Основание.Дата);
			
		Для Каждого СтрокаКИ из КонтактнаяИнформация Цикл
			
			СтруктураОтбора = Новый Структура("СкладКонтрагент", СтрокаКИ.Объект);
			МассивСтрок = ТабличнаяЧасть.НайтиСтроки(СтруктураОтбора);
				
			Для Каждого СтрокаТаблицы Из МассивСтрок Цикл	
				СтрокаТаблицы.Местоположение = СтрокаКИ.Значение;
				СтрокаТаблицы.МестоположениеСтрокой = СтрокаКИ.Представление;
			КонецЦикла;
			
		КонецЦикла;

	КонецЕсли;
	
	Если ЕстьКоличествоЗЕРНО Тогда
		
		ДанныеДляПересчета = КоэффициентыЕдиницИзмеренияЗЕРНО(ТабличнаяЧасть);
		
		Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
			Для Каждого Колонка Из СоответствиеКолонокКоличествоЗЕРНО Цикл
				
				Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда
					СтрокаТабличнойЧасти[Колонка.Значение] = Неопределено;
				Иначе
					ДанныеЕдиницыИзмерения = ДанныеДляПересчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
					Если ДанныеЕдиницыИзмерения.КодОшибки <> 0 Тогда
						СтрокаТабличнойЧасти[Колонка.Значение] = Неопределено;
					КонецЕсли;
					
					СтрокаТабличнойЧасти[Колонка.Значение] = СтрокаТабличнойЧасти[Колонка.Ключ] / ДанныеЕдиницыИзмерения.Коэффициент;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОписаниеТабличнойЧасти(ИмяТабличнойЧастиСерии = "")
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",         "Товары");
	Результат.Вставить("Серии",          ИмяТабличнойЧастиСерии);
	Результат.Вставить("ПолеКоличество", "ТаблицаТовары.Количество");
	Возврат Результат;
	
КонецФункции

Функция ОпределитьТипОснования(Знач ДанныеЗаполнения)
	
	ОснованиеЗаполнения = ДанныеЗаполнения;
	Если ТипЗнч(ОснованиеЗаполнения) = Тип("Структура") И ОснованиеЗаполнения.Свойство("Основание") Тогда
		ОснованиеЗаполнения = ОснованиеЗаполнения.Основание;
	КонецЕсли;
	Возврат ТипЗнч(ОснованиеЗаполнения);
	
КонецФункции

Функция ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Основание") Тогда
		Возврат ДанныеЗаполнения.Основание;
	Иначе
		Возврат ДанныеЗаполнения;
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьМестоположениеДляСкладаВШапке(ДокументОбъект, ИмяПоляСклад, ИмяРеквизита)
	
	Если ЗначениеЗаполнено(ДокументОбъект[ИмяПоляСклад]) Тогда
		
		КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			ДокументОбъект[ИмяПоляСклад], Перечисления.ТипыКонтактнойИнформации.Адрес, ДокументОбъект.Дата, Ложь);
		
		Если КонтактнаяИнформация.Количество() > 0 Тогда
			ДокументОбъект[ИмяРеквизита] = КонтактнаяИнформация[0].Значение;
			ДокументОбъект[ИмяРеквизита + "Строкой"] = КонтактнаяИнформация[0].Представление;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеПартийЗЕРНО

Процедура ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование",            ДокументОснование);
	Запрос.УстановитьПараметр("ФормированиеПартииИзОстатков", Перечисления.ВидыОперацийЗЕРНО.ФормированиеПартииИзОстатков);
	Запрос.УстановитьПараметр("ФормированиеПартииИмпорт",     Перечисления.ВидыОперацийЗЕРНО.ФормированиеПартииИмпорт);
	Запрос.УстановитьПараметр("ПричинаСписанияИспорчено",     Справочники.КлассификаторНСИЗЕРНО.ПричинаСписанияИспорчено);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		
		ИнтеграцияИСУТ.ПроверитьВозможностьВводаНаОсновании(РеквизитыДокумента);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ГодУрожая = Год(РеквизитыДокумента.Дата);
		
		Если ДокументОбъект.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗЕРНО.ФормированиеПартииИмпорт") Тогда
			ДокументОбъект.НазначениеПартии = Справочники.КлассификаторНСИЗЕРНО.НазначениеПартииВвозНаТерриториюРФ;
		Иначе
			ДокументОбъект.НазначениеПартии = Справочники.КлассификаторНСИЗЕРНО.НазначениеПартииХранениеОбработка;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, ДопустимыйЗнак)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ИнтеграцияЗЕРНОКлиентСерверПовтИсп.УчитываемыеВидыПродукции());
	ОсобенностьУчета   = Новый Массив;
	Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
		ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
	КонецЦикла;
	Если ЗначениеЗаполнено(ДокументОбъект.ВидПродукции) Тогда
		ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ДокументОбъект.ВидПродукции);
		ОсобенностьУчета   = Новый Массив;
		Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
			ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ДанныеЗаполнения.ЗначениеФильтра);
			ОсобенностьУчета   = Новый Массив;
			Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
				ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
			КонецЦикла;
		КонецЕсли;
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.ПотребительскиеСвойства.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияФормированиеПартийЗЕРНОИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	Запрос.УстановитьПараметр("ОсобенностьУчета",  ОсобенностьУчета);
	
	КолонкиКоличестваЗЕРНО = Новый Структура;
	КолонкиКоличестваЗЕРНО.Вставить("Количество", "КоличествоЗЕРНО");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПотребительскиеСвойства", ДокументОбъект.ПотребительскиеСвойства);
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличестваЗЕРНО,,ДополнительныеПараметры);
	
	Если ТипЗнч(ОсобенностьУчета) = Тип("Массив") Тогда
		ИнтеграцияИС.ЗаполнитьВидПродукцииПоТабличнойЧасти(ДокументОбъект);
		Если ЗначениеЗаполнено(ДокументОбъект.ВидПродукции) Тогда
			ДокументОбъект.ВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.ВидыПродукции(ДокументОбъект.ВидПродукции)[0];
		КонецЕсли;
	Иначе
		ДокументОбъект.ВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.ВидыПродукции(ФильтрВидПродукции)[0];
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияФормированиеПартийЗЕРНОИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак)
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ФормированиеПартийЗЕРНО КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|;"
	+
	ТекстТоварыДокумента
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура    КАК Номенклатура,
	|	ТоварыСерии.Характеристика  КАК Характеристика,
	|	ТоварыСерии.Серия           КАК Серия,
	|	ТоварыСерии.СкладКонтрагент КАК СкладКонтрагент,
	|	ТоварыСерии.Количество      КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура    КАК Номенклатура,
	|	ОформленныеТовары.Характеристика  КАК Характеристика,
	|	ОформленныеТовары.Серия           КАК Серия,
	|	ОформленныеТовары.СкладКонтрагент КАК СкладКонтрагент,
	|	-ОформленныеТовары.Количество     КАК Количество
	|ИЗ
	|	Документ.ФормированиеПартийЗЕРНО.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			Т.Ссылка
	|		ИЗ
	|			ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура           КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика         КАК Характеристика,
	|	ТоварыКОформлению.Серия                  КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество)      КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)      КАК КоличествоЗЕРНО,
	|	ТоварыКОформлению.Серия.ДатаПроизводства КАК ДатаИзготовления,
	|	ТоварыКОформлению.Серия.ГоденДо          КАК СрокГодности,
	|	ТоварыКОформлению.СкладКонтрагент        КАК СкладКонтрагент,
	|	СправочникНоменклатура.КодТНВЭД.Код      КАК КодТНВЭД,
	|	СправочникНоменклатура.КодОКПД2.Код      КАК ОКПД2
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТоварыКОформлению.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Серия.ДатаПроизводства,
	|	ТоварыКОформлению.Серия.ГоденДо,
	|	ТоварыКОформлению.СкладКонтрагент,
	|	СправочникНоменклатура.КодТНВЭД.Код,
	|	СправочникНоменклатура.КодОКПД2.Код
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	Возврат Текст;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииЗаказаПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда 
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииОприходованиеИзлишковТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПересортицаТоваров") Тогда 
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПрочееОприходованиеТоваров") Тогда 
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПрочегоОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПорчаТоваров") Тогда
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПорчиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПорчаТоваровУХранителя") Тогда
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПорчаТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПересортицаТоваровУХранителя") Тогда 
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПересортицыТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОприходованиеИзлишковТоваровУХранителя") Тогда 
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииОприходованиеИзлишковТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииОприходованиеИзлишковТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка         КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен    КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный  КАК Ответственный,
	|	ДокументСсылка.Организация    КАК Организация,
	|	ДокументСсылка.Подразделение  КАК Подразделение,
	|	ДокументСсылка.Дата           КАК Дата,
	|	ДокументСсылка.Склад          КАК Склад,
	|	&ФормированиеПартииИзОстатков КАК Операция
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура      КАК Номенклатура,
	|	Товары.Характеристика    КАК Характеристика,
	|	Товары.Серия             КАК Серия,
	|	Товары.Ссылка.Склад      КАК СкладКонтрагент,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Ссылка.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СкладКонтрагент
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка         КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен    КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный  КАК Ответственный,
	|	ДокументСсылка.Организация    КАК Организация,
	|	ДокументСсылка.Подразделение  КАК Подразделение,
	|	ДокументСсылка.Дата           КАК Дата,
	|	ДокументСсылка.Склад          КАК Склад,
	|	&ФормированиеПартииИзОстатков КАК Операция
	|ИЗ
	|	Документ.ПересортицаТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НоменклатураОприходование   КАК Номенклатура,
	|	Товары.ХарактеристикаОприходование КАК Характеристика,
	|	Товары.СерияОприходование          КАК Серия,
	|	Товары.Ссылка.Склад                КАК СкладКонтрагент,
	|	СУММА(Товары.Количество)           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.НоменклатураОприходование = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.Ссылка.Склад,
	|	Товары.СерияОприходование
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СкладКонтрагент
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 0);
	
КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПорчиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Подразделение КАК Подразделение,
	|	ДокументСсылка.Дата          КАК Дата,
	|	ДокументСсылка.Склад         КАК СкладКонтрагент,
	|	&ПричинаСписанияИспорчено    КАК ПричинаСписания
	|ИЗ
	|	Документ.ПорчаТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НоменклатураОприходование                   КАК Номенклатура,
	|	Товары.ХарактеристикаОприходование                 КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	Товары.Ссылка.Склад                                КАК СкладКонтрагент,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.Серия,
	|	Товары.Ссылка.Склад
	|
	|ИМЕЮЩИЕ СУММА(Товары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПорчаТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Подразделение КАК Подразделение,
	|	ДокументСсылка.Дата          КАК Дата,
	|	ДокументСсылка.Контрагент    КАК СкладКонтрагент,
	|	&ПричинаСписанияИспорчено    КАК ПричинаСписания
	|ИЗ
	|	Документ.ПорчаТоваровУХранителя КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НоменклатураОприходование                   КАК Номенклатура,
	|	Товары.ХарактеристикаОприходование                 КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	Товары.Ссылка.Контрагент                           КАК СкладКонтрагент,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПорчаТоваровУХранителя.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.Серия,
	|	Товары.Ссылка.Контрагент
	|
	|ИМЕЮЩИЕ СУММА(Товары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПересортицыТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка         КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен    КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный  КАК Ответственный,
	|	ДокументСсылка.Организация    КАК Организация,
	|	ДокументСсылка.Подразделение  КАК Подразделение,
	|	ДокументСсылка.Дата           КАК Дата,
	|	ДокументСсылка.Контрагент     КАК Контрагент,
	|	&ФормированиеПартииИзОстатков КАК Операция
	|ИЗ
	|	Документ.ПересортицаТоваровУХранителя КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НоменклатураОприходование   КАК Номенклатура,
	|	Товары.ХарактеристикаОприходование КАК Характеристика,
	|	Товары.Серия                       КАК Серия,
	|	Товары.Ссылка.Контрагент           КАК СкладКонтрагент,
	|	СУММА(Товары.Количество)           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПересортицаТоваровУХранителя.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.НоменклатураОприходование = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.Ссылка.Контрагент,
	|	Товары.Серия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СкладКонтрагент
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 0);
	
КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПрочегоОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка         КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен    КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный  КАК Ответственный,
	|	ДокументСсылка.Организация    КАК Организация,
	|	ДокументСсылка.Подразделение  КАК Подразделение,
	|	ДокументСсылка.Дата           КАК Дата,
	|	ДокументСсылка.Склад          КАК Склад,
	|	&ФормированиеПартииИзОстатков КАК Операция
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура      КАК Номенклатура,
	|	Товары.Характеристика    КАК Характеристика,
	|	Товары.Серия             КАК Серия,
	|	Товары.Ссылка.Склад      КАК СкладКонтрагент,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Ссылка.Склад,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура      КАК Номенклатура,
	|	Серии.Характеристика    КАК Характеристика,
	|	Серии.Серия             КАК Серия,
	|	Серии.Ссылка.Склад      КАК СкладКонтрагент,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Ссылка.Склад,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                    КАК Номенклатура,
	|	Товары.Характеристика                                  КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                     КАК Серия,
	|	ЕСТЬNULL(Серии.СкладКонтрагент,Товары.СкладКонтрагент) КАК СкладКонтрагент,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)          КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 1);
	
КонецПроцедуры



Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииЗаказаПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка         КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен    КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Менеджер       КАК Ответственный,
	|	ДокументСсылка.Организация    КАК Организация,
	|	ДокументСсылка.Подразделение  КАК Подразделение,
	|	ДокументСсылка.Дата           КАК Дата,
	|	ДокументСсылка.Склад          КАК Склад,
	|	&ФормированиеПартииИмпорт     КАК Операция
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	&ПустаяСерия                    КАК Серия,
	|	ТаблицаДокумента.Склад          КАК СкладКонтрагент,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ТаблицаДокумента
	|		ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаДокумента.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура              КАК Номенклатура,
	|	Товары.Характеристика            КАК Характеристика,
	|	Товары.Серия                     КАК Серия,
	|	Товары.СкладКонтрагент           КАК СкладКонтрагент,
	|	Товары.Количество                КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 1);
	
КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииОприходованиеИзлишковТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка         КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен    КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный  КАК Ответственный,
	|	ДокументСсылка.Организация    КАК Организация,
	|	ДокументСсылка.Подразделение  КАК Подразделение,
	|	ДокументСсылка.Дата           КАК Дата,
	|	&ФормированиеПартииИзОстатков КАК Операция
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваровУХранителя КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура      КАК Номенклатура,
	|	Товары.Характеристика    КАК Характеристика,
	|	Товары.Серия             КАК Серия,
	|	Товары.Ссылка.Контрагент КАК СкладКонтрагент,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваровУХранителя.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Ссылка.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СкладКонтрагент
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Функция ДанныеПрикладныхДокументовИзФормированияПартийЗЕРНО(ДокументСсылка, ПолучитьШапку = Истина, ПолучитьТовары = Истина)

	СписокЗапросов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Если ПолучитьШапку Тогда
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ФормированиеПартийЗЕРНО.Организация КАК Организация,
		|	ФормированиеПартийЗЕРНО.Дата КАК Дата,
		|	ФормированиеПартийЗЕРНО.Комментарий КАК Комментарий,
		|	ФормированиеПартийЗЕРНО.Подразделение КАК Подразделение,
		|	ФормированиеПартийЗЕРНО.Ответственный КАК Ответственный
		|ИЗ
		|	Документ.ФормированиеПартийЗЕРНО КАК ФормированиеПартийЗЕРНО
		|ГДЕ
		|	ФормированиеПартийЗЕРНО.Ссылка = &Ссылка
		|", "Шапка");
		
	КонецЕсли;
	
	Если ПолучитьТовары Тогда
		
		Запрос.УстановитьПараметр("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.ОсновнаяСтрана());
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|	СтавкиНДСНоменклатуры.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ СтавкиНДСНоменклатуры
		|ИЗ
		|	(ВЫБРАТЬ
		|		СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна КАК Страна,
		|		МАКСИМУМ(СтавкиНДСНоменклатуры.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ФормированиеПартийЗЕРНО.Товары КАК ФормированиеПартийЗЕРНОТовары
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ФормированиеПартийЗЕРНО КАК ФормированиеПартийЗЕРНО
		|				ПО ФормированиеПартийЗЕРНОТовары.Ссылка = ФормированиеПартийЗЕРНО.Ссылка
		|			ПО СтавкиНДСНоменклатуры.Номенклатура = ФормированиеПартийЗЕРНОТовары.Номенклатура
		|				И (СтавкиНДСНоменклатуры.Страна = &СтранаРегистрации
		|					ИЛИ СтавкиНДСНоменклатуры.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И СтавкиНДСНоменклатуры.Период <= ФормированиеПартийЗЕРНО.Дата
		|	ГДЕ
		|		ФормированиеПартийЗЕРНОТовары.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		СтавкиНДСНоменклатуры.Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|	ПО АктуальныеСтавкиНДС.Период = СтавкиНДСНоменклатуры.Период
		|		И АктуальныеСтавкиНДС.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
		|		И АктуальныеСтавкиНДС.Страна = СтавкиНДСНоменклатуры.Страна
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеСтавкиНДС.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ОсновныеСтавкиНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеСтавкиНДС.Страна КАК Страна,
		|		МАКСИМУМ(ОсновныеСтавкиНДС.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ФормированиеПартийЗЕРНО КАК ФормированиеПартийЗЕРНО
		|			ПО (ОсновныеСтавкиНДС.Страна = &СтранаРегистрации
		|					ИЛИ ОсновныеСтавкиНДС.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И ОсновныеСтавкиНДС.Период <= ФормированиеПартийЗЕРНО.Дата
		|	ГДЕ
		|		ФормированиеПартийЗЕРНО.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		ОсновныеСтавкиНДС.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|	ПО АктуальныеСтавкиНДС.Период = ОсновныеСтавкиНДС.Период
		|		И АктуальныеСтавкиНДС.Страна = ОсновныеСтавкиНДС.Страна
		|");
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ФормированиеПартийЗЕРНОТовары.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
		|		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
		|	ФормированиеПартийЗЕРНОТовары.Характеристика КАК Характеристика,
		|	ФормированиеПартийЗЕРНОТовары.Серия КАК Серия,
		|	ВЫРАЗИТЬ(ФормированиеПартийЗЕРНОТовары.СкладКонтрагент КАК Справочник.Склады) КАК Склад,
		|	ФормированиеПартийЗЕРНОТовары.Количество КАК Количество,
		|	ФормированиеПартийЗЕРНОТовары.Количество КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ФормированиеПартийЗЕРНО.Товары КАК ФормированиеПартийЗЕРНОТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|		ПО ФормированиеПартийЗЕРНОТовары.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура,
		|	ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|ГДЕ
		|	ФормированиеПартийЗЕРНОТовары.Ссылка = &Ссылка", "Товары");
		
	КонецЕсли;
	
	Возврат ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);

КонецФункции

Процедура ЗаполнитьШапкуПрикладногоДокументаНаОснованииФормированияПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения)
	
	Выборка = ДанныеЗаполнения.Выбрать();
	Выборка.Следующий();
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Организация",   Выборка.Организация);
	Реквизиты.Вставить("Дата",          Выборка.Дата);
	Реквизиты.Вставить("Комментарий",   Выборка.Комментарий);
	Реквизиты.Вставить("Подразделение", Выборка.Подразделение);
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
	
КонецПроцедуры

Функция СтруктураЗаполненияТабличныхЧастейПоФормированиюПартийЗЕРНО(ДанныеЗаполнения, ЕстьСерии = Ложь, ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары", ДанныеЗаполнения.Выгрузить());
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЕстьСкладВТабличнойЧасти");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииФормированияПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ДокументОснование)
	
	ЕстьСкладВТабличнойЧасти = ДанныеЗаполнения.Свойство("ЕстьСкладВТабличнойЧасти");
	МетаданныеДокументаОформления = ДокументОбъект.Метаданные().Синоним;
	
	ДокументОбъект.Товары.Очистить();
	ДанныеСкладов = ОбщегоНазначения.ВыгрузитьКолонку(ДанныеЗаполнения.Товары, "Склад", Истина);
	
	Если ДанныеСкладов.Количество() > 1 Тогда
		
		ТекстОшибки = НСтр("ru = 'Документ %1 содержит несколько различных складов табличной части ""Товары"". Ввод на основании документа ""%2"" невозможен.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, ДокументОснование, МетаданныеДокументаОформления);
		
		ВызватьИсключение ТекстОшибки;
	
	КонецЕсли;
	
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			
		ДокументОбъект.Склад = СтрокаТовары.Склад;	
			
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, СтрокаТовары);
		Если ЕстьСкладВТабличнойЧасти Тогда
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;		
			
	КонецЦикла;

	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		
		ДокументОбъект[ИмяТЧСерии].Очистить();
		Для Каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
			Если ЗначениеЗаполнено(СтрокаТовары.Серия) Тогда
				НоваяСтрокаСерия = ДокументОбъект[ИмяТЧСерии].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерия, СтрокаТовары);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеПартийПриПроизводствеЗЕРНО

Процедура ЗаполнитьШапкуФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		
		ИнтеграцияИСУТ.ПроверитьВозможностьВводаНаОсновании(РеквизитыДокумента);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.НазначениеПартии = Справочники.КлассификаторНСИЗЕРНО.НазначениеПартииХранениеОбработка;
		
		ЗаполнитьМестоположениеДляСкладаВШапке(ДокументОбъект, "СкладКонтрагент", "Местоположение");
		
		Если ЗначениеЗаполнено(ДокументОбъект.Номенклатура) Тогда
			МассивДляПересчета = Новый Массив;
			СтруктураШапки = Новый Структура("Номенклатура", ДокументОбъект.Номенклатура);
			МассивДляПересчета.Добавить(СтруктураШапки);
			ДанныеДляПересчета = КоэффициентыЕдиницИзмеренияЗЕРНО(МассивДляПересчета);
			ДанныеЕдиницыИзмерения = ДанныеДляПересчета.Получить(ДокументОбъект.Номенклатура);
			
			Если ДанныеЕдиницыИзмерения.КодОшибки <> 0 Тогда
				ДокументОбъект.КоличествоЗЕРНО = Неопределено;
			КонецЕсли;
			
			ДокументОбъект.КоличествоЗЕРНО = ДокументОбъект.Количество / ДанныеЕдиницыИзмерения.Коэффициент;
			
			ПотребительскиеСвойстваПоОДКПД2 = ИнтеграцияЗЕРНО.ПотребительскиеСвойстваПродукцииПоДаннымОКПД2(ДокументОбъект.ОКПД2);
			
			Для Каждого ЭлементДанных Из ПотребительскиеСвойстваПоОДКПД2 Цикл
				СтрокаТЧ = ДокументОбъект.ПотребительскиеСвойства.Добавить();
				СтрокаТЧ.ПотребительскоеСвойство = ЭлементДанных.ПотребительскоеСвойство;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, ДопустимыйЗнак, ДополнительныеПараметры = Неопределено)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	ДокументОбъект.Сырье.Очистить();
	ДокументОбъект.ПотребительскиеСвойства.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияФормированиеПартийПриПроизводствеЗЕРНОИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	Если ДополнительныеПараметры <> Неопределено И ДополнительныеПараметры.Свойство("ТаблицаСырье") Тогда
		Запрос.УстановитьПараметр("Сырье", ДополнительныеПараметры.ТаблицаСырье);
	КонецЕсли;
	
	КолонкиКоличестваЗЕРНО = Новый Структура;
	КолонкиКоличестваЗЕРНО.Вставить("Количество", "КоличествоЗЕРНО");	
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Сырье, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличестваЗЕРНО,,ДополнительныеПараметры);
	
	СписокСтрок = Новый Массив();
	Для Каждого СтрокаТаблицы Из ДокументОбъект.Сырье Цикл
		СписокСтрок.Добавить(СтрокаТаблицы);
	КонецЦикла;
	
	Документы.ФормированиеПартийПриПроизводствеЗЕРНО.ЗаполнитьПартии(ДокументОбъект, СписокСтрок);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияФормированиеПартийПриПроизводствеЗЕРНОИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак)
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ФормированиеПартийПриПроизводствеЗЕРНО КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|;"
	+
	ТекстТоварыДокумента
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура    КАК Номенклатура,
	|	ТоварыСерии.Характеристика  КАК Характеристика,
	|	ТоварыСерии.Серия           КАК Серия,
	|	ТоварыСерии.Количество      КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура    КАК Номенклатура,
	|	ОформленныеТовары.Характеристика  КАК Характеристика,
	|	ОформленныеТовары.Серия           КАК Серия,
	|	-ОформленныеТовары.Количество     КАК Количество
	|ИЗ
	|	Документ.ФормированиеПартийПриПроизводствеЗЕРНО.Сырье КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			Т.Ссылка
	|		ИЗ
	|			ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура           КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика         КАК Характеристика,
	|	ТоварыКОформлению.Серия                  КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество)      КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)      КАК КоличествоЗЕРНО,
	|	ТоварыКОформлению.Серия.ДатаПроизводства КАК ДатаИзготовления,
	|	ТоварыКОформлению.Серия.ГоденДо          КАК СрокГодности,
	|	СправочникНоменклатура.КодТНВЭД.Код      КАК ТНВЭД,
	|	СправочникНоменклатура.КодОКПД2.Код      КАК ОКПД2
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТоварыКОформлению.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Зерно)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ЗерноВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Серия.ДатаПроизводства,
	|	ТоварыКОформлению.Серия.ГоденДо,
	|	СправочникНоменклатура.КодТНВЭД.Код,
	|	СправочникНоменклатура.КодОКПД2.Код
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	Возврат Текст;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.СборкаТоваров")Тогда 
		ЗаполнитьФормированиеПартийПриПроизводствеЗЕРНОНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьФормированиеПартийПриПроизводствеЗЕРНОНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ФормированиеПартийПриПроизводствеЗЕРНО КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|;
	|ВЫБРАТЬ
	|	&ДокументОснование             КАК ДокументОснование,
	|	ДокументСсылка.Номенклатура    КАК Номенклатура,
	|	ДокументСсылка.Характеристика  КАК Характеристика,
	|	ДокументСсылка.Серия           КАК Серия,
	|	ДокументСсылка.Склад           КАК СкладКонтрагент,
	|	ДокументСсылка.Количество      КАК Количество
	|	ПОМЕСТИТЬ ДанныеДокументов
	|ИЗ
	|	Документ.СборкаТоваров КАК ДокументСсылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ДокументСсылка.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&ДокументОснование                КАК ДокументОснование,
	|	ОформленныеТовары.Номенклатура    КАК Номенклатура,
	|	ОформленныеТовары.Характеристика  КАК Характеристика,
	|	ОформленныеТовары.Серия           КАК Серия,
	|	ОформленныеТовары.СкладКонтрагент КАК СкладКонтрагент,
	|	-ОформленныеТовары.Количество     КАК Количество
	|ИЗ
	|	Документ.ФормированиеПартийПриПроизводствеЗЕРНО КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			Т.Ссылка
	|		ИЗ
	|			ОформленныеДокументы КАК Т)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                   КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен              КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный            КАК Ответственный,
	|	ДокументСсылка.Организация              КАК Организация,
	|	ДокументСсылка.Подразделение            КАК Подразделение,
	|	ДокументСсылка.Подразделение            КАК ПодразделениеТоваропроизводителя,
	|	ДокументСсылка.Организация              КАК ТовароПроизводитель,
	|	ДокументСсылка.Склад                    КАК СкладКонтрагент,
	|	СправочникНоменклатура.Ссылка           КАК Номенклатура,
	|	СправочникНоменклатура.КодТНВЭД.Код     КАК ТНВЭД,
	|	СправочникНоменклатура.КодОКПД2.Код     КАК ОКПД2,
	|	ДанныеДокументов.Серия.ДатаПроизводства КАК ДатаИзготовления,
	|	ДанныеДокументов.Серия.ГоденДо          КАК СрокГодности,
	|	ДанныеДокументов.Количество             КАК Количество
	|ИЗ
	|	
	|	ДанныеДокументов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ДанныеДокументов.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ДокументСсылка
	|		ПО ДанныеДокументов.ДокументОснование = ДокументСсылка.Ссылка
	|ГДЕ
	|	ДанныеДокументов.Количество > 0");
	
	ЗаполнитьШапкуФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура      КАК Номенклатура,
	|	Товары.Характеристика    КАК Характеристика,
	|	Товары.Серия             КАК Серия,
	|	Товары.Ссылка.Склад      КАК СкладКонтрагент,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Ссылка.Склад,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура      КАК Номенклатура,
	|	Серии.Характеристика    КАК Характеристика,
	|	Серии.Серия             КАК Серия,
	|	Серии.Ссылка.Склад      КАК СкладКонтрагент,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗерна)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Ссылка.Склад,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                     КАК Номенклатура,
	|	Товары.Характеристика                                   КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)                     КАК Серия,
	|	ЕСТЬNULL(Серии.СкладКонтрагент, Товары.СкладКонтрагент) КАК СкладКонтрагент,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 1);
	
КонецПроцедуры


Функция ДанныеПрикладныхДокументовИзФормированияПартийПриПроизводствеЗЕРНО(ДокументСсылка, ПолучитьШапку = Истина, ПолучитьТовары = Истина)
	
	СписокЗапросов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Если ПолучитьШапку Тогда
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ФормированиеПартийПриПроизводствеЗЕРНО.Организация     КАК Организация,
		|	ФормированиеПартийПриПроизводствеЗЕРНО.Подразделение   КАК Подразделение,
		|	ФормированиеПартийПриПроизводствеЗЕРНО.СкладКонтрагент КАК Склад,
		|	ФормированиеПартийПриПроизводствеЗЕРНО.Дата            КАК Дата,
		|	ФормированиеПартийПриПроизводствеЗЕРНО.Комментарий     КАК Комментарий,
		|	ФормированиеПартийПриПроизводствеЗЕРНО.Номенклатура    КАК Номенклатура,
		|	ФормированиеПартийПриПроизводствеЗЕРНО.Характеристика  КАК Характеристика,
		|	ФормированиеПартийПриПроизводствеЗЕРНО.Серия           КАК Серия,
		|	ФормированиеПартийПриПроизводствеЗЕРНО.Количество      КАК Количество,
		|	ФормированиеПартийПриПроизводствеЗЕРНО.КоличествоЗЕРНО КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ФормированиеПартийПриПроизводствеЗЕРНО КАК ФормированиеПартийПриПроизводствеЗЕРНО
		|ГДЕ
		|	ФормированиеПартийПриПроизводствеЗЕРНО.Ссылка = &Ссылка
		|", "Шапка");
		
	КонецЕсли;
	
	Если ПолучитьТовары Тогда
		
		Запрос.УстановитьПараметр("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.ОсновнаяСтрана());
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|	СтавкиНДСНоменклатуры.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ СтавкиНДСНоменклатуры
		|ИЗ
		|	(ВЫБРАТЬ
		|		СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна КАК Страна,
		|		МАКСИМУМ(СтавкиНДСНоменклатуры.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ФормированиеПартийПриПроизводствеЗЕРНО.Сырье КАК ФормированиеПартийПриПроизводствеЗЕРНОТовары
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ФормированиеПартийПриПроизводствеЗЕРНО КАК ФормированиеПартийПриПроизводствеЗЕРНО
		|				ПО ФормированиеПартийПриПроизводствеЗЕРНОТовары.Ссылка = ФормированиеПартийПриПроизводствеЗЕРНО.Ссылка
		|			ПО СтавкиНДСНоменклатуры.Номенклатура = ФормированиеПартийПриПроизводствеЗЕРНОТовары.Номенклатура
		|				И (СтавкиНДСНоменклатуры.Страна = &СтранаРегистрации
		|					ИЛИ СтавкиНДСНоменклатуры.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И СтавкиНДСНоменклатуры.Период <= ФормированиеПартийПриПроизводствеЗЕРНО.Дата
		|	ГДЕ
		|		ФормированиеПартийПриПроизводствеЗЕРНОТовары.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		СтавкиНДСНоменклатуры.Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|	ПО АктуальныеСтавкиНДС.Период = СтавкиНДСНоменклатуры.Период
		|		И АктуальныеСтавкиНДС.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
		|		И АктуальныеСтавкиНДС.Страна = СтавкиНДСНоменклатуры.Страна
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеСтавкиНДС.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ОсновныеСтавкиНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеСтавкиНДС.Страна КАК Страна,
		|		МАКСИМУМ(ОсновныеСтавкиНДС.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ФормированиеПартийПриПроизводствеЗЕРНО КАК ФормированиеПартийПриПроизводствеЗЕРНО
		|			ПО (ОсновныеСтавкиНДС.Страна = &СтранаРегистрации
		|					ИЛИ ОсновныеСтавкиНДС.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И ОсновныеСтавкиНДС.Период <= ФормированиеПартийПриПроизводствеЗЕРНО.Дата
		|	ГДЕ
		|		ФормированиеПартийПриПроизводствеЗЕРНО.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		ОсновныеСтавкиНДС.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|	ПО АктуальныеСтавкиНДС.Период = ОсновныеСтавкиНДС.Период
		|		И АктуальныеСтавкиНДС.Страна = ОсновныеСтавкиНДС.Страна
		|");
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ФормированиеПартийПриПроизводствеЗЕРНОТовары.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
		|		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
		|	ФормированиеПартийПриПроизводствеЗЕРНОТовары.Характеристика КАК Характеристика,
		|	ФормированиеПартийПриПроизводствеЗЕРНОТовары.Серия КАК Серия,
		|	ФормированиеПартийПриПроизводствеЗЕРНОТовары.Количество КАК Количество,
		|	ФормированиеПартийПриПроизводствеЗЕРНОТовары.Количество КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ФормированиеПартийПриПроизводствеЗЕРНО.Сырье КАК ФормированиеПартийПриПроизводствеЗЕРНОТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|		ПО ФормированиеПартийПриПроизводствеЗЕРНОТовары.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура,
		|		ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|ГДЕ
		|	ФормированиеПартийПриПроизводствеЗЕРНОТовары.Ссылка = &Ссылка
		|", "Товары");
		
	КонецЕсли;
	
	Возврат ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	
КонецФункции

Процедура ЗаполнитьШапкуПрикладногоДокументаНаОснованииФормированияПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения)
	
	Выборка = ДанныеЗаполнения.Выбрать();
	Выборка.Следующий();
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Организация",        Выборка.Организация);
	Реквизиты.Вставить("Подразделение",      Выборка.Подразделение);
	Реквизиты.Вставить("Дата",               Выборка.Дата);
	Реквизиты.Вставить("Комментарий",        Выборка.Комментарий);
	Реквизиты.Вставить("Склад",              Выборка.Склад);
	Реквизиты.Вставить("Номенклатура",       Выборка.Номенклатура);
	Реквизиты.Вставить("Характеристика",     Выборка.Характеристика);
	Реквизиты.Вставить("Серия",              Выборка.Серия);
	Реквизиты.Вставить("Количество",         Выборка.Количество);
	Реквизиты.Вставить("КоличествоУпаковок", Выборка.КоличествоУпаковок);
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
	
КонецПроцедуры

Функция СтруктураЗаполненияТабличныхЧастейПоФормированиюПартийПриПроизводствеЗЕРНО(ДанныеЗаполнения, ЕстьСерии = Ложь, ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары", ДанныеЗаполнения.Выгрузить());
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЕстьСкладВТабличнойЧасти");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииФормированияПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения)
	
	ЕстьСкладВТабличнойЧасти = ДанныеЗаполнения.Свойство("ЕстьСкладВТабличнойЧасти");
	
	ДокументОбъект.Товары.Очистить();
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.Товары Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, СтрокаТовары);
		Если ЕстьСкладВТабличнойЧасти Тогда
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		
		ДокументОбъект[ИмяТЧСерии].Очистить();
		Для Каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
			Если ЗначениеЗаполнено(СтрокаТовары.Серия) Тогда
				НоваяСтрокаСерия = ДокументОбъект[ИмяТЧСерии].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерия, СтрокаТовары);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВнесениеСведенийОСобранномУрожаеЗЕРНО

Процедура ЗаполнитьШапкуВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		
		ИнтеграцияИСУТ.ПроверитьВозможностьВводаНаОсновании(РеквизитыДокумента);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ДатаСбораУрожая = РеквизитыДокумента.Дата;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, ДопустимыйЗнак)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияВнесениеСведенийОСобранномУрожаеЗЕРНОИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	КолонкиКоличестваЗЕРНО = Новый Структура;
	КолонкиКоличестваЗЕРНО.Вставить("Количество", "КоличествоЗЕРНО");
	
	ДополнительныеПараметры = Новый Структура();
	
	
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличестваЗЕРНО,, ДополнительныеПараметры);
	
	ЗаполнитьМестоположениеДляСкладаВШапке(ДокументОбъект, "СкладКонтрагент", "МестоХранения");
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияВнесениеСведенийОСобранномУрожаеЗЕРНОИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак)
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВнесениеСведенийОСобранномУрожаеЗЕРНО КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|;"
	+
	ТекстТоварыДокумента
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура    КАК Номенклатура,
	|	ТоварыСерии.Характеристика  КАК Характеристика,
	|	ТоварыСерии.Серия           КАК Серия,
	|	ТоварыСерии.СкладКонтрагент КАК СкладКонтрагент,
	|	ТоварыСерии.Количество      КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура           КАК Номенклатура,
	|	ОформленныеТовары.Характеристика         КАК Характеристика,
	|	ОформленныеТовары.Серия                  КАК Серия,
	|	ОформленныеТовары.Ссылка.СкладКонтрагент КАК СкладКонтрагент,
	|	-ОформленныеТовары.Количество            КАК Количество
	|ИЗ
	|	Документ.ВнесениеСведенийОСобранномУрожаеЗЕРНО.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			Т.Ссылка
	|		ИЗ
	|			ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура      КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика    КАК Характеристика,
	|	ТоварыКОформлению.Серия             КАК Серия,
	|	ТоварыКОформлению.СкладКонтрагент   КАК СкладКонтрагент,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СправочникНоменклатура.КодТНВЭД.Код КАК ТНВЭД,
	|	СправочникНоменклатура.КодОКПД2.Код КАК ОКПД2
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТоварыКОформлению.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.СкладКонтрагент,
	|	ТоварыКОформлению.Серия.ГоденДо,
	|	СправочникНоменклатура.КодТНВЭД.Код,
	|	СправочникНоменклатура.КодОКПД2.Код
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	Возврат Текст;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ПрочееОприходованиеТоваров") Тогда
		ЗаполнитьВнесениеСведенийОСобранномУрожаеЗЕРНОНаОснованииПрочегоОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
		
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьВнесениеСведенийОСобранномУрожаеЗЕРНОНаОснованииПрочегоОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Подразделение КАК Подразделение,
	|	ДокументСсылка.Дата          КАК Дата,
	|	ДокументСсылка.Склад         КАК СкладКонтрагент
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура      КАК Номенклатура,
	|	Товары.Характеристика    КАК Характеристика,
	|	Товары.Серия             КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Зерно)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ЗерноВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура      КАК Номенклатура,
	|	Серии.Характеристика    КАК Характеристика,
	|	Серии.Серия             КАК Серия,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Зерно)
	|	ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ЗерноВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                           КАК Номенклатура,
	|	Товары.Характеристика                         КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)            КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)      КАК СкладКонтрагент,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 1);
	
КонецПроцедуры


#КонецОбласти

#Область ОформлениеСДИЗЗЕРНО

Процедура ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоОформлениеПередачиМеждуОрганизациями = Ложь;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
		ЭтоОформлениеПередачиМеждуОрганизациями = ДанныеЗаполнения.Свойство("Товары");
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ДокументОбъект.Товары.Очистить();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение
			И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		
		ДокументОбъект.СвязанныеДокументы.Очистить();
		ДокументОбъект.ТранспортныеСредства.Очистить();
		ДокументОбъект.СвязанныеДокументыПрочие.Очистить();
		
		Если Не ЭтоОформлениеПередачиМеждуОрганизациями Тогда
			ИнтеграцияИСУТ.ПроверитьВозможностьВводаНаОсновании(РеквизитыДокумента);
		КонецЕсли;
		
		РеквизитыПеревозки   = "ПунктНазначения,ПунктНазначенияСтрокой,ПунктНазначенияСопоставленныйОбъект,ПунктОтправления";
		ИсключаемыеРеквизиты = СтрРазделить(РеквизитыПеревозки, ",");
		
		Если Не РеквизитыДокумента.Реализация Тогда
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(РеквизитыДокумента, "Покупатель") Тогда
				ИсключаемыеРеквизиты.Добавить("Покупатель");
			КонецЕсли;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(РеквизитыДокумента, "НомерГПД") Тогда
				ИсключаемыеРеквизиты.Добавить("НомерГПД");
			КонецЕсли;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(РеквизитыДокумента, "ДатаГПД") Тогда
				ИсключаемыеРеквизиты.Добавить("ДатаГПД");
			КонецЕсли;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(РеквизитыДокумента, "ГосударственныйКонтракт") Тогда
				ИсключаемыеРеквизиты.Добавить("ГосударственныйКонтракт");
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента,, СтрСоединить(ИсключаемыеРеквизиты, ","));
		Если ЗначениеЗаполнено(ДокументОбъект.ГосударственныйКонтракт) Тогда
			ДокументОбъект.ЗакупкаЕИС = Истина;
			ДанныеГосКонтракта = ИнтеграцияИСУТ.ДанныеГосударственногоКонтракта(ДокументОбъект.ГосударственныйКонтракт);
			ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеГосКонтракта[ДокументОбъект.ГосударственныйКонтракт]);
		КонецЕсли;
		
		ТранспортныеНакладные = Документы.ТранспортнаяНакладная.ТранспортныеНакладныеДокументовОснований(РеквизитыДокумента.ДокументОснование);
		
		Если ТранспортныеНакладные.Количество() = 0 Тогда
			
			Если ЗначениеЗаполнено(ДокументОбъект.ПунктНазначенияСтрокой) Тогда
				ДокументОбъект.Перевозка = Истина;
			КонецЕсли; 
			Если РеквизитыДокумента.Реализация Тогда
				НоваяСтрока              = ДокументОбъект.СвязанныеДокументы.Добавить();
				НоваяСтрока.ТипДокумента = Справочники.КлассификаторНСИЗЕРНО.ДокументПраваСобственностиТОРГ12;
				НоваяСтрока.Номер        = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.НомерДокумента);
				НоваяСтрока.Дата         = РеквизитыДокумента.ДатаДокумента;
			КонецЕсли;
			
		Иначе
			
			ДокументОбъект.Перевозка = Истина;
			
			Для Каждого СтрокаТаблицы Из ТранспортныеНакладные Цикл
				
				Если РеквизитыДокумента.Реализация Тогда
					
					НоваяСтрока = ДокументОбъект.СвязанныеДокументы.Добавить();
					НоваяСтрока.Номер        = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаТаблицы.Номер);
					НоваяСтрока.Дата         = СтрокаТаблицы.Дата;
					НоваяСтрока.ТипДокумента = Справочники.КлассификаторНСИЗЕРНО.ДокументПраваСобственностиТТН;
				
				Иначе
					
					НоваяСтрока = ДокументОбъект.СвязанныеДокументыПрочие.Добавить();
					НоваяСтрока.Номер        = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаТаблицы.Номер);
					НоваяСтрока.Дата         = СтрокаТаблицы.Дата;
					НоваяСтрока.ТипДокумента = СтрокаТаблицы.ТранспортнаяНакладная.Метаданные().Синоним;
				
				КонецЕсли;
				
				ДанныеПеревозки = ИнтеграцияИСУТ.ДанныеПеревозки(РеквизитыДокумента.ДокументОснование, СтрокаТаблицы.ТранспортнаяНакладная);
				
				Если ЗначениеЗаполнено(ДанныеПеревозки.АвтомобильГосударственныйНомер) Тогда
					
					НоваяСтрока = ДокументОбъект.ТранспортныеСредства.Добавить();
					НоваяСтрока.Перевозчик                 = ДанныеПеревозки.Перевозчик;
					НоваяСтрока.НомерТранспортногоСредства = ДанныеПеревозки.АвтомобильГосударственныйНомер;
					НоваяСтрока.ТранспортноеСредство       = ДанныеПеревозки.ТранспортноеСредство;
					НоваяСтрока.ТипТранспорта              = Справочники.КлассификаторНСИЗЕРНО.ВидТранспортногоСредстваАвтомобиль;
					Если Не ЗначениеЗаполнено(НоваяСтрока.Перевозчик) Тогда
						НоваяСтрока.Перевозчик = ДокументОбъект.Организация;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ДокументОбъект.Перевозка Тогда
		
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента, РеквизитыПеревозки);
			
			Если НЕ ЗначениеЗаполнено(ДокументОбъект.ПунктНазначенияСтрокой) 
				И НЕ ЗначениеЗаполнено(ДокументОбъект.ПунктНазначения) 
				И ЗначениеЗаполнено(ДокументОбъект.ПунктНазначенияСопоставленныйОбъект) Тогда
				
				ДанныеДляЗаполненияПунктаНазначения = ИнтеграцияЗЕРНОВызовСервера.ДанныеАдресаОбъекта(ДокументОбъект.ПунктНазначенияСопоставленныйОбъект);
	
				ДокументОбъект.ПунктНазначения        = ДанныеДляЗаполненияПунктаНазначения.Адрес;
				ДокументОбъект.ПунктНазначенияСтрокой = ДанныеДляЗаполненияПунктаНазначения.ПредставлениеАдреса;
				
			ИначеЕсли ЗначениеЗаполнено(ДокументОбъект.ПунктНазначенияСтрокой) И Не ЗначениеЗаполнено(ДокументОбъект.ПунктНазначения) Тогда
				
				ВидКонтактнойИнформации        = УправлениеКонтактнойИнформацией.ПараметрыВидаКонтактнойИнформации(Перечисления.ТипыКонтактнойИнформации.Адрес);	
				ДокументОбъект.ПунктНазначения = ИнтеграцияЗЕРНОВызовСервера.ЗначенияПолейКонтактнойИнформации(ДокументОбъект.ПунктНазначенияСтрокой, ВидКонтактнойИнформации);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДокументОбъект.Реализация Тогда
			
			ДанныеСтатусаЭД = ОбменСКонтрагентами.СтатусДокументооборота(РеквизитыДокумента.ДокументОснование);
			
			Если ДанныеСтатусаЭД.Статус = "Утвержден" Или ДанныеСтатусаЭД.Статус = "ВОбработке" Тогда
				
				НоваяСтрока = ДокументОбъект.СвязанныеДокументы.Добавить();
				НоваяСтрока.ТипДокумента = Справочники.КлассификаторНСИЗЕРНО.ДокументПраваСобственностиУПД;
				
				РеквизитыЭлектронногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
					ДанныеСтатусаЭД.ЭлектронныйДокумент,
					"ДатаДокумента,НомерДокумента");
				
				НоваяСтрока.Номер = РеквизитыЭлектронногоДокумента.НомерДокумента;
				НоваяСтрока.Дата  = РеквизитыЭлектронногоДокумента.ДатаДокумента;
				
			КонецЕсли;
			
			СчетаФактуры = Документы.СчетФактураВыданный.СчетаФактурыПоОснованию(РеквизитыДокумента.ДокументОснование,,, Истина);
			
			Для Каждого СтрокаТаблицы Из СчетаФактуры Цикл
				
				НоваяСтрока = ДокументОбъект.СвязанныеДокументы.Добавить();
				НоваяСтрока.ТипДокумента = Справочники.КлассификаторНСИЗЕРНО.ДокументПраваСобственностиСчетФактура;
				НоваяСтрока.Дата         = СтрокаТаблицы.Дата;
				Если ЗначениеЗаполнено(СтрокаТаблицы.ПредставлениеНомера) Тогда
					НоваяСтрока.Номер = СтрокаТаблицы.ПредставлениеНомера;
				Иначе
					НоваяСтрока.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаТаблицы.Номер);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ТоварыСерии = Неопределено)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ИнтеграцияЗЕРНОКлиентСерверПовтИсп.УчитываемыеВидыПродукции());
	ОсобенностьУчета   = Новый Массив;
	Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
		ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
	КонецЦикла;
	Если ЗначениеЗаполнено(ДокументОбъект.ВидПродукции) Тогда
		ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ДокументОбъект.ВидПродукции);
		ОсобенностьУчета   = Новый Массив;
		Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
			ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ИмяФильтра") И ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ДанныеЗаполнения.ЗначениеФильтра);
			ОсобенностьУчета   = Новый Массив;
			Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
				ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
			КонецЦикла;
		КонецЕсли;
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если ТипЗнч(ТоварыСерии) = Тип("ТаблицаЗначений") Тогда
		Запрос.Текст = ТекстЗапросаТоварыОформлениеСДИЗЗЕРНОИзТаблицы(ТоварыСерии);
		Запрос.УстановитьПараметр("Таблица", ТоварыСерии);
	Иначе
		Запрос.Текст = ТекстЗапросаЗаполненияОформлениеСДИЗЗЕРНОИзПрикладногоДокумента(ИмяДокумента, ТоварыСерии);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("Документ",          Основание);
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ОформлениеСДИЗЗЕРНО.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ОсобенностьУчета",  ОсобенностьУчета);
	
	КолонкиКоличестваЗЕРНО = Новый Структура;
	КолонкиКоличестваЗЕРНО.Вставить("Количество", "КоличествоЗЕРНО");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДобавленныеСтроки", Новый Массив);
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличестваЗЕРНО,,ДополнительныеПараметры);
	
	Если ТипЗнч(ОсобенностьУчета) = Тип("Массив") Тогда
		ИнтеграцияИС.ЗаполнитьВидПродукцииПоТабличнойЧасти(ДокументОбъект);
		Если ЗначениеЗаполнено(ДокументОбъект.ВидПродукции) Тогда
			ДокументОбъект.ВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.ВидыПродукции(ДокументОбъект.ВидПродукции)[0];
		КонецЕсли;
	Иначе
		ДокументОбъект.ВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.ВидыПродукции(ФильтрВидПродукции)[0];
	КонецЕсли;
	
	Документы.ОформлениеСДИЗЗЕРНО.ЗаполнитьПартии(ДокументОбъект);
	
	НоменклатураСертификатов = Новый Массив;
	СтрокиПоНоменклатурам    = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы Из ДокументОбъект.Товары Цикл
		НоменклатураСертификатов.Добавить(СтрокаТаблицы.Номенклатура);
		СтрокиПоНоменклатуре = СтрокиПоНоменклатурам[СтрокаТаблицы.Номенклатура];
		Если СтрокиПоНоменклатуре = Неопределено Тогда
			СтрокиПоНоменклатуре = Новый Массив;
			СтрокиПоНоменклатурам[СтрокаТаблицы.Номенклатура] = СтрокиПоНоменклатуре;
		КонецЕсли;
		СтрокиПоНоменклатуре.Добавить(СтрокаТаблицы);
	КонецЦикла;
	
	СертификатыНоменклатуры = Новый Соответствие;
	ИнтеграцияИСПереопределяемый.ПриЗаполненииСертификатовНоменклатуры(НоменклатураСертификатов, СертификатыНоменклатуры);
	
	ДобавленныеТипыПоСтрокам = Новый Соответствие();
	
	Для Каждого КлючИЗначение Из СертификатыНоменклатуры Цикл
		
		Для Каждого СтрокаТовары Из СтрокиПоНоменклатурам[КлючИЗначение.Ключ] Цикл
			
			Для Каждого ДанныеСертификата Из КлючИЗначение.Значение Цикл
				
				Если Не ДанныеСертификата.Бессрочный
					И ЗначениеЗаполнено(ДанныеСертификата.СрокДействия)
					И ДанныеСертификата.СрокДействия < ТекущаяДатаСеанса() Тогда
					Продолжить;
				КонецЕсли;
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("ИдентификаторСтрокиТоваров", СтрокаТовары.Идентификатор);
				СтруктураПоиска.Вставить("ТипДокумента",               Неопределено);
				СтруктураПоиска.Вставить("Номер",                      ДанныеСертификата.НомерСертификации);
				СтруктураПоиска.Вставить("Дата",                       ДанныеСертификата.ДатаСертификации);
				СтруктураПоиска.Вставить("СрокДействия",               ДанныеСертификата.СрокДействия);
				
				Если ДанныеСертификата.ВидСертификации = Перечисления.ВидыДокументовОбязательнойСертификацииИС.СертификатСоответствия Тогда
					СтруктураПоиска.ТипДокумента = Справочники.КлассификаторНСИЗЕРНО.ДокументНаПартиюФитосанитарныйСертификат;
				ИначеЕсли ДанныеСертификата.ВидСертификации = Перечисления.ВидыДокументовОбязательнойСертификацииИС.ДекларацияСоответствия Тогда
					СтруктураПоиска.ТипДокумента = Справочники.КлассификаторНСИЗЕРНО.ДокументНаПартиюДекларацияСоответствия;
				КонецЕсли;
				
				ДобавленныеТипыПоСтроке = ДобавленныеТипыПоСтрокам[СтрокаТовары];
				Если ДобавленныеТипыПоСтроке = Неопределено Тогда
					ДобавленныеТипыПоСтроке = Новый Массив();
					ДобавленныеТипыПоСтрокам[СтрокаТовары] = ДобавленныеТипыПоСтроке;
				КонецЕсли;
				
				Если ДобавленныеТипыПоСтроке.Найти(СтруктураПоиска.ТипДокумента) = Неопределено
					И ДокументОбъект.ДокументыСертификации.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
						
					НоваяСтрока = ДокументОбъект.ДокументыСертификации.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураПоиска);
					ДобавленныеТипыПоСтроке.Добавить(СтруктураПоиска.ТипДокумента);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьКорректировочныйОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ТоварыСерии = Неопределено)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ИнтеграцияЗЕРНОКлиентСерверПовтИсп.УчитываемыеВидыПродукции());
	ОсобенностьУчета   = Новый Массив;
	Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
		ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
	КонецЦикла;
	Если ЗначениеЗаполнено(ДокументОбъект.ВидПродукции) Тогда
		ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ДокументОбъект.ВидПродукции);
		ОсобенностьУчета   = Новый Массив;
		Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
			ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ИмяФильтра") И ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ДанныеЗаполнения.ЗначениеФильтра);
			ОсобенностьУчета   = Новый Массив;
			Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
				ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
			КонецЦикла;
		КонецЕсли;
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если ТипЗнч(ТоварыСерии) = Тип("ТаблицаЗначений") Тогда
		ТекстЗапросаПрикладногоДокумента = ТекстЗапросаТоварыОформлениеКорректировочногоСДИЗЗЕРНОИзТаблицы(ИмяДокумента, ТоварыСерии);
		Запрос.УстановитьПараметр("Таблица", ТоварыСерии);
	Иначе
		ТекстЗапросаПрикладногоДокумента = ТекстЗапросаЗаполненияКорректировочногоОформлениеСДИЗЗЕРНОИзПрикладногоДокумента(ИмяДокумента, ТоварыСерии);
	КонецЕсли;
	
	Запрос.Текст                   = ТекстЗапросаПрикладногоДокумента;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос.УстановитьПараметр("ДокументОснование",           Основание);
	Запрос.УстановитьПараметр("Документ",                    Основание);
	Запрос.УстановитьПараметр("ОсобенностьУчета",            ОсобенностьУчета);
	Запрос.УстановитьПараметр("ПустаяСерия",                 Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	Запрос.УстановитьПараметр("ЭтаСсылка",                   ДокументОбъект.Ссылка);
	
	Запрос.Выполнить();
	
	Запрос.Текст = ТекстЗапросаКорректируемыйПрикладнойДокументДляОформленияКорректировочногоСДИЗ(ИмяДокумента);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаКорректируемыйДокумент = РезультатЗапроса.Выгрузить();
	
	Документы.ОформлениеСДИЗЗЕРНО.ЗаполнитьКорректировочныйСДИЗНаОснованииТаблицыКорректировки(ДокументОбъект, Запрос, Основание, ТаблицаКорректируемыйДокумент, ФильтрВидПродукции);
	
	Если ТипЗнч(ОсобенностьУчета) = Тип("Массив") Тогда
		ИнтеграцияИС.ЗаполнитьВидПродукцииПоТабличнойЧасти(ДокументОбъект);
		Если ЗначениеЗаполнено(ДокументОбъект.ВидПродукции) Тогда
			ДокументОбъект.ВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.ВидыПродукции(ДокументОбъект.ВидПродукции)[0];
		КонецЕсли;
	Иначе
		ДокументОбъект.ВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.ВидыПродукции(ФильтрВидПродукции)[0];
	КонецЕсли;
	
	МассивСтрокЗаполнения = Новый Массив;
	Для Каждого СтрокаДанныхКорректировки Из ДокументОбъект.ДанныеКорректировки Цикл
		
		Если ЗначениеЗаполнено(СтрокаДанныхКорректировки.Партия) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не СтрокаДанныхКорректировки.Операция = Перечисления.ОперацииКорректировкиСДИЗ.ОформлениеСДИЗ Тогда
			Продолжить;
		КонецЕсли;
		
		МассивСтрокЗаполнения.Добавить(СтрокаДанныхКорректировки);
		
	КонецЦикла;
	
	Документы.ОформлениеСДИЗЗЕРНО.ЗаполнитьПартии(ДокументОбъект, МассивСтрокЗаполнения,, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияОформлениеСДИЗЗЕРНОИзПрикладногоДокумента(ИмяДокумента, ТабличныеЧастиТоварыСерии)
	
	Если ТабличныеЧастиТоварыСерии = Неопределено Тогда
		ТабличныеЧастиТоварыСерии = Новый Массив;
		ТабличныеЧастиТоварыСерии.Добавить(ОписаниеТабличнойЧасти("Серии"));
	ИначеЕсли ТипЗнч(ТабличныеЧастиТоварыСерии) = Тип("Структура") Тогда
		ТоварыСерии = ТабличныеЧастиТоварыСерии;
		ТабличныеЧастиТоварыСерии = Новый Массив;
		ТабличныеЧастиТоварыСерии.Добавить(ТоварыСерии);
	ИначеЕсли ТипЗнч(ТабличныеЧастиТоварыСерии) = Тип("Строка") Тогда
		ТоварыСерии = ТабличныеЧастиТоварыСерии;
		ТабличныеЧастиТоварыСерии = Новый Массив;
		ТабличныеЧастиТоварыСерии.Добавить(ТоварыСерии);
	КонецЕсли;
	
	ТоварыСерииПоТабличнымЧастям = Новый Массив;
	ЭтоПервыйЭлемент = Истина;
	Для Каждого ТоварыСерии Из ТабличныеЧастиТоварыСерии Цикл
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
		|	ТаблицаТовары.Характеристика    КАК Характеристика,
		|	ТаблицаТовары.Серия             КАК Серия,
		|	СУММА(&ПолеКоличество)          КАК Количество
		|ПОМЕСТИТЬ ТоварыСерии
		|ИЗ
		|	&ОписаниеДокументаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &ДокументОснование
		|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Характеристика,
		|	ТаблицаТовары.Серия
		|";
		
		Если ТипЗнч(ТоварыСерии) = Тип("Строка") Тогда
			ТекстЗапроса = ТоварыСерии +
			"
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
			|	ТаблицаТовары.Характеристика    КАК Характеристика,
			|	ТаблицаТовары.Серия             КАК Серия,
			|	СУММА(ТаблицаТовары.Количество) КАК Количество
			|ПОМЕСТИТЬ ТоварыСерии
			|ИЗ
			|	&ОписаниеТаблицыТовары КАК ТаблицаТовары
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Серия
			|"
		ИначеЕсли ТоварыСерии.Серии <> "" Тогда
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Серия          КАК Серия,
			|	СУММА(&ПолеКоличество)       КАК Количество
			|ПОМЕСТИТЬ ТоварыСерии
			|ИЗ
			|	&ОписаниеДокументаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ &ОписаниеДокументаСерии КАК ТаблицаСерии
			|		ПО ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
			|		И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
			|		И ТаблицаСерии.Ссылка = &ДокументОснование
			|ГДЕ
			|	ТаблицаТовары.Ссылка = &ДокументОснование
			|	И ТаблицаСерии.Ссылка ЕСТЬ NULL
			|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Серия
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТаблицаСерии.Номенклатура,
			|	ТаблицаСерии.Характеристика,
			|	ТаблицаСерии.Серия,
			|	СУММА(ТаблицаСерии.Количество)
			|ИЗ
			|	&ОписаниеДокументаСерии КАК ТаблицаСерии
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		(ВЫБРАТЬ
			|			ТаблицаТовары.Номенклатура    КАК Номенклатура,
			|			ТаблицаТовары.Характеристика  КАК Характеристика,
			|			СУММА(&ПолеКоличество)        КАК Количество
			|		ИЗ
			|			&ОписаниеДокументаТовары КАК ТаблицаТовары
			|		ГДЕ
			|			ТаблицаТовары.Ссылка = &ДокументОснование
			|		СГРУППИРОВАТЬ ПО
			|			ТаблицаТовары.Номенклатура,
			|			ТаблицаТовары.Характеристика) КАК ТаблицаТовары
			|		ПО ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
			|		И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО ТаблицаСерии.Номенклатура = СправочникНоменклатура.Ссылка
			|ГДЕ
			|	ТаблицаСерии.Ссылка = &ДокументОснование
			|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаСерии.Номенклатура,
			|	ТаблицаСерии.Характеристика,
			|	ТаблицаСерии.Серия
			|";
		КонецЕсли;
		
		Если ЭтоПервыйЭлемент Тогда
			ЭтоПервыйЭлемент = Ложь;
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТоварыСерии", "");
		КонецЕсли;
		
		ОписаниеДокумента = СтрШаблон("Документ.%1", ИмяДокумента);
		Если ТипЗнч(ТоварыСерии) = Тип("Строка") Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеТаблицыТовары", СтрШаблон("ТаблицаТовары%1", ИмяДокумента));
		ИначеЕсли ЗначениеЗаполнено(ТоварыСерии.Товары) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", СтрШаблон("%1.%2", ОписаниеДокумента,ТоварыСерии.Товары));
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", ОписаниеДокумента);
		КонецЕсли;
		Если ТипЗнч(ТоварыСерии) <> Тип("Строка") Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОписаниеДокументаСерии", СтрШаблон("%1.%2", ОписаниеДокумента,ТоварыСерии.Серии));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеКоличество",         ТоварыСерии.ПолеКоличество);
		КонецЕсли;
		ТоварыСерииПоТабличнымЧастям.Добавить(ТекстЗапроса);
		
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(ТоварыСерииПоТабличнымЧастям, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия,
	|	Товары.Количество     КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ОформлениеСДИЗЗЕРНО.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка.Проведен
	|	И ОформленныеТовары.Ссылка.ДокументОснование = &ДокументОснование
	|	И ОформленныеТовары.Ссылка <> &ЭтаСсылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура      КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика    КАК Характеристика,
	|	ТоварыКОформлению.Серия             КАК Серия,
	|	ОписаниеНоменклатуры.КодТНВЭД       КАК КодТНВЭД,
	|	ОписаниеНоменклатуры.КодОКПД2       КАК ОКПД2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ОписаниеНоменклатуры
	|	ПО ТоварыКОформлению.Номенклатура = ОписаниеНоменклатуры.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ОписаниеНоменклатуры.КодТНВЭД,
	|	ОписаниеНоменклатуры.КодОКПД2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыОформлениеСДИЗЗЕРНОИзТаблицы(Таблица)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Таблица.Номенклатура    КАК Номенклатура,
	|	Таблица.Характеристика  КАК Характеристика,
	|	Таблица.Серия           КАК Серия,
	|	Таблица.Количество      КАК Количество,
	|	Таблица.КоличествоЗЕРНО КАК КоличествоЗЕРНО,
	|	Таблица.ПартияЗЕРНО     КАК Партия
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура    КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика  КАК Характеристика,
	|	ТоварыКОформлению.Серия           КАК Серия,
	|	ТоварыКОформлению.Количество      КАК Количество,
	|	ТоварыКОформлению.КоличествоЗЕРНО КАК КоличествоЗЕРНО,
	|	РеестрПартийЗЕРНО.Ссылка          КАК Партия,
	|	РеестрПартийЗЕРНО.ОКПД2           КАК ОКПД2,
	|	РеестрПартийЗЕРНО.КодТНВЭД        КАК КодТНВЭД
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РеестрПартийЗЕРНО КАК РеестрПартийЗЕРНО
	|		ПО РеестрПартийЗЕРНО.Ссылка = ТоварыКОформлению.Партия
	|ГДЕ
	|	ТоварыКОформлению.Количество > 0
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыОформлениеКорректировочногоСДИЗЗЕРНОИзТаблицы(ИмяДокумента, Таблица)
	
	ТекстЗапроса = 
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Номенклатура    КАК Номенклатура,
	|	Таблица.Характеристика  КАК Характеристика,
	|	Таблица.Серия           КАК Серия,
	|	Таблица.Количество      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	&Таблица КАК Таблица";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияКорректировочногоОформлениеСДИЗЗЕРНОИзПрикладногоДокумента(ИмяДокумента, ТабличныеЧастиТоварыСерии)
	
	Если ТабличныеЧастиТоварыСерии = Неопределено Тогда
		ТабличныеЧастиТоварыСерии = Новый Массив;
		ТабличныеЧастиТоварыСерии.Добавить(ОписаниеТабличнойЧасти("Серии"));
	ИначеЕсли ТипЗнч(ТабличныеЧастиТоварыСерии) = Тип("Структура") Тогда
		ТоварыСерии = ТабличныеЧастиТоварыСерии;
		ТабличныеЧастиТоварыСерии = Новый Массив;
		ТабличныеЧастиТоварыСерии.Добавить(ТоварыСерии);
	ИначеЕсли ТипЗнч(ТабличныеЧастиТоварыСерии) = Тип("Строка") Тогда
		ТоварыСерии = ТабличныеЧастиТоварыСерии;
		ТабличныеЧастиТоварыСерии = Новый Массив;
		ТабличныеЧастиТоварыСерии.Добавить(ТоварыСерии);
	КонецЕсли;
	
	ТоварыСерииПоТабличнымЧастям = Новый Массив;
	ЭтоПервыйЭлемент = Истина;
	Для Каждого ТоварыСерии Из ТабличныеЧастиТоварыСерии Цикл
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
		|	ТаблицаТовары.Характеристика    КАК Характеристика,
		|	ТаблицаТовары.Серия             КАК Серия,
		|	СУММА(&ПолеКоличество)          КАК Количество
		|ПОМЕСТИТЬ ТоварыСерии
		|ИЗ
		|	&ОписаниеДокументаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &ДокументОснование
		|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Характеристика,
		|	ТаблицаТовары.Серия
		|";
		
		Если ТипЗнч(ТоварыСерии) = Тип("Строка") Тогда
			ТекстЗапроса = ТоварыСерии +
			"
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
			|	ТаблицаТовары.Характеристика    КАК Характеристика,
			|	ТаблицаТовары.Серия             КАК Серия,
			|	СУММА(ТаблицаТовары.Количество) КАК Количество
			|ПОМЕСТИТЬ ТоварыСерии
			|ИЗ
			|	&ОписаниеТаблицыТовары КАК ТаблицаТовары
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Серия
			|"
		ИначеЕсли ТоварыСерии.Серии <> "" Тогда
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Серия          КАК Серия,
			|	СУММА(&ПолеКоличество)       КАК Количество
			|ПОМЕСТИТЬ ТоварыСерии
			|ИЗ
			|	&ОписаниеДокументаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ &ОписаниеДокументаСерии КАК ТаблицаСерии
			|		ПО ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
			|		И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
			|		И ТаблицаСерии.Ссылка = &ДокументОснование
			|ГДЕ
			|	ТаблицаТовары.Ссылка = &ДокументОснование
			|	И ТаблицаСерии.Ссылка ЕСТЬ NULL
			|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Серия
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТаблицаСерии.Номенклатура,
			|	ТаблицаСерии.Характеристика,
			|	ТаблицаСерии.Серия,
			|	СУММА(ТаблицаСерии.Количество)
			|ИЗ
			|	&ОписаниеДокументаСерии КАК ТаблицаСерии
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		(ВЫБРАТЬ
			|			ТаблицаТовары.Номенклатура    КАК Номенклатура,
			|			ТаблицаТовары.Характеристика  КАК Характеристика,
			|			СУММА(&ПолеКоличество)        КАК Количество
			|		ИЗ
			|			&ОписаниеДокументаТовары КАК ТаблицаТовары
			|		ГДЕ
			|			ТаблицаТовары.Ссылка = &ДокументОснование
			|		СГРУППИРОВАТЬ ПО
			|			ТаблицаТовары.Номенклатура,
			|			ТаблицаТовары.Характеристика) КАК ТаблицаТовары
			|		ПО ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
			|		И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО ТаблицаСерии.Номенклатура = СправочникНоменклатура.Ссылка
			|ГДЕ
			|	ТаблицаСерии.Ссылка = &ДокументОснование
			|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаСерии.Номенклатура,
			|	ТаблицаСерии.Характеристика,
			|	ТаблицаСерии.Серия
			|";
		КонецЕсли;
		
		Если ЭтоПервыйЭлемент Тогда
			ЭтоПервыйЭлемент = Ложь;
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТоварыСерии", "");
		КонецЕсли;
		
		ОписаниеДокумента = СтрШаблон("Документ.%1", ИмяДокумента);
		Если ТипЗнч(ТоварыСерии) = Тип("Строка") Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеТаблицыТовары", СтрШаблон("ТаблицаТовары%1", ИмяДокумента));
		ИначеЕсли ЗначениеЗаполнено(ТоварыСерии.Товары) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", СтрШаблон("%1.%2", ОписаниеДокумента,ТоварыСерии.Товары));
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", ОписаниеДокумента);
		КонецЕсли;
		Если ТипЗнч(ТоварыСерии) <> Тип("Строка") Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОписаниеДокументаСерии", СтрШаблон("%1.%2", ОписаниеДокумента,ТоварыСерии.Серии));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеКоличество",         ТоварыСерии.ПолеКоличество);
		КонецЕсли;
		ТоварыСерииПоТабличнымЧастям.Добавить(ТекстЗапроса);
		
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(ТоварыСерииПоТабличнымЧастям, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяПрикладногоДокумента", ИмяДокумента);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКорректируемыйПрикладнойДокументДляОформленияКорректировочногоСДИЗ(ИмяДокумента)
	
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаДокументы.Ссылка) КАК ПредставлениеДокумента,
	|	ТаблицаДокументы.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.КорректировкаРеализации КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаДокументы.Ссылка) КАК ПредставлениеДокумента,
	|	ТаблицаДокументы.Ссылка КАК ДокументОснование
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.Ссылка = &ДокументОснование
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяПрикладногоДокумента", ИмяДокумента);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования             = ОпределитьТипОснования(ДанныеЗаполнения);
	КорректировочныйДокумент = ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Корректировочный")
		И ДанныеЗаполнения.Корректировочный
			Или ДокументОбъект.Корректировочный;
	
	Если ТипОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		И Не КорректировочныйДокумент Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииРеализацииТоваров(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		И КорректировочныйДокумент Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииКорректировкиРеализации(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВозвратаТоваровПоставщику(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВозвратаТоваровМеждуОрганизациями(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПередачиТоваровМеждуОрганизациями(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПеремещенияТоваров(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОтгрузкаТоваровСХранения") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииОтгрузкиТоваровСХранения(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПередачаТоваровХранителю") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПередачиТоваровХранителю(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПоступлениеТоваровОтХранителя") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПоступленияТоваровОтХранителя(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВыкупТоваровХранителем") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВыкупаТоваровХранителем(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииКорректировкиРеализации(
			ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен                   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Организация                   КАК Организация,
	|	ДокументСсылка.Подразделение                 КАК Подразделение,
	|	ДокументСсылка.Менеджер                      КАК Ответственный,
	|	ДокументСсылка.Грузоотправитель              КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ДокументСсылка.Грузополучатель
	|		ИНАЧЕ ДокументСсылка.Контрагент
	|	КОНЕЦ                                        КАК Грузополучатель,
	|	ДокументСсылка.Контрагент                    КАК Покупатель,
	|	ДокументСсылка.АдресДоставкиЗначенияПолей    КАК ПунктНазначения,
	|	ДокументСсылка.АдресДоставки                 КАК ПунктНазначенияСтрокой,
	|	ДокументСсылка.Контрагент                    КАК ПунктНазначенияСопоставленныйОбъект,
	|	ДокументСсылка.Склад                         КАК ПунктОтправления,
	|	ДокументСсылка.Дата                          КАК ДатаДокумента,
	|	ДокументСсылка.Номер                         КАК НомерДокумента,
	|	ДоговорыКонтрагентов.Дата                    КАК ДатаГПД,
	|	ДоговорыКонтрагентов.Номер                   КАК НомерГПД,
	|	ДоговорыКонтрагентов.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
	|	КОНЕЦ                                        КАК Операция,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                        КАК Реализация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                        КАК Перевозка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг              КАК ДокументСсылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты      КАК Контрагенты
	|	ПО Контрагенты.Ссылка = ДокументСсылка.Контрагент
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|	ПО ДокументСсылка.Договор = ДоговорыКонтрагентов.Ссылка
	|	
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ОписаниеТабличнойЧасти = ИнтеграцияИСУТ.ТекстЗапросаРеализацияТоваровУслуг();
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "РеализацияТоваровУслуг", ОписаниеТабличнойЧасти);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииКорректировкиРеализации(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ДокументОбъект.Корректировочный = Истина;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ИмяДокумента           = "РеализацияТоваровУслуг";
		ОписаниеТабличнойЧасти = ИнтеграцияИСУТ.ТекстЗапросаРеализацияТоваровУслуг();
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка                        КАК ДокументОснование,
		|	НЕ ДокументСсылка.Проведен                   КАК ЕстьОшибкиПроведен,
		|	ДокументСсылка.Организация                   КАК Организация,
		|	ДокументСсылка.Подразделение                 КАК Подразделение,
		|	ДокументСсылка.Менеджер                      КАК Ответственный,
		|	ДокументСсылка.Грузоотправитель              КАК Грузоотправитель,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|			ТОГДА ДокументСсылка.Грузополучатель
		|		ИНАЧЕ ДокументСсылка.Контрагент
		|	КОНЕЦ                                        КАК Грузополучатель,
		|	ДокументСсылка.Контрагент                    КАК Покупатель,
		|	ДокументСсылка.АдресДоставкиЗначенияПолей    КАК ПунктНазначения,
		|	ДокументСсылка.АдресДоставки                 КАК ПунктНазначенияСтрокой,
		|	ДокументСсылка.Контрагент                    КАК ПунктНазначенияСопоставленныйОбъект,
		|	ДокументСсылка.Склад                         КАК ПунктОтправления,
		|	ДокументСсылка.Дата                          КАК ДатаДокумента,
		|	ДокументСсылка.Номер                         КАК НомерДокумента,
		|	ДоговорыКонтрагентов.Дата                    КАК ДатаГПД,
		|	ДоговорыКонтрагентов.Номер                   КАК НомерГПД,
		|	ДоговорыКонтрагентов.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
		|	КОНЕЦ                                        КАК Операция,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                        КАК Реализация,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ                                        КАК Перевозка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг              КАК ДокументСсылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты      КАК Контрагенты
		|	ПО Контрагенты.Ссылка = ДокументСсылка.Контрагент
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|	ПО ДокументСсылка.Договор = ДоговорыКонтрагентов.Ссылка
		|	
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		ИмяДокумента           = "КорректировкаРеализации";
		ОписаниеТабличнойЧасти = ИнтеграцияИСУТ.ТекстЗапросаКорректировкаРеализации(Истина);
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка                        КАК ДокументОснование,
		|	НЕ ДокументСсылка.Проведен                   КАК ЕстьОшибкиПроведен,
		|	ДокументСсылка.Организация                   КАК Организация,
		|	ДокументСсылка.Подразделение                 КАК Подразделение,
		|	ДокументСсылка.Менеджер                      КАК Ответственный,
		|	ДокументСсылка.Грузоотправитель              КАК Грузоотправитель,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|			ТОГДА ДокументСсылка.Грузополучатель
		|		ИНАЧЕ ДокументСсылка.Контрагент
		|	КОНЕЦ                                        КАК Грузополучатель,
		|	ДокументСсылка.Контрагент                    КАК Покупатель,
		|	ДокументСсылка.АдресДоставкиЗначенияПолей    КАК ПунктНазначения,
		|	ДокументСсылка.АдресДоставки                 КАК ПунктНазначенияСтрокой,
		|	ДокументСсылка.Контрагент                    КАК ПунктНазначенияСопоставленныйОбъект,
		|	ДокументСсылка.Склад                         КАК ПунктОтправления,
		|	ДокументСсылка.Дата                          КАК ДатаДокумента,
		|	ДокументСсылка.Номер                         КАК НомерДокумента,
		|	ДоговорыКонтрагентов.Дата                    КАК ДатаГПД,
		|	ДоговорыКонтрагентов.Номер                   КАК НомерГПД,
		|	ДоговорыКонтрагентов.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
		|	КОНЕЦ                                        КАК Операция,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                        КАК Реализация,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ                                        КАК Перевозка
		|ИЗ
		|	Документ.КорректировкаРеализации             КАК ДокументСсылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты      КАК Контрагенты
		|	ПО Контрагенты.Ссылка = ДокументСсылка.Контрагент
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|	ПО ДокументСсылка.Договор = ДоговорыКонтрагентов.Ссылка
		|	
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование");
		
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ЗаполнитьТабличнуюЧастьКорректировочныйОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ОписаниеТабличнойЧасти);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен                   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Организация                   КАК Организация,
	|	ДокументСсылка.Подразделение                 КАК Подразделение,
	|	ДокументСсылка.Менеджер                      КАК Ответственный,
	|	ДокументСсылка.Грузоотправитель              КАК Грузоотправитель,
	|	ДокументСсылка.Грузополучатель               КАК Грузополучатель,
	|	ДокументСсылка.Контрагент                    КАК Покупатель,
	|	ДокументСсылка.АдресДоставкиЗначенияПолей    КАК ПунктНазначения,
	|	ДокументСсылка.АдресДоставки                 КАК ПунктНазначенияСтрокой,
	|	ДокументСсылка.Контрагент                    КАК ПунктНазначенияСопоставленныйОбъект,
	|	ДокументСсылка.Склад                         КАК ПунктОтправления,
	|	ДокументСсылка.Дата                          КАК ДатаДокумента,
	|	ДокументСсылка.Номер                         КАК НомерДокумента,
	|	ДоговорыКонтрагентов.Дата                    КАК ДатаГПД,
	|	ДоговорыКонтрагентов.Номер                   КАК НомерГПД,
	|	ДоговорыКонтрагентов.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
	|	КОНЕЦ                                     КАК Операция,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                     КАК Реализация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                     КАК Перевозка
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДокументСсылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|	ПО Контрагенты.Ссылка = ДокументСсылка.Контрагент
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|	ПО ДокументСсылка.Договор = ДоговорыКонтрагентов.Ссылка
	|	
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ОписаниеТабличнойЧасти = ИнтеграцияИСУТ.ТекстЗапросаВозвратТоваровПоставщику();
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ВозвратТоваровПоставщику", ОписаниеТабличнойЧасти);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВозвратаТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                               КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен                          КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Организация                          КАК Организация,
	|	ДокументСсылка.Подразделение                        КАК Подразделение,
	|	ДокументСсылка.Менеджер                             КАК Ответственный,
	|	ДокументСсылка.Грузоотправитель                     КАК Грузоотправитель,
	|	ДокументСсылка.Грузополучатель                      КАК Грузополучатель,
	|	ДокументСсылка.ОрганизацияПолучатель                КАК Покупатель,
	|	""""                                                КАК ПунктНазначения,
	|	ДокументСсылка.АдресДоставки                        КАК ПунктНазначенияСтрокой,
	|	ДокументСсылка.ОрганизацияПолучатель                КАК ПунктНазначенияСопоставленныйОбъект,
	|	ДокументСсылка.Склад                                КАК ПунктОтправления,
	|	ДокументСсылка.Дата                                 КАК ДатаДокумента,
	|	ДокументСсылка.Номер                                КАК НомерДокумента,
	|	ДоговорыМеждуОрганизациями.Дата                     КАК ДатаГПД,
	|	ДоговорыМеждуОрганизациями.Номер                    КАК НомерГПД,
	|	ДоговорыМеждуОрганизациями.ГосударственныйКонтракт  КАК ГосударственныйКонтракт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Организации.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
	|	КОНЕЦ                                     КАК Операция,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Организации.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                     КАК Реализация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Организации.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                     КАК Перевозка
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДокументСсылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|	ПО Организации.Ссылка = ДокументСсылка.ОрганизацияПолучатель
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
	|	ПО ДокументСсылка.Договор = ДоговорыМеждуОрганизациями.Ссылка
	|	
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ОписаниеТабличнойЧасти = ОписаниеТабличнойЧасти();
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ВозвратТоваровМеждуОрганизациями", ОписаниеТабличнойЧасти);
		
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПередачиТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                              КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен                         КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Организация                         КАК Организация,
	|	ДокументСсылка.Подразделение                       КАК Подразделение,
	|	ДокументСсылка.Менеджер                            КАК Ответственный,
	|	ДокументСсылка.Грузоотправитель                    КАК Грузоотправитель,
	|	ДокументСсылка.Грузополучатель                     КАК Грузополучатель,
	|	ДокументСсылка.ОрганизацияПолучатель               КАК Покупатель,
	|	""""                                               КАК ПунктНазначения,
	|	ДокументСсылка.АдресДоставки                       КАК ПунктНазначенияСтрокой,
	|	ДокументСсылка.ОрганизацияПолучатель               КАК ПунктНазначенияСопоставленныйОбъект,
	|	ДокументСсылка.Склад                               КАК ПунктОтправления,
	|	ДокументСсылка.Дата                                КАК ДатаДокумента,
	|	ДокументСсылка.Номер                               КАК НомерДокумента,
	|	ДоговорыМеждуОрганизациями.Дата                    КАК ДатаГПД,
	|	ДоговорыМеждуОрганизациями.Номер                   КАК НомерГПД,
	|	ДоговорыМеждуОрганизациями.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Организации.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
	|	КОНЕЦ                                     КАК Операция,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Организации.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                     КАК Реализация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Организации.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                     КАК Перевозка
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДокументСсылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|	ПО Организации.Ссылка = ДокументСсылка.ОрганизацияПолучатель
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
	|	ПО ДокументСсылка.Договор = ДоговорыМеждуОрганизациями.Ссылка
	|	
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Товары") Тогда
		ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ПередачаТоваровМеждуОрганизациями", ДанныеЗаполнения.Товары);
	Иначе
		ОписаниеТабличнойЧасти = ОписаниеТабличнойЧасти();
		ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ПередачаТоваровМеждуОрганизациями", ОписаниеТабличнойЧасти);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен                   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Организация                   КАК Организация,
	|	ДокументСсылка.Подразделение                 КАК Подразделение,
	|	ДокументСсылка.Ответственный                 КАК Ответственный,
	|	ДокументСсылка.Организация                   КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ДокументСсылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|			ТОГДА ДокументСсылка.ОрганизацияПолучатель
	|		ИНАЧЕ ДокументСсылка.Организация 
	|	КОНЕЦ                                        КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДокументСсылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|			ТОГДА ДокументСсылка.ОрганизацияПолучатель
	|		ИНАЧЕ ДокументСсылка.Организация 
	|	КОНЕЦ                                        КАК Покупатель,
	|	ДокументСсылка.АдресДоставкиЗначенияПолей    КАК ПунктНазначения,
	|	ДокументСсылка.АдресДоставки                 КАК ПунктНазначенияСтрокой,
	|	ДокументСсылка.СкладПолучатель               КАК ПунктНазначенияСопоставленныйОбъект,
	|	ДокументСсылка.СкладОтправитель              КАК ПунктОтправления,
	|	ДокументСсылка.Дата                          КАК ДатаДокумента,
	|	ДокументСсылка.Номер                         КАК НомерДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1)                           КАК ДатаГПД,
	|	""""                                         КАК НомерГПД,
	|	ЛОЖЬ                                         КАК ГосударственныйКонтракт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОрганизацияПолучатель.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			И ЕСТЬNULL(ОрганизацииОтправители.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ)
	|		КОГДА НЕ ЕСТЬNULL(ОрганизацияПолучатель.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗИмпорт)
	|	КОНЕЦ                                     КАК Операция,
	|	ДокументСсылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами) КАК Реализация,
	|	ИСТИНА                                     КАК Перевозка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДокументСсылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПолучатели
	|	ПО ОрганизацииПолучатели.Ссылка = ДокументСсылка.ОрганизацияПолучатель
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииОтправители
	|	ПО ОрганизацииОтправители.Ссылка = ДокументСсылка.Организация
	|	
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ОписаниеТабличнойЧасти = ИнтеграцияИСУТ.ТекстЗапросаПеремещениеТоваров();
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ПеремещениеТоваров", ОписаниеТабличнойЧасти);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииОтгрузкиТоваровСХранения(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                                           КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен                                      КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Организация                                      КАК Организация,
	|	ДокументСсылка.Подразделение                                    КАК Подразделение,
	|	ДокументСсылка.Менеджер                                         КАК Ответственный,
	|	ДокументСсылка.Организация                                      КАК Грузоотправитель,
	|	ДокументСсылка.Контрагент                                       КАК Грузополучатель,
	|	ДокументСсылка.Склад                                            КАК ПунктОтправления,
	|	ДокументСсылка.Дата                                             КАК ДатаДокумента,
	|	ДокументСсылка.Номер                                            КАК НомерДокумента,
	|	ДокументСсылка.АдресДоставкиЗначенияПолей                       КАК ПунктНазначения,
	|	ДокументСсылка.АдресДоставки                                    КАК ПунктНазначенияСтрокой,
	|	""""                                                            КАК ПунктНазначенияСопоставленныйОбъект,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭлеватор) КАК Операция,
	|	ЛОЖЬ                                                            КАК Реализация,
	|	ИСТИНА                                                          КАК Отгрузка
	|ИЗ
	|	Документ.ОтгрузкаТоваровСХранения КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ОписаниеТабличнойЧасти = ОписаниеТабличнойЧасти("Серии");
	
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ОтгрузкаТоваровСХранения", ОписаниеТабличнойЧасти);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПередачиТоваровХранителю(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                     КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен                КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Менеджер                   КАК Ответственный,
	|	ДокументСсылка.Организация                КАК Организация,
	|	ДокументСсылка.Подразделение              КАК Подразделение,
	|	ДокументСсылка.Организация                КАК Грузоотправитель,
	|	ДокументСсылка.Контрагент                 КАК Грузополучатель,
	|	ДокументСсылка.Склад                      КАК ПунктОтправления,
	|	ДокументСсылка.АдресДоставкиЗначенияПолей КАК ПунктНазначения,
	|	ДокументСсылка.АдресДоставки              КАК ПунктНазначенияСтрокой,
	|	ДокументСсылка.Контрагент                 КАК ПунктНазначенияСопоставленныйОбъект,
	|	ДокументСсылка.Дата                       КАК ДатаДокумента,
	|	ДокументСсылка.Номер                      КАК НомерДокумента,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации,
	|			ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
	|	КОНЕЦ                                     КАК Операция,
	|	ЛОЖЬ                                      КАК Реализация,
	|	ИСТИНА                                    КАК Перевозка,
	|	ЛОЖЬ                                      КАК Отгрузка,
	|	РеестрЭлеваторовЗЕРНО.Ссылка              КАК ЭлеваторПолучатель
	|ИЗ
	|	Документ.ПередачаТоваровХранителю КАК ДокументСсылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ДокументСсылка.Контрагент = Контрагенты.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РеестрЭлеваторовЗЕРНО КАК РеестрЭлеваторовЗЕРНО
	|		ПО Контрагенты.ИНН = РеестрЭлеваторовЗЕРНО.ИНН
	|		И Контрагенты.КПП = РеестрЭлеваторовЗЕРНО.КПП
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ОписаниеТабличнойЧасти = ИнтеграцияИСУТ.ТекстЗапросаПередачаТоваровХранителю();
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ПередачаТоваровХранителю", ОписаниеТабличнойЧасти);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПоступленияТоваровОтХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                     КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен                КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Менеджер                   КАК Ответственный,
	|	ДокументСсылка.Организация                КАК Организация,
	|	ДокументСсылка.Подразделение              КАК Подразделение,
	|	ДокументСсылка.Организация                КАК Грузополучатель,
	|	ДокументСсылка.Подразделение              КАК ПодразделениеГрузополучателя,
	|	ДокументСсылка.Контрагент                 КАК Грузоотправитель,
	|	""""                                      КАК ПунктНазначения,
	|	""""                                      КАК ПунктНазначенияСтрокой,
	|	ДокументСсылка.Склад                      КАК ПунктНазначенияСопоставленныйОбъект,
	|	ДокументСсылка.Контрагент                 КАК ПунктОтправления,
	|	ДокументСсылка.Дата                       КАК ДатаДокумента,
	|	ДокументСсылка.Номер                      КАК НомерДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ) КАК Операция,
	|	ЛОЖЬ                                      КАК Реализация,
	|	ИСТИНА                                    КАК Перевозка,
	|	ЛОЖЬ                                      КАК Отгрузка
	|ИЗ
	|	Документ.ПоступлениеТоваровОтХранителя КАК ДокументСсылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ДокументСсылка.Контрагент = Контрагенты.Ссылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ОписаниеТабличнойЧасти = ОписаниеТабличнойЧасти("Серии");
	
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ПоступлениеТоваровОтХранителя", ОписаниеТабличнойЧасти);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВыкупаТоваровХранителем(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен                   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Менеджер                      КАК Ответственный,
	|	ДокументСсылка.Организация                   КАК Организация,
	|	ДокументСсылка.Подразделение                 КАК Подразделение,
	|	ДокументСсылка.Организация                   КАК Грузоотправитель,
	|	""""                                         КАК ПунктНазначения,
	|	""""                                         КАК ПунктНазначенияСтрокой,
	|	""""                                         КАК ПунктНазначенияСопоставленныйОбъект,
	|	ДокументСсылка.Контрагент                    КАК ПунктОтправления,
	|	ДокументСсылка.Контрагент                    КАК Покупатель,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.СтранаРегистрации,
	|			ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗЭкспорт)
	|	КОНЕЦ                                        КАК Операция,
	|	ИСТИНА                                       КАК Реализация,
	|	ЛОЖЬ                                         КАК Перевозка,
	|	ДокументСсылка.Дата                          КАК ДатаДокумента,
	|	ДокументСсылка.Номер                         КАК НомерДокумента,
	|	ДоговорыКонтрагентов.Дата                    КАК ДатаГПД,
	|	ДоговорыКонтрагентов.Номер                   КАК НомерГПД,
	|	ДоговорыКонтрагентов.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
	|	ЛОЖЬ                                         КАК Отгрузка
	|ИЗ
	|	Документ.ВыкупТоваровХранителем КАК ДокументСсылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ДокументСсылка.Контрагент = Контрагенты.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|	ПО ДокументСсылка.Договор = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ОписаниеТабличнойЧасти = ОписаниеТабличнойЧасти();
	
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ВыкупТоваровХранителем", ОписаниеТабличнойЧасти);
	
КонецПроцедуры


Функция ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументСсылка, ПолучитьШапку = Истина, ПолучитьТовары = Истина)
	
	СписокЗапросов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Если ПолучитьШапку Тогда
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ОформлениеСДИЗЗЕРНО.Организация                         КАК Организация,
		|	ОформлениеСДИЗЗЕРНО.Подразделение                       КАК Подразделение,
		|	ОформлениеСДИЗЗЕРНО.Дата                                КАК Дата,
		|	ОформлениеСДИЗЗЕРНО.Комментарий                         КАК Комментарий,
		|	ОформлениеСДИЗЗЕРНО.Грузоотправитель                    КАК Грузоотправитель,
		|	ОформлениеСДИЗЗЕРНО.ПодразделениеГрузоотправителя       КАК ПодразделениеГрузоотправителя,
		|	ОформлениеСДИЗЗЕРНО.Грузополучатель                     КАК Грузополучатель,
		|	ОформлениеСДИЗЗЕРНО.ПодразделениеГрузополучателя        КАК ПодразделениеГрузополучателя,
		|	ОформлениеСДИЗЗЕРНО.ПунктОтправления                    КАК ПунктОтправления,
		|	ОформлениеСДИЗЗЕРНО.Покупатель                          КАК Покупатель,
		|	ОформлениеСДИЗЗЕРНО.ПодразделениеПокупателя             КАК ПодразделениеПокупателя,
		|	ОформлениеСДИЗЗЕРНО.ПунктНазначенияСопоставленныйОбъект КАК ПунктНазначения,
		|	ОформлениеСДИЗЗЕРНО.ЭлеваторПолучатель                  КАК ЭлеваторПолучатель,
		|	ОформлениеСДИЗЗЕРНО.Отгрузка                            КАК Отгрузка,
		|	ОформлениеСДИЗЗЕРНО.Перевозка                           КАК Перевозка,
		|	ОформлениеСДИЗЗЕРНО.Приемка                             КАК Приемка,
		|	ОформлениеСДИЗЗЕРНО.Реализация                          КАК Реализация
		|
		|ИЗ
		|	Документ.ОформлениеСДИЗЗЕРНО КАК ОформлениеСДИЗЗЕРНО
		|ГДЕ
		|	ОформлениеСДИЗЗЕРНО.Ссылка = &Ссылка
		|", "Шапка");
		
	КонецЕсли;
	
	Если ПолучитьТовары Тогда
		
		Запрос.УстановитьПараметр("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.ОсновнаяСтрана());
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|	СтавкиНДСНоменклатуры.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ СтавкиНДСНоменклатуры
		|ИЗ
		|	(ВЫБРАТЬ
		|		СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна КАК Страна,
		|		МАКСИМУМ(СтавкиНДСНоменклатуры.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОформлениеСДИЗЗЕРНО.Товары КАК ОформлениеСДИЗЗЕРНОТовары
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОформлениеСДИЗЗЕРНО КАК ОформлениеСДИЗЗЕРНО
		|				ПО ОформлениеСДИЗЗЕРНОТовары.Ссылка = ОформлениеСДИЗЗЕРНО.Ссылка
		|			ПО СтавкиНДСНоменклатуры.Номенклатура = ОформлениеСДИЗЗЕРНОТовары.Номенклатура
		|				И (СтавкиНДСНоменклатуры.Страна = &СтранаРегистрации
		|					ИЛИ СтавкиНДСНоменклатуры.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И СтавкиНДСНоменклатуры.Период <= ОформлениеСДИЗЗЕРНО.Дата
		|	ГДЕ
		|		ОформлениеСДИЗЗЕРНОТовары.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		СтавкиНДСНоменклатуры.Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|	ПО АктуальныеСтавкиНДС.Период = СтавкиНДСНоменклатуры.Период
		|		И АктуальныеСтавкиНДС.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
		|		И АктуальныеСтавкиНДС.Страна = СтавкиНДСНоменклатуры.Страна
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеСтавкиНДС.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ОсновныеСтавкиНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеСтавкиНДС.Страна КАК Страна,
		|		МАКСИМУМ(ОсновныеСтавкиНДС.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОформлениеСДИЗЗЕРНО КАК ОформлениеСДИЗЗЕРНО
		|			ПО (ОсновныеСтавкиНДС.Страна = &СтранаРегистрации
		|					ИЛИ ОсновныеСтавкиНДС.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И ОсновныеСтавкиНДС.Период <= ОформлениеСДИЗЗЕРНО.Дата
		|	ГДЕ
		|		ОформлениеСДИЗЗЕРНО.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		ОсновныеСтавкиНДС.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|	ПО АктуальныеСтавкиНДС.Период = ОсновныеСтавкиНДС.Период
		|		И АктуальныеСтавкиНДС.Страна = ОсновныеСтавкиНДС.Страна
		|");
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ОформлениеСДИЗЗЕРНОТовары.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
		|		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
		|	ОформлениеСДИЗЗЕРНОТовары.Характеристика КАК Характеристика,
		|	ОформлениеСДИЗЗЕРНОТовары.Серия КАК Серия,
		|	ОформлениеСДИЗЗЕРНОТовары.Количество КАК Количество,
		|	ОформлениеСДИЗЗЕРНОТовары.Количество КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ОформлениеСДИЗЗЕРНО.Товары КАК ОформлениеСДИЗЗЕРНОТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|		ПО ОформлениеСДИЗЗЕРНОТовары.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|		ПО ИСТИНА
		|ГДЕ
		|	ОформлениеСДИЗЗЕРНОТовары.Ссылка = &Ссылка
		|", "Товары");
		
	КонецЕсли;
	
	Возврат ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	
КонецФункции

Процедура ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения)
	
	Выборка = ДанныеЗаполнения.Выбрать();
	Выборка.Следующий();
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Организация",      Выборка.Организация);
	Реквизиты.Вставить("Подразделение",    Выборка.Подразделение);
	Реквизиты.Вставить("Дата",             Выборка.Дата);
	Реквизиты.Вставить("Комментарий",      Выборка.Комментарий);
	Реквизиты.Вставить("Склад",            Выборка.ПунктОтправления);
	Реквизиты.Вставить("Грузоотправитель", Выборка.Грузоотправитель);
	Реквизиты.Вставить("Грузополучатель",  Выборка.Грузополучатель);
	
	Если Выборка.Реализация Тогда
		Если ТипЗнч(Выборка.Покупатель) = Тип("СправочникСсылка.Контрагенты") Тогда
			Реквизиты.Вставить("Контрагент", Выборка.Покупатель);
		КонецЕсли;
	ИначеЕсли Выборка.Отгрузка И Не Выборка.Перевозка И Не Выборка.Приемка Тогда
		Если ТипЗнч(Выборка.Грузоотправитель) = Тип("СправочникСсылка.Контрагенты") Тогда
			Реквизиты.Вставить("Контрагент", Выборка.Грузоотправитель);
		КонецЕсли;
	ИначеЕсли Не Выборка.Отгрузка И Выборка.Перевозка И Не Выборка.Приемка И Не Выборка.Реализация
		Или Выборка.Приемка Тогда
		Реквизиты.Вставить("Склад", Выборка.ПунктНазначения);
		Если ТипЗнч(Выборка.Грузополучатель) = Тип("СправочникСсылка.Контрагенты") Тогда
			Реквизиты.Вставить("Контрагент", Выборка.Грузополучатель);
		КонецЕсли;
	КонецЕсли;
	
	Если Реквизиты.Свойство("Контрагент")
		И ЗначениеЗаполнено(Реквизиты.Контрагент) Тогда
		Реквизиты.Вставить("Партнер", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Контрагент, "Партнер"));
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
	
КонецПроцедуры

Функция СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(ДанныеЗаполнения, ЕстьСерии = Ложь, ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары", ДанныеЗаполнения.Выгрузить());
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЕстьСкладВТабличнойЧасти");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения)
	
	ЕстьСкладВТабличнойЧасти = ДанныеЗаполнения.Свойство("ЕстьСкладВТабличнойЧасти");
	
	ДокументОбъект.Товары.Очистить();
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.Товары Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, СтрокаТовары);
		Если ЕстьСкладВТабличнойЧасти Тогда
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		
		ДокументОбъект[ИмяТЧСерии].Очистить();
		Для Каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
			Если ЗначениеЗаполнено(СтрокаТовары.Серия) Тогда
				НоваяСтрокаСерия = ДокументОбъект[ИмяТЧСерии].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерия, СтрокаТовары);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеПартийЗЕРНО

Процедура ОбработкаЗаполненияДокументаСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ВнутреннееПотребление") Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииВнутреннегоПотребления(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПересортицаТоваров") Тогда 
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПорчаТоваров") Тогда 
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПорчаТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииРеализацияТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда 
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииСписанияНедостачТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВнутреннееПотребление") Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииВнутреннегоПотребления(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПорчаТоваровУХранителя") Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПорчаТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПересортицаТоваровУХранителя") Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПересортицыТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОтчетОСписанииТоваровУХранителя") Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииОтчетаОСписанииТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПорчаТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка         КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен    КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный  КАК Ответственный,
	|	ДокументСсылка.Организация    КАК Организация,
	|	ДокументСсылка.Подразделение  КАК Подразделение,
	|	ДокументСсылка.Склад          КАК Склад,
	|	&ПричинаСписанияИспорчено     КАК ПричинаСписания
	|ИЗ
	|	Документ.ПорчаТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИМЕЮЩИЕ СУММА(Товары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПорчаТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Подразделение КАК Подразделение,
	|	ДокументСсылка.Контрагент    КАК ВладелецПартии,
	|	ДокументСсылка.Контрагент    КАК СкладКонтрагент,
	|	&ПричинаСписанияИспорчено    КАК ПричинаСписания
	|ИЗ
	|	Документ.ПорчаТоваровУХранителя КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПорчаТоваровУХранителя.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИМЕЮЩИЕ СУММА(Товары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Подразделение КАК Подразделение,
	|	ДокументСсылка.Склад         КАК Склад,
	|	&ПричинаСписанияУтилизация   КАК ПричинаСписания
	|ИЗ
	|	Документ.ПересортицаТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИМЕЮЩИЕ СУММА(Товары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПересортицыТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Подразделение КАК Подразделение,
	|	ДокументСсылка.Контрагент    КАК ВладелецПартии,
	|	&ПричинаСписанияУтилизация    КАК ПричинаСписания
	|ИЗ
	|	Документ.ПересортицаТоваровУХранителя КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПересортицаТоваровУХранителя.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИМЕЮЩИЕ СУММА(Товары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииОтчетаОСписанииТоваровУХранителя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка         КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен    КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный  КАК Ответственный,
	|	ДокументСсылка.Организация    КАК Организация,
	|	ДокументСсылка.Подразделение  КАК Подразделение,
	|	ДокументСсылка.Контрагент     КАК ВладелецПартии,
	|	&ПричинаСписанияУтилизация    КАК ПричинаСписания
	|ИЗ
	|	Документ.ОтчетОСписанииТоваровУХранителя КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ОтчетОСписанииТоваровУХранителя.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИМЕЮЩИЕ СУММА(Товары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииСписанияНедостачТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка         КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен    КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный  КАК Ответственный,
	|	ДокументСсылка.Организация    КАК Организация,
	|	ДокументСсылка.Подразделение  КАК Подразделение,
	|	ДокументСсылка.Склад          КАК Склад,
	|	&ПричинаСписанияУтилизация    КАК ПричинаСписания
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В (&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИМЕЮЩИЕ СУММА(Товары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииВнутреннегоПотребления(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка          КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен     КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный   КАК Ответственный,
	|	ДокументСсылка.Организация     КАК Организация,
	|	ДокументСсылка.Подразделение   КАК Подразделение,
	|	ДокументСсылка.Склад           КАК Склад,
	|	&ПричинаСписанияУтилизация     КАК ПричинаСписания
	|ИЗ
	|	Документ.ВнутреннееПотребление КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = ИнтеграцияИСУТ.ТекстЗапросаВнутреннееПотребление() + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ТаблицаТовары.Серия             КАК Серия,
	|	МАКСИМУМ(ДокументСсылка.Склад)  КАК Склад,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	ТаблицаТоварыВнутреннееПотребление КАК ТаблицаТовары,
	|	Документ.ВнутреннееПотребление КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия
	|ИМЕЮЩИЕ СУММА(ТаблицаТовары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры



Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииРеализацияТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) 
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка              КАК ДокументОснование,
	|	НЕ ДокументСсылка.Проведен         КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Менеджер            КАК Ответственный,
	|	ДокументСсылка.Организация         КАК Организация,
	|	ДокументСсылка.Подразделение       КАК Подразделение,
	|	ДокументСсылка.Склад               КАК Склад,
	|	&ПричинаСписанияРеализацияФизЛицам КАК ПричинаСписания
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = ИнтеграцияИСУТ.ТекстЗапросаРеализацияТоваровУслуг() +"
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура      КАК Номенклатура,
	|	Товары.Характеристика    КАК Характеристика,
	|	Товары.Серия             КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	ТаблицаТоварыРеализацияТоваровУслуг КАК Товары
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|ИМЕЮЩИЕ
	|	СУММА(Товары.Количество) > 0
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);	
	
КонецПроцедуры

Процедура ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование",                 ДокументОснование);
	Запрос.УстановитьПараметр("ПричинаСписанияУтилизация",         Справочники.КлассификаторНСИЗЕРНО.ПричинаСписанияУтилизация);
	Запрос.УстановитьПараметр("ПричинаСписанияРеализацияФизЛицам", Справочники.КлассификаторНСИЗЕРНО.ПричинаСписанияРеализацияФизЛицам);
	Запрос.УстановитьПараметр("ПричинаСписанияИспорчено",          Справочники.КлассификаторНСИЗЕРНО.ПричинаСписанияИспорчено);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		
		ИнтеграцияИСУТ.ПроверитьВозможностьВводаНаОсновании(РеквизитыДокумента);
		
		ДокументОбъект.Товары.Очистить();
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, ДопустимыйЗнак)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ИнтеграцияЗЕРНОКлиентСерверПовтИсп.УчитываемыеВидыПродукции());
	ОсобенностьУчета   = Новый Массив;
	
	Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
		ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ДокументОбъект.ВидПродукции) Тогда
		ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ДокументОбъект.ВидПродукции);
		ОсобенностьУчета   = Новый Массив;
		Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
			ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			ФильтрВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.РасширенныеВидыПродукции(ДанныеЗаполнения.ЗначениеФильтра);
			ОсобенностьУчета   = Новый Массив;
			Для Каждого ВидПродукции Из ФильтрВидПродукции Цикл
				ОсобенностьУчета.Добавить(ИнтеграцияИСУТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
			КонецЦикла;
		КонецЕсли;
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияСписаниеПартийЗЕРНОИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("Документ",          Основание);
	Запрос.УстановитьПараметр("ПустаяСерия",       ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	Запрос.УстановитьПараметр("ОсобенностьУчета",  ОсобенностьУчета);
	
	КолонкиКоличестваЗЕРНО = Новый Структура;
	КолонкиКоличестваЗЕРНО.Вставить("Количество", "КоличествоЗЕРНО");
	
	ДополнительныеПараметры = Новый Структура();
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличестваЗЕРНО,,ДополнительныеПараметры);
		
	Если ТипЗнч(ОсобенностьУчета) = Тип("Массив") Тогда
		ИнтеграцияИС.ЗаполнитьВидПродукцииПоТабличнойЧасти(ДокументОбъект);
		Если ЗначениеЗаполнено(ДокументОбъект.ВидПродукции) Тогда
			ДокументОбъект.ВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.ВидыПродукции(ДокументОбъект.ВидПродукции)[0];
		КонецЕсли;
	Иначе
		ДокументОбъект.ВидПродукции = ИнтеграцияЗЕРНОКлиентСервер.ВидыПродукции(ФильтрВидПродукции)[0];
	КонецЕсли;
	
	СписокСтрок = Новый Массив();
	Для Каждого СтрокаТаблицы Из ДокументОбъект.Товары Цикл
		СписокСтрок.Добавить(СтрокаТаблицы);
	КонецЦикла;
	
	Документы.СписаниеПартийЗЕРНО.ЗаполнитьПартии(ДокументОбъект, СписокСтрок);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияСписаниеПартийЗЕРНОИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак)
	
	ПакетТоварыДокумента = СтрРазделить(ТекстТоварыДокумента, ";");
	
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.СписаниеПартийЗЕРНО КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|;"
	
	+
	ТекстТоварыДокумента
	+
	
	?(СтрНайти(ПакетТоварыДокумента[ПакетТоварыДокумента.ВГраница()], "Склад") = 0,
	"
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура    КАК Номенклатура,
	|	ТоварыСерии.Характеристика  КАК Характеристика,
	|	ТоварыСерии.Серия           КАК Серия,
	|	ТоварыСерии.Количество      КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	-ОформленныеТовары.Количество    КАК Количество
	|ИЗ
	|	Документ.СписаниеПартийЗЕРНО.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			Т.Ссылка
	|		ИЗ
	|			ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура        КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика      КАК Характеристика,
	|	ТоварыКОформлению.Серия               КАК Серия,
	|	ОписаниеНоменклатуры.КодТНВЭД         КАК КодТНВЭД,
	|	ОписаниеНоменклатуры.КодОКПД2         КАК ОКПД2,
	|	ОписаниеНоменклатуры.ОсобенностьУчета КАК ОсобенностьУчета,
	|	СУММА(ТоварыКОформлению.Количество)   КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ОписаниеНоменклатуры
	|		ПО ТоварыКОформлению.Номенклатура = ОписаниеНоменклатуры.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ОписаниеНоменклатуры.КодТНВЭД,
	|	ОписаниеНоменклатуры.КодОКПД2,
	|	ОписаниеНоменклатуры.ОсобенностьУчета
	|
	|ИМЕЮЩИЕ СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|",
	"
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура    КАК Номенклатура,
	|	ТоварыСерии.Характеристика  КАК Характеристика,
	|	ТоварыСерии.Серия           КАК Серия,
	|	ТоварыСерии.Склад           КАК Склад,
	|	ТоварыСерии.Количество      КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	ОформленныеТовары.Ссылка.Склад   КАК Склад,
	|	-ОформленныеТовары.Количество    КАК Количество
	|ИЗ
	|	Документ.СписаниеПартийЗЕРНО.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			Т.Ссылка
	|		ИЗ
	|			ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура        КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика      КАК Характеристика,
	|	ТоварыКОформлению.Серия               КАК Серия,
	|	ОписаниеНоменклатуры.КодТНВЭД         КАК КодТНВЭД,
	|	ОписаниеНоменклатуры.КодОКПД2         КАК ОКПД2,
	|	ОписаниеНоменклатуры.ОсобенностьУчета КАК ОсобенностьУчета,
	|	ТоварыКОформлению.Склад               КАК Склад,
	|	СУММА(ТоварыКОформлению.Количество)   КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ОписаниеНоменклатуры
	|		ПО ТоварыКОформлению.Номенклатура = ОписаниеНоменклатуры.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ОписаниеНоменклатуры.КодТНВЭД,
	|	ОписаниеНоменклатуры.КодОКПД2,
	|	ТоварыКОформлению.Склад,
	|	ОписаниеНоменклатуры.ОсобенностьУчета
	|
	|ИМЕЮЩИЕ СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|"
	);
	
	Возврат Текст;
	
КонецФункции

Функция ДанныеПрикладныхДокументовИзСписанияПартийЗЕРНО(ДокументСсылка, ПолучитьШапку = Истина, ПолучитьТовары = Истина)
	
	СписокЗапросов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Если ПолучитьШапку Тогда
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	СписаниеПартийЗЕРНО.Организация                         КАК Организация,
		|	СписаниеПартийЗЕРНО.Подразделение                       КАК Подразделение,
		|	СписаниеПартийЗЕРНО.Склад                               КАК Склад,
		|	СписаниеПартийЗЕРНО.Дата                                КАК Дата,
		|	СписаниеПартийЗЕРНО.Комментарий                         КАК Комментарий
		|ИЗ
		|	Документ.СписаниеПартийЗЕРНО КАК СписаниеПартийЗЕРНО
		|ГДЕ
		|	СписаниеПартийЗЕРНО.Ссылка = &Ссылка
		|", "Шапка");
		
	КонецЕсли;
	
	Если ПолучитьТовары Тогда
		
		Запрос.УстановитьПараметр("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.ОсновнаяСтрана());
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|	СтавкиНДСНоменклатуры.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ СтавкиНДСНоменклатуры
		|ИЗ
		|	(ВЫБРАТЬ
		|		СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна КАК Страна,
		|		МАКСИМУМ(СтавкиНДСНоменклатуры.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеПартийЗЕРНО.Товары КАК СписаниеПартийЗЕРНОТовары
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеПартийЗЕРНО КАК СписаниеПартийЗЕРНО
		|				ПО СписаниеПартийЗЕРНОТовары.Ссылка = СписаниеПартийЗЕРНО.Ссылка
		|			ПО СтавкиНДСНоменклатуры.Номенклатура = СписаниеПартийЗЕРНОТовары.Номенклатура
		|				И (СтавкиНДСНоменклатуры.Страна = &СтранаРегистрации
		|					ИЛИ СтавкиНДСНоменклатуры.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И СтавкиНДСНоменклатуры.Период <= СписаниеПартийЗЕРНО.Дата
		|	ГДЕ
		|		СписаниеПартийЗЕРНОТовары.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		СтавкиНДСНоменклатуры.Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|	ПО АктуальныеСтавкиНДС.Период = СтавкиНДСНоменклатуры.Период
		|		И АктуальныеСтавкиНДС.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
		|		И АктуальныеСтавкиНДС.Страна = СтавкиНДСНоменклатуры.Страна
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеСтавкиНДС.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ОсновныеСтавкиНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеСтавкиНДС.Страна КАК Страна,
		|		МАКСИМУМ(ОсновныеСтавкиНДС.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеПартийЗЕРНО КАК СписаниеПартийЗЕРНО
		|			ПО (ОсновныеСтавкиНДС.Страна = &СтранаРегистрации
		|					ИЛИ ОсновныеСтавкиНДС.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И ОсновныеСтавкиНДС.Период <= СписаниеПартийЗЕРНО.Дата
		|	ГДЕ
		|		СписаниеПартийЗЕРНО.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		ОсновныеСтавкиНДС.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|	ПО АктуальныеСтавкиНДС.Период = ОсновныеСтавкиНДС.Период
		|		И АктуальныеСтавкиНДС.Страна = ОсновныеСтавкиНДС.Страна
		|");
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	СписаниеПартийЗЕРНОТовары.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
		|		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
		|	СписаниеПартийЗЕРНОТовары.Характеристика КАК Характеристика,
		|	СписаниеПартийЗЕРНОТовары.Серия КАК Серия,
		|	СписаниеПартийЗЕРНОТовары.Количество КАК Количество,
		|	СписаниеПартийЗЕРНОТовары.Количество КАК КоличествоУпаковок
		|ИЗ
		|	Документ.СписаниеПартийЗЕРНО.Товары КАК СписаниеПартийЗЕРНОТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|		ПО СписаниеПартийЗЕРНОТовары.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура,
		|		ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|ГДЕ
		|	СписаниеПартийЗЕРНОТовары.Ссылка = &Ссылка
		|", "Товары");
		
	КонецЕсли;
	
	Возврат ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	
КонецФункции

Процедура ЗаполнитьШапкуПрикладногоДокументаНаОснованииСписанияПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения)
	
	Выборка = ДанныеЗаполнения.Выбрать();
	Выборка.Следующий();
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Организация",   Выборка.Организация);
	Реквизиты.Вставить("Подразделение", Выборка.Подразделение);
	Реквизиты.Вставить("Дата",          Выборка.Дата);
	Реквизиты.Вставить("Комментарий",   Выборка.Комментарий);
	Реквизиты.Вставить("Склад",         Выборка.Склад);
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
	
КонецПроцедуры

Функция СтруктураЗаполненияТабличныхЧастейПоСписаниюПартийЗЕРНО(ДанныеЗаполнения, ЕстьСерии = Ложь, ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары", ДанныеЗаполнения.Выгрузить());
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЕстьСкладВТабличнойЧасти");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииСписанияПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения)
	
	ЕстьСкладВТабличнойЧасти = ДанныеЗаполнения.Свойство("ЕстьСкладВТабличнойЧасти");
	
	ДокументОбъект.Товары.Очистить();
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.Товары Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, СтрокаТовары);
		Если ЕстьСкладВТабличнойЧасти Тогда
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		
		ДокументОбъект[ИмяТЧСерии].Очистить();
		Для Каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
			Если ЗначениеЗаполнено(СтрокаТовары.Серия) Тогда
				НоваяСтрокаСерия = ДокументОбъект[ИмяТЧСерии].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерия, СтрокаТовары);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПогашениеСДИЗЗЕРНО

Процедура ОбработкаЗаполненияДокументаПогашениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ТипДокументаОснования = ТипЗнч(ДокументОснование);
	
	Если ТипДокументаОснования = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
		Или ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
		Или ТипДокументаОснования = Тип("ДокументСсылка.ПеремещениеТоваров")
		
		
		Или ТипДокументаОснования = Тип("ДокументСсылка.ПриемкаТоваровНаХранение") Тогда
		ИмяТаблицыСерий = "Серии";
		
		
	ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями")
		Или ТипДокументаОснования = Тип("ДокументСсылка.ВыкупПринятыхНаХранениеТоваров")
		Или ТипДокументаОснования = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		ИмяТаблицыСерий = "Товары";
	Иначе
		ДокументОснование = Неопределено;
	КонецЕсли;
	
	Если ДокументОснование <> Неопределено Тогда
		
		ИмяДокументаОснования = ДокументОснование.Метаданные().Имя;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Таблица", ДокументОбъект.Товары.Выгрузить(,"НомерСтроки,СДИЗ,Номенклатура"));
		Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
		Запрос.Текст = СтрШаблон(
		"ВЫБРАТЬ
		|	Таблица.НомерСтроки,
		|	Таблица.СДИЗ КАК СДИЗ
		|ПОМЕСТИТЬ Таблица
		|ИЗ
		|	&Таблица КАК Таблица
		|ГДЕ
		|	Таблица.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|;
		|ВЫБРАТЬ
		|	Товары.Номенклатура.КодОКПД2.Код КАК ОКПД2,
		|	Товары.Номенклатура КАК Номенклатура,
		|	МИНИМУМ(Товары.Характеристика) КАК Характеристика,
		|	МИНИМУМ(Серии.Серия) КАК Серия
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	Документ.%1.Товары КАК Товары
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.%1.%2 КАК Серии
		|	ПО Товары.Ссылка = Серии.Ссылка
		|		И Товары.Номенклатура = Серии.Номенклатура
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|	И Товары.Номенклатура.КодОКПД2 <> ЗНАЧЕНИЕ(Справочник.КлассификаторОКПД2.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Характеристика) = 1
		|	И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Серии.Серия) <= 1
		|;
		|ВЫБРАТЬ
		|	Таблица.НомерСтроки,
		|	ТаблицаДокумента.Номенклатура,
		|	ТаблицаДокумента.Характеристика,
		|	ТаблицаДокумента.Серия
		|ИЗ
		|	Таблица КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
		|		ПО Таблица.СДИЗ.Партия.ОКПД2 = ТаблицаДокумента.ОКПД2",
		ИмяДокументаОснования,
		ИмяТаблицыСерий);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
				СтрокаДокумента = ДокументОбъект.Товары[Выборка.НомерСтроки - 1];
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, Выборка,, "НомерСтроки");
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеПрикладныхДокументовИзПогашенияСДИЗЗЕРНО(ДокументСсылка, ПолучитьШапку = Истина, ПолучитьТовары = Истина)
	
	СписокЗапросов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Если ПолучитьШапку Тогда
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ОператорыАдреса.Ссылка КАК Ключ,
		|	МИНИМУМ(ОператорыАдреса.СкладКонтрагент) КАК Значение
		|ПОМЕСТИТЬ КлючиАдресов
		|ИЗ
		|	Справочник.КлючиАдресовЗЕРНО.ОператорыАдреса КАК ОператорыАдреса
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПогашениеСДИЗЗЕРНО КАК ПогашениеСДИЗ
		|		ПО ОператорыАдреса.Ссылка = ПогашениеСДИЗ.ПунктОтправления
		|			ИЛИ ОператорыАдреса.Ссылка = ПогашениеСДИЗ.ПунктНазначения
		|ГДЕ
		|	ПогашениеСДИЗ.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ОператорыАдреса.Ссылка
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОператорыАдреса.СкладКонтрагент) = 1
		|");
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ПогашениеСДИЗ.Организация КАК Организация,
		|	ПогашениеСДИЗ.Дата КАК Дата,
		|	ПогашениеСДИЗ.Комментарий КАК Комментарий,
		|	ПогашениеСДИЗ.Продавец КАК Продавец,
		|	ПогашениеСДИЗ.Покупатель КАК Покупатель,
		|	ПогашениеСДИЗ.Грузоотправитель КАК Грузоотправитель,
		|	ПогашениеСДИЗ.Грузополучатель КАК Грузополучатель,
		|	КлючиАдресовОтправителя.Значение КАК ПунктОтправленияКлюч,
		|	КлючиАдресовПолучателя.Значение КАК ПунктНазначенияКлюч
		|ИЗ
		|	Документ.ПогашениеСДИЗЗЕРНО КАК ПогашениеСДИЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиАдресов КАК КлючиАдресовОтправителя
		|		ПО ПогашениеСДИЗ.ПунктОтправления = КлючиАдресовОтправителя.Ключ
		|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиАдресов КАК КлючиАдресовПолучателя
		|		ПО ПогашениеСДИЗ.ПунктНазначения = КлючиАдресовПолучателя.Ключ
		|ГДЕ
		|	ПогашениеСДИЗ.Ссылка = &Ссылка
		|", "Шапка");
		
	КонецЕсли;
	
	Если ПолучитьТовары Тогда
		
		Запрос.УстановитьПараметр("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.ОсновнаяСтрана());
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|	СтавкиНДСНоменклатуры.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ СтавкиНДСНоменклатуры
		|ИЗ
		|	(ВЫБРАТЬ
		|		СтавкиНДСНоменклатуры.Номенклатура КАК Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна КАК Страна,
		|		МАКСИМУМ(СтавкиНДСНоменклатуры.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПогашениеСДИЗЗЕРНО.Товары КАК ПогашениеСДИЗТовары
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПогашениеСДИЗЗЕРНО КАК ПогашениеСДИЗ
		|				ПО ПогашениеСДИЗТовары.Ссылка = ПогашениеСДИЗ.Ссылка
		|			ПО СтавкиНДСНоменклатуры.Номенклатура = ПогашениеСДИЗТовары.Номенклатура
		|				И (СтавкиНДСНоменклатуры.Страна = &СтранаРегистрации
		|					ИЛИ СтавкиНДСНоменклатуры.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И СтавкиНДСНоменклатуры.Период <= ПогашениеСДИЗ.Дата
		|	ГДЕ
		|		ПогашениеСДИЗТовары.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		СтавкиНДСНоменклатуры.Номенклатура,
		|		СтавкиНДСНоменклатуры.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|	ПО АктуальныеСтавкиНДС.Период = СтавкиНДСНоменклатуры.Период
		|		И АктуальныеСтавкиНДС.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
		|		И АктуальныеСтавкиНДС.Страна = СтавкиНДСНоменклатуры.Страна
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеСтавкиНДС.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ОсновныеСтавкиНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеСтавкиНДС.Страна КАК Страна,
		|		МАКСИМУМ(ОсновныеСтавкиНДС.Период) КАК Период
		|		
		|	ИЗ
		|		РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПогашениеСДИЗЗЕРНО КАК ПогашениеСДИЗ
		|			ПО (ОсновныеСтавкиНДС.Страна = &СтранаРегистрации
		|					ИЛИ ОсновныеСтавкиНДС.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
		|				И ОсновныеСтавкиНДС.Период <= ПогашениеСДИЗ.Дата
		|	ГДЕ
		|		ПогашениеСДИЗ.Ссылка = &Ссылка
		|	СГРУППИРОВАТЬ ПО
		|		ОсновныеСтавкиНДС.Страна) КАК АктуальныеСтавкиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|	ПО АктуальныеСтавкиНДС.Период = ОсновныеСтавкиНДС.Период
		|		И АктуальныеСтавкиНДС.Страна = ОсновныеСтавкиНДС.Страна
		|");
		
		СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ПогашениеСДИЗТовары.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
		|		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
		|	ПогашениеСДИЗТовары.Характеристика КАК Характеристика,
		|	ПогашениеСДИЗТовары.Серия КАК Серия,
		|	ПогашениеСДИЗТовары.Количество КАК Количество,
		|	ПогашениеСДИЗТовары.Количество КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ПогашениеСДИЗЗЕРНО.Товары КАК ПогашениеСДИЗТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|		ПО ПогашениеСДИЗТовары.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
		|		ПО ИСТИНА
		|ГДЕ
		|	ПогашениеСДИЗТовары.Ссылка = &Ссылка
		|", "Товары");
		
	КонецЕсли;
	
	Возврат ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	
КонецФункции

Процедура ЗаполнитьШапкуПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения)
	
	Выборка = ДанныеЗаполнения.Выбрать();
	Выборка.Следующий();
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Организация", Выборка.Организация);
	Реквизиты.Вставить("Дата",        Выборка.Дата);
	Реквизиты.Вставить("Комментарий", Выборка.Комментарий);
	Реквизиты.Вставить("Склад",       Выборка.ПунктНазначенияКлюч);
	
	ДанныеДляОпределенияКонтрагента = Неопределено;
	Если ЗначениеЗаполнено(Выборка.Продавец) Тогда
		ДанныеДляОпределенияКонтрагента = Выборка.Продавец;
	ИначеЕсли ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
		ДанныеДляОпределенияКонтрагента = Выборка.Грузоотправитель;
	КонецЕсли;
	
	Если ДанныеДляОпределенияКонтрагента <> Неопределено Тогда
		ОрганизацииКонтрагентыПоКлючам = Справочники.КлючиРеквизитовОрганизацийЗЕРНО.ОрганизацииКонтрагентыПоКлючам(ДанныеДляОпределенияКонтрагента);
		Реквизиты.Вставить("Контрагент", ОрганизацииКонтрагентыПоКлючам.Получить(ДанныеДляОпределенияКонтрагента).Контрагент);
		Если ЗначениеЗаполнено(Реквизиты.Контрагент) Тогда
			Реквизиты.Вставить("Партнер", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Контрагент, "Партнер"));
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
	
КонецПроцедуры

Функция СтруктураЗаполненияТабличныхЧастейПоПогашениюСДИЗЗЕРНО(ДанныеЗаполнения, ЕстьСерии = Ложь, ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары", ДанныеЗаполнения.Выгрузить());
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЕстьСкладВТабличнойЧасти");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения)
	
	ЕстьСкладВТабличнойЧасти = ДанныеЗаполнения.Свойство("ЕстьСкладВТабличнойЧасти");
	
	ДокументОбъект.Товары.Очистить();
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.Товары Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, СтрокаТовары);
		Если ЕстьСкладВТабличнойЧасти Тогда
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		
		ДокументОбъект[ИмяТЧСерии].Очистить();
		Для Каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
			Если ЗначениеЗаполнено(СтрокаТовары.Серия) Тогда
				НоваяСтрокаСерия = ДокументОбъект[ИмяТЧСерии].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерия, СтрокаТовары);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрикладныеДокументы

#Область РеализацияТоваровУслуг

Процедура ЗаполнитьРеализациюТоваровУслугНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
	ДокументОбъект.ЗаполнитьУсловияПродажПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровПоставщику

Процедура ЗаполнитьВозвратТоваровПоставщикуНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровМеждуОрганизациями

Процедура ЗаполнитьВозвратТоваровМеждуОрганизациямиНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
КонецПроцедуры

#КонецОбласти

#Область ПередачаТоваровМеждуОрганизациями

Процедура ЗаполнитьПередачуТоваровМеждуОрганизациямиНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(
		ДокументОбъект,
	СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
КонецПроцедуры

#КонецОбласти

#Область ПеремещениеТоваров

Процедура ЗаполнитьПеремещениеТоваровНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
КонецПроцедуры

#КонецОбласти

#Область ОтгрузкаТоваровСХранения

Процедура ЗаполнитьОтгрузкуТоваровСХраненияНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
КонецПроцедуры

#КонецОбласти

#Область ПередачаТоваровХранителю

Процедура ЗаполнитьПередачуТоваровХранителюНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
		
		
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
	ДокументОбъект.ЗаполнитьУсловияПродажПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ПоступлениеТоваровОтХранителя

Процедура ЗаполнитьПоступлениеТоваровОтХранителяНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
	ДокументОбъект.ЗаполнитьУсловияПродажПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ВыкупТоваровХранителем

Процедура ЗаполнитьВыкупТоваровХранителемНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзОформленияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииОформленияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоОформлениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
	ДокументОбъект.ЗаполнитьУсловияПродажПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ПриобретениеТоваровУслуг

Процедура ЗаполнитьПриобретениеТоваровУслугНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзПогашенияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоПогашениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина, Истина));
		
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровОтКлиента

Процедура ЗаполнитьВозвратТоваровОтКлиентаНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзПогашенияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоПогашениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина));
	
	ДокументОбъект.ЗаполнитьУсловияПродажПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ВыкупПринятыхНаХранениеТоваров

Процедура ЗаполнитьВыкупПринятыхНаХранениеТоваровНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзПогашенияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
		
			ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров;
		
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоПогашениюСДИЗЗЕРНО(РезультатЗапроса.Товары));
	
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ПриемкаТоваровНаХранение

Процедура ЗаполнитьПриемкуТоваровНаХранениеНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзПогашенияСДИЗЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииПогашенияСДИЗЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоПогашениюСДИЗЗЕРНО(РезультатЗапроса.Товары, Истина, Истина));
	
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти



#Область ОприходованиеИзлишковТоваров

Процедура ЗаполнитьОприходованиеИзлишковТоваровНаОснованииФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт

	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзФормированияПартийЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииФормированияПартийЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииФормированияПартийЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоФормированиюПартийЗЕРНО(РезультатЗапроса.Товары),
		ДокументОснование);

КонецПроцедуры

#КонецОбласти

#Область ПрочееОприходованиеТоваров

Процедура ЗаполнитьПрочееОприходованиеТоваровНаОснованииФормированияПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзФормированияПартийЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииФормированияПартийЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииФормированияПартийЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоФормированиюПартийЗЕРНО(РезультатЗапроса.Товары, Истина),
		ДокументОснование);
		
КонецПроцедуры

#КонецОбласти

#Область ВнутренееПотребление

Процедура ЗаполнитьВнутреннееПотреблениеНаОснованииСписанияПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзСписанияПартийЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииСписанияПартийЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииСписанияПартийЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоСписаниюПартийЗЕРНО(РезультатЗапроса.Товары, Истина));
		
КонецПроцедуры

#КонецОбласти

#Область СписаниеНедостачТоваров

Процедура ЗаполнитьСписаниеНедостачТоваровНаОснованииСписанияПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзСписанияПартийЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииСписанияПартийЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииСписанияПартийЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоСписаниюПартийЗЕРНО(РезультатЗапроса.Товары));	
	
КонецПроцедуры

#КонецОбласти

#Область СборкаТоваров

Процедура ЗаполнитьСборкуТоваровНаОснованииФормированияПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДокументОснованиеИзДанныхЗаполнения(ДанныеЗаполнения);
	
	ЗаполнятьШапку = Не ЗначениеЗаполнено(ДокументОбъект.Ссылка)
		И Не ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку");
	
	РезультатЗапроса = ДанныеПрикладныхДокументовИзФормированияПартийПриПроизводствеЗЕРНО(ДокументОснование, ЗаполнятьШапку);
	
	Если ЗаполнятьШапку Тогда
		
		ЗаполнитьШапкуПрикладногоДокументаНаОснованииФормированияПартийПриПроизводствеЗЕРНО(ДокументОбъект, РезультатЗапроса.Шапка);	
		ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров;
		
	КонецЕсли;
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииФормированияПартийПриПроизводствеЗЕРНО(
		ДокументОбъект,
		СтруктураЗаполненияТабличныхЧастейПоФормированиюПартийПриПроизводствеЗЕРНО(РезультатЗапроса.Товары, Истина));	
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#КонецОбласти

#Область СопоставлениеСправочниковПриСвязиДокументов

// В процедуре необходимо реализовать запись сопоставления хозяйствующих субъектов и предприятий с прикладными
//   справочниками конфигурации
//
// Параметры:
//  ДокументОснование - ДокументСсылка, ДокументОбъект - прикладной документ конфигурации,
//  ДокументОбъект    - ДокументСсылка, ДокументОбъект - связанный с ним документ библиотеки.
//
Процедура ЗаполнитьСоответствиеШапкиОбъектов(ДокументОснование, ДокументОбъект) Экспорт
	
	ТипДокументаЗЕРНО = ТипЗнч(ДокументОбъект);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
