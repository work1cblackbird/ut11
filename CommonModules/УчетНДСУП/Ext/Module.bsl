#Область ПрограммныйИнтерфейс

#Область ПолучениеНастроекИПараметровУчетаНДС

// Возвращает настройки учета НДС.
//
// Возвращаемое значение:
// 	 Структура: см. УчетНДСУПВызовСервера.НастройкиУчета
//
Функция НастройкиУчета() Экспорт
	
	Возврат УчетНДСУПСлужебныйКлиентСерверПовтИсп.НастройкиУчета();
	
КонецФункции

// Возвращает параметры учета НДС, установленные для организации в заданном периоде.
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить параметры.
// 	Дата - Дата - Дата, на которую необходимо получить параметры учета.
// 	Склад - СправочникСсылка.Склады - Необязательный параметр. Склад, для которого необходимо определить применение EНВД.
// 	Подразделение - СправочникСсылка.СтруктураПредприятия - Необязательный параметр. Подразделение, для которого необходимо определить применение EНВД.
//
// Возвращаемое значение:
// 	 Структура - Параметры учета НДС по организации:
// 		* ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - Основное налогообложение НДС организации.
// 		* ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - Основной вид деятельности НДС закупки товаров.
// 		* НалогообложениеНДСРозничнойПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС розничной торговли. 
// 		                                                                                   Значение получается с учетом переданного склада.
// 		* РаздельныйУчетНДС - Булево - Признак использование раздельного учета НДС.
// 		* ОсобыйПорядокУчетаНДСПриПроизводствеДЦ - Булево - Признак того, что организация учитывает НДС относящийся к производству продукции с 
// 							длительным циклом производства особым образом.
// 		* ВариантУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую - ПеречислениеСсылка.ВариантыУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую 
// 		                    - Определяет порядок учета НДС при изменении деятельности на необлагаемую.
// 		* СтатьяРасходов_НеОблагаетсяНДС - ПланВидовХарактеристикСсылка.СтатьиРасходов - Статья списания НДС при изменении деятельности на необлагаемую НДС.
// 		* АналитикаРасходов_НеОблагаетсяНДС - Неопределено, Характеристика.СтатьиРасходов - Аналитика списания НДС при изменении деятельности на необлагаемую НДС.
// 		* СтатьяРасходов_ОблагаетсяЕНВД - ПланВидовХарактеристикСсылка.СтатьиРасходов - Статья списания НДС при изменении деятельности на облагаемую ЕНВД.
// 		* АналитикаРасходов_ОблагаетсяЕНВД - Неопределено, Характеристика.СтатьиРасходов - Аналитика списания НДС при изменении деятельности на облагаемую ЕНВД.
//		* ФормироватьНДСПредъявленныйПриВключенииВСтоимость - Булево - Признак формирования НДСПредъявленный при включении в стоимость.
//		* СписыватьНДСПоРасходамНеПринимаемымВНУ - Булево - Признак списания НДС по расходам, не принимаемым в НУ.
//
Функция ПараметрыУчетаПоОрганизации(Знач Организация, Знач Дата, Знач Склад = Неопределено,  Знач Подразделение = Неопределено) Экспорт
	
	ПараметрыУчета = Новый Структура();
	
	ОсновноеНалогообложениеИБ = ?(ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС"),
			Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС,
			Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	
	ПараметрыУчета.Вставить("ОсновноеНалогообложениеНДСПродажи",  ОсновноеНалогообложениеИБ);
	ПараметрыУчета.Вставить("ОсновнойВидДеятельностиНДСЗакупки",  ОсновноеНалогообложениеИБ);
	ПараметрыУчета.Вставить("НалогообложениеНДСРозничнойПродажи", ОсновноеНалогообложениеИБ);
	ПараметрыУчета.Вставить("РаздельныйУчетНДС", Ложь);
	ПараметрыУчета.Вставить("ФормироватьНДСПредъявленныйПриВключенииВСтоимость", Ложь);
	ПараметрыУчета.Вставить("СписыватьНДСПоРасходамНеПринимаемымВНУ", Ложь);
	
	ПараметрыУчета.Вставить("ОсобыйПорядокУчетаНДСПриПроизводствеДЦ", Ложь);
	ПараметрыУчета.Вставить("ВариантУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую", Перечисления.ВариантыУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую.ПустаяСсылка());
	ПараметрыУчета.Вставить("СтатьяРасходов_НеОблагаетсяНДС", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ПараметрыУчета.Вставить("АналитикаРасходов_НеОблагаетсяНДС", Неопределено);
	ПараметрыУчета.Вставить("СтатьяРасходов_ОблагаетсяЕНВД", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ПараметрыУчета.Вставить("АналитикаРасходов_ОблагаетсяЕНВД", Неопределено);
	
	ДатаСреза = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	НастройкиУчетаНДС = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДС",
		Организация,
		ДатаСреза);
	
	Если НастройкиУчетаНДС <> Неопределено Тогда
		
		Если НастройкиУчетаНДС.ПлательщикНДС Тогда
			ПараметрыУчета.Вставить("ОсновноеНалогообложениеНДСПродажи", Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
			ПараметрыУчета.Вставить("ОсновнойВидДеятельностиНДСЗакупки", Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
			ПараметрыУчета.Вставить("НалогообложениеНДСРозничнойПродажи", Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		Иначе
			ПараметрыУчета.Вставить("ОсновноеНалогообложениеНДСПродажи", Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
			ПараметрыУчета.Вставить("ОсновнойВидДеятельностиНДСЗакупки", Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
			ПараметрыУчета.Вставить("НалогообложениеНДСРозничнойПродажи", Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		КонецЕсли;
		
		ПараметрыУчета.РаздельныйУчетНДС = НастройкиУчетаНДС.РаздельныйУчетТоваровПоНалогообложениюНДС;
		ПараметрыУчета.ФормироватьНДСПредъявленныйПриВключенииВСтоимость = НастройкиУчетаНДС.ФормироватьНДСПредъявленныйПриВключенииВСтоимость;
		ПараметрыУчета.СписыватьНДСПоРасходамНеПринимаемымВНУ = НастройкиУчетаНДС.СписыватьНДСПоРасходамНеПринимаемымВНУ;
		
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьПараметрыУчетаОрганизации(ПараметрыУчета, Организация, Дата, Склад, Подразделение);
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает список доступных организаций, у которых на Дату применяется НО ПродажаНеОблагаетсяНДС
// 
// Параметры:
//   Период - Дата
//
// Возвращаемое значение:
// 	Массив из СправочникСсылка.Организации - Организации, у которых на Дату применяется НО ПродажаНеОблагаетсяНДС.
//
Функция ОрганизацииБезНДС(Знач Период) Экспорт
	
	Период = КонецМесяца(Период);
	Запрос = Новый Запрос;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС") Тогда 
		
		ТекстЗапроса = Неопределено;
		
		УчетНДСЛокализация.ДополнитьСписокОрганизацийБезНДС(ТекстЗапроса);
		
		Если ТекстЗапроса = Неопределено Тогда
		
			ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НастройкиУчетаНДССрезПоследних.Организация КАК Организация
			|ИЗ
			|	РегистрСведений.НастройкиУчетаНДС.СрезПоследних(&Период, НЕ ПлательщикНДС) КАК НастройкиУчетаНДССрезПоследних
			|";
		
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Период", Период);
		
	Иначе		
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации";	
			
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();	
	
	Возврат Результат;
	
КонецФункции

// Возвращает список типов налогообложения, НДС по которым никогда не принимается к возмещению.
//
// Возвращаемое значение:
// 	Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС - Виды деятельности НДС, по которым НДС включается в стоимость.
//
Функция ВидыДеятельностиНДСУчитываетсяВСтоимости() Экспорт
	
	Результат = Новый Массив();
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	УчетНДСЛокализация.ДополнитьВидыДеятельностиНДСУчитываетсяВСтоимости(Результат);
	
	Возврат Результат;
	
КонецФункции

// Возвращает список видов деятельности, НДС по которым принимается к возмещению:
// - в полном объеме или частично;
// - по общим или особым правилам.
//
// Возвращаемое значение:
// 	Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС - Виды деятельности НДС, по которым НДС принимается к вычету.
//
Функция ВидыДеятельностиНДСПринимаетсяКВозмещению() Экспорт
	
	Результат = Новый Массив();
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	УчетНДСЛокализация.ДополнитьВидыДеятельностиНДСПринимаетсяКВозмещению(Результат);
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив типов налогообложения.
// Параметры:
//   ДляАвансов - Булево
// 
// Возвращаемое значение:
// 	Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС - массив типов налогообложения
Функция ТипыНалогообложенияНДСНеоблагаемые(ДляАвансов = Ложь) Экспорт
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	УчетНДСЛокализация.ДополнитьТипыНалогообложенияНДСНеоблагаемые(МассивТипов, ДляАвансов);
	
	Возврат МассивТипов;
	
КонецФункции

// Возвращает список типов налогообложения НДС, по которым НДС не учитывается в стоимости, 
// а подлежит принятию к вычету (при выполнении условий).
// 
// Возвращаемое значение:
// 	Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС - массив типов налогообложения
//
Функция НалогообложенияПродажНДСНеУчитываетсяВСтоимости() Экспорт
	
	Результат = Новый Массив();
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	УчетНДСЛокализация.ДополнитьНалогообложенияПродажНДСНеУчитываетсяВСтоимости(Результат);
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив типов налогообложения, являющийся объединением двух массивов.
// 
// Возвращаемое значение:
// 	Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС - массив типов налогообложения
//
Функция ТипыНалогообложенияНДСНеУчитываетсяВСтоимости() Экспорт
	
	Результат = НалогообложенияПродажНДСНеУчитываетсяВСтоимости();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, ВидыДеятельностиНДСПринимаетсяКВозмещению(), Истина);
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив типов налогообложения НДС, которые могут выступать видами деятельности.
// 
// Возвращаемое значение:
// 	Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС - массив типов налогообложения
Функция ВидыДеятельностиНДС() Экспорт
	
	ВидыДеятельности = УчетНДСУПСлужебный.ПрименяемыеВидыДеятельностиНДС();
	ВидыДеятельности.Удалить(ВидыДеятельности.НайтиПоЗначению(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка()));
	Возврат ВидыДеятельности.ВыгрузитьЗначения();
	
КонецФункции

#КонецОбласти

#Область СтавкиНДС

// Возвращает ставку НДС операции по номенклатуре и типу налогообложения НДС.
//
// Параметры:
//   Номенклатура - СправочникСсылка.Номенклатура - Номенклатура из которой необходимо получить ставку НДС.
//   НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС операции.
//   Организация - СправочникСсылка.Организации - Организация документа
//   Дата - Дата - Дата операции
//   УказаннаяСтавкаНДС - СправочникСсылка.СтавкиНДС
//   
// Возвращаемое значение:
//   СправочникСсылка.СтавкиНДС - Ставка НДС по номенклатуре и типу налогообложения
//
Функция СтавкаНДСПоНоменклатуреИНалогообложению(Номенклатура, НалогообложениеНДС, Организация, Дата, УказаннаяСтавкаНДС = Неопределено) Экспорт
	
	СтавкаНДС = Неопределено;
	
	Если ЗначениеЗаполнено(Номенклатура) И НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
		СтавкаНДС = СтавкаНДСНоменклатуры(Номенклатура, Организация, Дата);
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
	Иначе
		СтавкаНДС = СтавкаНДСПоТипуНалогообложения(НалогообложениеНДС, Организация, Дата);
	КонецЕсли;
	
	УчетНДСЛокализация.ЗаполнитьСтавкуНДСПоНоменклатуреИНалогообложению(Номенклатура, НалогообложениеНДС, Организация,
										Дата, СтавкаНДС, УказаннаяСтавкаНДС);
	
	Возврат СтавкаНДС;

КонецФункции

// Получает ставку НДС номенклатуры
// 
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - Номенклатура, для которой необходимо получить ставку НДС.
//  Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить ставку НДС
//  Дата -  Дата - Дата, на которую необходимо получить ставку НДС.
// 
// Возвращаемое значение:
//  СправочникСсылка.СтавкиНДС -
//
Функция СтавкаНДСНоменклатуры(Номенклатура, Организация, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	СтавкиНДСНоменклатуры.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних(
	|			&Дата,
	|			Номенклатура = &Номенклатура
	|				И Страна = &Страна) КАК СтавкиНДСНоменклатуры
	|ГДЕ
	|	(СтавкиНДСНоменклатуры.СтавкаНДС.НачалоПериода <= &Дата
	|			ИЛИ СтавкиНДСНоменклатуры.СтавкаНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (СтавкиНДСНоменклатуры.СтавкаНДС.КонецПериода >= &Дата
	|			ИЛИ СтавкиНДСНоменклатуры.СтавкаНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	СтавкиНДСНоменклатуры.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних(
	|			&Дата,
	|			Номенклатура = &Номенклатура
	|				И Страна = &ПустаяСтрана) КАК СтавкиНДСНоменклатуры
	|ГДЕ
	|	(СтавкиНДСНоменклатуры.СтавкаНДС.НачалоПериода <= &Дата
	|			ИЛИ СтавкиНДСНоменклатуры.СтавкаНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (СтавкиНДСНоменклатуры.СтавкаНДС.КонецПериода >= &Дата
	|			ИЛИ СтавкиНДСНоменклатуры.СтавкаНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3 КАК Приоритет,
	|	ОсновныеСтавкиНДС.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	РегистрСведений.ОсновныеСтавкиНДС.СрезПоследних(&Дата, Страна = &Страна) КАК ОсновныеСтавкиНДС
	|ГДЕ
	|	(ОсновныеСтавкиНДС.СтавкаНДС.НачалоПериода <= &Дата
	|			ИЛИ ОсновныеСтавкиНДС.СтавкаНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|			И (ОсновныеСтавкиНДС.СтавкаНДС.КонецПериода >= &Дата
	|				ИЛИ ОсновныеСтавкиНДС.СтавкаНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Страна", ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(Организация));
	Запрос.УстановитьПараметр("ПустаяСтрана", Справочники.СтраныМира.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СтавкаНДС;
	КонецЕсли;
	
	Возврат Справочники.СтавкиНДС.ПустаяСсылка();
	
КонецФункции

// Возвращает значение ставки НДС по умолчанию.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация, для которой необходимо определить ставку по умолчанию.
//  Дата - Дата - дата на которую необходимо получить ставку НДС по умолчанию,
//               если дата пустая, то будет получена ставка НДС на текущую дату.
//  РасчетнаяСтавка - Булево - указывает необходимость получения расчетной ставки НДС X/(100 + X).
//   НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС, для которого необходимо получить ставку.
//   			Если Неопределено, то ставка получается для налогообложения ПродажаОблгаетсяНДС.
// Возвращаемое значение:
//  СправочникСсылка.СтавкиНДС - значение ставки НДС.
//
Функция СтавкаНДСПоУмолчанию(Знач Организация, Знач Дата = Неопределено, Знач РасчетнаяСтавка = Ложь, Знач НалогообложениеНДС = Неопределено) Экспорт
	
	СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
	
	ДатаСтавки = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	УчетНДСЛокализация.УстановитьСтавкуНДСПоУмолчанию(СтавкаНДС, ДатаСтавки, РасчетнаяСтавка, НалогообложениеНДС);
	
	Если Не ЗначениеЗаполнено(СтавкаНДС) Тогда
		СтавкаНДС = СтавкаНДСПоТипуНалогообложения(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, Организация, Дата);
	КонецЕсли;
	
	Возврат СтавкаНДС;
	
КонецФункции

// Возвращает значение ставки НДС по основной стране регистрации.
//
// Параметры:
//  Дата - Дата - дата на которую необходимо получить ставку НДС по умолчанию,
//               если дата пустая, то будет получена ставка НДС на текущую дату.
// Возвращаемое значение:
//  СправочникСсылка.СтавкиНДС - значение ставки НДС.
//
Функция СтавкаНДСОсновнойСтраны(Знач Дата = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСтавкиНДС.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	РегистрСведений.ОсновныеСтавкиНДС.СрезПоследних(&Дата, Страна = &Страна) КАК ОсновныеСтавкиНДС
	|";
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Страна", ЗначениеНастроекКлиентСерверПовтИсп.ОсновнаяСтрана());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Справочники.СтавкиНДС.ПустаяСсылка();
	КонецЕсли;
		
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СтавкаНДС;
	КонецЕсли;
	
КонецФункции

// Определяет является ли ставка незначащей (Процент = 0)
//
// Параметры:
//  СтавкаНДС - СправочникСсылка.СтавкиНДС - Значение ставки НДС.
//
// Возвращаемое значение:
//  Булево -
//
Функция НезначащаяСтавка(СтавкаНДС) Экспорт
	
	СписокСтавокСЧислителем0 = УчетНДСУПСлужебныйКлиентСерверПовтИсп.СписокНезначащихСтавок();
	
	ВходитВСписокНезначащихСтавок = Не СписокСтавокСЧислителем0.НайтиПоЗначению(СтавкаНДС) = Неопределено;
	
	Возврат ВходитВСписокНезначащихСтавок;
	
КонецФункции

// Устанавливает значение параметров запроса: 
// * СтавкаНДСБезНДС
// * СтавкаНДСПоУмолчанию
// * СтавкаНДСНаЭкспорт
// * Дата
// * СтранаРегистрации
// исходя из соответствующих типов налогообложения.
// 
// Параметры:
//  ПараметрыЗапроса - Структура - Параметры запроса получения данных, в котором необходимо установить параметры.
//  Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить ставки НДС
//  Дата - Дата - Дата, на которую необходимо получить ставки НДС.
//
Процедура УстановитьПараметрыЗапросаСтавкиНДС(ПараметрыЗапроса, Организация, Дата) Экспорт
	
	Если Не ПараметрыЗапроса.Свойство("СтавкаНДСБезНДС") Тогда
		ПараметрыЗапроса.Вставить("СтавкаНДСБезНДС", Справочники.СтавкиНДС.БезНДС);
	КонецЕсли;
	
	Если Не ПараметрыЗапроса.Свойство("СтавкаНДСПоУмолчанию") Тогда
		СтавкаНДСПоУмолчанию = СтавкаНДСПоУмолчанию(Организация, Дата);
		ПараметрыЗапроса.Вставить("СтавкаНДСПоУмолчанию", СтавкаНДСПоУмолчанию);
	КонецЕсли;
	
	Если Не ПараметрыЗапроса.Свойство("СтавкаНДСНаЭкспорт") Тогда
		СтавкаНДСНаЭкспорт = СтавкаНДСПоТипуНалогообложения(
			Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт, Организация, Дата);
		ПараметрыЗапроса.Вставить("СтавкаНДСНаЭкспорт", СтавкаНДСНаЭкспорт);
	КонецЕсли;
	
	Если Не ПараметрыЗапроса.Свойство("Дата") Тогда
		ПараметрыЗапроса.Вставить("Дата", Дата);
	КонецЕсли;
	
	Если Не ПараметрыЗапроса.Свойство("СтранаРегистрации") Тогда
		ПараметрыЗапроса.Вставить("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(Организация));
	КонецЕсли;
	
КонецПроцедуры

// Возвращает фрагмент запроса для получения ставки НДС исходя из типа налогообложения.
// При использовании данного текста в запросе необходимо установить параметры (см. УчетНДСУП.УстановитьПараметрыЗапросаСтавкиНДС).
// 
// Параметры:
//  ВыражениеНалогообложениеНДС - Строка - Выражение получения налогообложения в запросе.
//  ВыражениеНоменклатура - Строка, Неопределено - Выражение получения номенклатуры в запросе. 
//                                                 Если заполнено, то Ставка НДС для типа налогообложения ПродажаОблагаетсяНДС получается из номенклатуры.
//                                                 Если Неопределено, то для типа налогообложения ПродажаОблагаетсяНДС используется ставка НДС по умолчанию.
//  ВыражениеВозвращатьМногооборотнуюТару - Строка, Неопределено - Выражение признака возврата многооборотной тары.
//                                                                 Если тара возвращается то используется ставка "Без НДС".
//                                                                 В противном случае ставка НДС определяется по общим правилам.
//
// Возвращаемое значение:
// 	Строка - Фрагмент текста запроса
//
Функция ТекстЗапросаСтавкаНДС(ВыражениеНалогообложениеНДС, ВыражениеНоменклатура = Неопределено, ВыражениеВозвращатьМногооборотнуюТару = Неопределено) Экспорт
	
	Если ВыражениеНалогообложениеНДС <> Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБОР
		|	КОГДА &ВыражениеВозвращатьМногооборотнуюТару
		|			И &ВыражениеНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|		ТОГДА &СтавкаНДСБезНДС
		|	КОГДА &ВыражениеНалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|		ТОГДА ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)))
		|	КОГДА &ВыражениеНалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|		ТОГДА &СтавкаНДСНаЭкспорт
		|	ИНАЧЕ &СтавкаНДСБезНДС
		|КОНЕЦ";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеНалогообложениеНДС", ВыражениеНалогообложениеНДС);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеНоменклатура", ВыражениеНоменклатура);
		
		Если ВыражениеВозвращатьМногооборотнуюТару <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеВозвращатьМногооборотнуюТару", ВыражениеВозвращатьМногооборотнуюТару);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеВозвращатьМногооборотнуюТару", "ЛОЖЬ");
		КонецЕсли;
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБОР
		|	КОГДА &ВыражениеНалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|		ТОГДА &СтавкаНДСПоУмолчанию
		|	КОГДА &ВыражениеНалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|		ТОГДА &СтавкаНДСНаЭкспорт
		|		ИНАЧЕ &СтавкаНДСБезНДС
		|КОНЕЦ";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеНалогообложениеНДС", ВыражениеНалогообложениеНДС);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Заполняет ставку НДС для платежей по типу налогообложения
// 
// Параметры:
//  СтавкаНДС - СправочникСсылка.СтавкиНДС - Текущее значение ставки НДС.
//  ТипНалогообложенияНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогобложение для поиска ставки НДС.
//  Организация - СправочникСсылка.Организации - Организация, для которой необходимо заполнить ставку НДС
//  Дата - СправочникСсылка.Организации - Дата, на которую необходимо Заполнить ставку НДС
//
Процедура ЗаполнитьСтавкуНДСДляПлатежей(СтавкаНДС, Знач ТипНалогообложенияНДС, Организация, Дата) Экспорт
	
	Если НЕ СтавкаНДСКорректна(СтавкаНДС, ТипНалогообложенияНДС, Организация, Дата) Тогда
		
		НоваяСтавкаНДС = СтавкаНДСПоУмолчанию(Организация);
		
		Если ЗначениеЗаполнено(ТипНалогообложенияНДС) Тогда
			СтавкаНДСПоНалогообложению = СтавкаНДСПоТипуНалогообложения(ТипНалогообложенияНДС, Организация, Дата);
			Если ЗначениеЗаполнено(СтавкаНДСПоНалогообложению) Тогда
				НоваяСтавкаНДС = СтавкаНДСПоНалогообложению;
			КонецЕсли;
		КонецЕсли;

		УчетНДСЛокализация.ЗаполнитьСтавкаНДСДляПлатежей(НоваяСтавкаНДС, ТипНалогообложенияНДС, Организация, Дата);

		Если ЗначениеЗаполнено(НоваяСтавкаНДС) Тогда
			СтавкаНДС = НоваяСтавкаНДС;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет данные выбора ставки НДС
//
// Параметры:
// 	 ДанныеВыбора - СписокЗначений из СправочникСсылка.СтавкиНДС - Данные выбора
// 	 Параметры - Структура - Параметры выбора:
// 	 	* Отбор - Структура - содержит:
// 	 		** Ссылка - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
// 	 СтандартнаяОбработка - Булево - флаг стандартной обработки события
//
Процедура ПолучитьДанныеВыбораСтавкиНДС(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос();
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтавкиНДСТипыНалогообложенияНДС.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(СтавкиНДСТипыНалогообложенияНДС.Ссылка) КАК Представление
	|ИЗ
	|	Справочник.СтавкиНДС.ТипыНалогообложенияНДС КАК СтавкиНДСТипыНалогообложенияНДС
	|ГДЕ
	|	(СтавкиНДСТипыНалогообложенияНДС.Ссылка.Страна = &Страна 
	|		ИЛИ СтавкиНДСТипыНалогообложенияНДС.Ссылка.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
	|	И &ОтборПоДате
	|	И &ОтборПоТипамНалогообложения
	|	И &ОтборПоПараметрам
	|	И &ФильтрПоРассчетнойСтавке
	|";
	
	Страна = Неопределено;
	Если Параметры.Свойство("Организация") Тогда
		Страна = ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(Параметры.Организация);
	ИначеЕсли Параметры.Свойство("Страна") Тогда
		Страна = Параметры.Страна;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Страна) Тогда
		Страна = ЗначениеНастроекКлиентСерверПовтИсп.ОсновнаяСтрана();
	КонецЕсли;
	Запрос.УстановитьПараметр("Страна", Страна);
	
	БезОтбораПоДате = Ложь;
	Если Параметры.Свойство("БезОтбораПоДате") Тогда
		БезОтбораПоДате = Параметры.БезОтбораПоДате;
	КонецЕсли;
	Если БезОтбораПоДате Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоДате", "ИСТИНА");
	Иначе
		Дата = ТекущаяДатаСеанса();
		Если Параметры.Свойство("Дата") И ЗначениеЗаполнено(Параметры.Дата) Тогда
			Дата = Параметры.Дата;
		КонецЕсли;
		ТекстОтбораПоДате = "(СтавкиНДСТипыНалогообложенияНДС.Ссылка.НачалоПериода <= &Дата
							|		ИЛИ СтавкиНДСТипыНалогообложенияНДС.Ссылка.НачалоПериода = ДАТАВРЕМЯ(1,1,1))
							|	И (КОНЕЦПЕРИОДА(СтавкиНДСТипыНалогообложенияНДС.Ссылка.КонецПериода, ДЕНЬ) >= &Дата
							|		ИЛИ СтавкиНДСТипыНалогообложенияНДС.Ссылка.КонецПериода = ДАТАВРЕМЯ(1,1,1))";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоДате", ТекстОтбораПоДате);
		Запрос.УстановитьПараметр("Дата", Дата);
	КонецЕсли;
	
	НалогообложениеНДС = Неопределено;
	Если Параметры.Свойство("НалогообложениеНДС", НалогообложениеНДС) Тогда
		Если Не ЗначениеЗаполнено(НалогообложениеНДС) Тогда
			НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоТипамНалогообложения", "СтавкиНДСТипыНалогообложенияНДС.ТипНалогообложенияНДС В(&ТипыНалогообложения)");
		Запрос.УстановитьПараметр("ТипыНалогообложения", НалогообложениеНДС);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоТипамНалогообложения", "ИСТИНА");
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Ссылка") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоПараметрам", "СтавкиНДСТипыНалогообложенияНДС.Ссылка В (&ОтборПоСсылке)");
		Запрос.УстановитьПараметр("ОтборПоСсылке", Параметры.Отбор.Ссылка);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоПараметрам", "ИСТИНА");
	КонецЕсли;
	
	Если Параметры.Свойство("ИсключатьДробныеСтавки") И Параметры.ИсключатьДробныеСтавки Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ФильтрПоРассчетнойСтавке", "СтавкиНДСТипыНалогообложенияНДС.Ссылка.РасчетнаяСтавка = ЛОЖЬ"); 
	ИначеЕсли Параметры.Свойство("ТолькоДробныеСтавки") И Параметры.ТолькоДробныеСтавки Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ФильтрПоРассчетнойСтавке", "СтавкиНДСТипыНалогообложенияНДС.Ссылка.РасчетнаяСтавка = ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ФильтрПоРассчетнойСтавке", "ИСТИНА");
	КонецЕсли; 
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(Параметры.СтрокаПоиска)
			ИЛИ СтрНайти(НРег(Выборка.Представление), НРег(Параметры.СтрокаПоиска)) = 1 Тогда
			ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.Представление);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Получает ставку НДС по типу налогообложения из табличной части справочника СтавкиНДС
// 
// Параметры:
//  ТипНалогообложенияНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Данные для поиска ставки НДС.
//  Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить ставку НДС
//  Дата - Дата - Дата, на которую необходимо получить ставку НДС.
//
// Возвращаемое значение:
//  СправочникСсылка.СтавкиНДС -
//
Функция СтавкаНДСПоТипуНалогообложения(ТипНалогообложенияНДС, Организация, Дата) Экспорт
	
	Возврат УчетНДСУПСлужебныйКлиентСерверПовтИсп.СтавкаНДСПоТипуНалогообложения(ТипНалогообложенияНДС, Организация, Дата);
	
КонецФункции

// Проверяет ставку НДС по типу налогообложения, организации и дате
// 
// Параметры:
//  СтавкаНДС - СправочникСсылка.СтавкиНДС - Проверяемая ставка НДС.
//  ТипНалогообложенияНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Данные для поиска ставки НДС.
//  Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить ставку НДС
//  Дата -  Дата - Дата, на которую необходимо получить ставку НДС.
// 
// Возвращаемое значение:
//  Булево
//
Функция СтавкаНДСКорректна(СтавкаНДС, Знач ТипНалогообложенияНДС, Организация, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтавкиНДСТипыНалогообложенияНДС.Ссылка КАК СтавкаНДС
	|ИЗ
	|	Справочник.СтавкиНДС.ТипыНалогообложенияНДС КАК СтавкиНДСТипыНалогообложенияНДС
	|ГДЕ
	|	СтавкиНДСТипыНалогообложенияНДС.ТипНалогообложенияНДС = &ТипНалогообложенияНДС
	|	И (СтавкиНДСТипыНалогообложенияНДС.Ссылка.Страна = &Страна
	|			ИЛИ СтавкиНДСТипыНалогообложенияНДС.Ссылка.Страна = &ПустаяСтрана)
	|	И (СтавкиНДСТипыНалогообложенияНДС.Ссылка.НачалоПериода <= &Дата
	|			ИЛИ СтавкиНДСТипыНалогообложенияНДС.Ссылка.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (КОНЕЦПЕРИОДА(СтавкиНДСТипыНалогообложенияНДС.Ссылка.КонецПериода, ДЕНЬ) >= &Дата
	|			ИЛИ СтавкиНДСТипыНалогообложенияНДС.Ссылка.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И СтавкиНДСТипыНалогообложенияНДС.Ссылка = &СтавкаНДС";
	
	Запрос.УстановитьПараметр("СтавкаНДС", СтавкаНДС);
	Запрос.УстановитьПараметр("ТипНалогообложенияНДС", ТипНалогообложенияНДС);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Страна", ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(Организация));
	Запрос.УстановитьПараметр("ПустаяСтрана", Справочники.СтраныМира.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

// Возвращает ставку НДС для текущей обрабатываемой строки табличной части в механизмах пакетной обработки строк
// табличных частей. 
//
// Параметры:
//   КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//   
// Возвращаемое значение:
//   СправочникСсылка.СтавкиНДС - Ставка НДС по номенклатуре в текущей строке табличной части.
//
Функция СтавкаНДСНоменклатурыПакетно(КэшированныеЗначения) Экспорт
	
	// см. Учет НДС СтавкаНДСНоменклатуры
	ДанныеДляОбработки = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("СтавкаНДСПоСпискуНоменклатуры", КэшированныеЗначения); 
	Если Не ДанныеДляОбработки = Неопределено 
		И ДанныеДляОбработки.Количество() Тогда
			ДанныеДляОбработки.Сортировать("Приоритет");
			
			РезультатПолученияСтавкиНДС = ДанныеДляОбработки[0];
			Если РезультатПолученияСтавкиНДС <> Неопределено Тогда
				Возврат ДанныеДляОбработки[0].СтавкаНДС;
			Иначе
				Справочники.СтавкиНДС.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
		
	Возврат Справочники.СтавкиНДС.ПустаяСсылка();
	
КонецФункции

// Возвращает ставку НДС операции по номенклатуре и типу налогообложения НДС, используется при обработке строк табличных
// частей.
// 
// Параметры:
//   Номенклатура - СправочникСсылка.Номенклатура, Неопределено - Номенклатура из которой необходимо получить ставку НДС.
//   НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС операции.
//   КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//   
// Возвращаемое значение:
//   СправочникСсылка.СтавкиНДС - Ставка НДС по номенклатуре в текущей строке табличной части и типу налогообложения.
//
Функция СтавкаНДСПоНоменклатуреИНалогообложениюПакетно(Номенклатура, НалогообложениеНДС, КэшированныеЗначения) Экспорт
	
	СтавкаНДС = Неопределено;

	Если ЗначениеЗаполнено(Номенклатура) И НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
		СтавкаНДС = СтавкаНДСНоменклатурыПакетно(КэшированныеЗначения);
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
	Иначе
		СтавкаНДС = СтавкаНДСПоТипуНалогообложенияПакетно(НалогообложениеНДС, КэшированныеЗначения);
	КонецЕсли;
	
	УчетНДСЛокализация.ЗаполнитьСтавкуНДСПоНоменклатуреИНалогообложениюПакетно(Номенклатура, НалогообложениеНДС, СтавкаНДС, КэшированныеЗначения);
	
	Возврат СтавкаНДС;

КонецФункции

// Получает ставку НДС по типу налогообложения из табличной части справочника СтавкиНДС
// 
// Параметры:
//  ТипНалогообложенияНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Данные для поиска ставки НДС.
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//
// Возвращаемое значение:
//  СправочникСсылка.СтавкиНДС - значение ставки НДС.
//
Функция СтавкаНДСПоТипуНалогообложенияПакетно(ТипНалогообложенияНДС, КэшированныеЗначения) Экспорт
	
	Если ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		Возврат Справочники.СтавкиНДС.БезНДС;
	КонецЕсли;
	
	Если ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.РеверсивноеОбложениеНДС Тогда
		Возврат Справочники.СтавкиНДС.БезНДС;
	КонецЕсли;
	
	Если ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
		ОсновныеСтавкиПоДате = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("ОсновныеСтавкиПоДате", КэшированныеЗначения);
		Для Каждого ОсновнаяСтавкаНДС Из ОсновныеСтавкиПоДате Цикл
			Если ЗначениеЗаполнено(ОсновнаяСтавкаНДС.СтавкаНДС) Тогда
				Возврат ОсновнаяСтавкаНДС.СтавкаНДС;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СтавкаНДСПоТипуНалогообложенияНаДату = 
		ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("СтавкаНДСПоТипуНалогообложенияНаДату", КэшированныеЗначения);
	
	Если СтавкаНДСПоТипуНалогообложенияНаДату.Количество() = 1 Тогда
		Возврат СтавкаНДСПоТипуНалогообложенияНаДату[0].СтавкаНДС;
	КонецЕсли;
	
	Возврат Справочники.СтавкиНДС.ПустаяСсылка();
	
КонецФункции

// Возвращает значение ставки НДС по умолчанию.
//
// Параметры:
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//  РасчетнаяСтавка - Булево - указывает необходимость получения расчетной ставки НДС X/(100 + X).
//   НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС, для которого необходимо получить ставку.
//   			Если Неопределено, то ставка получается для налогообложения ПродажаОблгаетсяНДС.
// Возвращаемое значение:
//  СправочникСсылка.СтавкиНДС - значение ставки НДС.
//
Функция СтавкаНДСПоУмолчаниюПакетно(КэшированныеЗначения, Знач РасчетнаяСтавка = Ложь, Знач НалогообложениеНДС = Неопределено) Экспорт
	
	СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
	
	ДатаСтавки = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("", КэшированныеЗначения);
	
	ДанныеДляОбработки = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("ВтДатаПолученияСтавкиНДСПоНоменклатуре", КэшированныеЗначения); 
	Если Не ДанныеДляОбработки = Неопределено 
		И ДанныеДляОбработки.Количество() Тогда
		ДатаИзРезультата 	= ДанныеДляОбработки[0].ДатаПолученияСтавки;
		ДатаСтавки 			= ?(ЗначениеЗаполнено(ДатаИзРезультата), ДатаИзРезультата, ТекущаяДатаСеанса());;
	Иначе
		ДатаСтавки 			= ТекущаяДатаСеанса();
	КонецЕсли;
	
	УчетНДСЛокализация.УстановитьСтавкуНДСПоУмолчанию(СтавкаНДС, ДатаСтавки, РасчетнаяСтавка, НалогообложениеНДС);
	
	Если Не ЗначениеЗаполнено(СтавкаНДС) Тогда
		СтавкаНДС = СтавкаНДСПоТипуНалогообложенияПакетно(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, КэшированныеЗначения);
	КонецЕсли;
	
	Возврат СтавкаНДС;
	
КонецФункции

// Добавляет запрос в пакет запросов для получения данных, необходимых для заполнения поля СтавкаНДС по данным
// номенклатуры при обработке строк табличной части.
//
// Параметры:
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия
//  ОписаниеЗапроса - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОписаниеЗапроса
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ДополнитьТекстЗапросаСтавкаНДСПоСпискуНоменклатуры(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	Перем СтруктураПараметровДействия;
	
	Если ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ЗаполнитьСтавкуНДС,ЗаполнитьСтавкуНДССуффикс",
			СтруктураДействий,
			КэшированныеЗначения,
			СтруктураПараметровДействия) Тогда

		Если СтруктураПараметровДействия.Свойство("ХозяйственнаяОперация") Тогда
			ХозяйственнаяОперация = СтруктураПараметровДействия.ХозяйственнаяОперация;
		Иначе 
			ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
		КонецЕсли;
			
		Если Не ПродажиСервер.ХозяйственнаяОперацияСоСтавкойБезНДС(ХозяйственнаяОперация) Тогда
			
			ИспользоватьДатуОтгрузки = СтруктураПараметровДействия.Свойство("ПоДатеОтгрузки") 
				И СтруктураПараметровДействия.ПоДатеОтгрузки
				И ПакетнаяОбработкаТабличнойЧастиСервер.ЕстьКолонкаВИсточникеДанных("ДатаОтгрузки", КэшированныеЗначения);
					
			ПакетнаяОбработкаТабличнойЧастиСервер.ДополнитьКолонкиИсточникаДанных(
				ОписаниеЗапроса,
				"ДатаПолученияСтавки",
				Новый ОписаниеТипов("Дата", , ,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
			
			// Ставка НДС по номенклатуре
			Дата 			= СтруктураПараметровДействия.Дата;
			ТекстЗапроса 	= 
			"ВЫБРАТЬ
			|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.ДатаПолученияСтавки
			|ПОМЕСТИТЬ ВтДатаПолученияСтавкиНДСПоНоменклатуре
			|ИЗ
			|	ВтИсточникДанных КАК Товары
			|";
			
			Если ИспользоватьДатуОтгрузки Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеДата", "Товары.ДатаОтгрузки");
			Иначе
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеДата", "ЛОЖЬ");
			КонецЕсли;
			
			ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ВтДатаПолученияСтавкиНДСПоНоменклатуре");
			
			ТекстЗапроса 	= "ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
			|	Товары.ДатаПолученияСтавки КАК ДатаПолученияСтавки,
			|	МАКСИМУМ(СтавкиНДСНоменклатуры.Период) КАК Период
			|ПОМЕСТИТЬ ВТДатыСтавкиНДС
			|ИЗ
			|	ВтДатаПолученияСтавкиНДСПоНоменклатуре КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
			|		ПО Товары.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
			|ГДЕ
			|	Товары.ДатаПолученияСтавки >= СтавкиНДСНоменклатуры.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	Товары.Номенклатура,
			|	Товары.ИдентификаторСтрокиВТ,
			|	Товары.ДатаПолученияСтавки
			|";
			
			ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ВТДатыСтавкиНДС");
			
			ТекстЗапроса 	= "ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
			|	Товары.ДатаПолученияСтавки КАК ДатаПолученияСтавки,
			|	МАКСИМУМ(ОсновныеСтавкиНДС.Период) КАК Период
			|ПОМЕСТИТЬ ВТДатыОсновныеСтавкиНДС
			|ИЗ
			|	ВтДатаПолученияСтавкиНДСПоНоменклатуре КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
			|		ПО (ОсновныеСтавкиНДС.Страна = &Страна)
			|ГДЕ
			|	Товары.ДатаПолученияСтавки >= ОсновныеСтавкиНДС.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	Товары.Номенклатура,
			|	Товары.ИдентификаторСтрокиВТ,
			|	Товары.ДатаПолученияСтавки
			|";
			
			ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ВТДатыОсновныеСтавкиНДС");
			
			ТекстЗапроса = "ВЫБРАТЬ
			|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
			|	Товары.Номенклатура КАК Номенклатура,
			|	1 КАК Приоритет,
			|	СтавкиНДСНоменклатуры.СтавкаНДС КАК СтавкаНДС
			|ИЗ
			|	ВТДатыСтавкиНДС КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
			|		ПО (СтавкиНДСНоменклатуры.Номенклатура = Товары.Номенклатура)
			|			И (СтавкиНДСНоменклатуры.Период = Товары.Период)
			|			И (СтавкиНДСНоменклатуры.Страна = &Страна)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
			|		ПО (СтавкиНДСНоменклатуры.СтавкаНДС = СтавкиНДС.Ссылка)
			|ГДЕ
			|	(СтавкиНДС.НачалоПериода <= Товары.ДатаПолученияСтавки
			|			ИЛИ СтавкиНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
			|	И (СтавкиНДС.КонецПериода >= Товары.ДатаПолученияСтавки
			|			ИЛИ СтавкиНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Товары.ИдентификаторСтрокиВТ,
			|	Товары.Номенклатура,
			|	2,
			|	СтавкиНДСНоменклатуры.СтавкаНДС
			|ИЗ
			|	ВТДатыСтавкиНДС КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
			|		ПО (СтавкиНДСНоменклатуры.Номенклатура = Товары.Номенклатура)
			|			И (СтавкиНДСНоменклатуры.Период = Товары.Период)
			|			И (СтавкиНДСНоменклатуры.Страна = &ПустаяСтрана)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
			|		ПО (СтавкиНДСНоменклатуры.СтавкаНДС = СтавкиНДС.Ссылка)
			|ГДЕ
			|	(СтавкиНДС.НачалоПериода <= Товары.ДатаПолученияСтавки
			|			ИЛИ СтавкиНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
			|	И (СтавкиНДС.КонецПериода >= Товары.ДатаПолученияСтавки
			|			ИЛИ СтавкиНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Товары.ИдентификаторСтрокиВТ,
			|	Товары.Номенклатура,
			|	3,
			|	ОсновныеСтавкиНДС.СтавкаНДС
			|ИЗ
			|	ВТДатыОсновныеСтавкиНДС КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
			|		ПО (ОсновныеСтавкиНДС.Период = Товары.Период)
			|			И (ОсновныеСтавкиНДС.Страна = &Страна)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
			|		ПО (ОсновныеСтавкиНДС.СтавкаНДС = СтавкиНДС.Ссылка)
			|ГДЕ
			|	(СтавкиНДС.НачалоПериода <= Товары.ДатаПолученияСтавки
			|			ИЛИ СтавкиНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
			|	И (СтавкиНДС.КонецПериода >= Товары.ДатаПолученияСтавки
			|			ИЛИ СтавкиНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Товары.ИдентификаторСтрокиВТ,
			|	Товары.Номенклатура,
			|	4,
			|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
			|ИЗ
			|	ВтИсточникДанных КАК Товары
			|
			|";			
			
			ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "СтавкаНДСПоСпискуНоменклатуры");
			ОписаниеЗапроса.ПараметрыЗапроса.Вставить("Дата", 						?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
			ОписаниеЗапроса.ПараметрыЗапроса.Вставить("Страна",						ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(
																						СтруктураПараметровДействия.Организация));
			ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ПустаяСтрана", 				Справочники.СтраныМира.ПустаяСсылка());
			ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ПустаяСтавкаНДС", 			Справочники.СтавкиНДС.ПустаяСсылка());
			ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ИспользоватьДатуОтгрузки", 	ИспользоватьДатуОтгрузки);
			ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ТекущаяДатаСеанса", 			ТекущаяДатаСеанса());
			
			УчетНДСЛокализация.ДополнитьТекстЗапросаСтавкаНДСПоСпискуНоменклатуры(СтруктураДействий, ОписаниеЗапроса);
			
			// Ставка НДС по типу налогообложения
			ТипНалогообложенияНДС = СтруктураПараметровДействия.НалогообложениеНДС;
			
			Если НЕ (ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
				ИЛИ ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.РеверсивноеОбложениеНДС) Тогда
				
				ТекстЗапроса = "
				|////////////////////////////////////////////////////////////////////////////////
				|//Получение основной ставки НДС по дате на каждую строку
				|ВЫБРАТЬ
				|	Товары.ИдентификаторСтрокиВТ,
				|	ОсновныеСтавкиНДС.СтавкаНДС
				|ИЗ
				|	ВТДатыОсновныеСтавкиНДС КАК Товары
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
				|		ПО (ОсновныеСтавкиНДС.Период = Товары.Период)
				|			И (ОсновныеСтавкиНДС.Страна = &Страна)
				|";
				
				ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ОсновныеСтавкиПоДате");
				
				ТекстЗапроса = "//получение ставки НДС по типу налогообложения на дату
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Товары.ИдентификаторСтрокиВТ,
				|	Товары.ДатаПолученияСтавки,
				|	ЕСТЬNULL(СтавкиНДСТипыНалогообложенияНДС.Ссылка, &ПустаяСтавкаНДС) КАК СтавкаНДС
				|ИЗ
				|	ВтДатаПолученияСтавкиНДСПоНоменклатуре КАК Товары
				|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
				|		ПО (СтавкиНДС.НачалоПериода <= Товары.ДатаПолученияСтавки
				|				ИЛИ СтавкиНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
				|			И (КОНЕЦПЕРИОДА(СтавкиНДС.КонецПериода, ДЕНЬ) >= Товары.ДатаПолученияСтавки
				|				ИЛИ СтавкиНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
				|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС.ТипыНалогообложенияНДС КАК СтавкиНДСТипыНалогообложенияНДС	
				|		ПО СтавкиНДСТипыНалогообложенияНДС.Ссылка = СтавкиНДС.Ссылка
				|ГДЕ
				|	СтавкиНДСТипыНалогообложенияНДС.ТипНалогообложенияНДС = &ТипНалогообложенияНДС
				|	И СтавкиНДС.Страна = &Страна
				|	И (СтавкиНДС.НачалоПериода <= Товары.ДатаПолученияСтавки
				|			ИЛИ СтавкиНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
				|	И (КОНЕЦПЕРИОДА(СтавкиНДС.КонецПериода, ДЕНЬ) >= Товары.ДатаПолученияСтавки
				|			ИЛИ СтавкиНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Товары.ИдентификаторСтрокиВТ,
				|	Товары.ДатаПолученияСтавки,
				|	ЕСТЬNULL(СтавкиНДСТипыНалогообложенияНДС.Ссылка, &ПустаяСтавкаНДС) КАК СтавкаНДС
				|ИЗ
				|	ВтДатаПолученияСтавкиНДСПоНоменклатуре КАК Товары
				|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
				|		ПО (СтавкиНДС.НачалоПериода <= Товары.ДатаПолученияСтавки
				|				ИЛИ СтавкиНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
				|			И (КОНЕЦПЕРИОДА(СтавкиНДС.КонецПериода, ДЕНЬ) >= Товары.ДатаПолученияСтавки
				|				ИЛИ СтавкиНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
				|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС.ТипыНалогообложенияНДС КАК СтавкиНДСТипыНалогообложенияНДС	
				|		ПО СтавкиНДСТипыНалогообложенияНДС.Ссылка = СтавкиНДС.Ссылка
				|ГДЕ
				|	СтавкиНДСТипыНалогообложенияНДС.ТипНалогообложенияНДС = &ТипНалогообложенияНДС
				|	И СтавкиНДС.Страна = &ПустаяСтрана
				|	И (СтавкиНДС.НачалоПериода <= Товары.ДатаПолученияСтавки
				|			ИЛИ СтавкиНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
				|	И (КОНЕЦПЕРИОДА(СтавкиНДС.КонецПериода, ДЕНЬ) >= Товары.ДатаПолученияСтавки
				|			ИЛИ СтавкиНДС.КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
				|";
				
				ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "СтавкаНДСПоТипуНалогообложенияНаДату");
				ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ТипНалогообложенияНДС", ТипНалогообложенияНДС);
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

// Добавляет запрос в пакет запросов для получения данных, необходимых для  расчета суммы с НДС при пакетной обработке 
// строк табличной части.
//
// Параметры:
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия
//  ОписаниеЗапроса - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОписаниеЗапроса
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ДополнитьТекстЗапросаСтавкаПоСтавкеНДС(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	Если ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ПересчитатьСуммуНДС",
			СтруктураДействий,
			КэшированныеЗначения) Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	ЕСТЬNULL(СтавкиНДС.Ставка, 0) КАК Ставка
		|ИЗ
		|	ВтИсточникДанных КАК Товары
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
		|	ПО Товары.СтавкаНДС = СтавкиНДС.Ссылка
		|";
		
		ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "СтавкаПоСтавкеНДС");
			
	КонецЕсли;
	
КонецПроцедуры

// Добавляет запрос в пакет запросов для получения данных, необходимых для  расчета суммы с НДС при пакетной обработке 
// строк табличной части.
//
// Параметры:
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия
//  ОписаниеЗапроса - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОписаниеЗапроса
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ДополнитьТекстЗапросаСтавкаПоСтавкеНДССуффикс(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	Перем СтруктураПараметровДействия;

	Если ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ПересчитатьСуммуНДССуффикс",
			СтруктураДействий,
			КэшированныеЗначения,
			СтруктураПараметровДействия) Тогда
				
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИсточникДанных.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	ЕСТЬNULL(СтавкиНДС.Ставка, 0) КАК Ставка
		|ИЗ
		|	ВтИсточникДанных КАК ИсточникДанных
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
		|	ПО ИсточникДанных.СтавкаНДС = СтавкиНДС.Ссылка
		|";
		
		Суффикс = "";
		
		Если СтруктураПараметровДействия.Свойство("Суффикс", Суффикс)
			И Не ЗначениеЗаполнено(Суффикс) Тогда
			Суффикс = "";
		КонецЕсли;
		
		СтавкаССуффиксом = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.СтавкаССуффиксом(Суффикс);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИсточникДанных.СтавкаНДС", "ИсточникДанных." + СтавкаССуффиксом.СтавкаНДС);
		
		ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "СтавкаПоСтавкеНДССуффикс");
			
	КонецЕсли;
	
КонецПроцедуры

// Заполняет колонку ДатаПолученияСтавки в промежуточной таблице, сформированной на основе обрабатываемых строк табличной
// части в механизмах пакетной обработки строк табличных частей. 
//
// Параметры:
//  ОбрабатываемаяКоллекция - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.КоллекцияСтрок
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ЗаполнитьКолонкуДатаПолученияСтавки(ОбрабатываемаяКоллекция, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем СтруктураПараметровДействия;
	
	Если ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ЗаполнитьСтавкуНДС,ЗаполнитьСтавкуНДССуффикс",
			СтруктураДействий,
			КэшированныеЗначения,
			СтруктураПараметровДействия) Тогда
		
		Дата = СтруктураПараметровДействия.Дата;
		ИспользоватьДатуОтгрузки = СтруктураПараметровДействия.Свойство("ПоДатеОтгрузки") 
			И СтруктураПараметровДействия.ПоДатеОтгрузки
			И ПакетнаяОбработкаТабличнойЧастиСервер.ЕстьКолонкаВИсточникеДанных("ДатаОтгрузки", КэшированныеЗначения);
			
		Для Каждого СтрокаКоллекции Из ОбрабатываемаяКоллекция Цикл
			СтрокаКоллекции.ДатаПолученияСтавки = ?(ИспользоватьДатуОтгрузки И ЗначениеЗаполнено(СтрокаКоллекции.ДатаОтгрузки), СтрокаКоллекции.ДатаОтгрузки, Дата);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Установить видимость команды заполнить ставку НДС
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - Форма с командой заполнения ставки НДС.
//  ИмяЭлемента	 - Строка - Имя команды формы. По-умолчанию "ТоварыЗаполнитьСтавкуНДС".
//
Процедура УстановитьВидимостьКомандыЗаполнитьСтавкуНДС(Форма, ИмяЭлемента = "ТоварыЗаполнитьСтавкуНДС") Экспорт

	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		ИмяЭлемента,
		"Видимость",
		ЗначениеЗаполнено(Форма.Объект.НалогообложениеНДС)
			И Форма.Объект.НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);

КонецПроцедуры

#КонецОбласти

#Область УчетВходящегоНДС

#Область ЗаполнениеНалогообложенияНДСЗакупки

// Проверяет соответствие указанного в документе закупки Налогообложения НДС операции документа. 
// Если переданное значение не заполнено или некорректное, 
// то оно заполняется значением из договора закупки или значением по умолчанию.
//
// Параметры:
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложения НДС документа закупки.
// 	ПараметрыЗаполнения - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки.
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьНалогообложениеНДСЗакупки(НалогообложениеНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	КэшированныеЗначенияПараметровНеЗаполнены = (КэшированныеЗначенияПараметров = Неопределено);
	
	ИзмененныеПараметры = УчетНДСУПСлужебный.ИзмененныеПараметры("ПараметрыЗаполненияНалогообложенияНДСЗакупки", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияНалогообложенияНДСЗакупки", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);

	ТолькоЕслиПустоеИлиНекорректное = Истина;
	Если ИзмененныеПараметры.Свойство("Договор")
		Или (КэшированныеЗначенияПараметровНеЗаполнены И ЗначениеЗаполнено(ПараметрыЗаполнения.Договор)) Тогда
		ТолькоЕслиПустоеИлиНекорректное = Ложь;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриемНаХранение Тогда
		НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
		Возврат;
	КонецЕсли;
	
	МассивДоступных = УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСЗакупки(ПараметрыЗаполнения);
	
	Если ТолькоЕслиПустоеИлиНекорректное Тогда
		Если ЗначениеЗаполнено(НалогообложениеНДС) 
		     И МассивДоступных.Найти(НалогообложениеНДС) <> Неопределено Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Договор) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор
		|	И НЕ ДоговорыКонтрагентов.НалогообложениеНДСОпределяетсяВДокументе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорыМеждуОрганизациями.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	ДоговорыМеждуОрганизациями.Ссылка = &Договор
		|	И НЕ ДоговорыМеждуОрганизациями.НалогообложениеНДСОпределяетсяВДокументе
		|";
		Запрос.УстановитьПараметр("Договор", ПараметрыЗаполнения.Договор);
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Если Выборка.Следующий() Тогда
			НалогообложениеНДС = Выборка.НалогообложениеНДС;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НалогообложениеНДС) ИЛИ МассивДоступных.Найти(НалогообложениеНДС) = Неопределено Тогда
		Если МассивДоступных.Количество() = 1 Тогда
			НалогообложениеНДС = МассивДоступных[0];
		Иначе
			ИспользоватьУчетНДС = ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС");
			НалогообложениеНДС = ?(ИспользоватьУчетНДС, 
				                    Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС,
				                    Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список доступных для выбора значений налогообложения НДС исходя из операции документа.
// 
// Параметры:
// 	ЭлементНалогообложениеНДС - ПолеФормы - Элемент формы, в котором указывается налогообложение НДС.
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Выбранное в документе значение налогообложения НДС.
// 	ПараметрыЗаполнения - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки.
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьСписокВыбораНалогообложенияНДСЗакупки(ЭлементНалогообложениеНДС, НалогообложениеНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения.ВозвратТоваровКомитенту
		 ИЛИ ПараметрыЗаполнения.ПриемНаКомиссию Тогда
		ЭлементНалогообложениеНДС.Заголовок = НСтр("ru = 'Налогообложение комитента'");
	Иначе
		ЭлементНалогообложениеНДС.Заголовок = НСтр("ru = 'Налогообложение'");
	КонецЕсли;
	
	ПрименяемыеТипыНалогообложенияЗакупки = УчетНДСУПСлужебный.ПрименяемыеТипыНалогообложенияНДС(Ложь, Истина);
	// Переопределим представление по операции документа
	Для каждого Элемент Из ПрименяемыеТипыНалогообложенияЗакупки Цикл
		Если Элемент.Значение = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
			Если ПараметрыЗаполнения.ВозвратТоваровКомитенту ИЛИ ПараметрыЗаполнения.ПриемНаКомиссию Тогда
				Элемент.Представление = НСтр("ru = 'Продажа облагается НДС'");
			ИначеЕсли ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
				Элемент.Представление = НСтр("ru = 'Возврат товаров облагается НДС'");
			КонецЕсли;
		ИначеЕсли Элемент.Значение = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			Если ПараметрыЗаполнения.ВозвратТоваровКомитенту ИЛИ ПараметрыЗаполнения.ПриемНаКомиссию Тогда
				Элемент.Представление = НСтр("ru = 'Продажа не облагается НДС'");
			ИначеЕсли ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
				Элемент.Представление = НСтр("ru = 'Возврат товаров не облагается НДС'");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ДоступныеТипыНалогообложенияЗакупки = УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСЗакупки(ПараметрыЗаполнения);
	Если ЗначениеЗаполнено(НалогообложениеНДС) И ДоступныеТипыНалогообложенияЗакупки.Найти(НалогообложениеНДС) = Неопределено Тогда
		ДоступныеТипыНалогообложенияЗакупки.Добавить(НалогообложениеНДС);
	КонецЕсли;
	ЭлементНалогообложениеНДС.СписокВыбора.Очистить();
	
	Для каждого Значение Из ДоступныеТипыНалогообложенияЗакупки Цикл
		ЭлементСписка = ПрименяемыеТипыНалогообложенияЗакупки.НайтиПоЗначению(Значение);
		Если ЭлементСписка <> Неопределено Тогда
			ЭлементНалогообложениеНДС.СписокВыбора.Добавить(Значение, ЭлементСписка.Представление);
		Иначе
			ЭлементНалогообложениеНДС.СписокВыбора.Добавить(Значение);
		КонецЕсли;
	КонецЦикла;
	
	ЭлементНалогообложениеНДС.Видимость = (ЭлементНалогообложениеНДС.СписокВыбора.Количество() <> 1); 
	
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияНалогообложенияНДСЗакупки", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	
КонецПроцедуры

// Проверяет возможность проведения документа с указанным налогообложением НДС. 
//
// Параметры:
//	Объект - ДокументОбъект - Данные документа закупки.
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложения НДС документа закупки.
// 	ПараметрыПроверки - Произвольный.
// 	Отказ - Булево - Признак отказа проведения документа.
//
Процедура ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС(Объект, НалогообложениеНДС, ПараметрыПроверки, Отказ) Экспорт
	
	УчетНДСЛокализация.ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС(Объект, НалогообложениеНДС, ПараметрыПроверки, Отказ);
	
КонецПроцедуры

// Возвращает структуру параметров для проверки заполнения документа закупки по налогообложению НДС.
//
// Возвращаемое значение:
//	Структура - Структура с полями:
//	         * ИмяТабличнойЧасти - Строка - Имя табличной части закупаемых ценностей.
//	         * ИмяРеквизитаСтатьяРасходов - Строка - Имя реквизита табличной части, в которой указывается статья отражения расходов.
//	         * ИмяРеквизитаАналитикаРасходов - Строка - Имя реквизита табличной части, в которой указывается аналитика отражения расходов.
//
Функция ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки() Экспорт
	
	ПараметрыПроверки = Новый Структура();
	ПараметрыПроверки.Вставить("ИмяТабличнойЧасти",             "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаСтатьяРасходов",    "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаАналитикаРасходов", "");
	
	Возврат ПараметрыПроверки;
	
КонецФункции

// Устанавливаем условное оформление для ставки НДС, суммы НДС, суммы с НДС по налогообложению закупки.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Содержит данную форму.
//  ИмяПоляВводаСтавкиНДС - Строка - Наименование элемента формы, содержащего ставку НДС,
//                                   если оно отличается от "ТоварыСтавкаНДС".
//  ИмяПоляВводаСуммыНДС - Строка - Наименование элемента формы, содержащего сумму НДС,
//                                  если оно отличается от "ТоварыСуммаНДС".
//  ИмяПоляВводаСуммыСНДС - Строка - Наименование элемента формы, содержащего сумму с НДС,
//                                   если оно отличается от "ТоварыСуммаСНДС".
//
Процедура УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки(Форма,
	                                          ИмяПоляВводаСтавкиНДС = "ТоварыСтавкаНДС",
	                                          ИмяПоляВводаСуммыНДС  = "ТоварыСуммаНДС",
	                                          ИмяПоляВводаСуммыСНДС = "ТоварыСуммаСНДС") Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	//
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();

	ЭлементФормы = ЭлементыФормы[ИмяПоляВводаСтавкиНДС]; // ПолеФормы, ГруппаФормы -
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементФормы.Имя);

	ЭлементФормы = ЭлементыФормы[ИмяПоляВводаСуммыНДС]; // ПолеФормы, ГруппаФормы -
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементФормы.Имя);

	ЭлементФормы = ЭлементыФормы[ИмяПоляВводаСуммыСНДС]; // ПолеФормы, ГруппаФормы -
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементФормы.Имя);
	
	СписокНалогообложений = Новый СписокЗначений();
	СписокНалогообложений.ЗагрузитьЗначения(УчетНДСУПКлиентСервер.ТипыНалогообложенияСкрывающиеРеквизитыНДС());
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокНалогообложений;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПутьКДаннымСтавкаНДС = ЭлементыФормы[ИмяПоляВводаСтавкиНДС].ПутьКДанным;
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыНДС].Имя);
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКДаннымСтавкаНДС);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ПравоеЗначение =  УчетНДСУПСлужебныйКлиентСерверПовтИсп.СписокНезначащихСтавок();
	ПравоеЗначение.Добавить(Справочники.СтавкиНДС.ПустаяСсылка());
	ОтборЭлемента.ПравоеЗначение = ПравоеЗначение;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	УчетНДСЛокализация.ДополнитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки(
		Форма, ИмяПоляВводаСтавкиНДС, ИмяПоляВводаСуммыНДС, ИмяПоляВводаСуммыСНДС);

КонецПроцедуры

// Устанавливаем условное оформление для суммы НДС, суммы с НДС по ставке НДС закупки.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Содержит данную форму
//  ИмяПоляВводаСтавкиНДС - Строка - Наименование элемента формы, содержащего ставку НДС,
//                                  если оно отличается от "ТоварыСтавкаНДС".
//  ИмяПоляВводаСуммыНДС - Строка - Наименование элемента формы, содержащего сумму НДС,
//                                  если оно отличается от "ТоварыСуммаНДС".
//
Процедура УстановитьУсловноеОформлениеСуммНДСПоСтавкеНДСЗакупки(Форма,
	                                          ИмяПоляВводаСтавкиНДС = "ТоварыСтавкаНДС",
	                                          ИмяПоляВводаСуммыНДС  = "ТоварыСуммаНДС") Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПутьКДаннымСтавкаНДС = ЭлементыФормы[ИмяПоляВводаСтавкиНДС].ПутьКДанным;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяПоляВводаСуммыНДС);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКДаннымСтавкаНДС);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ПравоеЗначение = УчетНДСУПСлужебныйКлиентСерверПовтИсп.СписокНезначащихСтавок();
	ПравоеЗначение.Добавить(Справочники.СтавкиНДС.ПустаяСсылка());
	ОтборЭлемента.ПравоеЗначение = ПравоеЗначение;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеВидаДеятельностиНДС

// Заполняет вид деятельности раздельного учета НДС по переданным параметрам заполнения.
// Параметры:
// 	ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Реквизит документа приобретения.
// 	ПараметрыЗаполнения - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьВидДеятельностиНДС(ВидДеятельностиНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения.Организация = Справочники.Организации.ПустаяСсылка() Тогда
		// Организация для объекта задается, но не указана.
		// В этом случае нет смысла заполнять/проверять вид деятельности НДС, 
		// т.к. нет возможности получить учетную политику.
		Возврат;
	КонецЕсли;
	
	ИзмененныеПараметры = УчетНДСУПСлужебный.ИзмененныеПараметры("ПараметрыЗаполненияВидаДеятельностиНДС", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияВидаДеятельностиНДС", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	
	ТолькоЕслиПустоеИлиНекорректное = Истина;
	Если ИзмененныеПараметры.Свойство("Договор")
		ИЛИ ИзмененныеПараметры.Свойство("НаправлениеДеятельности")
		ИЛИ ИзмененныеПараметры.Свойство("Организация")
		ИЛИ ИзмененныеПараметры.Свойство("Склад") Тогда
		ТолькоЕслиПустоеИлиНекорректное = Ложь;
	КонецЕсли;

	МассивДоступных = УчетНДСУПСлужебный.ДоступныеВидыДеятельностиНДС(ПараметрыЗаполнения);
	
	Если ТолькоЕслиПустоеИлиНекорректное Тогда
		Если МассивДоступных.Найти(ВидДеятельностиНДС) <> Неопределено Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НовыйВидДеятельностиНДС = ВидДеятельностиНДС;
	
	ЗаполненоПоДоговоруИлиНапралениюДеятельности = Ложь;
	Если (ИзмененныеПараметры.Свойство("Договор")
			И ЗначениеЗаполнено(ПараметрыЗаполнения.Договор))
		ИЛИ (ИзмененныеПараметры.Свойство("НаправлениеДеятельности")
			И ЗначениеЗаполнено(ПараметрыЗаполнения.НаправлениеДеятельности))
		ИЛИ (ИзмененныеПараметры.Свойство("Склад")
			И ЗначениеЗаполнено(ПараметрыЗаполнения.Склад)) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Приоритет,
		|	ДоговорыКонтрагентов.ЗакупкаПодДеятельность КАК ВидДеятельностиНДС
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор
		|	И НЕ ДоговорыКонтрагентов.ЗакупкаПодДеятельностьОпределяетсяВДокументе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1 КАК Приоритет,
		|	ДоговорыМеждуОрганизациями.ЗакупкаПодДеятельность КАК ВидДеятельностиНДС
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	ДоговорыМеждуОрганизациями.Ссылка = &Договор
		|	И НЕ ДоговорыМеждуОрганизациями.ЗакупкаПодДеятельностьОпределяетсяВДокументе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2 КАК Приоритет,
		|	НаправленияДеятельности.НалогообложениеНДС КАК ВидДеятельностиНДС
		|ИЗ
		|	Справочник.НаправленияДеятельности КАК НаправленияДеятельности
		|ГДЕ
		|	НаправленияДеятельности.Ссылка = &НаправлениеДеятельности
		|	И НЕ НаправленияДеятельности.НалогообложениеНДСОпределяетсяВДокументе
		|	И (НаправленияДеятельности.УчетДоходов
		|		ИЛИ НаправленияДеятельности.УчетЗатрат)
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
		Запрос.УстановитьПараметр("Договор", ПараметрыЗаполнения.Договор);
		Запрос.УстановитьПараметр("НаправлениеДеятельности", ПараметрыЗаполнения.НаправлениеДеятельности);
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Если Выборка.Следующий() Тогда
			НовыйВидДеятельностиНДС = Выборка.ВидДеятельностиНДС;
			ЗаполненоПоДоговоруИлиНапралениюДеятельности = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если МассивДоступных.Найти(НовыйВидДеятельностиНДС) = Неопределено Тогда
		НовыйВидДеятельностиНДС = Неопределено;
	КонецЕсли;
	
	Если МассивДоступных.Найти(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка()) <> Неопределено Тогда
		НовыйВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
	КонецЕсли;
	
	Если (Не ЗаполненоПоДоговоруИлиНапралениюДеятельности
			И (ИзмененныеПараметры.Свойство("Организация") И ЗначениеЗаполнено(ПараметрыЗаполнения.Организация))
				ИЛИ (ИзмененныеПараметры.Свойство("Склад") И ЗначениеЗаполнено(ПараметрыЗаполнения.Склад) И Не ЗаполненоПоДоговоруИлиНапралениюДеятельности))
			ИЛИ НовыйВидДеятельностиНДС = Неопределено Тогда
		УчетНДСЛокализация.ЗаполнитьВидДеятельностиНДСПоПараметрам(НовыйВидДеятельностиНДС, ВидДеятельностиНДС, ПараметрыЗаполнения);
	КонецЕсли;
	
	Если НовыйВидДеятельностиНДС = Неопределено Тогда
		ПараметрыУчетаПоОрганизации = ПараметрыУчетаПоОрганизации(
				ПараметрыЗаполнения.Организация,
				ПараметрыЗаполнения.Дата,
				ПараметрыЗаполнения.Склад);
		НовыйВидДеятельностиНДС = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
	КонецЕсли;
	
	ВидДеятельностиНДС = НовыйВидДеятельностиНДС;
	
КонецПроцедуры

// Заполняет список доступных для выбора видов деятельности раздельного учета НДС исходя учетной политики и операций документа.
//
// Параметры:
// 	ЭлементВидДеятельностиНДС - ПолеФормы - Элемент формы, в котором указывается вид деятельности НДС.
// 	ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Выбранное в документе значение вида деятельности раздельного учета НДС.
// 	ПараметрыЗаполнения - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС.
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьСписокВыбораВидаДеятельностиНДС(ЭлементВидДеятельностиНДС, ВидДеятельностиНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	Представления = УчетНДСУПСлужебный.ПрименяемыеВидыДеятельностиНДС();
	МассивДоступных = УчетНДСУПСлужебный.ДоступныеВидыДеятельностиНДС(ПараметрыЗаполнения);
	
	Если ЗначениеЗаполнено(ВидДеятельностиНДС) И МассивДоступных.Найти(ВидДеятельностиНДС) = Неопределено Тогда
		МассивДоступных.Добавить(ВидДеятельностиНДС);
	КонецЕсли;
	
	ЭлементВидДеятельностиНДС.СписокВыбора.Очистить();
	Для каждого Значение Из МассивДоступных Цикл
		ЭлементПредставления = Представления.НайтиПоЗначению(Значение);
		Если ЭлементПредставления <> Неопределено Тогда 
			ЭлементВидДеятельностиНДС.СписокВыбора.Добавить(Значение, ЭлементПредставления.Представление);
		Иначе
			ЭлементВидДеятельностиНДС.СписокВыбора.Добавить(Значение);
		КонецЕсли;
	КонецЦикла;
	ЭлементВидДеятельностиНДС.Видимость = (ЭлементВидДеятельностиНДС.СписокВыбора.Количество() > 1);
	
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияВидаДеятельностиНДС", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	
КонецПроцедуры

// Проверяет возможность проведения документа с указанным видом деятельности раздельного учета НДС.
//
// Параметры:
// 	Объект - ДокументОбъект - Данные документа.
// 	ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС.
// 	ПараметрыПроверки - Произвольный
// 	Отказ - Булево - Признак отказа проведения документа.
//
Процедура ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(Объект, ВидДеятельностиНДС, ПараметрыПроверки, Отказ) Экспорт
	
 	УчетНДСЛокализация.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(Объект, ВидДеятельностиНДС, ПараметрыПроверки, Отказ)
	
КонецПроцедуры

// Возвращает структуру параметров для проверки заполнения документа по виду деятельности раздельного учета НДС.
//
// Возвращаемое значение:
// Структура - Структура с ключами:
// 			* ИмяТабличнойЧасти - Строка - Имя табличной части, в которой указываются ценности.
// 			* ИмяРеквизитаСтатьяРасходов - Строка - Имя реквизита табличной части, в которой указывается статья отражения расходов (необязательный).
// 			* ИмяРеквизитаАналитикаРасходов - Строка - Имя реквизита табличной части, в которой указывается аналитика отражения расходов (необязательный).
// 			* ИмяРеквизитаСтатьяАктивовПассивов - Строка - Имя реквизита табличной части, в которой указывается статья отражения прочих активов (необязательный).
// 			* ИмяРеквизитаАналитикаАктивовПассивов - Строка - Имя реквизита табличной части, в которой указывается аналитика отражения прочих активов (необязательный).
//
Функция ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС() Экспорт

	ПараметрыПроверки = Новый Структура();
	ПараметрыПроверки.Вставить("ИмяТабличнойЧасти", "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаСтатьяРасходов", "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаАналитикаРасходов", "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаСтатьяАктивовПассивов", "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаАналитикаАктивовПассивов", "");
	
	Возврат ПараметрыПроверки;
	
КонецФункции

#КонецОбласти

#Область РегистрацияСчетовФактурПолученных

// Возвращает коллекцию свойств, описывающих счета-фактуры/заявления о ввозе товаров, зарегистрированные на основании документа закупки или возврата
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных
// 
// Возвращаемое значение:
// 	Структура - Структура с ключами:
//		* Представление - Строка, ФорматированнаяСтрока - описание документов, зарегистрированных на основании документа закупки или возврата.
//		* СчетаФактуры - Массив из ДокументСсылка - ДокументСсылка.СчетФактураПолученный, ДокументСсылка.СчетФактураПолученныйНалоговыйАгент, ДокументСсылка.ЗаявлениеОВвозеТоваров - ссылки на счет-фактуру/заявление о ввозе товаров.
//		* ДокументПоОснованиюТребуется - Булево - признак необходимости ввода хотя бы одного документа по основанию
//		* ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию - Булево - признак наличия права для интерактивного добавления документа по основанию.
//		* ЕстьРасхождения - Булево
//
Функция СчетаФактурыПолученныеНаОсновании(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", "");
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	Результат.Вставить("ДокументПоОснованиюТребуется",  Ложь);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию",  Ложь);
	Результат.Вставить("ЕстьРасхождения", Ложь);
	
	//++ Локализация
	Результат = УчетНДСРФ.СчетаФактурыПолученныеНаОсновании(ПараметрыРегистрации);
	//-- Локализация
	
	Возврат Результат;

КонецФункции

// Вызывается в обработчике ПередЗаписью() документа закупки.
// Отменяет проведение счета-фактуры, если отменяется проведение документа закупки или его реквизиты не соответствуют параметрам регистрации.
// Помечает на удаление счета-фактуры, если помечается на удаление документ закупки.
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных.
// 	РежимЗаписи - РежимЗаписиДокумента - Режим записи документа.
// 	ПометкаУдаления - Булево - Пометка удаления документа закупки.
// 	Проведен - Булево - Пометка проведения документа.
//
Процедура АктуализироватьСчетаФактурыПолученныеПередЗаписью(ПараметрыРегистрации, Знач РежимЗаписи, Знач ПометкаУдаления, Знач Проведен) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыПолученныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаПроведения() документа закупки.
// Выполняет проведение счетов-фактур по данным документа закупки.
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных.
// 	
Процедура АктуализироватьСчетаФактурыПолученныеПриПроведении(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыПолученныеПриПроведении(ПараметрыРегистрации);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаУдаленияПроведения() документа закупки после записи движений.
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных.
//
Процедура АктуализироватьСчетаФактурыПолученныеПриУдаленииПроведения(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыПолученныеПриУдаленииПроведения(ПараметрыРегистрации);
	//-- Локализация
	
КонецПроцедуры

// Возвращает счета-фактуры полученные, зарегистрированные на основании документов.
//
// Параметры:
// 	ДокументыОснования - ДокументСсылка, Массив  из ДокументСсылка - Документ или массив документов-оснований счетов-фактур полученных.
// 	ТолькоПроведенные - Булево - Признак того, что нужно вернуть только проведенные документы.
//
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблица счетов-фактур, зарегистрированных на основании:
// 	   * ДокументОснование - ДокументСсылка - Ссылка на документ-основание, у которого есть счет-фактура.
// 	   * Ссылка - ДокументСсылка - Ссылка на счет-фактуру полученный.
// 	   * РучнаяКорректировкаСуммДокумента - Булево - Истина, если суммы счета-фактуры были изменены вручную пользователем.
//
Функция СчетаФактурыПолученныеПоДокументамОснованиям(ДокументыОснования, ТолькоПроведенные = Истина) Экспорт
	
	СчетаФактуры = Новый ТаблицаЗначений();
	СчетаФактуры.Колонки.Добавить("ДокументОснование");
	СчетаФактуры.Колонки.Добавить("Ссылка");
	СчетаФактуры.Колонки.Добавить("РучнаяКорректировкаСуммДокумента", Новый ОписаниеТипов("Булево"));
	
	//++ Локализация
	СчетаФактуры = УчетНДСРФ.СчетаФактурыПолученныеПоДокументамОснованиям(ДокументыОснования, ТолькоПроведенные);
	//-- Локализация
		
	Возврат СчетаФактуры;

КонецФункции

#КонецОбласти

// Описание
// 
// Параметры:
// 	СтароеНалогообложение - ПеречислениеСсылка.ТипыНалогообложенияНДС -
// 	НовоеНалогообложение - ПеречислениеСсылка.ТипыНалогообложенияНДС - 
// Возвращаемое значение:
// 	Булево - Описание
Функция ВозможноСписаниеНДС(СтароеНалогообложение, НовоеНалогообложение) Экспорт
	
	ВидыДеятельностиНДСВСтоимости = ВидыДеятельностиНДСУчитываетсяВСтоимости();
	ВидыДеятельностиНДСКВозмещению = ВидыДеятельностиНДСПринимаетсяКВозмещению();
	
	Возврат (ВидыДеятельностиНДСКВозмещению.Найти(СтароеНалогообложение) <> Неопределено
					И ВидыДеятельностиНДСВСтоимости.Найти(НовоеНалогообложение) <> Неопределено);
	
КонецФункции

#КонецОбласти

#Область УчетИсходящегоНДС

#Область ЗаполнениеНалогообложенияНДСПродажи

// Проверяет соответствие указанного в документе продажи Налогообложения НДС настройкам учета НДС и операции документа. 
// Если переданное значение не заполнено или некорректное, то оно заполняется значением из НСИ.
//
// Параметры:
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложения НДС документа продажи.
// 	ПараметрыЗаполнения - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьНалогообложениеНДСПродажи(НалогообложениеНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения.Организация = Справочники.Организации.ПустаяСсылка() Тогда
		// Организация для объекта в принципе задается, но не указана.
		// В этом случае нет смысла заполнять/проверять налогообложение, 
		// т.к. нет возможности получить учетную политику.
		Возврат;
	КонецЕсли;
	
	ИзмененныеПараметры = УчетНДСУПСлужебный.ИзмененныеПараметры("ПараметрыЗаполненияНалогообложенияНДСПродажи",
								ПараметрыЗаполнения,
								КэшированныеЗначенияПараметров);
								
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияНалогообложенияНДСПродажи",
								ПараметрыЗаполнения,
								КэшированныеЗначенияПараметров);

	ТолькоЕслиПустоеИлиНекорректное = Истина;
	Если ИзмененныеПараметры.Свойство("Договор")
		ИЛИ ИзмененныеПараметры.Свойство("НаправлениеДеятельности")
		ИЛИ ИзмененныеПараметры.Свойство("Организация")
		ИЛИ ИзмененныеПараметры.Свойство("Склад") Тогда
		ТолькоЕслиПустоеИлиНекорректное = Ложь;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаНаХранение
		Или ПараметрыЗаполнения.ВозвратСХранения
		Или ПараметрыЗаполнения.ПередачаНаКомиссию
		Или ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
		
		НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
		Возврат;
		
	КонецЕсли;
	
	МассивДоступных = УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСПродажи(ПараметрыЗаполнения);
	Если ТолькоЕслиПустоеИлиНекорректное Тогда
		Если ЗначениеЗаполнено(НалогообложениеНДС) И МассивДоступных.Найти(НалогообложениеНДС) <> Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НовоеНалогообложениеНДС = НалогообложениеНДС;
	
	НалогообложениеДоговора = Неопределено;
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Договор) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор
		|	И НЕ ДоговорыКонтрагентов.НалогообложениеНДСОпределяетсяВДокументе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорыМеждуОрганизациями.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	ДоговорыМеждуОрганизациями.Ссылка = &Договор
		|	И НЕ ДоговорыМеждуОрганизациями.НалогообложениеНДСОпределяетсяВДокументе
		|";
		Запрос.УстановитьПараметр("Договор", ПараметрыЗаполнения.Договор);
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Если Выборка.Следующий() Тогда
			НалогообложениеДоговора = Выборка.НалогообложениеНДС;
		КонецЕсли;
	КонецЕсли;
	
	НалогообложениеНаправленияДеятельности = Неопределено;
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.НаправлениеДеятельности) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	2 КАК Приоритет,
		|	НаправленияДеятельности.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.НаправленияДеятельности КАК НаправленияДеятельности
		|ГДЕ
		|	НаправленияДеятельности.Ссылка = &НаправлениеДеятельности
		|	И НЕ НаправленияДеятельности.НалогообложениеНДСОпределяетсяВДокументе
		|	И НаправленияДеятельности.УчетДоходов
		|";
		Запрос.УстановитьПараметр("НаправлениеДеятельности", ПараметрыЗаполнения.НаправлениеДеятельности);
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Если Выборка.Следующий() Тогда
			НалогообложениеНаправленияДеятельности = Выборка.НалогообложениеНДС;
		КонецЕсли;
	КонецЕсли;
	
	Если (ИзмененныеПараметры.Свойство("Договор") И ЗначениеЗаполнено(ПараметрыЗаполнения.Договор))
			ИЛИ (ИзмененныеПараметры.Свойство("НаправлениеДеятельности") И ЗначениеЗаполнено(ПараметрыЗаполнения.НаправлениеДеятельности)) Тогда
		
		Если ЗначениеЗаполнено(НалогообложениеДоговора) Тогда
			НовоеНалогообложениеНДС = НалогообложениеДоговора;
		ИначеЕсли ЗначениеЗаполнено(НалогообложениеНаправленияДеятельности) Тогда
			НовоеНалогообложениеНДС = НалогообложениеНаправленияДеятельности;
		КонецЕсли;
		
	КонецЕсли;
	
	ИзменилисьОрганизацияИлиСклад = 
		(ИзмененныеПараметры.Свойство("Организация") И ЗначениеЗаполнено(ПараметрыЗаполнения.Организация))
			ИЛИ (ИзмененныеПараметры.Свойство("Склад") И ЗначениеЗаполнено(ПараметрыЗаполнения.Склад));
	
	Если (ИзменилисьОрганизацияИлиСклад И НалогообложениеДоговора = Неопределено И НалогообложениеНаправленияДеятельности = Неопределено)
			ИЛИ МассивДоступных.Найти(НовоеНалогообложениеНДС) = Неопределено Тогда
		УчетНДСЛокализация.ЗаполнитьНалогообложениеНДСПродажиПоПараметрам(НовоеНалогообложениеНДС, НалогообложениеНДС, ПараметрыЗаполнения);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НовоеНалогообложениеНДС) Тогда
		ПараметрыУчетаОрганизации = ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация,
			ПараметрыЗаполнения.Дата,
			ПараметрыЗаполнения.Склад,
			ПараметрыЗаполнения.Подразделение);
		НовоеНалогообложениеНДС = ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи;
	КонецЕсли;
	
	НалогообложениеНДС = НовоеНалогообложениеНДС;
	
КонецПроцедуры

// Заполняет список доступных для выбора значений налогообложения НДС исходя из настроек учета НДС операции документа.
//
// Параметры:
// 	ЭлементНалогообложениеНДС - ПолеФормы - Элемент формы, в котором указывается налогообложение НДС.
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Выбранное в документе значение налогообложения НДС.
// 	ПараметрыЗаполнения - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьСписокВыбораНалогообложенияНДСПродажи(ЭлементНалогообложениеНДС, НалогообложениеНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	ПрименяемыеТипыНалогообложенияПродажи = УчетНДСУПСлужебный.ПрименяемыеТипыНалогообложенияНДС(Истина, Ложь);
	Для каждого Элемент Из ПрименяемыеТипыНалогообложенияПродажи Цикл
		Если Элемент.Значение = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
			Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента ИЛИ ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
				Элемент.Представление = НСтр("ru = 'Возврат облагается НДС'");
			КонецЕсли;
		КонецЕсли;
		Если Элемент.Значение = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента ИЛИ ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
				Элемент.Представление = НСтр("ru = 'Возврат не облагается НДС'");
			КонецЕсли;
		КонецЕсли;
		Если Элемент.Значение = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента ИЛИ ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
				Элемент.Представление = НСтр("ru = 'Возврат облагается ЕНВД'");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	ДоступныеНалогообложенияПродажи = УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСПродажи(ПараметрыЗаполнения);
	Если ЗначениеЗаполнено(НалогообложениеНДС) И ДоступныеНалогообложенияПродажи.Найти(НалогообложениеНДС) = Неопределено Тогда
		ДоступныеНалогообложенияПродажи.Добавить(НалогообложениеНДС);
	КонецЕсли;
	ЭлементНалогообложениеНДС.СписокВыбора.Очистить();
	
	Для каждого Значение Из ДоступныеНалогообложенияПродажи Цикл
		ЭлементСписка = ПрименяемыеТипыНалогообложенияПродажи.НайтиПоЗначению(Значение);
		Если ЭлементСписка <> Неопределено Тогда
			ЭлементНалогообложениеНДС.СписокВыбора.Добавить(Значение, ЭлементСписка.Представление);
		Иначе
			ЭлементНалогообложениеНДС.СписокВыбора.Добавить(Значение);
		КонецЕсли;
	КонецЦикла;
	
	ЭлементНалогообложениеНДС.Видимость = (ЭлементНалогообложениеНДС.СписокВыбора.Количество() <> 1); 
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияНалогообложенияНДСПродажи", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);

КонецПроцедуры

// Устанавливает ограничения на типы запасов, которые можно продавать по указанному налогообложению
// 
// Параметры:
// 	ОтборыВидовЗапасов - см. Справочники.ВидыЗапасов.ПараметрыОтбораВидовЗапасов
// 	Организация - СправочникСсылка.Организации - 
// 	Дата - Дата -
// 	НалогообложениеНДС - Неопределено, ПеречислениеСсылка.ТипыНалогообложенияНДС -
Процедура ПараметрыЗаполненияВидовЗапасовПоНалогообложению(ОтборыВидовЗапасов, Организация, Дата, НалогообложениеНДС = Неопределено) Экспорт
	
	УчетНДСЛокализация.ДополнитьПараметрыЗаполненияВидовЗапасовПоНалогообложению(ОтборыВидовЗапасов, Организация, Дата, НалогообложениеНДС);
	
КонецПроцедуры

// Устанавливаем условное оформление поля "Код ТН ВЭД" по налогообложению продажи.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Содержит данную форму
//  ИмяТЧ - Строка - Наименование табличной части документа, если оно отличается от "Товары".
//                   В табличной части должно присутствовать поле ТипНоменклатуры.
//  ЕстьНоменклатура - Булево - признак пономенклатурных продаж
//
Процедура УстановитьУсловноеОформлениеКодаТНВЭДПоНалогообложениюПродажи(Форма, ИмяТЧ = "Товары", ЕстьНоменклатура = Истина) Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементФормы = Форма.Элементы[ИмяТЧ + "КодТНВЭД"]; // ПолеФормы, ГруппаФормы -
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(
		Элемент.Поля,
		ЭлементФормы.Имя);
	
	СписокНалогообложенийЭкспорта = Новый СписокЗначений();
	СписокНалогообложенийЭкспорта.ЗагрузитьЗначения(УчетНДСУПСлужебный.НалогообложенияНДСПродажиНаЭкспорт());
	
	Если ЕстьНоменклатура Тогда
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(
			Элемент.Отбор,
			"Объект.НалогообложениеНДС",
			СписокНалогообложенийЭкспорта,
			ВидСравненияКомпоновкиДанных.НеВСписке);
	Иначе
		ГруппаОтбора = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(
			Элемент.Отбор.Элементы,
			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ);
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(
			ГруппаОтбора, 
			"Объект.ХозяйственнаяОперация",
			Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов,
			ВидСравненияКомпоновкиДанных.НеРавно);
			
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(
			ГруппаОтбора, 
			"Объект.НалогообложениеНДС",
			СписокНалогообложенийЭкспорта,
			ВидСравненияКомпоновкиДанных.НеВСписке);
	КонецЕсли;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	///////
	
	Если ЕстьНоменклатура Тогда
		СписокТиповНоменклатуры = Новый СписокЗначений();
		СписокТиповНоменклатуры.ЗагрузитьЗначения(УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
		
		Элемент = УсловноеОформление.Элементы.Добавить();
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(
			Элемент.Поля,
			ЭлементФормы.Имя);
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(
			Элемент.Отбор,
			"Объект." + ИмяТЧ + ".ТипНоменклатуры",
			СписокТиповНоменклатуры,
			ВидСравненияКомпоновкиДанных.НеВСписке);
	
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
		Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
		Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<для товаров>'"));
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливаем условное оформление для ставки НДС, суммы НДС, суммы с НДС по налогообложению продажи.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Содержит данную форму
//  ИмяПоляВводаСтавкиНДС - Строка - Наименование элемента формы, содержащего ставку НДС,
//                                   если оно отличается от "ТоварыСтавкаНДС".
//  ИмяПоляВводаСуммыНДС - Строка - Наименование элемента формы, содержащего сумму НДС,
//                                  если оно отличается от "ТоварыСуммаНДС".
//  ИмяПоляВводаСуммыСНДС - Строка - Наименование элемента формы, содержащего сумму с НДС,
//                                   если оно отличается от "ТоварыСуммаСНДС".
//
Процедура УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюПродажи(Форма,
	                                          ИмяПоляВводаСтавкиНДС = "ТоварыСтавкаНДС",
	                                          ИмяПоляВводаСуммыНДС  = "ТоварыСуммаНДС",
	                                          ИмяПоляВводаСуммыСНДС = "ТоварыСуммаСНДС") Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы; // ВсеЭлементыФормы -
	
	//
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСтавкиНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыСНДС].Имя);
	
	СписокНалогообложений = Новый СписокЗначений();
	СписокНалогообложений.ЗагрузитьЗначения(УчетНДСУПКлиентСервер.ТипыНалогообложенияСкрывающиеРеквизитыНДС());
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокНалогообложений;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	//
	
	УчетНДСЛокализация.ДополнитьУсловноеОформлениеСуммНДСПоНалогообложениюПродажи(Форма, ИмяПоляВводаСтавкиНДС, ИмяПоляВводаСуммыНДС, ИмяПоляВводаСуммыСНДС);
	
КонецПроцедуры

// Определяет вид деятельности раздельного учета НДС исходя из налогообложения НДС продажи.
//
// Параметры:
//	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС -
//	Организация - СправочникСсылка.Организации
//	Дата - Дата
//
// Возвращаемое значение:
//	ПеречислениеСсылка.ТипыНалогообложенияНДС -
//
Функция ВидДеятельностиПоНалогообложениюНДС(НалогообложениеНДС, Организация = Неопределено, Дата = Неопределено) Экспорт
	
	ВидДеятельностиНДС = Неопределено;
	УчетНДСЛокализация.УстановитьВидДеятельностиПоНалогообложениюНДС(ВидДеятельностиНДС, НалогообложениеНДС, Организация, Дата);
	Если ВидДеятельностиНДС = Неопределено Тогда
		ВидДеятельностиНДС = НалогообложениеНДС;
	КонецЕсли;
	
	Возврат ВидДеятельностиНДС;
		
КонецФункции

// Возвращает текст запроса проверки корректности выбора номенклатуры по налогообложению НДС в документе продажи
//
// Параметры:
//	ПараметрыЗапроса - Структура - Параметры запроса контроля, который могут быть дополнены
//
// Возвращаемое значение:
// 	Строка - Текст запроса
//
Функция ТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(ПараметрыЗапроса) Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ ИСТИНА КАК Результат;";
	УчетНДСЛокализация.ДополнитьТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(ТекстЗапроса, ПараметрыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Обрабатывает результат выполнения контроля корректности выбора номенклатуры по налогообложению НДС в документе продажи
//
// Параметры:
//	Выборка - ВыборкаИзРезультатаЗапроса - Результат запроса контроля
//	ДокументПродажи - ДокументСсылка - Документ, по которому выполнялся контроль
//	ИмяТЧ - Строка - Имя табличной части для формирования сообщения об ошибке
//	ПредставлениеТЧ - Строка - Представление табличной части для формирования сообщения об ошибке
//	Отказ - Булево - Флаг отказа, который надо установить в случае наличия проблем.
//
Процедура СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(Знач Выборка, Знач ДокументПродажи, Знач ИмяТЧ, Знач ПредставлениеТЧ, Отказ) Экспорт
	
	УчетНДСЛокализация.СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеСчетовФактурВыданных

// Возвращает 
// - текст отображения счетов-фактур, зарегистрированных на основании документа продажи.
// - ссылки данные счета-фактуры.
// 
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных
// Возвращаемое значение:
// 	Структура - Описание:
// * ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию - Булево -
// * ДокументПоОснованиюТребуется - Булево -
// * СчетаФактуры - Массив из ДокументСсылка
// * Представление - ФорматированнаяСтрока -
Функция СчетаФактурыВыданныеНаОсновании(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	Результат.Вставить("ДокументПоОснованиюТребуется",  Ложь);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию",  Ложь);
	
	//++ Локализация
	Результат = УчетНДСРФ.СчетаФактурыВыданныеНаОсновании(ПараметрыРегистрации);
	//-- Локализация
	
	Возврат Результат;

КонецФункции

// Возвращает 
// - текст отображения счетов-фактур, зарегистрированных на основании документа продажи.
// - ссылки данные счета-фактуры.
// 
// Параметры:
// 	ПараметрыРегистрацииВыданныхСФ - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных
// 	ПараметрыРегистрацииПолученныхСФ - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных
// Возвращаемое значение:
// 	Структура - Описание:
// * Представление - ФорматированнаяСтрока - Строка представления счетов-фактур в документе продажи.
// * СчетаФактуры - Массив из ДокументСсылка - Массив счетов-фактур, зарегистрированных на основании документа продажи.
// * ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию - Булево -
// * ДокументПоОснованиюТребуется - Булево -.
Функция СчетаФактурыОбщиеНаОсновании(ПараметрыРегистрацииВыданныхСФ, ПараметрыРегистрацииПолученныхСФ) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	Результат.Вставить("ДокументПоОснованиюТребуется", Ложь);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию", Ложь);
	
	РезультатВыданные = СчетаФактурыВыданныеНаОсновании(ПараметрыРегистрацииВыданныхСФ);
	РезультатПолученные = СчетаФактурыПолученныеНаОсновании(ПараметрыРегистрацииПолученныхСФ);
	
	Результат.Представление = РезультатВыданные.Представление;
	Результат.ДокументПоОснованиюТребуется = РезультатВыданные.ДокументПоОснованиюТребуется;
	Результат.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = 
		РезультатВыданные.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию;
	Если РезультатВыданные.СчетаФактуры.Количество() > 0 Тогда
		Результат.СчетаФактуры = РезультатВыданные.СчетаФактуры;
	ИначеЕсли РезультатПолученные.СчетаФактуры.Количество() > 0 Тогда
		Результат.СчетаФактуры = РезультатПолученные.СчетаФактуры;
		Результат.Представление = РезультатПолученные.Представление;
		Результат.ДокументПоОснованиюТребуется = РезультатПолученные.ДокументПоОснованиюТребуется;
		Результат.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = 
			РезультатПолученные.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию;
	ИначеЕсли РезультатПолученные.ДокументПоОснованиюТребуется Тогда
		Результат.Представление = РезультатПолученные.Представление;
		Результат.ДокументПоОснованиюТребуется = РезультатПолученные.ДокументПоОснованиюТребуется;
		Результат.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = 
			РезультатПолученные.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Вызывается в обработчике ПередЗаписью() документа продажи.
// Отменяет проведение счетов-фактур, если отменяется проведение документа продажи или его реквизиты не соответствуют параметрам регистрации.
// Помечает на удаление счета-фактуры, если документ продажи помечается на удаление.
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных.
// 	РежимЗаписи - РежимЗаписиДокумента - Режим записи документа.
// 	ПометкаУдаления - Булево - Пометка удаления документа продажи.
// 	Проведен - Булево - Пометка проведения документа.
//
Процедура АктуализироватьСчетаФактурыВыданныеПередЗаписью(ПараметрыРегистрации, Знач РежимЗаписи, Знач ПометкаУдаления, Знач Проведен) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыВыданныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаПроведения() документа продажи.
// Выполняет проведение счетов-фактур по данным документа продажи.
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных.
//
Процедура АктуализироватьСчетаФактурыВыданныеПриПроведении(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыВыданныеПриПроведении(ПараметрыРегистрации);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаУдаленияПроведения() документа продажи после записи движений.
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных.
//
Процедура АктуализироватьСчетаФактурыВыданныеПриУдаленииПроведения(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыВыданныеПриУдаленииПроведения(ПараметрыРегистрации);
	//-- Локализация
	
КонецПроцедуры

// Возвращает счета-фактуры выданные, сформированные на основании документов продажи.
//
// Параметры:
// 	ДокументыОснования - ДокументСсылка, Массив из ДокументСсылка - Документ или массив документов-оснований счетов-фактур выданных.
// 	ТолькоПроведенные - Булево - Признак того, что нужно вернуть только проведенные счета-фактуры.
//
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблица счетов-фактур, зарегистрированных на основании:
// 		* ДокументОснование - ДокументСсылка - Ссылка на документ-основание, у которого есть счет-фактура.
// 		* Ссылка - ДокументСсылка - Ссылка на счет-фактуру выданный.
// 		* Корректировочный - Булево - признак Корректировочный счета-фактуры.
// 		* Исправление - Булево - признак Исправление счета-фактуры.
//
Функция СчетаФактурыВыданныеПоДокументамОснованиям(ДокументыОснования, ТолькоПроведенные = Истина) Экспорт
	
	СчетаФактуры = Новый ТаблицаЗначений();
	СчетаФактуры.Колонки.Добавить("ДокументОснование");
	СчетаФактуры.Колонки.Добавить("Ссылка");
	СчетаФактуры.Колонки.Добавить("Корректировочный");
	СчетаФактуры.Колонки.Добавить("Исправление");
	СчетаФактуры.Колонки.Добавить("РучнаяКорректировкаСуммДокумента", Новый ОписаниеТипов("Булево"));
	
	//++ Локализация
	СчетаФактуры = УчетНДСРФ.СчетаФактурыВыданныеПоДокументамОснованиям(ДокументыОснования, ТолькоПроведенные);
	//-- Локализация
	
	Возврат СчетаФактуры;

КонецФункции

// Возвращает полное наименование документа СчетФактураВыданный
// 
// Возвращаемое значение:
// 	Строка, Неопределено - Описание
Функция ПолноеИмяСчетФактурыВыданный() Экспорт
	
	Результат = Неопределено;
	//++ Локализация
	Результат = "Документ.СчетФактураВыданный";
	//-- Локализация
	Возврат Результат;
	
КонецФункции

// Заполняет Счет-фактуру выданный по переданным параметрам регистрации, выполняет проведение документа.
// Если провести документ не удалось, то выполняет запись документа.
//
// Параметры:
//  СчетФактура - ДокументОбъект, ДокументСсылка - объект или ссылка счет-фактуры выданный
//  ПараметрыРегистрации - Структура - Значения реквизитов счет-фактуры. См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных
//
// Возвращаемое значение:
// 	Структура:
// 		* СообщениеОбОшибке - Строка - Сообщение об ошибке, если документ провести не удалось.
// 		* Проведен - Булево - Если удалось провести документ, то Истина. Иначе - Ложь.
//
Функция ЗаполнитьСчетФактураВыданный(СчетФактура, ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Проведен", Истина);
	Результат.Вставить("СообщениеОбОшибке", "");
	
	//++ Локализация
	Результат = УчетНДСРФ.ЗаполнитьСчетФактураВыданный(СчетФактура, ПараметрыРегистрации);
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

// Формирует исправительные счета-фактуры выданные по измененным документам-основаниям.
// 
// Параметры:
//  ТаблицаИзмененныхДокументов	- ТаблицаЗначений - измененные документы продажи и их реквизиты:
//  	* Документ - ОпределяемыйТип.ОснованиеСчетФактураВыданный - Документ-основание.
//  	* Организация - СправочникСсылка.Организации - Организация документа-основания.
//  	* Дата - Дата - Дата документа-основания.
//  	* Ответственный - СправочникСсылка.Пользователи - Ответственный за документ-основание.
// 
// Возвращаемое значение:
//  Массив из ДокументСсылка
//
Функция СформироватьИсправительныеСчетаФактурыПоИзмененнымДокументам(ТаблицаИзмененныхДокументов) Экспорт
	
	СформированныеДокументы = Новый Массив;
	
	//++ Локализация
	СформированныеДокументы = УчетНДСРФ.СформироватьИсправительныеСчетаФактурыПоИзмененнымДокументам(ТаблицаИзмененныхДокументов);
	//-- Локализация
	
	Возврат СформированныеДокументы;
	
КонецФункции

#КонецОбласти

#Область ФормированиеСчетовФактурКомиссионеру
	
// Возвращает 
// - текст отображения счетов-фактур, зарегистрированных на основании отчета по комиссии.
// - ссылки данные счета-фактуры.
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурКомиссионеру
// 
// Возвращаемое значение:
// 	Структура:
//		* Представление - ФорматированнаяСтрока - Строка представления счетов-фактур в отчета комиссионеру.
// 		* СчетаФактуры - Массив из ДокументСсылка - Массив счетов-фактур, зарегистрированных на основании отчета комиссионера.
//
Функция СчетаФактурыКомиссионеруНаОсновании(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	
	//++ Локализация
	Результат = УчетНДСРФ.СчетаФактурыКомиссионеруНаОсновании(ПараметрыРегистрации);
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

// Вызывается в обработчике ПередЗаписью() отчета комиссионера.
// Отменяет проведение счетов-фактур, если отменяется проведение отчета комиссионера или его реквизиты не соответствуют параметрам регистрации.
// Помечает на удаление счета-фактуры, если помечается на удаление отчет комиссионера.
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурКомиссионеру
// 	РежимЗаписи - РежимЗаписиДокумента - Режим записи документа
// 	ПометкаУдаления - Булево - Пометка удаления отчета комиссионера.
// 	Проведен - Булево - Пометка проведения документа.
//
Процедура АктуализироватьСчетаФактурыКомиссионеруПередЗаписью(ПараметрыРегистрации, Знач РежимЗаписи, Знач ПометкаУдаления, Знач Проведен) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыКомиссионеруПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаПроведения() отчета комиссионера.
// Выполняет проведение счетов-фактур по данным отчета комиссионера.
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурКомиссионеру
//
Процедура АктуализироватьСчетаФактурыКомиссионеруПриПроведении(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыКомиссионеруПриПроведении(ПараметрыРегистрации);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаУдаленияПроведения() отчета комиссионера после записи движений.
// Выполняет обновление распоряжений на оформление счетов-фактур комиссионеру. 
//
// Параметры:
// 	ПараметрыРегистрации - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурКомиссионеру
//
Процедура АктуализироватьСчетаФактурыКомиссионеруПриУдаленииПроведения(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыКомиссионеруПриУдаленииПроведения(ПараметрыРегистрации);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область РегистрацияСчетовФактурКомитента

// Вызывается в обработчике ОбработкаПроведения() отчета комитенту.
// Выполняет обновление распоряжений на регистрацию счетов-фактур комитента. 
//
// Параметры:
// 	СчетаФактурыВыданныеПокупателям - Массив из ДокументСсылка - Счета-фактуры, выданные покупателям, параметры которых сообщили комитенту.
// 	Отказ - Булево -
//
Процедура АктуализироватьСчетаФактурыКомитентаПриПроведении(СчетаФактурыВыданныеПокупателям, Отказ = Ложь ) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыКомитентаПриПроведении(СчетаФактурыВыданныеПокупателям, Отказ);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаУдаленияПроведения() отчета комитента после вызова записи движений.
// Выполняет обновление распоряжений на регистрацию счетов-фактур комитента. 
//
// Параметры:
// 	СчетаФактурыВыданныеПокупателям - Массив из ДокументСсылка - Счета-фактуры, выданные покупателям, параметры которых сообщили комитенту.
//
Процедура АктуализироватьСчетаФактурыКомитентаПриУдаленииПроведения(СчетаФактурыВыданныеПокупателям) Экспорт
	
	//++ Локализация
	УчетНДСРФ.АктуализироватьСчетаФактурыКомитентаПриУдаленииПроведения(СчетаФактурыВыданныеПокупателям);
	//-- Локализация
	
КонецПроцедуры

// Дополняет временную таблицу товаров к оформлению отчета комитенту колонкой "СчетФактура".
// Данная колонка заполняется подобранными по параметрам счетами-фактурами, выданным покупателю комиссионных товаров.
// Исходная временная таблица должна содержать колонки, по которым осуществляется подбор счетов-фактур.
// 	Покупатель - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Покупатель комиссионных товаров.
// 	ДокументРеализации - ДокументСсылка - Документ реализации комиссионных товаров.
// 	ДатаСчетаФактуры - Дата - Дата выставления счета-фактуры.
// 	НомерСчетаФактуры - Строка - Номер счета-фактуры. 
//
// Параметры:
// 	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу товаров к оформлению.
// 	ИмяТаблицы - Строка - Имя временной таблицы товаров к оформлению отчета комитенту.
//
Процедура ДополнитьТаблицуДаннымиСчетовФактурВыданныхПокупателям(МенеджерВременныхТаблиц, ИмяТаблицы) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ПоляТаблицы,
	|	ИмяТаблицы.Покупатель КАК Покупатель,
	|	ИмяТаблицы.ДокументРеализации КАК ДокументРеализации,
	|	ИмяТаблицы.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ИмяТаблицы.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	""""  КАК СчетФактура
	|ПОМЕСТИТЬ ИмяТаблицыПредварительная
	|ИЗ
	|	ИмяТаблицы КАК ИмяТаблицы
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицы
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ИмяТаблицы
	|ИЗ
	|	ИмяТаблицыПредварительная
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицыПредварительная";
	//++ Локализация
	ТекстЗапроса = УчетНДСРФ.ТекстЗапросаСчетовФактурВыданныхПокупателямДляОтчетаКомитенту();
	//-- Локализация
	
	ВременнаяТаблица = МенеджерВременныхТаблиц.Таблицы.Найти(ИмяТаблицы);
	ПоляВыборки = Новый Массив;
	Для каждого Колонка Из ВременнаяТаблица.Колонки Цикл
		Если Колонка.Имя <>"Покупатель"
				И Колонка.Имя <>"ДокументРеализации"
				И Колонка.Имя <>"ДатаСчетаФактуры"
				И Колонка.Имя <>"НомерСчетаФактуры" Тогда
			ПолеВыборки = СтрШаблон("	%1.%2 КАК %2", ИмяТаблицы, Колонка.Имя);
			ПоляВыборки.Добавить(ПолеВыборки);
		КонецЕсли;
	КонецЦикла;
	Разделитель = ",
		|";
	СтрокаПоляВыборки = СтрСоединить(ПоляВыборки, Разделитель);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляТаблицы", СтрокаПоляВыборки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицы", ИмяТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПеречислениеНДСВБюджетПоОтдельнымОперациям

// Обновляет заголовок команды просмотра состояния оплаты НДС по документу при возникновении 
// события ИзменениеСостоянияОплатыНДСПоСчетуФактуре.
// 
// Параметры:
// 	СчетФактура - ОпределяемыйТип.СчетФактура - Документ, требующий оплаты НДС.
// 	КомандаСостояния - КнопкаФормы - Элемент команды просмотра состояния.
// 	ОплатаЧерезЕдиныйЛицевойСчет - Булево - признак оплаты таможенных платежей через единый лицевой счет
Процедура УстановитьЗаголовокСостоянияОплатыНДСПоСчетуФактуре(СчетФактура, КомандаСостояния, ОплатаЧерезЕдиныйЛицевойСчет = Ложь) Экспорт
	
	Заголовок = Неопределено;
	//++ Локализация
	УчетНДСРФ.ПолучитьЗаголовокСостоянияОплатыНДСПоСчетуФактуре(Заголовок, СчетФактура);
	//-- Локализация
	
	Если Заголовок = Неопределено Или ОплатаЧерезЕдиныйЛицевойСчет Тогда
		КомандаСостояния.Видимость = Ложь;
	Иначе
		КомандаСостояния.Видимость = Истина;
		КомандаСостояния.Заголовок = Заголовок;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.НДСПредъявленный);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ПартииНДСКРаспределению);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.НДСАвансыВыданные);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.НДСАвансыПолученные);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДвиженияПоНДС);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.НДСПредъявленный);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ПартииНДСКРаспределению);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.НДСАвансыВыданные);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.НДСАвансыПолученные);

	КонецЕсли;
	// Контроль даты запрета
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		Параметры.КонтрольныеРегистрыДатаЗапрета.Добавить(Метаданные.РегистрыНакопления.НДСПредъявленный);
		Параметры.КонтрольныеРегистрыДатаЗапрета.Добавить(Метаданные.РегистрыНакопления.НДСАвансыВыданные);
		Параметры.КонтрольныеРегистрыДатаЗапрета.Добавить(Метаданные.РегистрыНакопления.НДСАвансыПолученные);
		Параметры.КонтрольныеРегистрыДатаЗапрета.Добавить(Метаданные.РегистрыНакопления.ДвиженияПоНДС);
	КонецЕсли;
	УчетНДСЛокализация.ДополнитьПараметрыДляПроведенияДокумента(Параметры, Документ, Свойства);
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие из Строка - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ДвиженияДокумента = МетаданныеДокумента.Движения;

	ТекстыЗапросов = Новый Соответствие();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.НДСПредъявленный;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра,
				МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.НДСАвансыВыданные;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра,
				МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.НДСАвансыПолученные;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра,
				МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияПоНДС;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра,
				МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ПартииНДСКРаспределению;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра,
				МетаданныеДокумента));
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьТекстыЗапросовСторнирования(ТекстыЗапросов, МетаданныеДокумента);
	
	Возврат ТекстыЗапросов;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие из Строка - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	СоответствиеТекстовЗапросов.Вставить("НДСПредъявленныйИзменение", 
		РегистрыНакопления.НДСПредъявленный.ТекстЗапросаКонтрольДатыЗапрета(Запрос));
	СоответствиеТекстовЗапросов.Вставить("ТаблицаИзмененийНДСАвансыПолученные", 
		РегистрыНакопления.НДСАвансыПолученные.ТекстЗапросаКонтрольДатыЗапрета(Запрос));
	СоответствиеТекстовЗапросов.Вставить("ТаблицаИзмененийНДСАвансыВыданные", 
		РегистрыНакопления.НДСАвансыВыданные.ТекстЗапросаКонтрольДатыЗапрета(Запрос));
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам учета НДС.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , Метаданные.РегистрыНакопления.НДСПредъявленный.Имя);
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , Метаданные.РегистрыНакопления.ПартииНДСКРаспределению.Имя);
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , Метаданные.РегистрыНакопления.НДСАвансыВыданные.Имя);
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , Метаданные.РегистрыНакопления.НДСАвансыПолученные.Имя);
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , Метаданные.РегистрыНакопления.ДвиженияПоНДС.Имя);
	
	УчетНДСЛокализация.ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ);
	
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений из Строка - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	УчетНДСЛокализация.ДополнитьЗапросКонтроляИзменений(Запрос, ТекстыЗапроса, Документ);
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	УчетНДСЛокализация.СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ);
	
КонецПроцедуры

// Проверяет необходимость формирования движений по регистрам НДС
//
// Параметры:
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	
// Возвращаемое значение:
// 	Булево - Истина, если движение по НДС необходимо
Функция ТребуетсяПроведениеПоРегистрамНДС(Регистры) Экспорт 
	
	Для каждого КлючИЗначение Из РегистрыУчетаНДС() Цикл
		Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(КлючИЗначение.Ключ, Регистры) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	ДополнительныеТаблицыПроведения = Новый Массив; // Таблицы получаются при проведении, но в регистры не записываются.
	УчетНДСЛокализация.ДополнитьТаблицыПроведения(ДополнительныеТаблицыПроведения);
	Для каждого ИмяТаблицы Из ДополнительныеТаблицыПроведения Цикл
		Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// Дополняет тексты запроса проведения документа текстами отражения остатков собственных товаров в учете входящего НДС.
// Операция формирует движения по регистрам НДСПредъявленный, ДанныеОснованийСчетовФактур.
//
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений из Строка - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстТовары - Строка - Текст запроса получения данных документа приобретения.
// 	     Запрос должен возвращать выборку с полями:
// 	    Реквизиты ввода остатки товаров.
// 	     * Период - Дата - Дата отражения ввода остатков.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * ВводОстатков22 - Булево - Признак того, что документ создан на версии 2.2 или ранее.
// 	     * Организация - СправочникСсылка.Организации - Организация, в которой вводятся остатки товаров.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, в которое вводятся остатки товаров.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Поставщик товаров.
// 	     * ПартияПриобретенияТоваров - ОпределяемыйТип.СчетФактура - Ссылка на документ-партию приобретения товаров.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС под который вводятся остатки товаров.
// 	    Сведения об остатках товаров.
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Товар.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика товара.
// 	     * СтавкаНДС - СправочникСсылка.СтавкиНДС - Ставка НДС товара.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов остатков товара.
// 	     * НомерГТД - СправочникСсылка.НомераГТД - Номер ГТД, по которой ввозился товар.
// 	     * СуммаБезНДСРегл - Число - Сумма без НДС остатка товара в валюте регл. учета.
// 	     * СуммаНДСРегл - Число - Сумма НДС остатка товара в валюте регл. учета. 
// 	     * СуммаНДСУпр - Число - Сумма НДС остатка товара в валюте упр. учета.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Идентификатор строки документа ввода остатков.
//
Процедура ОтразитьВводОстатковСобственныхТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	#Область НДСПредъявленный
	
	Запрос.УстановитьПараметр("УправленческийУчетОрганизацийВключен", РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций());
	Запрос.УстановитьПараметр("ДатаНачалаВеденияУправленческогоУчетаОрганизаций", РасчетСебестоимостиПовтИсп.ДатаНачалаВеденияУправленческогоУчетаОрганизаций());

	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Регистратор,
	|	Товары.Период КАК Период,
	|	Товары.Организация КАК Организация,
	|	Товары.ПартияПриобретенияТоваров КАК СчетФактура,
	|	Товары.Контрагент КАК Поставщик,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС,
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|
	|	Товары.СуммаБезНДСРегл КАК СуммаБезНДС,
	|	Товары.СуммаНДСРегл    КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			И Товары.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА Товары.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	#Товары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Товары.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ((&ВводОстатков22 И Товары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)))
	|	   ИЛИ Товары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию))
	|";
	
	#КонецОбласти

	Если ЗначениеЗаполнено(Запрос.Параметры)
		И Запрос.Параметры.Свойство("Ссылка")
		И ТипЗнч(Запрос.Параметры.Ссылка) = Тип("ДокументСсылка.ВводОстатковТоваров") Тогда
		
		ТекстЗапросаНДСПредъявленный = СтрЗаменить(ТекстЗапросаНДСПредъявленный, "&ВводОстатков22", "ЛОЖЬ")
	Иначе
		ТекстЗапросаНДСПредъявленный = СтрЗаменить(ТекстЗапросаНДСПредъявленный, "&ВводОстатков22", "Товары.ВводОстатков22");
	КонецЕсли;

	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	
	ТекстыЗапросовДанныхДокумента = Новый Структура("Товары", ТекстТовары);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	
	УчетНДСЛокализация.ОтразитьВводОстатковСобственныхТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения приобретения товаров, работ, услуг, прочих активов в учете входящего НДС.
// Операция формирует движения по регистрам НДСПредъявленный, ПартииНДСКРаспределению (в случае если НДС подлежит распределению по базе), ДанныеОснованийСчетовФактур.
// 
// В документе должна быть объявлена экспортная процедура СформироватьСуммыДокументаВВалютахУчета,
// которая инициализирует втСуммыДокументовВВалютахУчета (См. РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений из Строка - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения данных документа приобретения.
// 	     Запрос должен возвращать выборку с полями:
// 	    Реквизиты операции.
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, в которой отражается приобретение.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого регистрируется документ приобретения.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Поставщик ценностей.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор приобретения ценностей.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель ценностей.
// 	     * ДокументПриобретения - ОпределяемыйТип.СчетФактура - Ссылка на документ приобретения.
// 	     * ИсправлениеОшибок - Булево - Признак того, что выполняется исправление документа приобретения.
// 	     * КорректировкаПоСогласованиюСторон - Булево - Признак того, что выполняется корректировка документа приобретения по соглашению сторон.
// 	     * УменьшитьСуммуНДСКВычету - Булево - Признак того, что корректировка по соглашению сторон на уменьшение не будет восстанавливать НДС в книге продаж, а уменьшит НДС к вычету по исходному документу приобретения в книге покупок (как ИСФ).
// 	     * ДокументКорректировкиПриобретения - ДокументСсылка.КорректировкаПриобретения - Ссылка на документ корректировки приобретения. 
// 	                                           Заполняется если ИсправлениеОшибок или КорректировкаПоСогласованиюСторон.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС документа приобретения.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС документа приобретения.
// 	                            Определяет порядок учета входящего НДС, если не удалось определить по Назначению или по Статье расходов.
// 	     * ПриобретениеНаПартиюПроизводства - Булево - Признак того, что направление деятельности, под которое отражается приобретение, хранится в аналитике НаправлениеДеятельностиПартииПроизводства.
// 	     * НастройкаХозяйственнойОперации - СправочникСсылка.НастройкиХозяйственныхОпераций - Настройка хозяйственной операции для отражения в финансовом учете.
// 	     * ИдентификаторФинЗаписи - Строка - Уникальный идентификатор, который используется для связи движений в корреспондирующих финансовых регистрах.
// 	    Приобретаемые товары.
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Приобретаемый товар, работа или услуга.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика приобретаемого товара, работы или услуги.
// 	     * СтавкаНДС - СправочникСсылка.СтавкиНДС - Ставка НДС приобретаемых ценностей.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов приобретаемых товаров.
// 	     * НомерГТД - СправочникСсылка.НомераГТД - Номер ГТД, по которой ввозился приобретаемый товар.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Идентификатор строки документа приобретения для получения 
// 	                                                              сумм документа в валюте управленческого или регламентированного учета.
// 	    Аналитика учета приобретаемых товаров, работ, услуг, прочих активов.
// 	     * НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - Направление деятельности, под которое отражается приобретение, для постатейных затрат.
// 	                                 Для номенклатурных затрат направление деятельности берется из Назначения.
// 	     * НаправлениеДеятельностиПартииПроизводства - СправочникСсылка.НаправленияДеятельности - Направление деятельности, под которое отражается приобретение на партию производства, используется, когда реквизит ПриобретениеНаПартиюПроизводства = Истина.
// 	     * СписатьНаРасходы - Булево - Признак списания приобретаемой ценности на расходы.
// 	     * СтатьяРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов - Статья расходов, на которую списываются приобретаемые ценности.
// 	     * АналитикаРасходов - Характеристика.СтатьиРасходов - Аналитика отражения расходов.
// 	     * СтатьяПрочихАктивов - ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов - Статья отражения приобретения прочего актива.
// 	     * АналитикаПрочихАктивов - Характеристика.СтатьиАктивовПассивов - Аналитика отражения прочего актива.
// 	     * Назначение - СправочникСсылка.Назначения - В случае приобретения под обособленную потребность определяет вид деятельности раздельного учета НДС.
// 	     * ПодразделениеУчета - СправочникСсылка.СтруктураПредприятия - Подразделение, в котором учитываются приобретаемые товары, работы услуги, активы.
//
Процедура ОтразитьПриобретениеУПоставщика(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСУчитываетсяВСтоимости", ВидыДеятельностиНДСУчитываетсяВСтоимости());
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизацийВключен", РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций());
	Запрос.УстановитьПараметр("ДатаНачалаВеденияУправленческогоУчетаОрганизаций", РасчетСебестоимостиПовтИсп.ДатаНачалаВеденияУправленческогоУчетаОрганизаций());
	
	Если Запрос.Параметры.Свойство("ОрганизацияПолучатель") И Запрос.Параметры.Свойство("Период") Тогда
		Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетТоваровПоНалогообложениюНДС",
			НастройкиНалоговУчетныхПолитикПовтИсп.РаздельныйУчетТоваровПоНалогообложениюНДС(Запрос.Параметры.ОрганизацияПолучатель, Запрос.Параметры.Период));
		Запрос.УстановитьПараметр("ФормироватьНДСПредъявленныйПриВключенииВСтоимость",
			НастройкиНалоговУчетныхПолитикПовтИсп.ФормироватьНДСПредъявленныйПриВключенииВСтоимость(Запрос.Параметры.ОрганизацияПолучатель, Запрос.Параметры.Период));
		Запрос.УстановитьПараметр("СписыватьНДСПоРасходамНеПринимаемымВНУ",
			НастройкиНалоговУчетныхПолитикПовтИсп.СписыватьНДСПоРасходамНеПринимаемымВНУ(Запрос.Параметры.ОрганизацияПолучатель, Запрос.Параметры.Период));
	ИначеЕсли Запрос.Параметры.Свойство("Организация") И Запрос.Параметры.Свойство("Период") Тогда
		Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетТоваровПоНалогообложениюНДС",
			НастройкиНалоговУчетныхПолитикПовтИсп.РаздельныйУчетТоваровПоНалогообложениюНДС(Запрос.Параметры.Организация, Запрос.Параметры.Период));
		Запрос.УстановитьПараметр("ФормироватьНДСПредъявленныйПриВключенииВСтоимость",
			НастройкиНалоговУчетныхПолитикПовтИсп.ФормироватьНДСПредъявленныйПриВключенииВСтоимость(Запрос.Параметры.Организация, Запрос.Параметры.Период));
		Запрос.УстановитьПараметр("СписыватьНДСПоРасходамНеПринимаемымВНУ",
			НастройкиНалоговУчетныхПолитикПовтИсп.СписыватьНДСПоРасходамНеПринимаемымВНУ(Запрос.Параметры.Организация, Запрос.Параметры.Период));
	Иначе
		Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетТоваровПоНалогообложениюНДС", Истина);
		Запрос.УстановитьПараметр("ФормироватьНДСПредъявленныйПриВключенииВСтоимость", Ложь);
		Запрос.УстановитьПараметр("СписыватьНДСПоРасходамНеПринимаемымВНУ", Ложь);
	КонецЕсли;
	
#Область НДСПредъявленный
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|						ИЛИ (Ценности.УменьшитьСуммуНДСКВычету И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0)
	|					ТОГДА Ценности.ИсходныйТорговыйДокумент
	|				ИНАЧЕ Ценности.ДокументКорректировкиПриобретения
	|			КОНЕЦ
	|		ИНАЧЕ Ценности.ДокументПриобретения
	|	КОНЕЦ КАК СчетФактура,
	|	Ценности.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|				И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|				И НЕ Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|				И НЕ Ценности.УменьшитьСуммуНДСКВычету
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВосстановлениеПоКСФ)
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ЭлектронныеУслуги)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|				И НЕ Ценности.СписатьНаРасходы = ИСТИНА
	|			ТОГДА ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	//++ Локализация
	|		КОГДА ТИПЗНАЧЕНИЯ(Ценности.Ссылка) = ТИП(Документ.СчетФактураНалоговыйАгент)
	|			ТОГДА ВЫБОР
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|				КОНЕЦ
	//-- Локализация
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА СтатьиРасходов.ВидЦенностиНДС
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                                                             КАК ВидЦенности,
	|	Ценности.СтавкаНДС                                                КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ 
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) 
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						  И &ИспользоватьРаздельныйУчетТоваровПоНалогообложениюНДС
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ 
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок 
	|			ТОГДА Ценности.ДокументКорректировкиПриобретения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР
	|				КОГДА Ценности.ПриобретениеНаПартиюПроизводства И ЕСТЬNULL(НаправленияДеятельностиПартииПроизводства.УчетЗатрат, ЛОЖЬ)
	|						ТОГДА Ценности.НаправлениеДеятельностиПартииПроизводства
	|				КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА 
	|					ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Назначения.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|					КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ИНАЧЕ
	|						ВЫБОР КОГДА ЕСТЬNULL(НаправленияДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Ценности.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка)
	//++ Локализация
	|		КОГДА ТИПЗНАЧЕНИЯ(Ценности.Ссылка) = ТИП(Документ.СчетФактураНалоговыйАгент)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	//-- Локализация
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка)
	|	КОНЕЦ КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	Ценности.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Ценности.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО 
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.Номенклатура = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|	ПО
	|		Ценности.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НаправленияДеятельности КАК НаправленияДеятельностиПартииПроизводства
	|	ПО
	|		Ценности.НаправлениеДеятельностиПартииПроизводства = НаправленияДеятельностиПартииПроизводства.Ссылка
	|
	//++ Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК СчетаФактурыНалоговыйАгент
	|	ПО 
	|		Ценности.Ссылка = СчетаФактурыНалоговыйАгент.Ссылка
	|
	//-- Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (НЕ ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						  И &ИспользоватьРаздельныйУчетТоваровПоНалогообложениюНДС
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|		ИЛИ &ФормироватьНДСПредъявленныйПриВключенииВСтоимость
	|		ИЛИ &СписыватьНДСПоРасходамНеПринимаемымВНУ
	|				И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|				И НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету)
	|	И НЕ ЕСТЬNULL(Назначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|						ИЛИ (Ценности.УменьшитьСуммуНДСКВычету И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0)
	|					ТОГДА Ценности.ИсходныйТорговыйДокумент
	|				ИНАЧЕ Ценности.ДокументКорректировкиПриобретения
	|			КОНЕЦ
	|		ИНАЧЕ Ценности.ДокументПриобретения
	|	КОНЕЦ КАК СчетФактура,
	|	Ценности.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|				И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|				И НЕ Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|				И НЕ Ценности.УменьшитьСуммуНДСКВычету
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВосстановлениеПоКСФ)
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ЭлектронныеУслуги)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|				И НЕ Ценности.СписатьНаРасходы = ИСТИНА
	|			ТОГДА ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	//++ Локализация
	|		КОГДА ТИПЗНАЧЕНИЯ(Ценности.Ссылка) = ТИП(Документ.СчетФактураНалоговыйАгент)
	|			ТОГДА ВЫБОР
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|				КОНЕЦ
	//-- Локализация
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА СтатьиРасходов.ВидЦенностиНДС
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                                                             КАК ВидЦенности,
	|	Ценности.СтавкаНДС                                                КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ 
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) 
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						  И &ИспользоватьРаздельныйУчетТоваровПоНалогообложениюНДС
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ 
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок 
	|			ТОГДА Ценности.ДокументКорректировкиПриобретения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР
	|				КОГДА Ценности.ПриобретениеНаПартиюПроизводства И ЕСТЬNULL(НаправленияДеятельностиПартииПроизводства.УчетЗатрат, ЛОЖЬ)
	|						ТОГДА Ценности.НаправлениеДеятельностиПартииПроизводства
	|				КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА 
	|					ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Назначения.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|					КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ИНАЧЕ
	|						ВЫБОР КОГДА ЕСТЬNULL(НаправленияДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Ценности.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ВЫБОР
	|		КОГДА &СписыватьНДСПоРасходамНеПринимаемымВНУ
	|				И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|				И НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|	КОНЕЦ КАК Событие,
	|	ВЫБОР
	|		КОГДА &СписыватьНДСПоРасходамНеПринимаемымВНУ
	|				И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|				И НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	КОНЕЦ КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	Ценности.ПодразделениеУчета КАК Подразделение,
	|	Ценности.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА &СписыватьНДСПоРасходамНеПринимаемымВНУ
	|				И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|				И НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету
	|			ТОГДА &СтатьяРасходовСписаниеНДС
	|		ИНАЧЕ Ценности.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА &СписыватьНДСПоРасходамНеПринимаемымВНУ
	|				И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|				И НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету
	|			ТОГДА &АналитикаРасходовСписаниеНДС
	|		ИНАЧЕ Ценности.АналитикаРасходов
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА Ценности.ИдентификаторСтроки = """"
	|			ТОГДА Ценности.ИдентификаторФинЗаписи
	|		ИНАЧЕ Ценности.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	ВЫБОР
	|		КОГДА &СписыватьНДСПоРасходамНеПринимаемымВНУ
	|				И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|				И НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВключениеНДСВСтоимость)
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО 
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.Номенклатура = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|	ПО
	|		Ценности.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НаправленияДеятельности КАК НаправленияДеятельностиПартииПроизводства
	|	ПО
	|		Ценности.НаправлениеДеятельностиПартииПроизводства = НаправленияДеятельностиПартииПроизводства.Ссылка
	|
	//++ Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК СчетаФактурыНалоговыйАгент
	|	ПО 
	|		Ценности.Ссылка = СчетаФактурыНалоговыйАгент.Ссылка
	|
	//-- Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						  И &ИспользоватьРаздельныйУчетТоваровПоНалогообложениюНДС
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|	И &ФормироватьНДСПредъявленныйПриВключенииВСтоимость
	|		ИЛИ
	|	(&СписыватьНДСПоРасходамНеПринимаемымВНУ И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету))
	|	И НЕ ЕСТЬNULL(Назначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|";
	
#КонецОбласти

#Область ПартииНДСКРаспределению
	
	ТекстЗапросаПартииНДСКРаспределению =
	// Формирование движений по распределяемым расходам
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.ПодразделениеУчета КАК Подразделение,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.СтатьяРасходов
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.СтатьяПрочихАктивов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.АналитикаРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.АналитикаПрочихАктивов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	| 			ТОГДА ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|						ИЛИ (Ценности.УменьшитьСуммуНДСКВычету И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0)
	|					ТОГДА Ценности.ИсходныйТорговыйДокумент
	|				ИНАЧЕ Ценности.ДокументКорректировкиПриобретения
	|			КОНЕЦ
	|		ИНАЧЕ Ценности.ДокументПриобретения
	|	КОНЕЦ КАК ДокументПоступленияРасходов,
	|	Ценности.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ЭлектронныеУслуги)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|				И НЕ Ценности.СписатьНаРасходы = ИСТИНА
	|			ТОГДА ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	//++ Локализация
	|		КОГДА ТИПЗНАЧЕНИЯ(Ценности.Ссылка) = ТИП(Документ.СчетФактураНалоговыйАгент)
	|			ТОГДА ВЫБОР
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|				КОНЕЦ
	//-- Локализация
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА СтатьиРасходов.ВидЦенностиНДС
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР
	|				КОГДА Ценности.ПриобретениеНаПартиюПроизводства И ЕСТЬNULL(НаправленияДеятельностиПартииПроизводства.УчетЗатрат, ЛОЖЬ)
	|						ТОГДА Ценности.НаправлениеДеятельностиПартииПроизводства
	|				КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА 
	|					ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Назначения.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|					КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ИНАЧЕ
	|						ВЫБОР КОГДА ЕСТЬNULL(НаправленияДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Ценности.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						  И &ИспользоватьРаздельныйУчетТоваровПоНалогообложениюНДС
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	СуммыДокументов.СуммаНДСРегл КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
	|	ЛОЖЬ КАК РасчетПартий,
	|	ДАТАВРЕМЯ(1,1,1) КАК ПериодБазы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|	ПО
	|		Ценности.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НаправленияДеятельности КАК НаправленияДеятельностиПартииПроизводства
	|	ПО
	|		Ценности.НаправлениеДеятельностиПартииПроизводства = НаправленияДеятельностиПартииПроизводства.Ссылка
	|
	//++ Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК СчетаФактурыНалоговыйАгент
	|	ПО 
	|		Ценности.Ссылка = СчетаФактурыНалоговыйАгент.Ссылка
	|
	//-- Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						  И &ИспользоватьРаздельныйУчетТоваровПоНалогообложениюНДС
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|	И (НЕ ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|		ИЛИ ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|	И НЕ (Ценности.КорректировкаПоСогласованиюСторон
	|			И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|			И НЕ Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|			И НЕ Ценности.УменьшитьСуммуНДСКВычету)
	|	И НЕ (&СписыватьНДСПоРасходамНеПринимаемымВНУ
	|		И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И НЕ СтатьиРасходов.ПринятиеКНалоговомуУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Формирование движений по косвенным расходам на сырьевой экспорт
	|ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.ПодразделениеУчета КАК Подразделение,
	|	Ценности.СтатьяРасходов КАК СтатьяРасходов,
	|	Ценности.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	| 			ТОГДА ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|						ИЛИ Ценности.УменьшитьСуммуНДСКВычету
	|					ТОГДА Ценности.ИсходныйТорговыйДокумент
	|				ИНАЧЕ Ценности.ДокументКорректировкиПриобретения
	|			КОНЕЦ
	|		ИНАЧЕ Ценности.ДокументПриобретения
	|	КОНЕЦ КАК ДокументПоступленияРасходов,
	|	Ценности.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|				И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|				И НЕ Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|				И НЕ Ценности.УменьшитьСуммуНДСКВычету
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВосстановлениеПоКСФ)
	//++ Локализация
	|		КОГДА ТИПЗНАЧЕНИЯ(Ценности.Ссылка) = ТИП(Документ.СчетФактураНалоговыйАгент)
	|			ТОГДА ВЫБОР
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|					КОГДА СчетаФактурыНалоговыйАгент.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|				КОНЕЦ
	//-- Локализация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА
	|				ВЫБОР КОГДА ЕСТЬNULL(НаправленияДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|					Ценности.НаправлениеДеятельности
	|				ИНАЧЕ
	|					НЕОПРЕДЕЛЕНО
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	Ценности.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	СуммыДокументов.СуммаНДСРегл КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
	|	ЛОЖЬ КАК РасчетПартий,
	|	ДАТАВРЕМЯ(1,1,1) КАК ПериодБазы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|	ПО
	|		Ценности.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	//++ Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК СчетаФактурыНалоговыйАгент
	|	ПО 
	|		Ценности.Ссылка = СчетаФактурыНалоговыйАгент.Ссылка
	|
	//-- Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|	И СтатьиРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	И СтатьиРасходов.ВариантРаспределенияРасходовРегл =
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|	И НЕ (Ценности.КорректировкаПоСогласованиюСторон
	|			И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|			И НЕ Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|												ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|			И НЕ Ценности.УменьшитьСуммуНДСКВычету)
	|	И (НЕ &СписыватьНДСПоРасходамНеПринимаемымВНУ
	|		ИЛИ СтатьиРасходов.ПринятиеКНалоговомуУчету)
	|
	|";
	
#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ПартииНДСКРаспределению", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ПартииНДСКРаспределению", ТекстЗапросаПартииНДСКРаспределению);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	
	УчетНДСЛокализация.ОтразитьПриобретениеУПоставщика(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности);
	
КонецПроцедуры

// Дополняет тексты запроса отражения документа текстами отражения возврата товаров от покупателя.
// Операция формирует движения по регистрам НДСПредъявленный, НДСЗаписиКнигиПокупок, ДанныеОснованийСчетовФактур.
//
// В документе должна быть объявлена экспортная процедура СформироватьСуммыДокументаВВалютахУчета,
// которая инициализирует втСуммыДокументовВВалютахУчета (См. РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента).
//
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений из Строка - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения из документа возврата.
// 	     Запрос должен возвращать выборку полей:
// 	    Реквизиты операции.
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, в которой отражается возврат.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, в котором отражается возврат.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Покупатель, возвращающий товары.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор с покупателем.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель возвращаемых товаров.
// 	     * ПокупательНеПлательщикНДС - Булево - Признак того, что покупатель возвращающий товары не является плательщиком НДС и счет-фактура от него не ожидается.
// 	     * РозничныйПокупатель - Булево - Признак того, что товар возвращает розничный покупатель.
// 	     * ДенежныеСредстваРозничномуПокупателюВозвращены - Булево - Признак того, что розничному покупателю возвращены денежные средства.
// 	     * НомерДокументаВозвратаДСРозничномуПокупателю - Строка - Номер документа возврата денежных средств розничному покупателю.
// 	     * ДатаДокументаВозвратаДСРозничномуПокупателю - Дата - Дата документа возврата денежных средств розничному покупателю.
// 	     * ДокументВозврата - ОпределяемыйТип.СчетФактура - Документ возврата товаров.
// 	     * ДокументРеализации - ОпределяемыйТип.СчетФактура - Ссылка на документ продажи, по которому оформляется возврат. 
// 	                                                           Если возврат от неплательщика НДС, то заполнение документа реализации обязательно.
// 	     * ОбъектРасчетов - СправочникСсылка.ОбъектыРасчетов - Объект расчетов с клиентом.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС возврата в случае возврата от плательщика НДС. 
// 	                                                                        Если покупатель не плательщик НДС, то налогообложение реализации.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС, на который относится входящий НДС.
// 	     * НастройкаХозяйственнойОперации - СправочникСсылка.НастройкиХозяйственныхОпераций - Настройка хозяйственной операции для отражения в финансовом учете.
// 	     * ИдентификаторФинЗаписи - Строка - Уникальный идентификатор, который используется для связи движений в корреспондирующих финансовых регистрах.
// 	    Возвращаемые товары.
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Возвращаемый товар.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика возвращаемого товара.
// 	     * Серия - СправочникСсылка.СерииНоменклатуры - серия номенклатуры.
// 	     * НоменклатураНабора - СправочникСсылка.Номенклатура - Возвращаемый набор.
// 	     * ХарактеристикаНабора - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика возвращаемого набора.
// 	     * Количество - Число - количество возвращаемых товаров
// 	     * ЕдиницаИзмерения - СправочникСсылка.УпаковкиЕдиницыИзмерения - Единица измерения возвращаемого товара.
// 	     * КоличествоПоРНПТ - Число - количество товара в единицах прослеживаемости.
// 	     * СтавкаНДС - СправочникСсылка.Номенклатура - Ставка НДС возвращаемых ценностей.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов возвращаемого товара.
// 	     * КодТНВЭД - СправочникСсылка.КлассификаторТНВЭД - Код ТН ВЭД возвращаемого товара.
// 	     * НомерГТД - СправочникСсылка.НомераГТД - Номер ГТД возвращаемого товара.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Идентификатор строки документа возврата.
// 	     * НомерСтроки - Число - номер строки исходного (первичного) счета-фактуры.
// 	    Аналитика учета возвращаемых товаров.
// 	     * НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - Направление деятельности, под которое отражается возврат.
// 	     * Назначение - СправочникСсылка.Назначения - Обособленная потребность, обеспечиваемая возвратом.
//
Процедура ОтразитьВозвратТоваровОтПокупателя(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	НастройкиУчета = НастройкиУчета();
	
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСУчитываетсяВСтоимости", ВидыДеятельностиНДСУчитываетсяВСтоимости());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", НастройкиУчета.ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", НастройкиУчета.ДатаОтраженияВозвратовКорректировочнымиСФ);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизацийВключен", РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций());
	Запрос.УстановитьПараметр("ДатаНачалаВеденияУправленческогоУчетаОрганизаций", РасчетСебестоимостиПовтИсп.ДатаНачалаВеденияУправленческогоУчетаОрганизаций());
	
#Область НДСПредъявленный
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Ценности.Ссылка                        КАК Регистратор,
	|	Ценности.Период                        КАК Период,
	|	Ценности.Организация                   КАК Организация,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС 
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ                                  КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС 
	|			ТОГДА Ценности.Организация 
	|		ИНАЧЕ Ценности.Контрагент
	|	КОНЕЦ                                  КАК Поставщик,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, 
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Ценности.СтавкаНДС                     КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ                                  КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА 
	|					ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Назначения.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|					ИНАЧЕ 
	|						ВЫБОР КОГДА ЕСТЬNULL(НаправленияДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Ценности.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл > 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл < 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.СуммаБезНДСРегл > 0
	|			ТОГДА -СуммыДокументов.СуммаБезНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ                                  КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДСРегл > 0
	|			ТОГДА -СуммыДокументов.СуммаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаНДСРегл
	|	КОНЕЦ                                  КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			  И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА СуммыДокументов.СуммаНДСУпр > 0
	|				ТОГДА -СуммыДокументов.СуммаНДСУпр
	|					ИНАЧЕ СуммыДокументов.СуммаНДСУпр
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ                                  КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка)       КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)        КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки                                      КАК ИдентификаторСтроки,
	|	ЛОЖЬ                                                              КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)            КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)         КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                      КАК АналитикаРасходов,
	|	Ценности.ИдентификаторФинЗаписи                                   КАК ИдентификаторФинЗаписи,
	|	Ценности.НастройкаХозяйственнойОперации                           КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|	ПО
	|		Ценности.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СпрВидыЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И ВЫБОР 
	|		КОГДА Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ И (Ценности.ПокупательНеПлательщикНДС ИЛИ Ценности.РозничныйПокупатель)
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ
	|			НЕ (ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ) В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|			И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Ценности.Ссылка                        КАК Регистратор,
	|	Ценности.Период                        КАК Период,
	|	Ценности.Организация                   КАК Организация,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ                                  КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС 
	|			ТОГДА Ценности.Организация 
	|		ИНАЧЕ Ценности.Контрагент
	|	КОНЕЦ                                  КАК Поставщик,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Ценности.СтавкаНДС                     КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ                                  КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА 
	|					ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Назначения.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|					ИНАЧЕ 
	|						ВЫБОР КОГДА ЕСТЬNULL(НаправленияДеятельности.УчетЗатрат, ЛОЖЬ) ТОГДА
	|							Ценности.НаправлениеДеятельности
	|						ИНАЧЕ
	|							НЕОПРЕДЕЛЕНО
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл > 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл < 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.СуммаБезНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ                                  КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаНДСРегл
	|	КОНЕЦ                                  КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			  И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА СуммыДокументов.СуммаНДСУпр > 0
	|				ТОГДА СуммыДокументов.СуммаНДСУпр
	|					ИНАЧЕ -СуммыДокументов.СуммаНДСУпр
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ                                  КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)   КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)        КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки                                      КАК ИдентификаторСтроки,
	|	ЛОЖЬ                                                              КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)            КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)         КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                      КАК АналитикаРасходов,
	|	Ценности.ИдентификаторФинЗаписи                                   КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПринятиеНДСкВычету) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|	ПО
	|		Ценности.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ЛОЖЬ
	|		КОГДА Ценности.ПокупательНеПлательщикНДС 
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Ценности.РозничныйПокупатель
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.ДенежныеСредстваРозничномуПокупателюВозвращены
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.ВидЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|";
	
#КонецОбласти

#Область ДвиженияПоНДС
	ТекстЗапросаДвиженияПоНДС = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Исходящий) КАК ТипЗаписи,
	|	ВЫБОР
	|		КОГДА Ценности.ВозвратТоваровЧерезКомиссионера
	|			ТОГДА Ценности.ПокупательКомиссионногоТовара
	|		ИНАЧЕ Ценности.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	Ценности.ДокументВозврата КАК СчетФактура,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	-СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	-СуммыДокументов.СуммаНДСУпр КАК НДСУпр,
	|	Ценности.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	Ценности.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Ценности.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ КАК Сторно
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СпрВидыЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ 
	|
	|ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Входящий) КАК ТипЗаписи,
	|	Ценности.Контрагент КАК Контрагент,
	|	Ценности.ДокументВозврата КАК СчетФактура,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	СуммыДокументов.СуммаНДСУпр КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	Ценности.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПринятиеНДСкВычету) КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ КАК Сторно
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ЛОЖЬ
	|		КОГДА Ценности.ПокупательНеПлательщикНДС 
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Ценности.РозничныйПокупатель
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.ДенежныеСредстваРозничномуПокупателюВозвращены
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.ВидЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|";
#КонецОбласти

	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда 
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДвиженияПоНДС", Регистры) Тогда 
		ТекстыШаблоновОтражения.Вставить("ДвиженияПоНДС", ТекстЗапросаДвиженияПоНДС);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	
	УчетНДСЛокализация.ОтразитьВозвратТоваровОтПокупателя(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения реализации товаров, услуг, работ или прочих активов в учете НДС.
// Операция формирует движения по регистрам НДСЗаписиКнигиПродаж, НДССостояниеРеализации0 (в случае реализации на экспорт), ДанныеОснованийСчетовФактур.
//
// В документе должна быть объявлена экспортная процедура СформироватьСуммыДокументаВВалютахУчета,
// которая инициализирует втСуммыДокументовВВалютахУчета (См. РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента).
//  
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений из Строка - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения данных документа.
// 	     Запрос должен возвращать выборку полей:
// 	    Реквизиты операции.
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается реализация.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого отражается реализация.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Покупатель ценностей.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор реализации.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель товаров.
// 	     * Грузополучатель - СправочникСсылка.Контрагенты - Грузополучатель товаров.
// 	     * РеализацияВРозницу - Булево - Признак того, что товар реализуется в розницу.
// 	     * ДокументРеализации - ОпределяемыйТип.СчетФактура - Ссылка на документ реализации.
// 	     * ИсправлениеОшибок - Булево - Признак, того что отражается исправление ошибок в документе реализации.
// 	     * КорректировкаПоСогласованиюСторон - Булево - Признак, того что отражается корректировка реализации по соглашению сторон.
// 	     * ДокументКорректировкиРеализации - Неопределено, ДокументСсылка.КорректировкаРеализации - Ссылка на документ корректировки реализации.
// 	                                              Заполняется в случае, если отражается ИсправлениеОшибок или КорректировкаПоСогласованиюСторон.
// 	     * ОбъектРасчетов - СправочникСсылка.ОбъектыРасчетов - Объект расчетов с клиентом.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС документа реализации.
// 	     * НастройкаХозяйственнойОперации - СправочникСсылка.НастройкиХозяйственныхОпераций - Настройка хозяйственной операции для отражения в финансовом учете.
// 	     * ИдентификаторФинЗаписи - Строка - Уникальный идентификатор, который используется для связи движений в корреспондирующих финансовых регистрах.
// 	    Реализуемая номенклатура.
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Товар, работа или услуга.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика реализуемой номенклатуры.
// 	     * НоменклатураНабора - СправочникСсылка.Номенклатура - реализуемый набор.
// 	     * ХарактеристикаНабора - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика набора.
// 	     * Серия - СправочникСсылка.СерииНоменклатуры - серия номенклатуры.
// 	     * Количество - Число - количество реализуемой номенклатуры
// 	     * ЕдиницаИзмерения - СправочникСсылка.УпаковкиЕдиницыИзмерения - Единица измерения номенклатуры.
// 	     * КоличествоПоРНПТ - Число - количество товара в единицах прослеживаемости.
// 	     * Содержание - Строка - описание оказанных услуг.
// 	     * СтавкаНДС - СправочникСсылка.СтавкиНДС - Ставка НДС, по которой облагается реализация.
// 	     * КодТНВЭД - СправочникСсылка.КлассификаторТНВЭД - Код ТН ВЭД реализуемого товара.
// 	     * НомерГТД - СправочникСсылка.НомераГТД - Номер ГТД реализуемого товара.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов реализуемых товаров.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки документа реализации.
// 	     * НомерСтроки - Число - номер строки исходного (первичного) счета-фактуры.
//
Процедура ОтразитьРеализациюКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	
	#Область ДвиженияПоНДС
	ТекстЗапросаДвиженияПоНДС = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Исходящий) КАК ТипЗаписи,
	|	ВЫБОР
	|		КОГДА Ценности.РеализацияЧерезКомиссионера
	|			ТОГДА Ценности.ПокупательКомиссионногоТовара
	|		ИНАЧЕ Ценности.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	| 			ТОГДА Ценности.ДокументКорректировкиРеализации
	|		ИНАЧЕ Ценности.ДокументРеализации
	|	КОНЕЦ КАК СчетФактура,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыФизлицамВЕАЭСЭлектронныеПлощадки)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	СуммыДокументов.СуммаНДСУпр КАК НДСУпр,
	|	ВЫБОР 
	|		КОГДА Ценности.НастройкаХозяйственнойОперации В (
	|				ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияБезПереходаПраваСобственности),
	|				ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Ценности.ОбъектРасчетов
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	Ценности.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВЫБОР 
	|		КОГДА Ценности.НастройкаХозяйственнойОперации В (
	|				ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияБезПереходаПраваСобственности),
	|				ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ Ценности.НастройкаХозяйственнойОперации
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ КАК Сторно
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|";
#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДвиженияПоНДС", Регистры) Тогда 
		ТекстыШаблоновОтражения.Вставить("ДвиженияПоНДС", ТекстЗапросаДвиженияПоНДС);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	
	УчетНДСЛокализация.ОтразитьРеализациюКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения возврата товаров поставщику в учете НДС.
// Запрос формируют таблицу движений по регистру НДСЗаписиКнигиПродаж, ДанныеОснованийСчетовФактур.
//
// В документе должна быть объявлена экспортная процедура СформироватьСуммыДокументаВВалютахУчета,
// которая инициализирует втСуммыДокументовВВалютахУчета (См. РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента)..
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений из Строка - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстТовары - Строка - Текст запроса получения данных документа приобретения.
// 	     Запрос должен возвращать выборку полей:
// 	    Реквизиты операции.
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается возврат.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого отражается возврат.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Поставщик товаров.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор реализации.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель возвращаемых товаров.
// 	     * Грузополучатель - СправочникСсылка.Контрагенты - Грузополучатель возвращаемых товаров.
// 	     * ПокупательНеПлательщикНДС - Булево - Признак того, что покупатель возвращающий товары не является плательщиком НДС и счет-фактура от него не ожидается.
// 	     * ДокументВозврата - ОпределяемыйТип.ОснованиеСчетФактураВыданный - Ссылка на документ возврата.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС документа возврата.
// 	     * ДокументПоступления - ОпределяемыйТип.СчетФактура - Ссылка на документ поступления товаров, по которому осуществляется возврат.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС документа приобретения.
// 	     * НастройкаХозяйственнойОперации - СправочникСсылка.НастройкиХозяйственныхОпераций - Настройка хозяйственной операции для отражения в финансовом учете.
// 	     * ИдентификаторФинЗаписи - Строка - Уникальный идентификатор, который используется для связи движений в корреспондирующих финансовых регистрах.
// 	    Возвращаемая номенклатура.
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Возвращаемый товар.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика возвращаемого товара.
// 	     * СтавкаНДС - СправочникСсылка.СтавкиНДС - Ставка НДС возвращаемых товаров.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов возвращаемого товара.
// 	     * Назначение - СправочникСсылка.Назначения - В случае приобретения под обособленную потребность определяет вид деятельности раздельного учета НДС.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки документа возврата.
//
Процедура ОтразитьВозвратТоваровПоставщику(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	НастройкиУчета = НастройкиУчета();
	
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСУчитываетсяВСтоимости", ВидыДеятельностиНДСУчитываетсяВСтоимости());
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", НастройкиУчета.ДатаОтраженияВозвратовКорректировочнымиСФ);
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", НастройкиУчета.ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизацийВключен", РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций());
	Запрос.УстановитьПараметр("ДатаНачалаВеденияУправленческогоУчетаОрганизаций", РасчетСебестоимостиПовтИсп.ДатаНачалаВеденияУправленческогоУчетаОрганизаций());
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	
#Область НДСПредъявленный
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|			ТОГДА Ценности.ДокументПоступления
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ КАК СчетФактура,
	|	Ценности.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Ценности.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВосстановлениеПоКСФ)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС                          КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			И ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	-СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА -СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	Ценности.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Ценности.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|	И НЕ ЕСТЬNULL(Назначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала)
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ 
	|";
	
#КонецОбласти
	
#Область ДвиженияПоНДС
	ТекстЗапросаДвиженияПоНДС =
	"// Начисление НДС
	|ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Входящий) КАК ТипЗаписи,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Контрагент,
	|	Ценности.ДокументВозврата КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|
	|	-СуммыДокументов.БазаНДСРегл КАК СуммаБезНДС,
	|	-СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	-СуммыДокументов.СуммаНДСУпр КАК НДСУпр,
	|
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	Ценности.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Ценности.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ЛОЖЬ КАК Сторно
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.ВидЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И Ценности.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|	И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|";
	
#КонецОбласти

	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда 
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДвиженияПоНДС", Регистры) Тогда 
		ТекстыШаблоновОтражения.Вставить("ДвиженияПоНДС", ТекстЗапросаДвиженияПоНДС);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстТовары);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	
	УчетНДСЛокализация.ОтразитьВозвратТоваровПоставщику(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения отчета комиссионера в учете НДС.
// Операция формирует движения по регистрам ДанныеОснованийСчетовФактур.
// На основании данных движений регистрируются распоряжения на оформление счетов-фактур комиссионеру.
//
// В документе должна быть объявлена экспортная процедура СформироватьСуммыДокументаВВалютахУчета,
// которая инициализирует втСуммыДокументовВВалютахУчета (См. РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений из Строка - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстТовары - Строка - Текст запроса получения данных документа.
// 	     Запрос должен возвращать выборку полей:
// 	    Реквизиты операции.
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается отчет комиссионера.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого оформляется отчет комиссионера.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Комиссионер.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор комиссии.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель товаров.
// 	     * ОтчетКомиссионера - ОпределяемыйТип.СчетФактура - Отчет комиссионера.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС отчета комиссионера.
// 	     * ОбъектРасчетов - СправочникСсылка.ОбъектыРасчетов - Объект расчетов с комиссионером.
// 	     * НастройкаХозяйственнойОперации - СправочникСсылка.НастройкиХозяйственныхОпераций - Настройка хозяйственной операции для отражения в финансовом учете.
// 	     * ИдентификаторФинЗаписи - Строка - Уникальный идентификатор, который используется для связи движений в корреспондирующих финансовых регистрах.
// 	    Реализованная номенклатура, информация о счетах-фактурах, выставленных покупателям.
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Товар или услуга, реализуемая через посредника.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика реализуемой номенклатуры.
// 	     * СтавкаНДС - СправочникСсылка.СтавкиНДС - Ставка НДС, по которой облагается реализация комиссионных товаров.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов реализуемых товаров.
// 	     * ДатаСчетаФактурыКомиссионера - Дата - Дата выставления счета-фактуры комиссионером покупателю.
// 	     * НомерСчетаФактурыКомиссионера - Дата - Номер счета-фактуры, выставленного комиссионером покупателю.
// 	     * ПокупательКомиссионногоТовара - СправочникСсылка.Контрагенты - Покупатель товаров, услуг.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки отчета комиссионеру.
// 	     * ИсправлениеОшибок - Булево - Признак, что строка относится к корректировке реализации с операцией Исправление ошибок
//
Процедура ОтразитьОтчетКомиссионера(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	
	#Область ДвиженияПоНДС
	ТекстЗапросаДвиженияПоНДС = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейДвиженийПоНДС.Исходящий) КАК ТипЗаписи,
	|	Ценности.Контрагент КАК Контрагент,
	|	Ценности.ОтчетКомиссионера КАК СчетФактура,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыФизлицамВЕАЭСЭлектронныеПлощадки)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	СуммыДокументов.СуммаНДСУпр КАК НДСУпр,
	|	Ценности.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	Ценности.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Ценности.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	Ценности.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЛОЖЬ КАК Сторно
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|";
#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДвиженияПоНДС", Регистры) Тогда 
		ТекстыШаблоновОтражения.Вставить("ДвиженияПоНДС", ТекстЗапросаДвиженияПоНДС);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстТовары);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	
	УчетНДСЛокализация.ОтразитьОтчетКомиссионера(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения отчета комитенту в учете НДС.
// Операция формирует движения по регистрам ДанныеОснованийСчетовФактур.
// На основании данных движений формируются распоряжения на регистрацию счетов-фактур от комитента.
//
// В документе должна быть объявлена экспортная процедура СформироватьСуммыДокументаВВалютахУчета,
// которая инициализирует втСуммыДокументовВВалютахУчета (См. РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений из Строка - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстТовары - Строка - Текст запроса получения данных документа.
// 	     Запрос должен возвращать выборку полей:
// 	    Реквизиты операции.
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается отчет комитенту.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого оформляется отчет комитенту.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Комитент.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор c комитентом.
// 	     * ОтчетКомитенту - ОпределяемыйТип.ОснованиеСчетФактураВыданный - Отчета комитенту.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС отчета комитенту.
// 	    Реализованная номенклатура, счета-фактуры, выставленные покупателям.
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Реализованный товар или услуга.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика реализованной номенклатуры.
// 	     * СтавкаНДС - СправочникСсылка.СтавкиНДС - Ставка НДС, по которой облагается реализация комиссионных товаров.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов реализуемых товаров.
// 	     * ДатаСчетаФактурыВыданногоПокупателю - Дата - Дата счета-фактуры, выставленного покупателю.
// 	     * ПокупательКомиссионногоТовара - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Покупатель комиссионного товара.
// 	     * СчетФактураВыданныйПокупателю - ДокументСсылка - Ссылка на счет-фактуру, выставленный покупателю или субкомиссионеру.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки отчета комитенту.
// 	     * ИсправлениеОшибок - Булево - Признак, что строка относится к корректировке реализации с операцией Исправление ошибок
//
Процедура ОтразитьОтчетКомитенту(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	УчетНДСЛокализация.ОтразитьОтчетКомитенту(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения списания сумм из контура учета входящего НДС.
// Операция формирует движения по регистру НДСПредъявленный.
// 
// В документе должна быть объявлена экспортная процедура СформироватьСуммыДокументаВВалютахУчета,
// которая инициализирует втСуммыДокументовВВалютахУчета (См. РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента).
//
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений из Строка- Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения данных документа приобретения.
// 	      Запрос должен возвращать выборку:
// 	      с полями. 
// 	     * ВидДвижения - ВидДвиженияНакопления  - Вид движения Расход.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * Период - Дата - Дата отражения операции.
// 	     * Организация - СправочникСсылка.Организации - Организация, в которой отражается списание НДС.
// 	     * СчетФактура - ОпределяемыйТип.СчетФактура - Ссылка на документ приобретения.
// 	     * Поставщик - СправочникСсылка.Контрагенты - Поставщик ценностей.
// 	     * ВидЦенности - ПеречислениеСсылка.ВидыЦенностей - Вид приобретаемых ценностей.
// 	     * СтавкаНДС - СправочникСсылка.СтавкиНДС - Ставка НДС приобретаемых ценностей.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС документа приобретения.
// 	     * ИсправленныйСчетФактура - Неопределено.
// 	     * РеализацияЭкспорт - Неопределено.               
// 	     * НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - Направление деятельности, под которое отражается списание НДС.
// 	     * СуммаБезНДС - Число - Сумма без НДС.
// 	     * НДС - Число - Сумма НДС.
// 	     * НДСУпр - Число - Сумма НДС в валюте упр. учета.
// 	     * Событие - ПеречислениеСсылка.СобытияНДСПредъявленный - Событие - списание НДС на расходы.
// 	     * КорВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Кор. вид деятельности.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Идентификатор строки документа приобретения 
// 	     * РегламентнаяОперация - Булево - Ложь.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, в котором учитываются приобретаемые товары, работы услуги, активы.
// 	     * КорНаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - Кор. направление деятельности.          
// 	     * СтатьяРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов - Статья расходов.          
// 	     * АналитикаРасходов - Характеристика.СтатьиРасходов - Аналитика списания НДС.          
// 	     * ИдентификаторФинЗаписи - Строка - Идентификатор для отражения записи в финансовом учете.
// 	     * НастройкаХозяйственнойОперации - СправочникСсылка.НастройкиХозяйственныхОпераций - Настройка для отражения в учете.
//
Процедура ОтразитьСписаниеНДСНаРасходы(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	Запрос.УстановитьПараметр("УправленческийУчетОрганизацийВключен", РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций());
	Запрос.УстановитьПараметр("ДатаНачалаВеденияУправленческогоУчетаОрганизаций", РасчетСебестоимостиПовтИсп.ДатаНачалаВеденияУправленческогоУчетаОрганизаций());
	
#Область НДСПредъявленный
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.СчетФактура КАК СчетФактура,
	|	Ценности.Контрагент КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	Ценности.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			  И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	Ценности.ПодразделениеУчета КАК Подразделение,
	|	Ценности.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	Ценности.СтатьяРасходовСписаниеНДС КАК СтатьяРасходов,
	|	Ценности.АналитикаРасходовСписаниеНДС КАК АналитикаРасходов,
	|	Ценности.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Ценности.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|";
	
#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения отчета комитенту о закупках в учете НДС.
// Операция формирует таблицу ЗаполнениеТоваровСФВыданный.
//
// В модуле менеджера документа должна быть реализована экспортная процедура  ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапросов),
// которая дополняет запрос отражения текстом инициализации ВтСуммыДокументовВВалютахУчета (См. РегистрыСведений.СуммыДокументовВВалютахУчета.ИнициализироватьВтСуммыДокументовВВалютахУчета).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений из Строка - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстТовары - Строка - Текст запроса получения данных документа.
// 	     Запрос должен возвращать выборку полей:
// 	    Реквизиты операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается реализация.
// 	    Ценности в перевыставляемом счете-фактуре.
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Товар, работа или услуга.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика номенклатуры.
// 	     * НоменклатураНабора - СправочникСсылка.Номенклатура - набор.
// 	     * ХарактеристикаНабора - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика набора.
// 	     * Количество - Число - количество ценностей
// 	     * ЕдиницаИзмерения - СправочникСсылка.УпаковкиЕдиницыИзмерения - Единица измерения ценности.
// 	     * Содержание - Строка - описание оказанных услуг
// 	     * СтавкаНДС - СправочникСсылка.СтавкиНДС - Ставка НДС, по которой облагается реализация.
// 	     * НомерГТД - СправочникСсылка.НомераГТД - Номер ГТД товара.
// 	     * ДокументПриобретения - ДокументСсылка.ПриобретениеТоваровУслуг - Исходный документ приобретения ценностей.
// 	     * СчетФактураПолученный - ДокументСсылка - Перевыставляемый счет-фактура, полученный от поставщика.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки отчета комитенту.
//
Процедура ОтразитьОтчетКомитентуОЗакупках(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	УчетНДСЛокализация.ОтразитьОтчетКомитентуОЗакупках(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);
	
КонецПроцедуры

#КонецОбласти

#Область ПрочийПрограммныйИнтерфейс

#Область ОписаниеЭтаповЗакрытияМесяца

#Область РаспределениеНДС

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца
// 	ТекущийРодитель - Строка - Идентификатор группы
//
Процедура ДобавитьЭтап_РаспределениеНДС(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РаспределениеНДС,,,,
		Перечисления.ОперацииЗакрытияМесяца.РасчетПартийИСебестоимости);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.РасчетПартийИСебестоимости);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Распределить'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"УчетНДСУП.Использование_РаспределениеНДС");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"УчетНДСУП.Выполнить_РаспределениеНДС");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Документы.РаспределениеНДС.Формы.ФормаСписка.ПолноеИмя());
	
КонецПроцедуры

// Обработчики этапа.

#Область ОбработчикиЭтапа

Процедура Использование_РаспределениеНДС(ПараметрыОбработчика) Экспорт
	
	Если ПараметрыОбработчика.ДанныеЭтапа.Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.НеТребуется Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Ложь);
	УчетНДСЛокализация.ДополнительныеПроверкиПриРаспределенииНДС(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.СостояниеЭтапаОпределено(ПараметрыОбработчика.ДанныеЭтапа)
	 И ЗакрытиеМесяцаСервер.ТребуетсяПересчетЭтапа(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеРегламентногоДокументаЭтапаЗакрытияМесяца(
		ПараметрыОбработчика,
		Метаданные.Документы.РаспределениеНДС.Имя);
	
КонецПроцедуры

Процедура Выполнить_РаспределениеНДС(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	НачалоПериода = НачалоМесяца(ПараметрыРасчета.ПериодРегистрации);
	КонецПериода  = КонецМесяца(ПараметрыРасчета.ПериодРегистрации);
	
	НомерЗаданияДоРасчета = ЗакрытиеМесяцаСервер.УвеличитьНомерЗадания();
	
	НачатьТранзакцию();
	
	Попытка
		
		ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(НомерЗаданияДоРасчета, ПараметрыРасчета.МассивОрганизаций, ПараметрыОбработчика.ДанныеЭтапа.Код);
		
		ДанныеКРаспределению = ЗакрытиеМесяцаСервер.ЗаданияКРасчетуЗаМесяц(
			НачалоПериода,
			КонецПериода,
			НомерЗаданияДоРасчета,
			ПараметрыРасчета.МассивОрганизаций,
			ПараметрыОбработчика.ДанныеЭтапа.Код);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При выполнении расчета за период %1 произошла ошибка:
				|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
			РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(ПараметрыРасчета.ПериодРегистрации),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(
			ПараметрыОбработчика,
			ТекстОшибки,
			ПараметрыРасчета.МассивОрганизаций,
			ПараметрыРасчета.ПериодРегистрации);
		
	КонецПопытки;
	
	РезультатРаспределенияНДС = Документы.РаспределениеНДС.РаспределитьНДС(
		ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации, 
		ДанныеКРаспределению.Организация);
	
	Если РезультатРаспределенияНДС.РассчитанныеОрганизации.Количество() > 0 Тогда
		
		НачатьТранзакцию();
		
		Попытка
			
			ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(
				НомерЗаданияДоРасчета,
				ПараметрыРасчета.МассивОрганизаций,
				ПараметрыОбработчика.ДанныеЭтапа.Код);
			
			ЗакрытиеМесяцаСервер.ЗафиксироватьРасчет(
				Неопределено,
				ПараметрыОбработчика.ДанныеЭтапа.Код,
				ДанныеКРаспределению.ВременныеТаблицы);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'При выполнении расчета за период %1 произошла ошибка:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоПериода),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(
				ПараметрыОбработчика,
				ТекстОшибки,
				ПараметрыРасчета.МассивОрганизаций,
				ПараметрыРасчета.ПериодРегистрации);
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ФормированиеДвиженийПоНДС

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_ФормированиеДвиженийПоНДС(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоНДС,
		Истина, Ложь, Ложь);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Сформировать'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"УчетНДСУП.Использование_ФормированиеДвиженийПоНДС");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"УчетНДСУП.Выполнить_ФормированиеДвиженийПоНДС");
	НоваяСтрока.ВыполняетсяПриПредварительномЗакрытииМесяца = Истина;
	
КонецПроцедуры

#Область ОбработчикиЭтапа

Процедура Использование_ФормированиеДвиженийПоНДС(ПараметрыОбработчика) Экспорт
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ДанныеРегистра.Период) КАК ДатаОкончания,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеРегистра.Регистратор) КАК Количество
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.РегламентнаяОперация
	|	И ДанныеРегистра.Период <= &КонецПериода
	|	И (ДанныеРегистра.Организация В (&МассивОрганизаций)
	|		ИЛИ &ПоВсемОрганизациям)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ДанныеРегистра.Регистратор) > 0
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ДанныеРегистра.Месяц) КАК ДатаНачала,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеРегистра.СчетФактура) КАК Количество
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюДвиженийПоНДС КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Месяц <= &КонецПериода
	|	И (ДанныеРегистра.Организация В (&МассивОрганизаций)
	|		ИЛИ &ПоВсемОрганизациям)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ДанныеРегистра.СчетФактура) > 0
	|";
	
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Ложь);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика,
		МассивРезультатов[0].Выгрузить().Количество()
		+ МассивРезультатов[1].Выгрузить().Количество());
	
	ЕстьОтраженныеВУчете                = НЕ МассивРезультатов[0].Пустой();
	ЕстьОжидающиеОтражения              = НЕ МассивРезультатов[1].Пустой();
	
	Если ЕстьОжидающиеОтражения Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ожидает отражения в учете НДС: %1'", ОбщегоНазначения.КодОсновногоЯзыка()),
				СокрЛП(МассивРезультатов[1].Выгрузить()[0].Количество)));
		
	КонецЕсли;
	
	Если НЕ ЕстьОжидающиеОтражения И НЕ ЕстьОтраженныеВУчете Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Нет документов для обработки.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Выполнить_ФормированиеДвиженийПоНДС(ПараметрыОбработчика) Экспорт
	
	ВыполнитьФормированиеДвиженийПоНДС( 
		КонецМесяца(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации),
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
	
	//++ Локализация
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда	
	     УчетНДСРФ.Выполнить_ФормированиеСводныхСправокНДС(ПараметрыОбработчика);	
	КонецЕсли;
	//-- Локализация
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ФормированиеЗаданий

#Область ЗаданияКФормированиюДвиженийПоНДС 

// Создает записи регистра по данным документов, влияющих на учет НДС
//
// Параметры:
//   МассивДокументов - Массив Из ДокументСсылка - ссылки на документы.
//
Процедура СформироватьЗаданияПоДокументам(МассивДокументов) Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		// В РИБ данный регистр обрабатывается только в главном узле.
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Тип");
	Таблица.Колонки.Добавить("Ссылка");
	
	Для Каждого Документ Из МассивДокументов Цикл
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Ссылка = Документ;
		НоваяСтрока.Тип    = ТипЗнч(Документ);
	КонецЦикла;
	Таблица.Сортировать("Тип");
	
	ТаблицаТипов = Таблица.Скопировать(, "Тип");
	ТаблицаТипов.Свернуть("Тип");
	
	Для Каждого СтрокаТипа Из ТаблицаТипов Цикл
		
		Отбор = Новый Структура("Тип", СтрокаТипа.Тип);
		МассивСсылок = Таблица.Скопировать(Отбор, "Ссылка").ВыгрузитьКолонку("Ссылка");
		
		Если СтрокаТипа.Тип = Тип("ДокументСсылка.РаспределениеНДС") Тогда
			УчетНДСУПСлужебный.СформироватьЗаданияПоДокументамРаспределениеНДС(МассивСсылок);
		ИначеЕсли СтрокаТипа.Тип = Тип("ДокументСсылка.СчетФактураВыданныйАванс") Тогда
			УчетНДСУПСлужебный.СформироватьЗаданияПоДокументамСчетФактураВыданныйАванс(МассивСсылок);
		ИначеЕсли СтрокаТипа.Тип = Тип("ДокументСсылка.СчетФактураПолученныйАванс") Тогда
			УчетНДСУПСлужебный.СформироватьЗаданияПоДокументамСчетФактураПолученныйАванс(МассивСсылок);
		Иначе
			УчетНДСЛокализация.СформироватьЗаданияПоДокументам(СтрокаТипа.Тип, МассивСсылок);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует записи в регистр заданий по учету НДС, при изменении записей в контрольных регистрах.
//
// Параметры:
//  Документ - ДокументОбъект - регистратор движений регистров
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицы изменений регистров.
//
Процедура ОтразитьЗаписиРегистраЗаданияКФормированиюДвиженийПоНДС(Документ, МенеджерВременныхТаблиц) Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда // задания устанавливаются только в главном узле.
		Возврат;
	КонецЕсли;
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("УчетНДСУП.ОтразитьЗаписиРегистраЗаданияКФормированиюДвиженийПоНДС");
	
	ШаблонЗапросаВыборки = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Месяц        КАК Месяц,
	|	Таблица.Организация  КАК Организация,
	|	Таблица.СчетФактура  КАК СчетФактура
	|ИЗ
	|	&ВременнаяТаблица КАК Таблица
	|";
	
	МассивЗапросовВыборкиЗаданий = Новый Массив;
	МассивЗапросовУничтоженияВт = Новый Массив;	
	
	Для каждого ВременнаяТаблица Из МенеджерВременныхТаблиц.Таблицы Цикл
		
		Если СтрНайти(ВременнаяТаблица.ПолноеИмя, "_ЗаданияКФормированиюДвиженийПоНДС") > 0 Тогда
			Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, ВременнаяТаблица.ПолноеИмя) Тогда
				ТекстЗапроса = СтрЗаменить(ШаблонЗапросаВыборки, "&ВременнаяТаблица", ВременнаяТаблица.ПолноеИмя);
				МассивЗапросовВыборкиЗаданий.Добавить(ТекстЗапроса);
				
				ТекстЗапросаУничтожения = СтрЗаменить("УНИЧТОЖИТЬ &ВременнаяТаблица", "&ВременнаяТаблица", ВременнаяТаблица.ПолноеИмя);
				МассивЗапросовУничтоженияВт.Добавить(ТекстЗапросаУничтожения);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивЗапросовВыборкиЗаданий.Количество() > 0 Тогда
		
		ТекстЗапросаВыборки = СтрСоединить(МассивЗапросовВыборкиЗаданий, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		ТекстЗапросаУничтоженияВт = СтрСоединить(МассивЗапросовУничтоженияВт, ОбщегоНазначения.РазделительПакетаЗапросов());
		
		МассивТекстовЗапроса = Новый Массив();
		МассивТекстовЗапроса.Добавить(ТекстЗапросаВыборки);
		МассивТекстовЗапроса.Добавить(ТекстЗапросаУничтоженияВт);
		ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
		
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписьРегистра(
					Выборка.Месяц,
					Выборка.СчетФактура,
					Выборка.Организация);
			КонецЦикла;
			
		КонецЕсли;

	КонецЕсли;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

// Дополняет текст запроса механизма формирования заданий закрытия месяца.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 	ТекстЗапроса - Строка - строка с текстом запроса.
// 	ТекстЗапросаВременныхТаблиц - Строка - строка с текстом запроса временных таблиц.
// 	ИменаВременныхТаблиц - Строка - массив имен создаваемых временных таблиц для последующего уничтожения.
//	ИсточникСвойствДокумента - ДокументОбъект, Структура - проводимый документ или результат функции ПроведениеДокументов.ЭмуляцияДокумента() для пакетного формирования заданий
Процедура ДополнитьТекстЗапросаЗаданийКЗакрытиюМесяца(Запрос, ТекстЗапроса, ТекстЗапросаВременныхТаблиц, ИменаВременныхТаблиц, ИсточникСвойствДокумента) Экспорт
	
	
	СоответствиеЗапросов = УчетНДСУПСлужебный.СоответствиеЗапросовКонтрольнымРегистрам(Запрос);
	
	Для Каждого ЭлементСоответствия Из СоответствиеЗапросов Цикл
		ЗакрытиеМесяцаСервер.ДополнитьНазванияТаблицДляЗаданий(Запрос, ЭлементСоответствия.Ключ);
		ЗакрытиеМесяцаСервер.ДополнитьТекстЗапросаЗаданий(ЭлементСоответствия.Ключ,
			ЭлементСоответствия.Значение,
			Запрос.МенеджерВременныхТаблиц.Таблицы,
			ТекстЗапроса,
			ТекстЗапросаВременныхТаблиц,
			ИменаВременныхТаблиц);
	КонецЦикла;
	
КонецПроцедуры

// Выполняет доп. обработку заданий к закрытию месяца перед записью.
//
// Параметры:
// 	Месяц - Дата - Месяц, на который формируется задание.
// 	Операция - ПеречислениеСсылка.ОперацииЗакрытияМесяца - Операция закрытия месяца, на выполнение которой формируется задание.
// 	Организация - СправочникСсылка.Организации - Организация, по которой формируется задание.
// 	Документ - ДокументСсылка - Документ, проведение которого инициирует задание.
//
Процедура ПередЗаписьюЗаданияКЗакрытиюМесяца(Месяц, Операция, Организация, Документ) Экспорт
	
	УчетНДСЛокализация.ПередЗаписьюЗаданияКЗакрытиюМесяца(Месяц, Операция, Организация, Документ);
		
КонецПроцедуры

#КонецОбласти

#Область ПрочийИнтерфейсФормированияЗаданий

// Возвращает таблицу описания изменений расчетов для формирования заданий на отражение в учете НДС
//
// Возвращаемое значение:
//   ТаблицаЗначений   - таблица значений с колонками:
//     * Документ - ДокументСсылка - документ оплаты, расчетный документ, по которому оформлен счет-фактура
//     * Период - Дата - период изменений состояния расчетов по документу
//     * Контрагент - СправочникСсылка.Контрагенты - контрагент, по которому изменились расчеты.
//     * Организация - СправочникСсылка.Организации - организация, по которой изменились расчеты.
//
Функция НоваяТаблицаИзмененийРасчетов() Экспорт
	
	ТаблицаИзменений = Новый ТаблицаЗначений;
	ТаблицаИзменений.Колонки.Добавить("Документ", Документы.ТипВсеСсылки());
	ТаблицаИзменений.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаИзменений.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаИзменений.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	Возврат ТаблицаИзменений;
	
КонецФункции // НоваяТаблицаИзмененийРасчетов()

// Выполняет отражение в учете НДС изменение состояния взаиморасчетов с поставщиками.
//
// Параметры:
// 	ТаблицаИзменений - ТаблицаЗначений - таблица значений с колонками:
//		* Документ - ДокументСсылка - документ, по которому изменилось состояние взаиморасчетов
//		* Период - Дата - период изменения
//
Процедура ОтразитьВУчетеНДСИзменениеРасчетовСПоставщиками(ТаблицаИзменений) Экспорт
	
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Документы.СчетФактураПолученныйАванс.СформироватьЗаданияКФормированиюДвиженийПоНДС(ТаблицаИзменений);
	УчетНДСЛокализация.ОтразитьВУчетеНДСИзменениеРасчетовСПоставщиками(ТаблицаИзменений);
	
КонецПроцедуры

// Выполняет отражение в учете НДС изменение состояния взаиморасчетов с клиентами.
//
// Параметры:
// 	ТаблицаИзменений - ТаблицаЗначений - таблица значений с колонками:
//		* Документ - ДокументСсылка - документ, по которому изменилось состояние взаиморасчетов
//		* Период - Дата - период изменения
//
Процедура ОтразитьВУчетеНДСИзменениеРасчетовСКлиентами(ТаблицаИзменений) Экспорт
	
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Документы.СчетФактураВыданныйАванс.СформироватьЗаданияКФормированиюДвиженийПоНДС(ТаблицаИзменений);
	
	УчетНДСЛокализация.ОтразитьВУчетеНДСИзменениеРасчетовСКлиентами(ТаблицаИзменений);
	
КонецПроцедуры

// Выполняет отражение в учете НДС изменение состояния расчетов по финансовым инструментам.
//
// Параметры:
// 	ТаблицаИзменений - ТаблицаЗначений - таблица значений с колонками:
//		* Документ - ДокументСсылка - документ, по которому изменилось состояние расчетов
//		* Период - Дата - период изменения
//
Процедура ОтразитьВУчетеНДСИзменениеРасчетовПоФинансовымИнструментам(ТаблицаИзменений) Экспорт
	
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Документы.СчетФактураПолученныйАванс.СформироватьЗаданияКФормированиюДвиженийПоНДС(ТаблицаИзменений);
	
	УчетНДСЛокализация.ОтразитьВУчетеНДСИзменениеРасчетовПоФинансовымИнструментам(ТаблицаИзменений);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ВыполнениеРегламентныхОпераций

// Выполняет отражение документов в учете НДС.
// 
// Параметры:
// 	 КонецПериода - Дата - Период, по который необходимо выполнить отражение.
// 	 МассивСсылок - Массив из ДокументСсылка - Документы, которые необходимо отразить в учете НДС.
//
Процедура ОтразитьДокументыВУчетеНДС(Знач КонецПериода, Знач МассивСсылок) Экспорт
	
	СчетаФактуры = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаФактуры, МассивСсылок);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.СчетФактура КАК СчетФактура
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|ГДЕ
	|	НДСПредъявленный.Регистратор В (&МассивСсылок)
	|	И НДСПредъявленный.СчетФактура <> НДСПредъявленный.Регистратор";
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	РезультатЗапроса = Запрос.Выполнить();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаФактуры, РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("СчетФактура"));
	
	УчетНДСЛокализация.ДополнитьСчетаФактурыКОтражениюВУчетеНДС(СчетаФактуры, МассивСсылок);
	
	Если СчетаФактуры.Количество() > 0 Тогда
		УчетНДСУПСлужебный.ВыполнитьЗаданияКФормированиюДвиженийПоНДС(КонецМесяца(КонецПериода), Неопределено, СчетаФактуры);
	КонецЕсли;
	
КонецПроцедуры

// Отражает документы в учете НДС, если есть задания.
//
// Параметры:
// 	КонецПериода - Дата - Период, по который необходимо выполнить задания.
// 	Организация - СправочникСсылка.Организации, Массив из СправочникСсылка.Организации - Организация или массив организаций для отбора заданий.
// 	СчетаФактуры - ДокументСсылка, Массив из ДокументСсылка - Документ учета НДС или массив документов, по которым необходимо выполнить задания.
//
Процедура ВыполнитьФормированиеДвиженийПоНДС(КонецПериода, Организация = Неопределено, СчетаФактуры = Неопределено) Экспорт
	
	Если Организация <> Неопределено Тогда
		МассивОрганизаций = ОбщегоНазначенияУТКлиентСервер.Массив(Организация);
	Иначе
		МассивОрганизаций = Неопределено;
	КонецЕсли;
	
	Если СчетаФактуры <> Неопределено Тогда
		МассивСчетовФактур = ОбщегоНазначенияУТКлиентСервер.Массив(СчетаФактуры);
	Иначе
		МассивСчетовФактур = Неопределено;
	КонецЕсли;
	
	УчетНДСУПСлужебный.ВыполнитьЗаданияКФормированиюДвиженийПоНДС(КонецПериода, МассивОрганизаций, МассивСчетовФактур);
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеДокументовДляЖурналов

// Добавляет в переданную таблицу хозяйственные операции и документы учета НДС для журнала документов Закупки
//
// Параметры:
//  ХозяйственныеОперацииИДокументы - см. ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы
//
Процедура ОписаниеОперацийИТиповДокументовДляЖурналаДокументовЗакупки(ХозяйственныеОперацииИДокументы) Экспорт
	
	// ЗаявлениеОВвозе
	
	СтрокаЗаявлениеОВвозеТоваров = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаЗаявлениеОВвозеТоваров;
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров");
	Строка.ПолноеИмяДокумента			= "Документ.ЗаявлениеОВвозеТоваров";
	Строка.КлючНазначенияИспользования 	= "ЗаявленияОВвозеТоваров";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки (заявления о ввозе)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.ЗаявлениеОВвозеТоваров";
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаЗаявлениеОВвозеТоваров);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаЗаявлениеОВвозеТоваров);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки;
	
	УчетНДСЛокализация.ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовЗакупки(ХозяйственныеОперацииИДокументы);
	
КонецПроцедуры

// Добавляет в переданную таблицу хозяйственные операции и документы учета НДС для журнала документов Продажи
//
// Параметры:
//  ТЗХозОперацииИТипыДокументов - см. ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы
//
Процедура ОписаниеОперацийИТиповДокументовДляЖурналаДокументовПродажи(ТЗХозОперацииИТипыДокументов) Экспорт
	
	УчетНДСЛокализация.ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПродажи(ТЗХозОперацииИТипыДокументов);

КонецПроцедуры

// Добавляет в переданную таблицу хозяйственные операции и документы учета НДС для журнала документов переработки 2.4
//
// Параметры:
//  ТЗХозОперацииИТипыДокументов - см. ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы
//
Процедура ОписаниеОперацийИТиповДокументовДляЖурналаДокументовПереработки(ТЗХозОперацииИТипыДокументов) Экспорт
	
	УчетНДСЛокализация.ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПереработки(ТЗХозОперацииИТипыДокументов);

КонецПроцедуры

// Добавляет в переданную таблицу хозяйственные операции и документы учета НДС для журнала документов передачи в переработку 2.5
//
// Параметры:
//  ТЗХозОперацииИТипыДокументов - ТаблицаЗначений - таблица операций журнала документа
//
Процедура ОписаниеОперацийИТиповДокументовДляЖурналаДокументовПередачиВПереработку2_5(ТЗХозОперацииИТипыДокументов) Экспорт
	
	УчетНДСЛокализация.ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПередачиВПереработку2_5(ТЗХозОперацииИТипыДокументов);
	
КонецПроцедуры


#КонецОбласти

#Область ПодключениеКБСП

// Параметры:
//  Объекты - Массив из ОбъектМетаданных.
//
Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт
	
	Объекты.Добавить(Метаданные.Документы.СписаниеНДСНаРасходы);
	Объекты.Добавить(Метаданные.Документы.РаспределениеНДС);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйАванс);
	Объекты.Добавить(Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	
	УчетНДСЛокализация.ОпределитьОбъектыСКомандамиОтчетов(Объекты);

КонецПроцедуры

// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов
// 
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	Отчеты.АнализНачисленийНДССАвансовПолученных.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализУчетаНДСПриЗачетеАвансовПолученных.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализУчетаНДСПриЗачетеАвансовВыданных.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОборотыПоНДС.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоНДСПредъявленному.НастроитьВариантыОтчета(Настройки);
		
	УчетНДСЛокализация.НастроитьВариантыОтчетов(Настройки);
	
КонецПроцедуры

// См. ДатыЗапретаИзмененияПереопределяемый.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения
//
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
									
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.РегистрыНакопления.НДСПредъявленный.ПолноеИмя(),
										"Период",
										"ФинансовыйКонтур",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.РегистрыНакопления.НДСАвансыВыданные.ПолноеИмя(),
										"Период",
										"ФинансовыйКонтур",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.РегистрыНакопления.НДСАвансыПолученные.ПолноеИмя(),
										"Период",
										"ФинансовыйКонтур",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.РегистрыНакопления.ДвиженияПоНДС.ПолноеИмя(),
										"Период",
										"ФинансовыйКонтур",
										"Организация");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.СписаниеНДСНаРасходы.ПолноеИмя(),
										"Дата",
										"РегламентныеОперации",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.РаспределениеНДС.ПолноеИмя(),
										"Дата",
										"РегламентныеОперации",
										"Организация");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.СчетФактураВыданныйАванс.ПолноеИмя(),
										"ДатаПолученияАванса",
										"Продажи",
										"Организация");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.СчетФактураПолученныйАванс.ПолноеИмя(),
										"ДатаОтраженияВРеглУчете",
										"Закупки",
										"Организация");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.НачислениеРеверсивногоНДС.ПолноеИмя(),
										"Дата",
										"Закупки",
										"Организация");

	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ЗаявлениеОВвозеТоваров.ПолноеИмя(),
										"Дата",
										"Закупки",
										"Организация");
	
	УчетНДСЛокализация.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных);

КонецПроцедуры

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту
//	
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	УчетНДСЛокализация.ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды);
	
КонецПроцедуры

//
// Параметры:
//  Объекты - Массив из ОбъектМетаданных
//
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт
	
	Объекты.Добавить(Метаданные.Документы.РаспределениеНДС);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйАванс);
	Объекты.Добавить(Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	
	УчетНДСЛокализация.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты)
	
КонецПроцедуры

// Определяет объекты конфигурации, в модулях менеджеров которых размещена процедура ДобавитьКомандыПечати,
// формирующая список команд печати, предоставляемых этим объектом.
// Синтаксис процедуры ДобавитьКомандыПечати см. в документации к подсистеме.
//
// Параметры:
//  СписокОбъектов - Массив из ДокументОбъект - менеджеры объектов с процедурой ДобавитьКомандыПечати.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.СписаниеНДСНаРасходы);
	СписокОбъектов.Добавить(Документы.РаспределениеНДС);
	СписокОбъектов.Добавить(Документы.СчетФактураВыданныйАванс);
	СписокОбъектов.Добавить(Документы.СчетФактураПолученныйАванс);
	СписокОбъектов.Добавить(Документы.ЗаявлениеОВвозеТоваров);
	
	УчетНДСЛокализация.ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов);
	
КонецПроцедуры

// Переопределяет список команд печати, получаемый функцией УправлениеПечатью.КомандыПечатиФормы.
// Используется для общих форм, у которых нет модуля менеджера для размещения в нем процедуры ДобавитьКомандыПечати,
// для случаев, когда штатных средств добавления команд в такие формы недостаточно. Например, если нужны свои команды,
// которых нет в других объектах.
// 
// Параметры:
//  ИмяФормы             - Строка - полное имя формы, в которой добавляются команды печати;
//  КомандыПечати        - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//  СтандартнаяОбработка - Булево - при установке значения Ложь не будет автоматически заполняться коллекция КомандыПечати.
//
Процедура ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка) Экспорт
	
	УчетНДСЛокализация.ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка);
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа
//
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Документы.СписаниеНДСНаРасходы, Истина);
	Списки.Вставить(Метаданные.Документы.РаспределениеНДС, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураВыданныйАванс, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученныйАванс, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаявлениеОВвозеТоваров, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.НДСАвансыВыданные, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.НДСАвансыПолученные, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.НДСПредъявленный, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ДвиженияПоНДС, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураВыданныйАвансПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураПолученныйАвансПрисоединенныеФайлы, Истина);
	
	УчетНДСЛокализация.ПриЗаполненииСписковСОграничениемДоступа(Списки);
	
КонецПроцедуры

#КонецОбласти

// Возвращает структуру регистров учета НДС
// 
// Возвращаемое значение:
// 	Структура - Структура регистров НДС, где:
// 	     * Ключ - Строка - Имя регистра
// 	     * Значение - РегистрНакопленияНаборЗаписей - Набор записей регистра.
Функция РегистрыУчетаНДС() Экспорт
	
	РегистрыНДС = Новый Структура();
	РегистрыНДС.Вставить(Метаданные.РегистрыНакопления.НДСПредъявленный.Имя, РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей());
	РегистрыНДС.Вставить(Метаданные.РегистрыНакопления.НДСАвансыВыданные.Имя, РегистрыНакопления.НДСАвансыВыданные.СоздатьНаборЗаписей());
	РегистрыНДС.Вставить(Метаданные.РегистрыНакопления.НДСАвансыПолученные.Имя, РегистрыНакопления.НДСАвансыПолученные.СоздатьНаборЗаписей());
	РегистрыНДС.Вставить(Метаданные.РегистрыНакопления.ПартииНДСКРаспределению.Имя, РегистрыНакопления.ПартииНДСКРаспределению.СоздатьНаборЗаписей());
	РегистрыНДС.Вставить(Метаданные.РегистрыНакопления.ДвиженияПоНДС.Имя, РегистрыНакопления.ДвиженияПоНДС.СоздатьНаборЗаписей());
	
	УчетНДСЛокализация.ДополнитьРегистрыУчетаНДС(РегистрыНДС);
	
	Возврат РегистрыНДС;
	
КонецФункции

// Возвращает регистры учета НДС, которые могут быть использованы в качестве источник данных по хоз. операциям в МФУ и Бюджетировании.
// 
// Возвращаемое значение:
// 	СписокЗначений из ОбъектМетаданных
//
Функция ИсточникиДанныхХозяйственныхОпераций() Экспорт
	
	РегистрыНДС = Новый СписокЗначений();
	РегистрыНДС.Добавить(Метаданные.РегистрыНакопления.НДСАвансыПолученные.Имя, Метаданные.РегистрыНакопления.НДСАвансыПолученные.Синоним);
	РегистрыНДС.Добавить(Метаданные.РегистрыНакопления.НДСАвансыВыданные.Имя, Метаданные.РегистрыНакопления.НДСАвансыВыданные.Синоним);
	РегистрыНДС.Добавить(Метаданные.РегистрыНакопления.ДвиженияПоНДС.Имя, Метаданные.РегистрыНакопления.ДвиженияПоНДС.Синоним);
	Возврат РегистрыНДС;
	
КонецФункции

// Возвращает отбор для списка подбора номенклатуры в соответствии с налогообложением операции 
// 
// Параметры:
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - налогообложение операции, в рамках которой производится подбор
// 
// Возвращаемое значение:
// 	Массив из Структура - массив структур отбора для справочника Номенклатура:
// 	* Реквизит - Строка
// 	* ВидСравнения - ВидСравненияКомпоновкиДанных
// 	* Значение - ПеречислениеСсылка.ТипыНалогообложенияНДС
//
Функция ОграничениеТоваровПоНалогообложению(НалогообложениеНДС) Экспорт
	
	Ограничения = Новый Массив;
	
	УчетНДСЛокализация.ДополнитьОграничениеТоваровПоНалогообложению(Ограничения, НалогообложениеНДС);
	
	Возврат Ограничения;
	
КонецФункции

// Формирует описание технологических параметров.
// 
// Возвращаемое значение:
// 	ТаблицаЗначений:
//  * Имя - Строка -
//  * Наименование - Строка -
//  * Описание - Строка -
//  * СтарыеИмена - Строка -
//  * Родитель - Строка -
//  * ТипЗначения - ОписаниеТипов -
//  * ДиапазонС - Число, Дата -
//  * ДиапазонПо - Число, Дата -
//  * Скрыть - Булево -
//  * ЗначениеПоУмолчанию - Произвольный -
//  * ДополнительныеСвойства - Произвольный -
// 
Функция ОписаниеПараметровОперацииЗакрытияМесяца() Экспорт
	
	ОписаниеПараметров = Константы.НастройкиЗакрытияМесяца.СоздатьМенеджерЗначения().ИнициализироватьОписаниеПараметровОперации();
	
	ОписаниеПараметра = ОписаниеПараметров.Добавить();
	ОписаниеПараметра.Имя 				  = "КоличествоЗаданийДляРасчетаНДС";
	ОписаниеПараметра.Наименование 		  = НСтр("ru = 'Количество заданий для порционного расчета НДС'");
	ОписаниеПараметра.ТипЗначения   	  = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеПараметра.ДиапазонС     	  = 100;
	ОписаниеПараметра.ЗначениеПоУмолчанию = 1000;
	ОписаниеПараметра.Описание =
		НСтр("ru = 'Расчет НДС в закрытии месяца выполняется не для всех заданий разом, а обсчитываются отдельные порции.
              |По сути это запросы в цикле, поэтому снижается производительность. Зато критично уменьшается требуемый объем памяти сервера для расчета.
              |Можно увеличить размер порции расчета, чтобы найти компромисс между памятью сервера и длительностью расчета этапа.'");
	
	ОписаниеПараметра = ОписаниеПараметров.Добавить();
	ОписаниеПараметра.Имя 				  = "ПорогСписанияПогрешностейОкругления";
	ОписаниеПараметра.Наименование 		  = НСтр("ru = 'Порог списания погрешностей округления'");
	ОписаниеПараметра.ТипЗначения   	  = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(3, 2, ДопустимыйЗнак.Неотрицательный));
	ОписаниеПараметра.ДиапазонС     	  = 0;
	ОписаниеПараметра.ЗначениеПоУмолчанию = 0;
	ОписаниеПараметра.Описание =
		НСтр("ru = 'При расчете партий НДС могут возникать погрешности округления, из-за которых в регистре “НДС предъявленный” могут оставаться копеечные остатки.
              |Если указать ненулевой порог списания погрешности округления, то все остатки в пределах этого порога будут списаны на расходы на статью “Отклонение в стоимости товаров”.
              |Если порог равен нулю, то операция списания погрешностей округления не выполняется.'");
	
	Возврат ОписаниеПараметров;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
