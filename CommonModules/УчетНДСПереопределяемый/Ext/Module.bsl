////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции формирования отчетности по НДС.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РасширенныйНалоговыйПериод

// Определяет нужно или нет представлять отчетность за квартал, внутри которого находится переданная дата.
// Параметры:
//  Организация - СправочникСсылка.Организации - организация
//  Период      - Дата - на которую определяется необходимость представления отчетности по НДС.
//
// Возвращаемое значение:
//  Булево - Истина - отчетность по НДС необходимо представить,
//           Ложь   - отчетность по НДС не представляется.
Функция ОтчетностьПоНДСПредставляется(Организация, Период) Экспорт
	
	БлижайшийНалоговыйПериод = БлижайшийНалоговыйПериод(
		Организация,
		Период);
	
	Возврат БлижайшийНалоговыйПериод.Конец = КонецДня(КонецКвартала(Период));

КонецФункции

// Определяет соответствие выбранного в отчете периода налоговому.
// Параметры:
//  Организация   - СправочникСсылка.Организация - организация, для которой определяется налоговый период,
//  НачалоПериода - Дата - начало периода отчета,
//  КонецПериода  - Дата - конец периода отчета.
//
// Возвращаемое значение:
//  Булево - Истина - период соответствует налоговому, можно формировать отчет по стандартной форме (с шапкой и подписями)
//           Ложь   - период не соответствует налоговому, отчет формируется без шапки и подписей.
Функция ПериодОтчетаСоответствуетНалоговому(Организация, НачалоПериода, КонецПериода) Экспорт
	
	БлижайшийНалоговыйПериод = БлижайшийНалоговыйПериод(
		Организация,
		КонецПериода);
		
	Возврат БлижайшийНалоговыйПериод.Начало = НачалоПериода
	      И БлижайшийНалоговыйПериод.Конец = КонецДня(КонецПериода);
	
КонецФункции

// Определяет начало налогового периода по НДС.
// Параметры:
//  Организация - СправочникСсылка.Организации
//  Период      - Дата - внутри налогового периода, для которого необходимо определить начало.
//
// Возвращаемое значение:
//  Дата - начало налогового периода по НДС, если отчетность в данном периоде представляется
//         или начало квартала, если отчетность не представляется.
Функция НачалоНалоговогоПериода(Организация, Период) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("РегламентированнаяОтчетность") Тогда
		ИмяПеречисленияБРО = "ВариантыРасширенногоПервогоНалоговогоПериода";
		МодульИнтерфейсыВзаимодействияБРО = ОбщегоНазначения.ОбщийМодуль("ИнтерфейсыВзаимодействияБРО");
		НачалоНалоговогоПериода = МодульИнтерфейсыВзаимодействияБРО.НачалоНалоговогоПериода(
			Организация,
			Период,
			Перечисления[ИмяПеречисленияБРО].РегистрацияВПоследние10ДнейКвартала,
			Перечисления.Периодичность.Квартал);
	Иначе
		НачалоНалоговогоПериода = '0001-01-01';
	КонецЕсли;
		
	Если ЗначениеЗаполнено(НачалоНалоговогоПериода) Тогда
		Возврат НачалоНалоговогоПериода;
	Иначе
		Возврат НачалоКвартала(Период);
	КонецЕсли;
	
КонецФункции

// Определяет, находятся ли переданные даты внутри одного налогового периода по НДС.
// Параметры:
//  Организация   - СправочникСсылка.Организация - организация.
//  НачалоПериода - Дата - начало периода отчета.
//  КонецПериода  - Дата - конец периода отчета.
//
// Возвращаемое значение:
//  Булево - Истина - переданные даты находятся внутри одного налогового периода,
//           Ложь   - даты расположены в разных налоговых периодах.
Функция ДатыРасположеныВнутриОдногоНалоговогоПериода(Организация, НачалоПериода, КонецПериода) Экспорт
	
	БлижайшийНалоговыйПериод = БлижайшийНалоговыйПериод(
		Организация,
		КонецПериода);
		
	Если КонецДня(КонецКвартала(КонецПериода)) < БлижайшийНалоговыйПериод.Конец Тогда
		// Учет еще не ведется, необходимо просто проверить, что даты находятся в одном квартале.
		Возврат НачалоКвартала(НачалоПериода) = НачалоКвартала(НачалоПериода);
	КонецЕсли;
		
	Возврат БлижайшийНалоговыйПериод.Начало <= НачалоПериода
	        И КонецДня(КонецПериода) <= БлижайшийНалоговыйПериод.Конец;
	
КонецФункции

// Возвращает ближайший налоговый период.
// См. Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.БлижайшийНалоговыйПериод.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация.
//	Период - Дата - Дата периода.
//
// Возвращаемое значение:
//	Структура - Содержит ключи:
//    * Период - Дата - стандартное начало налогового периода (например, 01 июля для третьего квартала);
//    * Начало - Дата - фактическое начало налогового периода (может совпадать со стандартным началом или
//               датой регистрации организации;
//    * Конец  - Дата - дата с указанием времени.
// 
Функция БлижайшийНалоговыйПериод(Организация, Период) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("РегламентированнаяОтчетность") Тогда
		ИмяПеречисленияБРО = "ВариантыРасширенногоПервогоНалоговогоПериода";
		МодульИнтерфейсыВзаимодействияБРО = ОбщегоНазначения.ОбщийМодуль("ИнтерфейсыВзаимодействияБРО");
		Результат = МодульИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод(
			Организация,
			Период,
			Перечисления[ИмяПеречисленияБРО].РегистрацияВПоследние10ДнейКвартала,
			Перечисления.Периодичность.Квартал);
	Иначе
		Результат = Новый Структура;
		Результат.Вставить("Период", НачалоКвартала(Период));
		Результат.Вставить("Начало", НачалоКвартала(Период));
		Результат.Вставить("Конец",  КонецКвартала(Период));
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбщиеПроцедурыИФункцииОтчетов

Процедура ФормаОтчетаПриСозданииНаСервере(Форма) Экспорт
	
	Отчет = Форма.Отчет;
	
	Если НЕ ЗначениеЗаполнено(Отчет.Организация) Тогда
		Отчет.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Отчет.КонецПериода) Тогда
		Отчет.КонецПериода = КонецКвартала(ОбщегоНазначения.ТекущаяДатаПользователя());
		Если НЕ ЗначениеЗаполнено(Отчет.НачалоПериода) Тогда
			// В случае расширенного налогового периода необходимо правильно указать дату начала.
			Отчет.НачалоПериода = НачалоНалоговогоПериода(
				Отчет.Организация, Отчет.КонецПериода);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Отчет.НачалоПериода) Тогда
		Отчет.НачалоПериода = НачалоКвартала(ОбщегоНазначения.ТекущаяДатаПользователя());
	КонецЕсли;
	
	УчетНДСКлиентСервер.ОтобразитьПоясненияКПериодуОтчета(Форма);

	БухгалтерскиеОтчетыПереопределяемый.ПриСозданииНаСервере(Форма);

КонецПроцедуры

Процедура ФормаОтчетаОбработатьВыборПериода(Форма) Экспорт
	
	Отчет = Форма.Отчет;
	
	Если НачалоКвартала(Отчет.КонецПериода) = Отчет.НачалоПериода
		И КонецКвартала(Отчет.КонецПериода) = КонецДня(Отчет.КонецПериода) Тогда
		// Выбран квартал. В случае расширенного налогового периода необходимо правильно указать дату начала.
		Отчет.НачалоПериода = НачалоНалоговогоПериода(
			Отчет.Организация, Отчет.КонецПериода);
	КонецЕсли;
	
	УчетНДСКлиентСервер.ОтобразитьПоясненияКПериодуОтчета(Форма);
	
КонецПроцедуры

Процедура ДополнитьИнформациейОРНПТ(ДополнительнаяИнформация, СтруктураПараметров, Запрос, ПоискРНПТПоОснованию = Ложь) Экспорт


КонецПроцедуры

Процедура ДополнитьПокупкиИнформациейОНомерахДекларацийНаТовары(ДополнительнаяИнформация, СтруктураПараметров, Запрос) Экспорт
	
	УчетНДСРФ.ДополнитьПокупкиИнформациейОНомерахДекларацийНаТовары(ДополнительнаяИнформация, СтруктураПараметров, Запрос);

КонецПроцедуры

Процедура ДополнитьИнформациейОПосредникахИПлатежах(ДополнительнаяИнформация, СтруктураПараметров, Запрос) Экспорт

	ТекстЗапросаРеквизитыКонтрагентовДокументовОплаты = ТекстЗапросаРеквизитыКонтрагентовДокументовОплаты(Запрос);
	
	УчетНДСРФ.ДополнитьИнформациейОПосредникахИПлатежах(ДополнительнаяИнформация, СтруктураПараметров, Запрос, ТекстЗапросаРеквизитыКонтрагентовДокументовОплаты);

КонецПроцедуры

Процедура ДополнитьИнформациейОТНВЭД(ДополнительнаяИнформация, Запрос) Экспорт

	УчетНДСРФ.ДополнитьИнформациейОТНВЭД(ДополнительнаяИнформация, Запрос);

КонецПроцедуры

Процедура ДополнитьПродажиИнформациейОНомерахДекларацийНаТовары(ДополнительнаяИнформация, СтруктураПараметров, Запрос) Экспорт

	УчетНДСРФ.ДополнитьПродажиИнформациейОНомерахДекларацийНаТовары(ДополнительнаяИнформация, СтруктураПараметров, Запрос);

КонецПроцедуры

Процедура ПреобразоватьПоказателиРНПТКСторнирующейЗаписи(МассивСвРегНом) Экспорт
	
	УчетНДСРФ.ПреобразоватьПоказателиРНПТКСторнирующейЗаписи(МассивСвРегНом);
	
КонецПроцедуры

Функция ТекстЗапросаПодготовкаСведенийРНПТЖурнал() Экспорт
	
	Возврат УчетНДСРФ.ТекстЗапросаПодготовкаСведенийРНПТЖурнал();
	
КонецФункции

#КонецОбласти

#Область РаботаСоСчетамиФактурами

// Функция возвращает структуру реквизитов счета-фактуры для вывода в табличные документы книги покупок и книги продаж.
//
// Параметры:
// 	ЗаписьКниги - ВыборкаИзРезультатаЗапроса - Строка выборки, содержащая регистрационную запись книги покупок или продаж.
//
// Возвращаемое значение:
//	Структура - см. НовыйПредставлениеСчетаФактуры.
//
Функция ОпределитьДатуИНомерСчетаФактурыДляПечати(ЗаписьКниги) Экспорт

	ПредставлениеСчетаФактуры = НовыйПредставлениеСчетаФактуры();

	Если Не ЗначениеЗаполнено(ЗаписьКниги.СчетФактура) Тогда
		Возврат ПредставлениеСчетаФактуры;
	КонецЕсли;

	ДатаСФ 	= "";
	НомерСФ = "";
	
	Если ЗначениеЗаполнено(ЗаписьКниги.ДатаСчетаФактуры) И ЗначениеЗаполнено(ЗаписьКниги.НомерСчетаФактуры) Тогда

		Если ЗаписьКниги.ОбрабатыватьНомерДокумента Тогда
			НомерСФ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ЗаписьКниги.НомерСчетаФактуры, Истина, Ложь);
		Иначе
			НомерСФ = СокрЛП(ЗаписьКниги.НомерСчетаФактуры);
		КонецЕсли;
		ДатаСФ	= Формат(ЗаписьКниги.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy") ;
		
		Если ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров")
			И ЗаписьКниги.ОбрабатыватьНомерДокумента Тогда
			
			НомерСФ = ?(ЗначениеЗаполнено(ДатаСФ), "Заявление № ", "") + НомерСФ;
			Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
				НСтр("ru = 'Заявление о ввозе товаров'"), НомерСФ, ДатаСФ);
		
		ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") Тогда
			
			ПредставлениеСчетаФактуры.Дата          = ДатаСФ;
			ПредставлениеСчетаФактуры.Номер         = НомерСФ;
			ПредставлениеСчетаФактуры.НомерДата     = НомерСФ;
			ПредставлениеСчетаФактуры.ДатаНомер     = НомерСФ;
			ПредставлениеСчетаФактуры.Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
				НСтр("ru = 'Таможенная декларация'"), НомерСФ, ДатаСФ);
			ПредставлениеСчетаФактуры.НомерОтДата   = НомерСФ;
			Возврат ПредставлениеСчетаФактуры;
			
		Иначе
			Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
				Если ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураВыданный")
					ИЛИ ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураВыданныйАванс")
					ИЛИ ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураНалоговыйАгент")
					ИЛИ ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураНаНеподтвержденнуюРеализацию0") Тогда
					Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
						НСтр("ru = 'Счет-фактура выданный'"),
						НомерСФ,
						ДатаСФ);
				ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураПолученный")
					ИЛИ ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент")
					ИЛИ ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураПолученныйАванс") Тогда
					Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
						НСтр("ru = 'Счет-фактура полученный'"),
						НомерСФ,
						ДатаСФ);
				ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СводнаяСправкаНДС") Тогда
					Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
						НСтр("ru = 'Сводная справка'"),
						НомерСФ,
						ДатаСФ);
				ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.ИнойДокументПодтвержденияНДС") Тогда
					РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗаписьКниги.СчетФактураДокумент, 
						"ДатаВходящегоДокумента, НомерВходящегоДокумента, НаименованиеДокумента");
					Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 № %2 от %3'"),
						РеквизитыДокумента.НаименованиеДокумента,
						РеквизитыДокумента.НомерВходящегоДокумента,
						РеквизитыДокумента.ДатаВходящегоДокумента);
				Иначе
					ИмяДокумента = ЗаписьКниги.СчетФактураДокумент.Метаданные().Синоним;
					Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
						ИмяДокумента,
						НомерСФ,
						ДатаСФ);
				КонецЕсли;
			Иначе
				ИмяДокумента = ЗаписьКниги.СчетФактура.Метаданные().Синоним;
				Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
					ИмяДокумента,
					НомерСФ,
					ДатаСФ);
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли ЗаписьКниги.СводныйКорректировочный Тогда
		// Если для сводного корректировочного счета-фактуры не указаны номер и дата,
		// значит он регистрируется по постановлению № 981 без указания данных граф в книгах.
		Возврат ПредставлениеИсправленногоКорректировочногоСчетаФактуры(ПредставлениеСчетаФактуры, ЗаписьКниги);

	Иначе
	
		Если ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный")
			ИЛИ ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданныйАванс")
			ИЛИ ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураНалоговыйАгент")
			ИЛИ ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураНаНеподтвержденнуюРеализацию0") Тогда
			
			РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗаписьКниги.СчетФактура, "Дата, Номер");
			
			ДатаСФ  = Формат(РеквизитыДокумента.Дата, "ДФ=dd.MM.yyyy");
			НомерСФ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Номер, Истина, Истина);
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 № %2 от %3'"),
				НСтр("ru = 'Счет-фактура выданный'"),
				НомерСФ,
				ДатаСФ);
		ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураПолученный")
			ИЛИ ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент")
			ИЛИ ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураПолученныйАванс") Тогда

			РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗаписьКниги.СчетФактураДокумент, "Дата, Номер");
			
			ДатаСФ  = Формат(РеквизитыДокумента.Дата, "ДФ=dd.MM.yyyy");
			НомерСФ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Номер, Истина, Истина);
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 № %2 от %3'"),
				НСтр("ru = 'Счет-фактура полученный'"),
				НомерСФ,
				ДатаСФ);
		ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.ИнойДокументПодтвержденияНДС") Тогда
			РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗаписьКниги.СчетФактураДокумент, 
				"ДатаВходящегоДокумента, НомерВходящегоДокумента, НаименованиеДокумента");
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 № %2 от %3'"),
				РеквизитыДокумента.НаименованиеДокумента,
				РеквизитыДокумента.НомерВходящегоДокумента,
				РеквизитыДокумента.ДатаВходящегоДокумента);
		ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") Тогда

			ДатаГТД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаписьКниги.СчетФактураДокумент, "Дата");
			
			ПредставлениеСчетаФактуры.Дата          = ДатаГТД;
			ПредставлениеСчетаФактуры.Номер         = ЗаписьКниги.НомерСчетаФактуры;
			ПредставлениеСчетаФактуры.НомерДата     = ЗаписьКниги.НомерСчетаФактуры;
			ПредставлениеСчетаФактуры.ДатаНомер     = ЗаписьКниги.НомерСчетаФактуры;
			ПредставлениеСчетаФактуры.Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
				НСтр("ru = 'Таможенная декларация'"), ЗаписьКниги.НомерСчетаФактуры, Формат(ДатаГТД, "ДФ=dd.MM.yyyy"));
			ПредставлениеСчетаФактуры.НомерОтДата   = ЗаписьКниги.НомерСчетаФактуры;
			Возврат ПредставлениеСчетаФактуры;
			
		ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.ЗаписьКнигиПокупок") 
			И НЕ ЗначениеЗаполнено(ДатаСФ) Тогда
			
			ПредставлениеСчетаФактуры.Номер     	= ЗаписьКниги.НомерСчетаФактуры;
			ПредставлениеСчетаФактуры.НомерДата 	= ЗаписьКниги.НомерСчетаФактуры;
			ПредставлениеСчетаФактуры.ДатаНомер 	= ЗаписьКниги.НомерСчетаФактуры;
			ПредставлениеСчетаФактуры.Представление = Представление;
			ПредставлениеСчетаФактуры.НомерОтДата   = ЗаписьКниги.НомерСчетаФактуры;
			Возврат ПредставлениеСчетаФактуры;
			
		КонецЕсли;
		
	КонецЕсли;

	Если ЗначениеЗаполнено(СокрЛП(НомерСФ)) Тогда
		ПредставлениеСчетаФактуры.ДатаНомер   = СтрШаблон(НСтр("ru = '%1;%2'"), ДатаСФ, НомерСФ);
		ПредставлениеСчетаФактуры.НомерДата   = СтрШаблон(НСтр("ru = '%1;%2'"), НомерСФ, ДатаСФ);
		ПредставлениеСчетаФактуры.НомерОтДата = СтрШаблон(НСтр("ru = '%1 от %2'"), НомерСФ, ДатаСФ);
	КонецЕсли;
	
	ПредставлениеСчетаФактуры.Номер         = СокрЛП(НомерСФ);
	ПредставлениеСчетаФактуры.Дата          = ДатаСФ;
	ПредставлениеСчетаФактуры.Представление = Представление;
	
	Возврат ПредставлениеИсправленногоКорректировочногоСчетаФактуры(ПредставлениеСчетаФактуры, ЗаписьКниги);

КонецФункции

// Возвращает реквизиты счета-фактуры для формирования ее представления.
//
// Возвращаемое значение:
//	Структура -  см. Результат.
//
Функция НовыйПредставлениеСчетаФактуры() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("ДатаНомер"    , "");
	Результат.Вставить("НомерДата"    , "");
	Результат.Вставить("НомерОтДата"  , "");
	Результат.Вставить("Дата"         , "");
	Результат.Вставить("Номер"        , "");
	Результат.Вставить("Представление", "");
	
	Результат.Вставить("НомерДатаКорректировочный"  , "");
	Результат.Вставить("НомерОтДатаКорректировочный", "");
	Результат.Вставить("ДатаКорректировочный"       , "");
	Результат.Вставить("НомерКорректировочный"      , "");
	
	Результат.Вставить("НомерДатаИсправленный"  , "");
	Результат.Вставить("НомерОтДатаИсправленный", "");
	Результат.Вставить("ДатаИсправленный"       , "");
	Результат.Вставить("НомерИсправленный"      , "");
	
	Результат.Вставить("НомерДатаИсправленныйКорректировочный"  , "");
	Результат.Вставить("НомерОтДатаИсправленныйКорректировочный", "");
	Результат.Вставить("ДатаИсправленныйКорректировочный"       , "");
	Результат.Вставить("НомерИсправленныйКорректировочный"      , "");
	
	Возврат Результат;
	
КонецФункции

// Дополняет представление счета-фактуры данными о корректировочном счете-фактуре.
//
// Параметры:
//	ПредставлениеСчетаФактуры - см. НовыйПредставлениеСчетаФактуры.
// 	ЗаписьКниги - ВыборкаИзРезультатаЗапроса - Строка выборки, содержащая регистрационную запись книги покупок или продаж.
//
// Возвращаемое значение:
//	Структура - см. НовыйПредставлениеСчетаФактуры.
//
Функция ПредставлениеИсправленногоКорректировочногоСчетаФактуры(ПредставлениеСчетаФактуры, ЗаписьКниги) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(ЗаписьКниги.НомерКорректировки)) Тогда
		ПредставлениеСчетаФактуры.НомерКорректировочный = СокрЛП(ЗаписьКниги.НомерКорректировки);
		ПредставлениеСчетаФактуры.ДатаКорректировочный = Формат(ЗаписьКниги.ДатаКорректировки, "ДФ=dd.MM.yyyy");
		ПредставлениеСчетаФактуры.НомерДатаКорректировочный = СтрШаблон(НСтр("ru = '%1;%2'"), 
			ПредставлениеСчетаФактуры.НомерКорректировочный, ПредставлениеСчетаФактуры.ДатаКорректировочный);
		ПредставлениеСчетаФактуры.НомерОтДатаКорректировочный = СтрШаблон(НСтр("ru = '%1 от %2'"), 
			ПредставлениеСчетаФактуры.НомерКорректировочный, ПредставлениеСчетаФактуры.ДатаКорректировочный);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СокрЛП(ЗаписьКниги.НомерИсправления)) Тогда
		Если ЗаписьКниги.ОбрабатыватьНомерДокумента Тогда 
			ПредставлениеСчетаФактуры.НомерИсправленный = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СокрЛП(ЗаписьКниги.НомерИсправления), Истина, Ложь);
		Иначе
			ПредставлениеСчетаФактуры.НомерИсправленный = СокрЛП(ЗаписьКниги.НомерИсправления);
		КонецЕсли;
		ПредставлениеСчетаФактуры.ДатаИсправленный = Формат(ЗаписьКниги.ДатаИсправления, "ДФ=dd.MM.yyyy");
		ПредставлениеСчетаФактуры.НомерДатаИсправленный = СтрШаблон(НСтр("ru = '%1;%2'"), 
			ПредставлениеСчетаФактуры.НомерИсправленный, ПредставлениеСчетаФактуры.ДатаИсправленный);
		ПредставлениеСчетаФактуры.НомерОтДатаИсправленный = СтрШаблон(НСтр("ru = '%1 от %2'"), 
			ПредставлениеСчетаФактуры.НомерИсправленный, ПредставлениеСчетаФактуры.ДатаИсправленный);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СокрЛП(ЗаписьКниги.НомерИсправленияКорректировки)) Тогда
		ПредставлениеСчетаФактуры.НомерИсправленныйКорректировочный = СокрЛП(ЗаписьКниги.НомерИсправленияКорректировки);
		ПредставлениеСчетаФактуры.ДатаИсправленныйКорректировочный = 
			Формат(ЗаписьКниги.ДатаИсправленияКорректировки, "ДФ=dd.MM.yyyy");
		ПредставлениеСчетаФактуры.НомерДатаИсправленныйКорректировочный = СтрШаблон(НСтр("ru = '%1;%2'"),
			ПредставлениеСчетаФактуры.НомерИсправленныйКорректировочный, 
			ПредставлениеСчетаФактуры.ДатаИсправленныйКорректировочный);
		ПредставлениеСчетаФактуры.НомерОтДатаИсправленныйКорректировочный = СтрШаблон(НСтр("ru = '%1 от %2'"),
			ПредставлениеСчетаФактуры.НомерИсправленныйКорректировочный, 
			ПредставлениеСчетаФактуры.ДатаИсправленныйКорректировочный);
	КонецЕсли;

	Возврат ПредставлениеСчетаФактуры;
	
КонецФункции

// Функция определяет наличие счетов-фактур, полученных по документам,
// которые могут являться основаниями для ввода счетов-фактур полученных.
//
// Применяется для контроля за наличием в ИБ информации о наличии счетов-фактур.
//
// Параметры:
//  ПараметрыПоискаСчетовФактур - Структура - параметры поиска счетов-фактур.
//                                См. конструктор параметров УчетНДС.НовыйПараметрыПоискаСчетовФактур:
//   * НачалоПериода - Дата - Начальная дата выборки (включительно, с 00:00:00)
//   * КонецПериода  - Дата - Конечная дата выборки (включительно, по 23:59:59)
//   * Организация   - СправочникСсылка.Организации - Организация, по которой
//                     осуществляется поиск. Если организация не задана, то поиск
//                     ведется по всем организациям.
//   * Фильтр        - Документ.Ссылка, Массив, Неопределено - Документ или список документов,
//                     по которым осуществляется поиск.
//                     Если не задан, поиск осуществляется по всем документам,
//                     которые могут являться основаниями для ввода счетов-фактур
//                     полученных.
//   * ВсеКромеФильтра  - Булево - Признак отбора документов, не входящих в Фильтр.
//
//   * НаличиеСчетаФактуры - Булево, Неопределено - Признак отбора документов:
//                           Истина - искать документы, по которым существуют счета-фактуры.
//                           Ложь - искать документы, по которым счета-фактуры отсутствуют.
//                           Неопределено - поиск осуществляется для всех документов.
//                           Неопределено - осуществляется поиск всех счетов-фактур.
//   * ДатаСФНеБолее    - Дата, Неопределено - крайняя дата поиска счетов-фактур.
//   * ИскатьПоОборотам - Булево - Истина - поиск осуществляется по оборотам регистра накопления НДСПредъявленный,
//                                 Ложь - поиск осуществляется по остаткам.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица значений - Состав колонок:
//   * Документ - ДокументСсылка - Документ, по которому производился поиск счета-фактуры полученного.
//   * СчетФактура - ДокументСсылка, Неопределено - Ссылка на счет-фактуру полученный.
//
Функция ОпределитьНаличиеСчетовФактурПолученных(ПараметрыПоискаСчетовФактур) Экспорт

	НачПериода          = ПараметрыПоискаСчетовФактур.НачалоПериода;
	КонПериода          = ПараметрыПоискаСчетовФактур.КонецПериода;
	Организация         = ПараметрыПоискаСчетовФактур.Организация;
	Фильтр              = ПараметрыПоискаСчетовФактур.Фильтр;
	ВсеКромеФильтра     = ПараметрыПоискаСчетовФактур.ВсеКромеФильтра;
	НаличиеСчетаФактуры = ПараметрыПоискаСчетовФактур.НаличиеСчетаФактуры;
	ДатаСФНеБолее       = ПараметрыПоискаСчетовФактур.ДатаСФНеБолее;

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.СчетФактура КАК Основание,
	|	НДСПредъявленный.ИсправленныйСчетФактура КАК ОснованиеИсправление,
	|	НДСПредъявленный.Поставщик КАК Контрагент,
	|	СУММА(НДСПредъявленный.СуммабезНДС + НДСПредъявленный.НДС) КАК СуммаДокумента,
	|	Истина КАК Оригинал
	|ПОМЕСТИТЬ ВтОснованияСФПолученные
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеНДСНаРасходы КАК СписанияНДС
	|		ПО СписанияНДС.СчетФактура = НДСПредъявленный.СчетФактура
	|ГДЕ
	|	НДСПредъявленный.Период МЕЖДУ &ПериодНачало И &ПериодОкончание
	|	И НЕ ТИПЗНАЧЕНИЯ(НДСПредъявленный.СчетФактура) В (
	|			ТИП(Документ.ЗаписьКнигиПокупок),
	|			ТИП(Документ.ЗаявлениеОВвозеТоваров),
	|			ТИП(Документ.СчетФактураНалоговыйАгент),
	|			ТИП(Документ.АвансовыйОтчет),
	|			ТИП(Документ.СчетФактураПолученныйНалоговыйАгент),
	|			ТИП(Документ.ТаможеннаяДекларацияИмпорт))
	|	И НДСПредъявленный.Организация В (&МассивОрганизаций)
	|	И (ВЫБОР
	|			КОГДА &Фильтр И &ВсеКромеФильтра
	|				ТОГДА НДСПредъявленный.СчетФактура НЕ В (&СписокФильтр)
	|			КОГДА &Фильтр И НЕ &ВсеКромеФильтра
	|				ТОГДА НДСПредъявленный.СчетФактура В (&СписокФильтр)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ)
	|	И НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НДСПредъявленный.ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ЭлектронныеУслуги)
	|	И НЕ НДСПредъявленный.РегламентнаяОперация
	|	И СписанияНДС.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.Поставщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОснованияСФПолученные.Основание КАК ДокументОснование,
	|	ЕСТЬNULL(СчетФактураПолученный.Ссылка,
	|		ЕСТЬNULL(СчетФактураПолученныйНА.Ссылка,
	|			ЕСТЬNULL(СчетФактураВыданный.Ссылка,
	|				ЕСТЬNULL(ИнойДокументПодтвержденияНДС.Ссылка,НЕОПРЕДЕЛЕНО)))) КАК СчетФактура,
	|	ЕСТЬNULL(СчетФактураПолученный.Ссылка.Проведен,
	|		ЕСТЬNULL(СчетФактураПолученныйНА.Ссылка.Проведен,
	|			ЕСТЬNULL(СчетФактураВыданный.Ссылка.Проведен,
	|				ЕСТЬNULL(ИнойДокументПодтвержденияНДС.Проведен,ЛОЖЬ)))) КАК СчетФактураПроведен,
	|	ЕСТЬNULL(СчетФактураПолученный.Ссылка.ДатаСоставления,
	|		ЕСТЬNULL(СчетФактураПолученныйНА.Ссылка.ДатаСоставления,
	|				ЕСТЬNULL(СчетФактураВыданный.Ссылка.Дата,
	|					ЕСТЬNULL(ИнойДокументПодтвержденияНДС.ДатаВходящегоДокумента, ДАТАВРЕМЯ(1, 1, 1))))) КАК СчетФактураДата,
	|	ЕСТЬNULL(СчетФактураПолученный.Ссылка.Номер,
	|		ЕСТЬNULL(СчетФактураПолученныйНА.Ссылка.Номер,
	|			ЕСТЬNULL(СчетФактураВыданный.Ссылка.Номер,
	|				ЕСТЬNULL(ИнойДокументПодтвержденияНДС.НомерВходящегоДокумента,"""")))) КАК СчетФактураНомер,
	|	ЛОЖЬ КАК ЭтоСчетФактураПолученный, // признак используется в отчете о наличии с/ф для специального форматирования в БП представления документа, если ЛОЖЬ, то общий порядок
	|	ОснованияСФПолученные.СуммаДокумента,
	|	ОснованияСФПолученные.Контрагент,
	|	ОснованияСФПолученные.Оригинал
	|ИЗ
	|	ВтОснованияСФПолученные КАК ОснованияСФПолученные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО ОснованияСФПолученные.Основание = СчетФактураПолученный.ДокументОснование
	|			И НЕ СчетФактураПолученный.Ссылка.ПометкаУдаления
	|			И НЕ СчетФактураПолученный.Ссылка.Исправление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК СчетФактураПолученныйНА
	|		ПО ОснованияСФПолученные.Основание = СчетФактураПолученныйНА.ДокументОснование
	|			И НЕ СчетФактураПолученныйНА.Ссылка.ПометкаУдаления
	|			И НЕ СчетФактураПолученныйНА.Ссылка.Исправление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнойДокументПодтвержденияНДС КАК ИнойДокументПодтвержденияНДС
	|		ПО ОснованияСФПолученные.Основание = ИнойДокументПодтвержденияНДС.ДокументОснование
	|			И НЕ ИнойДокументПодтвержденияНДС.ПометкаУдаления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|		ПО ОснованияСФПолученные.Основание = СчетФактураВыданный.ДокументОснование
	|			И НЕ СчетФактураВыданный.Ссылка.ПометкаУдаления
	|			И НЕ СчетФактураВыданный.Ссылка.Исправление
	|ГДЕ
	|	(ВЫБОР
	|		КОГДА &НаличиеСчетаФактуры = НЕОПРЕДЕЛЕНО
	|			ТОГДА ИСТИНА
	|		КОГДА &НаличиеСчетаФактуры
	|			ТОГДА НЕ СчетФактураПолученный.Ссылка ЕСТЬ NULL И СчетФактураПолученный.Ссылка.Проведен
	|					ИЛИ НЕ СчетФактураПолученныйНА.Ссылка ЕСТЬ NULL И СчетФактураПолученныйНА.Ссылка.Проведен
	|					ИЛИ НЕ СчетФактураВыданный.Ссылка ЕСТЬ NULL И СчетФактураВыданный.Ссылка.Проведен
	|					ИЛИ НЕ ИнойДокументПодтвержденияНДС.Ссылка ЕСТЬ NULL И ИнойДокументПодтвержденияНДС.Ссылка.Проведен
	|		ИНАЧЕ
	|			(СчетФактураПолученный.Ссылка ЕСТЬ NULL ИЛИ НЕ СчетФактураПолученный.Ссылка.Проведен)
	|				И (СчетФактураПолученныйНА.Ссылка ЕСТЬ NULL ИЛИ НЕ СчетФактураПолученныйНА.Ссылка.Проведен)
	|				И (СчетФактураВыданный.Ссылка ЕСТЬ NULL ИЛИ НЕ СчетФактураВыданный.Ссылка.Проведен)
	|				И (ИнойДокументПодтвержденияНДС.Ссылка ЕСТЬ NULL ИЛИ НЕ ИнойДокументПодтвержденияНДС.Ссылка.Проведен)
	|	КОНЕЦ)
	|	И (ВЫБОР
	|			КОГДА &ДатаСФНеБолее = НЕОПРЕДЕЛЕНО
	|				ТОГДА ИСТИНА
	|			КОГДА НЕ СчетФактураПолученный.Ссылка ЕСТЬ NULL
	|				ТОГДА СчетФактураПолученный.Ссылка.ДатаСоставления <= &ДатаСФНеБолее
	|			КОГДА НЕ СчетФактураПолученныйНА.Ссылка ЕСТЬ NULL
	|				ТОГДА СчетФактураПолученныйНА.Ссылка.ДатаСоставления <= &ДатаСФНеБолее
	|			КОГДА НЕ СчетФактураВыданный.Ссылка ЕСТЬ NULL
	|				ТОГДА СчетФактураВыданный.Ссылка.Дата <= &ДатаСФНеБолее
	|			КОГДА НЕ ИнойДокументПодтвержденияНДС.Ссылка ЕСТЬ NULL
	|				ТОГДА ИнойДокументПодтвержденияНДС.Ссылка.Дата <= &ДатаСФНеБолее
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОснованияСФПолученныеИсправления.ОснованиеИсправление,
	|	ЕСТЬNULL(СчетФактураПолученный.Ссылка,ЕСТЬNULL(СчетФактураПолученныйНА.Ссылка,ЕСТЬNULL(СчетФактураВыданный.Ссылка,НЕОПРЕДЕЛЕНО))),
	|	ЕСТЬNULL(СчетФактураПолученный.Ссылка.Проведен,ЕСТЬNULL(СчетФактураПолученныйНА.Ссылка.Проведен,ЕСТЬNULL(СчетФактураВыданный.Ссылка.Проведен,ЛОЖЬ))),
	|	ЕСТЬNULL(СчетФактураПолученный.Ссылка.ДатаСоставления,ЕСТЬNULL(СчетФактураПолученныйНА.Ссылка.ДатаСоставления,ЕСТЬNULL(СчетФактураВыданный.Ссылка.Дата,ДАТАВРЕМЯ(1, 1, 1)))) КАК СчетФактураДата,
	|	ЕСТЬNULL(СчетФактураПолученный.Ссылка.Номер,ЕСТЬNULL(СчетФактураПолученныйНА.Ссылка.Номер ,ЕСТЬNULL(СчетФактураВыданный.Ссылка.Номер,""""))) КАК СчетФактураНомер,
	|	ЛОЖЬ КАК ЭтоСчетФактураПолученный, // признак используется в отчете о наличии с/ф для специального форматирования в БП представления документа, если ЛОЖЬ, то общий порядок
	|	ОснованияСФПолученныеИсправления.СуммаДокумента,
	|	ОснованияСФПолученныеИсправления.Контрагент,
	|	ОснованияСФПолученныеИсправления.Оригинал
	|ИЗ
	|	ВтОснованияСФПолученные КАК ОснованияСФПолученныеИсправления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО ОснованияСФПолученныеИсправления.ОснованиеИсправление = СчетФактураПолученный.ДокументОснование
	|			И НЕ СчетФактураПолученный.Ссылка.ПометкаУдаления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК СчетФактураПолученныйНА
	|		ПО ОснованияСФПолученныеИсправления.ОснованиеИсправление = СчетФактураПолученныйНА.ДокументОснование
	|			И НЕ СчетФактураПолученныйНА.Ссылка.ПометкаУдаления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|		ПО ОснованияСФПолученныеИсправления.ОснованиеИсправление = СчетФактураВыданный.ДокументОснование
	|			И НЕ СчетФактураВыданный.Ссылка.ПометкаУдаления
	|ГДЕ
	|	ОснованияСФПолученныеИсправления.ОснованиеИсправление <> НЕОПРЕДЕЛЕНО
	|	И (ВЫБОР
	|		КОГДА &НаличиеСчетаФактуры = НЕОПРЕДЕЛЕНО
	|			ТОГДА ИСТИНА
	|		КОГДА &НаличиеСчетаФактуры
	|			ТОГДА НЕ СчетФактураПолученный.Ссылка ЕСТЬ NULL И СчетФактураПолученный.Ссылка.Проведен
	|					ИЛИ НЕ СчетФактураПолученныйНА.Ссылка ЕСТЬ NULL И СчетФактураПолученныйНА.Ссылка.Проведен
	|					ИЛИ НЕ СчетФактураВыданный.Ссылка ЕСТЬ NULL И СчетФактураВыданный.Ссылка.Проведен
	|		ИНАЧЕ
	|			(СчетФактураПолученный.Ссылка ЕСТЬ NULL ИЛИ НЕ СчетФактураПолученный.Ссылка.Проведен) 
	|				И (СчетФактураПолученныйНА.Ссылка ЕСТЬ NULL ИЛИ НЕ СчетФактураПолученныйНА.Ссылка.Проведен)
	|				И (СчетФактураВыданный.Ссылка ЕСТЬ NULL ИЛИ НЕ СчетФактураВыданный.Ссылка.Проведен)
	|	КОНЕЦ)
	|	И (ВЫБОР
	|			КОГДА &ДатаСФНеБолее = НЕОПРЕДЕЛЕНО
	|				ТОГДА ИСТИНА
	|			КОГДА НЕ СчетФактураПолученный.Ссылка ЕСТЬ NULL
	|				ТОГДА СчетФактураПолученный.Ссылка.ДатаСоставления <= &ДатаСФНеБолее
	|			КОГДА НЕ СчетФактураПолученныйНА.Ссылка ЕСТЬ NULL
	|				ТОГДА СчетФактураПолученныйНА.Ссылка.ДатаСоставления <= &ДатаСФНеБолее
	|			КОГДА НЕ СчетФактураВыданный.Ссылка ЕСТЬ NULL
	|				ТОГДА СчетФактураВыданный.Ссылка.Дата <= &ДатаСФНеБолее
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ)
	|";
	
	Если (ЗначениеЗаполнено(НачПериода)) И (НЕ ЗначениеЗаполнено(КонПериода)) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Период МЕЖДУ &ПериодНачало И &ПериодОкончание","Период >= &ПериодНачало");
	ИначеЕсли (НЕ ЗначениеЗаполнено(НачПериода)) И (ЗначениеЗаполнено(КонПериода)) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Период МЕЖДУ &ПериодНачало И &ПериодОкончание","Период <= &ПериодОкончание");
	ИначеЕсли (НЕ ЗначениеЗаполнено(НачПериода)) И (НЕ ЗначениеЗаполнено(КонПериода)) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Период МЕЖДУ &ПериодНачало И &ПериодОкончание","Период <> ДАТАВРЕМЯ(1,1,1)");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("МассивОрганизаций",  Справочники.Организации.ДоступныеОрганизации());
	Иначе
		Запрос.УстановитьПараметр("МассивОрганизаций",  ОбщегоНазначенияУТКлиентСервер.Массив(Организация));
	КонецЕсли;
	Запрос.УстановитьПараметр("ПериодНачало",			НачПериода);
	Запрос.УстановитьПараметр("ПериодОкончание",		?(ЗначениеЗаполнено(КонПериода),КонецДня(КонПериода),КонПериода));
	Запрос.УстановитьПараметр("Фильтр",					?(НЕ ЗначениеЗаполнено(Фильтр),Ложь,Истина));
	Запрос.УстановитьПараметр("СписокФильтр",			Фильтр);
	Запрос.УстановитьПараметр("ВсеКромеФильтра",		ВсеКромеФильтра);
	Запрос.УстановитьПараметр("НаличиеСчетаФактуры",	НаличиеСчетаФактуры);
	Запрос.УстановитьПараметр("ДатаСФНеБолее",			?(НЕ ЗначениеЗаполнено(ДатаСФНеБолее),Неопределено,КонецДня(ДатаСФНеБолее)));
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаДокументов;
	
КонецФункции // ОпределитьНаличиеСчетовФактурПолученных()

// Функция возвращает процент НДС.
//
// Параметры:
//	СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Значение ставки НДС.
//	ПрименяютсяСтавки4и2 - Булево - Признак применения ставок 4% и 2%.
//
// Возвращаемое значение:
//	Число - Процент НДС.
//
Функция ПолучитьСтавкуНДС(СтавкаНДС, ПрименяютсяСтавки4и2 = Ложь) Экспорт

	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС10 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
		Ставка = ?(ПрименяютсяСтавки4и2, 2, 10);
		Возврат Ставка;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС18 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
		Ставка = ?(ПрименяютсяСтавки4и2, 4, 18);
		Возврат Ставка;
	КонецЕсли;

	Возврат 0;

КонецФункции

// КОРРЕКТИРОВОЧНЫЕ И ИСПРАВИТЕЛЬНЫЕ СЧЕТА-ФАКТУРЫ

// Функция возвращает массив пустых ссылок на документы, являющиеся типами для ИсправленногоСчетаФактуры.
//
// Возвращаемое значение:
//	Массив - Пустые ссылки типов измерения ИсправленныйСчетФактура.
//
Функция ПолучитьМассивПустыхИсправленныхСчетовФактур() Экспорт

	МассивДокументовИсправлений = Новый Массив;
	
	МассивТипов = Метаданные.РегистрыНакопления.НДСЗаписиКнигиПокупок.Измерения.ИсправленныйСчетФактура.Тип.Типы();
	Для Каждого ТипДокумента Из МассивТипов Цикл
		МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипДокумента);
		Если МетаданныеДокумента <> Неопределено Тогда
			ИмяДокумента = МетаданныеДокумента.Имя;
			МассивДокументовИсправлений.Добавить(Документы[ИмяДокумента].ПустаяСсылка());
		КонецЕсли;
	КонецЦикла;
	
	МассивДокументовИсправлений.Добавить(Неопределено);

	Возврат МассивДокументовИсправлений;

КонецФункции // ПолучитьМассивПустыхИсправленныхСчетовФактур()

// Функция возвращает таблицу значений со ссылками на документы счета-фактуры, 
// которые записываются в субконто субсчетов 19 и в регистры НДС по таблице первичных 
// документов поступлений. Используется в отчете "ОтчетПоНаличиюСчетовФактур".
// 
// Параметры:
//	ТаблицаДокументов - ТаблицаЗначений - Содержит колонки:
//		* Документ - ДокументСсылка.* - Ссылка на первичный документ поступления.
//
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица с колонкой "СчетФактура".
//
Функция ПреобразоватьДокументыВСчетаФактуры(ТаблицаДокументов) Экспорт

	// В БРУ нет специальных документов счетов-фактур, поэтому возвращаем исходную таблицу.
	ТаблицаРезультат = ТаблицаДокументов.Скопировать(, "Документ");
	ТаблицаРезультат.Колонки.Документ.Имя = "СчетФактура";
	
	Возврат ТаблицаРезультат;

КонецФункции // ПреобразоватьДокументыВСчетаФактуры()

//	ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает версию постановления Правительства РФ от 26.12.2011 г. № 1137.
//
// Параметры:
//  Период  -  Дата - В данном параметре передается
//             дата на которую необходимо определить версию постановления.
// Возвращаемое значение:
//  Число   -  версия постановления,
//              1 - исходная версия постановления Правительства РФ от 26.12.2011 г. № 1137;
//              2 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 952;
//              3 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 735;
//              4 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 981;
//              5 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 534;
//              6 - постановление Правительства РФ от 26.12.2011 г. № 1137 с изменениями по ФЗ № 389;
//              7 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 1096.
//
Функция ВерсияПостановленияНДС1137(Период) Экспорт
	
	Если Период >= '20241001' Тогда      // Постановление № 1096 вступает в силу с 1 октября 2024 года.
		Возврат 7;
	ИначеЕсли Период >= '20231001' Тогда // ФЗ № 389 вступает в силу с 1 октября 2023 года.
		Возврат 6;
	ИначеЕсли Период >= '20210701' Тогда      // Постановление № 534 вступает в силу с 1 июля 2021 года.
		Возврат 5;
	ИначеЕсли Период >= '20171001' Тогда // Постановление № 981 вступает в силу с 1 октября 2017 года.
		Возврат 4;
	ИначеЕсли Период >= '20141001' Тогда // Постановление № 735 вступает в силу с 1 октября 2014 года.
		Возврат 3;
	ИначеЕсли Период >= '20131106' Тогда // Постановление № 952 вступает в силу с 6 ноября 2013 года.
		Возврат 2;
	Иначе 
		Возврат 1; // исходная версия Постановления Правительства РФ от 26.12.2011 г. № 1137.
	КонецЕсли;
	
КонецФункции

// Возвращает признак применения постановления Правительства от 19.01.2019 г. № 15
// в котором утверждена форма книги продаж с добавлением граф по ставке 20%
// и отменена обязанность по выставлению покупателем счета-фактуры при возврате товаров, принятых на учет.
// Дата вступления в силу постановления 01.04.2019.
// Однако постановление можно применять с 1 января 2019 года,
// т.к. в соответствии с НК РФ ставка 20% применяется именно с этого момента.
Функция ПрименяетсяПостановление15(Период) Экспорт
	
	Возврат Период >= '20190101';
	
КонецФункции

// Функция возвращает признак автоматического заполнения раздела 7 Декларации по НДС.
//
Функция ЗаполняетсяРаздел7ДекларацииНДС(Период) Экспорт
	
	Возврат Истина;
	
КонецФункции

// Функция возвращает код вида операции для регистрации счета-фактуры по смешанным операциям в журнале счетов-фактур по комиссии.
// 
// Параметры:
// 	КодВидаОперации - Строка - Код вида операции счета-фактуры.
// 	Период - Дата - Период записи журнала.
// 
// Возвращаемое значение:
// 	КодВидаОперацииКомиссия - Строка - Код вида операции для журнала счетов-фактур по комиссии.
//
Функция КодВидаОперацииКомиссия(КодВидаОперации, Период) Экспорт
	
	КодВидаОперацииКомиссия = КодВидаОперации;
	
	ВерсияКодовВидовОпераций = УчетНДСКлиентСервер.ВерсияКодовВидовОпераций(Период);
	ВозможенСоставнойКод     = (ВерсияКодовВидовОпераций < 3);
			
	Если СтрДлина(КодВидаОперации) >= 4 
			И ВозможенСоставнойКод Тогда 
		Если СтрНайти(КодВидаОперации, "04") > 0 Тогда
			КодВидаОперацииКомиссия = "04";
		ИначеЕсли СтрНайти(КодВидаОперации, "05") > 0 Тогда	
			КодВидаОперацииКомиссия  = "05"
		ИначеЕсли СтрНайти(КодВидаОперации, "13") > 0 Тогда	
			КодВидаОперацииКомиссия  = "13"
		КонецЕсли;
	КонецЕсли;
	
	Возврат КодВидаОперацииКомиссия;
	
КонецФункции

// Функция возвращает типы документов, являющихся ручными операциями по НДС.
//
// Возвращаемое значение:
//	Массив - Массив со значениями типов документов.
//
Функция ТипыДокументовРучныхОперацийНДС() Экспорт

	Результат = Новый Массив;
	Результат.Добавить(Тип("ДокументСсылка.ЗаписьКнигиПокупок"));
	Результат.Добавить(Тип("ДокументСсылка.ЗаписьКнигиПродаж"));
	
	Возврат Результат;

КонецФункции

// Функция возвращает номер счета-фактуры на печать с учетом индекса обособленного подразделения.
// 
// Параметры:
// 	 Номер - Строка - Номер документа ИБ.
//   УдалитьПользовательскийПрефикс - Булево - Признак необходимости исключения пользовательского префикса из номера.
// 	 ОбособленноеПодразделение - Булево -  Признак того, что организация является обособленным подразделением.
// 	 ЦифровойИндексОбособленногоПодразделения - Число - Цифровой индекс обособленного подразделения.
//
// Возвращаемое значение:
// 	НомерНаПечать - Строка - Номер счета-фактуры на печать.
//
Функция НомерСчетаФактурыНаПечать(Номер, УдалитьПользовательскийПрефикс, ОбособленноеПодразделение, ЦифровойИндексОбособленногоПодразделения) Экспорт
	
	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Номер, Ложь, УдалитьПользовательскийПрефикс);
	
	Если ОбособленноеПодразделение И ЗначениеЗаполнено(ЦифровойИндексОбособленногоПодразделения) Тогда
		НомерНаПечать = НомерНаПечать + "/" + ЦифровойИндексОбособленногоПодразделения;
	КонецЕсли;
	
	Возврат НомерНаПечать;
	
КонецФункции

#КонецОбласти

#Область ФункцииПолученияТекстовЗапросов

// Функция возвращает текст запроса, выбирающего корректировочные счета-фактуры. 
// Используется в отчете "Журнал учета счетов-фактур 1137".
//
// Параметры:
//	Запрос - Запрос - Объект Запрос, с помощью которого будет выполнен текст запроса.
//	Период - Дата - Последняя дата периода, за который строится запрос.
//	Отбор  - Структура - Структура отбора, содержащая следующие ключи:
//		* СписокОрганизаций - СписокЗначений - Список организаций, по которым строится запрос.
//		* Контрагент - Структура - Настройки отбора по контрагенту (необязательный ключ)
//			** ВидСравнения - ВидСравнения - Вид сравнения
//			** Значение - СправочникСсылка.Контрагенты - Ссылка на контрагента для отбора.
//
// Возвращаемое значение:
//	Строка - Текст запроса, формирующего таблицу со следующими полями:
//		* СчетФактура - ДокументСсылка.* - Ссылка на документ счета-фактуры.
//		* Организация - СправочникСсылка.Организации - Организация из счета-фактуры.
//
Функция ТекстЗапросаКорректировочныеСчетаФактуры(Запрос, Период, Отбор) Экспорт

	// В БРУ нет документов счетов-фактур.
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация
	|ИЗ
	|	Документ.СчетФактураВыданный КАК Операция
	|ГДЕ
	|	Операция.Корректировочный
	|	И Операция.Дата >= &Квартал
	|	И Операция.Организация В (&СписокОрганизаций)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК Операция
	|ГДЕ
	|	Операция.Корректировочная
	|	И Операция.Дата >= &Квартал
	|	И Операция.Организация В (&СписокОрганизаций)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Операция
	|ГДЕ
	|	Операция.Корректировочный
	|	И (ВЫБОР
	|		КОГДА Операция.Исправление
	|			ТОГДА Операция.ДатаИсправления >= &Квартал
	|		ИНАЧЕ
	|			Операция.ДатаСоставления >= &Квартал
	|	КОНЕЦ)
	|	И Операция.Организация В (&СписокОрганизаций)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК Операция
	|ГДЕ
	|	Операция.Корректировочный
	|	И (ВЫБОР
	|		КОГДА Операция.Исправление
	|			ТОГДА Операция.ДатаИсправления >= &Квартал
	|		ИНАЧЕ
	|			Операция.ДатаСоставления >= &Квартал
	|	КОНЕЦ)
	|	И Операция.Организация В (&СписокОрганизаций)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК Операция
	|ГДЕ
	|	Операция.Корректировочный
	|	И Операция.Дата >= &Квартал
	|	И Операция.Организация В (&СписокОрганизаций)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК Операция
	|ГДЕ
	|	Операция.Корректировочный
	|	И Операция.Дата >= &Квартал
	|	И Операция.Организация В (&СписокОрганизаций)
	|";

	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаКорректировочныеСчетаФактуры()

// Функция возвращает текст запроса со списком документов счетов-фактур полученных,
// в которых сама организация выступает в роли поставщика в книге покупок.
//
// Возвращаемое значение:
//	Строка - Текст запроса, формирующего таблицу со следующими полями:
//		* СчетФактура - ДокументСсылка.* - Ссылка на документ счета-фактуры.
//		* Организация - СправочникСсылка.Организации - Организация из счета-фактуры.
//		* ГоловнаяОрганизация - СправочникСсылка.Организации - Головная организация.
//		* ЭтоКорректировкаРеализации 	- Булево - Истина, если счет-фактура относится к корректировке реализации.
//
Функция ТекстЗапросаСчетаФактурыПолученныеГдеОрганизацияЯвляетсяПоставщиком() Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Организация
	|		ИНАЧЕ Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ИСТИНА КАК ЭтоКорректировкаРеализации
	|ИЗ
	|	Документ.КорректировкаРеализации КАК Операция
	|ГДЕ
	|	Операция.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
	|	И Операция.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка,
	|	Операция.Организация,
	|	ВЫБОР
	|		КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Организация
	|		ИНАЧЕ Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ИСТИНА
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		ПО Операция.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
	|			И Операция.Организация = ДанныеОснованийСчетовФактур.Организация
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|	И Операция.Проведен
	|	И ДанныеОснованийСчетовФактур.КорректировкаПоСогласованиюСторон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка,
	|	Операция.ОрганизацияПолучатель,
	|	ВЫБОР
	|		КОГДА Операция.ОрганизацияПолучатель.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.ОрганизацияПолучатель
	|		ИНАЧЕ Операция.ОрганизацияПолучатель.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ИСТИНА
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		ПО Операция.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
	|			И Операция.ОрганизацияПолучатель = ДанныеОснованийСчетовФактур.Организация
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	И Операция.Проведен
	|	И ДанныеОснованийСчетовФактур.КорректировкаПоСогласованиюСторон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка,
	|	Операция.Организация,
	|	ВЫБОР
	|		КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Организация
	|		ИНАЧЕ Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ИСТИНА
	|ИЗ
	|	Документ.СчетФактураВыданный КАК Операция
	|ГДЕ
	|	Операция.Корректировочный
	|	И Операция.Проведен
	|";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаСчетаФактурыПолученныеГдеОрганизацияЯвляетсяПоставщиком()

// Функция возвращает текст запроса со списком документов счетов-фактур выданных,
// в которых сама организация выступает в роли покупателя в книге продаж.
//
// Возвращаемое значение:
//	Строка - Текст запроса.
//
Функция ТекстЗапросаСчетаФактурыВыданныеГдеОрганизацияЯвляетсяПокупателем() Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Организация
	|		ИНАЧЕ
	|			Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ИСТИНА КАК ЭтоКорректировкаПоступления
	|ИЗ 
	|	Документ.КорректировкаПриобретения КАК Операция
	|ГДЕ
	|	Операция.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
	|	И Операция.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка,
	|	Операция.Организация,
	|	ВЫБОР
	|		КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Организация
	|		ИНАЧЕ Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ИСТИНА
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		ПО Операция.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
	|			И Операция.Организация = ДанныеОснованийСчетовФактур.Организация
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|	И Операция.Проведен
	|	И ДанныеОснованийСчетовФактур.КорректировкаПоСогласованиюСторон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка,
	|	Операция.Организация,
	|	ВЫБОР
	|		КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Организация
	|		ИНАЧЕ Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ИСТИНА
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		ПО Операция.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
	|			И Операция.Организация = ДанныеОснованийСчетовФактур.Организация
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	И Операция.Проведен
	|	И ДанныеОснованийСчетовФактур.КорректировкаПоСогласованиюСторон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка,
	|	Операция.Организация,
	|	ВЫБОР
	|		КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Организация
	|		ИНАЧЕ Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ИСТИНА
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Операция
	|ГДЕ
	|	Операция.Корректировочный
	|	И Операция.Проведен
	|";

	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаСчетаФактурыВыданныеГдеОрганизацияЯвляетсяПокупателем()

// Функция возвращает текст запроса со списком документов счетов-фактур из 
// книги покупок, которые могут являться регистраторами исправительных записей.
//
// Возвращаемое значение:
//	Строка - Текст запроса, формирующего таблицу со следующими полями:
//		* СчетФактура - ДокументСсылка.* - Ссылка на документ счета-фактуры.
//		* Организация - СправочникСсылка.Организации - Организация из счета-фактуры.
//		* ГоловнаяОрганизация - СправочникСсылка.Организации - Головная организация.
//		* ЭтоКорректировкаПоступления 	- Булево - Истина, если счет-фактура относится к корректировке поступления.
//		* ЭтоКорректировкаРеализации 	- Булево - Истина, если счет-фактура относится к корректировке реализации.
//
Функция ТекстЗапросаСчетаФактурыИсправленияКнигиПокупок() Экспорт

	// В БРУ таких документов нет.
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Операция.Корректировочный КАК ЭтоКорректировкаПоступления,
	|	ЛОЖЬ КАК ЭтоКорректировкаРеализации
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Основания.ДокументОснование КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Операция.Корректировочный КАК ЭтоКорректировкаПоступления,
	|	ЛОЖЬ КАК ЭтоКорректировкаРеализации
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК Основания
	|	ПО
	|		Операция.Ссылка = Основания.Ссылка
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Операция.Корректировочный КАК ЭтоКорректировкаПоступления,
	|	ЛОЖЬ КАК ЭтоКорректировкаРеализации
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Основания.ДокументОснование КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Операция.Корректировочный КАК ЭтоКорректировкаПоступления,
	|	ЛОЖЬ КАК ЭтоКорректировкаРеализации
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК Основания
	|	ПО
	|		Операция.Ссылка = Основания.Ссылка
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ЛОЖЬ КАК ЭтоКорректировкаПоступления,
	|	ЛОЖЬ КАК ЭтоКорректировкаРеализации
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка,
	|	Операция.Организация,
	|	ВЫБОР 
	|		КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Организация
	|		ИНАЧЕ
	|			Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	Операция.Корректировочный
	|ИЗ
	|	Документ.СчетФактураВыданный КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И НЕ Операция.Перевыставленный
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|	И Операция.Корректировочный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка,
	|	Операция.Контрагент,
	|	ВЫБОР
	|		КОГДА ДанныеОрганизации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Контрагент
	|		ИНАЧЕ
	|			ДанныеОрганизации.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	Операция.Корректировочный,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураВыданный КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизации
	|			ПО Операция.Контрагент = ДанныеОрганизации.Ссылка
	|			И ДанныеОрганизации.Ссылка В (&Организация)
	|ГДЕ
	|	Операция.Проведен
	|	И НЕ Операция.Перевыставленный
	|	И Операция.ДатаВыставления >= &НачалоПериода
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка,
	|	Операция.Комиссионер,
	|	ВЫБОР
	|		КОГДА ДанныеОрганизации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Операция.Комиссионер
	|		ИНАЧЕ
	|			ДанныеОрганизации.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизации
	|			ПО Операция.Комиссионер = ДанныеОрганизации.Ссылка
	|			И ДанныеОрганизации.Ссылка В (&Организация)
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.ДатаВыставления >= &НачалоПериода
	|	И Операция.Исправление
	|";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаСчетаФактурыИсправленияКнигиПокупок()

// Функция возвращает текст запроса со списком документов счетов-фактур из 
// книги продаж, которые могут являться регистраторами исправительных записей.
//
// Возвращаемое значение:
//	Строка - Текст запроса, формирующего таблицу со следующими полями:
//		* СчетФактура - ДокументСсылка.* - Ссылка на документ счета-фактуры.
//		* Организация - СправочникСсылка.Организации - Организация из счета-фактуры.
//		* ГоловнаяОрганизация - СправочникСсылка.Организации - Головная организация.
//		* ЭтоКорректировкаПоступления 	- Булево - Истина, если счет-фактура относится к корректировке поступления.
//		* ЭтоКорректировкаРеализации 	- Булево - Истина, если счет-фактура относится к корректировке реализации.
//
Функция ТекстЗапросаСчетаФактурыИсправленияКнигиПродаж() Экспорт

	// В БРУ таких документов нет.
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ЛОЖЬ КАК ЭтоКорректировкаПоступления,
	|	Операция.Корректировочный КАК ЭтоКорректировкаРеализации
	|ИЗ
	|	Документ.СчетФактураВыданный КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И НЕ Операция.Перевыставленный
	|	И (Операция.Дата >= &НачалоПериода
	|		ИЛИ Операция.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг))
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ЛОЖЬ КАК ЭтоКорректировкаПоступления,
	|	ЛОЖЬ КАК ЭтоКорректировкаРеализации
	|ИЗ
	|	Документ.СводнаяСправкаНДС КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Операция.Корректировочный,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Корректировочный
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.ДокументОснование КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Операция.Корректировочный,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК Строки
	|			ПО Операция.Ссылка = Строки.Ссылка
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Корректировочный
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Операция.Корректировочный,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Корректировочный
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.ДокументОснование КАК СчетФактура,
	|	Операция.Организация КАК Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Операция.Корректировочный,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК Строки
	|			ПО Операция.Ссылка = Строки.Ссылка
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Корректировочный
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка,
	|	Операция.Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка,
	|	Операция.Организация,
	|	ВЫБОР КОГДА Операция.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|		Операция.Организация
	|	ИНАЧЕ
	|		Операция.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Дата >= &НачалоПериода
	|	И Операция.Организация В (&Организация)
	|	И Операция.Исправление
	|";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаСчетаФактурыИсправленияКнигиПродаж()

// Функция возвращает запрос для получения информации о ГТД и стране происхождения
// для счетов фактур.
//
// Параметры:
//	Запрос - Запрос - Объект запрос, с помощью которого будет выполняться обращение к базе данных.
//
// Возвращаемое значение:
//	Строка - Текст запроса для получения таблица со следующими полями:
//		* СчетФактура - ДокументСсылка.* - Ссылка на документ, представляющий счет-фактуру.
//		* СтранаПроисхождения - СправочникСсылка.СтраныМира - Страна происхождения товара.
//		* НомерГТД - СправочникСсылка.НомераГТД - Таможенная декларация, указанная в счете-фактуре.
//
Функция ТекстЗапросаНомераГТДпоСчетамФактурам(Запрос) Экспорт

	// В БРУ таких документов нет.
		
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.Ссылка КАК СчетФактура,
	|	Строки.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Строки.НомерГТД КАК НомерГТД
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Строки
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Счетфактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетфактураПолученный.ДокументыОснования КАК СФОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК Строки
	|			ПО СФОснования.ДокументОснование = Строки.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетфактураПолученный КАК Счетфактура
	|			ПО СФОснования.Ссылка = Счетфактура.Ссылка
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Счетфактура.Проведен
	|	И Счетфактура.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК Строки
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Счетфактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетфактураПолученный.ДокументыОснования КАК СФОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК Строки
	|			ПО СФОснования.ДокументОснование = Строки.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетфактураПолученный КАК Счетфактура
	|			ПО СФОснования.Ссылка = Счетфактура.Ссылка
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Счетфактура.Проведен
	|	И Счетфактура.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК Строки
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.КорректировкаПриобретения.Товары КАК Строки
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Счетфактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетфактураПолученный.ДокументыОснования КАК Основания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения.Товары КАК Строки
	|			ПО Основания.ДокументОснование = Строки.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетфактураПолученный КАК Счетфактура
	|			ПО Основания.Ссылка = Счетфактура.Ссылка
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Счетфактура.Проведен
	|	И Счетфактура.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.ВыкупПринятыхНаХранениеТоваров.ВидыЗапасов КАК Строки
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Счетфактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетфактураПолученный.ДокументыОснования КАК СФОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыкупПринятыхНаХранениеТоваров.ВидыЗапасов КАК Строки
	|			ПО СФОснования.ДокументОснование = Строки.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетфактураПолученный КАК Счетфактура
	|			ПО СФОснования.Ссылка = Счетфактура.Ссылка
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Счетфактура.Проведен
	|	И Счетфактура.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.Регистратор КАК СчетФактура,
	|	Строки.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Строки.НомерГТД КАК НомерГТД
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК Строки
	|
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Строки.ТипСчетаФактуры В (&ТипыСчетФактураПолученный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Счетфактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетфактураПолученный.ДокументыОснования КАК СФОснования
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК Строки
	|	ПО
	|		СФОснования.ДокументОснование = Строки.Регистратор
	|		И Строки.ТипСчетаФактуры В (&ТипыСчетФактураПолученный)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетфактураПолученный КАК Счетфактура
	|	ПО 
	|		СФОснования.Ссылка = Счетфактура.Ссылка
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Счетфактура.Проведен
	|	И Счетфактура.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Счетфактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетфактураПолученныйНалоговыйАгент.ДокументыОснования КАК СФОснования
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК Строки
	|	ПО
	|		СФОснования.ДокументОснование = Строки.Регистратор
	|		И Строки.ТипСчетаФактуры В (&ТипыСчетФактураПолученный)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.СчетфактураПолученныйНалоговыйАгент КАК Счетфактура
	|	ПО
	|		СФОснования.Ссылка = Счетфактура.Ссылка
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Счетфактура.Проведен
	|	И Счетфактура.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетфактураВыданный.ДокументыОснования КАК СФОснования
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетфактураВыданный КАК СчетФактура
	|	ПО
	|		СФОснования.Ссылка = СчетФактура.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК Строки
	|	ПО
	|		СФОснования.ДокументОснование = Строки.Регистратор
	|		И Строки.ТипСчетаФактуры В (&ТипыСчетФактураПолученный)
	|ГДЕ
	|	СчетФактура.Проведен
	|	И НЕ СчетФактура.Перевыставленный
	|	И СчетФактура.Исправление
	|	И Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Счетфактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетфактураПолученныйНалоговыйАгент.ДокументыОснования КАК Основания
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК Строки
	|	ПО
	|		Основания.ДокументОснование = Строки.Регистратор
	|		И Строки.ТипСчетаФактуры В (&ТипыСчетФактураПолученный)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетфактураПолученныйНалоговыйАгент КАК Счетфактура
	|	ПО
	|		Основания.Ссылка = Счетфактура.Ссылка
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Счетфактура.Проведен
	|	И Счетфактура.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК Строки
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Счетфактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СФОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК Строки
	|			ПО СФОснования.ДокументОснование = Строки.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК Счетфактура
	|			ПО СФОснования.Ссылка = Счетфактура.Ссылка
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Счетфактура.Проведен
	|	И Счетфактура.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.Ссылка КАК СчетФактура,
	|	Строки.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Строки.НомерГТД КАК НомерГТД
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Счетфактура.Ссылка,
	|	Строки.НомерГТД.СтранаПроисхождения,
	|	Строки.НомерГТД
	|ИЗ
	|	Документ.СчетфактураПолученный.ДокументыОснования КАК СФОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|			ПО СФОснования.ДокументОснование = Строки.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетфактураПолученный КАК Счетфактура
	|			ПО СФОснования.Ссылка = Счетфактура.Ссылка
	|ГДЕ
	|	Строки.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ Строки.НомерГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И Счетфактура.Проведен
	|	И Счетфактура.Исправление
	|";


	Возврат ТекстЗапроса;

КонецФункции

// Функция возвращает текст запроса, выбирающего сводные комиссионные счета-фактуры. 
// Используется в отчете "Журнал учета счетов-фактур 1137".
//
// Параметры:
//	Запрос - Запрос - Объект запрос, с помощью которого будет выполняться обращение к базе данных.
//	Период - ДатаВремя - Конец периода формирования отчета.
//	Отбор - Структура - Структура отбора с ключами:
//		* СписокОрганизаций - СписокЗначений - список организаций, по которым строится отчет.
//		* Контрагент (необязательный) - Структура с ключами:
//			** ВидСравнения - ВидСравнения.
//			** Значение - СправочникСсылка.Контрагенты - Ссылка на контрагента.
//
// Возвращаемое значение:
//	Строка - Текст запроса для получения таблица со следующими полями:
//		* СчетФактура - ДокументСсылка.* - Ссылка на документ, представляющий счет-фактуру.
//		* Организация - СправочникСсылка.Организации - Организация, к которой относится счет-фактура.
//		* ЧастьЖурналаУчетаСчетовФактур - ПеречислениеСсылка.ЧастиЖурналаУчетаСчетовФактур.
//
//
Функция ТекстЗапросаСводныеКомиссионныеСчетаФактуры(Запрос, Период, Отбор) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СчетФактураКомиссионеру.Ссылка КАК СчетФактура,
	|	СчетФактураКомиссионеру.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурналаУчетаСчетовФактур
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|ГДЕ
	|	СчетФактураКомиссионеру.Сводный
	|	И СчетФактураКомиссионеру.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураКомитента.Ссылка,
	|	СчетФактураКомитента.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|ИЗ
	|	Документ.СчетФактураКомитента КАК СчетФактураКомитента
	|ГДЕ
	|	СчетФактураКомитента.Сводный
	|	И СчетФактураКомитента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданныйТовары.Ссылка,
	|	СчетФактураВыданныйТовары.Ссылка.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры)
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|ГДЕ
	|	СчетФактураВыданныйТовары.Ссылка.Перевыставленный
	|СГРУППИРОВАТЬ ПО
	|	Ссылка, 
	|	СчетФактураВыданныйТовары.Ссылка.Организация
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СчетФактураВыданныйТовары.СчетФактураПолученныйОтПродавца) > 1
	|";
	
	Возврат ТекстЗапроса;

КонецФункции

// Функция возвращает запрос для получения информации о документах оплаты.
//
// Параметры:
//	Запрос - Запрос - Объект запрос, с помощью которого будет выполняться обращение к базе данных.
//
// Возвращаемое значение:
//	Строка - Текст запроса для получения таблица со следующими полями:
//		* СчетФактураДокумент - ДокументСсылка.* - Ссылка на документ, представляющий счет-фактуру.
//		* СчетФактураДата - ДатаВремя - Дата документа счета-фактуры.
//		* ПродавецСсылка - СправочникСсылка.Контрагенты - Продавец из счета-фактуры.
//		* ДатаПлатежногоДокумента - ДатаВремя - Дата платежного документа, которым оплачен счет-фактура.
//		* НомерПлатежногоДокумента - Строка - Номер платежного документа, которым оплачен счет-фактура.
//
Функция ТекстЗапросаРеквизитыКонтрагентовДокументовОплаты(Запрос) Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетФактураПолученныйПродавцы.Ссылка КАК СчетФактураДокумент,
		|	СчетФактураПолученный.Дата КАК СчетФактураДата,
		|	СчетФактураПолученныйПродавцы.Продавец КАК ПродавецСсылка,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПлатежногоДокумента,
		|	"""" КАК НомерПлатежногоДокумента
		|ИЗ
		|	Документ.СчетФактураПолученный.Продавцы КАК СчетФактураПолученныйПродавцы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
		|		ПО СчетФактураПолученныйПродавцы.Ссылка = СчетФактураПолученный.Ссылка
		|			И (СчетФактураПолученный.СводныйКомиссионный)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
		|		ПО СчетФактураПолученныйПродавцы.Ссылка = СчетФактураПолученныйДокументыОснования.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
		|		ПО СчетФактураПолученныйДокументыОснования.ДокументОснование = СписокСчетовФактур.СчетФактура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетФактураПолученныйПродавцы.Ссылка,
		|	СчетФактураПолученный.Дата,
		|	СчетФактураПолученныйПродавцы.Продавец,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	""""
		|ИЗ
		|	Документ.СчетФактураПолученный.Продавцы КАК СчетФактураПолученныйПродавцы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
		|		ПО СчетФактураПолученныйПродавцы.Ссылка = СчетФактураПолученный.Ссылка
		|			И (СчетФактураПолученный.СводныйКомиссионный)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
		|		ПО СчетФактураПолученный.Ссылка = СписокСчетовФактур.СчетФактура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетФактураПолученныйАвансПродавцы.Ссылка,
		|	СчетФактураПолученныйАванс.Дата,
		|	СчетФактураПолученныйАвансПродавцы.Продавец,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """")
		|ИЗ
		|	Документ.СчетФактураПолученныйАванс.Продавцы КАК СчетФактураПолученныйАвансПродавцы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
		|		ПО СчетФактураПолученныйАвансПродавцы.Ссылка = СчетФактураПолученныйАванс.Ссылка
		|			И (СчетФактураПолученныйАванс.СводныйКомиссионный)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО (СчетФактураПолученныйАванс.ДокументОснование.Организация = ДанныеПервичныхДокументов.Организация)
		|			И (СчетФактураПолученныйАванс.ДокументОснование = ДанныеПервичныхДокументов.Документ)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
		|		ПО СчетФактураПолученныйАванс.ДокументОснование = СписокСчетовФактур.СчетФактура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетФактураПолученныйАвансПродавцы.Ссылка,
		|	СчетФактураПолученныйАванс.Дата,
		|	СчетФактураПолученныйАвансПродавцы.Продавец,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """")
		|ИЗ
		|	Документ.СчетФактураПолученныйАванс.Продавцы КАК СчетФактураПолученныйАвансПродавцы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
		|		ПО СчетФактураПолученныйАвансПродавцы.Ссылка = СчетФактураПолученныйАванс.Ссылка
		|			И (СчетФактураПолученныйАванс.СводныйКомиссионный)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО (СчетФактураПолученныйАванс.ДокументОснование.Организация = ДанныеПервичныхДокументов.Организация)
		|			И (СчетФактураПолученныйАванс.ДокументОснование = ДанныеПервичныхДокументов.Документ)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
		|		ПО СчетФактураПолученныйАванс.Ссылка = СписокСчетовФактур.СчетФактура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВозвратТоваровОтКлиента.Ссылка,
		|	ВозвратТоваровОтКлиента.Дата,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
		|	ВозвратТоваровОтКлиента.ДатаРасходногоКассовогоОрдера,
		|	ВозвратТоваровОтКлиента.НомерРасходногоКассовогоОрдера
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
		|	ПО ВозвратТоваровОтКлиента.Ссылка = СписокСчетовФактур.СчетФактура";

	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса для получения раздела 12 Декларации по НДС с 2015 г.
// "Сведения из счетов-фактур, выставленных лицами, указанными в п.5 ст.173 НК РФ".
//
// Параметры:
//	Запрос - Запрос - Объект запрос, с помощью которого будет выполняться обращение к базе данных.
//	СписокОрганизаций - СписокЗначений - Список ссылок на организации, по которым строится отчет. 
//	НачалоПериода - ДатаВремя - Начало периода формирования отчета. 
//	КонецПериода - ДатаВремя - Конец периода формирования отчета. 
//
// Возвращаемое значение:
//	Строка - Текст запроса для получения таблица со следующими полями:
//		* Номер - Строка - Номер документа счета-фактуры.
//		* Дата - ДатаВремя - Дата документа счета-фактуры.
//		* Контрагент - СправочникСсылка.Контрагенты - Контрагент из счета-фактуры.
//		* КППКонтрагента - Строка - КПП контрагента из счета-фактуры.
//		* СуммаНДСДокумента - Число - Сумма НДС по счету-фактуре.
//		* СуммаДокумента - Число - Общая сумма с НДС по счету-фактуре.
//		* ВалютаДокумента - СправочникСсылка.Валюты - Валюта счета-фактуры.
//		* Ссылка - ДокументСсылка.* - Ссылка на документ счет-фактура.
//
Функция ТекстЗапросаСчетаФактурыВыставленныеНеплательщикамиНДС(Запрос, СписокОрганизаций, НачалоПериода, КонецПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК Номер,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК Дата,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.КППКонтрагента ПОДОБНО """"
	|			ТОГДА ЖурналУчетаСчетовФактур.Контрагент.КПП
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.КППКонтрагента
	|	КОНЕЦ КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДСДокумента,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСДокументаКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаДокумента,
	|	ЖурналУчетаСчетовФактур.Валюта КАК ВалютаДокумента,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК Ссылка
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры)
	|	И НЕ ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураНалоговыйАгент
	|	И НЕ ЕСТЬNULL(ЖурналУчетаСчетовФактур.СчетФактура.Корректировочный, ЛОЖЬ)
	|	И ЖурналУчетаСчетовФактур.СуммаНДС - ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|	И ЖурналУчетаСчетовФактур.Организация В(&Организация)
	|	И ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (&ОрганизацияНеПлательщикНДС
	|			ИЛИ &ОрганизацияОсвобожденаОтУплатыНДС)";
	
	Возврат ТекстЗапроса;

КонецФункции

// Функция возвращает текст запроса для сопоставления счетов-фактур, выписанных при неподтверждении 0%,
// с исходными документами отгрузки, которые не были подтверждены.
// В текст запроса можно использовать параметры запроса:
//	* Организация - Список организаций, по которым строится декларация НДС.
//	* НачалоПериода - Дата - Дата начала периода декларации НДС.
//	* КонецПериода - Дата - Дата окончания периода декларации НДС.
//
// Возвращаемое значение:
//	Строка - Текст запроса, возвращающего таблицу с колонками:
//		* СчетФактура - ДокументСсылка.* - Ссылка на счет-фактуру, выписанную при неподтверждении 0%.
//		* ДокументОтгрузки - ДокументСсылка.* - Ссылка на документ реализации по 0%, который не был подтвержден.
//
Функция ТекстЗапросаНеподтвержденныеРеализации0() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СчетФактураНаНеподтвержденнуюРеализацию0.Ссылка КАК СчетФактура,
	|	СчетФактураНаНеподтвержденнуюРеализацию0.ДокументОснование КАК ДокументОтгрузки
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК СчетФактураНаНеподтвержденнуюРеализацию0
	|ГДЕ
	|	СчетФактураНаНеподтвержденнуюРеализацию0.Проведен
	|	И СчетФактураНаНеподтвержденнуюРеализацию0.Организация В (&Организация)";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ФормированиеОтчетовПоНдс

// Функция возвращает ИСТИНА, если из отчетов НДС необходимо открывать помощник.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация по которой строится отчет.
//	Период - Дата - Дата налогового периода, за который строится отчет.
//
// Возвращаемое значение:
//	Булево - Признак необходимости открытия помощника.
//
Функция ОткрыватьПомощникИзМакета(Организация, Период) Экспорт

    Возврат Ложь;
	
КонецФункции

// Функция возвращает макет для помощника по НДС.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация по которой строится отчет.
//	Период - Дата - Дата налогового периода, за который строится отчет.
//
// Возвращаемое значение:
//	ТабличныйДокумент - Табличный документ с макетом.
//
Функция ПолучитьМакетОткрытияПомощника(Организация, Период) Экспорт

	// В БРУ нет помощника по учету НДС
	ТабДокумент = Новый ТабличныйДокумент;

	Возврат ТабДокумент;

КонецФункции

Функция ПолучитьДатуНачалаДействияПостановления1137() Экспорт
	
	Возврат('20120401');
	
КонецФункции	

#КонецОбласти

#Область РаботаСКнигамиПокупокИПродаж

// Формирует книгу покупок внутри фонового задания.
//
// Параметры:
//	ПараметрыОтчета - Структура - Структура параметров фонового задания,
//						см. ПодготовитьПараметрыОтчета в отчете книга покупок.
//	АдресХранилища - Строка - Адрес временного хранилища, в которое поместить результат отчета.
//
Процедура ПодготовитьПараметрыКнигиПокупок(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Отчеты.КнигаПокупок.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);	
	
КонецПроцедуры

// Формирует книгу продаж внутри фонового задания.
//
// Параметры:
//	ПараметрыОтчета - Структура - Структура параметров фонового задания, 
//						см. ПодготовитьПараметрыОтчета в отчете книга продаж.
//	АдресХранилища - Строка - Адрес временного хранилища, в которое поместить результат отчета.
//
Процедура ПодготовитьПараметрыКнигиПродаж(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Отчеты.КнигаПродаж.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСЖурналомУчетаСчетовФактур

// Формирует журнал учета счетов-фактур внутри фонового задания.
//
// Параметры:
//	ПараметрыОтчета - Структура - Структура параметров фонового задания, 
//						см. ПодготовитьПараметрыОтчета в журнале учета счетов-фактур.
//	АдресХранилища - Строка - Адрес временного хранилища, в которое поместить результат отчета.
//
Процедура ПодготовитьПараметрыЖурналаУчетаСчетовФактур (ПараметрыОтчета, АдресХранилища) Экспорт
	
	Отчеты.ЖурналУчетаСчетовФактур.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СведенияОЮридическихИФизическихЛицах

// Процедура подготавливает в менеджере временных таблиц таблицу
// сведениями о переданных контрагента и организациях на указанные даты.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер, в который помещается таблицы.
//		На входе содержит таблицу СсылкиНаДаты с колонками:
//			* Ссылка - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - контрагент или организация,
//						для которых требуется получить сведения.
//			* ДатаСведений - Дата - Дата, на которую необходимо получить данные.
//
//		На выходе содержит таблицу СведенияОСсылкахНаДаты с колонками:
//			* Ссылка - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - контрагент или организация.
//			* ДатаСведений - Дата - Дата, на которую получены данные.
//			* Наименование - Строка - Наименование контрагента или организации для вывода в отчете.
//			* ИНН - Строка - ИНН контрагента или организации.
//			* КПП - Строка - КПП контрагента или организации.
//
Процедура РегистрационныеСведенияНаДаты(МенеджерВременныхТаблиц) Экспорт
	
	// Запрос требует обязательного наличия в МенеджерВременныхТаблиц таблицы с именем
	// СсылкиНаДаты с колонками Ссылка, ДатаСведений.
	// Результатом является временная таблица СведенияОСсылкахНаДаты.
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДатыСведенийОКонтрагентах.Ссылка КАК Ссылка,
	|	ДатыСведенийОКонтрагентах.ДатаСведений КАК ДатаСведений,
	|	ВЫБОР
	|		КОГДА Контрагенты.ОбособленноеПодразделение
	|				И Контрагенты.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ГоловныеКонтрагенты.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ГоловныеКонтрагенты.Наименование
	|					ИНАЧЕ ГоловныеКонтрагенты.НаименованиеПолное
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(Контрагенты.НаименованиеПолное, 1, 250) = """"
	|					ТОГДА Контрагенты.Наименование
	|				ИНАЧЕ Контрагенты.НаименованиеПолное
	|			КОНЕЦ
	|	КОНЕЦ КАК Наименование,
	|	ВЫБОР
	|		КОГДА Контрагенты.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия) 
	|			ТОГДА Контрагенты.ИНН
	|		КОГДА НЕ Контрагенты.ИНН = """" И НЕ Контрагенты.КПП = """"
	|			ТОГДА Контрагенты.ИНН
	|		ИНАЧЕ """" 
	|	КОНЕЦ КАК ИНН,
	|	ВЫБОР
	|		КОГДА Контрагенты.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия) 
	|			ТОГДА Контрагенты.КПП
	|		КОГДА НЕ Контрагенты.ИНН = """" И НЕ Контрагенты.КПП = """"
	|			ТОГДА Контрагенты.КПП
	|		ИНАЧЕ """" 
	|	КОНЕЦ КАК КПП
	|ПОМЕСТИТЬ СведенияОКонтрагентахНаДаты
	|ИЗ
	|	СсылкиНаДаты КАК ДатыСведенийОКонтрагентах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ДатыСведенийОКонтрагентах.Ссылка = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ГоловныеКонтрагенты
	|		ПО (Контрагенты.ГоловнойКонтрагент = ГоловныеКонтрагенты.Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыСведенийОбОрганизациях.Ссылка КАК Ссылка,
	|	ДатыСведенийОбОрганизациях.ДатаСведений КАК ДатаСведений,
	|	ВЫБОР
	|		КОГДА Организации.ОбособленноеПодразделение
	|			ТОГДА Организации.ГоловнаяОрганизация.НаименованиеПолное
	|		ИНАЧЕ Организации.НаименованиеПолное
	|	КОНЕЦ КАК Наименование,
	|	Организации.ИНН КАК ИНН,
	|	Организации.КПП КАК КПП
	|ПОМЕСТИТЬ СведенияОбОрганизацияхНаДаты
	|ИЗ
	|	СсылкиНаДаты КАК ДатыСведенийОбОрганизациях
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ДатыСведенийОбОрганизациях.Ссылка = Организации.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СсылкиНаДаты.Ссылка КАК Ссылка,
	|	СсылкиНаДаты.ДатаСведений КАК ДатаСведений,
	|	ЕСТЬNULL(СведенияОКонтрагентахНаДаты.Наименование, СведенияОбОрганизацияхНаДаты.Наименование) КАК Наименование,
	|	ЕСТЬNULL(СведенияОКонтрагентахНаДаты.ИНН, СведенияОбОрганизацияхНаДаты.ИНН) КАК ИНН,
	|	ЕСТЬNULL(СведенияОКонтрагентахНаДаты.КПП, СведенияОбОрганизацияхНаДаты.КПП) КАК КПП
	|ПОМЕСТИТЬ СведенияОСсылкахНаДаты
	|ИЗ
	|	СсылкиНаДаты КАК СсылкиНаДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОКонтрагентахНаДаты КАК СведенияОКонтрагентахНаДаты
	|		ПО СсылкиНаДаты.Ссылка = СведенияОКонтрагентахНаДаты.Ссылка
	|			И СсылкиНаДаты.ДатаСведений = СведенияОКонтрагентахНаДаты.ДатаСведений
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОбОрганизацияхНаДаты КАК СведенияОбОрганизацияхНаДаты
	|		ПО СсылкиНаДаты.Ссылка = СведенияОбОрганизацияхНаДаты.Ссылка
	|			И СсылкиНаДаты.ДатаСведений = СведенияОбОрганизацияхНаДаты.ДатаСведений
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ДатаСведений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СведенияОКонтрагентахНаДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СведенияОбОрганизацияхНаДаты";
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти 

#Область Прочее

// Получает пакет электронных представлений документов.
//
// Параметры:
//  ВыгружаемыеДокументы - Массив - перечень документов, для которых
//                 необходимо получить электронные представления в виде двоичных данных.
//  УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор, по которому
//                 осуществляется привязка двоичных данных во временном хранилище.
//
// Возвращаемое значение:
//   Соответствие - соответствие переданных ссылок на документы и массива структур с полями:
//                 ТипФайла - Строка - описание типа файла;
//                 ИмяФайла - Строка - имя файла с расширением;
//                 АдресВременногоХранилища - Строка - адрес временного хранилища, в котором размещены двоичные данные файла.
//
Функция СформироватьЭлектронныеДокументы(ВыгружаемыеДокументы, УникальныйИдентификатор = Неопределено) Экспорт
	
	Если УникальныйИдентификатор = Неопределено Тогда
		УникальныйИдентификатор = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Результат = Новый Соответствие;
	
	Для Каждого ВыгружаемыйДокумент Из ВыгружаемыеДокументы Цикл
		
		ЭтоДокументРегистраУчетаНДС = (ВыгружаемыйДокумент.Метаданные().Имя = "КнигаПокупокДляПередачиВЭлектронномВиде"
		                           ИЛИ ВыгружаемыйДокумент.Метаданные().Имя = "КнигаПродажДляПередачиВЭлектронномВиде"
		                           ИЛИ ВыгружаемыйДокумент.Метаданные().Имя = "ДопЛистКнигиПокупокДляПередачиВЭлектронномВиде"
		                           ИЛИ ВыгружаемыйДокумент.Метаданные().Имя = "ДопЛистКнигиПродажДляПередачиВЭлектронномВиде"
		                           ИЛИ ВыгружаемыйДокумент.Метаданные().Имя = "ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде");
		Если ЭтоДокументРегистраУчетаНДС Тогда
			ОбъектВыгрузки = ВыгружаемыйДокумент.ПолучитьОбъект();
			ФайлыВыгрузки = ОбъектВыгрузки.ВыгрузитьДокумент(УникальныйИдентификатор);
			
			МассивВыгрузки = Новый Массив;
			Для Каждого ФайлВыгрузки Из ФайлыВыгрузки Цикл
				
				ЭлементВыгрузки = Новый Структура;
				ЭлементВыгрузки.Вставить("ТипФайла", "ФайлВыгрузки");
				ЭлементВыгрузки.Вставить("ИмяФайла", ФайлВыгрузки.ИмяФайлаВыгрузки);
				ЭлементВыгрузки.Вставить("АдресВременногоХранилища", ФайлВыгрузки.АдресФайлаВыгрузки);
				
				МассивВыгрузки.Добавить(ЭлементВыгрузки);
			КонецЦикла;
			
			Результат.Вставить(ВыгружаемыйДокумент, МассивВыгрузки);
			
		Иначе
			Результат.Вставить(ВыгружаемыйДокумент, Неопределено);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#КонецОбласти

