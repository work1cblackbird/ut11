
#Область ПрограммныйИнтерфейс

// Выполняет обработку штрихкода и возвращает результат этой обработки.
//
// Параметры:
//  ВходящиеДанные - Структура - Данные штрихкода.
//  ПараметрыСканирования - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования).
//  КэшированныеЗначения - Структура - Содержит поля кэшируемых значений.
//  УникальныйИдентификатор - УникальныйИдентификатор - Идентификатор, по которому будут помещены данные по обработанным
//                                                      штрихкодам в хранилище.
// Возвращаемое значение:
//  Структура - (См. ШтрихкодированиеОбщегоНазначенияИС.ИнициализироватьРезультатОбработкиШтрихкода).
Функция ОбработатьШтрихкод(ВходящиеДанные, ПараметрыСканирования, КэшированныеЗначения, УникальныйИдентификатор) Экспорт
	
	ДанныеШтрихкода = ОбщегоНазначения.СкопироватьРекурсивно(ВходящиеДанные);
	ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ДекодироватьШтрихкодДанныхBase64(ДанныеШтрихкода, Истина);
	
	СписокДанныхШтрихкодов = Новый Массив;
	СписокДанныхШтрихкодов.Добавить(ДанныеШтрихкода);
	
	РезультатОбработкиШтрихкодов = ШтрихкодированиеОбщегоНазначенияИС.ОбработатьШтрихкоды(
		СписокДанныхШтрихкодов, ПараметрыСканирования, КэшированныеЗначения, УникальныйИдентификатор);
	
	// Если нашли в данных исходный штрихкод - возвращаем его.
	ДанныеШтрихкода = РезультатОбработкиШтрихкодов.РезультатыОбработки[СокрЛП(ДанныеШтрихкода.Штрихкод)];
	Если ДанныеШтрихкода <> Неопределено Тогда
		Возврат ДанныеШтрихкода;
	КонецЕсли;
	
	// Иначе - первый по списку.
	Для Каждого КлючЗНачение Из РезультатОбработкиШтрихкодов.РезультатыОбработки Цикл
		ДанныеШтрихкода = КлючЗНачение.Значение;
		Прервать;
	КонецЦикла;
	
	//@skip-check constructor-function-return-section
	Возврат ДанныеШтрихкода;
	
КонецФункции

Функция ЭтоНастроенноеВыбытие(Номенклатура, Характеристика, НоменклатураВыбытия, ХарактеристикаВыбытия) Экспорт
	
	Если ОбщегоНазначенияИС.ЭтоРасширеннаяВерсияГосИС("ИСМП") Тогда
		
		МенеджерРегистраСведений = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("РегистрСведений.НастройкиЧастичногоВыбытияПродукцииИС");
		//@skip-check unknown-method-property
		Возврат МенеджерРегистраСведений.ЭтоНастроенноеВыбытие(
			Номенклатура, Характеристика, НоменклатураВыбытия, ХарактеристикаВыбытия);
	Иначе
		
		ТаблицаНоменклатуры = Новый ТаблицаЗначений();
		ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура",                    Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
		ТаблицаНоменклатуры.Колонки.Добавить("Характеристика",                  Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип);
		ТаблицаНоменклатуры.Колонки.Добавить("НоменклатураЧастичногоВыбытия",   Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
		ТаблицаНоменклатуры.Колонки.Добавить("ХарактеристикаЧастичногоВыбытия", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип);
		ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура, Характеристика");
		
		НоваяСтрока = ТаблицаНоменклатуры.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.Характеристика = Характеристика;
		
		ШтрихкодированиеИСПереопределяемый.ПриЗаполненииНастроеннойНоменклатурыЧастичногоВыбытия(ТаблицаНоменклатуры);
		
		Возврат (ЗначениеЗаполнено(ТаблицаНоменклатуры[0].НоменклатураЧастичногоВыбытия)
				 И ТаблицаНоменклатуры[0].НоменклатураЧастичногоВыбытия = НоменклатураВыбытия
				 И ТаблицаНоменклатуры[0].ХарактеристикаЧастичногоВыбытия = ХарактеристикаВыбытия);
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
