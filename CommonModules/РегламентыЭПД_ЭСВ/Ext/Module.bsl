//@strict-types

#Область СлужебныеПроцедурыИФункции

#Область ДляВызоваИзМодуляРегламентыЭДО

// Возвращает состояние входящего электронного документа.
// 
// Параметры:
//  ПараметрыДокумента - См. РегламентыЭДО.НовыеПараметрыДокументаДляОпределенияСостояния
//  СостоянияЭлементовРегламента - См. РегламентыЭДО.НовыеСостоянияЭлементовРегламента
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.СостоянияДокументовЭДО
//
Функция СостояниеВходящегоДокумента(ПараметрыДокумента, СостоянияЭлементовРегламента) Экспорт
	
	Состояние = Перечисления.СостоянияДокументовЭДО.ПустаяСсылка();
	
	Если ЗаполнитьСостояниеПоВходящейИнформацииОтправителя(ПараметрыДокумента, СостоянияЭлементовРегламента, Состояние)
		ИЛИ ЗначениеЗаполнено(Состояние) Тогда
		
		Возврат Состояние;
		
	ИначеЕсли ПараметрыДокумента.Исправлен Тогда
		
		Возврат Перечисления.СостоянияДокументовЭДО.ОбменЗавершенСИсправлением;
		
	КонецЕсли;
	
	Возврат Перечисления.СостоянияДокументовЭДО.ОбменЗавершен;
	
КонецФункции

// Возвращает состояние исходящего электронного документа.
// 
// Параметры:
//  ПараметрыДокумента - См. РегламентыЭДО.НовыеПараметрыДокументаДляОпределенияСостояния
//  СостоянияЭлементовРегламента - См. РегламентыЭДО.НовыеСостоянияЭлементовРегламента
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.СостоянияДокументовЭДО
//
Функция СостояниеИсходящегоДокумента(ПараметрыДокумента, СостоянияЭлементовРегламента) Экспорт
	
	Состояние = Перечисления.СостоянияДокументовЭДО.ПустаяСсылка();
	
	Если ЗаполнитьСостояниеПоИсходящейИнформацииОтправителя(ПараметрыДокумента, СостоянияЭлементовРегламента, Состояние)
		Тогда
		
		Возврат Состояние;
		
	ИначеЕсли ПараметрыДокумента.Исправлен Тогда
		
		Возврат Перечисления.СостоянияДокументовЭДО.ОбменЗавершенСИсправлением;
		
	КонецЕсли;
	
	Возврат Перечисления.СостоянияДокументовЭДО.ОбменЗавершен;
	
КонецФункции

// Возвращает состояние сообщения.
//
// Параметры:
//  ПараметрыСообщения - См. РегламентыЭДО.НовыеПараметрыСообщенияДляОпределенияСостояния
//  ПараметрыДокумента - См. РегламентыЭДО.НовыеПараметрыДокументаДляОпределенияСостоянияСообщения
//  ИспользоватьУтверждение  - Булево
//
// Возвращаемое значение:
//  ПеречислениеСсылка.СостоянияСообщенийЭДО
//
Функция СостояниеСообщения(ПараметрыСообщения, ПараметрыДокумента, ИспользоватьУтверждение) Экспорт
	
	Состояние = Перечисления.СостоянияСообщенийЭДО.ПустаяСсылка();
	
	Статус = ПараметрыСообщения.Статус;
	
	Если Статус = Перечисления.СтатусыСообщенийЭДО.Получен Тогда
		
		Состояние = Перечисления.СостоянияСообщенийЭДО.Хранение;
		
	ИначеЕсли Статус = Перечисления.СтатусыСообщенийЭДО.Утвержден Тогда
		
		Состояние = Перечисления.СостоянияСообщенийЭДО.Хранение;
		
	ИначеЕсли Статус = Перечисления.СтатусыСообщенийЭДО.Сформирован Тогда
		
		Если ПараметрыДокумента.ОбменБезПодписи Тогда
			Состояние = Перечисления.СостоянияСообщенийЭДО.ПодготовкаКОтправке;
		Иначе
			Состояние = Перечисления.СостоянияСообщенийЭДО.Подписание;
		КонецЕсли;
		
	ИначеЕсли Статус = Перечисления.СтатусыСообщенийЭДО.ЧастичноПодписан Тогда
		
		Состояние = Перечисления.СостоянияСообщенийЭДО.Подписание;
		
	ИначеЕсли Статус = Перечисления.СтатусыСообщенийЭДО.Подписан Тогда
		
		Состояние = Перечисления.СостоянияСообщенийЭДО.ПодготовкаКОтправке;
				
	ИначеЕсли Статус = Перечисления.СтатусыСообщенийЭДО.ПодготовленКОтправке Тогда
		
		Состояние = Перечисления.СостоянияСообщенийЭДО.Отправка;
		
	ИначеЕсли Статус = Перечисления.СтатусыСообщенийЭДО.Отправлен Тогда
		
		Состояние = Перечисления.СостоянияСообщенийЭДО.Хранение; 

	КонецЕсли;
	
	Возврат Состояние;
	
КонецФункции

// Возвращает коллекцию добавленных элементов схемы регламента.
// 
// Параметры:
//  СхемаРегламента - См. РегламентыЭДО.НоваяСхемаРегламента
//  НастройкиСхемыРегламента - См. РегламентыЭДО.НовыеНастройкиСхемыРегламента
//
// Возвращаемое значение:
//  См. РегламентыЭДО.НоваяКоллекцияЭлементовСхемыРегламента
//
Функция ДобавитьЭлементыСхемыРегламента(СхемаРегламента, НастройкиСхемыРегламента) Экспорт
	
	ЭлементыСхемы = РегламентыЭДО.НоваяКоллекцияЭлементовСхемыРегламента();
	
	ДобавитьЭлементыРегламентаОтправителя(СхемаРегламента, НастройкиСхемыРегламента, ЭлементыСхемы);
	
	Возврат ЭлементыСхемы;
	
КонецФункции

// Параметры:
//  СхемаРегламента - см. РегламентыЭДО.НоваяСхемаРегламента
//  НастройкиСхемыРегламента - см. РегламентыЭДО.НовыеНастройкиСхемыРегламента
//  ТипЭлементаРегламента - ПеречислениеСсылка.ТипыЭлементовРегламентаЭДО
// 
// Возвращаемое значение:
//  См. РегламентыЭДО.НоваяКоллекцияЭлементовСхемыРегламента
Функция ДобавитьЭлементыСхемыВложенногоРегламента(СхемаРегламента, НастройкиСхемыРегламента, ТипЭлементаРегламента) Экспорт
	
	Возврат РегламентыЭДО.НоваяКоллекцияЭлементовСхемыРегламента();
	
КонецФункции

// Возвращает тип извещения для элемента входящего документа.
// 
// Параметры:
//  ТипЭлементаРегламента - ПеречислениеСсылка.ТипыЭлементовРегламентаЭДО
//
// Возвращаемое значение:
//  ПеречислениеСсылка.ТипыЭлементовРегламентаЭДО
//
Функция ТипИзвещенияДляЭлементаВходящегоДокумента(ТипЭлементаРегламента) Экспорт
	
	Результат = Перечисления.ТипыЭлементовРегламентаЭДО.ПустаяСсылка();
	
	Возврат Результат;
	
КонецФункции

// Возвращает тип извещения для элемента исходящего документа.
// 
// Параметры:
//  ТипЭлементаРегламента - ПеречислениеСсылка.ТипыЭлементовРегламентаЭДО
//
// Возвращаемое значение:
//  ПеречислениеСсылка.ТипыЭлементовРегламентаЭДО
//
Функция ТипИзвещенияДляЭлементаИсходящегоДокумента(ТипЭлементаРегламента) Экспорт
	
	Результат = Перечисления.ТипыЭлементовРегламентаЭДО.ПустаяСсылка();
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак наличия информации получателя в регламенте.
// 
// Возвращаемое значение:
//  Булево
//
Функция ЕстьИнформацияПолучателя() Экспорт
	Возврат Истина;
КонецФункции

#КонецОбласти

#Область ДобавитьЭлементыСхемыРегламента

// Добавляет элементы по регламенту отправителя.
// 
// Параметры:
//  СхемаРегламента - См. РегламентыЭДО.НоваяСхемаРегламента
//  НастройкиСхемыРегламента - См. РегламентыЭДО.НовыеНастройкиСхемыРегламента
//  ЭлементыСхемы - См. РегламентыЭДО.НоваяКоллекцияЭлементовСхемыРегламента
//
Процедура ДобавитьЭлементыРегламентаОтправителя(СхемаРегламента, НастройкиСхемыРегламента, ЭлементыСхемы)
	
	ЭСВ_Титул1_1 = РегламентыЭДО.ВставитьЭлементСхемыРегламента(ЭлементыСхемы, СхемаРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1);
		
		РегламентыЭДО.ВставитьЭлементСхемыРегламента(ЭлементыСхемы, ЭСВ_Титул1_1,
			Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1);
			
	ЭСВ_Титул1_2 = РегламентыЭДО.ВставитьЭлементСхемыРегламента(ЭлементыСхемы, ЭСВ_Титул1_1,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2);
			
		РегламентыЭДО.ВставитьЭлементСхемыРегламента(ЭлементыСхемы, ЭСВ_Титул1_2,
			Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2);
			
		РегламентыЭДО.ВставитьЭлементСхемыРегламента(ЭлементыСхемы, ЭСВ_Титул1_2,
			Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3);
		
		РегламентыЭДО.ВставитьЭлементСхемыРегламента(ЭлементыСхемы, ЭСВ_Титул1_2,
			Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1);		
			
	ЭСВ_Титул1_5 = РегламентыЭДО.ВставитьЭлементСхемыРегламента(ЭлементыСхемы, ЭСВ_Титул1_1,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5);
			
		РегламентыЭДО.ВставитьЭлементСхемыРегламента(ЭлементыСхемы, ЭСВ_Титул1_5,
			Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2);
			
		РегламентыЭДО.ВставитьЭлементСхемыРегламента(ЭлементыСхемы, ЭСВ_Титул1_5,
			Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4);	
	
КонецПроцедуры

#КонецОбласти

#Область СостояниеДокумента

// Возвращает признак успешности заполнения состояния по входящей информации отправителя.
// 
// Параметры:
// 	ПараметрыДокумента - См. РегламентыЭДО.НовыеПараметрыДокументаДляОпределенияСостояния
//  СостоянияЭлементовРегламента - См. РегламентыЭДО.НовыеСостоянияЭлементовРегламента
//  Состояние - ПеречислениеСсылка.СостоянияДокументовЭДО
//
// Возвращаемое значение:
//  Булево
//
Функция ЗаполнитьСостояниеПоВходящейИнформацииОтправителя(ПараметрыДокумента, СостоянияЭлементовРегламента, Состояние)
	
	Результат = Истина;

	Результат = Истина;
	ЭлементРегламента = Неопределено; // Неопределено,СтрокаТаблицыЗначений: См. РегламентыЭДО.НовыеСостоянияЭлементовРегламента
	
	ОбменЗавершен = Ложь;
	
	// Передача порожнего грузоотправителю
	Если РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1, ЭлементРегламента) Тогда
			
			ОбменЗавершен = Истина;						
		
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1, ЭлементРегламента) Тогда
			
	// Перевозка груженого
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1, ЭлементРегламента) Тогда
			
			ОбменЗавершен = Истина;	
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3, ЭлементРегламента) Тогда	
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2, ЭлементРегламента) Тогда
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2, ЭлементРегламента) Тогда
			
	// Возврат порожнего
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4, ЭлементРегламента) Тогда
			
			ОбменЗавершен = Истина;
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2, ЭлементРегламента) Тогда
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5, ЭлементРегламента) Тогда
		
	Иначе
		
		Состояние = РегламентыЭДО.НачальноеСостояниеДокумента();
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ОбменЗавершен = Истина 
		И (ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Хранение
			Или ЭтоВходящийЭлементРегламента(ЭлементРегламента)) Тогда
		Состояние = Перечисления.СостоянияДокументовЭДО.ОбменЗавершен;
	ИначеЕсли ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Отправка Тогда
		Состояние = Перечисления.СостоянияДокументовЭДО.ТребуетсяОтправка;
	ИначеЕсли ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.ПодготовкаКОтправке Тогда
		Состояние = Перечисления.СостоянияДокументовЭДО.ТребуетсяПодготовкаКОтправке;
	Иначе
		Если СостоянияЭлементовРегламента.Колонки.Найти("Ссылка") = Неопределено Тогда
			// Новый документ
			ТекущийДоступныйТитул = Неопределено;
		Иначе	
			ТекущийДоступныйТитул = ТекущийДоступныйТитул(ПараметрыДокумента, ЭлементРегламента);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущийДоступныйТитул) Тогда
			Состояние = Перечисления.СостоянияДокументовЭДО.ТребуетсяПодписание;
		Иначе	
			Состояние = Перечисления.СостоянияДокументовЭДО.ОжидаетсяПодтверждение;	
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


Функция РольУчастникаЭлементаРегламента(ПараметрыДокумента, ЭлементРегламента)
	
	Если ТипЗнч(ЭлементРегламента) = Тип("СтрокаТаблицыЗначений") Тогда
		//@skip-check property-return-type
		Если ЭлементРегламента.Владелец().Колонки.Найти("Ссылка") <> Неопределено
			И ТипЗнч(ЭлементРегламента.Ссылка) = Тип("ДокументСсылка.СообщениеЭДО") Тогда
				//@skip-check invocation-parameter-type-intersect
				//@skip-check property-return-type
				//@skip-check wrong-string-literal-content
				ИдФайл = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементРегламента.Ссылка, "ОсновнойФайл.ПолноеИмяФайла");
				Если ТипЗнч(ИдФайл) = Тип("Строка") Тогда
					Адресаты = ОбменСГИСЭПДКлиентСервер.АдресатыПоИдФайл(ИдФайл);
					ИдентификаторОрганизации = Неопределено;
					Если ТипЗнч(ПараметрыДокумента) = Тип("Структура") Тогда
						ПараметрыДокумента.Свойство("ИдентификаторОрганизации", ИдентификаторОрганизации);
					ИначеЕсли ТипЗнч(ПараметрыДокумента) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
						Если ПараметрыДокумента.Владелец().Колонки.Найти("ИдентификаторОрганизации") <> Неопределено Тогда
							//@skip-check property-return-type
							//@skip-check statement-type-change
							ИдентификаторОрганизации = ПараметрыДокумента.ИдентификаторОрганизации;
						КонецЕсли;
					КонецЕсли;
					Если ИдентификаторОрганизации = Адресаты.Грузоотправитель Тогда
						РольУчастника = 3;
					ИначеЕсли ИдентификаторОрганизации = Адресаты.Грузоперевозчик Тогда 
						РольУчастника = 1;
					ИначеЕсли ИдентификаторОрганизации = Адресаты.Грузополучатель Тогда
						РольУчастника = 2;
					КонецЕсли;
				КонецЕсли;
		КонецЕсли;
	КонецЕсли;
			
	Возврат РольУчастника;
	
КонецФункции


Функция ТекущийДоступныйТитул(ПараметрыДокумента, ЭлементРегламента)
	
	РольУчастника = РольУчастникаЭлементаРегламента(ПараметрыДокумента, ЭлементРегламента);
	
	ТекущийДоступныйТитул = Неопределено;
	// Перевозчик
	Если РольУчастника = 1 Тогда
		Если ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2") Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3");
		ИначеЕсли ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2") Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5");
		ИначеЕсли (ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1")
				Или ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2")
				Или ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3")
				Или ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4")
				Или ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5"))
			И (ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Формирование
				Или ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.ПодготовкаКОтправке
				Или ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Подписание) Тогда
				ТекущийДоступныйТитул = ЭлементРегламента.ТипЭлементаРегламента;
		КонецЕсли;
	// Грузополучатель
	ИначеЕсли РольУчастника = 2 Тогда
		Если ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3") Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1");
		ИначеЕсли ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2") Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2");
		ИначеЕсли (ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1")
				Или ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2"))
			И (ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Формирование
				Или ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.ПодготовкаКОтправке
				Или ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Подписание) Тогда	
			ТекущийДоступныйТитул = ЭлементРегламента.ТипЭлементаРегламента;	
		КонецЕсли;
	// Грузоотправитель
	ИначеЕсли РольУчастника = 3 Тогда
		Если ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1") Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1");
		ИначеЕсли ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2") Тогда
				ТекущийДоступныйТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2");
		ИначеЕсли (ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1")
				Или ЭлементРегламента.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2"))
			И (ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Формирование
				Или ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.ПодготовкаКОтправке
				Или ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Подписание) Тогда
			ТекущийДоступныйТитул = ЭлементРегламента.ТипЭлементаРегламента;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТекущийДоступныйТитул;
	
КонецФункции


// Возвращает признак успешности заполнения состояния по исходящей информации отправителя.
// 
// Параметры:
//  ПараметрыДокумента - См. РегламентыЭДО.НовыеПараметрыДокументаДляОпределенияСостояния
//  СостоянияЭлементовРегламента - См. РегламентыЭДО.НовыеСостоянияЭлементовРегламента
//  Состояние - ПеречислениеСсылка.СостоянияДокументовЭДО
//
// Возвращаемое значение:
//  Булево
//
Функция ЗаполнитьСостояниеПоИсходящейИнформацииОтправителя(ПараметрыДокумента, СостоянияЭлементовРегламента, Состояние)
	
	Результат = Истина;
	ЭлементРегламента = Неопределено; // Неопределено,СтрокаТаблицыЗначений: См. РегламентыЭДО.НовыеСостоянияЭлементовРегламента
	
	ОбменЗавершен = Ложь;
	
	// Передача порожнего грузоотправителю
	Если РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_1, ЭлементРегламента) Тогда
			
			ОбменЗавершен = Истина;						
		
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_1, ЭлементРегламента) Тогда
			
	// Перевозка груженого
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_1, ЭлементРегламента) Тогда
			
			ОбменЗавершен = Истина;	
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_3, ЭлементРегламента) Тогда	
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул2_2, ЭлементРегламента) Тогда
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_2, ЭлементРегламента) Тогда
			
	// Возврат порожнего
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_4, ЭлементРегламента) Тогда
			
			ОбменЗавершен = Истина;
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул3_2, ЭлементРегламента) Тогда
			
	ИначеЕсли РегламентыЭДО.ЕстьЭлементРегламента(СостоянияЭлементовРегламента,
		Перечисления.ТипыЭлементовРегламентаЭДО.ЭСВ_Титул1_5, ЭлементРегламента) Тогда
		
	Иначе
		
		Состояние = РегламентыЭДО.НачальноеСостояниеДокумента();
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ОбменЗавершен = Истина 
		И (ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Хранение
			Или ЭтоВходящийЭлементРегламента(ЭлементРегламента)) Тогда
		Состояние = Перечисления.СостоянияДокументовЭДО.ОбменЗавершен;
	ИначеЕсли ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.Отправка Тогда
		Состояние = Перечисления.СостоянияДокументовЭДО.ТребуетсяОтправка;
	ИначеЕсли ЭлементРегламента.Состояние = Перечисления.СостоянияСообщенийЭДО.ПодготовкаКОтправке Тогда
		Состояние = Перечисления.СостоянияДокументовЭДО.ТребуетсяПодготовкаКОтправке;
	Иначе
		Если СостоянияЭлементовРегламента.Колонки.Найти("Ссылка") = Неопределено Тогда
			// Новый документ
			ТекущийДоступныйТитул = ЭлементРегламента.ТипЭлементаРегламента;
		Иначе	
			ТекущийДоступныйТитул = ТекущийДоступныйТитул(ПараметрыДокумента, ЭлементРегламента);	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущийДоступныйТитул) Тогда
			Состояние = Перечисления.СостоянияДокументовЭДО.ТребуетсяПодписание;
		Иначе
			Состояние = Перечисления.СостоянияДокументовЭДО.ОжидаетсяПодтверждение;	
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ЭтоВходящийЭлементРегламента(ЭлементРегламента)
	
	Если ЭлементРегламента.Владелец().Колонки.Найти("Ссылка") = Неопределено Тогда
		Результат = Ложь;
	Иначе
		//@skip-check property-return-type
		//@skip-check variable-value-type
		СообщениеСсылка = ЭлементРегламента.Ссылка; 
		Если ТипЗнч(СообщениеСсылка) = Тип("ДокументСсылка.СообщениеЭДО") Тогда
			Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СообщениеСсылка, "Направление") = Перечисления.НаправленияЭДО.Входящий;	
		Иначе
			Результат = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


#КонецОбласти

#КонецОбласти